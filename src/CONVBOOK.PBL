.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVBOOK                                                    *
.* Desc      :   Data Migration Program to upload future O/P bookings data   *
.*               from a third party legacy system into the O/P webPAS        *
.*               module.                                                     *
.*****************************************************************************
.* Date      :   11/04/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convbook.txt file and    *
.*               for each valid record found, it will write a new outbb1af   *
.*               record for the patient as well as updating an O/P booking   *
.*               slot record on outbokaf.                                    *
.*               Note: It assumes that the clinics/sessions already exist.   *
.* Mods      :                                                               *
.*****************************************************************************
.* V12.00.01  13/05/2025  Ebon Clements TSK 0955096                          *
.*            Added alpanumeric visit number generation - GNUM0000 - GENANVIS*
.* V11.02.01  09/02/2022  Thanh T       TSK 0905641                          *
.*            Recompiled as OUTHEDFD changes                                 *
.*****************************************************************************
.*        V11.00.02 22/04/2020  Ebon Clements    TSK 0850105                 *
.*                  Clear PMCUTSTA and PMCUTLOC before write to pmscuraf     *
.*        V11.00.01 09/04/2020  J.Tan             TSK 0868813                *
.*                  Mod to set PACFRMT to 3 for PKNAME                       *
.*        V10.13.02 02/08/2018  Jill Parkinson   TSK 0861265                 *
.*                  Stopped appointment comments from incrementing the       *
.*                  'number of records added' count                          *
.*        V10.13.01 27/07/2018  Jill Parkinson   TSK 0860721                 *
.*                  Removed V10.11.02 changes for comments.  Copied CONVREFL *
.*                  routine for writing comments to vismdtaf/vismtxaf instead*
.*****************************************************************************
.*        V10.12.01 12/07/2018  Steve Armstrong    TSK 0860168               *
.*                  Removed CDAT0000 routine (insert date for comments).     *
.*****************************************************************************
.*        V10.11.02 26/09/2017  Thanh T.           TSK 0821710               *
.*                  Audit Amission/outpatient visit comments                 *
.*        V10.11.01  21/07/2017  Ebon Clements     TSK 0268970               *
.*                   Change to use OUTCLIFD index 1 instead of index 2       *
.*****************************************************************************
.*        V10.10.01  11/04/2017  Ebon Clements     TSK 0834993               *
.*                   Don't validate extended slot for ACC records - CEXT0000 *
.*        V10.09.01  25/01/2017  Steve Armstrong   TSK 0830055               *
.*                   Mods to CVIS0000 & CHKR0000 to ignore eReferral type    *
.*                   ibavaraf records.                                       *
.*                   Mods to AVIS0000 to set IBAVTYPE to " 0" (Legacy).      *
.*****************************************************************************
.*        V10.08.04  21/10/2016  Steve Armstrong   TSK 0819758               *
.*                   Added new fields ACCDTYP1, ACCDDAT1, ACCDTYP2, ACCDDAT2,*
.*                   ACCDTYP3 & ACCDDAT3.                                    *
.*                   Fixed checking of BOOKCNDT time component to not add    *
.*                   ":00" where there is no time.                           *
.*                   Added BRANCH for ACC records at the start of CVIS0000.  *
.*        V10.08.03  05/102/016  Steve Armstrong   TSK 0819982               *
.*                   Added new fields BOOKCONF, BOOKCNID & BOOKCNDT.         *
.*        V10.08.02  15/09/2016  Steve Armstrong   TSK 0824506               *
.*                   Mods to proceed with an overbooking where the booking   *
.*                   time is prior to the session start time (CBOK0000).     *
.*        V10.08.01  06/09/2016  Steve Armstrong   CAR 0825609               *
.*                   Recompiled for changes to UPACCDAT.                     *
.*****************************************************************************
.*        V10.07.01  22/12/2015  Steve Armstrong   CAR 323623                *
.*                   Mods to ask whether to insert a date with the comments  *
.*****************************************************************************
.*        V10.06.03  21/09/2015  Steve Armstrong   CAR 321904                *
.*                   Mods to select if Source of Referral is mandatory at    *
.*                   run-time.                                               *
.*        V10.06.02  22/07/2015  Steve Armstrong   CAR 318590                *
.*                   Recompiled for changes to UPACCDAT                      *
.*                   Added NERR0000 routine and CALL to VNUM0000 to validate *
.*                   numeric values for ACC.                                 *
.*        V10.06.01  01/05/2015  Steve Armstrong  CAR 313857                 *
.*                   Added functionality to handle ACC record types (CRISP). *
.*                   Also added BOOKPURC, BOOKOUTC and BOOKCONT fields to    *
.*                   booking record (CRISP).                                 *
.*****************************************************************************
.*        V10.05.04  18/03/2014  Steve Armstrong   CAR 313857                *
.*                   Added mapping file functionality.                       *
.*        V10.05.03  21/11/2014  Steve Armstrong   CAR 308893                *
.*                   Mods to make BOOKRVIS a mandatory field where OTHEMREF  *
.*                   is set to "1" (Referral mandatory for O/P clinic        *
.*                   booking).                                               *
.*                   Also fixed CVAL0000 routine to use FORM8 instead of     *
.*                   OBAOUTNO (which hasn't been set at that point).         *
.*        V10.05.02  14/11/2014 Ebon Clements      CAR 292656                *
.*                   Added link cancelled OP visit to a ref functionality    *
.*        V10.05.01  17/07/2014 Ebon Clements      CAR 251384                *
.*                   Added tier 2 code functionality - SETV0000              *
.*        V10.04.02  24/04/2014  Steve Armstrong   CAR 261630                *
.*                   Mods for non-port based tempfile use.                   *
.*        V10.04.01  17/03/2014  Steve Armstrong   CAR 296128                *
.*                   Added display of warning message if error records found.*
.*****************************************************************************
.*        V10.03.13 11/12/2013  Ebon Clements     CAR 293092                 *
.*                  Added notified and confirmed to interpreter audit        *
.*        V10.03.12 14/10/2013  Ania P            CAR278232                  *
.*                  Refactored code - now using COUNTSLT for session         *
.*                  recalculation                                            *
.*        V10.03.11 11/04/2013  Steve Armstrong   CAR 283357                 *
.*                  Reduced BOOKCOMM from 3838 bytes to 3640 bytes           *
.*                  (52 lines).                                              *
.*                  Added BOOKINST data field.                               *
.*                  Fixed check on existing comment record to use RDACMNT1   *
.*                  instead of RDCMTN1.                                      *
.*        V10.03.10 29/01/2013  Ebon Clements     CAR 262292                 *
.*                  Added interpreter required to upload file                *
.*        V10.03.09 23/05/2012  Steve Armstrong   CAR 265781                 *
.*                  Mods to allow the booking date/time to be the current    *
.*                  date/time as well as future date/times.                  *
.*        V10.03.08 23/05/2012  Steve Armstrong   CAR 265781                 *
.*                  Mods to allow any date/time for booking date/time        *
.*                  instead of just future date/times.                       *
.*        V10.03.07 15/05/2012  Steve Armstrong   CAR 265281                 *
.*                  Moved CALL to CVIS0000 to be before CVAL0000 routine.    *
.*        V10.03.06 20/04/2012  Steve Armstrong   CAR 263853                 *
.*                  Mods to add new upload field for Send Generate Letter.   *
.*                  Mods to set OTBBSNDL to 0 or 1 instead of N or Y.        *
.*        V10.03.05 05/04/2012  Steve Armstrong   CAR 262899                 *
.*                  Mods to loop back to read the next temp file record      *
.*                  after updating each session on the temp file (RCAL0000). *
.*        V10.03.04 02/04/2012  Steve Armstrong   CAR 262899                 *
.*                  Mods to set the interpreter flag as per the front-end    *
.*                  functionality.                                           *
.*                  Also changed overbooking routine (OBOK0000) to check if  *
.*                  the session is suspended.                                *
.*        V10.03.03 17/03/2012  Steve Armstrong   CAR 261131                 *
.*                  Added functionality to allow overbookings                *
.*                  01/03/2012  Steve Armstrong   CAR 261107                 *
.*                  Mods to fix PACKing of KEY25 when writing the session    *
.*                  key to the temp file.                                    *
.*        V10.03.02 17/11/2011  Mike Laming     CAR 240184                   *
.*                  Changes to IBAPOSTF Post Code table - added State to Keys*
.*        V10.03.01 10/11/2011  Ebon Clements      CAR 248529                *
.*                  Added multiple contacts of the same type functionality   *
.*        V10.02.04 20/10/2011  Steve Armstrong   CAR 253485                 *
.*                  Moved CALL to CLPMSVX1 to prior to any validation so     *
.*                  that PMVXMHOS doesn't get cleared before writing a       *
.*                  pmsvx1af record.                                         *
.*        V10.02.03 29/08/2011  Steve Armstrong   CAR 249862                 *
.*                  Mods to use OSTCATG to determine source of referral      *
.*                  category.                                                *
.*                  Mods to allow BOOKCDAT to have a date in the past as     *
.*                  well as in the future.                                   *
.*                  Also made changes when validating clinic id to do so     *
.*                  disregarding date.                                       *
.*        V10.02.02 10/08/2011  Steve Armstrong   CAR 248242                 *
.*                  Mods to determine clinic start time using the booking    *
.*                  time instead of this coming from an upload field.        *
.*        V10.02.01 04/07/2011  Steve Armstrong   CAR 240722                 *
.*                  Mods to cater for changes to PMSCURFD:                   *
.*                      - PMCUSURN & PMCUGNAM extended to 40 chars.          *
.*                      - PMCUGNM2 added.                                    *
.*        V10.02.00  25/02/2011  Steve Armstrong   CAR 240685                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ACCCMTFD/INC
          INC       ACCMAPFL/INC
          INC       ALLCONFD/INC
          INC       ALLLNKFD/INC
          INC       IBAALVFD/INC
          INC       IBAPOSFD/INC
          INC       IBASEQFD/INC
          INC       OUTBB1FD/INC
          INC       OUTBOAFD/INC
          INC       OUTCLIFD/INC
          INC       OUTDIAFD/INC
          INC       OUTHEDFD/INC
          INC       OUTPREFD/INC
          INC       OUTSESFD/INC
          INC       OUTSITFD/INC
          INC       VISMDTFD/INC
          INC       VISMTXFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATMA1FD/INC
          INC       PATRE1FD/INC
          INC       PATVISFD/INC
          INC       PATWC1FD/INC
          INC       PMSCEXFD/INC
          INC       PMSCURFD/INC
          INC       PMSHCPFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PMSWX1FD/INC
          INC       VISCMTFD/INC
          INC       VISIAUFD/INC
          INC       VISINTFD/INC
          INC       TFILEVAR/INC
          INC       WEBCONFD/INC
          INC       WEBERRFD/INC
          INC       WEBSECFD/INC
.
.
.         Temporary Mapping Files
.
.TEMP1  Category-Codes (patcodes)  --
.TEMP2  Insurer (patin1af)          |  These definitions are in ACCMAPFL.INC
.TEMP3  Employer (pateoraf)         |
.TEMP4  HCP (pmshcpaf)              |
.TEMP5  Title (pmstleaf)            |
.TEMP6  Relation (pmsrelaf)        __
.
.
.         Clinic Id File - clinicid.dat (outsitaf/outcliaf)
.
CLIIDFLG  FORM      1                            * Site/Clinic Id mapping flag
TEMP7     IFILE     SQL, FIXED=25, KEY="U1-6,7-12"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDSITCD  DIM       6        6          1       Old site code
OLDCLIID  DIM       6        6          7       Old clinic id code
NEWSITCD  DIM       6        6         13       New site code
NEWCLIID  DIM       6        6         19       New clinic id code
.End of Record                         25
.
.
.         Temporary File Definition
.         -------------------------
.
BOKTEMP6  IFILE SQL, FIXED=26, KEY="U1-25"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
SESSNKEY  DIM     25            25         1        Session Key
.
.End of Record                             26
.
.
.         Future O/P Booking upload file layout - convbook.txt
.
OPBOKUPL  FILE      HL7, FIXED=4096         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
BOOKTYPE  DIM       1     1       * O/P record type
.                                     0 = Booking
.PIPE     DIM       1     2       * Pipe Delimiter
BOOKURNO  DIM       8     3       * U/R Number                         (obaurno)
.PIPE     DIM       1     11      * Pipe Delimiter
BOOKSITE  DIM       6     12      * Site ID (outsitaf)                 (obasite)
.PIPE     DIM       1     18      * Pipe Delimiter
BOOKCLIN  DIM       6     19      * Clinic ID (outcliaf)               (obaclin)
.PIPE     DIM       1     25      * Pipe Delimiter
BOOKDATE  DIM       8     26      * Date (ccyymmdd)                    (obadate)
.PIPE     DIM       1     34      * Pipe Delimiter
BOOKTIME  DIM       5     35      * Slot Time (hh:mm)                  (obatime)
.PIPE     DIM       1     40      * Pipe Delimiter
BOOKVIST  DIM       3     41      * Visit Type (Cat CV)               (obavisit)
.PIPE     DIM       1     44      * Pipe Delimiter
BOOKCDAT  DIM       8     45      * Booking Created Date (ccyymmdd)   (obabkdte)
.PIPE     DIM       1     53      * Pipe Delimiter
BOOKCTIM  DIM       8     54      * Booking Created Time (hh:mm:ss)   (obabkdte)
.PIPE     DIM       1     62      * Pipe Delimiter
BOOKSRCR  DIM       3     63      * Source of Referral (Cat S)         (obasrcr)
.PIPE     DIM       1     66      * Pipe Delimiter
BOOKCOMP  DIM       3     67      * Compensation Eligibility (Cat CL)  (obacomp)
.PIPE     DIM       1     70      * Pipe Delimiter
BOOKPRTY  DIM       3     71      * Priority Code (Cat PR)             (obaprty)
.PIPE     DIM       1     74      * Pipe Delimiter
BOOKUSR1  DIM       3     75      * User Defined Field 1 (Cat O1)      (obousr1)
.PIPE     DIM       1     78      * Pipe Delimiter
BOOKDEPT  DIM       3     79      * Department Code (Cat AC)          (otbbdept)
.PIPE     DIM       1     82      * Pipe Delimiter
BOOKTRAN  DIM       3     83      * Transport Allocation (Cat OB)     (otbbtran)
.PIPE     DIM       1     86      * Pipe Delimiter
BOOKRFGP  DIM       10    87      * Referring GP (pmshcpaf)           (otbbrfgp)
.PIPE     DIM       1     97      * Pipe Delimiter
BOOKSNDL  DIM       1     98      * Send Letter (Y/N)                 (otbbsndl)
.PIPE     DIM       1     99      * Pipe Delimiter
BOOKSPCA  DIM       3     100     * Special Arrangements (Cat SA)     (otbbspca)
.PIPE     DIM       1     103     * Pipe Delimiter
BOOKPCOM  DIM       50    104     * Presenting Complaint              (pmvxudf1)
.PIPE     DIM       1     154     * Pipe Delimiter
BOOKDIAG  DIM       9     155     * Diagnosis Code                    (opdicode)
.PIPE     DIM       1     164     * Pipe Delimiter
BOOKDDES  DIM       50    165     * Diagnosis Description    (outdiaaf.opdicode)
.PIPE     DIM       1     215     * Pipe Delimiter
BOOKAVIS  DIM       20    216     * Alternate Visit Number   (ibaalvaf.ibavavis)
.PIPE     DIM       1     236     * Pipe Delimiter
BOOKRVIS  DIM       20    237     * Referral Visit Number    (ibaalvaf.ibavavis)
.PIPE     DIM       1     257     * Pipe Delimiter
BOOKCOMM  DIM       3570  258     * Comments                 (vismtxaf.vsmtcmnt)
.                                                             1 line = 70 byte
.                                                             max. of 51 lines
.PIPE     DIM       1     3828    * Pipe Delimiter
BOOKINST  DIM       200   3829    * Pt. Instructions         (viscmtaf.vsctdata)
.                                                                    type = 013
.                                                             1 line = 60 bytes
.                                                             max. of 4 lines
.PIPE     DIM       1     4029    * Pipe Delimiter
BOOKSNGL  DIM       1     4030    * Send Generate Letter     (outbb1af.otbbsngl)
.                                    (Y/N)
.PIPE     DIM       1     4031    * Pipe Delimiter
BOOKINTR  DIM       1     4032    * Interpreter Req'd (Y/N)           (pmvxintr)
.PIPE     DIM       1     4033    * Pipe Delimiter
BOOKPURC  DIM       3     4034    * Health Purchaser (Cat HP)         (otbbpurc)
.PIPE     DIM       1     4037    * Pipe Delimiter
BOOKOUTC  DIM       3     4038    * Triage Outcome (Cat OZ)           (otbboutc)
.PIPE     DIM       1     4041    * Pipe Delimiter
BOOKCONT  DIM       3     4042    * Contract (Cat gb)                 (otbbcont)
.PIPE     DIM       1     4045    * Pipe Delimiter
BOOKCONF  DIM       1     4046    * Appointment confirmed (Y/N)       (pmvxconf)
.PIPE     DIM       1     4047    * Pipe Delimiter
BOOKCNID  DIM       10    4048    * Visit Confirmed Web User Id       (pmvxcnid)
.                                   (websecaf)
.PIPE     DIM       1     4058    * Pipe Delimiter
BOOKCNDT  DIM       13    4059    * Visit Confirmed Date/Time         (pmvxcndt)
.                                   (ccyymmddhh:mm)
.
. End of Record           4072
.
.
.         ACC Data Records
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
.BOOKTYPE DIM       1      1      * O/P record type
.                                     1 = ACC Data
.PIPE     DIM       1      2      * Pipe Delimiter
.BOOKURNO DIM       8      3      * U/R Number                        (ptwcurno)
.PIPE     DIM       1      11     * Pipe Delimiter
ACCDNAME  DIM       30     12     * Employer Name                     (wcename)
.PIPE     DIM       1      42     * Pipe Delimiter
ACCDADD1  DIM       35     43     * Employer Address Line 1           (wceadd1)
.PIPE     DIM       1      78     * Pipe Delimiter
ACCDADD2  DIM       35     79     * Employer Address Line 2           (wceadd2)
.PIPE     DIM       1      114    * Pipe Delimiter
ACCDADD3  DIM       35     115    * Employer Address Line 3           (wceadd3)
.PIPE     DIM       1      150    * Pipe Delimiter
ACCDADD4  DIM       35     151    * Employer Address Line 4           (wceadd4)
.PIPE     DIM       1      186    * Pipe Delimiter
ACCDPOST  DIM       8      187    * Employer Postcode                 (wcepost)
.PIPE     DIM       1      195    * Pipe Delimiter
ACCDTELP  DIM       20     196    * Employer Telephone                (wcetele)
.PIPE     DIM       1      216    * Pipe Delimiter
ACCDACDT  DIM       8      217    * Date of Accident (ccyymmdd)       (wcacdat)
.PIPE     DIM       1      225    * Pipe Delimiter
ACCDACPT  DIM       1      226    * Accepted by Ins. Co. (Y/N)        (wcaccpt)
.PIPE     DIM       1      227    * Pipe Delimiter
ACCDINSR  DIM       6      228    * Insurance Company Code            (wcicode)
.PIPE     DIM       1      234    * Pipe Delimiter
ACCDCLNO  DIM       20     235    * Insurance Claim Number            (wcclmno)
.PIPE     DIM       1      255    * Pipe Delimiter
ACCDCOM1  DIM       40     256    * Comments 1                        (wccomn1)
.PIPE     DIM       1      296    * Pipe Delimiter
ACCDCOM2  DIM       40     297    * Comments 2                        (wccomn2)
.PIPE     DIM       1      337    * Pipe Delimiter
ACCDALOC  DIM       50     338    * Accident Location                 (pmwxaloc)
.PIPE     DIM       1      388    * Pipe Delimiter
ACCDCINJ  DIM       3      389    * Cause of Injury (Cat IK)          (pmwxcinj)
.PIPE     DIM       1      392    * Pipe Delimiter
ACCDICOD  DIM       3      393    * Injury Code (Cat IJ)              (pmwxicod)
.PIPE     DIM       1      396    * Pipe Delimiter
ACCDCNAM  DIM       40     397    * Contact Name                      (pmwxcnam)
.PIPE     DIM       1      437    * Pipe Delimiter
ACCDCDTE  DIM       8      438    * Date Record Created (ccyymmdd)    (pmwxcdte)
.PIPE     DIM       1      446    * Pipe Delimiter
ACCDCTIM  DIM       8      447    * Time Record Created (hh:mm:ss)    (pmwxctim)
.PIPE     DIM       1      455    * Pipe Delimiter
ACCDWEBC  DIM       10     456    * WEB User ID Record Creator        (pmwxwebc)
.PIPE     DIM       1      466    * Pipe Delimiter
ACCDLUPD  DIM       8      467    * Last Update Date (ccyymmdd)       (pmwxlupd)
.PIPE     DIM       1      475    * Pipe Delimiter
ACCDLUPT  DIM       8      476    * Last Update Time (hh:mm:ss)       (pmwxlupt)
.PIPE     DIM       1      484    * Pipe Delimiter
ACCDWEBU  DIM       10     485    * WEB User ID Record Updator        (pmwxwebu)
.PIPE     DIM       1      495    * Pipe Delimiter
ACCDACCF  DIM       3      496    * Work Related (Cat IQ)             (pmwxaccf)
.PIPE     DIM       1      499    * Pipe Delimiter
ACCDPLIN  DIM       3      500    * Place Injury Occurred (Cat IP)    (pmwxplin)
.PIPE     DIM       1      503    * Pipe Delimiter
ACCDACTI  DIM       3      504    * Activity When Injured (Cat IO)    (pmwxacti)
.PIPE     DIM       1      507    * Pipe Delimiter
ACCDADTE  DIM       8      508    * ACC Decline Date (ccyymmdd)       (pmwxadte)
.PIPE     DIM       1      516    * Pipe Delimiter
ACCDATME  DIM       8      517    * Accident Time (hh:mm:ss)          (pmwxatme)
.PIPE     DIM       1      525    * Pipe Delimiter
ACCDACLC  DIM       3      526    * Accident Location (Cat IM)        (pmwxaclc)
.PIPE     DIM       1      529    * Pipe Delimiter
ACCDAINZ  DIM       1      530    * Accident in NZ (Y/N)              (pmwxainz)
.PIPE     DIM       1      531    * Pipe Delimiter
ACCDMOVV  DIM       1      532    * Involves Moving Vehicle           (pmwxmovv)
.                                    on Public Road (Y/N)
.PIPE     DIM       1      533    * Pipe Delimiter
ACCDSPTI  DIM       1      534    * Sporting Injury (Y/N)             (pmwxspti)
.PIPE     DIM       1      535    * Pipe Delimiter
ACCDSPRT  DIM       3      536    * Sport Name (Cat IB)               (pmwxsprt)
.PIPE     DIM       1      539    * Pipe Delimiter
ACCDRECI  DIM       1      540    * Recurring Injury Indicator (Y/N)  (pmwxreci)
.PIPE     DIM       1      541    * Pipe Delimiter
ACCDTRIC  DIM       1      542    * Treatment Injury Claim (Y/N)      (pmwxtric)
.PIPE     DIM       1      543    * Pipe Delimiter
ACCDESTA  DIM       3      544    * Employment Status (Cat IF)        (pmwxesta)
.PIPE     DIM       1      547    * Pipe Delimiter
ACCDPDDT  DIM       8      548    * Patient Declaration Date          (pmwxpddt)
.                                     (ccyymmdd)
.PIPE     DIM       1      556    * Pipe Delimiter
ACCDARG1  DIM       20     557    * Authorised Representative         (pmwxarg1)
.                                     Given Name 1
.PIPE     DIM       1      577    * Pipe Delimiter
ACCDARG2  DIM       20     578    * Authorised Representative         (pmwxarg2)
.                                     Given Name 2
.PIPE     DIM       1      598    * Pipe Delimiter
ACCDARSN  DIM       25     599    * Authorised Representative         (pmwxasrn)
.                                     Surname
.PIPE     DIM       1      624    * Pipe Delimiter
ACCDARTL  DIM       4      625    * Authorised Representative         (pmwxartl)
.                                     Title
.PIPE     DIM       1      629    * Pipe Delimiter
ACCDARRP  DIM       10     630    * Authorised Representative         (pmwxarrp)
.                                     Relation
.PIPE     DIM       1      640    * Pipe Delimiter
ACCDASST  DIM       1      641    * Assistance is Required (Y/N)      (pmwxasst)
.PIPE     DIM       1      642    * Pipe Delimiter
ACCDNEED  DIM       1      643    * Need to Call HP (Y/N)             (pmwxneed)
.PIPE     DIM       1      644    * Pipe Delimiter
ACCDCONT  DIM       1      645    * Continue Normal Hours of          (pmwxcont)
.                                     Work (Y/N)
.PIPE     DIM       1      646    * Pipe Delimiter
ACCDALTW  DIM       1      647    * Alternative Work Indicator (Y/N)  (pmwxaltw)
.PIPE     DIM       1      648    * Pipe Delimiter
ACCDTYPA  DIM       3      649    * Type of Alternative Work (Cat IH) (pmwxtypa)
.PIPE     DIM       1      652    * Pipe Delimiter
ACCDSALT  DIM       8      653    * Start Date of Alternative         (pmwxsalt)
.                                     Work (ccyymmdd)
.PIPE     DIM       1      661    * Pipe Delimiter
ACCDHPDA  DIM       2      662    * Hours per Day of Alternative      (pmwxhpda)
.                                     Work
.PIPE     DIM       1      664    * Pipe Delimiter
ACCDUNFD  DIM       3      665    * Unfit for Work for Duration       (pmwxunfd)
.PIPE     DIM       1      668    * Pipe Delimiter
ACCDUNFT  DIM       3      669    * Unfit for Work for Type (Cat UI)  (pmwxunft)
.PIPE     DIM       1      672    * Pipe Delimiter
ACCDFISD  DIM       8      673    * Full Incapacity Start Date        (pmwxfisd)
.                                     (ccyymmdd)
.PIPE     DIM       1      681    * Pipe Delimiter
ACCDRNWD  DIM       8      682    * Return to Normal Work Date        (pmwxrnwd)
.                                     (ccyymmdd)
.PIPE     DIM       1      690    * Pipe Delimiter
ACCDCSTA  DIM       1      691    * Claim Status                      (pmwxcsta)
.                                     0 = Existing
.                                     1 = Parked
.                                     2 = Completed
.PIPE     DIM       1      692    * Pipe Delimiter
ACCDTWRK  DIM       3      693    * Type of Work (Cat IX)             (pmwxtwrk)
.PIPE     DIM       1      696    * Pipe Delimiter
ACCDOEST  DIM       50     697    * Other Employment Status           (pmwxoest)
.PIPE     DIM       1      747    * Pipe Delimiter
ACCDTPRO  DIM       10     748    * HCP Treatment Provider            (pmwxtpro)
.PIPE     DIM       1      758    * Pipe Delimiter
ACCDECOD  DIM       6      759    * Employer Code (pateoraf)          (pmwxecod)
.PIPE     DIM       1      765    * Pipe Delimiter
ACCDTYP1  DIM       3      766    * Hard-coded Comment Type           (accmtype)
.                                     001 = Cause of Injury
.PIPE     DIM       1      769    * Pipe Delimiter
ACCDDAT1  DIM       500    770    * Cause of Injury Comments          (accmdata)
.PIPE     DIM       1     1270    * Pipe Delimiter
ACCDTYP2  DIM       3     1271    * Hard-coded Comment Type           (accmtype)
.                                     002 = Injury Comments
.PIPE     DIM       1     1274    * Pipe Delimiter
ACCDDAT2  DIM       500   1275    * Injury Comments                   (accmdata)
.PIPE     DIM       1     1775    * Pipe Delimiter
ACCDTYP3  DIM       3     1776    * Hard-coded Comment Type           (accmtype)
.                                     003 = Alternative Work Restrictions
.PIPE     DIM       1     1779    * Pipe Delimiter
ACCDDAT3  DIM       500   1780    * Alternative Work Restrictions Comments
.                                                                     (accmdata)
. End of Record           2280
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACCCMTYP  DIM       3
ACCCOMNT  DIM       500
ACCCOUNT  FORM      1
ADDCOUNT  FORM      8             * added record count
.
BOOKSTRT  DIM       5             * clinic start time (hh:mm)
.
CHKGRPIN  FORM      1
CMDLINE   DIM       80
CODCOUNT  FORM      8             * code error record count
CODE      DIM       2
COMCOUNT  FORM      8             * comment error record count
COMMTLEN  FORM      4
COUNTER   FORM      6
CRTBKFLG  FORM      1
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DATEFLG1  FORM      1             * Date Type flag
.                                     0 = full date (ccyymmdd)
.                                     1 = partial date (ccyymm)
DATEFLG2  FORM      1             * Dates Allowed flag
.                                     0 = any date allowed
.                                     1 = future dates not allowed
.                                     2 = past dates not allowed
DFSLTTYP  DIM       3
DIM1A     DIM       1
DIM1B     DIM       1
DIM2C     DIM       2
DIM2D     DIM       2
DIM2H     DIM       2
DIM2M     DIM       2
DIM2S     DIM       2
DIM2Y     DIM       2
DIM3      DIM       3
DIM4      DIM       4
DIM6      DIM       6
DIM8      DIM       8
DIM18     DIM       18
DIM60     DIM       60
DIM70     DIM       70
DIM100    DIM       100
DTECOUNT  FORM      8             * date error record count
DUPCOUNT  FORM      8             * duplicate record count
.
EXTCOUNT  FORM      8             * extended slot error record count
ERORDESC  DIM       45
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FILEPRFX  DIM       3             * O/P file prefix
FORM2H    FORM      2
FORM2M    FORM      2
FORM3     FORM      3
FORM6     FORM      6
DIM8A     DIM       8             * Generated O/P number
FORM10    FORM      10
.
HOUR      FORM      2
.
LASTDATE  DIM       8
LINENUMB  FORM      3
LOCKCNT   FORM      1             * lock retry count
.
MANCOUNT  FORM      8             * mandatory field error record count
MIN       DIM       2             * Minutes Variable
MINUTES   FORM      6             * Minutes Variable
.
NDPSDATE  DIM       8
NOTENUMB  FORM      6
NUMCOUNT  FORM      8             * numeric error record count
.
OVERBOOK  FORM      1             * overbooking flag
.                                   0 = overbooking not used
.                                   1 = overbooking used
.
PARCOUNT  FORM      8             * acc record count where parent has error
PRNTSLOT  DIM       3             * saved parent slot
.
RECCOUNT  FORM      8             * record read counter
RDCOUNT1  FORM      8             * Comment header record read count
RDCOUNT2  FORM      8             * Comment details record read count
WRCOUNT1  FORM      8             * Comment header record written count
WRCOUNT2  FORM      8             * Comment details record written count
.
SAVECTYP  DIM       6             * saved clinic type
SAVEODAY  FORM      1             * saved clinic day
SAVEREFL  DIM       8             * saved referral visit number
SAVESLOT  FORM      3             * saved slot number
SAVETOCC  DIM       3             * saved type of contact code
SAVEURNO  DIM       8             * saved U/R number
SAVKEY25  DIM       25
SAVKEY28  DIM       28
SAVPRFX1  DIM       3             * saved O/P file prefix (outcliaf)
SAVPRFX2  DIM       3             * saved O/P file prefix (outbb1af)
SAVPRFX3  DIM       3             * saved O/P file prefix (outbokaf)
SAVPRFX4  DIM       3             * saved O/P file prefix (outsesaf)
SAVPRFX5  DIM       3             * saved O/P file prefix (outhedaf)
SAVPRFX6  DIM       3             * saved O/P file prefix (outdiaaf)
SAVSLTNO  FORM      6             * saved number of slots to use for booking
SAVINDC1  DIM       1             * save Cat CV indicator 1
SAVINDC8  DIM       1             * save Cat CV indicator 8
SEQCOUNT  FORM      8             * sequence error record count
SETCOUNT  FORM      8             * setup error record count
SLTCOUNT  FORM      8             * slot error record count
SLTFNDFL  FORM      1             * slot found flag
.                                     0 = slot found for booking
.                                     1 = slot not found for booking
STRTDATE  DIM       8
.
TEMPCATG  DIM       6             * Category (or HF for HF Table validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPDATE  DIM       8
TEMPFILE  DIM       8
TEMPTIME  DIM       8
TEMPTYPE  FORM      2             * Type of coded field
TIMCOUNT  FORM      8             * time error record count
TIMEFLAG  FORM      1             * time flag
.                                     0 = any time allowed
.                                     1 = future times not allowed
.                                     2 = past times not allowed
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
TYPEFORM  FORM      1             * O/P record type
.                                       0 = Booking record
.                                       1 = ACC record
.
UNKCOUNT  FORM      8             * unknown U/R counter
.
VALPARNT  FORM      1             * Valid parent record flag
.                                       0 = valid parent record
.                                       1 = invalid parent record
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
SORMFLAG  FORM      1             * Source of Referral Mandatory flag
.                                     0 = mandatory
.                                     1 = non-mandatory
.
.
.
. PROGRAM CONSTANTS
. -----------------
CATTC     INIT      "tc"
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
LWCASEGB  INIT      "gb"
PIPE      INIT      "|"
TILDA14   INIT      "~~~~~~~~~~~~~~"
UKEY      INIT      " 26 U1-25"
.
.
.-----------------------------------------------------------------------
PRGID     INIT      "CONVBOOK"
PRGNAM    INIT      "Upload Future O/P Bookings"
VERSION   INIT      "V12.00.01"
.-----------------------------------------------------------------------
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          CALL      CREA0000               * create temp file
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9000          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      DMAP0000               * display mapping files
          CALL      ASKQ0000               * validation run only ?
.
          CALL      GTYP0000               * get type of visit for review
          BRANCH    EXIT,MAIN0100          * nothing/exitchar entered
.
          CALL      GSRC0000               * check if source of ref. is mand.
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9000  CALL      KILL0000               * remove temp file
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"acccmtaf";
          OPEN      ACCCMTA1,"acccmtaf"
.
          DISPLAY   *P64:24,"alllnkaf";
          OPEN      ALLLNKA1,"alllnkaf"
.
          DISPLAY   *P64:24,"ibaalvaf";
          OPEN      IBAALVA1,"ibaalvaf"
          OPEN      IBAALVA2,"ibaalvaf"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"outpreaf";
          OPEN      OUTPREA1,"outpreaf"
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"vismdtaf";
          OPEN      VISMDTA1,"vismdtaf"
          DISPLAY   *P64:24,"vismtxaf";
          OPEN      VISMTXA1,"vismtxaf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patre1af";
          OPEN      PATRE1A1,"patre1af"
.
          DISPLAY   *P64:24,"pmscexaf";
          OPEN      PMSCEXA1,"pmscexaf"
.
          DISPLAY   *P64:24,"pmscuraf";
          OPEN      PMSCURA1,"pmscuraf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"viscmtaf";
          OPEN      VISCMTA1,"viscmtaf"
.
          DISPLAY   *P64:24,"visintaf";
          OPEN      VISINTA1,"visintaf"
.
          DISPLAY   *P64:24,"visiauaf";
          OPEN      VISIAUA1,"visiauaf"
.
          DISPLAY   *P64:24,"websecaf";
          OPEN      WEBSECA1,"websecaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,HUND01;*49,CWEBSDAY
.
          CALL      GTOC0000                     * get PRA contact type code
.
.         If NZ, open files for ACC data
.
          PERFORM   PTCNHDPS,OPNACC00            * (in UPACCDAT)
.
          MOVE      ONE,CNOUNDLN
.
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convbook.txt)                          *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      OPBOKUPL,"convbook"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
.         Open all mapping files.
.
.         Category-Codes mapping file (patcodes)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP1,"catcodes"             * Cat-Code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CATCDFLG              * no
          ELSE
            MOVE      ONE,CATCDFLG               * yes
          ENDIF
.
.         Insurance mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,"insuranc"             * insurance file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,INSRFLAG              * no
          ELSE
            MOVE      ONE,INSRFLAG               * yes
          ENDIF
.
.         Employer mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP3,"employer"             * employer file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,EMPLFLAG              * no
          ELSE
            MOVE      ONE,EMPLFLAG               * yes
          ENDIF
.
.         HCP Code mapping file (pmshcpaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP4,"hcpcode"              * hcp code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HCPCDFLG              * no
          ELSE
            MOVE      ONE,HCPCDFLG               * yes
          ENDIF
.
.         Title (pmstleaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP5,"titlecod"        * Check for title code file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,TITLECOD         * file doesnt exist
          ELSE
            MOVE      ONE,TITLECOD          * file does exist
          ENDIF
.
.         Relationship (pmsrelaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP6,"relation"       * Check for NOK relationship file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,RELATION         * file doesnt exist
          ELSE
            MOVE      ONE,RELATION          * file does exist
          ENDIF
.
.         O/P Site/Clinic Id mapping file (outsitaf/outcliaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP7,"clinicid"             * Site/Clinic Id file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CLIIDFLG              * no
          ELSE
            MOVE      ONE,CLIIDFLG               * yes
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convbook.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  DMAP0000              Called by: MAIN0000 *
.*                       Display File Name & Mapping files                    *
.* Requires: Mapping Flags                                                    *
.******************************************************************************
.
DMAP0000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save current screen
.
          DISPLAY   *P1:4,*EF,*V2LON,SP9,*ULON,"Mapping Tables"
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CATCDFLG,DYES
.
          DISPLAY   *P1:6,*EL,"Mapping Category/Codes (patcodes)      ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,INSRFLAG,DYES
.
          DISPLAY   *P1:7,*EL,"Mapping Insurer Code (patin1af)        ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,EMPLFLAG,DYES
.
          DISPLAY   *P1:8,*EL,"Mapping Employer Code (pateoraf)       ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HCPCDFLG,DYES
.
          DISPLAY   *P1:9,*EL,"Mapping HCP Code (pmshcpaf)            ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,TITLECOD,DYES
.
          DISPLAY   *P1:10,*EL,"Mapping Title Code (pmstleaf)          ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,RELATION,DYES
.
          DISPLAY   *P1:11,*EL,"Mapping Relation Code (pmsrelaf)       ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CLIIDFLG,DYES
.
          DISPLAY   *P1:12,*EL,"Mapping Site/Clinic Id Code (outcliaf) ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HCPCDFLG,DYES
.
          DISPLAY   *P1:8,*EL,"Mapping HCP Code (pmshcpaf)            ":
                    *V2LON,DIM3
.
          DISPLAY   *P1:24;
          CALL      HITENTER
          CALL      PUTSCR00                     * restore previous screen
.
DMAP9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:9,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?",*P38:9,*DV,COLON:
                    *P40:9,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P40:9,*V2LON,DYES,*HOFF:
                      *P46:9,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P40:9,*V2LON,DNO,*HOFF:
                      *P46:9,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input
.
ASKQ9999  RETURN
+
.*****************************************************************************
.*                               GTYP0000              Called by: MAIN0000   *
.*          Get the type of visit (Cat CV) code to be used for               *
.*          resetting unused extended slots back to "Revisit".  The visit    *
.*          type should only be for a single slot.                           *
.* Returns: EXIT    0 = valid code entered                                   *
.*                  1 = nothing/exitchar entered                             *
.*          DFSLTTYP - default slot type for single slot.                    *
.*****************************************************************************
.
GTYP0000  DISPLAY   *P1:10,"Visit Type for single slot",*P38:10,COLON
          MOVE      FORTY,ECOL
          MOVE      TEN,EVERT
          PACK      CODE,ANSC,ANSV
          MOVE      SP3,CKYIDEF3
          MOVE      SP3,CKYIMAND
          CALL      PATCODKY
          BRANCH    EXIT,GTYP9100:               * nothing entered
                         GTYP9100                * exitchar entered
.
.         Valid code entered, so make sure it is for a single slot.
.
          IF        TCFORM6 <> 1
            DISPLAY   *P1:24,*EL,*B,"Visit type uses more than one slot.  ";
            CALL      HITENTER
            GOTO      GTYP0000
          ENDIF
.
          DISPLAY   *P46:10,TDESC
          MOVE      ACODE,DFSLTTYP
          MOVE      ZERO,EXIT
          GOTO      GTYP9999
.
GTYP9100  MOVE      ONE,EXIT
.
GTYP9999  RETURN
+
.******************************************************************************
.*                             GSRC0000                   Called by: MAIN0000 *
.*                 Check if source of referral is mandatory                   *
.* Returns: SORMFLAG - source of referral mandatory flag                      *
.*                     0 = mandatory                                          *
.*                     1 = non-mandatory                                      *
.******************************************************************************
.
GSRC0000  KEYIN     *P1:11,"Source of Referral mandatory (",*V2LON,*DV,ANSY:
                    *HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ? :":
                    *P40:11,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            DISPLAY   *P40:11,*V2LON,DYES
            MOVE      ZERO,SORMFLAG
            GOTO      GSRC9999
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            DISPLAY   *P40:11,*V2LON,DNO
            MOVE      ONE,SORMFLAG
            GOTO      GSRC9999
          ENDIF
.
          BEEP
          GOTO      GSRC0000
.
GSRC9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the O/P Booking upload records                    *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:14,"Processing ",*V2LON,"convbook.txt",*HOFF:
                    *P1:16,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:18,"U/R Number : ":
                    *P1:19,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,COMCOUNT                * init. comment error rec count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,EXTCOUNT                * init. ext error record count
          MOVE      ZERO,TIMCOUNT                * init. time error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,SLTCOUNT                * init. slot error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,UNKCOUNT                * init. unknown pt record count
          MOVE      ZERO,SEQCOUNT                * init. seq. error record count
          MOVE      ZERO,SETCOUNT                * init. setup error rec. count
          MOVE      ZERO,PARCOUNT                * init. parent error rec. count
          MOVE      ZERO,RDCOUNT1 
          MOVE      ZERO,RDCOUNT2
          MOVE      ZERO,WRCOUNT1
          MOVE      ZERO,WRCOUNT2
.
          MOVE      SP3,SAVPRFX1                 * clear saved O/P file prefixes
          MOVE      SP3,SAVPRFX2
          MOVE      SP3,SAVPRFX3
          MOVE      SP3,SAVPRFX4
          MOVE      SP3,SAVPRFX5
          MOVE      SP3,SAVPRFX6
          MOVE      SP3,FILEPRFX                 * clear current O/P file prefix
          MOVE      SP8,SAVEURNO                 * initialise saved U/R
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records.
.         Load in the first two fields as they are common to
.         Bookings and ACC records.
.
UPLD1000  READ      OPBOKUPL,SEQ;BOOKTYPE,BOOKURNO;
          GOTO      UPLD8000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P14:18,*V2LON,BOOKURNO:
                      *P14:19,RECCOUNT;
          ENDIF
.
          PACK      BOOKTYPE,BOOKTYPE,SP1
          MATCH     SP1,BOOKTYPE
          IF        @EQUAL
            MOVE      SP70,DIM18
            MOVE      SP8,SAVEURNO
            MOVE      "O/P record type is blank ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,MANCOUNT               * increment mand. record count
            READ      OPBOKUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          TYPE      BOOKTYPE
          IF        !@EQUAL
            MOVE      SP70,DIM18
            MOVE      SP8,SAVEURNO
            MOVE      "O/P record type is not numeric ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric error rec count
            READ      OPBOKUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          MOVE      ZERO,TYPEFORM
          MOVE      BOOKTYPE,TYPEFORM
          COMPARE   TYPEFORM,ONE                * record type 0-1 ?
          IF        @LESS
            MOVE      SP70,DIM18
            MOVE      SP8,SAVEURNO
            MOVE      "O/P record type is not valid ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric erorr rec count
            READ      OPBOKUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          PACK      BOOKURNO,BOOKURNO,SP8
          RJUSTIFY  BOOKURNO
.
          BRANCH   TYPEFORM,UPLD1100
.
.         Booking record type
.
          READ      OPBOKUPL,SEQ;BOOKSITE,BOOKCLIN,BOOKDATE,BOOKTIME,BOOKVIST:
                                 BOOKCDAT,BOOKCTIM,BOOKSRCR,BOOKCOMP,BOOKPRTY:
                                 BOOKUSR1,BOOKDEPT,BOOKTRAN,BOOKRFGP,BOOKSNDL:
                                 BOOKSPCA,BOOKPCOM,BOOKDIAG,BOOKDDES,BOOKAVIS:
                                 BOOKRVIS,BOOKCOMM,BOOKINST,BOOKSNGL,BOOKINTR:
                                 BOOKPURC,BOOKOUTC,BOOKCONT,BOOKCONF,BOOKCNID:
                                 BOOKCNDT
.
          MOVE      SP5,BOOKSTRT
          MOVE      ONE,SLTFNDFL                 * initialise slot found flag
          MOVE      ZERO,OVERBOOK                * initialise overbooking flag
          MOVE      ZERO,CRTBKFLG    
.
          GOTO      UPLD1500
.
.         ACC record type
.
UPLD1100  READ      OPBOKUPL,SEQ;ACCDNAME,ACCDADD1,ACCDADD2,ACCDADD3,ACCDADD4:
                                 ACCDPOST,ACCDTELP,ACCDACDT,ACCDACPT,ACCDINSR:
                                 ACCDCLNO,ACCDCOM1,ACCDCOM2,ACCDALOC,ACCDCINJ:
                                 ACCDICOD,ACCDCNAM,ACCDCDTE,ACCDCTIM,ACCDWEBC:
                                 ACCDLUPD,ACCDLUPT,ACCDWEBU,ACCDACCF,ACCDPLIN:
                                 ACCDACTI,ACCDADTE,ACCDATME,ACCDACLC,ACCDAINZ:
                                 ACCDMOVV,ACCDSPTI,ACCDSPRT,ACCDRECI,ACCDTRIC:
                                 ACCDESTA,ACCDPDDT,ACCDARG1,ACCDARG2,ACCDARSN:
                                 ACCDARTL,ACCDARRP,ACCDASST,ACCDNEED,ACCDCONT:
                                 ACCDALTW,ACCDTYPA,ACCDSALT,ACCDHPDA,ACCDUNFD:
                                 ACCDUNFT,ACCDFISD,ACCDRNWD,ACCDCSTA,ACCDTWRK:
                                 ACCDOEST,ACCDTPRO,ACCDECOD,ACCDTYP1,ACCDDAT1:
                                 ACCDTYP2,ACCDDAT2,ACCDTYP3,ACCDDAT3
.
          COMPARE   ONE,PTCNHDPS                 * nz ?
          GOTO      UPLD1000 IF NOT EQUAL        * no - ignore record
.
UPLD1500  CALL      POUT0000                     * pad out fields with spaces
.
          BRANCH    TYPEFORM,UPLD2000            * acc record
.
.         Booking record type
.
          CALL      CLOUTBB1                     * clear database variables
          CALL      CLPATMAS                     * clear patient master vars.
          CALL      CLPMSVX1                     * clear visit extension
          MOVE      ONE,VALPARNT                 * set for invalid parent
.
          CALL      VURN0000                     * validate U/R
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          MOVE      BOOKURNO,SAVEURNO            * save U/R number
          GOTO      UPLD3000
.
.         This is an acc record, so clear the watwc1af & pmswc1af database
.         variables and make sure that the patient hasn't changed from the
.         last referral record
.
UPLD2000  CALL      CLPATWC1                     * clear patwc1af variables
          CALL      CLPMSWX1                     * clear pmswx1af variables
.
          MATCH     BOOKURNO,SAVEURNO            * same U/R as O/P entry record?
          IF        !@EQUAL
            MOVE      SP70,DIM18
            MOVE      "ACC record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
UPLD3000  CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      TVAL0000                     * time validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      CVIS0000                     * check for alt. visit id.
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      GNUM0000                     * generate visit number
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
.         File variables are set after CVAL0000 in this upload program
.         due to the fact that CVAL0000 reads the booking record (outbokaf),
.         so we need to update the field values after CVAL0000.
.
          CALL      SETV0000                     * set up file variables
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
.         If this is validation only and an available booking slot was found,
.         then check if we need extended slots.  If the booking slot was
.         not found, there is no point in running this check.
.
          IF        VCHKFLAG = 1 & SLTFNDFL = 0
            CALL      CEXT0000                   * validate ext. booking slots
          ENDIF
.
.         Note: CEXT0000 has to be the last routine called as it reads
.               other outbokaf records
.
.         Write the record details to file
.
          BRANCH    TYPEFORM,UPLD4000            * acc record type
.
          MOVE      ZERO,VALPARNT                * set flag for valid parent
          BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
.         Booking record type
.
          CALL      UPBOKA1                      * update booking A record
          CALL      WRBOKB1                      * write booking B record
.
.         Write a temp file record (session key) so that it can
.         be used later to update the session statistics
.
          MOVE      SESSNKEY,KEY25
          CALL      RATEMP6
          IF        OVRCD = 1
            CALL      WRTEMP6                    * write sess. key to temp file
          ENDIF
.
          CALL      WLNK0000                     * write link record
          CALL      WVIS0000                     * write pmsvx1af records
          CALL      AVIS0000                     * write alternate visit record
          CALL      WPRE0000                     * write a pre-attendance record
          CALL      WCUR0000                     * write current patient record
          CALL      WPRA0000                     * write PRA record
          CALL      WDIA0000                     * write diagnosis record
          CALL      PCOM0000                     * write appointment comments
          CALL      WINS0000                     * write patient instructions
          CALL      WINT0000                     * write interpreter visit dets.
.
.         Note: CEXT0000 has to be the last routine called as it reads
.               other outbokaf records
.
          CALL      CEXT0000                     * update extended booking slots
          ADD       ONE,ADDCOUNT                 * increment added record count
          MOVE      ONE,CRTBKFLG
          GOTO      UPLD1000                     * get next record
.
.         ACC record type
.
UPLD4000  BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          MOVE      DIM8A,KEY8
          CALL      WRTACC00                     * common routine from UPACCDAT
          CALL      ACCCOM00                     * process ACC comments
          GOTO      UPLD1000                     * get next record
.
UPLD8000  CALL      RCAL0000                     * update all the session stats
.
.         Upload completed
.
UPLD9000  ASSIGN    (CODCOUNT+COMCOUNT+DUPCOUNT+DTECOUNT+EXTCOUNT+TIMCOUNT+MANCOUNT+SLTCOUNT+NUMCOUNT+UNKCOUNT+PARCOUNT+SEQCOUNT+SETCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FORTY7                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records where comments didn't load    - ",COMCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with invalid times detected   - ",TIMCOUNT,*N:
                    *1,"Records with extended slot errors     - ",EXTCOUNT,*N:
                    *1,"Records with unknown U/R numbers      - ",UNKCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with no matching session/slot - ",SLTCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT,*N:
                    *1,"Records out of sequence               - ",SEQCOUNT,*N:
                    *1,"Records with set up errors            - ",SETCOUNT,*N:
                    *1,"Other records with parent errors      - ",PARCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,MAND1000            * acc record type
.
.         Booking record type
.
          MOVE      BOOKSITE,TMPSTRNG
          MOVE      "BOOKSITE",TMPFIELD          * Site ID
          CALL      CHKM0000
.
          MOVE      BOOKCLIN,TMPSTRNG
          MOVE      "BOOKCLIN",TMPFIELD          * Clinic ID
          CALL      CHKM0000
.
          MOVE      BOOKDATE,TMPSTRNG
          MOVE      "BOOKDATE",TMPFIELD          * Clinic Date
          CALL      CHKM0000
.
          MOVE      BOOKTIME,TMPSTRNG
          MOVE      "BOOKTIME",TMPFIELD          * Clinic Slot Time
          CALL      CHKM0000
.
          MOVE      BOOKVIST,TMPSTRNG
          MOVE      "BOOKVIST",TMPFIELD          * Visit Type
          CALL      CHKM0000
.
          IF        SORMFLAG = 0
            MOVE      BOOKSRCR,TMPSTRNG
            MOVE      "BOOKSRCR",TMPFIELD        * Source of Referral
            CALL      CHKM0000
          ENDIF
.
          MOVE      BOOKCOMP,TMPSTRNG
          MOVE      "BOOKCOMP",TMPFIELD          * Compensation Eligibility
          CALL      CHKM0000
.
          GOTO      MAND9000
.
.         ACC type records only
.
MAND1000  CALL      MANACC00                     * common routine from UPACCDAT
.
MAND9000  BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP8                 * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convbook.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"U/R No.",*12,PIPE,*14,"Patient Name":
                    *33,PIPE,*35,"Visit No.",*44,PIPE,*46,"Site":
                    *53,"Clinic",*60,"Clinic",*71,"Clinic",*78,"Slot":
                    *84,PIPE,*86,"Error Description",*132,PIPE,*N:
                    *1,PIPE,*12,PIPE,*33,PIPE,*44,PIPE:
                    *53,"ID",*60,"Date",*71,"Start",*78,"Time":
                    *84,PIPE,*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      EIGHT,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  GNUM0000              Called by: UPLD0000 *
.*            Get the next visit number for booking record.                   *
.******************************************************************************
.
GNUM0000  BRANCH    VCHKFLAG,GNUM9999            * validation only
.
          BRANCH    TYPEFORM,GNUM9999            * acc type record
.
.         First generate a new visit number
.
          READ      CONTROLF,HUND30;*75,PTCNUANV      * Using AN Visit Numbers
.
          MATCH     "1",PTCNUANV
          IF        @EQUAL
            CALL      GANV0000                * Get next AN visit number
            MOVE      PTCNNXTV,KEY8
            MOVE      PTCNNXTV,DIM8A
          ELSE
            MOVE      " 10",PRXCODE                * Set to sector 10
            CALL      GETSLK00                     * Lock sector 10
            READ      CONTROLF,TEN;*1,FORM8V
            ADD       ONE,FORM8V
            WRITAB    CONTROLF,TEN;*1,FORM8V
            CALL      RELSLK00                     * Release sector 10 lock
            SUB       ONE,FORM8V
.
            MOVE      FORM8V,KEY8
            MOVE      FORM8V,DIM8A
          ENDIF
.
          CALL      RDAVISA1                     * visit already on file ?
          COMPARE   ZERO,OVRCD
          GOTO      GNUM0000 IF EQUAL            * yes - get next visit no
.
GNUM9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*            Load the outbokaf and outbb1af record variables.                *
.* Returns: EXIT   0 = no errors encountered                                  *
.*                 1 = one or more set up errors encountered                  *
.*          SETCOUNT - updated count of records with set up issues            *
.******************************************************************************
.
SETV0000  MOVE      ZERO,ERORFLAG
.
          BRANCH    TYPEFORM,SETV2000            * acc type record
.
.         Booking record type
.
          MOVE      DIM8A,OBAOUTNO               * load outbokaf variables
          MOVE      BOOKURNO,OBAURNO
          IF        OVERBOOK = 0
            MOVE      BOOKVIST,OBAVISIT
          ENDIF
          MOVE      ONE,OBASTAT
          PACK      OBABKDTE,BOOKCDAT,BOOKCTIM
.
          MOVE      BOOKSRCR,OBASRCR             * load outbb1af variables
          MOVE      BOOKCOMP,OBACOMP
          MOVE      BOOKPRTY,OBAPRTY
          MOVE      BOOKUSR1,OBOUSR1
          MOVE      BOOKDEPT,OTBBDEPT
          MOVE      BOOKTRAN,OTBBTRAN
          MOVE      BOOKRFGP,OTBBRFGP
          MOVE      BOOKSNDL,OTBBSNDL
          REP       "N0Y1",OTBBSNDL
          MOVE      BOOKSPCA,OTBBSPCA
          MOVE      BOOKPURC,OTBBPURC
          MOVE      BOOKOUTC,OTBBOUTC
          MOVE      BOOKCONT,OTBBCONT
          MOVE      BOOKCONF,PMVXCONF
          REP       "N0Y1",PMVXCONF
          MOVE      BOOKCNID,PMVXCNID
          MOVE      BOOKCNDT,PMVXCNDT
          MOVE      OTHETCOD,OTBBTCOD
.
.         Load OTBBSNGL & OTBBGLDT
.
          CALL      PSGL0000
          GOTO      SETV9000
.
.         ACC type records only
.
SETV2000  MOVE      BOOKURNO,PTWCURNO
          MOVE      BOOKDATE,PTWCVDAT
          CALL      SETACC00                     * common routine from UPACCDAT
.
SETV9000  BRANCH    ERORFLAG,SETV9100            * errors on setup
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
SETV9100  MOVE      ONE,EXIT
          ADD       ONE,SETCOUNT                 * incr setup error record count
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      BOOKURNO,BOOKURNO,SP8
          RJUSTIFY  BOOKURNO
.
          BRANCH    TYPEFORM,POUT1000            * acc type record
.
.         Booking record type
.
.         Note: Mapping of coded fields is done here rather than in SETV0000
.         because mapping is required before code validation in CVAL0000
.
          PACK      BOOKSITE,BOOKSITE,SP6
          PACK      BOOKCLIN,BOOKCLIN,SP6
          IF        CLIIDFLG = 1
            PACK      KEY12,BOOKSITE,BOOKCLIN
            CALL      RDTEMP7                    * site/clinic id on map file ?
            IF        OVRCD = 0
              MOVE      NEWSITCD,BOOKSITE        * yes - load site mapped code
              MOVE      NEWCLIID,BOOKCLIN        * load clinic id mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKDATE,BOOKDATE,SP8
          PACK      BOOKTIME,BOOKTIME,SP5
.
          PACK      BOOKVIST,BOOKVIST,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSV,BOOKVIST
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKVISIT       * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKCDAT,BOOKCDAT,SP8
          PACK      BOOKCTIM,BOOKCTIM,SP8
.
          PACK      BOOKSRCR,BOOKSRCR,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSS,SP1,BOOKSRCR
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKSRCR        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKCOMP,BOOKCOMP,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSL,BOOKCOMP
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKCOMP        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKPRTY,BOOKPRTY,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,ANSR,BOOKPRTY
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKPRTY        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKUSR1,BOOKUSR1,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSO,ONE,BOOKUSR1
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKUSR1        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKDEPT,BOOKDEPT,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSA,ANSC,BOOKDEPT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKDEPT        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKTRAN,BOOKTRAN,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSO,ANSB,BOOKTRAN
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKTRAN        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKRFGP,BOOKRFGP,SP10
          IF        HCPCDFLG = 1
            MOVE      BOOKRFGP,KEY10
            CALL      RDTEMP4                    * hcp code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,BOOKRFGP        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKSNDL,BOOKSNDL,SP1
          REP       UPPLOW,BOOKSNDL
.
          PACK      BOOKSPCA,BOOKSPCA,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSA,ANSA,BOOKSPCA
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKSPCA        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKPURC,BOOKPURC,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSH,ANSP,BOOKPURC
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKPURC        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKOUTC,BOOKOUTC,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,ANSO,ANSZ,BOOKOUTC
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKOUTC        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKCONT,BOOKCONT,SP3
          IF        CATCDFLG = 1
            PACK      KEY5,LWCASEGB,BOOKCONT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BOOKCONT        * yes - load mapped code
            ENDIF
          ENDIF
.
          PACK      BOOKPCOM,BOOKPCOM,SP30,SP20
          PACK      BOOKDIAG,BOOKDIAG,SP9
          PACK      BOOKDDES,BOOKDDES,SP30,SP20
          PACK      BOOKAVIS,BOOKAVIS,SP20
          PACK      BOOKRVIS,BOOKRVIS,SP20
          PACK      BOOKSNGL,BOOKSNGL,SP1
          REP       UPPLOW,BOOKSNGL
          PACK      BOOKINTR,BOOKINTR,SP1
          REP       UPPLOW,BOOKINTR 
          PACK      BOOKCONF,BOOKCONF,SP1
          REP       UPPLOW,BOOKCONF
          PACK      BOOKCNID,BOOKCNID,SP10
          PACK      BOOKCNDT,BOOKCNDT,SP20
.
          GOTO      POUT9999
.
.         ACC type records only
.
POUT1000  CALL      PADACC00                     * common routine from UPACCDAT
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,DVAL1000            * acc type only
.
.         Booking record type
.
          MOVE      BOOKDATE,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      TWO,DATEFLG2                 * past dates not allowed
          MOVE      "BOOKDATE",TMPFIELD
          CALL      VDAT0000
.
          MOVE      BOOKCDAT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "BOOKCDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      BOOKCNDT,TEMPDATE
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "BOOKCNDT",TMPFIELD
          CALL      VDAT0000
.
          GOTO      DVAL9000
.
.         ACC type records only
.
DVAL1000  CALL      DTEACC00                     * common routine from UPACCDAT
.
DVAL9000  BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = future dates not allowed                     *
.*                          2 = past dates not allowed                       *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18 and <= current century
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
          BRANCH    DATEFLG2,VDAT5000:           * future dates not allowed
                             VDAT6000            * past dates not allowed
.
.         Make sure the date is not in the future
.
VDAT5000  MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Date cannot be in the future ",ERORDESC
            CALL      DERR0000
          ENDIF
          GOTO      VDAT9999
.
.         Make sure the date is not in the past
.
VDAT6000  MATCH     CURRDATE,TEMPDATE
          IF        @LESS
            MOVE      "Date cannot be in the past ",ERORDESC
            CALL      DERR0000
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in date validation occurs.             *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                              TVAL0000           Called by: UPLD0000       *
.*                  Validate all time fields                                 *
.* Returns:  EXIT - 0 = No time validation errors                            *
.*                  1 = Time validation errors                               *
.*          TIMCOUNT - updated count of records with time field errors       *
.*****************************************************************************
.
TVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,TVAL1000            * acc record only
.
.         Booking record type
.
          MOVE      BOOKDATE,TEMPDATE
          PACK      TEMPTIME,BOOKTIME,COLON,ZERO,ZERO    * slot time
          MOVE      "BOOKTIME",TMPFIELD
          MOVE      TWO,TIMEFLAG                 * past time not allowed
          CALL      VTIM0000
.
          MOVE      BOOKCDAT,TEMPDATE
          MOVE      BOOKCTIM,TEMPTIME            * time booking created
          MOVE      "BOOKCTIM",TMPFIELD
          MOVE      ZERO,TIMEFLAG                * any time allowed
          CALL      VTIM0000
.
          UNPACK    BOOKCNDT,TEMPDATE,TEMPTIME
          MATCH     SP5,TEMPTIME
          IF        @EQUAL
            PACK      TEMPTIME,TEMPTIME,SP8
          ELSE
            ENDSET    TEMPTIME
            APPEND    ":00",TEMPTIME
            RESET     TEMPTIME
          ENDIF
          MOVE      "BOOKCNDT",TMPFIELD
          MOVE      ONE,TIMEFLAG                 * future time not allowed
          CALL      VTIM0000
.
          GOTO      TVAL9000
.
.         ACC record type
.
TVAL1000  CALL      TIMACC00                     * common routine from UPACCDAT
.
TVAL9000  BRANCH    ERORFLAG,TVAL9100            * errors on time validation
.
          MOVE      ZERO,EXIT                    * no errors on time validation
          GOTO      TVAL9999
.
TVAL9100  ADD       ONE,TIMCOUNT                 * incr. time error record count
          MOVE      ONE,EXIT
.
TVAL9999  RETURN
+
.*****************************************************************************
.*                            VTIM0000             Called by: TVAL0000       *
.*                    Validate time fields                                   *
.* Requires:  TEMPTIME - Time in format hh:mm:ss                             *
.*            TEMPDATE - Date in format ccyymmdd                             *
.*            TMPFIELD - Time field name                                     *
.*            TIMEFLAG - Times Allowed flag                                  *
.*                          0 = any time allowed                             *
.*                          1 = no future times allowed                      *
.*                          2 = no past times allowed                        *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.
VTIM0000  MATCH     SP8,TEMPTIME                 * blank time ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * blank date ?
          IF        @EQUAL
            MOVE      "Time without corresponding date ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          UNPACK    TEMPTIME,DIM2H,DIM1A,DIM2M,DIM1B,DIM2S    * (hh:mm:ss)
.
.         Make sure colon's separate the hours, minutes and seconds
.
          MATCH     DIM1A,DIM1B
          GOTO      VTIM1000 IF NOT EQUAL
.
          MATCH     COLON,DIM1A
          GOTO      VTIM1000 IF NOT EQUAL
.
          GOTO      VTIM2000
.
VTIM1000  MOVE      "Format not valid ",ERORDESC
          CALL      TERR0000
          GOTO      VTIM9999
.
.         Validate the hour
.
VTIM2000  MOVE      DIM2H,FORM2
          IF        FORM2 < 0 | FORM2 > 23
            MOVE      "Hour not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the minute
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Minutes not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the second
.
          MOVE      DIM2S,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Seconds not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.             
          COMPARE   ZERO,TIMEFLAG                * any time allowed ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * date blank ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     TEMPDATE,CURRDATE            * current date ?
          GOTO      VTIM9999 IF NOT EQUAL        * no
.
          BRANCH    TIMEFLAG,VTIM5000:           * no future time allowed
                             VTIM6000            * no past time allowed
.
.         Make sure the time is not in the future
.         
VTIM5000  MATCH     TEMPTIME,CTIMEIS
          IF        @LESS
            MOVE      "Time cannot be in the future ",ERORDESC
            CALL      TERR0000
          ENDIF
          GOTO      VTIM9999
.         
.         Make sure the time is not in the past
.
VTIM6000  MATCH     CTIMEIS,TEMPTIME
          IF        @LESS
            MOVE      "Time cannot be in the past ",ERORDESC
            CALL      TERR0000
          ENDIF
.
VTIM9999  RETURN
+
.*****************************************************************************
.*                            TERR0000             Called by: VTIM0000       *
.*                    Process time error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in time validation occurs.             *
.*****************************************************************************
.
TERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set time error flag
.
TERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,VNUM1000            * acc record only
.
          GOTO      VNUM9000                     * Booking - no validation
.
.         ACC record type
.
VNUM1000  CALL      NUMACC00                     * common routine from UPACCDAT
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*          SLTCOUNT - updated count of records with no match on session/slot*
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,CVAL5000            * acc type record
.
.         Booking record type
.
          PACK      TEMPCATG,ANSC,ANSV
          PACK      TEMPCODE,BOOKVIST,SP10
          MOVE      "BOOKVIST",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (visit type)
          CALL      VCOD0000
          MOVE      TCINDC1,SAVINDC1             * save indicator 1
          MOVE      TCINDC8,SAVINDC8             * save indicator 8
.
.         Use the visit type to also load up the number of slots to use
.         based on the associated number (used later by CEXT0000).
.
          IF        TCFORM6 = 0
            MOVE      ONE,TCFORM6
          ENDIF
          MOVE      TCFORM6,SAVSLTNO             * save no. of slots for booking
.
          PACK      TEMPCATG,ANSC,ANSL
          PACK      TEMPCODE,BOOKCOMP,SP10
          MOVE      "BOOKCOMP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (claim code)
          CALL      VCOD0000
.
          MATCH     SP3,BOOKPRTY                 * blank code ?
          GOTO      CVAL0100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,ANSR
          PACK      TEMPCODE,BOOKPRTY,SP10
          MOVE      "BOOKPRTY",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (priority)
          CALL      VCOD0000
.
CVAL0100  MATCH     SP3,BOOKUSR1                 * blank code ?
          GOTO      CVAL0200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSO,ONE
          PACK      TEMPCODE,BOOKUSR1,SP10
          MOVE      "BOOKUSR1",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 1)
          CALL      VCOD0000
.
CVAL0200  MATCH     SP3,BOOKDEPT                 * blank code ?
          GOTO      CVAL0300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,ANSC
          PACK      TEMPCODE,BOOKDEPT,SP10
          MOVE      "BOOKDEPT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (department)
          CALL      VCOD0000
.
CVAL0300  MATCH     SP3,BOOKTRAN                 * blank code ?
          GOTO      CVAL0400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSO,ANSB
          PACK      TEMPCODE,BOOKTRAN,SP10
          MOVE      "BOOKTRAN",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (transport alloc.)
          CALL      VCOD0000
.
CVAL0400  MATCH     SP3,BOOKSPCA                 * blank code ?
          GOTO      CVAL0500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSS,ANSA
          PACK      TEMPCODE,BOOKSPCA,SP10
          MOVE      "BOOKSPCA",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (special arrang.)
          CALL      VCOD0000
.
CVAL0500  MATCH     SP1,BOOKSNDL                 * blank code ?
          GOTO      CVAL0600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,BOOKSNDL,SP10
          MOVE      "BOOKSNDL",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * Y/N (send letter)
          CALL      VCOD0000
.
CVAL0600  MATCH     SP1,BOOKSNGL                 * blank code ?
          GOTO      CVAL0700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,BOOKSNGL,SP10
          MOVE      "BOOKSNGL",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * Y/N (send generate letter)
          CALL      VCOD0000
.
CVAL0700  MATCH     SP1,BOOKRFGP                 * blank code ?
          GOTO      CVAL0800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,BOOKRFGP,SP10
          MOVE      "BOOKRFGP",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (referring gp)
          CALL      VCOD0000
.
CVAL0800  PACK      TEMPCODE,BOOKSITE,SP10
          MOVE      "BOOKSITE",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * outsitaf (site)
          CALL      VCOD0000
.
          MATCH     SP3,BOOKSRCR                 * blank source of referral ?
          GOTO      CVAL0850 IF EQUAL            * yes
.
          MOVE      OSTCATG,TEMPCATG
          PACK      TEMPCODE,BOOKSRCR,SP10
          MOVE      "BOOKSRCR",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (source of referral)
          CALL      VCOD0000
.
CVAL0850  MATCH     SP3,FILEPRFX                 * O/P file prefix blank ?
          GOTO      CVAL0900 IF EQUAL            * yes - finished
.
          MATCH     SAVPRFX1,TILDA14             * O/P file open ?
          GOTO      CVAL0900 IF EQUAL            * no - finished
.        
          PACK      TEMPCODE,BOOKCLIN,SP10
          MOVE      "BOOKCLIN",TMPFIELD
          MOVE      NINE,TEMPTYPE                * outcliaf (clinic id)
          CALL      VCOD0000
.
CVAL0900  MATCH     SP1,BOOKINTR                 * blank code ?
          GOTO      CVAL1000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,BOOKINTR,SP10
          MOVE      "BOOKINTR",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * Y/N (Interpreter required)
          CALL      VCOD0000
.
          MATCH     ANSY,BOOKINTR                * yes interpreter required
          GOTO      CVAL1000 IF NOT EQUAL
.
          MATCH     "1",PMPXINTR
          IF        !@EQUAL
            CLEAR     ERORDESC
            APPEND    "PMI interpreter required mandatory ",ERORDESC
            APPEND    "for referral interpreter required ",ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                     * print error line
            MOVE      ONE,ERORFLAG                 * set number error flag
          ENDIF
.
          MATCH     SP70,PMPXLNG1
          IF        @EQUAL
            CLEAR     ERORDESC
            APPEND    "PMI preferred language mandatory ",ERORDESC
            APPEND    "for referral interpreter required ",ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                     * print error line
            MOVE      ONE,ERORFLAG                 * set number error flag
          ENDIF
.
CVAL1000  MATCH     SP3,BOOKPURC                 * blank code ?
          GOTO      CVAL1100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSH,ANSP
          PACK      TEMPCODE,BOOKPURC,SP10
          MOVE      "BOOKPURC",TMPFIELD
          MOVE      ONE,TEMPTYPE          
          CALL      VCOD0000
.
CVAL1100  MATCH     SP3,BOOKOUTC                 * blank code ?
          GOTO      CVAL1200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSO,ANSZ
          PACK      TEMPCODE,BOOKOUTC,SP10
          MOVE      "BOOKOUTC",TMPFIELD
          MOVE      ONE,TEMPTYPE          
          CALL      VCOD0000
.
CVAL1200  MATCH     SP3,BOOKCONT                 * blank code ?
          GOTO      CVAL1300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,LWCASEGB
          PACK      TEMPCODE,BOOKCONT,SP10
          MOVE      "BOOKCONT",TMPFIELD
          MOVE      ONE,TEMPTYPE          
          CALL      VCOD0000
.
CVAL1300  MATCH     SP1,BOOKCONF                 * blank code ?
          GOTO      CVAL1400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,BOOKCONF,SP10
          MOVE      "BOOKCONF",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * Y/N validation
          CALL      VCOD0000
.
CVAL1400  MATCH     SP1,BOOKCNID                 * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,BOOKCNID,SP10
          MOVE      "BOOKCNID",TMPFIELD
          MOVE      TEN,TEMPTYPE                 * web user id validation
          CALL      VCOD0000
.
          GOTO      CVAL9000
.
.         ACC type records only
.
CVAL5000  CALL      CODACC00                     * common routine from UPACCDAT
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100:           * errors on code validation
                             CVAL9200            * errors on slot matching
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          GOTO      CVAL9900
.
CVAL9200  ADD       ONE,SLTCOUNT                 * incr. slot error record count
CVAL9900  MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.* Returns:  ERORFLAG = 1 if an error in code validation occurs.             *
.*****************************************************************************
.
.         Note: The first 6 branches below must remain in their current
.               sequence as they are called from UPACCDAT for validating
.               ACC coded fields for this program as well as CONVWAIT, CONVBOOK
.               and CONVPADM.
.
VCOD0000  BRANCH    TEMPTYPE,VCOD0100:           * patcodes (category-codes)
                             VCOD0200:           * patin1af
                             VCOD0300:           * pateoraf
                             VCOD0400:           * pmshcpaf
                             VCOD0500:           * pmstleaf
                             VCOD0600:           * pmsrelaf
                             VCOD0700:           * Y/N
                             VCOD0800:           * outsitaf
                             VCOD0900:           * outcliaf
                             VCOD1000            * websecaf
.
.         Validate a category-coded field (patcodes)
.
VCOD0100  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an insurer code field (patin1af)
.
VCOD0200  PACK      KEY6,TEMPCODE,SP10
          CALL      RDINSR1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an employer code field (pateoraf)
.
VCOD0300  PACK      KEY7,ANSE,TEMPCODE,SP10
          CALL      RDPTEOR1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a hcp field (pmshcpaf)
.
VCOD0400  MOVE      TEMPCODE,KEY10
          CALL      RDPMHCP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a title code field (pmstleaf)
.
VCOD0500  PACK      KEY4,TEMPCODE,SP4
          CALL      RDPMTLE1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a relationship code field (pmsrelaf)
.
VCOD0600  PACK      KEY10,TEMPCODE,SP10
          CALL      RDPMREL1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a Y/N field
.
VCOD0700  MATCH     ANSY,TEMPCODE                * "Y" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
.
          MATCH     ANSN,TEMPCODE                * "N" ?
          GOTO      VCOD9999 IF EQUAL            * yes - valid code
          GOTO      VCOD9100                     * no - invalid code
.
.         Validate an outpatient site code field (outsitaf)
.
VCOD0800  MOVE      SP3,FILEPRFX                 * default site prefix to blank
          MOVE      TEMPCODE,KEY6
          CALL      RDSITA1                      * site record found ?
          BRANCH    OVRCD,VCOD9100               * no
.
          MOVE      OSTFILE,FILEPRFX             * load site file prefix
.
          MATCH     SP3,OSTFILE
          IF        @EQUAL
            MOVE      "Site prefix is blank ",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      VCOD9200
          ENDIF
.
          MATCH     FILEPRFX,SAVPRFX1            * same O/P file prefix ?
          GOTO      VCOD0810 IF EQUAL            * yes - don't reopen file
.
.         We have a new site prefix, so open the clinic id file.
.
          CLOSE     OUTCLIA1                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,FILEPRFX,FILCLIA1
          OPEN      OUTCLIA1,CFNAME              * open new file
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Clinic Id file not found (",ERORDESC
            ENDSET    ERORDESC
            APPEND    CFNAME,ERORDESC
            APPEND    RBRACK,ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      TILDA14,SAVPRFX1
            MOVE      TILDA14,SAVPRFX2
            MOVE      TILDA14,SAVPRFX3
            MOVE      TILDA14,SAVPRFX4
            MOVE      TILDA14,SAVPRFX5
            MOVE      TILDA14,SAVPRFX6
            GOTO      VCOD9200
          ENDIF
.
          MOVE      FILEPRFX,SAVPRFX1            * save O/P file prefix
.
VCOD0810  MATCH     FILEPRFX,SAVPRFX2            * same O/P file prefix ?
          GOTO      VCOD0820 IF EQUAL            * yes - don't reopen file
.
.         We have a new site prefix, so open the booking B file.
.         
          CLOSE     OUTBB1A1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,FILEPRFX,FILBB1A1
          OPEN      OUTBB1A1,CFNAME
          TRAPCLR   IO
          IF        OVRCD = 1 
            MOVE      "Booking B file not found (",ERORDESC
            ENDSET    ERORDESC
            APPEND    CFNAME,ERORDESC
            APPEND    RBRACK,ERORDESC
            RESET     ERORDESC                   
            CALL      PERR0000                   * print error line
            MOVE      TILDA14,SAVPRFX2
            MOVE      TILDA14,SAVPRFX3
            MOVE      TILDA14,SAVPRFX4
            MOVE      TILDA14,SAVPRFX5
            MOVE      TILDA14,SAVPRFX6
            GOTO      VCOD9200
          ENDIF
.
          MOVE      FILEPRFX,SAVPRFX2            * save O/P file prefix
.
VCOD0820  MATCH     FILEPRFX,SAVPRFX3            * same O/P file prefix ?
          GOTO      VCOD0830 IF EQUAL            * yes - don't reopen file
.
.         We have a new site prefix, so open the booking A file.
.
          CLOSE     OUTBOKA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,FILEPRFX,FILBOKA1
          OPEN      OUTBOKA1,CFNAME
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Booking A file not found (",ERORDESC
            ENDSET    ERORDESC
            APPEND    CFNAME,ERORDESC
            APPEND    RBRACK,ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      TILDA14,SAVPRFX3
            MOVE      TILDA14,SAVPRFX4
            MOVE      TILDA14,SAVPRFX5
            MOVE      TILDA14,SAVPRFX6
            GOTO      VCOD9200
          ENDIF
.
          MOVE      FILEPRFX,SAVPRFX3            * save O/P file prefix
.
VCOD0830  MATCH     FILEPRFX,SAVPRFX4            * same O/P file prefix ?
          GOTO      VCOD0840 IF EQUAL            * yes - don't reopen file
.
.         We have a new site prefix, so open the session file.
.
          CLOSE     OUTSESA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,FILEPRFX,FILSESA1
          OPEN      OUTSESA1,CFNAME
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Session file not found (",ERORDESC
            ENDSET    ERORDESC
            APPEND    CFNAME,ERORDESC
            APPEND    RBRACK,ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      TILDA14,SAVPRFX4
            MOVE      TILDA14,SAVPRFX5
            MOVE      TILDA14,SAVPRFX6
            GOTO      VCOD9200
          ENDIF
.
          MOVE      FILEPRFX,SAVPRFX4            * save O/P file prefix
.
VCOD0840  MATCH     FILEPRFX,SAVPRFX5            * same O/P file prefix ?
          GOTO      VCOD0850 IF EQUAL            * yes - don't reopen file
.
.         We have a new site prefix, so open the master header file.
.
          CLOSE     OUTHEDA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,FILEPRFX,FILHEDA1
          OPEN      OUTHEDA1,CFNAME
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Master Header file not found (",ERORDESC
            ENDSET    ERORDESC
            APPEND    CFNAME,ERORDESC
            APPEND    RBRACK,ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      TILDA14,SAVPRFX5
            MOVE      TILDA14,SAVPRFX6
            GOTO      VCOD9200
          ENDIF
.
          MOVE      FILEPRFX,SAVPRFX5            * save O/P file prefix
.
VCOD0850  MATCH     FILEPRFX,SAVPRFX6            * same O/P file prefix ?
          GOTO      VCOD0860 IF EQUAL            * yes - don't reopen file
.
.         We have a new site prefix, so open the diagnosis file.
.
          CLOSE     OUTDIAG1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,FILEPRFX,FILDIAG1
          OPEN      OUTDIAG1,CFNAME
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Diagnosis file not found (",ERORDESC
            ENDSET    ERORDESC
            APPEND    CFNAME,ERORDESC
            APPEND    RBRACK,ERORDESC
            RESET     ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      TILDA14,SAVPRFX6
            GOTO      VCOD9200
          ENDIF
.
          MOVE      FILEPRFX,SAVPRFX6            * save O/P file prefix
.
VCOD0860  CALL      CBOK0000                     * slot is available ?
          BRANCH    EXIT,VCOD9300                * no
.
          CALL      GHOS0000                     * hospital code found ?
          BRANCH    EXIT,VCOD9200                * no
.
          CALL      CHKR0000                     * check for mandatory referral
          BRANCH    EXIT,VCOD9200                * error
.
.         Check if the Booking B record already exists
.
          BRANCH    VCHKFLAG,VCOD9999
.
          MOVE      DIM8A,KEY8
          CALL      RDABOKB1
          IF        OVRCD = 0
            MOVE      "Booking B record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      VCOD9200
          ENDIF
.
          GOTO      VCOD9999
.
.         Validate an outpatient clinic id code field (outcliaf)
.
VCOD0900  MOVE      TEMPCODE,DIM6
          PACK      KEY20,BOOKSITE,DIM6,TILDA14
          CALL      RDCLIA1                      * valid code ?
          IF        OVRCD = 1
            CALL      RDPCLIA1                   * no - read previous record
            BRANCH    OVRCD,VCOD9100             * error
.
            MATCH     OCASITE,BOOKSITE           * same site still ?
            GOTO      VCOD9100 IF NOT EQUAL      * no - error
.
            MATCH     OCACLIN,TEMPCODE           * same clinic id still ?
            GOTO      VCOD9100 IF NOT EQUAL      * no - error
          ENDIF
          GOTO      VCOD9999
.
.         Validate a web user id code (websecaf)
.
VCOD1000  PACK      KEY10,TEMPCODE,SP10
          CALL      RDWBSE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
VCOD9200  MOVE      ONE,ERORFLAG                 * set code error flag
          GOTO      VCOD9999
.
VCOD9300  MOVE      TWO,ERORFLAG
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   VURN0000       *
.* Returns:  CLNO - updated page line count                   NERR0000       *
.*                                                            VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          MOVE      PSNAME,PACSNAME              * format patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM18
.
          UNPACK    BOOKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      SP8,DIM8
          IF        VCHKFLAG = 0
            MOVE      DIM8A,DIM8
          ENDIF
          PRINT     *1,PIPE,*3,BOOKURNO,*12,PIPE,*14,DIM18:
                    *33,PIPE,*35,DIM8,*44,PIPE,*46,BOOKSITE:
                    *53,BOOKCLIN,*60,CPCDATE,*71,BOOKSTRT,*78,BOOKTIME:
                    *84,PIPE,*86,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*                              VURN0000           Called by: UPLD0000       *
.*                        Validate U/R Number                                *
.* Requires: BOOKURNO - U/R number (right justified)                         *
.* Returns:  Valid read on PMI data                                          *
.*           EXIT  0 = PMI record found - ok to continue                     *
.*                 1 = PMI record not found - ignore record                  *
.*          UNKCOUNT - updated count of unknown U/R numbers                  *
.*          OBAURNO  - U/R number (right justified)                          *
.*****************************************************************************
.
VURN0000  MATCH     SP8,BOOKURNO                 * blank U/R ?
          IF        @EQUAL
            MOVE      "U/R missing ",ERORDESC    * yes
            GOTO      VURN9150
          ENDIF
.
          MOVE      BOOKURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          MOVE      BOOKURNO,KEY8
          CALL      RDPMPX21                     * U/R on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          COMPARE   ONE,PSTAT                    * merged U/R ?
          GOTO      VURN1000 IF EQUAL            * yes
.
          COMPARE   ONE,PCEASE
          IF        @EQUAL
            MOVE      "Patient deceased ",ERORDESC
            GOTO      VURN9150
          ENDIF
          GOTO      VURN9000
.
.         We have a merged U/R record, so get the new U/R
.
VURN1000  MATCH     PPSNAME,SP20                 * blank previous name field ?
          GOTO      VURN9100 IF EQUAL            * yes - error
.
          MOVE      PPSNAME,BOOKURNO             * no - load new U/R
          GOTO      VURN0000                     * get new pmi record
.
VURN9000  MOVE      ZERO,EXIT
          GOTO      VURN9999
.
VURN9100  MOVE      "PMI Record not found ",ERORDESC
VURN9150  CALL      PERR0000                     * print error line
          ADD       ONE,UNKCOUNT                 * increment unknown U/R count
          MOVE      ONE,EXIT
.
VURN9999  RETURN
+
.*****************************************************************************
.*                              CBOK0000           Called by: UPLD0000       *
.*        Check if the booking slot is available on outbokaf.                *
.*        Don't worry about any extended slots at this stage.  This will     *
.*        be handled later in CEXT0000.                                      *
.* Requires: BOOKSITE - O/P site                                             *
.*           BOOKCLIN - O/P clinic id                                        *
.*           BOOKDATE - O/P clinic date                                      *
.* Returns:  EXIT   0 = booking slot is available                            *
.*                  1 = booking slot not available or not found              *
.*           SLTFNDFL - Slot found flag                                      *
.*                  0 = Slot found                                           *
.*                  1 = Slot not found                                       *
.*****************************************************************************
.
.         First, get the start time for the session.
.
CBOK0000  MOVE      SP70,SAVKEY25                * initialise saved session key
.
          PACK      KEY25,BOOKSITE,BOOKCLIN,BOOKDATE,TILDA14
          CALL      RDSSESA1                     * position after date sessions
CBOK0100  CALL      RDPSESA1                     * read previous record
          BRANCH    OVRCD,CBOK0300               * eof - error
.
          MATCH     BOOKSITE,OSESITE             * same site still ?
          GOTO      CBOK0300 IF NOT EQUAL        * no - error
.
          MATCH     BOOKCLIN,OSECLIN             * same clinic id still ?
          GOTO      CBOK0300 IF NOT EQUAL        * no - error
.
          MATCH     BOOKDATE,OSEDATE             * same date still ?
          GOTO      CBOK0300 IF NOT EQUAL        * no - error
.
.         If the booking time is prior to the session time, then save the
.         session key as we can overbook the session if there are no other
.         valid sessions found on the same day (TSK 0824506)
.
          MATCH     OSESTRT,BOOKTIME             * booking time < start time ?
          IF        @LESS
            PACK      SAVKEY25,OSESITE,OSECLIN,OSEDATE,OSESTRT * save sess. key
            GOTO      CBOK0100                   * get previous record
          ENDIF
.
CBOK0200  MOVE      OSESTRT,BOOKSTRT             * load clinic start date
.
.         Save sess. key for temp file
.
          PACK      SESSNKEY,OSESITE,OSECLIN,OSEDATE,OSESTRT
          GOTO      CBOK0400
.
.         We haven't found a valid session for the booking time, so check
.         to see if the booking time was prior to another session on the
.         same day (SAVKEY25 is not blank) and if so, then use the saved
.         session and proceed so that this becomes an overbooking (TSK 0824506)
.
CBOK0300  MATCH     SP70,SAVKEY25
          IF        !@EQUAL
            MOVE      SAVKEY25,KEY25
            CALL      RDSESA1                    * saved session found ?
            BRANCH    OVRCD,CBOK0350             * no - error
            GOTO      CBOK0200                   * yes - proceed to overbook
          ENDIF
.
CBOK0350  MOVE      "Session Master record not found",ERORDESC
          CALL      PERR0000                     * print error line
          GOTO      CBOK9900
.
.         We have the session start time, so check if the slot exists
.
CBOK0400  PACK      KEY28,BOOKSITE,BOOKCLIN,BOOKDATE,BOOKSTRT,SP30
          CALL      RDSBOKA1                     * position on clinic/date
CBOK0500  CALL      RDKBOKA1                     * read next record
          BRANCH    OVRCD,CBOK9100               * eof - error
.
          MATCH     BOOKSITE,OBASITE             * same site still ?
          GOTO      CBOK9100 IF NOT EQUAL        * no - error
.
          MATCH     BOOKCLIN,OBACLIN             * same clinic id still ?
          GOTO      CBOK9100 IF NOT EQUAL        * no - error
.
          MATCH     BOOKDATE,OBADATE             * same clinic date still ?
          GOTO      CBOK9100 IF NOT EQUAL        * no - error
.
          MATCH     BOOKSTRT,OBASTRT             * same clinic start time ?
          GOTO      CBOK9100 IF NOT EQUAL        * no - error
.
          MATCH     BOOKTIME,OBATIME             * same time as slot ?
          GOTO      CBOK1000 IF EQUAL            * yes
          GOTO      CBOK0500 IF LESS             * slot too early - get next rec
          GOTO      CBOK9100                     * slot after - error
.
.         We have found a booking slot for the same time
.
CBOK1000  COMPARE   ZERO,OBASTAT                 * slot available ?
          GOTO      CBOK0500 IF NOT EQUAL        * no - get next booking
.
.         The slot is available, so save the slot number so that it
.         can be used as the parent slot (obaexsl) if we need to use
.         extended slots for this booking.
.
          MOVE      OBASLOT,PRNTSLOT             * save parent slot for booking
CBOK9000  MOVE      ZERO,SLTFNDFL                * set slot found flag
.
          MOVE      ZERO,EXIT
          GOTO      CBOK9999
.
.         No booking slot was found, so check if we can overbook
.
CBOK9100  CALL      OBOK0000
          BRANCH    EXIT,CBOK9900                * unable to overbook
          GOTO      CBOK9000                     * successful overbooking made
.
CBOK9900  MOVE      ONE,EXIT
.
CBOK9999  RETURN
+
.*****************************************************************************
.*                            WVIS0000             Called by: UPLD0000       *
.*            Write a visit record to pmsvx1af                               *
.*****************************************************************************
.
WVIS0000  MOVE      OBAOUTNO,PMVXVISN            * load pmsvx1af fields
          MOVE      OBADATE,PMVXVSDT
          MOVE      PPOST,PMVXPOST
          MOVE      CURRDATE,PMVXCDTE
          MOVE      CTIMEIS,PMVXCTIM
          MOVE      "CONVBOOK  ",PMVXWEBC
          MOVE      BOOKPCOM,PMVXUDF1
.
.         Note: PMVXMHOS is set by GHOS0000
.
          MATCH     SP8,PPOST                    * blank postcode ?
          GOTO      WVIS1000 IF EQUAL            * yes
.
          MATCH     SP30,PSUBRB                  * blank suburb ?
          GOTO      WVIS1000 IF EQUAL            * yes
.
          MOVE      PPOST,DIM4                   * get SLA/ASGC code
          PACK      KEY56,PPOST,PSUBRB,SP10,PADD4,SP70                *C-240184
          CALL      RDIBPOS1
          IF        OVRCD = 0
            MOVE      IBPOASGC,PMVXASGC
          ELSE                                                        *I-240184
            PACK      KEY56,PPOST,PSUBRB,SP70
            CALL      RSIBPOS1
            CALL      RKIBPOS1
            BRANCH    OVRCD,WVIS1000
            MATCH     PPOST,IBPOPCOD
            IF        @EQUAL
              MATCH     PSUBRB,IBPOSUBR
              IF        @EQUAL
                MOVE      IBPOASGC,PMVXASGC
              ENDIF
            ENDIF
          ENDIF
.
WVIS1000  MATCH     ANSY,BOOKINTR
          IF        @EQUAL
            MOVE      ONE,PMVXINTR
          ELSE
            MOVE      ZERO,PMVXINTR
          ENDIF
.
          MATCH     "1",PMVXINTR
          IF        @EQUAL
            MOVE      PMPXLNG1,PMVXLNG1
          ENDIF
.
          MOVE      OBAOUTNO,KEY8
          CALL      RAPMVX11                     * visit on file already ?
          IF        OVRCD=1
            CALL      WRPMVX11                   * no
          ELSE
            MOVE      "Visit extension record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WVIS9999  RETURN
+
.*****************************************************************************
.*                              CVIS0000           Called by: UPLD0000       *
.*        Check if an alternate visit number record already exists on        *
.*        ibaalvaf.                                                          *
.* Requires: BOOKAVIS - Alternate Visit Number (left justified)              *
.* Returns:  EXIT  0 = No errors found                                       *
.*                 1 = Errors found                                          *
.*****************************************************************************
.
CVIS0000  BRANCH    TYPEFORM,CVIS9000            * acc record type
.
          MATCH     SP20,BOOKAVIS                * blank alternate visit no. ?
          GOTO      CVIS9000 IF EQUAL            * yes - finished
.
          PACK      KEY28,BOOKAVIS,SP30
          CALL      RSIBALV2                     * position on alt. visit no.
CVIS0500  CALL      RKIBALV2                     * read next record
          BRANCH    OVRCD,CVIS9000               * eof
.
          MATCH     BOOKAVIS,IBAVAVIS            * same alt. visit no. ?
          GOTO      CVIS9000 IF NOT EQUAL        * yes
.
          MATCH     " 1",IBAVTYPE                * eReferral type record ?
          GOTO      CVIS0500 IF EQUAL            * yes - ignore record
.
.         A legacy record already exists
.
          MOVE      "Alternate visit id already exists in ibaalvaf",ERORDESC
          CALL      PERR0000                     * print error line
          ADD       ONE,DUPCOUNT                 * increment dupl. record count
          MOVE      ONE,EXIT
          GOTO      CVIS9999
.
CVIS9000  MOVE      ZERO,EXIT
.
CVIS9999  RETURN
+
.*****************************************************************************
.*                              AVIS0000           Called by: UPLD0000       *
.*        Check if we need to create an alternate visit number record        *
.*        in ibaalvaf.                                                       *
.* Requires: BOOKAVIS - Alternate Visit Number (left justified)              *
.*           OBAOUTNO - webPAS Visit Number (right justified)                *
.*****************************************************************************
.
AVIS0000  MATCH     SP20,BOOKAVIS                * blank alternate visit no. ?
          GOTO      AVIS9999 IF EQUAL            * yes - finished
.
          MOVE      OBAOUTNO,KEY8
          CALL      RAIBALV1                     * webPAS visit already on file?
          IF        OVRCD = 0
            MOVE      "webPAS visit no. already exists on ibaalvaf",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ELSE
            MOVE      OBAOUTNO,IBAVVISN          * load field data
            MOVE      BOOKAVIS,IBAVAVIS
            MOVE      " 0",IBAVTYPE
            CALL      WRIBALV1                   * write alt. visit no. record
          ENDIF
.
AVIS9999  RETURN
+
.*****************************************************************************
.*                              GHOS0000           Called by: UPLD0000       *
.*        Get the hospital code from the clinic master file                  *
.* Requires: OBASITE  - site code                                            *
.*           OBACLIN  - clinic id                                            *
.*           OBADAY   - day indicator                                        *
.*           OBASTRT  - clinic start time                                    *
.* Returns:  PMVXMHOS - hospital code                                        *
.*           EXIT  0 = Hospital found                                        *
.*                 1 = Error finding hospital                                *
.*****************************************************************************
.
.         Using the session master fields, get the master header record
.         for this booking
.
GHOS0000  PACK      KEY28,BOOKSITE,BOOKCLIN,OSEDAY,BOOKSTRT,OSESSHNO,OSESSDAT
          CALL      RDOTHED1                     * master header on file ?
          IF        OVRCD = 1
            MOVE      "Master Header record not found (",ERORDESC
            GOTO      GHOS9100
          ENDIF
.
          MATCH     SP3,OTHEHOSP
          IF        @EQUAL
            MOVE      "Master Header hospital blank (",ERORDESC
            GOTO      GHOS9100
          ENDIF
.
          MOVE      OTHEHOSP,PMVXMHOS
.
          MOVE      ZERO,EXIT
          GOTO      GHOS9999
.
.         Error handling
.
GHOS9100  ENDSET    ERORDESC
          APPEND    CFNAME,ERORDESC
          APPEND    RBRACK,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
          MOVE      ONE,EXIT
.
GHOS9999  RETURN
+ 
.*****************************************************************************
.*                              CHKR0000           Called by: VCOD0000       *
.*                Check if Linked Referral is Mandatory for clinic booking   *
.* Requires: BOOKRVIS - Referral Visit Number                                *
.*           OTHEMREF - Valid read on outhedaf record (from GHOS0000)        *
.* Returns:  EXIT  0 = Ok to continue                                        *
.*                 1 = Error occurred                                        *
.*           SAVEREFL - saved referral visit number                          *
.*****************************************************************************
.
CHKR0000  MOVE      SP8,SAVEREFL                 * initialise saved referral #
.
          MATCH     SP20,BOOKRVIS                * blank referral number ?
          GOTO      CHKR1000 IF NOT EQUAL        * no
.
          MATCH     "1",OTHEMREF                 * Referral mandatory ?
          GOTO      CHKR9000 IF NOT EQUAL        * no
.
          MOVE      "Referral mandatory for clinic",ERORDESC
          CALL      PERR0000                     * print error line
          GOTO      CHKR9100
.
.         Referral Alternate visit number is populated, so get the webPAS
.         referral visit number from ibaalvaf
.
CHKR1000  PACK      KEY28,BOOKRVIS,SP30
          CALL      RSIBALV2                     * position on referral no.
CHKR1500  CALL      RKIBALV2                     * read next record
          BRANCH    OVRCD,CHKR8000               * eof - finished
.
          MATCH     BOOKRVIS,IBAVAVIS            * same legacy visit no. ?
          GOTO      CHKR8000 IF NOT EQUAL        * no - finished
.
          MATCH     " 1",IBAVTYPE                * eReferral type record ?
          GOTO      CHKR1500 IF EQUAL            * yes - ignore record
.
.         We have found the "legacy" O/P referral record, so save the
.         equivalent webPAS visit number
.
          MOVE      IBAVVISN,SAVEREFL
          GOTO      CHKR9000
.
CHKR8000  MATCH     "1",OTHEMREF                 * Referral mandatory ?
          GOTO      CHKR9000 IF NOT EQUAL        * no
.
          MOVE      "Referral alternate visit record not found",ERORDESC
          CALL      PERR0000                     * print error line
          GOTO      CHKR9100
.
CHKR9000  MOVE      ZERO,EXIT
          GOTO      CHKR9999
.
CHKR9100  MOVE      ONE,EXIT
.
CHKR9999  RETURN
.
+
.*****************************************************************************
.*                              WINS0000           Called by: UPLD0000       *
.*                Process any patient instructions                           *
.* Requires: BOOKINST - O/P patient instructions                             *
.*****************************************************************************
.
WINS0000  STRIP     BOOKINST                     * remove trailing spaces
          MOVELPTR  BOOKINST,COMMTLEN            * get comment field length
.
          COMPARE   ZERO,COMMTLEN                * any comments ?
          GOTO      WINS9999 IF EQUAL            * no - finished
.
          MOVE      ZERO,LINENUMB                * yes - initialise line number
.
WINS0500  MOVE      BOOKINST,DIM60
          PACK      DIM60,DIM60,SP70             * load comment line
.
          MOVE      OBAOUTNO,VSCTVIST            * load record variables
          MOVE      "013",VSCTTYPE
          ADD       ONE,LINENUMB                 * increment line number
          MOVE      LINENUMB,VSCTLINE
          PACK      VSCTDATA,DIM60,SP70
          PACK      VSCTUKEY,CCC,CYY,CMM,CDD,CTIMEIS,PRGID
          REP       " 0",VSCTUKEY
          PACK      VSCTUKEY,VSCTUKEY,SP30
          MOVE      SP30,VSCTSPAR
.
          PACK      KEY14,VSCTVIST,VSCTTYPE,VSCTLINE
          CALL      RAVSCMT1                     * record on file already ?
          IF        OVRCD = 1
            CALL      WRVSCMT1                   * no - write new record
          ELSE
            IF        OVRCD = 0
              MOVE      "Error writing instruction records ",ERORDESC
              CALL      PERR0000                 * print error line
              ADD       ONE,COMCOUNT             * increment comment error count
              GOTO      WINS9999
            ENDIF
          ENDIF
.
          COMPARE   COMMTLEN,SIXTY               * any more text ?
          GOTO      WINS9999 IF NOT LESS         * no - finished
.
.         There is at least one more line of comments to load
.
          BUMP      BOOKINST,60                  * move forward 60 characters
          SUB       SIXTY,COMMTLEN               * reduce string length by 60
          GOTO      WINS0500                     * process next line
.
WINS9999  RETURN
+
.*****************************************************************************
.*                              PCOM0000           Called by: UPLD0000       *
.*                Process any record related comments                        *
.* Requires: BOOKCOMM - comments field                                       *
.*           OBAOUTNO - visit number                                         *
.*           NOTENUMB - note number                                          *
.*           COMCOUNT - comment error count                                  *
.* Returns:  COMCOUNT - comment error count                                  *
.*****************************************************************************
.
PCOM0000  STRIP     BOOKCOMM                     * remove trailing spaces
          MOVELPTR  BOOKCOMM,COMMTLEN            * get comment field length
.
          COMPARE   ZERO,COMMTLEN                * any comments ?
          GOTO      PCOM9999 IF EQUAL            * no - finished
.
.         First we need to write a comment header record in vismdtaf
.
          MOVE      ZERO,NOTENUMB                * init. note number for visit
.
          MOVE      OBAOUTNO,VSMDVISN            * load visit number
          PACK      VSMDTYPE,ZERO,ONE,THREE      * load record type
          ADD       ONE,NOTENUMB                 * increment note number
          MOVE      NOTENUMB,VSMDNOTE
.
          MOVE      CURRDATE,VSMDDATE
          MOVE      CTIMEIS,VSMDTIME
          REP       " 0",VSMDTIME
          MOVE      "CONVBOOK  ",VSMDUSER
          MOVE      SP3,VSMDOCCG
          MOVE      ZERO,VSMDDELT
          MOVE      SP8,VSMDDDAT
          MOVE      SP8,VSMDDTIM
          MOVE      SP10,VSMDDUSE
          MOVE      SP3,VSMDDOCC
          PACK      VSMDSPAR,SP70,SP70
.
          PACK      KEY17,VSMDVISN,VSMDTYPE,VSMDNOTE
          CALL      RAVSMDT1                     * record on file already ?
          IF        OVRCD = 1
            CALL      WRVSMDT1                   * no - write new record
....        ADD       ONE,ADDCOUNT               * increment added record count
          ELSE
            IF        OVRCD = 0
              MOVE      "Error writing comment header record ",ERORDESC
              CALL      PERR0000                 * print error line
              ADD       ONE,COMCOUNT             * increment comment error count
              GOTO      PCOM9999
            ENDIF
          ENDIF
.
          MOVE      ZERO,LINENUMB                * yes - initialise line number
.
PCOM0500  MOVE      BOOKCOMM,DIM100
          PACK      DIM100,DIM100,SP70,SP30      * load comment line
.
          MOVE      VSMDVISN,VSMTVISN            * load visit number
          MOVE      VSMDTYPE,VSMTTYPE            * load record type
          MOVE      VSMDNOTE,VSMTNOTE
          ADD       ONE,LINENUMB                 * increment line number
          MOVE      LINENUMB,VSMTUNIQ
          MOVE      DIM100,VSMTCMNT              * load comment line
          MOVE      SP70,VSMTSPAR
.
          PACK      KEY20,VSMTVISN,VSMTTYPE,VSMTNOTE,VSMTUNIQ
          CALL      RAVSMTX1                     * record on file already ?
          IF        OVRCD = 1
            CALL      WRVSMTX1                   * no - write new record
          ELSE
            IF        OVRCD = 0
              MOVE      "Error writing comment detail records ",ERORDESC
              CALL      PERR0000                 * print error line
              ADD       ONE,COMCOUNT             * increment comment error count
              GOTO      PCOM9999
            ENDIF
          ENDIF
.
          COMPARE   COMMTLEN,HUNDRED             * any comments remaining ?
          GOTO      PCOM9999 IF NOT LESS         * no - finished
.
.         There is at least one more line of comments to load
.
          BUMP      BOOKCOMM,100                 * move forward 100 characters
          SUB       HUNDRED,COMMTLEN             * reduce string length by 100
          GOTO      PCOM0500                     * process next line
.
PCOM9999  RETURN
+
.*****************************************************************************
.*                              WLNK0000           Called by: UPLD0000       *
.*                Check if we need to write a linked referral record         *
.* Requires: SAVEREFL - Saved O/P Referral visit number for webPAS           *
.*****************************************************************************
.
WLNK0000  MATCH     SP8,SAVEREFL                 * referral visit no. blank ?
          GOTO      WLNK9999 IF EQUAL            * yes - finished
.
          MOVE      SAVEREFL,ALLNVISN
          MOVE      OBAOUTNO,ALLNLNKV
          CALL      RAALLNK1
          IF        OVRCD = 1
            MOVE      OBASITE,ALLNSITE
            MOVE      OBACLIN,ALLNCLIN
            MOVE      OBADATE,ALLNDATE
            MOVE      OBASTRT,ALLNSTRT
            MOVE      OBASLOT,ALLNSLOT
            MOVE      SP1,ALLNMOHR
            MOVE      SP1,ALLNRCST
            MOVE      ZERO,ALLNSTAT
            PACK      ALLNSPAR,SP30,SP10
            CALL      WRALLNK1                   * write link record
          ENDIF
.
WLNK9999  RETURN
+
.*****************************************************************************
.*                             WPRE0000            Called by: UPLD0000       *
.*                   Write an O/P pre-attendance record                      *
.*****************************************************************************
.
WPRE0000  MOVE      OBAOUTNO,KEY8
          CALL      RDPREA1                      * outpreaf record found ?
          IF        OVRCD = 1
            MOVE      OBAOUTNO,KEY8              * no - add record
            MOVE      OBASITE,OPRSITE
            MOVE      OBACLIN,OPRCLIN
            MOVE      OBADATE,OPRDATE
            MOVE      OBASTRT,OPRSTRT
            MOVE      OBASLOT,OPRSLOT
            MOVE      OBATIME,OPRTIME
            MOVE      OBACTYP,OPRCTYP
            MOVE      SP20,OPRSPAR
            CALL      WRPREA1
          ENDIF
.
WPRE9999  RETURN
+
.*****************************************************************************
.*                             WCUR0000            Called by: UPLD0000       *
.*         Check if we need to write a record to the current patient file    *
.* Requires: Valid read on outhedaf record                                   *
.*****************************************************************************
.
WCUR0000  CALL      GRNG0000                     * get date range for current pt
.
          MATCH     STRTDATE,OBADATE             * booking date < start date
          GOTO      WCUR9999 IF LESS             * yes - not current patient
.
          MATCH     OBADATE,LASTDATE             * booking date > end date
          GOTO      WCUR9999 IF LESS             * yes - not current patient
.
          MOVE      OBAOUTNO,PMCUVISN
          MOVE      OBADATE,PMCUDATE
          MOVE      PTMASNAM,PMCUSURN
          MOVE      PMPXFNAM,PMCUGNAM
          MOVE      PMPXSNAM,PMCUGNM2
          MOVE      PURNO,PMCUURNO
          MOVE      TWO,PMCUSYST
          MOVE      SP70,PMCULOCN
          MOVE      OBASITE,PMCUOSIT
          MOVE      OTHEHOSP,PMCUHOSP
          MOVE      SP70,PMCUTSTA
          MOVE      SP70,PMCUTLOC
          MOVE      SP70,PMCUSPAR

.
          MOVE      OBAOUTNO,KEY8
          CALL      RAPMCUR1
          IF        OVRCD = 1
            CALL      WRPMCUR1                   * write pmscuraf record
          ENDIF
.
WCUR9999  RETURN
+
.*****************************************************************************
.*                             GRNG0000            Called by: WCUR0000       *
.*           Get the date range which defines a current patient              *
.* Requires: Previous CALL to IBACLOCK                                       *
.*****************************************************************************
.
GRNG0000  MOVE      SP70,STRTDATE                * init. date range variables
          MOVE      SP70,LASTDATE
.
.         Calculate starting date
.
          MOVE      CCC,CC
          MOVE      CYY,YY
          MOVE      CMM,MM
          MOVE      CDD,DD
          CALL      DMYCON                       * get current julian day
.
          SUB       CWEBSDAY,JULDAY              * subtract search days
.
          MOVE      JULDAY,JWKDAY                * convert to gregorian date
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      STRTDATE,CC,YY,MM,DD
          REP       " 0",STRTDATE
.
.         Calculate last date
.
          MOVE      CCC,CC
          MOVE      CYY,YY
          MOVE      CMM,MM
          MOVE      CDD,DD
          CALL      DMYCON                       * get current julian day
.
          ADD       CWEBSDAY,JULDAY              * subtract search days
.
          MOVE      JULDAY,JWKDAY                * convert to gregorian date
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      LASTDATE,CC,YY,MM,DD
          REP       " 0",LASTDATE
.
GRNG9999  RETURN
+
.*****************************************************************************
.*                             WPRA0000            Called by: UPLD0000       *
.*           Create a PRA record for this booking                            *
.* Requires: Valid read on patma1af                                          *
.*****************************************************************************
.
WPRA0000  MATCH   SP3,SAVETOCC                   * blank type of contact code ?
          GOTO    WPRA1000 IF EQUAL              * yes - default PRA to self
.
.         First see if there is a PRA Type of Contact on pmscexaf for this
.         this patient and if so, use this as the PRA.
.
          PACK    KEY14,PURNO,SAVETOCC,SP70
          CALL    RSPMCEX1                       * contact on file ?
WPRA0500  CALL    RKPMCEX1
          BRANCH  OVRCD,WPRA1000                 * no - default to self
.
          MATCH  PURNO,PMCEURNO                  * Correct U/R
          GOTO   WPRA1000 IF NOT EQUAL
.
          MATCH  SAVETOCC,PMCECONT               * correct contact type
          GOTO   WPRA1000 IF NOT EQUAL
.
          MATCH  "1",PMCEACTV                    * skip contact if inactive 
          GOTO   WPRA0500 IF EQUAL
.
.         We have a contact for PRA, so use these details
.
          MOVE    PMCESNAM,PACSNAMX              * format name
          MOVE    PMCEGNAM,ANS
          PACK    PACGNAME,ANS,DOT
          MOVE    PMCETITL,PACTITLE
          MOVE    THREE,PACFRMT
          CALL    PACNAME
.
          MOVE    PACFNAMX,PKNAME                * load record variables
          MOVE    PMCEADD1,PKADD1
          MOVE    PMCEADD2,PKADD2
          MOVE    PMCEADD3,PKSUBR
          MOVE    PMCEADD4,PKADD4
          MOVE    PMCEPOST,PKPOST
          MOVE    PMCETELP,PKTELEP
          MOVE    PMCETELB,PKTELEB
          MOVE    PMCERELP,PKRELP
          GOTO    WPRA2000
.
.         No contact found for this U/R, so default PRA to "self".
.
WPRA1000  MOVE    PTMASNAM,PACSNAMX                * format name
          MOVE    PGNAME,ANS
          PACK    PACGNAME,ANS,DOT
          MOVE    PTITL,PACTITLE
          MOVE    THREE,PACFRMT
          CALL    PACNAME
.
          MOVE    PACFNAMX,PKNAME                * load record variables
          MOVE    PADD1,PKADD1
          MOVE    PADD2,PKADD2
          MOVE    PSUBRB,PKSUBR
          MOVE    PADD4,PKADD4
          MOVE    PPOST,PKPOST
          MOVE    PTELEP,PKTELEP
          MOVE    PTELEB,PKTELEB
          MOVE    "SELF      ",PKRELP
.
WPRA2000  MOVE    OBAOUTNO,PKADMN
.
          MOVE    OBAOUTNO,KEY8
          CALL    RDARESP1                       * PRA record on file ?
          IF      OVRCD = 1
            CALL    WRRESP1                      * no - write PRA record
          ENDIF
.
WPRA9999  RETURN
+
.*****************************************************************************
.*                             WDIA0000            Called by: UPLD0000       *
.*           Write a diagnosis record if the diagnosis code and/or           *
.*           description are populated.                                      *
.* Requires: BOOKDIAG - diagnosis code                                       *
.*           BOOKDDES - diagnosis description                                *
.*****************************************************************************
.
WDIA0000  MATCH     SP9,BOOKDIAG                 * diagnosis code blank ?
          IF        @EQUAL
            MATCH     BOOKDDES,SP70              * diagnosis description blank ?
            GOTO      WDIA9999 IF EQUAL          * yes
          ENDIF
.
          MOVE      OBAOUTNO,KEY8
          CALL      RDDIAG1                      * diagnosis record on file ?
          IF        OVRCD = 1
            MOVE      BOOKDIAG,OPDICODE          * no - load variables
            MOVE      BOOKDDES,OPDIDESC
            MOVE      SP9,OPDICOD2
            MOVE      SP70,OPDIDES2
            MOVE      SP9,OPDICOD3
            MOVE      SP70,OPDIDES3
            MOVE      SP9,OPDICOD4
            MOVE      SP70,OPDIDES4
            MOVE      SP9,OPDICOD5
            MOVE      SP70,OPDIDES5
            MOVE      SP70,OPDISPAR
            MOVE      OBAOUTNO,KEY8
            CALL      WRDIAG1
          ENDIF
.
WDIA9999  RETURN
+
.*****************************************************************************
.*                              CEXT0000           Called by: UPLD0000       *
.*        Check if we need to use extended slots for this booking            *
.* Requires: Valid read on parent outbokaf booking record                    *
.*           SAVSLTNO - number of slots to use for booking (Cat CV)          *
.*           PRNTSLOT - saved parent slot for booking                        *
.* Returns:  EXTCOUNT - update extended slot error count                     *
.*****************************************************************************
.
CEXT0000  BRANCH    OVERBOOK,CEXT9999            * overbooking used
          BRANCH    TYPEFORM,CEXT9999            * acc type record
.
          MOVE      ONE,COUNTER                  * initialise slots used count
.
.         Get the next booking record from outbokaf
.
CEXT0500  CALL      RDKBOKA1                     * read next slot record
          BRANCH    OVRCD,CEXT9100               * eof - finished
.
          MATCH     BOOKSITE,OBASITE             * same site still ?
          GOTO      CEXT9100 IF NOT EQUAL        * no - finished
.
          MATCH     BOOKCLIN,OBACLIN             * same clinic id still ?
          GOTO      CEXT9100 IF NOT EQUAL        * no - finished
.
          MATCH     BOOKDATE,OBADATE             * same clinic date still ?
          GOTO      CEXT9100 IF NOT EQUAL        * no - finished
.
          MATCH     BOOKSTRT,OBASTRT             * same clinic start time ?
          GOTO      CEXT9100 IF NOT EQUAL        * no - finished
.
.         Check that the status is either "0" (available) or "3" (extended).
.         If not, then we have finished our search for slots.
.
          IF        OBASTAT <> 3 & OBASTAT <> 0
            GOTO      CEXT9100
          ENDIF
.
.         A slot has been found with a valid status 
.
          COMPARE   ZERO,OBASTAT                 * slot available ?
          GOTO      CEXT5000 IF NOT EQUAL        * no - process extended slot
.
.         This is an "available" slot, so check if the number of slots
.         required have been booked and if so, no more processing is required.
.
          COMPARE   SAVSLTNO,COUNTER             * all slots processed ?
          GOTO      CEXT9999 IF EQUAL            * yes - finished
.
.         Not all the required slots have been booked, so use this slot as
.         an extended slot.
.
          ADD       ONE,COUNTER                  * increment slot used count
          MOVE      PRNTSLOT,OBAEXSL             * load parent slot
          MOVE      BOOKVIST,OBAVISIT            * load new visit type
          MOVE      THREE,OBASTAT                * load new status (extended)
          BRANCH    VCHKFLAG,CEXT0500            * validation only run
.
          CALL      UPBOKA1                      * update booking A record
          GOTO      CEXT0500                     * get the next booking record
.
.         This is an "extended" slot, so check if the number of slots
.         required have been booked and if so, 
.
CEXT5000  COMPARE   SAVSLTNO,COUNTER             * all slots processed ?
          GOTO      CEXT5500 IF EQUAL            * yes
.
.         Not all the required slots have not been booked, so we need
.         to use this extended slot for our booking.
.
          ADD       ONE,COUNTER                  * increment slot used count
          MOVE      PRNTSLOT,OBAEXSL             * load parent slot
          MOVE      BOOKVIST,OBAVISIT            * load new visit type
          MOVE      THREE,OBASTAT                * load new status (extended)
          BRANCH    VCHKFLAG,CEXT0500            * validation only run
.
          CALL      UPBOKA1                      * update booking A record
          GOTO      CEXT0500                     * get the next booking record
.
.         We don't need to use this slot as all required slots have been
.         booked, so reset the record to a "Revisit/Follow-up" slot
.         type which is "available".
.
CEXT5500  MOVE      ZERO,OBAEXSL                 * clear parent slot
          MOVE      DFSLTTYP,OBAVISIT            * load default visit type
          MOVE      ZERO,OBASTAT                 * load new status (available)
          BRANCH    VCHKFLAG,CEXT0500            * validation only run
.
          CALL      UPBOKA1                      * update booking A record
          GOTO      CEXT0500                     * get the next booking record
.
.         No more matching booking records found, so check if all the
.         required slots have been booked
.
CEXT9100  COMPARE   SAVSLTNO,COUNTER             * all slots processed ?
          GOTO      CEXT9999 IF EQUAL            * yes - finished
.
          MOVE      "Extended Booking Slot not found ",ERORDESC
          CALL      PERR0000                     * print error line
          ADD       ONE,EXTCOUNT                 * increment error count
.
CEXT9999  RETURN
+
.*****************************************************************************
.*                              RCAL0000           Called by: UPLD0000       *
.*       Loop through all the sessions in the temp file and recalculate the  *
.*       statistics for each one now that all the bookings have been loaded. *
.*****************************************************************************
.
RCAL0000  BRANCH    VCHKFLAG,RCAL9999            * validation only
.
          DISPLAY   *P1:24,*EL,"Updating session statistics:";
.
.         Loop through all the sessions in the temp file
.
          MOVE      SP30,KEY25
          CALL      RSTEMP6                      * position at start of file
RCAL0500  CALL      RKTEMP6                      * read next record
          BRANCH    OVRCD,RCAL9999               * eof - finished
.
          DISPLAY   *P30:24,*EL,*V2LON,SESSNKEY;
.
          MOVE      SESSNKEY,KEY25
          CALL      RDSESA1                      * session record found ?
          BRANCH    OVRCD,RCAL0500               * no - get next session
.
          PACK      KEY28,OSESITE,OSECLIN,OSEDAY,OSESTRT,OSESSHNO,OSESSDAT
          CALL      RDOTHED1                     * master header record found ?
          BRANCH    OVRCD,RCAL0500               * no - get next session
.
.         Initialise all the session statistical fields
.
          MOVE      "00:00",OSETIMEU
          MOVE      ZERO,OSESLOTB                * slots booked
          MOVE      ZERO,OSESLOTS                * slots scheduled
          MOVE      ZERO,OSESSLTN                * New slots scheduled
          MOVE      ZERO,OSESSLTR                * Review slots scheduled
          MOVE      ZERO,OSESSLTS                * Special slots scheduled
          MOVE      ZERO,OSEBNEW                 * New slots scheduled
          MOVE      ZERO,OSEBRV                  * Review slots scheduled
          MOVE      ZERO,OSEBSPC                 * Special slots scheduled
          MOVE      ZERO,OSEANEW                 * New slots scheduled
          MOVE      ZERO,OSEARV                  * Review slots scheduled
          MOVE      ZERO,OSEASPC                 * Special slots scheduled
.
          CALL      CSLT0000                     * update session stats
.
          CALL      UPSESA1                      * update session record
          GOTO      RCAL0500                     * get next record
.
RCAL9999  RETURN
+
.*****************************************************************************
.*                              CSLT0000           Called by: UPLD0000       *
.*       Loop through all the bookings for the session and update the        *
.*       slot counts for the session.                                        *
.* Requires: Valid read on session record (outsesaf)                         *
.*           Valid read on master header record (outhedaf)                   *
.*****************************************************************************
.
CSLT0000  PACK      KEY28,OSESITE,OSECLIN,OSEDATE,OSESTRT,SP30
          CALL      RDSBOKA1                     * position on session
CSLT1000  CALL      RDKBOKA1                     * read next record
          BRANCH    OVRCD,CSLT9999               * eof - finished
.
          MATCH     OSESITE,OBASITE              * same site still ?
          GOTO      CSLT9999 IF NOT EQUAL        * no - finished
.
          MATCH     OSECLIN,OBACLIN              * same clinic id still ?
          GOTO      CSLT9999 IF NOT EQUAL        * no - finished
.
          MATCH     OSEDATE,OBADATE              * same booking date still ?
          GOTO      CSLT9999 IF NOT EQUAL        * no - finished
.
          MATCH     OSESTRT,OBASTRT              * same clinic start time ?
          GOTO      CSLT9999 IF NOT EQUAL        * no - finished
.
          COMPARE   THREE,OBASTAT                * extended slot ?
          GOTO      CSLT1000 IF EQUAL            * yes - ignore record
.
          COMPARE   SEVEN,OBASTAT                * unavailable slot ?
          GOTO      CSLT1000 IF EQUAL            * yes - ignore record
.
.         We have a booking record
.
          PACK      KEY5,ANSC,ANSV,OBAVISIT
          CALL      RDCODE1                      * visit type on file ?
          BRANCH    OVRCD,CSLT1000               * no - ignore record
.
          IF        TCFORM6 = 0
            MOVE      ONE,TCFORM6
          ENDIF
          ADD       TCFORM6,OSESLOTS             * update total slots scheduled
.
          IF        (OBASTAT = 1 | OBASTAT = 4 | OBASTAT = 5)
            ADD       TCFORM6,OSESLOTB           * update total slots booked
            CALL      ADDTIM00                   * update time statistics
          ENDIF
.
          MATCH     ANSN,TCINDC1                 * new visit ?
          GOTO      CSLT2000 IF NOT EQUAL        * no
.
          ADD       ONE,OSESSLTN                 * yes - update new bookings
          IF        (OBASTAT = 1 | OBASTAT = 5)
            ADD       ONE,OSEBNEW
          ENDIF
          IF        OBASTAT = 4
            ADD       ONE,OSEBNEW
            ADD       ONE,OSEANEW
          ENDIF
          GOTO      CSLT1000
.
CSLT2000  MATCH     ANSR,TCINDC1                 * revisit ?
          GOTO      CSLT3000 IF NOT EQUAL        * no
.
          ADD       ONE,OSESSLTR                 * yes - update revisit bookings
          IF        (OBASTAT = 1 | OBASTAT = 5)
            ADD       ONE,OSEBRV
          ENDIF
          IF        OBASTAT = 4
            ADD       ONE,OSEBRV
            ADD       ONE,OSEARV
          ENDIF
.
          GOTO      CSLT1000
.
CSLT3000  MATCH     ANSS,TCINDC1                 * special visit ?
          GOTO      CSLT1000 IF NOT EQUAL        * no
.
          ADD       ONE,OSESSLTS                 * yes - update special bookings
          IF        (OBASTAT = 1 | OBASTAT = 5)
            ADD       ONE,OSEBSPC
          ENDIF
          IF        OBASTAT = 4
            ADD       ONE,OSEBSPC
            ADD       ONE,OSEASPC
          ENDIF
          GOTO      CSLT1000
.
CSLT9999  RETURN
+
.*****************************************************************************
.*                              GTOC0000           Called by: INIT0000       *
.* Get the first type of contact code (where Cat tc ind. 1 is set to "6").   *
.* Returns:  SAVETOCC   - patcodes Cat tc code                               *
.*****************************************************************************
.
GTOC0000  PACK      KEY5,CATTC,SP3
          CALL      RDSCODE1                     * position on Cat tc
GTOC0500  CALL      RDKCODE1                     * read next record
          BRANCH    OVRCD,GTOC9100               * eof - finished
.
          MATCH     "tc",TCODE                   * same category still ?
          GOTO      GTOC9100 IF NOT EQUAL        * no - finished
.
          MATCH     "6",TCINDC1                  * is Indicator 1 = "6" ?
          GOTO      GTOC0500 IF NOT EQUAL        * no - get next record
.
          MOVE      ACODE,SAVETOCC               * save type of contact code
          GOTO      GTOC9999
.
GTOC9100  MOVE      SP3,SAVETOCC
.
GTOC9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      TFILENAM                     * get new tempfile name
          MOVE      TFILNAME,TEMPFILE
.
          CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      BOKTEMP6,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     BOKTEMP6                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*                              CLER0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
CLER0000  MOVE      SP30,KEY25
          CALL      RSTEMP6                      * position at start of file
          CALL      RKTEMP6                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          MOVE      SESSNKEY,KEY25
          CALL      DETEMP6                      * delete current record
          GOTO      CLER0000                     * get next record
.
CLER9999  RETURN
+
.*****************************************************************************
.*                                OBOK0000         Called by: CBOK0000       *
.*                         Add Overbooking Slot to a Session                 *
.*****************************************************************************
.
.         Get the last slot for the session.
.
OBOK0000  PACK      KEY28,BOOKSITE,BOOKCLIN,BOOKDATE,BOOKSTRT,TILDA14
          CALL      RDSBOKA1                     * position after clinic/date
OBOK0500  CALL      RDPBOKA1                     * read previous record
          BRANCH    OVRCD,OBOK9050               * eof - error
.
          MATCH     BOOKSITE,OBASITE             * same site still ?
          GOTO      OBOK9050 IF NOT EQUAL        * no - error
.
          MATCH     BOOKCLIN,OBACLIN             * same clinic id still ?
          GOTO      OBOK9050 IF NOT EQUAL        * no - error
.
          MATCH     BOOKDATE,OBADATE             * same clinic date still ?
          GOTO      OBOK9050 IF NOT EQUAL        * no - error
.
          MATCH     BOOKSTRT,OBASTRT             * same clinic start time ?
          GOTO      OBOK9050 IF NOT EQUAL        * no - error
.
          COMPARE   SIX,OBASTAT                  * suspended session ?
          GOTO      OBOK9050 IF EQUAL            * yes - error
.
.         Check slot number.
.         If the slot number is 999, then the session is full so we can't
.         create a booking.
.         If slot number is less than 900, then set the slot number to 900,
.         otherwise add one to slot.
.
          IF        OBASLOT = 999
            MOVE      "Session is fully booked",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      OBOK9100
          ENDIF
.
          IF        OBASLOT < 900
            MOVE      "900",OBASLOT
          ELSE
            ADD       ONE,OBASLOT
          ENDIF
.
          MOVE      OBACTYP,SAVECTYP
          MOVE      OBADAY,SAVEODAY
          MOVE      OBASLOT,SAVESLOT
.
.         Loop through Cat CV codes looking for a record with the same Ind. 1
.         value where Ind. 2 has a value of Z.
.         If no code is found - error.
.         If code is found, then booking can be created.
.
          PACK      KEY5,ANSC,ANSV,SP5
          CALL      RDCODE1                      * position on Cat CV
OBOK1000  CALL      RDKCODE1                     * read next record
          BRANCH    OVRCD,OBOK9050               * eof - error
.
          MATCH     "CV",TCODE                   * same Cat still ?
          GOTO      OBOK9050 IF NOT EQUAL        * no - error
.
          MATCH     BOOKVIST,ACODE               * same visit type as booking ?
          GOTO      OBOK1000 IF EQUAL            * yes - get next record
.
          MATCH     SAVINDC1,TCINDC1             * same visit type ?
          GOTO      OBOK1000 IF NOT EQUAL        * no - get next reord
.
          MATCH     ANSZ,TCINDC2                 * overbooking allowed ?
          GOTO      OBOK1000 IF NOT EQUAL        * no - ignore record
.
.         An overbooking code for the same visit type has been found,
.         so we can write a slot.
.
          CALL      WSLT0000
          BRANCH    EXIT,OBOK9100                * error writing slot
.
          MOVE      ONE,OVERBOOK                  * set flag for overbooking
          MOVE      ZERO,EXIT
          GOTO      OBOK9999
.
OBOK9050  MOVE      "Booking Slot not found/available ",ERORDESC
          CALL      PERR0000                     * print error line
OBOK9100  MOVE      ONE,EXIT
.
OBOK9999  RETURN
+
.*****************************************************************************
.*                                 WSLT0000        Called by: OBOK0000       *
.*                   Write a new empty slot to the bookings file             *
.* Returns: EXIT  0 = Ok to continue                                         *
.*                1 = Error occurred                                         *
.*****************************************************************************
.
WSLT0000  BRANCH    VCHKFLAG,WSLT9999            * validation only
.
          CALL      CLOUTBOA                     * clear the outbokaf variables
.
          MOVE      BOOKSITE,OBASITE             * reload basic slot details
          MOVE      BOOKCLIN,OBACLIN
          MOVE      BOOKDATE,OBADATE
          MOVE      BOOKSTRT,OBASTRT
          MOVE      SAVESLOT,OBASLOT
          MOVE      BOOKTIME,OBATIME
          MOVE      SAVECTYP,OBACTYP
          MOVE      ACODE,OBAVISIT
          MOVE      SAVEODAY,OBADAY
.
          PACK      KEY28,BOOKSITE,BOOKCLIN,BOOKDATE,BOOKSTRT,OBASLOT
          CALL      RDABOKA1                     * record on file already ?
          IF        OVRCD=1
            CALL      WRBOKA1                    * no - write the new record
            CALL      RDBOKA1                    * read ready for update later
.
            CALL      USES0000                   * update session counts
          ELSE
            MOVE      "Unable to create overbooking slot",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      WSLT9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      WSLT9999
.
WSLT9100  MOVE      ONE,EXIT
.
WSLT9999  RETURN
+
.*****************************************************************************
.*                            USES0000             Called by: WSLT0000       *
.*                    Update Session Counts                                  *
.* Requires: TCFORM6 - no. of slots for overbook visit type (from OBOK0000)  *
.*           BOOKSITE - O/P site                                             *
.*           BOOKCLIN - O/P clinic id                                        *
.*           BOOKDATE - O/P clinic date                                      *
.*           BOOKSTRT - O/P clinic start time                                *
.*****************************************************************************
.
USES0000  BRANCH    VCHKFLAG,USES9999            * validation only
.
          MOVE      ZERO,LOCKCNT                 * initialise lock try count
.
          IF        TCFORM6 = 0
            MOVE      ONE,TCFORM6
          ENDIF
.
.         Get the session record and update the slot statistics
.
USES1000  PACK      KEY25,BOOKSITE,BOOKCLIN,BOOKDATE,BOOKSTRT
          CALL      RLOTSES1
          BRANCH    OVRCD,USES9100:              * record not found
                          USES9000               * record locked
.
          ADD       TCFORM6,OSESLOTS             * increment session slots total
.
.         Update the new slots if the visit type is "N" (Indicator 1, Cat CV)
.
          MATCH     ANSN,TCINDC1
          IF        @EQUAL
            ADD       ONE,OSESSLTN
          ENDIF
.
.         Update the review slots if the visit type is "R" (Indicator 1, Cat CV)
.
          MATCH     ANSR,TCINDC1
          IF        @EQUAL
            ADD       ONE,OSESSLTR
          ENDIF
.
.         Update the special slots if the visit type is "S" (Indicator 1 Cat CV)
.
          MATCH     ANSS,TCINDC1
          IF        @EQUAL
            ADD       ONE,OSESSLTS
          ENDIF
.
          CALL      UPSESA1                      * update session record
          CALL      UUOTSES1                     * unlock session record
          GOTO      USES9999
.
.         Unable to read and lock session record, so wait and try again,
.         but only until we have tried 5 times.
.
USES9000  DISPLAY   *W                           * wait 1 second
          ADD       ONE,LOCKCNT                  * increment lock try count
.
          COMPARE   FIVE,LOCKCNT                 * 5 tries yet ?
          GOTO      USES1000 IF LESS             * no - try to lock again
.
.         Error Handling
.
USES9100  MOVE      "Unable to update session statistics",ERORDESC
          CALL      PERR0000                   * print error line
.
USES9999  RETURN
+
.*****************************************************************************
.*                              WINT0000       Called by: UPLD0000           *
.*              Write interpreter visit details                              *
.*****************************************************************************
.
WINT0000  MATCH     "1",PMVXINTR                 * interpreter req'd flag set ?
          GOTO      WINT9999 IF NOT EQUAL        * no - finished
.
.         Populate the visintaf fields and write a new record
.
          MOVE      OBAOUTNO,VSINVISN
          MOVE      OBADATE,VSINDATE
          PACK      VSINTIME,OBATIME,COLON,ZERO,ZERO
          MOVE      TWO,VSINTYPE
          PACK      VSINSUBK,OBASITE,OBACLIN,OBADATE,OBASTRT,OBASLOT,SP70
          MOVE      "CONVBOOK  ",VSINWUID
          MOVE      ZERO,VSINNOTF
          MOVE      ZERO,VSINCONF
          UNPACK    SP20,VSINUDC1,VSINUDC2,VSINUDC3,VSINUDC4
          UNPACK    SP70,VSININTP,VSINSPAR
.
          MOVE      OBAOUTNO,KEY8
          CALL      RAVSINT1
          IF        OVRCD = 0
            MOVE      "visintaf record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      WINT9999
          ELSE
            CALL      WRVSINT1
          ENDIF
.
          PACK      VSIACDAT,CCC,CYY,CMM,CDD
          REP       " 0",VSIACDAT
          MOVE      CTIMEIS,VSIACTIM
          MOVE      ANSA,VSIARTYP
          MOVE      VSINVISN,VSIAVISN
          MOVE      VSINDATE,VSIADATE
          MOVE      VSINTIME,VSIATIME
          MOVE      VSINTYPE,VSIATYPE
          MOVE      VSINSUBK,VSIASUBK
          MOVE      VSINWUID,VSIAWUID
          MOVE      PMPXLNG1,VSIALNG1
          MOVE      PMPXLNG2,VSIALNG2
          MOVE      PMPXLNG3,VSIALNG3
          MOVE      VSINNOTF,VSIANOTF
          MOVE      VSINCONF,VSIACONF
.
          PACK      KEY25,VSIACDAT,VSIACTIM,VSIARTYP,VSIAVISN
          CALL      RAVSIAU1
          IF        OVRCD = 0
            MOVE      "visiauaf record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
          ELSE
            CALL      WRVSIAU1
          ENDIF
.
WINT9999  RETURN
+
.*****************************************************************************
.*                              PSGL0000           Called by: SETV0000       *
.*            Populate the send generate letter variables                    *
.* Returns: OTBBSNGL - Send Generate Letter  (0=No, 1=Yes, 2=N/A)            *
.*          OTBBGLDT - Generate Letter Date                                  *
.*          ERORFLAG  0 = No errors encountered                              *
.*                    1 = Error encountered                                  *
.*****************************************************************************
.
.         Note: OTBBGLDT will be blank at this stage based on the CALL to
.               CLOUTBB1
.
.         If this is a "chart review" visit type (Cat CV, Ind 8 = "C"),
.         then set the send generate letter to "N/A"
.
PSGL0000  MATCH     ANSC,SAVINDC8                * Ind 8 set to "C" ?
          IF        @EQUAL
            MOVE      TWO,OTBBSNGL               * yes - set to N/A
            GOTO      PSGL9999
          ENDIF
.
.         This is not a "chart review" visit type, so check if BOOKSNGL
.         is populated
.
          MATCH     SP1,BOOKSNGL                 * send generate letter blank ?
          IF        @EQUAL
            MOVE      ZERO,OTBBSNGL              * yes
            GOTO      PSGL9999
          ENDIF
.
.         Check if BOOKSNGL is set to "N"
.
          MATCH     ANSN,BOOKSNGL                * send generate letter "N" ?
          IF        @EQUAL
            MOVE      ZERO,OTBBSNGL              * yes
            GOTO      PSGL9999
          ENDIF
.
.         BOOKSNGL is set to "Y", so calculate the number of days prior
.         when the letter should be sent
.
          MATCH     SP3,OTHENDPS
          IF        @EQUAL
            MOVE      "Number of days prior not set up ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
            GOTO      PSGL9999
          ENDIF
.
          TYPE      OTHENDPS
          IF        !@EQUAL
            MOVE      "Number of days prior not set up ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
            GOTO      PSGL9999
          ENDIF
.
          MOVE      OTHENDPS,FORM3
          UNPACK    BOOKDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
.
          SUB       FORM3,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      NDPSDATE,CC,YY,MM,DD
          REP       " 0",NDPSDATE
.
          MOVE      ONE,OTBBSNGL
          MATCH     CURRDATE,NDPSDATE
          IF        @LESS
            MOVE      CURRDATE,OTBBGLDT
          ELSE
            MOVE      NDPSDATE,OTBBGLDT
          ENDIF
.
PSGL9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RATEMP6   MOVE      ZERO,OVRCD
          READ      BOKTEMP6,KEY25;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP6   READ      BOKTEMP6,KEY25;;
          RETURN
.
RKTEMP6   MOVE      ZERO,OVRCD
          READKS    BOKTEMP6;SESSNKEY
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP6   WRITE     BOKTEMP6,KEY25;SESSNKEY
          RETURN
.
DETEMP6   DELETE    BOKTEMP6,KEY25
          RETURN
+
.*****************************************************************************
.*        Temp File I/O Routines                                             *
.*****************************************************************************
.
.RDTEMP1  Category-Codes (patcodes)  --
.RDTEMP2  Insurer (patin1af)          |  These routines are in ACCMAPIO.INC
.RDTEMP3  Employer (pateoraf)         |
.RDTEMP4  HCP (pmshcpaf)              |
.RDTEMP5  Title (pmstleaf)            |
.RDTEMP6  Relation (pmsrelaf)        __
.
.         O/P Clinic Id (outsitaf/outcliaf)
.
RDTEMP7   MOVE      ZERO,OVRCD
          RESET     KEY12
          READ      TEMP7,KEY12;OLDSITCD,OLDCLIID,NEWSITCD,NEWCLIID
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLOUTBOA
          INC       CLOUTBB1
          INC       CLPATMAS
          INC       CLPATWC1
          INC       CLPMSVX1
          INC       CLPMSWX1
          INC       COUNTSLT
          INC       GENANVIS
          INC       PATCODKY
          INC       TFILENAM
          INC       UPACCDAT
.
          INC       ACCCMTIO/INC
          INC       ACCMAPIO/INC
          INC       ALLLNKIO/INC
          INC       IBAALVIO/INC
          INC       IBAPOSIO/INC
          INC       IBASEQIO/INC
          INC       OUTBB1IO/INC
          INC       OUTBOAIO/INC
          INC       OUTCLIIO/INC
          INC       OUTDIAIO/INC
          INC       OUTHEDIO/INC
          INC       OUTPREIO/INC
          INC       PATRE1IO/INC
          INC       OUTSESIO/INC
          INC       OUTSITIO/INC
          INC       VISMDTIO/INC
          INC       VISMTXIO/INC
          INC       PATCODIO/INC
          INC       PATEORIO/INC
          INC       PATIN1IO/INC
          INC       PATMA1IO/INC
          INC       PATVISIO/INC
          INC       PATWC1IO/INC
          INC       PMSCEXIO/INC
          INC       PMSCURIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       PMSRELIO/INC
          INC       PMSTLEIO/INC
          INC       PMSVX1IO/INC
          INC       PMSWX1IO/INC
          INC       VISCMTIO/INC
          INC       VISIAUIO/INC
          INC       VISINTIO/INC
          INC       WEBERRIO/INC
          INC       WEBSECIO/INC
