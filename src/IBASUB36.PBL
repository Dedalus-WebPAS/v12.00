.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  11.04.2005 Peter Vela CAR 59696
.           Recompiled for SINUSAGE
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 01.11.2000 Sandra Barcham
.           Removed SINCCHFD & IO as not used
.-------------------------------------------------------
. VF.01.00  15.02.2000 Charles Handaya
.           Add Export Function  srf 637199
.           Change to standard Cost Centre Range Keyin
.-------------------------------------------------------
. VF.00.02  29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.-------------------------------------------------------
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.
COMITTED  FORM      1                   * 0 - Receival  1 - Purchase
CMDLINE   DIM       127
CHECKDSC  DIM       30
CHECKCST  DIM       5
CHECKSUB  DIM       5
ENDCST    DIM       5
FIRSTHRU  FORM      1
PAGEBRKF  FORM      1      * 0-No 1-Yes
NONDESC   INIT      " - Non-Stock Only"
KEY16CHK  DIM       16
REPTSTKF  FORM      1
REPTDESC  DIM       17
STKDESC   INIT      " - Stock Only    "
STRCST    DIM       5
SAVFLDID  DIM       2
SVKEY6    DIM       6
.
. ------- SINALL temp committed expenditure file - different to the
. ------- the file used in SINALLFD,CD and CALCUSAG though same name
SINALLA1  IFILE     SQL, FIXED=63, KEY="U1-5,36-40,41-46"        *KEY16
SINALLA2  IFILE     SQL, FIXED=63, KEY="U6-35,1-5,36-40,41-46"   *KEY46
.
SIALCST   DIM       5      5        1     Cost Centre
SIALDSC   DIM      30     30        6     Cost Centre Description
SIALSUB   DIM       5      5       36     Product Group
SIALDAT   DIM       6      6       41     Date CCYYMM
SIALCOM   FORM      12.2   8       47     Committed Expenditure
SIALBUD   FORM      12.2   8       55     Budget Expenditure
.                               --------
.                                  63
SINALLNM  DIM       8
SINALLAA  INIT      "sinall"
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB36
.   Function      :   Committed Expenditure Report            
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINCCAFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCIAFD/INC
          INC       SINCONFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSUAFD/INC
          INC       SINTMPDF/INC
.=========================
.Local Variable Definition
.-------------------------
FROMCST   DIM      46 * Scr 00 Fld     4
TOCST     DIM      46 * Scr 00 Fld     5
REPSEQ    FORM      1 * Scr 00 Fld     8
REPSEQD   DIM      30 * Scr 00 Fld     9
REPTSTCK  DIM       1 * Scr 00 Fld    12
EXPORTYN  FORM      1 * Scr 00 Fld    13
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB36"
PRGNAM    INIT      "Committed Expenditure Report            "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA1,"sincceaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA2,"sincceaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA1,"sinccfaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA2,"sinccfaf"
          DISPLAY   *P56:24,"Opening  sinciaaf           ";
          OPEN      SINCIAA1,"sinciaaf"          
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA2,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA3,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA4,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA5,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA6,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA7,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA2,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA3,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA4,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Scren                         
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Scren                         
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Scren                         
.-------------------------------------------------------
CF00L000
          MOVE      SP70,FROMCST 
          MOVE      SP70,TOCST   
          MOVE      ZERO,REPSEQ  
          MOVE      SP70,REPSEQD 
          MOVE      SP70,SIPEYEAR
          MOVE      SP70,SIPEPER 
          MOVE      SP70,REPTSTCK
          MOVE      ZERO,EXPORTYN
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Scren                         
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Scren                         
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Scren                         
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Scren                         
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Scren                         
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L999,PS00L999,PS00L103:
                            PS00L104,PS00L105,PS00L106,PS00L107:
                            PS00L108
          GOTO     PS00L999
.
PS00L101
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TOCST,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      REPSEQD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Scren                         
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L006,SF00L006,SF00L104:
                            SF00L006,SF00L105,SF00L106,SF00L107:
                            SF00L108
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L020,SF00L020,SF00L104:
                            SF00L020,SF00L105,SF00L106,SF00L107:
                            SF00L108
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PRNA0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCST   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECOS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCST,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,REPSEQD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KREPS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      REPSEQD,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          MOVE      "2",CKEYTYP
          CALL      ESTCK000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ONE,HNONUSAG
            WRITAB    CONTROLF,SIXTY3;*143,HNONUSAG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------------------------------------
. Set up screen 00
.----------------------------------------------------------------------
SETSCR00
          MOVE      ONE,ACCEPT              * set accept mode
.
          MOVE      ZERO,REPSEQ             * 0=code seq, 1=desc seq
          MOVE      "By Cost Centre Code           ",REPSEQD
.
..          CALL      DCAT0000                * default cost centre range
.
          RETURN
.----------------------------------------------------------------------
. Default range
.----------------------------------------------------------------------
..DCAT0000
..          PACK      FROMCOST,START,SP70
..          PACK      FCOST,SP70
..          PACK      FCDESC,SP70
.
..          PACK      TOCOST,END,SP70
..          PACK      TCOST,Z70
..          PACK      TCDESC,SP70
..          RETURN
.********************************************************************
. PRNA - print report for SICA                      Called by ML
.         Returns  : EXIT            (1=illegal range entered)
.********************************************************************
PRNA0000  MOVE      NONDESC,REPTDESC
          LOAD      REPTDESC,REPTSTKF,STKDESC
.
. ------- COMITTED   0-Receival 1-Purchase
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,SIXTY6;*24,COMITTED
.
          PACK      DAT6,SIPEYEAR,SIPEPER
.
          DISPLAY   *P1:24,"Printing :   ";
          CALL      MAKEXP00                     * create export file
.
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "599",CLNO                   * init last line number
          MOVE      ZERO,QTOTAL01                * clear grand totals
          MOVE      ZERO,QTOTAL02
          MOVE      ZERO,QTOTAL03
          MOVE      ZERO,QTOTAL04
          MOVE      ZERO,QTOTAL05
          MOVE      ZERO,QTOTAL06
.
          CALL      KLAL0000           * Kill old Temp File
          CALL      CRAL0000           * Create New Temp File
.
          IF        COMITTED=0
            CALL    LODR0000           * Load at Receival Time
          ELSE
            CALL    LODP0000           * Load at Purchase Time
          ENDIF
.
          PACK      KEY16,SP70
          PACK      KEY46,SP70
          PERFORM   REPSEQ,RSSIAL1,RSSIAL2  * Code,Desc Order
.
PRNA1000  PERFORM   REPSEQ,RKSIAL1,RKSIAL2  * Code,Desc Order
          BRANCH    OVRCD,PRNA8000               * end of file ?
.
          DISPLAY   *P12:24,*V2LON,SIALCST,*EL;
.
          CALL      WRIA0000                     * print details
          GOTO      PRNA1000                     * get next record
.
PRNA8000  IF        CPAGENO=0
            UNPACK    SP70,SICACODE,SICADESC
            CALL      HEAA0000                   * print head if nothing printed
          ENDIF
          CALL      PTOA0000                     * print totals
          CALL      UND132                       * print line
          PRINT     "****   End of Report   ****"
.
          CALL      TRAN0000
.
PRNA9000  MOVE      ZERO,EXIT                    * exit screen
          GOTO      PRNA9999
.
PRNA9500  MOVE      ONE,EXIT                     * continue
.
PRNA9999  CALL      KLAL0000
          RETURN
.********************************************************************
. HEAA - print report                               Called by PRNA
.********************************************************************
HEAA0000  CALL      HEAD132                      * print heading
.
          STRIP     REPSEQD
          ADD       "4",CLNO
          MATCH     "Stock",CHECKCST
          IF        @EQUAL
            MOVE      "Stock Replenishment           ",KEY30
          ELSE
            MATCH     SICACODE,SP70
            IF        @EQUAL & CPAGENO=0
              MOVE      "Not",CHECKCST
              MOVE      "Found                         ",KEY30
            ELSE
              PACK      KEY5,CHECKCST,SP70
              CALL      RDSICA1
              MOVE      SICADESC,KEY30
            ENDIF
          ENDIF
          PRINT     *+,*40,"Print ",REPSEQD," for ",SIPEPER,SLASH,SIPEYEAR:
                    REPTDESC:
                    *N,*40,"From : ",FROMCST:
                    *N,*40,"To   : ",TOCST:
                    *N,"Cost Centre : ",CHECKCST,SP2,KEY30
          CALL      UND132                       * print line
          PRINT     "| Product Group                        ":
                    "|  Period Actual  Period Budget       Variance":
                    "|     YTD Actual     YTD Budget   YTD Variance":
                    *132,"|"
          ADD       "1",CLNO
          CALL      UND132                       * print line
.
HEAA9999  RETURN
.********************************************************************
. WRIA - print data line                            Called by PRNA
.********************************************************************
WRIA0000  MOVE      "599",CLNO
          MOVE      ZERO,ATOTAL07
          MOVE      ZERO,ATOTAL08
          MOVE      ZERO,ATOTAL09
          MOVE      ZERO,ATOTAL10
          MOVE      ZERO,ATOTAL11
          MOVE      ZERO,ATOTAL12
          MOVE      ZERO,ATOTAL01
          MOVE      ZERO,ATOTAL02
          MOVE      ZERO,ATOTAL03
          MOVE      ZERO,ATOTAL04
          MOVE      ZERO,ATOTAL05
          MOVE      ZERO,ATOTAL06
.
          MOVE      SP70,CHECKCST
          MOVE      SP70,CHECKSUB
          PACK      KEY16,SP70
          PACK      KEY46,SP70
          PERFORM   REPSEQ,RSSIAL1,RSSIAL2  * Code,Desc Order
.
WRIA1000  PERFORM   REPSEQ,RKSIAL1,RKSIAL2  * Code,Desc Order
          IF        OVRCD=1
            CALL      GBUD0000        * Get Budget Figures
            CALL      PSUB0000        * Print Subjective
            CALL      PCST0000        * Print Cost Centre Total
            GOTO      WRIA9999
          ENDIF
.
. ------- First Time Thru Set Check Var and Reset Firsthru var
          IF        FIRSTHRU=TRUE
            MOVE      SIALCST,CHECKCST
            MOVE      SIALDSC,CHECKDSC
            MOVE      SIALSUB,CHECKSUB
            MOVE      FALSE,FIRSTHRU
          ENDIF
.
. ------- Has it Changed Cost Centres
          MATCH     SIALCST,CHECKCST    * Changed Cost Centres
          IF        !@EQUAL
            CALL      GBUD0000        * Get Budget Figures
            CALL      PSUB0000        * Print Subjective
            CALL      PCST0000        * Print Cost Centre Total
            CALL      UFIG0000        * Update YTD & PTD Figures
            MOVE      "600",CLNO
            GOTO      WRIA1000
          ENDIF
.
. ------- Past the keyed in Usage Period
          MATCH     SIALSUB,CHECKSUB  * Past the Period - New Total
          IF        !@EQUAL
            CALL      GBUD0000        * Get Budget Figures
            CALL      PSUB0000        * Print Subjective
            CALL      UFIG0000        * Update YTD & PTD Figures
            GOTO      WRIA1000
          ENDIF
.
          CALL      UFIG0000        * Update YTD & PTD Figures
          GOTO      WRIA1000
.
WRIA9999  RETURN
.-------------------------------------------------------------------
. Update the Actual and Year to Date Figures
.-------------------------------------------------------------------
UFIG0000  ADD       SIALCOM,ATOTAL04
.
          MATCH     DAT6,SIALDAT
          GOTO      UFIG9999 IF NOT EQUAL
.
          ADD       SIALCOM,ATOTAL01
.
UFIG9999  RETURN
.-------------------------------------------------------------------
. Get Budget Figures
.-------------------------------------------------------------------
GBUD0000  PACK      KEY16,SIALCST,SIALSUB,SIPEYEAR,SP70
          PACK      KEY16CHK,SIALCST,SIALSUB,DAT6
          CALL      RSSICF2
GBUD1000  CALL      RKSICF2
          BRANCH    OVRCD,GBUD9999
          PACK      KEY16,SICFCST,SICFSUB,SICFDAT
          MATCH     KEY16,KEY16CHK
          GOTO      GBUD9999 IF LESS
.
          ADD       SICFBUD,ATOTAL05
.
          MATCH     DAT6,SICFDAT
          GOTO      GBUD1000 IF NOT EQUAL
          MOVE      SICFBUD,ATOTAL02
.
GBUD9999  RETURN
.-------------------------------------------------------------------
. Print Subjective Totals
.-------------------------------------------------------------------
PSUB0000  ASSIGN    ATOTAL01-ATOTAL02,ATOTAL03
          ASSIGN    ATOTAL04-ATOTAL05,ATOTAL06
          IF        ATOTAL01<>0 | ATOTAL02<>0 | ATOTAL04<>0 | ATOTAL05<>0
            COMPARE   "55",CLNO                  * end of page ?
            CALL      HEAA0000 IF NOT LESS       * start new page
.
            CALL      WRTEXP00
.
            PRINT     "| ",CHECKSUB,SP2,CHECKDSC,"|",ATOTAL01,ATOTAL02:
                      ATOTAL03,"|",ATOTAL04,ATOTAL05,ATOTAL06:
                      *132,"|"
            ADD       "1",CLNO           * add one to line number
            MOVE      ONE,FOUNDX
          ENDIF
          ADD       ATOTAL01,ATOTAL07
          ADD       ATOTAL02,ATOTAL08
          ADD       ATOTAL03,ATOTAL09
          ADD       ATOTAL04,ATOTAL10
          ADD       ATOTAL05,ATOTAL11
          ADD       ATOTAL06,ATOTAL12
          MOVE      ZERO,ATOTAL01
          MOVE      ZERO,ATOTAL02
          MOVE      ZERO,ATOTAL03
          MOVE      ZERO,ATOTAL04
          MOVE      ZERO,ATOTAL05
          MOVE      ZERO,ATOTAL06
          MOVE      SIALSUB,CHECKSUB
          MOVE      SIALDSC,CHECKDSC
.
PSUB9999  RETURN
.-------------------------------------------------------------------
. Print Cost Centre Total
.-------------------------------------------------------------------
PCST0000  IF        FOUNDX=1
            CALL      UND132
            PRINT     "|        Cost Centre Total             ":
                      "|",ATOTAL07,ATOTAL08:
                      ATOTAL09,"|",ATOTAL10,ATOTAL11,ATOTAL12:
                      *132,"|"
            ADD       "1",CLNO         * add one to line number
          ENDIF
          ADD       ATOTAL07,QTOTAL01
          ADD       ATOTAL08,QTOTAL02
          ADD       ATOTAL09,QTOTAL03
          ADD       ATOTAL10,QTOTAL04
          ADD       ATOTAL11,QTOTAL05
          ADD       ATOTAL12,QTOTAL06
          MOVE      ZERO,ATOTAL07
          MOVE      ZERO,ATOTAL08
          MOVE      ZERO,ATOTAL09
          MOVE      ZERO,ATOTAL10
          MOVE      ZERO,ATOTAL11
          MOVE      ZERO,ATOTAL12
          MOVE      SIALCST,CHECKCST
.
PCST9999  RETURN
.********************************************************************
. PTOA - print totals                               Called by PRNA
.********************************************************************
PTOA0000  IF        (QTOTAL04=0) & (QTOTAL05=0) & (QTOTAL06=0)
            PRINT   "|No Product Group Data                 ":
                    *40,"|",*88,"|",*132,"|"
          ENDIF
          CALL      UND132
          PRINT     "|        Grand Total                   ":
                    "|",QTOTAL01,QTOTAL02:
                    QTOTAL03,"|",QTOTAL04,QTOTAL05,QTOTAL06:
                    *132,"|"
          ADD       "1",CLNO         * add one to line number
.
PTOA9999  RETURN
.-----------------------------------------------------------------
. Calculated Committed Expenditure at Receival Time
.-----------------------------------------------------------------
LODR0000  DISPLAY   *P1:23,*EL,"Loading Committed Expenditure .....";
          PACK      KEY6,SIPEYEAR,SP70
          CALL      RSSIPF3
.
LODR1000  CALL      RKSIPF3
          BRANCH    OVRCD,LODR9999
.
          ADD       ONE,SECTOR
          IF        (SECTOR%100=0)
             DISPLAY   *P1:24,"Scanning Receivals ",SECTOR," - ",SIPFPON,*EL;
          ENDIF
.
          MATCH     SIPFUDT,DAT6       * only process desired date range
          GOTO      LODR9999 IF LESS
.
          PACK      KEY7,SIPFPON,SP70
          CALL      RDSIPA1
          BRANCH    OVRCD,LODR1000     * get header data (should be there)
.
          PACK      KEY10,SIPFPON,SIPFITM,SP70
          CALL      RDSIPC1
          BRANCH    OVRCD,LODR1000     * get item data (should be there)
.
          MOVE      SIPCPRD,KEY5
          CALL      RDSISA1
          IF        OVRCD=1
            DISPLAY   *P50:24,*EL,"Product Group Missing : ",KEY5;
            GOTO      LODR1000
          ENDIF
.
          CALL      SNON0000                 * Set up non variables
          PACK      KEY7,SIPCCAT,SP70
          CALL      RDSIIA1
.
. ------- Check if within Ranges
          IF        (REPTSTKF=0 & SIIANON=0) | (REPTSTKF=1 & SIIANON=1)
            GOTO      LODR1000
          ENDIF
.
          MATCH     STRCST,SIPCCST
          GOTO      LODR1000 IF LESS
.
          MATCH     SIPCCST,ENDCST
          GOTO      LODR1000 IF LESS
.
          PACK      KEY16,SIPCCST,SIPCPRD,SIPFUDT
          CALL      RDSIAL1
          IF        OVRCD=1
            MOVE      SP70,SICADESC
            PACK      KEY5,SIPCCST
            CALL      RDSICA1
            PACK      SIALCST,SIPCCST,SP70
            PACK      KEY5,SIPCPRD,SP70
            CALL      RDSISA1
            PACK      SIALDSC,SISADESC,SP70
            PACK      SIALSUB,SIPCPRD,SP70
            PACK      SIALDAT,SIPFUDT
            ASSIGN    SIPFCST*SIPFQTY,SIALCOM
            MOVE      ZERO,SIALBUD
            IF        SIALCOM<>0
             CALL      WRSIAL1
            ENDIF
          ELSE
            ASSIGN    SIPFCST*SIPFQTY+SIALCOM,SIALCOM
            CALL      UPSIAL1
          ENDIF
          GOTO        LODR1000
.
LODR9999  RETURN
.-----------------------------------------------------------------
. Calculated Committed Expenditure at Receival Time
.-----------------------------------------------------------------
LODP0000  DISPLAY   *P1:23,*EL,"Loading Committed Expenditure .....";
          DISPLAY   *P1:24,"Scanning Purchasing - ",SIPCPON,*EL;
.
          PACK      KEY5,STRCST,SP70
          CALL      RSSICA1
          CALL      RPSICA1
.
          MATCH     "Stock",STRCST
          IF        @LESS | @EQUAL
            MATCH     "Stock",ENDCST
            IF        !@LESS
              MOVE      "Stock",SICACODE
              GOTO      LODP1500
            ENDIF
          ENDIF
.
LODP1000  CALL      RKSICA1
          BRANCH    OVRCD,LODP9999
.
          MATCH     SICACODE,ENDCST
          GOTO      LODP9999 IF LESS
.
LODP1500  PACK      KEY21,SICACODE,SIPEYEAR,SP70
          CALL      RSSIPC2
.
LODP2000  CALL      RKSIPC2
          BRANCH    OVRCD,LODP1000
.
          MATCH     SICACODE,SIPCCST
          GOTO      LODP1000 IF NOT EQUAL
.
          MATCH     SIPCDAT,DAT6       * only process desired date range
          GOTO      LODP1000 IF LESS
.
          MOVE      SIPCPRD,KEY5
          CALL      RDSISA1
          IF        OVRCD=1
            DISPLAY   *P1:22,*EL,"Product Group Missing : ",KEY5;
            CALL      HITENTER
            GOTO      LODP2000
          ENDIF
.
          CALL      SNON0000                 * Set up non variables
          PACK      KEY7,SIPCCAT,SP70
          CALL      RDSIIA1
.
. ------- Check if within Ranges
          IF        (REPTSTKF=0 & SIIANON=0) | (REPTSTKF=1 & SIIANON=1)
            GOTO      LODP2000
          ENDIF
.
          DISPLAY   *P23:24,SIPCPON
.
          PACK      KEY16,SIPCCST,SIPCPRD,SIPCDAT
          CALL      RDSIAL1
          IF        OVRCD=1
            PACK      SIALCST,SIPCCST,SP70
            PACK      SIALDSC,SISADESC,SP70
            PACK      SIALSUB,SIPCPRD,SP70
            PACK      SIALDAT,SIPCDAT
            ASSIGN    SIPCOQT*SIPCECT,SIALCOM
            MOVE      ZERO,SIALBUD
            IF        SIALCOM<>0
             CALL      WRSIAL1
            ENDIF
          ELSE
            ASSIGN    SIPCOQT*SIPCECT+SIALCOM,SIALCOM
            CALL      UPSIAL1
          ENDIF
          GOTO        LODP2000
.
LODP9999  RETURN
.-----------------------------------------------------------------
. Kill the Temporary Usage Calculation File
.-----------------------------------------------------------------
KLAL0000  PACK      SINALLNM,SINALLAA,PORT
          CLOSE     SINALLA1
          CLOSE     SINALLA2
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    SINALLNM,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KLAL0999  RETURN
.-----------------------------------------------------------------
. Create the Temporary Usage Calculation File
.-----------------------------------------------------------------
CRAL0000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    SINALLNM,CMDLINE
          APPEND    " 63 ",CMDLINE
          APPEND    "UC1-5,36-40,41-46 ",CMDLINE
          APPEND    "UC6-35,1-5,36-40,41-46 ",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          OPEN      SINALLA1,SINALLNM
          OPEN      SINALLA2,SINALLNM
.
CRAL0999  RETURN
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export details Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
          MOVE     "EXPORT",SVKEY6
          PACK     EXPORTFN,SVKEY6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
.
          WRITE    EXPORTFL,SEQ;"Period",TABDELM:
                                "Year",TABDELM:
                                "Cost Centre",TABDELM:
                                "Cost Centre Description",TABDELM:
                                "Product Group",TABDELM:
                                "Product Group Description",TABDELM:
                                "Period Actual",TABDELM:
                                "Period Budget",TABDELM:
                                "Variance",TABDELM:
                                "YTD Actual",TABDELM:
                                "YTD Budget",TABDELM:
                                "YTD Variance"
          GOTO      MAKEXP99
.
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
. writes details
.
WRTEXP00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXP99 IF NOT EQUAL
.
          WRITE    EXPORTFL,SEQ;SIPEPER,TABDELM:
                                SIPEYEAR,TABDELM:
                                CHECKCST,TABDELM:
                                KEY30,TABDELM:
                                CHECKSUB,TABDELM:
                                CHECKDSC,TABDELM:
                                ATOTAL01,TABDELM:
                                ATOTAL02,TABDELM:
                                ATOTAL03,TABDELM:
                                ATOTAL04,TABDELM:
                                ATOTAL05,TABDELM:
                                ATOTAL06
WRTEXP99  RETURN
.
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9999 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.----------------------------------------------------------------------
. IO Routines for sinallxx file
.----------------------------------------------------------------------
RSSIAL1   RESET     KEY16
          READ      SINALLA1,KEY16;;
          RETURN
.
RASIAL1   RESET     KEY16
          MOVE      ZERO,OVRCD
          READ      SINALLA1,KEY16;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDSIAL1   RESET     KEY16
          MOVE      ZERO,OVRCD
          READ      SINALLA1,KEY16;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                                   SIALBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
RKSIAL1   MOVE      ZERO,OVRCD
          READKS    SINALLA1;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                                   SIALBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
RPSIAL1   MOVE      ZERO,OVRCD
          READKP    SINALLA1;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM,SIALBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
UPSIAL1   UPDATE    SINALLA1;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM,SIALBUD
          GOTO      UPDFLOCK IF LOCKED
          RETURN
.
WRSIAL1   RESET     KEY16
          WRITE     SINALLA1,KEY16;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                                   SIALBUD
          RETURN
.
DESIAL1   RESET     KEY16
          DELETE    SINALLA1,KEY16
          RETURN
.
RLSIAL1   RESET     KEY16
          MOVE      ZERO,OVRCD
          READL     SINALLA1,KEY16;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                                   SIALBUD
          GOTO      OVERCOND IF OVER
          GOTO      OVERLOCK IF LOCKED
          RETURN
.
RSSIAL2   RESET     KEY46
          READ      SINALLA2,KEY46;;
          RETURN
.
RASIAL2   RESET     KEY46
          MOVE      ZERO,OVRCD
          READ      SINALLA2,KEY46;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDSIAL2   RESET     KEY46
          MOVE      ZERO,OVRCD
          READ      SINALLA2,KEY46;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                                   SIALBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
RKSIAL2   MOVE      ZERO,OVRCD
          READKS    SINALLA2;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                             SIALBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
RPSIAL2   MOVE      ZERO,OVRCD
          READKP    SINALLA2;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                             SIALBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
UPSIAL2   UPDATE    SINALLA2;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                             SIALBUD
          GOTO      UPDFLOCK IF LOCKED
          RETURN
.
WRSIAL2   RESET     KEY46
          WRITE     SINALLA2,KEY46;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                                   SIALBUD
          RETURN
.
DESIAL2   RESET     KEY46
          DELETE    SINALLA2,KEY46
          RETURN
.
RLSIAL2   RESET     KEY46
          MOVE      ZERO,OVRCD
          READL     SINALLA2,KEY46;SIALCST,SIALDSC,SIALSUB,SIALDAT,SIALCOM:
                                   SIALBUD
          GOTO      OVERCOND IF OVER
          GOTO      OVERLOCK IF LOCKED
          RETURN
.----------------------------------------------------------
. Set Non-Data up for calulations and printing
.----------------------------------------------------------
SNON0000  MOVE      "Non-Catalogued Item",SIIADES
          PACK      SIIADES,SIIADES,SP70
          MOVE      ZERO,SIIAAVC
          MOVE      ONE,SIIAISS
          MOVE      SP70,SIIACAT
          MOVE      ONE,SIIANON
          MOVE      " 0",SIIASTI
.
SNON9999  RETURN
.----------------------------------------------------------------------
. Enter Range of Cost Centre
.----------------------------------------------------------------------
ECOS0000  IF        REPTSTKF=1
            IF        ACCEPT<>1
              MOVE      "Report is for 'Stock' only.  ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            CALL      TOFROM00
            GOTO      ECOS9900
          ENDIF
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          CALL      KSICAA00
          BRANCH    EXIT,ECOS0100,ECOS9800
          MOVE      SICACODE,STRCST
          PACK      FROMCST,SICACODE,SP1,SICADESC
          GOTO      ECOS0200
ECOS0100  MOVE      "Start             ",FROMCST
          MOVE      SP70,STRCST
.
ECOS0200  MOVE      FROMCST,VAR
          CALL      DISPITEM
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM

          CALL      KSICAA00
          BRANCH    EXIT,ECOS0300,ECOS9800
          MOVE      SICACODE,ENDCST
          PACK      TOCST,SICACODE,SP1,SICADESC
          MATCH     STRCST,ENDCST
          GOTO      ECOS9900 IF EQUAL
          GOTO      ECOS9900 IF NOT LESS
          BEEP
          MOVE      "To Cost Centre Must Be > From Cost Centre - ",DISPMSG
          CALL      MESSAGE1
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM

          GOTO      ECOS0000
.
ECOS0300  MOVE      "Finish             ",TOCST
          MOVE      Z70,ENDCST
          GOTO      ECOS9900
.
ECOS9800  MOVE      TWO,EXIT
          GOTO      ECOS9999
.
ECOS9900  MOVE      "    4",FLDID
          CALL      GETPOSIT
ECOS9999  RETURN
.
.----------------------------------------------------------------------
. Keyin REPS
.----------------------------------------------------------------------
KREPS000  PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EF,*V2LON:
                    "1",*HOFF," = By Cost Centre Code, ",*V2LON:
                    "2",*HOFF," = By Cost Centre Description";
.
KREPS050  MOVE      "1",DIM1
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DIM1
          MATCH     EXITCHAR,DIM1
          GOTO      KREPS950 IF EQUAL
          TYPE      DIM1
          GOTO      KREPS050 IF NOT EQUAL
          MOVE      DIM1,REPSEQ
          BRANCH    REPSEQ,KREPS100,KREPS100
          GOTO      KREPS050
.
KREPS100  CALL      MESSAGE3
.
          IF        REPSEQ=2
            MOVE      "By Cost Centre Description    ",REPSEQD
          ELSE
            MOVE      "By Cost Centre Code           ",REPSEQD
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      KREPS999
.
KREPS950  MOVE      TWO,EXIT
.
KREPS999  RETURN
.---------------------------------------------------------------------------
. KYEAR - keyin year
.---------------------------------------------------------------------------
KYEAR000  CALL      RINPECON           * default to current year
          MOVE      SIPECYR,SIPEYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEYEAR
          PACK      SIPEYEAR,SIPEYEAR,SP70
.
          MATCH     SP70,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR * exitchar entered ?
          MATCH     KEY4,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
.
          TYPE      SIPEYEAR           * valid numeric ?
          GOTO      KYEAR000 IF NOT EQUAL
.
          MOVE      SIPEYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   SIPEYEAR
            MOVE      SIPEYEAR,FORM2
            PACK      SIPEYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",SIPEYEAR
          MOVE      ZERO,EXIT          * year ok
          GOTO      KYEAR999
.
KYEAR990  MOVE      TWO,EXIT           * no year entered
.
KYEAR999  RETURN
.---------------------------------------------------------------------------
. KPERD - keyin period
.         Returns SIPEPER - Period
.                 EXIT    - 0=ok, 1=nothing entered, 2=exitchar
.---------------------------------------------------------------------------
KPERD000
          MOVE      SIPENUM,SIPEPER
.
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,*ZF,SIPEPER
          PACK      SIPEPER,SIPEPER,SP70
          ENDSET    SIPEPER            * check for EXITCHAR
          MATCH     EXITCHAR,SIPEPER
          GOTO      KPERD995 IF EQUAL
          RESET     SIPEPER
.
          MOVE      ZERO,F2
          MOVE      SIPEPER,F2
          COMPARE   ZERO,F2            * no period entered ?
          GOTO      KPERD990 IF EQUAL
.                                      * period greater than total no. of perds
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          MOVE      F2,SIPEPER         * check if period exists
          REP       " 0",SIPEPER
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          REP       " 0",KEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period NOT Created - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          MOVE      ZERO,EXIT          * period ok
          GOTO      KPERD999
.
KPERD990  MOVE      ONE,EXIT           * no period entered
          GOTO      KPERD999
.
KPERD995  MOVE      TWO,EXIT           * EXITCHAR entered
.
KPERD999  RETURN
.---------------------------------------------------------------------
. Enter Stock Flag (N-Nonstock S-Stock)
.---------------------------------------------------------------------
ESTCK000  MOVE      FALSE,EXIT
          MOVE      ANSS,REPTSTCK
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,*RV,REPTSTCK
          PACK      REPTSTCK,REPTSTCK,SP10
.
          MATCH     EXITCHAR,REPTSTCK
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      ESTCK999
          ENDIF
.
          TYPE      REPTSTCK
          GOTO      ESTCK900 IF EQUAL
          REP       UPPLOW,REPTSTCK
          MOVE      REPTSTCK,ANS
          REP       "S1N0",ANS
          TYPE      ANS
          GOTO      ESTCK900 IF NOT EQUAL
.
. -------- Valid Option
          MOVE      ANS,FORM1
          IF        FORM1=1
            MOVE      ANSS,REPTSTCK          * Only Stock
            DISPLAY   *PCCOL:CVERT,*EL,*V2LON,"Stock Only"
            MOVE      FORM1,REPTSTKF         * Report Variable
            CALL      TOFROM00               * Set cost centres
            GOTO      ESTCK990
          ENDIF
.
          IF        FORM1=0
            MOVE      ANSN,REPTSTCK          * Only Non-Stock
            DISPLAY   *PCCOL:CVERT,*EL,*V2LON,"Non-Stock Only"
            MOVE      FORM1,REPTSTKF         * Report Variable
            GOTO      ESTCK990
          ENDIF
.
ESTCK900  MOVE      "Invalid Option.  ",DISPMSG
          CALL      MESSAGE1
          GOTO      ESTCK000
.
ESTCK990  MOVE      "   12",FLDID
          CALL      GETPOSIT
.
ESTCK999  RETURN
.---------------------------------------------------------------------
. Set Cost Centres to display Stock
.---------------------------------------------------------------------
TOFROM00  MOVE     "Stock Replenishment                           ",FROMCST
          MOVE     "Stock Replenishment                           ",TOCST
          MOVE     "Stock",STRCST
          MOVE     "Stock",ENDCST
.
          MOVE      FLDID,SAVFLDID
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,FROMCST,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,TOCST,SP70
            CALL      DISPITEM
          ENDIF
.
          MOVE      SAVFLDID,FLDID
          CALL      GETPOSIT
.
TOFROM99  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCIAIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSUAIO/INC
.
          INC       STDGENCD
.
