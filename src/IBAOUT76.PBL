.***************************************************************************
.* System    :   Outpatients                                               *
.* Program   :   IBAOUT76                                                  *
.* Desc      :   O/P Purge Program                                         *
.***************************************************************************
.* Date      :   20/03/1998                                                *
.* Author    :   Steve Armstrong                                           *
.* Function  :   This program will allow the purging of O/P data.  Either  *
.*               all data for a selected range can be purged, or only      *
.*               empty slots can be purged.                                *
.* Modifications :                                                         *
.* V12.00.01 28/05/2025  PJ Le Febour  0955096 AlphaNum Visitnum           *
.*           replace COMPARE ZERO,OBAOUTNO to MATCH ZEROVISN,OBAOUTNO      *
.*                   COMPARE OBAOUTNO,OTBPEVNT to MATCH OBAOUTNO,OTBPEVNT  *
.*                   COMPARE OBAOUTNO,OTNUMN   to MATCH OBAOUTNO,OTNUMB    *
.*                   MOVE     OTHIEVNT,FORM8   to MOVE  OTHIEVNT,DIM8VISN  *
.*                   COMPARE  OBAOUTNO,FORM8   to MATCH OBAOUTNO,DIM8VISN  *
.*                   MOVE    OBAOUTNO,FORM8    to MOVE  OBAOUTNO,DIM8VISN  *
.*                   MOVE    OTRLOUTN,FORM8    to MOVE  OTRLOUTN,DIM8VISN  *
.*                   COMPARE OBAOUTNO,OPUAOUTN to MATCH  OBAOUTNO,OPUAOUTN *
.* V9.03.02  23/10/2003  J.Tan   CAR   44172                               *
.*           Mods for Misc.Theatre item file (pmsmtiaf)                    *
.* V9.03.01  11/09/2003  Sandra Barcham      43010                         *
.*           Removed site prefix on open of outpreaf & outphoaf            *
.* V9.02.00  03/12/2002  Lina Vo                                           *
.*           Changed program to open outhisaf with site prefix.            *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       OUTBOAFD/INC                 * O/P Booking File A
          INC       OUTBB1FD/INC                 * O/P Booking File B
          INC       OUTBOCFD/INC                 * O/P Booking File C
          INC       OUTBPTFD/INC                 * O/P Booking path. test file
          INC       OUTBRTFD/INC                 * O/P Booking rad. test file
          INC       OUTBUDFD/INC                 * O/P booking audit file
          INC       OUTCANFD/INC                 * O/P cancelled bookings file
          INC       OUTCTYFD/INC                 * O/P Clinic Type File
          INC       OUTDIAFD/INC                 * O/P diagnosis file
          INC       OUTDTRFD/INC                 * O/P transaction file
          INC       OUTHISFD/INC                 * O/P history file
          INC       OUTLHIFD/INC                 * O/P Letter history file
          INC       OUTMROFD/INC                 * O/P Med. Records Ops. file
          INC       OUTPREFD/INC                 * O/P Pre-attendance file
          INC       OUTRAPFD/INC                 * O/P Reappointment file
          INC       OUTRF1FD/INC                 * O/P referral letter file
          INC       OUTRSHFD/INC                 * O/P rescheduled bookings file
          INC       OUTSITFD/INC                 * O/P site file
          INC       OUTUATFD/INC                 * O/P Un-attendance file
          INC       OUTXSCFD/INC                 * O/P extra screen details file
          INC       OUTXWPFD/INC                 * O/P Extra WP details file
          INC       PATINVFD/INC                 * invoice file
          INC       PATVISFD/INC                 * visit file
          INC       PMSMTIFD/INC                 * Misc.Theatre item file
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CLINCODE  DIM       6
CLINFLAG  FORM      1             * clinic type flag
.                                       0 = start code
.                                       1 = end code
CURRDAT   DIM       8             * current date variable
.
DIM14     DIM       14
.
EDATE     DIM       8             * start date
ENDCLIN   DIM       6             * end clinic type
EXTKEY25  DIM       25            * shortened key for outbokaf (no slot #)
.
FORM8     FORM      8
.
.         These variables are used to indicate if a file exists
.              0 = Yes,  1 = No
.
NEWKEY28  DIM       28
NOBB1     FORM      1
NOBOC     FORM      1
NOBPT     FORM      1
NOBRT     FORM      1
NOBUD     FORM      1
NOCAN     FORM      1
NODIA     FORM      1
NODTR     FORM      1
NOHIS     FORM      1
NOLHI     FORM      1
NOMRO     FORM      1
NOPRE     FORM      1
NORAP     FORM      1
NORFL     FORM      1
NORSH     FORM      1
NOUAT     FORM      1
NOXSC     FORM      1
NOXWP     FORM      1
.
PREVCLIN  DIM       6             * previous clinic type
PREVSTAT  FORM      1             * previous status
.
SAVIDDD   DIM       6             * save O/P site details
SAVKEY10  DIM       10
SAVKEY11  DIM       11
SAVKEY12  DIM       12
SAVKEY16  DIM       16
SAVKEY19  DIM       19
SAVKEY22  DIM       22
SAVKEY27  DIM       27
SAVKEY28  DIM       28
SAVKEY35  DIM       35
SAVSLOT   FORM      3             * saved slot no.
SAVSTAT   FORM      1             * saved slot status
SDATE     DIM       8             * end date
SITECODE  DIM       6             * O/P site code
STRTCLIN  DIM       6             * start clinic type
.
ZED35     INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
PRGID     INIT      "IBAOUT76"
PRGNAM    INIT      "OUTPATIENT PURGE PROGRAM"
VERSION   INIT      "V12.00.01"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000:        * delete empty slots
                            ML1000         * delete all records
.
ML1000    CALL      SITE0000               * get site code
          BRANCH    EXIT,ML0100            * nothing/exitchar input
.
ML2000    CALL      STYP0000               * get start clinic type
          BRANCH    EXIT,ML1000            * exitchar entered
.
          CALL      ETYP0000               * get end clinic type
          BRANCH    EXIT,ML2000            * exitchar entered
.
          CALL      SDAT0000               * get start date
          CALL      EDAT0000               * get end date
.
          CALL      CONTQST                * Ok to continue (Y/N) ?
          BRANCH    CEXIT,ML5000:          * yes
                          ML1000:          * no
                          ML0100           * cancel
.
ML5000    CALL      PROC0000               * process
          GOTO      ML1000                 * get next site
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR1,"patinvrf"
          OPEN      PATINVR3,"patinvrf"
.
          MOVE      ONE,CNEWDS
.
          MOVE      IDDD,SAVIDDD
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*    Returns:  EXIT    = 0  Exit selected                                  *
.*                        1  Valid selection                                *
.*              COPTION   1  Delete Empty Slots selected                    *
.*                        2  Delete All Records selected                    *
.****************************************************************************
.
OPTN0000  CLOSE     OUTCTYA1
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Delete Empty Slots":
                    *P1:6,*V2LON,TWO,*HOFF,". Delete All Records"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * delete empty slots
                            OPTN9000             * delete all records
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
.         Exit selected, so restore the original value if IDDD in case
.         this program was run through an O/P menu
.
OPTN9500  MOVE      SAVIDDD,IDDD
          MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                             SITE0000                Called by: ML0000    *
.*                       get O/P site code                                  *
.* Returns:   EXIT  0 = valid site selected                                 *
.*                  1 = nothing/exitchar entered                            *
.****************************************************************************
.
SITE0000  CLOSE     OUTCTYA1
          KEYIN     *P1:10,*EF,"O/P Site Code     :":
                    *P21:10,*V2LON,SITECODE:
                    *P21:10,*DV,SITECODE
.
          CALL      CHKS0000                * see what was entered
          BRANCH    EXIT,SITE1000:          * ? entered
                         SITE7500:          * valid code
                         SITE9000:          * nothing entered
                         SITE9000           * exitchar
.
          GOTO      SITE0000                * invalid code
.
SITE1000  MOVE      ZERO,HLEF
          CALL      GETSCR00
SITE1200  CALL      OUTSITDS                * display codes on file
.
SITE1500  KEYIN     *P1:24,*EL,"O/P Site Code : ":
                    *P17:24,*V2LON,SITECODE:
                    *P17:24,*DV,SITECODE
.
          CALL      CHKS0000                * see what was entered
          BRANCH    EXIT,SITE1200:          * ? entered
                         SITE7000:          * valid code
                         SITE8000:          * nothing entered
                         SITE8000           * exitchar
.
          GOTO      SITE1500
.
SITE7000  CALL      PUTSCR00                * restore screen
          DISPLAY   *P21:10,*V2LON,SITECODE
SITE7500  DISPLAY   *P35:10,OSTDESC
          MOVE      SITECODE,IDDD           * load common site variable
.
.         Open clinic type file for selected O/P site
.
          PACK      CFNAME,OSTFILE,FILCTYA1
          OPEN      OUTCTYA1,CFNAME
          MOVE      ZERO,EXIT
          GOTO      SITE9999
.
SITE8000  CALL      FRESCR00
SITE9000  MOVE      ONE,EXIT
.
SITE9999  RETURN
+
.***************************************************************************
.*                                  CHKS0000           Called by: SITE0000 *
.*                      See what was input                                 *
.*      Returns: EXIT  0 = invalid                                         *
.*                     1 = "?"                                             *
.*                     2 = valid                                           *
.*                     3 = nothing                                         *
.*                     4 = exitchar                                        * 
.***************************************************************************
.
CHKS0000  PACK      SITECODE,SITECODE,SP6
.
          MATCH     SP6,SITECODE                 * anything entered ?
          GOTO      CHKS9000 IF EQUAL            * no
.
          MATCH     EXITCHAR,SITECODE            * exitchar entered ?
          GOTO      CHKS7000 IF EQUAL            * yes
.
          MATCH     QUEST,SITECODE               * ? entered ?
          GOTO      CHKS8000 IF EQUAL            * yes
.
.         Code entered
.
          MOVE      SITECODE,KEY6
          CALL      RDSITA1                      * code on file ?
          BRANCH    OVRCD,CHKS6000               * no
.
          MOVE      TWO,EXIT                     * code entered
          GOTO      CHKS9999
.
CHKS6000  DISPLAY   *P1:24,*EL,*B,"Site Code not on file. ";
          CALL      HITENTER
          MOVE      ZERO,EXIT
          GOTO      CHKS9999
.
CHKS7000  MOVE      FOUR,EXIT
          GOTO      CHKS9999
.
CHKS8000  MOVE      ONE,EXIT
          GOTO      CHKS9999
.
CHKS9000  MOVE      THREE,EXIT
.
CHKS9999  RETURN
+
.****************************************************************************
.*                             STYP0000                Called by: ML0000    *
.*                       get start clinic type                              *
.****************************************************************************
.
STYP0000  MOVE      ZERO,CLINFLAG                * set flag for start code
          KEYIN     *P1:12,*EF,"Start Clinic Type :":
                    *P21:12,*V2LON,CLINCODE:
                    *P21:12,*DV,CLINCODE
.
          CALL      CHKC0000                * see what was entered
          BRANCH    EXIT,STYP1000:          * ? entered
                         STYP7500:          * valid code
                         STYP9000:          * nothing entered
                         STYP9000           * exitchar
.
          GOTO      STYP0000                * invalid code
.
STYP1000  MOVE      ZERO,HLEF
          CALL      GETSCR00
STYP1200  CALL      OUTDSCTY                * display codes on file
.
STYP1500  KEYIN     *P1:24,*EL,"Clinic Type : ":
                    *P15:24,*V2LON,CLINCODE:
                    *P15:24,*DV,CLINCODE
.
          CALL      CHKC0000                * see what was entered
          BRANCH    EXIT,STYP1200:          * ? entered
                         STYP7000:          * valid code
                         STYP8000:          * nothing entered
                         STYP8000           * exitchar
.
          GOTO      STYP1500
.
STYP7000  CALL      PUTSCR00                * restore screen
STYP7500  MOVE      CLINCODE,STRTCLIN
          DISPLAY   *P21:12,*V2LON,STRTCLIN
          DISPLAY   *P35:12,OCTDESC
          MOVE      ZERO,EXIT
          GOTO      STYP9999
.
STYP8000  CALL      PUTSCR00
STYP9000  MOVE      ONE,EXIT
.
STYP9999  RETURN
+
.***************************************************************************
.*                                  CHKC0000           Called by: STYP0000 *
.*                      See what was input                                 *
.* Requires:  SITECODE - O/P site code                                     *
.*            CLINCODE - Clinic Type Code                                  *
.*            CLINFLAG - Start/End Flag                                    *
.* Returns:      EXIT  0 = invalid                                         *
.*                     1 = "?"                                             *
.*                     2 = valid                                           *
.*                     3 = nothing                                         *
.*                     4 = exitchar                                        * 
.***************************************************************************
.
CHKC0000  PACK      CLINCODE,CLINCODE,SP6
.
          MATCH     SP6,CLINCODE                 * anything entered ?
          GOTO      CHKC9000 IF EQUAL            * no
.
          MATCH     EXITCHAR,CLINCODE            * exitchar entered ?
          GOTO      CHKC7000 IF EQUAL            * yes
.
          MATCH     QUEST,CLINCODE               * ? entered ?
          GOTO      CHKC8000 IF EQUAL            * yes
.
.         Code entered
.
          PACK      KEY12,SITECODE,CLINCODE
          CALL      RDCTYA1                      * code on file ?
          BRANCH    OVRCD,CHKC6000               * no
.
.         If this is the end clinic type code, then make sure it is not
.         less than the start clinic type code
.
          IF        CLINFLAG = 1
            MATCH     STRTCLIN,CLINCODE
            IF        @LESS
              DISPLAY   *P1:24,*EL,*B,"End Clinic Type is less than Start ":
                        "Clinic Type.  ";
              GOTO      CHKC6100
            ENDIF
          ENDIF
.
          MOVE      TWO,EXIT                     * code entered
          GOTO      CHKC9999
.
CHKC6000  DISPLAY   *P1:24,*EL,*B,"Clinic Type not on file. ";
CHKC6100  CALL      HITENTER
          MOVE      ZERO,EXIT
          GOTO      CHKC9999
.
CHKC7000  MOVE      FOUR,EXIT
          GOTO      CHKC9999
.
CHKC8000  MOVE      ONE,EXIT
          GOTO      CHKC9999
.
CHKC9000  MOVE      THREE,EXIT
.
CHKC9999  RETURN
+
.****************************************************************************
.*                             ETYP0000                Called by: ML0000    *
.*                       get end clinic type                                *
.****************************************************************************
.
ETYP0000  MOVE      ONE,CLINFLAG                 * set flag for end code
          KEYIN     *P1:13,*EF,"End   Clinic Type :":
                    *P21:13,*V2LON,CLINCODE:
                    *P21:13,*DV,CLINCODE
.
          CALL      CHKC0000                * see what was entered
          BRANCH    EXIT,ETYP1000:          * ? entered
                         ETYP7500:          * valid code
                         ETYP9000:          * nothing entered
                         ETYP9000           * exitchar
.
          GOTO      ETYP0000                * invalid code
.
ETYP1000  MOVE      ZERO,HLEF
          CALL      GETSCR00
ETYP1200  CALL      OUTDSCTY                * display codes on file
.
ETYP1500  KEYIN     *P1:24,*EL,"Clinic Type : ":
                    *P15:24,*V2LON,CLINCODE:
                    *P15:24,*DV,CLINCODE
.
          CALL      CHKC0000                * see what was entered
          BRANCH    EXIT,ETYP1200:          * ? entered
                         ETYP7000:          * valid code
                         ETYP8000:          * nothing entered
                         ETYP8000           * exitchar
.
          GOTO      ETYP1500
.
ETYP7000  CALL      PUTSCR00                * restore screen
ETYP7500  MOVE      CLINCODE,ENDCLIN
          DISPLAY   *P21:13,*V2LON,ENDCLIN
          DISPLAY   *P35:13,OCTDESC
          MOVE      ZERO,EXIT
          GOTO      ETYP9999
.
ETYP8000  CALL      PUTSCR00
ETYP9000  MOVE      ONE,EXIT
.
ETYP9999  RETURN
+
.****************************************************************************
.*                             SDAT0000                Called by: ML0000    *
.*                       get starting date                                  *
.****************************************************************************
.
SDAT0000  DISPLAY   *P1:15,*EF,"From Date         :"
          MOVE      TEN5,CVERT
          MOVE      TWENTY1,CCOL
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      IBACLOCK                     * get current date
.
          PACK      CURRDAT,CCC,CYY,CMM,CDD
          REP       " 0",CURRDAT
          UNPACK    SP8,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
.
SDAT0700  CALL      KEYDATE
          BRANCH    OVRCD,SDAT0000
          PACK      SDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     CURRDAT,SDATE                * date in past ?
          GOTO      SDAT1000 IF NOT LESS         * no
          GOTO      SDAT9999                     * yes
.
SDAT1000  DISPLAY   *P1:24,*EL,*B,"Date must be in the past.  ";
          CALL      HITENTER
          GOTO      SDAT0000
.
SDAT9999  RETURN
+
.****************************************************************************
.*                             EDAT0000                Called by: ML0000    *
.*                          get ending date                                 *
.****************************************************************************
.
EDAT0000  DISPLAY   *P1:16,*EL,"To   Date         :"
          MOVE      TEN6,CVERT
          MOVE      TWENTY1,CCOL
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      IBACLOCK                     * default to current date
.
          PACK      CURRDAT,CCC,CYY,CMM,CDD
          REP       " 0",CURRDAT
          UNPACK    SP8,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
.
          CALL      KEYDATE
          BRANCH    OVRCD,EDAT0000
          PACK      EDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     CURRDAT,EDATE                * date in past ?
          GOTO      EDAT1000 IF NOT LESS         * no
.
          MATCH     SDATE,EDATE                  * yes - start date > end date ?
          GOTO      EDAT2000 IF LESS             * yes
          GOTO      EDAT9999
.
EDAT1000  DISPLAY   *P1:24,*EL,*B,"Date must be in the past.  ";
          CALL      HITENTER
          GOTO      EDAT0000
.
EDAT2000  DISPLAY   *P1:24,*EL,*B,"Start date greater than end date.  ";
          CALL      HITENTER
          GOTO      EDAT0000
.
EDAT9999  RETURN
+
.**************************************************************************
.*                               GSTA0000              Called by: ML0000  *
.*          Get next status value for clinic type                         *
.* Returns:   EXIT  0 = proceed with next status for same clinic - or -   *
.*                      next clinic type found so ok to continue          *
.*                  1 = no more clinic types so finish                    *
.**************************************************************************
.
GSTA0000  BRANCH    COPTION,GSTA2000:            * delete empty slots only
                            GSTA1000             * delete all slots
.
GSTA1000  ADD       ONE,PREVSTAT                 * increment status
          COMPARE   SIX,PREVSTAT                 * status still valid ?
          GOTO      GSTA9000 IF LESS             * yes
.
GSTA2000  PACK      KEY35,OBASITE,PREVCLIN,ZED35
          CALL      RDSBOKA2                     * position for next clinic type
          CALL      RDKBOKA2                     * read next record
          BRANCH    OVRCD,GSTA9500               * eof - finished
.
          MATCH     SITECODE,OBASITE             * same site still ?
          GOTO      GSTA9500 IF NOT EQUAL        * no - finished
.
          MATCH     OBACTYP,ENDCLIN              * past end clinic type ?
          GOTO      GSTA9500 IF LESS             * yes - finished
.
          MOVE      OBACTYP,PREVCLIN             * set for new clinic type
          MOVE      ZERO,PREVSTAT                * set for zero status
.
GSTA9000  MOVE      ZERO,EXIT
          GOTO      GSTA9999
.
GSTA9500  MOVE      ONE,EXIT
.
GSTA9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*          Process O/P records for deletion                              *
.**************************************************************************
.
PROC0000  MOVE      ZERO,PREVSTAT                * initialise status
          MOVE      STRTCLIN,PREVCLIN            * initialise clinic type
          PACK      CFNAME,OSTFILE,FILBOKA2
          OPEN      OUTBOKA1,CFNAME
          OPEN      OUTBOKA2,CFNAME
.
.         If deleting all records, then open all the necessary files
.
          IF        COPTION = 2
            CALL      OPEN0000
          ENDIF
.
          DISPLAY   *P1:23,*EF,"Processing:":
                    *P1:24,"Deleting  :";
.
PROC0200  PACK      KEY35,SITECODE,PREVCLIN,PREVSTAT,SDATE,SP30
          CALL      RDSBOKA2                     * position in file
PROC0500  CALL      RDKBOKA2                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          MATCH     SITECODE,OBASITE             * same site still ?
          GOTO      PROC9000 IF NOT EQUAL        * no - finished
.
          MATCH     OBACTYP,ENDCLIN              * past end clinic type ?
          GOTO      PROC9000 IF LESS             * yes - finished
.
          COMPARE   OBASTAT,PREVSTAT             * same status still ?
          IF        !@EQUAL
            CALL      GSTA0000                   * no - get next status
            BRANCH    EXIT,PROC9000              * finished
            GOTO      PROC0200                   * continue with next status
.                                                  or next clinic type
          ENDIF
.
          DISPLAY   *P13:23,*V2LON,OBASITE,OBACTYP,OBASTAT,OBADATE,OBASTRT:
                                   OBASLOT,OBACLIN;
.
.         If we are only deleting empty slots, then make sure this slot is empty
.
          IF        COPTION = 1
            COMPARE   ZERO,OBASTAT               * slot empty ?
            GOTO      PROC9000 IF NOT EQUAL      * no - finished
.
.           Save the key fields, slot & status to check for extended slots later
.
            PACK      EXTKEY25,OBASITE,OBACLIN,OBADATE,OBASTRT
            MOVE      OBASTAT,SAVSTAT
            MOVE      OBASLOT,SAVSLOT
          ENDIF
.
.         Make sure the clinic date is in the selected data range
.
          MATCH     SDATE,OBADATE                * clinic date < start date
          IF        @LESS
            CALL      GSTA0000                   * no - get next status
            BRANCH    EXIT,PROC9000              * finished
            GOTO      PROC0200                   * continue with next status
.                                                  or next clinic type
          ENDIF
.
          MATCH     OBADATE,EDATE                * end date < clinic date ?
          IF        @LESS
            CALL      GSTA0000                   * no - get next status
            BRANCH    EXIT,PROC9000              * finished
            GOTO      PROC0200                   * continue with next status
.                                                  or next clinic type
          ENDIF
.
          DISPLAY   *P13:24,*V2LON,OBASITE,OBACTYP,OBASTAT,OBADATE,OBASTRT:
                                   OBASLOT,OBACLIN;
.
.         A valid record has been found so delete it
.
          PACK      SAVKEY35,OBASITE,OBACTYP,OBASTAT,OBADATE,OBASTRT,OBASLOT:
                             OBACLIN
          PACK      SAVKEY28,OBASITE,OBACLIN,OBADATE,OBASTRT,OBASLOT
.
          IF        COPTION = 2
            CALL      OTHF0000                   * delete recs. from other files
          ENDIF
.
          MOVE      SAVKEY28,KEY28
          CALL      DEBOKA1                      * delete outbokaf record
.
.         If this is an empty slot with status "0", and we are only deleting
.         empty slots, then we need to delete any associated extended slots
.
          IF        COPTION = 1 & SAVSTAT = 0
PROC5000    MOVE      SAVKEY28,KEY28
            CALL      RDSBOKA1                   * position in file
            CALL      RDKBOKA1                   * read next record
            BRANCH    OVRCD,PROC9000             * eof - finished
.
            PACK      KEY25,OBASITE,OBACLIN,OBADATE,OBASTRT
            MATCH     KEY25,EXTKEY25             * same key ?
            GOTO      PROC8000 IF NOT EQUAL      * no - ignore
.
            COMPARE   THREE,OBASTAT              * extended slot ?
            GOTO      PROC8000 IF NOT EQUAL      * no - ignore
.
            COMPARE   SAVSLOT,OBAEXSL            * parent slot same ?
            GOTO      PROC9000 IF NOT EQUAL      * no - ignore
.
.           An extended slot has been found, so delete it
.
            PACK      KEY28,OBASITE,OBACLIN,OBADATE,OBASTRT,OBASLOT
            CALL      DEBOKA1                    * delete extended slot
            GOTO      PROC5000
          ENDIF
.
PROC8000  MOVE      SAVKEY35,KEY35
          CALL      RDSBOKA2                     * reposition in file
          GOTO      PROC0500                     * get next record
.
PROC9000  CLOSE     OUTBOKA1
          CLOSE     OUTBOKA2
.
.         If deleting all records, then close all relevant files
.
          IF        COPTION = 2
            CALL      CLOS0000
          ENDIF
.
PROC9999  RETURN
+
.**************************************************************************
.*                               OTHF0000              Called by: PROC0000*
.*        Delete corresponding O/P records in other files                 *
.**************************************************************************
.
.         Delete the corresponding record in outbb1af/outbb1af
.
OTHF0000  MATCH     ZEROVISN,OBAOUTNO            * O/P number on file ?
          GOTO      OTHF9999 IF EQUAL            * no - ignore this file
.
          BRANCH    NOBB1,OTHF0100               * file not found
          MOVE      OBAOUTNO,KEY8
          CALL      RDBOKB1                      * booking record on file ?
          BRANCH    OVRCD,OTHF0100               * no - ignore this file
.
          MOVE      OBAOUTNO,KEY8
          CALL      DEBOKB1                      * yes - delete record
.
.         Delete the corresponding record in outbokcf
.
OTHF0100  BRANCH    NOBOC,OTHF0200               * file not found
          MOVE      OBAOUTNO,KEY8
          CALL      RDOTBOC1                     * extension record on file ?
          BRANCH    OVRCD,OTHF0200               * no - ignore this file
.
          MOVE      OBAOUTNO,KEY8
          CALL      DEOTBOC1                     * yes - delete record
.
.         Delete the corresponding records in outbptaf
.
OTHF0200  BRANCH    NOBPT,OTHF0300               * file not found
          PACK      KEY10,OBAOUTNO,SP10
          CALL      RSOTBPT1                     * position in file
OTHF0250  CALL      RKOTBPT1                     * read next record
          BRANCH    OVRCD,OTHF0300               * eof - finished this file
.
          MATCH     OBAOUTNO,OTBPEVNT            * same O/P number still ?
          GOTO      OTHF0300 IF NOT EQUAL        * no - finished this file
.
          PACK      SAVKEY10,OTBPEVNT,OTBPCNT
          PACK      KEY10,OTBPEVNT,OTBPCNT
          CALL      DEOTBPT1                     * yes - delete record
          MOVE      SAVKEY10,KEY10
          CALL      RSOTBPT1                     * re-position in file
          GOTO      OTHF0250
.
.         Delete the corresponding records in outbrtaf
.
OTHF0300  BRANCH    NOBRT,OTHF0400               * file not found
          PACK      KEY10,OBAOUTNO,SP10
          CALL      RSOTBRT1                     * position in file
OTHF0350  CALL      RKOTBRT1                     * read next record
          BRANCH    OVRCD,OTHF0400               * eof - finished this file
.
          MATCH     OBAOUTNO,OTBREVNT            * same O/P number still ?
          GOTO      OTHF0400 IF NOT EQUAL        * no - finished this file
.
          PACK      SAVKEY10,OTBREVNT,OTBRCNT
          PACK      KEY10,OTBREVNT,OTBRCNT
          CALL      DEOTBRT1                     * yes - delete record
          MOVE      SAVKEY10,KEY10
          CALL      RSOTBRT1                     * re-position in file
          GOTO      OTHF0350
.
.         Delete the corresponding record in outbudaf
.
OTHF0400  BRANCH    NOBUD,OTHF0500               * file not found
          MOVE      OBAOUTNO,KEY8
          CALL      RDOTBUD1                     * record on file ?
          BRANCH    OVRCD,OTHF0500               * no - ignore this file
.
          MOVE      OTBUADMN,KEY8
          CALL      DEOTBUD1                     * yes - delete record
.
.         Delete the corresponding record in outcanaf
.
OTHF0500  BRANCH    NOCAN,OTHF0600               * file not found
          MOVE      OBAOUTNO,KEY8
          CALL      RDOTCAN1                     * record on file ?
          BRANCH    OVRCD,OTHF0600               * no - ignore this file
.
          MOVE      OPCNOUTN,KEY8
          CALL      DEOTCAN1                     * yes - delete record
.
.         Delete the corresponding record in outdiagf
.
OTHF0600  BRANCH    NODIA,OTHF0700               * file not found
          MOVE      OBAOUTNO,KEY8
          CALL      RDDIAG1                      * record on file ?
          BRANCH    OVRCD,OTHF0700               * no - ignore this file
.
          MOVE      OPDIOUTN,KEY8
          CALL      DEDIAG1                      * yes - delete record
.
.         Delete the corresponding records in outdtrof
.
OTHF0700  BRANCH    NODTR,OTHF0760               * file not found
          PACK      KEY22,OBAOUTNO,SP30
          CALL      RDSDTRO1                     * position in file
OTHF0750  CALL      RDKDTRO1                     * read next record
          BRANCH    OVRCD,OTHF0760               * eof - finished this file
.
          MATCH     OBAOUTNO,OTNUMB              * same O/P number still ?
          GOTO      OTHF0760 IF NOT EQUAL        * no - finished this file
.
          PACK      SAVKEY22,OTNUMB,OTINVNO,OTTRANS
          PACK      KEY22,OTNUMB,OTINVNO,OTTRANS
          CALL      DEDTRO1                      * yes - delete record
          MOVE      SAVKEY22,KEY22
          CALL      RDSDTRO1                     * re-position in file
          GOTO      OTHF0750
.
OTHF0760  PACK      KEY14,OBAOUTNO,SP30
          CALL      RSPMMTI1                     * position in file
          CALL      RKPMMTI1                     * read next record
          BRANCH    OVRCD,OTHF0800               * eof - finished this file
.
          MATCH     DOBAOUTN,PMMIVISN            * same O/P number still ?
          GOTO      OTHF0800 IF NOT EQUAL        * no - finished this file
.
          PACK      KEY14,PMMIVISN,PMMITRAN
          CALL      DEPMMTI1                     * yes - delete record
          GOTO      OTHF0760
.
.         Delete the corresponding records in outhisaf
.
OTHF0800  BRANCH    NOHIS,OTHF0900               * file not found
          PACK      KEY28,OBAURNO,SP30
          CALL      RSOTHIS1                     * position in file
OTHF0810  CALL      RKOTHIS1                     * read next record
          BRANCH    OVRCD,OTHF0900               * eof - finished this file
.
          MATCH     OBAURNO,OTHIURNO             * same U/R number still ?
          GOTO      OTHF0900 IF NOT EQUAL        * no - finished this file
.
          MOVE      OTHIEVNT,DIM8VISN
          MATCH     OBAOUTNO,DIM8VISN            * same O/P number ?
          GOTO      OTHF0810 IF NOT EQUAL        * no - ignore
.
          PACK      NEWKEY28,OTHIURNO,OTHIEVNT,OTHIEDAT,OTHIUCNT
          PACK      KEY28,OTHIURNO,OTHIEVNT,OTHIEDAT,OTHIUCNT
          CALL      DEOTHIS1                     * yes - delete record
          MOVE      NEWKEY28,KEY28
          CALL      RSOTHIS1                     * re-position in file
          GOTO      OTHF0810
.
.         Delete the corresponding records in outlhiaf
.
OTHF0900  BRANCH    NOLHI,OTHF1000               * file not found
          PACK      KEY27,OBAURNO,SP30
          CALL      RSOTLHI1                     * position in file
OTHF0910  CALL      RKOTLHI1                     * read next record
          BRANCH    OVRCD,OTHF1000               * eof - finished this file
.
          MATCH     OBAURNO,OTLHURNO             * same U/R number still ?
          GOTO      OTHF1000 IF NOT EQUAL        * no - finished this file
.
          MATCH     OBAOUTNO,OTLHOUTN            * same O/P number ?
          GOTO      OTHF0910 IF NOT EQUAL        * no - ignore
.
          PACK      SAVKEY27,OTLHURNO,OTLHDATE,OTLHLNUM,OTLHOUTN
          PACK      KEY27,OTLHURNO,OTLHDATE,OTLHLNUM,OTLHOUTN
          CALL      DEOTLHI1                     * yes - delete record
          MOVE      SAVKEY27,KEY27
          CALL      RSOTLHI1                     * re-position in file
          GOTO      OTHF0910
.
.         Delete the corresponding records in outmroaf
.
OTHF1000  BRANCH    NOMRO,OTHF1100               * file not found
          PACK      KEY10,OBAOUTNO,SP10
          CALL      RSOTMRO1                     * position in file
OTHF1050  CALL      RKOTMRO1                     * read next record
          BRANCH    OVRCD,OTHF1100               * eof - finished this file
.
          MATCH     OBAOUTNO,OTMOADMN            * same O/P number still ?
          GOTO      OTHF1100 IF NOT EQUAL        * no - finished this file
.
          PACK      SAVKEY10,OTMOADMN,OTMORECN
          PACK      KEY10,OTMOADMN,OTMORECN
          CALL      DEOTMRO1                     * yes - delete record
          MOVE      SAVKEY10,KEY10
          CALL      RSOTMRO1                     * re-position in file
          GOTO      OTHF1050
.
.         Delete the corresponding record in outpreaf
.
OTHF1100  BRANCH    NOPRE,OTHF1200               * file not found
          MOVE      OBAOUTNO,KEY8
          CALL      RDPREA1                      * record on file ?
          BRANCH    OVRCD,OTHF1200               * no - ignore this file
.
          MOVE      OPROUTN,KEY8
          CALL      DEPREA1                      * yes - delete record
.
.         Delete the corresponding records in outrapaf
.
OTHF1200  BRANCH    NORAP,OTHF1300               * file not found
          PACK      KEY16,OBAOUTNO,SP20
          CALL      RSOTRAP1                     * position in file
OTHF1250  CALL      RKOTRAP1                     * read next record
          BRANCH    OVRCD,OTHF1300               * eof - finished this file
.
          MATCH     OBAOUTNO,OTRPOBKN            * same O/P number still ?
          GOTO      OTHF1300 IF NOT EQUAL        * no - finished this file
.
          PACK      SAVKEY16,OTRPOBKN,OTRPRBKN
          PACK      KEY16,OTRPOBKN,OTRPRBKN
          CALL      DEOTRAP1                     * yes - delete record
          MOVE      SAVKEY16,KEY16
          CALL      RSOTRAP1                     * re-position in file
          GOTO      OTHF1250
.
.         Delete the corresponding record in outrf1af
.
OTHF1300  BRANCH    NORFL,OTHF1400               * file not found
          MOVE      OBAOUTNO,DIM8VISN
          CALL      RDOTRFL1                     * record on file ?
          BRANCH    OVRCD,OTHF1400               * no - ignore this file
.
          MOVE      OTRLOUTN,DIM8VISN
          CALL      DEOTRFL1                     * yes - delete record
.
.         Delete the corresponding records in outrshaf
.
OTHF1400  BRANCH    NORSH,OTHF1500               * file not found
          PACK      KEY11,OBAOUTNO,SP20
          CALL      RDSRSHA1                     * position in file
OTHF1450  CALL      RDKRSHA1                     * read next record
          BRANCH    OVRCD,OTHF1500               * eof - finished this file
.
          MATCH     OBAOUTNO,OPRSOUTN            * same O/P number still ?
          GOTO      OTHF1500 IF NOT EQUAL        * no - finished this file
.
          PACK      SAVKEY11,OPRSOUTN,OPRSUNIQ
          PACK      KEY11,OPRSOUTN,OPRSUNIQ
          CALL      DERSHA1                      * yes - delete record
          MOVE      SAVKEY11,KEY11
          CALL      RDSRSHA1                     * re-position in file
          GOTO      OTHF1450
.
.         Delete the corresponding records in outuataf
.
OTHF1500  BRANCH    NOUAT,OTHF1600               * file not found
          PACK      KEY19,OBAOUTNO,SP20
          CALL      RSOPUAT1                     * position in file
OTHF1550  CALL      RKOPUAT1                     * read next record
          BRANCH    OVRCD,OTHF1600               * eof - finished this file
.
          MATCH     OBAOUTNO,OPUAOUTN            * same O/P number still ?
          GOTO      OTHF1600 IF NOT EQUAL        * no - finished this file
.
          PACK      SAVKEY19,OPUAOUTN,OPUAURNO,OPUAUNIQ
          PACK      KEY19,OPUAOUTN,OPUAURNO,OPUAUNIQ
          CALL      DEOPUAT1                     * yes - delete record
          MOVE      SAVKEY19,KEY19
          CALL      RSOPUAT1                     * re-position in file
          GOTO      OTHF1550
.
.         Delete the corresponding record in outxscaf
.
OTHF1600  BRANCH    NOXSC,OTHF1700               * file not found
          MOVE      OBAOUTNO,KEY8
          CALL      RDOTXSC1                     * record on file ?
          BRANCH    OVRCD,OTHF1700               * no - ignore this file
.
          MOVE      OTXSOUTN,KEY8
          CALL      DEOTXSC1                     * yes - delete record
.
.         Delete the corresponding records in outxwpaf
.
OTHF1700  BRANCH    NOXWP,OTHF1800               * file not found
          PACK      KEY12,OBAOUTNO,SP20
          CALL      RSOTXWP1                     * position in file
OTHF1750  CALL      RKOTXWP1                     * read next record
          BRANCH    OVRCD,OTHF1800               * eof - finished this file
.
          MATCH     OBAOUTNO,OTXWOUTN            * same O/P number still ?
          GOTO      OTHF1800 IF NOT EQUAL        * no - finished this file
.
          PACK      SAVKEY12,OTXWOUTN,OTXWLINE
          PACK      KEY12,OTXWOUTN,OTXWLINE
          CALL      DEOTXWP1                     * yes - delete record
          MOVE      SAVKEY12,KEY12
          CALL      RSOTXWP1                     * re-position in file
          GOTO      OTHF1750
.
.         Delete the corresponding record in patvisaf
.
OTHF1800  MOVE      OBAOUTNO,KEY8
          CALL      RDVISA1                      * record on file ?
          BRANCH    OVRCD,OTHF1900               * no - ignore this file
.
          COMPARE   TWO,PVITYPE                  * O/P visit ?
          GOTO      OTHF1900 IF NOT EQUAL        * no - ignore
.
          MOVE      PVIBILL,KEY8
          CALL      DEVISA1                      * yes - delete record
.
.         Delete the corresponding records in patinvrf
.
OTHF1900  PACK      KEY16,OBAOUTNO,SP20
          CALL      RDSINV3                      * position in file
OTHF1910  CALL      RDKINV3                      * read next record
          BRANCH    OVRCD,OTHF9999               * eof - finished this file
.
          MATCH     OBAOUTNO,PINVADM             * same O/P number still ?
          GOTO      OTHF9999 IF NOT EQUAL        * no - finished this file
.
          COMPARE   TWO,PINVSYS                  * O/P invoice ?
          GOTO      OTHF1910 IF NOT EQUAL        * no - ignore
.
          PACK      SAVKEY16,PINVADM,PINVNO
          MOVE      PINVNO,KEY8
          CALL      DEINV1                       * yes - delete record
          MOVE      SAVKEY16,KEY16
          CALL      RDSINV3                      * re-position in file
          GOTO      OTHF1910
.
OTHF9999  RETURN
+
.**************************************************************************
.*                               OPEN0000              Called by: PROC0000*
.*          Open all relevant files for processing                        *
.**************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"outbb1af";
          CALL      OPOTBB11                     * open outbb1af/outbb1af
          TRAPCLR   IO
          MOVE      OVRCD,NOBB1
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outbokcf";
          PACK      CFNAME,OSTFILE,FILBOKC1     * open outbokcf
          OPEN      OUTBOKC1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOBOC
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outbptaf";
          PACK      CFNAME,OSTFILE,FILBPTA1     * open outbptaf
          OPEN      OUTBPTA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOBPT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outbrtaf";
          PACK      CFNAME,OSTFILE,FILBRTA1     * open outbrtaf
          OPEN      OUTBRTA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOBRT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outbudaf";
          PACK      CFNAME,OSTFILE,FILBUDA1     * open outbudaf
          OPEN      OUTBUDA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOBUD
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outcanaf";
          PACK      CFNAME,OSTFILE,FILCANA1     * open outcanaf
          OPEN      OUTCANA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOCAN
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outdiagf";
          PACK      CFNAME,OSTFILE,FILDIAG1     * open outdiagf
          OPEN      OUTDIAG1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NODIA
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outdtrof";
          PACK      CFNAME,OSTFILE,FILDTRO1     * open outdtrof
          OPEN      OUTDTRO1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NODTR
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outhisaf";
          PACK      CFNAME,OSTFILE,FILHISA1     * open outhisaf
          OPEN      OUTHISA1,CFNAME     
          TRAPCLR   IO
          MOVE      OVRCD,NOHIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outlhiaf";
          PACK      CFNAME,OSTFILE,FILLHIA1     * open outlhiaf
          OPEN      OUTLHIA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOLHI
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outmroaf";
          OPEN      OUTMROA1,"outmroaf"
          TRAPCLR   IO
          MOVE      OVRCD,NOMRO
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outpreaf";
          OPEN      OUTPREA1,"outpreaf"
          TRAPCLR   IO
          MOVE      OVRCD,NOPRE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outrapaf";
          PACK      CFNAME,OSTFILE,FILRAPA1     * open outrapaf
          OPEN      OUTRAPA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NORAP
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outrf1af";
          OPEN      OUTRF1A1,"outrf1af"
          TRAPCLR   IO
          MOVE      OVRCD,NORFL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outrshaf";
          PACK      CFNAME,OSTFILE,FILRSHA1     * open outrshaf
          OPEN      OUTRSHA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NORSH
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outuataf";
          PACK      CFNAME,OSTFILE,FILUATA1     * open outuataf
          OPEN      OUTUATA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOUAT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outxscaf";
          PACK      CFNAME,OSTFILE,FILXSCA1     * open outxscaf
          OPEN      OUTXSCA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOXSC
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"outxwpaf";
          PACK      CFNAME,OSTFILE,FILXWPA1     * open outxwpaf
          OPEN      OUTXWPA1,CFNAME
          TRAPCLR   IO
          MOVE      OVRCD,NOXWP
.
          OPEN      PMSMTIA1,"pmsmtiaf"
OPEN9999  RETURN
+
.**************************************************************************
.*                               CLOS0000              Called by: PROC0000*
.*           Close all extra files now that processing is complete        *
.**************************************************************************
.
CLOS0000  CLOSE     OUTBB1A1
          CLOSE     OUTBOKC1
          CLOSE     OUTBPTA1
          CLOSE     OUTBRTA1
          CLOSE     OUTBUDA1
          CLOSE     OUTCANA1
          CLOSE     OUTDIAG1
          CLOSE     OUTDTRO1
          CLOSE     OUTHISA1
          CLOSE     OUTLHIA1
          CLOSE     OUTMROA1
          CLOSE     OUTPREA1
          CLOSE     OUTRAPA1
          CLOSE     OUTRF1A1
          CLOSE     OUTRSHA1
          CLOSE     OUTUATA1
          CLOSE     OUTXSCA1
          CLOSE     OUTXWPA1
.
CLOS9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       OUTDSCTY
          INC       OUTSITDS
.
          INC       OUTBOAIO/INC
          INC       OUTBB1IO/INC
          INC       OUTBOCIO/INC
          INC       OUTBPTIO/INC
          INC       OUTBRTIO/INC
          INC       OUTBUDIO/INC
          INC       OUTCANIO/INC
          INC       OUTDTRIO/INC
          INC       OUTCTYIO/INC
          INC       OUTDIAIO/INC
          INC       OUTHISIO/INC
          INC       OUTLHIIO/INC
          INC       OUTMROIO/INC
          INC       OUTPREIO/INC
          INC       OUTRAPIO/INC
          INC       OUTRF1IO/INC
          INC       OUTRSHIO/INC
          INC       OUTUATIO/INC
          INC       OUTXSCIO/INC
          INC       OUTXWPIO/INC
          INC       OUTSITIO/INC
          INC       PATINVIO/INC
          INC       PATVISIO/INC
          INC       PMSMTIIO/INC                 * Misc.Theatre item file
