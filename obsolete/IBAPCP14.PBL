.***************************************************************************
.*                                                                         * 
.*   Program       :  IBAPCP14                                             *
.*                                                                         *
.*   Description   :  Discharged Patient Care Plan Enquiry                 *
.*                                                                         * 
.*   Date          :  26/01/90 - Australia Day & Deon's birthday!!!!       *
.*                                                                         *
.*   Programmer    :  Glen Hobby                                           *
.*                                                                         *
.*   Modifications :                                                       *
.*        V10.02.01 25/06/2011 Steve Armstrong    CAR 240722               *
.*                  Mods to cater for changes to PATLOCFD.                 *
.*                       - LSNAME & LGNAME extended to 40 chars.           *
.*                       - PTLCGNM2 added.                                 *
.*                  Added RDPMPX21 prior to calling PMIHEAD                *
.***************************************************************************
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                   *
.*                  Added pmsvx1af                                         *
.***************************************************************************
.*        V9.02.00  30/12/2002 Tracey Nguyen srf 23497                     *
.*                  r5.10 Care Plans Port to V9                            *
.***************************************************************************
.*        V5.08.01  21/08/2000  Caleb Sharman                              *
.*                  Changed Health Fund variables to be 8 chars            *
.*                V5.07.B02    07/01/1999   Jim Stathopoulos               *
.*                             Display Modifications                       *
.*                V5.07.B01    04/11/1998   Jim Stathopoulos               *
.*                             507 Changes                                 *
.***************************************************************************
.*                 V5.03.02    31/08/1995   Howellsy   SRF: 611518         *
.*                             Fixed slection of admission and care plan.  *
.*                 V5.03.01    31/08/1995     MATT     SRF: 611518         *
.*                             Fixed selection of admission and care plan. *
.*                                                                         * 
.***************************************************************************
.*                                                                         * 
.*                    V5.01.02 19/02/90 K.Peak                             *
.*                             Added Patient Alerts                        *
.*                    V5.01.03 08/05/90 Glen Hobby                         *
.*                             Fixed up screen display                     *
.*                    V5.01.121 25/01/91 Justin Coates                     *
.*                              Added BOKRC1FD/IO                          *
.*                    V5.01.122 02/05/91 Peter Eddey                       *
.*                              added code for new sys parameters PCCNUREL *
.*                              and PCCNUDEF to turn related factors and   *
.*                              defining characteristics off and on        *
.*                    V5.01.123 17/05/91 Darren Jones / Graeme Williams    *
.*                              Fix screen handling                        *
.*                    V5.01.124 23/05/91  Steve O'Gorman                   *
.*                              Fixed Errors found by the New Compiler     *
.*        V5.01.125 13/11/1992    Justin Coates  Quote 7474  SRF 117477    *
.*                  allow for pcottype of zero                             *
.*        V5.01.126 02/04/1993    Darren Jones                             *
.*                  I*C fix                                                *
.*        V5.01.127 22/04/93 DIG                                           *
.*                  Re-Compiled for changes to PATALERT.                   *
.*        V5.01.128 02/06/93 Robert Sumsion                                *
.*                  Incorrect Key size for Discharge File fixed.           *
.*        V5.01.129 27/08/93  ROD                                          *
.*                  Recompile for NZHIS                                    *
.*        V5.01.130 01/09/93  Gabrielle     SRF 124936                     *
.*                  Fixed to display the correct admission and not just    *
.*                  the first one.                                         *
.*        V5.01.131 06/12/93  Rob Leonard   SRF 600660                     *
.*                  Fixed bug in display of Interventions                  *
.*        V5.01.132 14/01/94  Sandra Barcham                               *
.*                  Fixed Global Recompile errors                          *
.*        V5.01.133 24/05/1995  Matt Surridge                              *
.*                  Fixed bugs for global recompile.                       *
.*        V5.02.00  14/10/94  Whirlpool                                    *
.*                  Fixed Display of related factors                       *
.*        V5.02.01  11/05/95  Whirlpool                                    *
.*                  Fixed Display of list of care plans for > 1 screen     *
.*                  Fixed Display of Discharge date in header for admn no. *
.*                                                                         *
.***************************************************************************
.
          INC       STD001FD
          INC       NZHISIFD/INC                 * Include for NZHIS vars
          INC       PATNHIFD/INC                 * Include for NZHIS vars
          INC       PATCONFD/INC                 * Include for NZHIS vars
          INC       PATDHEAD/INC
          INC       PATCALAG/INC
          INC       PCPCONFD/INC
          INC       PATCOMM/INC
          INC       BOKRC1FD/INC             * booking file
          INC       PATPR1FD/INC
          INC       OUTPREFD/INC
          INC       PCPDEFFD/INC             * Defining characteristics
          INC       PCPPDSFD/INC             * Patient Descriptions
          INC       PCPDSCFD/INC             * Description
          INC       PCPOUTFD/INC             * Outcome file
          INC       PCPRELFD/INC             * Related factors
          INC       PATMI1FD/INC             * Patient admissions 
          INC       PMSVX1FD/INC             * Patient admissions 
          INC       PATMA1FD/INC             * Patient master file
          INC       PATDSCFD/INC             * Discharge file
          INC       PATDO1FD/INC             * Patient doctors file
          INC       PATNIDFD/INC             * National Id file
          INC       PATNOBFD/INC             * No bed file
          INC       PATWR1FD/INC             * Ward/Bed file
          INC       PCPDIAFD/INC             * Nursing diagnosis
          INC       PCPDISFD/INC             * Discharges 
          INC       PATLOCFD/INC             * In-patient location
          INC       PATTRNFD/INC             * Patient bed transfer
          INC       PATNURFD/INC             * Nursing station
          INC       PATTERFD/INC             * Terminal location
          INC       PATALRFD/INC             * Medical Alerts
          INC       PATCODFD/INC             * Code table file
          INC       PCPNURFD/INC             * Nurse file
          INC       PCPINTFD/INC             * Interventions file
          INC       PCPEVAFD/INC             * Evaluations file
          INC       PATVISFD/INC             * Visit file
          INC       PATGSRFD/INC             * Surname and Given name file
          INC       PMSPX2FD/INC
.
. ------- include needed for 'ACTCOMN1.PBL' -------
.

.
.***************************************************************************
.*                              CONSTANTS                                  *
.***************************************************************************
BJDAY     FORM      3
CJDAY     FORM      3
.
CODET     INIT      "T "
DASH20    INIT      "--------------------"
SP60      INIT   "                                                            " 
Z15       INIT      "zzzzzzzzzzzzzzz"
Z30       INIT      "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
.
PRGID     INIT      "IBAPCP14"               * program id
PRGNAM    INIT      "Discharged Patient Care Plan Enquiry" * program name
VERSION   INIT      "V10.12.00"
.
.***************************************************************************
.*                            GLOBAL VARIABLES                             *
.***************************************************************************
ALLWARDS  FORM      1
ADM       DIM       10                       * Admission date
ADM1      DIM       10
ADM2      DIM       10 
ADM3      DIM       10
ADM4      DIM       10
ADM5      DIM       10 
ADM6      DIM       10
ADM7      DIM       10                    
ADM8      DIM       10                   
ADM9      DIM       10                  
ADM10     DIM       10                 
ADM11     DIM       10                
ADM12     DIM       10               
ADM13     DIM       10              
AD1       FORM      10
AD2       FORM      10 
AD3       FORM      10
AD4       FORM      10
AD5       FORM      10 
AD6       FORM      10
AD7       FORM      10                    
AD8       FORM      10                   
AD9       FORM      10                  
AD10      FORM      10                 
AD11      FORM      10                
AD12      FORM      10               
AD13      FORM      10              
AD14      FORM      10              
AD15      FORM      10
AD16      FORM      10
ADMI1     FORM       10
ADMI2     FORM       10 
ADMI3     FORM       10
ADMI4     FORM       10
ADMI5     FORM       10 
ADMI6     FORM       10
ADMI7     FORM       10                    
ADMI8     FORM       10                   
ADMI9     FORM       10                  
ADMI10    FORM       10                 
ADMI11    FORM       10                
ADMI12    FORM       10               
ADMI13    FORM       10              
ADMIS1     FORM       8
ADMIS2     FORM       8 
ADMIS3     FORM       8
ADMIS4     FORM       8
ADMIS5     FORM       8 
ADMIS6     FORM       8
ADMIS7     FORM       8                    
ADMIS8     FORM       8                  
ADMIS9     FORM       8                  
ADMIS10    FORM       8                 
ADMIS11    FORM       8                
ADMIS12    FORM       8              
ADMIS13    FORM       8              
ADMIS14    FORM       8              
ADMIS15    FORM       8              
ANS2      DIM         2
CALLN     FORM      8                        * CHCK0000 call counter
COUNT     FORM      2
COUNTA    FORM      2
COUNTB    FORM      8
COUNTC    FORM      8
COUNTER   FORM      2
DATE      DIM       10
DATEA     DIM       10
DATEB     DIM       10
DATESP    DIM       8
DESCSP    DIM       4
DESCA     DIM       20
DESC1     DIM       60
DESC2     DIM       60
DESC3     DIM       60
DESC4     DIM       60
DESC5     DIM       60
DESC6     DIM       60
DESC7     DIM       60
DESC8     DIM       60
DESC9     DIM       60
DESC10    DIM       60
DESC11    DIM       60
DESC12    DIM       60
DESC13    DIM       60
FINISH    DIM       3
FLAG1     FORM      1
FLAG2     FORM      1
FLAG3     FORM      1
FLAG4     FORM      1
FLAG5     FORM      1
FLAG6     FORM      1
FLAG7     FORM      1
FLAG8     FORM      1
FLAG9     FORM      1
FLAG10    FORM      1
FLAG11    FORM      1
FLAG12    FORM      1
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
HEAD      DIM       20                       * Header for print routine
HEADER19  DIM       19
.
NCOD1    DIM       6
NCOD2    DIM       6
NCOD3    DIM       6
NCOD4    DIM       6
NCOD5    DIM       6
NCOD6    DIM       6
NCOD7    DIM       6
NCOD8    DIM       6
NCOD9    DIM       6
NCOD10   DIM       6
NCOD11   DIM       6
NCOD12   DIM       6
NCOD13   DIM       6
NMPNUMB   DIM       20
NUDIAG    DIM       9                        * Nursing diagnosis
NUMB      DIM       2
NUMBA     FORM      2
NUM1      DIM       4
NUM2      DIM       4
NUM3      DIM       4
NUM4      DIM       4
NUM5      DIM       4
NUM6      DIM       4
NUM7      DIM       4
NUM8      DIM       4
NUM9      DIM       4
NUM10     DIM       4
NUM11     DIM       4
NUM12     DIM       4
NUM13     DIM       4
NUNAME    DIM       20                       * Nurse name
NUCLSS    DIM       3                        * Nurse class
NUSTAT    DIM       3                        * Nursing station number
PFLAG1    FORM      1                        * Print flag
PLAN      DIM       3
SCNDGNAM  DIM       40
SELECTN   FORM      2
SUNAME    DIM       20                       * Keyed in surname
TDESCB    DIM       20
TDESCM    DIM       20
TIME1     DIM       8                        * Diagnosis time
TIME2     DIM       8
TIME3     DIM       8
TIME4     DIM       8
TIME5     DIM       8
TIME6     DIM       8
TIME7     DIM       8
TIME8     DIM       8
TIME9     DIM       8
TIME10    DIM       8
TIME11    DIM       8
TIME12    DIM       8
TIME13    DIM       8
TMP1      DIM       40
TMP2      FORM      8
TMP3      DIM       10
TMP4      FORM      2
TYPESP    FORM      1
UR1       DIM       8
UR2       DIM       8
UR3       DIM       8
UR4       DIM       8
UR5       DIM       8
UR6       DIM       8
UR7       DIM       8
UR8       DIM       8
UR9       DIM       8
UR10      DIM       8
UR11      DIM       8
UR12      DIM       8
UR13      DIM       8
UR14      DIM       8
UR15      DIM       8
UR16      DIM       8
UKEY1     DIM       10
UKEY2     DIM       10
UKEY3     DIM       10
UKEY4     DIM       10
UKEY5     DIM       10
UKEY6     DIM       10
UKEY7     DIM       10
UKEY8     DIM       10
UKEY9     DIM       10
UKEY10    DIM       10
UKEY11    DIM       10
UKEY12    DIM       10
UKEY13    DIM       10
URNUM     FORM       8
YVAL      FORM       2
.
.***************************************************************************
.*                              MAINLINE                                   *
.*                            Controlling Logic                            *
.***************************************************************************
ML0000    CALL      INIT0000                 * display header and open files
.
ML1100    CALL      SCR0000                  * Validate patient 
          BRANCH    EXIT,ML1101,ML1102
          GOTO      ML9999
.
ML1101    CALL      DAMS0000                 * By admission number
          BRANCH    EXIT,ML1100              * User pressed return
          GOTO      ML1103
.
ML1102    CALL      DURN0000                 * By U/R no.
          BRANCH    EXIT,ML1100
.
ML1103    CALL      CLR0000                  * Clear variables
          CALL      PATS0000                 * Display all patients            
.
ML1111    BRANCH    EXIT,ML1100,ML2000,ML3000,ML4000,ML5000
.
.         Admission details
.
ML2000    CALL      ADMD0000                 * Get admission details
          CALL      DADM0000                 * Display admission details
          GOTO      ML1111
.
.         Care plans
.
ML3000    CALL      CARE0000                 * Display care plans
          BRANCH    FLAG1,ML1111
          CALL      CDET0000                 * Specific care plan details
          BRANCH    FLAG1,ML3000 
          CALL      EVAL0000                 * Evaluations
          BRANCH    FLAG1,ML3000 
          GOTO      ML3000
.
.         Discharge
.
ML4000    CALL      DIS0000                  * Discharge
          GOTO      ML1111 
.
.         Print
.
ML5000    CALL      PRNT0000                 * Print off care plans
          GOTO      ML1100
.
ML9999    CHAIN     PGM                      * chain back to program
.
.*************************************************************************
.*                                  INIT0000                             *
.*                 Display screen headings and open files                *
.*************************************************************************
INIT0000  CALL      DISPHEAD                 * display screen headings
.
          DISPLAY   *P60:24,"patteraf";
          OPEN      PATTERA1,"patteraf"
.
          DISPLAY   *P60:24,*EL,"patnursm";
          OPEN      PATNURS1,"patnursm"
.
          DISPLAY   *P60:24,*EL,"pattranf";
          OPEN      PATTRAN1,"pattranf"
.
          DISPLAY   *P60:24,*EL,"patlocaf";
          OPEN      PATLOCA1,"patlocaf"
.
          DISPLAY   *P60:24,*EL,"pcpdisaf";
          OPEN      PCPDISA1,"pcpdisaf"
.
          DISPLAY   *P60:24,*EL,"pcpdscaf";
          OPEN      PCPDSCA1,"pcpdscaf"
.
          DISPLAY   *P60:24,*EL,"pcpdiaaf";
          OPEN      PCPDIAA1,"pcpdiaaf"
.
          DISPLAY   *P60:24,*EL,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P60:24,*EL,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P60:24,*EL,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P60:24,*EL,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P60:24,*EL,"pcprelaf";
          OPEN      PCPRELA1,"pcprelaf"
.
          DISPLAY   *P60:24,*EL,"pcpoutaf";
          OPEN      PCPOUTA1,"pcpoutaf"
.
          DISPLAY   *P60:24,*EL,"pcppdsaf";
          OPEN      PCPPDSA1,"pcppdsaf"
.
          DISPLAY   *P60:24,*EL,"pcpdefaf";
          OPEN      PCPDEFA1,"pcpdefaf"
.
          DISPLAY   *P60:24,*EL,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P60:24,*EL,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FORTY1;*77,PCCNSSEC,*89,PCCNUREL,PCCNUDEF
          READ      CONTROLF,FIFTY9;*132,CALRDESC
.
          DISPLAY   *P60:24,*EL,"pcpnuraf";
          OPEN      PCPNURA1,"pcpnuraf"
.
          DISPLAY   *P60:24,*EL,"pcpintaf";
          OPEN      PCPINTA1,"pcpintaf"
.
          DISPLAY   *P60:24,*EL,"pcpevaaf";
          OPEN      PCPEVAA1,"pcpevaaf"
.
          DISPLAY   *P60:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P60:24,"patnobef";
          OPEN      PATNOBE1,"patnobef"
.
          DISPLAY   *P60:24,"patwr1af";
          OPEN      PATWR1A4,"patwr1af"
.
          DISPLAY   *P60:24,"patgsrnf";
          OPEN      PATGSRN1,"patgsrnf";
          OPEN      PATGSRN2,"patgsrnf":
          OPEN      PATGSRN3,"patgsrnf";
          OPEN      PATGSRN4,"patgsrnf":
.
          DISPLAY   *P60:24,"patpramf";
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
.
          DISPLAY   *P60:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf";
.
          DISPLAY   *P60:24,"patdschf";
          OPEN      PATDSCH1,"patdschf";
.
          MOVE      "11111101",ALRTMASK       * Set up the Alert Mask to
.                                             * Display all Alerts execpt
.                                             * Bad - Debts
INIT9999  RETURN
.
.**************************************************************************
.*                                  CLR0000                               *
.*                             Clear variables                            *
.**************************************************************************
CLR0000   MOVE      ZERO,CALLN 
          MOVE      ONE,COUNTER
.
CLR1000   STORE      SP20,COUNTER,UR1,UR2,UR3,UR4,UR5,UR6,UR7,UR8,UR9,UR10,UR11:
                              UR12,UR13,UR14 
          STORE      ZERO,COUNTER,AD1,AD2,AD3,AD4,AD5,AD6,AD7,AD8,AD9,AD10,AD11:
                              AD12,AD13,AD14 
          STORE      SP20,COUNTER,ADM1,ADM2,ADM3,ADM4,ADM5,ADM6,ADM7,ADM8,ADM9:
                              ADM10,ADM11,ADM12,ADM13
          STORE      ZERO,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                 ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13
          STORE      SP60,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                 DESC8,DESC9,DESC10,DESC11,DESC12,DESC13
          STORE      SP20,COUNTER,NCOD1,NCOD2,NCOD3,NCOD4,NCOD5,NCOD6,NCOD7:
                                 NCOD8,NCOD9,NCOD10,NCOD11,NCOD12,NCOD13
          STORE      SP20,COUNTER,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,NUM7,NUM8,NUM9:
                                 NUM10,NUM11,NUM12,NUM13
          STORE      SP20,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                 UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13
          STORE      SP20,COUNTER,TIME1,TIME2,TIME3,TIME4,TIME5,TIME6,TIME7:
                                 TIME8,TIME9,TIME10,TIME11,TIME12,TIME13
          ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER
          GOTO      CLR1000 IF LESS
.
CLR9999  RETURN
.
.************************************************************************
.*                                 SCR0000                              *
.*                               Display screen layout                  *
.*  Called by : ML1000                                                  *
.************************************************************************
SCR0000 
.
SCR1000   HLINE     *G37,2,58,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = By Admission No.":
                    *P1:6,*V2LON,TWO,*HOFF," = By U/R No.":
                    *P1:8,"Select Option : "
.
SCR2000   KEYIN     *P17:8,*EL,*DV,UNDLN1,*P17:8,*V2LON,OPTION
.
          COMPARE   ONE,OPTION
          GOTO      SCR3000 IF EQUAL
.
          COMPARE   TWO,OPTION
          GOTO      SCR4000 IF EQUAL
.
          COMPARE   ZERO,OPTION
          GOTO      SCR5000 IF EQUAL
.
          BEEP      
          GOTO      SCR2000
.
SCR3000   MOVE      ONE,EXIT
          GOTO      SCR9999
.
SCR4000   MOVE      TWO,EXIT
          GOTO      SCR9999
.
SCR5000   MOVE      ZERO,EXIT
.
SCR9999   RETURN
.
.*************************************************************************
.*                                 DAMS0000                              *
.*                         Display patients by admission no.             *
.*************************************************************************
DAMS0000  
          MOVE      ZERO,EXIT
          DISPLAY   *P58:2,"- By Admission Number ",*P1:3,*EF: 
                    *P1:4,"Admission No : "
.
DAMS1000  KEYIN     *P16:4,*EL,*DV,UNDLN8,*P16:4,*V2LON,URNUM
.
          COMPARE   ZERO,URNUM
          GOTO      DAMS9000 IF EQUAL
.
          CALL      PCHK0000                 * Validate patient
          BRANCH    FLAG8,DAMS1000           * Invalid patient
          MOVE      AURNO,PURNO
          GOTO      DAMS9999                 * Valid patient
.
DAMS9000  MOVE      ONE,EXIT
.
DAMS9999  RETURN
.
.*************************************************************************
.*                                 PCHK0000                              *
.*                         Validate patient                              *
.*************************************************************************
.
.         Validate admission no. against admissions file
.
PCHK0000  MOVE      ZERO,FLAG8
          MOVE      URNUM,AADMNO
          PACK      KEY8,AADMNO
. 
          CALL      RDMISS1
.
          BRANCH    OVRCD,PCHK1000
.
          BRANCH    ASTAT,PCHK0900
          COMPARE   FIVE,ASTAT
          GOTO      PCHK0800 IF EQUAL
.
          COMPARE   ASTAT,THREE
          GOTO      PCHK9999 IF NOT EQUAL
.
          PACK      KEY8,AADMNO
          CALL      RDDSCH1
          BRANCH    OVRCD,PCHK2000
.
.         Set up discharge date
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DATEB
.
.
          GOTO      PCHK9999                 * Valid patient
.
PCHK0800  DISPLAY   *P1:24,*EL,*B,"This pre-admission has been cancelled.  ";
          CALL      HITENTER
          MOVE      ONE,FLAG8
          GOTO      PCHK9999
.
PCHK0900  DISPLAY   *P1:24,*EL,*B,"This patient is a pre-admission.  ";
          CALL      HITENTER
          MOVE      ONE,FLAG8
          GOTO      PCHK9999
.
PCHK1000  DISPLAY   *P1:24,*EL,*B,"Patient is not on file.  ";
          CALL      HITENTER
          MOVE      ONE,FLAG8
          GOTO      PCHK9999
.
PCHK2000  DISPLAY   *P1:24,*EL,*B,"Missing Discharge record.";
          CALL      HITENTER
          MOVE      ONE,FLAG8
.
PCHK9999  RETURN
.
.*************************************************************************
.*                                 DURN0000                              *
.*                         Display patients by U/R no.                   *
.*************************************************************************
DURN0000  MOVE      ZERO,FLAG9               * Tells if we have displayed any
          MOVE      ZERO,EXIT
          DISPLAY   *P58:2,"- By U/R Number ",*P1:3,*EF: 
                    *P1:4,"U/R No : "
.
          MOVE      TEN,CCOL
          MOVE      FOUR,CVERT
          MOVE      TWO,SRCHOPT
          MOVE      ZERO,SRCHSYS
.
DURN1000  CALL      KURN
.
          BRANCH    EXIT,DURN9999            * Nothing was input
          BRANCH    OVRCD,DURN2000    
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,DURN2000
          GOTO      DURN3000
.
DURN2000  DISPLAY   *P1:24,*EL,*B,"U/R number is not on file.  ";
          CALL      HITENTER
          GOTO      DURN1000
.
.         Display patient details
.
DURN3000  CALL      PMIHEAD
          DISPLAY   *P5:7,*V2LON," Adm Date ":
                    *P16:7," Dis Date ":
                    *P27:7,"Admission Type":
                    *P48:7,"Attending Doctor":
                    *P76:7,"Plan";
          MOVE      ONE,COUNTER
          MOVE      EIGHT,YVAL
          MOVE      PURNO,PVIURNO
          PACK      KEY24,PVIURNO,Z30
.
          CALL      RDSVISA2
.
DURN4000  CALL      RDPVISA2
          BRANCH    OVRCD,DURN6000
.
          MATCH     PURNO,PVIURNO
          GOTO      DURN6000 IF NOT EQUAL
.
          COMPARE   THREE,PVITYPE
          GOTO      DURN4000 IF NOT EQUAL
.
.         Now read the admissions file with the patient we have just obtained
.
          MOVE      PVIBILL,AADMNO
          PACK      KEY8,AADMNO
.
          CALL      RDMISS1
.
          BRANCH    OVRCD,DURN4000
.
          BRANCH    ASTAT,DURN4000           * If ASTAT=1 or 5 then ignore
          COMPARE   FIVE,ASTAT
          GOTO      DURN4000 IF EQUAL
.
.         If ASTAT=3 then read the discharge file.  If no record exists then
.         GOTO DURN4000
.
          COMPARE   ASTAT,THREE
          GOTO      DURN4102 IF NOT EQUAL
.
DURN4100  MOVE      PVIBILL,DADMNO
          PACK      KEY8,DADMNO
          CALL      RDDSCH1
          BRANCH    OVRCD,DURN4000
.
.         Set up discharge date
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DATEB
          GOTO      DURN4105
.
.         Patient is current or on leave so set up description
.
DURN4102  COMPARE   TWO,ASTAT
          GOTO      DURN4103 IF NOT EQUAL
          MOVE      "CURRENT   ",DATEB   
          GOTO      DURN4105
.
DURN4103  MOVE      "ON-LEAVE  ",DATEB         * ASTAT is 4
.
.         Now display the data
.
.         Set up admission date
.
DURN4105  UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      PACDATE
          MOVE      CPCDATE,DATEA
.
.         Set up admission type
.
DURN4108  BRANCH    ASTAT,DURN4110,DURN4120,DURN4130,DURN4140,DURN4150
.
DURN4110  MOVE      "Pre-admission    ",DESCA
          GOTO      DURN4152
.
DURN4120  MOVE      "Current admission",DESCA
          GOTO      DURN4152
.
DURN4130  MOVE      "Discharged       ",DESCA
          GOTO      DURN4152
.
DURN4140  MOVE      "On leave         ",DESCA          
          GOTO      DURN4152
.
DURN4150  MOVE      "Cancelled        ",DESCA
.
.         Get doctors name
.
DURN4152  MOVE      ADOCTA,DCODE             * Attending doctor code
          PACK      KEY6,DCODE
.
          CALL      RDDOCT1
          BRANCH    OVRCD,DURN4155
          GOTO      DURN4156
.
DURN4155  MOVE      SP30,DTITL
          MOVE      SP30,DSNAME
.
.         Check if the admission number has any records in the PCPDIAFD file
.         If it has then PLAN=YES else PLAN=NO
.
DURN4156  MOVE      AADMNO,PCDIADMN
          PACK      KEY33,PCDIADMN
.
          CALL      RSPCDIA1
.
          CALL      RKPCDIA1
          BRANCH    OVRCD,DURN4157
.
          COMPARE   AADMNO,PCDIADMN
          GOTO      DURN4157 IF NOT EQUAL
.
          MOVE      "Yes",PLAN
          GOTO      DURN4160
.
DURN4157  MOVE      "No",PLAN
.
DURN4160  DISPLAY   *P1:YVAL,*V2LON,COUNTER,*HOFF,DOT:    * Line no.
                    *P5:YVAL,DATEA:                       * Adm date
                    *P16:YVAL,DATEB:                      * Dis date
                    *P27:YVAL,DESCA:                      * Admission type
                    *P48:YVAL,DTITL,SP1,DSNAME:           * Attending doctor
                    *P77:YVAL,PLAN                        * Plan
          MOVE      ONE,FLAG9                * We have displayed something
.
.         Save the admission number so we can access details
.
          STORE     AADMNO,COUNTER,ADMIS1,ADMIS2,ADMIS3,ADMIS4,ADMIS5,ADMIS6:
                                   ADMIS7,ADMIS8,ADMIS9,ADMIS10,ADMIS11:
                                   ADMIS12,ADMIS13,ADMIS14,ADMIS15
          ADD       ONE,YVAL
          ADD       ONE,COUNTER
          COMPARE   TEN6,COUNTER
          GOTO      DURN4000 IF LESS
.
          DISPLAY   *P1:24,*EL,"Select the admission you want to enquire on,":
                       " (",*V2LON,"N",*HOFF,")ext screen, (",*V2LON,"E":
                       *HOFF,")xit ? ";
          SUB       ONE,COUNTER
.
DURN4200  KEYIN     *P70:24,*EL,*DV,UNDLN2,*P70:24,*V2LON,ANS2;
.
          TYPE      ANS2
          GOTO      DURN420A IF EQUAL
.
          ENDSET    ANS2
          APPEND    SP5,ANS2
          RESET     ANS2
          REP       UPPLOW,ANS2
.
          MATCH     SP2,ANS2
          GOTO      DURN0000 IF EQUAL        * keyin another U/R number
.
          MOVE      ANS2,ANS
          CMATCH    ANSE,ANS
          GOTO      DURN0000 IF EQUAL        * Exit
.
          CMATCH    ANSN,ANS
          GOTO      DURN5000 IF EQUAL        * Next screen
.
          GOTO      DURN4202
.
DURN420A  MOVE      ANS2,NUMBA
.
          COMPARE   ZERO,NUMBA
          GOTO      DURN0000 IF EQUAL
.
          COMPARE   NUMBA,COUNTER
          GOTO      DURN4202 IF LESS
.
DURN4201  GOTO      DURN7000                 * Have selected a valid number
.
DURN4202  BEEP
          GOTO      DURN4200                 * Incorrect keyin 
.
DURN5000  DISPLAY   *P5:7,*EF,*V2LON," Adm Date ":
                    *P16:7," Dis Date ":
                    *P27:7,"Admission Type":
                    *P48:7,"Attending Doctor":
                    *P76:7,"Plan";
          MOVE      ONE,COUNTER
          MOVE      EIGHT,YVAL               * Reset these
          GOTO      DURN4000                 * Display next screen
.
DURN6000  BRANCH    FLAG9,DURN6005
          DISPLAY   *P1:24,*EL,"This patient has no inpatient visits.  ";
          CALL      HITENTER
          GOTO      DURN0000                 * Get another U/R no.
.
DURN6005  DISPLAY   *P1:24,*EL,"Select the admission you want to enquire":
                       " on, (",*+,*V2LON,"E",*+,*HOFF,")xit ? ";
          SUB       ONE,COUNTER
.
DURN6100  KEYIN     *P55:24,*EL,*DV,UNDLN2,*P55:24,*V2LON,ANS2
.
          TYPE      ANS2 
          GOTO      DURN610A IF EQUAL
.
          ENDSET    ANS2
          APPEND    SP5,ANS2
          RESET     ANS2
          REP       UPPLOW,ANS2
.
          MATCH     SP2,ANS2
          GOTO      DURN0000 IF EQUAL        * keyin another U/R number
.
          MOVE      ANS2,ANS
          MATCH     ANSE,ANS
          GOTO      DURN0000 IF EQUAL        * Exit
.
          GOTO      DURN6105
.
DURN610A  MOVE      ANS2,NUMBA
.
          COMPARE   ZERO,NUMBA
          GOTO      DURN0000 IF EQUAL
.
          COMPARE   NUMBA,COUNTER
          GOTO      DURN6105 IF LESS
.
DURN6101  GOTO      DURN7000                 * Have selected a valid number
.
DURN6105  BEEP 
          GOTO      DURN6100 
.
DURN7000  LOAD       AADMNO,NUMBA,ADMIS1,ADMIS2,ADMIS3,ADMIS4,ADMIS5,ADMIS6:
                                  ADMIS7,ADMIS8,ADMIS9,ADMIS10,ADMIS11:
                                  ADMIS12,ADMIS13,ADMIS14,ADMIS15
.
DURN9999  RETURN
.
.**************************************************************************
.*                               REDISPS                                  *
.*                        Screen redisplay after calling kurn             *
.**************************************************************************
REDISPS   DISPLAY   *P1:4,*EF,"U/R No : "
.
          RETURN
.
.**************************************************************************
.*                               PATS0000                                 *
.*                Display all patients with a common surname              *
.*  Called by : ML1200                                                    *
.**************************************************************************
.
PATS0000  PACK      KEY8,PURNO
          CALL      RDMAST1                  * Master file
          CALL      RDPMPX21
          PACK      KEY8,AADMNO
.
          CALL      RDMISS1                  * Admissions file 
          CALL      PATHEAD                  * Display 3 line header
.
PATS1078  DISPLAY   *P1:7,"Admit. Diagnosis : ",*V2LON,ADIAG1
          CALL      AQST0000
          MOVE      FLAG5,EXIT
.
PATS9999  RETURN
.
.**************************************************************************
.*                               PATC0000                                 *
.*                    Check that patient is in the same ward as the       *
.*                    nursing station.                                    *
.*  Called by : PATS1000                                                  *
.**************************************************************************
.
.         Get patient's ward number
.
PATC0000  MOVE      ZERO,EXIT
.
          MOVE      DLADMNO,DTADMN           * Admission number
          PACK      KEY30,DTADMN,SP30
.
          CALL      RDSTRAN2
          CALL      RDKTRAN2
.
          BRANCH    OVRCD,PATC9000           * Have we read too far?
.
          MATCH     DTADMN,DLADMNO
          GOTO      PATC9000 IF EQUAL        * Not on file
.
.         We now have the patient's ward number (TWARD).
.         Now get the nursing ward number.  This is the ward numbers that the
.         nursing station has access to.  If TWARD is one of these numbers
.         then display that patient, else get another patient.
.         A nursing station can have access to more than one ward.
.
          MOVE      NUSTAT,NSTAT             * Nursing station
          PACK      KEY6,NSTAT,SP6
.
          CALL      RDSNURS1
.
PATC1000  CALL      RDKNURS1
.
          BRANCH    OVRCD,PATC9000           * Have we read too far?
.
          MATCH     NSTAT,NUSTAT
          GOTO      PATC9000 IF NOT EQUAL
.
          MATCH     NWARD,TWARD              * Ward comparison
          GOTO      PATC1000 IF NOT EQUAL
.
          GOTO      PATC9999                 * We have a valid patient
.
PATC9000  MOVE      ONE,EXIT
.
PATC9999  RETURN
.
.**************************************************************************
.*                               CHCK0000                                 *
.*            Run a number of checks on the display of the patients       *
.*  Called by : PATS1010                                                  *
.**************************************************************************
.
.         Check if we have only one screen of data to display
.
CHCK0000  SUB       ONE,COUNT 
          CALL      RDKLOCA1                 * Key will still be set up
.
          BRANCH    OVRCD,CHCK1000           * Only one screen of data
.
          MATCH   TMP1,LSNAME
          GOTO       CHCK1000 IF NOT EQUAL
.
          COMPARE   TWO,CALLN
          GOTO      CHCK0400 IF LESS         * Just displayed first screen
.
.         We have more than one screen of data to display and we have displayed
.         a previous screen.
.
CHCK0020  DISPLAY   *P1:24,*EL,"Input the number of the patient required, ":
                      "(",*V2LON,"N",*HOFF,")ext or (",*V2LON,"P",*HOFF:
                      ")revious screen : ";
          KEYIN     *P73:24,*DV,UNDLN2,*P73:24,*V2LON,NUMB
.
          ENDSET    NUMB 
          APPEND    SP2,NUMB
          RESET     NUMB
.
          MATCH     SP2,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          CMATCH    ANSN,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          CMATCH    ANSP,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          MOVE      COUNT,DIM2
          REP       " 0",NUMB
          REP       " 0",DIM2
          MATCH   NUMB,DIM2
          GOTO      CHCK0021 IF LESS
          GOTO      CHCK9000
.
CHCK0021  DISPLAY   *P1:24,*EL,*B,"You must input one of the displayed ":
                      "numbers.  ";
          CALL      HITENTER 
          GOTO      CHCK0020 
.
.         More than one screen of data to display but we have just displayed
.         screen one so there is no previous screen
.
CHCK0400  DISPLAY   *P1:24,*EL,"Input the number of the patient required,":
                        " (",*V2LON,"N",*HOFF,")ext screen : ";
          KEYIN     *P59:24,*EL,*DV,UNDLN2,*P59:24,*V2LON,NUMB
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
.
          MATCH     SP2,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          CMATCH    ANSN,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          MOVE      COUNT,DIM2
          REP       " 0",NUMB
          REP       " 0",DIM2
          MATCH     NUMB,DIM2
          GOTO      CHCK0501 IF LESS         * Incorrect keyin
          GOTO      CHCK9000
.
CHCK0501  DISPLAY   *P1:24,*EL,*B,"You must input one of the displayed ":
                      "numbers.  ";
          CALL      HITENTER
          GOTO      CHCK0400
.
.         Only one screen of data to display
.
CHCK1000  DISPLAY   *P1:24,*EL,"Input the number of the patient required : ";
          KEYIN     *P44:24,*EL,*DV,UNDLN2,*P44:24,*JR,*V2LON,NUMB
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
.
          MATCH     SP2,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          REP       " 0",NUMB
.
          MOVE      COUNT,DIM2
          REP       " 0",DIM2
.
          MATCH     NUMB,DIM2
          GOTO      CHCK1002 IF LESS         * Incorrect keyin
          GOTO      CHCK9000
.
CHCK1002  DISPLAY   *P1:24,*EL,*B,"You must input one of the displayed ":
                      "numbers.  ";
          CALL      HITENTER
          GOTO      CHCK1000
.
CHCK9000  ADD       ONE,COUNTER
.
CHCK9999  RETURN
.
.***************************************************************************
.*                               AQST0000                                  *
.*                Ask A/C/D/P/E question                                   *
.***************************************************************************
AQST0000  DISPLAY   *P1:24,*EL,"(",*V2LON,"A",*HOFF,")dmission Details, (":
                       *V2LON,"C",*HOFF,")are Plans, (",*V2LON,"D",*HOFF:
                       ")ischarge,":
                       " (",*V2LON,"P",*HOFF,")rint, (",*V2LON,"E",*HOFF:
                       ")xit ?";
.
AQST1000  KEYIN     *P67:24,*DV,UNDLN1,*P67:24,*V2LON,ANS
.
          CMATCH    ANSE,ANS
          GOTO      AQST9000 IF EQUAL
.
          CMATCH    ANSA,ANS
          GOTO      AQST9001 IF EQUAL
.
          CMATCH    ANSC,ANS
          GOTO      AQST9002 IF EQUAL
.
          CMATCH    ANSD,ANS
          GOTO      AQST9003 IF EQUAL
.
          CMATCH    ANSP,ANS
          GOTO      AQST9004 IF EQUAL
.
          BEEP
          GOTO      AQST0000                 * Incorrect keyin
.
AQST9000  MOVE      ONE,FLAG5
          GOTO      AQST9999 
.
AQST9001  MOVE      TWO,FLAG5
          GOTO      AQST9999 
.
AQST9002  MOVE      THREE,FLAG5
          GOTO      AQST9999 
.
AQST9003  MOVE      FOUR,FLAG5
          GOTO      AQST9999 
.
AQST9004  MOVE      FIVE,FLAG5
.
AQST9999  RETURN
.
.**************************************************************************
.*                               ADMD0000                                 *
.*                        Admission details                               *
.*  Called by : ML2000                                                    *
.**************************************************************************
ADMD0000  MOVE      "C ",TCODE
          MOVE      PCONT,ACODE              * Get Country of Birth description 
          PACK      KEY5,TCODE,ACODE
.
          CALL      RDCODE1
.
          BRANCH    OVRCD,ADMD1000           * Should not occur
.
          MOVE      TDESC,TDESCB
.
ADMD1000  MOVE      "M ",TCODE
          MOVE      PMSTAT,ACODE             * Get marital status description
          PACK      KEY5,TCODE,ACODE
.
          CALL      RDCODE1
.
          BRANCH    OVRCD,ADMD2000           * Should not occur
.
          MOVE      TDESC,TDESCM     
.
ADMD2000  MOVE      "R ",TCODE
          MOVE      PREG,ACODE               * Get religion description
          PACK      KEY5,TCODE,ACODE
.
          CALL      RDCODE1
.
ADMD9999  RETURN
.
.*************************************************************************
.*                             DADM0000                                  *
.*                       Display details                                 *
.*************************************************************************
DADM0000  UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          PACK      ADM,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",ADM                 * Admission date
          DISPLAY   *P1:8,*EF:
                    *P11:9,"Address        : ",*V2LON,PADD1,*HOFF:
                    *P26:10,": ",*V2LON,PADD2,*HOFF:
                    *P26:11,": ",*V2LON,PSUBRB,"      ",PPOST,*HOFF:
                    *P11:13,"Cntry of Birth : ",*V2LON,PCONT,"  ",TDESCB:
                    *P11:14,*HOFF,"Marital Status : ",*V2LON,PMSTAT,"  ",TDESCM:
                    *P11:15,*HOFF,"Religion       : ",*V2LON,PREG,"  ",TDESC:
                    *P11:16,*HOFF,"Admission Date : ",*V2LON,ADM,*HOFF:
                    *P11:17,"Admission Time : ",*V2LON,ATIME
.
          CALL      AQST0000
          MOVE      FLAG5,EXIT
.
DADM9999  RETURN
.
.**************************************************************************
.*                               CARE0000                                 *
.*                Display care plans                                      *
.*  Called by : ML3000                                                    *
.**************************************************************************
CARE0000  DISPLAY   *P1:8,*EF:               * Display screen layout
                    *P7:9,*V2LON,"Date":
                    *P17:9,"Nursing Diagnosis":
                    *P76:9,"Actv"
          MOVE      ZERO,FLAG1
          MOVE      ZERO,FLAG2
          MOVE      ZERO,FLAG12
          MOVE      ONE,TMP2
          MOVE      ZERO,COUNTER
          MOVE      TEN,YVAL
          MOVE      SP2,ANS
.
.
.         Read diagnosis file and display in reverse order.
.
          MOVE      ZERO,FLAG10
          MOVE      TEN,YVAL
          MOVE      AADMNO,PCDIADMN         * Admission number
          PACK      KEY33,PCDIADMN,Z30       * Get to end of file
.
          CALL      RSPCDIA1
.
CARE2000  CALL      RPPCDIA1                 * READKP
          BRANCH    OVRCD,CARE8999           * EOF
.
          COMPARE   PCDIADMN,AADMNO         * Have we read too far?
          GOTO      CARE8999 IF NOT EQUAL
.
          ADD       ONE,COUNTER 
          DISPLAY   *P2:YVAL,*V2LON,COUNTER,*HOFF,DOT * Line counter
          MOVE      ONE,FLAG10               * We have printed something
.
          REP       " 0",PCDIDATE
          UNPACK    PCDIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      ADM,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          DISPLAY   *P5:YVAL,ADM             * Date
.
.         Get nursing diagnosis description
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
.
          ENDSET    PCDIDCOD
          APPEND    SP4,PCDIDCOD
          RESET     PCDIDCOD
.
          MATCH     SP4,PCDIDCOD
          GOTO      CARE3000 IF EQUAL
.
          MOVE      ONE,FLAG11
          MOVE      ZERO,FLAG12
          MOVE      DLADMNO,PCPDADMN         * Admission number
          MOVE      PCDINURS,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20 
.
          CALL      RSPCPDS1
          BRANCH    FLAG11,CARE2500
.
CARE2400  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CARE5000 IF NOT LESS
.
CARE2500  CALL      RKPCPDS1
.
          BRANCH    OVRCD,CARE2000
.
          COMPARE     AADMNO,PCPDADMN
          GOTO      CARE2000 IF NOT EQUAL
.
          MATCH     PCDINURS,PCPDDCOD
          GOTO      CARE2000 IF NOT EQUAL
.
          DISPLAY   *P17:YVAL,PCPDDESC       * Description
.
          BRANCH    FLAG12,CARE2400
          MOVE      ONE,FLAG12
.
          GOTO      CARE3503
.
CARE3000  MOVE      ONE,FLAG2                * Set flag
          MOVE      ZERO,FLAG8
          MOVE      SIX,PCDSTYPE             * Nursing diagnosis
          MOVE      PCDIDIAG,PCDSCODE        * Description code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
.
          CALL      RSPCDSC1
          BRANCH    FLAG2,CARE3100
.
CARE3050  ADD       ONE,YVAL
.
          COMPARE   TWENTY3,YVAL              
          GOTO      CARE5000 IF NOT LESS
.
CARE3100  CALL      RKPCDSC1
          BRANCH    OVRCD,CARE2000           * Not on file
.
          COMPARE   SIX,PCDSTYPE
          GOTO      CARE2000 IF NOT EQUAL
.
          MATCH     PCDIDIAG,PCDSCODE
          GOTO      CARE2000 IF NOT EQUAL
.
CARE3500  DISPLAY   *P17:YVAL,PCDSDESC       * Description
.
          BRANCH    FLAG8,CARE3050
          MOVE      ONE,FLAG8
.
CARE3503  BRANCH    PCDISTAT,CARE3504,CARE3505 * Activity status
.
CARE3504  DISPLAY   *P78:YVAL,ANSY           * Activity
          GOTO      CARE4000
.
CARE3505  DISPLAY   *P78:YVAL,ANSN
.
.         Diagnosis description
.
CARE4000  STORE     PCDSDESC,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13 
.
.         Date
.
          STORE     ADM,COUNTER,ADM1,ADM2,ADM3,ADM4,ADM5,ADM6,ADM7:
                                ADM8,ADM9,ADM10,ADM11,ADM12,ADM13 
.
.         Time
.
          STORE     PCDITIME,COUNTER,TIME1,TIME2,TIME3,TIME4,TIME5,TIME6,TIME7:
                                     TIME8,TIME9,TIME10,TIME11,TIME12,TIME13
.
.         Admission number
.
          STORE     PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13 
.
.         Nurse code
.
          STORE     PCDINURS,COUNTER,NCOD1,NCOD2,NCOD3,NCOD4,NCOD5,NCOD6,NCOD7:
                                     NCOD8,NCOD9,NCOD10,NCOD11,NCOD12,NCOD13 
.
.         Unique key
.
          STORE     PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
.
.         Description number
.
          STORE     PCDIDCOD,COUNTER,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,NUM7:
                                     NUM8,NUM9,NUM10,NUM11,NUM12,NUM13 
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CARE4100 IF NOT LESS         
.
.         Jump back to the appropriate loop
.
          BRANCH    FLAG12,CARE2500
          GOTO      CARE3100          
.
CARE4100  ADD       ONE,TMP2                 * Indicates we have filled a screen
.
CARE5000  DISPLAY   *P1:24,*EL,"Select the care plan you want to enquire on,":
                      " (",*V2LON,"N",*HOFF,")ext or (",*V2LON,"P",*HOFF:
                      ")revious screen : "; 
          KEYIN     *P76:24,*EL,*DV,UNDLN2,*P76:24,*V2LON,NUMB
.
          TYPE      NUMB
          GOTO      CARE5500 IF EQUAL
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
          REP       UPPLOW,NUMB
.
          MATCH     SP2,NUMB               * Return
          GOTO      CARE9200 IF EQUAL
.
          CMATCH    ANSP,NUMB
          GOTO      CARE9002 IF EQUAL        * Previous screen
.
          CMATCH    ANSN,NUMB
          GOTO      CARE9004 IF EQUAL        * Next screen
.
          GOTO      CARE5700
.
CARE5500  MOVE      NUMB,SELECTN
.
          COMPARE   ZERO,SELECTN
          GOTO      CARE9200 IF EQUAL
.
          COMPARE   SELECTN,COUNTER
          GOTO      CARE5700 IF LESS
.
          GOTO      CARE9999 
.
CARE5700  DISPLAY  *P1:24,*EL,*B,"You must input one of the displayed numbers. "
          CALL      HITENTER
          GOTO      CARE5000
.
.         Determine what type of message to put on line 24
.
.         Last screen of data was displayed but check if this occured on the
.         first screen (if so then TMP2=1)
.
CARE8999  BRANCH    FLAG10,CARE9000
          DISPLAY   *P1:24,*EL,"No care plans on file.  ";
          CALL      HITENTER
          GOTO      CARE9200
. 
CARE9000  COMPARE   ONE,TMP2
          GOTO      CARE9005 IF EQUAL         
.
.         End of data occured but not on first screen
.
CARE9001  DISPLAY   *P1:24,*EL,"Select the care plan you want to enquire on,":
                      " (",*V2LON,"P",*HOFF,")revious screen : "; 
.
          KEYIN     *P66:24,*EL,*DV,UNDLN2,*P66:24,*V2LON,NUMB
.
          TYPE      NUMB
          GOTO      CARE900A IF EQUAL
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
          REP       UPPLOW,NUMB
.
          MATCH     SP2,NUMB               * Return
          GOTO      CARE9200 IF EQUAL
.
          CMATCH    ANSP,NUMB
          GOTO      CARE9002 IF EQUAL        * Previous screen
.
          GOTO      CARE900B
.
CARE900A  MOVE      NUMB,SELECTN
.
          COMPARE   ZERO,SELECTN
          GOTO      CARE9200 IF EQUAL
.
          COMPARE   SELECTN,COUNTER
          GOTO      CARE900B IF LESS
.
          GOTO      CARE9999 
.
CARE900B  DISPLAY  *P1:24,*EL,*B,"You must input one of the displayed numbers. "
          CALL      HITENTER
          GOTO      CARE9001
.
.         In order to get to the start of the previous screen we READKS 26 times
.         NOTE: We read forward because our main loop is reading backwards.
.
CARE9002  MOVE      ONE,COUNTER
.
CARE9003  CALL      RKPCDIA1
          ADD       ONE,COUNTER              * OVRCD etc. won't occur 
          COMPARE   TWENTY7,COUNTER
          GOTO      CARE9003 IF LESS
.
CARE9004  MOVE      ZERO,COUNTER
          MOVE      TEN,YVAL
          DISPLAY   *P1:YVAL,*EF
          GOTO      CARE2000                 * Display screen now
.
.         End of data occured on first screen
.
CARE9005  DISPLAY   *P1:24,*EL,"Select the care plan you want to enquire on : ";
.
          KEYIN     *P47:24,*DV,UNDLN2,*P47:24,*V2LON,NUMB
.
          TYPE      NUMB
          GOTO      CARE9006 IF EQUAL
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
          REP       UPPLOW,NUMB
.
          MATCH     SP2,NUMB               * Return
          GOTO      CARE9200 IF EQUAL
.
          GOTO      CARE9100
.
CARE9006  MOVE      NUMB,SELECTN
.
          COMPARE   ZERO,SELECTN
          GOTO      CARE9200 IF EQUAL
.
          COMPARE   SELECTN,COUNTER
          GOTO      CARE9100 IF LESS
.
          GOTO      CARE9999 
.
CARE9100  DISPLAY *P1:24,*EL,*B,"You must input one of the displayed numbers. ";
          CALL      HITENTER
          GOTO      CARE9005                 * Incorrect keyin
.
CARE9200  CALL      AQST0000
          MOVE      FLAG5,EXIT 
          MOVE      ONE,FLAG1
.
CARE9999  RETURN
.
.**************************************************************************
.*                                CDET000                                 *
.*                    Specific care plan details                          *
.*  Called by : ML3000                                                    *
.**************************************************************************
CDET0000  MOVE      ZERO,FLAG1
          DISPLAY   *P1:8,*EF
          MOVE      SELECTN,COUNTER             * Care plan number selected
.
.         Get diagnosis date and time
.
          LOAD      ADM,COUNTER,ADM1,ADM2,ADM3,ADM4,ADM5,ADM6,ADM7:
                                ADM8,ADM9,ADM10,ADM11,ADM12,ADM13 
          LOAD     PCDITIME,COUNTER,TIME1,TIME2,TIME3,TIME4,TIME5,TIME6,TIME7:
                                TIME8,TIME9,TIME10,TIME11,TIME12,TIME13 
          DISPLAY   *P1:9,"Diagnosis Date   : ",ADM,SP1,"(",PCDITIME,")"
.
.         Get nursing diagnosis
.
          LOAD      PCDSDESC,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13 
          DISPLAY   *P1:10,"Nursing Diagnosis: ",PCDSDESC
.
.         Get nurse based upon the nurse code that was saved
.
          DISPLAY   *P1:11,"Nurse            : "
          LOAD      PCNUCODE,COUNTER,NCOD1,NCOD2,NCOD3,NCOD4,NCOD5,NCOD6,NCOD7:
                                     NCOD8,NCOD9,NCOD10,NCOD11,NCOD12,NCOD13 
          PACK      KEY6,PCNUCODE
.
          CALL      RDPCNUR1
          BRANCH    OVRCD,CDET0500 
.
          DISPLAY   *P20:11,PCNUNAME:
                    *P41:11,PCNUCLSS
.
.         Display   related factors
.
CDET0500  CALL      REL0000
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
.         Display   characteristics
.
          CALL      CHAR0000
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
.         Display desired outcomes
.
          CALL      DESI0000
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
.         Display interventions   
.
          CALL      INTE0000
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          DISPLAY   *P1:24,"(",*V2LON,"E",*HOFF,")valuations or (",*V2LON:
                       "R",*HOFF,")eturn : ";
.
CDET1000  KEYIN     *P29:24,*EL,*DV,UNDLN2,*P29:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP2,ANS
          RESET     ANS
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
          MATCH     SP2,ANS
          GOTO      CDET9000 IF EQUAL
.
          BEEP
          GOTO      CDET1000
.
CDET9000  MOVE      ONE,FLAG1
. 
CDET9999  RETURN
.
.
.**************************************************************************
.*                                REL0000                                 *
.*                        Display related factors                         *
.*  Called by : ML4000                                                    *
.**************************************************************************
REL0000   MOVE      TEN2,YVAL
          MOVE      ONE,FLAG6
          BRANCH    PCCNUREL,REL0100         * using related factors ?
          GOTO      REL9999
.
REL0100   ADD       ONE,YVAL
          MOVE      ZERO,FLAG6
          DISPLAY   *P1:YVAL,*V2LON,"Related Factors  ",*HOFF,": "
.
          LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
.
          PACK      KEY19,PCDIUNIQ,SP20
          CALL      RSPCREL1
REL1000   CALL      RKPCREL1
          BRANCH    OVRCD,REL9999
.
          MATCH     PCREUNIQ,PCDIUNIQ
          GOTO      REL9999 IF NOT EQUAL
.
          PACK      PCREDCOD,PCREDCOD,SP4
.
          MATCH     SP4,PCREDCOD
          GOTO      REL2000 IF EQUAL
.
.         Description number is non blank so get description from PDS file
.
.         Admission number
.
          LOAD      PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13 
.
          PACK      KEY14,PCDIADMN,PCREDCOD,SP20
          CALL      RSPCPDS1
REL1100   CALL      RKPCPDS1
          BRANCH    OVRCD,REL1000
.
          MATCH     PCPDDCOD,PCREDCOD       * Have we read too far?
          GOTO      REL1000 IF NOT EQUAL
.
          COMPARE   PCPDADMN,PCDIADMN
          GOTO      REL1000 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCPDDESC       * Description
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      REL1100 IF LESS
.
          CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,REL1200            * Next screen
          GOTO      REL9999
.
REL1200   MOVE      TEN3,YVAL
          DISPLAY   *P20:YVAL,*EF            * Clear screen for next screen
          GOTO      REL1100 
.
.         Description number is blank so get description from DSC file
.         First get the related factor code from the PCPRELFD file.  We need
.         this code to access the PCPDSCFD file
.
.         Unique key
.
REL2000   MOVE      PCDIUNIQ,PCREUNIQ
          MOVE      EIGHT,PCDSTYPE
          MOVE      PCREFACT,PCDSCODE
.
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
REL2100   CALL      RKPCDSC1
          BRANCH    OVRCD,REL9999
.
          COMPARE   PCDSTYPE,EIGHT
          GOTO      REL1000 IF NOT EQUAL
.
          MATCH     PCREFACT,PCDSCODE
          GOTO      REL1000 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCDSDESC       * Description
          MOVE      ONE,FLAG6
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      REL2100 IF LESS
.
          CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,REL2200            * Next screen
          GOTO      REL9999
.
REL2200   MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Related Factors  ",*HOFF,": "
          GOTO      REL2100
.
REL9999   RETURN
.
.**************************************************************************
.*                               BOTM0000                                 *
.*                          Line 24 message                               *
.*  Called by : REL0000                                                   *
.**************************************************************************
BOTM0000  MOVE      ZERO,FLAG3
          DISPLAY  *P1:24,"(",*V2LON,"N",*HOFF,")ext screen, (",*V2LON,"E":
                      *HOFF,")valuations or (",*V2LON,"R",*HOFF,")eturn ? ";
.
BOTM1000  KEYIN    *P44:24,*EL,*DV,UNDLN1,*P44:24,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS
          GOTO      BOTM8000 IF EQUAL        
.
          MATCH     ANSR,ANS
          GOTO      BOTM9999 IF EQUAL
.
          MATCH     ANSN,ANS              * Next screen
          GOTO      BOTM9000 IF EQUAL
.
          MATCH     ANSE,ANS
          GOTO      BOTM9999 IF EQUAL
.
          BEEP
          GOTO      BOTM1000                 * Incorrect keyin
.
BOTM8000  MOVE      ANSR,ANS
.
BOTM9000  MOVE      ONE,FLAG3
.
BOTM9999  RETURN
.
.**************************************************************************
.*                               CHAR0000                                 *
.*                          Display characteristics                       *
.*  Called by : CDET0000                                                  *
.**************************************************************************
CHAR0000  
          BRANCH    PCCNUDEF,CHAR0100          * using defining characteristics?
          GOTO      CHAR9999
.
CHAR0100  BRANCH    FLAG6,CHAR0500
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CHAR1000 IF EQUAL
. 
CHAR0500  MOVE      ZERO,FLAG6
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CHAR1000 IF EQUAL
          GOTO      CHAR3011
.
CHAR1000  CALL      BOTM0000
          BRANCH    FLAG3,CHAR2000
          GOTO      CHAR9999
.
CHAR2000  MOVE      TEN3,YVAL 
          DISPLAY   *P1:YVAL,*EF
.
CHAR3011  DISPLAY   *P1:YVAL,*V2LON,"Characteristics  ",*HOFF,": "
.         
          BRANCH    FLAG2,CHAR8200           * True if description no. is blank
.
.         Description number is non blank so get description from PDS file
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCDIDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
          CALL      RSPCDSC1
.
CHAR3100  CALL      RKPCDSC1
.
          BRANCH    OVRCD,CHAR9999
.
          MATCH     PCPDDCOD,PCDIDCOD       * Have we read too far?
          GOTO      CHAR9999 IF NOT EQUAL
.
          COMPARE   PCPDADMN,PCDIADMN
          GOTO      CHAR9999 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCPDDESC       * Description
          MOVE      ONE,FLAG1
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL 
          GOTO      CHAR3100 IF LESS
.
CHAR8000  CALL      BOTM0000
.
          MATCH     ANSN,ANS
          GOTO      CHAR8100 IF EQUAL
          GOTO      CHAR9999
.
CHAR8100  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF
          DISPLAY   *P1:YVAL,"Characteristics  : "
          GOTO      CHAR3100                 * Get next screen
.
.         Unique key
.
CHAR8200  LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
          MOVE      PCDIUNIQ,PCDEUNIQ
          PACK      KEY19,PCDEUNIQ,SP20
.
          CALL      RSPCDEF1
.
CHAR8205  CALL      RKPCDEF1
          BRANCH    OVRCD,CHAR9999
.
          MATCH     PCDEUNIQ,PCDIUNIQ        * Have we read too far?
          GOTO      CHAR9999 IF LESS
.
.         We have the characteristics code.  Now read the PCPDSCFD file to
.         get the description
.
          MOVE      TEN,PCDSTYPE
          MOVE      PCDECHAR,PCDSCODE
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20          
          CALL      RSPCDSC1
.
CHAR8210  CALL      RKPCDSC1
          BRANCH    OVRCD,CHAR9999
.
          COMPARE     PCDSTYPE,TEN
          GOTO      CHAR9999 IF NOT EQUAL    * Have we read too far?
.
          MATCH     PCDSCODE,PCDECHAR
          GOTO      CHAR9999 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCDSDESC       * Description
          MOVE      ONE,FLAG6
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CHAR8205 IF LESS
.
          CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,CHAR8220           * Next screen
          GOTO      CHAR9999
.
CHAR8220  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Characteristics  ",*HOFF,": "
          GOTO      CHAR8210
.
CHAR9999  RETURN
.
.
.**************************************************************************
.*                               DESI0000                                 *
.*                          Display desired outcomes                      *
.*  Called by : ML4000                                                    *
.**************************************************************************
.
.         Need to handle condition if desciption number is blank
.
DESI0000  BRANCH    FLAG6,DESI0001 
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI1000 IF EQUAL
.
DESI0001  MOVE      ZERO,FLAG6 
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI1000 IF EQUAL
          GOTO      DESI1010
.
DESI1000  CALL      BOTM0000
          BRANCH    FLAG3,DESI1001
          GOTO      DESI9999
.
DESI1001  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF             * Clear part of screen
.
DESI1010  DISPLAY   *P1:YVAL,*V2LON,"Desired Outcomes ",*HOFF,": "
.
          BRANCH    FLAG2,DESI5000           * True if description no. is blank
.
.         Description number is non blank so get description from PDS file
.
.         Admission number
.
          LOAD      PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13 
.
.         Description number
.
          LOAD      PCDIDCOD,COUNTER,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,NUM7:
                                     NUM8,NUM9,NUM10,NUM11,NUM12,NUM13 
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCDIDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
          CALL      RSPCDSC1
.
DESI1100  CALL      RKPCDSC1
.
          BRANCH    OVRCD,DESI1105
.
          MATCH     PCDSCODE,PCDIDCOD       * Have we read too far?
          GOTO      DESI1105 IF NOT EQUAL
.
          MATCH     PCPDDCOD,PCDIDCOD
          GOTO      DESI1105 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCPDDESC       * Description
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI1100 IF LESS
.
          CALL      BOTM0000
          BRANCH    FLAG3,DESI1105 
          GOTO      DESI9999 
.
DESI1105  BRANCH    PCOTTYPE,DESI1110,DESI1115,DESI1120,DESI1125
.
          DISPLAY   *P25:YVAL,"No Target Date"
          GOTO      DESI1130
.
DESI1110  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P25:YVAL,"By ",DATE
          GOTO      DESI1130
.
DESI1115  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P25:YVAL,"By ",PCOTDYWK," days (",DATE,")"
          GOTO      DESI1130
.
DESI1120  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P25:YVAL,"By ",PCOTDYWK," weeks (",DATE,")"
          GOTO      DESI1130
.
DESI1125  DISPLAY   *P25:YVAL,"At all times"
.
DESI1130  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL 
          GOTO      DESI1100 IF LESS
.
          CALL      BOTM0000                 * Line 24 message
.
          BRANCH    FLAG3,DESI1200           * Next screen
          GOTO      DESI9999
.
DESI1200  MOVE      TEN3,YVAL
          DISPLAY   *P20:YVAL,*EF            * Clear screen for next screen
          GOTO      DESI1100
.
.         Description number is blank so get description from DSC file
.         Unique key
.
DESI5000  LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
          MOVE      PCDIUNIQ,PCOTUNIQ
          PACK      KEY19,PCOTUNIQ,SP20
.
          CALL      RSPCOUT1
.
DESI5100  CALL      RKPCOUT1
          BRANCH    OVRCD,DESI9999
.
          MATCH     PCOTUNIQ,PCDIUNIQ        * Have we read too far?
          GOTO      DESI9999 IF NOT EQUAL
.
.         We have the outcome code.  Now read the PCPDSCFD file to get the 
.         description
.
          MOVE      SEVEN,PCDSTYPE
          MOVE      PCOTCODE,PCDSCODE
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20          
.
          CALL      RSPCDSC1
.
DESI5150  CALL      RKPCDSC1
          BRANCH    OVRCD,DESI5202
.
          COMPARE     PCDSTYPE,SEVEN
          GOTO      DESI5202 IF NOT EQUAL    * Have we read too far?
.
          MATCH     PCDSCODE,PCOTCODE
          GOTO      DESI5202 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCDSDESC       * Description
          MOVE      ONE,FLAG6
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI5150 IF LESS
.
DESI5160  CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,DESI5170
          GOTO      DESI9999
.
DESI5170  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Desired Outcomes ",*HOFF,": "
          GOTO      DESI5100
.
DESI5202  BRANCH    PCOTTYPE,DESI5205,DESI5206,DESI5207,DESI5208
.
          DISPLAY   *P25:YVAL,"No Target Date"
          GOTO      DESI9000
.
DESI5205  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P25:YVAL,"By ",DATE
          GOTO      DESI9000
.
DESI5206  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P25:YVAL,"By ",PCOTDYWK," days (",DATE,")"
          GOTO      DESI9000
.
DESI5207  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P25:YVAL,"By ",PCOTDYWK," weeks (",DATE,")"
          GOTO      DESI9000
.
DESI5208  DISPLAY   *P25:YVAL,"At all times"
.
DESI9000  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI5100 IF LESS 
          MOVE      TEN3,YVAL
          CALL      BOTM0000
          BRANCH    FLAG3,DESI5100
.
DESI9999  RETURN
.
.**************************************************************************
.*                               INTE0000                                 *
.*                          Display interventions                         *
.*  Called by : ML4000                                                    *
.**************************************************************************
.
.         With the unique key value, loop through the PCPINTFD file (partial
.         key - sequential read) and with each record found, check the 
.         description number.  If it is blank then get the description from
.         the dsc file else get it from the pds file.
.
INTE0000  BRANCH    FLAG6,INTE1010           * Move down a line?          
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      INTE1010 IF LESS
.
          CALL      BOTM0000
          BRANCH    FLAG3,INTE1001
          GOTO      INTE9999
.
INTE1001  MOVE      TEN3,YVAL
.
INTE1010  DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,": "
.
.         Now loop through the INT file.
.
          LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13
.
          MOVE      PCDIUNIQ,PCINUNIQ
          PACK      KEY19,PCINUNIQ,SP20
          CALL      RSPCINT1                 * Partial read through this file
.
INTE2000  CALL      RKPCINT1
          BRANCH    OVRCD,INTE9999
.
          MATCH     PCINUNIQ,PCDIUNIQ
          GOTO      INTE9999 IF NOT EQUAL    * Read too far
.
.         Check if this record has a description number
.
          ENDSET    PCINDCOD
          APPEND    SP4,PCINDCOD
          RESET     PCINDCOD
.
          MATCH     SP4,PCINDCOD
          GOTO      INTE6000 IF EQUAL
.
.         Description number is non-blank so get description from pds file.
.
          LOAD      PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCINDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
          CALL      RSPCPDS1
.
INTE3000  CALL      RKPCPDS1
          BRANCH    OVRCD,INTE4500
.
          COMPARE   PCDIADMN,PCPDADMN
          GOTO      INTE4500 IF NOT EQUAL
.
          MATCH     PCPDDCOD,PCINDCOD
          GOTO      INTE4500 IF NOT EQUAL    * Get next description number 
.
          DISPLAY   *P20:YVAL,PCPDDESC       * Description
.
          ADD       ONE,YVAL
          COMPARE   TWENTY2,YVAL             * Reached bottom of screen?
          GOTO      INTE3000 IF LESS
.
          MOVE      TEN3,YVAL
          CALL      BOTM0000
          BRANCH    FLAG3,INTE4000           * Next screen?
          GOTO      INTE9999                 * No
.
INTE4000  DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,":"
          GOTO      INTE3000
.
INTE4500  DISPLAY   *P25:YVAL,"Frequency : ",PCINFREQ       * Frequency  
          ADD       ONE,YVAL
          COMPARE   TWENTY2,YVAL
          GOTO      INTE2000 IF LESS
.
          MOVE      TEN3,YVAL
          CALL      BOTM0000
          BRANCH    FLAG3,INTE5000
          GOTO      INTE9999
.
INTE5000  DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,":"
          GOTO      INTE2000
.
.         Description number is blank so get description from dsc file.
.
INTE6000  MOVE      NINE,PCDSTYPE
          MOVE      PCINCODE,PCDSCODE
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP10
          CALL      RSPCDSC1
.
INTE7000  CALL      RKPCDSC1
          BRANCH    OVRCD,INTE9000
.
          COMPARE   NINE,PCDSTYPE
          GOTO      INTE9000 IF NOT EQUAL
.
          MATCH     PCINCODE,PCDSCODE
          GOTO      INTE9000 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCDSDESC       * Description
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      INTE9000 IF LESS         * Reached bottom of screen?
.
          CALL      BOTM0000                 * Next screen?
          BRANCH    FLAG3,INTE8000           * Yes
          GOTO      INTE9999                 * No
.
INTE8000  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,":"
          ADD       ONE,YVAL
          GOTO      INTE7000
.
INTE9000  DISPLAY   *P25:YVAL,"Frequency : ",PCINFREQ       * Frequency
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      INTE2000 IF LESS
.
          MOVE      TEN3,YVAL
          CALL      BOTM0000
          BRANCH    FLAG3,INTE9500
          GOTO      INTE9999
.
INTE9500  DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,":"
          ADD       ONE,YVAL
          GOTO      INTE2000
.
INTE9999  RETURN
.
.**************************************************************************
.*                               EVAL0000                                 *
.*                            Display evaluations                         *
.*  Called by : ML4000                                                    *
.**************************************************************************
EVAL0000  DISPLAY   *P1:13,*EF:
                    *P3:13,*V2LON,"Date":
                    *P12:13,"Evaluation":
                    *P71:13,"Finished";
          MOVE      TEN4,YVAL                * Set Y co-ord
          MOVE      ZERO,FLAG1               * Initialise
.
.         The description is always obtained from the pds file 
.
.         Get date of evaluation and finished (Yes/No)
.
.         Unique key
.
          MOVE      COUNTER,TMP4             * Save COUNTER
          CALL      GTUN0000                 * Get unique key
.
          LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
          MOVE      PCDIUNIQ,PCEVUNIQ
          PACK      KEY26,PCEVUNIQ,Z30       * Position at end of file
.
          CALL      RSPCEVA1
.
EVAL1000  CALL      RPPCEVA1
          BRANCH    OVRCD,EVAL8999
.
          MATCH     PCEVUNIQ,PCDIUNIQ        * Have we read too far?
          GOTO      EVAL8999 IF NOT EQUAL
.
          REP       " 0",PCEVDATE
          UNPACK    PCEVDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR 
.
.         Determine if finished or not
.
          BRANCH    PCEVSTAT,EVAL1005,EVAL1015  * Yes, No
          GOTO      EVAL1016                 * Should not occur
.
EVAL1005  MOVE      "Yes",FINISH
          GOTO      EVAL1016
.
EVAL1015  MOVE      "No",FINISH
.
.         Get nurse name and class
.
EVAL1016  MOVE      PCEVNURS,PCNUCODE
          PACK      KEY6,PCNUCODE
.
          CALL      RDPCNUR1
          BRANCH    OVRCD,EVAL2000
.
          GOTO      EVAL2001
.
EVAL2000  MOVE      SP20,PCNUNAME            * Set to blanks
          MOVE      SP3,PCNUCLSS
.
EVAL2001  DISPLAY   *P1:YVAL,DATE,SP1,"(",PCEVTIME,")":    * Date & time
                    *P25:YVAL,PCNUNAME,SP1,PCNUCLSS:       * Nurse name & class
                    *P74:YVAL,FINISH         * Evaluation status
.
.         Get description
.
.         Admission number
.
EVAL2005  MOVE      TMP4,COUNTER
.
          LOAD      PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13 
          
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCEVDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
.         Get description from pds file
.
          CALL      RSPCPDS1
.
EVAL2006  CALL      RKPCPDS1
          BRANCH    OVRCD,EVAL3050
.
          MATCH     PCPDDCOD,PCEVDCOD
          GOTO      EVAL3050 IF NOT EQUAL
.
          COMPARE     PCPDADMN,PCDIADMN
          GOTO      EVAL3050 IF NOT EQUAL
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      EVAL3005 IF EQUAL
          GOTO      EVAL3010
.
EVAL3005  CALL      BOTB0000
          BRANCH    FLAG3,EVAL3061
          GOTO      EVAL9999
.
EVAL3010  DISPLAY   *P12:YVAL,PCPDDESC       * Line description
          GOTO      EVAL2006                 * Get next description line
.
.         Put a blank line between entries
.
EVAL3050  ADD       TWO,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      EVAL1000 IF LESS
          GOTO      EVAL3060 
.
EVAL3060  CALL      BOTB0000
          BRANCH    FLAG3,EVAL3061
          GOTO      EVAL9999
. 
EVAL3061  MOVE      TEN4,YVAL
          DISPLAY   *P1:YVAL,*EF
          GOTO      EVAL1000          
.
EVAL8999  DISPLAY   *P1:24;                  * Position cursor
          CALL      HITENTER
.
EVAL9000  MOVE      ONE,FLAG1
.
EVAL9999  RETURN
.
.**************************************************************************
.*                                BOTB0000                                *
.*                         Line 24 message for evaluations                *
.**************************************************************************
BOTB0000  MOVE      ZERO,FLAG3
          DISPLAY  *P1:24,"(",*V2LON,"N",*HOFF,")ext screen": 
                      " or (",*V2LON,"R",*HOFF,")eturn ? ";
.
BOTB1000  KEYIN    *P29:24,*EL,*DV,UNDLN1,*P29:24,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS
          GOTO      BOTB9999 IF EQUAL        
.
          MATCH     ANSR,ANS
          GOTO      BOTB9999 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      BOTB2000 IF EQUAL
. 
          BEEP
          GOTO      BOTB1000
.
BOTB2000  MOVE      ONE,FLAG3
.
BOTB9999  RETURN
.
.**************************************************************************
.*                                GTUN0000                                *
.*                         Get unique key                                 *
.**************************************************************************
.
.         We encounter a slight problem when obtaining the unique key from
.         the variables we use to store it in.  The problem arises as we are
.         reading the dia file to get the unique key.  We are reading it in
.         reverse order, thus the unique key is stored in reverse order.
.         In order to obtain a value for the unique key by doing a load we 
.         need to first re-arrange the order of the variables.  Thus 
.         UKEY13 is swapped with UKEY1 etc.
.
GTUN0000  MOVE      ONE,COUNTA
.
GTUN0100  LOAD      TMP3,COUNTA,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13
.
          ENDSET    TMP3
          APPEND    SP10,TMP3
          RESET     TMP3
.
          MATCH     SP10,TMP3                * Skip over blanks
          GOTO      GTUN0200 IF EQUAL
.
          ADD       ONE,COUNTA
          COMPARE   TEN4,COUNTA
          GOTO      GTUN0100 IF LESS
.
GTUN0200  
          SUB       COUNTER,COUNTA
          MOVE      COUNTA,COUNTER
.
GTUN9999  RETURN
.
.**************************************************************************
.*                                DIS0000                                 *
.*                               Discharge                                *
.*  Called by : ML4000                                                    *
.**************************************************************************
DIS0000   MOVE      ZERO,FLAG1
          DISPLAY   *P1:24,"Discharge (",*V2LON,"C",*HOFF,")riteria or (":
                       *V2LON,"P",*HOFF,")lanning : ";
.
DIS1000   KEYIN     *P38:24,*EL,*DV,UNDLN1,*P38:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS
          GOTO      DIS9000 IF EQUAL
.
          MATCH     ANSC,ANS
          GOTO      DIS2000 IF EQUAL
.
          MATCH     ANSP,ANS
          GOTO      DIS3000 IF EQUAL
.
          BEEP
          GOTO      DIS1000                  * Incorrect keyin 
.
.         Discharge criteria
.
DIS2000   MOVE      ONE,FLAG4 
          MOVE      ONE,PCDHTYPE
          CALL      DISC0000
          GOTO      DIS0000
.
.         Discharge planning
.
DIS3000   MOVE      TWO,FLAG4 
          MOVE      TWO,PCDHTYPE
          CALL      DISC0000
          GOTO      DIS0000
.
DIS9000   CALL      AQST0000
          MOVE      FLAG5,EXIT 
.
DIS9999   RETURN
.
.**************************************************************************
.*                               DISC0000                                 *
.*                           Discharge criteria/planning                  *
.*  Called by : ML5000                                                    *
.**************************************************************************
.
.         Admission number
.
DISC0000  DISPLAY   *P1:8,*EF
          BRANCH    FLAG4,DISC0001,DISC0002
.
DISC0001  DISPLAY   *P1:9,*V2LON,"Discharge Criteria:"
          GOTO      DISC0003
.
DISC0002  DISPLAY   *P1:9,*V2LON,"Discharge Planning:"
.
DISC0003  MOVE      AADMNO,PCDHADMN
          PACK      KEY9,PCDHADMN,PCDHTYPE
.
          CALL      RDPCDIS1                 * Get description number
          BRANCH    OVRCD,DISC9999
.
          MOVE      TEN,YVAL
.
          MOVE      AADMNO,PCPDADMN
          MOVE      PCDHDCOD,PCPDDCOD 
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20 * Get description 
.
          CALL      RSPCPDS1
.
DISC1000  CALL      RKPCPDS1
          BRANCH    OVRCD,DISC9999
.
          COMPARE   AADMNO,PCPDADMN
          GOTO      DISC9999 IF NOT EQUAL
.
          MATCH     PCDHDCOD,PCPDDCOD
          GOTO      DISC9999 IF NOT EQUAL
.
          DISPLAY   *P4:YVAL,PCPDDESC        * Description
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DISC1000 IF LESS         * Get next line of descrition
.
          CALL      BOTB0000
          BRANCH    FLAG3,DISC3000
          GOTO      DISC9999
.
DISC3000  MOVE      TEN,YVAL                 * Clear screen for next screen
          DISPLAY   *P4:YVAL,*EF
          GOTO      DISC1000
.
DISC9999  RETURN
.
.**************************************************************************
.*                               PRNT0000                                 *
.*                Print off care plans                                    *
.*  Called by : ML5000                                                    *
.**************************************************************************
PRNT0000  MOVE      ONE,PFLAG1  
          DISPLAY   *P1:24,*EL:
                    *P50:24,"*** ",*V2LON,"Printing",*HOFF," ***";
          CLOCK     TIME,CTIMEIS             * Get time for HEAD132
.
          CALL      PADM0000                 * Print admission details
          CALL      ZCAR0000                 * Print care plan details
.
PRNT9999  RETURN
.
.***************************************************************************
.*                                PADM0000                                 *
.*                       Print admission details                           *
.*  Called by : PRNT0000                                                   *
.***************************************************************************
PADM0000  MOVE      ZERO,CPAGENO             * Initialize page number
          MOVE      "Admission Details",HEAD
          CALL      HEAD0000
          MOVE      NUMBA,COUNTER
.
.         Get Admission number
.
          LOAD      AADMNO,COUNTER,ADMIS1,ADMIS2,ADMIS3,ADMIS4,ADMIS5,ADMIS6:
                                   ADMIS7,ADMIS8,ADMIS9,ADMIS10,ADMIS11:
                                   ADMIS12,ADMIS13,ADMIS14,ADMIS15
.
.         Get patient's details
.
          PACK      KEY8,PURNO
.
          CALL      RDMAST1                  * Master file
          PACK      KEY8,AADMNO
          CALL      RDMISS1                  * Admissions file 
.
          REP       " 0",PBDATE              * Date of birth details
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          CALL      ADMD0000                 * Get further details 
          REP       " 0",ADATE               * Get admission date
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          PACK      ADM,CDAY,SLASH,CMON,SLASH,CYEAR
.
.         We have the admission details so print them off
.
          PRINT     *9,"U/R Number     : ",PURNO
          PRINT     *9,"Admission No.  : ",AADMNO
          PRINT     *9,"Patient's Name : ",PSNAME,SP1,PGNAME
          PRINT     *9,"Address        : ",PADD1
          PRINT     *9,"               : ",PADD2
          PRINT     *9,"               : ",PSUBRB,SP6,PPOST
          PRINT     *9,"Date of birth  : ",DATE,SP2,"(",PSAGE,")"
          PRINT     *9,"Cntry of birth : ",PCONT,SP2,TDESCB
          PRINT     *9,"Marital status : ",PMSTAT,SP2,TDESCM
          PRINT     *9,"Religion       : ",PREG,SP2,TDESC
          PRINT     *N,*9,"Admission Date : ",ADM
          PRINT     *9,"Admission Time : ",ATIME
          PRINT     *9,"Ward           : ",AWARD
          PRINT     *9,"Doctor         : ",ADOCTA
          PRINT     *9,"Adm. Diagnosis : ",ADIAG1
          PRINT     *N 
.
          ADD       TEN8,CLNO
.
PADM9999  RETURN
.
.***************************************************************************
.*                               ZCARA0000                                 *
.*                      Print off care plans                               *
.***************************************************************************
ZCAR0000  MOVE      ONE,COUNTB
          MOVE      ONE,COUNTC
          PRINT     *1,"---------------------------  Care Plans  ----------":
                       "-----------------" 
          ADD       ONE,CLNO
.
ZCAR1000  CALL      GDAT0000                 * Get care plan date and nurse
          BRANCH    FLAG7,ZCAR9000           * Last care plan
          CALL      GNUR0000                 * Get nursing diagnosis
          CALL      GREL0000                 * Get related factors
          CALL      GCHR0000                 * Get characteristics
          CALL      GOUT0000                 * Get desired outcomes
          CALL      GEIN0000                 * Get interventions
.
          ADD       ONE,COUNTB
          GOTO      ZCAR1000
.
ZCAR9000  PRINT     *N,"*** End of Report ***"
.
ZCAR9999  RETURN
.
.**************************************************************************
.*                               GDAT0000                                 *
.*                      Get care plan date, time  and nurse               *
.**************************************************************************
GDAT0000
.         We have to read the diagnosis file and for each care plan found
.         we then have print the details for that particular care plan
.
          CALL      GZZZ0000
          BRANCH    FLAG7,GDAT9999
.
          REP       " 0",PCDIDATE
          UNPACK    PCDIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      ADM,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
.         We have the date, now get the nurse and the nurse code
.
          MOVE      PCDINURS,PCNUCODE
          PACK      KEY6,PCNUCODE
.
          CALL      RDPCNUR1
          BRANCH    OVRCD,GDAT1050
          GOTO      GDAT1060
.
GDAT1050  MOVE      SP20,PCNUNAME
          MOVE      SP10,PCNUCLSS
.
.         Now print off the details - date, time, nurse and class
.
GDAT1060  PRINT    *N,*1,ADM,SP1,"(",PCDITIME,")",SP2,PCNUNAME,*41,PCNUCLSS
          CALL     LINE0000                  * Increment line number
.
GDAT9999  RETURN
.
.**************************************************************************
.*                               GZZZ0000                                 *
.*                      Loop through diagnosis file                       *
.**************************************************************************
.
.         This routine just loops back to the correct place in the dia file
.
GZZZ0000  MOVE      ZERO,FLAG7
.
.         Read the diagnosis file in reverse order so that the care plans
.         are printed off with the most recent one first
.
          MOVE      COUNTB,COUNTC
          MOVE      AADMNO,PCDIADMN
          PACK      KEY33,PCDIADMN,Z30
.
          CALL      RSPCDIA1
.
GZZZ1000  CALL      RPPCDIA1                 * READKP
          BRANCH    OVRCD,GZZZ9000           * EOF
.
          COMPARE   PCDIADMN,AADMNO         * Have we read too far?
          GOTO      GZZZ9000 IF NOT EQUAL
.
          SUB       ONE,COUNTC
          COMPARE   ZERO,COUNTC
          GOTO      GZZZ1000 IF NOT EQUAL
.
          GOTO      GZZZ9999
.
GZZZ9000  MOVE      ONE,FLAG7
.
GZZZ9999  RETURN
.
.**************************************************************************
.*                               GNUR0000                                 *
.*                      Get nursing diagnosis                             *
.**************************************************************************
GNUR0000  CALL      GZZZ0000
          BRANCH    FLAG7,GNUR9999           * EOF reached in dia file
.
.         Get nursing diagnosis description
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
          ENDSET    PCDIDCOD
          APPEND    SP4,PCDIDCOD
          RESET     PCDIDCOD
.
          PRINT     *1,"Nursing Diagnosis:";
.
          MATCH     SP4,PCDIDCOD
          GOTO      GNUR3000 IF EQUAL        
.
          MOVE      AADMNO,PCPDADMN         * Admission number
          MOVE      PCDIDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20 
.
          CALL      RSPCPDS1
.
GNUR1000  CALL      RKPCPDS1
          BRANCH    OVRCD,GNUR9999
.
          COMPARE   AADMNO,PCPDADMN
          GOTO      GNUR9999 IF NOT EQUAL
.
          MATCH     PCDIDCOD,PCPDDCOD
          GOTO      GNUR9999 IF NOT EQUAL
.
          PRINT     *20,PCDSDESC
          CALL      LINE0000
          MOVE      PCPDDESC,DESC1
          GOTO      GNUR1000
.
GNUR3000  MOVE      SIX,PCDSTYPE             * Nursing diagnosis
          MOVE      PCDIDIAG,PCDSCODE        * Description code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
.
          CALL      RSPCDSC1
.
GNUR3100  CALL      RKPCDSC1
          BRANCH    OVRCD,GNUR9999           * Not on file
.
          COMPARE   SIX,PCDSTYPE
          GOTO      GNUR9999 IF NOT EQUAL
.
          MATCH     PCDIDIAG,PCDSCODE
          GOTO      GNUR9999 IF NOT EQUAL
.
GNUR3500  PRINT     *20,PCDSDESC  
          CALL      LINE0000
          MOVE      PCDSDESC,DESC1
          GOTO      GNUR3100
.
GNUR9999  RETURN
.
.**************************************************************************
.*                               GREL0000                                 *
.*                      Get related factors                               *
.**************************************************************************
GREL0000  CALL      GZZZ0000
          BRANCH    FLAG7,GREL9999           * EOF reached in dia file
          MOVE      "Related Factors  : ",HEADER19
.
          PRINT     HEADER19;
.
          PACK      KEY19,PCDIUNIQ,SP30
          CALL      RSPCREL1
GREL0100  CALL      RKPCREL1
          BRANCH    OVRCD,GREL9999
.
          MATCH     PCDIUNIQ,PCREUNIQ
          GOTO      GREL9999 IF NOT EQUAL
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
          PACK      PCREDCOD,PCREDCOD,SP4
.
          MATCH     SP4,PCREDCOD
          GOTO      GREL3000 IF EQUAL        
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCREDCOD,PCPDDCOD
.
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
          CALL      RSPCPDS1
GREL1000  CALL      RKPCPDS1
          BRANCH    OVRCD,GREL0100
.
          COMPARE   PCDIADMN,PCPDADMN
          GOTO      GREL0100 IF NOT EQUAL
.
          MATCH     PCPDDCOD,PCREDCOD
          GOTO      GREL0100 IF NOT EQUAL
.
          PRINT     *20,PCPDDESC
          CALL      LINE0000
          GOTO      GREL1000
.
GREL3000  MOVE      EIGHT,PCDSTYPE        
          MOVE      PCREFACT,PCDSCODE        * Description code
.
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
GREL3050  CALL      RKPCDSC1
          BRANCH    OVRCD,GREL0100           * Not on file
.
          COMPARE   EIGHT,PCDSTYPE
          GOTO      GREL0100 IF NOT EQUAL
.
          MATCH     PCREFACT,PCDSCODE
          GOTO      GREL0100 IF NOT EQUAL
.
          PRINT     *20,PCDSDESC
          CALL      LINE0000
          GOTO      GREL3050               
.
GREL9999  RETURN
.
.**************************************************************************
.*                               GCHR0000                                 *
.*                      Get characteristics                               *
.**************************************************************************
GCHR0000
          MOVE      "Characteristics  : ",HEADER19
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
          ENDSET    PCDIDCOD
          APPEND    SP4,PCDIDCOD
          RESET     PCDIDCOD
.
          PRINT     HEADER19;
.
          MATCH     SP4,PCDIDCOD
          GOTO      GCHR3000 IF EQUAL        
.
          MOVE      PCDIUNIQ,PCDEUNIQ
          MOVE      PCDIDIAG,PCDECHAR
          PACK      KEY19,PCDEUNIQ,PCDECHAR
.
          CALL      RDPCDEF1
          BRANCH    OVRCD,GCHR9999
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCREDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
          CALL      RSPCPDS1
.
GCHR1000  CALL      RKPCPDS1
          BRANCH    OVRCD,GCHR9999
.
          COMPARE     PCDIADMN,PCPDADMN
          GOTO      GCHR9999 IF NOT EQUAL
.
          MATCH   PCPDDCOD,PCREDCOD
          GOTO      GCHR9999 IF NOT EQUAL
.
          PRINT     *20,PCPDDESC
          CALL      LINE0000
          GOTO      GCHR1000
.
GCHR3000  MOVE      PCDIUNIQ,PCDEUNIQ
          PACK      KEY19,PCDEUNIQ,SP20
          CALL      RSPCDEF1
.
GCHR3010  CALL      RKPCDEF1
          BRANCH    OVRCD,GCHR9999
.
          MATCH     PCDEUNIQ,PCDIUNIQ
          GOTO      GCHR9999 IF NOT EQUAL
.
.         Now look up desc. in PCPDSCFD file
. 
          MOVE      TEN,PCDSTYPE        
          MOVE      PCDECHAR,PCDSCODE        * Description code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
.
GCHR3050  CALL      RKPCDSC1
.
          BRANCH    OVRCD,GCHR3010           * Not on file
.
          COMPARE   TEN,PCDSTYPE
          GOTO      GCHR3010 IF NOT EQUAL
.
          MATCH     PCDECHAR,PCDSCODE
          GOTO      GCHR3010 IF NOT EQUAL
.
          PRINT     *20,PCDSDESC
          CALL      LINE0000
          GOTO      GCHR3050
.
GCHR9999  RETURN
.
.**************************************************************************
.*                               GOUT0000                                 *
.*                      Get desired outcomes                              *
.**************************************************************************
GOUT0000
          MOVE      "Desired Outcomes : ",HEADER19
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
          ENDSET    PCDIDCOD
          APPEND    SP4,PCDIDCOD
          RESET     PCDIDCOD
.
          MATCH     SP4,PCDIDCOD
          GOTO      GOUT3000 IF EQUAL        
.
          MOVE      PCDIUNIQ,PCREUNIQ
          MOVE      PCDIDIAG,PCREFACT
          PACK      KEY19,PCREUNIQ,PCREFACT
.
          CALL      RDPCREL1
          BRANCH    OVRCD,GOUT9999
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCREDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
          CALL      RSPCPDS1
.
GOUT1000  CALL      RKPCPDS1 BRANCH    OVRCD,GCHR9999
.
          COMPARE     PCDIADMN,PCPDADMN
          GOTO      GCHR9999 IF NOT EQUAL
.
          MATCH   PCPDDCOD,PCREDCOD
          GOTO      GCHR9999 IF NOT EQUAL
.
          PRINT     *20,PCPDDESC
          CALL      LINE0000
          GOTO      GCHR1000
.
GOUT3000  MOVE      PCDIUNIQ,PCOTUNIQ
          PACK      KEY19,PCOTUNIQ,SP20
.
          CALL      RSPCOUT1
.
GOUT3010  CALL      RKPCOUT1
          BRANCH    OVRCD,GOUT9999
.
          MATCH     PCOTUNIQ,PCDIUNIQ
          GOTO      GOUT9999 IF NOT EQUAL
.
.         Now look up desc. in PCPDSCFD file
. 
          MOVE      SEVEN,PCDSTYPE        
          MOVE      PCOTCODE,PCDSCODE        * Description code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
.
          CALL      RSPCDSC1
.
GOUT3100  CALL      RKPCDSC1
          BRANCH    OVRCD,GOUT4000           * Not on file
.
          COMPARE     PCDSTYPE,SEVEN
          GOTO      GOUT4000 IF NOT EQUAL
.
          MATCH   PCOTCODE,PCDSCODE
          GOTO      GOUT4000 IF NOT EQUAL
.
          PRINT     HEADER19,PCDSDESC
          CALL      LINE0000
          MOVE      SP20,HEADER19
          GOTO      GOUT3100
.
GOUT4000  BRANCH    PCOTTYPE,GOUT5205,GOUT5206,GOUT5207,GOUT5208
.
          PRINT     *25,"No Target Date"
          GOTO      GOUT9000
.
GOUT5205  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PRINT     *25,"By ",DATE
          GOTO      GOUT9000
.
GOUT5206  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PRINT     *25,"By ",PCOTDYWK," days (",DATE,")"
          GOTO      GOUT9000
.
GOUT5207  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PRINT     *25,"By ",PCOTDYWK," weeks (",DATE,")"
          GOTO      GOUT9000
.
GOUT5208  PRINT     *25,"At all times"
.
GOUT9000  CALL      LINE0000
          GOTO      GOUT3010
.
GOUT9999  RETURN
.
.**************************************************************************
.*                               GEIN0000                                 *
.*                      Get interventions                                 *
.**************************************************************************
GEIN0000  MOVE      "Interventions    : ",HEADER19
.
.         Loop through the interventions file
.
          MOVE      PCDIUNIQ,PCINUNIQ        * Unique key
          PACK      KEY19,PCINUNIQ,SP20
          CALL      RSPCINT1
.
GEIN1000  CALL      RKPCINT1
          BRANCH    OVRCD,GEIN9999 
.
          MATCH     PCDIUNIQ,PCINUNIQ
          GOTO      GEIN9999 IF NOT EQUAL
.
.         Now check if the description number is blank or not.  If it is 
.         blank then get the intervention description from the DSC file else
.         get it from the PDS file.
.
          ENDSET    PCINDCOD
          APPEND    SP4,PCINDCOD
          RESET     PCINDCOD
.
          MATCH     SP4,PCINDCOD             * Description no.
          GOTO      GEIN5000 IF EQUAL
.
.         Get description from the PDS file
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCINDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
          CALL      RSPCPDS1
.
GEIN2000  CALL      RKPCPDS1
          BRANCH    OVRCD,GEIN3000
.
          COMPARE   PCDIADMN,PCPDADMN
          GOTO      GEIN3000 IF NOT EQUAL
.
          MATCH     PCINDCOD,PCPDDCOD
          GOTO      GEIN3000 IF NOT EQUAL
.
          PRINT     HEADER19,PCPDDESC
          CALL      LINE0000
          MOVE      SP20,HEADER19
          GOTO      GEIN2000
.
GEIN3000  PRINT     *24,"Frequency : ",PCINFREQ
          CALL      LINE0000
          GOTO      GEIN1000
.
.         Get description from the DSC file
.
GEIN5000  MOVE      NINE,PCDSTYPE            * Interventions
          MOVE      PCINCODE,PCDSCODE        * Intervention code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
.
GEIN5100  CALL      RKPCDSC1
          BRANCH    OVRCD,GEIN6000
.
          COMPARE     NINE,PCDSTYPE
          GOTO      GEIN6000 IF NOT EQUAL 
.
          MATCH     PCINCODE,PCDSCODE
          GOTO      GEIN6000 IF NOT EQUAL 
.
          PRINT     HEADER19,PCDSDESC
          CALL      LINE0000
          MOVE      SP20,HEADER19
          GOTO      GEIN5100
.
GEIN6000  PRINT     *24,"Frequency : ",PCINFREQ
          CALL      LINE0000
          GOTO      GEIN1000
.
GEIN9999  RETURN
.
.**************************************************************************
.*                                  LINE0000                              *
.*                        Check if we have reached the end of the page    *
.*  Called by : PCAR0000                                                  *
.**************************************************************************
LINE0000  ADD       ONE,CLNO
          COMPARE   "55",CLNO
          GOTO      LINE9999 IF NOT EQUAL
.
          MOVE      "Care Plans",HEAD
          CALL      HEAD0000
.
LINE9999  RETURN
.
.****************************************************************************
.*                                HEAD0000                                  *
.*                 Print starting page header                               *
.* Called by : PRNT0000                                                     *
.****************************************************************************
HEAD0000  MOVE      ONE,CNOUNDLN             * No underlines
          CALL      HEAD80                   * Print 1st three lines
          PRINT     *N,*N,*1,DASH20,SP1,HEAD,SP1,DASH20
          PRINT     *N
.
.         If PFLAG1=0 then we need to print a few more lines for the header
.
          BRANCH    PFLAG1,HEAD9999
.
          PRINT     *N,*1,ADM,SP9,PCNUNAME,SP1,PCNUCLSS
          PRINT     *N,*1,"Nursing Diagnosis: ",DESC1
.
          MOVE      EIGHT,CLNO                 * Set line counter 
.
HEAD9999  RETURN
.
.***************************************************************************
.*                                  GETSVAR                                *
.*                 Put this in to make kurn happy                          *
.***************************************************************************
GETSVAR
.
GETSVAR9999   RETURN
.
.---------------------------------------------------------------------------
          INC       STD001IO
.
          INC       CALCAGE
          INC       PATHEAD
          INC       PMIHEAD
          INC       PATALERT
.
          INC       BOKRC1IO/INC             * booking file
          INC       PCPDEFIO/INC             * Defining characteristics
          INC       PCPPDSIO/INC             * Patient Descriptions
          INC       PCPDSCIO/INC             * Description
          INC       PCPOUTIO/INC             * Outcome file
          INC       PCPRELIO/INC             * Related factors
          INC       PATMI1IO/INC             * Patient admissions 
          INC       PMSVX1IO/INC             * Patient admissions 
          INC       PATMA1IO/INC             * Patient master file
          INC       PCPDIAIO/INC             * Nursing diagnosis
          INC       PCPDISIO/INC             * Discharges 
          INC       PATLOCIO/INC             * In-patient location
          INC       PATTRNIO/INC             * Patient bed transfer
          INC       PATNURIO/INC             * Nursing station
          INC       PATCODIO/INC             * Codes table file
          INC       PCPNURIO/INC             * Nurse file
          INC       PCPINTIO/INC             * Interventions file
          INC       PCPEVAIO/INC             * Evaluation file
          INC       PATTERIO/INC             * Patient terminal location file
          INC       PATDSCIO/INC             * Discharges file
          INC       PATDO1IO/INC             * Patient doctors file
          INC       PATWR1IO/INC             * Ward/Bed file
          INC       PATNIDIO/INC             * National id file
          INC       PATNOBIO/INC             * No bed file
          INC       PATALRIO/INC             * Medical Alerts
          INC       PATCOMN1
          INC       PATSNDX
          INC       PATSNX2
          INC       PATPR1IO/INC
          INC       OUTPREIO/INC
          INC       PATVISIO/INC
          INC       NZCOMPIO/INC
          INC       PATGSRIO/INC             * Surname and Given name file
          INC       PMSPX2IO/INC
AGECHK
CLPATMAS  RETURN
