.******************************************************************************
.* System    :   Private Practice System                                      *
.* Program   :   IBAPRI04                                                     *
.* Desc      :   Input Journals                                               *
.******************************************************************************
.* Date      :   16/07/91                                                     *
.* Author    :   Stephen Armstrong                                            *
.* Function  :   Allows journal entries to be input in batch mode against     *
.*               invoices already raised                                      *
.* Mods      :                                                                *
.*        V10.11.01 02/08/2017  J.Tan          TSK 0837619                    *
.*                  Added CLPRIDTR - clear pridtraf fields
.*        V10.07.02 21/12/2015  J.Tan          CAR 0303942                    *
.*                  Mods to set payment code                                  *
.*        V10.07.01 13/10/2015  J.Tan          CAR 310329                     *
.*                  Mods to set PRDTEFFD - Date item assigned to Fees Invoiced*
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V9.12.01  09/12/2009 Mike Laming   CAR 210835                       *
.*                  Added logic for Private Practice Outstanding Debt alert   *
.*        V9.11.01  08/01/2009 J.Tan      CAR 178415                          *
.*                  Added Medical Practice to prifinsf                        *
.*        V9.10.01  23/05/2008 J.Tan      CAR 169149                          *
.*                  Added Date and Time invoice created/updated               *
.*        V9.04.02  03/08/05 J.Tan    CAR 62750                               *
.*                  Removed redefined amount variables                        *
.*        V9.04.01  28/06/2005  Mike Laming       CAR 60454                   *
.*                  Added re-position on DTR in routine CBAL0000              *
.*        V9.03.01  03.03.2004  Lina Vo      CAR 47921                        *
.*                  Removed use of PRIDBTFD & IO.                             *
.*        V9.02.02  04.01.2002  J.Tan                                         *
.*                  Mods for Doctor percentage income                         *
.*        V9.02.01  29.11.2001  B.G.Ackland                                   *
.*                  Remove pi's from Program
.*        V5.08.06  29/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.05  29/06/2000  Steve Downing                                 *
.*                  Changes for interface to Accounts payable system          *
.*        V5.08.04  28/05/2000  J Tan                                         *
.*                  Recompiled for PRICALFS - to set FGSTFLAG                 *
.*        V5.08.03  17/05/2000  J Habasque                                    *
.*                  Mods to display of GST code                               *
.*        V5.08.02  01/05/2000  Greg Horvat                                   *
.*                  Changed to open patmx1af when opening patma1af            *
.*        V5.08.01  14/04/2000  J Habasque                                    *
.*                  Changed to allow change of journal type if generated batch*
.*        V5.08.B01 21/03/2000  J.Tan                                         *
.*                  Mods for GST                                              *
.*        V5.07.02  22/06/1999  Jill Habasque                                 *
.*                  Recompiled for PRISTAIO                                   *
.*        V5.07.01  09/06/1999  Greg Horvat                                   *
.*                  Recompiled for PRIINVIO - Fixed problem with direct read  *
.*        V5.07.B01 04/11/1998  Jim Stathopoulos                              *
.*                  507 Changes                                               *
.******************************************************************************
.*        V5.05.01  09/10/1997  Steve Armstrong    WWH Mods                   *
.*                  Removed ARS related code for G/L Interface                *
.******************************************************************************
.*               V6.01  05/06/92  DIG                                      *
.*                      Fixed so that the correct year is used to write to *
.*                      the Financial Statistics File                      *
.*               V6.02  28/08/92  DIG                                      *
.*                      Changed for the General Ledger Interface           *
.*               V6.00.03 07/10/92  Steve Armstrong                        *
.*                      Modified for alphanumeric debtor number            *
.*               V6.00.04 27/07/1993  Steve Armstrong      SRF 122359      *
.*                      Increased size of JNLAMNT from 6.2 to 8.2.         *
.*               V6.00.05 09/08/1993  Glenn Berry          SRF 122353      *
.*                        Added Generated Batch Numbers.  (PRCNGENB=1)     *
.*               V6.00.06 10/08/93  DIG                    SRF 124385      *
.*                        Changed to reverse the journal sign before       *
.*                        writing to the financial summary file in order   *
.*                        to be consistent with the patient system.        *
.*        V6.00.07  30/11/1993  Graeme Williams   SRF 126647               *
.*                  Fixed I*C when adding after doing a new screen         *
.*        V6.03.B2  06/10/1995  Steve Armstrong                            *
.*                  Fixed to update PRINPEND                               *
.***************************************************************************
.
          INC       STDGENDF
          INC       STDKWSDF
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : PRI04Axx.dat          (xx = port id)
.
JRNTEMP1  IFILE SQL, FIXED=122, KEY="U1-3"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
XDTRANS   DIM       3           3           1       Transaction number
XINVOICE  DIM       8           8           4       Invoice number
XDEBTOR   DIM       8           8          12       Debtor Number
XFLAG     FORM      2           2          20       Debtor scan flag
.                                                       0 = Debtor
.                                                       1 = PMI
XNAME     DIM      30          30          22       Patient name
XJDATE    DIM       8           8          52       Date of journal
XJCODE    DIM       3           3          60       Journal Code
XDESC     DIM      30          30          63       Journal description
XJTYPE    DIM       4           4          93       Journal type
XAMNT     FORM    6.2           5          97       Journal amount
XLEDG     DIM       2           2         102       Accounting Ledger
XACCT     DIM      12          12         104       Income Account
XGSTC     DIM       6           6         116       GST Code
.
.End of Record                            122
.
. Redefine form fields
.
XTRANS    FORM      3
.
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       IBAGSTFD/INC                 * GST file
          INC       PRICONFD/INC                 * control file
          INC       PRIDTRFD/INC                 * debtor transaction file
          INC       PRIINVFD/INC                 * invoice file
...          INC       PRIDBTFD/INC                 * debtor file
          INC       PRIJRNFD/INC                 * journal file
          INC       PRIFINFD/INC                 * financial summary file
          INC       PRIFIGFD/INC                 * financial summary file
          INC       PRISTAFD/INC                 * statistics file
          INC       PRIAUDJ/INC                  * journals audit file
.
          INC       PATDRGFD/INC                 * date range period file
          INC       PATCODFD/INC                 * codes file
          INC       PATMA1FD/INC                 * patient master file
.
.
. CONSTANT DEFINITION
. -------------------
.
CODEJ     INIT      "J "                         * cat. for journals
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
OPCHAR    INIT      "C1P2A3M4D5R6N7"
SEC1      FORM      "00001"
SP12      INIT      "            "
UKEY      INIT      " 122 U1-3"
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
ACTION    FORM      1                            * add/modify flag
.                                                     0 = add
.                                                     1 = modify
.
.AUDTSECT  FORM      5     * Sector in Controlf
.AUDTPOST  FORM      3     * Position in Controlf
.AUDTFLAG  FORM      1     * On/Off Flag
.AUDTTYPE  FORM      1     * Type 1=write 2=before change 3=after change 4=delete
.AUDTSKEY  DIM       19    * Save Key
.
BATAMNT   FORM      6.2                          * batch amount
BATCHNO   FORM      8                            * batch number
.
CHOICE    DIM       1
CMDLIN1   DIM       25                           * executable commands
CMDLIN2   DIM       16
CODE      DIM       2                            * for KEYINCOD
COUNTER   FORM      2                            * record counter
CURRDAT   DIM       8                            * current date
CURRTOT   FORM      6.2                          * running batch total
.
DISDATE   DIM       10                           * display date field
.
F12P2     FORM      12.2
FGSTFLAG  FORM      1
FILEOPEN  DIM       30
FNAMEJ    DIM       8                            * audit file name
FSTAMNT   FORM      12.2                         * for PRICALFS
FSTDATE   DIM       8                            * for PRICALFS
FSTWORK   FORM      12.2                          * for PRICALFS
.
HEADSEC   FORM      5                            * for PRIAUJIO
.
IBCNUGST  FORM      1
INVDATE   DIM       8                            * invoice date
INVOICE   FORM      8                            * invoice number
.
JNLAMNT   FORM      8.2                          * journal amount
.
KEYA      DIM       3                            * storage keys
KEYB      DIM       3 
KEYC      DIM       3 
KEYD      DIM       3 
KEYE      DIM       3 
KEYF      DIM       3 
KEYG      DIM       3 
KEYH      DIM       3 
KEYI      DIM       3 
KEYJ      DIM       3 
KEYK      DIM       3 
KEYL      DIM       3 
KEYM      DIM       3 
KEYN      DIM       3 
KEYO      DIM       3 
KEYP      DIM       3 
KEYQ      DIM       3 
.
LINENO    FORM      2                            * line # 
.
.
NEWNTRY   FORM      1                            * flag for start of additions
.                                                    0 = records on file
.                                                    1 = start additions
NUMBER    DIM       2
NXTRAN    FORM      6                            * next transaction number
.
PERNUM    FORM      2                            * date range period
.
SAVCOUNT  FORM      2
SAVKEY22  DIM       22
SCREEN    FORM      2
.
TEMPDESC  DIM       13                           * temporary type description
TEMPFILE  DIM       8
TEMPNAME  DIM       15                           * short patient name
TNUMB     FORM      2
TOTREC    FORM      4                            * record counter
.
USERID    DIM       10 
.
PRGID     INIT      "IBAPRI04"
PRGNAM    INIT      "Input Journals"
VERSION   INIT      "V10.13.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialization and open files
          BRANCH    EXIT,ML9999            * audit listing in progress
          CALL      CREA0000               * create temporary file
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          CALL      CLR0000                * clear records from temp file
.                                            and initialise variables
.
          CALL      GETB0000               * get batch details
          BRANCH    EXIT,ML0100            * (C)ancel - get next option
.
          CALL      HEAD0000               * display input screen header
.
ML1000    CALL      DSPP0000               * get transactions(add/mod/del)
          BRANCH    EXIT,ML0100:           * (E)xit
                         ML2000            * (P)ost
.
ML2000    CALL      VALD0000               * Validate batch total
          BRANCH    EXIT,ML1000:           * redisplay screen
                         ML0100            * delete entries - return to menu
.
          CALL      WRT0000                * write journals to file
.
          GOTO      ML0100                 * get next option
.
ML9999    CALL      KILL0000               * remove temporary file
          CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                     * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pridtraf";
          OPEN      PRIDTRA1,"pridtraf"          * debtor transaction file
.
...          DISPLAY   *P64:24,"pridebtf";
...          OPEN      PRIDEBT1,"pridebtf"          * debtor file
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"          * invoice file
.
          DISPLAY   *P64:24,"prijrnlf";
          OPEN      PRIJRNL1,"prijrnlf"          * journal file
.
          DISPLAY   *P64:24,"prifinsf";
          OPEN      PRIFINS1,"prifinsf"          * financial summary file
.
          DISPLAY   *P64:24,"prifigaf";
          OPEN      PRIFIGA1,"prifigaf"          * financial summary file
.
          DISPLAY   *P64:24,"pristatf";
          OPEN      PRISTAT1,"pristatf"          * statistics file
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"          * date range period file
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"          * codes file
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"          * patient master file
          OPEN      PATMX1A1,"patmx1af"          * patient master extension file
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"          * control file
          READ      CONTROLF,ZERO;*85,IBCNUGST
          READ      CONTROLF,THIRTY3;*198,PRCNJDAT
          READ      CONTROLF,THIRTY4;*187,PRCNGENB,*199,PRCNAFEE
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
          MOVE      ONE,CNEWDS
.
          CLEAR     FNAMEJ
          APPEND    "priauj",FNAMEJ
          APPEND    PORT,FNAMEJ
          RESET     FNAMEJ
          REP       " 0",FNAMEJ
.
          TRAP      INIT1000 IF IO
          OPEN      PRIAUJXX,FNAMEJ
          TRAPCLR   IO
.
          MOVE      "PRJ",PRXCODE   * System Lock Audits
          CALL      GETSLK00        * Get System Lock Audits
          CALL      RDSAUDJ
          COMPARE   TWO,AJSTAT
          GOTO      INIT2000 IF NOT EQUAL
.
          CALL      RELSLK00        * Release System Lock Audits
          DISPLAY   *P1:24,*EL,*B,"Audit listing in progress.  Wait until ":
                    "complete. ";
          CALL      HITENTER
          GOTO      INIT9500
.
INIT1000  PREP      PRIAUJXX,FNAMEJ
          MOVE      ONE,AJSTAT
          CALL      WRSAUDJ
          GOTO      INIT9000
.
INIT2000  MOVE      ONE,AJSTAT
          CALL      WRSAUDJX
          CALL      RELSLK00        * Release System Lock Audits
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1         option selected                         *
.****************************************************************************
.
. ---- display option screen ----
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = by Invoice"
.
OPTN1000  KEYIN     *P1:7,"Select option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * zero entered ?
          GOTO      OPTN9000 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9500             * valid option
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ONE,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ZERO,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                                  GETB0000           Called by: ML0000    *
.*                         get the batch details                            *
.* Returns:       EXIT  0 = Ok to continue                                  *
.*                      1 = don't continue                                  *
.****************************************************************************
.
GETB0000  DISPLAY   *P2:10,*EF,"Batch Number :":
                    *P2:12,"Batch Amount :"
.
          COMPARE   ONE,PRCNGENB             * Generated batch numbers?
          GOTO      GETB0500 IF NOT EQUAL    * no, do the keyin
          READ      CONTROLF,THIRTY4;*188,PRCNNXBA  * read the next batch number
          MOVE      PRCNNXBA,BATCHNO
          DISPLAY   *P17:10,*EL,*V2LON,BATCHNO
          GOTO      GETB1000
.
GETB0500  KEYIN     *P17:10,*EL,*V2LON,BATCHNO:
                    *P17:10,*DV,BATCHNO
.
          COMPARE   ONE,BATCHNO
          GOTO      GETB1000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Batch number must be greater than ZERO. ";
          CALL      HITENTER
          GOTO      GETB0500
.
GETB1000  KEYIN     *P17:12,*V2LON,BATAMNT:
                    *P17:12,*DV,BATAMNT
.
          CALL      CONTQST
          BRANCH    CEXIT,GETB9500:              * yes
                          GETB0000:              * no
                          GETB9000               * cancel
.
GETB9000  MOVE      ONE,EXIT
          GOTO      GETB9999
.
GETB9500  MOVE      "HD",AJRECCD                 * set up audit header record
          MOVE      BATCHNO,AJBATCH
          MOVE      BATAMNT,AJBATOT
          MOVE      "JOURNALS            ",AJDESC
          MOVE      PASSCODE,AJOPER
          MOVE      SP8,AJDEBT
          MOVE      SP30,AJNAME
          PACK      AJDATE,CCC,CYY,CMM,CDD
          REP       " 0",AJDATE
          CLOCK     TIME,CTIMEIS
          MOVE      CTIMEIS,AJTIME
          MOVE      SP8,AJINVNO
          MOVE      ZERO,AJAMT
          MOVE      SP3,AJTYPE
          MOVE      SP30,AJTDESC
          MOVE      ZERO,AJSCAN
.
          CALL      UPAUDJ                       * write audit header record
          MOVE      SECTOR,HEADSEC
.
          MOVE      ZERO,EXIT
.
GETB9999  RETURN
+
.****************************************************************************
.*                              HEAD0000               Called by: ML0000    *
.*                display input screen header                               *
.****************************************************************************
.
HEAD0000  DISPLAY   *P1:3,*EF,*V2LON,*P51:4,"Batch : ",BATCHNO,*HOFF:
                    *P71:4,"$",*V2LON,BATAMNT:
                    *P3:5,*ULON,"Invoice ",*P12:5,"Debtor",SP2,*P21:5:
                    "Patient name",SP3,*P37:5,SP3,"Date",SP3,*P48:5:
                    "Type",*P53:5,"Description",SP7,*P72:5,SP3,"Amount"
.
          DISPLAY   *P51:23,*V2LON,"Current Total :     ",*HOFF,"$",*V2LON:
                    CURRTOT 
.
          MOVE      ZERO,ACTION                  * flag for mult. additions
. 
HEAD9999  RETURN
+
.***************************************************************************
.*                             DSPP0000               Called by: ML0000    *
.*        get journal transactions and allow modification and deletion     *
.*        before processing                                                *
.*  Returns:        EXIT    0 = Exit selected                              *
.*                          1 = Post selected                              *
.***************************************************************************
.
DSPP0000  MOVE      ONE,SCREEN
          CALL      NEWS0000
          BRANCH    NEWNTRY,DSPP6000        * start additions
.
          MOVE      SP3,KEY3
          CALL      RSTEMP1
DSPP1000  CALL      RKTEMP1                 * Get next matching record
          BRANCH    OVRCD,DSPP5000 
.
          COMPARE   TWENTY2,LINENO          * Check if page is full
          GOTO      DSPP3000 IF LESS
.
          CALL      QSTN0000                * Prompt user as page is full
          BRANCH    EXIT,DSPP9999:          * Exit
                         DSPP9999:          * Post
                         DSPP6000:          * Add journal entry
                         DSPP7000:          * Modify journal entry
                         DSPP8000:          * Delete journal entry
                         DSPP2000:          * Previous screen
                         DSPP2500           * Next screen
.
.         Set up to display previous screen
.
DSPP2000  CALL      PREV0000
          CALL      NEWS0000
          SUB       ONE,SCREEN
          GOTO      DSPP3000
.
.         Set up for new screen
.
DSPP2500  CALL      NEWS0000
          ADD       ONE,SCREEN
    
DSPP3000  ADD       ONE,COUNTER             * Display next record 
          ADD       ONE,LINENO
          CALL      DSPL0000 
          GOTO      DSPP1000
.
.         No more records to be displayed 
.
DSPP5000  CALL      QSTE0000                * Ask question without Next
          BRANCH    EXIT,DSPP9999:          * Exit
                         DSPP9999:          * Post
                         DSPP6000:          * Add journal entries
                         DSPP7000:          * Modify a journal entry
                         DSPP8000:          * Delete a journal entry
                         DSPP2000           * Previous selected
.
DSPP6000  MOVE      ZERO,NEWNTRY            * reset flag
          CALL      TADD0000                * add journal records
          GOTO      DSPP0000
.
DSPP7000  CALL      TMOD0000                * modify a journal entry
          GOTO      DSPP0000
.
DSPP8000  CALL      TDEL0000                * delete a journal entry
          GOTO      DSPP0000
.
DSPP9999  RETURN
.
.***************************************************************************
.*                             DSPL0000               Called by: DSPP0000  *
.*        Display the current record                                       *
.***************************************************************************
.
DSPL0000  CALL      KPUT0000
.
          UNPACK    XJDATE,XCENT,XYEAR,XMON,XDAY
          PACK      DISDATE,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR
          MOVE      XNAME,TEMPNAME
          MOVE      XDESC,TEMPDESC
          DISPLAY   *P1:LINENO,*V2LON,COUNTER,*HOFF,*P3:LINENO,XINVOICE:
                    *P12:LINENO,XDEBTOR,*P21:LINENO,TEMPNAME,*P37:LINENO:
                    DISDATE,*P48:LINENO,XJCODE,*P53:LINENO,TEMPDESC:
                    *P65:LINENO,XGSTC,*P72:LINENO,XAMNT
.
DSPL9999  RETURN
+
.***************************************************************************
.*                                PREV0000            Called by: DSPP0000  *
.*        Back up to the previous screen                                   *
.***************************************************************************
.
PREV0000  MOVE      ONE,TNUMB               * Load key for first record
          CALL      LOAD0000
.
          CALL      RDTEMP1                 * key read        
.
PREV0100  CALL      RPTEMP1                 * Read back a record
          BRANCH    OVRCD,PREV9000
.
          ADD       ONE,TNUMB
.
          COMPARE   TEN8,TNUMB 
          GOTO      PREV0100 IF LESS
.
          GOTO      PREV9999
.
PREV9000  MOVE      SP3,KEY3
          CALL      RSTEMP1                 * positional read
          CALL      RKTEMP1                 * read first record
.
PREV9999  RETURN
+
.***************************************************************************
.*                                QSTN0000            Called by: DSPP0000  *
.*        Screen is full, so prompt user                                   *
.*   RETURNS:    EXIT   1 = Cancel                                         *
.*                      2 = Post                                           *
.*                      3 = Add                                            *
.*                      4 = Modify                                         *
.*                      5 = Delete                                         *
.*                      6 = Previous                                       *
.*                      7 = Next                                           *
.***************************************************************************
.
QSTN0000  MOVE      SP1,CHOICE
          BRANCH    SCREEN,QSTN1000         * Check if first screen
.
          KEYIN     *P1:24,"(",*V2LON,*DV,ANSA,*HOFF,")dd, (",*V2LON,*DV,ANSM:
                    *HOFF,")odify, (",*V2LON,*DV,ANSD,*HOFF,")elete, (":
                    *V2LON,*DV,ANSN,*HOFF,")ext, p(",*V2LON,*DV,ANSR,*HOFF:
                    ")evious, (",*V2LON,*DV,ANSC,*HOFF,")ancel, (",*V2LON,*DV:
                    ANSP,*HOFF,")ost ? ",*DV,UNDLN1:
                    *P67:24,*V2LON,CHOICE
.
          TYPE      CHOICE                       * input alpha ?
          GOTO      QSTN0500 IF EQUAL            * no
          CALL      PADC0000                     * pad with blanks
.
          MATCH     SP1,CHOICE                   * anything entered ?
          GOTO      QSTN0000 IF EQUAL            * no
.
          MATCH     CHOICE,ANSC                  * cancel input ?
          GOTO      QSTN2000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSP                  * post input ?
          GOTO      QSTN3000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSA                  * add input ?
          GOTO      QSTN4000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSM                  * modify input ?
          GOTO      QSTN5000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSD                  * delete input ?
          GOTO      QSTN6000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSR                  * previous input ?
          GOTO      QSTN7000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSN                  * next input ?
          GOTO      QSTN8000 IF EQUAL            * yes
.
QSTN0500  BEEP                              * Invalid entry
          GOTO      QSTN0000
.
QSTN1000  KEYIN     *P1:24,"(",*V2LON,*DV,ANSA,*HOFF,")dd, (",*V2LON,*DV,ANSM:
                    *HOFF,")odify, (",*V2LON,*DV,ANSD,*HOFF,")elete, (":
                    *V2LON,*DV,ANSN,*HOFF,")ext, (",*V2LON,*DV,ANSC,*HOFF:
                    ")ancel, (",*V2LON,*DV,ANSP,*HOFF,")ost ? ",*DV,UNDLN1:
                    *P55:24,*V2LON,CHOICE
.
          TYPE      CHOICE                       * input alpha ?
          GOTO      QSTN1500 IF EQUAL            * no
          CALL      PADC0000                     * pad with blanks
.
          MATCH     SP1,CHOICE                   * anything entered ?
          GOTO      QSTN0000 IF EQUAL            * no
.
          MATCH     CHOICE,ANSC                  * cancel input ?
          GOTO      QSTN2000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSP                  * post input ?
          GOTO      QSTN3000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSA                  * add input ?
          GOTO      QSTN4000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSM                  * modify input ?
          GOTO      QSTN5000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSD                  * delete input ?
          GOTO      QSTN6000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSN                  * next input ?
          GOTO      QSTN8000 IF EQUAL            * yes
.
QSTN1500  BEEP                              * Invalid entry
          GOTO      QSTN0000
.
.         Set the EXIT flag according to the users choice
.
QSTN2000  MOVE      ONE,EXIT                * Cancel
          GOTO      QSTN9999
.
QSTN3000  MOVE      TWO,EXIT                * Post
          GOTO      QSTN9999
.
QSTN4000  MOVE      THREE,EXIT              * Add
          GOTO      QSTN9999
.
QSTN5000  MOVE      FOUR,EXIT               * Modify
          GOTO      QSTN9999
.
QSTN6000  MOVE      FIVE,EXIT               * Delete
          GOTO      QSTN9999
.
QSTN7000  MOVE      SIX,EXIT                * Previous
          GOTO      QSTN9999
.
QSTN8000  MOVE      SEVEN,EXIT              * Next
.
QSTN9999  RETURN
+
.***************************************************************************
.*                               QSTE0000             Called by: DSPP0000  *
.*        No more records to display                                       *
.*   RETURNS:    EXIT   1 = Cancel                                         *
.*                      2 = Post                                           *
.*                      3 = Add                                            *
.*                      4 = Modify                                         *
.*                      5 = Delete                                         *
.*                      6 = Previous                                       *
.***************************************************************************
.
QSTE0000  MOVE      SP1,CHOICE
          BRANCH    SCREEN,QSTE1000         * Check if first screen
.
          KEYIN     *P1:24,"(",*V2LON,*DV,ANSA,*HOFF,")dd, (",*V2LON,*DV,ANSM:
                    *HOFF,")odify, (",*V2LON,*DV,ANSD,*HOFF,")elete, p(":
                    *V2LON,*DV,ANSR,*HOFF,")evious, (",*V2LON,*DV,ANSC,*HOFF:
                    ")ancel, (",*V2LON,*DV,ANSP,*HOFF,")ost ? ",*DV,UNDLN1:
                    *P59:24,*V2LON,CHOICE
.
          TYPE      CHOICE                       * input alpha ?
          GOTO      QSTE0500 IF EQUAL            * no
          CALL      PADC0000                     * pad with blanks
.
          MATCH     SP1,CHOICE                   * anything entered ?
          GOTO      QSTE0000 IF EQUAL            * no
.
          MATCH     CHOICE,ANSC                  * cancel input ?
          GOTO      QSTE2000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSP                  * post input ?
          GOTO      QSTE3000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSA                  * add input ?
          GOTO      QSTE4000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSM                  * modify input ?
          GOTO      QSTE5000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSD                  * delete input ?
          GOTO      QSTE6000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSR                  * previous input ?
          GOTO      QSTE7000 IF EQUAL            * yes
.
QSTE0500  BEEP                              * Invalid entry
          GOTO      QSTE0000
.         
QSTE1000  KEYIN     *P1:24,"(",*V2LON,*DV,ANSA,*HOFF,")dd, (",*V2LON,*DV,ANSM:
                    *HOFF,")odify, (",*V2LON,*DV,ANSD,*HOFF,")elete, (",*V2LON:
                    *DV,ANSC,*HOFF,")ancel, (",*V2LON,*DV,ANSP,*HOFF,")ost ? ":
                    *DV,UNDLN1:
                    *P47:24,*V2LON,CHOICE
.
          TYPE      CHOICE                       * input alpha ?
          GOTO      QSTE1500 IF EQUAL            * no
          CALL      PADC0000                     * pad with blanks
.
          MATCH     SP1,CHOICE                   * anything entered ?
          GOTO      QSTE0000 IF EQUAL            * no
.
          MATCH     CHOICE,ANSC                  * cancel input ?
          GOTO      QSTE2000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSP                  * post input ?
          GOTO      QSTE3000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSA                  * add input ?
          GOTO      QSTE4000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSM                  * modify input ?
          GOTO      QSTE5000 IF EQUAL            * yes
.
          MATCH     CHOICE,ANSD                  * delete input ?
          GOTO      QSTE6000 IF EQUAL            * yes
.
QSTE1500  BEEP                              * Invalid entry
          GOTO      QSTE0000
.
.         Set the EXIT flag according to the users choice
.
QSTE2000  MOVE      ONE,EXIT                * Cancel
          GOTO      QSTE9999
.           
QSTE3000  MOVE      TWO,EXIT                * Post
          GOTO      QSTE9999
.
QSTE4000  MOVE      THREE,EXIT              * Add
          GOTO      QSTE9999
.
QSTE5000  MOVE      FOUR,EXIT               * Modify
          GOTO      QSTE9999
.
QSTE6000  MOVE      FIVE,EXIT               * Delete 
          GOTO      QSTE9999
.
QSTE7000  MOVE      SIX,EXIT                * Previous
.
QSTE9999  RETURN
+
.***************************************************************************
.*                                PADC0000            Called by: QSTN0000  *
.*        Pad choice with blanks                                 QSTE0000  *
.***************************************************************************
.
PADC0000  ENDSET    CHOICE
          APPEND    SP2,CHOICE
          RESET     CHOICE
          REP       UPPLOW,CHOICE
.
PADC9999  RETURN
+
.***************************************************************************
.*                                LOAD0000            Called by: PREV0000  *
.*        Load the unique key selected into the key variable               *
.***************************************************************************
.
LOAD0000  LOAD      KEY3,TNUMB,KEYA,KEYB,KEYC,KEYD,KEYE,KEYF,KEYG,KEYH:
                    KEYI,KEYJ,KEYK,KEYL,KEYM,KEYN,KEYO,KEYP,KEYQ
.
LOAD9999  RETURN
+
.***************************************************************************
.*                                KPUT0000            Called by: DSPL0000  *
.*        Store the current key for the record being displayed             *
.***************************************************************************
.
KPUT0000  MOVE      XTRANS,KEY3
.
          STORE     KEY3,COUNTER,KEYA,KEYB,KEYC,KEYD,KEYE,KEYF,KEYG,KEYH:
                    KEYI,KEYJ,KEYK,KEYL,KEYM,KEYN,KEYO,KEYP,KEYQ
.
KPUT9999  RETURN
+
.**************************************************************************
.*                                NEWS0000            Called by: DSPP0000 *
.*        Clear the screen for the next page display                      *
.**************************************************************************
.
NEWS0000  DISPLAY   *P1:6,*EF:
                    *P51:23,*V2LON,"Current Total :     ",*HOFF,"$",*V2LON:
                    CURRTOT 
          MOVE      FIVE,LINENO             * Reset line number
          MOVE      ZERO,COUNTER            * Reset record count
.
NEWS9999  RETURN
+
.**************************************************************************
.*                               TDEL0000              Called by: DSPP0000*
.*                        delete a journal entry                          *
.**************************************************************************
.
TDEL0000  KEYIN     *P1:24,*EL,"Select number : ",*DV,UNDLN2:
                    *P17:24,*V2LON,NUMBER
.
          TYPE      NUMBER                       * numeric entered
          GOTO      TDEL9000 IF NOT EQUAL        * no
.
          MOVE      NUMBER,TNUMB
          COMPARE   TNUMB,ZERO                   * number > zero ?
          GOTO      TDEL9000 IF NOT LESS         * no
.
          COMPARE   TNUMB,COUNTER                * valid number ?
          GOTO      TDEL9000 IF LESS             * no
.
.         A valid record has been selected, so highlight and confirm deletion
.
          CALL      LOAD0000                     * load the record
.
          ASSIGN    TNUMB + 5,FORM2              * set screen line for delete
.
          DISPLAY   *P1:FORM2,*HON,TNUMB         * highlight number
.
          CALL      DELQST                       * confirm deletion
          BRANCH    CEXIT,TDEL8000               * yes
.
          DISPLAY   *P1:FORM2,*V2LON,TNUMB       * no/cancel - redisplay number
          GOTO      TDEL0000
.
TDEL8000  CALL      RDTEMP1                      * get the record amount
          BRANCH    OVRCD,TDEL9500               * not found
.
          CALL      DETEMP1                      * delete record from temp file
          SUB       XAMNT,CURRTOT                * update current total
          GOTO      TDEL9999
.
.         See if anything was entered, and if not, exit
.
TDEL9000  ENDSET    NUMBER                       * pad with blanks
          APPEND    SP2,NUMBER
          RESET     NUMBER
.
          MATCH     SP2,NUMBER                   * anything entered ?
          GOTO      TMOD9999 IF EQUAL            * no
.
.         Invalid selection
.
          DISPLAY   *P1:24,*EL,*B,"You must select a number displayed. ";
          CALL      HITENTER
          GOTO      TDEL0000
.
TDEL9500  DISPLAY   *P1:24,*EL,*B,"Record not found. ";
          CALL      HITENTER
          GOTO      TDEL0000
.
TDEL9999  RETURN
+
.**************************************************************************
.*                               TMOD0000              Called by: DSPP0000*
.*                      modify a journal entry                            *
.**************************************************************************
.
TMOD0000  KEYIN     *P1:24,*EL,"Select number : ",*DV,UNDLN2:
                    *P17:24,*V2LON,NUMBER
.
          TYPE      NUMBER                       * numeric entered ?
          GOTO      TMOD9000 IF NOT EQUAL        * no
.
          MOVE      NUMBER,TNUMB
          COMPARE   TNUMB,ZERO                   * number > zero ?
          GOTO      TMOD9000 IF NOT LESS         * no
.
          COMPARE   TNUMB,COUNTER                * valid number ?
          GOTO      TMOD9000 IF LESS             * no
.
.         Valid record selected, so allow input of data
.
          MOVE      COUNTER,SAVCOUNT             * save counter value
          MOVE      TNUMB,COUNTER
          SUB       ONE,COUNTER                  * sub 1 from counter
.                                                  as 1 is added at record 
.                                                  addition
.
          CALL      LOAD0000                     * load the record key
          CALL      RDTEMP1                      * read the record
          BRANCH    OVRCD,TMOD9500               * not found
.
          SUB       XAMNT,CURRTOT
.
          ASSIGN    TNUMB + 4,LINENO
.
          MOVE      ONE,ACTION                   * set flag for input of
.
          CALL      TADD0000                     * get modified details
          MOVE      SAVCOUNT,COUNTER             * restore counter value
          GOTO      TMOD9999                     * exit
.
.         See if anything was entered, and if not, exit
.
TMOD9000  ENDSET    NUMBER                       * pad with blanks
          APPEND    SP2,NUMBER
          RESET     NUMBER
.
          MATCH     SP2,NUMBER                   * anything entered ?
          GOTO      TMOD9999 IF EQUAL            * no
.
.         Invalid selection
.
          DISPLAY   *P1:24,*EL,*B,"You must select a number displayed. ";
          CALL      HITENTER
          GOTO      TMOD0000
.
.         Unable to read record selected
.
TMOD9500  DISPLAY   *P1:24,*EL,*B,"Record not found. ";
          MOVE      SAVCOUNT,COUNTER             * restore counter value
          CALL      HITENTER
.
TMOD9999  MOVE      ZERO,ACTION
          RETURN
+
.***************************************************************************
.*                               TADD0000              Called by: DSPP0000 *
.*                     input the journal entries                  TMOD0000 *
.***************************************************************************
.
TADD0000  ADD       ONE,COUNTER                  * increment record counter
          ADD       ONE,LINENO                   * increment line count
          BRANCH    ACTION,TADD0500              * modify only
.
          COMPARE   TWENTY3,LINENO               * page full ?
          GOTO      TADD0500 IF LESS             * no
.
.         Page full so reset variables and clear screen
.
          MOVE      ONE,COUNTER
          MOVE      SIX,LINENO
          DISPLAY   *P1:LINENO,*EF
          DISPLAY   *P51:23,*V2LON,"Current Total :     ",*HOFF,"$",*V2LON:
                    CURRTOT 
.
.-------  Get Invoice Number
.
TADD0500  CALL      INVN0000                     * get invoice number
          BRANCH    EXIT,TADD9500                * nothing entered
.
          CALL      DATE0000                     * get journal date
.
.-------  Get Journal Type.  If we are using generated batch numbers then
.         only one Journal type is allowed.  (Default to first type entered)
.
TADD1000  COMPARE   ONE,PRCNGENB                 * using generated batch no's?
          GOTO      TADD1100 IF NOT EQUAL        * No
.
.         COMPARE   ZERO,XTRANS                  * first transaction?
.         GOTO      TADD1100 IF EQUAL
.
.         DISPLAY   *P48:LINENO,*EL,ACODE        * default as last one
.         GOTO      TADD1200
.
TADD1100  CALL      TYPE0000                     * get journal type
          BRANCH    EXIT,TADD0500:               * nothing entered
                         TADD0500                * exitchar entered
.
TADD1200  CALL      DESC0000                     * get description
          CALL      KGST0000                     * get GST Code
          BRANCH    EXIT,TADD0500:               * nothing entered
                         TADD0500                * exitchar entered
.
.-------  Get Journal Amount
.
TADD2000  CALL      AMNT0000                     * get journal amount
          BRANCH    EXIT,TADD1000                * nothing entered
.
          ADD       XAMNT,CURRTOT                * update and display current
          DISPLAY   *P72:23,*V2LON,CURRTOT       * total
          BRANCH    ACTION,TADD9000              * update only
.
.         Add a new record
.
TADD8000  ADD       ONE,XTRANS 
          PACK      KEY3,XTRANS
          CALL      RATEMP1
          IF        OVRCD = 1
            CALL      WRTEMP1                    * write record to temp file
          ELSE
            GOTO      TADD8000
          ENDIF
.
          GOTO      TADD0000                     * get next service item
.
TADD9000  CALL      UPTEMP1                      * update record
          GOTO      TADD9999
.
.         Nothing was input for invoice number so check if we are in addition
.         or modify.  If the latter, then nothing was modified, so restore the 
.         original current total prior to the modify
.
TADD9500  COMPARE   ZERO,ACTION                  * modify ?
          GOTO      TADD9999 IF EQUAL            * no
.
          ADD       XAMNT,CURRTOT                * restore current total
.
TADD9999  RETURN
+
.**************************************************************************** 
.*                              INVN0000               Called by: TADD0000  *
.*                        get the invoice number                            *
.****************************************************************************
.
INVN0000  KEYIN     *P1:LINENO,*EL,*V2LON,*DV,COUNTER:
                    *P3:LINENO,INVOICE
.
          COMPARE   ZERO,INVOICE                 * anything entered ?
          GOTO      INVN9500 IF EQUAL            * no
.
.         Get invoice details
.
          MOVE      INVOICE,KEY8
          CALL      RDPRIN1                      * invoice on file ?
          BRANCH    OVRCD,INVN8000               * no
.
          DISPLAY   *P3:LINENO,INVOICE
          MOVE      INVOICE,XINVOICE
          MOVE      PRINDEBT,XDEBTOR             * save details
          MOVE      PRINSCAN,XFLAG
.
.         Get debtor details
.
          MOVE      "Unknown                       ",XNAME
          BRANCH    PRINSCAN,INVN2000            * PMI number
.
...          MOVE      PRINDEBT,KEY8
...          CALL      RDPRDB1                      * get debtor record
...          BRANCH    OVRCD,INVN9000               * not on file
.
...          MOVE      PRDBGNAM,ANS                 * format name
...          PACK      XNAME,ANS,DOT,PRDBSNAM
          GOTO      INVN3000
.
INVN2000  MOVE      PRINDEBT,PURNO
          MOVE      PURNO,KEY8
          CALL      RDMAST1                      * get PMI record
          BRANCH    OVRCD,INVN9000               * not on file
.
          MOVE      PGNAME,ANS                   * format name
          PACK      XNAME,ANS,DOT,PSNAME
.
INVN3000  ENDSET    XNAME                        * pad name with blanks
          APPEND    SP30,XNAME
          RESET     XNAME
          GOTO      INVN9000
.
INVN8000  DISPLAY   *P1:24,*EL,*B,"Invoice not on invoice file. ";
          CALL      HITENTER
          GOTO      INVN0000
.
INVN8500  DISPLAY   *P1:24,*EL,*B,"Invoice not on Ledger Interface file. ";
          CALL      HITENTER
          GOTO      INVN0000
.
INVN9000  MOVE      XNAME,TEMPNAME
          DISPLAY   *P12:LINENO,XDEBTOR,*P21:LINENO,TEMPNAME
          MOVE      ZERO,EXIT
          GOTO      INVN9999
.
INVN9500  DISPLAY   *P1:LINENO,*EL
          MOVE      ONE,EXIT
.
INVN9999  RETURN
+
.****************************************************************************
.*                              DATE0000               Called by: TADD0000  *
.*                        get the journal date                              *
.****************************************************************************
.
DATE0000  MOVE      LINENO,CVERT
          MOVE      THIRTY7,CCOL
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      IBACLOCK                     * get current date
.
          PACK      CURRDAT,CCC,CYY,CMM,CDD
          REP       " 0",CURRDAT 
          UNPACK    CURRDAT,CCENT,CYEAR,CMON,CDAY
.
          COMPARE   ZERO,PRCNJDAT                          * no keyin of date
          IF        @EQUAL
             PACK      XJDATE,CCENT,CYEAR,CMON,CDAY        * use current date
             GOTO      DATE9000
          ENDIF
.
DATE1000  CALL      KEYDATE
.
.         Keyin date must be >= invoice date
.
          UNPACK    PRINDATE,INVDATE
          PACK      XJDATE,CCENT,CYEAR,CMON,CDAY
          MATCH     INVDATE,XJDATE
          GOTO      DATE2000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Date must not be prior to invoice date. ";
          CALL      HITENTER
          GOTO      DATE1000
.
.         Check date not in future
.
DATE2000  MATCH     XJDATE,CURRDAT
          GOTO      DATE9000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Date must not be in the future. ";
          CALL      HITENTER
          GOTO      DATE1000
.
DATE9000  CALL      PACDATE
          DISPLAY   *P37:LINENO,CPCDATE
.
DATE9999  RETURN
+
.****************************************************************************
.*                              TYPE0000               Called by: TADD0000  *
.*                        get the journal type                              *
.****************************************************************************
.
TYPE0000  DISPLAY   *P48:LINENO,*EL
          MOVE      LINENO,EVERT
          MOVE      FORTY8,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEJ,CODE
.
          CALL      PATCODKY
          BRANCH    EXIT,TYPE9999:               * nothing entered
                         TYPE9999                * exitchar entered
.
          DISPLAY   *P48:LINENO,ACODE
          MOVE      ACODE,XJCODE
          MOVE      TDESC,XDESC
          MOVE      TDESC,TEMPDESC
          MOVE      THCSCOD,XJTYPE               * journal type for journals
.
TYPE9999  RETURN
+
+
.****************************************************************************
.* DFJT0000 : Default Journal Type
.****************************************************************************
DFJT0000  DISPLAY   *P48:LINENO,*EL
          MOVE      LINENO,EVERT
          MOVE      FORTY8,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEJ,CODE
.
.
DFJT9999  RETURN
+
.****************************************************************************
.*                              DESC0000               Called by: TADD0000  *
.*                     get the journal description                          *
.****************************************************************************
.
DESC0000  KEYIN     *P53:LINENO,*V2LON,*DV,TEMPDESC:
                    *P53:LINENO,*RV,TEMPDESC
.
          RESET     TEMPDESC
          GOTO      DESC9000 IF EOS              * nothing entered so accept
.                                                  default description
          ENDSET    TEMPDESC
          APPEND    SP20,TEMPDESC
          RESET     TEMPDESC
.
          MOVE      TEMPDESC,XDESC               * save new description
          ENDSET    XDESC
          APPEND    SP30,XDESC
          RESET     XDESC
.
DESC9000  DISPLAY   *P53:LINENO,XDESC
.
DESC9999  RETURN
+
.****************************************************************************
.*                              KGST0000               Called by: TADD0000  *
.*                     get the GST Code                                     *
.****************************************************************************
KGST0000  MATCH     ANSG,XJTYPE         * Check if this is a GST Adj.code
          GOTO      KGST9999 IF NOT EQUAL
.
          COMPARE   TWO,IBCNUGST
          GOTO      KGST9000 IF NOT EQUAL
.
KGST1000  MOVE      SP10,IBGSCODE          * initialise GST Code
          DISPLAY   *P1:24,*B,*EL,*V2LON,"Keyin GST Code.";
          MOVE      TEN6,CCOL
          MOVE      TWENTY4,CVERT 
          MOVE      ZERO,INACTV              * no inactive code
          OPEN      IBAGSTA1,"ibagstaf"
          OPEN      IBAGSTA2,"ibagstaf"
          CALL      KIBGSA00                * Keyin GST Code
          BRANCH    EXIT,KGST1000,KGST9999
          CLOSE     IBAGSTA1
          MOVE      IBGSCODE,XGSTC
          MOVE      LINENO,CVERT
          MOVE      "68",CCOL
          DISPLAY   *PCCOL:CVERT,XGSTC:
                    *P1:24,SP70
          GOTO      KGST9999
.
KGST9000  DISPLAY   *P1:24,*EL,*V2LON,"Invalid Journal Code. ";
          CALL      HITENTER
KGST9999  RETURN
+
.****************************************************************************
.*                              AMNT0000               Called by: TADD0000  *
.*                     get the journal amount                               *
.****************************************************************************
.
AMNT0000  KEYIN     *P72:LINENO,*V2LON,XAMNT
.
          COMPARE   ZERO,XAMNT                   * anything entered ?
          GOTO      AMNT9500 IF EQUAL            * no
.
          DISPLAY   *P72:LINENO,XAMNT
          MOVE      ZERO,EXIT
          GOTO      AMNT9999
.
AMNT9500  MOVE      ONE,EXIT
.
AMNT9999  RETURN
+
.****************************************************************************
.*                              VALD0000               Called by: ML0000    *
.*            validate that the batch and current totals balance            *
.*  Returns:     EXIT   0 = redisplay screen selected                       *
.*                      1 = delete entries selected                         *
.****************************************************************************
.
.         First see if any entries were made
.
VALD0000  MOVE      SP3,KEY3 
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          COMPARE   ZERO,OVRCD                   * record found ?
          GOTO      VALD0500 IF EQUAL            * yes
.
          DISPLAY   *P1:24,*EL,*B,"No journals processed. ";
          CALL      HITENTER
          GOTO      VALD9200
.
VALD0500  COMPARE   BATAMNT,CURRTOT              * batch balances ?
          GOTO      VALD9500 IF EQUAL            * yes
.
VALD1000  KEYIN     *P1:23,*V2LON,*BLINKON,"UNBALANCED",*HOFF:
                    *P1:24,*EL,"(",*V2LON,*DV,ANSD,*HOFF,")elete all, (":
                    *V2LON,*DV,ANSR,*HOFF,")ecall screen, (",*V2LON,*DV,ANSC:
                    *HOFF,")hange batch amount ?":
                    *P56:24,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      VALD1000 IF EQUAL            * no
.
          MATCH     ANSD,ANS                     * D entered ?
          GOTO      VALD8500 IF EQUAL            * yes
.
          MATCH     ANSR,ANS                     * R entered ?
          GOTO      VALD9000 IF EQUAL            * yes
.
          MATCH     ANSC,ANS                     * C entered ?
          GOTO      VALD8000 IF EQUAL            * yes
.
          BEEP
          GOTO      VALD1000
.
.          Get new batch amount
.
VALD8000  KEYIN     *P1:23,*DV,SP20,*P1:24,*EL,"Enter new batch total : $":
                    *P26:24,*V2LON,BATAMNT
.
          DISPLAY   *P72:4,*V2LON,BATAMNT
          GOTO      VALD0000
.
.         Confirm batch deletion
.
VALD8500  KEYIN     *P1:23,*DV,SP20,*P1:24,*EL,"Ok to delete ALL entries ":
                    "for this batch (",*V2LON,*DV,ANSY,*HOFF,*DV,SLASH:
                    *V2LON,*DV,ANSN,*HOFF,") ?":
                    *P49:24,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      VALD8500 IF EQUAL            * no
.
          MATCH     ANSN,ANS                     * N entered ?
          GOTO      VALD1000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * Y entered ?
          GOTO      VALD9200 IF EQUAL            * yes
.
          BEEP
          GOTO      VALD8500
.
VALD9000  MOVE      ONE,EXIT
          GOTO      VALD9999
.
VALD9200  MOVE      TWO,EXIT
          GOTO      VALD9999
.
VALD9500  MOVE      ZERO,EXIT
.
VALD9999  RETURN
+
.**************************************************************************
.*                              WRT0000                Called by: ML0000  *
.*                     write journals to file                             *
.**************************************************************************
.
WRT0000   CALL      CLBN0000                     * Close this batch number
          MOVE      ZERO,TOTREC                  * initialise counter
          MOVE      SP3,KEY3
          CALL      RSTEMP1                      * position at start of file
WRT3000   CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,WRT9999                * no more records
.
          ADD       ONE,TOTREC                   * increment counter
          MOVE      ZERO,PRDTGSTM
          COMPARE   TOTREC,ONE                   * first record ?
          GOTO      WRT3500 IF NOT EQUAL         * no
.
          DISPLAY   *P1:23,*EF,*P1:24,"Processing journals : "
.
WRT3500   DISPLAY   *P23:24,*V2LON,TOTREC;       * display record count
.
          CMATCH    ANSR,XJTYPE                  * rebate journal ?
          GOTO      WRT4000 IF NOT EQUAL         * no
.
          MOVE      ZERO,PRDTAMNT                * rebate journals set to 0.00
          GOTO      WRT4500
.
WRT4000   CMATCH    ANSG,XJTYPE                  * GST Journal ?
          GOTO      WRT4200 IF NOT EQUAL
.
          MOVE      ZERO,PRDTAMNT
          MOVE      XAMNT,PRDTGSTM
          MULT      SEQ,PRDTGSTM                 * store as negative amount
          GOTO      WRT5000
.
WRT4200   MOVE      XAMNT,PRDTAMNT               
          MULT      SEQ,PRDTAMNT                 * store as negative amount
.
WRT4500   CMATCH    ANSA,XJTYPE                  * adjustment journal ?
          GOTO      WRT5000 IF NOT EQUAL         * no
.
          MULT      SEQ,PRDTAMNT                 * reverse sign for adjustment
.                                                  journal
.
. ------- Update the journal amount in the invoice file ------
.
WRT5000   MOVE      XINVOICE,KEY8
          CALL      RDPRIN1
          BRANCH    OVRCD,WRT5500
          ADD       PRDTGSTM,PRINGSTJ
          ADD       PRDTAMNT,PRINJAMT
          ADD       PRDTAMNT,PRINPEND
.
          PACK      PRINUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PRINUDAT             * date updated
          CLOCK     TIME,PRINUTIM             * time updated
          MOVE      PASSCODE,PRINUUID         * user id
          CALL      UPPRIN1
.                                                                     *I-210835
          IF        PRINSCAN = 1
            PROC      FLAGDEBP                * Flag PMI Outstanding Debt
          ENDIF
.
. ------- Write the DTR record ----------------
.
WRT5500   MOVE      XINVOICE,KEY8
          CALL      RDPRIN1                      * get invoice file
          BRANCH    OVRCD,WRT3000
          MOVE      PRINTRAN,NXTRAN              * get DTRAN number
          ADD       ONE,PRINTRAN                 * increment DTRAN number
.
          PACK      PRINUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PRINUDAT             * date updated
          CLOCK     TIME,PRINUTIM             * time updated
          MOVE      PASSCODE,PRINUUID         * user id
          CALL      UPPRIN1                   * update invoice record
.                                                                     *I-210835
          IF        PRINSCAN = 1
            PROC      FLAGDEBP                * Flag PMI Outstanding Debt
          ENDIF
.
.         Make sure transaction not already on file
.
          PACK      KEY22,PRINUNIQ,XINVOICE,NXTRAN
          CALL      RAPRDT1
          COMPARE   ZERO,OVRCD                   * transaction # on file ?
          GOTO      WRT5500 IF EQUAL             * yes - get next trans. #
.
          CALL      CLPRIDTR
.
          MOVE      XDEBTOR,PRDTDEBT             * load file variables
          MOVE      XFLAG,PRDTSCAN
          MOVE      XJDATE,PRDTSDAT
          MOVE      XDESC,PRDTDESC
          MOVE      PRINPRAC,PRDTPRAC
          MOVE      PRINDOCT,PRDTDOCT
          MOVE      ONE,PRDTSERV
          PACK      PRDTREFT,SP30,SP20
          MOVE      PRINCLAM,PRDTCLAM
          MOVE      THREE,PRDTRTYP
          MOVE      XJCODE,PRDTTTYP
          MOVE      ONE,PRDTINVP
          MOVE      BATCHNO,PRDTBATC
          MOVE      XGSTC,PRDTGSTC
          MOVE      PRDTSDAT,PRDTEFFD
.         
          PACK      KEY22,PRINUNIQ,XINVOICE,NXTRAN
          CALL      WRPRDT1                      * write DTR record
.
          CALL      CBAL0000                     * Check if invoice now balanced
.
. ------- Write journal audit record ---------------
.
          MOVE      "ZZ",AJRECCD
          MOVE      SP8,AJBATCH
          MOVE      ZERO,AJBATOT
          MOVE      SP20,AJDESC
          MOVE      SP4,AJOPER
          MOVE      XDEBTOR,AJDEBT
          MOVE      XNAME,AJNAME
          MOVE      PRDTSDAT,AJDATE
          CLOCK     TIME,CTIMEIS
          MOVE      CTIMEIS,AJTIME
          MOVE      PRINNUMB,AJINVNO
          MOVE      XAMNT,AJAMT
          MOVE      PRDTTTYP,AJTYPE
          MOVE      PRDTDESC,AJTDESC
          MOVE      PRDTSCAN,AJSCAN
.
          CALL      UPAUDJ
.
. ------- Write the journal record -----------------
.
          MOVE      SP4,PRJRSPAR
          PACK      KEY35,XJCODE,XJDATE,XDEBTOR,XFLAG,NXTRAN,XINVOICE
          CALL      WRPRJR1
.
.         If bad debt journal, update patient record
.
          CMATCH    ANSB,XJTYPE                  * bad debt journal ?
          GOTO      WRT6500 IF NOT EQUAL         * no
.
          MOVE      XDEBTOR,KEY8
          BRANCH    XFLAG,WRT6000                * PMI patient
.
...          CALL      RDPRDB1                      * get debtor record
...          BRANCH    OVRCD,WRT6500                * not found
.
...          MOVE      ONE,PRDBBADD                 * set bad debt flag
...          CALL      UPPRDB1
.
WRT6000   CALL      RLPTMAS1                     * get PMI record
          BRANCH    OVRCD,WRT6500                * not found
.
          MOVE      ONE,PBDEBT                   * set bad debt flag
          CALL      UPMAST1
          CALL      UUPTMAS1
          GOTO      WRT6500
.
. ------- Update financial summary file ------------
.
WRT6500   MOVE      ANSC,PRFNTYPE                * set financial type - journals
          IF        PRCNAFEE=1
            PACK      PRFNCODE,PRDTDOCT,PRDTTTYP,SP30
          ELSE
            PACK      PRFNCODE,PRDTTTYP,SP30
          ENDIF
          MOVE      PRDTPRAC,PRFNMPRA
          UNPACK    PRDTSDAT,XCENT,XYEAR,XMON,XDAY
          PACK      FSTDATE,XCENT,XYEAR,XMON,XDAY
          REP       " 0",FSTDATE
.
          MATCH     ANSG,XJTYPE
          IF        @EQUAL
            IF        IBCNUGST=2
              MOVE      PRDTGSTM,FSTAMNT
              MULT      SEQ,FSTAMNT                * reverse sign for fees 
              MOVE      ONE,FGSTFLAG
              CALL      PRICALFS
            ENDIF
          ELSE
            MOVE      PRDTAMNT,FSTAMNT
            MULT      SEQ,FSTAMNT                  * reverse sign for fees 
            MOVE      ZERO,FGSTFLAG
            CALL      PRICALFS
          ENDIF
          BRANCH    EXIT,WRT3000                 * date range not found
.
. ------- Update stats file ------------------------
.
.         Get the period from the date range period file
.
          MOVE      DRGNUM,PERNUM
.
          MOVE      PRINPRAC,PRSTPRAC
          MOVE      PRINDOCT,PRSTDOCT
          PACK      KEY16,PRFNYEAR,PRSTPRAC,PRSTDOCT
          CALL      RDPRST1                      * record exists ?
          BRANCH    OVRCD,WRT8000                * no
.
.         Update the existing journal amount for the appropriate period
.
          LOAD      JNLAMNT,PERNUM,PRSTJP01,PRSTJP02,PRSTJP03,PRSTJP04,PRSTJP05:
                    PRSTJP06,PRSTJP07,PRSTJP08,PRSTJP09,PRSTJP10,PRSTJP11:
                    PRSTJP12,PRSTJP13
.
          ADD       PRDTAMNT,JNLAMNT             * add journal trax. amount
          IF        IBCNUGST=2
            ADD       PRDTGSTM,JNLAMNT
          ENDIF
.
          STORE     JNLAMNT,PERNUM,PRSTJP01,PRSTJP02,PRSTJP03,PRSTJP04,PRSTJP05:
                    PRSTJP06,PRSTJP07,PRSTJP08,PRSTJP09,PRSTJP10,PRSTJP11:
                    PRSTJP12,PRSTJP13
.
          CALL      UPPRST1
          GOTO      WRT3000
.
.         Statistics record not found - so create one
.
WRT8000   MOVE      ZERO,FORM2                   * initialise counter
WRT8500   ADD       ONE,FORM2                    * increment counter
.
          COMPARE   FORM2,FORTY                  * all fields initialised ?
          GOTO      WRT9000 IF LESS              * yes
.
          STORE     ZERO,FORM2,PRSTOBAL,PRSTIP01,PRSTIP02,PRSTIP03,PRSTIP04:
                    PRSTIP05,PRSTIP06,PRSTIP07,PRSTIP08,PRSTIP09,PRSTIP10:
                    PRSTIP11,PRSTIP12,PRSTIP13,PRSTCP01,PRSTCP02,PRSTCP03:
                    PRSTCP04,PRSTCP05,PRSTCP06,PRSTCP07,PRSTCP08,PRSTCP09:
                    PRSTCP10,PRSTCP11,PRSTCP12,PRSTCP13,PRSTJP01,PRSTJP02:
                    PRSTJP03,PRSTJP04,PRSTJP05,PRSTJP06,PRSTJP07,PRSTJP08:
                    PRSTJP09,PRSTJP10,PRSTJP11,PRSTJP12,PRSTJP13
          GOTO      WRT8500
.
WRT9000   MOVE      SP20,PRSTSPAR
.
          ADD       PRDTAMNT,JNLAMNT             * add journal trax. amount
          IF        IBCNUGST=2
            ADD       PRDTGSTM,JNLAMNT
          ENDIF
.
          STORE     JNLAMNT,PERNUM,PRSTJP01,PRSTJP02,PRSTJP03,PRSTJP04,PRSTJP05:
                    PRSTJP06,PRSTJP07,PRSTJP08,PRSTJP09,PRSTJP10,PRSTJP11:
                    PRSTJP12,PRSTJP13
          CALL      WRPRST1
.
          GOTO      WRT3000
.
WRT9999   RETURN
+
.**************************************************************************
. CBAL0000 : Check if invoice is balance
.**************************************************************************
CBAL0000  MOVE      PRINITOT,F12P2
          ADD       PRINPAMT,F12P2
          ADD       PRINHAMT,F12P2
          ADD       PRINIAMT,F12P2
          ADD       PRINMAMT,F12P2
          ADD       PRINVAMT,F12P2
          ADD       PRINOTHA,F12P2
          ADD       PRINJAMT,F12P2
.
          COMPARE   ZERO,F12P2
          GOTO      CBAL9999 IF NOT EQUAL       * invoice not balanced
.
          MOVE      KEY22,SAVKEY22
          PACK      KEY22,PRINUNIQ,PRINNUMB,SP20
          CALL      RSPRDT1
CBAL1000  CALL      RKPRDT1
          BRANCH    OVRCD,CBAL9000
.
          COMPARE   PRINUNIQ,PRDTUNIQ
          GOTO      CBAL9000 IF NOT EQUAL       * different unique number
.
          MATCH     PRINNUMB,PRDTINVN
          GOTO      CBAL9000 IF NOT EQUAL       * different invoice number
.
...       COMPARE   ONE,PRDTAPAY
...       GOTO      CBAL9000 IF NOT EQUAL       * accounts payable not set
.
          BRANCH    PRDTRTYP,CBAL2000,CBAL1000,CBAL2000  * only item & journal
.
CBAL2000  MOVE      TWO,PRDTAPAY                * accounts payable flag- balance
          CALL      UPPRDT1
          GOTO      CBAL1000
.
.******************************************** start of addition        *I-60454
CBAL9000  MOVE      SAVKEY22,KEY22
          CALL      RDPRDT1
.********************************************   end of addition        *I-60454
.
CBAL9999  RETURN
+
.**************************************************************************
. CLBN0000 : Close this Batch Number (Write to controlf)
.**************************************************************************
CLBN0000
          COMPARE   ONE,PRCNGENB             * generated batch numbers?
          GOTO      CLBN9999 IF NOT EQUAL
.
          ADD       ONE,PRCNNXBA             * Update the Generated no.
          WRITAB    CONTROLF,THIRTY4;*188,PRCNNXBA  
.
CLBN9999  RETURN
+
.**************************************************************************
.*                              CREA0000               Called by: ML0000  *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
.
          OPEN      JRNTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: ML0000    *
.*               close and erase the temporary file               CREA0000  *
.****************************************************************************
.
KILL0000  CLOSE     JRNTEMP1                     * close file
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*                              CLR0000                Called by: ML0000    *
.*                   clear all transactions from temp file                  *
.*                   initialise variables                                   *
.****************************************************************************
.
CLR0000   MOVE      SP3,KEY3
          CALL      RSTEMP1                      * position at start of file
CLR1000   CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLR9000                * end of file
.
          MOVE      XTRANS,KEY3
          CALL      DETEMP1                      * delete record
          GOTO      CLR1000                      * get next record
.
CLR9000   MOVE      ZERO,CURRTOT                 * initialise batch total
          MOVE      ZERO,XTRANS                  * initialise trax #
          MOVE      ONE,NEWNTRY                  * start additions
.
CLRT9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      JRNTEMP1,KEY3;;
          RETURN
.
RATEMP1   MOVE      ZERO,OVRCD
          READ      JRNTEMP1,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      JRNTEMP1,KEY3;XDTRANS,XINVOICE,XDEBTOR,XFLAG,XNAME,XJDATE:
                                  XJCODE,XDESC,XJTYPE,XAMNT,XLEDG,XACCT:
                                  XGSTC
          GOTO      OVERCOND IF OVER
          MOVE      XDTRANS,XTRANS
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    JRNTEMP1;XDTRANS,XINVOICE,XDEBTOR,XFLAG,XNAME,XJDATE:
                             XJCODE,XDESC,XJTYPE,XAMNT,XLEDG,XACCT:
                             XGSTC
          GOTO      OVERCOND IF OVER
          MOVE      XDTRANS,XTRANS
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    JRNTEMP1;XDTRANS,XINVOICE,XDEBTOR,XFLAG,XNAME,XJDATE:
                             XJCODE,XDESC,XJTYPE,XAMNT,XLEDG,XACCT:
                             XGSTC
          GOTO      OVERCOND IF OVER
          MOVE      XDTRANS,XTRANS
          RETURN
.
WRTEMP1   WRITE     JRNTEMP1,KEY3;KEY3,XINVOICE,XDEBTOR,XFLAG,XNAME,XJDATE:
                                  XJCODE,XDESC,XJTYPE,XAMNT,XLEDG,XACCT:
                                  XGSTC
          RETURN
.
UPTEMP1   MOVE      XTRANS,XDTRANS
          UPDATE    JRNTEMP1;XDTRANS,XINVOICE,XDEBTOR,XFLAG,XNAME,XJDATE:
                             XJCODE,XDESC,XJTYPE,XAMNT,XLEDG,XACCT:
                                  XGSTC
          RETURN
.
DETEMP1   DELETE    JRNTEMP1,KEY3
          RETURN
+
. =========================================================================
.      I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PATCODKY
          INC       PRICALFS
          INC       IBAGSTKY
          INC       IBAGKIKY
          INC       PMSOSPTM                                          *I-210835
          INC       CLPRIDTR
.
          INC       IBAGSTIO/INC                 * GST file
          INC       PRIDTRIO/INC                 * debtor transaction file
...          INC       PRIDBTIO/INC                 * debtor file
          INC       PRIJRNIO/INC                 * journal file
          INC       PRIINVIO/INC                 * invoice file
          INC       PRIFINIO/INC                 * financial summary file
          INC       PRIFIGIO/INC                 * financial summary file
          INC       PRISTAIO/INC                 * statistics file
          INC       PRIAUJIO/INC                 * journals audit file
.
          INC       PATDRGIO/INC                 * date range period file
          INC       PATCODIO/INC                 * codes file
          INC       PATMA1IO/INC                 * patient master file
