.******************************************************************************
.* Mods     : V6.06.B01 04/01/1999 Nicole Harrington                          *
.*                      Mods to use FULLDATE to clock date                    *
.******************************************************************************
.*            V5.07     06/10/98  Jim Stathopoulos                            *
.*                      507 Changes                                           *
.******************************************************************************
.
. Program to log screen display speeds and I/O speeds. Results are logged to
. the file "speeds.txt".
.
          INC       STD002FD
.
YFILE     IFILE     SQL, FIXED=256, KEY="u1-5,6-10"
.
YCODE     DIM       5
YSUB      DIM       5
YKEY      DIM       10
YDATE     DIM       8
YTIME     DIM       8
YAMNT     FORM      6
YFILL1    DIM       100
YFILL2    DIM       100
YFILL3    DIM       15
.
.
COUNTER   FORM      5
DUR       FORM      6.4
PDUR      FORM      4.1
WDUR      FORM      6.3
RDUR      FORM      6.3
UDUR      FORM      6.3
DDUR      FORM      6.3
.
FROMTIME  DIM       8
ENDTIME   DIM       8
.
STIME     DIM       8         * Start time
PTIME     DIM       8         * Display end time
WTIME     DIM       8         * Write end time
RTIME     DIM       8         * Read end time
UTIME     DIM       8         * Read & update time
DTIME     DIM       8         * Delete time
LTIME     DIM       8         * Loop time
.
NEG3      FORM      "-3"
XFILE     FILE      ASCII, FIXED=64
.
          EXECUTE   "iserase screen2",TASKID
          EXECUTE   "isbuild screen2 256 u1-5,6-10 u11-20,6-10,1-5 u6-10,11-20,1-5",TASKID
.
          OPEN      YFILE,"screen2"
.
.         Initialise index file details
.
          MOVE      SP8,YDATE
          MOVE      SP8,YTIME
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      XFILE,"speeds"
          TRAPCLR   IO
.
          BRANCH    OVRCD,ML0100
          GOTO      ML0200
.
ML0100    PREP      XFILE,"speeds"
.
.         Log start time
.
ML0200    CLOCK     TIME,STIME
.
.         Display the screen 10 times.
.
          MOVE      ZERO,COUNTER
ML1000    ADD       ONE,COUNTER
          COMPARE   "11",COUNTER
          GOTO      ML1900 IF NOT LESS
.
          DISPLAY   *ES:
                    *P1:1,*V2LON,"01",*HOFF," = xxxxxxxxxxxx":
                    *P1:2,*V2LON,"02",*HOFF," = xxxxxxxxxxxx":
                    *P1:3,*V2LON,"03",*HOFF," = xxxxxxxxxxxx":
                    *P1:4,*V2LON,"04",*HOFF," = xxxxxxxxxxxx":
                    *P1:5,*V2LON,"05",*HOFF," = xxxxxxxxxxxx":
                    *P1:6,*V2LON,"06",*HOFF," = xxxxxxxxxxxx":
                    *P1:7,*V2LON,"07",*HOFF," = xxxxxxxxxxxx":
                    *P1:8,*V2LON,"08",*HOFF," = xxxxxxxxxxxx":
                    *P1:9,*V2LON,"09",*HOFF," = xxxxxxxxxxxx"
          DISPLAY   *P1:10,*V2LON,"10",*HOFF," = xxxxxxxxxxxx":
                    *P1:11,*V2LON,"11",*HOFF," = xxxxxxxxxxxx":
                    *P1:12,*V2LON,"12",*HOFF," = xxxxxxxxxxxx":
                    *P1:13,*V2LON,"13",*HOFF," = xxxxxxxxxxxx":
                    *P1:14,*V2LON,"14",*HOFF," = xxxxxxxxxxxx":
                    *P1:15,*V2LON,"15",*HOFF," = xxxxxxxxxxxx":
                    *P1:16,*V2LON,"16",*HOFF," = xxxxxxxxxxxx":
                    *P1:17,*V2LON,"17",*HOFF," = xxxxxxxxxxxx":
                    *P1:18,*V2LON,"18",*HOFF," = xxxxxxxxxxxx":
                    *P1:19,*V2LON,"19",*HOFF," = xxxxxxxxxxxx":
                    *P1:20,*V2LON,"20",*HOFF," = xxxxxxxxxxxx"
          DISPLAY   *P20:1,*V2LON,"21",*HOFF," = xxxxxxxxxxxx":
                    *P20:2,*V2LON,"22",*HOFF," = xxxxxxxxxxxx":
                    *P20:3,*V2LON,"23",*HOFF," = xxxxxxxxxxxx":
                    *P20:4,*V2LON,"24",*HOFF," = xxxxxxxxxxxx":
                    *P20:5,*V2LON,"25",*HOFF," = xxxxxxxxxxxx":
                    *P20:6,*V2LON,"26",*HOFF," = xxxxxxxxxxxx":
                    *P20:7,*V2LON,"27",*HOFF," = xxxxxxxxxxxx":
                    *P20:8,*V2LON,"28",*HOFF," = xxxxxxxxxxxx":
                    *P20:9,*V2LON,"29",*HOFF," = xxxxxxxxxxxx"
          DISPLAY   *P20:10,*V2LON,"30",*HOFF," = xxxxxxxxxxxx":
                    *P20:11,*V2LON,"31",*HOFF," = xxxxxxxxxxxx":
                    *P20:12,*V2LON,"32",*HOFF," = xxxxxxxxxxxx":
                    *P20:13,*V2LON,"33",*HOFF," = xxxxxxxxxxxx":
                    *P20:14,*V2LON,"34",*HOFF," = xxxxxxxxxxxx":
                    *P20:15,*V2LON,"35",*HOFF," = xxxxxxxxxxxx":
                    *P20:16,*V2LON,"36",*HOFF," = xxxxxxxxxxxx":
                    *P20:17,*V2LON,"37",*HOFF," = xxxxxxxxxxxx":
                    *P20:18,*V2LON,"38",*HOFF," = xxxxxxxxxxxx":
                    *P20:19,*V2LON,"39",*HOFF," = xxxxxxxxxxxx":
                    *P20:20,*V2LON,"40",*HOFF," = xxxxxxxxxxxx"
          DISPLAY   *P40:1,*V2LON,"21",*HOFF," = xxxxxxxxxxxx":
                    *P40:2,*V2LON,"22",*HOFF," = xxxxxxxxxxxx":
                    *P40:3,*V2LON,"23",*HOFF," = xxxxxxxxxxxx":
                    *P40:4,*V2LON,"24",*HOFF," = xxxxxxxxxxxx":
                    *P40:5,*V2LON,"25",*HOFF," = xxxxxxxxxxxx":
                    *P40:6,*V2LON,"26",*HOFF," = xxxxxxxxxxxx":
                    *P40:7,*V2LON,"27",*HOFF," = xxxxxxxxxxxx":
                    *P40:8,*V2LON,"28",*HOFF," = xxxxxxxxxxxx":
                    *P40:9,*V2LON,"29",*HOFF," = xxxxxxxxxxxx"
          DISPLAY   *P40:10,*V2LON,"30",*HOFF," = xxxxxxxxxxxx":
                    *P40:11,*V2LON,"31",*HOFF," = xxxxxxxxxxxx":
                    *P40:12,*V2LON,"32",*HOFF," = xxxxxxxxxxxx":
                    *P40:13,*V2LON,"33",*HOFF," = xxxxxxxxxxxx":
                    *P40:14,*V2LON,"34",*HOFF," = xxxxxxxxxxxx":
                    *P40:15,*V2LON,"35",*HOFF," = xxxxxxxxxxxx":
                    *P40:16,*V2LON,"36",*HOFF," = xxxxxxxxxxxx":
                    *P40:17,*V2LON,"37",*HOFF," = xxxxxxxxxxxx":
                    *P40:18,*V2LON,"38",*HOFF," = xxxxxxxxxxxx":
                    *P40:19,*V2LON,"39",*HOFF," = xxxxxxxxxxxx":
                    *P40:20,*V2LON,"40",*HOFF," = xxxxxxxxxxxx"
          DISPLAY   *P60:1,*V2LON,"21",*HOFF," = xxxxxxxxxxxx":
                    *P60:2,*V2LON,"22",*HOFF," = xxxxxxxxxxxx":
                    *P60:3,*V2LON,"23",*HOFF," = xxxxxxxxxxxx":
                    *P60:4,*V2LON,"24",*HOFF," = xxxxxxxxxxxx":
                    *P60:5,*V2LON,"25",*HOFF," = xxxxxxxxxxxx":
                    *P60:6,*V2LON,"26",*HOFF," = xxxxxxxxxxxx":
                    *P60:7,*V2LON,"27",*HOFF," = xxxxxxxxxxxx":
                    *P60:8,*V2LON,"28",*HOFF," = xxxxxxxxxxxx":
                    *P60:9,*V2LON,"29",*HOFF," = xxxxxxxxxxxx"
          DISPLAY   *P60:10,*V2LON,"30",*HOFF," = xxxxxxxxxxxx":
                    *P60:11,*V2LON,"31",*HOFF," = xxxxxxxxxxxx":
                    *P60:12,*V2LON,"32",*HOFF," = xxxxxxxxxxxx":
                    *P60:13,*V2LON,"33",*HOFF," = xxxxxxxxxxxx":
                    *P60:14,*V2LON,"34",*HOFF," = xxxxxxxxxxxx":
                    *P60:15,*V2LON,"35",*HOFF," = xxxxxxxxxxxx":
                    *P60:16,*V2LON,"36",*HOFF," = xxxxxxxxxxxx":
                    *P60:17,*V2LON,"37",*HOFF," = xxxxxxxxxxxx":
                    *P60:18,*V2LON,"38",*HOFF," = xxxxxxxxxxxx":
                    *P60:19,*V2LON,"39",*HOFF," = xxxxxxxxxxxx":
                    *P60:20,*V2LON,"40",*HOFF," = xxxxxxxxxxxx"
          GOTO      ML1000
.
ML1900    CLOCK     TIME,PTIME
.
.         Do 250 writes and log the time taken.
.
          MOVE      ZERO,COUNTER
ML2000    ADD       ONE,COUNTER
          COMPARE   "251",COUNTER
          GOTO      ML2900 IF NOT LESS
.
          CALL      GKEY0000            * Get the key fields
.
          WRITE     YFILE,KEY10;YCODE,YSUB,YKEY,YDATE,YTIME,YAMNT:
                                YFILL1,YFILL2,YFILL3
          GOTO      ML2000
.
ML2900    CLOCK     TIME,WTIME
.
.         Do 250 reads and log the time taken.
.
          MOVE      ZERO,COUNTER
ML4000    ADD       ONE,COUNTER
          COMPARE   "251",COUNTER
          GOTO      ML4900 IF NOT LESS
.
          CALL      GKEY0000            * Get the key fields
.
          READ      YFILE,KEY10;YCODE,YSUB,YKEY,YDATE,YTIME,YAMNT:
                                YFILL1,YFILL2,YFILL3
          GOTO      ML4000
.
ML4900    CLOCK     TIME,RTIME
.
.         Do 250 read and updates and log the time taken.
.
          MOVE      ZERO,COUNTER
ML5000    ADD       ONE,COUNTER
          COMPARE   "251",COUNTER
          GOTO      ML5900 IF NOT LESS
.
          CALL      GKEY0000            * Get the key fields
.
          READ      YFILE,KEY10;YCODE,YSUB,YKEY,YDATE,YTIME,YAMNT:
                                YFILL1,YFILL2,YFILL3
          MOVE      ONE,YAMNT
          UPDATE    YFILE;YCODE,YSUB,YKEY,YDATE,YTIME,YAMNT,YFILL1,YFILL2,YFILL3
          GOTO      ML5000
.
ML5900    CLOCK     TIME,UTIME
.
.         Do 250 deletes and log the time taken.
.
          MOVE      ZERO,COUNTER
ML6000    ADD       ONE,COUNTER
          COMPARE   "251",COUNTER
          GOTO      ML6900 IF NOT LESS
.
          CALL      GKEY0000            * Get the key fields
.
          DELETE    YFILE,KEY10
          GOTO      ML6000
.
ML6900    CLOCK     TIME,DTIME
.
.         Do 5000 loops and log the time taken. This is so the overheads
.         of the looping can be taken into account
.
          MOVE      ZERO,COUNTER
ML7000    ADD       ONE,COUNTER
          COMPARE   "5001",COUNTER
          GOTO      ML7900 IF NOT LESS
.
          CALL      GKEY0000            * Get the key fields
.
          GOTO      ML7000
.
ML7900    CLOCK     TIME,LTIME
.
.         Calculate Statistics
.
          MOVE      STIME,FROMTIME
          MOVE      PTIME,ENDTIME
          CALL      CTIM0000
          DIV       TEN,DUR
          MOVE      DUR,PDUR            * Average display time
.
          MOVE      PTIME,FROMTIME
          MOVE      WTIME,ENDTIME
          CALL      CTIM0000
          DIV       "250",DUR
          MOVE      DUR,WDUR            * Average write time
.
          MOVE      WTIME,FROMTIME
          MOVE      RTIME,ENDTIME
          CALL      CTIM0000
          DIV       "250",DUR
          MOVE      DUR,RDUR            * Average read time
.
          MOVE      RTIME,FROMTIME
          MOVE      UTIME,ENDTIME
          CALL      CTIM0000
          DIV       "250",DUR
          MOVE      DUR,UDUR            * Average read & update time
.
          MOVE      UTIME,FROMTIME
          MOVE      DTIME,ENDTIME
          CALL      CTIM0000
          DIV       "250",DUR
          MOVE      DUR,DDUR            * Average delete time
.
          MOVE      DTIME,FROMTIME
          MOVE      LTIME,ENDTIME
          CALL      CTIM0000
          DIV       "5000",DUR          * Average loop time
          SUB       DUR,PDUR            * Correction to time
          SUB       DUR,WDUR            * Correction to time
          SUB       DUR,RDUR            * Correction to time
          SUB       DUR,UDUR            * Correction to time
          SUB       DUR,DDUR            * Correction to time
.
          CLOCK     FULLDATE,XDATE
          UNPACK    XDATE,CMON,CDAY,CCENT,CYEAR
          PACK      CPCDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          WRITE     XFILE,NEG3;CPCDATE,SP1,STIME,PDUR,WDUR,RDUR,UDUR,DDUR
.
          EXECUTE   "iserase screen2",TASKID
          STOP
.
.         Routine for calculating time duration
.
CTIM0000  UNPACK    ENDTIME,CHOUR,ANS,CMIN,ANS,XDAY
          MOVE      CHOUR,FORM2
          MOVE      FORM2,DUR
          MULT      "60",DUR            * convert to minutes
          MOVE      CMIN,FORM2
          ADD       FORM2,DUR
          MULT      "60",DUR            * convert to seconds
          MOVE      XDAY,FORM2
          ADD       FORM2,DUR
.
          MATCH     FROMTIME,ENDTIME
          GOTO      CTIM1000 IF NOT LESS
.
.         Over midnight
.
          ADD       "86400",DUR         * number of seconds in a day
.
CTIM1000  UNPACK    FROMTIME,CHOUR,ANS,CMIN,ANS,XDAY
          MOVE      CHOUR,FORM2
          MOVE      FORM2,YAMNT
          MULT      "60",YAMNT            * convert to minutes
          MOVE      CMIN,FORM2
          ADD       FORM2,YAMNT
          MULT      "60",YAMNT            * convert to seconds
          MOVE      XDAY,FORM2
          ADD       FORM2,YAMNT
.
          SUB       YAMNT,DUR
.
CTIM9999  RETURN
.
          INC       IBAOVRIO/INC
.
.         Routine to get the key fields
.
GKEY0000  MOVE      COUNTER,YCODE
          RESET     YCODE,4
          PACK      YSUB,YCODE,SP5
          RESET     YCODE
          PACK      YKEY,YSUB,YCODE
          PACK      KEY10,YCODE,YSUB
GKEY9999  RETURN
