. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS74                                             *
. * Desc      :   Inter Fund Transfer Journal                          *
. **********************************************************************
. * Date      :   27.02.1991                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. *V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
. *           Remove CALL to ' IBAPRNT1,"ibaprntf" '
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.B02 31.01.2001 Charles Handaya                               *
. *           Fix Modification of BAS Statement                        *
. * VF.09.B01 17.01.2001 Charles Handaya                               *
. *           Modification of BAS Statement                            *
. **********************************************************************
. * VF.01.01  30.12.2000 Sandra Barcham                                *
. *           Recompiled for IBACODIO & IBAPRNIO                       *
. **********************************************************************
. * VF.00.04  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.03  09.11.1999 Sandra Barcham                                *
. *           Recompiled for change FMSSBAUT for periodic journals     *
. * VF.00.02  01.09.1999 Sandra Barcham                                *
. *           Recompiled for index fix of FMSJPDA2                     *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSDISKY & FMSRESKY                       *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS74
.             open files and initialise variables
.             WHILE user wants to modify data DO
.                  get desired option
.                  modify data
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSAMAFD/INC       * account
          INC       FMSBCFFD/INC
          INC       FMSBPFFD/INC       * budger profile
          INC       FMSCONFD/INC       * controlf
          INC       FMSCSAFD/INC       * selected control accounts
          INC       FMSDISFD/INC       * dissection
          INC       FMSJMAFD/INC       * journal master
          INC       FMSJPDFD/INC       * journal post det
          INC       FMSJTPFD/INC       * journal post det
          INC       FMSLMAFD/INC       * ledger
          INC       FMSLMCFD/INC       * ledger calendar
          INC       FMSRESFD/INC       * responsibility
          INC       FMSTDSFD/INC       * trans desc
.
          INC       IBABASFD/INC
          INC       IBABATFD/INC
          INC       IBACONFD/INC
          INC       IBAPRNFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
ISBUILD   INIT      "isbuild "         * define temp file variables
ISERASE   INIT      "iserase "
TMP0ADAT  INIT      " 86 U1-3"
NEZTMP0A  IFILE     SQL, FIXED=86, KEY="U1-3"
NAMEA     INIT      "neztmA"
FILENAMA  DIM       8
KILLTMPA  DIM       80
MAKETMPA  DIM       80
.                            * temp file definition
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
NEZAUNIQ  DIM       3      3        1     unique id
NEZADECR  DIM       1      1        4     "D"ebit/"C"redit
NEZALEDG  DIM       2      2        5     ledger
NEZAACCT  DIM       12     12       7     account
NEZABASC  DIM       3      3        19    BAS code
NEZADISS  DIM       5      5        22    dissection
NEZARESP  DIM       4      4        27    responsibility
NEZADESC  DIM       35     35       31    description
NEZABANK  DIM       12     12       66    bank account 
NEZAAMT   FORM      12.2   8        78    amount
.
.End of file                        86
.
REVFLAG   FORM      1                       * var for FMSSBAUT
...DIM8      DIM       8                       * var for FMSSBAUT
DIMMON    DIM       2                       * var for FMSSBAUT
DIMPERD   DIM       6                       * var for FMSSBAUT
DIMYEAR   DIM       4                       * var for FMSSBAUT
DOCREF    DIM       7 Document reference    * var for FMSSBAUT
FORM12P2  FORM      12.2                    * var for FMSSBAUT
FORMPERD  FORM      6                       * var for FMSSBAUT
FILENAM3  DIM       8                       * var for FMSSBAUT
JOURTYPE  DIM       1 Journal Type          * var for FMSSBAUT
NOPERDS   FORM      2                       * var for FMSSBAUT
PERPERC   FORM      4.2                     * var for FMSSBAUT
PERDNO    FORM      2 Period number         * var for FMSSBAUT
WORKPERD  DIM       6                       * var for FMSSBAUT
SUBTYPE   FORM      1 Submission type       * var for FMSSBAUT
.                       0=norm 1=periodic 2=revers only
.
.
DEBCRED   INIT      "      " * debit/credit
DEBCRED1  INIT      "Debit "
DEBCRED2  INIT      "Credit"
.
DASH      INIT      "-"
MAXITEMB  FORM      "13"     * maximum no. of items on screen B + 1
.
ACCEPT    FORM      1        * accept mode (1=on)
AMOUNT    FORM      12.2     * amount
BALANCE   FORM      12.2     * balance
BASDESC   DIM       3        * BAS code
BASCODE   DIM       3        * BAS code
DEBTOT    FORM      12.2     * debit total
CURDATE   DIM       8        * current date
CURPAGE   FORM      3        * current page number
DATEACC   DIM       8        * accrual posting date
DATECAS   DIM       8        * cash posting date
DAMOUNT   DIM       10       * display amount
DDATEACC  DIM       10       * accrual posting date
DDATECAS  DIM       10       * cash posting date
DDIM1     DIM       1        * general dim 1
DEFAULT   DIM       30       * defaults for keyins
DEFDESC   DIM       35       * default description
DESC1     DIM       35       * description
DIMAMNT   DIM       15       * keyin for amount
....DIM4      DIM       4        * general dim 4
DIM27     DIM       27       * general dim 27
DIM40     DIM       40       * general dim 40
ENDACC    DIM       10       * accrual posting period end date
ENDCAS    DIM       10       * cash posting period end date
ITEMNUM   FORM      2        * item number
LEDGFND   FORM      1        * ledger for ledger calendar status (1=not exists)
LLPOS     FORM      2
MORE      FORM      1        * more data (1=yes)
OPTIONA   FORM      2        * screen A selection keyin var
OPTIONB   FORM      2        * screen B selection keyin var
OPTIONC   FORM      2        * screen C selection keyin var
PAGENO    FORM      3        * current page number
PERACC    DIM       15       * accrual posting period description
PERCAS    DIM       15       * cash posting period description
SAVITEM   FORM      2        * item number for screen B
SCRNO     FORM      2        * current screen number
SKEY      DIM       35       * key save for screen B
TOTAL     FORM      12.2     * total
TACC      DIM       12
TDESC     DIM       35
TLED      DIM       2
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
ACCYEAR   DIM       4
CASYEAR   DIM       4
.
PRGID     INIT      "IBAFMS74"
PRGNAM    INIT      "Inter Fund Transfer Journal"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML9999        * exit program
.
ML0200    MOVE      ONE,ACCEPT         * start in accept mode
          CALL      SELB0000           * perform screen B
          BRANCH    EXIT,ML0100        * exit screen
.
          CALL      POST0000           * save data
          GOTO      ML0100             * get next option
.
ML9999    CLOSE     NEZTMP0A           * delete temp file
          EXECUTE   KILLTMPA,TASKID
          CHAIN     PGM
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          PACK      CURDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",CURDATE
.
          DISPLAY   *P56:24,"Opening fmslmaaf";  * ledger
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
.
          DISPLAY   *P64:24,"fmsamaaf";  * account
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsdisaf";  * dissection
          OPEN      FMSDISA1,"fmsdisaf"
.
          DISPLAY   *P64:24,"fmsresaf";  * responsibility
          OPEN      FMSRESA1,"fmsresaf"
.
          DISPLAY   *P64:24,"fmslmcaf";  * ledger calendar
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmscsaaf";  * selected control accounts
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmsjmaaf";  * journal master
          OPEN      FMSJMAA1,"fmsjmaaf"
.
          DISPLAY   *P64:24,"fmsjpdaf";  * journal posting details
          OPEN      FMSJPDA1,"fmsjpdaf"
          OPEN      FMSJPDA2,"fmsjpdaf"
          OPEN      FMSJPDA3,"fmsjpdaf"
.
          DISPLAY   *P64:24,"fmstdsaf";  * trans desc
          OPEN      FMSTDSA1,"fmstdsaf"
.
          DISPLAY   *P64:24,"controlf";  * controlf
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO51
          CALL      RDFMCO52
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS
          IF        IBCNUBAS=1
            MOVE      "BAS",BASDESC
            DISPLAY   *P64:24,"ibabasaf";
            OPEN      IBABASA1,"ibabasaf"
          ELSE
            MOVE      SP3,BASDESC
          ENDIF
.
          PACK      FILENAMA,NAMEA,PORT,SP70     * set up and open temp file
          REP       " 0",FILENAMA
          PACK      MAKETMPA,ISBUILD,FILENAMA,TMP0ADAT
          PACK      KILLTMPA,ISERASE,FILENAMA
.
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
          MOVE      "2",CPPAPER
          CALL      SELPRINT
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  MOVE      "1",SCRNO                    * screen number
          MOVE      SP70,KEY15
          COMPARE   ZERO,TOTAL
          GOTO      SCRA1000 IF EQUAL
.
          MOVE      TOTAL,KEY15
.
SCRA1000  DISPLAY   *P1:3,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Default Description  : ":
                     *V2LON,DEFDESC:
                    *P1:5," 2",*HOFF,". Total                : ":
                     *V2LON,KEY15:
                    *P1:6," 3",*HOFF,". Accrual Posting Date : ":
                     *V2LON,DDATEACC,*HOFF,SP1,PERACC," Ending ",ENDACC,*V2LON:
                    *P1:7," 4",*HOFF,". Cash Posting Date    : ":
                     *V2LON,DDATECAS,*HOFF,SP1,PERCAS," Ending ",ENDCAS,*V2LON:
                    *P1:8," 5",*HOFF,". Transfer Ledger/Acct : ":
                     *V2LON,TLED,SLASH,TACC,*HOFF,SP2,TDESC
.
SCRA9999  RETURN
.******************************************************************************
.  SELA - Perform Screen A                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELA0000  UNPACK    SP70,DEFDESC       * init variables
          UNPACK    SP70,DDATEACC,PERACC,ENDACC
          UNPACK    SP70,DDATECAS,PERCAS,ENDCAS
          UNPACK    SP70,TLED,TACC,TDESC
          MOVE      ZERO,TOTAL
          MOVE      CURDATE,DATEACC
          MOVE      CURDATE,DATECAS
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      OVRCD,LEDGFND      * save whether found
.
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONA       * reset item desired
          CALL      SCRA0000           * display screen A
.
SELA0100  ADD       ONE,OPTIONA        * get next item
          BRANCH    ACCEPT,SELA0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONA     * save option
.
SELA0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONA,CVERT
          MOVE      OPTIONA,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELA9500,SELA9000:                   * quit, continue
                       SELA1100,SELA1200,SELA1300,SELA1400: * execute option
                       SELA1500
          BRANCH    ACCEPT,SELA0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELA0100           * get another option
.
SELA0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELA0100
.
.---- option 1 ----
.
SELA1100  CALL      KDSC0000
          BRANCH    EXIT,SELA9500,SELA9500
          PACK      DEFDESC,DESC1,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,DEFDESC;
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  KEYIN     *PCCOL:CVERT,"____________.__":
                    *PCCOL:CVERT,*V2LON,TOTAL:
                    *PCCOL:CVERT,*DV,TOTAL;
          COMPARE   ZERO,TOTAL
          GOTO      SELA1290 IF EQUAL  * cannot be zero
          GOTO      SELA0100
.
SELA1290  COMPARE   ONE,ACCEPT
          GOTO      SELA1200 IF NOT EQUAL   * in accept mode
          SUB       TWO,OPTIONA
          DISPLAY   *PCCOL:CVERT,*EL;
          GOTO      SELA0100
.
.---- option 3 ----
.
SELA1300  UNPACK    DATEACC,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,SELA1300
          PACK      DATEACC,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DDATEACC
          BRANCH    LEDGFND,SELA1390   * able to use ledger calendar ?
.
          MOVE      DATEACC,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,SELA1390      * error in geting date ?
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDACC
          MOVE      PERDESC,PERACC
          MOVE      CURYEAR,ACCYEAR
          DISPLAY   *P39:CVERT,PERDESC,*P62:CVERT,CPCDATE;
          GOTO      SELA0100
.
SELA1390  UNPACK    SP70,ENDACC,PERACC
          GOTO      SELA0100
.
.---- option 4 ----
.
SELA1400  UNPACK    DATECAS,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,SELA1300
          PACK      DATECAS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DDATECAS
          BRANCH    LEDGFND,SELA1490   * able to use ledger calendar ?
.
          MOVE      DATECAS,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,SELA1390      * error in geting date ?
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDCAS
          MOVE      PERDESC,PERCAS
          MOVE      CURYEAR,CASYEAR
          DISPLAY   *P39:CVERT,PERDESC,*P62:CVERT,CPCDATE;
          GOTO      SELA0100
.
SELA1490  UNPACK    SP70,ENDCAS,PERCAS
          GOTO      SELA0100
.
.---- option 5 ----
.
SELA1500  MOVE      "28",CCOL
          CALL      KLMAFM00
          BRANCH    EXIT,SELA1590,SELA9500
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,SLASH;
          PACK      TLED,FMLALEDG,SP70
.
          MOVE      "31",CCOL
          MOVE      "1",CACCTIND
          CALL      KAMAFM00
          BRANCH    EXIT,SELA1500,SELA9500
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          PACK      TACC,FMAMACCT,SP70
          PACK      TDESC,FMAMDESC,SP70
          GOTO      SELA0100
.
SELA1590  UNPACK    SP70,TLED,TACC,TDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,TLED,SLASH;
          GOTO      SELA0100
.
.
SELA9000  MATCH     CASYEAR,ACCYEAR
          IF        !@EQUAL
            DISPLAY   *P1:24,*EF,*B:
                      "Cash and Accrual Financial Year Conflict - ";
            CALL      HITENTER
            GOTO      SELA0100
          ENDIF
.
          MOVE      ZERO,EXIT          * continue
          EXECUTE   KILLTMPA,TASKID    * create file
          EXECUTE   MAKETMPA,TASKID
          OPEN      NEZTMP0A,FILENAMA
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.******************************************************************************
.  SCRB - Display screen B                       Called by SELB, redisps
.******************************************************************************
SCRB0000  MOVE      "2",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Default Description  : ":
                          *V2LON,DEFDESC,*HOFF,*EL:
                    *P1:5,"    Total                : ":
                          *V2LON,TOTAL,*HOFF,*EL:
                    *P1:6,"    Accrual Posting Date : ":
                         *V2LON,DDATEACC,*HOFF,SP1,PERACC," Ending ",ENDACC,*EL:
                    *P1:7,"    Cash Posting Date    : ":
                         *V2LON,DDATECAS,*HOFF,SP1,PERCAS," Ending ",ENDCAS,*EL:
                    *P1:8,"    Transfer Ledger/Acct : ":
                         *V2LON,TLED,SLASH,TACC,*HOFF,SP2,TDESC,*EF:
                    *P1:9,"    Balance              : ",*V2LON,BALANCE:
                    *P1:10,*V2LON,*ULON,"Itm",*P5:10,"DC":
                    *P8:10,"Ledger/Account";
          IF        IBCNUBAS=0
            DISPLAY   *P22:10,*V2LON,*ULON,SP1;
          ENDIF
          DISPLAY   *P23:10,*V2LON,*ULON,BASDESC:
                    *P28:10,"Diss",*P33:10,"Resp":
                    *P38:10,"Transaction Description    ":
                    *P66:10,"         Amount"
.
SCRB9999  RETURN
.******************************************************************************
.  SELB - Perform screen B                       Called By ML
.******************************************************************************
SELB0000  MOVE      ZERO,BALANCE
          UNPACK    UNDLN70,DDIM1
          UNPACK    SP70,FMDSCODE,FMRSCODE,DIM27
          MOVE      ZERO,AMOUNT
          CALL      SCRB0000           * display screen B
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
          BRANCH    ACCEPT,SELB5000    * in accept mode
.
SELB1000  CALL      DATB0000           * display data
.
SELB2000  CALL      MQSB0000           * get desired action
          BRANCH    EXIT,SELB9500,SELB9000       * quit screen ?
          MOVE      SP70,SKEY
          LOAD      SKEY,OPTIONB,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY3,SKEY,SP70
          CALL      RDNEZA1
          BRANCH    OVRCD,SELB5000     * in insert mode ?
.
.---- modify mode ----
.
          CALL      SELC0000           * modify data
          CALL      SCRB0000           * display screen B
          GOTO      SELB1000
.
.---- insert mode ----
.
SELB5000  ADD       ONE,ITEMNUM
          COMPARE   MAXITEMB,ITEMNUM
          CALL      ADDB0000 IF NOT LESS         * get first free position
          MOVE      "10",LINENO
          ADD       ITEMNUM,LINENO               * get lineno
          MOVE      ITEMNUM,SAVITEM
.
SELB6000  DISPLAY   *P1:LINENO,*V2LON,SAVITEM,DOT,*EL;
.
SELB7000  MOVE      SP70,DIM27
          MOVE      DDIM1,DIM1
          DISPLAY   *P1:24,*V2LON:
                    "D",*HOFF," = Debit, ",*V2LON:
                    "C",*HOFF," = Credit, ",*V2LON:
                    "X",*HOFF," = Exit",*EF;
          KEYIN     *P5:LINENO,*DV,DIM1,*EL:
                    *P5:LINENO,*RV,*V2LON,DIM1;
          DISPLAY   *P1:24,*EF;
          PACK      DIM1,DIM1,SP70
          REP       UPPLOW,DIM1
          DISPLAY   *P5:LINENO,*V2LON,DIM1;
.
          MATCH     "*",DIM1
          GOTO      SELB1000 IF EQUAL       * exit ?
          MATCH     "X",DIM1
          GOTO      SELB1000 IF EQUAL       * exit ?
          MATCH     EXITCHAR,DIM1
          GOTO      SELB1000 IF EQUAL       * exit ?
.
          MATCH     "D",DIM1
          GOTO      SELB7090 IF EQUAL       * debit ?
          MATCH     "C",DIM1
          GOTO      SELB7090 IF EQUAL       * credit ?
          BEEP
          GOTO      SELB7000
.
SELB7090  MOVE      DIM1,DDIM1
.
SELB7100  MOVE      LINENO,CVERT
          IF        IBCNUBAS=1
            MOVE      " 7",CCOL
          ELSE
            MOVE      " 8",CCOL
          ENDIF
          CALL      KLMAFM00
          BRANCH    EXIT,SELB7000,SELB1000  * exit ?
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,SLASH:
                    *P1:24,*HOFF,"Ledger Description : ",*V2LON,FMLADESC,*EL;
.
          CALL      CKTA0000                * check if trans acc valid
          BRANCH    EXIT,SELB7100
.
SELB7200  MOVE      "1",CACCTIND
          IF        IBCNUBAS=1
            MOVE      "10",CCOL
          ELSE
            MOVE      "11",CCOL
          ENDIF
          CALL      KAMAFM00
          BRANCH    EXIT,SELB7100,SELB1000  * exit ?
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT:
                    *P1:24,*HOFF,"Account Description : ",*V2LON,FMAMDESC,*EL;
.
SELB7250  IF        IBCNUBAS=1
            CALL      KBAS0000               * keyin BAS
            BRANCH    EXIT,SELB7300,SELB7000
          ENDIF
.
SELB7300  MOVE      "27",CCOL
          MATCH     SP70,FMDSCODE
          GOTO      SELB7350 IF EQUAL       * no default ?
          PACK      UNDLN70,FMDSCODE,UNDLN30,UNDLN30,UNDLN30
.
SELB7350  MOVE      UNDLN70,DEFAULT
          MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00
.         CALL      KDISFM00
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          BRANCH    EXIT,SELB7380,SELB1000  * exit ?
          GOTO      SELB7390
.
SELB7380  MATCH     UNDLN70,DEFAULT
          GOTO      SELB7200 IF EQUAL       * no default ?
.
          MOVE      DEFAULT,FMDSCODE        * use default
.
SELB7390  DISPLAY   *PCCOL:CVERT,*V2LON,FMDSCODE,*P1:24,*HOFF:
                    "Dissection Description : ",*V2LON,FMDSDESC,*EL;
.
SELB7400  MOVE      "33",CCOL
          MATCH     SP70,FMRSCODE
          GOTO      SELB7450 IF EQUAL       * no default ?
          PACK      UNDLN70,FMRSCODE,UNDLN30,UNDLN30,UNDLN30
.
SELB7450  MOVE      UNDLN70,DEFAULT
          MOVE      ZERO,CKEYTYP
          CALL      KFMRSA00
.         CALL      KRESFM00
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          BRANCH    EXIT,SELB7480,SELB1000  * exit ?
          GOTO      SELB7490
.
SELB7480  MATCH     DEFAULT,UNDLN70
          GOTO      SELB7200 IF EQUAL       * no default ?
.
          MOVE      DEFAULT,FMRSCODE        * use default
.
SELB7490  DISPLAY   *PCCOL:CVERT,*V2LON,FMRSCODE,*P1:24,*HOFF:
                    "Responsibility Description : ",*V2LON,FMRSDESC,*EL;
.
SELB7495  MOVE      "38",CCOL
          CALL      KDSC0000
          BRANCH    EXIT,SELB7000,SELB1000  * exit ?
          DISPLAY   *PCCOL:CVERT,*V2LON,DIM27;
.
SELB7500  MOVE      "66",CCOL
          MOVE      ZERO,AMOUNT
          CALL      KAMT0000
          BRANCH    EXIT,SELB7495,SELB1000  * exit ?
          MOVE      AMOUNT,DAMOUNT
.
          MOVE      "1",F3                  * get position to insert
.
SELB8000  PACK      KEY3,F3,SP70
          CALL      RANEZA1
          BRANCH    OVRCD,SELB8100          * position vacant
          ADD       ONE,F3                  * get next position
          GOTO      SELB8000
.
SELB8100  MOVE      F3,NEZAUNIQ
          MOVE      DDIM1,NEZADECR
          MOVE      FMLALEDG,NEZALEDG
          MOVE      FMAMACCT,NEZAACCT
          MOVE      SP70,NEZABASC
          IF        IBCNUBAS=1
            MOVE      BASCODE,NEZABASC
          ENDIF
          MOVE      FMDSCODE,NEZADISS
          MOVE      FMRSCODE,NEZARESP
          MOVE      AMOUNT,NEZAAMT
          PACK      NEZADESC,DESC1,SP70
.
          CALL      GTRN0000                * get transfer account
          BRANCH    EXIT,SELB6000
.
          PACK      KEY3,NEZAUNIQ,SP70
          CALL      WRNEZA1                 * write record
          MATCH     "D",NEZADECR
          GOTO      SELB8300 IF EQUAL
          SUB       NEZAAMT,BALANCE
          GOTO      SELB8400
.
SELB8300  ADD       NEZAAMT,BALANCE
.
SELB8400  DISPLAY   *P28:9,*V2LON,BALANCE,*EL:
                    *P1:LINENO,*V2LON,SAVITEM,*HOFF,DOT:
                    *P5:LINENO,NEZADECR;
          IF        IBCNUBAS=1
            DISPLAY   *P7:LINENO,NEZALEDG,SLASH,NEZAACCT:
                      *P23:LINENO,NEZABASC;
          ELSE
            DISPLAY   *P8:LINENO,NEZALEDG,SLASH,NEZAACCT;
          ENDIF
          DISPLAY   *P27:LINENO,NEZADISS:
                    *P33:LINENO,NEZARESP:
                    *P38:LINENO,DIM27:
                    *P66:LINENO,NEZAAMT
          MOVE      SAVITEM,ITEMNUM
          GOTO      SELB5000                * get more entries
.
SELB9000  PROC      CDEB0000                * calc balance
          COMPARE   ZERO,BALANCE
          GOTO      SELB9100 IF EQUAL       * balance is zero ?
          DISPLAY   *P1:24,*B,*EL,"Balance Must Be Zero - ";
          CALL      HITENTER
          GOTO      SELB2000
.
SELB9100  COMPARE   TOTAL,DEBTOT
          GOTO      SELB9200 IF EQUAL       * total correct
          SUB       TOTAL,DEBTOT
          DISPLAY   *P1:24,*B,*EL,"Total Is Out By ",DEBTOT," - ";
          CALL      HITENTER
          GOTO      SELB2000
.
SELB9200  PROC      CLOK0000
          BRANCH    EXIT,SELB2000
.
SELB9300  MOVE      ZERO,EXIT          * continue
          GOTO      SELB9999
.
SELB9500  MOVE      ONE,EXIT           * quit
.
SELB9999  RETURN
.**********************************************************************
.  CKTA - Check if ledger ok for transfer acc          Called By lots
.        Requires - TLED     (Transfer ledger)
.                   FMLALEDG (Keyed in ledger)
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CKTA0000  MATCH     SP70,TLED
          GOTO      CKTA9000 IF EQUAL
          PACK      KEY14,FMLALEDG,TACC,SP70
          CALL      RDFMAM1
          COMPARE   ONE,OVRCD
          GOTO      CKTA9000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"ERROR - Transfer Account Not In Ledger - ";
          CALL      HITENTER
          GOTO      CKTA9500
.
CKTA9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKTA9999
.
CKTA9500  MOVE      ONE,EXIT           * quit
.
CKTA9999  RETURN
.**********************************************************************
.  GTRN - Get transfer account                         Called By lots
.        Requires - TACC     (Default transfer account)
.                   NEZALEDG,NEZAACCT (ledger/acc entered)
.        Returns  - EXIT     (1=quit)
.                   NEZABANK (transfer acc)
.**********************************************************************
GTRN0000  PACK      NEZABANK,TACC,SP70
          MATCH     SP70,NEZABANK
          GOTO      GTRN9000 IF NOT EQUAL
.
          MOVE      SP70,FMCSBNK
          PACK      KEY14,NEZALEDG,NEZAACCT,SP70
          CALL      RDFMCS1                 * read default bank account
          MOVE      FMCSBNK,NEZABANK
          MATCH     SP70,NEZABANK
          GOTO      GTRN9000 IF NOT EQUAL   * got bank account ?
.
          MOVE      SP70,FMLABNK
          PACK      KEY2,NEZALEDG,SP70
          CALL      RDFMLA1                 * read default bank account
          MOVE      FMLABNK,NEZABANK
          MATCH     SP70,NEZABANK
          GOTO      GTRN9000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"ERROR - No Default Bank Account For Ledger ":
                                   NEZALEDG," - ";
          CALL      HITENTER
          GOTO      GTRN9500
.
GTRN9000  MOVE      ZERO,EXIT          * continue
          PACK      KEY14,NEZALEDG,NEZABANK,SP70
          MOVE      SP70,FMAMDESC
          MOVE      "9",FMAMTYPE
          CALL      RDFMAM1
          MATCH     "6",FMAMTYPE
          GOTO      GTRN9999 IF LESS
          DISPLAY   *P1:24,*B,*EF,"ERROR - Illegal Transfer Account ":
                    NEZALEDG,SLASH,NEZAACCT," - ";
          CALL      HITENTER
.
GTRN9500  MOVE      ONE,EXIT           * quit
.
GTRN9999  RETURN
.******************************************************************************
.  DATB - display screen B data                  Called By MQSB,SELB
.        Requires - PAGENO   (page to display)
.                   MAXITEMB (maximum no. of items per page + 1)
.         Returns - ITEMNUM  (number of data items displayed)
.                   ST1..ST17 (save keys for displayed data)
.                   MORE     (1=more data)
.         Uses    - CURPAGE  (page counter)
.                   LINENO   (line to display data)
.******************************************************************************
DATB0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17
          PACK      KEY3,SP70
          CALL      RSNEZA1                      * go to start of records
          MOVE      "10",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          MOVE      LINENO,F2
          ADD       ONE,F2
          DISPLAY   *P1:F2,*EF;                  * clear data area on screen
.
DATB1000  CALL      RKNEZA1                      * get next record
          BRANCH    OVRCD,DATB9000               * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      DATB2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATB2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATB1000 IF LESS             * not up to current page ?
          GOTO      DATB9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
.
          MOVE      NEZADESC,KEY27
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P5:LINENO,NEZADECR;
          IF        IBCNUBAS=1
            DISPLAY   *P7:LINENO,NEZALEDG,SLASH,NEZAACCT:
                      *P23:LINENO,NEZABASC;
          ELSE
            DISPLAY   *P8:LINENO,NEZALEDG,SLASH,NEZAACCT;
          ENDIF
          DISPLAY   *P27:LINENO,NEZADISS:
                    *P33:LINENO,NEZARESP:
                    *P38:LINENO,KEY27:
                    *P66:LINENO,NEZAAMT
          PACK      KEY3,NEZAUNIQ,SP70  * save key
          STORE     KEY3,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATB1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATB9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATB9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATB9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      DATB9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATB9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATB9999
.
.---- reached EOP before EOF ----
.
DATB9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMB,ITEMNUM
.
DATB9999  RETURN
.******************************************************************************
.  ADDB - get first blank position               Called By SELB
.******************************************************************************
ADDB0000  ADD       ONE,PAGENO         * try next page
          CALL      DATB0000           * display next page
.
          ADD       ONE,ITEMNUM        * get next item
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      ADDB0000 IF NOT LESS  * at end of page
.
ADDB9999  RETURN
.******************************************************************************
.  MQSB - Main question for screen B             Called By SELB
.******************************************************************************
MQSB0000  DISPLAY   *P1:23,*EL,*P1:24,"Select Item, (",*V2LON:
                    "S",*HOFF,")ubmit Auth, (",*V2LON:
                    "M",*HOFF,")odify Total";       * display prompt
          MOVE      "56",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSB1000 IF NOT EQUAL
          COMPARE   PAGENO,ONE
          GOTO      MQSB0500 IF EQUAL  * both next and previos page options ?
          DISPLAY   *P1:23,"(",*V2LON,"N",*HOFF,")ext Page":  * disp on line 23
                    ", (",*V2LON,"L",*HOFF,")ast Page";
          GOTO      MQSB2000
.
MQSB0500  DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
          GOTO      MQSB2000
.
MQSB1000  COMPARE   PAGENO,ONE
          GOTO      MQSB2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"L",*HOFF,")ast Page";
          ADD       "13",CCOL
.
MQSB2000  DISPLAY   ", (",*V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"P",*HOFF,")rint : ";
          ADD       NINE,CCOL
.
MQSB3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQSB4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQSB4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATB0000
          GOTO      MQSB0000
.
MQSB4000  COMPARE   PAGENO,ONE
          GOTO      MQSB5000 IF EQUAL
.
          MATCH     " L",DIM2
          GOTO      MQSB5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATB0000
          GOTO      MQSB0000
.
MQSB5000  MATCH     " M",DIM2          * modify total
          GOTO      MQSB6000 IF NOT EQUAL
          KEYIN     *P28:5,*DV,TOTAL,*EL:
                    *P28:5,*V2LON,*RV,TOTAL:
                    *P28:5,*DV,TOTAL;
          GOTO      MQSB0000
.
MQSB6000  MATCH     " S",DIM2          * submit
          GOTO      MQSB9700 IF EQUAL
          MATCH     " C",DIM2          * cancel
          GOTO      MQSB9500 IF EQUAL
          MATCH     " P",DIM2          * print
          GOTO      MQSB9600 IF EQUAL
.
          MOVE      ZERO,OPTIONB
          MOVE      DIM2,OPTIONB
          COMPARE   OPTIONB,ZERO
          GOTO      MQSB9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQSB3000           * get another option
.
MQSB9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSB9999
.
MQSB9500  MOVE      ONE,EXIT           * cancel
          GOTO      MQSB9999
.
MQSB9600  CALL      PRTJNL00
          GOTO      MQSB0000
.
MQSB9700  READ      CONTROLF,FIFTY;*246,FMCOJAUT
          COMPARE   ZERO,FMCOJAUT
          GOTO      MQSB9750 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"Journal Authorization in Progress":
                    " - Try Again Later - ";
          CALL      HITENTER
          GOTO      MQSB0000
.
MQSB9750  MOVE      TWO,EXIT           * submit
.
MQSB9999  RETURN
.
PRTJNL00  CALL      OPNPRINT
          MOVE      ZERO,CPAGENO
          MOVE      "99",CLNO
          CLOCK     TIME,CTIMEIS
          MOVE      SP3,KEY3
          CALL      RSNEZA1
.
PRTJNL10  CALL      RKNEZA1
          BRANCH    OVRCD,PRTJNL90
.
          COMPARE   "56",CLNO
          CALL      PRTJNH00 IF NOT LESS
.
          MOVE      "Dr",DIM2
          MATCH     ANSD,NEZADECR
          GOTO      PRTJNL20 IF EQUAL
          MOVE      "Cr",DIM2
.
PRTJNL20  PRINT     *2,DIM2,*7,NEZALEDG,"/",NEZAACCT;
          IF        IBCNUBAS=1
            PRINT     *23,NEZABASC;
          ENDIF
          PRINT     *27,NEZADISS,*33,NEZARESP,*38,NEZADESC,*66,NEZAAMT
          ADD       ONE,CLNO
          GOTO      PRTJNL10
.
PRTJNL90  IF        CLNO<>99
            CALL      UND80
          ENDIF
          CALL      CLSPRINT
.
PRTJNL99  RETURN
.
PRTJNH00  CALL      HEAD80
.
          PRINT     *2,"Default Description  : ",DESC1:
                    *N,*2,"Journal Total        : ",TOTAL:
                    *N,*2,"Accrual Posting Date : ",DDATEACC:
                    SP7,PERACC,SP2,ENDACC:
                    *N,*2,"Cash Posting Date    : ",DDATECAS:
                    SP7,PERCAS,SP2,ENDCAS:
                    *N,*2,"Transfer Ledger/Acct : ",TLED,"/",TACC,SP2,TDESC:
                    *N,*2,"Balance              : ",BALANCE:
                    *N
          ADD       "6",CLNO
          CALL      UND80
          ADD       "2",CLNO
          PRINT     *24,"Transaction Details",*N:
                    *2,"D/C",*7,"Ledger/Account":
                    *23,BASDESC:
                    *28,"Diss",*33,"Resp":
                    *38,"Transaction Description":
                    *75,"Amount"
          CALL      UND80 
.
THED9999  RETURN

PRTJNH99  RETURN       
.**********************************************************************
.  CLOK - Check for any locked periods                 Called By LOTS
.        Returns  - EXIT     (1=period locked)
.**********************************************************************
          DEFPROC   CLOK0000
.
CLOK0000  PACK      KEY3,SP70
          CALL      RSNEZA1
.
CLOK0100  CALL      RKNEZA1
          BRANCH    OVRCD,CLOK9000
          PACK      KEY2,NEZALEDG,SP70
          CALL      RDFMLA1
.
          MOVE      DATEACC,WORKDATE
          CALL      CFYR0000
          BRANCH    PERLOCK,CLOK9500
.
          MOVE      DATECAS,WORKDATE
          CALL      CFYR0000
          BRANCH    PERLOCK,CLOK9500
          GOTO      CLOK0100
.
CLOK9000  MOVE      ZERO,EXIT
          GOTO      CLOK9999
.
CLOK9500  MOVE      ONE,EXIT
          UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:24,*B,*EF,"ERROR - Date ",*V2LON,CPCDATE,*HOFF:
                    " Locked for Ledger ",*V2LON,NEZALEDG,*HOFF," - ";
          CALL      HITENTER
.
.
CLOK9999  
          ENDPROC
.**********************************************************************
.  CDEB - Calculate debit and total balance            Called By LOTS
.        Returns  - BALANCE  (balance)
.                   DEBTOT   (debit balance)
.**********************************************************************
          DEFPROC   CDEB0000
.
CDEB0000  PACK      KEY3,SP70
          CALL      RSNEZA1
          MOVE      ZERO,BALANCE
          MOVE      ZERO,DEBTOT
.
CDEB0100  CALL      RKNEZA1
          BRANCH    OVRCD,CDEB9999
          MATCH     "D",NEZADECR
          GOTO      CDEB0200 IF EQUAL
.
          SUB       NEZAAMT,BALANCE
          GOTO      CDEB0100
.
CDEB0200  ADD       NEZAAMT,BALANCE
          ADD       NEZAAMT,DEBTOT
          GOTO      CDEB0100
.
CDEB9999  
          ENDPROC
.******************************************************************************
.  SCRC - Display Screen C                       Called by SELC, redisps
.******************************************************************************
SCRC0000  MOVE      "3",SCRNO                    * screen number
.
          MOVE      NEZADECR,ANS
          REP       " 1D1d1C2c2",ANS
          MOVE      ANS,F1
          LOAD      DEBCRED,F1,DEBCRED1,DEBCRED2
          MOVE      SP70,FMLADESC
          PACK      KEY2,NEZALEDG,SP70
          CALL      RDFMLA1             * get ledger desc
          MOVE      SP70,FMAMDESC
          PACK      KEY14,NEZALEDG,NEZAACCT,SP70
          CALL      RDFMAM1             * get account desc
          MOVE      SP70,FMDSDESC
          PACK      KEY5,NEZADISS,SP70
          CALL      RDFMDS1             * get dissection desc
          MOVE      SP70,FMRSDESC
          PACK      KEY4,NEZARESP,SP70
          CALL      RDFMRS1             * get responsibility desc
          IF        IBCNUBAS=1
            MOVE      SP70,IBBADESC
            PACK      KEY3,NEZABASC,SP70
            CALL      RDIBBA1             * get BAS desc
          ENDIF
.
          DISPLAY   *P1:4,"    Default Description  : ":
                          *V2LON,DEFDESC,*HOFF,*EL:
                    *P1:5,"    Total                : ":
                          *V2LON,TOTAL,*HOFF,*EL:
                    *P1:6,"    Accrual Posting Date : ":
                         *V2LON,DDATEACC,*HOFF,SP1,PERACC," Ending ",ENDACC,*EL:
                    *P1:7,"    Cash Posting Date    : ":
                         *V2LON,DDATECAS,*HOFF,SP1,PERCAS," Ending ",ENDCAS,*EL:
                    *P1:8,"    Transfer Ledger/Acct : ":
                         *V2LON,TLED,SLASH,TACC,*HOFF,SP2,TDESC,*EF:
                   *P1:10,*V2LON," 1",*HOFF,". Debit/Credit         : ":
                         *V2LON,DEBCRED:
                   *P1:11," 2",*HOFF,". Ledger               : ":
                         *V2LON,NEZALEDG,SP10,SP2,*HOFF,FMLADESC,*V2LON:
                   *P1:12," 3",*HOFF,". Account              : ":
                         *V2LON,NEZAACCT,SP2,*HOFF,FMAMDESC,*V2LON:
                   *P1:13," 4",*HOFF,". Dissection           : ":
                         *V2LON,NEZADISS,SP9,*HOFF,FMDSDESC,*V2LON:
                   *P1:14," 5",*HOFF,". Responsibility       : ":
                         *V2LON,NEZARESP,SP10,*HOFF,FMRSDESC,*V2LON:
                   *P1:15," 6",*HOFF,". Description          : ":
                         *V2LON,NEZADESC:
                   *P1:16," 7",*HOFF,". Amount               : ":
                         *V2LON,NEZAAMT;
.
          MOVE      "Bank Account          ",KEY20
          MATCH     SP70,TLED
          GOTO      SCRC9000 IF EQUAL
.
          MOVE      "Transfer Account      ",KEY20
.
SCRC9000  MOVE      SP70,FMAMDESC
          PACK      KEY14,NEZALEDG,NEZABANK,SP70
          CALL      RDFMAM1             * get bank account desc
          DISPLAY   *P1:17,"    ",KEY20,*P26:17,": ":
                         *V2LON,NEZABANK,SP2,*HOFF,FMAMDESC;
.
          IF        IBCNUBAS=1
            DISPLAY   *P1:18,*V2LON," 8",*HOFF,". BAS Code             : ":
                      *V2LON,NEZABASC,*HOFF,*P42:18,IBBADESC;
          ENDIF
.
SCRC9999  RETURN
.******************************************************************************
.  SELC - Perform Screen C                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELC0000  UNPACK    SP70,ANS
          MOVE      ZERO,OPTIONC       * reset item desired
          CALL      SCRC0000           * display screen C
.
SELC0100  CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONC
          MOVE      "28",CCOL          * get screen address
          MOVE      "9",CVERT
          ADD       OPTIONC,CVERT
          MOVE      OPTIONC,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          IF        IBCNUBAS=1
            BRANCH    F2,SELC9500,SELC9000:                    * quit, continue
                         SELC1100,SELC1200,SELC1300,SELC1400:
                         SELC1500,SELC1600,SELC1700,SELC1800   * execute option
          ELSE
            BRANCH    F2,SELC9500,SELC9000:                    * quit, continue
                         SELC1100,SELC1200,SELC1300,SELC1400:
                         SELC1500,SELC1600,SELC1700            * execute option
          ENDIF
          BEEP                         * illegal option
          GOTO      SELC0100           * get another option
.
.---- option 1 ----
.
SELC1100  MOVE      NEZADECR,DDIM1
          KEYIN     *PCCOL:CVERT,*DV,DDIM1,*EL:
                    *PCCOL:CVERT,*RV,*V2LON,DDIM1;
          PACK      DDIM1,DDIM1,SP70
          REP       UPPLOW,DDIM1
          MATCH     EXITCHAR,DDIM1
          GOTO      SELC9500 IF EQUAL       * exit ?
          MOVE      DDIM1,DIM1
          REP       "1z2zd1c2D1C2",DIM1
          MOVE      ZERO,F1
          MOVE      DIM1,F1
          BRANCH    F1,SELC1190,SELC1190
          BEEP
          GOTO      SELC1100
.
SELC1190  LOAD      DEBCRED,F1,DEBCRED1,DEBCRED2
          DISPLAY   *PCCOL:CVERT,*V2LON,DEBCRED;
          MOVE      DDIM1,NEZADECR
          GOTO      SELC0100
.
.---- option 2 ----
.
SELC1200  CALL      KLMAFM00
          BRANCH    EXIT,SELC1200,SELC9500  * exit ?
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP10,SP2,FMLADESC;
          MOVE      FMLALEDG,NEZALEDG
.
          CALL      CKTA0000                * check if trans acc valid
          BRANCH    EXIT,SELC1200
          ADD       ONE,CVERT               * get account
.
.---- option 3 ----
.
SELC1300  MOVE      "1",CACCTIND
          CALL      KAMAFM00
          BRANCH    EXIT,SELC1300,SELC9500  * exit ?
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          MOVE      FMAMACCT,NEZAACCT
.
          CALL      GTRN0000                * get transfer account
          SUB       EXIT,CVERT              * get account
          BRANCH    EXIT,SELC1200
          DISPLAY   *PCCOL:17,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          GOTO      SELC0100
.
.---- option 4 ----
.
SELC1400  MATCH     SP70,FMDSCODE
          GOTO      SELC1450 IF EQUAL       * no default ?
          PACK      UNDLN70,FMDSCODE,UNDLN30,UNDLN30,UNDLN30
.
SELC1450  MOVE      UNDLN70,DEFAULT
          MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00
.         CALL      KDISFM00
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          BRANCH    EXIT,SELC1480,SELC9500  * exit ?
          GOTO      SELC1490
.
SELC1480  MATCH     DEFAULT,UNDLN70
          GOTO      SELC1400 IF EQUAL       * no default ?
.
          MOVE      DEFAULT,FMDSCODE        * use default
.
SELC1490  DISPLAY   *PCCOL:CVERT,*V2LON,FMDSCODE,*HOFF,SP9,FMDSDESC;
          GOTO      SELC0100
.
.---- option 5 ----
.
SELC1500  MATCH     SP70,FMRSCODE
          GOTO      SELC1550 IF EQUAL       * no default ?
          PACK      UNDLN70,FMRSCODE,UNDLN30,UNDLN30,UNDLN30
.
SELC1550  MOVE      UNDLN70,DEFAULT
          MOVE      ZERO,CKEYTYP
          CALL      KFMRSA00
.         CALL      KRESFM00
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          BRANCH    EXIT,SELC1580,SELC9500  * exit ?
          GOTO      SELC1590
.
SELC1580  MATCH     DEFAULT,UNDLN70
          GOTO      SELC1500 IF EQUAL       * no default ?
.
          MOVE      DEFAULT,FMRSCODE        * use default
.
SELC1590  DISPLAY   *PCCOL:CVERT,*V2LON,FMRSCODE,*HOFF,SP10,FMRSDESC;
          GOTO      SELC0100
.
.---- option 6 ----
.
SELC1600  CALL      KDSC0000
          BRANCH    EXIT,SELC1600,SELC9500  * exit ?
          DISPLAY   *PCCOL:CVERT,*V2LON,DESC1;
          MOVE      DESC1,NEZADESC
          GOTO      SELC0100
.
.---- option 7 ----
.
SELC1700  MOVE      NEZAAMT,AMOUNT
          CALL      KAMT0000
          MOVE      AMOUNT,NEZAAMT
          BRANCH    EXIT,SELC0100,SELC9500  * exit ?
          GOTO      SELC0100
.
.---- option 8 ----
.
SELC1800  CALL      KBAS0000               * keyin BAS
          BRANCH    EXIT,SELC0100,SELC9500
          MOVE      BASCODE,NEZABASC
          GOTO      SELC0100
.
SELC9000  MOVE      ZERO,EXIT          * continue
          PACK      KEY3,SKEY,SP70     * update record
          UNPACK    KEY3,NEZAUNIQ
          CALL      RANEZA1
          BRANCH    OVRCD,SELC9999     * record not found to update ?
          CALL      UPNEZA1
          PROC      CDEB0000           * calculate balance
          GOTO      SELC9999
.
SELC9500  MOVE      ONE,EXIT           * quit
.
SELC9999  RETURN
.**********************************************************************
.  POST - post data                                    Called By ML
.**********************************************************************
POST0000  CALL      RDFMCOJ4           * read last journal id
          MOVE      FMJONEX4,FMJMJID   * use next journal id number
          ADD       ONE,FMJONEX4       * increment next journal number
          CALL      WRFMCOJ4           * read next journal id
.
POST1000  DISPLAY   *P1:24,*EL,*P50:24,*V2LON,"*** Posting ***"; 
          PACK      KEY7,FMJOPRE4,FMJONEX4,SP70
          UNPACK    KEY7,FMJMJTY,FMJMJID
          CALL      RAFMJM1            * is it already there?
          BRANCH    OVRCD,POST2000
          GOTO      POST0000           * get next journal id
.
POST2000  MOVE      "9",FMJMSTAT       * processed
          MOVE      "1",FMJMCASH       * cash
          MOVE      "0",FMJMREV        * no reverse
          PACK      FMJMDESC,DEFDESC,SP70
          PACK      FMJMDENT,CURDATE
          PACK      FMJMRPOS,CURDATE
          MOVE      FMJOPRE4,FMJMJTY
          MOVE      DATECAS,FMJMCPOS
          MOVE      DATEACC,FMJMPPOS
          MOVE      CURDATE,FMJMPDAT
          MOVE      FMBCJBAT,FMJMPBAT
          MOVE      NEZALEDG,FMJMLEDG
          UNPACK    SP70,FMJMRDAT,FMJMRBAT
          MOVE      ZERO,FMJMSPER
          UNPACK    SP70,FMJMFPER,FMJMLPER,FMJMPROF,FMJMSPAR
          CALL      WRFMJM1
.
          DISPLAY   *P1:24,"New Journal Id is : ",*V2LON,FMJMJID," - ",*EL; 
          CALL      HITENTER
.
          CALL      KREF0000           * get refernce
          BRANCH    EXIT,POST9999      * continue
.
          MOVE      FMJOPRE4,JOURTYPE
          MOVE      "0",SUBTYPE
          CALL      SUB0000            * submit data
.
POST9999  RETURN
.*************************************************************************
.* KREF - Keyin the reference code for this batch      Called by POST    *
.*************************************************************************
KREF0000  DISPLAY   *P1:5,*EF:
                    *P5:6,"Document Reference",*P26:6,":";
.
KREF1000  KEYIN     *P28:6,*EF,*DV,UNDLN7,*P28:6,*V2LON,DOCREF:
                    *P28:6,*DV,DOCREF
.
KREF2000  MOVE      ONE,LLPOS
.
KREF2100  RESET     FMJMJID,LLPOS      * Justify Left Journal ID
          CMATCH    SP1,FMJMJID
          GOTO      KREF2200 IF NOT EQUAL
          ADD       ONE,LLPOS
          COMPARE   SEVEN,LLPOS
          GOTO      KREF2200 IF NOT LESS
          GOTO      KREF2100
.
KREF2200  PACK      BCREFER,DOCREF,DASH,FMJMJTY,FMJMJID,SP70
          RESET     FMJMJID
.
          DISPLAY   *P5:7,"Item Reference",*P26:7,":":
                    *P28:7,*V2LON,BCREFER
.
          CALL      CONTQST           * ok to continue?
          BRANCH    CEXIT,KREF9000,KREF1000
.
          MOVE      ONE,EXIT          * cancel
          GOTO      KREF9999
.
KREF9000  MOVE      ZERO,EXIT
.
KREF9999  RETURN 
.*************************************************************************
.* KAMT - keyin amount                      Called by ITRN5000           *
.*        Returns EXIT = 0 - valid    1 - null                           *
.*************************************************************************
KAMT0000  PACK      DIMAMNT,UNDLN10,UNDLN2,DOT,UNDLN2
          COMPARE   ZERO,AMOUNT
          GOTO      KAMT0500 IF EQUAL
          PACK      DIMAMNT,AMOUNT
.
KAMT0500  KEYIN     *PCCOL:CVERT,*EL,*DV,DIMAMNT:
                    *PCCOL:CVERT,*V2LON,*JR,DIMAMNT
.
          PACK      DIMAMNT,DIMAMNT,SP20
          MATCH     DIMAMNT,SP20
          GOTO      KAMT1000 IF EQUAL
.
          MATCH     "              \",DIMAMNT  * exitchar?
          GOTO      KAMT2000 IF EQUAL
.
          MOVE      ZERO,EXIT
          MOVE      DIMAMNT,AMOUNT          * move into file var
          DISPLAY   *PCCOL:CVERT,*V2LON,AMOUNT
          GOTO      KAMT9999
.
KAMT1000  MOVE      "1",EXIT                * nothing entered
          GOTO      KAMT9999 
.
KAMT2000  MOVE      "2",EXIT
.
KAMT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.* KDSC - Keyin Description                Called by ITRN6000            *
.*        Returns EXIT = 0 - valid    1 - exitchar                       *
.*                DIM27 abbrev description                               *
.*                DESC1 full description                                 *
.*************************************************************************
KDSC0000  MOVE      DEFDESC,DIM27
          MATCH     SP70,DIM27
          GOTO      KDSC1000 IF NOT EQUAL
.
          MOVE      UNDLN70,DIM27
.
KDSC1000  KEYIN     *PCCOL:CVERT,*EL,*DV,DIM27:
                    *PCCOL:CVERT,*V2LON,*RV,DIM27;
          PACK      DIM27,DIM27,SP70
          PACK      DESC1,DIM27,SP70
.
          MATCH     UNDLN70,DIM27        * nothing entered ?
          GOTO      KDSC9000 IF EQUAL
          MATCH     SP70,DIM27           * nothing entered ?
          GOTO      KDSC9000 IF EQUAL
.        
          DISPLAY   *PCCOL:CVERT,*V2LON,DIM27
          MATCH     EXITCHAR,DIM27     * exitchar?
          GOTO      KDSC9500 IF EQUAL
.        
          MATCH     QUEST,DIM27
          GOTO      KDSC6000 IF NOT EQUAL
          CALL      HFMTDA00
          CALL      RTDSFM00
          CLEAR     DIM4
          CLEAR     DIM40
          PACK      KEY4,FMTDCODE,SP70
          CALL      RDFMTD1
          BRANCH    OVRCD,KDSC0000
          MOVE      FMTDDESC,DIM27    
          PACK      DESC1,FMTDDESC,SP70
          GOTO      KDSC9999
         
KDSC6000  CLEAR     DIM4
          CLEAR     DIM40
          MOVE      ZERO,EXIT             * vaild entry
          UNPACK    DESC1,DIM4,DIM40
          PACK      DIM40,DIM40,SP70
          MATCH     DIM40,SP70
          GOTO      KDSC9999 IF NOT EQUAL
          PACK      KEY4,DIM4,SP70
          CALL      RDFMTD1
          BRANCH    OVRCD,KDSC9999
          MOVE      FMTDDESC,DIM27    
          PACK      DESC1,FMTDDESC,SP70
          GOTO      KDSC9999
.
KDSC9000  MOVE      ONE,EXIT              * nothing entered
          GOTO      KDSC9999
.
KDSC9500  MOVE      TWO,EXIT              * exitchar entered
.
KDSC9999  RETURN 
.*************************************************************************
.* KBAS - Keyin BAS Code                   Called by SELB7250 & SELC1800 *
.*        Returns - EXIT = 0 - valid entry 1 - null                      *
.*************************************************************************
KBAS0000  MOVE      "23",CCOL             * posy for screen 2
          COMPARE   "3",SCRNO             * are we on screen 3?
          GOTO      KBAS1000 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "18",CVERT
          MOVE      BASCODE,UNDLN70
          MOVE      BASCODE,IBBABASC
.
KBAS1000  MOVE      ZERO,CKEYTYP
          CALL      KIBBAA00
          BRANCH    EXIT,KBAS8000,KBAS9000
.
          MOVE      IBBABASC,BASCODE
.
KBAS1500  DISPLAY   *PCCOL:CVERT,*V2LON,BASCODE;
          MOVE      ZERO,EXIT
          COMPARE   "3",SCRNO 
          GOTO      KBAS1600 IF NOT EQUAL
          DISPLAY   *P42:CVERT,IBBADESC
          GOTO      KBAS9999
.
KBAS1600  DISPLAY   *P1:24,*EL,"BAS Description : ",*V2LON,IBBADESC
          GOTO      KBAS9999
.
KBAS2000  DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          COMPARE   "3",SCRNO 
          GOTO      KBAS1500 IF NOT EQUAL
          MOVE      BASCODE,IBBABASC
          DISPLAY   *PCCOL:CVERT,*V2LON,BASCODE,*HOFF,*P41:CVERT,IBBADESC
          MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS8000  DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          MOVE      SP3,BASCODE
          MOVE      SP30,IBBADESC
          COMPARE   "3",SCRNO 
          GOTO      KBAS9999 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*EL;
          MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS9000  MOVE      SP70,BASCODE
.
KBAS9999  PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.
.**********************************************************************
. NEZTMP0A IO routines                           Called by Lots
.**********************************************************************
RSNEZA1   RESET     KEY3
          READ      NEZTMP0A,KEY3;;
          RETURN
.
RANEZA1   RESET     KEY3
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZA1   RESET     KEY3
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY3;NEZAUNIQ,NEZADECR,NEZALEDG,NEZAACCT,NEZABASC:
                                  NEZADISS,NEZARESP,NEZADESC,NEZABANK,NEZAAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZA1   MOVE      ZERO,OVRCD
          READKS    NEZTMP0A;NEZAUNIQ,NEZADECR,NEZALEDG,NEZAACCT,NEZABASC:
                                  NEZADISS,NEZARESP,NEZADESC,NEZABANK,NEZAAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZA1   MOVE      ZERO,OVRCD
          READKP    NEZTMP0A;NEZAUNIQ,NEZADECR,NEZALEDG,NEZAACCT,NEZABASC:
                                  NEZADISS,NEZARESP,NEZADESC,NEZABANK,NEZAAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZA1   UPDATE    NEZTMP0A;NEZAUNIQ,NEZADECR,NEZALEDG,NEZAACCT,NEZABASC:
                             NEZADISS,NEZARESP,NEZADESC,NEZABANK,NEZAAMT
          RETURN
.
WRNEZA1   RESET     KEY3
          WRITE     NEZTMP0A,KEY3;NEZAUNIQ,NEZADECR,NEZALEDG,NEZAACCT,NEZABASC:
                                  NEZADISS,NEZARESP,NEZADESC,NEZABANK,NEZAAMT
          RETURN
.
DENEZA1   RESET     KEY3
          DELETE    NEZTMP0A,KEY3
          RETURN
.
.******************************************************************************
.  modified version of FMSSBAUT
.******************************************************************************
.
.************************************************************************
.* #################################################################### *
.* # ANY CHANGES MADE TO THIS ROUTINE SHOULD ALSO BE MADE TO IBAFMS74 # *
.* #################################################################### *
.************************************************************************
.* SUB - Process Submitting for Authorization                           *
.************************************************************************
SUB0000   MOVE      ZERO,REVFLAG      * not reversing yet
.
SUB1000   DISPLAY   *P1:24,*V2LON,*BLINKON,"*** Creating Batch ***",*EL; 
          CALL      BTCH0000          * create a general ledger batch
          BRANCH    EXIT,SUB9999
          DISPLAY   *P1:24,*V2LON,*BLINKON,"***   Processing   ***",*EL; 
          CALL      WPDT0000          * write entry to Posting details file
.                                     * and update the journal master
          DISPLAY   *P1:24,*EL;
.
SUB9999   RETURN 
.*************************************************************************
.* BTCH - Create General ledger batch       Called by SUB0000            *
.*************************************************************************
BTCH0000  
. --- Create the file ---
          CALL      RDFMCOCJ           * get next batch code
          MATCH     "00000",FMBCJBAT
          GOTO      BTCH0000 IF EQUAL  * must not be zero
.
          PACK      KEY5,FMBCJBAT,SP70
          CALL      RDFMBC1            * check if batch exists
          COMPARE   ONE,OVRCD
          GOTO      BTCH0000 IF NOT EQUAL
.
          CLEAR     FILENAM3
          APPEND    "bch",FILENAM3
          APPEND    FMBCJBAT,FILENAM3
          APPEND    SP10,FILENAM3
          RESET     FILENAM3
          REP       " 0",FILENAM3
          PREP      BATFILE,FILENAM3
. --- Do Header Sectors first ---
. 
. --- Set up null feilds
.
          UNPACK    SP70,BC0DIM2,BC0DIM6,BC1PAYT,BC1RESP
          MOVE      ZERO,BC0NXTSW
          MOVE      ZERO,BC0BTCHT
          MOVE      ZERO,BC0SUPBC
          MOVE      ZERO,BC0SPLTK
          MOVE      ZERO,BC0SPLTP
          MOVE      ZERO,BC0SPSEC
          MOVE      ZERO,BC0DISC 
.
. --- Set up header values ---
          MOVE      ONE,BC0ONE
          MOVE      TWO,BC0NXTSC
          MOVE      FIVE,BC1STAT
          MOVE      "HD",BC1HEAD
          MOVE      FMBCJBAT,BC1BATCH
          PROC      CDEB0000               * get debit total
          MOVE      DEBTOT,BC1KEYT
          MOVE      DEBTOT,BC1ACCT
...       MATCH     FMJOPRE3,JOURTYPE      * periodic?
...       GOTO      BTCH1000 IF NOT EQUAL  * no - good jump next bit
...       MOVE      DEBTOT,FMJDTAMT
...       PACK      FMJMPROF,FMJMPROF,SP10
...       MATCH     SP4,FMJMPROF           * any budget profile
...       GOTO      BTCH0500 IF EQUAL
...       CALL      CAMT0000               * calculate by profile
...       GOTO      BTCH0600
...H0500  CALL      NOPD0000               * calculate evenly
...H0600
...       MOVE      BCAMT,BC1KEYT
...       MOVE      BCAMT,BC1ACCT
BTCH1000  MOVE      ONE,BC1NOTR
          UNPACK    FMJMDENT,CCENT,CYEAR,CMON,CDAY
          PACK      BC1DATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BC1DATE
          MOVE      PASSCODE,BC1OPER
          MOVE      FMJMLEDG,BC1LEDG
          MOVE      "JA",BC1TRAN
          PACK      FMJMPPOS,FMJMPPOS,SP10
          PACK      FMJMRPOS,FMJMRPOS,SP10
          MOVE      FMJMPPOS,DIM8
          LOAD      DIM8,REVFLAG,FMJMRPOS,FMJMPPOS
          UNPACK    DIM8,CCENT,CYEAR,CMON,CDAY
          PACK      BC1BDATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BC1BDATE
          MOVE      ZERO,BC1REORG
          MOVE      ZERO,BC1DISS
          MOVE      ZERO,BC1REST
          MOVE      ZERO,BC1UTYPE
.
          CALL      WRBAT0                 * write sector 0 
          CALL      WRBAT1                 * write sector 1
.
          CALL      PDTL0000               * process data for details sectors
          CLOSE     BATFILE
.
BTCH9999  RETURN 
.*************************************************************************
.* PDTL - Process the detail sectors of the batch file   Called by BTCH  *
.*************************************************************************
PDTL0000  PACK      KEY3,SP70
          CALL      RSNEZA1
          MOVE      ZERO,EXIT
.
PDTL1000  CALL      RKNEZA1               * read next transaction detail record
          BRANCH    OVRCD,PDTL9000
.
. --- set up sector variables
.
          MOVE      FIVE,BCSTAT
          MOVE      ZERO,BCINVT
          MOVE      ZERO,BCDISC
          MOVE      ZERO,BCCOMXA
          UNPACK    SP70,BCPAYT,BCORD,BCACCTP,BCCHEQ,BCCOMX,BCCONT,BCDISCC
          MATCH     "D",NEZADECR              * debit or credit?
          GOTO      PDTL2000 IF EQUAL
          BRANCH    REVFLAG,PDTL1200          * reversing it yet?
          MOVE      "JC",BCTRAN               * credit
          GOTO      PDTL3000
.
PDTL1200  MOVE      "JA",BCTRAN               * credit
          GOTO      PDTL3000
.
PDTL2000  BRANCH    REVFLAG,PDTL2200          * reversing it yet?
          MOVE      "JA",BCTRAN               * debit
          GOTO      PDTL3000
.
PDTL2200  MOVE      "JC",BCTRAN               * debit
          GOTO      PDTL3000
.
PDTL3000  MOVE      NEZALEDG,BCLEDG
          MOVE      NEZADISS,BCDISS
          MOVE      "00000",BCRED
          MOVE      BC1BDATE,BCDATEE
          MOVE      "00000000",BCDATCX
          MOVE      BC1BATCH,BCBATCH
          MOVE      NEZARESP,BCRESP
          MOVE      NEZADESC,BCTRAND
          PACK      BCDATED,CDD,CMM,CCC,CYY
          REP       " 0",BCDATED
          MOVE      NEZABASC,BCBASC
          UNPACK    SP70,BCCEORD,BCCELNE,BCCATA,BCCHQAC,BCCDESC,BCCSPAR
          BRANCH    SUBTYPE,PDTL4000   * for periodic its a bit trickier 
          MOVE      NEZAAMT,BCAMT
          GOTO      PDTL8000
.
PDTL4000  MATCH     SP4,FMJMPROF       * using a budget profile?
          CALL      CAMT0000 IF NOT EQUAL * calculate from budget profile
          MATCH     SP4,FMJMPROF       * using a budget profile?
          CALL      NOPD0000 IF EQUAL  * seperate equally into periods
.
PDTL8000  
          COMPARE   ZERO,BCAMT          * dont post a batch with zero amount
          GOTO      PDTL1000 IF EQUAL
.
          MOVE      NEZAACCT,BCACCT
          MOVE      NEZAACCT,BCACCTP
          CALL      WRBATC
          ADD       ONE,BC0NXTSC
.
.---- write rec for control account ----
.
          MATCH     "D",NEZADECR              * first rec debit or credit?
          GOTO      PDTL8200 IF EQUAL
          BRANCH    REVFLAG,PDTL8100          * reversing it yet?
          MOVE      "JA",BCTRAN               * do debit
          GOTO      PDTL8600
.
PDTL8100  MOVE      "JC",BCTRAN               * do debit
          GOTO      PDTL8600
.
PDTL8200  
          BRANCH    REVFLAG,PDTL8400          * reversing it yet?
          MOVE      "JC",BCTRAN               * do credit
          GOTO      PDTL8600
.
PDTL8400  MOVE      "JA",BCTRAN               * do credit
          GOTO      PDTL8600
.
PDTL8600  MOVE      NEZABANK,BCACCT
          MOVE      NEZABANK,BCACCTP
          MOVE      SP70,BCBASC
          CALL      WRBATC
          ADD       ONE,BC0NXTSC
.
...       ADD       BCAMT,FMJDPAMT       * update amount processed
...       CALL      UPFMJD1
          GOTO      PDTL1000
.
PDTL9000  COMPARE   TWO,BC0NXTSC          * no details sectors?
          GOTO      PDTL9500 IF NOT EQUAL * update file if there is some
          CLOSE     BATFILE               * delete file if none
          CLEAR     CMDLINE
          APPEND    "rm ",CMDLINE
          APPEND    FILENAM3,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          DISPLAY   *P1:24,*EL:
                    "All transactions total zero. No batch created.";
          CALL      HITENTER  
          MOVE      ONE,EXIT
          GOTO      PDTL9999
.
PDTL9500  CALL      WRBATS0              * update next available sector variable
          CALL      RDBAT1
          MOVE      BC0NXTSC,BC1NOTR
          SUB       TWO,BC1NOTR
          CALL      WRBAT1
.
PDTL9999  RETURN 
.*************************************************************************
.* WPDT -- Write to posting details file          Called by SUB0000      *
.*************************************************************************
WPDT0000
.--- set up variables
.
          MOVE      BC1BATCH,FMJPBAT      
          MOVE      JOURTYPE,FMJPJTY
          MOVE      FMJMJID,FMJPJID
          MOVE      FMJMCPOS,FMJPCDAT
          PACK      FMJPDAT,CCC,CYY,CMM,CDD
          REP       " 0",FMJPDAT
          MOVE      SP10,FMJPUDAT
          MOVE      FMJMCASH,FMJPTYP
          MOVE      REVFLAG,FMJPREV
          MOVE      ZERO,FMJPAUTH
          BRANCH    REVFLAG,WPDT0300
          MOVE      FMJMPPOS,FMJPPDAT
          GOTO      WPDT0400
.
WPDT0300  MOVE      FMJMRPOS,FMJPPDAT
          MOVE      FMJMRPOS,FMJPCDAT
WPDT0400  BRANCH    SUBTYPE,WPDT0500
          MOVE      DEBTOT,FMJPDTOT
. 
          GOTO      WPDT0700
WPDT0500  MOVE      BCAMT,FMJPDTOT
WPDT0700  
          PACK      KEY5,FMJPBAT,SP70
          CALL      RAFMJP1                     * is it already there?
          BRANCH    OVRCD,WPDT1000
          CALL      UPFMJP1                     * yep - update
          GOTO      WPDT2000
.
WPDT1000  CALL      WRFMJP1                     * no - then write
.
WPDT2000  
          MATCH     FMJOPRE4,JOURTYPE
          GOTO      WPDT9999 IF NOT EQUAL
          MOVE      KEY12,KEY7
          CALL      RDFMJM1
          BRANCH    OVRCD,WPDT9999
.
          BRANCH    REVFLAG,WPDT3000           * reverse or normal batch
          MOVE      FMJPPDAT,FMJMPDAT          * reverse - so set up reverse var
          MOVE      FMJPBAT,FMJMPBAT
          GOTO      WPDT4000
.
WPDT3000  MOVE      FMJPPDAT,FMJMRDAT          * normal so set up normal ones
          MOVE      FMJPBAT,FMJMRBAT
.
WPDT4000  CALL      UPFMJM1                    * update file
.          
WPDT9999  RETURN 
.************************************************************************
.* CAMT - Calculate amount to be posted from budget profile             *
.*                   called by : SUBM                                   *
.************************************************************************
CAMT0000  PACK      FMJMPROF,FMJMPROF,SP10
          MATCH     FMJMPROF,SP4              * using a budget profile
          GOTO      CAMT9999 IF EQUAL         * no then get the outta here
.
          MOVE      FMLALEDG,FMBPLEDG
          MOVE      FMLACYRR,FMBPYEAR
          MOVE      FMJMPROF,FMBPCODE
          PACK      KEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          CALL      RDFMBP1                   * read budget profile
          BRANCH    OVRCD,CAMT9999
.
          LOAD      PERPERC,PERDNO,FMBPPC1,FMBPPC2,FMBPPC3,FMBPPC4,FMBPPC5:
                                  FMBPPC6,FMBPPC7,FMBPPC8,FMBPPC9,FMBPPC10:
                                  FMBPPC11,FMBPPC12,FMBPPC13
.
          MOVE      NEZAAMT,BCAMT
          DIV       "100",BCAMT
          MULT      PERPERC,BCAMT
          GOTO      CAMT9999    
.
CAMT9999  RETURN
.************************************************************************
.* NOPD - Calculate the number of periods on this journal               *
.*                   called by : AUTH0000                               *
.************************************************************************
NOPD0000  MOVE      ONE,IDAY
          MOVE      FMJMFPER,FORMPERD
NOPD1000  MOVE      FORMPERD,WORKPERD
          MATCH     FMJMLPER,WORKPERD           * are they equal yet
          GOTO      NOPD8000 IF EQUAL
          ADD       ONE,FORMPERD
          ADD       ONE,IDAY
          MOVE      FORMPERD,WORKPERD
          UNPACK    WORKPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,NOPERDS    * past the number of periods
          GOTO      NOPD1000 IF NOT LESS
          ADD       "87",FORMPERD     * get to first period of next year
                                      * think about it - 13 + 88 = 101
          SUB       FMLAPERS,FORMPERD * correction for 13 period year
          MOVE      FORMPERD,WORKPERD[
          UNPACK    WORKPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,ZERO    * past the number of periods
          GOTO      NOPD1000 IF NOT EQUAL
          ADD       ONE,FORMPERD
          GOTO      NOPD1000
NOPD8000 
          MOVE      NEZAAMT,FORM12P2
          DIV       IDAY,FORM12P2
          MOVE      FORM12P2,BCAMT
NOPD9999  RETURN
.
.******************************************************************************
.  Redisplays
.******************************************************************************
RLMAFM00  
RAMAFM00  
RDISFM00  
RRESFM00  
RLMCFM00  
RTDSFM00  
          BRANCH    SCRNO,RDISA0000,RDISB0000,RDISC0000
.
RDISA000  CALL      SCRA0000           * redisplay for screen A data keyins
          RETURN
.
RDISB000  CALL      SCRB0000           * redisplay for screen B data keyins
          CALL      DATB0000
          DISPLAY   *P5:LINENO,*V2LON,DDIM1;
          IF        IBCNUBAS=1
            DISPLAY   *P7:LINENO,*V2LON,NEZALEDG,SLASH,NEZAACCT:
                      *P23:LINENO,NEZABASC;
          ELSE
            DISPLAY   *P8:LINENO,*V2LON,NEZALEDG,SLASH,NEZAACCT;
          ENDIF
          DISPLAY   *P27:LINENO,*V2LON,FMDSCODE:
                    *P33:LINENO,FMRSCODE;
          RETURN
.
RDISC000  CALL      SCRC0000           * redisplay for screen C data keyins
          RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       IBAPRINT
          INC       FMSAMAIO/INC       * account
          INC       FMSBCFIO/INC
          INC       FMSBPFIO/INC       * budger profile
          INC       FMSCSAIO/INC       * selected control accounts
          INC       FMSCONIO/INC       * controlf
          INC       FMSDISIO/INC       * dissection
          INC       FMSRESIO/INC       * responsibility
          INC       FMSJMAIO/INC       * journal master
          INC       FMSJPDIO/INC       * journal post det
          INC       FMSJTPIO/INC       * journal post det
          INC       FMSLMAIO/INC       * ledger
          INC       FMSLMCIO/INC       * ledger calendar
          INC       FMSTDSIO/INC       * trans desc
          INC       IBABASIO/INC
          INC       IBABATIO/INC
          INC       IBAPRNIO/INC
.
          INC       FMSAMAKY           * account
          INC       FMSDISKY           * dissection
          INC       FMSRESKY           * responsibility
          INC       FMSLMAKY           * ledger
          INC       FMSLMCKY           * ledger calendar
          INC       FMSTDSKY           * trans desc
          INC       IBABASKY           * BAS Code
.
