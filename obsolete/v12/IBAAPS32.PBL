.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.01.B01 04.12.2000 Charles Handaya
.           Created a New Program
.-------------------------------------------------------
. Start Copying from FMSSTDDF
.
DEBCRED   DIM       2
FMLCF4    FORM      4        * form 4 for FMSLMCKY
KYINLEDG  DIM       2
.--------------------------------------
. Variables for Period Validation
.--------------------------------------
CURYEAR   DIM       4
PERDESC   DIM       15
PEREDAT   DIM       8
PERSDAT   DIM       8
PERLOCK   FORM      1
ERRMSG    DIM       40
MAXPER    FORM      2
PERCNT    FORM      2
WORKDATE  DIM       8
.
. End Copying from FMSSTDDF
.
AGSTNAME  DIM       35
BALCFFLG  FORM      1     * Range of Dissection is selected, 0=No 1=Yes
BANKNAME  DIM       35
BASFILE   DIM       8
CASHFLAG  FORM      1
CGSTNAME  DIM       35
CHQNO     DIM       8
COUNT     FORM      2
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
EFINDATE  DIM       10
ENDACCT   DIM       12
ENDBAS    DIM       3
ENDDISS   DIM       5
ENDDATE   DIM       8
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
FMSG      INIT      "fmsg"
FMSP      INIT      "fmsp"
FMST      INIT      "fmst"
FORM12P2  FORM      12.2
FORMAT    INIT      "(999,999,999,999.99 "
FORMATT   INIT      "(99,999,999,999,999.99 "
FPERIOD1  DIM       2
FPERIOD2  DIM       2
FPSFILE   DIM       8
FROMDATE  DIM       8
HEADING   DIM       20
LASTYEAR  FORM      1
ORDNO     DIM       8
OUTAMT    DIM       20
OUTAMTT   DIM       23
OUTTRAN   DIM       15
PAYMNAME  DIM       35
PERIDESC  DIM       15
SCRNO     FORM      1
SAVEBASC  DIM       3
SAVEBASD  DIM       30
STARTDTE  DIM       8
STRACCT   DIM       12
STRBAS    DIM       3
STRDISS   DIM       5
TABDELM   EQU       0x09                 * Tab Delimiter
TODATE    DIM       8
TOTAL     FORM      14.2
TOTMONTH  FORM      14.2
TOTTRAN   FORM      12
TRNFILE   DIM       8
XCHARD2   DIM       2
XCHARD5   DIM       5
YEAREND   DIM       4
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS32
.   Function      :   BAS Statement                           
.   Generated  On :   06/05/2002
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSMASFD/INC
          INC       FMSAMAFD/INC
          INC       FMSBASFD/INC
          INC       FMSCSAFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSTRNFD/INC
          INC       IBABASFD/INC
          INC       IBACONFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMBAS   DIM      34 * Scr 00 Fld     6
TOBAS     DIM      34 * Scr 00 Fld     7
FYEADESC  DIM      18 * Scr 00 Fld     9
FROMPER   DIM       2 * Scr 00 Fld    10
FPERDESC  DIM      35 * Scr 00 Fld    11
TOPER     DIM       2 * Scr 00 Fld    12
TPERDESC  DIM      35 * Scr 00 Fld    13
EXPORTYN  FORM      1 * Scr 00 Fld    14
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS32"
PRGNAM    INIT      "BAS Statement                           "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RCON0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening ibabasaf";
          OPEN      IBABASA1,"ibabasaf"
          DISPLAY   *P56:24,"Opening ibabasaf";
          OPEN      IBABASA2,"ibabasaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,FMLALEDG
          MOVE      SP70,FMLADESC
          MOVE      SP70,FROMBAS 
          MOVE      SP70,TOBAS   
          MOVE      SP70,FMLCYEAR
          MOVE      SP70,FYEADESC
          MOVE      SP70,FROMPER 
          MOVE      SP70,FPERDESC
          MOVE      SP70,TOPER   
          MOVE      SP70,TPERDESC
          MOVE      ZERO,EXPORTYN
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106,PS00L107,PS00L108,PS00L109:
                            PS00L110,PS00L111
          GOTO     PS00L999
.
PS00L101
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FROMBAS,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      TOBAS,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      FMLCYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      FYEADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      FPERDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      TOPER,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      TPERDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L006,SF00L105:
                            SF00L006,SF00L106,SF00L006,SF00L006:
                            SF00L006,SF00L107
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L104,SF00L020,SF00L105:
                            SF00L020,SF00L106,SF00L020,SF00L020:
                            SF00L020,SF00L107
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ELED0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOBAS   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EBAS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMBAS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOBAS,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FYEADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EFYE0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMLCYEAR,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FYEADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FPERDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPER   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPER0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FPERDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPER,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Read Control File
.----------------------------------------------------------------------
RCON0000  READ      CONTROLF,ZERO;*107,IBCNUBAS,IBCNBSFY
.
RCON9999  RETURN
.
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.----------------------------------------------------------------------
. Print Report
.----------------------------------------------------------------------
REPT0000  CALL      OPEN0000
          BRANCH    EXIT,REPT9999
.
          MOVE      ZERO,TOTMONTH
          MOVE      ZERO,TOTAL
.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
.
          MOVE      ZERO,CPAGENO                 * reset page no.
          DISPLAY   *P1:24,*EL,"Printing   : "
          CALL      MAKEXP00                     * Create Export File
.
          PACK      SAVEBASC,SP70                * Save BAS Code
          MOVE      ZERO,TOTTRAN
.
          MATCH     SP70,STRBAS
          IF        @EQUAL
            PACK      KEY3,SP70
            CALL      RSIBBA1
            CALL      RKIBBA1
            BRANCH    OVRCD,REPT9999
            PACK      STRBAS,IBBABASC
          ENDIF
.
          PACK      KEY3,STRBAS,SP70
          CALL      RSIBBA1
          CALL      RPIBBA1
REPT0050  CALL      RKIBBA1
          BRANCH    OVRCD,REPT9500
.
          MATCH     IBBABASC,ENDBAS
          GOTO      REPT9500 IF LESS
.
          COMPARE   ONE,IBBAACTV
          GOTO      REPT0050 IF EQUAL
.
          MOVE      IBBABASC,SAVEBASC
          MOVE      IBBADESC,SAVEBASD
.
          PACK      KEY23,KYINLEDG,IBBABASC,SP70
          CALL      RSFMBS2
REPT0100  CALL      RKFMBS2
          BRANCH    OVRCD,REPT0200
.
          MATCH     KYINLEDG,FMBSLEDG
          GOTO      REPT0200 IF NOT EQUAL
.
          MATCH     IBBABASC,FMBSBASC
          GOTO      REPT0200 IF NOT EQUAL
.
          MATCH     FROMDATE,FMBSPDAT
          GOTO      REPT0100 IF LESS
.
          MATCH     FMBSPDAT,TODATE
          GOTO      REPT0100 IF LESS
.
          PACK      KEY10,FMBSBAT,FMBSUNIQ,SP70
          CALL      RDFMTR1
          BRANCH    OVRCD,REPT0100
.
          PACK      KEY14,FMTRLEDG,FMTRACCT
          CALL      RDFMAM1
          BRANCH    OVRCD,REPT0100
.
          MOVE      "5",DIM1
          MATCH     FMAMTYPE,DIM1
          GOTO      REPT0100 IF LESS
.
.---- display the account being processed ---
.
          DISPLAY   *P14:24,*V2LON,FMBSBASC,SP4,FMTRLEDG,SLASH,FMTRACCT
.
          CALL      FAMT0000
          ADD       FMTRAMT,TOTMONTH
          ADD       FMTRAMT,TOTAL
          ADD       ONE,TOTTRAN
.
          GOTO      REPT0100
.
REPT0200
..          MATCH     SP70,FMBSBASC
..          IF        !@EQUAL
          CALL      PRPT0000
..          ENDIF
          GOTO      REPT0050
.
REPT9500  IF        CPAGENO=0
            CALL      HEAD0000
          ENDIF
.
          MATCH     SP70,SAVEBASC
          GOTO      REPT9900 IF EQUAL
.
          COMPARE   "56",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      FORMATT,OUTAMTT
          FEDIT     TOTAL,OUTAMTT
          CALL      UND132
          PRINT     *1,"Grand Total ",*54,OUTAMTT
          CALL      TRAN0000
.
REPT9900  CALL      UND132
          PRINT     *1,"** End of Report **"
          MOVE      ZERO,CPAGENO
          DISPLAY   *P1:24,*EL
          GOTO      REPT9999
.
REPT9999  RETURN
.----------------------------------------------------------------------
. Print Page heading
.----------------------------------------------------------------------
HEAD0000  CALL      HEAD132
          STRIP     FMLADESC
          STRIP     FYEADESC
          STRIP     FROMBAS
          STRIP     TOBAS
          STRIP     FROMPER
          STRIP     TOPER
          STRIP     FPERDESC
          STRIP     TPERDESC
          PRINT     *+,*1,"Ledger         : ",KYINLEDG,SP1,FMLADESC,*N:
                    *1,"Financial Year : ",FMLCYEAR,SP5,FYEADESC,*N:
                    *1,"BAS    Range   : ",FROMBAS," to ",TOBAS,*N:
                    *1,"Period Range   : ",FROMPER,SP1,FPERDESC:
                    " to ",TOPER,SP1,TPERDESC
          ADD       FOUR,CLNO
          CALL      UND132
.
          PRINT     *41," Number of ",*N:
                    *1,"BAS Code",*41,"Transaction",*64,"Total Amount"
.
          CALL      UND132
          ADD       TWO,CLNO
.
HEAD9999  RETURN
.----------------------------------------------------------------------
. Fix BCAMT as Debit/Credit
.----------------------------------------------------------------------
FAMT0000  MATCH     "JC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CS",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CR",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RF",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RI",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MOVE      "Dr",DEBCRED
          GOTO      FAMT9999
.
FAMT1000  MULT      SEQ,FMTRAMT
          MOVE      "Cr",DEBCRED
.
FAMT9999  RETURN
.----------------------------------------------------------------------
. Print the report ledger totals
.----------------------------------------------------------------------
.----- format the numeric totals ----
.
PRPT0000  MATCH     SP70,SAVEBASC
          GOTO      PRPT9999 IF EQUAL
.
          MOVE      FORMATT,OUTAMTT
          FEDIT     TOTMONTH,OUTAMTT     * format total
.
          MOVE      "999,999,999,999",OUTTRAN
          FEDIT     TOTTRAN,OUTTRAN      * format total
.
          COMPARE   "56",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          PRINT     *1,SAVEBASC,*6,SAVEBASD,*37,OUTTRAN,*54,OUTAMTT
          ADD       ONE,CLNO
.
          CALL      WRTEXP00
          MOVE      ZERO,TOTMONTH
          MOVE      ZERO,TOTTRAN
.
PRPT9999  RETURN
.----------------------------------------------------------------------
. Open fps, trn, dsf, and BAS Files
.----------------------------------------------------------------------
OPEN0000  PACK      TRNFILE,SP70
          PACK      BASFILE,SP70
.
.----  set up the filenames ----
.
          PACK      TRNFILE,FMST,FMLCYEAR
          PACK      BASFILE,FMSG,FMLCYEAR
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,TRNFILE    * open TRN file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN7000      * if no file then no records
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBASA2,BASFILE    * open BAS file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN7000      * if no file then no records
.
          GOTO      OPEN9999
.
OPEN6000  MOVE      ONE,EXIT
          BEEP
          CLEAR     DISPMSG
          APPEND    "No financial period summaries exist ",DISPMSG
          APPEND    "for this year - ",DISPMSG
          CALL      MESSAGE1
          GOTO      OPEN9999
.
OPEN7000  MOVE      ONE,EXIT
          BEEP
          MOVE      "No transactions exist for this year - ",DISPMSG
          CALL      MESSAGE1
          GOTO      OPEN9999
.
OPEN9999  RETURN
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE   ONE,EXPORTYN
          GOTO      MAKEXP99 IF NOT EQUAL
          MOVE      "EXPORT",KEY6
          PACK      EXPORTFN,KEY6,PORT
          REP       " 0",EXPORTFN
          PREP      EXPORTFL,EXPORTFN
          WRITE     EXPORTFL,SEQ;"BAS Code",TABDELM:
                                 "BAS Description",TABDELM:
                                 "Number of Transaction",TABDELM:
                                 "Total Amount"
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE   ONE,EXPORTYN
          GOTO      WRTEXP99 IF NOT EQUAL
          WRITE     EXPORTFL,SEQ;SAVEBASC,TABDELM:
                                 SAVEBASD,TABDELM:
                                 TOTTRAN,TABDELM:
                                 TOTMONTH
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE   ONE,EXPORTYN
          GOTO      TRAN9999 IF NOT EQUAL
          MOVE      YES,DEFYESNO
          CLOSE     EXPORTFL
          DISPLAY   *P1:24,*EL,"Execute Transfer Now (":
                               *V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
          MOVE      "24",CVERT
          MOVE      "30",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          CLEAR     KEY80
          APPEND    "keatran ",KEY80
          APPEND    EXPORTFN,KEY80
          APPEND    ".txt",KEY80
          RESET     KEY80
          EXECUTE   KEY80,TASKID
.
          CALL      PUTSCR00
.
          DISPLAY   *P1:24,*EL,"Transfer Completed Ok (":
                               *V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
          MOVE      "24",CVERT
          MOVE      "31",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO,
          GOTO      TRAN0000 IF EQUAL   *  Not ok
.
          PREP      EXPORTFL,EXPORTFN
          CLOSE     EXPORTFL
.
TRAN9999  RETURN
.
.----------------------------------------------------------------------
. Enter Ledger Code
.----------------------------------------------------------------------
ELED0000  UNPACK    SP70,FMLALEDG,FMLADESC,KYINLEDG
          MOVE      ZERO,CKEYTYP
          CALL      KFMLAA00
          BRANCH    EXIT,ELED9900,ELED9900
.
          PACK      KYINLEDG,FMLALEDG
          GOTO      ELED9999
.
ELED9900  MOVE      TWO,EXIT
          GOTO      ELED9999
.
ELED9999  RETURN
.
.----------------------------------------------------------------------
. Enter Range of BAS Code
.----------------------------------------------------------------------
EBAS0000  MOVE      "    6",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          PACK      IBBABASC,SP70
          PACK      IBBADESC,SP70
          CALL      KIBBAA00
          BRANCH    EXIT,EBAS0100,EBAS9500
          MOVE      IBBABASC,STRBAS
          PACK      FROMBAS,IBBABASC,SP1,IBBADESC
          GOTO      EBAS0150
EBAS0100  MOVE      "Start                                         ",FROMBAS
          PACK      STRBAS,SP70
.
EBAS0150  MOVE      FROMBAS,VAR
          CALL      DISPITEM
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          PACK      IBBABASC,SP70
          PACK      IBBADESC,SP70
          CALL      KIBBAA00
          BRANCH    EXIT,EBAS0200,EBAS9500
          MOVE      IBBABASC,ENDBAS
          PACK      TOBAS,IBBABASC,SP1,IBBADESC
          MATCH     STRBAS,ENDBAS
          GOTO      EBAS9000 IF EQUAL
          GOTO      EBAS9000 IF NOT LESS
          BEEP
          MOVE      "To BAS Code Must Be > From BAS Code - ",DISPMSG
          CALL      MESSAGE1
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          GOTO      EBAS0000
.
EBAS0200  MOVE      "Finish                                        ",TOBAS
          PACK      ENDBAS,Z70
.
EBAS9000  MOVE      "    6",FLDID
          CALL      GETPOSIT
          MOVE      ZERO,EXIT
          GOTO      EBAS9999
.
EBAS9500  MOVE      TWO,EXIT
          GOTO      EBAS9999
.
EBAS9999  RETURN
.
.----------------------------------------------------------------------
. Enter Financial Year
.----------------------------------------------------------------------
EFYE0000  IF        ACCEPT=0
            MOVE      FMLCYEAR,DIM4
          ENDIF
.
          PACK      FMLCYEAR,SP70
          PACK      FYEADESC,SP70
.
          MOVE      ZERO,CKEYTYP
          PACK      FMLCLEDG,FMLALEDG,SP70
          CALL      KFMLCA00
          BRANCH    EXIT,EFYE0900,EFYE9999
.
EFYE0100  IF        IBCNUBAS=1
            MATCH     IBCNBSFY,FMLCYEAR
            GOTO      EFYE9000 IF LESS
          ENDIF
          CALL      DFYE0000
          BRANCH    EXIT,EFYE0000
.
          CLEAR     FYEADESC
          APPEND    "Ending  ",FYEADESC
          APPEND    EFINDATE,FYEADESC
          RESET     FYEADESC
.
          IF        ACCEPT=0
            MATCH     FMLCYEAR,DIM4
            GOTO      EFYE9999 IF EQUAL
.
            MOVE      "    8",FLDID
            CALL      GETPOSIT
            PACK      VAR,FMLCYEAR,SP70
            CALL      DISPITEM
.
            MOVE      "    9",FLDID
            CALL      GETPOSIT
            PACK      VAR,FYEADESC,SP70
            CALL      DISPITEM
.
            CALL      EPER0000
            BRANCH    EXIT,EFYE9800,EFYE9900
.
            MOVE      "   12",FLDID
            CALL      GETPOSIT
            PACK      VAR,TOPER,SP70
            CALL      DISPITEM
.
            MOVE      "    8",FLDID
            CALL      GETPOSIT
          ENDIF
.
          GOTO      EFYE9999
.
EFYE0900  PACK      FMLCYEAR,CCC,CYY,SP70
          REP       " 0",FMLCYEAR
          GOTO      EFYE0100
.
EFYE9000  CLEAR     DISPMSG
          APPEND    "BAS Financial Year must not < ",DISPMSG
          APPEND    IBCNBSFY,DISPMSG
          APPEND    " - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EFYE0000
.
EFYE9800  MOVE      ONE,EXIT
          GOTO      EFYE9999
.
EFYE9900  MOVE      TWO,EXIT
          GOTO      EFYE9999
.
EFYE9999  RETURN
.----------------------------------------------------------------------
. Display Financial Year Description
. Return  :  EFINDATE - end of Financial Date (99/99/9999)
.            EXIT : 0 - found, 1 - Not found
.----------------------------------------------------------------------
DFYE0000  MOVE      ZERO,EXIT
          PACK      KEY6,FMLALEDG,FMLCYEAR
          CALL      RDFMLC1
          BRANCH    OVRCD,DFYE9000
.
          BRANCH    FMLAPERS,DFYE3000    * branch if thirteen periods
.
. 12 periods
.
          UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          PACK      EFINDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      YEAREND,CCENT,CYEAR
          GOTO      DFYE9999
.
. 13 periods
.
DFYE3000  UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          PACK      EFINDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      YEAREND,CCENT,CYEAR
          GOTO      DFYE9999
.
DFYE9000  MOVE      ONE,EXIT
.
DFYE9999  RETURN
.
.----------------------------------------------------------------------
. Enter Range of Financial Period
.----------------------------------------------------------------------
EPER0000  UNPACK    SP70,FPERDESC,TPERDESC
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          CALL      KPER0000
          BRANCH    EXIT,EPER0100,EPER9999
.
          MOVE      DIM2,FROMPER
          GOTO      EPER0150
.
EPER0100  MOVE      "01",FROMPER
          MOVE      ONE,FORM2
          CALL      VPER0000
          BRANCH    EXIT,EPER0000
.
EPER0150  MOVE      FROMPER,VAR
          CALL      DISPITEM
.
          MOVE      STARTDTE,FROMDATE
          UNPACK    STARTDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      FROMPER,FPERIOD1
          CLEAR     FPERDESC
          APPEND    PERIDESC,FPERDESC
          APPEND    " Starting ",FPERDESC
          APPEND    CPCDATE,FPERDESC
          RESET     FPERDESC
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          MOVE      FPERDESC,VAR
          CALL      DISPITEM
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
.
          CALL      KPER0000
          BRANCH    EXIT,EPER0200,EPER9999
.
          MOVE      DIM2,TOPER
          MOVE      TOPER,VAR
          CALL      DISPITEM
.
          MATCH     FROMPER,TOPER
          GOTO      EPER9900 IF EQUAL
          GOTO      EPER9900 IF NOT LESS
          BEEP
          MOVE      "To Period Must Be > From Period - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EPER0000
.
EPER0200  MOVE      "12",F2
          ADD       FMLAPERS,F2
          MOVE      F2,TOPER
          MOVE      F2,FORM2
          CALL      VPER0000
          BRANCH    EXIT,EPER0000
.
EPER9900  MOVE      ENDDATE,TODATE
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      TOPER,FPERIOD2
          CLEAR     TPERDESC
          APPEND    PERIDESC,TPERDESC
          APPEND    " Ending   ",TPERDESC
          APPEND    CPCDATE,TPERDESC
          RESET     TPERDESC
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          MOVE      TPERDESC,VAR
          CALL      DISPITEM
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          GOTO      EPER9999
.
EPER9999  RETURN
.----------------------------------------------------------------------
. Validate Financial Period
.----------------------------------------------------------------------
VPER0000  MOVE      ZERO,EXIT
          MOVE      "12",F2
          ADD       FMLAPERS,F2
          COMPARE   FORM2,ZERO
          GOTO      VPER9900 IF NOT LESS
          COMPARE   FORM2,F2
          GOTO      VPER9900 IF LESS
.
          LOAD      ENDDATE,FORM2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO,FMLC05TO:
                               FMLC06TO,FMLC07TO,FMLC08TO,FMLC09TO,FMLC10TO:
                               FMLC11TO,FMLC12TO,FMLC13TO
          LOAD      STARTDTE,FORM2,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR,FMLC05FR:
                               FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR,FMLC10FR:
                               FMLC11FR,FMLC12FR,FMLC13FR
          LOAD      PERIDESC,FORM2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE,FMLC05DE:
                               FMLC06DE,FMLC07DE,FMLC08DE,FMLC09DE,FMLC10DE:
                               FMLC11DE,FMLC12DE,FMLC13DE
          GOTO      VPER9999
.
VPER9900  MOVE      ONE,EXIT
          GOTO      VPER9999
.
VPER9999  RETURN
.----------------------------------------------------------------------
. Keyin Financial Period
. Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.----------------------------------------------------------------------
KPER0000  MOVE      SP70,DIM2
          KEYIN     *PCCOL:CVERT,*DV,DIM2:
                    *PCCOL:CVERT,*V2LON,*JR,*RV,DIM2
.
          ENDSET    DIM2
          APPEND    SP70,DIM2
          RESET     DIM2
.
          MATCH     SP70,DIM2
          GOTO      KPER9900 IF EQUAL
.
          PACK      XCHARD2,SP1,EXITCHAR,SP70
          MATCH     XCHARD2,DIM2
          GOTO      KPER9950 IF EQUAL
.
          TYPE      DIM2
          GOTO      KPER0000 IF NOT EQUAL
.
          MOVE      DIM2,FORM2
          CALL      VPER0000
          BRANCH    EXIT,KPER0000
.
          MOVE      FORM2,DIM2
          REP       " 0",DIM2
.
          MOVE      ZERO,EXIT
          GOTO      KPER9999
.
KPER9900  MOVE      ONE,EXIT
          GOTO      KPER9999
.
KPER9950  MOVE      TWO,EXIT
          GOTO      KPER9999
.
KPER9999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSMASIO/INC
          INC       FMSAMAIO/INC
          INC       FMSBASIO/INC
          INC       FMSCSAIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSTRNIO/INC
          INC       IBABASIO/INC
          INC       IBABASKY    
.
          INC       STDGENCD
.
