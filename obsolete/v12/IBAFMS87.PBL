. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS87                                             *
. * Desc      :   Extract Balances                                     *
. **********************************************************************
. * Date      :   19.04.1991                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.01  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS87
.             open files and initialise variables
.             WHILE user wants to modify parameters DO
.                  get desired option
.                  allow user to modify option
.             END WHILE
.             IF user wants to post data
.                  THEN write data to controlf
.             END IF
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSAMAFD/INC       * accounting master file
          INC       FMSBUDFD/INC       * budget file
          INC       FMSCSAFD/INC       * control accounts file
          INC       FMSCONFD/INC       * control file
          INC       FMSFPSFD/INC       * period summary file
          INC       FMSHCAFD/INC       * extraction file
          INC       FMSLMAFD/INC       * ledger master file
          INC       FMSLMCFD/INC       * ledger calendar file
          INC       FMSSMAFD/INC       * stats summary file
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
.
ISBUILD   INIT      "isbuild "         * define temp file variables
ISERASE   INIT      "iserase "
TMP01DAT  INIT      " 127 U1-2,3-14"
.
FILENAME  DIM       8        * filenames
FMSPYYYY  DIM       8
FMSPLLLL  DIM       8
FMSSYYYY  DIM       8
FMSSLLLL  DIM       8
.
FMSB      INIT      "fmsb"
FMSP      INIT      "fmsp"
FMSS      INIT      "fmss"
.
END       INIT      "~~~~~~~~~~~~~~~~~~~~"
TXT       INIT      ".txt"
.
MAXPERS   FORM      2        * max no. of periods
OPTIONA   FORM      2        * screen A selection keyin var
PERNO     FORM      2        * period
PATH      DIM       50       * file with path
STRING    DIM       40       * parameter for routine RMTB
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
PRGID     INIT      "IBAFMS87"
PRGNAM    INIT      "Extract Balances"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
          BRANCH    EXIT,ML9999
.
ML0100    CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML9999        * exit program
.
          CALL      POST0000           * extract data
          BRANCH    EXIT,ML9999        * exit program
          GOTO      ML0100             * return to top of loop
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening fmsamaaf";  * accounting master
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmscsaaf";  * control accounts
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmslmaaf";  * ledger master
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";  * ledger calendar
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"controlf";  * control file
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
.
          PACK      KEY2,FMCOELED,SP70           * get calendar data
          CALL      RDFMLA1
          BRANCH    OVRCD,INIT9500     * ledger not found ?
.
          PACK      KEY6,FMLALEDG,FMLACYRR,SP70
          CALL      RDFMLC1            * get calendar data for financial year
          BRANCH    OVRCD,INIT9500     * no data found ?
.
          MOVE      "12",MAXPERS
          ADD       FMLAPERS,MAXPERS
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  DISPLAY   *P1:24,*B,*EF:
                    "FATAL ERROR - Extraction Ledger Not Set UP - ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.  DPER - Display period data                    Called by SELA, SCRA
.******************************************************************************
DPER0000  MOVE      FMCOPERD,F2
          UNPACK    SP70,KEY15,KEY8
          LOAD      KEY15,F2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                             FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                             FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
          LOAD      KEY8,F2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                             FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                             FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO,FMLC13TO
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P28:5,*V2LON,FMCOPERD,SP4,*HOFF,KEY15,"  Ending  ",CPCDATE;
.
DPER9999  RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  DISPLAY   *P1:3,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Financial Year       : ":
                          *V2LON,FMCOYEAR:
                    *P1:5," 2",*HOFF,". Period to Transfer   : ";
          CALL      DPER00000          * display period data
.
SCRA9999  RETURN
.******************************************************************************
.  SELA - Perform Screen A                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELA0000  CALL      GPER0000           * get next period to transfur
          CALL      SCRA0000           * display screen A
.
SELA0100  CALL      MQSA0000           * get option
          MOVE      CCITEM,OPTIONA
.
SELA0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONA,CVERT
          MOVE      OPTIONA,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELA9500,SELA9000:                  * quit, continue
                       SELA1100,SELA1200                   * execute option
          BEEP                         * illegal option
          GOTO      SELA0100           * get another option
.
.---- option 1 ----
.
SELA1100  CALL      KLMCFM00           * get year
          BRANCH    EXIT,SELA1100,SELA9500
          MOVE      FMLCYEAR,FMCOYEAR
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCOYEAR;
          CALL      DPER0000           * display period
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  KEYIN     *PCCOL:CVERT,*DV,FMCOPERD,*EL:
                    *PCCOL:CVERT,*V2LON,F2;
          COMPARE   ZERO,F2
          GOTO      SELA1290 IF EQUAL  * nothing entered ?
          GOTO      SELA1280 IF LESS   * negative entered ?
          COMPARE   F2,MAXPERS
          GOTO      SELA1280 IF LESS   * in range ?
.
          MOVE      F2,FMCOPERD        * save period
          REP       " 0",FMCOPERD
          GOTO      SELA1290
.
SELA1280  DISPLAY   *P1:24,*B,*EF,"Period Must Be In The Range 01 to ":
                    MAXPERS," - ";
          CALL      HITENTER
          GOTO      SELA1200
.
SELA1290  CALL      DPER0000           * display period
          GOTO      SELA0100
.
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.**********************************************************************
.  MQSA - select, post, exit, run extraction            Called By SELA
.        Returns  - CCITEM   (0=run extraction, -1=exit, other=select)
.**********************************************************************
MQSA0000  MOVE      SP70,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "R",*HOFF,")un Extraction, e(",*V2LON:
                    "X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQSA0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  R",CCITEMD      * run extraction ?
          GOTO      MQSA9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  X",CCITEMD      * exit ?
          GOTO      MQSA9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQSA9999 IF NOT LESS
.
          BEEP
          GOTO      MQSA0000
.
MQSA9999  RETURN
.**********************************************************************
.  GPER - Get next period                              Called By SELA
.**********************************************************************
GPER0000  CALL      RDFMCOHC           * get last period to transfur
          MOVE      ZERO,F2
          MOVE      FMCOPERD,F2
          ADD       ONE,F2
          COMPARE   F2,ZERO
          GOTO      GPER0400 IF NOT LESS    * valid period ?
          COMPARE   F2,MAXPERS
          GOTO      GPER0500 IF NOT LESS    * valid period ?
.
          MOVE      ZERO,F4                 * get next year
          MOVE      FMCOYEAR,F4
          ADD       ONE,F4
          MOVE      F4,FMCOYEAR
          PACK      KEY6,FMLALEDG,FMCOYEAR,SP70
          CALL      RDFMLC1                 * get next financial year calendar
.
GPER0400  MOVE      ONE,F2                  * get first period
.
GPER0500  MOVE      F2,FMCOPERD
          REP       " 0",FMCOPERD
.
GPER9999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.        Returns  - EXIT     (1=exit program)
.**********************************************************************
POST0000  CALL      OPEN0000           * open data files
          BRANCH    EXIT,POST9000,POST9500
.
          PACK      KEY14,FMCOELED,SP70
          CALL      RSFMAM1            * go to start of account master records
.
POST1000  CALL      RKFMAM1                 * get next account master record
          BRANCH    OVRCD,POST9000          * no more records ?
.
          MATCH     FMCOELED,FMAMLEDG
          GOTO      POST9000 IF NOT EQUAL   * valid ledger ?
          MATCH     "6",FMAMTYPE
          GOTO      POST2000 IF LESS        * valid posting record ?
          MATCH     "8",FMAMTYPE
          GOTO      POST2000 IF EQUAL       * valid stat posting record ?
          GOTO      POST1000
.
POST2000  DISPLAY   *P1:24,"Extracting : ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EL;
          CALL      WRIT0000                * write data to file
.
          GOTO      POST1000
.
POST9000  CALL      WRFMCOHC           * write parameters to control file
          MOVE      ZERO,EXIT          * continue
          GOTO      POST9999
.
POST9500  MOVE      ONE,EXIT           * exit program
.
POST9999  RETURN
.**********************************************************************
.  WRIT - Write data to extraction file                Called By POST
.        Requires - FMAMLEDG, FMAMACCT, FMAMTYPE
.**********************************************************************
WRIT0000  MOVE      ONE,F1
          MOVE      FMAMTYPE,F1
          LOAD      F1,F1,ZERO,ZERO,ZERO,ZERO,ZERO,ZERO,ZERO,ONE,ONE
          MOVE      F1,FMHCTYPE
          MOVE      FMCOPERD,PERNO
.
.---- clear rest of record ----
.
          MOVE      ZERO,FMHCCCBR
          MOVE      ZERO,FMHCCCPE
          MOVE      ZERO,FMHCCABR
          MOVE      ZERO,FMHCCAPE
          MOVE      ZERO,FMHCLCBR
          MOVE      ZERO,FMHCLCPE
          MOVE      ZERO,FMHCLABR
          MOVE      ZERO,FMHCLAPE
          MOVE      ZERO,FMHCCBUD
          MOVE      ZERO,FMHCLBUD
.
.---- get data from current years budget ----
.
WRIT1000  PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMBU1
          BRANCH    OVRCD,WRIT2000          * data found ?
.
          LOAD      FMHCCBUD,PERNO,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                   FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                   FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12,FMBUCA13
.
.---- get data from last years budget ----
.
WRIT2000  PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMBU3
          BRANCH    OVRCD,WRIT3000          * data found ?
.
          LOAD      FMHCLBUD,PERNO,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                   FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                   FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12,FMBUCA13
.
.---- get data from current years period summary ----
.
WRIT3000  MATCH     "1",FMHCTYPE
          GOTO      WRIT4000 IF EQUAL       * statistical type ?
.
          MATCH     SP70,FMSPYYYY
          GOTO      WRIT4000 IF EQUAL       * file open ?
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMFP1
          BRANCH    OVRCD,WRIT4000          * data found ?
.
          MOVE      FMFPCBF,FMHCCCBR
          LOAD      FMHCCCPE,PERNO,FMFPC01,FMFPC02,FMFPC03,FMFPC04:
                                   FMFPC05,FMFPC06,FMFPC07,FMFPC08:
                                   FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
          MOVE      FMFPABF,FMHCCABR
          LOAD      FMHCCAPE,PERNO,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                                   FMFPA05,FMFPA06,FMFPA07,FMFPA08:
                                   FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
.
.---- get data from last years period summary ----
.
WRIT4000  MATCH     "1",FMHCTYPE
          GOTO      WRIT5000 IF EQUAL       * statistical type ?
.
          MATCH     SP70,FMSPLLLL
          GOTO      WRIT5000 IF EQUAL       * file open ?
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMFP2
          BRANCH    OVRCD,WRIT5000          * data found ?
.
          MOVE      FMFPCBF,FMHCLCBR
          LOAD      FMHCLCPE,PERNO,FMFPC01,FMFPC02,FMFPC03,FMFPC04:
                                   FMFPC05,FMFPC06,FMFPC07,FMFPC08:
                                   FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
          MOVE      FMFPABF,FMHCLABR
          LOAD      FMHCLAPE,PERNO,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                                   FMFPA05,FMFPA06,FMFPA07,FMFPA08:
                                   FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
.
.---- get data from current years stat period summary ----
.
WRIT5000  MATCH     "1",FMHCTYPE
          GOTO      WRIT6000 IF NOT EQUAL   * statistical type ?
.
          MATCH     SP70,FMSSYYYY
          GOTO      WRIT6000 IF EQUAL       * file open ?
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMSS1
          BRANCH    OVRCD,WRIT6000          * data found ?
.
          LOAD      FMHCCCPE,PERNO,FMSSC1,FMSSC2,FMSSC3,FMSSC4:
                                   FMSSC5,FMSSC6,FMSSC7,FMSSC8:
                                   FMSSC9,FMSSC10,FMSSC11,FMSSC12,FMSSC13
          LOAD      FMHCCAPE,PERNO,FMSSA1,FMSSA2,FMSSA3,FMSSA4:
                                   FMSSA5,FMSSA6,FMSSA7,FMSSA8:
                                   FMSSA9,FMSSA10,FMSSA11,FMSSA12,FMSSA13
.
.---- get data from last years stat period summary ----
.
WRIT6000  MATCH     "1",FMHCTYPE
          GOTO      WRIT7000 IF NOT EQUAL   * statistical type ?
.
          MATCH     SP70,FMSSYYYY
          GOTO      WRIT7000 IF EQUAL       * file open ?
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMSS2
          BRANCH    OVRCD,WRIT7000          * data found ?
.
          LOAD      FMHCLCPE,PERNO,FMSSC1,FMSSC2,FMSSC3,FMSSC4:
                                   FMSSC5,FMSSC6,FMSSC7,FMSSC8:
                                   FMSSC9,FMSSC10,FMSSC11,FMSSC12,FMSSC13
          LOAD      FMHCLAPE,PERNO,FMSSA1,FMSSA2,FMSSA3,FMSSA4:
                                   FMSSA5,FMSSA6,FMSSA7,FMSSA8:
                                   FMSSA9,FMSSA10,FMSSA11,FMSSA12,FMSSA13
.
WRIT7000  PACK      KEY14,FMAMLEDG,FMAMACCT,SP70      * write record
          UNPACK    KEY14,FMHCLEDG,FMHCACCT
.
..........START> SRF 127895
          COMPARE   ZERO,FMHCCCBR
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCCCPE
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCCABR
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCCAPE
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCLCBR
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCLCPE
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCLABR
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCLAPE
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCCBUD
          GOTO      WRIT8000 IF NOT EQUAL
          COMPARE   ZERO,FMHCLBUD
          GOTO      WRIT9999 IF EQUAL
.
WRIT8000
..........END>>> SRF 127895
          CALL      WRFMHC1
.
WRIT9999  RETURN
.**********************************************************************
.  OPEN - open desired files                           Called By POST
.        Requires - FMCOYEAR (financial year)
.                   FMCOPERD (financial period)
.                   FMCOHOSP (hospital code)
.                   FMCOSDIR (extraction file store dir)
.        Returns  - EXIT     (1=quit, 2=exit program)
.**********************************************************************
OPEN0000  PACK      FILENAME,FMSB,FMCOCBUD,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FILENAME,*EF;
          MOVE      ZERO,OVRCD              * open current years budget file
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA1,FILENAME
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OPEN1000 IF NOT EQUAL
.
          DISPLAY   " - ERROR - Budget File Not Found - ";
          CALL      HITENTER
          GOTO      OPEN9700
.
OPEN1000  PACK      FILENAME,FMSB,FMCOLBUD,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FILENAME,*EF;
          MOVE      ZERO,OVRCD              * open last years budget file
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA3,FILENAME
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OPEN2000 IF NOT EQUAL
.
          DISPLAY   " - ERROR - Budget File Not Found - ";
          CALL      HITENTER
          GOTO      OPEN9700
.
OPEN2000  PACK      FMSPYYYY,FMSP,FMCOYEAR,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FMSPYYYY,*EF;
          MOVE      ZERO,OVRCD              * open current years summary file
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FMSPYYYY
          TRAPCLR   IO
          LOAD      FMSPYYYY,OVRCD,SP70     * clear filename if open failed
.
          PACK      FMSSYYYY,FMSP,FMCOYEAR,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FMSSYYYY,*EF;
          MOVE      ZERO,OVRCD              * open current years stat sumry file
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA1,FMSSYYYY
          TRAPCLR   IO
          LOAD      FMSSYYYY,OVRCD,SP70     * clear filename if open failed
.
          MOVE      FMCOYEAR,F4
          SUB       ONE,F4                  * get last year
.
          PACK      FMSPLLLL,FMSP,F4,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FMSPLLLL,*EF;
          MOVE      ZERO,OVRCD              * open last years summary file
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA2,FMSPLLLL
          TRAPCLR   IO
          LOAD      FMSPLLLL,OVRCD,SP70     * clear filename if open failed
.
          PACK      FMSSLLLL,FMSP,F4,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FMSSLLLL,*EF;
          MOVE      ZERO,OVRCD              * open last years stat sumry file
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA2,FMSSLLLL
          TRAPCLR   IO
          LOAD      FMSSLLLL,OVRCD,SP70     * clear filename if open failed
.
.---- process extraction file ----
.
          PACK      FILENAME,FMCOHOSP,FMCOYEAR,FMCOPERD,SP70
          REP       " 0",FILENAME      * build filename
          PACK      STRING,FMCOSDIR,SP70
          CALL      RMTB0000           * remove trailing blanks
          CLEAR     PATH
          PACK      PATH,STRING,FILENAME,TXT
.
          MOVE      ZERO,OVRCD         * check if extraction file exists
          TRAP      OVERCOND IF IO
          OPEN      FMSHCAA1,PATH
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN8000
.
          DISPLAY   *P1:23,*B,*EF:
                    "WARNING - Extraction File Exists For Above Parameters";
          CALL      CONTQST
          DISPLAY   *P1:23,*EF;
          SUB       ONE,CEXIT
          BRANCH    CEXIT,OPEN9500,OPEN9700
.
.---- create extraction file ----
.
OPEN8000  DISPLAY   *P1:24,*+,*V2LON,"****  Creating ",PATH,"  ****",*EF;
          PREP      FMSHCAA1,PATH
.
.
OPEN9000  MOVE      ZERO,EXIT          * continue
          GOTO      OPEN9999
.
OPEN9500  MOVE      ONE,EXIT           * quit
          GOTO      OPEN9999
.
OPEN9700  MOVE      TWO,EXIT           * quit program
.
OPEN9999  RETURN
.**********************************************************************
.  RMTB - Remove trailing blanks                       Called By lots
.        Requires - STRING   (input string)
.        Returns  - STRING   (output string without trailing blanks)
.**********************************************************************
RMTB0000  PACK      STRING,STRING,SP70      * Ensure string filled to end
          ENDSET    STRING                  * Move form ptr to end of string
.
RMTB1000  CMATCH    SP1,STRING              * Quit loop if char pointed to by
          GOTO      RMTB9000 IF NOT EQUAL   *    form pointer is blank
.
          BUMP      STRING,-1               * Decrement form pointer
          GOTO      RMTB1000 IF NOT EOS     * Quit loop if form ptr = 1
.
          SETLPTR   STRING,ZERO             * Set form and length pointers to 0
          GOTO      RMTB9999                *    since we are at start of string
.                                           *    and exit routine
.
RMTB9000  LENSET    STRING                  * Set length pointer to form pointer
          RESET     STRING                  * Set form pointer to one
.
RMTB9999  RETURN
.******************************************************************************
.  Redisplays
.******************************************************************************
RLMCFM00  CALL      SCRA0000           * display screen A
          RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
.
          INC       FMSAMAIO/INC       * accounting master file
          INC       FMSBUDIO/INC       * budget file
          INC       FMSCSAIO/INC       * control accounts file
          INC       FMSCONIO/INC       * control file
          INC       FMSFPSIO/INC       * period summary file
          INC       FMSHCAIO/INC       * extraction file
          INC       FMSLMAIO/INC       * ledger master file
          INC       FMSLMCIO/INC       * ledger calendar file
          INC       FMSSMAIO/INC       * stats summary file
.
          INC       FMSLMCKY           * ledger calendar file
