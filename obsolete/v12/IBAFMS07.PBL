. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS07                                             *
. * Desc      :   Reporting Account Maintenance                        *
. **********************************************************************
. * Date      :   25.09.1990                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filenames (FILENAM1 & FILENAM2).  *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.05  30.12.1999 Charles Handaya                               *
. *           Fixed write to Audit File                                *
. * VF.00.04  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. * VF.00.03  09.11.1999 Charles Handaya                               *
. *           Fix Y2K of Audit Files Date (CCYYMMDD)                   *
. * VF.00.02  30.06.1999 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. *           srf 632475                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS07
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values for screens A,B
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get used to select screen (A,B)
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record's screen A
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * FMS audit update variables
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSBPFFD/INC       * control account file
          INC       FMSCAFFD/INC       * control account file
          INC       FMSCCAFD/INC       * cost centre
          INC       FMSCCCFD/INC       * consolidated cost centre
          INC       FMSCODFD/INC       * codes file
          INC       FMSLEVFD/INC       * level code
          INC       FMSLMBFD/INC       * ledger report desc.
          INC       FMSONCFD/INC       * oncost
          INC       FMSPRCFD/INC       * print code
          INC       FMSRSFFD/INC       * report seq file
          INC       FMSSBAFD/INC       * subjective
          INC       FMSUWPFD/INC       * user defined wp. file
          INC       FMSSSCFD/INC       * stat subj calc file
          INC       FMSXCSFD/INC       * xref file
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.==============================================================================
.VARIABLE DEFINITIONS REQUIRED
.-----------------------------
FMSTMP01  FILE      ASCII,FIXED=70     * WP Holding File Def'n 1
FILENAM1  DIM       8
NAME1     INIT      "fmstm1"
.
FMSTMP02  FILE      ASCII,FIXED=70     * WP Holding File Def'n 2
FILENAM2  DIM       8
NAME2     INIT      "fmstm2"
.
HEADSEQ   INIT      "00000"
TOTSEQ    INIT      "99999"
.
CP        INIT      "cp "              * word processor variables
TXT       INIT      ".txt "
WP        INIT      "wp "
WPDAT     INIT      ".txt 999 7 -1 70 14"
WPSTAT    FORM      2
.
STATUS    INIT      "                      "  * status
STATUS0   INIT      "Open"
STATUS1   INIT      "Open for Journals Only"
STATUS2   INIT      "Closed"
.
NOADD     INIT      "No Add to Account Allocated        "
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
SP12      INIT      "            "
.
MAXITEMB  FORM      "15"               * maximum no. of items on screen B + 1
MAXITEMC  FORM      "15"               * maximum no. of items on screen C + 1
.
ACCEPT    FORM      1                  * accept mode (1=on)
AMOUNTNO  FORM      1                  * amount number (param for DAMT, GAMT)
COSTCODE  DIM       12
CURLEVEL  DIM       3                  * current report level
CURPAGE   FORM      3                  * current page number
CURPRTP   DIM       5                  * new print position
DACCOUNT  DIM       35                 * temp account description
FROMLEDG  DIM       2                  * from ledger (range option on screen B)
FROMACCT  DIM       12                 * from account (range option on screen B)
ITEMNUM   FORM      2                  * item number
TEMPDESC  DIM       35                 * temporary description
TOACCT    DIM       12                 * to account (range option on screen B)
MORE      FORM      1                  * more data (1=yes)
NUMPERDS  FORM      1                  * save var for num of periods
OPTNO     FORM      2                  * current option number
OPTIONA   FORM      1                  * screen selection keyin var
OPTIONB   FORM      2                  * screen selection keyin var
OPTIONC   FORM      2                  * screen selection keyin var
OPTIOND   FORM      2                  * screen selection keyin var
OPTIONE   FORM      2                  * screen selection keyin var
PAGENO    FORM      3                  * current page number
SAVACCT   DIM       12                 * key save for account
SAVDACCT  DIM       35                 * save for account description
SAVDLEDG  DIM       35                 * save for ledger description
SAVITEM   FORM      2                  * item number for screen B
SAVLEDG   DIM       2                  * key save for ledger
SAVPERS   FORM      1                  * save for no of periods (1=13,0=12)
SAVRPNO   DIM       2                  * key save for report number
SAVTYPE   DIM       1                  * key save for account type
SAVPRTC   DIM       3                  * key save for print code
SAVKEY19  DIM       19                 * key save for audits
SCRNO     FORM      1                  * screen number
SELECT    FORM      2                  * selection
SKEY      DIM       35                 * key save for screen B
SUBJCODE  DIM       12
WAUDTYPE  FORM      1                  * write audit parameter
RECTYPE   FORM      1
ZMODE     FORM      1                  * input mode
MODESC    INIT      "      "                  * description type
MODESC1   INIT      "Insert"
MODESC2   INIT      "Delete"
RANGFLAG  FORM      1
.
PRGID     INIT      "IBAFMS07"
PRGNAM    INIT      "Reporting Account Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      SELOPTN            * insert/modify/delete/exit ?
          COMPARE   ZERO,COPTION
          GOTO      ML9999 IF EQUAL    * exit program
.
ML0150    CALL      LEDG0000           * get ledger
          BRANCH    EXIT,ML0100,ML0100 * exit option
.
ML0200    CALL      PROC0000           * get account
          BRANCH    EXIT,ML0150,ML0100 * exit option
.
          BRANCH    COPTION,ML1000,ML2000,ML3000
.
.---- add data ----
.
ML1000    CALL      DEFV0000           * set up default values
          MOVE      ONE,ACCEPT         * accept mode
          CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML0200        * don't save data
.
          CALL      POST0000           * post data
          MOVE      ONE,ACCEPT         * accept mode
          MATCH     "6",FMAMTYPE
          CALL      SELB0000 IF EQUAL  * modify screen B
.
          MOVE      ONE,ACCEPT         * accept mode
          CALL      SELC0000           * modify screen C
.
          GOTO      ML0200             * get next entry
.
.---- modify data ----
.
ML2000    MOVE      ZERO,ACCEPT        * modify mode
          CALL      READ0000           * read data
          BRANCH    ZMODE,ML2300       * 1=only access to report screen
.
          CALL      OPTN0000           * get screen to modify
          BRANCH    OPTIONA,ML2100,ML2200,ML2300
          GOTO      ML0200             * exit screen
.
ML2100    MOVE      "2",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML2190        * quit
.
          CALL      POST0000           * post data
          MOVE      "3",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          GOTO      ML2000
.
ML2190    CALL      DAUD0000           * delete before change audit record
          GOTO      ML2000
.
ML2200    CALL      SELB0000           * modify screen B
          GOTO      ML2000
.
ML2300    CALL      SELC0000           * modify screen C
          BRANCH    ZMODE,ML0200       * 1=only access to report screen
          GOTO      ML2000
.
.---- delete data ----
.
ML3000    MOVE      ZERO,ACCEPT        * modify mode
          CALL      READ0000           * read data
          CALL      SCRA0000           * display basic details screen
          CALL      DISA0000           * display basic details
          CALL      DELQST             * ok to delete (y/n/c) ?
          SUB       ONE,CEXIT
          BRANCH    CEXIT,ML0200,ML0100
.
          CALL      DELT0000           * delete data
          BRANCH    EXIT,ML0200        * delete possible ?
.
          MOVE      "4",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          GOTO      ML0200             * get next entry
.
.
ML9999    PREP      FMSTMP01,FILENAM1
          CLOSE     FMSTMP01,DELETE
          MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD             * display screen
          CALL      OUPD0000             * open files in update procedures
.
          DISPLAY   *P64:24,"fmsbpfaf";  * subjective file
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * subjective file
          OPEN      FMSSBAA1,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmsccaaf";  * cost centre file
          OPEN      FMSCCAA1,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmscccaf";  * consolidated cost centre file
          OPEN      FMSCCCA1,"fmscccaf"
.
          DISPLAY   *P64:24,"fmsaudam";  * account audit file
          OPEN      FMSAUDAM,"fmsaudam"
.
          DISPLAY   *P64:24,"fmscodaf";  * codes file
          OPEN      FMSCODA1,"fmscodaf"
          OPEN      FMSCODA2,"fmscodaf"
.
          DISPLAY   *P64:24,"fmslevaf";  * level code
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmslmbaf";  * ledger report desc. file
          OPEN      FMSLMBA1,"fmslmbaf"
.
          DISPLAY   *P64:24,"fmsoncaf";  * oncost code
          OPEN      FMSONCA1,"fmsoncaf"
.
          DISPLAY   *P64:24,"fmsprcaf";  * print code
          OPEN      FMSPRCA1,"fmsprcaf"
.
          DISPLAY   *P64:24,"fmsuwpaf";  * user defined wp file
          OPEN      FMSUWPA1,"fmsuwpaf"
.
          DISPLAY   *P64:24,"fmsrsfaf";  * report seq file
          OPEN      FMSRSFA2,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmssscaf";  * stat subj calc file
          OPEN      FMSSSCA1,"fmssscaf"
          OPEN      FMSSSCA2,"fmssscaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";  * xref file
          OPEN      FMSXCSA1,"fmsxcsaf"
.
          DISPLAY   *P64:24,"fmscafaf";  * control account file
          OPEN      FMSCAFA1,"fmscafaf"
.
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
.         PACK      FILENAM2,NAME2,PORT
.         REP       " 0",FILENAM2
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM2
.
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.******************************************************************************
SCRA0000  MOVE      "1",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Reporting Account    : ":
                    *V2LON,SAVACCT,*EF:
                    *P1:7,*V2LON," 1",*HOFF,". Description          : ":
                    *P1:8,*V2LON," 2",*HOFF,". Account Type         : ":
                    *P1:9,*V2LON," 3",*HOFF,". Level                : ";
.
SCRA1000  MOVE      " 9",LINENO                  * starting line number
          MOVE      " 1",COLNO                   * fix collumn number
          MOVE      " 3",OPTNO                   * starting option number
          COMPARE   ONE,FMACR1ON
          GOTO      SCRA1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR1NA," : ";
.
SCRA1100  COMPARE   ONE,FMACR2ON
          GOTO      SCRA1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR2NA," : ";
.
SCRA1200  COMPARE   ONE,FMACR3ON
          GOTO      SCRA1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR3NA," : ";
.
SCRA1300  COMPARE   ONE,FMACR4ON
          GOTO      SCRA2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR4NA," : ";
.
SCRA2000  COMPARE   ONE,FMACD1ON
          GOTO      SCRA2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD1NA," : ";
.
SCRA2100  COMPARE   ONE,FMACD2ON
          GOTO      SCRA2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD2NA," : ";
.
SCRA2200  COMPARE   ONE,FMACD3ON
          GOTO      SCRA2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD3NA," : ";
.
SCRA2300  COMPARE   ONE,FMACD4ON
          GOTO      SCRA3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD4NA," : ";
.
SCRA3000  COMPARE   ONE,FMACA1ON
          GOTO      SCRA3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA1NA," : ";
.
SCRA3100  COMPARE   ONE,FMACA2ON
          GOTO      SCRA3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA2NA," : ";
.
SCRA3200  COMPARE   ONE,FMACA3ON
          GOTO      SCRA3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA3NA," : ";
.
SCRA3300  COMPARE   ONE,FMACA4ON
          GOTO      SCRA4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA4NA," : ";
.
SCRA4000  COMPARE   ONE,FMACC1ON
          GOTO      SCRA4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC1NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRA4100  COMPARE   ONE,FMACC2ON
          GOTO      SCRA4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC2NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRA4200  COMPARE   ONE,FMACC3ON
          GOTO      SCRA4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC3NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRA4300  COMPARE   ONE,FMACC4ON
          GOTO      SCRA5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC4NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRA5000  
.
SCRA9999  RETURN
.******************************************************************************
.* DISA - Display Screen A                       Called by SELA0000, redisps  *
.******************************************************************************
DISA0000  MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          MOVE      SP70,ACCTYPE
          LOAD      ACCTYPE,F1,ACCTYPE1,ACCTYPE2,ACCTYPE3:  * get acc type
                               ACCTYPE4,ACCTYPE5,ACCTYPE6,ACCTYPE7:
                               ACCTYPE8,ACCTYPE9
.
          PACK      KEY3,FMAMCLEV,SP70
          MOVE      SP70,FMLVDESC
          CALL      RDFMLV1                      * get level description
.
          DISPLAY   *P28:7,*V2LON,SAVDACCT:
                    *P28:8,ACCTYPE:
                    *P28:9,FMAMCLEV,*HOFF,*P44:9,FMLVDESC;
.
.
DISA1000  MOVE      " 9",LINENO                  * starting line number
          MOVE      "28",COLNO                   * fix collumn number
          COMPARE   ONE,FMACR1ON
          GOTO      DISA1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF1;
.
DISA1100  COMPARE   ONE,FMACR2ON
          GOTO      DISA1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF2;
.
DISA1200  COMPARE   ONE,FMACR3ON
          GOTO      DISA1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF3;
.
DISA1300  COMPARE   ONE,FMACR4ON
          GOTO      DISA2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF4;
.
DISA2000  COMPARE   ONE,FMACD1ON
          GOTO      DISA2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISA2100  COMPARE   ONE,FMACD2ON
          GOTO      DISA2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISA2200  COMPARE   ONE,FMACD3ON
          GOTO      DISA2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT3,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISA2300  COMPARE   ONE,FMACD4ON
          GOTO      DISA3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT4,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISA3000  COMPARE   ONE,FMACA1ON
          GOTO      DISA3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "1",AMOUNTNO
          CALL      DAMT0000
.
DISA3100  COMPARE   ONE,FMACA2ON
          GOTO      DISA3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "2",AMOUNTNO
          CALL      DAMT0000
.
DISA3200  COMPARE   ONE,FMACA3ON
          GOTO      DISA3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "3",AMOUNTNO
          CALL      DAMT0000
.
DISA3300  COMPARE   ONE,FMACA4ON
          GOTO      DISA4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "4",AMOUNTNO
          CALL      DAMT0000
.
DISA4000  COMPARE   ONE,FMACC1ON
          GOTO      DISA4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD1
          GOTO      DISA4100 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMAMCOD1,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD1,*HOFF,*P44:LINENO,FMCDDESC;
.
DISA4100  COMPARE   ONE,FMACC2ON
          GOTO      DISA4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD2
          GOTO      DISA4200 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMAMCOD2,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD2,*HOFF,*P44:LINENO,FMCDDESC;
.
DISA4200  COMPARE   ONE,FMACC3ON
          GOTO      DISA4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD3
          GOTO      DISA4300 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMAMCOD3,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD3,*HOFF,*P44:LINENO,FMCDDESC;
.
DISA4300  COMPARE   ONE,FMACC4ON
          GOTO      DISA5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD4
          GOTO      DISA5000 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMAMCOD4,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD4,*HOFF,*P44:LINENO,FMCDDESC;
.
DISA5000  
.
DISA9999  RETURN
.******************************************************************************
.* USRD - User defined options                   Called by SELA               *
.*       Requires : SELECT   (option selected)                                *
.*       Note : clears accept mode when completed last available option       *
.*       Returns  : EXIT = 2 if exitchar entered
.******************************************************************************
USRD0000  MOVE      " 3",OPTNO                   * starting option number
.
          COMPARE   ONE,FMACR1ON
          GOTO      USRD1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD1100 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR1LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF1,CSTRING,SP70
          GOTO      USRD9999
.
USRD1100  COMPARE   ONE,FMACR2ON
          GOTO      USRD1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD1200 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR2LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF2,CSTRING,SP70
          GOTO      USRD9999
.
USRD1200  COMPARE   ONE,FMACR3ON
          GOTO      USRD1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD1300 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR3LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF3,CSTRING,SP70
          GOTO      USRD9999
.
USRD1300  COMPARE   ONE,FMACR4ON
          GOTO      USRD2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD2000 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR4LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF4,CSTRING,SP70
          GOTO      USRD9999
.
USRD2000  COMPARE   ONE,FMACD1ON
          GOTO      USRD2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD2100 IF NOT EQUAL        * desired option ?
.
          UNPACK    FMAMDAT1,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMAMDAT1,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRD9999
.
USRD2100  COMPARE   ONE,FMACD2ON
          GOTO      USRD2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD2200 IF NOT EQUAL        * desired option ?
.
          UNPACK    FMAMDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMAMDAT2,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRD9999
.
USRD2200  COMPARE   ONE,FMACD3ON
          GOTO      USRD2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD2300 IF NOT EQUAL        * desired option ?
.
          UNPACK    FMAMDAT3,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMAMDAT3,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRD9999
.
USRD2300  COMPARE   ONE,FMACD4ON
          GOTO      USRD3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD3000 IF NOT EQUAL        * desired option ?
.
          UNPACK    FMAMDAT4,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMAMDAT4,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRD9999
.
USRD3000  COMPARE   ONE,FMACA1ON
          GOTO      USRD3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD3100 IF NOT EQUAL        * desired option ?
.
          MOVE      "1",AMOUNTNO
          CALL      GAMT0000
          GOTO      USRD9999
.
USRD3100  COMPARE   ONE,FMACA2ON
          GOTO      USRD3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD3200 IF NOT EQUAL        * desired option ?
.
          MOVE      "2",AMOUNTNO
          CALL      GAMT0000
          GOTO      USRD9999
.
USRD3200  COMPARE   ONE,FMACA3ON
          GOTO      USRD3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD3300 IF NOT EQUAL        * desired option ?
.
          MOVE      "3",AMOUNTNO
          CALL      GAMT0000
          GOTO      USRD9999
.
USRD3300  COMPARE   ONE,FMACA4ON
          GOTO      USRD4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD4000 IF NOT EQUAL        * desired option ?
.
          MOVE      "4",AMOUNTNO
          CALL      GAMT0000
          GOTO      USRD9999
.
USRD4000  COMPARE   ONE,FMACC1ON
          GOTO      USRD4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD4100 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC1NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD1
          MATCH     SP70,FMAMCOD1
          GOTO      USRD9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMAMCOD1,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD1,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRD9999
.
USRD4100  COMPARE   ONE,FMACC2ON
          GOTO      USRD4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD4200 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC2NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD2
          MATCH     SP70,FMAMCOD2
          GOTO      USRD9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMAMCOD2,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD2,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRD9999
.
USRD4200  COMPARE   ONE,FMACC3ON
          GOTO      USRD4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD4300 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC3NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD3
          MATCH     SP70,FMAMCOD3
          GOTO      USRD9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMAMCOD3,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD3,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRD9999
.
USRD4300  COMPARE   ONE,FMACC4ON
          GOTO      USRD5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD5000 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC4NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD4
          MATCH     SP70,FMAMCOD4
          GOTO      USRD9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMAMCOD4,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD4,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRD9000                     * make sure accept mode cleared
.
.
USRD5000  BRANCH    ACCEPT,USRD9000              * in accept mode ?
          BEEP                                   * illegal option
.
USRD9000  MOVE      ZERO,ACCEPT                  * clear accept mode
.
USRD9999  RETURN
.******************************************************************************
.* DAMT - Display amount                         Called by lots               *
.*       Requires : AMOUNTNO      (1=amount number)                           *
.*                  LINENO,COLNO  (screen address)                            *
.******************************************************************************
DAMT0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,DAMT0100,DAMT0200,DAMT0300,DAMT0400,DAMT0500,DAMT0600
.
.---- no decimal places ----
.
          LOAD      F12,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12;
          GOTO      DAMT9999
.
.---- 1 decimal places ----
.
DAMT0100  LOAD      F12P1,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P1;
          GOTO      DAMT9999
.
.---- 2 decimal places ----
.
DAMT0200  LOAD      F12P2,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P2;
          GOTO      DAMT9999
.
.---- 3 decimal places ----
.
DAMT0300  LOAD      F12P3,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P3;
          GOTO      DAMT9999
.
.---- 4 decimal places ----
.
DAMT0400  LOAD      F12P4,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P4;
          GOTO      DAMT9999
.
.---- 5 decimal places ----
.
DAMT0500  LOAD      F12P5,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P5;
          GOTO      DAMT9999
.
.---- 6 decimal places ----
.
DAMT0600  LOAD      F12P6,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P6;
          GOTO      DAMT9999
.
DAMT9999  RETURN
.******************************************************************************
.* GAMT - Get amount                             Called by lots               *
.*       Requires : AMOUNTNO (1=amount number)                                *
.*                  CVERT,CCOL    (screen address)                            *
.******************************************************************************
GAMT0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,GAMT0100,GAMT0200,GAMT0300,GAMT0400,GAMT0500,GAMT0600
.
.---- no decimal places ----
.
          KEYIN     *PCCOL:CVERT,"____________":
                    *PCCOL:CVERT,*V2LON,F12:
                    *PCCOL:CVERT,*DV,F12;
          STORE     F12,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 1 decimal places ----
.
GAMT0100  KEYIN     *PCCOL:CVERT,"____________._":
                    *PCCOL:CVERT,*V2LON,F12P1:
                    *PCCOL:CVERT,*DV,F12P1;
          STORE     F12P1,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 2 decimal places ----
.
GAMT0200  KEYIN     *PCCOL:CVERT,"____________.__":
                    *PCCOL:CVERT,*V2LON,F12P2:
                    *PCCOL:CVERT,*DV,F12P2;
          STORE     F12P2,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 3 decimal places ----
.
GAMT0300  KEYIN     *PCCOL:CVERT,"____________.___":
                    *PCCOL:CVERT,*V2LON,F12P3:
                    *PCCOL:CVERT,*DV,F12P3;
          STORE     F12P3,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 4 decimal places ----
.
GAMT0400  KEYIN     *PCCOL:CVERT,"____________.____":
                    *PCCOL:CVERT,*V2LON,F12P4:
                    *PCCOL:CVERT,*DV,F12P4;
          STORE     F12P4,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 5 decimal places ----
.
GAMT0500  KEYIN     *PCCOL:CVERT,"____________._____":
                    *PCCOL:CVERT,*V2LON,F12P5:
                    *PCCOL:CVERT,*DV,F12P5;
          STORE     F12P5,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 6 decimal places ----
.
GAMT0600  KEYIN     *PCCOL:CVERT,"____________.______":
                    *PCCOL:CVERT,*V2LON,F12P6:
                    *PCCOL:CVERT,*DV,F12P6;
          STORE     F12P6,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
GAMT9999  RETURN
.******************************************************************************
.* SCRB - Display Screen B                       Called by SELB0000, redisps  *
.******************************************************************************
SCRB0000  MOVE      "2",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Reporting Account    : ":
                    *V2LON,SAVACCT,*HOFF,SP2,SAVDACCT,*EF:
                    *P28:7,*V2LON,"Accounts Adding to This Total":
                    *P1:8,*ULON,"Item",*P7:8,"Ledger/Account":
                    *P60:8,"Prt Code",*P72:8,"Acct Seq";
.
SCRB9999  RETURN
.******************************************************************************
.* SCRC - Display Screen C                       Called by SELC0000, redisps  *
.******************************************************************************
SCRC0000  MOVE      "4",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Reporting Account    : ":
                    *V2LON,SAVACCT,*HOFF,SP2,SAVDACCT,*EF:
                    *P28:7,*V2LON,"Reporting Details":
                    *P1:8,*ULON,"Item",*P6:8,"Report Code":
                    *P39:8,"Cr Y/N":
                    *P47:8,"Print Code":
                    *P73:8,"Prt Pos";
.
SCRC9999  RETURN
.******************************************************************************
.* OPTN - Select option to display               Called by ML0000             *
.*        Returns : OPTIONA  (screen no. selected)                            *
.******************************************************************************
OPTN0000  MATCH     "6",SAVTYPE
          GOTO      OPTN2000 IF NOT EQUAL   * only basic det for non-total acc.
.
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Reporting Account    : ":
                    *V2LON,SAVACCT,*HOFF,SP2,SAVDACCT,*EF:
                    *P1:7,*V2LON," 0",*HOFF,". Exit":
                    *P1:8,*V2LON," 1",*HOFF,". Basic Details":
                    *P1:9,*V2LON," 2",*HOFF,". Sub Accounts":
                   *P1:10,*V2LON," 3",*HOFF,". Reporting Details";
.
OPTN1000  KEYIN     *P5:12,"Select Option : _",*P21:12,*V2LON,OPTIONA
          COMPARE   ZERO,OPTIONA
          GOTO      OPTN9999 IF EQUAL            * exit
          BRANCH    OPTIONA,OPTN9999,OPTN9999,OPTN9999
          BEEP                                   * illegal option
          GOTO      OPTN1000
.
OPTN2000  DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Reporting Account    : ":
                    *V2LON,SAVACCT,*HOFF,SP2,SAVDACCT,*EF:
                    *P1:7,*V2LON," 0",*HOFF,". Exit":
                    *P1:8,*V2LON," 1",*HOFF,". Basic Details":
                    *P1:9,*V2LON," 2",*HOFF,". Reporting Details";
.
OPTN3000  KEYIN     *P5:11,"Select Option : _",*P21:11,*V2LON,OPTIONA
          COMPARE   ZERO,OPTIONA
          GOTO      OPTN9999 IF EQUAL            * exit
          BRANCH    OPTIONA,OPTN4000,OPTN4000
          BEEP                                   * illegal option
          GOTO      OPTN3000
.
OPTN4000  LOAD      OPTIONA,OPTIONA,ONE,THREE    * get desired option
.
OPTN9999  RETURN
.******************************************************************************
.* DEFV - set up default variables               Called by ML0000             *
.******************************************************************************
DEFV0000  MOVE      SP70,FMAMDESC                * set description
          MOVE      SP70,FMAMSEC                 * set security code
          MOVE      ZERO,FMAMTYPE                * set account type
          MOVE      ZERO,FMAMSTAT                * set status
          MOVE      ZERO,FMAMCTRL                * set bank account
          MOVE      ZERO,FMAMASST                * set Asset Reg. Acc.
          MOVE      ZERO,FMAMPPT                 * set Pres. Pay. Tax
          MOVE      ZERO,FMAMONC                 * set oncost indic
          MOVE      SP70,FMAMONCC                * set oncost code
          MOVE      ZERO,FMAMOBAL                * set opening bal
          MOVE      SP70,FMAMCHEQ                * set cheque no.
          PACK      FMAMBDAT,CCC,SP70            * date of opening balance
.
          UNPACK    SP70,FMAMREF1,FMAMREF2       * set user defined fields
          UNPACK    SP70,FMAMREF3,FMAMREF4
.
          PACK      FMAMDAT1,CCC,SP70
          PACK      FMAMDAT2,CCC,SP70
          PACK      FMAMDAT3,CCC,SP70
          PACK      FMAMDAT4,CCC,SP70
.
          UNPACK    SP70,FMAMCOD1,FMAMCOD2,FMAMCOD3,FMAMCOD4
.
          MOVE      ZERO,FMAMAMT1
          MOVE      ZERO,FMAMAMT2
          MOVE      ZERO,FMAMAMT3
          MOVE      ZERO,FMAMAMT4
.
          UNPACK    SP70,FMRFPOS,FMRFPRT,FMTCASEQ,FMAMCLEV
          MOVE      SP70,SAVDACCT,SAVPRTC,SAVTYPE   * set description
          UNPACK    SP70,CURPRTP,SAVRPNO            * set report num/description
.
DEFV9999  RETURN
.******************************************************************************
.* LEDG - Enter Ledger Number                    Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMLALEDG (Ledger)                                         *
.******************************************************************************
LEDG0000  MOVE      ZERO,SCRNO         * clear screen number
          DISPLAY   *P1:4,"    Ledger               : ",*EF;
.
          MOVE      "28",CCOL          * set up screen address
          MOVE      "4",CVERT
.
          CALL      KLMAFM00           * get ledger
          MOVE      FMLALEDG,SAVLEDG   * save ledger
          MOVE      FMLADESC,SAVDLEDG  * save ledger description
          MOVE      FMLAPERS,SAVPERS   * save no. of periods
.
LEDG9999  RETURN
.******************************************************************************
.* PROC - Enter second index                     Called by ML0000             *
.*       Requires : SAVLEDG  (ledger)                                         *
.*       Returns  : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  SAVACCT  (account)                                        *
.******************************************************************************
PROC0000  MOVE      ZERO,SCRNO         * clear screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Reporting Account    : ",*EF;
          MOVE      "28",CCOL          * set up screen address
          MOVE      "5",CVERT
.
          PACK      FMLALEDG,SAVLEDG,SP70
          MOVE      "9",FMAMTYPE
          MOVE      "2",CACCTIND       * set for total/heading accounts only
          COMPARE   ONE,COPTION        * insert mode ?
          CALL      AAMAFM00 IF EQUAL
.
          COMPARE   ONE,COPTION        * not insert mode ?
          CALL      KAMAFM00 IF NOT EQUAL
          BRANCH    EXIT,PROC9999,PROC9999       * quit ?
.
          MOVE      FMLALEDG,LEDGER
          MOVE      FMAMACCT,ACCOUNT
          CALL      CKCS0000           * check account not subj/cc related
          MOVE      OVRCD,ZMODE
.
          MOVE      FMAMACCT,SAVACCT   * save account
.
          COMPARE   "1",ZMODE               * can only access cc/subj recs in 
          GOTO      PROC9999 IF NOT EQUAL   * change mode
          COMPARE   "2",COPTION
          GOTO      PROC9999 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "Cost Centre and Subjective Related Accounts Not Valid - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      PROC0000 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      PROC0000 IF NOT EQUAL
.
PROC9999  RETURN
.**********************************************************************
. READ - read account data                           Called By ML
.**********************************************************************
READ0000  MOVE      "000",FMAMCLEV
          PACK      KEY14,SAVLEDG,SAVACCT,SP70
          CALL      RDFMAM1            * read in account data
          MOVE      FMAMDESC,SAVDACCT  * save account description
          MOVE      FMAMTYPE,SAVTYPE   * save account type
          MOVE      FMAMCLEV,CURLEVEL  * save account type
.
READ9999  RETURN
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (1=quit, 0=post)                                 *
.******************************************************************************
SELA0000  MOVE      ZERO,SELECT   
          CALL      GETW0000                     * read in wp data (if req)
          CALL      SCRA0000                     * display screen A
          CALL      DISA0000                     * display screen A data
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,SELECT                   * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      QUES0000                     * select/post/cancel/notes ?
.
          COMPARE   ZERO,SELECT
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,SELECT
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "6",CVERT
          ADD       SELECT,CVERT
          BRANCH    SELECT,SELA1100:             * execute option
                           SELA1600,SELA1700
          GOTO      SELA2000
.
.---- option 1 ----
.
SELA1100  MATCH     SAVDACCT,SP70
          GOTO      SELA1150 IF NOT EQUAL        * description spaces ?
.
          PACK      SAVDACCT,UNDLN70
.
SELA1150  KEYIN     *PCCOL:CVERT,*DV,SAVDACCT:   * read in description
                    *PCCOL:CVERT,*V2LON,*RV,SAVDACCT;
          PACK      SAVDACCT,SAVDACCT,SP70
.
          MATCH     SAVDACCT,SP70
          GOTO      SELA1100 IF EQUAL            * description spaces ?
          MATCH     SAVDACCT,UNDLN70
          GOTO      SELA9500 IF EQUAL            * nothing entered ?
          MATCH     SAVDACCT,EXITCHAR
          GOTO      SELA9500 IF EQUAL            * EXITCHAR entered ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SAVDACCT;
          GOTO      SELA0100
.
.---- option 6 ----
.
SELA1600  CALL      SUBA0000                     * any sub accounts
          BRANCH    EXIT,SELA0100                * quit if sub accounts
          CALL      CKTS0000                     * in stat calc seq
          BRANCH    EXIT,SELA0100
.
          DISPLAY   *P1:24,*V2LON,"1",*HOFF," = ",ACCTYPE6,", ":
                           *V2LON,"2",*HOFF," = ",ACCTYPE7,*EL;
.
SELA1610  KEYIN     *PCCOL:CVERT,"_",*EL:        * read in account type
                    *PCCOL:CVERT,*V2LON,F1;
          MOVE      SP70,ACCTYPE
          LOAD      ACCTYPE,F1,ACCTYPE6,ACCTYPE7
          MATCH     SP70,ACCTYPE
          GOTO      SELA1690 IF NOT EQUAL        * legal option ?
.
          BEEP
          GOTO      SELA1610
.
SELA1690  DISPLAY   *PCCOL:CVERT,*V2LON,ACCTYPE:
                    *P1:24,*EL;
          ADD       "5",F1
          MOVE      F1,DIM1
          MATCH     DIM1,FMAMTYPE
          GOTO      SELA0100 IF EQUAL            * type unchanged ?
.
          MOVE      F1,FMAMTYPE
          MATCH     "7",FMAMTYPE
          GOTO      SELA1695 IF EQUAL            * heading type ?
.
          ADD       ONE,CVERT                    * set up for next option
          ADD       ONE,SELECT
          GOTO      SELA1700                     * get level code
.
SELA1695  UNPACK    SP70,FMAMCLEV,CURLEVEL
          REP       " 0",CURLEVEL
          REP       " 0",FMAMCLEV
          DISPLAY   *P28:12,*EL;
          GOTO      SELA0100
.
.---- option 7 ----
.
SELA1700  MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00                     * get level code
          REP       " 0",FMLVCODE
          MOVE      FMLVCODE,FMAMCLEV
          MOVE      FMLVCODE,CURLEVEL
          BRANCH    EXIT,SELA1790,SELA9500       * exit ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLVCODE,*HOFF,*P44:CVERT,FMLVDESC;
          PROC      CKLV0000                     * check level ok
          BRANCH    EXIT,SELA1700
          GOTO      SELA0100
.
SELA1790  MATCH     "7",FMAMTYPE
          GOTO      SELA1700 IF NOT EQUAL        * heading type account
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLVCODE;
          GOTO      SELA0100
.
.---- user defined fields ----
.
SELA2000  CALL      USRD0000                     * execute user defined option
          COMPARE   "2",EXIT
          GOTO      SELA9500 IF EQUAL            * exitchar entered ?
          GOTO      SELA0100                     * get next option
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT                     * cancel
.
SELA9999  RETURN
.**********************************************************************
. PROC   CKLV0000 - check if level is ok              Called By POST
.        Requires - CURLEVEL (level)
.        Returns  - EXIT     (0=ok, 1=not ok)
.**********************************************************************
          DEFPROC   CKLV0000
          INC       FMSAMAFD/INC
          OPEN      FMSAMAA1,"fmsamaaf"
.
CKLV1000  PACK      KEY33,SAVLEDG,SAVACCT,SP70
          CALL      RSFMTC1
.
CKLV1100  CALL      RKFMTC1
          BRANCH    OVRCD,CKLV2000
          MATCH     SAVLEDG,FMTCTLED
          GOTO      CKLV2000 IF NOT EQUAL
          MATCH     SAVACCT,FMTCTACC
          GOTO      CKLV2000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLV1100
          MATCH     CURLEVEL,FMAMCLEV
          GOTO      CKLV1100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Level Must Be Higher Than Account ":
                    FMTCSLED,SLASH,FMTCSACC," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
CKLV2000  PACK      KEY33,SAVLEDG,SAVACCT,SP70
          CALL      RSFMTC2
.
CKLV2100  CALL      RKFMTC2
          BRANCH    OVRCD,CKLV3000
          MATCH     SAVLEDG,FMTCSLED
          GOTO      CKLV3000 IF NOT EQUAL
          MATCH     SAVACCT,FMTCSACC
          GOTO      CKLV3000 IF NOT EQUAL
.
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLV2100
          MATCH     FMAMCLEV,CURLEVEL
          GOTO      CKLV2100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Level Must Be Lower Than Account ":
                    FMTCTLED,SLASH,FMTCTACC," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
CKLV3000  PACK      KEY31,SAVLEDG,SAVACCT,SP70
          CALL      RSFMTS2
.
CKLV3100  CALL      RKFMTS2
          BRANCH    OVRCD,CKLV9000
          MATCH     SAVLEDG,FMTSTLED
          GOTO      CKLV9000 IF NOT EQUAL
          MATCH     SAVACCT,FMTSSACC
          GOTO      CKLV9000 IF NOT EQUAL
.
          PACK      KEY14,FMTSTLED,FMTSTACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLV3100
          MATCH     FMAMCLEV,CURLEVEL
          GOTO      CKLV3100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Level Must Be Lower Than Subjective ":
                    FMTSTLED,SLASH,FMTSTACC," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
          INC       FMSAMAIO/INC
          INC       IBAOVRIO/INC
CKLV9000  MOVE      ZERO,EXIT
          GOTO      BOTTOM
.
CKLV9500  MOVE      ONE,EXIT
.
BOTTOM
          ENDPROC
.**********************************************************************
.  SUBA - check if sub or add to accounts exist        Called By lots
.        Requires - LEDGER,ACCOUNT     (ledger/account)
.        Returns  - EXIT               (1=quit)
.**********************************************************************
SUBA0000  PACK      KEY33,LEDGER,ACCOUNT,SP70
          CALL      RSFMTC1
          CALL      RKFMTC1
          BRANCH    OVRCD,SUBA1000     * no more records ?
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY33,KEY14
          GOTO      SUBA1000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"Sub Accounts Exist For This Account - ";
          CALL      HITENTER
          GOTO      SUBA9500
.
SUBA1000  PACK      KEY33,LEDGER,ACCOUNT,SP70
          CALL      RSFMTC2
          CALL      RKFMTC2
          BRANCH    OVRCD,SUBA9000     * no more records ?
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          MATCH     KEY33,KEY14
          GOTO      SUBA9000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"This Account Adds To Account ":
                    FMTCTLED,SLASH,FMTCTACC," - ";
          CALL      HITENTER
          GOTO      SUBA9500
.
SUBA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SUBA9999
.
SUBA9500  MOVE      ONE,EXIT           * quit
.
SUBA9999  RETURN
.******************************************************************************
.* CKTS - Check whether there are any Calc Details   Called by lots           *
.*        Returns : EXIT     (0=ok, 1=calc det)                               *
.******************************************************************************
CKTS0000  PACK      KEY31,SAVLEDG,SAVACCT,SP70
          CALL      RSFMTS1                      * position file pointer
          CALL      RKFMTS1                      * get next record
          BRANCH    OVRCD,CKTS5000               * no more records ?
.
          MATCH     FMTSTLED,SAVLEDG
          GOTO      CKTS5000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMTSTACC,SAVACCT
          GOTO      CKTS5000 IF NOT EQUAL        * no more records ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Calculation Details Exist for this Subjective - ";
          CALL      HITENTER
          MATCH     "*",ANS
          GOTO      CKTS5000 IF EQUAL
          GOTO      CKTS9500
.
CKTS5000  PACK      KEY31,SAVLEDG,SAVACCT,SP70
          CALL      RSFMTS2                      * position file pointer
          CALL      RKFMTS2                      * get next record
          BRANCH    OVRCD,CKTS9000               * no more records ?
.
          MATCH     FMTSTLED,SAVLEDG
          GOTO      CKTS9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMTSSACC,SAVACCT
          GOTO      CKTS9000 IF NOT EQUAL        * no more records ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Account Used In ",FMTSTLED,SLASH,FMTSTACC:
                    " Calculation Details - ";
          CALL      HITENTER
          MATCH     "*",ANS
          GOTO      CKTS9000 IF EQUAL
          GOTO      CKTS9500
.
CKTS9000  MOVE      ZERO,EXIT
          GOTO      CKTS9999
.
CKTS9500  MOVE      ONE,EXIT
.
CKTS9999  RETURN
.******************************************************************************
.* SELB - screen B                               Called By ML0000             *
.******************************************************************************
SELB0000  CALL      SCRB0000           * display screen B
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
.
          MOVE      SAVLEDG,TOTLEDG
          MOVE      SAVACCT,TOTACCNT
          CALL      SETU0000           * write record for total account update
.
          BRANCH    ACCEPT,SELB5000    * in accept mode
.
SELB1000  CALL      DATB0000           * display data
.
          CALL      MQST0000           * get desired action
          BRANCH    EXIT,SELB9500      * quit screen ?
          MOVE      SP70,SKEY
          LOAD      SKEY,OPTIONB,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY33,SKEY,SP70
          CALL      RDFMTC1
          BRANCH    OVRCD,SELB5000     * in insert mode ?
.
.---- modify mode ----
.
          CALL      SELD0000           * do subscreen B
          CALL      SCRB0000           * display screen B
          GOTO      SELB1000
.
.---- insert mode ----
.
SELB5000  ADD       ONE,ITEMNUM
          COMPARE   MAXITEMB,ITEMNUM
          CALL      ADDR0000 IF NOT LESS         * get first free position
          MOVE      "8",LINENO
          ADD       ITEMNUM,LINENO               * get lineno
          MOVE      ITEMNUM,SAVITEM
.
SELB6000  DISPLAY   *P1:LINENO,*V2LON,SAVITEM,DOT,*EL;
.
          MOVE      "7",CCOL
          MOVE      LINENO,CVERT
          CALL      KLMAFM00           * get ledger
          BRANCH    EXIT,SELB1000,SELB9500
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SLASH;
          COMPARE   FMLAPERS,SAVPERS
          GOTO      SELB7000 IF EQUAL  * same number of periods ?
.
          DISPLAY  *P1:24,*B,*EL,"Ledger Not Compatible With Current Ledger - ";
          CALL      HITENTER
          GOTO      SELB6000
.
SELB7000  MOVE      "10",CCOL
          MOVE      "12",CACCTIND      * set for head/total/post accounts only
          CALL      KAMAFM00           * get account
          BRANCH    EXIT,SELB6000,SELB9500
          DISPLAY   *P10:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
.
          CALL      TEST0000           * test if record ok
          BRANCH    EXIT,SELB7000
.
          PACK      FMTCPRT,SP70
          MATCH     "7",FMAMTYPE
          GOTO      SELB7100 IF NOT EQUAL
          MOVE      "62",CCOL          * get print code
          CALL      KPRCFM00
          COMPARE   "2",EXIT
          GOTO      SELB6000 IF EQUAL
          PACK      FMTCPRT,FMPRCODE,SP70
.
SELB7100  MOVE      "74",CCOL          * get acct seq
          KEYIN     *PCCOL:CVERT,"_____":
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*DE,FMTCASEQ;
          PACK      FMTCASEQ,FMTCASEQ,SP70
          REP       " 0",FMTCASEQ
          DISPLAY   *PCCOL:CVERT,*V2LON,FMTCASEQ;
.
          MOVE      ZERO,FMTCADDT
          MOVE      FMAMTYPE,F1
          LOAD      FMTCPOST,F1,ONE,ONE,ONE,ONE,ONE,ZERO,ZERO,ONE,ZERO
          PACK      KEY33,SAVLEDG,SAVACCT,FMTCASEQ,FMAMLEDG,FMAMACCT,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          CALL      DEFMTC1            * delete old record
          CALL      WRFMTC1            * write new record
.
          MOVE      SAVITEM,ITEMNUM
          GOTO      SELB5000           * get more entries
.
SELB9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELB9999
.
SELB9500  MOVE      ONE,EXIT           * quit
.
SELB9999  RETURN
.******************************************************************************
.  SCRD - Display Screen D                       Called by SELD, redisps
.******************************************************************************
SCRD0000  MOVE      "5",SCRNO                    * screen number
          UNPACK    SP70,FMAMDESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
.
          UNPACK    SP70,FMPRDESC
          PACK      KEY3,FMTCPRT,SP70
          CALL      RDFMPR1
.
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Reporting Account    : ":
                    *V2LON,SAVACCT,*EF,*HOFF:
                    *P1:7,"    Sub Ledger/Account   : ":
                    *V2LON,FMTCSLED,SLASH,FMTCSACC,*HOFF,SP2,FMAMDESC,*V2LON:
                    *P1:9," 1",*HOFF,". Account Sequence     : ":
                          *V2LON,FMTCASEQ:
                   *P1:10," 2",*HOFF,". Print Code           : ":
                          *V2LON,FMTCPRT,*HOFF,SP2,FMPRDESC;
.
SCRD9999  RETURN
.******************************************************************************
.  SELD - Perform Screen D                       Called by SELB
.******************************************************************************
SELD0000  MOVE      ZERO,OPTIOND       * reset item desired
          CALL      SCRD0000           * display screen D
.
SELD0100  CALL      MQSD0000           * get option
          COMPARE   "-2",CCITEM        * delete ?
          GOTO      SELD9700 IF EQUAL
          MOVE      CCITEM,OPTIOND
.
          MOVE      "28",CCOL          * get screen address
          MOVE      "8",CVERT
          ADD       OPTIOND,CVERT
          MOVE      OPTIOND,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELD9500,SELD9000:                  * quit, continue
                       SELD1100,SELD1200                   * execute option
          BEEP                         * illegal option
          GOTO      SELD0100           * get another option
.
.---- option 1 ----
.
SELD1100  KEYIN     *PCCOL:CVERT,*DV,FMTCASEQ:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,*ZF,*DE,FMTCASEQ;
          PACK      FMTCASEQ,FMTCASEQ,SP70
          REP       " 0",FMTCASEQ
          DISPLAY   *PCCOL:CVERT,*V2LON,FMTCASEQ;
          GOTO      SELD0100
.
.---- option 2 ----
.
SELD1200  MATCH     "7",FMAMTYPE
          GOTO      SELD1210 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "Print Code Only Valid For Heading Accounts - ";
          CALL      HITENTER
          GOTO      SELD0100
.
SELD1210  CALL      KPRCFM00
          COMPARE   "2",EXIT
          GOTO      SELD9500 IF EQUAL
          PACK      FMTCPRT,FMPRCODE,SP70
.
          UNPACK    SP70,FMPRDESC
          PACK      KEY3,FMTCPRT,SP70
          CALL      RDFMPR1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMTCPRT,*HOFF,SP2,FMPRDESC;
          GOTO      SELD0100
.
.
SELD9000  CALL      UPFMTC1
          MOVE      ZERO,EXIT          * continue
          GOTO      SELD9999
.
SELD9500  MOVE      ONE,EXIT           * quit
          GOTO      SELD9999
.
SELD9700  CALL      DELQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,SELD0100,SELD9500
          PACK      KEY33,SKEY,SP70
          CALL      DEFMTC1
          MOVE      THREE,EXIT         * delete
.
SELD9999  RETURN
.******************************************************************************
.  SCRE - Display Screen E                       Called by SELE, redisps
.******************************************************************************
SCRE0000  MOVE      "6",SCRNO                    * screen number
          UNPACK    SP70,FMLBDESC
          PACK      KEY2,FMRFREP,SP70
          CALL      RDFMLB1
          UNPACK    SP70,FMPRDESC
          PACK      KEY3,FMRFPRT,SP70
          CALL      RDFMPR1
          MOVE      ZERO,FYESNO
          MOVE      FMRFCRP,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
.
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Reporting Account    : ":
                    *V2LON,SAVACCT,*EF,*HOFF:
                    *P1:7,"    Report Code          : ":
                    *V2LON,FMRFREP,*HOFF,SP12,FMLBDESC,*V2LON:
                    *P1:9," 1",*HOFF,". Print Code           : ":
                          *V2LON,FMRFPRT,*HOFF,SP10,SP1,FMPRDESC,*V2LON:
                   *P1:10," 2",*HOFF,". Print Position       : ":
                          *V2LON,FMRFPOS:
                   *P1:11," 3",*HOFF,". Credit Print (Y/N)   : ":
                          *V2LON,YESNO;
.
SCRE9999  RETURN
.******************************************************************************
.  SELE - Perform Screen E                       Called by SELC
.******************************************************************************
SELE0000  MOVE      ZERO,OPTIONE       * reset item desired
          CALL      SCRE0000           * display screen E
.
SELE0100  ADD       ONE,OPTIONE        * get next item
          CALL      MQSD0000           * get option
          COMPARE   "-2",CCITEM        * delete ?
          GOTO      SELE9700 IF EQUAL
          MOVE      CCITEM,OPTIONE
.
          MOVE      "28",CCOL          * get screen address
          MOVE      "8",CVERT
          ADD       OPTIONE,CVERT
          MOVE      OPTIONE,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELE9500,SELE9000:                  * quit, continue
                       SELE1100,SELE1200,SELE1300          * execute option
          BEEP                         * illegal option
          GOTO      SELE0100           * get another option
.
.---- option 1 ----
.
SELE1100  CALL      KPRCFM00           * get print code
          BRANCH    EXIT,SELE1150,SELE9500
.
SELE1150  LOAD      FMPRDESC,EXIT,SP70
          LOAD      FMPRCODE,EXIT,SP70
          MOVE      FMPRCODE,FMRFPRT
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRFPRT,*HOFF,SP10,SP1,FMPRDESC;
          GOTO      SELE0100
.
.---- option 2 ----
.
SELE1200  KEYIN     *PCCOL:CVERT,*DV,FMRFPOS:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,*ZF,*DE,FMRFPOS;
          PACK      FMRFPOS,FMRFPOS,SP70
          REP       " 0",FMRFPOS
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRFPOS;
          GOTO      SELE0100
.
.---- option 3 ----
.
SELE1300  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,FMRFCRP 
          GOTO      SELE0100
.
SELE9000  CALL      UPFMRF2
          MOVE      ZERO,EXIT          * continue
          GOTO      SELE9999
.
SELE9500  MOVE      ONE,EXIT           * quit
          GOTO      SELE9999
.
SELE9700  CALL      DELQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,SELE0100,SELE9500
          PACK      KEY26,SKEY,SP70
          CALL      DEFMRF2
          MOVE      THREE,EXIT         * delete
.
SELE9999  RETURN
.**********************************************************************
.  MQSD - selection routine for SELD & SELE            Called By ML
.        Returns  - CCITEM   (-2=delete, -1=exit, 0=post other=selection)
.**********************************************************************
MQSD0000  DISPLAY   *P1:24,*EF,"Select Item, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON:
                    "C",*HOFF,")ancel, (",*V2LON:
                    "D",*HOFF,")elete : ";
.
MQSD1000  KEYIN     *P43:24,"__":
                    *P43:24,*V2LON,*JR,DIM2;
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          MOVE      "0",CCITEM
          MATCH     " P",DIM2
          GOTO      MQSD9999 IF EQUAL  * post
.
          MOVE      "-1",CCITEM
          MATCH     " C",DIM2
          GOTO      MQSD9999 IF EQUAL  * cancel
.
          MOVE      "-2",CCITEM
          MATCH     " D",DIM2
          GOTO      MQSD9999 IF EQUAL  * delete
.
          MOVE      ZERO,CCITEM
          MOVE      DIM2,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      MQSD9999 IF NOT LESS    * item selected ?
          BEEP
          GOTO      MQSD1000
.
MQSD9999  RETURN
.******************************************************************************
.* SELC - screen C                               Called By ML0000             *
.******************************************************************************
SELC0000  CALL      SCRC0000           * display screen C
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
          BRANCH    ACCEPT,SELC5000    * in accept mode
.
SELC1000  CALL      DATC0000           * display data
.
SELC1100  CALL      MQSC0000           * get desired action
          BRANCH    EXIT,SELC9500      * quit screen ?
          MOVE      SP70,SKEY
          LOAD      SKEY,OPTIONC,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY26,SKEY,SP70
          CALL      RDFMRF2
          BRANCH    OVRCD,SELC5000     * in insert mode ?
.
.---- modify mode ----
.
          CALL      CKRS0000           * check if this line can be removed
          BRANCH    EXIT,SELC1100      * invalid record ?
.
          CALL      SELE0000           * do subscreen E
          CALL      SCRC0000           * display screen C
          GOTO      SELC1000
.
.---- insert mode ----
.
SELC5000  ADD       ONE,ITEMNUM
          COMPARE   MAXITEMB,ITEMNUM
          CALL      ADDC0000 IF NOT LESS         * get first free position
          MOVE      "8",LINENO
          ADD       ITEMNUM,LINENO               * get lineno
          MOVE      ITEMNUM,SAVITEM
.
SELC6000  DISPLAY   *P1:LINENO,*V2LON,SAVITEM,DOT,*EL;
.
          MOVE      "6",CCOL
          MOVE      LINENO,CVERT
          CALL      KLMBFM00           * get Report
          BRANCH    EXIT,SELC1000,SELC9500
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLBRPNO,*HOFF,SP2,FMLBDESC;
.
          MOVE      FMLBRPNO,SAVRPNO
          PACK      KEY26,SAVLEDG,SAVACCT,SAVRPNO,SP70    * already allocated ?
          CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,SELC7000
          PACK      KEY16,FMRFLED,FMRFACC,FMRFREP,SP70
          MATCH     KEY26,KEY16
          GOTO      SELC7000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EL,"Report Already Allocated to This Account - ";
          CALL      HITENTER
          GOTO      SELC6000
.
SELC7000  DISPLAY   *P39:CVERT,*EL
          MOVE      "41",CCOL
          CALL      YORN0000           * get print code
          MOVE      FYESNO,FMRFCRP 
.
          MOVE      "47",CCOL
          CALL      KPRCFM00           * get print code
          BRANCH    EXIT,SELC8000,SELC9500
          DISPLAY   *PCCOL:CVERT,*V2LON,FMPRCODE,*HOFF,SP2,FMPRDESC;
.
SELC8000  MOVE      "74",CCOL          * get acct seq
          KEYIN     *PCCOL:CVERT,"_____":
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*DE,FMRFPOS;
          PACK      FMRFPOS,FMRFPOS,SP70
          REP       " 0",FMRFPOS
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRFPOS;
.
          PACK      FMRFPRT,FMPRCODE,SP70
          MOVE      FMAMTYPE,F1
          LOAD      FMRFSEQ,F1,SP70,SP70,SP70,SP70,SP70:
                               TOTSEQ,HEADSEQ,SP70,TOTSEQ
          PACK      KEY26,SAVLEDG,SAVACCT,SAVRPNO,FMRFPOS,FMRFSEQ,SP70
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      DEFMRF2            * delete old record
          CALL      WRFMRF2            * write new record
.
          MOVE      SAVITEM,ITEMNUM
          GOTO      SELC5000           * get more entries
.
SELC9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELC9999
.
SELC9500  MOVE      ONE,EXIT           * quit
.
SELC9999  RETURN
.******************************************************************************
.* QUES - question select/post/cancel/notes ?    Called by SELA               *
.*        Returns : Selection (-1 = Cancel, 0 = Post, other = selection)      *
.******************************************************************************
QUES0000  DISPLAY   *P1:24,*EL,"Select, (",*V2LON,"P":
                    *HOFF,")ost, (",*V2LON,"C",*HOFF,")ancel";
          MOVE      "24",F2
          COMPARE   ONE,FMACW1ON
          GOTO      QUES0500 IF NOT EQUAL        * wp activated ?
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")otes";
          ADD       "9",F2
.
QUES0500  DISPLAY   " : ";
          ADD       "4",F2
.
QUES1000  KEYIN     *PF2:24,"__":
                    *PF2:24,*V2LON,*JR,DIM2,*EL;
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          MOVE      SEQ,SELECT
          MATCH     " C",DIM2
          GOTO      QUES9999 IF EQUAL            * cancel ?
.
          MOVE      ZERO,SELECT
          MATCH     " P",DIM2
          GOTO      QUES9999 IF EQUAL            * post ?
.
          COMPARE   ONE,FMACW1ON
          GOTO      QUES2000 IF NOT EQUAL        * notes active ?
          MATCH     " N",DIM2
          GOTO      QUES2000 IF NOT EQUAL        * notes ?
.
          CALL      NOTE0000                     * execute wp
          CALL      RCODFM00                     * redisplay screen
          GOTO      QUES0000
.
QUES2000  MOVE      DIM2,SELECT                  * selection made
          TYPE      DIM2
          GOTO      QUES9999 IF EQUAL            * valid numeric ?
          BEEP
          GOTO      QUES1000
.
QUES9999  RETURN
.******************************************************************************
.* GETW - read in wp data                        Called by SELA               *
.******************************************************************************
GETW0000  COMPARE   ONE,FMACW1ON
          GOTO      GETW9999 IF NOT EQUAL        * notes active ?
.
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          PACK      KEY17,SAVLEDG,SAVACCT,SP70
          CALL      RSFMUW1                      * go to start of records
.
GETW1000  CALL      RKFMUW1                      * get next record
          BRANCH    OVRCD,GETW2000               * no more records ?
          PACK      KEY14,FMUWLEDG,FMUWACCT,SP70
          MATCH     KEY14,KEY17
          GOTO      GETW2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMUWLINE
          GOTO      GETW1000
.
GETW2000  WEOF      FMSTMP01,SEQ
          CLOSE     FMSTMP01
.
GETW9999  RETURN
.******************************************************************************
.* NOTE - Execute word processor                 Called by QUES               *
.******************************************************************************
NOTE0000  
.         DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                   *BLINKON,*V2LON,"Please Wait",*EL;
.
.         PREP      FMSTMP02,FILENAM2
.         WRITE     FMSTMP02,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.         WRITE     FMSTMP02,SEQ;VERSION,SP10,SP5,PRGNAM
.         WRITE     FMSTMP02,SEQ;SP1
.         WRITE     FMSTMP02,SEQ;"    Ledger               : ":
.                   SAVLEDG,SP10,SP4,SAVDLEDG
.         WRITE     FMSTMP02,SEQ;"    Reporting Account    : ":
.                   SAVACCT,SP4,SAVDACCT
.         WRITE     FMSTMP02,SEQ;"    Notes"
.         WRITE     FMSTMP02,SEQ;SP1
.
.         OPEN      FMSTMP01,FILENAM1            * go to start of records
.
.NOTE1000 READ      FMSTMP01,SEQ;FMUWLINE        * read in wp data
.         GOTO      NOTE2000 IF OVER
.
.         WRITE     FMSTMP02,SEQ;FMUWLINE
.         GOTO      NOTE1000
.
.NOTE2000 CLEAR     CMDLINE
.         PACK      CMDLINE,WP,FILENAM2,WPDAT
.         EXECUTE   CMDLINE,TASKID               * initiate word processor
.
.         CALL      WEOF0000                     * make sure something in file
.         CLOSE     FMSTMP02
          CLOSE     FMSTMP01
          DISPLAY   *P42:5,SAVDACCT
.
.         CLEAR     CMDLINE
.         PACK      CMDLINE,CP,FILENAM2,TXT,FILENAM1,TXT 
.         EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                      * copy file to original
          APPEND    FILENAM1,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          MOVE      ONE,WPSTAT
          WORD      CMDLINE,999,2,7,76,22,WPSTAT
          DISPLAY   *P42:5,*EL
.
NOTE9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
.WEOF0000  CLOSE     FMSTMP02
.          MOVE      ZERO,OVRCD
.          TRAP      OVERCOND IF IO
.          OPEN      FMSTMP02,FILENAM2
.          TRAPCLR   IO
.          COMPARE   ONE,OVRCD
.          GOTO      WEOF9999 IF NOT EQUAL
..
.          PREP      FMSTMP02,FILENAM2
.          WEOF      FMSTMP02,SEQ
..
.WEOF9999  RETURN
.******************************************************************************
.* DATB - display screen B data                  Called By MQST,SELB          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMB (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATB0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17
          PACK      KEY33,SAVLEDG,SAVACCT,SP70
          CALL      RSFMTC1                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATB1000  CALL      RKFMTC1                      * get next record
          BRANCH    OVRCD,DATB9000               * no more records ?
          MATCH     SAVLEDG,FMTCTLED
          GOTO      DATB9000 IF NOT EQUAL        * no more records ?
.
          MATCH     SAVACCT,FMTCTACC
          GOTO      DATB9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      DATB2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATB2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATB1000 IF LESS             * not up to current page ?
          GOTO      DATB9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
.
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,FMTCSLED,SLASH,FMTCSACC,SP2,FMAMDESC:
                    *P62:LINENO,FMTCPRT,*P74:LINENO,FMTCASEQ;
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          STORE     KEY33,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATB1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATB9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATB9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATB9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      DATB9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATB9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATB9999
.
.---- reached EOP before EOF ----
.
DATB9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMB,ITEMNUM
.
DATB9999  RETURN
.******************************************************************************
.* ADDR - get first blank position               Called By SCRB0000           *
.******************************************************************************
ADDR0000  ADD       ONE,PAGENO         * try next page
          CALL      DATB0000           * display next page
.
          ADD       ONE,ITEMNUM        * get next item
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      ADDR0000 IF NOT LESS  * at end of page
.
ADDR9999  RETURN
.******************************************************************************
.* MQST - Main question for screen B             Called By SELB0000           *
.******************************************************************************
MQST0000  DISPLAY   *P1:24,"Select Item, (":     * display prompt
                    *V2LON,"R",*HOFF,")ange";
          MOVE      "20",CCOL
          COMPARE   ONE,MORE
          GOTO      MQST1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQST1000  COMPARE   PAGENO,ONE
          GOTO      MQST2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQST2000  DISPLAY   ", e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "12",CCOL
.
MQST3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQST4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQST4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATB0000
          GOTO      MQST0000
.
MQST4000  COMPARE   PAGENO,ONE
          GOTO      MQST5000 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQST5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATB0000
          GOTO      MQST0000
.
MQST5000  MATCH     " R",DIM2
          GOTO      MQST6000 IF NOT EQUAL
          CALL      RANB0000           * input for range of accounts
          CALL      DATB0000
          GOTO      MQST0000
.
MQST6000  MATCH     " X",DIM2
          GOTO      MQST9500 IF EQUAL
.
          MOVE      ZERO,OPTIONB
          MOVE      DIM2,OPTIONB
          COMPARE   OPTIONB,ZERO
          GOTO      MQST9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQST3000           * get another option
.
MQST9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQST9999
.
MQST9500  MOVE      ONE,EXIT           * quit
.
MQST9999  RETURN
.******************************************************************************
.* DATC - display screen C data                  Called By MQSC,SELC          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMC (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATC0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17
          PACK      KEY26,SAVLEDG,SAVACCT,SP70
          CALL      RSFMRF2                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATC1000  CALL      RKFMRF2                      * get next record
          BRANCH    OVRCD,DATC9000               * no more records ?
          MATCH     SAVLEDG,FMRFLED
          GOTO      DATC9000 IF NOT EQUAL        * no more records ?
.
          MATCH     SAVACCT,FMRFACC
          GOTO      DATC9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMC,ITEMNUM
          GOTO      DATC2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATC2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATC1000 IF LESS             * not up to current page ?
          GOTO      DATC9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMPRDESC
          PACK      KEY3,FMRFPRT,SP70
          CALL      RDFMPR1
          MOVE      SP70,FMLBDESC
          PACK      KEY2,FMRFREP,SP70
          CALL      RDFMLB1
.
          MOVE      ZERO,FYESNO
          MOVE      FMRFCRP,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
.
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P6:LINENO,FMRFREP,SP2,FMLBDESC:
                    *P39:LINENO,SP8:
                    *P41:LINENO,YESNO:
                    *P47:LINENO,FMRFPRT,SP2,FMPRDESC:
                    *P74:LINENO,FMRFPOS;
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          STORE     KEY26,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATC1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATC9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATC9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATC9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMC,ITEMNUM
          GOTO      DATC9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATC9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATC9999
.
.---- reached EOP before EOF ----
.
DATC9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMC,ITEMNUM
.
DATC9999  RETURN
.******************************************************************************
.* ADDC - get first blank position               Called By SCRC0000           *
.******************************************************************************
ADDC0000  ADD       ONE,PAGENO         * try next page
          CALL      DATC0000           * display next page
.
          ADD       ONE,ITEMNUM        * get next item
          COMPARE   MAXITEMC,ITEMNUM
          GOTO      ADDC0000 IF NOT LESS  * at end of page
.
ADDC9999  RETURN
.******************************************************************************
.* MQSC - Main question for screen C             Called By SELC0000           *
.******************************************************************************
MQSC0000  DISPLAY   *P1:24,"Select Item";     * display prompt
          MOVE      "11",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSC1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQSC1000  COMPARE   PAGENO,ONE
          GOTO      MQSC2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQSC2000  DISPLAY   ", e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "12",CCOL
.
MQSC3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQSC4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQSC4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATC0000
          GOTO      MQSC0000
.
MQSC4000  COMPARE   PAGENO,ONE
          GOTO      MQSC5000 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQSC5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATC0000
          GOTO      MQSC0000
.
MQSC5000  MATCH     " X",DIM2
          GOTO      MQSC9500 IF EQUAL
          MATCH     "**",DIM2
          GOTO      MQSC8000 IF EQUAL  * secret back door to allow full access *
.
          MOVE      ZERO,OPTIONC
          MOVE      DIM2,OPTIONC
          COMPARE   OPTIONC,ZERO
          GOTO      MQSC9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQSC3000           * get another option
.
.---- secret back door to grant full access ----
.
MQSC8000  MOVE      ZERO,ZMODE
          MOVE      ZERO,RECTYPE
          GOTO      MQSC3000
.
MQSC9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSC9999
.
MQSC9500  MOVE      ONE,EXIT           * quit
.
MQSC9999  RETURN
.******************************************************************************
.* POST - Post data                              Called by ML0000             *
.******************************************************************************
POST0000  PACK      FMAMDESC,SAVDACCT,SP70
          PACK      KEY14,SAVLEDG,SAVACCT,SP70
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          MOVE      ONE,FMAMMULT
          MOVE      ONE,FMAMDIV
          MOVE      ZERO,FMAMAYTD
          MOVE      ZERO,FMAMDPLA
          UNPACK    SP70,FMAMUNIT
          REP       " 0",CURLEVEL
          PACK      FMAMCLEV,CURLEVEL,SP70
.
          COMPARE   ONE,COPTION
          GOTO      POST0900 IF NOT EQUAL
          CALL      RAFMAM1                 * record exists ?
          BRANCH    OVRCD,POST0900
          DISPLAY   *P1:24,*B,*EF,"Account Code Has Just Been Entered - ";
          CALL      HITENTER
          GOTO      POST9999
.
POST0900  PROC      CKLV0000                     * check level ok
          BRANCH    EXIT,POST9999
          PACK      KEY14,SAVLEDG,SAVACCT,SP70
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      DEFMAM1                      * delete old record (if pos)
          CALL      WRFMAM1                      * write new record
.
          IF        COPTION=1
            MOVE      "1",WAUDTYPE
            CALL      WAUD0000           * write audit record data
          ENDIF
.
          PACK      KEY26,SAVLEDG,SAVACCT,SP70
          PACK      KEY14,SAVLEDG,SAVACCT,SP70
.
POST1000  COMPARE   ONE,FMACW1ON
          GOTO      POST5000 IF NOT EQUAL        * notes active ?
.
          OPEN      FMSTMP01,FILENAM1
          PACK      KEY17,SAVLEDG,SAVACCT,SP70
          PACK      KEY14,SAVLEDG,SAVACCT,SP70
          MOVE      ZERO,F3
.
POST3000  READ      FMSTMP01,SEQ;FMUWLINE        * save wp data
          GOTO      POST4000 IF OVER
.
          ADD       ONE,F3
          PACK      KEY17,SAVLEDG,SAVACCT,F3,SP70
          UNPACK    KEY17,FMUWLEDG,FMUWACCT,FMUWLNO
          CALL      DEFMUW1                      * delete old record
          CALL      WRFMUW1                      * write new record
          GOTO      POST3000
.                                                * delete excess records
POST4000  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,POST5000               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      POST5000 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      POST4000
.
.
POST5000  
.
POST9999  RETURN
.******************************************************************************
.* DELT - Delete data                            Called by ML0000             *
.*        Returns EXIT - 1=delete not done                                    *
.******************************************************************************
DELT0000  CALL      CKTS0000             * check not in stat subj calc file
          BRANCH    EXIT,DELT9500
          CALL      SUBA0000                     * any sub accounts
          BRANCH    EXIT,DELT9500                * quit if sub accounts
          PACK      KEY17,SAVLEDG,SAVACCT,SP70   * delete user def wp data
          PACK      KEY14,SAVLEDG,SAVACCT,SP70
.
DELT1000  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,DELT5000               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      DELT5000 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      DELT1000
.
DELT5000  PACK      KEY14,SAVLEDG,SAVACCT,SP70
          CALL      DEFMAM1                 * delete old record (if possible)
          CALL      DEFMCA1                 * delete old control account record
          PACK      KEY26,SAVLEDG,SAVACCT,SP70
.
DELT6000  CALL      RSFMRF2                 * delete reporting seq records
          CALL      RKFMRF2
          BRANCH    OVRCD,DELT9000          * no more records ?
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY14
          GOTO      DELT9999 IF NOT EQUAL   * no more records ?
          CALL      DEFMRF2                 * delete old record (if possible)
          GOTO      DELT6000
.
DELT9000  MOVE      ZERO,EXIT
          GOTO      DELT9999
.
DELT9500  MOVE      ONE,EXIT
.
DELT9999  RETURN
.*****************************************************************************
. WAUD - Write Audit Record                           Called by ML0000
.    Requires - WAUDTYPE (1=write, 2=before change, 3=after change, 4=delete)
.*****************************************************************************
WAUD0000  COMPARE   ONE,FMSAUDA
          GOTO      WAUD9999 IF NOT EQUAL
          PACK      FMAMAUDD,CCC,CYY,CMM,CDD
          REP       " 0",FMAMAUDD
          CLOCK     TIME,FMAMAUDT
          MOVE      PORT,FMAMAUDP
          LOAD      FMAMAUDR,WAUDTYPE,ANSA,ANSB,ANSC,ANSD
          MOVE      ONE,FMAMAUDS
          MOVE      PASSCODE,FMAMAUDO
          PACK      KEY19,FMAMAUDD,FMAMAUDT,FMAMAUDP,FMAMAUDR
          MOVE      KEY19,SAVKEY19
          CALL      AWFMAM                       * write audit file record
WAUD9999  RETURN
.*****************************************************************************
. DAUD - Delete Before Change Audit                    Called by ML0000
.*****************************************************************************
DAUD0000  COMPARE   ONE,FMSAUDA
          GOTO      DAUD9999 IF NOT EQUAL
          MOVE      SAVKEY19,KEY19
          CALL      ADFMAM                       * write audit file record
DAUD9999  RETURN
.**********************************************************************
. TEST - Test if ledg/acct ok                    Called by SELB
.        Requires - CURLEVEL  (existing level)
.                   FMAMLEDG  (ledger)
.                   FMAMACCT  (account)
.                   FMAMTYPE  (record type)
.        Returns  - EXIT      (1=not ok)
.                   Existing variables in current fmstcfaf record
.**********************************************************************
TEST0000  MOVE      "12",CACCTIND
          CALL      CKAMA000                  * check if record has correct ind.
          BRANCH    OVRCD,TEST8100
.
          MATCH     CURLEVEL,FMAMCLEV
          GOTO      TEST8300 IF NOT LESS         * lower level ?
.
          PACK      KEY33,FMAMLEDG,FMAMACCT,SAVLEDG,SAVACCT,SP70
          CALL      RSFMTC2
          CALL      RKFMTC2
          BRANCH    OVRCD,TEST9000               * record exists ?
.
          PACK      KEY28,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY33,KEY28
          GOTO      TEST8200 IF EQUAL            * record already allocated ?
          GOTO      TEST9000
.
TEST8100  COMPARE   "3",SCRNO
          GOTO      TEST9500 IF EQUAL
          MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          MOVE      "Invalid Type",ACCTYPE
          LOAD      ACCTYPE,F1,ACCTYPE1,ACCTYPE2,ACCTYPE3,ACCTYPE4,ACCTYPE5:
                               ACCTYPE6,ACCTYPE7,ACCTYPE8,ACCTYPE9
          DISPLAY   *P1:24,*EL,*B,*+,ACCTYPE," Account Types Invalid - ";
          CALL      HITENTER
          GOTO      TEST9500
.
TEST8200  COMPARE   "3",SCRNO
          GOTO      TEST9500 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Already Allocated To This Account - ";
          CALL      HITENTER
          GOTO      TEST9500
.
TEST8300  COMPARE   "3",SCRNO
          GOTO      TEST9500 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Account Must Have A Lower Level Code - ";
          CALL      HITENTER
          GOTO      TEST9500
.
TEST9000  MOVE      ZERO,EXIT          * level ok
          GOTO      TEST9999
.
TEST9500  MOVE      ONE,EXIT           * level not ok
.
TEST9999  RETURN
.**********************************************************************
. RANB - create records for a range of subjectives    Called By MQSB
.**********************************************************************
RANB0000  MOVE      "3",SCRNO          * set up redisplays for scr B range keyin
.
RANB0010  KEYIN     *P1:22,*EF,*P1:24,"(",*V2LON:
                    "A",*HOFF,")dd Range, (",*V2LON:
                    "D",*HOFF,")elete Range, e(",*V2LON:
                    "X",*HOFF,")it : _",*P39:24,*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       "1x2x3xa1A1d2D2x3X3",ANS
          MOVE      ZERO,RANGFLAG
          MOVE      ANS,RANGFLAG
          BRANCH    RANGFLAG,RANB0015,RANB0015,RANB9999
          BEEP
          GOTO      RANB0010
.
RANB0015  LOAD      MODESC,RANGFLAG,MODESC1,MODESC2
          MOVE      SAVLEDG,FMLALEDG
          PACK      KEY2,LEDGER,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,RANB9999
          MOVE      FMLAPERS,NUMPERDS
.
          UNPACK    SP70,FROMACCT,TOACCT,TEMPDESC
          DISPLAY   *P1:22,MODESC," From Ledger/Account : ",*EF;
          MOVE      "30",CCOL
          MOVE      "22",CVERT
          CALL      KLMAFM00           * get ledger code
          BRANCH    EXIT,RANB9999,RANB9999
          MOVE      FMLALEDG,FROMLEDG
.
          COMPARE   FMLAPERS,NUMPERDS
          GOTO      RANB0100 IF EQUAL  * same number of periods ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Ledger Not Compatible With Current Ledger - ";
          CALL      HITENTER
          GOTO      RANB0000
.
RANB0100  
          DISPLAY   *P1:22,MODESC," From Ledger/Account : ":
                    *V2LON,FMLALEDG,"/",*EF;
          UNPACK    SP70,FROMACCT,TOACCT,TEMPDESC
          MOVE      "33",CCOL
          MOVE      "22",CVERT
          MOVE      "12",CACCTIND      * set for head/total/post accounts only
          CALL      KAMAFM00           * get start of range
          BRANCH    EXIT,RANB0000,RANB9999
.
          MOVE      FMAMACCT,FROMACCT
          MOVE      FMAMDESC,TEMPDESC
.
RANB0200  
          DISPLAY   *P1:22,MODESC," From Ledger/Account : ":
                    *V2LON,FMLALEDG,"/":
                    FROMACCT,*HOFF,"  ",TEMPDESC,*EL:
                    *P1:23,"       ":
                    "To   Ledger/Account : ",*V2LON,FMLALEDG,"/",*EF;
.
          MOVE      "33",CCOL
          MOVE      "23",CVERT
          MOVE      "12",CACCTIND      * set for head/total/post accounts only
          CALL      KAMAFM00           * get end of range
          BRANCH    EXIT,RANB0100,RANB9999
.
          MOVE      FMAMACCT,TOACCT
          MATCH     FROMACCT,TOACCT
          GOTO      RANB0300 IF NOT LESS
          DISPLAY   *P1:24,*B,*EL,"Illegal Range Entered - ";
          CALL      HITENTER
          GOTO      RANB0200
.
RANB0300  
          KEYIN     *P1:22,*DV,MODESC," From Ledger/Account : ":
                    *V2LON,*DV,FMLALEDG,"/":
                    *DV,FROMACCT,*HOFF,"  ",*DV,TEMPDESC,*EL:
                    *P1:23,"       ":
                    "To   Ledger/Account : ",*V2LON,*DV,FMLALEDG,"/":
                    *DV,TOACCT,*HOFF,"  ",*DV,FMAMDESC,*P21:24:
                    "  Ok (Y/N) ? ",*EF,*V2LON,ANS; * confirm if range is ok
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      RANB0400 IF EQUAL  * continue
          MATCH     "N",ANS
          GOTO      RANB0000 IF EQUAL  * rekey range
          BEEP
          GOTO      RANB0300
.
RANB0400  PACK      KEY14,FROMLEDG,FROMACCT,SP70
          CALL      RSFMAM1
          CALL      RPFMAM1
.
RANB0500  CALL      RKFMAM1                 * create records
          BRANCH    OVRCD,RANB9999          * no more records
          MATCH     FMAMLEDG,FROMLEDG
          GOTO      RANB9999 IF NOT EQUAL   * end of ledger
.
          MATCH     FMAMACCT,TOACCT
          GOTO      RANB9999 IF LESS        * past end of range
.
          DISPLAY   *P1:24,"Processing ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EL;
          BRANCH    RANGFLAG,RANB7000
.
          MOVE      FMAMTYPE,F1
          LOAD      FMTCPOST,F1,ONE,ONE,ONE,ONE,ONE,ZERO,ZERO,ONE,ZERO
          PACK      KEY33,FMAMLEDG,FMAMACCT,SAVLEDG,SAVACCT,SP70
          PACK      KEY28,FMAMLEDG,FMAMACCT,SAVLEDG,SAVACCT,SP70
          CALL      RSFMTC2
.
RANB6000  CALL      RKFMTC2
          BRANCH    OVRCD,RANB0500
          PACK      KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ,SP70
          MATCH     KEY28,KEY33
          GOTO      RANB0500 IF NOT EQUAL
          CALL      DEFMTC2                 * delete old record
          GOTO      RANB6000
.
RANB7000  
          CALL      TEST0000                * test if record ok
          BRANCH    EXIT,RANB0500
.
          MOVE      "000000",FMTCASEQ
          MOVE      ZERO,FMTCADDT
          MOVE      FMAMTYPE,F1
          LOAD      FMTCPOST,F1,ONE,ONE,ONE,ONE,ONE,ZERO,ZERO,ONE,ZERO
          PACK      KEY33,SAVLEDG,SAVACCT,FMTCASEQ,FMAMLEDG,FMAMACCT,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          CALL      RAFMTC1                 * record exists ?
          COMPARE   ONE,OVRCD
          CALL      WRFMTC1 IF EQUAL        * write new record
          GOTO      RANB0500
.
RANB9999  MOVE      "2",SCRNO          * set up redisplays for scr B data keyins
          RETURN
.**********************************************************************
.  CKCS - check if account cost centre/subj related    Called By lots
.         including consolidated cost centres
.        Requires - LEDGER, ACCOUNT
.        Returns  - OVRCD   (1=cc/subj related)
.                   RECTYPE (0=not cc/subj relt, 1=subj, 2=cc, 3=cc/subj, 4=ccc)
.**********************************************************************
CKCS0000  PACK      KEY14,LEDGER,ACCOUNT,SP70
          MOVE      "1",RECTYPE
          CALL      RDFMSA1
          COMPARE   ONE,OVRCD                    * check for subj
          GOTO      CKCS9500 IF NOT EQUAL
.
          MOVE      "2",RECTYPE
          CALL      RDFMCC1
          COMPARE   ONE,OVRCD                    * check for cc
          GOTO      CKCS9500 IF NOT EQUAL
.
          MOVE      "3",RECTYPE
          CALL      GCOD0000                     * check for subj/cc combinat'n
          PACK      KEY26,LEDGER,SUBJCODE,COSTCODE,SP70
          CALL      RDFMXC1
          COMPARE   ONE,OVRCD
          GOTO      CKCS9500 IF NOT EQUAL
.
          MOVE      "4",RECTYPE
          PACK      KEY26,LEDGER,COSTCODE,SP70
          CALL      RDFMCF1                      * check if ccc related
          COMPARE   ONE,OVRCD
          GOTO      CKCS9500 IF NOT EQUAL
.
.
CKCS9000  MOVE      ZERO,OVRCD         * continue
          MOVE      "0",RECTYPE
          GOTO      CKCS9999
.
CKCS9500  MOVE      ONE,OVRCD          * cc/subj related
.
CKCS9999  RETURN
.**********************************************************************
.  CKRS - check if record can be modified              Called By ML
.        Requires - FMSRSFAF record read
.        Returns  - EXIT     (1=invalid)
.                   RECTYPE (0=not cc/subj relt, 1=subj, 2=cc, 3=cc/subj, 4=ccc)
.**********************************************************************
CKRS0000  MOVE      ZERO,F2
          LOAD      F2,RECTYPE,FMSUUD7A,FMSUUD8A,FMSUUD8A,FMSUUD8A
          PACK      KEY2,F2,SP70
          REP       " 0",KEY2
          MATCH     KEY2,FMRFREP
          GOTO      CKRS9500 IF EQUAL  * invalid report type to modify ?
.
CKRS9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKRS9999
.
CKRS9500  MOVE      ONE,EXIT           * quit
          DISPLAY   *P1:23,*B,*EF:
                    "Only The System Has Access to Account ",*V2LON:
                    FMRFLED,SLASH,FMRFACC,*HOFF:
                    *P1:24,"for Report ",*V2LON,FMRFREP,*HOFF," - ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
          MATCH     "*",ANS
          GOTO      CKRS9000 IF EQUAL
.
CKRS9999  RETURN
.****************************************************************************
.  GCOD - get subjective and cost codes from account code    Called by lots
.        Requires - ACCOUNT   (account code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.******************************************************************************
.* SETU - write record for total account update                               *
.******************************************************************************
SETU0000  COMPARE   ONE,FMCOCALC
          GOTO      SETU9999 IF NOT EQUAL
.
          PACK      KEY14,TOTLEDG,TOTACCNT,SP70
          CALL      RDFMAM1            * account exists ?
          BRANCH    OVRCD,SETU9999
.
          PACK      KEY20,PORT,SP4,TOTLEDG,TOTACCNT
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      SETU9999 IF EQUAL
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
SETU9999  RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
RLMAFM00  BRANCH    SCRNO,RDISA000,RDISB000,RDISC000,RDISD000
          DISPLAY   *P1:4,"    Ledger               : ",*EF;
          RETURN
.
RAMAFM00  BRANCH    SCRNO,RDISA000,RDISB000,RDISC000,RDISD000
          DISPLAY   *P1:4,"    Ledger               : ",*EF:
                    *V2LON,FMLALEDG,*HOFF,SP12,FMLADESC,*EL:
                    *P1:5,"    Reporting Account    : ",*EF;
          RETURN
RLEVFM00  
RLMBFM00  
RPRCFM00  BRANCH    SCRNO,RDISA000,RDISB000,RDISC000,RDISD000,RDISE000,RDISF000
.
RDISA000  CALL      SCRA0000           * redisplay for screen A data keyins
          CALL      DISA0000
          RETURN
.
RDISB000  CALL      SCRB0000           * redisplay for screen B data keyins
          CALL      DATB0000
          DISPLAY   *P7:CVERT,*V2LON,FMLALEDG,*HOFF,SLASH:
                    *V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          RETURN
.
RDISC000  CALL      SCRB0000           * redisplay for screen B data keyins
          CALL      DATB0000
          MOVE      "3",SCRNO          * ensure still set up for range entry
          DISPLAY   *P1:22,"From Ledger/Account : ",*V2LON,FMLALEDG,SLASH,*EF;
          MATCH     FROMACCT,SP70
          GOTO      RDISC999 IF EQUAL
          DISPLAY   *V2LON,FROMACCT,*HOFF,"  ",TEMPDESC:
                    *P1:23,"       ":
                    "To   Ledger/Account : ",*V2LON,FMLALEDG,"/";
RDISC999  RETURN
.
RDISD000  CALL      SCRC0000           * redisplay for screen C data keyins
          CALL      DATC0000
          MOVE      SP70,FMLBDESC
          PACK      KEY2,SAVRPNO,SP70
          CALL      RDFMLB1
          DISPLAY   *P7:CVERT,*V2LON,SAVRPNO,*HOFF,SP2,FMLBDESC;
          RETURN
.
RDISE000  CALL      SCRD0000           * redisplay for screen D data keyins
          RETURN
.
RDISF000  CALL      SCRE0000           * redisplay for screen E data keyins
          RETURN
.
RCATFM00  
RCODFM00  
RONCFM00  
RSECFM00  
          BRANCH    SCRNO,RCODFM10,RCODFM20
.
RCODFM10  CALL      SCRA0000
          CALL      DISA0000
          GOTO      RCODFM99
.
RCODFM20  CALL      SCRB0000
          CALL      DATB0000
          GOTO      RCODFM99
.
RCODFM99  RETURN
.
          INC       FMSBPFIO/INC       * control account file
          INC       FMSCAFIO/INC       * control account file
          INC       FMSCCAIO/INC       * cost centre
          INC       FMSCODIO/INC       * codes file
          INC       FMSLEVIO/INC       * level code
          INC       FMSLMBIO/INC       * ledger report desc.
          INC       FMSONCIO/INC       * oncost
          INC       FMSPRCIO/INC       * print code
          INC       FMSRSFIO/INC       * report seq file
          INC       FMSSBAIO/INC       * subjective
          INC       FMSUWPIO/INC       * user defined wp. file
          INC       FMSCCCIO/INC
          INC       FMSSSCIO/INC
          INC       FMSXCSIO/INC       * xref file
.
          INC       FMSAMAKY           * account master file
          INC       FMSCODKY           * codes file
          INC       FMSLEVKY           * level code
          INC       FMSLMAKY           * ledger
          INC       FMSLMBKY           * ledger report desc.
          INC       FMSONCKY           * oncost
          INC       FMSPRCKY           * print code
.
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * FMS audit update routines 
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
