.*****************************************************************************
.*    Program      : F13AEDTR                                                *
.*    Description  : Conversion aaedtref to new File layout                  *
.*                                                                           *
.*    Author       : J.Tan                                                   *
.*    Date         :                                                         *
.*    Modifications: V10.13.01 19/09/2018 J.Tan  TSK 0863727                 *
.*                   Added Restrictive Override Code                         *
.*                                                                           *
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change progname  eg F57PTDOC
.  Global change logfname  eg f57ptdoc
.  Global change filefdnm  eg PATDOCFD (new layout)
.  Global change tabnamaf  eg patdoctf
.  Global change tablidx1  eg PATDOCT1
.  Global change keyxxin   eg KEY8
.  Global change keyxxout  eg KEY9
.  Global change newwrite  eg WRDOCT1
.  Global change savefile  eg sptdoctf
.
.  Global changes if Oracle Option is required -
.
.  Global Change answeryn  to Yes
.  Global change newRSstm  eg RSPTDOC1
.  Global change newRKstm  eg RKPTDOC1
.  Global change newUPstm  eg UPPTDOC1
.
.  Global changes if Oracle Option is NOT required -

.  Global Change answeryn  to No
.  Global change newRSstm  to OFDUMYIO
.  Global change newRKstm  to OFDUMYIO
.  Global change newUPstm  to OFDUMYIO
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1   IFILE    SQL, FIXED=290, KEY="U1-8,9-16,17-22"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
.DATNUMB     DIM       8          8         1      AAE NUMBER
.ATINVNO     DIM       8          8         9      (INVOICE #)
.DATTRANS    DIM       6          6        17      TRANSACTION NUMBER
.
.ATDDESC     DIM      30         30        23      DESCRIPTION
.ATPATAMT    FORM     12.2        8        53      TOTAL AMOUNT
.ATDDATE     DIM       8          8        61      DATE YYMMDD
.
.ATITEMNO    DIM       9          9        69      ITEM NUMBER
.
.ATTYPE      DIM       2          2        78      TRANSACTION TYPE PY=PAYMENTS
.                                                                  DB=CHARGE
.                                                                  xx=JOURNALS
.
.ATPAYTYP   FORM      1           2        80      PAYMENT METHOD
.                                                0 = NOT APPLICABLE
.                                                1 = CASH
.                                                2 = CHEQUE
.                                                3 = CREDIT CARD
.                                                4 = MERCHANT CARDS EG AMEX
.                                                5 = MONEY ORDER
.                                                6 = EFTPOS
.                                                7 = BPAY
.                                                8 = Virtual Terminal (HICAPS)
.                                                9 = Medicare
.ATRECEPT   DIM      12          12       82      RECEIPT NUMBER
.
.ATINVPRT   FORM      1           2       94      0=INVOICE NOT YET PRINTED
.                                                1=INVOICE PRINTED
.
.DATRECTY   DIM       1           1       96      RECORD TYPE 1 - MISC ITEM
.                                                            2 - CASH RECEIPT
.                                                            3 - JOURNALS
.                                                            4 - DEPOSITS
.                                                            5 - PROCEDURE
.
.          These next two variables are updated automatically by the
.          I/O include for each write or update
.
.ATCHGDTE   DIM       8           8       97      DATE THIS RECORD LAST CHANGED
.ATCHGTIM   DIM       8           8      105      TIME THIS RECORD LAST CHANGED
.
.ATMISGRP   DIM       3           3      113      MISCELLANEOUS GROUP
.ATDEPTYP   DIM       3           3      116      DEPOSIT TPE(BLNK IF NOT DEP)
.ATBATCHN   DIM       8           8      119      BATCH NO FOR MISC.ITMS,CSH,JRN
.
.ATPATPOR   FORM    12.2          8      127      PATIENT PORTION OF CHARGE
.ATREBPOR   FORM    12.2          8      135      REBATE PORTION OF CHARGE
.DATNINVS   DIM       1           1      143      No. of invoices to be printed
.ATSERVS    FORM      2           2      144      Number of services
.ATDTEFFD   DIM       8           8      146      Date item assigned to Fees Inv.
.ATSPARE1   FORM      1           2      154      Print Date/Time procedure on
.                                                Invoice. 1=Yes, 0=No
.ATSPARE2   FORM     12.2         8      156      Spare field
.ATDTGSTA   FORM      1           2      164      GST Applicable - 0=gst free
.                                                1-GST Payable
.                                                2-Either
.ATDTGSTC   DIM       6           6      166      GST Payable Code
.ATDTGSTM   FORM    12.2          8      172      GST Amount
.ATDTCRST   DIM       1           1      180      Credit Note Status
.                                                 0 - No Credit Note
.                                                 1 - Fully Credited
.                                                 2 - Credit by Item
.ATDTBTCH   DIM       16          16     181      Batch Details (NZ Priv Exract)
.                                                format (99999XXXCCYYMMDD)
.                                                where 99999 = G/L Batch No.
.                                                      XXX   = Hospital Code
.                                                      CCYYMMDD = Extract.date
.ATDTSUBN   DIM       3           3      197      Sub Item Number
.ATDTEDAD   DIM       10          10     200      ED Attending Doctor
.ATDTSVTM   DIM       8           8      210      Service Time (HH:MM:SS)
.ATDTSCHF   FORM      3.2         4      218      Schedule Fee
.                                                (AMA=0,MBS=0.75, 0.85)
.ATDTITYP   DIM       1           1      222      Item Type (0=MBS 1=AMA)
.ATDTRBRS   DIM       3           3      223      Rebate Reason (CAT Rr)
.ATDTPCOD   DIM       3           3      226      Payment Code (Cat Py)
.ATSPARE    DIM       61          61     229      SPARE
.
.End of Record                      290
.
.
.                                     ******** copy the new FD here *******
.
AAEDTRE1   IFILE    SQL, FIXED=357, KEY="U1-8,9-16,17-22"
AAEDTRE2   IFILE    SQL, FIXED=357, KEY="U96-96,97-104,1-8,17-22,9-16"
AAEDTRE3   IFILE    SQL, FIXED=357, KEY="U1-8,9-16,96-96,61-68,17-22"
AAEDTRE4   IFILE    SQL, FIXED=357, KEY="U9-16,96-96,1-8,17-22"
AAEDTRE5   IFILE    SQL, FIXED=357, KEY="U61-68,200-209,1-8,9-16,17-22"
AAEDTRE6   IFILE    SQL, FIXED=357, KEY="U200-209,61-68,1-8,9-16,17-22"
AAEDTRE7   IFILE    SQL, FIXED=357, KEY="U181-196,9-16,1-8,17-22"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
DATNUMB     DIM       8          8         1      AAE NUMBER
ATINVNO     DIM       8          8         9      (INVOICE #)
DATTRANS    DIM       6          6        17      TRANSACTION NUMBER
.
ATDDESC     DIM      30         30        23      DESCRIPTION
ATPATAMT    FORM     12.2        8        53      TOTAL AMOUNT
ATDDATE     DIM       8          8        61      DATE YYMMDD
.
ATITEMNO    DIM       9          9        69      ITEM NUMBER
.
ATTYPE      DIM       2          2        78      TRANSACTION TYPE PY=PAYMENTS
.                                                                  DB=CHARGE
.                                                                  xx=JOURNALS
.
ATPAYTYP   FORM      1           2        80      PAYMENT METHOD
.                                                0 = NOT APPLICABLE
.                                                1 = CASH
.                                                2 = CHEQUE
.                                                3 = CREDIT CARD
.                                                4 = MERCHANT CARDS EG AMEX
.                                                5 = MONEY ORDER
.                                                6 = EFTPOS
.                                                7 = BPAY
.                                                8 = Virtual Terminal (HICAPS)
.                                                9 = Medicare
ATRECEPT   DIM      12          12       82      RECEIPT NUMBER
.
ATINVPRT   FORM      1           2       94      0=INVOICE NOT YET PRINTED
.                                                1=INVOICE PRINTED
.
DATRECTY   DIM       1           1       96      RECORD TYPE 1 - MISC ITEM
.                                                            2 - CASH RECEIPT
.                                                            3 - JOURNALS
.                                                            4 - DEPOSITS
.                                                            5 - PROCEDURE
.
.          These next two variables are updated automatically by the
.          I/O include for each write or update
.
ATCHGDTE   DIM       8           8       97      DATE THIS RECORD LAST CHANGED
ATCHGTIM   DIM       8           8      105      TIME THIS RECORD LAST CHANGED
.
ATMISGRP   DIM       3           3      113      MISCELLANEOUS GROUP
ATDEPTYP   DIM       3           3      116      DEPOSIT TPE(BLNK IF NOT DEP)
ATBATCHN   DIM       8           8      119      BATCH NO FOR MISC.ITMS,CSH,JOUR
.
ATPATPOR   FORM    12.2          8      127      PATIENT PORTION OF CHARGE
ATREBPOR   FORM    12.2          8      135      REBATE PORTION OF CHARGE
DATNINVS   DIM       1           1      143      No. of invoices to be printed
ATSERVS    FORM      2           2      144      Number of services
ATDTEFFD   DIM       8           8      146      Date item assigned to Fees Inv.
ATSPARE1   FORM      1           2      154      Print Date/Time procedure on
.                                                Invoice. 1=Yes, 0=No
ATSPARE2   FORM     12.2         8      156      Spare field
ATDTGSTA   FORM      1           2      164      GST Applicable - 0=gst free
.                                                1-GST Payable
.                                                2-Either
ATDTGSTC   DIM       6           6      166      GST Payable Code
ATDTGSTM   FORM    12.2          8      172      GST Amount
ATDTCRST   DIM       1           1      180      Credit Note Status
.                                                 0 - No Credit Note
.                                                 1 - Fully Credited
.                                                 2 - Credit by Item
ATDTBTCH   DIM       16          16     181      Batch Details (NZ Priv Exract)
.                                                format (99999XXXCCYYMMDD)
.                                                where 99999 = G/L Batch No.
.                                                      XXX   = Hospital Code
.                                                      CCYYMMDD = Extract.date
ATDTSUBN   DIM       3           3      197      Sub Item Number
ATDTEDAD   DIM       10          10     200      ED Attending Doctor
ATDTSVTM   DIM       8           8      210      Service Time (HH:MM:SS)
ATDTSCHF   FORM      3.2         4      218      Schedule Fee
.                                                (AMA=0,MBS=0.75, 0.85)
ATDTITYP   DIM       1           1      222      Item Type (0=MBS 1=AMA)
ATDTRBRS   DIM       3           3      223      Rebate Reason (CAT Rr)
ATDTPCOD   DIM       3           3      226      Payment Code (Cat Py)
ATDTACOI   DIM       1           1      229      After Care Override Indicator
.                                                0-No
.                                                1-Yes
ATDTDSOV   DIM       1           1      230      Duplicate Service Override
.                                                0-No
.                                                1-Yes
ATDTSTXT   DIM       50          50     231      Service Text
ATDTLSPN   DIM       6           6      281      Location Specific Practice No(LSPN)
ATDTMPOV   DIM       1           1      287      Multi Procedure Override
.                                                0-No
.                                                1-Yes
ATDTNMPT   DIM       2           2      288      Number of Patients Seen
ATDTSDCD   DIM       3           3      290      Self Deem Code (Cat Sd)
ATDTTDUR   DIM       3           3      293      Time Duration (Mins)
ATDTROVR   DIM       3           3      296      Restrictive Override (Cat Ro)
.                                                Assoc.Field Position 1-2:
.                                                SP - Separate Sites
.                                                NR - Not Related (care plans)
.                                                NC - Not for Comparison
ATSPARE    DIM       58          58     299      SPARE
.
.End of Record                      357
.
.  redefine form fields from key
.  -----------------------------
. NAME     TYPE      LENGTH     START LOC.   DESCRIPTION
. ----     ----      ------     ----------   -----------
ATNUMB      FORM         8             1      AAE NUMBER
ATTRANS     FORM         6            17      TRANSACTION NUMBER
ATRECTYP    FORM         1            88      TRANSACTION TYPE
ATNINVS     FORM         1            129     No. of invoices to be printed
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION AAEDTRFD"
PRGID     INIT      "F13AEDTR"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0500:               * no
                          MAIN9000                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9000
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  MOVE      "No",USINGORC
          REP       "yYnN",USINGORC
          MOVE      USINGORC,KEY1
          REP       "Y-N-",KEY1
          MATCH     "-",KEY1
          GOTO      OPTN9200 IF NOT EQUAL
.
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
          MATCH     "Y",USINGORC
          IF        @EQUAL
            DISPLAY   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
          ENDIF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9200  DISPLAY   *P1:3,*EF,*P1:4," Oracle Option has not been set up ":
                          "correctly":
                    *P1:6," Program will terminate    - ";
          MOVE      "Oracle Option has not been set up correctly",ERORTEXT
          WRITE     LOGFILE,SEQ;*+,ERORTEXT
          CALL      HITENTER
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          MOVE      "aaedtref",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat aaedtref.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "saedtref.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat aaedtref.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "saedtref.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "aaedtref",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "saedtref",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "aaedtref",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 357 UC1-8,9-16,17-22",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC96-96,97-104,1-8,17-22,9-16",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
.kkkk
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-8,9-16,96-96,61-68,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC9-16,96-96,1-8,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC61-68,200-209,1-8,9-16,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC200-209,61-68,1-8,9-16,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC181-196,9-16,1-8,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      AAEDTRE1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY22,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.                                               * Pack key here
           PACK      ATDTACOI,SP70       * After Care Override Indicator
           PACK      ATDTDSOV,SP70       * Duplicate Service Override
           PACK      ATDTSTXT,SP70       * Service Text
           PACK      ATDTLSPN,SP70       * Location Specific Practice No(LSPN)
           PACK      ATDTMPOV,SP70       * Multi Procedure Override
           PACK      ATDTNMPT,SP70       * Number of Patients Seen
           PACK      ATDTSDCD,SP70       * Self Deem Code (Cat Sd)
           PACK      ATDTTDUR,SP70       * Time Duration (Mins)
           PACK      ATDTROVR,SP70       * Restrictive Override Code (Cat Ro)
.
          PACK      KEY22,DATNUMB,ATINVNO,DATTRANS,SP70
          CALL      WRDTRE1                     * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     AAEDTRE1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "saedtref*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat aaedtref.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  MOVE      "Error finding 'aaedtref'.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"f13aedtr.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"f13aedtr.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "AAEDTRFD"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,*EL,"Record No. :";
.
          CALL      SLOG0000                      * write start to log file
.
          OPEN      AAEDTRE1,"aaedtref"
.
          PACK      KEY22,SP70
          CALL      OFDUMYIO                      * position at start of file
OFIX0500  CALL      OFDUMYIO                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.         
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          CALL      OFDUMYIO
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     AAEDTRE1
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Update completed ",CDATE,SP1,CTIMEIS:
                    *P1:24;
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
OFIX9999  RETURN
.
OFDUMYIO  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD RESET     KEY22
         READ      OLDFILE1,KEY22;;
         RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD MOVE      ZERO,OVRCD
         READKS    OLDFILE1;DATNUMB,ATINVNO,DATTRANS,ATDDESC,ATPATAMT:
                            ATDDATE,ATITEMNO,ATTYPE,ATPAYTYP,ATRECEPT:
                            ATINVPRT,DATRECTY,ATCHGDTE,ATCHGTIM:
                            ATMISGRP,ATDEPTYP,ATBATCHN:
                            ATPATPOR,ATREBPOR,DATNINVS,ATSERVS:
                            ATDTEFFD,ATSPARE1,ATSPARE2:
                            ATDTGSTA,ATDTGSTC,ATDTGSTM:
                            ATDTCRST,ATDTBTCH,ATDTSUBN,ATDTEDAD:
                            ATDTSVTM,ATDTSCHF,ATDTITYP,ATDTRBRS:
                            ATDTPCOD,ATSPARE
.
         GOTO      OVERCOND IF OVER
         MOVE      DATNUMB,ATNUMB
         MOVE      DATTRANS,ATTRANS
         MOVE      DATRECTY,ATRECTYP
         MOVE      ONE,ATNINVS
         MOVE      DATNINVS,ATNINVS
         RETURN
.
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRDTRE1  RESET     KEY22
.
         MOVE      ATNUMB,DATNUMB
         MOVE      ATTRANS,DATTRANS
         MOVE      ATRECTYP,DATRECTY
         MOVE      ATNINVS,DATNINVS
.
         WRITE     AAEDTRE1,KEY22;DATNUMB,ATINVNO,DATTRANS,ATDDESC,ATPATAMT:
                                  ATDDATE,ATITEMNO,ATTYPE,ATPAYTYP,ATRECEPT:
                                  ATINVPRT,DATRECTY,ATCHGDTE,ATCHGTIM:
                                  ATMISGRP,ATDEPTYP,ATBATCHN:
                                  ATPATPOR,ATREBPOR,DATNINVS,ATSERVS:
                                  ATDTEFFD,ATSPARE1,ATSPARE2:
                                  ATDTGSTA,ATDTGSTC,ATDTGSTM:
                                  ATDTCRST,ATDTBTCH,ATDTSUBN,ATDTEDAD:
                                  ATDTSVTM,ATDTSCHF,ATDTITYP,ATDTRBRS:
                                  ATDTPCOD,ATDTACOI,ATDTDSOV,ATDTSTXT:
                                  ATDTLSPN,ATDTMPOV,ATDTNMPT,ATDTSDCD:
                                  ATDTTDUR,ATDTROVR,ATSPARE
         RETURN
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
          INC       STD001IO
