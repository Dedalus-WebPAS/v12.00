.*****************************************************************************
.*    Program      : F50PMPX2                                                *
.*    Description  : Conversion pmspx2af to new File layout                  *
.*                                                                           *
.*    Author       :  J.Tan                                                  *
.*    Date         :  28/02/2001                                             *
.*    Modifications:                                                         *
.*         V9.02.02  02/12/2002  Tracey Nguyen  SRF 23950                    *
.*                   Compressed all indexes                                  *
.*         V9.02.01  22/11/2002  Tracey Nguyen  SRF 23950                    *
.*                   Added conversion of audit file pmsaudpx to new file     * 
.*                   layout.                                                 *
.*****************************************************************************
.
          INC       STD001FD
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
.
CMDLINE   DIM       100
DIM60     DIM       60
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWFILE1  DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "Conversion PMSPX2FD"
PRGID     INIT      "F50PMPX2"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
.
          BRANCH    COPTION,MAIN0500,MAIN2000
.
MAIN0500  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
MAIN2000  CALL      READ0000                      * read master records 
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". CISAM":
                    *P1:6,*V2LON,TWO,*HOFF,". ORACLE"
.
OPTN0500  KEYIN     *P1:9,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:9,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000,OPTN9000    * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  CALL      DEFT0000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new PMI extension file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMA1A1,"patma1af"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMX1A1,"patmx1af"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP6000       * Original file does not exist
.
. Create the new file pmspx2af
.
          DISPLAY   *P1:24,*EL,"Creating new PMI extension file ... ":
                    "Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmspx2af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
. Create the new audit file pmsaudpx
.
          PACK      NEWFILE1,SP60
          CLEAR     NEWFILE1
          APPEND    NEWPATH,NEWFILE1
          APPEND    "pmsaudpx",NEWFILE1
          APPEND    SP60,NEWFILE1
          RESET     NEWFILE1
          SQUEEZE   NEWFILE1
.
. Build primary index for file pmspx2af
. 
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 1399 UC1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
. Build primary index for audit file pmsaudpx
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE1,CMDLINE
          APPEND    " 1424 DC1-8,9-16,17-18,19-19",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
. Open new files
.
          OPEN      PMSPX2A1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Master file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP6000  DISPLAY   *P1:24,*EL,*B,"Extension Master file not found.  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file                                     *
.**********************************************************************
.
READ0000  IF        COPTION=2
            OPEN      PATMA1A1,"patma1af"
            OPEN      PATMX1A1,"patmx1af"
            OPEN      PMSPX2A1,"pmspx2af"
          ENDIF
          DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY8,SP60
          CALL      RDSMAST1                      * position at start
READ1000  CALL      RDKMAST1                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
          PACK      KEY8,PURNO
          CALL      RAPMPX21
          COMPARE   ZERO,OVRCD
          GOTO      READ5000 IF EQUAL
.
          MOVE      PURNO,PMPXURNO
          UNPACK    SP70,PMPXRHC1,PMPXRH1G,PMPXR1GC
          UNPACK    SP70,PMPXRHC1,PMPXRH1G,PMPXR1GC
          MOVE      SP70,PMPXINTR
          UNPACK    SP70,PMPXLNG1,PMPXLNG2,PMPXLNG3
          PACK      PMPXPEML,SP70,SP70
          MOVE      SP70,PMPXEDOB
          UNPACK    SP70,PMPXCMOB
          PACK      PMPXCEML,SP70,SP70
          MOVE      SP70,PMPXCCRP
          UNPACK    SP70,PMPXKMOB
          PACK      PMPXKEML,SP70,SP70
          MOVE      SP70,PMPXKCRP
          MOVE      SP70,PMPXRMOB
          PACK      PMPXREML,SP70,SP70
          MOVE      SP70,PMPXRCRP
          MOVE      ZERO,PMPXPHEI
          MOVE      ZERO,PMPXPWEI
          UNPACK    SP70,PMPXMEDC,PMPXDETY,PMPXPRIS,PMPXCSER
          UNPACK    SP70,PMPXDREC,PMPXMSNA,PMPXMGNA
          UNPACK    SP70,PMPXMTLE
          UNPACK    SP70,PMPXMAD1,PMPXMAD2
          UNPACK    SP70,PMPXMAD3,PMPXMAD4
          UNPACK    SP70,PMPXMPOS,PMPXMPNO,PMPXMBNO,PMPXMMNO
          PACK      PMPXMEML,SP70,SP70
          UNPACK    SP70,PMPXMCNT
          MOVE      SP70,PMPXMCRP
          MOVE      SP70,PMPXMLAB
          UNPACK    SP70,PMPXMREL,PMPXFSNA,PMPXFGNA,PMPXFTLE
          UNPACK    SP70,PMPXFAD1,PMPXFAD2
          UNPACK    SP70,PMPXFAD3,PMPXFAD4
          UNPACK    SP70,PMPXFPOS,PMPXFPNO,PMPXFBNO,PMPXFMNO
          PACK      PMPXFEML,SP70,SP70
          UNPACK    SP70,PMPXFCNT
          MOVE      SP70,PMPXFCRP
          MOVE      SP70,PMPXFLAB
          UNPACK    SP70,PMPXFREL,PMPXTDIG,PMPXWBID,PMPXDVAC,PMPXPNSD
          PACK      PMPXSPAR,SP70,SP70,SP70,SP70,SP70
          UNPACK    SP70,PMPXUYN4,PMPXUYN5,PMPXUYN6
          UNPACK    SP70,PMPXABRG,PMPXPRVI,PMPXCRIN,PMPXHOML
          UNPACK    SP70,PMPXUDC1,PMPXUDC2,PMPXUDC3
          UNPACK    SP70,PMPXUSR7,PMPXUSR8,PMPXUSR9
.
          CALL      WRPMPX21
.
READ5000  IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID               * Check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT                     * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.**********************************************************************
.
ENDP0000  CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat patma1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding patma1af.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.
. I/O Includes
. ------------
.
          INC       PATMA1IO/INC
          INC       PMSPX2IO/INC
          INC       STD001IO
+
