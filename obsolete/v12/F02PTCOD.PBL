.*****************************************************************************
.*    Program      : F02PTCOD                                                *
.*    Description  : Conversion patcodes to new File layout                  *
.*                                                                           *
.*    Author       : J.Tan                                                   *
.*    Date         : 06/06/2011                                              *
.*    Modifications:                                                         *
.*        V10.03.01 14/06/2012  J.Tan         CAR 266826                     *
.*                  Fixed CISAM to upd Credit Card Surcharge amt from TCFORM6*
.*        V10.02.01 04/08/2011  J.Tan         CAR 244159                     *
.*                  Added option 2 to update credit card surcharge amount    *
.*        V10.02.00 22/07/2011  J.Tan         CAR 244159                     *
.*                  Program created                                          *
.*****************************************************************************
.
.  Global change F02PTCOD  eg F57PTDOC
.  Global change PATCODFD  eg PATDOCFD (new layout)
.  Global change patcodes  eg patdoctf
.  Global change PATCODE1  eg PATDOCT1
.  Global change KEY5    eg KEY8
.  Global change WRPTCOD1  eg WRDOCT1
.  Global change sptcodes  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
OLDFILE1   IFILE SQL, FIXED=180, KEY="U1-2,3-5"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TCODE     DIM       2          2          1       TYPE OF CODE TO TABLE
.ACODE     DIM       3          3          3       ACTUAL CODE
.
.TDESC     DIM       20        20          6       TABLE DESCRIPTION
.THCSCOD   DIM       4          4         26       HCS EQUIVALENT
.                                                  (Journal Type for Journals)
.TCFORM6   FORM      6          4         30       FORM 6 USING ANYWHERE
.TCINDC1   DIM       1          1         34       SPECIAL INDIC 1(Categ depend)
.TCINDC2   DIM       1          1         35       SPECIAL INDIC 2(Categ depend)
.TCINDC3   DIM       1          1         36       SPECIAL INDIC 3(Categ depend)
.TCINDC4   DIM       1          1         37       SPECIAL INDIC 4(Categ depend)
.TCINDC5   DIM       1          1         38       SPECIAL INDIC 5(Categ depend)
.PTCOACTV  DIM       1          1         39       ACTIVE INDICATOR,A = Active
.                                                                   I = Inactive
.TCINDC6   DIM       1          1         40       SPECIAL INDIC 6(Categ depend)
.TCINDC7   DIM       1          1         41       SPECIAL INDIC 7(Categ depend)
.TCINDC8   DIM       1          1         42       SPECIAL INDIC 8(Categ depend)
.TCINDC9   DIM       1          1         43       SPECIAL INDIC 9(Categ depend)
.TCINDC10  DIM       1          1         44       SPECIAL INDIC10(Categ depend)
.TCINDC11  DIM       1          1         45       SPECIAL INDIC11(Categ depend)
.PTCDGRPV  DIM       3          3         46       GROUPER VERSION (031 or 041)
.PTCDDEFT  DIM       1          1         49       DEFAULT CODE (0=NO 1=YES)
.PTCDNHCP  DIM       4          4         50       National HCP Equivalent
.PTCDHOSS  DIM       1          1         54       Hospital Specific Code
.                                                  (0=NO 1=YES) mltcodaf
.PTCDLDES  DIM      50         50         55       Long Description
.PTCDDFIC  DIM       6          6        105       Default Fee Information Code
.                                                  (Stationery Code - Type 3)
.TCINDC12  DIM       1          1        111       SPECIAL INDIC12(Categ depend)
.TCINDC13  DIM       1          1        112       SPECIAL INDIC13(Categ depend)
.TCINDC14  DIM       1          1        113       SPECIAL INDIC14(Categ depend)
.TCINDC15  DIM       1          1        114       SPECIAL INDIC15(Categ depend)
.TCINDC16  DIM       1          1        115       SPECIAL INDIC16(Categ depend)
.TCINDC17  DIM       1          1        116       SPECIAL INDIC17(Categ depend)
.TCINDC18  DIM       1          1        117       SPECIAL INDIC18(Categ depend)
.TCINDC19  DIM       1          1        118       SPECIAL INDIC19(Categ depend)
.TCINDC20  DIM       1          1        119       SPECIAL INDIC20(Categ depend)
.TCINDC21  DIM       1          1        120       SPECIAL INDIC21(Categ depend)
PTCDUDF1  DIM      10         10        121       Financial Election Stationery
.                                                  Template Form
.PTCDUDF2  DIM      10         10        131       User Defined Field 2
.PTCDUDF3  DIM      10         10        141       User Defined Field 3
.PTCDUDF4  DIM      10         10        151       User Defined Field 4
OLDSPARE   DIM      19         19        161       SPARE VARIABLE
.
.End of Record                          180
.
.                                     ******** copy the new FD here *******
.Data File Definition
.--------------------
.
PATCODE1   IFILE SQL, FIXED=244, KEY="U1-2,3-5"
PATCODE2   IFILE SQL, FIXED=244, KEY="U1-2,6-25,3-5"
PATCODE3   IFILE SQL, FIXED=244, KEY="U3-5,1-2"
PATCODE4   IFILE SQL, FIXED=244, KEY="U3-5,6-25,1-2"
PATCODE5   IFILE SQL, FIXED=244, KEY="U1-2,26-29,3-5"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TCODE     DIM       2          2          1       TYPE OF CODE TO TABLE
ACODE     DIM       3          3          3       ACTUAL CODE
.
TDESC     DIM       20        20          6       TABLE DESCRIPTION
THCSCOD   DIM       4          4         26       HCS EQUIVALENT
.                                                 (Journal Type for Journals)
TCFORM6   FORM      6          4         30       FORM 6 USING ANYWHERE
TCINDC1   DIM       1          1         34       SPECIAL INDIC 1 (Categ depend)
TCINDC2   DIM       1          1         35       SPECIAL INDIC 2 (Categ depend)
TCINDC3   DIM       1          1         36       SPECIAL INDIC 3 (Categ depend)
TCINDC4   DIM       1          1         37       SPECIAL INDIC 4 (Categ depend)
TCINDC5   DIM       1          1         38       SPECIAL INDIC 5 (Categ depend)
PTCOACTV  DIM       1          1         39       ACTIVE INDICATOR, A = Active
.                                                                   I = Inactive
TCINDC6   DIM       1          1         40       SPECIAL INDIC 6 (Categ depend)
TCINDC7   DIM       1          1         41       SPECIAL INDIC 7 (Categ depend)
TCINDC8   DIM       1          1         42       SPECIAL INDIC 8 (Categ depend)
TCINDC9   DIM       1          1         43       SPECIAL INDIC 9 (Categ depend)
TCINDC10  DIM       1          1         44       SPECIAL INDIC10 (Categ depend)
TCINDC11  DIM       1          1         45       SPECIAL INDIC11 (Categ depend)
PTCDGRPV  DIM       3          3         46       GROUPER VERSION (031 or 041)
PTCDDEFT  DIM       1          1         49       DEFAULT CODE (0=NO 1=YES)
PTCDNHCP  DIM       4          4         50       National HCP Equivalent
PTCDHOSS  DIM       1          1         54       Hospital Specific Code
.                                                 (0=NO 1=YES) mltcodaf
PTCDLDES  DIM      50         50         55       Long Description
PTCDDFIC  DIM       6          6        105       Default Fee Information Code
.                                                 (Stationery Code - Type 3)
TCINDC12  DIM       1          1        111       SPECIAL INDIC12 (Categ depend)
TCINDC13  DIM       1          1        112       SPECIAL INDIC13 (Categ depend)
TCINDC14  DIM       1          1        113       SPECIAL INDIC14 (Categ depend)
TCINDC15  DIM       1          1        114       SPECIAL INDIC15 (Categ depend)
TCINDC16  DIM       1          1        115       SPECIAL INDIC16 (Categ depend)
TCINDC17  DIM       1          1        116       SPECIAL INDIC17 (Categ depend)
TCINDC18  DIM       1          1        117       SPECIAL INDIC18 (Categ depend)
TCINDC19  DIM       1          1        118       SPECIAL INDIC19 (Categ depend)
TCINDC20  DIM       1          1        119       SPECIAL INDIC20 (Categ depend)
TCINDC21  DIM       1          1        120       SPECIAL INDIC21 (Categ depend)
PTCDFELC  DIM      10         10        121       Financial Election Stationery
.                                                 Template Form
PTCDUDF2  DIM      10         10        131       User Defined Field 2
PTCDUDF3  DIM      10         10        141       User Defined Field 3
PTCDUDF4  DIM      10         10        151       User Defined Field 4
PTCDCRSC  FORM      2.2        3        161       % Credit Card Surcharge
PTCDASC1  DIM       6          6        164       Associated Number 1
PTCDASC2  DIM       6          6        170       Associated Number 2
PTCDASC3  DIM       6          6        176       Associated Number 3
PTCDASC4  DIM       6          6        182       Associated Number 4
PTCDASC5  DIM       6          6        188       Associated Number 5
TCSPARE   DIM      50         50        194       SPARE VARIABLE
.End of Record                          244
.
.
.                                           * standard Fixit variables
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DIM48     DIM       48
.
INPFILE   DIM       8
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
ORACLEFL  FORM      1
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION PATCODFD"
PRGID     INIT      "F02PTCOD"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
MAIN0100  CALL      OPTN0000                      * select options
          BRANCH    EXIT,MAIN9999                 * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN0200,MAIN0500     * proceed with clean up
          GOTO      MAIN9999
.
MAIN0200  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN0500  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          COMPARE   ONE,ORACLEFL
          IF        @EQUAL
            CALL      ORED0000                     * Populate new fields
          ELSE
            CALL      READ0000                     * read old records and write
            CALL      ENDP0000                     * save/compress saved file
          ENDIF
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run fix program - CISAM ":
                    "- Build new files and populate":
                    *P1:6,*V2LON,TWO,*HOFF,". Run update program  - ORACLE ":
                    "- Populate new fields only";
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000,OPTN9100    * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          MOVE      ZERO,ORACLEFL
          GOTO      OPTN9999
.
OPTN9100  MOVE      ZERO,EXIT
          MOVE      ONE,ORACLEFL
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000  COMPARE   ONE,ORACLEFL
          IF        @EQUAL
            OPEN      PATCODE1,"patcodes"
            GOTO      PREP4500
          ENDIF
.
. open old file
          MOVE      "patcodes",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patcodes.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptcodes.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patcodes.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptcodes.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patcodes",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sptcodes",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patcodes",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 244 UC1-2,3-5",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-2,6-25,3-5",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC3-5,1-2",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC3-5,6-25,1-2",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-2,26-29,3-5",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PATCODE1,NEWFILE
.
. set the flag to say we want to continue
.
PREP4500  DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
.
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          MOVE      SP70,DIM48
          PACK      KEY5,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
          MOVE      PTCDUDF1,PTCDFELC
          MOVE      ZERO,PTCDCRSC               * % surcharge
.
          MATCH     "CR",TCODE
          GOTO      READ2000 IF NOT EQUAL         * Not Credit Card
          COMPARE   ZERO,TCFORM6
          GOTO      READ2000 IF EQUAL
.
.         Move Associated number (% Surcharge) to the PTCDCRSC
.
          MOVE      ZERO,FORM4
          MOVE      SP70,KEY4
          MOVE      TCFORM6,FORM4
          MOVE      FORM4,KEY4
          UNPACK    KEY4,DIM2,KEY2
          PACK      KEY5,DIM2,DOT,KEY2,SP70
          REP       " 0",KEY5
          MOVE      KEY5,PTCDCRSC

READ2000  UNPACK    SP70,PTCDASC1,PTCDASC2,PTCDASC3,PTCDASC4,PTCDASC5
          MOVE      SP70,TCSPARE
          PACK      KEY5,TCODE,ACODE
          CALL      WRCODE1                     * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATCODE1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               ORED0000                             *
.*             loop thru file and populate new fields                 *
.**********************************************************************
ORED0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY5,SP70
          CALL      RDSCODE1                     * position at start
ORED1000  CALL      RDKCODE1                     * read next record
          BRANCH    OVRCD,ORED6000                * no more records
          MATCH     "CR",TCODE
          GOTO      ORED1000 IF NOT EQUAL         * Not Credit Card
          COMPARE   ZERO,TCFORM6
          GOTO      ORED1000 IF EQUAL
.
.         Move Associated number (% Surcharge) to the PTCDCRSC
.
          MOVE      ZERO,PTCDCRSC
          MOVE      ZERO,FORM4 
          MOVE      SP70,KEY4  
          MOVE      TCFORM6,FORM4
          MOVE      FORM4,KEY4 
          UNPACK    KEY4,DIM2,KEY2      
          PACK      KEY5,DIM2,DOT,KEY2,SP70       
          REP       " 0",KEY5
          MOVE      KEY5,PTCDCRSC       
.
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
          CALL      UPCODE1                       * Update to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      ORED1000                      * get next record
.
ORED6000  CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
ORED9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sptcodes*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat patcodes.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'patcodes'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  RESET     KEY5
          READ      OLDFILE1,KEY5;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;TCODE,ACODE,TDESC,THCSCOD,TCFORM6:
                            TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5,PTCOACTV:
                            TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10,TCINDC11:
                            PTCDGRPV,PTCDDEFT,PTCDNHCP,PTCDHOSS,PTCDLDES:
                            PTCDDFIC,TCINDC12,TCINDC13,TCINDC14,TCINDC15:
                            TCINDC16,TCINDC17,TCINDC18,TCINDC19,TCINDC20:
                            TCINDC21,PTCDUDF1,PTCDUDF2,PTCDUDF3,PTCDUDF4:
                            OLDSPARE
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRCODE1  MOVE      ZERO,OVRCD
         RESET     KEY5
         WRITE     PATCODE1,KEY5;KEY5,TDESC,THCSCOD,TCFORM6:
                            TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5,PTCOACTV:
                            TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10,TCINDC11:
                            PTCDGRPV,PTCDDEFT,PTCDNHCP,PTCDHOSS,PTCDLDES:
                            PTCDDFIC,TCINDC12,TCINDC13,TCINDC14,TCINDC15:
                            TCINDC16,TCINDC17,TCINDC18,TCINDC19,TCINDC20:
                            TCINDC21,PTCDFELC,PTCDUDF2,PTCDUDF3,PTCDUDF4:
                            PTCDCRSC,PTCDASC1,PTCDASC2,PTCDASC3,PTCDASC4:
                            PTCDASC5,TCSPARE
          RETURN
.
UPCODE1  UPDATE     PATCODE1;TCODE,ACODE,TDESC,THCSCOD,TCFORM6:
                             TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5,PTCOACTV:
                             TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10,TCINDC11:
                             PTCDGRPV,PTCDDEFT,PTCDNHCP,PTCDHOSS,PTCDLDES:
                             PTCDDFIC,TCINDC12,TCINDC13,TCINDC14,TCINDC15:
                             TCINDC16,TCINDC17,TCINDC18,TCINDC19,TCINDC20:
                             TCINDC21,PTCDFELC,PTCDUDF2,PTCDUDF3,PTCDUDF4:
                             PTCDCRSC,PTCDASC1,PTCDASC2,PTCDASC3,PTCDASC4:
                             PTCDASC5,TCSPARE
         RETURN
.
RDSCODE1 RESET     KEY5
         READ      PATCODE1,KEY5;;
         RETURN
.
RDKCODE1 MOVE      ZERO,OVRCD
         READKS    PATCODE1;TCODE,ACODE,TDESC,THCSCOD,TCFORM6:
                            TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5,PTCOACTV:
                            TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10,TCINDC11:
                            PTCDGRPV,PTCDDEFT,PTCDNHCP,PTCDHOSS,PTCDLDES:
                            PTCDDFIC,TCINDC12,TCINDC13,TCINDC14,TCINDC15:
                            TCINDC16,TCINDC17,TCINDC18,TCINDC19,TCINDC20:
                            TCINDC21,PTCDFELC,PTCDUDF2,PTCDUDF3,PTCDUDF4:
                            PTCDCRSC,PTCDASC1,PTCDASC2,PTCDASC3,PTCDASC4:
                            PTCDASC5,TCSPARE
         GOTO      OVERCOND IF OVER
         RETURN
.
          INC       STD001IO
