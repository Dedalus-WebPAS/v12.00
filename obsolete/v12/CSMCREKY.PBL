.---------------------------------------------------------------------------
.   System    :   Accounts Payable System            
.   Include   :   APSMASKY
.   Routine   :   KCSCRA00 Keyin Creditor/Supplier Code       
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KCSCRA00  TOPIC     "CSCRCRD "
          MOVE      UNDLN70,CSCRCRD 
          KEYIN     *PCCOL:CVERT,*DV,CSCRCRD:                                   
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,CSCRCRD:                        
                    *PCCOL:CVERT,*DV,CSCRCRD 
.
          ENDSET    CSCRCRD 
          APPEND    SP70,CSCRCRD 
          RESET     CSCRCRD 
.
          MATCH     SP70,CSCRCRD 
          GOTO      KCSCRA90 IF EQUAL
.
          ENDSET    CSCRCRD 
          CMATCH    EXITCHAR,CSCRCRD 
          GOTO      KCSCRA95 IF EQUAL
.
          CMATCH    QUEST,CSCRCRD 
          GOTO      KCSCRA10 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          PROC      HCSSKA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    CSCRCRD 
          APPEND    SP70,CSCRCRD 
          RESET     CSCRCRD 
.
          MATCH     SP70,CSCRCRD 
          GOTO      KCSCRA00 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,CSCRCRD                                 
KCSCRA10
          RESET     CSCRCRD 
          PACK      KEY5,CSCRCRD                                                
          CALL      RACSCR1 
          BRANCH    OVRCD,KCSCRA80
          BRANCH    CKEYTYP,KCSCRA75
          CALL      RDCSCR1 
KCSCRA70
          MOVE      ZERO,EXIT
          GOTO      KCSCRA99
KCSCRA75  MOVE      "Creditor/Supplier Code Already Exists - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCSCRA00
KCSCRA80
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KCSCRA99,KCSCRA99
.
          MOVE      "Creditor/Supplier Code Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCSCRA00
KCSCRA90
          MOVE      ONE,EXIT
          GOTO      KCSCRA99
KCSCRA95
          MOVE      TWO,EXIT
KCSCRA99  TOPIC    PRGID
          RETURN
.------------------------------------------------------------
.
. Function : Procedure for Keyword Seach of Creditor 
.
. Created  : 02.04.97 B.G.Ackland
.
. Parameters : CKEYSUSP    1=Show Suspended Creditors
.
.------------------------------------------------------------
           DEFPROC   HCSSKA00
.
           INC       CSMSKYFD/INC
.
F12       FORM      12
F2        FORM      2
CHECKSUS  FORM      1
KEYDES60  DIM       60
SAVKEY20  DIM       22
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
SAVSUSP   FORM      1
.---------------------------------------------------------------------------
.   System    :   Supply and Inventory               
.   Include   :   CSMKCTKY
.   Routine   :   HCSSKA00 Creditor
.   Return    :           
.-------------------------------------------------------------------------------
HCSSKA00  MOVE      CKEYSUSP,SAVSUSP
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CSMSKYA1,"csmskyaf"
          TRAPCLR   IO
          IF        OVRCD=1
            BEEP
            MOVE      "ERROR: Keyword Search Table Missing (csmskyaf)- ",DISPMSG
            CALL      MESSAGE1
            GOTO      HCSSKAZZ
          ENDIF
.
          OPEN      CSMSKYA2,"csmskyaf"
          MOVE      ZERO,CSCRSIZ
.
          MOVE      "08",HTOP
          MOVE      "24",HBOT
          MOVE      "01",HLEF
          MOVE      "80",HRIG
.
HCSSKA04  CALL      GCSSK000
          BRANCH    EXIT,HCSSKA99
          MOVE      STDCOL00,STDCOL01
          ADD       " 5",STDCOL01
          DISPLAY   *PSTDCOL01:STDROW,*V2LON,*ULON,"Creditor"            
.
          MOVE      "Hide Suspended",KEY14
          IF        CKEYSUSP=1
            MOVE      "Show Suspended",KEY14
          ENDIF
          MOVE      STDCOL01,STDCOL02
          ADD       "9",STDCOL02
          DISPLAY   *PSTDCOL02:STDROW,*V2LON,*ULON,"Description",*HOFF:
                    SP2,*V2LON,*ULON,"Flags: ",KEY14
          MOVE      STDCOL02,STDCOL03
          ADD       "60",STDCOL03
          CLIP
          FLUSH     HLEF,HTOP,HRIG,HBOT
.
HCSSKA08  MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          ADD       ONE,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          ASSIGN    STDROW+1,F2
          DISPLAY   *P21:F2,*V2LON,*ULON,"Enter Key Words for":
                                         " Creditor/Supplier Search"
          ASSIGN    STDROW+3,F2
          KEYIN     *P10:F2,*V2LON,KEYWRD00
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          ENDSET    KEYWRD00
          APPEND    SP70,KEYWRD00
          RESET     KEYWRD00
          CALL      ECSSKA00     * Break Words into Seprate Fields
.
HCSSKA09  MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          MOVE      SP70,CSSKCRD 
.
          STRIP     KEYWRD01
          PACK      KEY20,KEYWRD01,SP70
          CALL      RSCSSK1 
HCSSKA10  CALL      RKCSSK1 
          BRANCH    OVRCD,HCSSKA15
          CALL      CHREC000
          BRANCH    OVRCD,HCSSKA10,HCSSKA15
.
          ADD       ONE,XITEMNO
          ADD       ONE,STDROW
          PACK      KEY20,CSSKKWD,CSSKCRD
          STORE     KEY20,XITEMNO,ST1,ST2,ST3,ST4,ST5:                           
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          DISPLAY   *PSTDCOL00:STDROW,SP1,*V2LON,XITEMNO,DOT;
          IF        CHECKSUS<>0
            DISPLAY   *V2LON,*BLINKON,"*"
          ENDIF
          DISPLAY   *PSTDCOL01:STDROW,CSSKCRD 
          DISPLAY   *PSTDCOL02:STDROW,CSCRCN1,SP1,CSCRCN2
          COMPARE   MAXITEM,XITEMNO
          GOTO      HCSSKA10 IF NOT EQUAL
.
HCSSKA15  MOVE      ONE,DITEM
          MOVE      MINITEM,DROW
          ADD       ONE,DROW
          DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,DITEM,DOT
.
HCSSKA20  CALL      SCSSK000
          BRANCH    EXIT,HCSSKA30,HCSSKA35,HCSSKA40,HCSSKA45,HCSSKA04:
                              HCSSKA91,HCSSKA08,HCSSKA70
          GOTO      HCSSKA92
.
HCSSKA30  CALL      RKCSSK1 
          BRANCH    OVRCD,HCSSKA85
          CALL      CHREC000
          BRANCH    OVRCD,HCSSKA30,HCSSKA85
.
          PACK      KEY20,CSSKKWD,CSSKCRD,SP70                                  
          CALL      RPCSSK1 
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HCSSKA10
.
HCSSKA35  MOVE      ST1,KEY20
          CALL      RDCSSK1 
.
HCSSKA36  CALL      RPCSSK1 
          BRANCH    OVRCD,HCSSKA85
          CALL      CHREC000
          BRANCH    OVRCD,HCSSKA36,HCSSKA85
          PACK      KEY20,CSSKKWD,CSSKCRD,SP70                                  
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,XITEMNO
.
HCSSKA37  CALL      RPCSSK1 
          BRANCH    OVRCD,HCSSKA38
          CALL      CHREC000
          BRANCH    OVRCD,HCSSKA37,HCSSKA38
.
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HCSSKA37 IF NOT EQUAL
.
HCSSKA38  MOVE      ZERO,XITEMNO
          GOTO      HCSSKA10
.
HCSSKA40  MOVE      ST1,KEY20
          CALL      RDCSSK1 
HCSSKA41  CALL      RPCSSK1 
          BRANCH    OVRCD,HCSSKA85
          CALL      CHREC000
          BRANCH    OVRCD,HCSSKA41,HCSSKA85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HCSSKA09
.
HCSSKA45  CALL      RKCSSK1 
          BRANCH    OVRCD,HCSSKA85
          CALL      CHREC000
          BRANCH    OVRCD,HCSSKA45,HCSSKA85
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      ZERO,XITEMNO
          PACK      KEY20,KEYWRD01,Z70                                          
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,XITEMNO
          CALL      RSCSSK1 
.
HCSSKA46  CALL      RPCSSK1 
          BRANCH    OVRCD,HCSSKA47
          CALL      CHREC000
          BRANCH    OVRCD,HCSSKA46,HCSSKA47
.
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HCSSKA46 IF NOT EQUAL
.
HCSSKA47  MOVE      ZERO,XITEMNO
          GOTO      HCSSKA10
.
HCSSKA70  CALL      FLAGS000
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HCSSKA09
.
HCSSKA85  LOAD      KEY20,XITEMNO,ST1,ST2,ST3,ST4,ST5:                           
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY20,CSSKKWD,CSSKCRD                                       
          CALL      RDCSSK1 
.
HCSSKA90  BEEP
          GOTO      HCSSKA20
.
HCSSKA91  MOVE      SP70,CSSKSPA 
          MOVE      SP70,KEY20
          MOVE      SP70,CSSKCRD 
          MOVE      SP70,CSCRCRD 
          GOTO      HCSSKA96
.
HCSSKA92  MOVE      SP70,KEY20
          MOVE      SP70,CSSKCRD 
          LOAD      KEY20,CCITEM,ST1,ST2,ST3,ST4,ST5:                           
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY20,CSSKKWD,CSSKCRD                                       
          MOVE      CSSKCRD,CSCRCRD 
.
HCSSKA96  PUTSCR    CSSCRNUM,HLEF,HTOP,HRIG,HBOT
          CALL      FRESCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
.
HCSSKA99  CLOSE     CSMSKYA1
          CLOSE     CSMSKYA2
          MOVE      SAVSUSP,CKEYSUSP
          GOTO      HCSSKAZZ     * End Procedure
.------------------------------------------------------------
. Alter Flags
.------------------------------------------------------------
FLAGS000  BOXCLR    CLEF,CTOP,CRIG,CBOT
          ASSIGN    MINITEM+2,F2
FLAGS110  MOVE      "N",ANS
          KEYIN     *PSTDCOL02:F2,"Show Suspended (",*V2LON,"Y",*HOFF,"/":
                                  *V2LON,"N",*HOFF,")    : ",*V2LON,*RV,ANS
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      FLAGS120 IF EQUAL
          MATCH     "N",ANS
          GOTO      FLAGS110 IF NOT EQUAL
          MOVE      ZERO,CKEYSUSP
          GOTO      FLAGS190
.
FLAGS120  MOVE      ONE,CKEYSUSP
.
FLAGS190  MOVE      "Hide Suspended",KEY14
          IF        CKEYSUSP=1
            MOVE      "Show Suspended",KEY14
          ENDIF
          DISPLAY   *PSTDCOL02:MINITEM,*V2LON,*ULON,"Description",*HOFF:
                    SP2,*V2LON,*ULON,"Flags: ",KEY14
          RETURN 
.------------------------------------------------------------
. Check Record
.------------------------------------------------------------
CHREC000  MATCH     KEYWRD01,CSSKKWD
          GOTO      CHREC920 IF NOT EQUAL                                       
          IF        KEYWRDNO>1
            PACK      SAVKEY20,CSSKKWD,CSSKCRD
            CALL      ECSSKB00
            BRANCH    EXIT,CHREC910
            MOVE      SAVKEY20,KEY20
            CALL      RDCSSK1
          ENDIF
          MOVE      CSSKCRD,KEY5
          CALL      RDCSCR1
          BRANCH    OVRCD,CHREC910
          ASSIGN    CSCRHIN+CSCRHOR+CSCRHCR+CSCRHPY,CHECKSUS
          COMPARE   ZERO,CHECKSUS
          GOTO      CHREC100 IF EQUAL
          COMPARE   ONE,CKEYSUSP
          GOTO      CHREC910 IF NOT EQUAL
.
CHREC100  
CHREC900  MOVE      ZERO,OVRCD
          GOTO      CHREC999
CHREC910  MOVE      ONE,OVRCD
          GOTO      CHREC999
CHREC920  MOVE      TWO,OVRCD
CHREC999  RETURN
.------------------------------------------------------------
. Break Keywords into Words
.------------------------------------------------------------
ECSSKA00  MOVE      ZERO,KEYWRDNO
          MOVE      SP70,KEYWRD01
          MOVE      SP70,KEYWRD02
          MOVE      SP70,KEYWRD03
          MOVE      SP70,KEYWRD04
          MOVE      SP70,KEYWRD05
          MOVE      SP70,KEYWRD06
          MOVE      SP70,KEYWRD07
          MOVE      SP70,KEYWRD08
          MOVE      SP70,KEYWRD09
          MOVE      SP70,KEYWRD10
ECSSKA10  CMATCH    SP1,KEYWRD00             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWRD00
            GOTO      ECSSKA10 IF NOT EOS
            GOTO      ECSSKA99               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWRD00,SP30        * reset form pointer
          MOVE      KEY60,KEYWRD00
.
          SCAN      SP1,KEYWRD00               * Locate the first blank
          GOTO      ECSSKA20 IF NOT EQUAL
          BUMP      KEYWRD00,-1              * go back 1 to end of name
          MOVEFPTR  KEYWRD00,CCITEM          * another handly form field
          RESET     KEYWRD00                 * reset the form pointer
          SETLPTR   KEYWRD00,CCITEM          * set logical length to end of name
.
.         Save this Word
.
ECSSKA20  MOVE      KEYWRD00,KEY15           
          ADD       ONE,KEYWRDNO
          REP       UPPLOW,KEY15
          STORE     KEY15,KEYWRDNO,KEYWRD01,KEYWRD02,KEYWRD03,KEYWRD04,KEYWRD05:
                                   KEYWRD06,KEYWRD07,KEYWRD08,KEYWRD09,KEYWRD10 
          GOTO      ECSSKA19
.
.         Check for any more words
.
ECSSKA19  SETLPTR   KEYWRD00,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWRD00,CCITEM        * reset to this point
          PACK      KEY60,KEYWRD00,SP30    * reset form pointer
          MOVE      KEY60,KEYWRD00
.
          GOTO      ECSSKA10
.
ECSSKA99  RETURN
.------------------------------------------------------------
. Check for Matching Words
.------------------------------------------------------------
ECSSKB00  MOVE      CSSKCRD,KEY5
          MOVE      ONE,F2
          MOVE      ZERO,EXIT
.
ECSSKB10  COMPARE   KEYWRDNO,F2
          GOTO      ECSSKB99 IF EQUAL
          ADD       ONE,F2
          LOAD      KEY15,F2,KEYWRD01,KEYWRD02,KEYWRD03,KEYWRD04,KEYWRD05:
                             KEYWRD06,KEYWRD07,KEYWRD08,KEYWRD09,KEYWRD10
          PACK      KEY20,KEY5,KEY15
          CALL      RDCSSK2
          COMPARE   ZERO,OVRCD
          GOTO      ECSSKB10 IF EQUAL
          CALL      RKCSSK2
          BRANCH    OVRCD,ECSSKB90
          MATCH     CSSKCRD,KEY5
          GOTO      ECSSKB90 IF NOT EQUAL
          STRIP     KEY15
          MATCH     CSSKKWD,KEY15
          GOTO      ECSSKB90 IF NOT EQUAL
          GOTO      ECSSKB10
.
ECSSKB90  MOVE      ONE,EXIT
ECSSKB99  RETURN
.
.------------------------------------------------------------
. Routine   : GCSSK000
.
. Function  : Initialisation for Help Screen Display.
.              - Save Screen
.              - Display Box Details
.
. Called by : All Computer Generated Help Screens
.------------------------------------------------------------
GCSSK000  
          MOVE      ZERO,EXIT
          MOVE      ONE,CSEARCH
.
          CALL      GETSCR00
          BRANCH    EXIT,GCSSK999
.
          MOVE      HTOP,CTOP
          MOVE      HLEF,CLEF
          MOVE      HBOT,CBOT
          MOVE      HRIG,CRIG
.
          ADD       TWO,CTOP       * Cxxx Clip Box Size
          ADD       ONE,CLEF
          SUB       THREE,CBOT
          SUB       ONE,CRIG
          MOVE      HBOT,MAXITEM
          SUB       HTOP,MAXITEM
          SUB       "4",MAXITEM
.
          SUSPEND
.
          BOXCLR    HLEF,HTOP,HRIG,HBOT
          BOX       16,HLEF,HTOP,HRIG,HBOT
          ADD       ONE,CBOT
          DISPLAY   *PHRIG:CBOT,*G34,*PHLEF:CBOT,*G33;
          HLINE     *G37,CBOT,CLEF,CRIG
          ADD       ONE,CBOT
.
          CLIP      1,1,CRIG,24    * Start Inside of Box Displays
.
          DISPLAY   *PCLEF:CBOT,"e",*V2LON,"X",*HOFF,"it, ex":
                                    *V2LON,"P",*HOFF,"and, ":
                                    *V2LON,"U",*HOFF,"p, ":
                                    *V2LON,"D",*HOFF,"own, ":
                                    *V2LON,"S",*HOFF,"earch, ":
                                    *V2LON,"H",*HOFF,"ome, ":
                                    *V2LON,"E",*HOFF,"nd, ":
                                    *V2LON,"R",*HOFF,"educe, ":
                                    *V2LON,"F",*HOFF,"lags ";
.exit, expand, up, down, search, home, end, reduce, view, Flags
          SUB       TWO,CBOT
.
          MOVE      HTOP,MINITEM
          ADD       ONE,MINITEM
          MOVE      MINITEM,STDROW
.
          MOVE      HLEF,STDCOL00
          ADD       ONE,STDCOL00
          DISPLAY   *PSTDCOL00:STDROW,*V2LON,*ULON,"Item"
.
GCSSK999  RETURN
.------------------------------------------------------------
. Function    : Select Option Function for Help Screens
.
. Called by   : All Computer Generated Help Screens
.
. Exit Values : 0 = Item Selected      
.               1 = Page Up
.               2 = Page Down            
.               3 = Home
.               4 = End      
.               5 = Display Screen from start
.               6 = Exit
.               7 = Search
.               8 = View
.------------------------------------------------------------
SCSSK000  MOVE      ZERO,CCITEM
          MOVE      SP2,CCITEMD
.
          KEYIN     *PCLEF:CBOT,*NOEDIT,*+,*EOFF,ANS
          GOTO      SCSSK300 IF PAGEDOWN
          GOTO      SCSSK350 IF PAGEUP
          GOTO      SCSSK400 IF HOME
          GOTO      SCSSK450 IF END
          GOTO      SCSSK500 IF RIGHT
          GOTO      SCSSK550 IF LEFT 
          GOTO      SCSSK600 IF UP
          GOTO      SCSSK650 IF DOWN
          RESET     ANS
          GOTO      SCSSK250 IF EOS
          TYPE      ANS
          GOTO      SCSSK220 IF NOT EQUAL
          MOVE      ANS,CCITEM
.
          MOVE      XITEMNO,F3
          DIV       TEN,F3
          COMPARE   CCITEM,F3          * Less than ten items on screen 
          GOTO      SCSSK210 IF LESS   * so no need to enter second character
.
          KEYIN     *PCLEF:CBOT,*NOEDIT,*+,*EOFF,ANS
          RESET     ANS
          GOTO      SCSSK210 IF EOS
          MULT      TEN,CCITEM
          MOVE      ANS,F1
          ADD       F1,CCITEM
.
SCSSK210  
          COMPARE   ONE,CCITEM
          GOTO      SCSSK900 IF LESS       * Invalid Entry
          COMPARE   CCITEM,XITEMNO
          GOTO      SCSSK900 IF LESS       * Invalid Entry
          MOVE      ZERO,EXIT
          GOTO      SCSSK999               * Item Selected
.
SCSSK220 
          REP       UPPLOW,ANS
          MATCH     SP70,ANS           * Next Item
          GOTO      SCSSK650 IF EQUAL  
          MATCH     "X",ANS             * Exit
          GOTO      SCSSK910 IF EQUAL
          MATCH     "D",ANS             * Page Down
          GOTO      SCSSK300 IF EQUAL
          MATCH     "U",ANS             * Page Up
          GOTO      SCSSK350 IF EQUAL
          MATCH     "H",ANS             * Home
          GOTO      SCSSK400 IF EQUAL
          MATCH     "E",ANS             * End
          GOTO      SCSSK450 IF EQUAL
          MATCH     "S",ANS             * Search
          GOTO      SCSSK480 IF EQUAL
          MATCH     "P",ANS             * Left  (Expand Display)
          GOTO      SCSSK500 IF EQUAL
          MATCH     "R",ANS             * Right (Reduce Display)
          GOTO      SCSSK550 IF EQUAL
          MATCH     "F",ANS             * View Creditor
          GOTO      SCSSK750 IF EQUAL
          GOTO      SCSSK900               * Invalid Entry
.
SCSSK250  
          MOVE      DITEM,CCITEM
          COMPARE   CCITEM,XITEMNO
          GOTO      SCSSK900 IF LESS       * Invalid Entry
          MOVE      ZERO,EXIT
          GOTO      SCSSK999               * Item Selected
.         
. Page Down
.
SCSSK300  MOVE      ONE,EXIT
          GOTO      SCSSK999
.
. Page Up
.
SCSSK350  MOVE      TWO,EXIT
          GOTO      SCSSK999
.
. Home
.
SCSSK400  MOVE      THREE,EXIT
          GOTO      SCSSK999
.
. End
.
SCSSK450  MOVE      FOUR,EXIT
          GOTO      SCSSK999
.
. Search
.
SCSSK480  MOVE      SEVEN,EXIT
          GOTO      SCSSK999
.
. Expand Display
.
SCSSK500  BRANCH    CSCRSIZ,SCSSK900
          MOVE      ONE,CSCRSIZ
          SUSPEND
          CALL      PUTSCR00
          MOVE      HTOP,STOP     * Save Screen Size
          MOVE      HLEF,SLEF
          MOVE      HBOT,SBOT
          MOVE      HRIG,SRIG
          MOVE      "3",HTOP      * Full Screen Display Size
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          MOVE      FIVE,EXIT     * Display Help Screen from Start
          GOTO      SCSSK999
.
.
. Reduce Display
.
SCSSK550  COMPARE   ZERO,CSCRSIZ
          GOTO      SCSSK900 IF EQUAL
          MOVE      ZERO,CSCRSIZ
          CALL      PUTSCR00
          MOVE      STOP,HTOP     * Restore Saved Screen Size
          MOVE      SLEF,HLEF
          MOVE      SBOT,HBOT
          MOVE      SRIG,HRIG
          MOVE      FIVE,EXIT     * Display Help Screen from Start
          GOTO      SCSSK999
.
. Up Arrow. Highlight Last Item
.
SCSSK600  DISPLAY   *PSTDCOL00:DROW,*V2LON,SP1,DITEM,DOT
          COMPARE   DITEM,ONE
          GOTO      SCSSK610 IF NOT EQUAL
          COMPARE   XITEMNO,ZERO
          GOTO      SCSSK620 IF EQUAL
          MOVE      XITEMNO,DITEM
          MOVE      CTOP,DROW
          ADD       XITEMNO,DROW  
          ADD       ONE,DITEM
.
SCSSK610  SUB       ONE,DITEM
          SUB       ONE,DROW
SCSSK620  DISPLAY   *PSTDCOL00:DROW,*HON,*V2LON,SP1,DITEM,DOT
          GOTO      SCSSK000
.
. Down Arrow. Highlight Next Item
.
SCSSK650  DISPLAY   *PSTDCOL00:DROW,*V2LON,SP1,DITEM,DOT
          COMPARE   DITEM,XITEMNO
          GOTO      SCSSK660 IF NOT EQUAL
          MOVE      ZERO,DITEM
          MOVE      CTOP,DROW
          SUB       ONE,DROW
.
SCSSK660  COMPARE   XITEMNO,ZERO
          GOTO      SCSSK670 IF EQUAL
          ADD       ONE,DITEM
          ADD       ONE,DROW
SCSSK670  DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,DITEM,DOT
          GOTO      SCSSK000
.
SCSSK750  MOVE      EIGHT,EXIT
          GOTO      SCSSK999               * Item Selected
.
SCSSK900  BEEP
          GOTO      SCSSK000
.
SCSSK910  MOVE      SIX,EXIT
.
SCSSK999  RETURN
.

          INC       CSMSKYIO/INC
          INC       IBAOVRIO/INC
.
HCSSKAZZ  ENDPROC   
.
