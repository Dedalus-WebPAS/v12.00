.*****************************************************************************
.*    Program      : F02MRAUD                                                *
.*    Description  : Conversion mrtaudrq to new File layout                  *
.*                                                                           *
.*    Author       : Ebon Clements                                           *
.*    Date         : 30/05/2013                                              *
.*    Modifications:                                                         *
.*        V10.03.00 30/05/2013  Ebon Clements CAR 240707                     *
.*                  Fixit for "mrtaudrq" - lengthen MRRQCOMM to DIM 50       *
.*                  Created from F02MRRQH
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
.         Old File Definition
.
OLDFILE1   IFILE    SQL, FIXED=246, KEY="D18-27,1-8,9-16,17-17"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
MRRQAUDD  DIM       8      8        1     Date of Change
MRRQAUDT  DIM       8      8        9     Time of Change
MRRQAUDR  DIM       1      1        17    Record Type
.                                         A=Added Record
.                                         B=Before Change
.                                         C=After Change
.                                         D=Deleted Record
.MRRQRQNO DIM       10     10       18    Request Number
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.MRRQRQNO  DIM       10     10       1     Request Number
.MRRQDAYE  DIM       8      8        11    Current Date
.MRRQTIYM  DIM       5      5        19    Current Time
.MRRQDTRQ  DIM       8      8        24    Date Request Required
.MRRQTMRQ  DIM       5      5        32    Time Request Required
.MRRQLOCR  DIM       4      4        37    Location Required
.MRRQPERS  DIM       35     35       41    Person Requesting Record
.MRRQMOVR  DIM       4      4        76    Movement Reason
.MRRQURGY  DIM       3      3        80    Urgency (Category QU)
OLDQCOMM  DIM       30     30       83    Comment
.MRRQHOSC  DIM       3      3        113   Hospital Code
.MRRQUSID  DIM       10     10       116   User ID
.MRRQDTUP  DIM       8      8        126   Date Record Updated
.MRRQTMUP  DIM       5      5        134   Time Record Updated
.MRRQUSUP  DIM       10     10       139   User ID updating
.MRRQEXTN  DIM       20     20       149   Extention no
.MRRQPAGE  DIM       20     20       169   Pager No
.MRRQTRIG  DIM       3      3        189   Triage Category
OLDQSPAE  DIM       37     37       192   Spare
.
.End of Record                      229
.
.
.         New File Definition
.
MRTAUDRQ   IFILE    SQL, FIXED=267, KEY="D18-27,1-8,9-16,17-17"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.MRRQAUDD  DIM       8      8        1     Date of Change
.MRRQAUDT  DIM       8      8        9     Time of Change
.MRRQAUDR  DIM       1      1        17    Record Type
.                                         A=Added Record
.                                         B=Before Change
.                                         C=After Change
.                                         D=Deleted Record
.MRRQRQNO DIM       10     10       18    Request Number
.
.Data File Definition
.--------------------      
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
MRRQRQNO  DIM       10     10       1     Request Number
MRRQDAYE  DIM       8      8        11    Current Date           (ccyymmdd)
MRRQTIYM  DIM       5      5        19    Current Time           (hh:mm)
MRRQDTRQ  DIM       8      8        24    Date Request Required  (ccyymmdd)
MRRQTMRQ  DIM       5      5        32    Time Request Required  (hh:mm)
MRRQLOCR  DIM       4      4        37    MR Required Location
MRRQPERS  DIM       35     35       41    Person Requesting Record
MRRQMOVR  DIM       4      4        76    Movement Reason
MRRQURGY  DIM       3      3        80    Urgency
MRRQCOMM  DIM       50     50       83    Request Comment
MRRQHOSC  DIM       3      3        133   MR Required Hospital Code
MRRQUSID  DIM       10     10       136   User ID
MRRQDTUP  DIM       8      8        146   Date Record Updated    (ccyymmdd)
MRRQTMUP  DIM       5      5        154   Time Record Updated    (hh:mm)
MRRQUSUP  DIM       10     10       159   User ID updating
MRRQEXTN  DIM       20     20       169   Extention no
MRRQPAGE  DIM       20     20       189   Pager No
MRRQTRIG  DIM       3      3        209   Triage Category
MRRQSPAE  DIM       38     38       212   Spare
.
.End of Record                      250
.
.
MRTLOCA4  IFILE     SQL, FIXED=165, KEY="U1-4,55-57"
.
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ------------------
MRLOCODE  DIM       4          4       1  Location Code
MRLODESC  DIM       30        30       5  Description
MRLOTYPE  DIM       3          3      35  Type (Cat LT)
MRLOINDC  DIM       1          1      38  Indicator   1 = Internal
.                                                     2 = External
MRLOSTAT  FORM      1          2      39  Status Indicator 0 = Active
.                                                          1 = Non Active
MRLOUSAG  FORM      1          2      41  Usage Indicator  0 = Not Used
.                                                          1 = Used
MRLOPRNT  DIM       6          6      43  Printer                        
MRLOSTCD  DIM       6          6      49  Stationery Code   
MRLOHOSP  DIM       3          3      55  Hospital ID (pathspaf) 
MRLOPRLC  DIM       1          1      58  Priority location (1=yes)
MRLOBPRN  DIM       6          6      59  Bulk Record Request Printer
MRLOTREC  DIM       1          1      65  Using Tracking Receipt For This
.                                         Location  0=No, 1=Yes
MRLOSPAR  DIM       99         99     66  Spare
.
.End of Record                        165
.
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DISNUM    FORM      4
DDCENT    DIM       2
.
IBCNMHOS  FORM      1                       * Multi Hospital flag
INPFILE   DIM       8
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION mrtaudrq - (MRTRQHFD)"
PRGID     INIT      "F02MRAUD"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
. 
MAIN1000  CALL      KDIR0000                      * Keyin directory 
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
.
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN    
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      "mrtaudrq",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat mrtaudrq.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "smraudrq.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat mrtaudrq.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "smraudrq.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
PREP0500  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "mrtaudrq",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "smraudrq",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "mrtaudrq",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 267 DC18-27,1-8,9-16,17-17",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
          OPEN      MRTAUDRQ,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
.
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS   * used to populate Hospital IDs
          IF        IBCNMHOS = 1
            OPEN      MRTLOCA4,"mrtlocaf"
          ENDIF
.
          PACK      KEY27,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          PACK      MRRQCOMM,OLDQCOMM,SP70
          PACK      MRRQSPAE,SP70
          IF        IBCNMHOS = 1
            MATCH     SP3,MRRQHOSC
            IF        @EQUAL
              CALL      FINDLOCS            * get Hospital IDs for each Location
            ENDIF
          ENDIF
.                                               * Pack key here
          PACK      KEY27,MRRQRQNO,MRRQAUDD,MRRQAUDT,MRRQAUDR,SP70
          CALL      ARMRRQH                     * write to new file
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     MRTAUDRQ                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P15:20,*V2LON,RECNUM
.
READ9999  RETURN
.
.**********************************************************************
.*                               FINFLOCs                             *
.*        Read through Location records to get Hospital IDs           *
.**********************************************************************
.
FINDLOCS  PACK      KEY7,MRRQLOCR,SP70
          CALL      RSMRLOC4
FINDLO10  CALL      RKMRLOC4
          BRANCH    OVRCD,FINDLO99
.
          MATCH     MRLOCODE,MRRQLOCR       * is Location = MRTRQH.Reqd Locn?
          GOTO      FINDLO99 IF NOT EQUAL
.
          MOVE      MRLOHOSP,MRRQHOSC     * set Required Hospital
.
FINDLO99  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "smraudrq*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat mrtaudrq.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'mrtaudrq'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "mrtaudrq"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:20,*EL,"Record No. :";
          OPEN      MRTAUDRQ,"mrtaudrq"
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS   * used to populate Hospital IDs
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      OFIX9999 IF NOT EQUAL        * no - finished
.
          OPEN      MRTLOCA4,"mrtlocaf"
.
          PACK      KEY27,SP70
          CALL      ASMRRQH                       * position at start of file
OFIX0500  CALL      AKMRRQH                       * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MATCH     SP3,MRRQHOSC
          GOTO      OFIX0500 IF NOT EQUAL
.
          CALL      FINDLOCS                * get Hospital IDs for each Location
.
          CALL      AUMRRQH 
.
          GOTO      OFIX0500                     * get next record
.
OFIX9000  CLOSE     MRTAUDRQ
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:24,*EL,"Update completed.  ";
          CALL      HITENTER
.
OFIX9999  RETURN
+
.*****************************************************************************
.
.         Old mrtaudrq I/O Routines
.
READSOLD  RESET     KEY27
          READ      OLDFILE1,KEY27;;
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;MRRQAUDD,MRRQAUDT,MRRQAUDR:
                        MRRQRQNO,MRRQDAYE,MRRQTIYM,MRRQDTRQ,MRRQTMRQ:
                        MRRQLOCR,MRRQPERS,MRRQMOVR,MRRQURGY,OLDQCOMM,MRRQHOSC:
                        MRRQUSID,MRRQDTUP,MRRQTMUP,MRRQUSUP,MRRQEXTN,MRRQPAGE:
                        MRRQSPAE
          GOTO      OVERCOND IF OVER
.
.         New mrtaudrq I/O routines
.
ASMRRQH   RESET     KEY27
          READ      MRTAUDRQ,KEY27;;
          RETURN
.
AKMRRQH   MOVE      ZERO,OVRCD
          READKS    MRTAUDRQ;MRRQAUDD,MRRQAUDT,MRRQAUDR:
                        MRRQRQNO,MRRQDAYE,MRRQTIYM,MRRQDTRQ,MRRQTMRQ:
                        MRRQLOCR,MRRQPERS,MRRQMOVR,MRRQURGY,MRRQCOMM,MRRQHOSC:
                        MRRQUSID,MRRQDTUP,MRRQTMUP,MRRQUSUP,MRRQEXTN,MRRQPAGE:
                        MRRQTRIG,MRRQSPAE
          GOTO      OVERCOND IF OVER
          RETURN
.
AUMRRQH   UPDATE    MRTAUDRQ;MRRQAUDD,MRRQAUDT,MRRQAUDR:
                        MRRQRQNO,MRRQDAYE,MRRQTIYM,MRRQDTRQ,MRRQTMRQ:
                        MRRQLOCR,MRRQPERS,MRRQMOVR,MRRQURGY,MRRQCOMM,MRRQHOSC:
                        MRRQUSID,MRRQDTUP,MRRQTMUP,MRRQUSUP,MRRQEXTN,MRRQPAGE:
                        MRRQTRIG,MRRQSPAE
          GOTO      UPDFLOCK IF LOCKED
          RETURN
.
ARMRRQH   RESET     KEY27
          WRITE     MRTAUDRQ,KEY27;MRRQAUDD,MRRQAUDT,MRRQAUDR:
                        MRRQRQNO,MRRQDAYE,MRRQTIYM,MRRQDTRQ,MRRQTMRQ:
                        MRRQLOCR,MRRQPERS,MRRQMOVR,MRRQURGY,MRRQCOMM,MRRQHOSC:
                        MRRQUSID,MRRQDTUP,MRRQTMUP,MRRQUSUP,MRRQEXTN,MRRQPAGE:
                        MRRQTRIG,MRRQSPAE
          RETURN
.
.
.         mrtlocaf I/O routines
.
RSMRLOC4  MOVE     ZERO,OVRCD
          RESET    KEY7
          READ     MRTLOCA4,KEY7;;
          RETURN
.
.
RKMRLOC4  MOVE     ZERO,OVRCD
          READKS   MRTLOCA4;MRLOCODE,MRLODESC,MRLOTYPE,MRLOINDC,MRLOSTAT:
                            MRLOUSAG,MRLOPRNT,MRLOSTCD,MRLOHOSP,MRLOPRLC:
                            MRLOBPRN,MRLOTREC,MRLOSPAR
          GOTO     OVERCOND IF OVER
          RETURN
.
          INC       STD001IO
