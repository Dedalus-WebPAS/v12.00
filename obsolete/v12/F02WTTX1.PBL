.*****************************************************************************
.*    Program      : F02WTTX1                                                *
.*    Description  : Conversion wattx1af to new File layout                  *
.*                                                                           *
.*    Author       : Steve Armstrong  (CAR 243296)                           *
.*    Date         : 19/05/2011                                              *
.*    Modifications:                                                         *
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
.
OLDFILE1  IFILE     SQL, FIXED=171, KEY="U1-8,9-17,18-19"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.WTTXURNO DIM       8      8        1     U/R Number
.WTTXPCOD DIM       9      9        9     Procedure Code (watproaf)
.WTTXPCNT DIM       2      2        18    Procedure Count
.WTTXPLST DIM       3      3        20    Patient List. Status (PRS/2) Cat VL
.WTTXPOWD DIM       3      3        23    Post-Op Ward (patwr1af)
.WTTXADMW DIM       3      3        26    Admitting Ward (Cat ap)
.WTTXPSTY DIM       1      1        29    Parent Staying (0=NO,1=YES)
.WTTXIDYC DIM       3      3        30    Intended Day Case (Cat XB)
.WTTXADMF DIM       3      3        33    Admission Forms (Cat XA)
.WTTXEQR1 DIM       3      3        36    Equipment Required 1 (Cat XE)
.WTTXEQR2 DIM       3      3        39    Equipment Required 2 (Cat XE)
.WTTXPAST DIM       3      3        42    Pre-Admission Status (Cat XG)
.WTTXCNSN DIM       1      1        45    Consent? (0=NO,1=YES)
.WTTXNTGP DIM       1      1        46    Notify Registered GP (0=NO,1=YES)
.WTTXPATM DIM       8      8        47    Proposed Admission Time (hh:mm:ss)
.WTTXUIDR DIM       10     10       55    User Id who  rmvd procd. (websecaf)
.WTTXLEQR DIM       3      3        65    Loan Equipment Required (Cat XO)
.WTTXDPRC DIM       9      9        68    Duplicate Procedure Code (watproaf)
.WTTXDPCN DIM       2      2        77    Duplicate Count
.WTTXCDTE DIM       8      8        79    Date Record Created (ccyymmdd)
.WTTXCTIM DIM       8      8        87    Time Record Created (hh:mm:ss)
.WTTXWEBC DIM       10     10       95    WEB User Id rec creator (websecaf)
.WTTXLUPD DIM       8      8        105   Last Update Date (ccyymmdd)
.WTTXLUPT DIM       8      8        113   Last Update Time (hh:mm:ss)
.wTTXWEBU DIM       10     10       121   WEB User Id rec. updater (websecaf)
.WTTXCTYP DIM       3      3        131   Claim Type (Cat CL)
.WTTXEQR3 DIM       3      3        134   Equipment Required 3 (Cat XE)
.WTTXPTIM DIM       8      8        137   Proposed Pre Admission Time (hh:mm:ss)
.WTTXPOTM DIM       8      8        145   Proposed Operation Time (hh:mm:ss)
.WTTXPANS DIM       3      3        153   Pre-Anaesthetic Status (Cat XH)
.WTTXPANT DIM       8      8        156   Pre-Anaesthetic Time (hh:mm:ss)
.WTTX23HR DIM       1      1        164   Planned 23 hour stay (0=No 1=Yes)
.WTTXANAE DIM       3      3        165   Anaesthetic Type (Cat OA)
OLDSPAR   DIM       3      3        168   Spare
.
.End of Record                      171
.
.
WATTX1A1   IFILE    SQL, FIXED=289, KEY="U1-8,9-17,18-19"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
WTTXURNO  DIM       8      8        1     U/R Number
WTTXPCOD  DIM       9      9        9     Procedure Code (watproaf)
WTTXPCNT  DIM       2      2        18    Procedure Count
WTTXPLST  DIM       3      3        20    Patient List. Status (PRS/2) Cat VL
WTTXPOWD  DIM       3      3        23    Post-Op Ward (patwr1af)
WTTXADMW  DIM       3      3        26    Admitting Ward (Cat ap)
WTTXPSTY  DIM       1      1        29    Parent Staying (0=NO,1=YES)
WTTXIDYC  DIM       3      3        30    Intended Day Case (Cat XB)
WTTXADMF  DIM       3      3        33    Admission Forms (Cat XA)
WTTXEQR1  DIM       3      3        36    Equipment Required 1 (Cat XE)
WTTXEQR2  DIM       3      3        39    Equipment Required 2 (Cat XE)
WTTXPAST  DIM       3      3        42    Pre-Admission Status (Cat XG)
WTTXCNSN  DIM       1      1        45    Consent? (0=NO,1=YES)
WTTXNTGP  DIM       1      1        46    Notify Registered GP (0=NO,1=YES)
WTTXPATM  DIM       8      8        47    Proposed Admission Time (hh:mm:ss)
WTTXUIDR  DIM       10     10       55    User Id who  rmvd procd. (websecaf)
WTTXLEQR  DIM       3      3        65    Loan Equipment Required (Cat XO)
WTTXDPRC  DIM       9      9        68    Duplicate Procedure Code (watproaf)
WTTXDPCN  DIM       2      2        77    Duplicate Count
WTTXCDTE  DIM       8      8        79    Date Record Created (ccyymmdd)
WTTXCTIM  DIM       8      8        87    Time Record Created (hh:mm:ss)
WTTXWEBC  DIM       10     10       95    WEB User Id rec creator (websecaf)
WTTXLUPD  DIM       8      8        105   Last Update Date (ccyymmdd)
WTTXLUPT  DIM       8      8        113   Last Update Time (hh:mm:ss)
WTTXWEBU  DIM       10     10       121   WEB User Id rec. updater (websecaf)
WTTXCTYP  DIM       3      3        131   Claim Type (Cat CL)
WTTXEQR3  DIM       3      3        134   Equipment Required 3 (Cat XE)
WTTXPTIM  DIM       8      8        137   Proposed Pre Admiss Time (hh:mm:ss)
WTTXPOTM  DIM       8      8        145   Proposed Operation Time (hh:mm:ss)
WTTXPANS  DIM       3      3        153   Pre-Anaesthetic Status (Cat XH)
WTTXPANT  DIM       8      8        156   Pre-Anaesthetic Time (hh:mm:ss)
WTTX23HR  DIM       1      1        164   Planned 23 hour stay (0=No 1=Yes)
WTTXANAE  DIM       3      3        165   Anaesthetic Type (Cat OA)
WTTXBOTY  DIM       3      3        168   Booking Type (Cat BK)
WTTXTEAM  DIM       5      5        171   Team
WTTXFUND  DIM       3      3        176   Funding Source (Cat cx)
WTTXWARD  DIM       3      3        179   Ward (patwr1af)
WTTXPREF  DIM       3      3        182   Preferred Accommodation (Cat BP)
WTTXNWHC  DIM       3      3        185   No WA Hospital Contact (Cat cw)
WTTXINTD  DIM       3      3        188   Intended Stay (Cat VI)
WTTXMAUT  DIM       1      1        191   Medical Authorisation Approved
.                                         Blank or N = No
.                                         Y = Yes
WTTXEXPD  DIM       8      8        192   Expected Delivery Date (ccyymmdd)
WTTXTCRS  DIM       3      3        200   Tertiary Care Reason (Cat WH)
WTTXDISC  DIM       9      9        203   Disaster Code (dismasaf)
WTTXRTIM  DIM       8      8        212   Removal Time (hh:mm:ss)
WTTXRCLI  DIM       10     10       220   Referring Clinician
WTTXRCLP  DIM       10     10       230   Referring Clinician Practice
WTTXSPAR  DIM       49     49       240   Spare
.
.End of Record                      289
.
.
. LOCAL VARIABLES
. ---------------
.
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DDCENT    DIM       2
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION WATTX1FD"
PRGID     INIT      "F02WTTX1"
VERSION   INIT      "V12.00.00"
.
.*****************************************************************************
.*                                MAIN0000                                   *
.*                            Program mainline                               *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN1000  CALL      PREP0000                      * prepare files
          BRANCH    EXIT,MAIN9999
.
.         Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress old file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
.         Open old file
.
PREP0000  MOVE      "wattx1af",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat wattx1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "swttx1af.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat wattx1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "swttx1af.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "wattx1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "swttx1af",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "wattx1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 289 UC1-8,9-17,18-19",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      WATTX1A1,NEWFILE
.
.         Set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY19,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
          MOVE      SP3,WTTXBOTY                  * fill new fields with spaces
          MOVE      SP5,WTTXTEAM
          MOVE      SP3,WTTXFUND
          MOVE      SP3,WTTXWARD
          MOVE      SP3,WTTXPREF
          MOVE      SP3,WTTXNWHC
          MOVE      SP3,WTTXINTD
          MOVE      SP1,WTTXMAUT
          MOVE      SP8,WTTXEXPD
          MOVE      SP3,WTTXTCRS
          MOVE      SP9,WTTXDISC
          MOVE      SP8,WTTXRTIM
          MOVE      SP10,WTTXRCLI
          MOVE      SP10,WTTXRCLP
          MOVE      SP70,WTTXSPAR
          CALL      WRWTTX11                    * write to new file
.
          IF        (RECNUM%1000) = 0 | RECNUM = 1
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     WATTX1A1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "swttx1af*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        Get the default directory                                   *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat wattx1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'wattx1af'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.*****************************************************************************
.*                            I/O Routines                                   *
.*****************************************************************************
.
.         Old file I/O's
.
READSOLD  RESET     KEY19
          READ      OLDFILE1,KEY19;;
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;WTTXURNO,WTTXPCOD,WTTXPCNT,WTTXPLST,WTTXPOWD:
                             WTTXADMW,WTTXPSTY,WTTXIDYC,WTTXADMF,WTTXEQR1:
                             WTTXEQR2,WTTXPAST,WTTXCNSN,WTTXNTGP,WTTXPATM:
                             WTTXUIDR,WTTXLEQR,WTTXDPRC,WTTXDPCN,WTTXCDTE:
                             WTTXCTIM,WTTXWEBC,WTTXLUPD,WTTXLUPT,WTTXWEBU:
                             WTTXCTYP,WTTXEQR3,WTTXPTIM,WTTXPOTM,WTTXPANS:
                             WTTXPANT,WTTX23HR,WTTXANAE,OLDSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
.         New file I/O's
.
WRWTTX11  RESET     KEY19
          WRITE     WATTX1A1,KEY19;WTTXURNO,WTTXPCOD,WTTXPCNT,WTTXPLST,WTTXPOWD:
                                   WTTXADMW,WTTXPSTY,WTTXIDYC,WTTXADMF,WTTXEQR1:
                                   WTTXEQR2,WTTXPAST,WTTXCNSN,WTTXNTGP,WTTXPATM:
                                   WTTXUIDR,WTTXLEQR,WTTXDPRC,WTTXDPCN,WTTXCDTE:
                                   WTTXCTIM,WTTXWEBC,WTTXLUPD,WTTXLUPT,WTTXWEBU:
                                   WTTXCTYP,WTTXEQR3,WTTXPTIM,WTTXPOTM,WTTXPANS:
                                   WTTXPANT,WTTX23HR,WTTXANAE,WTTXBOTY,WTTXTEAM:
                                   WTTXFUND,WTTXWARD,WTTXPREF,WTTXNWHC,WTTXINTD:
                                   WTTXMAUT,WTTXEXPD,WTTXTCRS,WTTXDISC,WTTXRTIM:
                                   WTTXRCLI,WTTXRCLP,WTTXSPAR
          RETURN
.
          INC       STD001IO
