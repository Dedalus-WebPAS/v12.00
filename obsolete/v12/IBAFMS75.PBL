. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS75                                             *
. * Desc      :   Batch Status Enquiry                                 *
. **********************************************************************
. * Date      :   30.11.1990                                           *
. * Author    :   Peter Eddey                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.B01 14.11.2000 Sandra Barcham                                *
. *           Display BAS Code                                         *
. **********************************************************************
. * VF.01.01  30.12.2000 Sandra Barcham                                *
. *           Recompiled for IBACODIO & IBAPRNIO                       *
. **********************************************************************
. * VF.00.02  17.11.1999 Sandra Barcham                                *
. *           Allow Cancelled Direct Debits                            *
. *           srf 635048                                               *
. * VF.00.01  02.11.1999 Sandra Barcham                                *
. *           Change ITEMNO to XITEMNO                                 *
. **********************************************************************
.
          INC       FMSSTDDF
.
          INC       FMSAMAFD/INC
          INC       FMSBASFD/INC
          INC       FMSBCFFD/INC
          INC       FMSCSAFD/INC
          INC       FMSCTRFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSTRNFD/INC
.
          INC       IBABATFD/INC
          INC       IBACONFD/INC
          INC       IBAPASFD/INC
.
.**********************************************************************
.*                   Data variables required                          *
.**********************************************************************
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
ACCDESC   DIM       15
ACCEND    DIM       10
ACCYEAR   DIM       4 
BASFLAG   FORM      1
CASDESC   DIM       15
CASEND    DIM       10
CASYEAR   DIM       4 
CASHFLAG  FORM      1
BATDESC   DIM       11
BCH       INIT      "bch"
BSTATUS   FORM      1
BATCHNO   FORM      5
DEBCRED   DIM       2
DM5       DIM       5
DM6       DIM       6
DM10      DIM       10
ENTRDATE  DIM       10
FORMAT    INIT      "(999,999,999,999.99 "
FILNAME   DIM       8
FMSG      INIT      "fmsg"
FMSR      INIT      "fmsr"
FMST      INIT      "fmst"
ITEM      FORM      5
ITEM01    DIM       6
ITEM02    DIM       6
ITEM03    DIM       6
ITEM04    DIM       6
ITEM05    DIM       6
ITEM06    DIM       6
ITEM07    DIM       6
ITEM08    DIM       6
ITEM09    DIM       6
ITEM10    DIM       6
ITEM11    DIM       6
ITEM12    DIM       6
ITEM13    DIM       6
ITEM14    DIM       6
ITEM15    DIM       6
ITEM16    DIM       6
ITEM17    DIM       6
ITEM18    DIM       6
MENUOPT1   FORM      1
NEXTSCRF  FORM      1
OUTFORM   DIM       20
POSTDATE  DIM       10
CASHDATE  DIM       10
PROCC01   DIM      10
PROCC02   DIM      10
PROCC03   DIM      10
PROCC04   DIM      10
PROCC05   DIM      10
PROCC06   DIM      10
PROCC07   DIM      10
PROCC08   DIM      10
PROCC09   DIM      10
PROCC10   DIM      10
PROCC11   DIM      10
PROCC12   DIM      10
PROCC13   DIM      10
PROCC14   DIM      10
PROCC15   DIM      10
PROCC16   DIM      10
PROCC17   DIM      10
PROCC18   DIM      10
RECCOUNT  FORM      2
ROW       FORM      2
SCRCOUNT  FORM      4
SCRNUMB   FORM      4
XECTOR    FORM      3
SECTOR01  FORM      3 
SECTOR02  FORM      3 
SECTOR03  FORM      3 
SECTOR04  FORM      3 
SECTOR05  FORM      3 
SECTOR06  FORM      3 
SECTOR07  FORM      3 
SECTOR08  FORM      3 
SECTOR09  FORM      3 
SECTOR10  FORM      3 
SECTOR11  FORM      3 
SECTOR12  FORM      3 
SECTOR13  FORM      3 
SECTOR14  FORM      3 
SECTOR15  FORM      3 
SECTOR16  FORM      3 
SECTOR17  FORM      3 
SECTOR18  FORM      3 
STATDESC  DIM       30
STATUS    DIM       1
VALIDFLG  FORM      1
WKDTDESC  DIM       12
WKDTPDAT  DIM       10
.
PRGID     INIT      "IBAFMS75"
PRGNAM    INIT      "Batch Status Enquiry "           
VERSION   INIT      "V12.00.00"
.**********************************************************************
.*                           ML0000                                   *
.*                    Mainline  Code                                  *
.**********************************************************************
.
ML0000    CALL      INIT0000             * initialisation
.
ML0500    CALL      MENU0000             * perform the menu
          BRANCH    MENUOPT1,ML1000,ML2000,ML2000,ML2000,ML6000
          GOTO      ML9999
.
.-----  Selected batch -----
.
ML1000    CALL      DSBS0000             * display the screen
.
          MOVE      "25",CCOL
          MOVE      "4",CVERT
          CALL      KBCFFM00             * keyin the batch number
          BRANCH    EXIT,ML0500,ML0500
.
          CALL      FORM0000             * format data for display
          BRANCH    EXIT,ML0500
          CALL      DSBD0000             * display the data
.
ML1100    CALL      DSEX0000             * display transactions or exit
          BRANCH    EXIT,ML0500
.
          CALL      TRAN0000             * handle the display of trans
          CALL      DSBS0000             * display the screen
          CALL      DSBD0000             * display the data
          GOTO      ML1100
.
.-----  Batches Awaiting Printing, Modification or Update----
.
ML2000    MOVE      ONE,SCRNUMB           
          CALL      DBHD0000             * display heading
          PACK      KEY6,STATUS,SP10
          CALL      DBAT0000             * display the batches
          BRANCH    EXIT,ML0500          * if no batches exist
.
ML2100    CALL      SNPE0000             * select item next, previous
.
          BRANCH    EXIT,ML3000,ML4000,ML5000
          GOTO      ML0500
.
ML3000    CALL      FSBD0000             * format single batch details
          BRANCH    VALIDFLG,ML2100
.
ML3050    CALL      DSBS0000             * display batch details screen
          CALL      DSBD0000             * display single basic details
.
          CALL      DSEX0000             * display  transactions or exit
          BRANCH    EXIT,ML2000
          CALL      TRAN0000             * handle the display of trans
          GOTO      ML3050               * exit selected
.
ML4000    CALL      NPAG0000             * display next page
          GOTO      ML2100
.
ML5000    CALL      PPAG0000             * display previous page
          GOTO      ML2100
.
ML6000    CALL      SRCH0000
          GOTO      ML0500
.
ML9999    CHAIN     PGM
.
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD
          DISPLAY   *P64:24,"fmsamaaf"
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmslmaaf"
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf"
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsbcfaf"
          OPEN      FMSBCFA1,"fmsbcfaf"
          OPEN      FMSBCFA2,"fmsbcfaf"
          OPEN      FMSBCFA3,"fmsbcfaf"
.
          DISPLAY   *P64:24,"ihapassf"
          OPEN      IHAPASS1,"ihapassf"
          OPEN      IHAPASS2,"ihapassf"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*107,IBCNUBAS,IBCNBSFY
.
INIT9999  RETURN

.**********************************************************************
.*                         MENU0000                                   *
.*                     Display the screen                             *
.**********************************************************************
.
MENU0000  DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,"0.",*HOFF,"  Exit":
                    *P2:5,*V2LON,"1.",*HOFF,"  Selected Batch":
                    *P2:6,*V2LON,"2.",*HOFF,"  Batches Awaiting Modification":
                    *P2:7,*V2LON,"3.",*HOFF,"  Batches Awaiting Printing":
                    *P2:8,*V2LON,"4.",*HOFF,"  Batches Awaiting Update":
                    *P2:9,*V2LON,"5.",*HOFF,"  Search by Date Entered":
                    *P1:11,"Selection : "
.
MENU1000  MOVE      ZERO,MENUOPT1
          KEYIN     *P13:11,*DV,UNDLN1:
                    *P13:11,*V2LON,MENUOPT1:
                    *P13:11,*DV,MENUOPT1
.
          COMPARE   ZERO,MENUOPT1         * exit ?
          GOTO      MENU9999 IF EQUAL
.
          BRANCH    MENUOPT1,MENU2000,MENU3000,MENU4000,MENU5000,MENU6000
.
MENU1200  BEEP
          GOTO      MENU1000
.
.
.-----   Display the option heading -----
.
MENU2000  DISPLAY   *P60:3,*V2LON,"Selected Batch   "
          MOVE      ZERO,STATUS
          GOTO      MENU9999
.
MENU3000  DISPLAY   *P60:3,*V2LON,"Awaiting Mods    "
          MOVE      ONE,STATUS
          GOTO      MENU9999
.
MENU4000  DISPLAY   *P60:3,*V2LON,"Awaiting Printing"
          MOVE      TWO,STATUS
          GOTO      MENU9999
.
MENU5000  DISPLAY   *P60:3,*V2LON,"Awaiting Update  "
          MOVE      THREE,STATUS
          GOTO      MENU9999
.
MENU6000  DISPLAY   *P60:3,*V2LON,"Search By Date   "
          MOVE      THREE,STATUS
          GOTO      MENU9999
.
MENU9999  RETURN
+
.**********************************************************************
.*                        DBAT0000                                    *
.*                  Display the sub-accounts                          *
.**********************************************************************
.
.----  The key should already be passed correctly packed -----
.
DBAT0000  DISPLAY   *P1:5,*EF
          MOVE      ZERO,RECCOUNT
          MOVE      ZERO,NEXTSCRF
          MOVE      ZERO,EXIT
          MOVE      FOUR,ROW
          CALL      CBAT0000
.
          CALL      RSFMBC2
DBAT1000  CALL      RKFMBC2
          BRANCH    OVRCD,DBAT9000
.
          MATCH     STATUS,FMBCSTA      * check for the same status
          GOTO      DBAT9000 IF NOT EQUAL
.
          ADD       ONE,RECCOUNT         * increment the record count
.
          ADD       ONE,ROW              * increment the row
.
          COMPARE   TEN9,RECCOUNT        * test for a full screen
          GOTO      DBAT8000 IF EQUAL
.
DBAT4000  CALL      SBAT0000             * store the key
.
          CALL      DISS0000             * display the record
.
          GOTO      DBAT1000
.
.----- Full screen ---
.
DBAT8000  MOVE      ONE,NEXTSCRF         * set next screen flag
          CALL      RPFMBC2              * re-set record pointer
          SUB       ONE,ROW              * re-set the row
          SUB       ONE,RECCOUNT         * re-set the record count
          GOTO      DBAT9999
.
DBAT9000  COMPARE   FOUR,ROW
          GOTO      DBAT9999 IF NOT EQUAL
          BEEP
          DISPLAY   *P1:24,*EL,"No Batches Exist - ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
DBAT9999  RETURN
.
.**********************************************************************
.*                          DISS0000                                  *
.*                Display a sub-account record                        *
.**********************************************************************
.
DISS0000  CLEAR      BATDESC
          CLEAR      ENTRDATE
          CLEAR      POSTDATE
          CLEAR      CASHDATE
.
.---- set up the batch type description ----
.
          MATCH      "CE",FMBCTRT
          GOTO       DISS0100 IF NOT EQUAL
          MOVE       "Comm. Exp. ",BATDESC
          GOTO       DISS1000
.
DISS0100  MATCH      "CR",FMBCTRT
          GOTO       DISS0200 IF NOT EQUAL
          MOVE       "Credit Note",BATDESC
          GOTO       DISS1000
.
DISS0200  MATCH      "CS",FMBCTRT
          GOTO       DISS0300 IF NOT EQUAL
          MOVE       "Cash Rec.  ",BATDESC
          GOTO       DISS1000
.
DISS0300  MATCH      "IN",FMBCTRT
          GOTO       DISS0400 IF NOT EQUAL
          MOVE       "Invoices   ",BATDESC
          GOTO       DISS1000
.
DISS0400  MATCH      "JA",FMBCTRT
          GOTO       DISS0450 IF NOT EQUAL
          MOVE       "Journals   ",BATDESC
          GOTO       DISS1000
.
DISS0450  MATCH      "JC",FMBCTRT
          GOTO       DISS0500 IF NOT EQUAL
          MOVE       "Journals   ",BATDESC
          GOTO       DISS1000
.
DISS0500  MATCH      "PY",FMBCTRT
          GOTO       DISS0600 IF NOT EQUAL
          MOVE       "Payments   ",BATDESC
          GOTO       DISS1000
.
DISS0600  MATCH      "RF",FMBCTRT
          GOTO       DISS0700 IF NOT EQUAL
          MOVE       "Refunds    ",BATDESC
          GOTO       DISS1000
.
DISS0700  MATCH      "SC",FMBCTRT
          GOTO       DISS0800 IF NOT EQUAL
          MOVE       "Supply Cred",BATDESC
          GOTO       DISS1000
.
DISS0800  MATCH      "RI",FMBCTRT
          GOTO       DISS0900 IF NOT EQUAL
          MOVE       "Reinstate. ",BATDESC
          GOTO       DISS1000
.
DISS0900  MATCH      "CJ",FMBCTRT
          GOTO       DISS0950 IF NOT EQUAL
          MOVE       "Cash Journ.",BATDESC
          GOTO       DISS1000
.
DISS0950  MATCH      "CC",FMBCTRT
          GOTO       DISS0960 IF NOT EQUAL
          MOVE       "Cancel Pay ",BATDESC
          GOTO       DISS1000
.
DISS0960  MATCH      "PP",FMBCTRT
          GOTO       DISS1000 IF NOT EQUAL
          MOVE       "Prompt Pay ",BATDESC
          GOTO       DISS1000
.
.----- set up entered date, post to date and operator description ---
.
DISS1000  UNPACK     FMBCPDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,POSTDATE
          UNPACK     FMBCCDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,CASHDATE
.
          REP        " 0",FMBCDAT
          UNPACK     FMBCDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,ENTRDATE
.
          CLEAR      SECUSER
          PACK       KEY4,FMBCUID
          CALL       RDPASS1
.
          MOVE       FORMAT,OUTFORM
          FEDIT      FMBCTOT,OUTFORM
.
          DISPLAY    *P1:ROW,*V2LON,FMBCBAT,*HOFF:
                     *P7:ROW,BATDESC,*P19:ROW,ENTRDATE:
                     *P30:ROW,POSTDATE,*P41:ROW,SECUSER:
                     *P61:ROW,OUTFORM
.
DISS9999 RETURN
          
.*********************************************************************
.*                        RBAT0000                                   *
.*                 Redsiply the sub-accounts screen                  *
.*********************************************************************
.
RBAT0000  BRANCH    SCRNUMB,RBAT3000
.
          MOVE      ONE,ITEM             * get first item
          CALL      LBAT0000
          PACK      KEY6,DM6                     
          CALL      RSFMBC2              * position in the file
.
          CALL      RPFMBC2              * read previous record
          BRANCH    OVRCD,RBAT2000         if over use spaces
.
.---- record exists so pack the key ----
.
          PACK      KEY6,FMBCSTA,FMBCBAT                    
          GOTO      RBAT5000
.
.---- over condition reached so use spaces -----
.
RBAT2000  PACK      KEY6,SP10        
          GOTO      RBAT5000
.
.----- redisplay for first screen (in case of an insert ) ----
.
RBAT3000  PACK      KEY6,STATUS,SP10               
.
.-----  redisplay the screen -----
.
RBAT5000  CALL      DBAT0000
.
RBAT9999  RETURN
.
.**********************************************************************
.*                         DBDH0000                                   *
.*                    display Batch  details heading                  *
.**********************************************************************
.
DBHD0000  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON,*ULON,"Batch":
                    *P7:4,"Batch Type ":            
                    *P19:4,"Entered   ": 
                    *P30:4,"Post to   ":    
                    *P41:4,"Operator          ":              
                    *P66:4,"   Batch Total"                   
 
DBHD9999  RETURN
.         
.
.**********************************************************************
.*                         SNPE0000                                   *
.*         This handles the select, next, previous, exit prompts      *
.**********************************************************************
.
SNPE0000  BRANCH    NEXTSCRF,SNPE5000
.
          BRANCH    SCRNUMB,SNPE1000
.
.----- Prompt is - select, previous, exit -----
.
          CALL      PSPE0000
          GOTO      SNPE9999
.
.----  Prompt is - select, exit -----
.
SNPE1000  CALL      PSEE0000
          GOTO      SNPE9999
.
	
SNPE5000  BRANCH    SCRNUMB,SNPE6000
.
.----  Prompt is - select, next, previous, exit ----
.
          CALL      PALL0000
          GOTO      SNPE9999
.
.---- Prompt is - Select, next, exit ----
.
SNPE6000  CALL      PSNE0000
          
SNPE9999  RETURN
.
.*********************************************************************
.*                         PSEE0000                                  *
.*                handles select exit prompt                         *
.*********************************************************************
.
PSEE0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PSEE1000  KEYIN     *P23:24,*DV,UNDLN5:
                    *P23:24,*V2LON,DM5:
                    *P23:24,*DV,DM5
.
          TYPE      DM5
          GOTO      PSEE8000 IF EQUAL
.
          REP       UPPLOW,DM5
          MATCH     "X    ",DM5
          GOTO      PSEE9999 IF EQUAL
.
          BEEP
          GOTO      PSEE1000
.
PSEE8000  MOVE      ONE,EXIT
.
PSEE9999  RETURN
.
.*********************************************************************
.*                         PSNE0000                                  *
.*              handles select, next, exit prompt                    *
.*********************************************************************
.
PSNE0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PSNE1000  KEYIN     *P31:24,*DV,UNDLN5:
                    *P31:24,*V2LON,DM5:
                    *P31:24,*DV,DM5
.
          TYPE      DM5
          GOTO      PSNE8000 IF EQUAL
.
          REP       UPPLOW,DM5
          MATCH     "X    ",DM5
          GOTO      PSNE9999 IF EQUAL
.
          MATCH     "N    ",DM5
          GOTO      PSNE3000 IF NOT EQUAL
. 
          MOVE      TWO,EXIT 
          ADD       ONE,SCRNUMB
.
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PSNE9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PSNE9999
PSNE3000  BEEP
          GOTO      PSNE1000
.
PSNE8000  MOVE      ONE,EXIT
.
PSNE9999  RETURN
.
.*********************************************************************
.*                        PSPE0000                                   *
.*           handles select, previous, exit prompt                   *
.*********************************************************************
.
PSPE0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PSPE1000  KEYIN     *P35:24,*DV,UNDLN5:
                    *P35:24,*V2LON,DM5:
                    *P35:24,*DV,DM5
.
          TYPE      DM5
          GOTO      PSPE8000 IF EQUAL
.
          REP       UPPLOW,DM5
          MATCH     "X    ",DM5
          GOTO      PSPE9999 IF EQUAL
.
          MATCH     "P    ",DM5
          GOTO      PSPE3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PSPE9999
PSPE3000  BEEP
          GOTO      PSPE1000
.
PSPE8000  MOVE      ONE,EXIT
.
PSPE9999  RETURN
.
.**********************************************************************
.*                         PALL0000                                   *
.*            Handles select, next, previous, exit, prompt            *
.**********************************************************************
.
PALL0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PALL1000  KEYIN     *P43:24,*DV,UNDLN5:
                    *P43:24,*V2LON,DM5:
                    *P43:24,*DV,DM5
.
          TYPE      DM5
          GOTO      PALL8000 IF EQUAL
.
          REP       UPPLOW,DM5
          MATCH     "X    ",DM5
          GOTO      PALL9999 IF EQUAL
.
          MATCH     "P    ",DM5
          GOTO      PALL3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PALL9999
PALL3000  MATCH     "N    ",DM5
          GOTO      PALL4000 IF NOT EQUAL
          MOVE      TWO,EXIT
          ADD       ONE,SCRNUMB
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PALL9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PALL9999
PALL4000  BEEP     
          GOTO      PALL1000
.
PALL8000  MOVE      ONE,EXIT
.
PALL9999  RETURN
.
.
.**********************************************************************
.*                        NPAG0000                                    *
.*               Display the next page                                *
.**********************************************************************
.
NPAG0000  MOVE      TEN8,ITEM
          CALL      LBAT0000
.
.
          PACK      KEY6,DM6
          CALL      DBAT0000
.
NPAG9999  RETURN
.
.**********************************************************************
.*                        PPAG0000                                    *
.*                Display the previous page                           *
.**********************************************************************
.
PPAG0000  MOVE      ONE,ITEM
          CALL      LBAT0000
.
          PACK      KEY6,DM6
.
          CALL      RAFMBC2
          MOVE      ZERO,ITEM
.
.-----  read no-of-lines-on-screen + 1 back ----
.
PPAG1000  CALL      RPFMBC2
          BRANCH    OVRCD,PPAG6000
          ADD       ONE,ITEM
.
          COMPARE   TEN9,ITEM
          GOTO      PPAG5000 IF EQUAL
.
          GOTO      PPAG1000
.
PPAG5000  PACK      KEY6,FMBCSTA,FMBCBAT  
          CALL      DBAT0000
          GOTO      PPAG9999
PPAG6000  PACK      KEY6,SP10       
          CALL      DBAT0000
.
PPAG9999  RETURN
.**********************************************************************
.*                         SBAT0000                                   *
.*                 Store the batch details                            *
.**********************************************************************
SBAT0000  PACK      DM6,STATUS,FMBCBAT  
          STORE     DM6,RECCOUNT,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                                   ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                                   ITEM11,ITEM12,ITEM13,ITEM14,ITEM15:
                                   ITEM16,ITEM17,ITEM18
SBAT9999  RETURN 
.
LBAT0000  LOAD      DM6,ITEM,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                               ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                               ITEM11,ITEM12,ITEM13,ITEM14,ITEM15:
                                   ITEM16,ITEM17,ITEM18
LBAT9999  RETURN
.
CBAT0000  MOVE      ZERO,ITEM
CBAT1000  ADD       ONE,ITEM
          PACK      DM6,SP20
          STORE     DM6,ITEM,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                                   ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                                   ITEM11,ITEM12,ITEM13,ITEM14,ITEM15:
                                   ITEM16,ITEM17,ITEM18
          COMPARE   TEN5,ITEM
          GOTO      CBAT9999 IF EQUAL
.
          GOTO      CBAT1000
.
CBAT9999  RETURN
.
.**********************************************************************
.*                         FSBD0000                                   *
.*                     format single batch details                    *
.**********************************************************************
.
FSBD0000  MOVE      DM5,ITEM
          MOVE      ZERO,VALIDFLG
.
          PACK      KEY6,STATUS,ITEM     * pack key
          CALL      RDFMBC2                test if exists
          BRANCH    OVRCD,FSBD9000
.
          MOVE      FMBCBAT,BATCHNO
          CALL      FORM0000             * format the data
          BRANCH    EXIT,FSBD9000
          GOTO      FSBD9999
.
FSBD9000  MOVE       ONE,VALIDFLG
          BEEP
          DISPLAY    *P1:24,*EL,"Batch Does Not Exist - ";
          CALL       HITENTER
.
FSBD9999 RETURN
.*********************************************************************
.*                         FORM0000                                  *
.*                  format the batch data                            *
.*********************************************************************
FORM0000  MOVE      FMBCSTA,FORM1
          MOVE      FMBCBAT,BATCHNO
          BRANCH    FORM1,FORM0100,FORM0200,FORM0300,FORM0400
.
          MOVE      "Batch in Use",STATDESC
          GOTO      FORM1000
.
FORM0100  MOVE      "Batch Awaiting Mods",STATDESC
          GOTO      FORM1000
.
FORM0200  MOVE      "Batch Awaiting Printing",STATDESC
          GOTO      FORM1000
.
FORM0300  MOVE      "Batch Awaiting Update",STATDESC
          GOTO      FORM1000
.
FORM0400  MOVE      "Batch Processed",STATDESC
.
FORM1000  MATCH      "CE",FMBCTRT
          GOTO       FORM1100 IF NOT EQUAL
          MOVE       "Comm. Exp. ",BATDESC
          GOTO        FORM2000
.
FORM1100  MATCH      "CR",FMBCTRT
          GOTO       FORM1200 IF NOT EQUAL
          MOVE       "Credit Note",BATDESC
          GOTO        FORM2000
.
FORM1200  MATCH      "CS",FMBCTRT
          GOTO       FORM1300 IF NOT EQUAL
          MOVE       "Cash Rec.  ",BATDESC
          GOTO        FORM2000
.
FORM1300  MATCH      "IN",FMBCTRT
          GOTO       FORM1400 IF NOT EQUAL
          MOVE       "Invoices   ",BATDESC
          GOTO        FORM2000
.
FORM1400  MATCH      "JA",FMBCTRT
          GOTO       FORM1450 IF NOT EQUAL
          MOVE       "Journals   ",BATDESC
          GOTO        FORM2000
.
FORM1450  MATCH      "JC",FMBCTRT
          GOTO       FORM1500 IF NOT EQUAL
          MOVE       "Journals   ",BATDESC
          GOTO        FORM2000
.
FORM1500  MATCH      "PY",FMBCTRT
          GOTO       FORM1600 IF NOT EQUAL
          MOVE       "Payments   ",BATDESC
          GOTO        FORM2000
.
FORM1600  MATCH      "RF",FMBCTRT
          GOTO       FORM1700 IF NOT EQUAL
          MOVE       "Refunds    ",BATDESC
          GOTO        FORM2000
.
FORM1700  MATCH      "SC",FMBCTRT
          GOTO       FORM1800 IF NOT EQUAL
          MOVE       "Supply Cred",BATDESC
          GOTO        FORM2000
.
FORM1800  MATCH      "RI",FMBCTRT
          GOTO       FORM1900 IF NOT EQUAL
          MOVE       "Reinstate. ",BATDESC
          GOTO        FORM2000
.
FORM1900  MATCH      "CJ",FMBCTRT
          GOTO       FORM1950 IF NOT EQUAL
          MOVE       "Cash Journ.",BATDESC
          GOTO       FORM2000
.
FORM1950  MATCH      "CC",FMBCTRT
          GOTO       FORM1960 IF NOT EQUAL
          MOVE       "Cancel Pay ",BATDESC
          GOTO       FORM2000
.
FORM1960  MATCH      "PP",FMBCTRT
          GOTO       FORM2000 IF NOT EQUAL
          MOVE       "Prompt Pay ",BATDESC
          GOTO       FORM2000
.
FORM2000  CLEAR      FMLALEDG
          PACK       KEY2,FMBCLED
          CALL       RDFMLA1
.
          UNPACK     FMBCPDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,POSTDATE
.
          UNPACK     FMBCCDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,CASHDATE
.
          MOVE       FMBCPDAT,WORKDATE
          PACK       KEY2,FMBCLED
          CALL       RDFMLA1
.
          CALL       CFYR0000
          BRANCH     EXIT,FORM9000
          UNPACK     PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,ACCEND
          MOVE       PERDESC,ACCDESC
          MOVE       CURYEAR,ACCYEAR
          MOVE       CURYEAR,CASYEAR
          MATCH      "CJ",FMBCTRT
          GOTO       FORM3000 IF NOT EQUAL
.
          MOVE       FMBCCDAT,WORKDATE
          CALL       CFYR0000
          BRANCH     EXIT,FORM9000
          UNPACK     PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,CASEND
          MOVE       PERDESC,CASDESC
          MOVE       CURYEAR,CASYEAR
.
FORM3000  UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",FMBCDAT
          UNPACK     FMBCDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          MOVE       CPCDATE,ENTRDATE
.
          CLEAR      SECUSER
          PACK       KEY4,FMBCUID
          CALL       RDPASS1
          MOVE       ZERO,EXIT
          GOTO       FORM9999
.
FORM9000  DISPLAY    *P1:24,*EL,*B,ERRMSG;
          CALL       HITENTER
          MOVE       ONE,EXIT
.
FORM9999  RETURN
.
.**********************************************************************
.*                        DSBS0000                                    *
.*                 display single batch screen                        *
.**********************************************************************
.
DSBS0000
          DISPLAY   *P1:4,*EF:
                    *P5:4,"Batch No          : ":
                    *P5:6,"Status            : ":
                    *P5:7,"Ledger Number     : ":
                    *P5:8,"Transaction Type  : ":
                    *P5:9,"Number of Entries : ":
                    *P5:10,"Batch Total       : ":
                    *P5:11,"Operator ID       : ":
                    *P5:12,"Date Entered      : ": 
                    *P5:13,"Post to Date      : "
DSBS9999  RETURN
.
.-----  Display the batch data -----
.
DSBD0000  MOVE      FORMAT,OUTFORM
          FEDIT     FMBCTOT,OUTFORM
.
          MOVE      FMBCSEC,F5
          SUB       "2",F5
          DISPLAY   *P25:4,*V2LON,FMBCBAT:
                    *P25:6,FMBCSTA,*HOFF,*P32:6,STATDESC:
                    *P25:7,*V2LON,FMBCLED,*HOFF,*P32:7,FMLADESC:
                    *P25:8,*V2LON,FMBCTRT,*HOFF,*P32:8,BATDESC:
                    *P25:9,*V2LON,F5:
                    *P25:10,OUTFORM:
                    *P25:11,SECUSER:
                    *P25:12,ENTRDATE:
                    *P25:13,POSTDATE,*HOFF,SP2,ACCDESC:
                    *P52:13,"Ending ",*V2LON,ACCEND 
.
          MATCH     "CJ",FMBCTRT
          GOTO      DSBD9999 IF NOT EQUAL
.
          DISPLAY   *P5:14,"Cash Post to Date : ",*V2LON:
                    *P25:14,CASHDATE,*HOFF,SP2,CASDESC:
                    *P52:14,"Ending ",*V2LON,CASEND 
.
DSBD9999  RETURN
.
.*********************************************************************
.*                         DSEX0000                                  *
.*                     display or exit                               *
.*********************************************************************
.
DSEX0000  MOVE      ZERO,EXIT
.
          DISPLAY   *P1:24,*EL:
                    "(",*V2LON,"D",*HOFF,")isplay Transactions, ":
                    "e(",*V2LON,"X",*HOFF,")it : "                  
.
DSEX1000  KEYIN     *P34:24,*DV,UNDLN1:
                    *P34:24,*V2LON,ANS:
                    *P34:24,*DV,ANS
.
          REP       UPPLOW,ANS
.
          MATCH     ANSX,ANS             * test for exit
          GOTO      DSEX9000 IF EQUAL
.
          MATCH     ANSD,ANS             * test for display
          GOTO      DSEX9999 IF EQUAL
.
          BEEP 
          GOTO      DSEX1000
.
DSEX9000  MOVE     ONE,EXIT
.
DSEX9999  RETURN
.
.**********************************************************************
.*                         TRAN0000                                   *
.*                   handle the display of transactions               *
.**********************************************************************
.
TRAN0000  MATCH     "PY",FMBCTRT
          GOTO      TRAN0100 IF EQUAL
          MATCH     "CS",FMBCTRT
          GOTO      TRAN0100 IF EQUAL
          MATCH     "CJ",FMBCTRT
          GOTO      TRAN0100 IF EQUAL
          MOVE      ZERO,CASHFLAG
          MOVE      ZERO,BASFLAG
          IF        IBCNUBAS=1
            MOVE      ONE,BASFLAG
          ENDIF
          GOTO      TRAN0500

TRAN0100  DISPLAY   *P1:24,*EL,"Display Cash Details (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") : ";
          MOVE      "24",CVERT
          MOVE      "30",CCOL
          CALL      YORN0000
          MOVE      FYESNO,CASHFLAG
          IF        CASHFLAG=1
            MOVE      ZERO,BASFLAG
          ELSE
            IF        IBCNUBAS=1
              MOVE      ONE,BASFLAG
            ENDIF
          ENDIF
.
TRAN0500  MATCH     "4",FMBCSTA
          GOTO      TRAN6000 IF EQUAL
.
          PACK      FILNAME,BCH,BATCHNO
          REP       " 0",FILNAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      BATFILE,FILNAME
          TRAPCLR   IO
          BRANCH    OVRCD,TRAN9800
          CALL      DTDH0000             * display the headings
.
          MOVE      ONE,SCRNUMB
          MOVE      TWO,XECTOR
          MOVE      TWO,BC0NXTSC       
          CALL      DTXT0000             * display the screen
.
TRAN1000  CALL      NPEX0000             * select item next, previous
.
          BRANCH    EXIT,TRAN3000,TRAN4000,TRAN5000
          GOTO      TRAN9999
.
TRAN3000  GOTO      TRAN1000
TRAN4000  CALL      NPTX0000             * display next page
          GOTO      TRAN1000
TRAN5000  CALL      PPTX0000             * display previous page
          GOTO      TRAN1000
.
TRAN6000  BRANCH    CASHFLAG,TRAN6100
          PACK      FILNAME,FMST,ACCYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FILNAME
          TRAPCLR   IO
          BRANCH    OVRCD,TRAN9800
.
          IF        IBCNUBAS=1
            MATCH     IBCNBSFY,ACCYEAR
            GOTO      TRAN6050 IF LESS
            PACK      FILNAME,FMSG,ACCYEAR
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      FMSBASA1,FILNAME
            TRAPCLR   IO
            BRANCH    OVRCD,TRAN9800
          ENDIF
          GOTO      TRAN6200
.
TRAN6050  MOVE      ZERO,BASFLAG
          GOTO      TRAN6200
.
TRAN6100  PACK      FILNAME,FMSR,CASYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FILNAME
          TRAPCLR   IO
          BRANCH    OVRCD,TRAN9800
          GOTO      TRAN6200
.
TRAN6200  CALL      DTDH0000             * display the headings
.
          MOVE      ONE,SCRNUMB
          PACK      KEY5,BATCHNO,SP10
          REP       " 0",KEY5
          PACK      KEY10,KEY5,SP10
          CALL      DTRN0000             * display the screen
.
TRAN7000  CALL      NPEX0000             * select item next, previous
.
          BRANCH    EXIT,TRAN7100,TRAN7200,TRAN7300
          GOTO      TRAN9999
.
TRAN7100  GOTO      TRAN7000
.
TRAN7200  CALL      NPPR0000             * display next page
          GOTO      TRAN7000
.
TRAN7300  CALL      PPPR0000             * display previous page
          GOTO      TRAN7000
.
TRAN9800  DISPLAY   *P1:24,*B,*EL,"ERROR in Opening File ",FILNAME," - ";
          CALL      HITENTER
.
TRAN9999  RETURN
.
.**********************************************************************
.*                        DTRN0000                                    *
.*                  Display the sub-accounts                          *
.**********************************************************************
.
.----  The key should already be passed correctly packed -----
.
DTRN0000  DISPLAY   *P1:7,*EF
          MOVE      ZERO,RECCOUNT
          MOVE      ZERO,NEXTSCRF
          MOVE      SIX,ROW
          CALL      CTRN0000
          CALL      RSFMTR1
.
DTRN1000  CALL      RKFMTR1
          BRANCH    OVRCD,DTRN9999
.
          MOVE      FMTRBAT,F5        * check if same batch      
          COMPARE   BATCHNO,F5        * check if same batch      
          GOTO      DTRN9999 IF NOT EQUAL
.
          MOVE      SP3,FMBSBASC
          IF        BASFLAG=1
            PACK      KEY10,FMTRBAT,FMTRUNIQ,SP70
            CALL      RDFMBS1
          ENDIF
.
          ADD       ONE,RECCOUNT         * increment the record count
.
          ADD       ONE,ROW              * increment the row
.
          COMPARE   TEN7,RECCOUNT        * test for a full screen
          GOTO      DTRN8000 IF EQUAL
.
DTRN4000  CALL      STRN0000             * store the key
.
          CALL      DSPR0000             * display the record
.
          GOTO      DTRN1000
.
.----- Full screen ---
.
DTRN8000  MOVE      ONE,NEXTSCRF         * set next screen flag
          CALL      RPFMTR1              * re-set record pointer
          SUB       ONE,ROW              * re-set the row
          SUB       ONE,RECCOUNT         * re-set the record count
.
DTRN9999  RETURN
.
.**********************************************************************
.*                          DSPR0000                                  *
.*                Display a sub-account record                        *
.**********************************************************************
.
DSPR0000  CLEAR     FMAMDESC
          PACK      KEY14,FMTRLEDG,FMTRACCT
          CALL      RDFMAM1
.
          MATCH     "JA",FMTRTYPE
          GOTO      DSPR1000 IF EQUAL
.
          MATCH     "PY",FMTRTYPE
          GOTO      DSPR1000 IF EQUAL
.
          MATCH     "IN",FMTRTYPE
          GOTO      DSPR1000 IF EQUAL
.
          MOVE      "Cr",DEBCRED
          GOTO      DSPR5000
DSPR1000  MOVE      "Dr",DEBCRED
DSPR5000  MOVE      FORMAT,OUTFORM
          FEDIT     FMTRAMT,OUTFORM
.
          DISPLAY   *P1:ROW,FMTRLEDG,"/",FMTRACCT,*P17:ROW,FMAMDESC:
                    *P54:ROW,FMBSBASC,*P59:ROW,DEBCRED,*P61:ROW,OUTFORM
.
DSPR9999 RETURN
          
.*********************************************************************
.*                        RTRN0000                                   *
.*                 Redsiply the sub-accounts screen                  *
.*********************************************************************
.
RTRN0000  BRANCH    SCRNUMB,RTRN3000
.
          MOVE      ONE,ITEM             * get first item
          CALL      LTRN0000
          PACK      KEY10,DM10                    
          CALL      RSFMTR1              * position in the file
.
          CALL      RPFMTR1              * read previous record
          BRANCH    OVRCD,RTRN2000         if over use spaces
.
.---- record exists so pack the key ----
.
          PACK      KEY10,FMTRBAT,FMTRUNIQ                  
          GOTO      RTRN5000
.
.---- over condition reached so use spaces -----
.
RTRN2000  PACK      KEY10,SP10        
          GOTO      RTRN5000
.
.----- redisplay for first screen (in case of an insert ) ----
.
RTRN3000  PACK      KEY10,BATCHNO,SP10
.
.-----  redisplay the screen -----
.
RTRN5000  CALL      DTRN0000
.
RTRN9999  RETURN
.
.**********************************************************************
.*                         DTDH0000                                   *
.*                    display transaction details heading             *
.**********************************************************************
.
DTDH0000  DISPLAY   *P1:6,*EF:
                    *P1:6,*V2LON,*ULON:
                    *P1:6,"Ledger/Account ":                
                    *P17:6,"Description                        "
          IF        BASFLAG=1
            DISPLAY   *P54:6,*V2LON,*ULON,"BAS"         
          ENDIF
          DISPLAY   *P58:6,*V2LON,*ULON,"D/C",*P62:6,"Transaction Amount"               
 
DTDH9999  RETURN
.         
.**********************************************************************
.*                        NPPR0000                                    *
.*               Display the next page                                *
.**********************************************************************
.
NPPR0000  MOVE      TEN6,ITEM
          CALL      LTRN0000
.
          PACK      KEY10,DM10
          CALL      DTRN0000
.
NPPR9999  RETURN
.
.**********************************************************************
.*                        PPPR0000                                    *
.*                Display the previous page                           *
.**********************************************************************
.
PPPR0000  MOVE      ONE,ITEM
          CALL      LTRN0000
.
          PACK      KEY10,DM10
.
          CALL      RAFMTR1
          MOVE      ZERO,ITEM
.
.-----  read no-of-lines-on-screen + 1 back ----
.
PPPR1000  CALL      RPFMTR1
          BRANCH    OVRCD,PPPR6000
          ADD       ONE,ITEM
.
          COMPARE   TEN7,ITEM
          GOTO      PPPR5000 IF EQUAL
.
          GOTO      PPPR1000
.
PPPR5000  PACK      KEY10,FMTRBAT,FMTRUNIQ
          CALL      DTRN0000
          GOTO      PPPR9999
PPPR6000  PACK      KEY10,SP10       
          CALL      DTRN0000
.
PPPR9999  RETURN
.**********************************************************************
.*                         STRN0000                                   *
.*                 Store the batch details                            *
.**********************************************************************
.
STRN0000  PACK      DM10,FMTRBAT,FMTRUNIQ
          STORE     DM10,RECCOUNT,PROCC01,PROCC02,PROCC03,PROCC04,PROCC05:
                                   PROCC06,PROCC07,PROCC08,PROCC09,PROCC10:
                                   PROCC11,PROCC12,PROCC13,PROCC14,PROCC15:
                                   PROCC16,PROCC17,PROCC18
STRN9999  RETURN 
.
LTRN0000  LOAD      DM10,ITEM,PROCC01,PROCC02,PROCC03,PROCC04,PROCC05:
                               PROCC06,PROCC07,PROCC08,PROCC09,PROCC10:
                               PROCC11,PROCC12,PROCC13,PROCC14,PROCC15:
                                   PROCC16,PROCC17,PROCC18
LTRN9999  RETURN
.
CTRN0000  MOVE      ZERO,ITEM 
CTRN1000  ADD       ONE,ITEM 
          PACK      DM10,SP20
          STORE     DM10,ITEM,PROCC01,PROCC02,PROCC03,PROCC04,PROCC05:
                                   PROCC06,PROCC07,PROCC08,PROCC09,PROCC10:
                                   PROCC11,PROCC12,PROCC13,PROCC14,PROCC15:
                                   PROCC16,PROCC17,PROCC18
          COMPARE   TEN5,ITEM
          GOTO      CTRN9999 IF EQUAL
.
          GOTO      CTRN1000
.
CTRN9999  RETURN
.
.**********************************************************************
.*                        DTXT0000                                    *
.*                  Display the sub-accounts                          *
.**********************************************************************
.
.----  The key should already be passed correctly packed -----
.
DTXT0000  DISPLAY   *P1:7,*EF
          MOVE      ZERO,RECCOUNT
          MOVE      ZERO,NEXTSCRF
          MOVE      SIX,ROW
          CALL      CTXT0000
.
DTXT1000  CALL      RDBATC
          GOTO      DTXT9999 IF OVER
.
          ADD       ONE,XECTOR
          MOVE      XECTOR,BC0NXTSC
.
          MATCH     "XX",BCTRAN
          GOTO      DTXT1000 IF EQUAL
          MATCH     "SI",BCTRAN
          GOTO      DTXT1000 IF EQUAL
          MATCH     "SC",BCTRAN
          GOTO      DTXT1000 IF EQUAL
.
          ADD       ONE,RECCOUNT         * increment the record count
          ADD       ONE,ROW              * increment the row
.
          COMPARE   TEN7,RECCOUNT        * test for a full screen
          GOTO      DTXT8000 IF EQUAL
.
DTXT4000  CALL      STXT0000             * store the key
.
          CALL      DSTX0000             * display the record
.
          GOTO      DTXT1000
.
.----- Full screen ---
.
DTXT8000  MOVE      ONE,NEXTSCRF         * set next screen flag
          SUB       ONE,ROW              * re-set the row
          SUB       ONE,RECCOUNT         * re-set the record count
.
DTXT9999  RETURN
.
.**********************************************************************
.*                          DSTX0000                                  8
.*                Display a sub-account record                        *
.**********************************************************************
.
DSTX0000  CLEAR     FMAMDESC
.
          BRANCH    CASHFLAG,DSTX0200
DSTX0100  PACK      KEY14,BCLEDG,BCACCT   
          CALL      RDFMAM1
          GOTO      DSTX0300
.
DSTX0200  MATCH     "CJ",FMBCTRT
          GOTO      DSTX0100 IF EQUAL
          MATCH     SP70,BCACCTP
          GOTO      DSTX0100 IF EQUAL
          MOVE      BCACCTP,BCACCT        
          GOTO      DSTX0100
.
DSTX0300  MATCH     "PY",BCTRAN  
          GOTO      DSTX1000 IF EQUAL
.
          MATCH     "JA",BCTRAN  
          GOTO      DSTX1000 IF EQUAL
.
          MATCH     "IN",BCTRAN  
          GOTO      DSTX1000 IF EQUAL
.
          MOVE      "Cr",DEBCRED
          GOTO      DSTX5000
DSTX1000  MOVE      "Dr",DEBCRED
DSTX5000  MOVE      FORMAT,OUTFORM
          FEDIT     BCAMT,OUTFORM
          DISPLAY   *P1:ROW,BCLEDG,"/",BCACCT,*P17:ROW,FMAMDESC
          IF        BASFLAG=1
            DISPLAY   *P54:ROW,BCBASC 
          ENDIF
          DISPLAY   *P59:ROW,DEBCRED,*P61:ROW,OUTFORM
.
DSTX9999 RETURN
          
.**********************************************************************
.*                        NPTX0000                                    *
.*               Display the next page                                *
.**********************************************************************
.
NPTX0000  MOVE      TEN6,ITEM
          CALL      LTXT0000
.
          MOVE      XECTOR,BC0NXTSC
          CALL      DTXT0000
.
NPTX9999  RETURN
.
.**********************************************************************
.*                        PPTX0000                                    *
.*                Display the previous page                           *
.**********************************************************************
.
PPTX0000  MOVE      ONE,ITEM
          CALL      LTXT0000
.
          SUB       TEN7,XECTOR
          MOVE      XECTOR,BC0NXTSC
          CALL      DTXT0000
.
PPTX9999  RETURN
.**********************************************************************
.*                         STXT0000                                   *
.*                 Store the batch details                            *
.**********************************************************************
STXT0000 STORE     XECTOR,RECCOUNT,SECTOR01,SECTOR02,SECTOR03,SECTOR04,SECTOR05:
                                   SECTOR06,SECTOR07,SECTOR08,SECTOR09,SECTOR10:
                                   SECTOR11,SECTOR12,SECTOR13,SECTOR14,SECTOR15:
                                   SECTOR16,SECTOR17,SECTOR18
STXT9999  RETURN 
.
LTXT0000 LOAD      XECTOR,ITEM,SECTOR01,SECTOR02,SECTOR03,SECTOR04,SECTOR05:
                               SECTOR06,SECTOR07,SECTOR08,SECTOR09,SECTOR10:
                               SECTOR11,SECTOR12,SECTOR13,SECTOR14,SECTOR15:
                                   SECTOR16,SECTOR17,SECTOR18

LTXT9999  RETURN
.
CTXT0000  MOVE      ZERO,ITEM 
CTXT1000  ADD       ONE,ITEM 
          MOVE      ZERO,FORM1 
          STORE     FORM1,ITEM,SECTOR01,SECTOR02,SECTOR03,SECTOR04,SECTOR05:
                                   SECTOR06,SECTOR07,SECTOR08,SECTOR09,SECTOR10:
                                   SECTOR11,SECTOR12,SECTOR13,SECTOR14,SECTOR15:
                                   SECTOR16,SECTOR17,SECTOR18
          COMPARE   TEN5,ITEM
          GOTO      CTXT9999 IF EQUAL
.
          GOTO      CTXT1000
.
CTXT9999  RETURN
.**********************************************************************
.*                         NPEX0000                                   *
.*         This handles the         next, previous, exit prompts      *
.**********************************************************************
NPEX0000  BRANCH    NEXTSCRF,NPEX5000
.
          BRANCH    SCRNUMB,NPEX1000
.
.----- Prompt is - select, previous, exit -----
.
          CALL      PPEX0000
          GOTO      NPEX9999
.
.----  Prompt is - select, exit -----
.
NPEX1000  CALL      PEEX0000
          GOTO      NPEX9999
.
	
NPEX5000  BRANCH    SCRNUMB,NPEX6000
.
.----  Prompt is - select, next, previous, exit ----
.
          CALL      PNPE0000
          GOTO      NPEX9999
.
.---- Prompt is - Select, next, exit ----
.
NPEX6000  CALL      PNEX0000
          
NPEX9999  RETURN
.
.*********************************************************************
.*                         PEEX0000                                  *
.*                handles select exit prompt                         *
.*********************************************************************
.
PEEX0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PEEX1000  KEYIN     *P10:24,*DV,UNDLN1:
                    *P10:24,*V2LON,DIM1:
                    *P10:24,*DV,DIM1
.
.
          REP       UPPLOW,DIM1
          MATCH     "X    ",DIM1
          GOTO      PEEX9999 IF EQUAL
.
          BEEP
          GOTO      PEEX1000
.
.
PEEX9999  RETURN
.
.*********************************************************************
.*                         PNEX0000                                  *
.*              handles select, next, exit prompt                    *
.*********************************************************************
.
PNEX0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PNEX1000  KEYIN     *P18:24,*DV,UNDLN1:
                    *P18:24,*V2LON,DIM1:
                    *P18:24,*DV,DIM1
.
          REP       UPPLOW,DIM1
          MATCH     "X",DIM1
          GOTO      PNEX9999 IF EQUAL
.
          MATCH     "N",DIM1
          GOTO      PNEX3000 IF NOT EQUAL
. 
          MOVE      TWO,EXIT 
          ADD       ONE,SCRNUMB
.
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PNEX9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PNEX9999
PNEX3000  BEEP
          GOTO      PNEX1000
.
.
PNEX9999  RETURN
.
.*********************************************************************
.*                        PPEX0000                                   *
.*           handles select, previous, exit prompt                   *
.*********************************************************************
.
PPEX0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PPEX1000  KEYIN     *P22:24,*DV,UNDLN1:
                    *P22:24,*V2LON,DIM1:
                    *P22:24,*DV,DIM1
.
          REP       UPPLOW,DIM1
          MATCH     "X",DIM1
          GOTO      PPEX9999 IF EQUAL
.
          MATCH     "P",DIM1
          GOTO      PPEX3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PPEX9999
PPEX3000  BEEP
          GOTO      PPEX1000
.
PPEX9999  RETURN
.
.**********************************************************************
.*                         PNPE0000                                   *
.*            Handles select, next, previous, exit, prompt            *
.**********************************************************************
.
PNPE0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PNPE1000  KEYIN     *P30:24,*DV,UNDLN1:
                    *P30:24,*V2LON,DIM1:
                    *P30:24,*DV,DIM1
.
          REP       UPPLOW,DIM1
          MATCH     "X",DIM1
          GOTO      PNPE9999 IF EQUAL
.
          MATCH     "P",DIM1
          GOTO      PNPE3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PNPE9999
PNPE3000  MATCH     "N",DIM1
          GOTO      PNPE4000 IF NOT EQUAL
          MOVE      TWO,EXIT
          ADD       ONE,SCRNUMB
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PNPE9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PNPE9999
PNPE4000  BEEP     
          GOTO      PNPE1000
.
PNPE9999  RETURN
.**********************************************************************
.*                 Redisplay routine for standard keyins              *
.**********************************************************************
RLMCFM00  RETURN 
.
RBCFFM00  CALL      DSBS0000             * display the screen
          RETURN
.
.**********************************************************************
.*                 Search by Date Entered                             *
.**********************************************************************
.
SRCH0000  DISPLAY   *P1:4,*EF,*P1:5,*V2LON,*ULON,"Item":
                    *P6:5,"Batch",*P12:5,"Entered",*P23:5,"Status":
                    *P39:5,"Post to",*P50:5,"Type",*P75:5,"Total":
                    *P1:4,*HOFF,"From Date Entered : "
.
          MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          MOVE      "21",CCOL
          MOVE      FOUR,CVERT
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      KEYDATE
          BRANCH    OVRCD,SRCH0000
.
          PACK      KEY8,CCENT,CYEAR,CMON,CDAY,SP70
          REP       " 0",KEY8
          PACK      KEY13,KEY8,SP70
.
          MOVE      FIVE,STDROW
          MOVE      ZERO,XITEMNO
          MOVE      ZERO,CPAGENO
          CALL      RSFMBC3
.
SRCH0020  CALL      RKFMBC3
          BRANCH    OVRCD,SRCH0040
SRCH0025  ADD       ONE,XITEMNO
          ADD       ONE,STDROW
          STORE     FMBCBAT,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                    ST6,ST7,ST8,ST9,ST10:
                                    ST11,ST12,ST13,ST14,ST15:
                                    ST16,ST17
.
          MOVE      FMBCSTA,F1
          MOVE      "Batch in Use",FMBCDST
          LOAD      FMBCDST,F1,FMBCDST1,FMBCDST2,FMBCDST3,FMBCDST4,FMBCDST5
          REP       " 0",FMBCDAT
          UNPACK    FMBCDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P2:STDROW,*V2LON,XITEMNO,DOT,*HOFF:
                    *P6:STDROW,FMBCBAT,*P12:STDROW,CPCDATE,*P23:STDROW,FMBCDST
.
          UNPACK    FMBCPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          CALL      TBAT0000
          MOVE      FMBCFMT,FMBCFTOT
          FEDIT     FMBCTOT,FMBCFTOT
.
          DISPLAY  *P39:STDROW,CPCDATE,*P50:STDROW,FMBCDTY:
                   *P61:STDROW,FMBCFTOT
.
          COMPARE   "17",XITEMNO
          GOTO      SRCH0020 IF NOT EQUAL
.
SRCH0040  MOVE      ZERO,CCITEM
          MOVE      SP2,CCITEMD
          DISPLAY   *P1:24,*EL,"Select Item, ";
          COMPARE   "17",XITEMNO
          GOTO      SRCH0060 IF NOT EQUAL
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext page, ";
.
SRCH0060  COMPARE   ZERO,CPAGENO
          GOTO      SRCH0080 IF EQUAL
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious page, ";
.
SRCH0080  KEYIN     "e(",*V2LON,"X",*HOFF,")it ? ",*JR,*V2LON,CCITEMD;
.
          RESET     CCITEMD
          GOTO      SRCH0100 IF EOS      * Next Page
          REP       UPPLOW,CCITEMD
          MATCH     "  N",CCITEMD        * Next Page
          GOTO      SRCH0100 IF EQUAL
          MATCH     "  P",CCITEMD        * Previous Page
          GOTO      SRCH0120 IF EQUAL
          MATCH     "  X",CCITEMD        * Exit
          GOTO      SRCH9999 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      SRCH0180 IF NOT EQUAL  * Invalid Entry
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      SRCH0180 IF LESS       * Invalid Entry
          COMPARE   CCITEM,XITEMNO
          GOTO      SRCH0180 IF LESS       * Invalid Entry
          GOTO      SRCH0400               * Item Selected
.
SRCH0100  COMPARE   "17",XITEMNO            * Next Page Selected
          GOTO      SRCH0180 IF NOT EQUAL  * No Next Page Invalid Selection
          ADD       ONE,CPAGENO
          MOVE      ZERO,XITEMNO            
          MOVE      FIVE,STDROW
          DISPLAY   *P1:6,*EF
          GOTO      SRCH0020
.
SRCH0120  COMPARE   ZERO,CPAGENO           * Previous Page Selected
          GOTO      SRCH0180 IF EQUAL      * No Previous Page Invalid Selection
          DISPLAY   *P1:6,*EF
          SUB       ONE,CPAGENO
          COMPARE   "17",XITEMNO      
          GOTO      SRCH0140 IF EQUAL 
          CALL      RPFMBC3            * Initial reverse read
          COMPARE   ZERO,XITEMNO      
          GOTO      SRCH0160 IF EQUAL 
.
SRCH0140  CALL      RPFMBC3
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      SRCH0140 IF NOT EQUAL
          COMPARE   FIVE,STDROW
          GOTO      SRCH0020 IF EQUAL   * Display Down The Page
SRCH0160  MOVE      FIVE,STDROW
          MOVE      "17",XITEMNO
          GOTO      SRCH0140
.
SRCH0180  BEEP                          * invalid entry
          GOTO      SRCH0040
.
SRCH0200  MOVE      SP70,FMBCBAT
          GOTO      SRCH9999
.
SRCH0400  MOVE      SP70,FMBCBAT
          LOAD      FMBCBAT,CCITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15:
                                  ST16,ST17
.
          PACK      KEY5,FMBCBAT,SP70
          CALL      RDFMBC1
.
SRCH0600  CALL      DSBS0000
.
          CALL      FORM0000             * format data for display
          BRANCH    EXIT,SRCH9999
          CALL      DSBD0000             * display the data
.
SRCH0700  CALL      DSEX0000             * display transactions or exit
          BRANCH    EXIT,SRCH5000
.
          CALL      TRAN0000             * handle the display of trans
          CALL      DSBS0000             * display the screen
          CALL      DSBD0000             * display the data
          GOTO      SRCH0700
.
SRCH5000  DISPLAY   *P1:4,*EF,*P1:5,*V2LON,*ULON,"Item":
                    *P6:5,"Batch",*P12:5,"Entered",*P23:5,"Status":
                    *P39:5,"Post to",*P50:5,"Type",*P75:5,"Total":
                    *P1:4,*HOFF,"From Date Entered : ":
                    *V2LON,CDAY,"/",CMON,"/",CCENT,CYEAR
.
          MOVE      FIVE,STDROW
          MOVE      ZERO,XITEMNO
          PACK      KEY5,ST1
          CALL      RDFMBC1
          BRANCH    OVRCD,SRCH9999
          PACK      KEY13,FMBCDAT,FMBCBAT
          CALL      RDFMBC3
          BRANCH    OVRCD,SRCH9999
          GOTO      SRCH0025
.
SRCH9999  RETURN
.**********************************************************************
          INC       FMSAMAIO/INC
          INC       FMSBASIO/INC
          INC       FMSBCFIO/INC
          INC       FMSCTRIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSTRNIO/INC
.
          INC       IBAIHAIO/INC
          INC       IBABATIO/INC 
.
          INC       FMSLMCKY 
          INC       FMSBCFKY 
.
          INC       FMSSTDCD
