. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS72                                             *
. * Desc      :   Periodic Journal Maintenance                         *
. **********************************************************************
. * Date      :   16.10.1990                                           *
. * Author    :   Paul Duncan                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filenames (FILENAM1 & FILENAM2).  *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.B01 16.01.2001 Charles Handaya                               *
. *           Modification of BAS Statement                            *
. **********************************************************************
. * VF.01.02  31.08.2000 Sandra Barcham                                *
. *           Fix changing number of periods before submission         *
. * VF.01.01  01.08.2000 Sandra Barcham                                *
. *           Do not allow to search by submission                     *
. **********************************************************************
. * VF.00.07  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.06  18.11.1999 Sandra Barcham                                *
. *           Stop checking periods after range for locking            *
. *           srf 635870                                               *
. * VF.00.05  05.11.1999 Sandra Barcham                                *
. *           Fix reconciling journal                                  *
. * VF.00.04  01.09.1999 Sandra Barcham                                *
. *           Recompiled for index fix in FMSJPDA2                     *
. *           srf 633905                                               *
. * VF.00.03  30.08.1999 Sandra Barcham                                *
. *           If journal deleted in authorisation allow entry          *
. *           srf 633905                                               *
. * VF.00.02  19.08.1999 Sandra Barcham                                *
. *           Fully expend periodic journals in the last period        *
. *           srf 633905                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSDISKY & FMSRESKY                       *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS72
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.             delete temporary files
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSBPFFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSDISFD/INC
          INC       FMSJMAFD/INC
          INC       FMSJPDFD/INC
          INC       FMSJTPFD/INC
          INC       FMSJWPFD/INC
          INC       FMSJDTFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSRESFD/INC
          INC       FMSTDSFD/INC
.
          INC       IBACONFD/INC
          INC       IBABASFD/INC
          INC       IBABATFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.==============================================================================
.   CONSTANTS
.==============================================================================
.
CP        INIT      "cp "              * word processor variables
.
ZERO20    INIT      "00000000000000000000"
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
.
NAME1     INIT      "fmstm1"
NAME2     INIT      "fmstm2"
.
TXT       INIT      ".txt "
.
WP        INIT      "wp "
WPDAT     INIT      ".txt 999 7 -1 70 14"
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
.
ACCEPT    FORM      1
AGSTNAME  DIM       35
AMOUNT    FORM      12.2
AUTHFLAG  FORM      1
.
BALANCE   FORM      12.2
BANKNAME  DIM       35
BASDESC   DIM       3
.
CASHDESC  DIM       3
CGSTNAME  DIM       35
CPOSDESC  DIM       15
CPOSPDAT  DIM       10
CREDNAME  DIM       35
CREDTOT   FORM      12.2
CURDATE   DIM       8
.
DASH      INIT      "-"
DEBTNAME  DIM       35
DEBTOT    FORM      12.2
DIM30     DIM       30
DIM40     DIM       40
DIMAMNT   DIM       15
DIMPERD   DIM       6
DIMYEAR   DIM       4
DIMMON    DIM       2
DISCNAME  DIM       35
DISPCNT   FORM      2
DISPFLAG  FORM      1
DM4       DIM       4 
DM6       DIM       6 
DOCREF    DIM       7
DRCRDESC  DIM       2
DRCRLDES  DIM       6
.
ENDIT     FORM      1
ENDPERD   DIM       6
.
FILENAM1  DIM       8
FILENAM2  DIM       8
FILENAM3  DIM       8
FMSTMP01  FILE      ASCII,FIXED=70     * WP Holding File Def'n 1
FMSTMP02  FILE      ASCII,FIXED=70     * WP Holding File Def'n 2
FORM2A    FORM      2
FORM3     FORM      3
FORM5     FORM      5
FORM12P2  FORM      12.2
FORMPERD  FORM      6
FROMPERD  DIM       2
FROMYEAR  DIM       4
.
INSRTLNO  FORM      2                  * Line No for insert
.
KEY10SAV  DIM       10
.
JID1      DIM       6
JID2      DIM       6
JOURTYPE  DIM       1
.
KBPRF     FORM      1
.
LASTLINE  DIM       3
LASTYEAR  DIM       4
LASTPERD  DIM       2
LAST      DIM       6
LEDGDESC  DIM       35
LLPOS     FORM      2
.
MAXDISP   FORM      2
MODE      FORM      1
MTCHAMNT  DIM       12
.
NEXT      FORM      1
NEXTPER   DIM       6
NOPERDS   FORM      2
NOTES     FORM      1
NPJOURNAL FORM      2     
NUMREC    FORM      2
.
OPTIONP   FORM      2        * screen P selection keyin var
.
PAGENO    FORM      3
PAYMNAME  DIM       35
PERDATE   DIM       8
PERDNO    FORM      2
PERPERC   FORM      4.2
PERSTAT   DIM       22
POSTDATE  DIM       10
PPOSDESC  DIM       15
PPOSPDAT  DIM       10
PROFDESC  DIM       35
.
RECCNT    FORM      2
REVDESC   DIM       3
REVFLAG   FORM      1
RPOSDESC  DIM       15
RPOSPDAT  DIM       10
.
SAVEDRCR  DIM       1
SAVEDESC  DIM       2
SAVEPERD  DIM       6
SAVJDESC  DIM       40
SAVLOCKD  DIM       7
SAVPER    DIM       6
SCREEN    FORM      1
SEL01     DIM       10
SEL02     DIM       10
SEL03     DIM       10
SEL04     DIM       10
SEL05     DIM       10
SEL06     DIM       10
SEL07     DIM       10
SEL08     DIM       10
SEL09     DIM       10
SEL10     DIM       10
SEL11     DIM       10
SEL12     DIM       10
SEL13     DIM       10
SEL14     DIM       10
SEL15     DIM       10
STAT0     INIT      "Balanced            "
STAT1     INIT      "Part Submitted      "
STAT2     INIT      "Submitted           "
STAT9     INIT      "Authorised          "
STATE     INIT      "Invalid Status      "
STATDESC  DIM       20
STRTPERD  FORM      6
SUBFLAG   FORM      1
SUBTYPE   FORM      1
.
TEMPSTAT  FORM      1
TMPFFLAG  FORM      1
.
VALOPTN   DIM       6 
VALSLCT   FORM      2
.
WKDTDESC  DIM       15
WKDTPDAT  DIM       10
WORKPERD  DIM       6
WPSTAT    FORM      2
.
PRGID     INIT      "IBAFMS72"
PRGNAM    INIT      "Periodic Journal Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      CLOK0000           * clear last locked record
          CALL      OPTN0000           * add change delete submit print
          BRANCH    OPTION,ML1000,ML1000,ML1000,ML1000,ML7000
          GOTO      ML9999
.
ML1000    CALL      CLOK0000           * clear last locked record
          CALL      CLR0000            * clear display variables
          CALL      PROC0000           * get entry
          BRANCH    EXIT,ML0100,ML0100 * exit program
.
          COMPARE   "3",OPTION         * deleting?
          GOTO      ML2000 IF EQUAL
.
          COMPARE   "4",OPTION         * submit for authorization?
          GOTO      ML1500 IF EQUAL
.
          COMPARE   "1",OPTION         * inserting?
          GOTO      ML1500 IF EQUAL
.
ML1200    CALL      CHNG0000           * which details to change?
          BRANCH    EXIT,ML1300,ML1400,ML3000
          GOTO      ML0100
.
ML1300    CALL      MADT0000           * process master details
          GOTO      ML1200
.
ML1400    CALL      TRAN0000
          GOTO      ML1200
.
.
ML1500    CALL      MADT0000           * process master details
          BRANCH    EXIT,ML1000,ML0100
.
          COMPARE   "4",OPTION         * submit for authorization?
          GOTO      ML5000 IF EQUAL
.
ML1600    CALL      TRAN0000 
          BRANCH    OPTION,ML1000
          GOTO      ML1200             * get next entry
.
ML2000    CALL      DELT0000           * delete?
          BRANCH    EXIT,ML1000,ML0100
          GOTO      ML1000
.
ML3000    CALL      DPST0000           * display postings
          GOTO      ML1200
.
ML5000    CALL      AUTH0000          * submit for authorization
          GOTO      ML1000
.
.---- print listing ----
.
ML7000    CALL      SELP0000           * get parameters
          BRANCH    EXIT,ML0100
.
          CALL      PRNT0000           * print report
          GOTO      ML0100
.
.
ML9999    PREP      FMSTMP01,FILENAM1
          CLOSE     FMSTMP01,DELETE
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmsamaaf";  * 
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
.
          DISPLAY   *P64:24,"fmsbpfaf";  * 
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsdisaf";  * 
          OPEN      FMSDISA1,"fmsdisaf"
.
          DISPLAY   *P64:24,"fmsjmaaf";  * 
          OPEN      FMSJMAA1,"fmsjmaaf"
          OPEN      FMSJMAA2,"fmsjmaaf"
          OPEN      FMSJMAA3,"fmsjmaaf"
.
          DISPLAY   *P64:24,"fmsjwpaf";  * 
          OPEN      FMSJWPA1,"fmsjwpaf"
.
          DISPLAY   *P64:24,"fmsjdtaf";  * 
          OPEN      FMSJDTA1,"fmsjdtaf"
.
          DISPLAY   *P64:24,"fmsjtpaf";  * 
          OPEN      FMSJTPA1,"fmsjtpaf"
.
          DISPLAY   *P64:24,"fmsjpdaf";  * 
          OPEN      FMSJPDA1,"fmsjpdaf"
          OPEN      FMSJPDA2,"fmsjpdaf"
          OPEN      FMSJPDA3,"fmsjpdaf"
.
          DISPLAY   *P64:24,"fmslmaaf";  * 
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";  * 
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsresaf";  * 
          OPEN      FMSRESA1,"fmsresaf"
.
          DISPLAY   *P64:24,"fmstdsaf";  * 
          OPEN      FMSTDSA1,"fmstdsaf"
.
          DISPLAY   *P64:24,"controlf";  * 
          OPEN      CONTROLF,"controlf"
.
          CALL      RDFMCO51                     * read control file sector 51
          CALL      RDFMCO52                     * read control file sector 52
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS
          IF        IBCNUBAS=1
            MOVE      "BAS",BASDESC
            DISPLAY   *P64:24,"ibabasaf";
            OPEN      IBABASA1,"ibabasaf"
          ELSE
            MOVE      SP3,BASDESC
          ENDIF
.
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
.         PACK      FILENAM2,NAME2,PORT
.         REP       " 0",FILENAM2
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM2
.
          PACK      CURDATE,CCC,CYY,CMM,CDD      * todays date
          REP       " 0",CURDATE
          MOVE      ONE,CCENTRY                  * use centries in keydate
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.* OPTN - Select main option              Called by ML0100               *
.*************************************************************************
OPTN0000  MOVE      ZERO,DISPFLAG
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*P1:5," 1",*P1:6," 2",*P1:7," 3":
                    *P1:8," 4",*P1:9," 5",*HOFF:
                    *P3:4," = Exit":
                    *P3:5," = Insert":
                    *P3:6," = Change":
                    *P3:7," = Delete":
                    *P3:8," = Submit for Authorisation":
                    *P3:9," = Print":
                    *P1:11,"Select Option :"
.
OPTN1000  KEYIN     *P17:11,*DV,UNDLN1,*P17:11,*V2LON,FORM1
          MOVE      FORM1,OPTION
          BRANCH    OPTION,OPTN2000,OPTN3000,OPTN4000,OPTN5000,OPTN6000
          COMPARE   ZERO,OPTION         * exit?
          GOTO      OPTN9000 IF EQUAL
.
          BEEP
          GOTO      OPTN1000
.
OPTN2000  DISPLAY   *P60:3,*V2LON,"Insert"
          GOTO      OPTN8000
.
OPTN3000  DISPLAY   *P60:3,*V2LON,"Change"
          GOTO      OPTN8000
.
OPTN4000  DISPLAY   *P60:3,*V2LON,"Delete"
          GOTO      OPTN8000
.
OPTN5000  DISPLAY   *P60:3,*V2LON,"Submit"
          GOTO      OPTN8000
.
OPTN6000  DISPLAY   *P60:3,*V2LON,"Print "
          GOTO      OPTN8000
.
OPTN8000  MOVE      FALSE,EXIT             * exit
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN 
.*************************************************************************
.* CLR - Clear the display variables                                     *
.*************************************************************************
CLR0000   UNPACK    SP70,FMJMJID,FMJMDESC,FMJMDENT,FMJMLEDG,FMJMPPOS
          MOVE      ONE,TMPFFLAG
          UNPACK    SP70,FMLADESC,FMJMCPOS,FMJMRPOS
          MOVE      ZERO,FMJMCASH
          MOVE      ZERO,FMJMREV
          UNPACK    SP70,STATDESC,PPOSDESC,PPOSPDAT,CPOSPDAT,CPOSDESC
          UNPACK    SP70,CASHDESC,REVDESC,FMLALEDG,LEDGDESC
          MOVE      ZERO,DEBTOT
          MOVE      ZERO,CREDTOT
          UNPACK    SP70,FMRSCODE,FMDSCODE,FROMYEAR,FROMPERD,LASTYEAR,LASTPERD:
                    FMBPCODE,FMBPDESC
          UNPACK    SP70,FMJMPROF,PROFDESC
.
CLR1000   MOVE      "  1",FMJDLNO
          UNPACK    SP70,FMJDJID,FMJDDRCR,FMJDDESC,FMJDACC
          UNPACK    SP70,FMJDDIS,FMJDRES,FMJDBASC
          MOVE      ZERO,FMJDTAMT
          MOVE      ZERO,FMJDPERC
          MOVE      ZERO,FMJDPAMT
CLR9999   RETURN
.******************************************************************************
.* PROC - Enter Genereal journal code            Called by ML1000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMJWJID  (variable entered)                               *
.******************************************************************************
PROC0000  MOVE      ONE,SCREEN         * screen one
          CALL      RJMAFM00
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          COMPARE   ONE,OPTION        * insert mode ?
          GOTO      PROC1000 IF NOT EQUAL
.
          DISPLAY   *P28:4,*V2LON,ZERO
          MOVE      ZERO,FMJMJID
          MOVE      FALSE,EXIT
          GOTO      PROC1200
.
PROC1000  MOVE      FMJOPRE3,FMJMJTY
          MOVE      ZERO,DISPFLAG
          CALL      KJMAFM00            * keyin journal code
          BRANCH    EXIT,PROC9999,PROC9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          PACK      KEY7,FMJMJTY,FMJMJID,SP70
          PACK      SAVLOCKD,KEY7,SP70
          CALL      RLFMJM1
          BRANCH    OVRCD,PROC1000,PROC1100
          GOTO      PROC1200
.
PROC1100  DISPLAY   *P1:24,*B,*EF,"Journal ",*V2LON,FMJMJID,*HOFF:
                    " Locked - Try Again Later - ";
          CALL      HITENTER
          GOTO      PROC1000
.
PROC1200  MOVE      FMJMSTAT,F1
          MOVE      STAT0,STATDESC
          LOAD      STATDESC,F1,STAT1,STAT2,STATE,STATE,STATE:
                             STATE,STATE,STATE,STAT9
          DISPLAY   *P51:4,"Status  : ",*V2LON,STATDESC
.
          BRANCH    OPTION,PROC9999,PROC2000,PROC3000,PROC9999
.
PROC2000  MATCH     "0",FMJMSTAT
          GOTO      PROC2500 IF NOT EQUAL
.
          PACK      KEY2,FMJMLEDG,SP70
          CALL      RDFMLA1
.
          MOVE      TEN2,NOPERDS
          ADD       FMLAPERS,NOPERDS
          GOTO      PROC9999
.
PROC2500  DISPLAY   *P1:24,*B,*EF,"Changes not allowed journal part/fully ":
                    "submitted for authorisation - ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC3000  MATCH     "0",FMJMSTAT
          GOTO      PROC9999 IF EQUAL
.
          PACK      KEY12,FMJMJTY,FMJMJID,SP70
          CALL      RSFMJP2
          CALL      RKFMJP2
          BRANCH    OVRCD,PROC9999
.
          MATCH     FMJMJTY,FMJPJTY
          GOTO      PROC9999 IF NOT EQUAL
          MATCH     FMJMJID,FMJPJID
          GOTO      PROC9999 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"Delete not allowed journal part/fully ":
                    "submitted for authorisation - ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9999  RETURN
.**********************************************************************
.  CLOK - clear locked record                          Called By ML
.**********************************************************************
CLOK0000  PACK      KEY7,SAVLOCKD,SP70
          CALL      UUFMJM1
.
CLOK9999  RETURN
.*************************************************************************
.* MADT - Process the journal master details        Called by ML1000     *
.*************************************************************************
MADT0000  MOVE      FALSE,EXIT
          MOVE      ONE,SCREEN
          CALL      GETW0000          * get notes from file
          COMPARE   ONE,OPTION        * insert mode ?
          CALL      IMDT0000 IF EQUAL * input mode if yes
          BRANCH    EXIT,MADT7000,MADT9999
.
          COMPARE   ONE,OPTION        * not insert mode ?
          CALL      DMDT0000 IF NOT EQUAL * display details on file if not
.
MADT1000  CALL      FFYR0000         * full fin year ?
          COMPARE   ONE,KBPRF
          GOTO      MADT1010 IF NOT EQUAL
          UNPACK    SP70,FMJMPROF,PROFDESC
          DISPLAY   *P28:13,*EL;
.
MADT1010  CALL      MQST0000          * select option post cancel notes
          COMPARE   ZERO,CCITEM       * post?
          GOTO      MADT5000 IF EQUAL
.
          COMPARE   "-1",CCITEM       * cancel?
          GOTO      MADT9000 IF EQUAL
.
          COMPARE   "-2",CCITEM       * notes?
          GOTO      MADT3000 IF EQUAL
.
          BRANCH    CCITEM,MADT1100,MADT1200,MADT1300,MADT1400,MADT1500:
                    MADT1600,MADT1650
.
.         BRANCH    CCITEM,MADT1100,MADT1200,MADT1300,MADT1400,MADT1500:
.                   MADT1600,MADT1650,MADT1700
          BEEP
          GOTO      MADT1000
.
MADT1100  CALL      KBDS0000         * keyin brief description
          BRANCH    EXIT,MADT1100
          GOTO      MADT1000
.
MADT1200  CALL      KDEN0000         * keyin date entered
          GOTO      MADT1000
.
MADT1300  PACK      KEY16,FMJOPRE3,FMJMJID,SP10   * any details on this journal?
          CALL      RSFMJD1
          CALL      RKFMJD1
          BRANCH    OVRCD,MADT1350
          PACK      KEY7,FMJDJTY,FMJDJID,SP70
          MATCH     KEY7,KEY16
          GOTO      MADT1350 IF NOT EQUAL
          DISPLAY   *P1:24,*EL,*B,"This Journal has Transaction Details - ":
                    " Can't Change Ledger - Tap <",*V2LON,"ENTER",*HOFF,">";
          KEYIN     ANS;
          GOTO      MADT1000
.
MADT1350  CALL      KLDG0000         * keyin ledger
          BRANCH    EXIT,MADT1300,MADT9000
          GOTO      MADT1000
.
MADT1400  CALL      KFYP0000         * Keyin first year/period
          BRANCH    EXIT,MADT1400,MADT9000
          GOTO      MADT1000
.
MADT1500  CALL      KLYP0000         * Keyin Last year/period
          BRANCH    EXIT,MADT1500,MADT9000
          GOTO      MADT1000
.
MADT1600  CALL      KPRV0000         * keyin post reversal and dates
          GOTO      MADT1000
.
MADT1650  BRANCH    FMJMREV,MADT1660
          DISPLAY   *P1:24,*B,"Not Posting Reversal - ";
          CALL      HITENTER
          GOTO      MADT1000
.
MADT1660  CALL      KPRV1000         * keyin post reversal and dates
          GOTO      MADT1000
.
.MADT1700  CALL      KBPR0000         * keyin budget profile
.          GOTO      MADT1000
.
MADT3000  MOVE      "1",NOTES
          CALL      KNTE0000         * keyin notes
          GOTO      MADT1000
.
MADT5000  CALL      WJMA0000         * write to journal file
          CALL      WCOM0000
          MOVE      FALSE,EXIT
          GOTO      MADT9999
.
MADT7000  COMPARE   "1",OPTION       * inserting?
          GOTO      MADT9999 IF NOT EQUAL
.
          MOVE      TWO,EXIT
          GOTO      MADT9999
.
MADT9000  MOVE      TRUE,EXIT
          MOVE      ONE,TMPFFLAG
          CLOSE     FMSTMP01
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          CLOSE     FMSTMP01
.
MADT9999  RETURN
.**********************************************************************
.  MQST - select, post, exit, run report              Called By SELT
.        Returns  - CCITEM   (0=post, -1=cancel, -2=notes, other=select)
.**********************************************************************
MQST0000  MOVE      SP70,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON:
                    "C",*HOFF,")ancel, (",*V2LON:
                    "N",*HOFF,")otes ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQST0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  P",CCITEMD      * post ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  C",CCITEMD      * cancel ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      "-2",CCITEM
          MATCH     "  N",CCITEMD      * notes ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQST9999 IF NOT LESS
.
          BEEP
          GOTO      MQST0000
.
MQST9999  RETURN
.*************************************************************************
.* DMDT - Set up the variables to display the record on file             *
.*                     called by : MADT0000                              *
.*************************************************************************
DMDT0000  MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1              * get ledger description
          MOVE      FMLADESC,LEDGDESC    * set ledger description
.
          MOVE      "12",NOPERDS
          ADD       FMLAPERS,NOPERDS
          UNPACK    FMJMFPER,FROMYEAR,FROMPERD
          UNPACK    FMJMLPER,LASTYEAR,LASTPERD
.
          MOVE      DNO,REVDESC
          LOAD      REVDESC,FMJMREV,DYES
          COMPARE   "0",FMJMREV         * posting cash
          GOTO      DMDT0500 IF EQUAL
.
          MOVE      FMJMRPOS,WORKDATE   
          CALL      CFPR0000             * get financial period for accrual
                                         * posting date
          MOVE      WKDTDESC,RPOSDESC
          MOVE      WKDTPDAT,RPOSPDAT
.
          PACK      KEY9,FMJMLEDG,FMLACYRR,FMJMPROF
          CALL      RDFMBP1              * get budget profile desc.
.
DMDT0500  CALL      RLMAFM00             * display screen
          CALL      FFYR0000             * full fin. year?
.
DMDT9999  RETURN
.*************************************************************************
.* IMDT - Input the journal master details      Called by MADT0000       *
.*      - Returns - EXIT = 0 -valid entries 1 -exitchar or enter hit     *
.*************************************************************************
IMDT0000  UNPACK    SP70,FROMYEAR,LASTYEAR
          CALL      RLMAFM00
          CALL      KBDS0000         * keyin brief description
          BRANCH    EXIT,IMDT9000,IMDT9999
.
IMDT1000  CALL      KDEN0000         * keyin date entered
          BRANCH    EXIT,IMDT0000,IMDT9999
.
IMDT2000  CALL      KLDG0000         * keyin ledger
          BRANCH    EXIT,IMDT1000,IMDT9999
.
IMDT3000  CALL      KFYP0000         * keyin first period
          BRANCH    EXIT,IMDT2000,IMDT9999
.
IMDT4000  CALL      KLYP0000         * keyin keyin last period
          BRANCH    EXIT,IMDT3000,IMDT9999
          CALL      FFYR0000         * see if it is a full financial year so we
.                                    * can enter a budget profile
.
IMDT5000  CALL      KPRV0000         * keyin post reversal and dates
          BRANCH    EXIT,IMDT4000,IMDT9999
          BRANCH    KBPRF,IMDT6000
.
.IMDT5500  CALL      KBPR0000         * Keyin budget profile
.          BRANCH    EXIT,IMDT6000,IMDT9999
.
IMDT6000
.
IMDT8000  MOVE      FALSE,EXIT
          GOTO      IMDT9999
.
IMDT9000  MOVE      TRUE,EXIT
.
IMDT9999  RETURN
.*************************************************************************
.* KBDS - Keyin the brief desciption of the journal                      *
.*        Returns - EXIT = 0 - valid description 1 - null                *
.*                     called by :  MADT1100, IMDT0000                   *
.*************************************************************************
KBDS0000  MOVE      FMJMDESC,DIM30
          KEYIN     *P28:6,*DV,UNDLN30,*P28:6,*V2LON,DIM30:
                    *P28:6,*DV,DIM30
.
          PACK      DIM30,DIM30,SP70
.
          MATCH     DIM30,SP70          * nothing entered?
          GOTO      KBDS1000 IF EQUAL
.
          MATCH     EXITCHAR,DIM30          * nothing entered?
          GOTO      KBDS8000 IF NOT EQUAL
.
          MOVE      TWO,EXIT               * exitchar
          PACK      FMJMDESC,DIM30,SP70
          GOTO      KBDS9999
.
KBDS1000  MOVE      TRUE,EXIT
          PACK      FMJMDESC,DIM30,SP70
          GOTO      KBDS9999
.
KBDS8000  MOVE      FALSE,EXIT
          PACK      FMJMDESC,DIM30,SP70
.
KBDS9999  RETURN
.*************************************************************************
.* KDEN - Keyin date entereed                Called by MADT1200 IMDT2000 *
.*      - Returns EXIT = 0 - valid entry 1 - null 2 -exitchar            *
.*************************************************************************
KDEN0000  BRANCH   OPTION,KDEN1000            * which default to set up?
          REP       " 0",FMJMDENT
          UNPACK   FMJMDENT,CCENT,CYEAR,CMON,CDAY
          GOTO     KDEN2000
KDEN1000  UNPACK   CURDATE,CCENT,CYEAR,CMON,CDAY
KDEN2000  MOVE     "7",CVERT
          MOVE     "28",CCOL
          CALL     KEYDATE            * keyin date
          BRANCH   CQUEST,KDEN2000    * no question mark
          BRANCH   OVRCD,KDEN2000
          MOVE     FALSE,EXIT
          PACK     FMJMDENT,CCENT,CYEAR,CMON,CDAY
.
KDEN9999  RETURN
.*************************************************************************
.* KLDG - Keyin ledger code                 Called by IMDT3000, MADT1300 *
.*        Returns EXIT = 0 - valid entry 1 -null 2 exitchar              *
.*************************************************************************
KLDG0000  MOVE      "8",CVERT           * set up variables for standard keyin
          MOVE      "28",CCOL
          UNPACK    SP70,FMJMLEDG,LEDGDESC
          CALL      KLMAFM00            * keyin ledger
          BRANCH    EXIT,KLDG1000,KLDG9999
.
          DISPLAY   *P28:8,*V2LON,FMLALEDG,*HOFF,SP1,FMLADESC
          MOVE      FMLALEDG,FMJMLEDG
          MOVE      FMLADESC,LEDGDESC
          MOVE      "12",NOPERDS
          ADD       FMLAPERS,NOPERDS
          GOTO      KLDG9999
.
KLDG1000  MOVE      SP70,LEDGDESC
.
KLDG9999  RETURN
.*************************************************************************
.* KFYP - Keyin from year/period                Called by IMDT5000       *
.*************************************************************************
KFYP0000  MOVE      "9",CVERT
          MOVE      "28",CCOL
          MOVE      SP10,FMLCYEAR
          MOVE      SP4,FROMYEAR
          MOVE      SP4,FROMPERD
          CALL      KLMCFM00             *Keyin financial year
          DISPLAY   *PCCOL:CVERT,*EL;
          BRANCH    EXIT,KFYP9999,KFYP9999
.
          MOVE      FMLCYEAR,FROMYEAR
          DISPLAY   *P28:9,*V2LON,*EL,FROMYEAR,"/"
.
KFYP0500  KEYIN     *P33:9,*DV,UNDLN2,*P33:9,*V2LON,*ZF,*JR,FROMPERD,*DV:
                    *P33:9,FROMPERD
          PACK      FROMPERD,FROMPERD,SP2
          MATCH     SP2,FROMPERD      * nothing entered?
          GOTO      KFYP0000 IF EQUAL
.
          REP       " 0",FROMPERD
          TYPE      FROMPERD
          GOTO      KFYP0500 IF NOT EQUAL
          MOVE      FROMPERD,FORM2
          COMPARE   FORM2,NOPERDS     *valid period
          GOTO      KFYP1000 IF LESS
.
          COMPARE   ZERO,FORM2        * over zero?
          GOTO      KFYP0500 IF LESS
.
          PACK      FMJMFPER,FROMYEAR,FROMPERD
          MOVE      FALSE,EXIT
          PACK      KEY6,FMJMLEDG,FMJMFPER
          CALL      RDFMLC1
          BRANCH    OVRCD,KFYP2000
          LOAD      WKDTDESC,FORM2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE: 
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                   FMLC13DE
          LOAD      WORKDATE,FORM2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                   FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO: 
                                   FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                   FMLC13TO
          UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P36:9,*EL,WKDTDESC," Ending ",CPCDATE
.
          MATCH     SP70,LASTYEAR
          GOTO      KFYP9999 IF EQUAL     * no last year ?
          PACK      DM6,FROMYEAR,FROMPERD,SP70
          PACK      KEY6,LASTYEAR,LASTPERD,SP70
          MATCH     DM6,KEY6
          GOTO      KFYP9999 IF NOT LESS  * illegal range ?
          DISPLAY   *P1:24,*B,*EL,"Illegal Date Range Entered - ";
          CALL      HITENTER
          GOTO      KFYP0000
.
KFYP1000  DISPLAY   *P1:24,*B,"Year has ",NOPERDS," Periods - ",*EL; 
          CALL      HITENTER
          GOTO      KFYP0500
.
KFYP2000  DISPLAY   *P1:24,*EL,"Invalid Period - ";
          CALL      HITENTER  
          GOTO      KFYP0500
.
KFYP9999  RETURN 
.*************************************************************************
.* KLYP - Keyin last year/period                Called by IMDT5000       *
.*************************************************************************
KLYP0000  MOVE      "10",CVERT
          MOVE      "28",CCOL
          MOVE      SP10,FMLCYEAR
          MOVE      SP4,LASTYEAR
          MOVE      SP4,LASTPERD
          CALL      KLMCFM00             *Keyin financial year
          DISPLAY   *PCCOL:CVERT,*EL;
          BRANCH    EXIT,KLYP9999,KLYP9999
.
          MOVE      FMLCYEAR,LASTYEAR
          DISPLAY   *P28:10,*V2LON,*EL,LASTYEAR,"/"
.
KLYP0500  KEYIN     *P33:10,*DV,UNDLN2,*P33:10,*V2LON,*JR,*ZF,LASTPERD,*DV:
                    *P33:10,LASTPERD
          PACK      LASTPERD,LASTPERD,SP2
          MATCH     SP2,LASTPERD
          GOTO      KLYP0000 IF EQUAL
          REP       " 0",LASTPERD
          TYPE      LASTPERD
          GOTO      KLYP0500 IF NOT EQUAL
          MOVE      LASTPERD,FORM2
          COMPARE   FORM2,NOPERDS      *valid period
          GOTO      KLYP1000 IF LESS
.
          COMPARE   ZERO,FORM2        * over zero?
          GOTO      KLYP0500 IF LESS
.
          MOVE      FALSE,EXIT
          PACK      FMJMLPER,LASTYEAR,LASTPERD
          PACK      KEY6,FMJMLEDG,FMJMLPER
          CALL      RDFMLC1
          BRANCH    OVRCD,KFYP2000
          LOAD      WKDTDESC,FORM2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE: 
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                   FMLC13DE
          LOAD      WKDTPDAT,FORM2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                   FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO: 
                                   FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                   FMLC13TO
          UNPACK    WKDTPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P36:10,*EL,WKDTDESC," Ending ",CPCDATE
.
          PACK      DM6,FROMYEAR,FROMPERD,SP70
          PACK      KEY6,LASTYEAR,LASTPERD,SP70
          MATCH     DM6,KEY6
          GOTO      KLYP9999 IF NOT LESS  * illegal range ?
          DISPLAY   *P1:24,*B,*EL,"Illegal Date Range Entered - ";
          CALL      HITENTER
          GOTO      KLYP0000
.
KLYP1000  DISPLAY   *P1:24,*B,"Year has ",NOPERDS," Periods - ",*EL; 
          CALL      HITENTER
          GOTO      KLYP0500
.
KLYP9999  RETURN 
.************************************************************************
.* FFYR - Calculate if it is a full financial year so we can allow a    *
.*        budget profile to be entered.                                 *
.*        Returns : KBPRF - 0 = YES  1 = NO                             *
.************************************************************************
FFYR0000  UNPACK    FMJMFPER,DIMYEAR,DIM2
          MATCH     "01",DIM2          * is it the first period of a fin year
          GOTO      FFYR9000 IF NOT EQUAL
.
          UNPACK    FMJMLPER,DM4,DIM2
          BRANCH    FMLAPERS,FFYR1000
          MATCH     "12",DIM2          * is it the first period of a fin year
          GOTO      FFYR9000 IF NOT EQUAL
          GOTO      FFYR2000
.
FFYR1000  MATCH     "13",DIM2          * is it the first period of a fin year
          GOTO      FFYR9000 IF NOT EQUAL
.
FFYR2000 
          MATCH     DM4,DIMYEAR       * same year?
          GOTO      FFYR9000 IF NOT EQUAL
.
          MOVE      ZERO,KBPRF          * we can keyin a budget profile then
          GOTO      FFYR9999 
.
FFYR9000  MOVE      ONE,KBPRF
.
FFYR9999  RETURN
.*************************************************************************
.* KPRV - Keyin reverse ?     - y/n      Called by IMDT5000 MADT1500     *
.*************************************************************************
KPRV0000  MOVE      "11",CVERT          * set up screen posy
          MOVE      "28",CCOL
          MOVE      "N",DEFYESNO
          DISPLAY   *P28:11,*EL:
                    *P28:12,*EL
          CALL      YORN0000            * yes or no?
.
          MOVE      FYESNO,FMJMREV
          MOVE      YESNO,REVDESC
          BRANCH    FMJMREV,KPRV1000
          DISPLAY   *P28:12,*EL
          MOVE      SP10,FMJMRPOS
          MOVE      ZERO,EXIT
          GOTO      KPRV9999
.
KPRV1000  
          MOVE      "28",CCOL
          MOVE      "12",CVERT
          BRANCH    OPTION,KPRV2000
          MATCH     SP8,FMJMRPOS        * any reversal date?
          GOTO      KPRV2000 IF EQUAL 
          REP       " 0",FMJMRPOS
          UNPACK    FMJMRPOS,CCENT,CYEAR,CMON,CDAY  * set up correct default
          GOTO      KPRV3000
.
KPRV2000  UNPACK    CURDATE,CCENT,CYEAR,CMON,CDAY
KPRV3000  CALL      KEYDATE
          BRANCH    CQUEST,KPRV1000
          BRANCH    OVRCD,KPRV1000
.
          PACK      FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          MOVE      FMJMRPOS,WORKDATE
          CALL      CFPR0000          * calculate financial period that
          BRANCH    EXIT,KPRV2000     * the date falls into
          MOVE      WKDTDESC,RPOSDESC * period description
          MOVE      WKDTPDAT,RPOSPDAT * period date
          DISPLAY   *P54:12,RPOSDESC,SP1,RPOSPDAT
          MOVE      FALSE,EXIT
.
KPRV9999  RETURN         
.*************************************************************************
.* CFPR - Calculate which period in which finsancial year that a date    *
.*        falls into.                                                    *
.*        Reguires - WORKDATE - date to find                             *
.*                   FMLALEDG - ledger                                   *
.*                   FMLACYRR - Current financial year for ledger        *
.*        Returns  - WKDTDESC - period description                       *
.*                   WKDTPDAT - period start date                        *
.*                   EXIT     - 0 - period found                         *
.*                              1 - period found but locked              *
.*        called by : KAPD0000                                           *
.*************************************************************************
CFPR0000  MATCH     SP2,FMLALEDG
          GOTO      CFPR1000 IF NOT EQUAL
          MOVE      SP2,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          GOTO      CFPR2000
CFPR1000  MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1
CFPR2000  CALL      CFYR0000
          BRANCH    EXIT,CFPR9000
          MOVE      PERDESC,WKDTDESC
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,WKDTPDAT
          GOTO      CFPR9999
CFPR9000  DISPLAY   *P1:24,*EL,ERRMSG;
          CALL      HITENTER
CFPR9999  RETURN
.
.*************************************************************************
.* KBPR - Keyin budget profile              Called by IMDT6000,MADT1700  *
.*        Returns EXIT = 0 - valid entry 1 -null 2 exitchar              *
.*************************************************************************
KBPR0000  BRANCH    KBPRF,KBPR6000       * keyin in budget profile?
          MOVE      "13",CVERT           * set up variables for standard keyin
          MOVE      "28",CCOL
          MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1
          MOVE      FMLACYRR,FMLCYEAR
          UNPACK    SP70,FMJMPROF,PROFDESC
          CALL      KBPFFM00            * keyin ledger
          BRANCH    EXIT,KBPR1000,KBPR9999
.
          DISPLAY   *P28:13,*V2LON,FMBPCODE,*HOFF,SP1,FMBPDESC
          MOVE      FMBPCODE,FMJMPROF
          MOVE      FMBPDESC,PROFDESC
          GOTO      KLDG9999
.
KBPR1000  MOVE      SP70,FMBPDESC
          GOTO      KLDG9999
.
KBPR6000  DISPLAY   *P1:24,*EL,"Cannot Enter A Budget Profile Unless Using A ":
                    "Full Financial Year - Tap <",*V2LON,"ENTER",*HOFF,">",*B;
          KEYIN     ANS;
.
KBPR9999  RETURN
.*************************************************************************
.* KNTE - Keyin Notes?                   Called by IMDT5000 MADT1500     *
.*************************************************************************
KNTE0000  CALL      NOTE0000            * initialize wp
.
KNTE3000  CALL      RLMAFM00            * redisplay screen
.         
KNTE9999  RETURN         
.*************************************************************************
.* WJMA - write to the journal master file                               *
.*************************************************************************
WJMA0000  
          MATCH     "0",FMJMJID       * is it a newy
          GOTO      WJMA1000 IF NOT EQUAL
.
WJMA0100  CALL      RDFMCOJ3         * read last journal id
          MOVE      FMJONEX3,FMJMJID * use next journal id number
          ADD       ONE,FMJONEX3     * increment next journal number
          CALL      WRFMCOJ3         * read next journal id
          PACK      KEY7,FMJOPRE3,FMJMJID
          CALL      RAFMJM1          * is it already there?
          COMPARE   ONE,OVRCD
          GOTO      WJMA0100 IF NOT EQUAL
.
          DISPLAY   *P1:24,"New Journal Id is : ",*V2LON,FMJMJID," - ",*EL; 
          CALL      HITENTER
          DISPLAY   *P28:4,*V2LON,FMJMJID
.
WJMA1000  DISPLAY   *P1:24,*EL,*P50:24,*V2LON,"*** Posting ***"; 
          PACK      FMJMFPER,FROMYEAR,FROMPERD
          PACK      FMJMLPER,LASTYEAR,LASTPERD
          PACK      KEY7,FMJOPRE3,FMJMJID
          CALL      RAFMJM1           * is it already there?
          BRANCH    OVRCD,WJMA2000
.
          CALL      UPFMJM1           * yes -update it
          CALL      CALJ0000          * srf 1767
          GOTO      WJMA9999
.
WJMA2000  MOVE      "0",FMJMSTAT      * new - must be awaiting authorization
          UNPACK    SP70,FMJMPDAT,FMJMPBAT,FMJMRDAT,FMJMRBAT
          CALL      WRFMJM1
          PACK      KEY7,FMJMJTY,FMJMJID,SP70
          PACK      SAVLOCKD,KEY7,SP70
          CALL      RLFMJM1
.
WJMA9999  RETURN
.******************************************************************************
.* GETW - read in wp data                        Called by who cares ?        *
.******************************************************************************
GETW0000  MOVE      ZERO,TMPFFLAG
          MOVE      ZERO,NOTES                   * assume no notes
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          PACK      KEY10,FMJOPRE3,FMJMJID,SP70
          CALL      RSFMJW1                      * go to start of records
.
GETW1000  CALL      RKFMJW1                      * get next record
          BRANCH    OVRCD,GETW2000               * no more records ?
          PACK      KEY14,FMJWJTY,FMJWJID,SP70
          MATCH     KEY10,KEY14
          GOTO      GETW2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMJWLINE
          MOVE      ONE,NOTES                   * we have some notes
          GOTO      GETW1000
.
GETW2000  WEOF      FMSTMP01,SEQ
          CLOSE     FMSTMP01
.
GETW9999  RETURN
.******************************************************************************
.* NOTE - Execute word processor                 Called by QUES               *
.******************************************************************************
NOTE0000  
.          DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                    *BLINKON,*V2LON,"Please Wait",*EL;
..
.          PREP      FMSTMP02,FILENAM2
.          WRITE     FMSTMP02,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.          WRITE     FMSTMP02,SEQ;VERSION,SP10,SP5,PRGNAM
.          WRITE     FMSTMP02,SEQ;SP1
.          WRITE     FMSTMP02,SEQ;"    Journal ID           : ":
.                    FMJMJID,SP10,SP7,"Status  : ",STATDESC
.          WRITE     FMSTMP02,SEQ;SP1
.          WRITE     FMSTMP02,SEQ;"    Notes"
.          WRITE     FMSTMP02,SEQ;SP1
..
.          OPEN      FMSTMP01,FILENAM1            * go to start of records
..
.NOTE1000  READ      FMSTMP01,SEQ;FMJWLINE        * read in wp data
.          GOTO      NOTE2000 IF OVER
..
.          WRITE     FMSTMP02,SEQ;FMJWLINE
.          GOTO      NOTE1000
.
.NOTE2000  CLEAR     CMDLINE
.          PACK      CMDLINE,WP,FILENAM2,WPDAT
.          EXECUTE   CMDLINE,TASKID               * initiate word processor
..
.          CALL      WEOF0000                     * make sure something in file
.          CLOSE     FMSTMP02
          CLOSE     FMSTMP01
.
.          CLEAR     CMDLINE                      * copy file to original
.          PACK      CMDLINE,CP,FILENAM2,TXT,FILENAM1,TXT 
.          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    FILENAM1,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          MOVE      ONE,WPSTAT
.
          WORD      CMDLINE,999,2,6,79,22,WPSTAT
.
NOTE9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
.WEOF0000  CLOSE     FMSTMP02
.          MOVE      ZERO,OVRCD
.          TRAP      OVERCOND IF IO
.          OPEN      FMSTMP02,FILENAM2
.          TRAPCLR   IO
.          COMPARE   ONE,OVRCD
.          GOTO      WEOF9999 IF NOT EQUAL
..
.          PREP      FMSTMP02,FILENAM2
.          WEOF      FMSTMP02,SEQ
..
.WEOF9999  RETURN
.*************************************************************************
.* WCOM - Write the notes that are in a tempfile to the comments file    *
.*************************************************************************
WCOM0000  PACK      KEY10,FMJOPRE3,FMJMJID,SP10
          CALL      RSFMJW1             * position at start of the comments
.
          CALL      RKFMJW1
          BRANCH    OVRCD,WCOM2000
.
          PACK      KEY14,FMJWJTY,FMJWJID,SP10
          MATCH     KEY10,KEY14         * right comments
          GOTO      WCOM2000 IF NOT EQUAL
.
          PACK      KEY10,FMJWJTY,FMJWJID,FMJWLNO
          CALL      DEFMJW1
          GOTO      WCOM0000
.
WCOM2000  MOVE      ONE,FORM3
          MOVE      FMJOPRE3,FMJWJTY
          MOVE      FMJMJID,FMJWJID
          OPEN      FMSTMP01,FILENAM1            * go to start of records
.
WCOM3000  READ      FMSTMP01,SEQ;FMJWLINE
          GOTO      WCOM9999 IF OVER
.          
          MOVE      FORM3,FMJWLNO               * set up line number
        
          PACK      KEY10,FMJWJTY,FMJWJID,FMJWLNO
          CALL      WRFMJW1
          ADD       ONE,FORM3
          GOTO      WCOM3000
.
WCOM9999  RETURN
.*************************************************************************
.* TRAN - Process all transaction Details                                *
.*        Returns : EXIT = 1 - exit = 0 - valid item chosen              *
.*                     called by : ML2000                                *
.*************************************************************************
TRAN0000  MOVE      ONE,NEXT           *assume no next screen
          MOVE      ONE,MODE
          MOVE      TWO,SCREEN
          MOVE      EIGHT,CVERT
          MOVE      ONE,DISPCNT
          PROC      CBAL0000           * calulate balance from file
.
          IF        IBCNUBAS=1
            DISPLAY   *P1:5,*EF,*P24:6,*V2LON,"Transaction Details":
                      *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                      *P8:7,"Account    ",*P20:7,BASDESC,*P24:7," Diss":
                      *P30:7,"Resp":
                      *P35:7,"Transaction Description      ":
                      *P65:7,"         Amount"
          ELSE
            DISPLAY   *P1:5,*EF,*P24:6,*V2LON,"Transaction Details":
                      *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                      *P8:7,"Account    ",*P24:7," Diss":
                      *P30:7,"Resp":
                      *P35:7,"Transaction Description      ":
                      *P65:7,"         Amount"
          ENDIF
.
          PACK      KEY10,FMJOPRE3,FMJMJID,SP10
          CALL      RSFMJD1
.
          MOVE      ONE,POSTFLAG
          MOVE      ONE,PAGENO
.
TRAN1000  MOVE      "15",NUMREC
          CALL      DACN0000            * Display next page of relative accounts
          COMPARE   TWO,EXIT            * none there - straight to insert mode
          GOTO      TRAN6000 IF EQUAL
.
TRAN1500  MOVE      ONE,MODE
          CLEAR     VALOPTN
          DISPLAY   *P1:24,*EL,"Select Item, (",*V2LON,"I",*HOFF,")nsert":
                               " before, ";
          APPEND    ANSI,VALOPTN
          MOVE      "40",CCOL
.
          BRANCH    NEXT,TRAN2000       * is there a next page
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
          APPEND    ANSN,VALOPTN
.
TRAN2000  COMPARE   ONE,PAGENO         * no previous page if we are on page one
          GOTO      TRAN3000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious Page, ";
          ADD       "17",CCOL
          APPEND    ANSP,VALOPTN
.
TRAN3000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it ?"
          APPEND    ANSX,VALOPTN
.
TRAN4000  KEYIN     *PCCOL:24,*EL,*DV,UNDLN2,*JR,*PCCOL:24,*V2LON,DIM2
          REP       UPPLOW,DIM2
          TYPE      DIM2
          GOTO      TRAN9000 IF EQUAL
.
          MATCH     SP1,DIM2         * cant enter two letters
          GOTO      TRAN4000 IF NOT EQUAL
          UNPACK    DIM2,ANS,ANS
          RESET     VALOPTN
          SCAN      ANS,VALOPTN            * valid option chosen?
          GOTO      TRAN4000 IF NOT EQUAL
          RESET     VALOPTN
.
          REP       "N1P2X3I4",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,TRAN4500,TRAN5000,TRAN8000,TRAN7000
.
          GOTO      TRAN4000
.
TRAN4500  ADD       ONE,PAGENO
          DISPLAY   *P1:8,*EF;
          GOTO      TRAN1000
.
TRAN5000  COMPARE   "2",PAGENO        * if on second page - go from start
          GOTO      TRAN0000 IF EQUAL
          CALL      PREV0000          * read back a page so we can read 
.                                     * forward a page
          GOTO      TRAN1000
.
TRAN6000  CALL      ITRN0000          * go back into input mode
          BRANCH    EXIT,TRAN9999
          GOTO      TRAN1500
.
. ------- New Insert Option
TRAN7000  CALL      INSRT000          * Insert Item
          GOTO      TRAN1500
.
TRAN8000  COMPARE   ZERO,BALANCE      * journal's gotta balance lad
          GOTO      TRAN8500 IF EQUAL
          DISPLAY   *P1:24,*EL,*B,"Journal must balance to zero - ";
          CALL      HITENTER
          GOTO      TRAN1500
.
TRAN8500  CALL      CALJ0000
          MOVE      TRUE,EXIT          
          MOVE      ONE,POSTFLAG
          GOTO      TRAN9999
.
TRAN9000  MOVE      ZERO,CCITEM
          MOVE      DIM2,CCITEM
          COMPARE   CCITEM,ZERO    * cant be less than zero
          GOTO      TRAN4000 IF NOT LESS
. 
          COMPARE   CCITEM,TEN5    * a valid selection?
          GOTO      TRAN9600 IF LESS
.
          COMPARE   CCITEM,MAXDISP    * a valid selection?
          GOTO      TRAN6000 IF LESS
. 
          CALL      PTRN0000        * process a single transaction
          CALL      CURP0000        * display current page
          GOTO      TRAN1500
.
TRAN9600  DISPLAY   *P1:8,*EF;
          MOVE      EIGHT,CVERT
          MOVE      "0",MAXDISP
          ADD       ONE,PAGENO
          GOTO      TRAN6000
.
TRAN9999  RETURN
.*************************************************************************
.* INSRT - Insert Item                                                   *
.*************************************************************************
INSRT000  MOVE      SP70,DIM2
          DISPLAY   *P1:24,*EL,"Insert Before Item, e(":
                    *V2LON,"X",*HOFF,")it ? ";
          KEYIN     *V2LON,*JR,DIM2
.
          MATCH     DIM2,SP70
          GOTO      INSRT999 IF EQUAL
.
          UNPACK    DIM2,ANS,ANS
.
          MATCH     EXITCHAR,ANS
          GOTO      INSRT999 IF EQUAL
.
          TYPE      DIM2
          IF        !@EQUAL
            REP       "xX",ANS
            MATCH     "X",ANS
            GOTO      INSRT999 IF EQUAL
            GOTO      INSRT800
          ENDIF
.
          MOVE      DIM2,INSRTLNO
          IF        INSRTLNO<1 | INSRTLNO>MAXDISP 
            GOTO      INSRT800
          ENDIF
.
. ------- Valid Entry for insert
          CALL      STRN0000                 * Special Insert Input Details
          IF        EXIT=1
            MOVE      ZERO,EXIT
            GOTO      INSRT999
          ENDIF
          GOTO      INSRT000
.
INSRT800  DISPLAY   "Invalid Option.  ";
          CALL      HITENTER
          GOTO      INSRT000
.
INSRT999  RETURN
.*************************************************************************
.* STRN - Input transactions                    Called by TRAN6000       *
.*************************************************************************
STRN0000  MOVE      INSRTLNO,DISPCNT
          MOVE      DISPCNT,CVERT
          MOVE      TWO,SCREEN
          CALL      CLR1000            * clear variables
          ADD       "7",CVERT
STRN1000  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT
.
STRN2000  CALL      KDCR0000               * keyin credit or debit
          BRANCH    EXIT,STRN9000
.         
STRN3000  CALL      KACC0000               * keyin account
          BRANCH    EXIT,STRN2000,STRN2000
.
STRN3500  IF        IBCNUBAS=1
            CALL      KBAS0000               * keyin BAS
            BRANCH    EXIT,STRN4000,STRN2000
          ENDIF
.
STRN4000  CALL      KDIS0000               * keyin dissection
          IF        IBCNUBAS=1
            BRANCH    EXIT,STRN3500,STRN2000
          ELSE
            BRANCH    EXIT,STRN3000,STRN2000
          ENDIF
.
STRN5000  CALL      KRES0000               * keyin responsibility
          BRANCH    EXIT,STRN4000,STRN2000
.
STRN6000  CALL      KDSC0000               * keyin description
          BRANCH    EXIT,STRN9000
.
STRN7000  CALL      KAMT0000              * Keyin amount
          BRANCH    EXIT,STRN6000,STRN2000
.
STRN8000  CALL      SUPD0000
          MATCH     "D",FMJDDRCR           * debit or credit
          IF        @EQUAL
            ADD       FMJDTAMT,BALANCE
          ELSE
            SUB       FMJDTAMT,BALANCE
          ENDIF
          DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE
          MOVE      INSRTLNO,DISPCNT
.
          MOVE      FMJDDESC,DIM30
          MOVE      "Dr",SAVEDESC
          MATCH     "D",FMJDDRCR
          IF        !@EQUAL
            MOVE      "Cr",SAVEDESC
          ENDIF
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,DIM30,FMJDTAMT
.
STRN8700  IF        DISPCNT < MAXDISP
            ADD       ONE,DISPCNT
            ADD       ONE,INSRTLNO
          ELSE
            ADD       ONE,CVERT
            MOVE      DISPCNT,NUMREC
            IF        MAXDISP<15
              ADD       ONE,DISPCNT
              ADD       ONE,INSRTLNO
              ADD       ONE,MAXDISP
              ADD       ONE,RECCNT
            ELSE
              ADD       ONE,PAGENO
              MOVE      ONE,INSRTLNO
              MOVE      ZERO,MAXDISP
              MOVE      ZERO,RECCNT
              CALL      CSEL0000
              CALL      RKFMJD1
              PACK      SEL01,FMJDJTY,FMJDJID,FMJDLNO
              DISPLAY   *P1:8,*EF
            ENDIF
          ENDIF
          GOTO      STRN0000
.
STRN9000  MOVE      ONE,NEXT
          MOVE      INSRTLNO,FORM2
          IF        FORM2>1
            SUB       ONE,FORM2
          ENDIF
          LOAD      KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                SEL06,SEL07,SEL08,SEL09,SEL10:
                                SEL11,SEL12,SEL13,SEL14,SEL15
          CALL      RSFMJD1
          CALL      RPFMJD1
          ASSIGN    FORM2+7,CVERT
          MOVE      "15",MAXDISP
          REPEAT
            CALL      RKFMJD1
            BRANCH    OVRCD,STRN9100
.
            PACK      KEY7,FMJDJTY,FMJDJID,SP70
            MATCH     KEY7,KEY10
            GOTO      STRN9100 IF NOT EQUAL
.
            MOVE      "Dr",SAVEDESC
            MATCH     "D",FMJDDRCR
            IF        !@EQUAL
              MOVE      "Cr",SAVEDESC
            ENDIF
            MOVE      FMJDDESC,DIM30
            DISPLAY   *P1:CVERT,*EL,*V2LON,FORM2,*HOFF,DOT:
                      *P5:CVERT,SAVEDESC,*P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC:
                      *P24:CVERT,FMJDDIS,SP1,FMJDRES,SP1,DIM30,FMJDTAMT
            PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
            STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            ADD       ONE,FORM2
            ADD       ONE,CVERT
          UNTIL     FORM2>MAXDISP
          MOVE      ZERO,NEXT
.
STRN9100  SUB       ONE,FORM2
          MOVE      FORM2,MAXDISP
          MOVE      FORM2,RECCNT
.
          COMPARE   "1",PAGENO             * are we on the first page
          GOTO      STRN9500 IF NOT EQUAL   * no - thats cool - go out
.
          COMPARE   "1",DISPCNT             * yes - first line?
          GOTO      STRN9500 IF NOT EQUAL     * no - thats cool - go out
.
          MOVE      TRUE,EXIT
          GOTO      STRN9999
.
STRN9500  MOVE      FALSE,EXIT
.
STRN9999  RETURN
.*************************************************************************
.* SUPD - Special Update of Journal Details File                         *
.*************************************************************************
SUPD0000  LOAD      KEY10SAV,INSRTLNO,SEL01,SEL02,SEL03,SEL04,SEL05:
                                      SEL06,SEL07,SEL08,SEL09,SEL10:
                                      SEL11,SEL12,SEL13,SEL14,SEL15
          MATCH     KEY10SAV,SP10
          IF        @EQUAL
            MOVE      INSRTLNO,FORM2
            SUB       ONE,FORM2
            LOAD      KEY10SAV,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                     SEL06,SEL07,SEL08,SEL09,SEL10:
                                     SEL11,SEL12,SEL13,SEL14,SEL15
            MATCH     KEY10SAV,SP10
            IF        @EQUAL
              DISPLAY   *P1:24,*EL,"Invalid Selection Condition. ":
                        "Contact System Admin. ";
              CALL      HITENTER
              GOTO      SUPD9999
            ENDIF
            PACK    KEY10,KEY10SAV
            CALL    RSFMJD1
            CALL    RKFMJD1               * Read item inserting before
            PACK    KEY10SAV,FMJDJTY,FMJDJID,FMJDLNO
          ENDIF
.
          PACK      KEY10,FMJOPRE3,FMJMJID,Z20
SUPD1000  CALL      RSFMJD1
          CALL      RPFMJD1
          IF        OVRCD=1        
            MOVE      ONE,FMJDLNO
            GOTO      SUPD2000
          ENDIF
.
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          MATCH     KEY10SAV,KEY10
          IF        !@LESS
            MOVE      FMJDLNO,FORM3
            ADD       ONE,FORM3
            MOVE      FORM3,FMJDLNO
            CALL      UPFMJD1
            GOTO      SUPD1000             * Update Item
          ENDIF
.
SUPD2000  UNPACK    KEY10SAV,FMJDJTY,FMJDJID,FMJDLNO
          MOVE      KEY10SAV,KEY10
          CALL      RAFMJD1
          IF        OVRCD=0
            DISPLAY   *P1:24,*EL,"Position Should exist (line no. = ":
                                 FMJDLNO,"). ";
            CALL      HITENTER
            GOTO      SUPD9999
          ENDIF
          MOVE      FMAMACCT,FMJDACC
          MOVE      FMDSCODE,FMJDDIS
          MOVE      FMRSCODE,FMJDRES
          MOVE      SAVJDESC,FMJDDESC
          MOVE      SAVEDRCR,FMJDDRCR
          MOVE      IBBABASC,FMJDBASC
          MOVE      AMOUNT,FMJDTAMT
          CALL      WRFMJD1
.
. ------- Update Screen Saved Selections
          MATCH     SEL15,SP70
          IF        (!@EQUAL) & (INSRTLNO<15)
            MOVE      ZERO,NEXT             * There is now a next page
          ELSE
            MOVE      ONE,NEXT
          ENDIF
          MOVE      MAXDISP,FORM2
          IF        FORM2=15
            SUB       ONE,FORM2
            GOTO      SUPD3000
          ELSE
            ADD       ONE,MAXDISP
            ADD       ONE,RECCNT 
          ENDIF
          REPEAT
            LOAD      KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            ADD       ONE,FORM2
            UNPACK    KEY10,KEY7,KEY3
            MOVE      KEY3,FORM3
            ADD       ONE,FORM3
            PACK      KEY10,KEY7,FORM3
            STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            SUB       TWO,FORM2
          UNTIL     FORM2<INSRTLNO
.
          STORE     KEY10SAV,INSRTLNO,SEL01,SEL02,SEL03,SEL04,SEL05:
                                      SEL06,SEL07,SEL08,SEL09,SEL10:
                                      SEL11,SEL12,SEL13,SEL14,SEL15
          PACK      KEY10,KEY10SAV
          CALL      RDFMJD1
.
          MOVE      "Dr",SAVEDESC
          MATCH     "D",FMJDDRCR
          IF        !@EQUAL
            MOVE      "Cr",SAVEDESC
          ENDIF
          GOTO      SUPD9999
.
SUPD3000
.
SUPD9999  RETURN
.*************************************************************************
.* DACN - Display the next page of accounts on file  Called by Lots      *
.*        Requires the file pointer to be positioned before the first    *
.*        record that we wish to display                                 *
.*************************************************************************
DACN0000  MOVE      ONE,DISPCNT
          MOVE      ONE,NEXT
          MOVE      EIGHT,CVERT
          MOVE      ZERO,RECCNT
          DISPLAY   *P1:8,*EF;
.
          PROC      CBAL0000           * calulate balance from file
          CALL      CSEL0000          * clear screen variables(SEL)
.
DACN1000  CALL      RKFMJD1           * read next record
          BRANCH    OVRCD,DACN9000
.
          MATCH     FMJOPRE3,FMJDJTY  * Periodic Journal?
          GOTO      DACN9000 IF NOT EQUAL
.
          MATCH     FMJDJID,FMJMJID  * right journal?
          GOTO      DACN9000 IF NOT EQUAL
.
          COMPARE   "23",CVERT        * full page?
          GOTO      DACN8000 IF EQUAL
.
          MOVE      FMJDDESC,DIM30
          MOVE      "Dr",DRCRDESC     * set up credit debit description
          MATCH     ANSD,FMJDDRCR     * credit or debit
          GOTO      DACN2000 IF EQUAL
          MOVE      "Cr",DRCRDESC
.
DACN2000  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,DRCRDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,DIM30,FMJDTAMT
          ADD       ONE,RECCNT
          MOVE      CVERT,FORM2
          SUB       "7",FORM2
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07,SEL08:
                                SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          MOVE      DISPCNT,MAXDISP
          ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "15",NUMREC         * do we want to display the whole screen
          GOTO      DACN1000 IF EQUAL
.
          COMPARE   RECCNT,NUMREC       * if not have we displayed enough?
          GOTO      DACN1000 IF NOT EQUAL
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DACN9700
.
DACN8000  MOVE      ZERO,NEXT        * there is a next page
          CALL      RPFMJD1          * read back so when next page only 
.                                    * have to read forward
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DACN9700
.
DACN9000  COMPARE   "8",CVERT
          GOTO      DACN9500 IF NOT EQUAL
          MOVE      ZERO,MAXDISP
.
          MOVE      TWO,EXIT        * straight to insert thanks
          GOTO      DACN9700
.
DACN9500  MOVE      ONE,EXIT         * no next page
.
DACN9700  DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE
.
DACN9999  RETURN
. 
.*************************************************************************
.* CURP - Display current page                 Called by RBPFFM30        *
.*************************************************************************
CURP0000  PACK      KEY10,FMJOPRE3,FMJMJID,FMJDLNO
          MOVE      SEL01,KEY10
          MOVE      MAXDISP,NUMREC
          CALL      RSFMJD1           * read details of first record on screen
          CALL      RPFMJD1
          BRANCH    OVRCD,CURP1000
          GOTO      CURP2000
.
CURP1000  MOVE      SP20,KEY10
          CALL      RSFMJD1    
.
CURP2000  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJMJID,*HOFF:
                    *P51:4,"Status  : ",*V2LON,STATDESC,*HOFF:
                    *P51:5,"Balance : ",*V2LON,BALANCE:
                    *P24:6,*V2LON,"Transaction Details":
                    *P1:7,*V2LON,*ULON,"Item",*P5:7,"DC":
                    *P8:7,"Account    ";
          IF        IBCNUBAS=1
            DISPLAY   *P20:7,*V2LON,*ULON,BASDESC;
          ENDIF
          DISPLAY   *P24:7,*V2LON,*ULON,"Diss ":
                    *P30:7,"Resp":
                    *P35:7,"Transaction Description      ":
                    *P65:7,"         Amount"
          MOVE      MAXDISP,NUMREC
          CALL      DACN0000          * display screen
.
CURP9999  RETURN
.*************************************************************************
.* CSEL - Clear the SEL variables               Called by DACN0000       *
.*************************************************************************
CSEL0000  UNPACK    SP70,SEL01,SEL02,SEL03,SEL04,SEL05
          UNPACK    SP70,SEL06,SEL07,SEL08,SEL09,SEL10
          UNPACK    SP70,SEL11,SEL12,SEL13,SEL14,SEL15
.
CSEL9999  RETURN
.*************************************************************************
.* PREV - read back 15 records from first one on screen for previous     *
.*        page                                                           *
.*                     called by : SACN                                  *
.*************************************************************************
PREV0000  MOVE      SEL01,KEY10
          CALL      RSFMJD1
          MOVE      ONE,FORM2
          SUB       ONE,PAGENO
.
PREV1000  CALL      RPFMJD1         * read back one
          BRANCH    OVRCD,PREV9000
.
          COMPARE   "16",FORM2      * have we read back far enough
          GOTO      PREV9999 IF EQUAL * go out if so
.
          ADD       ONE,FORM2
          GOTO      PREV1000
.
PREV9000  MOVE      SP70,KEY10      * reached eof - posy at start
          CALL      RSFMJD1
.
PREV9999  RETURN
.*************************************************************************
.* ITRN - Input security allocations            Called by TRAN6000       *
.*************************************************************************
ITRN0000  MOVE      MAXDISP,DISPCNT
          CALL      CLR1000            * clear variables
          MOVE      ZERO,MODE
          MOVE      DISPCNT,NUMREC
          ADD       ONE,DISPCNT
          MOVE      DISPCNT,CVERT
          ADD       "7",CVERT
.
ITRN1000  DISPLAY   *P1:CVERT,*EF,*V2LON,DISPCNT,*HOFF,DOT
.
ITRN2000  CALL      KDCR0000               * keyin credit or debit
          BRANCH    EXIT,ITRN9000
.         
ITRN3000  CALL      KACC0000               * keyin account
          BRANCH    EXIT,ITRN2000,ITRN2000
.
ITRN3500  IF        IBCNUBAS=1
            CALL      KBAS0000               * keyin BAS
            BRANCH    EXIT,ITRN4000,ITRN2000
          ENDIF
.
ITRN4000  CALL      KDIS0000               * keyin dissection
          IF        IBCNUBAS=1
            BRANCH    EXIT,ITRN3500,ITRN2000
          ELSE
            BRANCH    EXIT,ITRN3000,ITRN2000
          ENDIF
.
ITRN5000  CALL      KRES0000               * keyin resp
          BRANCH    EXIT,ITRN4000,ITRN2000
.
ITRN6000  CALL      KDSC0000               * keyin desc
          BRANCH    EXIT,ITRN2000
.
ITRN7000  CALL      KAMT0000               * keyin amount
          BRANCH    EXIT,ITRN6000,ITRN2000
.
ITRN8000  MOVE      FMJMJID,FMJDJID        * set up file variables
          MOVE      FMJOPRE3,FMJDJTY
          MOVE      FMAMACCT,FMJDACC
          MOVE      FMDSCODE,FMJDDIS
          MOVE      FMRSCODE,FMJDRES
          MOVE      SAVEDRCR,FMJDDRCR
          MOVE      AMOUNT,FMJDTAMT
          MOVE      IBBABASC,FMJDBASC
.
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          CALL      RAFMJD1                 * write to file
          BRANCH    OVRCD,ITRN8500
          MOVE      FMJDLNO,FORM3
          ADD       ONE,FORM3
          MOVE      FORM3,FMJDLNO
          GOTO      ITRN8000
.
ITRN8500  CALL      WRFMJD1                 * write to file
          STORE     KEY10,DISPCNT,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                  SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14:
                                  SEL15
.
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,DIM30,FMJDTAMT
          MOVE      DISPCNT,MAXDISP
          MATCH     "D",FMJDDRCR           * debit or credit
          GOTO      ITRN8600 IF NOT EQUAL
          ADD       FMJDTAMT,BALANCE
          GOTO      ITRN8700
.
ITRN8600  SUB       FMJDTAMT,BALANCE
.
ITRN8700  DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE
          ADD       ONE,DISPCNT
          ADD       ONE,CVERT
          ADD       ONE,NUMREC
          COMPARE   "23",CVERT              * full page
          GOTO      ITRN1000 IF LESS
          DISPLAY   *P1:8,*EF;
          MOVE      "8",CVERT
          MOVE      "1",DISPCNT
          ADD       ONE,PAGENO
          GOTO      ITRN1000
.
ITRN9000  DISPLAY   *P1:CVERT,*EL;
.
          COMPARE   "1",PAGENO             * are we on the first page
          GOTO      ITRN9500 IF NOT EQUAL   * no - thats cool - go out
.
          COMPARE   "1",DISPCNT             * yes - first line?
          GOTO      ITRN9500 IF NOT EQUAL     * no - thats cool - go out
.
          MOVE      TRUE,EXIT
          GOTO      ITRN9999
.
ITRN9500  MOVE      FALSE,EXIT
.
ITRN9999  RETURN
.*************************************************************************
.* KDCR - Keyin Dr or Cr                      Called by ITRN0000         *
.*************************************************************************
KDCR0000  MOVE      "5",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDCR0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "6",CVERT
.
KDCR0500  PACK      FMJDDRCR,FMJDDRCR,SP1 * first time in might be nothing in it
          DISPLAY   *P1:24,*V2LON:
                    "D",*HOFF," = Debit, ",*V2LON:
                    "C",*HOFF," = Credit, ",*V2LON:
                    "X",*HOFF," = Exit",*EF;
          MOVE      "DCX\*",VALOPTN
          MATCH     SP1,FMJDDRCR          * any default
          GOTO      KDCR1000 IF EQUAL     * no - dont use *rv keyin
          KEYIN     *PCCOL:CVERT,*DV,*EL,FMJDDRCR:
                    *PCCOL:CVERT,*RV,*V2LON,FMJDDRCR
          GOTO      KDCR2000
.
KDCR1000  KEYIN     *PCCOL:CVERT,*DV,*EL,UNDLN1,*PCCOL:CVERT,*V2LON,FMJDDRCR
KDCR2000  PACK      FMJDDRCR,FMJDDRCR,SP1 * first time in might be nothing in it
.
          REP       UPPLOW,FMJDDRCR
          SCAN      FMJDDRCR,VALOPTN      * is it a valid option?
          GOTO      KDCR1000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EF;
          MATCH     SP1,FMJDDRCR          * anything entered?
          GOTO      ITRN9000 IF EQUAL
.
          MATCH     "*",FMJDDRCR          * exit?
          GOTO      KDCR9000 IF EQUAL
          MATCH     "X",FMJDDRCR          * exit?
          GOTO      KDCR9000 IF EQUAL
          MATCH     EXITCHAR,FMJDDRCR     * exitchar?
          GOTO      KDCR9000 IF EQUAL
.
          MATCH     "D",FMJDDRCR          * debit?
          GOTO      KDCR3000 IF EQUAL
.
          MOVE      "Cr",DRCRDESC
          MOVE      "Credit",DRCRLDES
          GOTO      KDCR4000
KDCR3000  MOVE      "Dr",DRCRDESC
          MOVE      "Dedit",DRCRLDES
.
KDCR4000  COMPARE   "3",SCREEN          * which screen
          GOTO       KDCR5000 IF EQUAL
          DISPLAY   *PCCOL:CVERT,*V2LON,DRCRDESC
          GOTO      KDCR6000
.
KDCR5000  DISPLAY   *P28:CVERT,*V2LON,DRCRLDES
.
KDCR6000  MOVE      FMJDDRCR,SAVEDRCR
          MOVE      DRCRDESC,SAVEDESC
          MOVE      FALSE,EXIT
          GOTO      KDCR9999
.
KDCR9000  MOVE      ONE,EXIT
.
KDCR9999  RETURN
.*************************************************************************
.* KACC - Keyin account code             Called by ITRN2000              *
.*************************************************************************
KACC0000  MOVE      " 8",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KACC0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "7",CVERT
          MOVE      FMJDACC,UNDLN70
          MOVE      FMJDACC,FMAMACCT
.
KACC0500  MOVE      FMJMLEDG,FMLALEDG
          MOVE      "1",CACCTIND
          CALL      KAMAFM00              * account keyin
          BRANCH    EXIT,KACC1000,KACC9999
          IF        FMAMSTAT=2
            BEEP
            MOVE      "Account Code Closed or Suspended - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KACC0500
          ENDIF
.
          MOVE      FMAMACCT,FMJDACC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDACC 
          COMPARE   "3",SCREEN
          GOTO      KACC9999 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMAMDESC
          GOTO      KACC9999
.
KACC1000 
          MOVE      ONE,EXIT
          COMPARE   "3",SCREEN        * 3rd screen
          GOTO      KACC9999 IF NOT EQUAL
          MOVE      FMJDACC,FMAMACCT
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDACC,*P41:CVERT,*HOFF,FMAMDESC
.
KACC9999  PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KBAS - Keyin BAS code          Called by ITRN3500, STRN3500, PTRN1700 *
.*        Returns EXIT = 0 - valid entry 1 -null 2 exitchar              *
.*************************************************************************
KBAS0000  MOVE      " 20",CCOL            * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KBAS1000 IF NOT EQUAL * no thats cool go ahead
          MOVE      " 28",CCOL            * yes - move in screen three posy
          MOVE      "13",CVERT
          MOVE      FMJDBASC,UNDLN70
          MOVE      FMJDBASC,IBBABASC
.
KBAS1000  MOVE      ZERO,CKEYTYP
          CALL      KIBBAA00
          BRANCH    EXIT,KBAS8000,KBAS9000
.
          MOVE      IBBABASC,FMJDBASC
.
KBAS1500  DISPLAY   *PCCOL:CVERT,*V2LON,FMJDBASC;
          MOVE      ZERO,EXIT
          COMPARE   "3",SCREEN
          GOTO      KBAS1600 IF NOT EQUAL
          DISPLAY   *P41:CVERT,IBBADESC
          GOTO      KBAS9999
.
KBAS1600  DISPLAY   *P1:24,*EL,"BAS Description : ",*V2LON,IBBADESC
          GOTO      KBAS9999
.
KBAS2000  DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          COMPARE   "3",SCREEN
          GOTO      KBAS1500 IF NOT EQUAL
          MOVE      FMJDBASC,IBBABASC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDBASC,*HOFF,*P41:CVERT,IBBADESC
          MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS8000  DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          MOVE      SP3,FMJDBASC
          MOVE      SP30,IBBADESC
          COMPARE   "3",SCREEN
          GOTO      KBAS9999 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*EL;
          MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS9000  MOVE      SP70,FMJDBASC
.
KBAS9999  PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KDIS - Keyin dissection                    Called by ITRN4000         *
.*        Returns - EXIT = 0 - valid entry 1 - null                      *
.*************************************************************************
KDIS0000  MOVE      "24",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDIS0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "9",CVERT
.
KDIS0500  PACK      FMDSCODE,FMDSCODE,SP10
.
          MATCH     SP5,FMDSCODE            * is there a default
          GOTO      KDIS1000 IF EQUAL
          MOVE      FMDSCODE,UNDLN70
          MOVE      FMDSCODE,FMJDDIS
.
KDIS1000  MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00
.         CALL      KDISFM00               * keyin dissection
          BRANCH    EXIT,KDIS2000,KDIS9500
.
          MOVE      FMDSCODE,FMJDDIS
KDIS1500 
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDDIS
          MOVE      ZERO,EXIT
          COMPARE   "3",SCREEN
          GOTO      KDIS9999 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMDSDESC
          GOTO      KDIS9999
.
KDIS2000 
          MOVE      TRUE,EXIT
          MATCH     "_",UNDLN70              * did we use the default?
          GOTO      KDIS9999 IF EQUAL
          MOVE      FMJDDIS,FMDSCODE         * move default back in
          COMPARE   "3",SCREEN
          GOTO      KDIS1500 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDDIS,*HOFF,*P41:CVERT,FMDSDESC
          MOVE      ZERO,EXIT
          GOTO      KDIS9999
.
KDIS9500  MOVE      SP70,FMDSCODE
.
KDIS9999   
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.
.*************************************************************************
.* KRES - Keyin responsibility                  Called by ITRN5000       *
.*        Returns EXIT = 0 - valid entry  1 - null                       *
.*************************************************************************
KRES0000  MOVE      "30",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KRES0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "8",CVERT
.
KRES0500  PACK      FMRSCODE,FMRSCODE,SP10
.
          MATCH     SP4,FMRSCODE            * is there a default
          GOTO      KRES1000 IF EQUAL
          MOVE      FMRSCODE,UNDLN70
          MOVE      FMRSCODE,FMJDRES
.
KRES1000  MOVE      ZERO,CKEYTYP
          CALL      KFMRSA00
.         CALL      KRESFM00               * keyin dissection
          BRANCH    EXIT,KRES2000,KRES9500
.
          MOVE      FMRSCODE,FMJDRES
KRES1500  DISPLAY   *PCCOL:CVERT,*V2LON,FMJDRES
          MOVE      FALSE,EXIT
          COMPARE   "3",SCREEN
          GOTO      KRES9999 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMRSDESC
          GOTO      KRES9999
.
KRES2000  MOVE      TRUE,EXIT
          MATCH     "_",UNDLN70              * did we use the default?
          GOTO      KRES9999 IF EQUAL
          MOVE      FMJDRES,FMRSCODE       * move default back in
          COMPARE   "3",SCREEN
          GOTO      KRES1500 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDRES,*HOFF,*P41:CVERT,FMRSDESC
          MOVE      FALSE,EXIT
          GOTO      KRES9999
.
KRES9500  MOVE      SP70,FMRSCODE
.
.
KRES9999
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KAMT - keyin amount                      Called by ITRN5000           *
.*        Returns EXIT = 0 - valid    1 - null                           *
.*************************************************************************
KAMT0000  MOVE      "65",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KAMT0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "11",CVERT
          MOVE      FMJDTAMT,DIMAMNT
          KEYIN     *PCCOL:CVERT,*EL,*DV,FMJDTAMT:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,DIMAMNT;
.
          TYPE      DIMAMNT            * valid amount 3 ?
          GOTO      KAMT0000 IF NOT EQUAL
          MOVE      DIMAMNT,AMOUNT
          MOVE      DIMAMNT,FMJDTAMT
          DISPLAY   *PCCOL:CVERT,*V2LON,AMOUNT;
          GOTO      KAMT0600
.
KAMT0500  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN12,*DV,DOT,*DV,UNDLN2:
                    *PCCOL:CVERT,*V2LON,*JR,DIMAMNT;
.
KAMT0600  PACK      DIMAMNT,DIMAMNT,SP20
          MATCH     SP70,DIMAMNT               * null?
          GOTO      KAMT1000 IF EQUAL
.
          MATCH     "              \",DIMAMNT  * exitchar?
          GOTO      KAMT2000 IF EQUAL
.
          TYPE      DIMAMNT                    * valid amount ?
          GOTO      KAMT0000 IF NOT EQUAL
.
          MOVE      ZERO,EXIT
          MOVE      DIMAMNT,AMOUNT             * move into file var
          DISPLAY   *PCCOL:CVERT,*V2LON,AMOUNT;
          GOTO      KAMT9999
.
KAMT1000  MOVE      "1",EXIT                   * nothing entered
          GOTO      KAMT9999 
.
KAMT2000  MOVE      "2",EXIT
.
KAMT9999  RETURN
.
.*************************************************************************
.* KDSC - Keyin Description                Called by ITRN6000            *
.*        Returns EXIT = 0 - valid    1 - exitchar                       *
.*************************************************************************
KDSC0000 
          MOVE      "35",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDSC0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "10",CVERT
          GOTO      KDSC0600
.
KDSC0500  MOVE      FMJMDESC,FMJDDESC      * set up default
.
KDSC0600  MOVE      FMJDDESC,DIM30
          KEYIN     *PCCOL:CVERT,*EL,*DV,DIM30:
                    *PCCOL:CVERT,*V2LON,*RV,DIM30:
                    *PCCOL:CVERT,*DV,DIM30
          MOVE      DIM30,FMJDDESC
.       
          PACK      FMJDDESC,FMJDDESC,SP70
.
          MATCH     EXITCHAR,FMJDDESC     * exitchar?
          GOTO      KDSC9000 IF EQUAL
.        
          MATCH     QUEST,FMJDDESC
          GOTO      KDSC6000 IF NOT EQUAL
          CALL      HFMTDA00
          CALL      RTDSFM00
          CLEAR     DM4
          CLEAR     DIM40
          PACK      KEY4,FMTDCODE
          CALL      RDFMTD1
          BRANCH    OVRCD,KDSC0000
          MOVE      FMTDDESC,DIM30    
          MOVE      DIM30,FMJDDESC
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,DIM30
          GOTO      KDSC9999
         
KDSC6000  CLEAR     DM4
          CLEAR     DIM40
          MOVE      ZERO,EXIT             * vaild entry
          UNPACK    FMJDDESC,DM4,DIM40
          PACK      DIM40,DIM40,SP70
          MATCH     DIM40,SP70
          GOTO      KDSC9999 IF NOT EQUAL
          PACK      KEY4,DM4
          CALL      RDFMTD1
          BRANCH    OVRCD,KDSC9999
          MOVE      FMTDDESC,DIM30    
          MOVE      DIM30,FMJDDESC
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,DIM30
          GOTO      KDSC9999
.
KDSC9000  MOVE      ONE,EXIT              * exitchar entered
.
KDSC9999  MOVE      FMJDDESC,SAVJDESC
          RETURN 
.*************************************************************************
          DEFPROC   CBAL0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.*************************************************************************
.* CBAL - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: BALANCE                   *
.*************************************************************************
CBAL0000  MOVE      ZERO,BALANCE          * set to zero
.
          PACK      KEY10,FMJOPRE3,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CBAL1000  CALL      RKFMJD1
          BRANCH    OVRCD,CBAL9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CBAL9999 IF NOT EQUAL
.
          MATCH     "D",FMJDDRCR         * debit or credit?
          GOTO      CBAL2000 IF NOT EQUAL
.
          ADD       FMJDTAMT,BALANCE     * add debits
          GOTO      CBAL1000
.
CBAL2000  SUB       FMJDTAMT,BALANCE     * subtract credits
          GOTO      CBAL1000
.
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
CBAL9999  ENDPROC   
.*************************************************************************
.*************************************************************************
          DEFPROC   CDEB0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.*************************************************************************
.* CDEB - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: DEBTOT                   *
.*************************************************************************
CDEB0000  MOVE      ZERO,BALANCE          * set to zero
          MOVE      ZERO,DEBTOT
.
          PACK      KEY10,FMJOPRE3,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CDEB1000  CALL      RKFMJD1
          BRANCH    OVRCD,CDEB9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CDEB9999 IF NOT EQUAL
.
          MATCH     "D",FMJDDRCR         * debit or credit?
          GOTO      CDEB1000 IF NOT EQUAL
.
          ADD       FMJDTAMT,DEBTOT     * add debits
          GOTO      CDEB1000
.
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
CDEB9999  ENDPROC
.*************************************************************************
          DEFPROC   CCRE0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.*************************************************************************
.* CCRE - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: CREDTOT                   *
.*************************************************************************
CCRE0000  MOVE      ZERO,BALANCE          * set to zero
          MOVE      ZERO,CREDTOT
.
          PACK      KEY10,FMJOPRE3,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CCRE1000  CALL      RKFMJD1
          BRANCH    OVRCD,CCRE9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CCRE9999 IF NOT EQUAL
.
          MATCH     "C",FMJDDRCR         * debit or credit?
          GOTO      CCRE1000 IF NOT EQUAL
.
          ADD       FMJDTAMT,CREDTOT     * add debits
          GOTO      CCRE1000
.
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
CCRE9999  ENDPROC
.*************************************************************************
.* PTRN - Process a single transaction           Called by TRAN9000      *
.*                                                                       *
.*************************************************************************
PTRN0000  LOAD      KEY10,CCITEM,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                 SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          CALL      RDFMJD1           * read details file
          BRANCH    OVRCD,PTRN9999
.
          MOVE      "3",SCREEN        * doing third screen
.
          CALL      RAMAFM00          * display screen
.
PTRN1000  CALL      MAINQST           * select item post cancel?
          COMPARE   "0",CCITEM        * post?
          GOTO      PTRN8000 IF EQUAL
. 
          COMPARE   "-1",CCITEM        * cancel?
          GOTO      PTRN9999 IF EQUAL
.
          IF        IBCNUBAS=1
            BRANCH    CCITEM,PTRN1100,PTRN1200,PTRN1300,PTRN1400,PTRN1500:
                             PTRN1600,PTRN1700
          ELSE
            BRANCH    CCITEM,PTRN1100,PTRN1200,PTRN1300,PTRN1400,PTRN1500:
                             PTRN1600
          ENDIF
          BEEP
          GOTO      PTRN1000
.
PTRN1100  CALL      KDCR0000          * keyin debit/credit
          GOTO      PTRN1000
.
PTRN1200  CALL      KACC0000          * keyin account
          GOTO      PTRN1000
.
PTRN1300  MOVE      FMJDRES,FMRSCODE  * dissection code default
          CALL      KRES0000          * keyin responsibility
          GOTO      PTRN1000
.
PTRN1400  MOVE      FMJDDIS,FMDSCODE  * dissection code default
          CALL      KDIS0000          * keyin dissection
          GOTO      PTRN1000
.
PTRN1500  CALL      KDSC0000          * keyin description
          GOTO      PTRN1000
.
PTRN1600  CALL      KAMT0000          * keyin amount
          GOTO      PTRN1000
.
PTRN1700  CALL      KBAS0000          * keyin BAS Code
          GOTO      PTRN1000
.
PTRN8000  CALL      UPFMJD1           * update file
.
PTRN9999  MOVE      "2",SCREEN
          RETURN 
.*************************************************************************
.* DELT - OK to delete a journal            Called by ML2000             *
.*************************************************************************
DELT0000  CALL      GETW0000          * get wp notes
          CALL      DMDT0000          * display screen
          CALL      DELQST            * ok to delete
          BRANCH    CEXIT,DELT1000,DELT2000,DELT3000
.
DELT1000  PACK      KEY7,FMJMJTY,FMJMJID
          CALL      DEFMJM1
.
          PACK      KEY10,KEY7,SP70
.
DELT1100  CALL      RSFMJD1
          CALL      RKFMJD1
          BRANCH    OVRCD,DELT1200
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO,SP70
          MATCH     KEY7,KEY10         * this journal?
          GOTO      DELT1200 IF NOT EQUAL
          CALL      DEFMJD1
          GOTO      DELT1100
.
DELT1200  MOVE      FALSE,EXIT
          GOTO      DELT9999
.
DELT2000  MOVE      ONE,EXIT           * no
          GOTO      DELT9999
.
DELT3000  MOVE      TWO,EXIT           * cancel
.
DELT9999  RETURN 
.*************************************************************************
.* CHNG - Change mode options          Called by ML1500                  *
.*        Returns : EXIT = 0 - exit  1 - header det.  2 - trans. det.    *
.*                         3 - posting details  4 - display postings     *
.*************************************************************************
CHNG0000  PACK      KEY7,FMJMJTY,FMJMJID
          CALL      RDFMJM1
.
          DISPLAY   *P60:3,*EL,*V2LON,"Change",*P1:5,*EF:
                    *P1:6,*V2LON,"0",*HOFF,DOT,SP1,"Exit":
                    *P1:7,*V2LON,"1",*HOFF,DOT,SP1,"Header Details":
                    *P1:8,*V2LON,"2",*HOFF,DOT,SP1,"Transaction Details":
                    *P1:9,*V2LON,"3",*HOFF,DOT,SP1,"Display Postings":
                    *P1:11,"Select Option :"
.
CHNG1000  KEYIN     *P17:11,*DV,UNDLN1,*P17:11,*V2LON,FORM1
          COMPARE   "0",FORM1       
          GOTO      CHNG2000 IF LESS          * invalid selection
.
          COMPARE   FORM1,FOUR                * number too big?
          GOTO      CHNG2000 IF LESS
.
          MOVE      FORM1,EXIT                * set exit
          GOTO      CHNG9999
.
CHNG2000  BEEP
          GOTO      CHNG1000
.
CHNG9999  RETURN 
.*************************************************************************
.* DPST - Process all transaction Details                                *
.*        Returns : EXIT = 1 - exit = 0 - valid item chosen              *
.*                     called by : ML2000                                *
.*************************************************************************
DPST0000  MOVE      ONE,NEXT           *assume no next screen
          DISPLAY   *P60:3,*EL,*V2LON,"Display Postings"
          MOVE      ONE,MODE
          MOVE      SEVEN,CVERT
          MOVE      ONE,DISPCNT
          DISPLAY   *P1:5,*EF:
                    *P1:6,*V2LON,*ULON,"Date      ":
                    *P12:6,"Period        ",*P27:6,"Ending    ":
                    *P39:6,"Batch":
                    *P46:6,SP10,"Total",*P64:6,"Updated   "
          PACK      KEY12,FMJOPRE3,FMJMJID,SP10
          CALL      RSFMJP2
.
          MOVE      ONE,POSTFLAG
          MOVE      ONE,PAGENO
.
          MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1
.
DPST1000  MOVE      "16",NUMREC
          CALL      DPPS0000            * Display next page of relative accounts
          COMPARE   TWO,EXIT            * none there - straight to insert mode
          GOTO      DPST9000 IF EQUAL
.
DPST1500  MOVE      ONE,MODE
          CLEAR     VALOPTN
          MOVE      ZERO,CCOL
.
          DISPLAY   *P1:24,*EL
          BRANCH    NEXT,DPST2000       * is there a next page
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
          APPEND    ANSN,VALOPTN
.
DPST2000  COMPARE   ONE,PAGENO         * no previous page if we are on page one
          GOTO      DPST3000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious Page, ";
          ADD       "18",CCOL
          APPEND    ANSP,VALOPTN
.
DPST3000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it ?"
          ADD       TEN,CCOL
          APPEND    ANSX,VALOPTN
.
DPST4000  KEYIN     *PCCOL:24,*EL,*DV,UNDLN1,*JR,*PCCOL:24,*V2LON,ANS
          REP       UPPLOW,ANS
          TYPE      ANS
          GOTO      DPST4000 IF EQUAL
.
          RESET     VALOPTN
          SCAN      ANS,VALOPTN            * valid option chosen?
          GOTO      DPST4000 IF NOT EQUAL
.
          REP       "N1P2E3",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,DPST4500,DPST5000,DPST8000
.
          GOTO      DPST4000
.
DPST4500  ADD       ONE,PAGENO
          DISPLAY   *P1:7,*EF
          GOTO      DPST1000
.
DPST5000  COMPARE   "2",PAGENO       * if on second page - go from start
          GOTO      DPST0000 IF EQUAL
          CALL      PRPS0000          * read back a page so we can read 
                                      * forward a page
          GOTO      DPST1000
.
DPST8000  MOVE      TRUE,EXIT          
          MOVE      ONE,POSTFLAG
          GOTO      DPST9999
.
DPST9000  DISPLAY   *P1:24,*EL,"No posting data on file for this Journal - ";
          CALL      HITENTER
.
DPST9999  RETURN
.*************************************************************************
.* DPPS - Display the next page of postings on file  Called by Lots      *
.*        Requires the file pointer to be positioned before the first    *
.*        record that we wish to display                                 *
.*************************************************************************
DPPS0000  MOVE      ONE,DISPCNT
          MOVE      ONE,NEXT
          MOVE      SEVEN,CVERT
          MOVE      ZERO,RECCNT
          DISPLAY   *P1:7,*EF
          CALL      CSEL0000          * clear screen variables(SEL)
DPPS1000  CALL      RKFMJP2           * read next record
          BRANCH    OVRCD,DPPS9000
.
          MATCH     FMJOPRE3,FMJPJTY  * periodic journal?
          GOTO      DPPS9000 IF NOT EQUAL
.
          MATCH     FMJPJID,FMJMJID  * right journal?
          GOTO      DPPS9000 IF NOT EQUAL
.
          COMPARE   "23",CVERT        * full page?
          GOTO      DPPS8000 IF EQUAL
.
          MOVE      FMJPPDAT,WORKDATE
          CALL      CFPR0000          * get financial period
          UNPACK    FMJPPDAT,CCENT,CYEAR,CMON,CDAY 
          CALL      PACDATE             * format posting date
          MOVE      CPCDATE,POSTDATE
          BRANCH    FMJPREV,DPPS1900    * is it a reversal?
          GOTO      DPPS2000            * no - just display
DPPS1900  MULT      SEQ,FMJPDTOT        * yes - hten make it negative
.
DPPS2000  DISPLAY   *P1:CVERT,*EL,POSTDATE:
                    *P12:CVERT,WKDTDESC,*P27:CVERT,WKDTPDAT:
                    *P39:CVERT,FMJPBAT,*P46:CVERT,FMJPDTOT
          PACK      FMJPUDAT,FMJPUDAT,SP10
          MATCH     SP8,FMJPUDAT        * updated
          GOTO      DPPS3000 IF EQUAL
          UNPACK    FMJPUDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE             * format updating date
          DISPLAY   *P64:CVERT,CPCDATE
          GOTO      DPPS5000
.
DPPS3000  MOVE      ONE,DIM1
          MATCH     DIM1,FMJPAUTH
          GOTO      DPPS4000 IF EQUAL
          DISPLAY   *P64:CVERT,"Unauthorized"
          GOTO      DPPS5000
.
DPPS4000  
          DISPLAY   *P64:CVERT,"Authorized"
.
DPPS5000  ADD       ONE,RECCNT
          MOVE      CVERT,FORM2
          SUB       "6",FORM2
          PACK      KEY12,FMJPJTY,FMJPJID,FMJPBAT
          STORE     KEY12,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07,SEL08:
                                SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          MOVE      DISPCNT,MAXDISP
          ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "16",NUMREC         * do we want to display the whole screen
          GOTO      DPPS1000 IF EQUAL
.
          COMPARE   RECCNT,NUMREC       * if not have we displayed enough?
          GOTO      DPPS1000 IF NOT EQUAL
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DPPS9999
.
DPPS8000  MOVE      ZERO,NEXT        * there is a next page
          CALL      RPFMJP2          * read back so when next page only 
.                                    * have to read forward
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DPPS9999
.
DPPS9000  COMPARE   ONE,PAGENO      * first page?
          GOTO      DPPS9500 IF NOT EQUAL
          COMPARE   "7",CVERT        * first line of first page?
          GOTO      DPPS9500 IF NOT EQUAL  
          MOVE      TWO,EXIT        * straight to insert thanks
          GOTO      DPPS9999
.
DPPS9500  MOVE      ONE,EXIT         * no next page
.
DPPS9999  RETURN
. 
.*************************************************************************
.* PRPS - read back 15 records from first one on screen for previous     *
.*        page                                                           *
.*                     called by : SACN                                  *
.*************************************************************************
PRPS0000  MOVE      SEL01,KEY12
          CALL      RSFMJP2
          MOVE      ONE,FORM2
          SUB       ONE,PAGENO
.
PRPS1000  CALL      RPFMJP2         * read back one
          BRANCH    OVRCD,PRPS9000
.
          COMPARE   "17",FORM2      * have we read back far enough
          GOTO      PRPS9999 IF EQUAL * go out if so
.
          ADD       ONE,FORM2
          GOTO      PRPS1000
.
PRPS9000  MOVE      SP70,KEY10      * reached eof - posy at start
          CALL      RSFMJP2
.
PRPS9999  RETURN
.************************************************************************
.* AUTH - Process the submission for authorized   Called by ML5000      *
.*        Returns : EXIT = 1 - exit = 0 - valid item chosen              *
.*                     called by : ML2000                                *
.*************************************************************************
AUTH0000  MOVE      ONE,NEXT           *assume no next screen
          MOVE      ONE,AUTHFLAG         * set to all authorized
          MOVE      ZERO,REVFLAG
          MOVE      ZERO,SUBFLAG
          MOVE      SEVEN,CVERT
          MOVE      FMJMLEDG,KEY2      * set up number of periods
          CALL      RDFMLA1
          MOVE      "12",NOPERDS
          ADD       FMLAPERS,NOPERDS
.
          MOVE      ONE,POSTFLAG
          MOVE      ONE,PAGENO
          MOVE      ONE,DISPCNT
          MOVE      FMJMFPER,DIMPERD   * set up formperd for DATH0000
          REP       " 0",DIMPERD
          MOVE      DIMPERD,FORMPERD
          SUB       ONE,FORMPERD
          MOVE      FMJMLPER,LAST
          REP       " 0",LAST
          DISPLAY   *P1:5,*EF:
                    *P1:6,*V2LON,*ULON,"Item",*P6:6,"Period     ":
                    *P18:6,"Status      ",SP10,*P45:6,"Batch"
.
AUTH1000  MOVE      "14",NUMREC
          CALL      DATH0000            * Display next page of relative accounts
          COMPARE   ZERO,NEXT
          GOTO      AUTH1100 IF EQUAL
          BRANCH    AUTHFLAG,AUTH5500
.
AUTH1100  COMPARE   TWO,EXIT            * none there - straight to insert mode
          GOTO      AUTH9999 IF EQUAL
.
AUTH1500  MOVE      ONE,MODE
          CLEAR     VALOPTN
          APPEND    ANSA,VALOPTN
          DISPLAY   *P1:22,*EF,*P1:24,*EL,"No. of periods to submit, (":
                    *V2LON,"A",*HOFF,")ll, ";
          MOVE      "43",CCOL
          COMPARE   ZERO,FMJMREV       * reversing?
          GOTO      AUTH1600 IF EQUAL
          DISPLAY   "(",*V2LON,"R",*HOFF,")eversal, ";
          APPEND    ANSR,VALOPTN
          MOVE      "55",CCOL
.
AUTH1600  BRANCH    NEXT,AUTH2000       * is there a next page
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext, ";
          ADD       "8",CCOL
          APPEND    ANSN,VALOPTN
.
AUTH2000  COMPARE   ONE,PAGENO         * no previous page if we are on page one
          GOTO      AUTH3000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious, ";
          ADD       "12",CCOL
          APPEND    ANSP,VALOPTN
.
AUTH3000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it ?"
          APPEND    ANSX,VALOPTN
.
AUTH4000  KEYIN     *PCCOL:24,*EL,*DV,UNDLN2,*JR,*PCCOL:24,*V2LON,DIM2
          REP       UPPLOW,DIM2
          TYPE      DIM2
          GOTO      AUTH9000 IF EQUAL
.
          MATCH     SP1,DIM2         * cant enter two letters
          GOTO      AUTH4000 IF NOT EQUAL
          UNPACK    DIM2,ANS,ANS
          RESET     VALOPTN
          SCAN      ANS,VALOPTN            * valid option chosen?
          GOTO      AUTH4000 IF NOT EQUAL
          RESET     VALOPTN
.
          REP       "N1P2X3A4R5",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,AUTH4500,AUTH5000,AUTH8000,AUTH6000,AUTH7000
.
          GOTO      AUTH4000
.
AUTH4500  ADD       ONE,PAGENO
          DISPLAY   *P1:7,*EF
          GOTO      AUTH1000
.
AUTH5000  COMPARE   "2",PAGENO       * if on second page - go from start
          GOTO      AUTH0000 IF EQUAL
          CALL      PATH0000         * read back a page so we can read 
.                                    * forward a page
          GOTO      AUTH1000
.
AUTH5500  DISPLAY   *P1:24,*EL,*B:
                    "All transactions for this Journal have been submitted - ";
          CALL      HITENTER
          MOVE      "2",TEMPSTAT
          CALL      CSPS0000              * change journal status
          GOTO      AUTH9999
.
AUTH6000  READ      CONTROLF,FIFTY;*246,FMCOJAUT
          COMPARE   ONE,FMCOJAUT
          GOTO      AUTH9500 IF EQUAL
.
          MOVE      FMJMLPER,ENDPERD      * all chosen
          MOVE      "2",TEMPSTAT
          CALL      CSPS0000              * change journal status
          GOTO      AUTH9400
.
AUTH7000  MOVE      "2",SUBTYPE       * reversal only
          MOVE      FMJOPRE3,JOURTYPE
          CALL      REV0000           * ok to reverse?
          BRANCH    EXIT,AUTH1500
.
          CALL      SUB0000           * in include FMSSBAUT
          GOTO      AUTH1500
.
AUTH8000  MOVE      TRUE,EXIT          
          MOVE      ONE,POSTFLAG
          GOTO      AUTH9999
.
AUTH9000  READ      CONTROLF,FIFTY;*246,FMCOJAUT
          COMPARE   ONE,FMCOJAUT
          GOTO      AUTH9500 IF EQUAL
.
          MOVE      DIM2,CCITEM
.
AUTH9100  COMPARE   CCITEM,ZERO    * cant be less than zero
          GOTO      AUTH4000 IF NOT LESS
. 
          CALL      CEPD0000       * calculate the end period
          BRANCH    EXIT,AUTH1500  * calculated alright
.
AUTH9300  MOVE      "1",TEMPSTAT
          CALL      CSPS0000       *Change Status to Partially Submited
.
AUTH9400  MOVE      "1",SUBTYPE    * periodic only
          CALL      SUBM0000       * submit the entered amount of periods
          BRANCH    EXIT,AUTH5500
          GOTO      AUTH1500
.
AUTH9500  DISPLAY   *P1:24,*B,*EF,"Journal Authorization in Progress":
                    " - Try Again Later - ";
          CALL      HITENTER
          GOTO      AUTH9999
.
AUTH9999  RETURN
.************************************************************************
.* CSPS - change journal status to partially submitted                  *
.*                   called by : AUTH9300                               *
.************************************************************************
CSPS0000  PACK      KEY7,FMJOPRE3,FMJMJID
          CALL      RDFMJM1
          BRANCH    OVRCD,CSPS9999
.
          MOVE      TEMPSTAT,FMJMSTAT
          CALL      UPFMJM1
.
CSPS9999  RETURN 
.************************************************************************
.* CEPD - Calculate the last period that we want to submit              *
.************************************************************************
CEPD0000  COMPARE   ONE,CCITEM
          GOTO      CEPD0500 IF NOT EQUAL
          MOVE      STRTPERD,ENDPERD
          MOVE      FALSE,EXIT
          GOTO      CEPD9999
.
CEPD0500  MOVE      ONE,DISPCNT
          MOVE      STRTPERD,FORMPERD
.
CEPD1000  ADD       ONE,FORMPERD
          ADD       ONE,DISPCNT
          MOVE      FORMPERD,DIMPERD
          UNPACK    DIMPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,NOPERDS    * past the number of periods
          GOTO      CEPD2000 IF NOT LESS
          ADD       "87",FORMPERD     * get to first period of next year
.                                     * think about it - 13 + 88 = 101
          SUB       FMLAPERS,FORMPERD * correction for 13 period year
          MOVE      FORMPERD,FORM2
          COMPARE   ZERO,FORM2
          ADD       ONE,FORMPERD
.
CEPD2000  COMPARE   CCITEM,DISPCNT
          GOTO      CEPD1000 IF NOT EQUAL
          MOVE      FORMPERD,ENDPERD
.
          PACK      DIMPERD,LASTYEAR,LASTPERD
          MATCH     ENDPERD,FMJMLPER
          GOTO      CEPD9000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Not that many Periods remaining on this":
                    " Journal - ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      CEPD9999
.
CEPD9000  MOVE      ZERO,EXIT
.
CEPD9999  RETURN
.
.*************************************************************************
.* DATH - Display the next page of accounts on file  Called by Lots      *
.*        Requires the file pointer to be positioned before the first    *
.*        record that we wish to display                                 *
.*************************************************************************
DATH0000  MOVE      ONE,DISPCNT
          MOVE      ONE,NEXT
          MOVE      ONE,VALSLCT
          MOVE      SEVEN,CVERT
          MOVE      ZERO,RECCNT
          DISPLAY   *P1:8,*EF;
          PACK      KEY12,FMJMJTY,FMJMJID,SP10
          CALL      RSFMJP2
          CALL      CSEL0000          * clear screen variables(SEL)
.
DATH1000  ADD       ONE,FORMPERD
          MOVE      FORMPERD,DIMPERD
          MATCH     DIMPERD,LAST      * past the last?
          GOTO      DATH9000 IF LESS
          UNPACK    DIMPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,NOPERDS    * past the number of periods
          GOTO      DATH1500 IF NOT LESS
.
          ADD       "87",FORMPERD     * get to first period of next year
.                                     * think about it - 13 + 88 = 101
          SUB       FMLAPERS,FORMPERD * correction for 13 period year
          MOVE      FORMPERD,DIMPERD
          UNPACK    DIMPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
DATH1500
          COMPARE   ZERO,FORM2        * cant have period number 0
          GOTO      DATH1600 IF NOT EQUAL
          ADD       ONE,FORMPERD
          MOVE      FORMPERD,DIMPERD
.
DATH1600  UNPACK    DIMPERD,DIMYEAR,DIMMON
          PACK      KEY6,FMJMLEDG,DIMYEAR
          CALL      RDFMLC1
          MOVE      DIMMON,FORM2
          LOAD      PERDATE,FORM2,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                                  FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR:
                                  FMLC09FR,FMLC10FR,FMLC11FR,FMLC12FR:
                                  FMLC13FR
          UNPACK    PERDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CALL      CHDT0000          * check for that date on the posting file
.
          COMPARE   "21",CVERT        * full page?
          GOTO      DATH8000 IF EQUAL
.
DATH2000  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P6:CVERT,CPCDATE:
                    *P18:CVERT,PERSTAT,*P45:CVERT,FMJPBAT
.
DATH2010  ADD       ONE,RECCNT
          STORE     PERDATE,DISPCNT,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                SEL08:
                                SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          MOVE      DISPCNT,MAXDISP
          ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "14",NUMREC         * do we want to display the whole screen
          GOTO      DATH1000 IF EQUAL
.
          COMPARE   RECCNT,NUMREC       * if not have we displayed enough?
          GOTO      DATH1000 IF NOT EQUAL
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DATH9700
.
.
DATH8000  MOVE      ZERO,NEXT        * there is a next page
          SUB       ONE,FORMPERD
          GOTO      DATH9700
.
DATH9000  COMPARE   "7",CVERT
          GOTO      DATH9500 IF NOT EQUAL
          MOVE      ZERO,MAXDISP
.
          MOVE      TWO,EXIT        * not records?
          GOTO      DATH9700
.
DATH9500  MOVE      ONE,EXIT         * no next page
.
DATH9700 
.
DATH9999  RETURN
. 
.************************************************************************
.* CHDT - Check to see if this period has been processed                *
.************************************************************************
CHDT0000  PACK      KEY12,FMJMJTY,FMJMJID,SP10
          CALL      RSFMJP2
.
CHDT1000  CALL      RKFMJP2              * read next record
          BRANCH    OVRCD,CHDT8000
.
          PACK      KEY7,FMJPJTY,FMJPJID
          MATCH     KEY7,KEY12           * right journal?
          GOTO      CHDT8000 IF NOT EQUAL
.
          MATCH     PERDATE,FMJPPDAT     * same date?
          GOTO      CHDT1000 IF NOT EQUAL
.
          MOVE      ZERO,EXIT
          BRANCH    REVFLAG,CHDT9000     * do we want reversals?
          BRANCH    FMJPREV,CHDT1000     * dont want any reversing
          MOVE      "Awaiting Authorization",PERSTAT 
          GOTO      CHDT9999
.
CHDT8000  MOVE      "Awaiting Submission",PERSTAT
          MOVE      ONE,EXIT
          BRANCH    REVFLAG,CHDT9999
.
          MOVE      ZERO,AUTHFLAG        * set to not all authorized
          MOVE      SP10,FMJPBAT
          BRANCH    SUBFLAG,CHDT9999
.
          MOVE      ONE,SUBFLAG
          MOVE      DIMPERD,STRTPERD    * save first period that is awaiting sub
          MOVE      DISPCNT,VALSLCT      * the only valid one to select
          GOTO      CHDT9999
.
CHDT9000  COMPARE   "0",FMJPREV         * must be a reversal
          GOTO      CHDT1000 IF EQUAL
.
CHDT9999  RETURN
.*************************************************************************
.* PATH - read back 15 records from first one on screen for previous     *
.*        page                                                           *
.*                     called by : SACN                                  *
.*************************************************************************
PATH0000  DISPLAY   *P1:7,*EF;
          SUB       ONE,PAGENO
          SUB       CVERT,FORMPERD
          ADD       DISPCNT,FORMPERD
          SUB       "14",FORMPERD
          MOVE      FORMPERD,DIMPERD
          UNPACK    DIMPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,NOPERDS
          GOTO      PATH9999 IF NOT LESS
          SUB       "181",FORMPERD
          SUB       FMLAPERS,FORMPERD
.
PATH9999  RETURN
.************************************************************************
.* SUBM - Submit the amount of periods entered      Called by AUTH9000  *
.************************************************************************
SUBM0000  MOVE      STRTPERD,DIMPERD
          MOVE      FORMPERD,SAVEPERD
          MOVE      VALSLCT,CVERT
          ADD       SIX,CVERT 
          CALL      KREF0000                  * keyin ref.
          BRANCH    EXIT,SUBM9500
.
          UNPACK    DIMPERD,DIMYEAR,DIMMON
          PACK      KEY6,FMJMLEDG,DIMYEAR,SP70
          CALL      RDFMLC1
          BRANCH    OVRCD,SUBM8000
.
          MOVE      DIMMON,DISPCNT
.
SUBM1000  LOAD      FMJMPPOS,DISPCNT,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                                  FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR:
                                  FMLC09FR,FMLC10FR,FMLC11FR,FMLC12FR:
                                  FMLC13FR
          LOAD      PERLOCK,DISPCNT,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN:
                                  FMLC05IN,FMLC06IN,FMLC07IN,FMLC08IN:
                                  FMLC09IN,FMLC10IN,FMLC11IN,FMLC12IN:
                                  FMLC13IN
.
          PACK      DIMPERD,FMLCYEAR,DISPCNT
          REP       " 0",DIMPERD
          MATCH     DIMPERD,ENDPERD
          GOTO      SUBM9000 IF LESS
.
          BRANCH    PERLOCK,SUBM8100
          MOVE      FMJOPRE3,JOURTYPE
          MOVE      "1",SUBTYPE
          UNPACK    DIMPERD,DIM2,DIM2,DIM2
          MOVE      DIM2,PERDNO
.
          LOAD      PERDATE,DISPCNT,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                                  FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR:
                                  FMLC09FR,FMLC10FR,FMLC11FR,FMLC12FR:
                                  FMLC13FR
          CALL      CHDT0000           * check if already posted
          CLEAR     BC1BATCH
          COMPARE   ONE,EXIT
          CALL      SUB0000 IF EQUAL   * in include FMSSBAUT
.
          MOVE      DIMPERD,STRTPERD
          ADD       ONE,STRTPERD
          MOVE      STRTPERD,DIMPERD
          UNPACK    DIMPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
.
          COMPARE   FORM2,NOPERDS    * past the number of periods
          GOTO      SUBM2000 IF NOT LESS
.
          ADD       "87",STRTPERD     * get to first period of next year
.                                     * think about it - 13 + 88 = 101
          SUB       FMLAPERS,STRTPERD * correction for 13 period year
          MOVE      STRTPERD,DIMPERD
          UNPACK    DIMPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
.
SUBM2000  COMPARE   ZERO,FORM2        * cant have period number 0
          GOTO      SUBM3000 IF NOT EQUAL
          ADD       ONE,STRTPERD
          MOVE      STRTPERD,DIMPERD
.
SUBM3000  COMPARE   "21",CVERT
          GOTO      SUBM4000 IF EQUAL
          DISPLAY   *P27:CVERT,"Authorization",*P45:CVERT,*+,BC1BATCH;
          MOVE      FORMPERD,SAVEPERD
          ADD       ONE,CVERT
.
SUBM4000  ADD       ONE,VALSLCT
          ADD       ONE,DISPCNT
          BRANCH    FMLAPERS,SUBM5000       * 12 or 13 periods
.
          COMPARE   "13",DISPCNT
          GOTO      SUBM1000 IF NOT EQUAL
          GOTO      SUBM6000
.
SUBM5000  COMPARE   "14",DISPCNT
          GOTO      SUBM1000 IF NOT EQUAL
.
SUBM6000  MATCH     DIMPERD,ENDPERD             * Check for Finish
          GOTO      SUBM9000 IF LESS
.
          PACK      KEY6,FMJMLEDG,DIMYEAR,SP70  * Get Next Calendar
          CALL      RDFMLC1
          BRANCH    OVRCD,SUBM8000
          MOVE      ONE,DISPCNT 
          GOTO      SUBM1000
.
SUBM8000  DISPLAY   *P1:24,*B,*EF:
                    "ERROR - Financial Year ",*V2LON,DIMYEAR,*HOFF:
                    " Not Set Up For Ledger ",*V2LON,FMJMLEDG,*HOFF," - ";
          CALL      HITENTER
          GOTO      SUBM9999
.
SUBM8100  DISPLAY   *P1:24,*B,*EF:
                    "ERROR - Period ",*V2LON,DISPCNT,*HOFF:
                    " Locked For Financial Year ",*V2LON,DIMYEAR,*HOFF," - ";
          CALL      HITENTER
          GOTO      SUBM9999
.
SUBM9000  MOVE      ZERO,EXIT
          MATCH     ENDPERD,FMJMLPER          * finished this journal
          GOTO      SUBM9999 IF NOT EQUAL
.
SUBM9500  MOVE      ONE,EXIT
.
SUBM9999  DISPLAY   *P1:22,*EF
          MOVE      SAVEPERD,FORMPERD
          RETURN
.*************************************************************************
.* KREF - Keyin the reference code for this batch  Called by SUB0000     *
.*************************************************************************
KREF0000  DISPLAY   *P5:22,"Document Reference",*P26:22,":";
.
KREF1000  KEYIN     *P28:22,*EF,*DV,UNDLN7,*P28:22,*V2LON,DOCREF:
                    *P28:22,*DV,DOCREF
.
KREF2000  MOVE      ONE,LLPOS
.
KREF2100  RESET     FMJMJID,LLPOS      * Justify Left Journal ID
          CMATCH    SP1,FMJMJID
          GOTO      KREF2200 IF NOT EQUAL
          ADD       ONE,LLPOS
          COMPARE   SEVEN,LLPOS
          GOTO      KREF2200 IF NOT LESS
          GOTO      KREF2100
.
KREF2200  PACK      BCREFER,DOCREF,DASH,FMJMJTY,FMJMJID,SP70
          RESET     FMJMJID
.
          DISPLAY   *P5:23,"Item Reference",*P26:23,":":
                    *P28:23,*V2LON,BCREFER
.
          MOVE      CVERT,FORM2
          CALL      CONTQST           * ok to continue?
          MOVE      FORM2,CVERT
          BRANCH    CEXIT,KREF9000,KREF1000
.
          MOVE      ONE,EXIT          * cancel
          GOTO      KREF9999
.
KREF9000  MOVE      ZERO,EXIT
.
KREF9999  RETURN 
.**********************************************************************
.  CKLK - Checks for any locked periods                Called By lots
.        Requires - FMSJMAAF record
.                   WORKDATE (date to check)
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CKLK0000  PACK      KEY2,FMJMLEDG,SP70
          CALL      RDFMLA1            * ensure ledger has been read
          CALL      CFYR0000
          BRANCH    EXIT,CKLK9700
          BRANCH    PERLOCK,CKLK9500
.
CKLK9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKLK9999
.
CKLK9500  UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      "Period Locked For Date ",KEY24
          MOVE      " - ",KEY3
          PACK      ERRMSG,KEY24,CPCDATE,KEY3
.
CKLK9700  DISPLAY   *P1:24,*+,*B,*EF,"Period Locked For Date ",CPCDATE," - ";
          CALL      HITENTER
          MOVE      ONE,EXIT           * quit
.
CKLK9999  RETURN
.************************************************************************
.* REV - Ok to reverse?                                                 *
.*                   called by : AUTH                                   *
.************************************************************************
REV0000   UNPACK    FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:22,"Reversal Date : ",*V2LON,CPCDATE
.
          MOVE      FMJMRPOS,PERDATE
          MOVE      ONE,REVFLAG
          CALL      CHDT0000             * is it already reversed
          MOVE      ZERO,REVFLAG
          BRANCH    EXIT,REV0500
.
          DISPLAY   *P1:24,*EL,"Journal Reversal is already posted - ";
          CALL      HITENTER
          GOTO      REV2000
.          
REV0500   MOVE      FMJMRPOS,WORKDATE
          CALL      CKLK0000
          BRANCH    EXIT,REV2000
.
          CALL      CONTQST              * ok to continue
          BRANCH    CEXIT,REV1000,REV2000,REV2000
.
REV1000   MOVE      ZERO,EXIT
          GOTO      REV9999
.
REV2000   MOVE      ONE,EXIT
          DISPLAY   *P1:22,*EF;
.
REV9999   RETURN
.*************************************************************************
.* SCR3 - Display screen 3                 Called by RAMAFM10            *
.*************************************************************************
SCR30000  MOVE      SP70,FMAMDESC
          MOVE      SP70,FMRSDESC
          MOVE      SP70,FMDSDESC
          MOVE      SP70,IBBADESC
          MOVE      SP70,IBBABASC
.
          IF        IBCNUBAS=1
            MOVE      FMJDBASC,KEY3
            MOVE      FMJDBASC,IBBABASC
            CALL      RDIBBA1
          ENDIF
.
          PACK      KEY14,FMJMLEDG,FMJDACC
          MOVE      FMJMLEDG,FMAMLEDG
          MOVE      FMJDACC,FMAMACCT
          CALL      RDFMAM1                 * get account description
.
          MOVE      FMJDDIS,KEY5
          MOVE      FMJDDIS,FMDSCODE
          CALL      RDFMDS1                 * get dissection description
.
          MOVE      FMJDRES,KEY4
          MOVE      FMJDRES,FMRSCODE
          CALL      RDFMRS1                 * get responsibility
          MOVE      "Debit",DRCRLDES
          MATCH     "D",FMJDDRCR            * debit?
          GOTO      SCR31000 IF EQUAL
          MOVE      "Credit",DRCRLDES
SCR31000  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJDJID:
                    *P51:4,*HOFF,"Status  : ",*V2LON,STATDESC:
                    *P51:5,*HOFF,"Balance : ",*V2LON,BALANCE:
                    *P1:6," 1",*HOFF,DOT,*P5:6,"Debit/Credit",*P26:6,": ": 
                    *V2LON,DRCRLDES,*V2LON:
                    *P1:7," 2",*HOFF,DOT,*P5:7,"Account Code",*P26:7,": ": 
                    *V2LON,FMJDACC,*HOFF,*P41:7,FMAMDESC,*V2LON:
                    *P1:8," 3",*HOFF,DOT,*P5:8,"Responsibility",*P26:8,": ": 
                    *V2LON,FMJDRES,*HOFF,*P41:8,FMRSDESC,*V2LON:
                    *P1:9," 4",*HOFF,DOT,*P5:9,"Dissection",*P26:9,": ": 
                    *V2LON,FMJDDIS,*HOFF,*P41:9,FMDSDESC,*V2LON:
                    *P1:10," 5",*HOFF,DOT,*P5:10,"Description":
                    *P26:10,": ",*V2LON,FMJDDESC:
                    *P1:11," 6",*HOFF,DOT,*P5:11,"Amount",*P26:11,": ": 
                    *V2LON,FMJDTAMT,*V2LON:
                    *HOFF,*P5:12,"Amount Posted",*P26:12,": ": 
                    *V2LON,FMJDPAMT
.
          IF        IBCNUBAS=1
            DISPLAY   *P1:13,*V2LON," 7",*HOFF,DOT,*P5:13,"BAS Code":
                      *P26:13,": ",*V2LON,FMJDBASC,*HOFF,*P41:13,IBBADESC
          ENDIF
.
SCR39999  RETURN 
.*************************************************************************
.* DCOM - display comments - first from tempfile and if none - from      *
.*        comments file                                                  *
.*************************************************************************
DCOM0000  MOVE      ZERO,NOTES                   * assume none in tempfile
          MOVE      "15",CVERT
          BRANCH    TMPFFLAG,DCOM2000
          OPEN      FMSTMP01,FILENAM1            * go to start of records
.
DCOM1000  READ      FMSTMP01,SEQ;FMJWLINE        * read in wp data
          GOTO      DCOM2000 IF OVER
.
          DISPLAY   *P5:CVERT,FMJWLINE           * display data fromtempfile
          MOVE      TRUE,NOTES                   * set flag to got  comments
          COMPARE   "22",CVERT                   * full page?
          GOTO      DCOM9999 IF EQUAL            * YEP - get out of here
          ADD       ONE,CVERT                    * NOPE - add to line number   
          GOTO      DCOM1000                     * and go back
.
DCOM2000  BRANCH    NOTES,DCOM9999               * did we have any comments?
          PACK      KEY10,FMJOPRE3,FMJMJID,SP10  * no then get them from file
          CALL      RSFMJW1
DCOM3000  CALL      RKFMJW1
          BRANCH    OVRCD,DCOM9999
          PACK      KEY7,FMJWJTY,FMJWJID
          MATCH     KEY7,KEY10                   * right journal?
          GOTO      DCOM9999 IF NOT EQUAL
.
          DISPLAY   *P5:CVERT,FMJWLINE
.
          COMPARE   "22",CVERT                   * full page?
          GOTO      DCOM9999 IF EQUAL
          ADD       ONE,CVERT
          GOTO      DCOM3000
.
DCOM9999  RETURN 
.******************************************************************************
.  SCRP - Display Screen P                       Called by SELP, redisps
.******************************************************************************
SCRP0000  DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". From Journal ID      : ":
                          *V2LON,JID1:
                    *P1:5," 2",*HOFF,". To   Journal ID      : ":
                          *V2LON,JID2
.
SCRP9999  RETURN
.******************************************************************************
.  SELP - Perform Screen P                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELP0000  UNPACK    SP70,JID1,JID2
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONP       * reset item desired
          CALL      SCRP0000           * display screen P
.
SELP0100  ADD       ONE,OPTIONP        * get next item
          BRANCH    ACCEPT,SELP0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONP
.
SELP0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONP,CVERT
          MOVE      OPTIONP,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELP9500,SELP9000:                       * quit, continue
                       SELP1100,SELP1200                        * execute option
          BRANCH    ACCEPT,SELP0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELP0100           * get another option
.
SELP0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELP0100
.
.---- option 1 ----
.
SELP1100  MOVE      ONE,DISPFLAG
          MOVE      FMJOPRE3,FMJMJTY
          CALL      KJMAFM00
          BRANCH    EXIT,SELP1190,SELP9500
.
SELP1190  LOAD      FMJMJID,EXIT,ZERO20
          PACK      JID1,FMJMJID,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          GOTO      SELP0100
.
.---- option 2 ----
.
SELP1200  MOVE      ONE,DISPFLAG
          MOVE      FMJOPRE3,FMJMJTY
          CALL      KJMAFM00
          BRANCH    EXIT,SELP1290,SELP9500
.
SELP1290  LOAD      FMJMJID,EXIT,Z20
          MOVE      FMJOPRE3,FMJMJTY
          PACK      JID2,FMJMJID,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          GOTO      SELP0100
.
.
SELP9000  MATCH     JID1,JID2
          GOTO      SELP9100 IF NOT LESS
          DISPLAY   *P1:24,*B,*EF:
                    "From Journal ID Cannot Be Before To Journal ID - ";
          CALL      HITENTER
          GOTO      SELP0100
.
SELP9100  MOVE      ZERO,EXIT          * continue
          GOTO      SELP9999
.
SELP9500  MOVE      ONE,EXIT           * quit
.
SELP9999  RETURN
.********************************************************************
. PRNT - print report                               Called by ML
.         Requires : JID1,JID2    (print range)
.********************************************************************
PRNT0000  DISPLAY   *P50:24,"Printing :   ";
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
.
          CALL      FILE0000                    * go to correct position in file
.
PRNT1000  CALL      NREC0000                     * get next record
          BRANCH    OVRCD,PRNT9000               * end of file ?
.
          DISPLAY   *P61:24,*V2LON,FMJMJID,*EL;
.
          CALL      WRIT0000                     * print details
          GOTO      PRNT1000                     * get next record
.
PRNT9000  COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL          * print header if nothing printed
          CALL      UND80                        * print line
          PRINT     "****   End of Report   ****"
.
PRNT9999  RETURN
.**********************************************************************
.  FILE - Set file pointer                             Called By PRNT
.**********************************************************************
FILE0000  
.
.---- print by type 1 ----
.
FILE0100  PACK      KEY7,FMJOPRE3,JID1,SP70
          CALL      RSFMJM1
          CALL      RPFMJM1
          GOTO      FILE9999
.
FILE9999  RETURN
.**********************************************************************
.  NREC - Get next record                              Called By PRNT
.**********************************************************************
NREC0000  
.
.---- print by type 1 ----
.
NREC0100  CALL      RKFMJM1
          BRANCH    OVRCD,NREC9500
.
          MATCH     FMJMJTY,FMJOPRE3
          GOTO      NREC9500 IF NOT EQUAL        * out of range ?
          MATCH     FMJMJID,JID2
          GOTO      NREC9500 IF LESS             * out of range ?
          GOTO      NREC9000
.
NREC9000  MOVE      ZERO,OVRCD         * continue
          GOTO      NREC9999
.
NREC9500  MOVE      ONE,OVRCD          * quit
.
NREC9999  RETURN
.********************************************************************
. HEAD - print heading                              Called by PRNT
.********************************************************************
HEAD0000  CALL      HEAD80                       * print heading
          CALL      THED0000                     * print transaction heading
.
HEAD9999  RETURN
.********************************************************************
. THED - print transaction data heading             Called by PRNT
.********************************************************************
THED0000  CALL      UND80
          ADD       "2",CLNO
          PRINT     *24,"Transaction Details",*N:
                    *2,"D/C":
                    *6,"Account    ",*20,BASDESC,*24,"Diss ",*30,"Resp":
                    *35,"Transaction Description":
                    *75,"Amount"
          CALL      UND80 
.
THED9999  RETURN
.********************************************************************
. WRIT - print data line                            Called by PRNT
.********************************************************************
WRIT0000  CALL      HEAD80                       * print heading
          CALL      PMDT0000                     * print header details
.
          CALL      THED0000
          PACK      KEY10,FMJMJTY,FMJMJID,SP70
          CALL      RSFMJD1
.
WRIT1000  CALL      RKFMJD1
          BRANCH    OVRCD,WRIT9000
          MATCH     FMJMJTY,FMJDJTY
          GOTO      WRIT9000 IF NOT EQUAL
          MATCH     FMJMJID,FMJDJID
          GOTO      WRIT9000 IF NOT EQUAL
.
          MOVE      "Dr",DRCRDESC     * set up credit debit description
          MATCH     ANSD,FMJDDRCR     * credit or debit
          GOTO      WRIT2000 IF EQUAL
          MOVE      "Cr",DRCRDESC
.
WRIT2000  PRINT     *2,DRCRDESC:
                    *6,FMJDACC,*20,FMJDBASC,*24,FMJDDIS,SP1,FMJDRES,SP1:
                    *35,FMJDDESC,*66,FMJDTAMT
          ADD       "1",CLNO                     * add one to line number
          COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
          GOTO      WRIT1000
.
WRIT9000  
.
WRIT9999  RETURN
.*************************************************************************
.* PMDT - Set up the variables to display the record on file             *
.*                     called by : MADT0000                              *
.*************************************************************************
PMDT0000  MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1              * get ledger description
          MOVE      FMLADESC,LEDGDESC    * set ledger description
.
          MOVE      "12",NOPERDS
          ADD       FMLAPERS,NOPERDS
          UNPACK    FMJMFPER,FROMYEAR,FROMPERD
          UNPACK    FMJMLPER,LASTYEAR,LASTPERD
.
          MOVE      DNO,REVDESC
          LOAD      REVDESC,FMJMREV,DYES
          COMPARE   "0",FMJMREV         * posting cash
          GOTO      PMDT0500 IF EQUAL
.
          MOVE      FMJMRPOS,WORKDATE   
          CALL      CFPR0000             * get financial period for accrual
                                         * posting date
          MOVE      WKDTDESC,RPOSDESC
          MOVE      WKDTPDAT,RPOSPDAT
.
          PACK      KEY9,FMJMLEDG,FMLACYRR,FMJMPROF
          CALL      RDFMBP1              * get budget profile desc.
.
PMDT0500  MATCH     "0",FMJMSTAT    * Awaiting processing?
          GOTO      PMDT3000 IF NOT EQUAL
.
          MOVE      "Awaiting Processing",STATDESC * yes - display it
          GOTO      PMDT4000
.
PMDT3000  MOVE      "Processed",STATDESC * no - must be processed
.
PMDT4000  PRINT     "    Journal ID           : ":
                    FMJMJID,SP10,SP8,"Status  : ",STATDESC,*N:
                    "    Brief Description":
                    SP4,":",SP1,FMJMDESC
.
          UNPACK    FMJMDENT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *5,"Date Entered",*26,": ",CPCDATE,*N:
                    *5,"Ledger",*26,": ",FMJMLEDG,SP1,LEDGDESC,*N:
                    *5,"First Year/Period",*26,": ";
.
          PACK      KEY6,FMJMLEDG,FROMYEAR
          CALL      RDFMLC1
          MOVE      FROMPERD,FORM2
          LOAD      WKDTDESC,FORM2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE: 
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                   FMLC13DE
          LOAD      WORKDATE,FORM2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                   FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO: 
                                   FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                   FMLC13TO
          UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          
          PRINT     *28,FROMYEAR,SLASH,FROMPERD:
                    *36,WKDTDESC," Ending ",CPCDATE
.
          PRINT     *5,"Last Year/Period",*26,": ";
          PACK      KEY6,FMJMLEDG,LASTYEAR
          CALL      RDFMLC1
          MOVE      LASTPERD,FORM2
          LOAD      WKDTDESC,FORM2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE: 
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                   FMLC13DE
          LOAD      WORKDATE,FORM2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                   FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO: 
                                   FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                   FMLC13TO
          UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *28,LASTYEAR,SLASH,LASTPERD:
                    *36,WKDTDESC," Ending ",CPCDATE
.
          PRINT     *5,"Post Reversal  (Y/N)",*26,": ",REVDESC,*N:
                    *5,"Reversal Date",*26,": ";
          COMPARE   FMJMREV,ZERO           * is it Reversing?
          GOTO      PMDT8000 IF EQUAL
          UNPACK    FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *28,CPCDATE,SP2,RPOSDESC," Ending ",RPOSPDAT
.
PMDT8000  
.
.          PRINT     *N,*5,"Budget Profile",*26,": ":
.                    *28,FMJMPROF,SP1,PROFDESC,*N
.
          ADD       " 9",CLNO
.
PMDT9999  RETURN
.*************************************************************************
.* Calculate Journal Posting Account                                     *
.*************************************************************************
CALJ0000  PACK      KEY16,FMJOPRE3,FMJMJID,SP70
.
CALJ0100  CALL      RSFMJT1
          CALL      RKFMJT1
          BRANCH    OVRCD,CALJ1000
.
          MATCH     FMJMJTY,FMJTJTY
          GOTO      CALJ1000 IF NOT EQUAL
          MATCH     FMJMJID,FMJTJID
          GOTO      CALJ1000 IF NOT EQUAL
.
          PACK      KEY16,FMJTJTY,FMJTJID,FMJTPER,FMJTLNO,SP70
          CALL      DEFMJT1
          GOTO      CALJ0100
.
CALJ1000  PACK      KEY7,FMJOPRE3,FMJMJID,SP70
          CALL      RDFMJM1
          BRANCH    OVRCD,CALJ9999
.
. Calculate number of periods of journal result in IDAY
.
          MOVE      ONE,IDAY
          MOVE      FMJMFPER,FORMPERD
.
CALJ1100  MOVE      FORMPERD,WORKPERD
          MATCH     FMJMLPER,WORKPERD           * are they equal yet
          GOTO      CALJ1200 IF EQUAL
          ADD       ONE,FORMPERD
          ADD       ONE,IDAY
          MOVE      FORMPERD,WORKPERD
          UNPACK    WORKPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,NOPERDS    * past the number of periods
          GOTO      CALJ1100 IF NOT LESS
          ADD       "87",FORMPERD     * get to first period of next year
                                      * think about it - 13 + 88 = 101
          SUB       FMLAPERS,FORMPERD * correction for 13 period year
          MOVE      FORMPERD,WORKPERD
          UNPACK    WORKPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,ZERO
          GOTO      CALJ1100 IF NOT EQUAL
          ADD       ONE,FORMPERD
          GOTO      CALJ1100
.
CALJ1200  PACK      KEY10,FMJMJTY,FMJMJID,Z70
          CALL      RSFMJD1
          CALL      RPFMJD1
          BRANCH    OVRCD,CALJ9999
.
          MATCH     FMJMJTY,FMJDJTY
          GOTO      CALJ9999 IF NOT EQUAL
          MATCH     FMJMJID,FMJDJID
          GOTO      CALJ9999 IF NOT EQUAL
.
          MOVE      FMJDLNO,LASTLINE
          PACK      KEY10,FMJMJTY,FMJMJID,SP70
          CALL      RSFMJD1
.
CALJ2100  CALL      RKFMJD1
          BRANCH    OVRCD,CALJ9999
.
          MATCH     FMJMJTY,FMJDJTY
          GOTO      CALJ9999 IF NOT EQUAL
          MATCH     FMJMJID,FMJDJID
          GOTO      CALJ9999 IF NOT EQUAL
.
          MATCH     LASTLINE,FMJDLNO
          GOTO      CALJ3000 IF EQUAL
.
          MATCH     SP4,FMJMPROF
          IF        @EQUAL
            CALL      CALPE000
          ELSE
            CALL      CALPR000
          ENDIF
          GOTO      CALJ2100
.
CALJ3000  MOVE      ZERO,F12P2
          MOVE      ZERO,ENDIT
          MOVE      FMJMFPER,SAVPER
          PACK      KEY16,FMJMJTY,FMJMJID,FMJMFPER,SP70
CALJ3050  CALL      RSFMJT1
.
CALJ3100  CALL      RKFMJT1
          BRANCH    OVRCD,CALJ3150
.
          MATCH     FMJMJTY,FMJTJTY
          GOTO      CALJ3150 IF NOT EQUAL
          MATCH     FMJMJID,FMJTJID
          GOTO      CALJ3150 IF NOT EQUAL
.
          MATCH     SAVPER,FMJTPER
          GOTO      CALJ3200 IF NOT EQUAL
.  
          ADD       FMJTAMT,F12P2
          GOTO      CALJ3100
.
CALJ3150  MOVE      ONE,ENDIT
.
CALJ3200  MOVE      F12P2,FMJTAMT
          MULT      SEQ,FMJTAMT
.
          MOVE      FMJTPER,NEXTPER
          MOVE      FMJMJTY,FMJTJTY
          MOVE      FMJMJID,FMJTJID
          MOVE      SAVPER,FMJTPER
          MOVE      FMJDLNO,FMJTLNO
          PACK      FMJTSPAR,SP70
.
          PACK      KEY16,FMJTJTY,FMJTJID,FMJTPER,FMJTLNO,SP70
          CALL      RAFMJT1
          IF        OVRCD=1
            CALL      WRFMJT1
          ELSE
            CALL      UPFMJT1
          ENDIF
.
CALJ3300  MOVE      ZERO,F12P2
          MOVE      NEXTPER,SAVPER
          PACK      KEY16,FMJTJTY,FMJTJID,SAVPER,SP70
          BRANCH    ENDIT,CALJ9999
          GOTO      CALJ3050
.
CALJ9999  RETURN
.************************************************************************
.* CALPR - Calculate the amount per period by profile by journal line   *
.*                   called by : CALJ0000                               *
.************************************************************************
CALPR000  PACK      FMJMPROF,FMJMPROF,SP10
          MATCH     FMJMPROF,SP4              * using a budget profile
          GOTO      CALPR999 IF EQUAL         * no then get the outta here
.
          MOVE      FMLALEDG,FMBPLEDG
          MOVE      FMLACYRR,FMBPYEAR
          MOVE      FMJMPROF,FMBPCODE
          PACK      KEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          CALL      RDFMBP1                   * read budget profile
          BRANCH    OVRCD,CALPR999
.
          LOAD      PERPERC,PERDNO,FMBPPC1,FMBPPC2,FMBPPC3,FMBPPC4,FMBPPC5:
                                  FMBPPC6,FMBPPC7,FMBPPC8,FMBPPC9,FMBPPC10:
                                  FMBPPC11,FMBPPC12,FMBPPC13
.
          MOVE      FMJDTAMT,BCAMT
          DIV       "100",BCAMT
          MULT      PERPERC,BCAMT
          GOTO      CALPR999    
.
CALPR999  RETURN
.************************************************************************
.* CALPE - Calculate the amount per period for journal line             *
.*                   called by : CALJ0000                               *
.************************************************************************
CALPE000  MOVE      FMJMFPER,FORMPERD
          MOVE      ZERO,F12P2
.
CALPE100  MOVE      FORMPERD,WORKPERD
          MATCH     FMJMLPER,WORKPERD           * are they equal yet
          GOTO      CALPE800 IF EQUAL
.
          MOVE      FMJDTAMT,FMJTAMT
          DIV       IDAY,FMJTAMT
          ADD       FMJTAMT,F12P2
          MATCH     ANSC,FMJDDRCR
          IF        @EQUAL
            MULT      SEQ,FMJTAMT
          ENDIF
.
          MOVE      FMJMJTY,FMJTJTY
          MOVE      FMJMJID,FMJTJID
          MOVE      WORKPERD,FMJTPER
          MOVE      FMJDLNO,FMJTLNO
          PACK      FMJTSPAR,SP70
.
          PACK      KEY16,FMJTJTY,FMJTJID,FMJTPER,FMJTLNO,SP70
          CALL      RAFMJT1
          IF        OVRCD=1
            CALL      WRFMJT1
          ELSE
            CALL      UPFMJT1
          ENDIF
.
          ADD       ONE,FORMPERD
          MOVE      FORMPERD,WORKPERD
          UNPACK    WORKPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,NOPERDS    * past the number of periods
          GOTO      CALPE100 IF NOT LESS
          ADD       "87",FORMPERD     * get to first period of next year
                                      * think about it - 13 + 88 = 101
          SUB       FMLAPERS,FORMPERD * correction for 13 period year
          MOVE      FORMPERD,WORKPERD
          UNPACK    WORKPERD,DIMYEAR,DIMMON
          MOVE      DIMMON,FORM2
          COMPARE   FORM2,ZERO    * past the number of periods
          GOTO      CALPE100 IF NOT EQUAL
          ADD       ONE,FORMPERD
          GOTO      CALPE100
.
CALPE800  ASSIGN    FMJDTAMT-F12P2,FMJTAMT
          MATCH     ANSC,FMJDDRCR
          IF        @EQUAL
            MULT      SEQ,FMJTAMT
          ENDIF
.
          MOVE      FMJMJTY,FMJTJTY
          MOVE      FMJMJID,FMJTJID
          MOVE      WORKPERD,FMJTPER
          MOVE      FMJDLNO,FMJTLNO
          PACK      FMJTSPAR,SP70
.
          PACK      KEY16,FMJTJTY,FMJTJID,FMJTPER,FMJTLNO,SP70
          CALL      RAFMJT1
          IF        OVRCD=1
            CALL      WRFMJT1
          ELSE
            CALL      UPFMJT1
          ENDIF
.
CALPE999  RETURN

.*************************************************************************
.* REDISPLAY ROUTINES FOR STANDARD KEYINS                                *
.*************************************************************************
RAMAFM00  COMPARE   "3",SCREEN            * which page do we want to redisplay
          GOTO      RAMAFM10 IF EQUAL
.
          BRANCH    DISPCNT,RAMAFM05
          CALL      CURP0000              * display current ledger
          UNPACK    SP70,FMJDDIS,FMJDRES
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P7:CVERT,SAVEDESC
          GOTO      RXXXFM99
.
RAMAFM05  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJMJID,*HOFF:
                    *P51:4,"Status  : ",*V2LON,STATDESC,*HOFF:
                    *P51:5,"Balance : ",*V2LON,BALANCE:
                    *P24:6,*V2LON,"Transaction Details":
                    *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                    *P8:7,"Account    ",*P20:7,BASDESC,*P24:7,"Diss ":
                    *P30:7,"Resp":
                    *P35:7,"Transaction Description      ":
                    *P65:7,"         Amount",*HOFF:
                    *P1:CVERT,*V2LON,DISPCNT,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMAMACCT,*P20:CVERT,IBBABASC,*P24:CVERT,FMDSCODE:
                    *P30:CVERT,FMRSCODE;
          GOTO      RXXXFM99
          
RAMAFM10  CALL      SCR30000              * display screen 3
          GOTO      RXXXFM99
.
RDISFM00  COMPARE   "3",SCREEN            * whisch page do we want to redisplay
          GOTO      RAMAFM10 IF EQUAL
.
          BRANCH    DISPCNT,RAMAFM05
          CALL      CURP0000              * display current ledge
          UNPACK    SP70,FMJDRES
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P7:CVERT,SAVEDESC:
                    *P12:CVERT,FMAMACCT;
          GOTO      RXXXFM99
.
RRESFM00  COMPARE   "3",SCREEN            * whisch page do we want to redisplay
          GOTO      RAMAFM10 IF EQUAL
.
          BRANCH    DISPCNT,RAMAFM05
          CALL      CURP0000              * display current ledge
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P7:CVERT,SAVEDESC:
                    *P12:CVERT,FMAMACCT,*P24:CVERT,FMDSCODE;
          GOTO      RXXXFM99
.
RTDSFM00  COMPARE   "3",SCREEN            * which page do we want to redisplay
          GOTO      RAMAFM10 IF EQUAL
.
          BRANCH    DISPCNT,RAMAFM05
          CALL      CURP0000              * display current ledger
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMAMACCT,*P20:CVERT,IBBABASC,*P24:CVERT,FMDSCODE:
                    *P30:CVERT,FMRSCODE;
          GOTO      RXXXFM99
.
RXXXFM99  RETURN
.
RJMAFM00  BRANCH    DISPFLAG,RJMAFM10
          DISPLAY   *P1:4,*EF,*P5:4,"Journal ID",*P26:4,":"
          RETURN
.
RJMAFM10  CALL      SCRP0000
          RETURN
.
RLMAFM00  BRANCH    SCREEN,RLMAFM05,RAMAFM00
RBPFFM00
RLMCFM00
RLMAFM05  DISPLAY   *P1:4,*EF,*P5:4,"Journal ID",*P26:4,":":
                    *P28:4,*V2LON,FMJMJID:
                    *HOFF,*P51:4,"Status  : ",*V2LON,STATDESC:
                    *P1:6,*V2LON," 1",*HOFF,DOT,SP1,"Brief Description":
                    *P26:6,":",SP1,*V2LON,FMJMDESC:
                    *P1:7,*V2LON," 2",*HOFF,DOT,SP1,"Date Entered":
                    *P26:7,":"
          MATCH     SP8,FMJMDENT              * any date entered?
          GOTO      RLMAFM10 IF EQUAL
.
          UNPACK    FMJMDENT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:7,*V2LON,CPCDATE
.
RLMAFM10  DISPLAY   *P1:8,*V2LON," 3",*HOFF,DOT,SP1,"Ledger":
                    *P26:8,": ",*V2LON,FMJMLEDG,SP1,*HOFF,LEDGDESC:
                    *P1:9,*V2LON," 4",*HOFF,DOT,SP1,"First Year/Period":
                    *P26:9,": "
          MATCH     SP4,FROMYEAR              * any date entered?
          GOTO      RLMAFM20 IF EQUAL
.
          PACK      KEY6,FMJMLEDG,FROMYEAR
          CALL      RDFMLC1
          MOVE      FROMPERD,FORM2
          LOAD      WKDTDESC,FORM2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE: 
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                   FMLC13DE
          LOAD      WORKDATE,FORM2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                   FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO: 
                                   FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                   FMLC13TO
          UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          
          DISPLAY   *P28:9,*V2LON,FROMYEAR,SLASH,FROMPERD,*HOFF:
                    *P36:9,*EL,WKDTDESC," Ending ",CPCDATE
.
RLMAFM20  DISPLAY   *P1:10,*V2LON," 5",*HOFF,DOT,SP1,"Last Year/Period":
                    *P26:10,": "
          MATCH     SP4,LASTYEAR              * any date entered?
          GOTO      RLMAFM30 IF EQUAL
          PACK      KEY6,FMJMLEDG,LASTYEAR
          CALL      RDFMLC1
          MOVE      LASTPERD,FORM2
          LOAD      WKDTDESC,FORM2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                   FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE: 
                                   FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                   FMLC13DE
          LOAD      WORKDATE,FORM2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                   FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO: 
                                   FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                   FMLC13TO
          UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          
.
          DISPLAY   *P28:10,*V2LON,LASTYEAR,SLASH,LASTPERD,*HOFF:
                    *P36:10,*EL,WKDTDESC," Ending ",CPCDATE
RLMAFM30  DISPLAY   *P1:11,*V2LON," 6",*HOFF,DOT,SP1,"Post Reversal  (Y/N)":
                    *P26:11,": ",*V2LON,REVDESC:
                    *P1:12,*V2LON," 7",*HOFF,". Reversal Date":
                    *P26:12,": "
          COMPARE   FMJMREV,ZERO           * is it Reversing?
          GOTO      RLMAFM40 IF EQUAL
          UNPACK    FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:12,*V2LON,CPCDATE,SP2,*HOFF,RPOSDESC," Ending ":
                    RPOSPDAT
.
RLMAFM40  DISPLAY   *P5:14,*V2LON,*ULON,SP70,*P5:14,"Notes"
.
.          DISPLAY   *P1:13,*V2LON," 8",*HOFF,". Budget Profile":
.                   *P26:13,": ":
.                   *P28:13,*V2LON,FMJMPROF,*HOFF,SP1,PROFDESC:
.
          MOVE      CVERT,FORM2
          CALL      DCOM0000                  * display comments
          MOVE      FORM2,CVERT
.
RLMAFM99  RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSAMAIO/INC
          INC       FMSBCFIO/INC
          INC       FMSAMAKY
          INC       FMSBPFIO/INC
          INC       FMSBPFKY
          INC       FMSCONIO/INC
          INC       FMSDISIO/INC
          INC       FMSDISKY
          INC       FMSJMAIO/INC
          INC       FMSJMAKY
          INC       FMSJPDIO/INC
          INC       FMSJWPIO/INC
          INC       FMSJDTIO/INC
          INC       FMSJTPIO/INC
          INC       FMSLMAIO/INC
          INC       FMSTDSIO/INC
          INC       FMSTDSKY
          INC       FMSLMAKY
          INC       FMSLMCIO/INC
          INC       FMSLMCKY
          INC       FMSRESIO/INC
          INC       FMSRESKY
          INC       FMSSBAUT              * submit for authorization include
          INC       IBABASIO/INC
          INC       IBABASKY
          INC       IBABATIO/INC
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
