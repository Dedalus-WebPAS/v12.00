.*****************************************************************************
.*    Program      : F90LGMIS                                                *
.*    Description  : Conversion legmissf to new File layout                  *
.*                                                                           *
.*    Author       : Mike Laming                                             *
.*    Date         : 23/05/2008                                              *
.*    Modifications:                                                         *
.*****************************************************************************
.
.  Global change F90LGMIS  eg F57PTDOC
.  Global change LEGMISFD  eg PATDOCFD (new layout)
.  Global change legmissf  eg patdoctf
.  Global change LEGMISS1  eg PATDOCT1
.  Global change KEY8     eg KEY8
.  Global change WRLGMIS1  eg WRDOCT1  (new write)
.  Global change RDLGMIS1  eg RDDOCT1  (new read direct)
.  Global change slgmissf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.   
OLDFILE1  IFILE     SQL, FIXED=508, KEY="U1-8"        * <===== change
DONEFILE  IFILE     SQL, FIXED=589, KEY="U1-8"        * <===== change
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
LASPARE1   DIM          4
.
LSSAADMN   FORM         8                   PATIENT ADMISSION NO.
LSSASTAT   FORM         1                   ADMISSION STATUS
LSSADATE   DIM          8                   PATIENT ADMISSION DATE (CCYYMMDD)
.
LSAADMNO   FORM         8                   PATIENT ADMISSION NO.
LSASTAT    FORM         1                   ADMISSION STATUS
.
.  redefine form fields for key
.  ----------------------------
. NAME     TYPE      LENGTH     START LOC.   DESCRIPTION
. ----     ----      ------     ----------   -----------
LAADMNO    FORM         8             1      PATIENT ADMISSION NO.
LASTAT     FORM         1            33      ADMISSION STATUS
LAMUMADM   FORM         8           442      MOTHERS ADMSS NUMBER(IF BABY)
.
.
.                                     ******** copy the new FD here *******
.
LEGMISS1   IFILE SQL, FIXED=589, KEY="U1-8"
LEGMISS2   IFILE SQL, FIXED=589, KEY="U33-33,1-8"
LEGMISS3   IFILE SQL, FIXED=589, KEY="U17-24,1-8"
LEGMISS4   IFILE SQL, FIXED=589, KEY="U33-33,64-69,52-54,55-57,1-8"
LEGMISS5   IFILE SQL, FIXED=589, KEY="U33-33,52-54,17-24,1-8"
LEGMISS6   IFILE SQL, FIXED=589, KEY="U9-16,1-8"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
DLAADMNO   DIM       8           8         1      PATIENT ADMISSION NO.
LAURNO     DIM       8           8         9      PATIENT U.R NO.
LADATE     DIM       8           8        17      PATIENT ADMISS DATE (CCYYMMDD)
LATIME     DIM       8           8        25      PATIENT ADMISSION TIME
DLASTAT    DIM       1           1        33      ADMISSION STATUS
.                                                 1 = PRE-ADMISSION
.                                                 2 = CURRENT ADMISSION
.                                                 3 = DISCHARGED
.                                                 4 = ON LEAVE
.                                                 5 = CANCELLED
LAPORT     DIM       2           2        34      CURRENT PORT USING THIS RECORD
LATRANNO   FORM      3           3        36      NEXT TRANSACTION NUMBER
LAINVPRT   FORM      2           2        39      NUMBER OF INVOICES PRINTED
LALACDTE   DIM       8           8        41      LAST ACCOM DATE INVD CCYYMMDD
LACANCEL   DIM       3           3        49      REASON PRE-ADMMSS CANCELATION
LAWARD     DIM       3           3        52      PATIENT WARD NO.
LABED      DIM       3           3        55      PATIENT BED NO.
LADOCTR    DIM       6           6        58      DOCTOR REFERRED BY.
LADOCTA    DIM       6           6        64      DOCTOR ATTENDING PATIENT.
LADOCTL    DIM      30          30        70      LOCAL DOCTOR
LASRCE     DIM       3           3       100      PATIENT ADMISSIONS SOURCE
LADTYPE    DIM       3           3       103      PATIENT ADMISSIONS TYPE
LACLSS     DIM       3           3       106      PATIENT ADMISSIONS CLASS
LACARE     DIM       3           3       109      PATIENT CARE CLASS
LAFUNDH    DIM       6           6       112      PATIENT HEALTH FUND
LAFNDTB    DIM       8           8       118      PATIENT FUND TABLE
LAFNDMM    DIM      10          10       126      PATIENT FUND MEMBERSHIP NO
LAELIG     FORM      1           2       136      PATIENT ELIGABILITY FOR GOV'T
.                                                 REBATE. 1 = YES
.                                                         2 = NO
LAVISIT    FORM      1           2       138      PATIENT RELIGIOUS VISIT
.                                                 1 = YES
.                                                 2 = NO
LAALERG    FORM      1           2       140      PATIENT ALLERGIES (Y/N)
.                                                 1 = YES
.                                                 2 = NO
LAILLN     FORM      1           2       142      PRE-EXISTING ILLNESS
.                                                 1 = YES
.                                                 2 = NO
LADIAG1    DIM      50          50       144      PATIENTS ADMITTING DIAG 1
LADIAG2    DIM      50          50       194       "   "     "   "     "  2
LADISC     FORM      6.2         5       244      PATIENT DISCOUNT PERCENTAGE
LADOCTT    DIM       6           6       249      Associated Doctor
LACLSSFT   DIM       3           3       255      ACCOUNT CLASSIFICATION
.
LAALLOW    DIM       2           2       258      PATIENT ALLOWANCE CODE
LAMBS      DIM       9           9       260      ADMITTING MBS CODE
LACLAIM    DIM       3           3       269      CLAIM CODE (CATE CL)
LADIET     DIM       3           3       272      DIET CODE
LAPLOCCR   DIM       3           3       275      PLACE OF OCCR (CATEGORY PO)
.
LASTAY     FORM      3           3       278      EXPECTED LENGTH OF STAY (DAYS)
LADYHOSP   FORM      3           3       281      No OF DAYS OF HOSPITALIZATION
.
LAMEMB     FORM      1           2       284      DIAMOND VALLEY MEMBERSHIP
.                                                 1 = YES
.                                                 2 = NO
LAMEMBNO   FORM      6           4       286      MEMBERSHIP NUMBER
LACOMM1    DIM      40          40       290      COMMENTS FIELD 1
LACOMM2    DIM      30          30       330      COMMENTS FIELD 2
LAPLUR     FORM      1           2       360      PLURATILY OF BABY (0=NORMAL)
LABWGHT    DIM       6           6       362      PATIENT WEIGHT
LAPURGE    FORM      1           2       368      PURGE INDICATOR
.                                                 OTHER = NO PURGE
.                                                 1     = PARTIAL
.                                                 2     = FULLY
.
LAUSR1     DIM       3           3       370      USER DEFINED FIELD 1 (CAT U1)
LAUSR2     DIM       3           3       373      USER DEFINED FIELD 2 (CAT U2)
LAUSR3     DIM       3           3       376      USER DEFINED FIELD 3 (CAT U3)
LAUSR4     DIM       3           3       379      USER DEFINED FIELD 4 (CAT U4)
LAUSR5     DIM       3           3       382      USER DEFINED FIELD 5 (CAT U5)
LAUSR6     DIM       3           3       385      USER DEFINED FIELD 6 (CAT U6)
LAUSR7     DIM       3           3       388      USER DEFINED FIELD 7 (CAT U7)
LPTMIU08   DIM       3           3       391      USER DEFINED FIELD 8 (CAT U8)
LPTMIU09   DIM       3           3       394      USER DEFINED FIELD 9 (CAT U9)
LPTMIU10   DIM       3           3       397      USER DEFINED FIELD 10(CAT V1)
LPTMIU11   DIM       3           3       400      USER DEFINED FIELD 11(CAT V2)
.
LADSCHI    FORM      1           2       403      DISCHARGE INVOICE INDICATOR
.                                                 0 = Discharge inv not printed
.                                                 1 = Have printed discharge inv
LARDRNAM   DIM      22          22       405      FREE FORMAT REFERRING DOCTOR
LAFNDYY    DIM       2           2       427      YRS OF FUND MEMBERSHIP (JR,DE)
LAFNDCG    DIM       6           6       429      FUND COVER CHANGE (CCYYMM)
LAOCCDTE   DIM       8           8       435      DATE OF OCCURANCE (CCYYMMDD)
LACODDTE   DIM       8           8       443      DATE CODING COMPLETED
LARETDTE   DIM       8           8       451      EXPECTED RETURN DATE FROM LVE
LDAMUMAD   FORM      8           5       459      MOTHERS ADMSS NUMBER(IF BABY)
LPTMIPDR   DIM       9           9       464      PROVISIONAL DRG
LPTMIGST   DIM       1           1       473      Is GST app. to event
.                                                 Y=Yes, N=No, U=Unknown
LPTMIEOC   DIM       8           8       475      EOC Link admission no. (ADT49)
LPTMISLO   DIM       3           3       482      Cat SG-Source of Ref-location
LPTMISCL   DIM       3           3       485      Cat SH-Source of Ref-clinical
LPTMISTR   DIM       3           3       488      Cat SI-Source of Ref-transport
LPTMICMX   DIM       1           1       491      Casemix payment (Y/N)
LPTMIDFA   DIM       8           8       492      Date Patient First Aware of
.                                                 Symptoms (CCYYMMDD)
LPTMIINT   DIM       1           1       500      Interpreter Required
.                                                 0=No 1=Yes " "=Not Stated
LPTMIPRE   DIM       3           3       501      Preferred Language (Cat LA)
.                                           * new fields ************ *I-169152
LPTMIPSF   DIM       1           1       504      First Psych Admission Yes/No
LPTMIPSR   DIM       2           2       505      Year of Last Psych Admiss (yy)
LPTMIQAS   DIM       12          12      507      QAS Number
LPTMIHFS   DIM       40          40      519      Health Fund SurName
LPTMIHFG   DIM       28          28      559      Health Fund GivenName
LPTMIFUP   DIM       2           2       587      Health Fund UPI
.
.End of Record                           589
.
.
.
.  *************************************************************************
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION LEGMISFD"
PRGID     INIT      "F90LGMIS"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      VERIFY00                      * verify new file
          BRANCH    EXIT,MAIN9999
.
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,"legmissf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat legmissf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "slgmissf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat legmissf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "slgmissf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "legmissf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "slgmissf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "legmissf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 589 UC1-8",CMDLINE              * <==== change
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC33-33,1-8",CMDLINE          * <==== change
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC17-24,1-8",CMDLINE          * <==== change
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC33-33,64-69,52-54,55-57,1-8",CMDLINE    * <==== change
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC33-33,52-54,17-24,1-8",CMDLINE          * <==== change
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC9-16,1-8",CMDLINE          * <==== change
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      LEGMISS1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      DONEFILE,"legmissf"
          TRAPCLR   IO
.
          IF        OVRCD = 0
            DISPLAY   *P1:23,*EL,*B,"File appears to have been converted ":
                      "already - process will not continue"
          ELSE
            DISPLAY   *P1:24,*EL,*B,"Old file not found.  "
          ENDIF
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY8,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50                      * <==== change
           UNPACK    SP50,LPTMIPSF,LPTMIPSR,LPTMIQAS,LPTMIHFG,LPTMIFUP
           PACK      LPTMIHFS,SP50
.                                               * Pack key here
          PACK      KEY8,DLAADMNO,SP50         * <==== change
          CALL      WRLGMIS1                    * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  MOVE      ZERO,EXIT
          DISPLAY   *P15:20,*V2LON,RECNUM
          CALL      IBACLOCK
          REP       " 0",CDATE
.
READ9999  RETURN
+
.**********************************************************************
.*                               VERIFY00                             *
.*             loop thru old file and read each new record            *
.**********************************************************************
VERIFY00  MOVE      ZERO,EXIT
          MOVE      ZERO,RECNUM
          DISPLAY   *P1:20,*EL,"Verifying  : ";
          PACK      KEY8,SP60
          CALL      READSOLD                    * position at start
VERIFY10  CALL      READKOLD                    * read next record
          BRANCH    OVRCD,VERIFY60              * no more records
          ADD       ONE,RECNUM                  * update record counter
.
.                                               * Pack key here
          PACK      KEY8,DLAADMNO,SP50         * <==== change
          CALL      RDLGMIS1                    * read of new file
          BRANCH    OVRCD,VERIFY80
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      VERIFY10                      * get next record
.
VERIFY60  CLOSE     LEGMISS1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          DISPLAY   *P15:20,*V2LON,RECNUM
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
          GOTO      VERIFY99
.
VERIFY80  DISPLAY   *P15:20,*V2LON,RECNUM
          DISPLAY   *P1:22,"New file has missing records - the old file copy":
                    " will be retained. ":
                    *P1:24,"    ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
VERIFY99  RETURN
.
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60

          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "slgmissf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat legmissf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding legmissf.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          PACK      KEY8,keyfld,SP20
.          READ      OLDFILE1,KEY8;;
.          RETURN
READSOLD  RESET     KEY8
          READ      OLDFILE1,KEY8;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DLAADMNO,LAURNO,LADATE,LATIME:
                                  DLASTAT,LAPORT,LATRANNO,LAINVPRT,LALACDTE:
                                  LACANCEL,LAWARD,LABED,LADOCTR,LADOCTA:
                                  LADOCTL,LASRCE,LADTYPE,LACLSS,LACARE:
                                  LAFUNDH,LAFNDTB,LAFNDMM,LAELIG,LAVISIT:
                                  LAALERG,LAILLN,LADIAG1,LADIAG2,LADISC:
                                  LADOCTT,LACLSSFT,LAALLOW,LAMBS,LACLAIM:
                                  LADIET,LAPLOCCR,LASTAY,LADYHOSP,LAMEMB:
                                  LAMEMBNO,LACOMM1,LACOMM2,LAPLUR,LABWGHT:
                                  LAPURGE,LAUSR1,LAUSR2,LAUSR3,LAUSR4:
                                  LAUSR5,LAUSR6,LAUSR7,LPTMIU08,LPTMIU09:
                                  LPTMIU10,LPTMIU11,LADSCHI,LARDRNAM,LAFNDYY:
                                  LAFNDCG,LAOCCDTE,LACODDTE,LARETDTE,LDAMUMAD:
                                  LPTMIPDR,LPTMIGST,LPTMIEOC,LPTMISLO,LPTMISCL:
                                  LPTMISTR,LPTMICMX,LPTMIDFA,LPTMIINT,LPTMIPRE:
                                  LASPARE1
          GOTO      OVERCOND IF OVER
          MOVE      DLAADMNO,LAADMNO
          MOVE      DLASTAT,LASTAT
          MOVE      LAADMNO,LSSAADMN
          MOVE      LASTAT,LSSASTAT
          MOVE      LADATE,LSSADATE
          MOVE      LDAMUMAD,LAMUMADM
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Read Direct and Write statements from the new I/O
.                  file - (no changes are needed to this routine) 
RDLGMIS1  RESET     KEY8 
          MOVE      ZERO,OVRCD
          READ      LEGMISS1,KEY8;DLAADMNO,LAURNO,LADATE,LATIME:
                                  DLASTAT,LAPORT,LATRANNO,LAINVPRT,LALACDTE:
                                  LACANCEL,LAWARD,LABED,LADOCTR,LADOCTA:
                                  LADOCTL,LASRCE,LADTYPE,LACLSS,LACARE:
                                  LAFUNDH,LAFNDTB,LAFNDMM,LAELIG,LAVISIT:
                                  LAALERG,LAILLN,LADIAG1,LADIAG2,LADISC:
                                  LADOCTT,LACLSSFT,LAALLOW,LAMBS,LACLAIM:
                                  LADIET,LAPLOCCR,LASTAY,LADYHOSP,LAMEMB:
                                  LAMEMBNO,LACOMM1,LACOMM2,LAPLUR,LABWGHT:
                                  LAPURGE,LAUSR1,LAUSR2,LAUSR3,LAUSR4:
                                  LAUSR5,LAUSR6,LAUSR7,LPTMIU08,LPTMIU09:
                                  LPTMIU10,LPTMIU11,LADSCHI,LARDRNAM,LAFNDYY:
                                  LAFNDCG,LAOCCDTE,LACODDTE,LARETDTE,LDAMUMAD:
                                  LPTMIPDR,LPTMIGST,LPTMIEOC,LPTMISLO,LPTMISCL:
                                  LPTMISTR,LPTMICMX,LPTMIDFA,LPTMIINT,LPTMIPRE:
                                  LPTMIPSF,LPTMIPSR,LPTMIQAS,LPTMIHFS,LPTMIHFG:
                                  LPTMIFUP
          GOTO      OVERCOND IF OVER
          MOVE      DLAADMNO,LAADMNO
          MOVE      DLASTAT,LASTAT
          MOVE      LAADMNO,LSSAADMN
          MOVE      LASTAT,LSSASTAT
          MOVE      LADATE,LSSADATE
          MOVE      LDAMUMAD,LAMUMADM
          RETURN
.
WRLGMIS1  RESET     KEY8
          WRITE     LEGMISS1,KEY8;DLAADMNO,LAURNO,LADATE,LATIME:
                                  DLASTAT,LAPORT,LATRANNO,LAINVPRT,LALACDTE:
                                  LACANCEL,LAWARD,LABED,LADOCTR,LADOCTA:
                                  LADOCTL,LASRCE,LADTYPE,LACLSS,LACARE:
                                  LAFUNDH,LAFNDTB,LAFNDMM,LAELIG,LAVISIT:
                                  LAALERG,LAILLN,LADIAG1,LADIAG2,LADISC:
                                  LADOCTT,LACLSSFT,LAALLOW,LAMBS,LACLAIM:
                                  LADIET,LAPLOCCR,LASTAY,LADYHOSP,LAMEMB:
                                  LAMEMBNO,LACOMM1,LACOMM2,LAPLUR,LABWGHT:
                                  LAPURGE,LAUSR1,LAUSR2,LAUSR3,LAUSR4:
                                  LAUSR5,LAUSR6,LAUSR7,LPTMIU08,LPTMIU09:
                                  LPTMIU10,LPTMIU11,LADSCHI,LARDRNAM,LAFNDYY:
                                  LAFNDCG,LAOCCDTE,LACODDTE,LARETDTE,LDAMUMAD:
                                  LPTMIPDR,LPTMIGST,LPTMIEOC,LPTMISLO,LPTMISCL:
                                  LPTMISTR,LPTMICMX,LPTMIDFA,LPTMIINT,LPTMIPRE:
                                  LPTMIPSF,LPTMIPSR,LPTMIQAS,LPTMIHFS,LPTMIHFG:
                                  LPTMIFUP
          RETURN
.
.
          INC       STD001IO
