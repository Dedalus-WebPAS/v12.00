.*****************************************************************************
.*    Program      : F08PTMX1                                                *
.*    Description  : Conversion patmx1af to new File layout                  *
.*                                                                           *
.*    Author       : Steve Armstrong                                         *
.*    Date         : 11/04/2016                                              *
.*    Modifications:                                                         *
.*                                                                           *
.*        V10.08.00 11/04/2016  Steve Armstrong  TSK 0279181                 *
.*                  Created program                                          *
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
.
.         Old File Definition
.
OLDFILE1  IFILE     SQL, FIXED=850, KEY="U1-8"
.
.NAME     Type      Length  PHYS.  START  DESCRIPTION
.----     ----      ------  -----  -----  -------------------------------
.PURNO    DIM       8           8      1  Patient U/R No.
.PTMXRDAT DIM       8           8      9  Registration Date
.PTMXMEAL DIM       30         30     17  Special Meal Requirements
.PTMXLGA  DIM       4           4     47  LGA Code
.PTMXLS   DIM       3           3     51  Current Legal status (Cat LS)
.PTMXLSDT DIM       8           8     54  Date of legal status (ccyymmdd)
.PTMXFHMD DIM       1           1     62  Familial history of mental disorder ?
.                                           1 = Yes ; 2 = No
.PTMXMHU1 DIM       3           3     63  M.H. User defined field 1 (Cat V6)
.PTMXMHU2 DIM       3           3     66  M.H. User defined field 2 (Cat V7)
.PTMXMHU3 DIM       3           3     69  M.H. User defined field 3 (Cat V8)
.PTMXECNM DIM       20         20     72  Emergency contact name
.PTMXECA1 DIM       35         35     92  Emergency contact address line 1
.PTMXECA2 DIM       35         35    127  Emergency contact address line 2
.PTMXECA3 DIM       35         35    162  Emergency contact address line 3
.PTMXECA4 DIM       35         35    197  Emergency contact address line 4
.PTMXECPC DIM       8           8    232  Emergency contact postcode
.PTMXECPP DIM       20         20    240  Emergency contact private phone
.PTMXECBP DIM       20         20    260  Emergency contact business phone
.PTMXECRE DIM       10         10    280  Emergency contact relationship
.PTMXNRNM DIM       20         20    290  Nearest relative name
.PTMXNRA1 DIM       35         35    310  Nearest relative address line 1
.PTMXNRA2 DIM       35         35    345  Nearest relative address line 2
.PTMXNRA3 DIM       35         35    380  Nearest relative address line 3
.PTMXNRA4 DIM       35         35    415  Nearest relative address line 4
.PTMXNRPC DIM       8           8    450  Nearest relative postcode
.PTMXNRPP DIM       20         20    458  Nearest relative private phone
.PTMXNRBP DIM       20         20    478  Nearest relative business phone
.PTMXNRRE DIM       10         10    498  Nearest relative relationship
.PTMX3BEX DIM       8          8     508  3B certificate expiry date
.PTMXCARD DIM       20         20    516  Card number (NZ billing)
.PTMXCEXP DIM       8          8     536  Card expiry date (NZ billing)
.PTMXCXMP DIM       3          3     544  Card exemption type (Cat XM)
.PTMXFMLY DIM       12         12    547  Family id
.PTMXCHNM DIM       20         20    559  Chinese Name
.PTMXDOFR DIM       3          3     579  District of Residence (Cat DA)
.PTMXREGP DIM       8          8     582  No longer in use
.PTMXGPPC DIM       6          6     590  No longer in use
.PTMXSPID DIM       20         20    596  Supplementary Id
.PTMXGPPT DIM       2          2     616  No longer in use
.PTMXOSDT DIM       8          8     618  Date Arrived from Overseas (CCYYMMDD)
.PTMXOPER DIM       4          4     626  Sec. Code Operator who Created Record
.PTMXUKDO DIM       1          1     630  Unknown Date Arrived from O/S (Y/N)
.PTMXCELL DIM       20         20    631  Patient's Mobile Phone No.
.PTMXADD1 DIM       35         35    651  Postal Address Line 1
.PTMXADD2 DIM       35         35    686  Postal Address Line 2
.PTMXADD3 DIM       35         35    721  Postal Address Line 3
.PTMXADD4 DIM       35         35    756  Postal Address Line 4
.PTMXPOST DIM       8          8     791  Postal Address Post Code
.PTMXMCCD DIM       2          2     799  Medicare Code
.PTMXSIN1 DIM       1          1     801  Status Ind 1 - Alerts present(1=yes)
.                                         2=Security alerts 3=Deleted Alerts
.                                         or lowest indicator 4 alert assigned
.PTMXSIN2 DIM       1          1     802  Status Ind 2 - Results present(1=yes)
.PTMXSIN3 DIM       1          1     803  Status Ind 3 - Clinical notes present
.PTMXSIN4 DIM       1          1     804  Status Ind 4 - Clinical Documentation
.PTMXSIN5 DIM       1          1     805  Status Ind 5 - Legacy Visits (1=yes)
.PTMXCTIM DIM       20         20    806  Time/Date Change(ccyymmddhh:mm:ss:mmm)
.PTMXSLAC DIM       8          8     826  Year last Psych adm (was SLA Code)
.PTMXFILN DIM       3          3     834  Filing Required
.PTMXDEAF DIM       3          3     837  Deaf  (Category DK)
.PTMXOSMS DIM       1          1     840  Opt Out of SMS
.                                           0 or Blank = No
.                                           1 = Yes
OLDSPARE  DIM       9          9     841  Spare Variable
.
.End of Record                       850
.
.
.         New File Definition
.
PATMX1A1  IFILE     SQL, FIXED=901, KEY="U1-8"
.
.NAME     Type      Length  PHYS.  START  DESCRIPTION
.----     ----      ------  -----  -----  -------------------------------
PURNO     DIM       8           8      1  Patient U/R No.
PTMXRDAT  DIM       8           8      9  Registration Date
PTMXMEAL  DIM       30         30     17  Special Meal Requirements
PTMXLGA   DIM       4           4     47  LGA Code
PTMXLS    DIM       3           3     51  Current Legal status (Cat LS)
PTMXLSDT  DIM       8           8     54  Date of legal status (ccyymmdd)
PTMXFHMD  DIM       1           1     62  Familial history of mental disorder ?
.                                           1 = Yes ; 2 = No
PTMXMHU1  DIM       3           3     63  M.H. User defined field 1 (Cat V6)
PTMXMHU2  DIM       3           3     66  M.H. User defined field 2 (Cat V7)
PTMXMHU3  DIM       3           3     69  M.H. User defined field 3 (Cat V8)
PTMXECNM  DIM       20         20     72  Emergency contact name
PTMXECA1  DIM       35         35     92  Emergency contact address line 1
PTMXECA2  DIM       35         35    127  Emergency contact address line 2
PTMXECA3  DIM       35         35    162  Emergency contact address line 3
PTMXECA4  DIM       35         35    197  Emergency contact address line 4
PTMXECPC  DIM       8           8    232  Emergency contact postcode
PTMXECPP  DIM       20         20    240  Emergency contact private phone
PTMXECBP  DIM       20         20    260  Emergency contact business phone
PTMXECRE  DIM       10         10    280  Emergency contact relationship
PTMXNRNM  DIM       20         20    290  Nearest relative name
PTMXNRA1  DIM       35         35    310  Nearest relative address line 1
PTMXNRA2  DIM       35         35    345  Nearest relative address line 2
PTMXNRA3  DIM       35         35    380  Nearest relative address line 3
PTMXNRA4  DIM       35         35    415  Nearest relative address line 4
PTMXNRPC  DIM       8           8    450  Nearest relative postcode
PTMXNRPP  DIM       20         20    458  Nearest relative private phone
PTMXNRBP  DIM       20         20    478  Nearest relative business phone
PTMXNRRE  DIM       10         10    498  Nearest relative relationship
PTMX3BEX  DIM       8          8     508  3B certificate expiry date
PTMXCARD  DIM       20         20    516  Card number (NZ billing)
PTMXCEXP  DIM       8          8     536  Card expiry date (NZ billing)
PTMXCXMP  DIM       3          3     544  Card exemption type (Cat XM)
PTMXFMLY  DIM       12         12    547  Family id
PTMXCHNM  DIM       20         20    559  Chinese Name
PTMXDOFR  DIM       3          3     579  District of Residence (Cat DA)
PTMXREGP  DIM       8          8     582  No longer in use
PTMXGPPC  DIM       6          6     590  No longer in use
PTMXSPID  DIM       20         20    596  Supplementary Id
PTMXGPPT  DIM       2          2     616  No longer in use
PTMXOSDT  DIM       8          8     618  Date Arrived from Overseas (CCYYMMDD)
PTMXOPER  DIM       4          4     626  Sec. Code Operator who Created Record
PTMXUKDO  DIM       1          1     630  Unknown Date Arrived from O/S (Y/N)
PTMXCELL  DIM       20         20    631  Patient's Mobile Phone No.
PTMXADD1  DIM       35         35    651  Postal Address Line 1
PTMXADD2  DIM       35         35    686  Postal Address Line 2
PTMXADD3  DIM       35         35    721  Postal Address Line 3
PTMXADD4  DIM       35         35    756  Postal Address Line 4
PTMXPOST  DIM       8          8     791  Postal Address Post Code
PTMXMCCD  DIM       2          2     799  Medicare Code
PTMXSIN1  DIM       1          1     801  Status Ind 1 - Alerts present(1=yes)
.                                         2=Security alerts 3=Deleted Alerts
.                                         or lowest indicator 4 alert assigned
PTMXSIN2  DIM       1          1     802  Status Ind 2 - Results present(1=yes)
PTMXSIN3  DIM       1          1     803  Status Ind 3 - Clinical notes present
PTMXSIN4  DIM       1          1     804  Status Ind 4 - Clinical Documentation
PTMXSIN5  DIM       1          1     805  Status Ind 5 - Legacy Visits (1=yes)
PTMXCTIM  DIM       20         20    806  Time/Date Change(ccyymmddhh:mm:ss:mmm)
PTMXSLAC  DIM       8          8     826  Year last Psych adm (was SLA Code)
PTMXFILN  DIM       3          3     834  Filing Required
PTMXDEAF  DIM       3          3     837  Deaf  (Category DK)
PTMXOSMS  DIM       1          1     840  Opt Out of SMS
.                                           0 or Blank = No
.                                           1 = Yes
PTMXUUID  DIM       10         10    841  Web User ID who Updated Record
.                                           (websecaf)
PTMXSPAR  DIM       50         50    851  Spare Variable
.
.End of Record                       901
.
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PATMX1FD"
PRGID     INIT      "F08PTMX1"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000              * run c-isam fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000              * c-isam fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      "patmx1af",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patmx1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptmx1af.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patmx1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptmx1af.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patmx1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sptmx1af",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patmx1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 901 UC1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PATMX1A1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY8,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      SP70,PTMXUUID
          MOVE      SP70,PTMXSPAR
.
          CALL      WRPTMSX1                     * write to new file
.
          GOTO      READ1000                     * get next record
.
READ6000  CLOSE     PATMX1A1                     * close new file
          CLOSE     OLDFILE1                     * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sptmx1af*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not zipped or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat patmx1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'patmx1af'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.         Old I/O Routines
.
READSOLD  RESET     KEY8
          READ      OLDFILE1,KEY8;;
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;PURNO,PTMXRDAT,PTMXMEAL,PTMXLGA,PTMXLS:
                             PTMXLSDT,PTMXFHMD,PTMXMHU1,PTMXMHU2,PTMXMHU3:
                             PTMXECNM,PTMXECA1,PTMXECA2,PTMXECA3,PTMXECA4:
                             PTMXECPC,PTMXECPP,PTMXECBP,PTMXECRE:
                             PTMXNRNM,PTMXNRA1,PTMXNRA2,PTMXNRA3,PTMXNRA4:
                             PTMXNRPC,PTMXNRPP,PTMXNRBP,PTMXNRRE:
                             PTMX3BEX,PTMXCARD,PTMXCEXP,PTMXCXMP,PTMXFMLY:
                             PTMXCHNM,PTMXDOFR,PTMXREGP,PTMXGPPC,PTMXSPID:
                             PTMXGPPT,PTMXOSDT,PTMXOPER,PTMXUKDO,PTMXCELL:
                             PTMXADD1,PTMXADD2,PTMXADD3,PTMXADD4,PTMXPOST:
                             PTMXMCCD,PTMXSIN1,PTMXSIN2,PTMXSIN3,PTMXSIN4:
                             PTMXSIN5,PTMXCTIM,PTMXSLAC,PTMXFILN,PTMXDEAF:
                             PTMXOSMS,OLDSPARE
          GOTO      OVERCOND IF OVER
          RETURN
.
.         New I/O Routines
.
WRPTMSX1  WRITE     PATMX1A1,KEY8;PURNO,PTMXRDAT,PTMXMEAL,PTMXLGA,PTMXLS:
                             PTMXLSDT,PTMXFHMD,PTMXMHU1,PTMXMHU2,PTMXMHU3:
                             PTMXECNM,PTMXECA1,PTMXECA2,PTMXECA3,PTMXECA4:
                             PTMXECPC,PTMXECPP,PTMXECBP,PTMXECRE:
                             PTMXNRNM,PTMXNRA1,PTMXNRA2,PTMXNRA3,PTMXNRA4:
                             PTMXNRPC,PTMXNRPP,PTMXNRBP,PTMXNRRE:
                             PTMX3BEX,PTMXCARD,PTMXCEXP,PTMXCXMP,PTMXFMLY:
                             PTMXCHNM,PTMXDOFR,PTMXREGP,PTMXGPPC,PTMXSPID:
                             PTMXGPPT,PTMXOSDT,PTMXOPER,PTMXUKDO,PTMXCELL:
                             PTMXADD1,PTMXADD2,PTMXADD3,PTMXADD4,PTMXPOST:
                             PTMXMCCD,PTMXSIN1,PTMXSIN2,PTMXSIN3,PTMXSIN4:
                             PTMXSIN5,PTMXCTIM,PTMXSLAC,PTMXFILN,PTMXDEAF:
                             PTMXOSMS,PTMXUUID,PTMXSPAR
          RETURN
.
          INC       STD001IO
