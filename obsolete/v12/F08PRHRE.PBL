.*****************************************************************************
.*    Program      : F08PRHRE                                                *
.*    Description  : Conversion prihreff to new File layout                  *
.*                                                                           *
.*    Author       : Steve Armstrong                                         *
.*    Date         : 15/04/2016                                              *
.*    Modifications:                                                         *
.*                                                                           *
.*        V10.08.00 15/04/2016  Steve Armstrong  TSK 0294177                 *
.*                  Created program                                          *
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
.
.         Old File Definition
.
OLDFILE1  IFILE SQL, FIXED=457, KEY="U1-8,9-14,15-20,21-23"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.DPRHRUNQ DIM       8      8        1     Unique Identifier
.PRHRPRAC DIM       6      6        9     Medical Practice Code
.PRHRDOCT DIM       6      6        15    Service Doctor
.PRHRPIND DIM       3      3        21    Patient Indicator (Category GI)
.
.PRHRREFD DIM       6      6        24    Referring Doctor
.PRHRRDAT DIM       8      8        30    Referral Date (CCYYMMDD)
.PRHRREFT DIM       50     50       38    Referral Details
.DPRHRPIN DIM       1      1        88    Invoice to be printed
.                                             0 = No
.                                             1 = Yes
.PRHRMESS DIM       3      3        89    Message Code (PATMESG1)
.PRHRBULK DIM       3      3        92    Bulk Bill Code (Cat GB)
.PRHRBCOD DIM       6      6        95    Fund/Insurance Co./Govt Code
.PRHROCOD DIM       20     20       101   Operation Codes
.PRHRUDF1 DIM       3      3        121   User Defined Field 1 (Category G1)
.PRHRUDF2 DIM       3      3        124   User Defined Field 2 (Category G2)
.PRHRUDF3 DIM       3      3        127   User Defined Field 3 (Category G3)
.PRHRUDF4 DIM       3      3        130   User Defined Field 4 (Category G4)
.
.PRHRNAME DIM       45     45       133   Name of Person Responsible for A/C
.PRHRADD1 DIM       35     35       178   P.R.A. Address Line 1
.PRHRADD2 DIM       35     35       213   P.R.A. Address Line 2
.PRHRADD3 DIM       35     35       248   P.R.A. Address Line 3
.PRHRADD4 DIM       35     35       283   P.R.A. Address Line 4
.PRHRPOST DIM       8      8        318   P.R.A. Postcode
.PRHRTELP DIM       20     20       326   P.R.A. Private Telephone
.PRHRTELB DIM       20     20       346   P.R.A. Business Telephone
.PRHRMPHN DIM       20     20       366   P.R.A. Mobile Telephone
.PRHRRELP DIM       10     10       386   P.R.A. Relationship
.
.PRHRUNCL FORM      8      5        396   Unique claims number
.PRHRADMN DIM       3      3        401   Admission Class
.PRHRRFPD DIM       3      3        404   Referral Period (Cat RF)
.
.PRHRSPAR DIM       50     50       407   Spare Variable
.
.End of Record                      457
.
.
.         New File Definition
.
PRIHREF1   IFILE SQL, FIXED=497, KEY="U1-8,9-14,15-20,21-23"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
DPRHRUNQ  DIM       8      8        1     Unique Identifier
PRHRPRAC  DIM       6      6        9     Medical Practice Code
PRHRDOCT  DIM       6      6        15    Service Doctor
PRHRPIND  DIM       3      3        21    Patient Indicator (Category GI)
.
PRHRREFD  DIM       6      6        24    Referring Doctor
PRHRRDAT  DIM       8      8        30    Referral Date (CCYYMMDD)
PRHRREFT  DIM       50     50       38    Referral Details
DPRHRPIN  DIM       1      1        88    Invoice to be printed
.                                             0 = No
.                                             1 = Yes
PRHRMESS  DIM       3      3        89    Message Code (PATMESG1)
PRHRBULK  DIM       3      3        92    Bulk Bill Code (Cat GB)
PRHRBCOD  DIM       6      6        95    Fund/Insurance Co./Govt Code
PRHROCOD  DIM       20     20       101   Operation Codes
PRHRUDF1  DIM       3      3        121   User Defined Field 1 (Category G1)
PRHRUDF2  DIM       3      3        124   User Defined Field 2 (Category G2)
PRHRUDF3  DIM       3      3        127   User Defined Field 3 (Category G3)
PRHRUDF4  DIM       3      3        130   User Defined Field 4 (Category G4)
.
PRHRNAME  DIM       45     45       133   Name of Person Responsible for A/C
PRHRADD1  DIM       35     35       178   P.R.A. Address Line 1
PRHRADD2  DIM       35     35       213   P.R.A. Address Line 2
PRHRADD3  DIM       35     35       248   P.R.A. Address Line 3
PRHRADD4  DIM       35     35       283   P.R.A. Address Line 4
PRHRPOST  DIM       8      8        318   P.R.A. Postcode
PRHRTELP  DIM       20     20       326   P.R.A. Private Telephone
PRHRTELB  DIM       20     20       346   P.R.A. Business Telephone
PRHRMPHN  DIM       20     20       366   P.R.A. Mobile Telephone
PRHRRELP  DIM       10     10       386   P.R.A. Relationship
.
PRHRUNCL  FORM      8      5        396   Unique claims number
PRHRADMN  DIM       3      3        401   Admission Class
PRHRRFPD  DIM       3      3        404   Referral Period (Cat RF)
PRHRTACC  DIM       3      3        407   Type of Account/Claim (Cat ta)
PRHRLVIS  DIM       8      8        410   Linked Visit Number
PRHRACCI  DIM       1      1        418   Accident Indicator
.                                          0 or Blank = No
.                                          1 = Yes
PRHRACPD  DIM       1      1        419   Account Paid
.                                          0 or Blank = No
.                                          1 = Yes
PRHRBASS  DIM       1      1        420   Benefit Assigned Authorised
.                                          0 or Blank = No
.                                          1 = Yes
PRHRISSC  DIM       3      3        421   IFC Issue Code (Cat ic)
PRHRSTCD  DIM       3      3        424   Service Type Code (Cat st)
PRHRFPID  DIM       40     40       427   Fund Payee ID
PRHRSPAR  DIM       30     30       467   Spare Variable
.
.End of Record                      497
.
.
. Redefine FORM fields from key
. -----------------------------
PRHRUNIQ  FORM      8
PRHRPINV  FORM      1
.
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PRIHREFD"
PRGID     INIT      "F08PRHRE"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000              * run c-isam fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000              * c-isam fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      "prihreff",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat prihreff.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sprhreff.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat prihreff.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sprhreff.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "prihreff",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sprhreff",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "prihreff",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 497 UC1-8,9-14,15-20,21-23",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC88-88,1-8,9-14,15-20,21-23",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC9-14,15-20,21-23,1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PRIHREF1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY23,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      SP3,PRHRTACC
          MOVE      SP8,PRHRLVIS
          MOVE      SP1,PRHRACCI
          MOVE      SP1,PRHRACPD
          MOVE      SP1,PRHRBASS
          MOVE      SP3,PRHRISSC
          MOVE      SP3,PRHRSTCD
          MOVE      SP70,PRHRFPID
.
          PACK      KEY23,PRHRUNIQ,PRHRPRAC,PRHRDOCT,PRHRPIND
          CALL      WRPRHR1                      * write to new file
.
          GOTO      READ1000                     * get next record
.
READ6000  CLOSE     PRIHREF1                     * close new file
          CLOSE     OLDFILE1                     * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sprhreff*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not zipped or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat prihreff.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'prihreff'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.         Old I/O Routines
.
READSOLD  RESET     KEY23
          READ      OLDFILE1,KEY23;;
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DPRHRUNQ,PRHRPRAC,PRHRDOCT,PRHRPIND:
                                  PRHRREFD,PRHRRDAT,PRHRREFT,DPRHRPIN,PRHRMESS:
                                  PRHRBULK,PRHRBCOD,PRHROCOD,PRHRUDF1,PRHRUDF2:
                                  PRHRUDF3,PRHRUDF4,PRHRNAME,PRHRADD1,PRHRADD2:
                                  PRHRADD3,PRHRADD4,PRHRPOST,PRHRTELP,PRHRTELB:
                                  PRHRMPHN,PRHRRELP,PRHRUNCL,PRHRADMN,PRHRRFPD:
                                  PRHRSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPRHRUNQ,PRHRUNIQ
          MOVE      DPRHRPIN,PRHRPINV
          RETURN
.
.         New I/O Routines
.
WRPRHR1   RESET     KEY23
          MOVE      PRHRUNIQ,DPRHRUNQ
          MOVE      PRHRPINV,DPRHRPIN
          WRITE     PRIHREF1,KEY23;KEY23:
                                  PRHRREFD,PRHRRDAT,PRHRREFT,DPRHRPIN,PRHRMESS:
                                  PRHRBULK,PRHRBCOD,PRHROCOD,PRHRUDF1,PRHRUDF2:
                                  PRHRUDF3,PRHRUDF4,PRHRNAME,PRHRADD1,PRHRADD2:
                                  PRHRADD3,PRHRADD4,PRHRPOST,PRHRTELP,PRHRTELB:
                                  PRHRMPHN,PRHRRELP,PRHRUNCL,PRHRADMN,PRHRRFPD:
                                  PRHRTACC,PRHRLVIS,PRHRACCI,PRHRACPD,PRHRBASS:
                                  PRHRISSC,PRHRSTCD,PRHRFPID,PRHRSPAR
          RETURN
.
          INC       STD001IO
