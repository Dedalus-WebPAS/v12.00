. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS16                                             *
. * Desc      :   Statistical Account Maintenance                      *
. **********************************************************************
. * Date      :   02.11.1990                                           *
. * Author    :   Peter Eddey                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filenames (FILENAM1 & FILENAM2).  *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.04  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. * VF.00.03  09.11.1999 Charles Handaya                               *
. *           Fix Y2K of Audit Files Date (CCYYMMDD)                   *
. * VF.00.02  30.06.1999 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. *           srf 632475                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. **********************************************************************
.
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * FMS audit update variables
.
          INC       FMSBPFFD/INC
          INC       FMSCAFFD/INC       * control account file
          INC       FMSCCAFD/INC       * cost centre file
          INC       FMSCCCFD/INC       * consolidated cost centre
          INC       FMSLMBFD/INC
          INC       FMSLEVFD/INC
          INC       FMSPRCFD/INC
          INC       FMSRSFFD/INC  
          INC       FMSSBAFD/INC       * subjective file
          INC       FMSSSCFD/INC
          INC       FMSSTRFD/INC       * stat tran file
          INC       FMSTRNFD/INC       * normal tran file
          INC       FMSUWPFD/INC
          INC       FMSXCSFD/INC       * xref file
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.==============================================================================
.VARIABLE DEFINITIONS REQUIRED
.-----------------------------
SAVKEY19  DIM       19       * audit routine vars
WAUDTYPE  FORM      1
.
CURPAGE   FORM      3                  * current page number
CURPRTP   DIM       5                  * new print position
ACCEPT    FORM      1
MAXITEMC  FORM      "15"               * maximum no. of items on screen C + 1
ITEMNUM   FORM      2                  * item number
SAVRPNO   DIM       2                  * key save for report number
SAVPRTC   DIM       3                  * key save for print code
SCRNO     FORM      1                  * screen number
SELECT    FORM      2                  * selection
HEADSEQ   INIT      "00000"
TOTSEQ    INIT      "99999"
PAGENO    FORM      2
SKEY      DIM       35                 * key save for screen B
SAVITEM   FORM      2                  * item number for screen B
OPTIONC   FORM      2                  * screen selection keyin var
OPTIONE   FORM      2                  * screen selection keyin var
MORE      FORM      1                  * more data (1=yes)
OPT1      DIM       1
OPT2      DIM       1
OPT3      DIM       1
VALOPTN   DIM       3
.
.**********************************************************************
.*                   Data variables required                          *
.**********************************************************************
FMSTMP01  FILE      ASCII,FIXED=70     * WP Holding File Def'n 1
FILENAM1  DIM       8
NAME1     INIT      "fmstm1"
.
FMSTMP02  FILE      ASCII,FIXED=70     * WP Holding File Def'n 2
FILENAM2  DIM       8
NAME2     INIT      "fmstm2"
.
CP        INIT      "cp "              * word processor variables
TXT       INIT      ".txt "
WP        INIT      "wp "
WPDAT     INIT      ".txt 999 7 -1 70 14"
WPSTAT    FORM      2
.
ACCLEVEL  DIM       3
ACCTDESC  DIM       35
ACLVDESC  DIM       35
ADDACCT   DIM       12
ADDADESC  DIM       35
ADDAFLAG  FORM      1
ADDLEDG   DIM       2
ADDTYPE   DIM       1
ADTYDESC  DIM       8
AVEYTD    FORM      1
AYTDANS   DIM       3
COL       FORM      2
CONSDIV   FORM      6.2
CONSMULT  FORM      6.2
COSTCODE  DIM       12
XECIMALP  DIM       1
DIM33     DIM       33
DIM35     DIM       35
FORM5     FORM      5
ITEM      FORM      2
ITEM01    DIM       19
ITEM02    DIM       19
ITEM03    DIM       19
ITEM04    DIM       19
ITEM05    DIM       19
ITEM06    DIM       19
ITEM07    DIM       19
ITEM08    DIM       19
ITEM09    DIM       19
ITEM10    DIM       19
ITEM11    DIM       19
ITEM12    DIM       19
ITEM13    DIM       19
ITEM14    DIM       19
ITEM15    DIM       19
LEDGDESC  DIM       35
MODIFLAG  FORM      1
NACCDESC  DIM       35
NACCOUNT  DIM       12
NEXTSCRF  FORM      1
OREPNUMB  DIM       2
NPERIOD    FORM      1
POSTANS   DIM       3
POSTING   DIM       1
PRINTPOS  DIM       5
PRNTCODE  DIM       3
PRNTDESC  DIM       35
RECCOUNT  FORM      2
REPDESC   DIM       35
REPNUMB   DIM       2
ROW       FORM      2
SCRNUMB   FORM      4
SCRCOUNT  FORM      4
SP12      INIT      "            "
STATFLAG  FORM      1                    * Stat total record flag
.                                            0 = not a stat total rec
.                                            1 = Stat total record
STATUNIT  DIM       20
SUBACCT   DIM       12
SUBFLAG   FORM      1
SUBFUNC   DIM       1
SUBLEDG   DIM       2
SUBREP    DIM       2
SUBSEQ    DIM       5
SUBTOTAL  FORM      1
SUBJCODE  DIM       12
SAVEACCT  DIM       12
SAVEFUNC  DIM       1
SAVEREP   DIM       2
SAVESEQ   DIM       5
SAVETOTL  FORM      1
VALIDFLG  FORM      1
RECTYPE   FORM      1
ZMODE     FORM      1                  * input mode
FILENAME  DIM       8                  * file
NORMFILE  DIM       8                  * norm tran file
STATFILE  DIM       8                  * stat tran file
FMST      INIT      "fmst"
FMSA      INIT      "fmsa"
.
PRGID     INIT      "IBAFMS16"
PRGNAM    INIT      "Statistical Account Maintenance"
VERSION   INIT      "V12.00.00"
.**********************************************************************
.*                           ML0000                                   *
.*                       Mainline  Code                               *
.**********************************************************************
.
ML0000    CALL      INIT0000             * initialisation
.
ML0500    CALL      SELOPTN              * Insert, Modify , Delete
          BRANCH    COPTION,ML1000,ML2000,ML3000
          GOTO      ML9999               * Exit was selected
.
.-----  Insert a statistical account ----
.
ML1000    CALL      DLAS0000             * display ledger/account prompt
.
ML1100    CALL      KLED0000             * keyin the ledger
          BRANCH    EXIT,ML0500,ML0500
.
ML1200    CALL      KAAC0000             * keyin a new account
          BRANCH    EXIT,ML1100,ML0500
.
          CALL      CVAR0000
          CALL      DEFV0000
          MOVE      ZERO,STATFLAG
          CALL      DBDS0000             * display the basic detail
.                                          screen
          CALL      GETW0000             * read in wp data
          CALL      ASTA0000             * add a statistical account
          BRANCH    EXIT,ML1200
.
          CALL      SPCN0000             * select item, post, cancel
          BRANCH    EXIT,ML1200
          CALL      PBAD0000             * post basic details
.
          BRANCH    STATFLAG,ML1500      * stat total rec
.
          BRANCH    FMCOSTPO,ML1600      * write stat-post recs to rsf file
          GOTO      ML1200
.
ML1500    CALL      SUBA0000           * handle the sub accounts
.
ML1600    MOVE      ONE,ACCEPT         * accept mode
          CALL      SELC0000           * modify screen C
          GOTO      ML1200
.
.-----  Modify a statistical account ----
.
ML2000
          MOVE      ONE,MODIFLAG
          CALL      DLAS0000             * display ledger/account prompt
.
ML2100
          CALL      KLED0000             * keyin the ledger
          BRANCH    EXIT,ML2500,ML2500
.
ML2120
          CALL      KACT0000             * Keyin the account
          BRANCH    EXIT,ML2100,ML2500
.
          CALL      CVAR0000             * clear the save variables
          CALL      FBDD0000             * Format data into save var's
ML2150
          BRANCH    FMCOSTPO,ML2200      * write stat-post recs to rsf file
.
          BRANCH    STATFLAG,ML2200      * if total account disp' menu
          GOTO      ML2350                 else just basic details
.
ML2200
          BRANCH    ZMODE,ML2600         * only allow mod of rep for cc/subj
          CALL      MENU0000
          BRANCH    EXIT,ML2300,ML2400,ML2600
          GOTO      ML2120
.
ML2300
          CALL      CVAR0000             * clear the save variables
          CALL      GCRC0000             * Get the current record
          CALL      FBDD0000             * Format data into save var's
ML2350
          CALL      DBDS0000             * display the screen
          CALL      RDBD0000             * display the data
          CALL      GETW0000             * read in wp data
.
          MOVE      "2",WAUDTYPE
          CALL      WAUD0000             * write audits
.
          CALL      SPCN0000             * select item post cancel
          BRANCH    EXIT,ML2355
.
          MOVE      "3",WAUDTYPE
          CALL      WAUD0000             * write audits
.
          CALL      UBAD0000             * update the basic details
          CALL      POWP0000             * post wp data
          GOTO      ML2360
.
ML2355    CALL      READ0000             * re-read old data
          CALL      DAUD0000             * delete audits
.
ML2360
          BRANCH    FMCOSTPO,ML2200      * write stat-post recs to rsf file
.
          BRANCH    STATFLAG,ML2200      * return to menu if total acc
          GOTO      ML2120                 else get next account
.
.----- handle the modification of sub - accounts ----
.
ML2400
          CALL      CVAR0000             * clear the save variables
          CALL      GCRC0000             * Get the current record
          CALL      FBDD0000             * Format data into save var's
          CALL      SUBA0000             * handle the sub accounts
          GOTO      ML2200
ML2500
          MOVE      ZERO,MODIFLAG
          GOTO      ML0500
.
ML2600    MOVE      ZERO,ACCEPT
          CALL      SELC0000
          BRANCH    ZMODE,ML2120       * only allow mod of rep det for cc/subj
          GOTO      ML2200
.
.
.-----  Delete a statistical account ----
.
ML3000
          CALL      DLAS0000             * display ledger/account prompt
.
ML3100
          CALL      CVAR0000
.
          CALL      KLED0000             * keyin the ledger
          BRANCH    EXIT,ML0500,ML0500
.
ML3200
          CALL      KACT0000             * Keyin the account
          BRANCH    EXIT,ML3100,ML0500
.
          CALL      FBDD0000             * format the data for display
          CALL      DBDS0000             * display the screen
          CALL      RDBD0000             * display the data
.
          CALL      CKTS0000             * check not in stat subj calc file
          BRANCH    EXIT,ML3200
          CALL      CFSA0000             * check for sub-accounts &
          BRANCH    EXIT,ML3200            don't allow a deletion if 
.                                          some sub-accs exist, or if 
.                                          the account is a sub-account
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      CDAT0000             * check for data
          BRANCH    EXIT,ML3200
.
ML3300
          CALL      DELQST
          BRANCH    CEXIT,ML3500,ML3200,ML0500
.
ML3500
          MOVE      "4",WAUDTYPE
          CALL      WAUD0000             * write audits
.
          CALL      DLBD0000
          CALL      DEWP0000             * delete wp data
          GOTO      ML3200
.
ML9999    MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
.
          PREP      FMSTMP01,FILENAM1
          CLOSE     FMSTMP01,DELETE
          CHAIN     PGM
.
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD                     * display screen
          CALL      OUPD0000                     * open files for update procs
.
          DISPLAY   *P56:24,"Opening fmsbpfaf";  * report seq file
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsaudam"
          OPEN      FMSAUDAM,"fmsaudam"
.
          DISPLAY   *P64:24,"fmsrsfaf"
          OPEN      FMSRSFA1,"fmsrsfaf"  * report sequence file
          OPEN      FMSRSFA2,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmsprcaf"   * print codes file
          OPEN      FMSPRCA1,"fmsprcaf"
.
          DISPLAY   *P64:24,"fmslevaf"   * account level file
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmslmbaf"   * report desciption file
          OPEN      FMSLMBA1,"fmslmbaf"
.
          DISPLAY   *P64:24,"fmsuwpaf"   * wp file
          OPEN      FMSUWPA1,"fmsuwpaf"
.
          DISPLAY   *P64:24,"fmscafaf";  * control account file
          OPEN      FMSCAFA1,"fmscafaf"
.
          DISPLAY   *P64:24,"fmsccaaf";  * cost centre file
          OPEN      FMSCCAA1,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmscccaf";  * consolidated cost centre file
          OPEN      FMSCCCA1,"fmscccaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * subjective file
          OPEN      FMSSBAA1,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmsssca1";  * stat calc file
          OPEN      FMSSSCA1,"fmssscaf"
          OPEN      FMSSSCA2,"fmssscaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";  * xref file
          OPEN      FMSXCSA1,"fmsxcsaf"
.
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
.         PACK      FILENAM2,NAME2,PORT
.         REP       " 0",FILENAM2
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM2
.
          UNPACK    SP70,NORMFILE,STATFILE
.
INIT9999  RETURN
.
.**********************************************************************
.*                         MENU0000                                   *
.*         Handle the basic details , sub acct's Menu                 *
.**********************************************************************
.
MENU0000  MOVE      FMCOSTPO,F1          * write stat-post recs to rsf file
          LOAD      F1,STATFLAG,ZERO     * total rec ?
          BRANCH    F1,MENU0500
.
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,LEDGER,*HOFF,SP2,SP10,LEDGDESC,*EL:
                    *P1:5,"    Statistical Account  : ":
                    *V2LON,NACCOUNT,*HOFF,SP2,NACCDESC,*EF:
                    *P2:7,*V2LON,"0",*HOFF,". Exit":
                    *P2:8,*V2LON,"1",*HOFF,". Basic Details":
                    *P2:9,*V2LON,"2",*HOFF,". Sub Accounts":
                   *P2:10,*V2LON,"3",*HOFF,". Report Details":
                   *P5:12,"Select Option : "
          MOVE      "123",VALOPTN
          GOTO      MENU1000
.
MENU0500  DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,LEDGER,*HOFF,SP2,SP10,LEDGDESC,*EL:
                    *P1:5,"    Statistical Account  : ":
                    *V2LON,NACCOUNT,*HOFF,SP2,NACCDESC,*EF:
                    *P2:7,*V2LON,"0",*HOFF,". Exit":
                    *P2:8,*V2LON,"1",*HOFF,". Basic Details":
                    *P2:9,*V2LON,"2",*HOFF,". Report Details":
                   *P5:12,"Select Option : "
          MOVE      "139",VALOPTN
MENU1000
          KEYIN     *P21:12,*DV,UNDLN1:
                    *P21:12,*V2LON,FORM1:
                    *P21:12,*DV,FORM1
.
          UNPACK    VALOPTN,OPT1,OPT2,OPT3
          MOVE      FORM1,ANS
          LOAD      ANS,FORM1,OPT1,OPT2,OPT3
          MOVE      NINE,FORM1
          MOVE      ANS,FORM1
.
          MOVE      FORM1,EXIT
          COMPARE   FOUR,FORM1
          GOTO      MENU9999 IF LESS
.
          BEEP
          GOTO      MENU1000
.
MENU9999  RETURN
.
.*********************************************************************
.*                          ASTA0000                                 *
.*                   Add a statistical account                       *
.*********************************************************************
.
.----- Increments a counter and loops through the modify routine ----
.-----   NOTE : total account details are keyed if no is selected --- 
.-----          for posting account, and the routine is called   ----
.-----          from the posting account rouitne (KPOS0000)      ----
.
ASTA0000  MOVE      ZERO,ITEM
          MOVE      ZERO,STATFLAG
.
ASTA1000  ADD       ONE,ITEM
.
          COMPARE   ITEM,FIVE
          GOTO      ASTA9999 IF LESS 
.
          CALL      MBAD0000            * modify basic details
          BRANCH    EXIT,ASTA9999
.
          GOTO      ASTA1000
.
ASTA9999  RETURN
.
.
.**********************************************************************
.*                         ASTT0000                                   *
.*              Add statistical total account details                 *
.**********************************************************************
.
.----- This routine is called by the routine KPOS0000 when we are -----
.----  adding a statistical total account.                        -----
.-----  It uses a counter to loop through the modify routine      -----
.
ASTT0000  MOVE      FIVE,ITEM
.
ASTT7000  ADD       ONE,ITEM
.
          COMPARE   NINE,ITEM
          GOTO      ASTT9999 IF EQUAL
.
          CALL      MBAD0000
          BRANCH    EXIT,ASTT9999
.
          GOTO      ASTT7000
.
ASTT9999  RETURN
.
.*********************************************************************
.*                          MBAD0000                                 *
.*                  modify accounts basic detail                     *
.*********************************************************************
.
MBAD0000  BRANCH    STATFLAG,MBAD0800
.
          BRANCH    ITEM,MBAD1111,MBAD1222,MBAD1333,MBAD1444,MBAD1555
          BEEP
          GOTO      MBAD9999
.
MBAD0800  BRANCH    ITEM,MBAD1111,MBAD1222,MBAD1333,MBAD1444,MBAD1555:
                           MBAD1666,MBAD1777,MBAD1888
          BEEP  
          GOTO      MBAD9999
          
.
MBAD1111  CALL     KDIS0000             * keyin account description
          GOTO     MBAD9999
.
MBAD1222
           CALL     KDCP0000             * keyin decimal places
           GOTO     MBAD9999
.
MBAD1333
           CALL     KSTU0000             * keyin statistcal units
           GOTO     MBAD9999
.
MBAD1444
           CALL     KAVE0000             * keyin average ytd
           GOTO     MBAD9999
.
MBAD1555
           BRANCH   MODIFLAG,MBAD9000
           CALL     KPOS0000             * keyin posting account
           GOTO     MBAD9999
.
MBAD1666
           CALL     KMUL0000             * keyin multiply constant
           GOTO     MBAD9999
.
MBAD1777
           CALL     KDIV0000             * keyin divide constant
           GOTO     MBAD9999
.
MBAD1888
           CALL     KLEV0000             * keyin the account level
           GOTO     MBAD9999
.
.MBAD1999
...           CALL     KREP0000             * keyin the report number
...           GOTO     MBAD9999
...
...MBAD2010
...           CALL     KPRP0000             * keyin print position
...           GOTO     MBAD9999
...
...MBAD3011
...           CALL     KPRC0000             * keyin the print code
...           GOTO     MBAD9999
.
MBAD9000
           BEEP 
           DISPLAY  *P1:24,*EL,"Field cannot be modified - ";
           CALL     HITENTER
.
MBAD9999   RETURN
.
.*********************************************************************
.*                          KLED0000                                 *
.*                Keyin the required ledger                          *
.*********************************************************************
.
KLED0000
          MOVE      TWENTY8,CCOL
          MOVE      FOUR,CVERT
          MOVE      ZERO,EXIT
.
          CALL      KLMAFM00             * Keyin the required ledger
.
          BRANCH    EXIT,KLED9999,KLED9999
.
          DISPLAY   *P42:4,FMLADESC
          MOVE      FMLALEDG,LEDGER
          MOVE      FMLADESC,LEDGDESC
          MOVE      FMLAPERS,NPERIOD
.
          GOTO      KLED9999
.
KLED9999  RETURN
.        
.*********************************************************************
.*                          KAAC0000                                 *
.*                Keyin a new account number                         *
.*********************************************************************
.
KAAC0000
          DISPLAY   *P28:5,*EF
          MOVE      TWENTY8,CCOL
          MOVE      FIVE,CVERT
          MOVE      ZERO,EXIT
.
          MOVE      "3",CACCTIND
          CALL      AAMAFM00             * Keyin a new acount       
.
          BRANCH    EXIT,KAAC9999,KAAC9999
.
          MOVE      FMAMACCT,NACCOUNT
.
          MOVE      FMLALEDG,LEDGER
          MOVE      FMAMACCT,ACCOUNT
          CALL      CKCS0000           * check account not subj/cc related
          MOVE      OVRCD,ZMODE
.
          COMPARE   "1",ZMODE               * can only access cc/subj recs in 
          GOTO      KACT9999 IF NOT EQUAL   * change mode
          COMPARE   "2",COPTION
          GOTO      KACT9999 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "Cost Centre and Subjective Related Accounts Not Valid - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      KAAC0000 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      KAAC9999 IF EQUAL
          GOTO      KAAC0000
.
KAAC9999  RETURN
.        
.*********************************************************************
.*                          KACT0000                                 *
.*                    keyin an existing account                      *
.*********************************************************************
.
KACT0000  CLEAR     NACCOUNT
.
          DISPLAY   *P28:5,*EF
          MOVE      TWENTY8,CCOL
          MOVE      FIVE,CVERT
          MOVE      ZERO,EXIT
.
          MOVE      "3",CACCTIND
          CALL      KAMAFM00             * Keyin  account       
.
          BRANCH    EXIT,KACT9999,KACT9999
.
          MOVE      FMAMACCT,NACCOUNT
          MOVE      FMAMDESC,NACCDESC
          DISPLAY   *P42:5,NACCDESC
.
          MOVE      FMLALEDG,LEDGER
          MOVE      FMAMACCT,ACCOUNT
          CALL      CKCS0000           * check account not subj/cc related
          MOVE      OVRCD,ZMODE
.
          COMPARE   "1",ZMODE               * can only access cc/subj recs in 
          GOTO      KACT9999 IF NOT EQUAL   * change mode
.
          BRANCH    FMCOSTPO,KACT5000       * write stat-post recs to rsf file
          MATCH     "8",FMAMTYPE
          GOTO      KACT5000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "Cost Centre & Subj Related Stat-Post Accounts Invalid - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      KACT0000 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      KACT9999 IF EQUAL
          GOTO      KACT0000
.
KACT5000  COMPARE   "2",COPTION
          GOTO      KACT9999 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "Cost Centre and Subjective Related Accounts Not Valid - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      KACT0000 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      KACT9999 IF EQUAL
          GOTO      KACT0000
.
KACT9999  RETURN
.
.**********************************************************************
.  READ - read data                                    Called By ML
.**********************************************************************
READ0000  PACK      KEY14,LEDGER,NACCOUNT,SP70
          CALL      RDFMAM1
          MOVE      FMAMDESC,NACCDESC
.
READ9999  RETURN
.*********************************************************************
.*                          KDIS0000                                 *
.*                Keyin The account discription                      *
.*********************************************************************
.
KDIS0000  MATCH     SP70,NACCDESC
          GOTO      KDIS0100 IF NOT EQUAL
          PACK      NACCDESC,UNDLN70
.
KDIS0100  KEYIN     *P28:7,*DV,NACCDESC:    * read in description
                    *P28:7,*V2LON,*RV,NACCDESC;
.
.----- Test if nothing is entered  ---
.
          PACK      NACCDESC,NACCDESC,SP70   
          MATCH     NACCDESC,EXITCHAR
          GOTO      KDIS9500 IF EQUAL
          MATCH     NACCDESC,UNDLN70
          GOTO      KDIS9500 IF EQUAL
          MATCH     NACCDESC,SP70
          GOTO      KDIS0000 IF EQUAL
          DISPLAY   *P28:7,*V2LON,NACCDESC;
.
KDIS9000  MOVE      ZERO,EXIT
          GOTO      KDIS9999
.
KDIS9500  MOVE      ONE,EXIT
.
KDIS9999  RETURN
.
.*********************************************************************
.*                         KDCP0000                                  *
.*              Keyin the number of decimal places                   *
.*********************************************************************
.
KDCP0000  MOVE      "2",F1
          KEYIN     *P28:8,*DV,F1,"     (0-5)":
                    *P28:8,*V2LON,*RV,F1:
                    *P28:8,*DV,F1,*EL;
          MOVE      F1,XECIMALP
          ADD       ONE,F1
          BRANCH    F1,KDCP9999,KDCP9999,KDCP9999,KDCP9999,KDCP9999,KDCP9999
          BEEP
          GOTO      KDCP0000
.
KDCP9999  RETURN
.
.*********************************************************************
.*                          KSTU0000                                 *
.*                Keyin The statistical units                        *
.*********************************************************************
.
KSTU0000
          KEYIN     *P28:9,*DV,UNDLN20:
                    *P28:9,*V2LON,STATUNIT:
                    *P28:9,*DV,STATUNIT
KSTU9999  RETURN
.
.*********************************************************************
.*                          KAVE0000                                 *
.*                Keyin The average year to date                     *
.*********************************************************************
.
KAVE0000
          KEYIN     *P28:10,*EL,*DV,UNDLN1:
                    *P28:10,*V2LON,DIM1:
                    *P28:10,*DV,DIM1    
.
          REP       UPPLOW,DIM1
.
          MATCH     ANSN,DIM1            * test for no
          GOTO      KAVE1000 IF NOT EQUAL
.
          DISPLAY   *P28:10,*EL,*V2LON,"No"
          MOVE      "No ",AYTDANS
          MOVE      ZERO,AVEYTD  
          GOTO      KAVE9999
.
KAVE1000
          MATCH     ANSY,DIM1            * test for yes
          GOTO      KAVE2000 IF NOT EQUAL
.
          DISPLAY   *P28:10,*EL,*V2LON,"Yes"
          MOVE      "Yes",AYTDANS
          MOVE      ONE,AVEYTD  
          GOTO      KAVE9999
.
.-----  Invalid entry - re-key  ----
.
KAVE2000
          BEEP 
          GOTO      KAVE0000
.
KAVE9999  RETURN
.
.*********************************************************************
.*                          KPOS0000                                 *
.*                Keyin if it is a posting account or not            *
.*********************************************************************
.
KPOS0000
          KEYIN     *P28:11,*EL,*DV,UNDLN1:
                    *P28:11,*V2LON,DIM1:
                    *P28:11,*DV,DIM1    
.
          REP       UPPLOW,DIM1
.
          MATCH     ANSN,DIM1            * test for no
          GOTO      KPOS1000 IF NOT EQUAL
.
          DISPLAY   *P28:11,*EL,*V2LON,"No"
          MOVE      "No ",POSTANS
          MOVE      NINE,POSTING         * set acc't type for stat 
.                                          total
.
          BRANCH    STATFLAG,KPOS9999
.         
          MOVE      ONE,STATFLAG         * set statflag for total acc't
          CALL      D2BS0000
          CALL      ASTT0000             * keyin total acc't details
          GOTO      KPOS9999
.
KPOS1000
          MATCH     ANSY,DIM1            * test for yes
          GOTO      KPOS2000 IF NOT EQUAL
.
          DISPLAY   *P28:11,*EL,*V2LON,"Yes"
          MOVE      "Yes",POSTANS
          MOVE      EIGHT,POSTING        * set acc't type to normal
.                                          statistics
.
          MOVE      ZERO,STATFLAG        * set flag for posting acc't
.
          DISPLAY   *P1:13,*EF
          CALL      CSTD0000            * clear statistical total  
          GOTO      KPOS9999               details
.
KPOS2000
          BEEP 
          GOTO      KPOS0000
.
KPOS9999  RETURN
.
.*********************************************************************
.*                          KPRP0000                                 *
.*                Keyin in the required print position               *
.*********************************************************************
.
KPRP0000
          KEYIN     *P28:18,*DV,UNDLN5:
                    *P28:18,*V2LON,FORM5:
                    *P28:18,*DV,FORM5
.
          MOVE      FORM5,PRINTPOS
          REP       " 0",PRINTPOS
          DISPLAY   *P28:18,*V2LON,PRINTPOS
.
KPRP9999  RETURN
.
.*********************************************************************
.*                          KMUL0000                                 *
.*                Keyin in the constant multiply                     *
.*********************************************************************
.
KMUL0000  COMPARE   ONE,FMCOCALC
          GOTO      KMUL0100 IF NOT EQUAL
.
          PACK      KEY14,LEDGER,NACCOUNT,SP70
          CALL      RDFMAM1            * account exists ?
          BRANCH    OVRCD,KMUL0100
.
          PACK      KEY20,PORT,SP4,LEDGER,NACCOUNT
          CALL      RDFMTU1            * Flag For Total Account Update
          COMPARE   ZERO,OVRCD
          GOTO      KMUL0100 IF EQUAL
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
KMUL0100  MOVE      ONE,CONSMULT
          KEYIN     *P28:14,*DV,CONSMULT:
                    *P28:14,*V2LON,*RV,CONSMULT:
                    *P28:14,*DV,CONSMULT
.
          COMPARE   ZERO,CONSMULT
          GOTO      KMUL0100 IF EQUAL
.
KMUL9999  RETURN
.
.*********************************************************************
.*                          KDIV0000                                 *
.*                Keyin in the constant multiply                     *
.*********************************************************************
.
KDIV0000  COMPARE   ONE,FMCOCALC
          GOTO      KDIV0100 IF NOT EQUAL
.
          PACK      KEY14,LEDGER,NACCOUNT,SP70
          CALL      RDFMAM1            * account exists ?
          BRANCH    OVRCD,KDIV0100
.
          PACK      KEY20,PORT,SP4,LEDGER,NACCOUNT
          CALL      RDFMTU1            * Flag For Total Account Update
          COMPARE   ZERO,OVRCD
          GOTO      KDIV0100 IF EQUAL
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
KDIV0100  MOVE      ONE,CONSDIV
          KEYIN     *P28:15,*DV,CONSDIV:
                    *P28:15,*V2LON,*RV,CONSDIV:
                    *P28:15,*DV,CONSDIV 
.
          COMPARE   ZERO,CONSDIV 
          GOTO      KDIV0100 IF EQUAL
.
KDIV9999  RETURN
.
.*********************************************************************
.*                          KREP0000                                 *
.*                      Keyin the report number                      *
.*********************************************************************
.
KREP0000
          CLEAR     REPNUMB
          CLEAR     REPDESC
          MOVE      ZERO,EXIT
          MOVE      TWENTY8,CCOL
          MOVE      TEN7,CVERT
.
          CALL      KLMBFM00             * keyin report number
.
          BRANCH    EXIT,KREP1000,KREP2000
.
          MOVE      FMLBRPNO,REPNUMB 
          MOVE      FMLBDESC,REPDESC
          DISPLAY   *P42:17,REPDESC
          GOTO      KREP9999
.
KREP1000
          BEEP 
          GOTO      KREP0000
.
KREP2000  MOVE      ONE,EXIT
.
KREP9999  RETURN 

.
.*********************************************************************
.*                          KPRC0000                                 *
.*                      Keyin the Print  code                        *
.*********************************************************************
.
KPRC0000
          CLEAR     PRNTCODE
          CLEAR     PRNTDESC
          MOVE      ZERO,EXIT
          MOVE      TWENTY8,CCOL
          MOVE      TEN9,CVERT
.
          CALL      KPRCFM00             * keyin the print code
.
          BRANCH    EXIT,KPRC9000,KPRC1000
.
          MOVE      FMPRCODE,PRNTCODE
          MOVE      FMPRDESC,PRNTDESC
          DISPLAY   *P42:19,PRNTDESC
          GOTO      KPRC9999
.  
KPRC1000  
          BEEP 
          GOTO      KPRC0000
.
KPRC9000  MOVE      ZERO,EXIT
.
KPRC9999  RETURN 
.
.*********************************************************************
.*                          KLEV0000                                 *
.*                      Keyin the account level                      *
.*********************************************************************
.
KLEV0000
          CLEAR     ACLVDESC
          CLEAR     ACCLEVEL
          MOVE      ZERO,EXIT
          MOVE      TWENTY8,CCOL
          MOVE      TEN6,CVERT
.
          MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00             * keyin the account level
.
          BRANCH    EXIT,KLEV1000,KLEV2000
.
          MOVE      FMLVCODE,ACCLEVEL
          MOVE      FMLVDESC,ACLVDESC
          DISPLAY   *P42:16,ACLVDESC
          PROC      CKLV0000                     * check level ok
          BRANCH    EXIT,KLEV0000
          GOTO      KLEV9999
.
KLEV1000
          BEEP
          GOTO     KLEV0000
.
KLEV2000
          MOVE      ONE,EXIT
.
KLEV9999  RETURN 
.
.
.        
.*********************************************************************
.*                         SPCN0000                                  *
.*             Select Item Post Cancel Notes                         *
.*********************************************************************
.
SPCN0000
          MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Field, ":
                    "(",*V2LON,"P",*HOFF,")ost, ":
                    "(",*V2LON,"C",*HOFF,")ancel";
          MOVE      "34",CCOL
          COMPARE   ONE,FMACW1ON
          GOTO      SPCN0500 IF NOT EQUAL        * notes active ?
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")otes";
          ADD       "9",CCOL
.
SPCN0500  DISPLAY   " : ";
.
SPCN1000
          KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,DIM2:
                    *PCCOL:24,*DV,DIM2;
.
          TYPE      DIM2                 * Test if a number was entered
          GOTO      SPCN5000 IF EQUAL
.
          REP       UPPLOW,DIM2
.
          MATCH     "P ",DIM2            * test for post
          GOTO      SPCN2000 IF NOT EQUAL
          MOVE      ZERO,EXIT
          GOTO      SPCN9999
.
SPCN2000
          MATCH     "C ",DIM2            * test for cancel
          GOTO      SPCN3000 IF NOT EQUAL
          MOVE      ONE,EXIT
          GOTO      SPCN9999
.
SPCN3000
          COMPARE   ONE,FMACW1ON
          GOTO      SPCN4000 IF NOT EQUAL        * notes active ?
.
          MATCH     "N ",DIM2            * test for notes
          GOTO      SPCN4000 IF NOT EQUAL
          CALL      NOTE0000             * execute wp
          CALL      RLEVFM00             * display the screen
          GOTO      SPCN0000
.
SPCN4000
          BEEP      
          GOTO      SPCN1000
.
.---- A number was entered ------
.
SPCN5000
          MOVE      DIM2,ITEM
          CALL      MBAD0000
          BRANCH    EXIT,SPCN6000        * exitchar entered
          GOTO      SPCN0000
.
.----  Exitchar was entered -----
.
SPCN6000
          MOVE      ONE,EXIT
.
SPCN9999  RETURN
.
.*********************************************************************
.*                          RDBD0000                                 *
.*             Re-display the basic details screen                   *
.*********************************************************************
.
RDBD0000
          DISPLAY   *P28:4,*V2LON,LEDGER,*HOFF:
                    *P42:4,LEDGDESC:
                    *P28:5,*V2LON,NACCOUNT:
                    *P28:7,NACCDESC:
                    *P28:8,XECIMALP:
                    *P28:9,STATUNIT:
                    *P28:10,AYTDANS:
                    *P28:11,POSTANS
.
          BRANCH    STATFLAG,RDBD1000   * if total acc't display details
          GOTO      RDBD9999
RDBD1000
          DISPLAY   *P28:14,*V2LON,CONSMULT:
                    *P28:15,CONSDIV:
                    *P28:16,*V2LON,ACCLEVEL,*HOFF:
                    *P42:16,ACLVDESC
.                    *P28:17,*V2LON,REPNUMB,*HOFF:
.                    *P42:17,REPDESC:
.                    *P28:18,*V2LON,PRINTPOS:
.                    *P28:19,*V2LON,PRNTCODE,*HOFF:
.                    *P42:19,PRNTDESC
RDBD9999  RETURN  
.
.*********************************************************************
.*                         FBDD0000                                  *
.*                 Format Basic details data                         *
.*********************************************************************
.
.----  This routine simply moves file variables to save variables ----
.----  and also formats their descriptions                        ----
FBDD0000
          MOVE      "00000",ACCLEVEL
          MOVE      FMAMDESC,NACCDESC
          MOVE      FMAMDPLA,XECIMALP
          MOVE      FMAMUNIT,STATUNIT
          MOVE      FMAMAYTD,AVEYTD
          MOVE      FMAMTYPE,POSTING
.
          BRANCH    FMAMAYTD,FBDD0500
          MOVE      "No ",AYTDANS
          GOTO      FBDD1000
FBDD0500
          MOVE      "Yes",AYTDANS
.
FBDD1000
          MATCH     "8",FMAMTYPE
          GOTO      FBDD1500 IF NOT EQUAL
          MOVE      "Yes",POSTANS
          MOVE      ZERO,STATFLAG
          GOTO      FBDD9999
FBDD1500
          MATCH     "9",FMAMTYPE
          GOTO      FBDD9999 IF NOT EQUAL
          MOVE      "No ",POSTANS
          MOVE      ONE,STATFLAG
.
          MOVE      FMAMMULT,CONSMULT
          MOVE      FMAMDIV,CONSDIV
.
FBDD2000
          MOVE      FMAMCLEV,ACCLEVEL
          PACK      KEY3,FMAMCLEV
          CALL      RDFMLV1
          MOVE      FMLVDESC,ACLVDESC
.
          MOVE      FMTCADDT,ADDTYPE
          MOVE      ADDTYPE,FORM1
          BRANCH    FORM1,FBDD4000,FBDD4100,FBDD4200 
          MOVE      "Add     ",ADTYDESC
          GOTO      FBDD5000
FBDD4000
          MOVE      "Subtract",ADTYDESC
          GOTO      FBDD5000
FBDD4100
          MOVE      "Divide  ",ADTYDESC
          GOTO      FBDD5000
FBDD4200
          MOVE      "Multiply",ADTYDESC
.
FBDD5000
          
FBDD9999  RETURN
          
.*********************************************************************
.*                          CSTD0000                                 *
.*                Clear the statisical total details                 *
.*********************************************************************
.
CSTD0000
          CLEAR     FMRFPOS 
          MOVE      ZERO,FMAMMULT
          MOVE      ZERO,FMAMDIV    
          CLEAR     FMLBRPNO
          CLEAR     FMLBDESC
          CLEAR     FMPRCODE
          CLEAR     FMPRDESC
          CLEAR     FMLVCODE
          CLEAR     FMLVDESC
          
CSTD9999  RETURN
.
.*********************************************************************
.*                          DLAS0000                                 *
.*                Display the ledger/account prompt                  *
.*********************************************************************
.
DLAS0000
         DISPLAY    *P1:4,"    Ledger               : ",*EL:
                    *P1:5,"    Statistical Account  : ",*EF;
DLAS9999 RETURN
.
.*********************************************************************
.*                          DBDS0000                                 *
.*           Display the 1st half of basic details screen            *
.*********************************************************************
.
DBDS0000
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,LEDGER,*HOFF,SP2,SP10,LEDGDESC,*EL:
                    *P1:5,"    Statistical Account  : ":
                    *V2LON,NACCOUNT,*HOFF,*EF:
                    *P1:7,*V2LON," 1",*HOFF,". Description          :":
                    *P1:8,*V2LON," 2",*HOFF,". Decimal Places       :":
                    *P1:9,*V2LON," 3",*HOFF,". Statistical Units    :":
                   *P1:10,*V2LON," 4",*HOFF,". Average Ytd (Y/N)    :":
                   *P1:11,*V2LON," 5",*HOFF,". Posting     (Y/N)    :"
.
          BRANCH    STATFLAG,DBDS9000
          GOTO      DBDS9999
.
DBDS9000  CALL      D2BS0000             * display 2nd half of screen
.
DBDS9999  RETURN
.
.*********************************************************************
.*                          D2BS0000                                 *
.*           Display the 2nd half of basic details screen            *
.*********************************************************************
.
D2BS0000
          DISPLAY   *P2:14,*V2LON,"6",*HOFF:
                    ". Constant Multiplier  : ":
                    *P2:15,*V2LON,"7",*HOFF:
                    ". Constant Divisor     : ":
                    *P2:16,*V2LON,"8",*HOFF:
                    ". Account Level        : "
....                 *P2:17,*V2LON,"9",*HOFF:
....                 ". Report Number        : ":
....                 *P1:18,*V2LON,"10",*HOFF:
....                 ". Print Position       : ":
....                 *P1:19,*V2LON,"11",*HOFF:
....                 ". Print Code           : "
.                   
D2BS9999  RETURN
.
.******************************************************************************
.* DEFV - set up default variables               Called by ML0000             *
.******************************************************************************
DEFV0000  MOVE      SP70,FMAMDESC                * set description
          MOVE      SP70,FMAMSEC                 * set security code
          MOVE      ZERO,FMAMTYPE                * set account type
          MOVE      ZERO,FMAMSTAT                * set status
          MOVE      ZERO,FMAMCTRL                * set bank account
          MOVE      ZERO,FMAMASST                * set Asset Reg. Acc.
          MOVE      ZERO,FMAMPPT                 * set Pres. Pay. Tax
          MOVE      ZERO,FMAMONC                 * set oncost indic
          MOVE      SP70,FMAMONCC                * set oncost code
          MOVE      ZERO,FMAMOBAL                * set opening bal
          MOVE      SP70,FMAMCHEQ                * set cheque no.
          PACK      FMAMBDAT,CCC,SP70            * date of opening balance
.
          UNPACK    SP70,FMAMREF1,FMAMREF2       * set user defined fields
          UNPACK    SP70,FMAMREF3,FMAMREF4
.
          PACK      FMAMDAT1,CCC,SP70
          PACK      FMAMDAT2,CCC,SP70
          PACK      FMAMDAT3,CCC,SP70
          PACK      FMAMDAT4,CCC,SP70
.
          UNPACK    SP70,FMAMCOD1,FMAMCOD2,FMAMCOD3,FMAMCOD4
.
          MOVE      ZERO,FMAMAMT1
          MOVE      ZERO,FMAMAMT2
          MOVE      ZERO,FMAMAMT3
          MOVE      ZERO,FMAMAMT4
.
          MOVE      ONE,FMAMMULT
          MOVE      ONE,FMAMDIV
          MOVE      ZERO,FMAMAYTD
          UNPACK    SP70,FMAMDPLA,FMAMUNIT
          UNPACK    SP70,NACCDESC
.
DEFV9999  RETURN
.*********************************************************************
.*                         CVAR0000                                  *
.*                  clear the keyin variables                        *
.*********************************************************************
.
CVAR0000
.
          CLEAR     XECIMALP  
          CLEAR     STATUNIT  
          CLEAR     POSTING   
          CLEAR     PRINTPOS  
          CLEAR     REPNUMB   
          CLEAR     REPDESC  
          CLEAR     PRNTCODE 
          CLEAR     PRNTDESC 
          CLEAR     ACCLEVEL 
          CLEAR     ACLVDESC 
          CLEAR     ADDLEDG  
          CLEAR     ADDACCT  
          CLEAR     ADDADESC 
          CLEAR     ADDTYPE  
          CLEAR     ADTYDESC 
.
CVAR9999  RETURN
.
.**********************************************************************
. PROC   CKLV0000 - check if level is ok              Called By POST
.        Requires - ACCLEVEL (add to subj)
.        Returns  - EXIT     (0=ok, 1=not ok)
.**********************************************************************
          DEFPROC   CKLV0000
          INC       FMSAMAFD/INC
          OPEN      FMSAMAA1,"fmsamaaf"
.
CKLV1000  PACK      KEY33,LEDGER,NACCOUNT,SP70
          CALL      RSFMTC1
.
CKLV1100  CALL      RKFMTC1
          BRANCH    OVRCD,CKLV2000
          MATCH     LEDGER,FMTCTLED
          GOTO      CKLV2000 IF NOT EQUAL
          MATCH     NACCOUNT,FMTCTACC
          GOTO      CKLV2000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLV1100
          MATCH     ACCLEVEL,FMAMCLEV
          GOTO      CKLV1100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Level Must Be Higher Than Account ":
                    FMTCSLED,SLASH,FMTCSACC," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
CKLV2000  PACK      KEY33,LEDGER,NACCOUNT,SP70
          CALL      RSFMTC2
.
CKLV2100  CALL      RKFMTC2
          BRANCH    OVRCD,CKLV3000
          MATCH     LEDGER,FMTCSLED
          GOTO      CKLV3000 IF NOT EQUAL
          MATCH     NACCOUNT,FMTCSACC
          GOTO      CKLV3000 IF NOT EQUAL
.
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLV2100
          MATCH     FMAMCLEV,ACCLEVEL
          GOTO      CKLV2100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Level Must Be Lower Than Account ":
                    FMTCTLED,SLASH,FMTCTACC," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
CKLV3000  PACK      KEY31,LEDGER,NACCOUNT,SP70
          CALL      RSFMTS2
.
CKLV3100  CALL      RKFMTS2
          BRANCH    OVRCD,CKLV9000
          MATCH     LEDGER,FMTSTLED
          GOTO      CKLV9000 IF NOT EQUAL
          MATCH     NACCOUNT,FMTSSACC
          GOTO      CKLV9000 IF NOT EQUAL
.
          PACK      KEY14,FMTSTLED,FMTSTACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLV3100
          MATCH     FMAMCLEV,ACCLEVEL
          GOTO      CKLV3100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Level Must Be Lower Than Subjective ":
                    FMTSTLED,SLASH,FMTSTACC," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
          INC       FMSAMAIO/INC
          INC       IBAOVRIO/INC
CKLV9000  MOVE      ZERO,EXIT
          GOTO      BOTTOM
.
CKLV9500  MOVE      ONE,EXIT
.
BOTTOM
          ENDPROC
.**********************************************************************
.*                         PBAD0000                                   *
.*                   Post the basic details screen                    *
.**********************************************************************
.
PBAD0000
          MOVE      LEDGER,FMAMLEDG
          MOVE      NACCOUNT,FMAMACCT
          MOVE      NACCDESC,FMAMDESC
          MOVE      XECIMALP,FMAMDPLA
          MOVE      STATUNIT,FMAMUNIT
          MOVE      AVEYTD,FMAMAYTD
          MOVE      POSTING,FMAMTYPE
          BRANCH    STATFLAG,PBAD0500
          GOTO      PBAD1000
PBAD0500
          MOVE      CONSMULT,FMAMMULT
          MOVE      CONSDIV,FMAMDIV
          MOVE      ACCLEVEL,FMAMCLEV
.
PBAD1000
          PACK      KEY14,LEDGER,NACCOUNT,SP70
.
          COMPARE   ONE,COPTION
          GOTO      PBAD1500 IF NOT EQUAL
          CALL      RAFMAM1                 * record exists ?
          BRANCH    OVRCD,PBAD1500
          DISPLAY   *P1:24,*B,*EF,"Account Code Has Just Been Entered - ";
          CALL      HITENTER
          GOTO      PBAD9999
.
PBAD1500  PROC      CKLV0000                     * check level ok
          BRANCH    EXIT,PBAD9999
.
          REP       " 0",FMAMCLEV
          CALL      DEFMAM1                 * delete old record (if possible)
          CALL      WRFMAM1
.
          CALL      POWP0000             * post wp data
          MOVE      "1",WAUDTYPE
          CALL      WAUD0000             * write audits
.
          BRANCH    STATFLAG,PBAD2000    * write ARS rec if total acc't
          GOTO      PBAD9999
PBAD2000
.
PBAD9999
          RETURN
.
.**********************************************************************
.*                         UBAD0000                                   *
.*                 Update the basic details screen                    *
.**********************************************************************
.
UBAD0000
          MOVE      LEDGER,FMAMLEDG
          MOVE      NACCOUNT,FMAMACCT
          MOVE      NACCDESC,FMAMDESC
          MOVE      XECIMALP,FMAMDPLA
          MOVE      STATUNIT,FMAMUNIT
          MOVE      AVEYTD,FMAMAYTD
          MOVE      POSTING,FMAMTYPE
          BRANCH    STATFLAG,UBAD0500
          GOTO      UBAD1000
UBAD0500
          MOVE      CONSMULT,FMAMMULT
          MOVE      CONSDIV,FMAMDIV
          MOVE      ACCLEVEL,FMAMCLEV
.
UBAD1000  PROC      CKLV0000                     * check level ok
          BRANCH    EXIT,UBAD9999
.
          PACK      KEY14,LEDGER,NACCOUNT
          CALL      RAFMAM1
          BRANCH    OVRCD,UBAD9999
          CALL      UPFMAM1
.
          BRANCH    STATFLAG,UBAD2000
          GOTO      UBAD9999
UBAD2000  
UBAD9999
          RETURN
.
.**********************************************************************
.*                         DLBD0000                                   *
.*                  Delete the basic details                          *
.**********************************************************************
.
DLBD0000  PACK      KEY14,LEDGER,NACCOUNT
          CALL      DEFMAM1
          CALL      DEFMCA1
.
          BRANCH    STATFLAG,DLBD1000
          GOTO      DLBD9999
.
DLBD1000  PACK      KEY26,LEDGER,NACCOUNT,SP70
          CALL      RSFMRF2
.
DLBD2000  CALL      RKFMRF2
          BRANCH    OVRCD,DLBD9999
          MATCH     LEDGER,FMRFLED
          GOTO      DLBD9999 IF NOT EQUAL
          MATCH     NACCOUNT,FMRFACC
          GOTO      DLBD9999 IF NOT EQUAL
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      DEFMRF2
          CALL      RSFMRF2
          GOTO      DLBD2000
.
DLBD9999  RETURN
.
.
.**********************************************************************
.*                         CFSA0000                                   *
.*                  check for any sub-accounts                        *
.**********************************************************************
.
CFSA0000
          MOVE      ZERO,EXIT
.
          PACK      KEY33,LEDGER,NACCOUNT,SP20
          CALL      RSFMTC1
          CALL      RKFMTC1              * read stats calculation file
          BRANCH    OVRCD,CFSA5000
.
          MATCH     LEDGER,FMTCTLED      * test if required ledger
          GOTO      CFSA5000 IF NOT EQUAL
.
          MATCH     NACCOUNT,FMTCTACC    * test if required account
          GOTO      CFSA5000 IF NOT EQUAL
        
.
          MOVE      ONE,EXIT
          BEEP
          DISPLAY   *P1:24,*EL:
                    "Sub Accounts exist for this record, cannot delete - ";
          CALL      HITENTER
          GOTO      CFSA9999
.
.----- This routine test if the account is a sub-account of -----
.----- of something else.                                   -----
.
CFSA5000
          PACK      KEY33,LEDGER,NACCOUNT,SP20
          CALL      RSFMTC2
          CALL      RKFMTC2
          BRANCH    OVRCD,CFSA9999
.
          MATCH     LEDGER,FMTCSLED      * test if same ledger
          GOTO      CFSA9999 IF NOT EQUAL
.
          MATCH     NACCOUNT,FMTCSACC    * test if same account
          GOTO      CFSA9999 IF NOT EQUAL
.
          MOVE      ONE,EXIT
          BEEP
          DISPLAY   *P1:24,*EL:
                    "This record is currently allocated, cannot delete - ";
          CALL      HITENTER
.
CFSA9999  RETURN
.**********************************************************************
.*                         GCRC0000                                   *
.*                   Get current record                               *
.**********************************************************************
GCRC0000  PACK      KEY14,LEDGER,NACCOUNT
          CALL      RDFMAM1
          BRANCH    OVRCD,GCRC9999
GCRC9999  RETURN

.**********************************************************************
.*                         SUBA0000                                   *
.*                      Add sub accounts                              *
.**********************************************************************
SUBA0000  COMPARE   ONE,FMCOCALC
          GOTO      SUBA1000 IF NOT EQUAL
.
          PACK      KEY14,LEDGER,NACCOUNT,SP70
          CALL      RDFMAM1            * account exists ?
          BRANCH    OVRCD,SUBA1000
.
          PACK      KEY20,PORT,SP4,LEDGER,NACCOUNT,SP70
          CALL      RDFMTU1            * Flag For Total Account Update
          COMPARE   ZERO,OVRCD
          GOTO      SUBA1000 IF EQUAL
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
SUBA1000  MOVE      ONE,SUBFLAG
          MOVE      ZERO,RECCOUNT
          MOVE      ONE,SCRNUMB
          MOVE      ZERO,NEXTSCRF
          CALL      DSSS0000              * display sub details screen
.
          BRANCH    MODIFLAG,SUBA3000
          MOVE      SEVEN,ROW
          CALL      ISUB0000              * Insert sub accounts
          GOTO      SUBA4000


SUBA3000 
          PACK      KEY33,LEDGER,NACCOUNT,SP20,SP5
          CALL      DSUB0000              * display the sub-acct's 
.
SUBA4000
          CALL      SNPE0000             * handle the prompt
          BRANCH    EXIT,SUBA5000,SUBA6000,SUBA7000
          GOTO      SUBA9999
.
.----  item was selected -----
.
SUBA5000
          CALL      MSUB0000             * modify a sub-account
.
          GOTO      SUBA4000
.
.----- Next Page was selected ----
.
SUBA6000
          CALL      NPAG0000             * display next page
          GOTO      SUBA4000
.
.----- Previous Page Was Selected -----
.
SUBA7000
          CALL      PPAG0000             * display previous page
          GOTO      SUBA4000
          
.
SUBA9999  MOVE      ZERO,SUBFLAG
          RETURN
.
.*********************************************************************
.*                         ISUB0000                                  *
.*                   Insert Sub accounts                             *
.*********************************************************************
.
ISUB0000
          MOVE      REPNUMB,SUBREP
.
          ADD       ONE,ROW              * Increment the row
.
          COMPARE   TEN5,RECCOUNT        * test for a full screen
          GOTO       ISUB4000 IF EQUAL
.
          ADD       ONE,RECCOUNT         * add one to the record count
.
          DISPLAY   *P1:ROW,*V2LON,RECCOUNT,*HOFF,"."
.
ISUB2000
          CALL      KFUN0000             * keyin the function
          BRANCH    EXIT,ISUB9000
ISUB3000
          CALL      KSAC0000             * keyin sub ledger/account
          BRANCH    EXIT,ISUB2000
          CALL      CHKS0000             * check valid record ie. lower
.                                          level, same report etc.
          BRANCH    VALIDFLG,ISUB3000      rekey if not valid
.
ISUB3100
          CALL      KSEQ0000             * keyin the report sequence
.
          CALL      VSUB0000             * test if record exists
          BRANCH    EXIT,ISUB3100
.
ISUB3200
.
          CALL      PSUB0000             * post sub accounts
.
ISUB3800
          CALL      SSUB0000             * store sub- account
.
          GOTO      ISUB0000
.
.---- Screen is full  -----
.
ISUB4000
          ADD       ONE,SCRNUMB          * increment screen number
          MOVE      TEN5,ITEM
          CALL      LSUB0000
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
          CALL      DSUB0000            * display any more records
.                                         (this is possible)
          GOTO      ISUB0000 
.
.----- end of insert mode -----
.
ISUB9000
          SUB       ONE,RECCOUNT         * decrement record number
          DISPLAY   *P1:ROW,*EL          * clear the row
          SUB       ONE,ROW              * decrement row   
          CALL      RSUB0000             * Redisplay sub-accounts screen

ISUB9999
          RETURN
.
.***********************************************************************
.*                        CHKS0000                                     *
.*                Check that its a valid sub- account                  *
.***********************************************************************
.
CHKS0000
          MOVE      ZERO,VALIDFLG
.
.----- Check that sub-account has a lower level ----
.
          MATCH     ACCLEVEL,FMAMCLEV
          GOTO      CHKS9999 IF LESS
.
          BEEP
          DISPLAY   *P1:24,*EL,"Sub Account must have a lower level - ";
          CALL      HITENTER
          MOVE      ONE,VALIDFLG
          GOTO      CHKS9999
.
CHKS9999  RETURN
.
.***********************************************************************
.*                        PSUB0000                                     *
.*             Post the sub - account details                          *
.***********************************************************************
.
PSUB0000
          MOVE      LEDGER,FMTCTLED
          MOVE      NACCOUNT,FMTCTACC
          MOVE      SUBSEQ,FMTCASEQ
          MOVE      SUBLEDG,FMTCSLED
          MOVE      SUBACCT,FMTCSACC
          MOVE      SUBFUNC,FMTCADDT
          MOVE      SUBTOTAL,FMTCPOST
.
          PACK      KEY33,LEDGER,NACCOUNT,SUBSEQ,SUBLEDG,SUBACCT
          CALL      WRFMTC1
.
PSUB9999  RETURN
.
.***********************************************************************
.*                        VSUB0000                                     *
.*             Validate if a sub account already exists                *
.***********************************************************************
.
VSUB0000
          MOVE      ZERO,EXIT
.
          PACK      KEY33,LEDGER,NACCOUNT,SUBSEQ,SUBLEDG,SUBACCT
          CALL      RDFMTC1
          BRANCH    OVRCD,VSUB9999
.
          MOVE      ONE,EXIT
          BEEP 
          DISPLAY   *P1:24,*EL,"Sub Account already exists - ";
          CALL      HITENTER
.
VSUB9999  RETURN
.
.***********************************************************************
.*                         MSUB0000                                    *
.*                 Modify a sub - account                              *
.***********************************************************************
.
MSUB0000
          MOVE      DIM2,FORM2
.
          COMPARE   ZERO,RECCOUNT        * if no records goto insert
          GOTO      MSUB1000 IF EQUAL
.
.------   test if we are modifying an existing record ----
.
          COMPARE   RECCOUNT,FORM2       * if selection = record count
          GOTO      MSUB5000 IF EQUAL         modiffy existing record
.
          COMPARE   RECCOUNT,FORM2       * if selection < record count
          GOTO      MSUB5000 IF LESS         modiffy existing record
.
.-----  set next screen position and goto insert
MSUB1000
          MOVE      RECCOUNT,ROW
          ADD       SEVEN,ROW
          CALL      ISUB0000
          GOTO      MSUB9999
.
.-----  modify an existing record --------
.
MSUB5000
          MOVE      FORM2,ITEM
          CALL      LSUB0000             * get records key
.
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
          CALL      DEFMTC1              * delete the record
.
          SUB       ONE,RECCOUNT         * decrement record count
.
MSUB6000
          MOVE      ONE,ITEM
          CALL      LSUB0000             * get 1st screen record key
.
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
          CALL      RDFMTC1
          CALL      RPFMTC1
          BRANCH    OVRCD,MSUB7000
.
.----- Set key for display routine ---
.
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          GOTO      MSUB8000
.
.-----   Start of file ----
.
MSUB7000
          PACK      KEY33,SP30,SP10
.
MSUB8000
          CALL      DSUB0000             * do display routine
.
          BRANCH    NEXTSCRF,MSUB8500    * branch if screen full
          GOTO      MSUB9000
.
.----- screen is full ----
.
MSUB8500
          ADD       ONE,SCRNUMB          * increment screen number
          MOVE      TEN5,ITEM
          CALL      LSUB0000             * get last item key
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
          GOTO      MSUB8000             * goto display next record
.
MSUB9000
          CALL      ISUB0000             * call insert routine
.
MSUB9999  RETURN
.
.
.----   THIS IS A ROUTINE TO SAVE THE VARIBLES IN MODIFY MODE ----
.
SAVS0000
          MOVE      SUBREP,SAVEREP
          MOVE      SUBSEQ,SAVESEQ
          MOVE      SUBLEDG,SAVELEDG
          MOVE      SUBACCT,SAVEACCT 
          MOVE      SUBFUNC,SAVEFUNC
          MOVE      SUBTOTAL,SAVETOTL
SAVS9999  RETURN
.
RAVS0000
          MOVE      SAVEREP,SUBREP
          MOVE      SAVESEQ,SUBSEQ
          MOVE      SAVELEDG,SUBLEDG
          MOVE      SAVEACCT,SUBACCT 
          MOVE      SAVEFUNC,SUBFUNC
          MOVE      SAVETOTL,SUBTOTAL
RAVS9999  RETURN
.
.
.*********************************************************************
.*                         KFUN0000                                  *
.*                    keyin the add to type                          *
.*********************************************************************
.
KFUN0000
          CALL      DVAT0000             * display valid add types
          MOVE      ZERO,EXIT
.
          KEYIN     *P6:ROW,*EL,*DV,UNDLN1:
                    *P6:ROW,*V2LON,SUBFUNC:
                    *P6:ROW,*DV,SUBFUNC
.
          PACK      SUBFUNC,SUBFUNC,SP1
          MATCH     SP1,SUBFUNC
          GOTO      KFUN9000 IF EQUAL
.
          TYPE      SUBFUNC
          GOTO      KFUN1000 IF EQUAL
          BEEP
          GOTO      KFUN0000
KFUN1000
          MOVE      SUBFUNC,FORM1
.
          COMPARE   ZERO,FORM1           * test if < 0
          GOTO      KFUN8000 IF LESS
.
          COMPARE   FORM1,THREE          * test if > 3
          GOTO      KFUN8000 IF LESS
.
          BRANCH    FORM1,KFUN1111,KFUN2222,KFUN3333
.
.---- set up variable values and function description ----
.
          MOVE      FORM1,ADDTYPE
          MOVE      "Add     ",ADTYDESC
          DISPLAY   *P6:ROW,ADTYDESC
          GOTO      KFUN9999
.
KFUN1111
          MOVE      FORM1,ADDTYPE
          MOVE      "Subtract",ADTYDESC
          DISPLAY   *P6:ROW,ADTYDESC
          GOTO      KFUN9999
.
KFUN2222
          MOVE      FORM1,ADDTYPE
          MOVE      "Divide  ",ADTYDESC
          DISPLAY   *P6:ROW,ADTYDESC
          GOTO      KFUN9999
.
KFUN3333
          MOVE      FORM1,ADDTYPE
          MOVE      "Multiply",ADTYDESC
          DISPLAY   *P6:ROW,ADTYDESC
          GOTO      KFUN9999
.
.
KFUN8000
          BEEP
          GOTO      KFUN0000
.
KFUN9000  MOVE      ONE,EXIT
.
KFUN9999  
          DISPLAY   *P1:24,*EL;
          RETURN
.        
.*********************************************************************
.*                         DVAT0000                                  *
.*                Display the valid add to types                     *
.*********************************************************************
.
DVAT0000
          DISPLAY   *P1:24,*EL:
                    *V2LON,"0 ",*HOFF,"= Add, ":
                    *V2LON,"1 ",*HOFF,"= Subtract, ":
                    *V2LON,"2 ",*HOFF,"= Divide, ":
                    *V2LON,"3 ",*HOFF,"= Multiply"
DVAT9999  RETURN
          
.*********************************************************************
.*                          KSAC0000                                 *
.*                     Keyin sub account                             *
.*********************************************************************
.
KSAC0000
          CLEAR     SUBLEDG
          CLEAR     SUBACCT
          MOVE      ZERO,SUBTOTAL        * indicates wether a total acc
.
          MOVE      TEN6,CCOL
          MOVE      ROW,CVERT
          MOVE      ZERO,EXIT
.
          CALL      KLMAFM00             * Keyin the required ledger
.
          BRANCH    EXIT,KSAC9000,KSAC9000
.
          COMPARE   NPERIOD,FMLAPERS     * test if ledgers compatible 
          GOTO      KSAC3000 IF NOT EQUAL
.
          MOVE      FMLALEDG,SUBLEDG
          DISPLAY   *P16:ROW,*V2LON,SUBLEDG
          GOTO      KSAC6000
.
KSAC3000
          BEEP
          DISPLAY   *P1:24,*EL,"Ledgers are not compatible - ";
          CALL      HITENTER
          GOTO      KSAC0000
.
KSAC6000
          DISPLAY   *P18:ROW,*V2LON,SLASH
          MOVE      TEN9,CCOL   
          MOVE      ROW,CVERT 
          MOVE      ZERO,EXIT
.
          MOVE      "8",CACCTIND
          CALL      KAMAFM00             * Keyin  account       
.
          BRANCH    EXIT,KSAC0000,KSAC0000
.
          MOVE      FMAMACCT,SUBACCT 
          DISPLAY   *P19:ROW,*V2LON,SUBACCT
          DISPLAY   *P32:ROW,FMAMDESC
.
          MATCH     "6",FMAMTYPE         * test if a total account
          GOTO      KSAC6500 IF NOT EQUAL
          MOVE      ONE,SUBTOTAL
          GOTO      KSAC9999
.
KSAC6500 
          MATCH     "9",FMAMTYPE         * test if a total account
          GOTO      KSAC9999 IF NOT EQUAL
          MOVE      ONE,SUBTOTAL
          GOTO      KSAC9999
.
KSAC9000  MOVE      ONE,EXIT
.
KSAC9999  RETURN
.
.**********************************************************************
.*                         KSEQ0000                                   *
.*                 Keyin the account sequence                         *
.**********************************************************************
.
KSEQ0000
          KEYIN     *P69:ROW,*DV,UNDLN5:
                    *P69:ROW,*DE,*JR,*ZF,*V2LON,SUBSEQ:
                    *P69:ROW,*DV,SUBSEQ
.
          PACK      SUBSEQ,SUBSEQ,SP10
.
          REP       " 0",SUBSEQ
          DISPLAY   *P69:ROW,*V2LON,SUBSEQ
.
KSEQ9999  RETURN
.
.**********************************************************************
.*                         SSUB0000                                   *
.*                 Store the sub-account details                      *
.**********************************************************************
.
SSUB0000
          PACK      DIM19,SUBSEQ,SUBLEDG,SUBACCT
          STORE     DIM19,RECCOUNT,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                                   ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                                   ITEM11,ITEM12,ITEM13,ITEM14,ITEM15
SSUB9999  RETURN 
.
LSUB0000
          LOAD      DIM19,ITEM,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                               ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                               ITEM11,ITEM12,ITEM13,ITEM14,ITEM15
LSUB9999  RETURN
.
CSUB0000
          MOVE      ZERO,ITEM
CSUB1000
          ADD       ONE,ITEM
          PACK      DIM19,SP20
          STORE     DIM19,ITEM,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                                   ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                                   ITEM11,ITEM12,ITEM13,ITEM14,ITEM15
          COMPARE   TEN5,ITEM
          GOTO      CSUB9999 IF EQUAL
.
          GOTO      CSUB1000
.
CSUB9999  RETURN
.
.**********************************************************************
.*                         CLSB0000                                   *
.*                 clear the sub - account variable                   *
.**********************************************************************
.
CLSB0000
.
          CLEAR     SUBACCT 
          CLEAR     SUBFUNC
          CLEAR     SUBLEDG 
          CLEAR     SUBREP 
          CLEAR     SUBSEQ 
.
CLSB9999  RETURN
.
.**********************************************************************
.*                         DSSS0000                                   *
.*                 display sub accounts details screen                *
.**********************************************************************
.
DSSS0000
          DISPLAY   *P1:6,*EF:
                    *P1:7,*V2LON,*ULON,"Item":
                    *P6:7,"Function":
                    *P16:7,"Ledger/Account                                     ":
                    *P69:7,"Acct Seq"
DSSS9999  RETURN
.
.**********************************************************************
.*                        NPAG0000                                    *
.*               Display the next page                                *
.**********************************************************************
.
NPAG0000
          MOVE      TEN5,ITEM
          CALL      LSUB0000
.
.
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
          CALL      DSUB0000
.
NPAG9999  RETURN
.
.**********************************************************************
.*                        PPAG0000                                    *
.*                Display the previous page                           *
.**********************************************************************
.
PPAG0000
          MOVE      ONE,ITEM
          CALL      LSUB0000
.
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
.
          CALL      RAFMTC1
          MOVE      ZERO,ITEM
.
.-----  read fifteen records back  -----
.
PPAG1000
          CALL      RPFMTC1
          BRANCH    OVRCD,PPAG6000
          ADD       ONE,ITEM
.
          COMPARE   TEN6,ITEM
          GOTO      PPAG5000 IF EQUAL
.
          GOTO      PPAG1000
.
PPAG5000
          PACK      KEY33,LEDGER,NACCOUNT,FMTCASEQ,FMTCSLED,FMTCSACC  
          CALL      DSUB0000
          GOTO      PPAG9999
PPAG6000
          PACK      KEY33,SP20,SP20
          CALL      DSUB0000
.
PPAG9999  RETURN
.
.
.**********************************************************************
.*                        DSUB0000                                    *
.*                  Display the sub-accounts                          *
.**********************************************************************
.
.----  The key should already be passed correctly packed -----
.
DSUB0000  
          PACK      DIM33,LEDGER,NACCOUNT,SP70
          LOAD      KEY33,SCRNUMB,DIM33     * clear key if on screen 1
.
          DISPLAY   *P1:8,*EF
          MOVE      ZERO,RECCOUNT
          MOVE      ZERO,NEXTSCRF
          MOVE      SEVEN,ROW
          CALL      CSUB0000
          CALL      RSFMTC1
DSUB1000
          CALL      RKFMTC1
          BRANCH    OVRCD,DSUB9999
.
          MATCH     FMTCTLED,LEDGER      * test if same ledger
          GOTO      DSUB9999 IF NOT EQUAL
.
          MATCH     FMTCTACC,NACCOUNT    * test if same account
          GOTO      DSUB9999 IF NOT EQUAL
.
          ADD       ONE,RECCOUNT
.
          ADD       ONE,ROW       
.
          COMPARE   TEN6,RECCOUNT
          GOTO      DSUB8000 IF EQUAL
.
DSUB4000
          MOVE      REPNUMB,SUBREP
          MOVE      FMTCADDT,SUBFUNC
          MOVE      FMTCSLED,SUBLEDG
          MOVE      FMTCSACC,SUBACCT
          MOVE      FMTCASEQ,SUBSEQ
          CALL      SSUB0000             * store the key
.
          CALL      DISS0000             * display the record
.
          GOTO      DSUB1000
.
DSUB8000        
          MOVE      ONE,NEXTSCRF
          CALL      RPFMTC1
          SUB       ONE,ROW
          SUB       ONE,RECCOUNT
.
DSUB9999  RETURN
.
.**********************************************************************
.*                          DISS0000                                  8
.*                Display a sub-account record                        *
.**********************************************************************
.
DISS0000
          MOVE      SUBFUNC,FORM1
          BRANCH    FORM1,DISS1000,DISS1100,DISS1200 
          MOVE      "Add     ",ADTYDESC
          GOTO      DISS2000
DISS1000
          MOVE      "Subtract",ADTYDESC
          GOTO      DISS2000
DISS1100
          MOVE      "Divide  ",ADTYDESC
          GOTO      DISS2000
DISS1200
          MOVE      "Multiply",ADTYDESC
.
DISS2000
          PACK      KEY14,SUBLEDG,SUBACCT
          CALL      RDFMAM1
.
          DISPLAY   *P1:ROW,*V2LON,RECCOUNT,*HOFF,".":
                    *P6:ROW,ADTYDESC:
                    *P16:ROW,*V2LON,SUBLEDG,SLASH,SUBACCT,*HOFF:
                    *P32:ROW,FMAMDESC:
                    *P69:ROW,*V2LON,SUBSEQ
.
DISS9999 RETURN
          
.*********************************************************************
.*                        RSUB0000                                   *
.*                 Redsiply the sub-accounts screen                  *
.*********************************************************************
.
RSUB0000
          MOVE      ONE,ITEM
          CALL      LSUB0000
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
          CALL      RAFMTC1
          BRANCH    OVRCD,RSUB5000
.
          CALL      RPFMTC1
          BRANCH    OVRCD,RSUB2000
.
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          GOTO      RSUB5000
RSUB2000 
          PACK      KEY33,SP30,SP10
RSUB5000 
          CALL      DSUB0000
.
RSUB9999  RETURN
.         
.
.**********************************************************************
.*                         SNPE0000                                   *
.*         This handles the select, next, previous, exit prompts      *
.**********************************************************************
.
SNPE0000
          BRANCH    NEXTSCRF,SNPE5000
.
          BRANCH    SCRNUMB,SNPE1000
.
.----- Prompt is - select, previous, exit -----
.
          CALL      PSPE0000
          GOTO      SNPE9999
.
.----  Prompt is - select, exit -----
.
SNPE1000
          CALL      PSEE0000
          GOTO      SNPE9999
.
	
SNPE5000
          BRANCH    SCRNUMB,SNPE6000
.
.----  Prompt is - select, next, previous, exit ----
.
          CALL      PALL0000
          GOTO      SNPE9999
.
.---- Prompt is - Select, next, exit ----
.
SNPE6000
          CALL      PSNE0000
          
SNPE9999  RETURN
.
.*********************************************************************
.*                         PSEE0000                                  *
.*                handles select exit prompt                         *
.*********************************************************************
.
PSEE0000
          MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "e(",*V2LON,"X",*HOFF,")it : ";
.
PSEE1000
          KEYIN     *P23:24,*DV,UNDLN2:
                    *P23:24,*V2LON,DIM2:
                    *P23:24,*DV,DIM2;
.
          TYPE      DIM2
          GOTO      PSEE8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2
          GOTO      PSEE9999 IF EQUAL
.
          BEEP
          GOTO      PSEE1000
.
PSEE8000
          MOVE      ONE,EXIT
.
PSEE9999  RETURN
.
.*********************************************************************
.*                         PSNE0000                                  *
.*              handles select, next, exit prompt                    *
.*********************************************************************
.
PSNE0000
          MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "e(",*V2LON,"X",*HOFF,")it : ";
.
PSNE1000
          KEYIN     *P31:24,*DV,UNDLN2:
                    *P31:24,*V2LON,DIM2:
                    *P31:24,*DV,DIM2;
.
          TYPE      DIM2
          GOTO      PSNE8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2
          GOTO      PSNE9999 IF EQUAL
.
          MATCH     "N ",DIM2
          GOTO      PSNE3000 IF NOT EQUAL
. 
          MOVE      TWO,EXIT 
          ADD       ONE,SCRNUMB
.
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PSNE9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PSNE9999
PSNE3000
          BEEP
          GOTO      PSNE1000
.
PSNE8000
          MOVE      ONE,EXIT
.
PSNE9999  RETURN
.
.*********************************************************************
.*                        PSPE0000                                   *
.*           handles select, previous, exit prompt                   *
.*********************************************************************
.
PSPE0000
          
          MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "e(",*V2LON,"X",*HOFF,")it : ";
.
PSPE1000
          KEYIN     *P35:24,*DV,UNDLN2:
                    *P35:24,*V2LON,DIM2:
                    *P35:24,*DV,DIM2
.
          TYPE      DIM2
          GOTO      PSPE8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2
          GOTO      PSPE9999 IF EQUAL
.
          MATCH     "P ",DIM2
          GOTO      PSPE3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PSPE9999
PSPE3000
          BEEP
          GOTO      PSPE1000
.
PSPE8000
          MOVE      ONE,EXIT
.
PSPE9999  RETURN
.
.**********************************************************************
.*                         PALL0000                                   *
.*            Handles select, next, previous, exit, prompt            *
.**********************************************************************
.
PALL0000
          MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "e(",*V2LON,"X",*HOFF,")it : ";
.
PALL1000
          KEYIN     *P43:24,*DV,UNDLN2:
                    *P43:24,*V2LON,DIM2:
                    *P43:24,*DV,DIM2
.
          TYPE      DIM2
          GOTO      PALL8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2
          GOTO      PALL9999 IF EQUAL
.
          MATCH     "P ",DIM2
          GOTO      PALL3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PALL9999
PALL3000
          MATCH     "N ",DIM2
          GOTO      PALL4000 IF NOT EQUAL
          MOVE      TWO,EXIT
          ADD       ONE,SCRNUMB
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PALL9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PALL9999
PALL4000
          BEEP     
          GOTO      PALL1000
.
PALL8000
          MOVE      ONE,EXIT
.
PALL9999  RETURN
.
.*********************************************************************
.* GETW - read in wp data                        Called by SELA
.*********************************************************************
GETW0000  COMPARE   ONE,FMACW1ON
          GOTO      GETW9999 IF NOT EQUAL        * notes active ?
.
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          PACK      KEY17,LEDGER,NACCOUNT,SP70
          CALL      RSFMUW1                      * go to start of records
.
GETW1000  CALL      RKFMUW1                      * get next record
          BRANCH    OVRCD,GETW2000               * no more records ?
          PACK      KEY14,FMUWLEDG,FMUWACCT,SP70
          MATCH     KEY14,KEY17
          GOTO      GETW2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMUWLINE
          GOTO      GETW1000
.
GETW2000  WEOF      FMSTMP01,SEQ
          CLOSE     FMSTMP01
.
GETW9999  RETURN
.******************************************************************************
.* NOTE - Execute word processor                 Called by QUES               *
.******************************************************************************
NOTE0000  
.         DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                   *BLINKON,*V2LON,"Please Wait",*EL;
.
.         PREP      FMSTMP02,FILENAM2
.         WRITE     FMSTMP02,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.         WRITE     FMSTMP02,SEQ;VERSION,SP10,SP5,PRGNAM
.         WRITE     FMSTMP02,SEQ;SP1
.         WRITE     FMSTMP02,SEQ;"    Ledger               : ":
.                   LEDGER,SP10,SP2,LEDGDESC
.         WRITE     FMSTMP02,SEQ;"    Statistical Account  : ":
.                   NACCOUNT,SP2,NACCDESC
.         WRITE     FMSTMP02,SEQ;"    Notes"
.         WRITE     FMSTMP02,SEQ;SP1
.
.         OPEN      FMSTMP01,FILENAM1            * go to start of records
.
.OTE1000  READ      FMSTMP01,SEQ;FMUWLINE        * read in wp data
.         GOTO      NOTE2000 IF OVER
.
.         WRITE     FMSTMP02,SEQ;FMUWLINE
.         GOTO      NOTE1000
.
.OTE2000  CLEAR     CMDLINE
.         PACK      CMDLINE,WP,FILENAM2,WPDAT
.         EXECUTE   CMDLINE,TASKID               * initiate word processor
.
.         CALL      WEOF0000                     * make sure something in file
.         CLOSE     FMSTMP02
          CLOSE     FMSTMP01
.
.         CLEAR     CMDLINE                      * copy file to original
.         PACK      CMDLINE,CP,FILENAM2,TXT,FILENAM1,TXT 
.         EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    FILENAM1,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          MOVE      ONE,WPSTAT
.
          DISPLAY   *P42:5,NACCDESC
          WORD      CMDLINE,999,2,7,76,22,WPSTAT
          DISPLAY   *P42:5,*EL
.
NOTE9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
.EOF0000  CLOSE     FMSTMP02
.         MOVE      ZERO,OVRCD
.         TRAP      OVERCOND IF IO
.         OPEN      FMSTMP02,FILENAM2
.         TRAPCLR   IO
.         COMPARE   ONE,OVRCD
.         GOTO      WEOF9999 IF NOT EQUAL
.
.         PREP      FMSTMP02,FILENAM2
.         WEOF      FMSTMP02,SEQ
.
.EOF9999  RETURN
.**********************************************************************
. POWP  - post wp data                           Called by ML
.**********************************************************************
POWP0000  COMPARE   ONE,FMACW1ON
          GOTO      POWP9999 IF NOT EQUAL        * notes active ?
.
          PACK      KEY17,LEDGER,NACCOUNT,SP70
          PACK      KEY14,LEDGER,NACCOUNT,SP70
          MOVE      ZERO,F3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTMP01,FILENAM1
          TRAPCLR   IO
          BRANCH    OVRCD,POWP4000
.
POWP3000  READ      FMSTMP01,SEQ;FMUWLINE        * save wp data
          GOTO      POWP4000 IF OVER
.
          ADD       ONE,F3
          PACK      KEY17,LEDGER,NACCOUNT,F3,SP70
          UNPACK    KEY17,FMUWLEDG,FMUWACCT,FMUWLNO
          CALL      DEFMUW1                      * delete old record
          CALL      WRFMUW1                      * write new record
          GOTO      POWP3000
.                                                * delete excess records
POWP4000  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,POWP9999               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      POWP9999 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      POWP4000
.
POWP9999  RETURN
.**********************************************************************
. DEWP  - delete wp data                         Called by ML
.**********************************************************************
DEWP0000  PACK      KEY17,LEDGER,NACCOUNT,SP70   * delete user def wp data
          PACK      KEY14,LEDGER,NACCOUNT,SP70
.
DEWP1000  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,DEWP9999               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      DEWP9999 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      DEWP1000
.
DEWP9999  RETURN
.**********************************************************************
.  CDAT - Check for data on file                       Called By lots
.        Requires - KEY14    (ledger/account)
.                   NORMFILE, STATFILE (filenames - blank if closed)
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CDAT0000  CALL      RDFMAM1
          BRANCH    OVRCD,CDAT9000     * account exists ?
.
          MATCH     "6",FMAMTYPE       * only check for posting accounts
          GOTO      CDAT1000 IF LESS
          MATCH     "8",FMAMTYPE
          GOTO      CDAT2000 IF EQUAL
          GOTO      CDAT9000
.
.---- check for normal data ----
.
CDAT1000  
.
          PACK      FILENAME,FMST,FMLACYRR,SP70
          MATCH     FILENAME,NORMFILE
          GOTO      CDAT1100 IF EQUAL  * file open ?
.
          MOVE      SP70,NORMFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,CDAT9000     * file missing ?
          MOVE      FILENAME,NORMFILE
.
CDAT1100  PACK      KEY32,KEY14,SP70
          CALL      RSFMTR2
          CALL      RKFMTR2
          BRANCH    OVRCD,CDAT9000
          PACK      KEY15,FMTRLEDG,FMTRACCT,SP70
          MATCH     KEY15,KEY14
          GOTO      CDAT9000 IF NOT EQUAL
          GOTO      CDAT9500           * data exists
.
.---- check for stat data ----
.
CDAT2000  
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
.
          PACK      FILENAME,FMSA,FMLACYRR,SP70
          MATCH     FILENAME,STATFILE
          GOTO      CDAT2100 IF EQUAL  * file open ?
.
          MOVE      SP70,STATFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,CDAT9000     * file missing ?
          MOVE      FILENAME,STATFILE
.
CDAT2100  PACK      KEY30,KEY14,SP70
          CALL      RSFMSR2
          CALL      RKFMSR2
          BRANCH    OVRCD,CDAT9000
          PACK      KEY15,FMSRLEDG,FMSRACCT,SP70
          MATCH     KEY15,KEY14
          GOTO      CDAT9000 IF NOT EQUAL
          GOTO      CDAT9500           * data exists
.
.
CDAT9000  MOVE      ZERO,EXIT          * continue
          GOTO      CDAT9999
.
CDAT9500  MOVE      ONE,EXIT           * quit
          DISPLAY   *P1:23,*B,*EF:
                    "Data Found In Transaction File ",*V2LON,FILENAME,*HOFF:
                    *P1:24:
                    "For Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*HOFF," - ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
          MATCH     "1426",PASSCODE
          GOTO      CDAT9999 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CDAT9000 IF EQUAL
.
CDAT9999  RETURN
.
.**********************************************************************
.*                 Redisplay routine for standard keyins              *
.**********************************************************************
.
RAMAFM00  
          BRANCH    SUBFLAG,RAMAFM20
          CALL      DLAS0000
          DISPLAY   *P28:4,*EL,*V2LON,FMLALEDG,*HOFF:
                    *P42:4,*EL,FMLADESC:
                    *P28:5,*EL,*V2LON,FMAMACCT
          RETURN
RAMAFM20
          CALL      SAVS0000
          CALL      DLAS0000
          MOVE      FMAMACCT,SUBACCT 
          DISPLAY   *P28:4,*EL,*V2LON,LEDGER,*HOFF:
                    *P42:4,*EL,LEDGDESC:
                    *P28:5,*EL,*V2LON,NACCOUNT,*HOFF:
                    *P42:5,*EL,NACCDESC
          CALL      DSSS0000
.
          BRANCH    RECCOUNT,RAMAFM30
.
          MOVE      ONE,ITEM
          CALL      LSUB0000
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
          CALL      RDFMTC1
          CALL      RPFMTC1
          BRANCH    OVRCD,RAMAFM25
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          GOTO      RAMAFM30
RAMAFM25
          PACK      KEY33,SP30,SP5
RAMAFM30
          CALL      DSUB0000
RAMAFM40
          CALL      RAVS0000
          ADD       ONE,ROW
          ADD       ONE,RECCOUNT
          CALL      DISS0000
          RETURN
.
.-----  Redisplay after a ? on ledger ----
.
RLMAFM00  BRANCH    SUBFLAG,RLMAFM20     * branch if in sub-accounts
.                                          fields
          CALL      DLAS0000
          DISPLAY   *P28:4,*EL,*V2LON,FMLALEDG
          RETURN
RLMAFM20
          CALL      SAVS0000
          CALL      DLAS0000
          MOVE      FMLALEDG,SUBLEDG
          DISPLAY   *P28:4,*EL,*V2LON,LEDGER,*HOFF:
                    *P42:4,*EL,LEDGDESC:
                    *P28:5,*EL,*V2LON,NACCOUNT,*HOFF:
                    *P42:5,*EL,NACCDESC
.
          CALL      DSSS0000
.
          BRANCH    RECCOUNT,RLMAFM30
.
          MOVE      ONE,ITEM
          CALL      LSUB0000
          PACK      KEY33,LEDGER,NACCOUNT,DIM19
          CALL      RSFMTC1
.
          CALL      RPFMTC1
          BRANCH    OVRCD,RLMAFM25
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          GOTO      RLMAFM30
RLMAFM25
          PACK      KEY33,SP30,SP10
RLMAFM30
          CALL      DSUB0000
RLMAFM40
          CALL      RAVS0000
          ADD       ONE,ROW
          ADD       ONE,RECCOUNT
          CALL      DISS0000
          RETURN
.
RLEVFM00
          CALL      DLAS0000
          CALL      DBDS0000
          MOVE      FMLVCODE,ACCLEVEL
          MOVE      FMLVDESC,ACLVDESC
          CALL      RDBD0000
          RETURN
RLMBFM00  
RPRCFM00  CALL      SCRC0000           * redisplay for screen C data keyins
          CALL      DATC0000
          MOVE      SP70,FMLBDESC
          PACK      KEY2,SAVRPNO,SP70
          CALL      RDFMLB1
          DISPLAY   *P6:CVERT,*V2LON,SAVRPNO,*HOFF,SP2,FMLBDESC;
          RETURN
.
.******************************************************************************
.* SELC - screen C                               Called By ML0000             *
.******************************************************************************
SELC0000  CALL      SCRC0000           * display screen C
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
          BRANCH    ACCEPT,SELC5000    * in accept mode
.
SELC1000  CALL      DATC0000           * display data
.
SELC1100  CALL      MQSC0000           * get desired action
          BRANCH    EXIT,SELC9500      * quit screen ?
          MOVE      SP70,SKEY
          LOAD      SKEY,OPTIONC,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY26,SKEY,SP70
          CALL      RDFMRF2
          BRANCH    OVRCD,SELC5000     * in insert mode ?
.
.---- modify mode ----
.
          CALL      CKRS0000           * check if this line can be removed
          BRANCH    EXIT,SELC1100      * invalid record ?
.
          CALL      SELE0000           * do subscreen E
          CALL      SCRC0000           * display screen C
          GOTO      SELC1000
.
.---- insert mode ----
.
SELC5000  ADD       ONE,ITEMNUM
          COMPARE   MAXITEMC,ITEMNUM
          CALL      ADDC0000 IF NOT LESS         * get first free position
          MOVE      "8",LINENO
          ADD       ITEMNUM,LINENO               * get lineno
          MOVE      ITEMNUM,SAVITEM
.
SELC6000  DISPLAY   *P1:LINENO,*V2LON,SAVITEM,*HOFF,DOT,*EL;
.
          MOVE      "6",CCOL
          MOVE      LINENO,CVERT
          CALL      KLMBFM00           * get Report
          BRANCH    EXIT,SELC1000,SELC9500
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLBRPNO,*HOFF,SP2,FMLBDESC;
.
          MOVE      FMLBRPNO,SAVRPNO
          PACK      KEY26,LEDGER,NACCOUNT,SAVRPNO,SP70    * already allocated ?
          CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,SELC7000
          PACK      KEY16,FMRFLED,FMRFACC,FMRFREP,SP70
          MATCH     KEY26,KEY16
          GOTO      SELC7000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EL,"Report Already Allocated to This Account - ";
          CALL      HITENTER
          GOTO      SELC6000
.
SELC7000  DISPLAY   *P39:CVERT,*EL
          MOVE      "41",CCOL
          CALL      YORN0000           * get print code
          MOVE      FYESNO,FMRFCRP 
.
          MOVE      "47",CCOL
          CALL      KPRCFM00           * get print code
          BRANCH    EXIT,SELC8000,SELC9500
          DISPLAY   *PCCOL:CVERT,*V2LON,FMPRCODE,*HOFF,SP2,FMPRDESC;
.
SELC8000  MOVE      "74",CCOL          * get acct seq
          KEYIN     *PCCOL:CVERT,"_____":
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*DE,FMRFPOS;
          PACK      FMRFPOS,FMRFPOS,SP70
          REP       " 0",FMRFPOS
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRFPOS;
.
          PACK      FMRFPRT,FMPRCODE,SP70
          MOVE      FMAMTYPE,F1
          LOAD      FMRFSEQ,F1,SP70,SP70,SP70,SP70,SP70:
                    TOTSEQ,HEADSEQ,TOTSEQ,TOTSEQ
          PACK      KEY26,LEDGER,NACCOUNT,SAVRPNO,FMRFPOS,FMRFSEQ,SP70
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      DEFMRF2            * delete old record
          CALL      WRFMRF2            * write new record
.
          MOVE      SAVITEM,ITEMNUM
          GOTO      SELC5000           * get more entries
.
SELC9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELC9999
.
SELC9500  MOVE      ONE,EXIT           * quit
.
SELC9999  RETURN
.******************************************************************************
.* SCRC - Display Screen C                       Called by SELC0000, redisps  *
.******************************************************************************
SCRC0000  MOVE      "4",SCRNO                    * screen number
.
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,LEDGER,*HOFF,SP2,SP10,LEDGDESC,*EL:
                    *P1:5,"    Statistical Account  : ":
                    *V2LON,NACCOUNT,*HOFF,SP2,NACCDESC,*EF:
                    *P28:7,*V2LON,"Reporting Details":
                    *P1:8,*ULON,"Item",*P6:8,"Report Code":
                    *P39:8,"Cr Y/N":
                    *P47:8,"Print Code":
                    *P73:8,"Prt Pos";
.
SCRC9999  RETURN
.******************************************************************************
.* DATC - display screen C data                  Called By MQSC,SELC          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMC (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATC0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17
          PACK      KEY26,LEDGER,NACCOUNT,SP70
          CALL      RSFMRF2                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATC1000  CALL      RKFMRF2                      * get next record
          BRANCH    OVRCD,DATC9000               * no more records ?
          MATCH     LEDGER,FMRFLED
          GOTO      DATC9000 IF NOT EQUAL        * no more records ?
.
          MATCH     NACCOUNT,FMRFACC
          GOTO      DATC9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMC,ITEMNUM
          GOTO      DATC2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATC2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATC1000 IF LESS             * not up to current page ?
          GOTO      DATC9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMPRDESC
          PACK      KEY3,FMRFPRT,SP70
          CALL      RDFMPR1
          MOVE      SP70,FMLBDESC
          PACK      KEY2,FMRFREP,SP70
          CALL      RDFMLB1
          MOVE      ZERO,FYESNO
          MOVE      FMRFCRP,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
.
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P6:LINENO,FMRFREP,SP2,FMLBDESC:
                    *P39:LINENO,SP8:
                    *P41:LINENO,YESNO:
                    *P47:LINENO,FMRFPRT,SP2,FMPRDESC:
                    *P74:LINENO,FMRFPOS;
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          STORE     KEY26,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATC1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATC9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATC9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATC9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMC,ITEMNUM
          GOTO      DATC9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATC9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATC9999
.
.---- reached EOP before EOF ----
.
DATC9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMC,ITEMNUM
.
DATC9999  RETURN
.******************************************************************************
.* ADDC - get first blank position               Called By SCRC0000           *
.******************************************************************************
ADDC0000  ADD       ONE,PAGENO         * try next page
          CALL      DATC0000           * display next page
.
          ADD       ONE,ITEMNUM        * get next item
          COMPARE   MAXITEMC,ITEMNUM
          GOTO      ADDC0000 IF NOT LESS  * at end of page
.
ADDC9999  RETURN
.******************************************************************************
.* MQSC - Main question for screen C             Called By SELC0000           *
.******************************************************************************
MQSC0000  DISPLAY   *P1:24,"Select Item";     * display prompt
          MOVE      "11",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSC1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQSC1000  COMPARE   PAGENO,ONE
          GOTO      MQSC2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQSC2000  DISPLAY   ", e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "12",CCOL
.
MQSC3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQSC4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQSC4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATC0000
          GOTO      MQSC0000
.
MQSC4000  COMPARE   PAGENO,ONE
          GOTO      MQSC5000 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQSC5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATC0000
          GOTO      MQSC0000
.
MQSC5000  MATCH     " X",DIM2
          GOTO      MQSC9500 IF EQUAL
          MATCH     "1426",PASSCODE
          GOTO      MQSC6000 IF NOT EQUAL
          MATCH     " *",DIM2
          GOTO      MQSC8000 IF EQUAL  * secret back door to allow full access *
.
MQSC6000  MOVE      ZERO,OPTIONC
          MOVE      DIM2,OPTIONC
          COMPARE   OPTIONC,ZERO
          GOTO      MQSC9000 IF LESS   * valid number input ?
.
          BEEP                         * illegal option
          GOTO      MQSC3000           * get another option
.
.---- secret back door to grant full access ----
.
MQSC8000  MOVE      ZERO,ZMODE
          MOVE      ZERO,RECTYPE
          GOTO      MQSC3000
.
MQSC9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSC9999
.
MQSC9500  MOVE      ONE,EXIT           * quit
.
MQSC9999  RETURN
.******************************************************************************
.  SCRE - Display Screen E                       Called by SELE, redisps
.******************************************************************************
SCRE0000  MOVE      "6",SCRNO                    * screen number
          UNPACK    SP70,FMLBDESC
          PACK      KEY2,FMRFREP,SP70
          CALL      RDFMLB1
          UNPACK    SP70,FMPRDESC
          PACK      KEY3,FMRFPRT,SP70
          CALL      RDFMPR1
          MOVE      ZERO,FYESNO
          MOVE      FMRFCRP,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
.
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,LEDGER,*HOFF,SP2,SP10,LEDGDESC,*EL:
                    *P1:5,"    Statistical Account  : ":
                    *V2LON,NACCOUNT,*HOFF,SP2,NACCDESC,*EF:
                    *P1:7,"    Report Code          : ":
                    *V2LON,FMRFREP,*HOFF,SP12,FMLBDESC,*V2LON:
                    *P1:9," 1",*HOFF,". Print Code           : ":
                          *V2LON,FMRFPRT,*HOFF,SP10,SP1,FMPRDESC,*V2LON:
                   *P1:10," 2",*HOFF,". Print Position       : ":
                          *V2LON,FMRFPOS:
                   *P1:11," 3",*HOFF,". Credit Print (Y/N)   : ":
                          *V2LON,YESNO;
.
SCRE9999  RETURN
.******************************************************************************
.  SELE - Perform Screen E                       Called by SELC
.******************************************************************************
SELE0000  MOVE      ZERO,OPTIONE       * reset item desired
          CALL      SCRE0000           * display screen E
.
SELE0100  CALL      MQSE0000           * get option
          COMPARE   "-2",CCITEM        * delete ?
          GOTO      SELE9700 IF EQUAL
          MOVE      CCITEM,OPTIONE
.
          MOVE      "28",CCOL          * get screen address
          MOVE      "8",CVERT
          ADD       OPTIONE,CVERT
          MOVE      OPTIONE,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELE9500,SELE9000:                  * quit, continue
                       SELE1100,SELE1200,SELE1300          * execute option
          BEEP                         * illegal option
          GOTO      SELE0100           * get another option
.
.---- option 1 ----
.
SELE1100  CALL      KPRCFM00           * get print code
          BRANCH    EXIT,SELE1150,SELE9500
.
SELE1150  LOAD      FMPRDESC,EXIT,SP70
          LOAD      FMPRCODE,EXIT,SP70
          MOVE      FMPRCODE,FMRFPRT
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRFPRT,*HOFF,SP10,SP1,FMPRDESC;
          GOTO      SELE0100
.
.---- option 1 ----
.
SELE1200  KEYIN     *PCCOL:CVERT,*DV,FMRFPOS:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,*ZF,*DE,FMRFPOS;
          PACK      FMRFPOS,FMRFPOS,SP70
          REP       " 0",FMRFPOS
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRFPOS;
          GOTO      SELE0100
.
.---- option 3 ----
.
SELE1300  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,FMRFCRP 
          GOTO      SELE0100
.
SELE9000  CALL      UPFMRF2
          MOVE      ZERO,EXIT          * continue
          GOTO      SELE9999
.
SELE9500  MOVE      ONE,EXIT           * quit
          GOTO      SELE9999
.
SELE9700  CALL      DELQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,SELE0100,SELE9500
          PACK      KEY26,SKEY,SP70
          CALL      DEFMRF2
          MOVE      THREE,EXIT         * delete
.
SELE9999  RETURN
.**********************************************************************
.  MQSE - selection routine for SELE            Called By ML
.        Returns  - CCITEM   (-2=delete, -1=exit, 0=post other=selection)
.**********************************************************************
MQSE0000  DISPLAY   *P1:24,*EF,"Select Item, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON:
                    "C",*HOFF,")ancel, (",*V2LON:
                    "D",*HOFF,")elete : ";
.
MQSE1000  KEYIN     *P43:24,"__":
                    *P43:24,*V2LON,*JR,DIM2;
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          MOVE      "0",CCITEM
          MATCH     " P",DIM2
          GOTO      MQSE9999 IF EQUAL  * post
.
          MOVE      "-1",CCITEM
          MATCH     " C",DIM2
          GOTO      MQSE9999 IF EQUAL  * cancel
.
          MOVE      "-2",CCITEM
          MATCH     " D",DIM2
          GOTO      MQSE9999 IF EQUAL  * delete
.
          MOVE      ZERO,CCITEM
          MOVE      DIM2,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      MQSE9999 IF NOT LESS    * item selected ?
          BEEP
          GOTO      MQSE1000
.
MQSE9999  RETURN
.**********************************************************************
.  CKCS - check if account cost centre/subj related    Called By lots
.         including consolidated cost centres
.        Requires - LEDGER, ACCOUNT
.        Returns  - OVRCD   (1=cc/subj related)
.                   RECTYPE (0=not cc/subj relt, 1=subj, 2=cc, 3=cc/subj, 4=ccc)
.**********************************************************************
CKCS0000  PACK      KEY14,LEDGER,ACCOUNT,SP70
          MOVE      "1",RECTYPE
          CALL      RDFMSA1
          COMPARE   ONE,OVRCD                    * check for subj
          GOTO      CKCS9500 IF NOT EQUAL
.
          MOVE      "2",RECTYPE
          CALL      RDFMCC1
          COMPARE   ONE,OVRCD                    * check for cc
          GOTO      CKCS9500 IF NOT EQUAL
.
          MOVE      "3",RECTYPE
          CALL      GCOD0000                     * check for subj/cc combinat'n
          PACK      KEY26,LEDGER,SUBJCODE,COSTCODE,SP70
          CALL      RDFMXC1
          COMPARE   ONE,OVRCD
          GOTO      CKCS9500 IF NOT EQUAL
.
          MOVE      "4",RECTYPE
          PACK      KEY26,LEDGER,COSTCODE,SP70
          CALL      RDFMCF1                      * check if ccc related
          COMPARE   ONE,OVRCD
          GOTO      CKCS9500 IF NOT EQUAL
.
.
CKCS9000  MOVE      ZERO,OVRCD         * continue
          MOVE      "0",RECTYPE
          GOTO      CKCS9999
.
CKCS9500  MOVE      ONE,OVRCD          * cc/subj related
.
CKCS9999  RETURN
.**********************************************************************
.  CKRS - check if record can be modified              Called By ML
.        Requires - FMSRSFAF record read
.        Returns  - EXIT     (1=invalid)
.                   RECTYPE (0=not cc/subj relt, 1=subj, 2=cc, 3=cc/subj, 4=ccc)
.**********************************************************************
CKRS0000  MOVE      ZERO,F2
          LOAD      F2,RECTYPE,FMSUUD7A,FMSUUD8A,FMSUUD8A,FMSUUD8A
          PACK      KEY2,F2,SP70
          REP       " 0",KEY2
          MATCH     KEY2,FMRFREP
          GOTO      CKRS9500 IF EQUAL  * invalid report type to modify ?
.
CKRS9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKRS9999
.
CKRS9500  MOVE      ONE,EXIT           * quit
          DISPLAY   *P1:23,*B,*EF:
                    "Only The System Has Access to Account ",*V2LON:
                    FMRFLED,SLASH,FMRFACC,*HOFF:
                    *P1:24,"for Report ",*V2LON,FMRFREP,*HOFF," - ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
          MATCH     "1426",PASSCODE
          GOTO      CKRS9999 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKRS9000 IF EQUAL
.
CKRS9999  RETURN
.******************************************************************************
.* CKTS - Check whether there are any Calc Details   Called by lots           *
.*        Returns : EXIT     (0=ok, 1=calc det)                               *
.******************************************************************************
CKTS0000  PACK      KEY31,LEDGER,NACCOUNT,SP70
          CALL      RSFMTS1                      * position file pointer
          CALL      RKFMTS1                      * get next record
          BRANCH    OVRCD,CKTS5000               * no more records ?
.
          MATCH     FMTSTLED,LEDGER
          GOTO      CKTS5000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMTSTACC,NACCOUNT
          GOTO      CKTS5000 IF NOT EQUAL        * no more records ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Calculation Details Exist for this Subjective - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      CKTS9500 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKTS5000 IF EQUAL
          GOTO      CKTS9500
.
CKTS5000  PACK      KEY31,LEDGER,NACCOUNT,SP70
          CALL      RSFMTS2                      * position file pointer
          CALL      RKFMTS2                      * get next record
          BRANCH    OVRCD,CKTS9000               * no more records ?
.
          MATCH     FMTSTLED,LEDGER
          GOTO      CKTS9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMTSSACC,NACCOUNT
          GOTO      CKTS9000 IF NOT EQUAL        * no more records ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Account Used In ",FMTSTLED,SLASH,FMTSTACC:
                    " Calculation Details - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      CKTS9500 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKTS9000 IF EQUAL
          GOTO      CKTS9500
.
CKTS9000  MOVE      ZERO,EXIT
          GOTO      CKTS9999
.
CKTS9500  MOVE      ONE,EXIT
.
CKTS9999  RETURN
.****************************************************************************
.  GCOD - get subjective and cost codes from account code    Called by lots
.        Requires - ACCOUNT   (account code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.*****************************************************************************
. WAUD - Write Audit Record                           Called by ML
.    Requires - WAUDTYPE (1=write, 2=before change, 3=after change, 4=delete)
.*****************************************************************************
WAUD0000  PACK      FMAMAUDD,CCC,CYY,CMM,CDD     * set up vars for audit A
          REP       " 0",FMAMAUDD
          CLOCK     TIME,FMAMAUDT
          MOVE      PORT,FMAMAUDP
          LOAD      FMAMAUDR,WAUDTYPE,ANSA,ANSB,ANSC,ANSD
          MOVE      ONE,FMAMAUDS
          MOVE      PASSCODE,FMAMAUDO
          PACK      KEY19,FMAMAUDD,FMAMAUDT,FMAMAUDP,FMAMAUDR
          MOVE      KEY19,SAVKEY19
.
          COMPARE   ONE,FMSAUDA
          CALL      AWFMAM IF EQUAL              * write audit file record
.
WAUD9999  RETURN
.*****************************************************************************
. DAUD - Delete Before Change Audit                    Called by ML
.        Requires - SAVKEY19 (key of record to delete)
.*****************************************************************************
DAUD0000  MOVE      SAVKEY19,KEY19
          COMPARE   ONE,FMSAUDA
          CALL      ADFMAM IF EQUAL              * delete audit file record
.
DAUD9999  RETURN
.
          INC       FMSBPFIO/INC
          INC       FMSCAFIO/INC       * control account file
          INC       FMSCCAIO/INC       * cost centre file
          INC       FMSCCCIO/INC       * consolidated cost centre
          INC       FMSLMBIO/INC
          INC       FMSLEVIO/INC
          INC       FMSPRCIO/INC
          INC       FMSRSFIO/INC
          INC       FMSSBAIO/INC       * subjective file
          INC       FMSSSCIO/INC
          INC       FMSSTRIO/INC       * stat tran file
          INC       FMSTRNIO/INC       * normal tran file
          INC       FMSUWPIO/INC
          INC       FMSXCSIO/INC       * xref file
.
          INC       FMSAMAKY
          INC       FMSLMAKY
          INC       FMSLMBKY
          INC       FMSLEVKY
          INC       FMSPRCKY
.
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD
          INC       FMSUDACD           * FMS audit update routines 
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
