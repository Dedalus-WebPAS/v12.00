.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B03 19.01.2001 Sandra Barcham
.           For previous year do not write back current year
.           SRF 647587
. VF.09.B02 19.01.2001 Sandra Barcham
.           Fix Effective After Period (AMRVYEAR)
.           SRF 647587
. VF.09.B01 16.01.2001 Charles Handaya
.           Fix Effective After Period (AMRVYEAR)
.           SRF 647587
.-------------------------------------------------------
. VF.01.01  12.07.2000 Charles Handaya
.           Allows manual keyin of Effective After Period (AMRVYEAR)
.           SRF 4011
.-------------------------------------------------------
. VF.00.01  02.11.1999 Sandra Barcham
.           Change record locked message to use X
.-------------------------------------------------------
F2A       FORM      2
F4A       FORM      4
GLTRN     FORM      1
PREVYEAR  DIM       4
TMPAMT    FORM      12.2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAMS61
.   Function      :   Asset Revaluation                       
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       AMSCODFD/INC
          INC       AMSCONFD/INC
          INC       AMSDEPDF    
          INC       AMSDEPFD/INC
          INC       AMSDSFFD/INC
          INC       AMSGILFD/INC
          INC       AMSMASFD/INC
          INC       AMSREGFD/INC
          INC       AMSRVAFD/INC
          INC       AMSTRNFD/INC
.=========================
.Local Variable Definition
.-------------------------
FINYEAR   DIM       4 * Scr 00 Fld     4
RTYDESC   DIM      35 * Scr 00 Fld    21
PRIMECST  FORM     12.2 * Scr 00 Fld    24
F12P2     FORM     12.2 * Scr 00 Fld    33
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAMS61"
PRGNAM    INIT      "Asset Revaluation                       "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      GETCON00
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "    3",AUDTSECT
          MOVE      " 10",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening amsaudma";
            OPEN      AMSAUDMA,"amsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening amscodaf";
          OPEN      AMSCODA1,"amscodaf"
          DISPLAY   *P56:24,"Opening amscodaf";
          OPEN      AMSCODA2,"amscodaf"
          DISPLAY   *P56:24,"Opening amsdepaf";
          OPEN      AMSDEPA1,"amsdepaf"
          DISPLAY   *P56:24,"Opening amsdsfaf";
          OPEN      AMSDSFA1,"amsdsfaf"
          DISPLAY   *P56:24,"Opening amsdsfaf";
          OPEN      AMSDSFA2,"amsdsfaf"
          DISPLAY   *P56:24,"Opening amsgilaf";
          OPEN      AMSGILA1,"amsgilaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA1,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA2,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA3,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA4,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA5,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA6,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA7,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA8,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsregaf";
          OPEN      AMSREGA1,"amsregaf"
          DISPLAY   *P56:24,"Opening amsrvaaf";
          OPEN      AMSRVAA1,"amsrvaaf"
          DISPLAY   *P56:24,"Opening amsrvaaf";
          OPEN      AMSRVAA2,"amsrvaaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA1,"amstrnaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA2,"amstrnaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA3,"amstrnaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Asset Revaluation                  
          ENDIF
          RETURN
.--------------------------------
. Screen - Asset Revaluation                  
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Asset Revaluation                  
.-------------------------------------------------------
CF00L000
          MOVE      SP70,AMRVREG 
          MOVE      SP70,AMRVASS 
          MOVE      SP70,AMRVRDT 
          MOVE      SP70,FINYEAR 
          MOVE      SP70,AMRVRTY 
          MOVE      SP70,AMRVREF 
          MOVE      SP70,AMRVDES 
          MOVE      ZERO,AMRVAMT 
          MOVE      SP70,AMRVUR1 
          MOVE      SP70,AMRVUR2 
          MOVE      SP70,AMRVUD1 
          MOVE      SP70,AMRVUD2 
          MOVE      SP70,AMRVUY1 
          MOVE      SP70,AMRVUY2 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Asset Revaluation                  
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMREDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAMREA00
          MOVE      AMREREG,AMRVREG
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      AMRVREG,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMREDES,VAR      
            CALL      DISPITEM
          ENDIF
.
KY00L120
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMMADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EASST000
          BRANCH    EXIT,KY00L110,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      AMRVASS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMMADES,VAR      
            CALL      DISPITEM
          ENDIF
.
KY00L130
          CALL      DATECURR
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "1",CKEYTYP
          CALL      ERVA0000
          BRANCH    EXIT,KY00L120,KY00L900
          MOVE      ONE,ACCEPT
          UNPACK    AMRVRDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Asset Revaluation                  
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Asset Revaluation                  
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Asset Revaluation                  
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Asset Revaluation                  
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106,PS00L107,PS00L108,PS00L109:
                            PS00L110,PS00L111,PS00L112,PS00L113:
                            PS00L114,PS00L115,PS00L116,PS00L117:
                            PS00L118,PS00L119,PS00L999,PS00L120:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                           PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L121
          GOTO     PS00L999
.
PS00L101
          MOVE      FINYEAR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      AMRVPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      AMRVRTY,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      AMRVREF,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      AMRVDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      AMRVAMT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      AMRVAAD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      AMRVRVR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      AMRVPVR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      AMRVUR1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      AMRVUR2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          UNPACK    AMRVUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          UNPACK    AMRVUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMRVUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMRVUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      AMREDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      AMMADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      RTYDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      AMMACST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      PRIMECST,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      F12P2,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Asset Revaluation                  
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L006,SF00L006,SF00L101:
                            SF00L006,SF00L102,SF00L103,SF00L104:
                            SF00L105,SF00L006,SF00L006,SF00L006:
                            SF00L106,SF00L107,SF00L108,SF00L109:
                            SF00L110,SF00L111,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                           SF00L006,SF00L006,SF00L112,SF00L113:
                            SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L101:
                            SF00L020,SF00L102,SF00L103,SF00L104:
                            SF00L105,SF00L020,SF00L020,SF00L020:
                            SF00L106,SF00L107,SF00L108,SF00L109:
                            SF00L110,SF00L111,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                           SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMRVAAD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMRVPVR 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMMACST 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FINYEAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMRVAAD,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMRVPVR,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMMACST,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L102
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,RTYDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ERTY0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMRVRTY,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      RTYDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
          CALL     SELECTED
          STRIP     AMRVREF 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMRVREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMRVREF 
          SFORMAT   VAR,127
          ENDSET    AMRVREF 
          APPEND    SP70,AMRVREF 
          RESET     AMRVREF 
          CMATCH    EXITCHAR,AMRVREF 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMRVREF 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
          ENDIF
          MOVE      AMRVREF,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          STRIP     AMRVDES 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMRVDES,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMRVDES 
          SFORMAT   VAR,127
          ENDSET    AMRVDES 
          APPEND    SP70,AMRVDES 
          RESET     AMRVDES 
          CMATCH    EXITCHAR,AMRVDES 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMRVDES 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
          ENDIF
          MOVE      AMRVDES,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMRVRVR 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PRIMECST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EAMT0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMRVAMT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMRVRVR,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PRIMECST,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          STRIP     AMRVUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMRVUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMRVUR1 
          SFORMAT   VAR,127
          ENDSET    AMRVUR1 
          APPEND    SP70,AMRVUR1 
          RESET     AMRVUR1 
          CMATCH    EXITCHAR,AMRVUR1 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMRVUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
          ENDIF
          MOVE      AMRVUR1,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          STRIP     AMRVUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMRVUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMRVUR2 
          SFORMAT   VAR,127
          ENDSET    AMRVUR2 
          APPEND    SP70,AMRVUR2 
          RESET     AMRVUR2 
          CMATCH    EXITCHAR,AMRVUR2 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMRVUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
          ENDIF
          MOVE      AMRVUR2,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          CALL      KEYDATE
          PACK      AMRVUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    AMRVUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
          CALL     SELECTED
          CALL      KEYDATE
          PACK      AMRVUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    AMRVUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,AMRVUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMRVUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L111
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,AMRVUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMRVUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L112
          CALL      CANC0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L113
          CALL      POST0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
GETCON00  MOVE      THREE,AUDTSECT
          READ      CONTROLF,AUDTSECT;CFAMSRUN,CFAMYEAR,*53,CFAMPASS
          RETURN

DATECURR  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          REP       " 0",CYEAR
          REP       " 0",CMON
          REP       " 0",CDAY
          RETURN
EASST000  MOVE      ZERO,CKEYTYP
          MOVE      AMRVREG,AMMAREG
          CALL      KAMMAA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,EASST999,EASST999  * Exit 1 Null Entry 2 Exitchar
          MOVE      AMMAASS,AMRVASS
          MATCH     SP70,AMMADDT
          IF        !@EQUAL
            BEEP
            MOVE      "Asset has Been Disposed. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EASST000
          ENDIF
.
EASST100  PACK      KEY14,AMMAREG,AMMAASS   * Setup Key to File
          CALL      RLAMMA1                 * Read and Lock Record
          BRANCH    OVRCD,EASST999,EASST200 * OVRCD=1 Not on File 2 Locked
.
          MOVE      TWO,AUDTTYPE            * Type 2 Before Change Audit
          CALL      WAAMMA00                * Write Before Audit
.
          MOVE      ZERO,OVRCD
          MOVE      ZERO,EXIT
          GOTO      EASST999
.
EASST200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EASST100 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * Exit
          GOTO      EASST000 IF EQUAL       * Must be a valid response
          MATCH     ANSE,ANS                * Exit
          GOTO      EASST200 IF NOT EQUAL   * Must be a valid response
          GOTO      EASST000                * Return to Keyin
.
EASST999  RETURN                            * End of Routine
.
ERVA0000  MOVE     ONE,CKEYTYP
          CALL     KAMRVA00
          BRANCH   EXIT,ERVA9999,ERVA9999
          REP      " 0",AMRVRDT
          REP      " 0",AMMAAQD
          MATCH    AMMAAQD,AMRVRDT
          GOTO     ERVA9999 IF NOT LESS
          BEEP
          UNPACK   AMMAAQD,CCENT,CYEAR,CMON,CDAY
          CALL     PACDATE
          CLEAR    DISPMSG
          APPEND   "Date Must be > Acquisition Date : ",DISPMSG
          APPEND   CPCDATE,DISPMSG
          APPEND   " - ",DISPMSG
          RESET    DISPMSG
          CALL     MESSAGE1
          GOTO     ERVA0000
.
ERVA9999  RETURN
.------------------------------------------------------------
. Enter Year for Depreciation Record
.------------------------------------------------------------
EYEAR000  MOVE    "    5",FLDID
          CALL    GETPOSIT
          KEYIN   *PCCOL:CVERT,*V2LON,*RV,F2
          IF      (F2<1)|(F2>13)
            BEEP
            GOTO    EYEAR000
          ENDIF
          MOVE    F2,AMRVPER
          MOVE    F2,VAR
          CALL    DISPITEM
.
          MOVE    CFAMYEAR,AMRVYEAR
          MOVE    "    4",FLDID
          CALL    GETPOSIT
.
. SRF 4011 - 11/07/2000
.
EYEAR100  MOVE      CFAMYEAR,FINYEAR
          IF        F2>11
            MOVE      CFAMYEAR,F4A
            ASSIGN    F4A-ONE,F4
            MOVE      F4,PREVYEAR
.
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,FINYEAR
            TYPE      FINYEAR
            IF        !@EQUAL
              GOTO      EYEAR100
            ENDIF
            MATCH     PREVYEAR,FINYEAR
            GOTO      EYEAR110 IF EQUAL
            MATCH     CFAMYEAR,FINYEAR
            GOTO      EYEAR100 IF NOT EQUAL
          ENDIF
.
EYEAR110  PACK    KEY18,AMMAREG,AMMAASS,AMRVYEAR
          CALL    RDAMDS1
          IF      OVRCD=1
            CALL    CLRDEP00
          ENDIF
.
EYEAR290  MOVE    AMMAAAD,AMRVAAD
          MOVE    AMRVPER,F2
.
          MATCH   FINYEAR,AMRVYEAR
          GOTO    EYEAR400 IF NOT EQUAL
.
          MOVE    ZERO,SECTOR
.
EYEAR300  ADD     ONE,SECTOR
          LOAD    GLTRN,SECTOR,AMDSG01,AMDSG02,AMDSG03,AMDSG04,AMDSG05:
                               AMDSG06,AMDSG07,AMDSG08,AMDSG09,AMDSG10:
                               AMDSG11,AMDSG12,AMDSG13
          IF      GLTRN=1
            LOAD    F12P2,SECTOR,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05:
                                 AMDSA06,AMDSA07,AMDSA08,AMDSA09,AMDSA10:
                                 AMDSA11,AMDSA12,AMDSA13
            ADD     F12P2,AMRVAAD
          ENDIF
.
          COMPARE F2,SECTOR
          GOTO    EYEAR300 IF NOT EQUAL
.
EYEAR400  MOVE    AMMARVT,AMRVPVR
          ASSIGN  AMMACST+AMMARVT,PRIMECST
          IF      ACCEPT=0
            MOVE    "   11",FLDID
            CALL    GETPOSIT
            ASSIGN  AMRVAMT+AMRVAAD,AMRVRVR
            MOVE    AMRVRVR,VAR
            CALL    DISPITEM
            MOVE    "    4",FLDID
            CALL    GETPOSIT
          ENDIF
.
EYEAR999  RETURN
.
.---------------------------------
. Setup Category and Enter Code
.---------------------------------
ERTY0000  MOVE    ZERO,CKEYTYP
          MOVE    "RT",AMCDCAT
          CALL    KAMCDA00
          BRANCH  EXIT,ERTY9999,ERTY9999
          MOVE    AMCDCOD,AMRVRTY
          MOVE    AMCDDES,RTYDESC
ERTY9999  RETURN

.------------------------------------------------------------
. Enter Amount
.------------------------------------------------------------
EAMT0000  MOVE    SP70,VAR
          CALL    DISPITEM
          KEYIN   *PCCOL:CVERT,*V2LON,*RV,*NOMASK,AMRVAMT
          ASSIGN  AMMACST+AMRVPVR+AMRVAMT,PRIMECST
          ASSIGN  AMRVAMT+AMRVAAD,AMRVRVR
          RETURN
.
CANC0000  PACK    KEY14,AMMAREG,AMMAASS
          CALL    UUAMMA1
          RETURN
.
. Update Masterfile Details
.--------------------------------------------------
POST0000  SUB      AMRVAAD,AMMAAAD           * Adjust Acc'm Dep'n for Write Back
          ADD      AMRVAMT,AMMARVT           * Add new Revaluation Amount
          MOVE     AMRVRDT,AMMAVDT           * Last Revaluation Date
          ADD      AMRVRVR,AMMARVR           * Update Revaluation Reserve Total
          MOVE     AMMAGIC,KEY5
          CALL     RDAMGI1
          IF       OVRCD=1
            BEEP
            MOVE     "Invalid GL Interface Code. ",DISPMSG
            CALL     MESSAGE1
            GOTO     POST9999
          ENDIF
.
          PACK     KEY14,AMMAREG,AMMAASS     * Setup Key
          CALL     RAAMMA1                   * Check for record on file
          IF       OVRCD=0
            CALL     UPAMMA1                 * Update Any Changes
            MOVE     THREE,AUDTTYPE          * After Change Type
            CALL     WAAMMA00                * Write Audit Record
          ENDIF
.
. Write New Revaluation Record
.-----------------------------
          PACK     KEY22,AMRVREG,AMRVASS,AMRVRDT
          CALL     RAAMRV1
          IF       OVRCD=0
            CALL     UPAMRV1
          ELSE
            CALL     WRAMRV1
          ENDIF
.
. Write General Ledger Transaction Details
.------------------------------------------
          PACK     KEY19,AMMAREG,AMMAASS,Z70
          PACK     KEY14,AMMAREG,AMMAASS,Z70
          CALL     RSAMTR1
          CALL     RPAMTR1
          BRANCH   OVRCD,POST1000
          PACK     KEY19,AMTRREG,AMTRASS,Z70
          MATCH    KEY14,KEY19
          GOTO     POST1000 IF NOT EQUAL
          MOVE     AMTRUNI,SECTOR
          GOTO     POST1100
.
. Dr Acc'm Depn
. Cr Capital Account
. For the Total Accumulated Depreciation
.------------------------------------------------------------
POST1000  MOVE     ZERO,SECTOR
POST1100  ADD      ONE,SECTOR
          PACK     KEY19,AMMAREG,AMMAASS,SECTOR
          UNPACK   KEY19,AMTRREG,AMTRASS,AMTRUNI
          CALL     RDAMTR1
          COMPARE  ZERO,OVRCD
          GOTO     POST1100 IF EQUAL
.
          PACK     AMTRREF,AMMADRF,SP70
          MOVE     "Revaluation. Dep'n Write Back",AMTRCOM
          MOVE     AMRVRDT,AMTRDAT
.
          MOVE     AMGILED,AMTRDLED
          MOVE     AMGIADP,AMTRDACC
          MOVE     AMGICAP,AMTRCACC
          MOVE     AMRVAAD,AMTRAMT
          MOVE     AMRVYEAR,AMTRYEAR
          MOVE     AMRVPER,AMTRPER
          MOVE     AMGIDIS,AMTRDIS
          MOVE     AMGIRES,AMTRRES
          MOVE     SP70,AMTRIRUN
          MOVE     SP70,AMTRUR1
          MOVE     SP70,AMTRUR2
          MOVE     ZERO,AMTRUY1
          MOVE     ZERO,AMTRUY2
          MOVE     SP70,AMTRSPA
          IF       !(AMTRAMT=0)
            CALL     WRAMTR1
          ENDIF
.
. Dr Capital Account
. Cr Revaluation Reserve
. For the Revaluation Reserve Adjustment (Acc'm Dep'n + Reval Adj)
.-----------------------------------------------------------------
POST2100  ADD      ONE,SECTOR
          PACK     KEY19,AMMAREG,AMMAASS,SECTOR
          UNPACK   KEY19,AMTRREG,AMTRASS,AMTRUNI
          CALL     RDAMTR1
          COMPARE  ZERO,OVRCD
          GOTO     POST1100 IF EQUAL
.
          PACK     AMTRREF,AMMADRF,SP70
          MOVE     "Revaluation Reserve",AMTRCOM
          MOVE     AMRVRDT,AMTRDAT
.
          MOVE     AMGILED,AMTRDLED
          MOVE     AMGICAP,AMTRDACC
          MOVE     AMGIRVR,AMTRCACC
          MOVE     AMRVRVR,AMTRAMT
          MOVE     AMRVYEAR,AMTRYEAR
          MOVE     AMRVPER,AMTRPER
          MOVE     AMGIDIS,AMTRDIS
          MOVE     AMGIRES,AMTRRES
          MOVE     SP70,AMTRIRUN
          MOVE     SP70,AMTRUR1
          MOVE     SP70,AMTRUR2
          MOVE     ZERO,AMTRUY1
          MOVE     ZERO,AMTRUY2
          MOVE     SP70,AMTRSPA
          IF       !(AMTRAMT=0)
            CALL     WRAMTR1
          ENDIF
.
. Re-Calculate Depreciation for New Values
.-----------------------------------------
          MOVE     AMRVYEAR,EFFYEAR  * Effective From Year
          MOVE     AMRVPER,EFFPER    * Effective From Period
          CALL     ASSDEP00          * Recalculate Depreciation
.
. Unlock Record
.----------------
POST9999  CALL     UUAMMA1
          RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       AMSCODIO/INC
          INC       AMSCODKY    
          INC       AMSDEPCD    
          INC       AMSDEPIO/INC
          INC       AMSDSFIO/INC
          INC       AMSGILIO/INC
          INC       AMSMASIO/INC
          INC       AMSMASKY    
          INC       AMSREGIO/INC
          INC       AMSREGKY    
          INC       AMSRVAIO/INC
          INC       AMSRVAKY    
          INC       AMSTRNIO/INC
.
          INC       STDGENCD
.
