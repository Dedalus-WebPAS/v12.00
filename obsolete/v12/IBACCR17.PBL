.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  04.07.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from r5.09
.-------------------------------------------------------
COSTDIR   FORM      12.6
COSTIND   FORM      12.6
DEPTFDR   FORM      10.2
DEPTFID   FORM      10.2
DEPTVDR   FORM      10.2
DEPTVID   FORM      10.2
ENDDAT    DIM       6
ENDDPT    DIM       8
ENDHCD    DIM       2
FILENAME  DIM       8
GRANFDR   FORM      10.2
GRANFID   FORM      10.2
GRANVDR   FORM      10.2
GRANVID   FORM      10.2
STRDAT    DIM       6
STRDPT    DIM       8
STRHCD    DIM       2
TOTALALL  FORM      10.2
TOTALDIR  FORM      12.6
TOTALDRV  FORM      12.6
TOTALFDR  FORM      10.2
TOTALFID  FORM      10.2
TOTALIND  FORM      12.6
TOTALIRV  FORM      12.6
TOTALQTY  FORM      12.6
TOTALVDR  FORM      10.2
TOTALVID  FORM      10.2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACCR17
.   Function      :   Split Cost Model Generation             
.   Generated  On :   04/07/2002
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       CCSCALFD/INC
          INC       CCSCMAFD/INC
          INC       CCSCMBFD/INC
          INC       CCSCMEFD/INC
          INC       CCSCTYFD/INC
          INC       CCSDCOFD/INC
          INC       CCSDPTFD/INC
          INC       CCSHCDFD/INC
          INC       CCSPCDFD/INC
          INC       CCSPDPFD/INC
          INC       CCSPSDFD/INC
          INC       CCSPVRFD/INC
          INC       CCSRASFD/INC
          INC       CCSSPCFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMYPR   DIM      10 * Scr 00 Fld     7
TOYPR     DIM      10 * Scr 00 Fld     9
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACCR17"
PRGNAM    INIT      "Split Cost Model Generation             "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA1,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA2,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA3,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscmaaf";
          OPEN      CCSCMAA1,"ccscmaaf"
          DISPLAY   *P56:24,"Opening ccsctyaf";
          OPEN      CCSCTYA1,"ccsctyaf"
          DISPLAY   *P56:24,"Opening ccsctyaf";
          OPEN      CCSCTYA2,"ccsctyaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA1,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA2,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA3,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA4,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccshcdaf";
          OPEN      CCSHCDA1,"ccshcdaf"
          DISPLAY   *P56:24,"Opening ccshcdaf";
          OPEN      CCSHCDA2,"ccshcdaf"
          DISPLAY   *P56:24,"Opening ccspcdaf";
          OPEN      CCSPCDA1,"ccspcdaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA1,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA2,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA3,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA4,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA1,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA2,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA3,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspvraf";
          OPEN      CCSPVRA1,"ccspvraf"
          DISPLAY   *P56:24,"Opening ccspvraf";
          OPEN      CCSPVRA2,"ccspvraf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,CCSPMID 
          MOVE      SP70,CCSPDES 
          MOVE      SP70,FROMYPR 
          MOVE      SP70,TOYPR   
          MOVE      SP70,CCSPMOD 
          MOVE      SP70,CCMADES 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
.
KY00L110
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      OVRCD,ACCEPT
          MOVE      CCSPMID,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L101,PS00L102,PS00L999:
                           PS00L103,PS00L999,PS00L104,PS00L105:
                            PS00L999
          GOTO     PS00L999
.
PS00L101
          MOVE      CCSPDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      FROMYPR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      TOYPR,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      CCSPMOD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          CALL      CHKACT00
          MOVE      CCMADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L105,SF00L006:
                           SF00L006,SF00L006,SF00L106,SF00L006:
                            SF00L107
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L104,SF00L105,SF00L020:
                           SF00L020,SF00L020,SF00L106,SF00L020:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      PROC0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L104
          CALL     SELECTED
          STRIP     CCSPDES 
          SFORMAT   VAR,SCPSLEN
          MOVE      CCSPDES,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CCSPDES 
          SFORMAT   VAR,127
          ENDSET    CCSPDES 
          APPEND    SP70,CCSPDES 
          RESET     CCSPDES 
          CMATCH    EXITCHAR,CCSPDES 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CCSPDES 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
          ENDIF
          MOVE      CCSPDES,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOYPR   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMYPR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOYPR,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL      CHKACT00
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCMADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCCMAA00
          MOVE      CCMACOM,CCSPMOD
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CCSPMOD,VAR      
          CALL      DISPITEM
          CALL      CHKACT00
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCMADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.--------------------------------------------------
. Check for Actuals
.--------------------------------------------------
CHKACT00   MATCH    SP70,CCSPMOD
           IF       @EQUAL
             MOVE     "Actuals",CCMADES
           ENDIF
           RETURN
.
.------------------------------------------------------------
. Process Split Cost Model
.------------------------------------------------------------
PROC0000  PACK     KEY3,CCSPMID
          CALL     RACCSP1
          IF       OVRCD=0
            CALL     UPCCSP1
          ELSE
            CALL     WRCCSP1
          ENDIF
.
          MATCH    SP70,CCSPMOD               * Open Cost Model Files If Req.
          CALL     OPMOD000 IF NOT EQUAL
.
          CLOCK    TIME,CTIMEIS
          DISPLAY  *P1:24,*EL,CTIMEIS," Processing Cost Calculations ...."
          CALL     CLEAR000
.
          CALL     CALC0000
.
PROC9999  RETURN
.----------------------------------------
. Calculate Patient Service Costs
.----------------------------------------
CALC0000  MOVE     ZERO,CPAGENO
          MOVE     "99",CLNO
          CLOCK    TIME,CTIMEIS
          MOVE     ZERO,GRANFDR
          MOVE     ZERO,GRANVDR
          MOVE     ZERO,GRANFID
          MOVE     ZERO,GRANVID
          PACK     KEY10,SP70
          CALL     RSCCDP1
CALC1000  CALL     RKCCDP1          * Process Each Departments
          BRANCH   OVRCD,CALC9000
          MATCH    "1",CCDPDTY      * Ignore Indirect Departments
          GOTO     CALC1000 IF EQUAL
          CLOCK    TIME,CTIMEIS
          DISPLAY  *P50:24,CTIMEIS,"/",CCDPHCD,"/",CCDPDPT
.
          MOVE     SP70,KEY4
          CALL     RSCCCT1
CALC2000  CALL     RKCCCT1
          BRANCH   OVRCD,CALC1000
.
          CALL     TOTDP000    * Calc. Total Costs for Department/Cost Type
          BRANCH   EXIT,CALC2000
.
          CALL     TOTRV000    * Calculate Total RV for Department/Cost Type
.
          IF       TOTALDIR=0|TOTALDRV=0
            MOVE     ZERO,COSTDIR
          ELSE
            ASSIGN   TOTALDIR/TOTALDRV,COSTDIR * Direct Cost per Rel. Value
          ENDIF
.
          IF       TOTALIND=0|TOTALIRV=0
            MOVE     ZERO,COSTIND
          ELSE
            ASSIGN   TOTALIND/TOTALIRV,COSTIND * Indirect Cost per Rel. Value
          ENDIF
.
          CALL     UPDCT000    * Update Split Costs Summary
.
          GOTO     CALC2000
.
CALC9000
CALC9999  RETURN
.------------------------------------------------------------
. Update Patient Service Split Costs
.------------------------------------------------------------
UPDCT000  PACK     KEY18,CCDPHCD,CCDPDPT,SP70
          CALL     RSCCPD1
UPDCT100  CALL     RKCCPD1                   * Calculate RVI
          BRANCH   OVRCD,UPDCT999
          MATCH    CCDPHCD,CCPDHCD
          GOTO     UPDCT999 IF NOT EQUAL
          MATCH    CCDPDPT,CCPDDPT
          GOTO     UPDCT999 IF NOT EQUAL
.
          PACK     KEY22,CCPDHCD,CCPDDPT,CCPDPCD,CCCTCTY
          CALL     RDCCPV1
          IF       OVRCD=1
            MOVE     ZERO,CCPVRVI
          ENDIF
          IF       ((CCPVRVI=0)&(CCPDRVI=0))
            GOTO      UPDCT100
          ENDIF
.
          PACK      KEY21,CCSPMID,CCPDHCD,CCPDDPT,CCPDPCD
          CALL      RDCCRA1
          IF        OVRCD=0
            CALL      ADDCST00
            CALL      UPCCRA1
          ELSE
            UNPACK    KEY21,CCRAMID,CCRAHCD,CCRADPT,CCRAPCD
            CALL      TOTQT000
            MOVE      TOTALQTY,CCRAQTY
            MOVE      ZERO,CCRAFDR
            MOVE      ZERO,CCRAFID
            MOVE      ZERO,CCRAVDR
            MOVE      ZERO,CCRAVID
            CALL      ADDCST00
            CALL      WRCCRA1
          ENDIF
          GOTO     UPDCT100
.
UPDCT999  RETURN
.------------------------------------------------------------
. Add Costs to Fix/Var/Direct/Indirect
.------------------------------------------------------------
ADDCST00  MATCH    "0",CCCTFIX
          IF       @EQUAL
            MATCH    "0",CCCTIND
            IF       @EQUAL
              ASSIGN   CCRAVDR+(CCPVRVI*COSTDIR)+(CCPDRVI*COSTIND),CCRAVDR
            ELSE
              ASSIGN   CCRAVID+(CCPVRVI*COSTDIR)+(CCPDRVI*COSTIND),CCRAVID
            ENDIF
          ELSE
            MATCH    "0",CCCTIND
            IF       @EQUAL
              ASSIGN   CCRAFDR+(CCPVRVI*COSTDIR)+(CCPDRVI*COSTIND),CCRAFDR
            ELSE
              ASSIGN   CCRAFID+(CCPVRVI*COSTDIR)+(CCPDRVI*COSTIND),CCRAFID
            ENDIF
          ENDIF
.
ADDCST99  RETURN
.------------------------------------------------------------
. Total Department / Cost Type Costs
.------------------------------------------------------------
TOTDP000  MOVE     ZERO,TOTALDIR
          MOVE     ZERO,TOTALIND
          PACK     KEY20,CCDPHCD,CCDPDPT,CCCTCTY,CCSPFYR,CCSPFPR,SP70
.
          MATCH    SP70,CCSPMOD
          GOTO     TOTDP190 IF NOT EQUAL
.
. Use Actuals for Calculation
.------------------------------------------------------------
          CALL     RDCCDC2
          COMPARE  ZERO,OVRCD
          GOTO     TOTDP110 IF EQUAL
.
TOTDP100  CALL     RKCCDC2
          BRANCH   OVRCD,TOTDP999
          MATCH    CCDCHCD,CCDPHCD
          GOTO     TOTDP999 IF NOT EQUAL
          MATCH    CCDCDPT,CCDPDPT
          GOTO     TOTDP999 IF NOT EQUAL
          MATCH    CCDCCTY,CCCTCTY
          GOTO     TOTDP999 IF NOT EQUAL
          MATCH    CCDCYEAR,CCSPTYR
          GOTO     TOTDP999 IF LESS
          MATCH    CCDCPER,CCSPTPR
          GOTO     TOTDP999 IF LESS
TOTDP110  ADD      CCDCDIR,TOTALDIR
          ADD      CCDCIND,TOTALIND
          GOTO     TOTDP100
.
TOTDP190  CALL     RDCCMB2
          COMPARE  ZERO,OVRCD
          GOTO     TOTDP210 IF EQUAL
.
TOTDP200  CALL     RKCCMB2
          BRANCH   OVRCD,TOTDP999
          MATCH    CCMBHCD,CCDPHCD
          GOTO     TOTDP999 IF NOT EQUAL
          MATCH    CCMBDPT,CCDPDPT
          GOTO     TOTDP999 IF NOT EQUAL
          MATCH    CCMBCTY,CCCTCTY
          GOTO     TOTDP999 IF NOT EQUAL
          MATCH    CCMBYEAR,CCSPTYR
          GOTO     TOTDP999 IF LESS
          MATCH    CCMBPER,CCSPTPR
          GOTO     TOTDP999 IF LESS
TOTDP210  ADD      CCMBDIR,TOTALDIR
          ADD      CCMBIND,TOTALIND
          GOTO     TOTDP200
.
TOTDP999  MOVE     ZERO,EXIT
          IF       TOTALDIR=0
            IF       TOTALIND=0
              MOVE     ONE,EXIT
            ENDIF
          ENDIF
          RETURN
.------------------------------------------------------------
. Calculate RV Total
.------------------------------------------------------------
TOTRV000  MOVE     ZERO,TOTALDRV             * Zero Total Relative Value
          MOVE     ZERO,TOTALIRV             * Zero Total Relative Value
          PACK     KEY18,CCDPHCD,CCDPDPT,SP70
          CALL     RSCCPD1
TOTRV100  CALL     RKCCPD1                   * Calculate Total RVI
          BRANCH   OVRCD,TOTRV999
          MATCH    CCDPHCD,CCPDHCD
          GOTO     TOTRV999 IF NOT EQUAL
          MATCH    CCDPDPT,CCPDDPT
          GOTO     TOTRV999 IF NOT EQUAL
.
          PACK     KEY22,CCPDHCD,CCPDDPT,CCPDPCD,CCCTCTY
          CALL     RDCCPV1
          IF       OVRCD=1
            MOVE     ZERO,CCPVRVI
          ENDIF
          IF       ((CCPVRVI=0)&(CCPDRVI=0))
            GOTO      TOTRV100
          ENDIF
.
          CALL     TOTQT000       * Calculate Total Quantity
.
          ASSIGN   TOTALDRV+(CCPVRVI*TOTALQTY),TOTALDRV
          ASSIGN   TOTALIRV+(CCPDRVI*TOTALQTY),TOTALIRV
.
          GOTO     TOTRV100
.
TOTRV999  RETURN
.------------------------------------------------------------
. Calculate Total Quantity for Patient Service
.------------------------------------------------------------
TOTQT000  MOVE     ZERO,TOTALQTY
          PACK     KEY24,CCPDHCD,CCPDDPT,CCPDPCD,CCSPFYR,CCSPFPR,SP70
.
          MATCH    SP70,CCSPMOD
          GOTO     TOTQT190 IF NOT EQUAL
.
. Use Actuals for Calculation
.------------------------------------------------------------
          CALL     RDCCPS2
          COMPARE  ZERO,OVRCD
          GOTO     TOTQT110 IF EQUAL
TOTQT100  CALL     RKCCPS2
          BRANCH   OVRCD,TOTQT999
          MATCH    CCPSHCD,CCPDHCD
          GOTO     TOTQT999 IF NOT EQUAL
          MATCH    CCPSDPT,CCPDDPT
          GOTO     TOTQT999 IF NOT EQUAL
          MATCH    CCPSPCD,CCPDPCD
          GOTO     TOTQT999 IF NOT EQUAL
          MATCH    CCPSYEAR,CCSPTYR
          GOTO     TOTQT999 IF LESS
          MATCH    CCPSPER,CCSPTPR
          GOTO     TOTQT999 IF LESS
.
TOTQT110  ADD      CCPSQTY,TOTALQTY
          GOTO     TOTQT100
.
. Use Cost Model for Calculation
.------------------------------------------------------------
TOTQT190  CALL     RDCCME2
          COMPARE  ZERO,OVRCD
          GOTO     TOTQT210 IF EQUAL
TOTQT200  CALL     RKCCME2
          BRANCH   OVRCD,TOTQT999
          MATCH    CCMEHCD,CCPDHCD
          GOTO     TOTQT999 IF NOT EQUAL
          MATCH    CCMEDPT,CCPDDPT
          GOTO     TOTQT999 IF NOT EQUAL
          MATCH    CCMEPCD,CCPDPCD
          GOTO     TOTQT999 IF NOT EQUAL
          MATCH    CCMEYEAR,CCSPTYR
          GOTO     TOTQT999 IF LESS
          MATCH    CCMEPER,CCSPTPR
          GOTO     TOTQT999 IF LESS
.
TOTQT210  ADD      CCMEQTY,TOTALQTY
          GOTO     TOTQT200
TOTQT999  RETURN
.------------------------------------------------------------
. Clear Split Cost Model
.------------------------------------------------------------
CLEAR000  PACK      KEY21,CCSPMID,SP70
          CALL      RSCCRA1
          CALL      RKCCRA1
          BRANCH    OVRCD,CLEAR999
          MATCH     CCRAMID,CCSPMID
          GOTO      CLEAR999 IF NOT EQUAL
          PACK      KEY21,CCRAMID,CCRAHCD,CCRADPT,CCRAPCD
          CALL      DECCRA1
          GOTO      CLEAR000
.
CLEAR999  RETURN
.------------------------------------------------------------
. Open Cost Model Files CCMB,CCME
.------------------------------------------------------------
OPMOD000  MOVE     "ccmb",KEY4
          PACK     FILENAME,KEY4,CCSPMOD
          REP      " 0",FILENAME
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     CCSCMBA2,FILENAME
          TRAPCLR  IO
          BRANCH   OVRCD,OPMOD900
.
          MOVE     "ccme",KEY4
          PACK     FILENAME,KEY4,CCSPMOD
          REP      " 0",FILENAME
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     CCSCMEA2,FILENAME
          TRAPCLR  IO
          BRANCH   OVRCD,OPMOD900
          GOTO     OPMOD999
.
OPMOD900  BEEP
          MOVE     "Can't Open Cost Model Tables CCMB, CCME - ",DISPMSG
          CALL     MESSAGE1
.
OPMOD999  RETURN
.
.-------------------------------------------------------------
. Delete Record
.-------------------------------------------------------------
DELT0000  MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DELT1000,DELT9000,DELT9100
.
DELT1000  PACK     KEY3,CCSPMID,SP70
          CALL     RACCSP1             * Read Record
          IF       OVRCD=0
            CALL     DECCSP1           * Delete Record
          ENDIF
          MOVE     TWO,EXIT            * Restart Screen
          GOTO     DELT9999
DELT9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DELT9999
DELT9100  MOVE     TWO,EXIT            * Restart Screen on "Cancel"
          GOTO     DELT9999
DELT9999  RETURN
.-------------------------------------------------------------
. Enter Split Cost Model
.-------------------------------------------------------------
EKEYF000  MOVE      TWO,CKEYTYP             * Record Does not have to be on file
.                                           * This allows add and change.
          CALL      KCCSPA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,EKEYF999,EKEYF999  * Exit 1 Null Entry 2 Exitchar
          COMPARE   ONE,OVRCD               * New Record so no Lock
          GOTO      EKEYF999 IF EQUAL       * Return
.
EKEYF100  PACK      KEY3,CCSPMID,SP70       * Setup Key to File
          CALL      RDCCSP1                 * Read and Lock Record
          BRANCH    OVRCD,EKEYF999,EKEYF200 * OVRCD=1 Not on File 2 Locked
          MOVE      CCSPMOD,KEY4
          CALL      RDCCMA1
          CALL      GETPER00
          MOVE      ZERO,EXIT               * Setup Exit Field
          MOVE      ZERO,OVRCD              * Setup Ovrcd Field
          GOTO      EKEYF999
.
EKEYF200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or (":
                    *V2LON,"E",*HOFF,")xit ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EKEYF100 IF EQUAL       * Return to locking
          MATCH     ANSE,ANS                * Exit
          GOTO      EKEYF200 IF NOT EQUAL   * Must be a valid response
          GOTO      EKEYF000                * Return to Keyin
.
EKEYF999  RETURN                            * End of Routine
.
GETPER00   MATCH    SP70,CCSPFYR
           GOTO     GETPER10 IF EQUAL
           MATCH    SP70,CCSPFPR
           GOTO     GETPER20 IF EQUAL
           MOVE     "/",KEY1
           PACK     FROMYPR,CCSPFYR,KEY1,CCSPFPR
           GOTO     GETPER50

GETPER10   MOVE     "Start             ",FROMYPR
           MOVE     SP70,CCSPFYR
           MOVE     SP70,CCSPFPR
           GOTO     GETPER50
.
GETPER20   CLEAR    FROMYPR
           APPEND   CCSPFYR,FROMYPR
           APPEND   "/Start",FROMYPR
           RESET    FROMYPR
           MOVE     SP70,CCSPFPR
.
GETPER50   MATCH    Z70,CCSPTYR
           GOTO     GETPER60 IF EQUAL
           MATCH    Z70,CCSPTPR
           GOTO     GETPER70 IF EQUAL
           MOVE     "/",KEY1
           PACK     TOYPR,CCSPTYR,KEY1,CCSPTPR
           GOTO     GETPER99
.
GETPER60   MOVE     "Finish            ",TOYPR
           MOVE     Z70,CCSPTYR
           MOVE     Z70,CCSPTPR
           GOTO     GETPER99
.
GETPER70   CLEAR    TOYPR
           APPEND   CCSPTYR,TOYPR
           APPEND   "/Finish",TOYPR
           RESET    TOYPR
           MOVE     Z70,CCSPTPR
GETPER99   RETURN
.--------------------------------------------------
. Enter Range
.--------------------------------------------------
RPERD000   MOVE     "    7",FLDID
           CALL     GETPOSIT
           CALL     KCCCAB00
           BRANCH   EXIT,RPERD100,RPERD999
           MOVE     CCCAYEAR,CCSPFYR
.
           DISPLAY  *PCCOL:CVERT,*V2LON,CCSPFYR,"/"
           ADD      "5",CCOL
           CALL     KCCCAA00
           SUB      "5",CCOL
           BRANCH   EXIT,RPERD110,RPERD999
           MOVE     CCCAPER,CCSPFPR
           MOVE     "/",KEY1
           PACK     FROMYPR,CCSPFYR,KEY1,CCSPFPR
           GOTO     RPERD140
.
RPERD100   MOVE     "Start             ",FROMYPR
           MOVE     SP70,CCSPFYR
           MOVE     SP70,CCSPFPR
           GOTO     RPERD140
.
RPERD110   CLEAR    FROMYPR
           APPEND   CCSPFYR,FROMYPR
           APPEND   "/Start",FROMYPR
           RESET    FROMYPR
           MOVE     SP70,CCSPFPR
           GOTO     RPERD140
.
RPERD140   MOVE     FROMYPR,VAR
           CALL     DISPITEM
.
RPERD150   MOVE     "    9",FLDID
           CALL     GETPOSIT
           CALL     KCCCAB00
           BRANCH   EXIT,RPERD200,RPERD999
           MOVE     CCCAYEAR,CCSPTYR
.
           DISPLAY  *PCCOL:CVERT,*V2LON,CCSPTYR,"/"
           ADD      "5",CCOL
           CALL     KCCCAA00
           SUB      "5",CCOL
           BRANCH   EXIT,RPERD210,RPERD999
.
           MOVE     CCCAPER,CCSPTPR
           MOVE     "/",KEY1
           PACK     TOYPR,CCSPTYR,KEY1,CCSPTPR
           GOTO     RPERD900
.
RPERD200   MOVE     "Finish             ",TOYPR
           MOVE     Z70,CCSPTYR
           MOVE     Z70,CCSPTPR
           GOTO     RPERD900
.
RPERD210   CLEAR    TOYPR
           APPEND   CCSPTYR,TOYPR
           APPEND   "/Start",TOYPR
           RESET    TOYPR
           MOVE     Z70,CCSPTPR
.
RPERD900   PACK     STRDAT,CCSPFYR,CCSPFPR
           PACK     ENDDAT,CCSPTYR,CCSPTPR
           MATCH    STRDAT,ENDDAT
           GOTO     RPERD999 IF EQUAL
           GOTO     RPERD999 IF NOT LESS
           BEEP
           MOVE     "To Year/Period Must Be > From Year/Period - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RPERD000
.
RPERD999   MOVE     "    7",FLDID
           CALL     GETPOSIT
           RETURN
.
.------------------------------------------------------------
. Print Report
.------------------------------------------------------------
REPT0000  MOVE     ZERO,CPAGENO
          MOVE     "99",CLNO
          CLOCK    TIME,CTIMEIS
          CALL     GETDEP00         * Get Department Range
          MOVE     ZERO,GRANFDR
          MOVE     ZERO,GRANVDR
          MOVE     ZERO,GRANFID
          MOVE     ZERO,GRANVID
          CLOCK    TIME,CTIMEIS
          DISPLAY  *P1:24,*EL,CTIMEIS," Printing Report...."
          PACK     KEY10,STRHCD,STRDPT,SP70
          CALL     RDCCDP1
          IF       OVRCD=0
            CALL     RPCCDP1
          ENDIF
REPT1000  CALL     RKCCDP1          * Process Each Departments
          BRANCH   OVRCD,REPT9000
          MATCH    CCDPHCD,ENDHCD
          GOTO     REPT9000 IF LESS
          MATCH    CCDPDPT,ENDDPT
          GOTO     REPT9000 IF LESS
          MATCH    "1",CCDPDTY      * Ignore Indirect Departments
          GOTO     REPT1000 IF EQUAL
          CLOCK    TIME,CTIMEIS
          DISPLAY  *P40:24,CTIMEIS,"/",CCDPHCD,"/",CCDPDPT
.
          CALL     PRNT0000
          GOTO     REPT1000
.
REPT9000  CALL     UND132
          ASSIGN   GRANFDR+GRANVDR+GRANFID+GRANVID,TOTALALL
          PRINT    "    Report Total",SP30,SP10,SP7,GRANVDR,SP1,GRANFDR,SP1:
                                      GRANVID,SP1,GRANFID,SP1,TOTALALL
          CALL     UND132
          PRINT    *50,"*** End of Report ***"
REPT9999  RETURN
.------------------------------------------------------------
. Print Report for Department
.------------------------------------------------------------
PRNT0000  CALL     HEAD0000    * Print Page Heading for Department
          MOVE     ZERO,DEPTFDR
          MOVE     ZERO,DEPTVDR
          MOVE     ZERO,DEPTFID
          MOVE     ZERO,DEPTVID
          PACK     KEY18,CCDPHCD,CCDPDPT,SP70
          CALL     RSCCPD1
PRNT1000  CALL     RKCCPD1                   * Calculate Total RVI
          BRANCH   OVRCD,PRNT9000
          MATCH    CCDPHCD,CCPDHCD
          GOTO     PRNT9000 IF NOT EQUAL
          MATCH    CCDPDPT,CCPDDPT
          GOTO     PRNT9000 IF NOT EQUAL
.
          COMPARE  "55",CLNO
          CALL     HEAD0000 IF NOT LESS
          PACK     KEY21,CCSPMID,CCPDHCD,CCPDDPT,CCPDPCD
          CALL     RDCCRA1
          BRANCH   OVRCD,PRNT1000
.
          ASSIGN   CCRAQTY*CCRAFDR,TOTALFDR
          ASSIGN   CCRAQTY*CCRAVDR,TOTALVDR
          ASSIGN   CCRAQTY*CCRAFID,TOTALFID
          ASSIGN   CCRAQTY*CCRAVID,TOTALVID
          ASSIGN   TOTALFDR+TOTALVDR+TOTALFID+TOTALVID,TOTALALL
          PRINT    CCPDPCD,SP1,CCPDDES,CCRAQTY,SP4,TOTALVDR,SP1,TOTALFDR,SP1:
                                             TOTALVID,SP1,TOTALFID,SP1,TOTALALL
          ADD      TOTALFDR,DEPTFDR
          ADD      TOTALVDR,DEPTVDR
          ADD      TOTALFID,DEPTFID
          ADD      TOTALVID,DEPTVID
          ADD      TOTALFDR,GRANFDR
          ADD      TOTALVDR,GRANVDR
          ADD      TOTALFID,GRANFID
          ADD      TOTALVID,GRANVID
          GOTO     PRNT1000
PRNT9000  CALL     UND132
          ASSIGN   DEPTFDR+DEPTVDR+DEPTFID+DEPTVID,TOTALALL
          PRINT    "Department Total",SP30,SP10,SP7,DEPTVDR,SP1,DEPTFDR,SP1:
                                      DEPTVID,SP1,DEPTFID,SP1,TOTALALL
PRNT9999  RETURN
.
HEAD0000  CALL     HEAD132
          PRINT    "Split Cost Model : ",CCSPMID,SP1,CCSPDES
          PRINT    "Department       : ",CCDPDPT,SP1,CCDPDES
          CALL     UND132
          PRINT    "Patient Service                                      ":
                   "Volume          Dir Var       Dir Fix       Ind Var  ":
                   "     Ind Fix         Total"
          CALL     UND132
.
          RETURN
.
GETDEP00  DISPLAY   *P1:19,*EF
          HLINE     *G37,19,1,80
          DISPLAY   *P1:21,"Hospital/Department From : ":
                    *P1:22,"                    To   : "
.
          MOVE      "28",CCOL
          MOVE      "21",CVERT
          CALL      KCCHCA00
          BRANCH    EXIT,GETDEP10,GETDEP10
          MOVE      CCHCHCD,CCDPHCD
          MOVE      CCHCHCD,STRHCD
.
          DISPLAY   *P28:21,*V2LON,STRHCD,"/"
          MOVE      "32",CCOL
          CALL      KCCDPA00
          BRANCH    EXIT,GETDEP15,GETDEP15
          MOVE      CCDPDPT,STRDPT
          DISPLAY   *P28:21,*V2LON,STRHCD,"/",STRDPT,*HOFF,SP1,CCDPDES
          GOTO      GETDEP20
.
GETDEP10  DISPLAY   *P28:21,*V2LON,"Start"
          MOVE      SP70,STRHCD
          MOVE      SP70,STRDPT
          GOTO      GETDEP20
.
GETDEP15  DISPLAY   *P28:21,*V2LON,STRHCD,"/Start"
          MOVE      SP70,STRDPT
.
GETDEP20  MOVE      "28",CCOL
          MOVE      "22",CVERT
          CALL      KCCHCA00
          BRANCH    EXIT,GETDEP30,GETDEP30
          MOVE      CCHCHCD,CCDPHCD
          MOVE      CCHCHCD,ENDHCD
.
          DISPLAY   *P28:22,*V2LON,ENDHCD,"/"
          MOVE      "32",CCOL
          CALL      KCCDPA00
          BRANCH    EXIT,GETDEP35,GETDEP35
          MOVE      CCDPDPT,ENDDPT
          DISPLAY   *P28:21,*V2LON,ENDHCD,"/",ENDDPT,*HOFF,SP1,CCDPDES
          GOTO      GETDEP40
.
GETDEP30  DISPLAY   *P28:22,*V2LON,"Finish"
          MOVE      Z70,ENDHCD
          MOVE      Z70,ENDDPT
          GOTO      GETDEP40
.
GETDEP35  DISPLAY   *P28:21,*V2LON,ENDHCD,"/Finish"
          MOVE      Z70,ENDDPT
.
GETDEP40  KEYIN     *P1:24,"Continue (Y/N) ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      GETDEP99 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      GETDEP00 IF EQUAL
          BEEP
          GOTO      GETDEP40
GETDEP99  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       CCSCALIO/INC
          INC       CCSCALKY    
          INC       CCSCMAIO/INC
          INC       CCSCMAKY    
          INC       CCSCMBIO/INC
          INC       CCSCMEIO/INC
          INC       CCSCTYIO/INC
          INC       CCSDCOIO/INC
          INC       CCSDPTIO/INC
          INC       CCSDPTKY    
          INC       CCSHCDIO/INC
          INC       CCSHCDKY    
          INC       CCSPCDIO/INC
          INC       CCSPDPIO/INC
          INC       CCSPSDIO/INC
          INC       CCSPVRIO/INC
          INC       CCSRASIO/INC
          INC       CCSSPCIO/INC
          INC       CCSSPCKY    
.
          INC       STDGENCD
.
