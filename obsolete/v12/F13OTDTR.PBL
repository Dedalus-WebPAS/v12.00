.*****************************************************************************
.*    Program      : F13OTDTR                                                *
.*    Description  : Conversion outdtrof to new File layout                  *
.*                                                                           *
.*    Author       : Thanh T                                                 *
.*    Date         : 01/10/2018                                              *
.*    Modifications: V10.14.01 08/05/2019  Davin           TSK 0874340       *
.*                   Added functionality to convert different site prefixes  *
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change progname  eg F57PTDOC
.  Global change logfname  eg f57ptdoc
.  Global change filefdnm  eg PATDOCFD (new layout)
.  Global change tabnamaf  eg patdoctf
.  Global change tablidx1  eg PATDOCT1
.  Global change keyxxin   eg KEY8
.  Global change keyxxout  eg KEY9
.  Global change newwrite  eg WRDOCT1
.  Global change savefile  eg sptdoctf
.
.  Global change F13OTDTR  eg F57PTDOC
.  Global change f13otdtr  eg f57ptdoc
.  Global change OUTDTRFD  eg PATDOCFD (new layout)
.  Global change outdtrof  eg patdoctf
.  Global change OUTDTRO1  eg PATDOCT1
.  Global change KEY22     eg KEY8
.  Global change KEY22     eg KEY9
.  Global change WRODTRO1  eg WRDOCT1
.  Global change sotdtrof  eg sptdoctf
.
          INC       STD001FD
.
          INC       OUTSITFD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1  IFILE  SQL, FIXED=229, KEY="U1-8,9-16,17-22" 
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.DOTNUMB     DIM       8          8         1      OUTPATIENT NUMBER
.OTINVNO     DIM       8          8         9      (INVOICE #)
.DOTTRANS    DIM       6          6        17      TRANSACTION NUMBER
.
.OTDDESC     DIM      30         30        23      DESCRIPTION
.OTPATAMT    FORM   12.2          8        53      TOTAL AMOUNT
.OTDDATE     DIM       8          8        61      DATE CCYYMMDD
.
.OTITEMNO    DIM       9          9        69      ITEM NUMBER
.
.OTTYPE      DIM       2          2        78      TRANSACTION TYPE  PY=PAYMENTS
.                                                                   DB=CHARGES
.                                                                   xx=JOURNALS
.
.OTPAYTYP    FORM      1           2       80      PAYMENT METHOD
.                                                0 = NOT APPLICABLE
.                                                1 = CASH
.                                                2 = CHEQUE
.                                                3 = CREDIT CARD
.                                                4 = MERCHANT CARDS EG AMEX
.                                                5 = MONEY ORDER
.                                                6 = EFTPOS
.                                                7 = BPAY
.                                                8 = Virtual Terminal (HICAPS)
.                                                9 = Medicare
.
.OTRECEPT   DIM      12          12       82      RECEIPT NUMBER
.
.OTINVPRT   FORM      1           2       94      0=INVOICE NOT YET PRINTED
.                                                1=INVOICE PRINTED
.
.DOTRECTY   DIM       1           1       96      RECORD TYPE 1 - MISC ITEM
.                                                            2 - CASH RECEIPT
.                                                            3 - JOURNALS
.                                                            4 - DOCTOR FEES
.                                                            5 - DISCOUNT
.
.          These next two variables are updated automatically by the
.          I/O include for each write or update
.
.OTCHGDTE   DIM       8           8       97      DATE THIS RECORD LAST CHANGED
.OTCHGTIM   DIM       8           8      105      TIME THIS RECORD LAST CHANGED
.
.OTMISGRP   DIM       3           3      113      MISCELLANEOUS GROUP (Cat FI)
.                                                JH-Misc.Item Group (Cat FN)
.OTDEPTYP   DIM       3           3      116      DEPOSIT TYPE(BLANK IF NOT DEP)
.OTBATCHN   DIM       8           8      119      BTCH NO FOR MISC.ITMS,CASH,JOUR
.                                                JH-Misc.Item Group (Cat FI)
.OTPATPOR   FORM   12.2           8      127      PATIENT PORTION OF CHARGE
.OTREBPOR   FORM   12.2           8      135      REBATE PORTION OF CHARGE
.DOTNINVS   DIM       1           1      143      No. of invoices to be printed
.OTSERVS    FORM      5           4      144      Number of services
.OTDTGSTA   FORM      1           2      148      Is GST Applicable to this item
.                                                 0-No GST, 1-Yes, 2-Unknown GST
.OTDTGSTC   DIM       6           6      150      GST Payable code
.OTDTGSTM   FORM    12.2          8      156      GST Amount
.OTDTEFFD   DIM       8           8      164      Date item assigned to Fees Inv.
.OTDTCRST   DIM       1           1      172      Credit Note status
.                                                 0 - No Credit Note
.                                                 1 - Fully Credited
.                                                 2 - Credit by Item
.OTDTBTCH   DIM       16         16      173      Batch Details (NZ Priv Exract)
.                                                format (99999XXXCCYYMMDD)
.                                                where 99999 = G/L Batch No.
.                                                      XXX   = Hospital Code
.                                                      CCYYMMDD = Extract.date
.OTDTPCOD   DIM       3           3      189      Payment Code (Cat Py)
OLDSPARE    DIM      37          37      192      SPARE
.
.End of record                          229
.
.  redefine form fields from key
.  -----------------------------
. NAME     TYPE      LENGTH     START LOC.   DESCRIPTION
. ----     ----      ------     ----------   -----------
.OTNUMB      FORM         8             1      OUTPATIENT NUMBER
.OTTRANS     FORM         6            17      TRANSACTION NUMBER
.OTRECTYP    FORM         1            88      TRANSACTION TYPE
.OTNINVS     FORM         1            129     No. of invoices to be printed
.
.                                     ******** copy the new FD here *******
OUTDTRO1   IFILE  SQL, FIXED=312, KEY="U1-8,9-16,17-22"
FILDTRO1    INIT     "dtrof"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
DOTNUMB     DIM       8          8         1      OUTPATIENT NUMBER
OTINVNO     DIM       8          8         9      (INVOICE #)
DOTTRANS    DIM       6          6        17      TRANSACTION NUMBER
.
OTDDESC     DIM      30         30        23      DESCRIPTION
OTPATAMT    FORM   12.2          8        53      TOTAL AMOUNT
OTDDATE     DIM       8          8        61      DATE CCYYMMDD
.
OTITEMNO    DIM       9          9        69      ITEM NUMBER
.
OTTYPE      DIM       2          2        78      TRANSACTION TYPE  PY=PAYMENTS
.                                                                   DB=CHARGES
.                                                                   xx=JOURNALS
.
OTPAYTYP    FORM      1           2       80      PAYMENT METHOD
.                                                0 = NOT APPLICABLE
.                                                1 = CASH
.                                                2 = CHEQUE
.                                                3 = CREDIT CARD
.                                                4 = MERCHANT CARDS EG AMEX
.                                                5 = MONEY ORDER
.                                                6 = EFTPOS
.                                                7 = BPAY
.                                                8 = Virtual Terminal (HICAPS)
.                                                9 = Medicare
.
OTRECEPT   DIM      12          12       82      RECEIPT NUMBER
.
OTINVPRT   FORM      1           2       94      0=INVOICE NOT YET PRINTED
.                                                1=INVOICE PRINTED
.
DOTRECTY   DIM       1           1       96      RECORD TYPE 1 - MISC ITEM
.                                                            2 - CASH RECEIPT
.                                                            3 - JOURNALS
.                                                            4 - DOCTOR FEES
.                                                            5 - DISCOUNT
.
.          These next two variables are updated automatically by the
.          I/O include for each write or update
.
OTCHGDTE   DIM       8           8       97      DATE THIS RECORD LAST CHANGED
OTCHGTIM   DIM       8           8      105      TIME THIS RECORD LAST CHANGED
.
OTMISGRP   DIM       3           3      113      MISCELLANEOUS GROUP (Cat FI)
.                                                JH-Misc.Item Group (Cat FN)
OTDEPTYP   DIM       3           3      116      DEPOSIT TYPE(BLANK IF NOT DEP)
OTBATCHN   DIM       8           8      119      BTCH NO FOR MISC.ITMS,CASH,JOUR
.                                                JH-Misc.Item Group (Cat FI)
OTPATPOR   FORM   12.2           8      127      PATIENT PORTION OF CHARGE
OTREBPOR   FORM   12.2           8      135      REBATE PORTION OF CHARGE
DOTNINVS   DIM       1           1      143      No. of invoices to be printed
OTSERVS    FORM      5           4      144      Number of services
OTDTGSTA   FORM      1           2      148      Is GST Applicable to this item
.                                                 0-No GST, 1-Yes, 2-Unknown GST
OTDTGSTC   DIM       6           6      150      GST Payable code
OTDTGSTM   FORM    12.2          8      156      GST Amount
OTDTEFFD   DIM       8           8      164      Date item assigned to Fees Inv.
OTDTCRST   DIM       1           1      172      Credit Note status
.                                                 0 - No Credit Note
.                                                 1 - Fully Credited
.                                                 2 - Credit by Item
OTDTBTCH   DIM       16         16      173      Batch Details (NZ Priv Exract)
.                                                format (99999XXXCCYYMMDD)
.                                                where 99999 = G/L Batch No.
.                                                      XXX   = Hospital Code
.                                                      CCYYMMDD = Extract.date
OTDTPCOD   DIM       3           3      189      Payment Code (Cat Py)
OTDTACAO   DIM       1           1      192      After care Override
.                                                 0 or Blank - No
.                                                 1 - Yes
OTDTDSRO   DIM       1           1      193      Duplicate Service Override
.                                                 0 or Blank - No
.                                                 1 - Yes
OTDTSRTX   DIM      50          50      194      Service Text
OTDTLSPN   DIM       6           6      244      LSPN Value
OTDTMPRO   DIM       1           1      250      Multiple Procedure Override
.                                                 0 or Blank - No
.                                                 1 - Yes
OTDTNPAT   DIM       2           2      251      Number Of Patients
OTDTSFDM   DIM       3           3      253      Self Deem Code (cat Sd)
OTDTTDUR   DIM       3           3      256      Time Duration (Mins)
OTDTNCAT   DIM       3           3      259      New Category Code - Restricted
.                                                Override Code
OTSPARE    DIM      50          50      262      SPARE
.
.End of record                          312
.
.  redefine form fields from key
.  -----------------------------
. NAME     TYPE      LENGTH     START LOC.   DESCRIPTION
. ----     ----      ------     ----------   -----------
OTNUMB      FORM         8             1      OUTPATIENT NUMBER
OTTRANS     FORM         6            17      TRANSACTION NUMBER
OTRECTYP    FORM         1            88      TRANSACTION TYPE
OTNINVS     FORM         1            129     No. of invoices to be printed
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
CFILEPRE  DIM       3   * Current Open File Prefix for Outpatient Files
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
VSITE     DIM       6
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION OUTDTRFD"
PRGID     INIT      "F13OTDTR"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000              * run c-isam fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KSIT0000                      * Keyin OP Site Code
          BRANCH    EXIT,MAIN0000
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
.
          DISPLAY   *P56:24,"Opening outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
.
          DISPLAY   *P1:15,*V2LON,"NOTE - Only run for one site per":
                                  " outpatient file prefix",*HOFF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                                KSIT0000             Called by: MAIN0000   *
.*  Keyin outpatient Site code to get file prefix                            *
.*****************************************************************************
.
KSIT0000  MOVE      SP70,VSITE
          KEYIN     *P1:9,*EL,"Outpatient Site Code : ",VSITE;
.
          PACK      VSITE,VSITE,SP70
.
          MATCH     SP6,VSITE           * Valid site ? Blank
          GOTO      KSIT9100 IF EQUAL   *
.
          MOVE      VSITE,KEY6          * Key for the site file
          CALL      RDSITA1             * Read the site record
          BRANCH    OVRCD,KSIT9000      * Invalid site.
.
          MOVE      OSTFILE,CFILEPRE    * Save Current File Prefix
.
          DISPLAY   *P35:9,"(Prefix: ",CFILEPRE,")";
          MOVE      ZERO,EXIT
          GOTO      KSIT9999
.
.         Invalid call to program. Common not set up with correct site info
.
KSIT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "Invalid Site Code Entered. ";
          CALL      HITENTER
          GOTO      KSIT0000
.
KSIT9100  MOVE      ONE,EXIT
          GOTO      KSIT9999
.
KSIT9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          PACK      INPFILE,CFILEPRE,FILDTRO1,SP70
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat ",CMDLINE
          APPEND    CFILEPRE,CMDLINE
          APPEND    "dtrof.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sotdtrof.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat ",CMDLINE
          APPEND    CFILEPRE,CMDLINE
          APPEND    "dtrof.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sotdtrof.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    CFILEPRE,CMDLINE
          APPEND    "dtrof",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sotdtrof",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    CFILEPRE,NEWFILE
          APPEND    "dtrof",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 312 UC1-8,9-16,17-22",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
. Index 2
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC96-96,97-104,1-8,9-16,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
. Index 3
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-8,9-16,96-96,61-68,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
. Index 4
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC9-16,96-96,1-8,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
. Index 5
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-8,9-16,96-96,113-115,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
. Index 6
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC173-188,9-16,1-8,17-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      OUTDTRO1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY22,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
          PACK      OTDTACAO,SP70               * After care Override
          PACK      OTDTDSRO,SP70               * Duplicate Service Override 
          PACK      OTDTSRTX,SP70               * Service Text
          PACK      OTDTLSPN,SP70               * LSPN Value
          PACK      OTDTMPRO,SP70               * Multiple Procedure Override
          PACK      OTDTNPAT,SP70               * Number Of Patients
          PACK      OTDTSFDM,SP70               * Self Deem Code (cat Sd)
          PACK      OTDTTDUR,SP70               * Time Duration (Mins)
          PACK      OTDTNCAT,SP70               * New Category Code 
          PACK      OTSPARE,SP70                * Spare
.
          PACK      KEY22,OTNUMB,OTINVNO,OTTRANS
          CALL      WRDTRO1                    * write to new file
.
          GOTO      READ1000                   * get next record
.
READ6000  CLOSE     OUTDTRO1                   * close new file
          CLOSE     OLDFILE1                   * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sotdtrof*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "ldat ",CMDLINE
          APPEND    CFILEPRE,CMDLINE
          APPEND    "dtrof.dat > temp.txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  MOVE      "Error finding ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    CFILEPRE,ERORTEXT
          APPEND    "dtrof.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"f13otdtr.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"f13otdtr.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  MOVE      ZERO,OVRCD
          READ      OLDFILE1,KEY22;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DOTNUMB,OTINVNO,DOTTRANS,OTDDESC,OTPATAMT:
                             OTDDATE,OTITEMNO,OTTYPE,OTPAYTYP,OTRECEPT:
                             OTINVPRT,DOTRECTY,OTCHGDTE,OTCHGTIM:
                             OTMISGRP,OTDEPTYP,OTBATCHN:
                             OTPATPOR,OTREBPOR,DOTNINVS,OTSERVS,OTDTGSTA:
                             OTDTGSTC,OTDTGSTM,OTDTEFFD:
                             OTDTCRST,OTDTBTCH,OTDTPCOD,OLDSPARE
.
          GOTO      OVERCOND IF OVER
          MOVE      DOTNUMB,OTNUMB
          MOVE      DOTTRANS,OTTRANS
          MOVE      DOTRECTY,OTRECTYP
          MOVE      ONE,OTNINVS
          MOVE      DOTNINVS,OTNINVS
.
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRDTRO1   RESET     KEY22
.
          WRITE     OUTDTRO1,KEY22;KEY22,OTDDESC,OTPATAMT:
                                   OTDDATE,OTITEMNO,OTTYPE,OTPAYTYP,OTRECEPT:
                                   OTINVPRT,DOTRECTY,OTCHGDTE,OTCHGTIM:
                                   OTMISGRP,OTDEPTYP,OTBATCHN:
                                   OTPATPOR,OTREBPOR,DOTNINVS,OTSERVS,OTDTGSTA:
                                   OTDTGSTC,OTDTGSTM,OTDTEFFD:
                                   OTDTCRST,OTDTBTCH,OTDTPCOD,OTDTACAO,OTDTDSRO:
                                   OTDTSRTX,OTDTLSPN,OTDTMPRO,OTDTNPAT,OTDTSFDM:
                                   OTDTTDUR,OTDTNCAT,OTSPARE
.
          RETURN
.
          INC       STD001IO
.
          INC       OUTSITIO/INC
