. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS17                                             *
. * Desc      :   Statistical Transaction Maintenance                  *
. **********************************************************************
. * Date      :   17.11.1990                                           *
. * Author    :   Peter Eddey                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.B01 27.10.2000 Charles Handaya                               *
. *           Added Statistical Unit displayed on the screen, and      *
. *           printed on the report                                    *
. *           srf 6934                                                 *
. **********************************************************************
. * VF.00.01  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit Files                               *
. **********************************************************************
.
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * FMS audit update variables
.
          INC       FMSBPFFD/INC
          INC       FMSCSAFD/INC
          INC       FMSSCZFD/INC
          INC       FMSSTRFD/INC
.
.==============================================================================
.VARIABLE DEFINITIONS REQUIRED
.-----------------------------
ACCEPT    FORM      1        * accept mode (1=on)
OPTIONB   FORM      2        * screen B selection keyin var
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
.**********************************************************************
.*                   Data variables required                          *
.**********************************************************************
.
ACCT01    DIM       3 
ACCT02    DIM       3 
ACCT03    DIM       3 
ACCT04    DIM       3 
ACCT05    DIM       3 
ACCT06    DIM       3 
ACCT07    DIM       3 
ACCT08    DIM       3 
ACCT09    DIM       3 
ACCT10    DIM       3 
ACCT11    DIM       3 
ACCT12    DIM       3 
ACCT13    DIM       3 
ACCT14    DIM       3 
ACCTDESC  DIM       27
ADDFLAG   FORM      1
BATCHFLG  FORM      1
BATCHLDG  DIM       2
BATCHNO   DIM       5
CASHFLAG  FORM      1
CASHD     DIM       14
CASHD0    INIT      "Cash & Accrual"
CASHD1    INIT      "Accrual       "
DIM23     DIM       23
DEFUNIQ   DIM       3
DEFLEDG   DIM       2
DEFACCT   DIM       12
DEFDATE   DIM       8
DEFREF    DIM       15
DEFUNIT   FORM      12.5 
DISPDATE  DIM       10
FINYEAR   DIM       4
FORM3     FORM      3
FORM5     FORM      5
FROMBAT   DIM       5
HASHTOTL  FORM      12.5
HASHRUNT  FORM      12.5
ITEM      FORM      2
INSRTLNO  FORM      2
KEY65SAV  DIM       65
LEDGDESC  DIM       35
MENUOPT1  FORM      1
NEGONE    FORM      "-1"
NEXTSCRF  FORM      1
NEXTUNIQ  DIM       3
OPTIONA   FORM      2
PERIODNO  FORM      2
PRMTFLAG  FORM      1
RECCOUNT  FORM      2
RECTOTAL  FORM      2
ROW       FORM      2
SAVEACCT  DIM       12
SAVUNIT   FORM      12.5
SAVECODE  DIM       14
SAVKEY    DIM       8
SCRCOUNT  FORM      5
SCRNUMB   FORM      5
SCZFNAME  DIM       8
SCZPREFX  INIT      "fmsz"
STRFNAME  DIM       8
STRPREFX  INIT      "fmsa"
SUBSCRN   FORM      "0"
SMAFNAME  DIM       8
SMAPREFX  INIT      "fmss"
TEMPLBAT  DIM       5
TEMPLREF  DIM       15
TOBAT     DIM       5
UNIQUEID  DIM       3
WKDTDESC  DIM       15
WKDTPDAT  DIM       10
Z3        INIT      "zzz"
Z8        INIT      "zzzzzzzz"
REPUNIQ   INIT      "yzxywxvwuvtustrsqrpqopnomnlmkljkijhighfgefdecdbcabZa":
                    "YZXYWXVWUVTUSTRSQRPQOPNOMNLMKLJKIJHIGHFGEFDECDBCAB9A":
                    "8978675645342312 1"
RDIM2     DIM       2
SIBPRE    DIM       1
.
PRGID     INIT      "IBAFMS17"
PRGNAM    INIT      "Statistical Transaction Maintenance"
VERSION   INIT      "V12.00.00"
.**********************************************************************
.*                           ML0000                                   *
.*                       Mainline  Code                               *
.**********************************************************************
.
ML0000    CALL      INIT0000             * initialisation
.
ML0500    CALL      MENU0000
          BRANCH    MENUOPT1,ML1000,ML2000,ML3000,ML4000
          GOTO      ML9999               * Exit was selected
.
.-----  Insert a statistical transaction ----
.
ML1000    MOVE      ONE,PRMTFLAG
          CALL      IPMT0000             * display prompt
.
          CALL      ITHD0000             * insert transaction header
          BRANCH    EXIT,ML0500            details
.
          MOVE      ZERO,PRMTFLAG
          CALL      DTRS0000             * display the transaction screen
          CALL      TRAN0000             * handle stats transactions
          CALL      USUM0000             * update the summary file
          GOTO      ML1000
.
.-----  Modify a statistical transaction ----
.
ML2000    MOVE      FMCOSTSC TO FORM1
          COMPARE   SECLEV,FORM1
          GOTO      ML2050 IF EQUAL
          GOTO      ML8000 IF NOT LESS
.
ML2050    CALL      MPMT0000             * display modify screen prompt
.
ML2100    CALL      KFIN0000             * keyin the finacial year
          BRANCH    EXIT,ML0500,ML0500
.
          MOVE      "0",BATCHFLG
          CALL      KBAT0000             * keyin the required batch numb
          BRANCH    EXIT,ML2100,ML0500
.
          CALL      DTRS0000             * display the transaction screen
          CALL      CDEL0000
          BRANCH    EXIT,ML2000          * modification not possible ?
.
          CALL      TRAN0000             * handle stats transactions
          GOTO      ML2000
.
.-----  Delete a statistical transaction ----
.
ML3000    MOVE      FMCOSTSC TO FORM1
          COMPARE   SECLEV,FORM1
          GOTO      ML3050 IF EQUAL
          GOTO      ML8000 IF NOT LESS
.
ML3050    CALL      MPMT0000             * display prompts 
.
ML3100    CALL      KFIN0000             * keyin the finacial year
          BRANCH    EXIT,ML0500,ML0500
.
          MOVE      "0",BATCHFLG
          CALL      KBAT0000             * keyin the required batch numb
          BRANCH    EXIT,ML3100,ML0500
.
          CALL      DTRS0000            * display the transaction screen
.
          PACK      KEY8,BATCHNO,SP3
          CALL      DTRA0000            * display the data
.
          CALL      CDEL0000
          BRANCH    EXIT,ML3000         * delete not possible ?
          CALL      DELQST
          BRANCH    CEXIT,ML3500,ML3000,ML0500
.
ML3500    CALL      DELB0000            * delete a batch routine
          GOTO      ML3000
.
.-----  Produce a listing  -----
.
ML4000    CALL      KFIN0000
          BRANCH    EXIT,ML0500,ML0500 
.
          CALL      RANG0000
          GOTO      ML4000
.
ML8000    DISPLAY   *P1:24,*EL,*B,"Inadequate Security Level - ";
          CALL      HITENTER
          GOTO      ML0500
.
ML9999    MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
          CHAIN     PGM
.
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD                     * display screen
          CALL      OUPD0000                     * open files for update procs
.
          DISPLAY   *P64:24,"fmsbpfaf";  * report seq file
          OPEN      FMSBPFA1,"fmsbpfaf"
.
INIT9999  RETURN
.
.**********************************************************************
.*                         MENU0000                                   *
.*                      Handle the Menu                               *
.**********************************************************************
.
MENU0000  MOVE      ZERO,MENUOPT1      
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,"0",*HOFF,". Exit":
                   *P2:5,*V2LON,"1",*HOFF,". Accrual Statistics Insert":
                   *P2:6,*V2LON,"2",*HOFF,". Accrual Statistics Change":
                   *P2:7,*V2LON,"3",*HOFF,". Accrual Statistics Delete":
                   *P2:8,*V2LON,"4",*HOFF,". Accrual Statistics Listing":
                  *P2:10,*V2LON,"5",*HOFF,". Accrual & Cash Statistics Insert":
                  *P2:11,*V2LON,"6",*HOFF,". Accrual & Cash Statistics Change":
                  *P2:12,*V2LON,"7",*HOFF,". Accrual & Cash Statistics Delete":
                  *P2:13,*V2LON,"8",*HOFF,". Accrual & Cash Statistics Listing":
                    *P5:15,"Select Option : ";
.
MENU1000  KEYIN     *P21:15,*DV,UNDLN1:
                    *P21:15,*V2LON,MENUOPT1:
                    *P21:15,*DV,MENUOPT1
.
          COMPARE   ZERO,MENUOPT1           * test for 0
          GOTO      MENU9999 IF EQUAL
.
          MOVE      ZERO,CASHFLAG
          LOAD      CASHFLAG,MENUOPT1,ONE,ONE,ONE,ONE,ZERO,ZERO,ZERO,ZERO
          MOVE      CASHD0,CASHD
          LOAD      CASHD,CASHFLAG,CASHD1
          LOAD      MENUOPT1,MENUOPT1,ONE,TWO,THREE,FOUR,ONE,TWO,THREE,FOUR
.
          BRANCH    MENUOPT1,MENU2000,MENU3000,MENU4000,MENU5000
          BEEP
          GOTO      MENU1000
.
MENU2000  DISPLAY   *P58:3,*EL,*V2LON,"Insert ",CASHD
          GOTO      MENU9999
.
MENU3000  DISPLAY   *P58:3,*EL,*V2LON,"Change ",CASHD
          GOTO      MENU9999
.
MENU4000  DISPLAY   *P58:3,*EL,*V2LON,"Delete ",CASHD
          GOTO      MENU9999
.
MENU5000  DISPLAY   *P58:3,*EL,*V2LON,"Listing ",CASHD
          GOTO      MENU9999
.
MENU9999  RETURN
.**********************************************************************
.*                         IPMT0000                                   *
.*                      display the prompts                           *
.**********************************************************************
.
IPMT0000  DISPLAY   *P1:4,*EF
          BRANCH    PRMTFLAG,IPMT1000
          GOTO      IPMT2000
.
IPMT1000  DISPLAY   *P2:4,*V2LON,"1.":
                    *P2:5,"2.":
                    *P2:6,"3.":
                    *P2:7,"4." 
.
IPMT2000  DISPLAY   *P5:4,"Ledger         :":
                    *P5:5,"Batch Total    :":
                    *P5:6,"Date           :":
                    *P5:7,"Template Batch :"
.
IPMT9999  RETURN
.
.*********************************************************************
.*                          ITHD0000                                 *
.*                Insert the transaction details                     *
.*********************************************************************
.
ITHD0000  MOVE      ONE,ACCEPT
          MOVE      ZERO,CCITEM
          MOVE      ZERO,EXIT
          MOVE      ZERO,OPTIONA
          UNPACK    SP70,TEMPLBAT,TEMPLREF,SAVKEY
.
ITHD1000  ADD       ONE,OPTIONA          * increment counter
          MOVE      OPTIONA,CCITEM
.
          COMPARE   FIVE,CCITEM          * If counter = 5 then
          GOTO      ITHD5000 IF EQUAL         insert is complete
.
          CALL      MTHD0000             * insert the field
          BRANCH    EXIT,ITHD9000,ITHD9000  * null or exitchar entered
.
          GOTO      ITHD1000
.
ITHD5000  MOVE      ZERO,ACCEPT
          MOVE      ZERO,CCITEM
          CALL      MAINQST              * Select item, post, cancel
.
          COMPARE   NEGONE,CCITEM        * test for cancel (-1)
          GOTO      ITHD9000 IF EQUAL
.
          COMPARE   ZERO,CCITEM          * test for post (0)
          GOTO      ITHD8000 IF EQUAL
.
          CALL      MTHD0000             * else modify the field
          BRANCH    EXIT,ITHD9000,ITHD9000  * null or exitchar entered
          GOTO      ITHD5000
.
.
ITHD8000  PACK     SAVKEY,TEMPLBAT,SP70  * set to start of template batch
          MATCH    SP70,TEMPLREF         * are we using template batch ?
          GOTO     ITHD9999 IF NOT EQUAL
          MOVE     ZERO,BATCHFLG
          GOTO     ITHD9999
.
ITHD9000  MOVE     ONE,EXIT
.
ITHD9999  RETURN
.
.**********************************************************************
.*                         MPMT0000                                   *
.*                      display the prompts                           *
.**********************************************************************
.
MPMT0000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Financial Year :":
                    *P5:5,"Batch Number   :":
                    *P5:6,"Ledger         :":
                    *P5:7,"Date           :"
MPMT9999  RETURN
.
.********************************************************************
.*                          KFIN0000                                *
.*                     keyin the finacial year                      *
.********************************************************************
.
KFIN0000  
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
.
          MOVE      ZERO,EXIT
          CLEAR     FINYEAR
.
          COMPARE   FOUR,MENUOPT1
          GOTO      KFIN0500 IF NOT EQUAL
.
          DISPLAY   *P1:4,*EF:
                    *P5:4,"Financial Year :"
.
KFIN0500  MOVE      TWENTY2,CCOL
          MOVE      FOUR,CVERT
.
          CALL      KLMCFM00
. 
          BRANCH    EXIT,KFIN9999,KFIN9999
.
          MOVE      FMLCYEAR,FINYEAR
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR
.
          CLEAR     SMAFNAME
          CLEAR     STRFNAME
          CLEAR     SCZFNAME
.
.----  set up the filenames ----
.
          PACK      SMAFNAME,SMAPREFX,FINYEAR     
          PACK      STRFNAME,STRPREFX,FINYEAR     
          PACK      SCZFNAME,SCZPREFX,FINYEAR     
.
KFIN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA1,STRFNAME    * open STR file
          TRAPCLR   IO
          BRANCH    OVRCD,KFIN5000       * if no file then no records
.
          OPEN      FMSSCZA1,SCZFNAME    * open SCZ file
          OPEN      FMSSMAA1,SMAFNAME    * open SMA file
          OPEN      FMSSMAA2,SMAFNAME
          GOTO      KFIN9999
.
KFIN5000  BEEP
          DISPLAY   *P1:24,*EL,"No Records Exist for this Year - ";
          CALL      HITENTER
          GOTO      KFIN0000
.
KFIN9000  MOVE      ONE,EXIT
.
KFIN9999  RETURN
.
RSTRFM00  BRANCH    BATCHFLG,RLMAFM00
RLMCFM00
.
          COMPARE   FOUR,MENUOPT1
          GOTO      RLMCFM10 IF EQUAL
.
          CALL      MPMT0000
          DISPLAY   *P22:4,*V2LON,FMLCYEAR
          RETURN
.
RLMCFM10  DISPLAY   *P1:4,*EF:
                    *P5:4,"Financial Year :"
          DISPLAY   *P22:4,*V2LON,FMLCYEAR
.
          CALL      SCRC0000
          COMPARE   SIX,CVERT
          RETURN    IF EQUAL
.
          DISPLAY   *P28:6,*V2LON,FROMBAT
          RETURN
.
.********************************************************************
.*                          KBAT0000                                *
.*                     Input the batch number                       *
.********************************************************************
.
KBAT0000  BRANCH    BATCHFLG,KBAT0100
          MOVE      "22",CCOL
          MOVE      "5",CVERT
          GOTO      KBAT0200
.
KBAT0100  MOVE      "22",CCOL
          MOVE      "7",CVERT
.
KBAT0200  CALL      KSTRFM00
          BRANCH    EXIT,KBAT9999,KBAT9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSRBAT;
.
          PACK      BATCHNO,FMSRBAT,SP70
          PACK      KEY8,BATCHNO,SP70
          CALL      RSFMSR1
          CALL      RKFMSR1
          BRANCH    OVRCD,KBAT8000
.
          MATCH     BATCHNO,FMSRBAT
          GOTO      KBAT8000 IF NOT EQUAL
.
          BRANCH    BATCHFLG,KBAT7000
.
          MOVE      FMSRLEDG,BATCHLDG
          MOVE      FMSRLEDG,LEDGER
          MOVE      FMSRLEDG,FMLALEDG
          UNPACK    FMSRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      DBAD0000             * display batch details
.
KBAT7000  MOVE      ZERO,EXIT
          GOTO      KBAT9999
.
KBAT8000  BEEP
          DISPLAY   *P1:24,*EL,"Batch Does Not Exist - ";
          CALL      HITENTER
          GOTO      KBAT0000
.
KBAT9999  RETURN
.*********************************************************************
.*                          MTHD0000                                 *
.*                Modify transaction heading details                 *
.*********************************************************************
.
MTHD0000  BRANCH    CCITEM,MTHD1000,MTHD2000,MTHD3000,MTHD4000
          BEEP
          GOTO      MTHD9999
.
MTHD1000  CALL      KLED0000             * keyin the ledger
          GOTO      MTHD9999
.
MTHD2000  CALL      KHSH0000             * keyin the Batch Total
          GOTO      MTHD9999
.
MTHD3000  CALL      KDTE0000             * keyin the date 
          GOTO      MTHD9999
.
MTHD4000  MOVE      "1",BATCHFLG
          MOVE      ZERO,ACCEPT
          CALL      OFIL0000             * open the sma and str files
.
MTHD5000  DISPLAY   *P33:7,*EF;
          UNPACK    SP70,TEMPLBAT,TEMPLREF
.
          CALL      KBAT0000             * keyin the template batch
          BRANCH    EXIT,MTHD9000,MTHD9500
.
          PACK      TEMPLBAT,BATCHNO,SP70
          DISPLAY   *P33:7,"Default Ref : ",*EF;
          MOVE      "7",ROW
          MOVE      "47",CCOL
          CALL      KREF0000
          BRANCH    EXIT,MTHD5000
          PACK      TEMPLREF,FMSRREF,SP70
.
.
MTHD9000  MOVE      ZERO,EXIT
          GOTO      MTHD9999
.
MTHD9500  MOVE      ONE,EXIT
.
MTHD9999  RETURN
.
.*********************************************************************
.*                          KLED0000                                 *
.*                Keyin the required ledger                          *
.*********************************************************************
.
KLED0000  MOVE      TWENTY2,CCOL
          MOVE      FOUR,CVERT
          MOVE      ZERO,EXIT
.
          CALL      KLMAFM00             * Keyin the required ledger
.
          BRANCH    EXIT,KLED9999,KLED9999
.
          DISPLAY   *P36:4,FMLADESC
          MOVE      FMLALEDG,LEDGER     
.
KLED9999  RETURN
.        
.**********************************************************************
.*                         KHSH0000                                   *
.*                    keyin the Batch Total                           *
.**********************************************************************
.
KHSH0000
          KEYIN     *P22:5,*DV,UNDLN12,*DV,DOT,*DV,UNDLN5:
                    *P22:5,*V2LON,HASHTOTL:
                    *P22:5,*DV,HASHTOTL
KHSH9999  RETURN
.        
.**********************************************************************
.*                         KDTE0000                                   *
.*                       keyin the date                               *
.**********************************************************************
.
KDTE0000
.
          DISPLAY   *P22:6,*EL
          MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
.
          MOVE      ONE,CCENTRY
          MOVE      ZERO,CHIGHLT
.
          MOVE      TWENTY2,CCOL
          MOVE      SIX,CVERT
.
          REP       " 0",CCENT
          REP       " 0",CYEAR
          REP       " 0",CMON
          REP       " 0",CDAY
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          CALL      KEYDATE
.
          BRANCH    CQUEST,KDTE0000
          MATCH     SP2,CDAY
          GOTO      KDTE0000 IF EQUAL
.
          PACK      DISPDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CLEAR     WKDTDESC
.
          CALL      CFPR0000
          BRANCH    EXIT,KDTE9500
          MATCH     SP10,WKDTPDAT
          GOTO      KDTE9000 IF NOT EQUAL
          DISPLAY   *P36:6,WKDTDESC,SP3;
          CALL      HITENTER
          GOTO      KDTE9500
.
KDTE9000  DISPLAY   *P36:6,WKDTDESC:
                    "  Ending ",WKDTPDAT
          MOVE      ZERO,EXIT
          GOTO      KDTE9999
.
KDTE9500  MOVE      ONE,EXIT
.
KDTE9999  RETURN
.***********************************************************************
.* CFPR - Calculate which period in which finsancial year that a date  
.*        falls into.                                                 
.*        Reguires - WORKDATE - date to find                         
.*                   FMLALEDG - ledger                              
.*                   FMLACYRR - Current financial year for ledger  
.*        Returns  - WKDTDESC - period description                
.*                   WKDTPDAT - period start date                
.*                   EXIT     - 0 - period found                
.*                              1 - period found but locked   
.*                   PERIODNO - period
.*        called by : KAPD0000                               
.***********************************************************************
CFPR0000  MATCH     SP2,FMLALEDG
          GOTO      CFPR1000 IF NOT EQUAL
          MOVE      SP2,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          GOTO      CFPR2000
.
CFPR1000  MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1
.
CFPR2000  CALL      CFYR0000
          BRANCH    EXIT,CFPR9000
          MOVE      PERDESC,WKDTDESC
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,WKDTPDAT
          MOVE      PERCNT,PERIODNO
          MOVE      ZERO,EXIT
          GOTO      CFPR9999
.
CFPR9000  DISPLAY   *P1:24,*B,*EL,ERRMSG;
          CALL      HITENTER
          MOVE      ONE,EXIT
.
CFPR9999  RETURN
.**********************************************************************
.*                         CLNU0000                                   *
.*              Clear the heading number from the screen              *
.**********************************************************************
CLNU0000  DISPLAY   *P2:4,SP2:         
                    *P2:5,SP2:         
                    *P2:6,SP2:
                    *P2:7,SP2
CLNU9999  RETURN
.**********************************************************************
.*                         DTRS0000                                   *
.*              Display the transaction screen                        *
.**********************************************************************
DTRS0000  CALL      CLNU0000             * Clear numbers from heading
.                                          details
          DISPLAY   *P1:8,*EF:
                    *P1:8,*V2LON,*ULON,"Itm":
                    *P5:8,"Account     ":
                    *P18:8,"Description             ":
                    *P42:8,"Reference      ":
                    *P58:8,"Unit":
                    *P63:8,"          Quantity"
          BRANCH    MENUOPT1,DTRS5000
          GOTO      DTRS9999
.
DTRS5000
          DISPLAY   *P1:22,"Batch Number Allocated : ":
                    *P49:22,"Batch Total : "
.
DTRS9999  RETURN
.
.**********************************************************************
.*                         TRAN0000                                   *
.*              handle the processing of stat's trans                 *
.**********************************************************************
.
TRAN0000
.
          MOVE      ZERO,HASHRUNT
          MOVE      ZERO,RECCOUNT
          MOVE      ONE,SCRNUMB
          MOVE      ZERO,NEXTSCRF
.
          BRANCH    MENUOPT1,TRAN1000     * branch if in insert mode
          GOTO      TRAN3000             * else mode is modify
.
TRAN1000
.  
          CALL      GNBN0000             * get next batch number
          DISPLAY   *P26:22,*V2LON,BATCHNO
.
          MOVE      ZERO,RECTOTAL
          MOVE      SP70,SIBPRE
          MOVE      EIGHT,ROW
.
          CALL      ITRA0000              * Insert trans accounts
          GOTO      TRAN4000
.
TRAN3000 
          CALL      GTOT0000              * set unique - id
          PACK      KEY8,BATCHNO,SP3    
          CALL      DTRA0000              * display the trans-acct's 
.
TRAN4000
          BRANCH    MENUOPT1,TRAN4500
          CALL      PILL0000             * handle the prompt (modify )
          BRANCH    EXIT,TRAN5000,TRAN6000,TRAN7000,TRAN4000,TRAN7100,TRAN7200:
                         TRAN9000
          GOTO      TRAN9999
TRAN4500
          CALL      PALL0000             * handle the prompt (insert)
          BRANCH    EXIT,TRAN5000,TRAN6000,TRAN7000,TRAN8000,TRAN7100,TRAN7200:
                         TRAN9000
.
          COMPARE   HASHTOTL,HASHRUNT
          GOTO      TRAN9999 IF EQUAL
.
          BEEP 
          DISPLAY   *P1:24,*EL,"Batch Totals Are Not Equal - ";
          CALL      HITENTER
          GOTO      TRAN4000
.
.----  item was selected -----
.
TRAN5000  MOVE      DIM2,ITEM
          CALL      LTRA0000
          PACK      KEY8,BATCHNO,UNIQUEID,SP70
          CALL      RDFMSR1
          BRANCH    OVRCD,TRAN5500
.
          MOVE      ONE,SUBSCRN
          CALL      SELB0000             * modify a trans-account
          MOVE      ZERO,SUBSCRN
          CALL      DTRS0000            * display the transaction screen
.
          CALL      GTOT0000              * set unique - id
          PACK      KEY8,BATCHNO,SP3    
          CALL      DTRA0000              * display the trans-acct's 
          BRANCH    MENUOPT1,TRAN5200
          GOTO      TRAN4000
.
TRAN5200  DISPLAY   *P26:22,*V2LON,BATCHNO,*P63:22,HASHRUNT
          GOTO      TRAN4000
.
TRAN5500  CALL      ITRA0000             * insert a trans-account
          GOTO      TRAN4000
.
.----- Next Page was selected ----
.
TRAN6000
          CALL      NPAG0000             * display next page
          GOTO      TRAN4000
.
.----- Previous Page Was Selected -----
.
TRAN7000
          CALL      PPAG0000             * display previous page
          GOTO      TRAN4000
.
.----- First Page Was Selected -----
.
TRAN7100
          CALL      FPAG0000             * display First page
          GOTO      TRAN4000
.
.----- Last Page Was Selected -----
.
TRAN7200
          CALL      LPAG0000             * display Last page
          GOTO      TRAN4000
.
.-----  batch total was selected ---
.
TRAN8000
          CALL      KHSH0000             * keyin the batch total
          GOTO      TRAN4000
.
.-----  New Insert Mode
.
TRAN9000  
          CALL      INSRT000             * insert new records
          GOTO      TRAN4000
.
TRAN9999  
          RETURN
.
.*************************************************************************
.* INSRT - Insert Item                                                   *
.*************************************************************************
INSRT000  MOVE      SP70,DIM2
          DISPLAY   *P1:24,*EL,"Insert Before Item, e(":
                    *V2LON,"X",*HOFF,")it ? ";
          KEYIN     *V2LON,*JR,DIM2
.
          MATCH     DIM2,SP70
          GOTO      INSRT999 IF EQUAL
.
          UNPACK    DIM2,ANS,ANS
.
          MATCH     EXITCHAR,ANS
          GOTO      INSRT999 IF EQUAL
.
          TYPE      DIM2
          IF        !@EQUAL
            REP       "xX",ANS
            MATCH     "X",ANS
            GOTO      INSRT999 IF EQUAL
            GOTO      INSRT800
          ENDIF
.
          MOVE      DIM2,ITEM
          MOVE      DIM2,INSRTLNO
          CALL      LTRA0000                 * load transaction
          PACK      KEY8,BATCHNO,UNIQUEID,SP70
          CALL      RDFMSR1
          BRANCH    OVRCD,INSRT800
.
. ------- Valid Entry for insert
          ASSIGN    INSRTLNO+8,ROW
          CALL      STRN0000                 * Special Insert Input Details
          GOTO      INSRT000
.
INSRT800  DISPLAY   "Invalid Insert Option.  ";
          CALL      HITENTER
          GOTO      INSRT000
.
INSRT999  RETURN
.*********************************************************************
.*                         GNBN0000                                  *
.*                   get the next batch number                       *
.*********************************************************************
.
GNBN0000  CALL      RDFMCOST           * get next stat trans batch number
          MATCH     "00000",FMBSTBAT
          GOTO      GNBN0000 IF EQUAL  * cannot be zero
.
          MOVE      FMBSTBAT,BATCHNO
          PACK      KEY8,BATCHNO,SP70
          CALL      RSFMSR1            * position at bottom
          CALL      RKFMSR1            * read next
          BRANCH    OVRCD,GNBN8000     * no batches found ?
.
          MATCH     FMSRBAT,BATCHNO
          GOTO      GNBN0000 IF EQUAL  * batch already exists ?
.
GNBN8000  PACK      KEY8,BATCHNO,SP70  * delete cash records for this batch
.                                      * (should not be any on file !!)
GNBN9000  CALL      RSFMSZ1
          CALL      RKFMSZ1
          BRANCH    OVRCD,GNBN9999     * no more records ?
          MATCH     FMSZBAT,BATCHNO
          GOTO      GNBN9999 IF NOT EQUAL
          PACK      KEY8,FMSZBAT,FMSZUNIQ,SP70
          CALL      DEFMSZ1
          GOTO      GNBN9000
.
GNBN9999  RETURN
.
.*********************************************************************
.*                         ITRA0000                                  *
.*                   Insert trans accounts                           *
.*********************************************************************
.
ITRA0000  ADD       ONE,ROW              * Increment the row
.
          BRANCH    MENUOPT1,ITRA0500
          COMPARE   TEN4,RECCOUNT        * test for a full screen
          GOTO      ITRA4000 IF EQUAL
          GOTO      ITRA1000
.
ITRA0500  COMPARE   TEN2,RECCOUNT        * test for a full screen
          GOTO      ITRA4000 IF EQUAL
.
ITRA1000  ADD       ONE,RECCOUNT         * add one to the record count
          CALL      GNID0000             * get next id
.
          DISPLAY   *P1:ROW,*V2LON,RECCOUNT,"."
.
ITRA2000  CALL      KACT0000             * keyin the account 
          BRANCH    EXIT,ITRA9000,ITRA9000
.
ITRA3000  MOVE      "42",CCOL
          CALL      KREF0000             * keyin the reference
          BRANCH    EXIT,ITRA2000
.
ITRA3100  CALL      KUNT0000             * keyin the units          
          BRANCH    EXIT,ITRA3000
.
ITRA3200  
          PACK      FMSRUNIQ,SIBPRE,RECTOTAL,SP70
.
          CALL      PTRA0000             * post trans accounts
.
          PACK      UNIQUEID,SIBPRE,RECTOTAL,SP70
          CALL      STRA0000             * store trans- account
          BRANCH    MENUOPT1,ITRA3900
.
.-----  in MODIFY mode we must update the summary file ----
.
          MOVE      ONE,ADDFLAG          * set flag for add      
          CALL      WRUP0000             * call update routine
          GOTO      ITRA0000
.
.-----  if in insert mode then we display the running batch total ----
.
ITRA3900  ADD       FMSRUNIT,HASHRUNT
          DISPLAY   *P63:22,*V2LON,HASHRUNT
          GOTO      ITRA0000
.
.---- Screen is full  -----
.
ITRA4000  ADD       ONE,SCRNUMB          * increment screen number
          MOVE      EIGHT,ROW            * re-set the row
          MOVE      ZERO,RECCOUNT        * re- set the record counter
          DISPLAY   *P1:9,*EF            * clear the screen
.
.----  display next page of items    -----
.
          LOAD      ITEM,MENUOPT1,TEN2,TEN4
          CALL      LTRA0000
          PACK      KEY8,BATCHNO,UNIQUEID
          CALL      DTRA0000
.
          BRANCH    NEXTSCRF,ITRA4000
          BRANCH    MENUOPT1,ITRA8000     * display batch & batch total
.                                          if you are in add mode
          GOTO      ITRA0000
.
ITRA8000  CALL      DBAH0000             * display the batch number and
          GOTO      ITRA0000 
.
.----- end of insert mode -----
.
ITRA9000  SUB       ONE,RECCOUNT         * decrement record number
          SUB       ONE,RECTOTAL         * decrement record total
          DISPLAY   *P1:ROW,*EL          * clear the row
          SUB       ONE,ROW              * decrement row   
.
ITRA9999  RETURN
.*********************************************************************
.*                         STRN0000                                  *
.*                   Insert trans accounts                           *
.*********************************************************************
.
STRN0000  DISPLAY   *P1:ROW,*V2LON,*EL,INSRTLNO,"."
.
STRN2000  CALL      KACT0000             * keyin the account 
          BRANCH    EXIT,STRN9000,STRN9000
.
STRN3000  MOVE      "42",CCOL
          CALL      KREF0000             * keyin the reference
          BRANCH    EXIT,STRN2000
.
STRN3100  CALL      KUNT0000             * keyin the units          
          BRANCH    EXIT,STRN3000
.
STRN3200  CALL      UPSRA000             * Update fmssrfaf file for accrual
          CALL      UPSRC000             * Update fmssrfaf file for cash
.
          BRANCH    MENUOPT1,STRN3900
          MOVE      ONE,ADDFLAG          * set flag for add      
          CALL      WRUP0000             * Update Account Details
.
STRN3900  CALL      GNID0000             * Increment RECTOTAL
          ADD       FMSRUNIT,HASHRUNT
          DISPLAY   *P63:22,*V2LON,HASHRUNT
.
          ADD       ONE,ROW
          ADD       ONE,INSRTLNO
          MOVE      INSRTLNO,RECCOUNT
          MOVE      NEXTUNIQ,UNIQUEID
.
. ------- Check if require new page
          IF        INSRTLNO>12
            CALL      NEWACC00           * Set New Accounts
            ADD       ONE,SCRNUMB        * Increment screen number
            DISPLAY   *P1:9,*EF
            ASSIGN    INSRTLNO+8,ROW
            GOTO      STRN0000
          ENDIF
          GOTO      STRN0000
.
.----- end of insert mode -----
.
STRN9000  MOVE      ACCT01,FORM3
          SUB       ONE,FORM3
          PACK      KEY8,BATCHNO,FORM3,SP70
          CALL      DTRA0000
.
STRN9999  RETURN
.******************************************************************************
.  NEWACC - Set up new Account selection fields                Called by STRN
.******************************************************************************
NEWACC00  MOVE      ZERO,RECCOUNT
          MOVE      ZERO,NEXTSCRF
          MOVE      ZERO,ITEM
          UNPACK    SP70,ACCT01,ACCT02,ACCT03,ACCT04,ACCT05:
                         ACCT06,ACCT07,ACCT08,ACCT09,ACCT10:
                         ACCT11,ACCT12,ACCT13,ACCT14
.
          PACK      KEY8,FMSRBAT,UNIQUEID
          CALL      RSFMSR1
          CALL      RPFMSR1
NEWACC10  CALL      RKFMSR1
          BRANCH    OVRCD,NEWACC99
.
          MATCH     FMSRBAT,BATCHNO      * test if same ledger
          GOTO      NEWACC99 IF NOT EQUAL
.
          ADD       ONE,RECCOUNT
          ADD       ONE,ROW       
.
          COMPARE   TEN3,RECCOUNT
          GOTO      NEWACC80 IF EQUAL
.
NEWACC40  MOVE      FMSRUNIQ,UNIQUEID
          CALL      STRA0000             * store the key
          GOTO      NEWACC10
.
NEWACC80  MOVE      ONE,NEXTSCRF
          CALL      RPFMSR1
          SUB       ONE,ROW
          SUB       ONE,RECCOUNT
.
NEWACC99  UNPACK    ACCT01,UNIQUEID 
          MOVE      NINE,ROW
          MOVE      ZERO,RECCOUNT
          MOVE      ONE,INSRTLNO
          RETURN
.******************************************************************************
.  UPSRA - Update fmssrfaf to inc unique ids for accrual      Called by STRN
.******************************************************************************
UPSRA000  PACK      KEY65SAV,FMSRBAT,FMSRUNIQ,FMSRLEDG,FMSRACCT,FMSRDATE:
                             FMSRREF,FMSRUNIT
          PACK      KEY8,BATCHNO,Z8
          CALL      RSFMSR1
UPSRA100  CALL      RPFMSR1
          BRANCH    OVRCD,UPSRA200
.
          MATCH     BATCHNO,FMSRBAT
          GOTO      UPSRA200 IF LESS
.
          MATCH     UNIQUEID,FMSRUNIQ
          GOTO      UPSRA200 IF LESS
.
          UNPACK    FMSRUNIQ,KEY1,KEY2
          MOVE      KEY1,SIBPRE
          MOVE      KEY2,RECTOTAL
          CALL      GNID0000
          PACK      FMSRUNIQ,SIBPRE,RECTOTAL
          CALL      UPFMSR1
          MOVE      FMSRUNIQ,NEXTUNIQ
          GOTO      UPSRA100
.
UPSRA200  PACK      KEY8,BATCHNO,UNIQUEID
          CALL      RDFMSR1
          IF        OVRCD=1
            UNPACK      KEY65SAV,FMSRBAT,FMSRUNIQ,FMSRLEDG,FMSRACCT,FMSRDATE:
                                 FMSRREF,KEY18
            MOVE      KEY18,FMSRUNIT
            MOVE      UNIQUEID,FMSRUNIQ
            MOVE      BATCHNO,FMSRBAT
            CALL      WRFMSR1
          ENDIF
.
UPSRA999  RETURN
.******************************************************************************
.  UPSRC - Update fmssrfaf to inc unique ids for cash     Called by STRN
.******************************************************************************
UPSRC000  BRANCH    CASHFLAG,UPSRC999
.
          PACK      KEY8,BATCHNO,Z8
          CALL      RSFMSZ1
UPSRC100  CALL      RPFMSZ1
          BRANCH    OVRCD,UPSRC200
.
          MATCH     BATCHNO,FMSZBAT
          GOTO      UPSRC200 IF LESS
.
          MATCH     UNIQUEID,FMSZUNIQ
          GOTO      UPSRC200 IF LESS
.
          UNPACK    FMSZUNIQ,KEY1,KEY2
          MOVE      KEY1,SIBPRE
          MOVE      KEY2,RECTOTAL
          CALL      GNID0000
          PACK      FMSZUNIQ,SIBPRE,RECTOTAL
          CALL      GNID0000
          CALL      UPFMSZ1
          GOTO      UPSRC100
.
UPSRC200  PACK      KEY8,BATCHNO,UNIQUEID
          CALL      RDFMSZ1
          IF        OVRCD=1
            PACK      KEY65SAV,FMSZBAT,FMSZUNIQ,FMSZLEDG,FMSZACCT,FMSZDATE:
                               FMSZREF,KEY18
            MOVE      KEY18,FMSZUNIT
            MOVE      UNIQUEID,FMSZUNIQ
            MOVE      BATCHNO,FMSZBAT
            CALL      WRFMSZ1
          ENDIF
.
UPSRC999  RETURN
.******************************************************************************
.  SCRB - Display Screen B                       Called by SELB, redisps
.******************************************************************************
SCRB0000  DISPLAY   *P1:8,*EF,*V2LON:
                    *P1:9," 1",*HOFF,". Account        : ":
                          *V2LON,FMSRACCT,*HOFF,SP2,FMAMDESC,*V2LON:
                    *P1:10," 2",*HOFF,". Reference      : ":
                          *V2LON,FMSRREF:
                    *P1:11," 3",*HOFF,". Quantity       : ";
          MOVE      FMSRUNIT,KAMOUNT
          MOVE      "22",COLNO
          MOVE      "11",LINENO
          CALL      AMTD0000
.
SCRB9999  RETURN
.******************************************************************************
.  SELB - Perform Screen B                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELB0000  MOVE      ZERO,ACCEPT
          MOVE      FMSRUNIT,SAVUNIT
          PACK      KEY14,FMLALEDG,FMSRACCT,SP70
          PACK      SAVECODE,FMLALEDG,FMSRACCT,SP70
          MOVE      "5",FMAMDPLA       * get account data
          MOVE      SP70,FMAMDESC
          CALL      RDFMAM1
          MOVE      FMAMDPLA,DECPLACE  * save no. of decimal places
.
          CALL      SCRB0000           * display screen B
.
SELB0100  ADD       ONE,OPTIONB        * get next item
          BRANCH    ACCEPT,SELB0110    * in accept mode ?
          CALL      MQSB0000           * get option if not in accept mode
          MOVE      CCITEM,OPTIONB
.
SELB0110  MOVE      "22",CCOL          * get screen address
          MOVE      "8",CVERT
          ADD       OPTIONB,CVERT
          MOVE      OPTIONB,F2         * adjust selection for quit/continue
          ADD       "3",F2
          BRANCH    F2,SELB9700,SELB9500,SELB9000:    * delete, quit, continue
                       SELB1100,SELB1200,SELB1300     * execute option
          BRANCH    ACCEPT,SELB0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELB0100           * get another option
.
SELB0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELB0100
.
.---- option 1 ----
.
SELB1100  MOVE      "6",CACCTIND
          CALL      KAMAFM00                * get data
          BRANCH    EXIT,SELB1100,SELB9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          MOVE      FMAMACCT,FMSRACCT       * Move to transaction file var
.
          MOVE      FMAMDPLA,DECPLACE       * ensure amount displayed correctly
          MOVE      FMSRUNIT,KAMOUNT
          MOVE      "22",COLNO
          MOVE      "11",LINENO
          CALL      AMTD0000
          GOTO      SELB0100
.
.---- option 2 ----
.
SELB1200  KEYIN     *PCCOL:CVERT,*DV,FMSRREF:    * get data
                    *PCCOL:CVERT,*V2LON,*RV,FMSRREF:
                    *PCCOL:CVERT,*DV,FMSRREF
          PACK      FMSRREF,FMSRREF,SP70         * space fill rest of entry
          MATCH     SP70,FMSRREF                 * nothing entered ?
          GOTO      SELB0100 IF NOT EQUAL
          BEEP                                   * illegal entry - try again
          GOTO      SELB1200
.
.---- option 3 ----
.
SELB1300  CALL      AMTR0000
          MOVE      KAMOUNT,FMSRUNIT
          COMPARE   ZERO,KAMOUNT
          GOTO      SELB0100 IF NOT EQUAL
          BEEP
          GOTO      SELB1300
.
.
SELB9000  MOVE      ZERO,EXIT          * continue
          CALL      WRTR0000
          GOTO      SELB9999
.
SELB9500  MOVE      ONE,EXIT           * quit
          GOTO      SELB9999
.
SELB9700  MOVE      ONE,EXIT           * delete
          CALL      DELQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,SELB0100,SELB9500
          CALL      DELR0000
.
SELB9999  RETURN
.**********************************************************************
.  DELR - delete record                               Called By SELB
.**********************************************************************
DELR0000  PACK      KEY8,BATCHNO,UNIQUEID,SP70
          CALL      DEFMSR1
          BRANCH    CASHFLAG,DELR9000
.
          CALL      DEFMSZ1
.
DELR9000  SUB       SAVUNIT,HASHRUNT
          BRANCH    MENUOPT1,DELR9999
          MOVE      ZERO,ADDFLAG         * set flag for delete      
          CALL      WRUP0000             * call update routine
.
DELR9999  RETURN
.**********************************************************************
.  WRTR - write record                                 Called By SELB
.**********************************************************************
WRTR0000  MOVE      WORKDATE,FMSRDATE
          MOVE      LEDGER,FMSRLEDG
.
          PACK      KEY8,BATCHNO,UNIQUEID,SP70
          UNPACK    KEY8,FMSRBAT,FMSRUNIQ
          CALL      DEFMSR1
          CALL      WRFMSR1
          BRANCH    CASHFLAG,WRTR9000
.
          MOVE      FMSRBAT,FMSZBAT
          MOVE      FMSRUNIQ,FMSZUNIQ
          MOVE      FMSRLEDG,FMSZLEDG
          MOVE      FMSRACCT,FMSZACCT
          MOVE      FMSRDATE,FMSZDATE
          MOVE      FMSRREF,FMSZREF
          MOVE      FMSRUNIT,FMSZUNIT
          MOVE      FMSRSPAR,FMSZSPAR
          CALL      DEFMSZ1
          CALL      WRFMSZ1
.
WRTR9000  SUB       SAVUNIT,HASHRUNT
          ADD       FMSRUNIT,HASHRUNT
          BRANCH    MENUOPT1,WRTR9999
.
          MOVE      ONE,ADDFLAG          * set flag for add      
          CALL      WRUP0000             * call update routine
.
          MOVE      SAVUNIT,FMSRUNIT
          UNPACK    SAVECODE,FMSRLEDG,FMSRACCT
          MOVE      ZERO,ADDFLAG         * set flag for subtract 
          CALL      WRUP0000             * call update routine
.
WRTR9999  RETURN
.**********************************************************************
.  MQSB - select, post, cancel, delete                  Called By lots
.        Returns  - CCITEM   (0=post, -1=cancel, -2=delete, other=select
.**********************************************************************
MQSB0000  MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON:
                    "C",*HOFF,")ancel, (",*V2LON:
                    "D",*HOFF,")elete ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQSB0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  P",CCITEMD      * post ?
          GOTO      MQSB9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  C",CCITEMD      * cancel ?
          GOTO      MQSB9999 IF EQUAL
.
          MOVE      "-2",CCITEM
          MATCH     "  D",CCITEMD      * delete ?
          GOTO      MQSB9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQSB9999 IF NOT LESS
.
          BEEP
          GOTO      MQSB0000
.
MQSB9999  RETURN
.***********************************************************************
.*                         SDEF0000                                    *
.*                    save the default values                          *
.***********************************************************************
.
SDEF0000
          MOVE      FMSRUNIQ,DEFUNIQ
          MOVE      FMSRLEDG,DEFLEDG
          MOVE      FMSRACCT,DEFACCT
          MOVE      FMSRDATE,DEFDATE
          MOVE      FMSRREF,DEFREF
          MOVE      FMSRUNIT,DEFUNIT
.
SDEF9999  RETURN
.
RDEF0000  MOVE      DEFUNIQ,FMSRUNIQ
          MOVE      DEFLEDG,FMSRLEDG
          MOVE      DEFDATE,FMSRDATE
.
RDEF9999  RETURN
.*********************************************************************
.*                          KACT0000                                 *
.*                    keyin an existing account                      *
.*********************************************************************
.
KACT0000  MOVE      FIVE,CCOL
          MOVE      ROW,CVERT
          MOVE      ZERO,EXIT
.
          COMPARE   ZERO,BATCHFLG        * using template ? then get next acct
          GOTO      KACT0100 IF EQUAL
.
          CALL      NEXT0000             * get next account from template
          LOAD      BATCHFLG,EXIT,ZERO   * no more accounts on template ?
          BRANCH    EXIT,KACT9999
          GOTO      KACT0200
.
KACT0100  MOVE      "6",CACCTIND
          CALL      KAMAFM00             * Keyin  account       
          BRANCH    EXIT,KACT9999,KACT9999
.
.
KACT0200  PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,KACT9000
          MATCH     "8",FMAMTYPE         * test its a stat posting rec
          GOTO      KACT9000 IF NOT EQUAL
.
          MOVE      FMAMACCT,FMSRACCT    * Move to transaction file var
          MOVE      FMAMDESC,DIM23
          MOVE      FMAMUNIT,DIM4
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,*P18:CVERT,DIM23:
                    *P58:CVERT,DIM4;
          GOTO      KACT9999
.
KACT9000  BEEP
          DISPLAY   *P1:24,*EL:
                    "Account Must be a Statistical Posting Account - ";
          CALL      HITENTER
          GOTO      KACT0100
.
KACT9999  RETURN
.
.**********************************************************************
.  NEXT - Get next account from template file         Called By KACT
.        Requires - SAVKEY   (last record read from template)
.        Returns  - EXIT     (1=no more records)
.                   SAVKEY   (last record read from template)
.                   FMAMLEDG (ledger)
.                   FMAMACCT (account)
.**********************************************************************
NEXT0000  PACK      KEY8,SAVKEY,SP70
          CALL      RSFMSR1
          CALL      RKFMSR1
          BRANCH    OVRCD,NEXT9500
.
          MATCH     SAVKEY,FMSRBAT
          GOTO      NEXT9500 IF NOT EQUAL
.
          PACK      SAVKEY,FMSRBAT,FMSRUNIQ,SP70
          MOVE      FMSRLEDG,FMAMLEDG
          MOVE      FMSRACCT,FMAMACCT
.
NEXT9000  MOVE      ZERO,EXIT          * continue
          GOTO      NEXT9999
.
NEXT9500  MOVE      ONE,EXIT           * quit
.
NEXT9999  RETURN
.**********************************************************************
.*                         KREF0000                                   *
.*                    keyin the reference                             *
.**********************************************************************
.
..KREF0000  MOVE      "42",CCOL
KREF0000  MOVE      ROW,CVERT
          UNPACK    UNDLN70,FMSRREF
.
          MATCH     SP70,TEMPLREF        * template reference set up ?
          GOTO      KREF0100 IF EQUAL
          UNPACK    TEMPLREF,FMSRREF
.
KREF0100  MOVE      ZERO,EXIT
          KEYIN     *PCCOL:CVERT,*DV,FMSRREF:
                    *PCCOL:CVERT,*V2LON,*RV,FMSRREF:
                    *PCCOL:CVERT,*DV,FMSRREF;
.
          PACK      FMSRREF,FMSRREF,SP15
          MATCH     UNDLN70,FMSRREF      * test if nothing entered
          GOTO      KREF9000 IF EQUAL
.
          MATCH     SP70,FMSRREF         * test if nothing entered
          GOTO      KREF9000 IF EQUAL
.
          MATCH     EXITCHAR,FMSRREF     * test if exitchar entered
          GOTO      KREF9000 IF EQUAL
.
          GOTO      KREF9999
.
KREF9000  MATCH     SP70,TEMPLREF        * template reference set up ?
          GOTO      KREF0000 IF NOT EQUAL
          MOVE      ONE,EXIT
.
KREF9999  RETURN
.     
.**********************************************************************
.*                         KUNT0000                                   *
.*                     keyin the units                                *
.**********************************************************************
.
KUNT0000  MOVE      ZERO,EXIT
          MOVE      SIXTY3,CCOL
          MOVE      ROW,CVERT
          MOVE      FMAMDPLA,DECPLACE
.
          CALL      AMTR0000
.
          MOVE      KAMOUNT,FMSRUNIT
.
          COMPARE   ZERO,BATCHFLG        * template reference set up ?
          GOTO      KREF9999 IF NOT EQUAL
          COMPARE   ZERO,KAMOUNT
          GOTO      KUNT9999 IF NOT EQUAL
.
          MOVE      ONE,EXIT
.
KUNT9999  RETURN
.
.**********************************************************************
.*                         PTRA0000                                   *
.*               Post the transaction record                          *
.**********************************************************************
.
PTRA0000  MOVE      BATCHNO,FMSRBAT
          MOVE      WORKDATE,FMSRDATE
          MOVE      LEDGER,FMSRLEDG
.
          PACK      KEY8,BATCHNO,FMSRUNIQ
          CALL      WRFMSR1
          BRANCH    CASHFLAG,PTRA9999
.
          MOVE      FMSRBAT,FMSZBAT
          MOVE      FMSRUNIQ,FMSZUNIQ
          MOVE      FMSRLEDG,FMSZLEDG
          MOVE      FMSRACCT,FMSZACCT
          MOVE      FMSRDATE,FMSZDATE
          MOVE      FMSRREF,FMSZREF
          MOVE      FMSRUNIT,FMSZUNIT
          MOVE      FMSRSPAR,FMSZSPAR
          CALL      WRFMSZ1
.
PTRA9999  RETURN
.
.*********************************************************************
.*                         DELB0000                                  *
.*                       delete a batch                              *
.*********************************************************************
.
DELB0000  PACK      KEY8,BATCHNO,SP3
          CALL      RSFMSR1
.
DELB1000  CALL      RKFMSR1              * read first record
          BRANCH    OVRCD,DELB9999
.
          MATCH     BATCHNO,FMSRBAT      * test if required batch
          GOTO      DELB9999 IF NOT EQUAL
.
          PACK      KEY8,FMSRBAT,FMSRUNIQ   delete if so
          CALL      DEFMSR1
          BRANCH    CASHFLAG,DELB1100
          PACK      KEY8,FMSRBAT,FMSRUNIQ   delete if so
          CALL      RDFMSZ1
          BRANCH    OVRCD,DELB1100
          CALL      DEFMSZ1
.
.----- delete the total from the summary file record ----
.
DELB1100  MOVE      ZERO,ADDFLAG         * set flag for subtract
          CALL      WRUP0000             * update the summary file
.
          GOTO      DELB1000
.
DELB9999  RETURN
.
.*********************************************************************
.*                         CDEL0000                                  *
.*                       check if cash records exist                 *
.*********************************************************************
.
CDEL0000  COMPARE   ONE,CASHFLAG
          GOTO      CDEL9000 IF NOT EQUAL
          PACK      KEY8,BATCHNO,SP3
          CALL      RSFMSZ1
          CALL      RKFMSZ1              * read first record
          BRANCH    OVRCD,CDEL9000
.
          MATCH     BATCHNO,FMSZBAT      * test if required batch
          GOTO      CDEL9000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"ERROR - Cash Details Exist - ";
          CALL      HITENTER
          GOTO      CDEL9500
.
CDEL9000  MOVE      ZERO,EXIT
          GOTO      CDEL9999
.
CDEL9500  MOVE      ONE,EXIT
.
CDEL9999  RETURN
.
.***********************************************************************
.*                         USUM0000                                    *
.*                    update the summary file                          *
.***********************************************************************
.
USUM0000
          PACK      KEY8,BATCHNO,SP3
          CALL      RSFMSR1
USUM1000 
          CALL      RKFMSR1
          BRANCH    OVRCD,USUM9999
.
          MATCH     BATCHNO,FMSRBAT
          GOTO      USUM9999 IF NOT EQUAL
.
          MOVE      ONE,ADDFLAG
          CALL      WRUP0000             * write or update the summary
.                                          record
          GOTO      USUM1000
.
USUM9999  RETURN
.
.***********************************************************************
.*                         WRUP0000                                    *
.*           write or update the summary file record                   *
.***********************************************************************
.
WRUP0000  COMPARE   ONE,FMCOCALC
          GOTO      WRUP0100 IF NOT EQUAL
.
          PACK      KEY14,FMSRLEDG,FMSRACCT,SP70
          CALL      RDFMAM1            * account exists ?
          BRANCH    OVRCD,WRUP0100
.
          PACK      KEY20,PORT,FMLCYEAR,FMSRLEDG,FMSRACCT,SP70
          CALL      RDFMTU1            * Flag For Total Account Update
          COMPARE   ZERO,OVRCD
          GOTO      WRUP0100 IF EQUAL
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
WRUP0100  PACK      KEY14,FMSRLEDG,FMSRACCT
          CALL      RDFMSS1
          BRANCH    OVRCD,WRUP5000
.
          CALL      STOT0000             * set the period total
.
          CALL      UPFMSS1
          GOTO      WRUP9999
.
WRUP5000
          MOVE      ZERO,FMSSA1
          MOVE      ZERO,FMSSA2
          MOVE      ZERO,FMSSA3
          MOVE      ZERO,FMSSA4
          MOVE      ZERO,FMSSA5
          MOVE      ZERO,FMSSA6
          MOVE      ZERO,FMSSA7
          MOVE      ZERO,FMSSA8
          MOVE      ZERO,FMSSA9
          MOVE      ZERO,FMSSA10
          MOVE      ZERO,FMSSA11
          MOVE      ZERO,FMSSA12
          MOVE      ZERO,FMSSA13
.
          MOVE      ZERO,FMSSC1
          MOVE      ZERO,FMSSC2
          MOVE      ZERO,FMSSC3
          MOVE      ZERO,FMSSC4
          MOVE      ZERO,FMSSC5
          MOVE      ZERO,FMSSC6
          MOVE      ZERO,FMSSC7
          MOVE      ZERO,FMSSC8
          MOVE      ZERO,FMSSC9
          MOVE      ZERO,FMSSC10
          MOVE      ZERO,FMSSC11
          MOVE      ZERO,FMSSC12
          MOVE      ZERO,FMSSC13
.
          CALL      STOT0000
.
          MOVE      FMSRACCT,FMSSACCT
          MOVE      FMSRLEDG,FMSSLEDG
.
          PACK      KEY14,FMSSLEDG,FMSSLEDG
          CALL      WRFMSS1
.
WRUP9999  RETURN 
.
.***********************************************************************
.*                         STOT0000                                    *
.*                set the summary file period total                    *
.***********************************************************************
.                                                             
STOT0000  BRANCH    ADDFLAG,STOT0100
          MULT      SEQ,FMSRUNIT
STOT0100  
          LOAD      F12P5,PERIODNO,FMSSA1,FMSSA2,FMSSA3,FMSSA4,FMSSA5:
                                   FMSSA6,FMSSA7,FMSSA8,FMSSA9,FMSSA10:
                                   FMSSA11,FMSSA12,FMSSA13
.
          ADD       FMSRUNIT,F12P5
.
          STORE     F12P5,PERIODNO,FMSSA1,FMSSA2,FMSSA3,FMSSA4,FMSSA5:
                                   FMSSA6,FMSSA7,FMSSA8,FMSSA9,FMSSA10:
                                   FMSSA11,FMSSA12,FMSSA13
.
          BRANCH    CASHFLAG,STOT1000
.
          LOAD      F12P5,PERIODNO,FMSSC1,FMSSC2,FMSSC3,FMSSC4,FMSSC5:
                                   FMSSC6,FMSSC7,FMSSC8,FMSSC9,FMSSC10:
                                   FMSSC11,FMSSC12,FMSSC13
.
          ADD       FMSRUNIT,F12P5
.
          STORE     F12P5,PERIODNO,FMSSC1,FMSSC2,FMSSC3,FMSSC4,FMSSC5:
                                   FMSSC6,FMSSC7,FMSSC8,FMSSC9,FMSSC10:
                                   FMSSC11,FMSSC12,FMSSC13
.
STOT1000  BRANCH    ADDFLAG,STOT9999
          MULT      SEQ,FMSRUNIT
.
STOT9999  RETURN
.
.**********************************************************************
.*                        DTRA0000                                    *
.*                  Display the trans-accounts                        *
.**********************************************************************
.
.----  The key should already be passed correctly packed -----
.
DTRA0000  MOVE      ZERO,RECCOUNT
          MOVE      ZERO,NEXTSCRF
          MOVE      EIGHT,ROW
          CALL      CTRA0000
          CALL      RSFMSR1
.
DTRA1000  CALL      RKFMSR1
          BRANCH    OVRCD,DTRA9999
.
          MATCH     FMSRBAT,BATCHNO      * test if same ledger
          GOTO      DTRA9999 IF NOT EQUAL
.
          ADD       ONE,RECCOUNT
.
          ADD       ONE,ROW       
.
          BRANCH    MENUOPT1,DTRA2000
          COMPARE   TEN5,RECCOUNT
          GOTO      DTRA8000 IF EQUAL
          GOTO      DTRA4000
.
DTRA2000  COMPARE   TEN3,RECCOUNT
          GOTO      DTRA8000 IF EQUAL
.
DTRA4000  MOVE      FMSRUNIQ,UNIQUEID
          CALL      STRA0000             * store the key
.
          CALL      DISS0000             * display the record
.
          GOTO      DTRA1000
.
DTRA8000  MOVE      ONE,NEXTSCRF
          CALL      RPFMSR1
          SUB       ONE,ROW
          SUB       ONE,RECCOUNT
.
DTRA9999  RETURN
.
.**********************************************************************
.*                            DISS0000                                *
.*                    Display a stat trans record                     *
.**********************************************************************
.
DISS0000  DISPLAY   *P1:ROW,*V2LON,RECCOUNT,".":
                    *P5:ROW,FMSRACCT
.
          PACK      KEY14,FMLALEDG,FMSRACCT
          CALL      RDFMAM1
.
          MOVE      FMAMDESC,DIM23
          MOVE      FMAMUNIT,DIM4
          DISPLAY   *P18:ROW,DIM23:
                    *P42:ROW,*V2LON,FMSRREF:
                    *P58:ROW,*HOFF,DIM4
.
          MOVE      FMAMDPLA,DECPLACE
          MOVE      FMSRUNIT,KAMOUNT
          MOVE      SIXTY3,COLNO
          MOVE      ROW,LINENO
          CALL      AMTD0000
.
DISS9999  RETURN
.
.**********************************************************************
.*                         DBAD0000                                   *
.*                  dipsplay the batch details                        *
.**********************************************************************
.
DBAD0000  CLEAR     LEDGDESC
.
.------   format variable descriptions etc -----
.
          PACK      KEY2,BATCHLDG 
          CALL      RDFMLA1
          MOVE      FMLADESC,LEDGDESC
.
          PACK      DISPDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CLEAR     WKDTDESC
.
          CALL      CFPR0000
.
          DISPLAY   *P22:4,*V2LON,FINYEAR:
                    *P22:5,BATCHNO:
                    *P22:6,BATCHLDG,*HOFF,*P36:6,LEDGDESC:
                    *P22:7,*V2LON,DISPDATE,*HOFF,*P36:7,WKDTDESC:
                    "  Ending ",WKDTPDAT
.
DBAD9999  RETURN
.
.**********************************************************************
.*                         DBAH0000                                   *
.*                  dipsplay the batch number and total               *
.**********************************************************************
.
DBAH0000
          DISPLAY   *P1:22,"Batch Number Allocated : ":
                    *P49:22,"Batch Total :"
          DISPLAY   *P26:22,*V2LON,BATCHNO,*P63:22,HASHRUNT
DBAH9999  RETURN
.
.**********************************************************************
.*                         GTOT0000                                   *
.*                   set the rcord total                              *
.**********************************************************************
.
GTOT0000
          MOVE      ZERO,RECTOTAL
          MOVE      SP70,SIBPRE
.
          PACK      KEY8,BATCHNO,Z3
          CALL      RSFMSR1
          CALL      RPFMSR1
          BRANCH    OVRCD,GTOT9999
.
          MATCH     BATCHNO,FMSRBAT
          GOTO      GTOT9999 IF NOT EQUAL
.
          UNPACK    FMSRUNIQ,SIBPRE,RDIM2
          MOVE      ZERO,RECTOTAL
          MOVE      RDIM2,RECTOTAL
.
          CALL      GNID0000           * get next id
.
GTOT9999  RETURN
.**********************************************************************
. GNID - get next id number
.**********************************************************************
GNID0000  
          COMPARE   "99",RECTOTAL
          GOTO      GNID1000 IF LESS
.
          MOVE      ONE,RECTOTAL
          REP       REPUNIQ,SIBPRE
          GOTO      GNID9999
.
GNID1000  ADD       ONE,RECTOTAL
.
GNID9999  RETURN
.**********************************************************************
.*                         OFIL0000                                   *
.*              Create and/or open SMA & STR files                    *
.**********************************************************************
OFIL0000  CLEAR     SMAFNAME
          CLEAR     STRFNAME
          CLEAR     SCZFNAME
.
          PACK      SMAFNAME,SMAPREFX,FMLCYEAR    
          PACK      STRFNAME,STRPREFX,FMLCYEAR    
          PACK      SCZFNAME,SCZPREFX,FMLCYEAR    
.
OFIL1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA1,STRFNAME    * open STR file
          TRAPCLR   IO
          BRANCH    OVRCD,OFIL4000       * create if open failed
.
OFIL1500  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSCZA1,SCZFNAME    * open SCZ file
          TRAPCLR   IO
          BRANCH    OVRCD,OFIL5000       * create if open failed
.
OFIL2000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA1,SMAFNAME    * open SMA file
          TRAPCLR   IO
          BRANCH    OVRCD,OFIL6000       * create if open failed
.
          OPEN      FMSSMAA2,SMAFNAME
.
          GOTO      OFIL9999
.
.----- Create the  STR file ------
.
OFIL4000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    STRFNAME,CMDLINE
          APPEND    " 81 U1-5,6-8 U9-10,11-22,23-30,1-5,6-8",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      FMSSTRA1,STRFNAME    * open STR file
.
          GOTO      OFIL1500
.
.----- Create the  SCZ file ------
.
OFIL5000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    SCZFNAME,CMDLINE
          APPEND    " 81 U1-5,6-8 U9-10,11-22,23-30,1-5,6-8",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      FMSSCZA1,SCZFNAME    * open SCZ file
.
          GOTO      OFIL2000
.
.---- Create the SMA file  ------
.
OFIL6000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    SMAFNAME,CMDLINE
          APPEND    " 165 U1-2,3-14",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      FMSSMAA1,SMAFNAME    * open SMA file
          OPEN      FMSSMAA2,SMAFNAME
.
OFIL9999  RETURN
.**********************************************************************
.*                         PALL0000                                   *
.*            Handles select, next, previous, batch, exit, prompt      *
.**********************************************************************
PALL0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"F",*HOFF,")irst, ":
                    "(",*V2LON,"L",*HOFF,")ast, ":
                    "(",*V2LON,"P",*HOFF,")rev, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "(",*V2LON,"B",*HOFF,")atch Tot, ":
                    "(",*V2LON,"I",*HOFF,")nsert, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PALL1000  KEYIN     *P78:24,*DV,UNDLN2:
                    *P78:24,*V2LON,DIM2:
                    *P78:24,*DV,DIM2
.
          TYPE      DIM2                 * test if numeric
          GOTO      PALL8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2            * test for exit
          GOTO      PALL9999 IF EQUAL
          MATCH     "F ",DIM2   
          GOTO      PALL8100 IF EQUAL
          MATCH     "L ",DIM2    
          GOTO      PALL8200 IF EQUAL
          MATCH     "I ",DIM2    
          GOTO      PALL8300 IF EQUAL
          MATCH     "P ",DIM2            * test for previous
          GOTO      PALL3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PALL9999
.
PALL3000  MATCH     "N ",DIM2            * test for next
          GOTO      PALL4000 IF NOT EQUAL
          MOVE      TWO,EXIT
          ADD       ONE,SCRNUMB
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PALL9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PALL9999
.
PALL4000  MATCH     "B ",DIM2            * test for batch
          GOTO      PALL5000 IF NOT EQUAL
          MOVE      FOUR,EXIT
          GOTO      PALL9999
.
PALL5000  BEEP     
          GOTO      PALL1000
.
PALL8000  MOVE      ONE,EXIT             * number entered
          GOTO      PALL9999
PALL8100  MOVE      "5",EXIT             * First Page
          GOTO      PALL9999
PALL8200  MOVE      "6",EXIT             * Last Page
          GOTO      PALL9999
PALL8300  MOVE      "7",EXIT             * New Insert Mode
          GOTO      PALL9999
.
PALL9999  RETURN
.**********************************************************************
.*                         PILL0000                                   *
.*            Handles select, next, previous, exit, prompt            *
.**********************************************************************
PILL0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"F",*HOFF,")irst, ":
                    "(",*V2LON,"L",*HOFF,")ast, ":
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "(",*V2LON,"I",*HOFF,")nsert, ":
                    "e(",*V2LON,"X",*HOFF,")it : "
.
PILL1000  KEYIN     *P70:24,*DV,UNDLN2:
                    *P70:24,*V2LON,DIM2:
                    *P70:24,*DV,DIM2
.
          TYPE      DIM2                 * test if numeric
          GOTO      PILL8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2            * test for exit
          GOTO      PILL9999 IF EQUAL
          MATCH     "F ",DIM2            * test for exit
          GOTO      PILL8100 IF EQUAL
          MATCH     "L ",DIM2            * test for exit
          GOTO      PILL8200 IF EQUAL
          MATCH     "I ",DIM2            * test for exit
          GOTO      PILL8300 IF EQUAL
.
          MATCH     "P ",DIM2            * test for previous
          GOTO      PILL3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PILL9999
PILL3000
          MATCH     "N ",DIM2            * test for next
          GOTO      PILL4000 IF NOT EQUAL
          MOVE      TWO,EXIT
          ADD       ONE,SCRNUMB
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PILL9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PILL9999
.
PILL4000  BEEP     
          GOTO      PILL1000
.
PILL8000  MOVE      ONE,EXIT             * number entered
          GOTO      PILL9999
PILL8100  MOVE      "5",EXIT             * number entered
          GOTO      PILL9999
PILL8200  MOVE      "6",EXIT             * number entered
          GOTO      PILL9999
PILL8300  MOVE      "7",EXIT             * New Insert Mode
          GOTO      PILL9999
.
PILL9999  RETURN
.**********************************************************************
.*                        NPAG0000                                    *
.*               Display the next page                                *
.**********************************************************************
NPAG0000  BRANCH    MENUOPT1,NPAG2000     * branch if in insert
.
.-----   Their are 14 records to a screen if not in insert -----
.
          MOVE      TEN4,ITEM
          CALL      LTRA0000
          MATCH     SP70,UNIQUEID 
          GOTO      NPAG9000 IF EQUAL 
          DISPLAY   *P1:9,*EF
          GOTO      NPAG3000
.
.----  Their are only twelve records to a screen in insert mode ----
.
NPAG2000
          MOVE      TEN2,ITEM
          CALL      LTRA0000
          MATCH     SP70,UNIQUEID 
          GOTO      NPAG9000 IF EQUAL 
          DISPLAY   *P1:9,*EF
          CALL      DBAH0000             * display batch number & batch
.                                          total
.
NPAG3000
          PACK      KEY8,BATCHNO,UNIQUEID
          CALL      DTRA0000             * display the screen
          GOTO      NPAG9999
.
NPAG9000  BEEP
.
NPAG9999  RETURN
.**********************************************************************
.*                        PPAG0000                                    *
.*                Display the previous page                           *
.**********************************************************************
PPAG0000  MOVE      ONE,ITEM
          CALL      LTRA0000
          PACK      KEY8,BATCHNO,UNIQUEID
          CALL      RSFMSR1
          CALL      RPFMSR1
          BRANCH    OVRCD,PPAG9000
          MATCH     BATCHNO,FMSRBAT                            ##nez 26/5/92
          GOTO      PPAG9000 IF NOT EQUAL  * desired batch ?   ##nez 26/5/92
.
.-----  read fifteen or thirteen records back  -----
.
          DISPLAY   *P1:9,*EF
          MOVE      ZERO,ITEM
          PACK      KEY8,BATCHNO,UNIQUEID
          CALL      RSFMSR1
PPAG1000
          CALL      RPFMSR1
          BRANCH    OVRCD,PPAG6000
          MATCH     BATCHNO,FMSRBAT                            ##nez 26/5/92
          GOTO      PPAG6000 IF NOT EQUAL  * desired batch ?   ##nez 26/5/92
          ADD       ONE,ITEM
.
          BRANCH    MENUOPT1,PPAG2000     * branch if in insert
.
.-----  read back 15 recs if not in insert (14 records per screen) ----
.
          COMPARE   TEN5,ITEM
          GOTO      PPAG5000 IF EQUAL
          GOTO      PPAG1000
.
.-----  only read back 13 records if in insert (12 recs per screen) ---
.
PPAG2000
          COMPARE   TEN3,ITEM
          GOTO      PPAG4900 IF EQUAL
          GOTO      PPAG1000
PPAG4900  
          CALL      DBAH0000             * display batch number & batch
.                                          total
.
PPAG5000
          PACK      KEY8,FMSRBAT,FMSRUNIQ
          CALL      DTRA0000
          GOTO      PPAG9999
PPAG6000
          MOVE      ONE,SCRNUMB         * at start of file   ##nez 26/5/92
          PACK      KEY8,BATCHNO,SP10                        ##sb 18.06.92
          CALL      DTRA0000
          GOTO      PPAG9999
.
PPAG9000  BEEP
.
PPAG9999  RETURN
.**********************************************************************
.*                        LPAG0000                                    *
.*                Display the Last page                               *
.**********************************************************************
LPAG0000  DISPLAY   *P1:9,*EF
          PACK      KEY8,BATCHNO,Z70
          CALL      RSFMSR1
          MOVE      ZERO,ITEM
.
.-----  read fifteen or thirteen records back  -----
.
LPAG1000  CALL      RPFMSR1
          BRANCH    OVRCD,LPAG6000
          MATCH     BATCHNO,FMSRBAT                            ##nez 26/5/92
          GOTO      LPAG6000 IF NOT EQUAL  * desired batch ?   ##nez 26/5/92
          ADD       ONE,ITEM
.
          BRANCH    MENUOPT1,LPAG2000     * branch if in insert
.
.-----  read back 15 recs if not in insert (14 records per screen) ----
.
          COMPARE   TEN5,ITEM
          GOTO      LPAG5000 IF EQUAL
          GOTO      LPAG1000
.
.-----  only read back 13 records if in insert (12 recs per screen) ---
.
LPAG2000  COMPARE   TEN3,ITEM
          GOTO      LPAG4900 IF EQUAL
          GOTO      LPAG1000
.
LPAG4900  CALL      DBAH0000             * display batch number & batch
.                                          total
LPAG5000  PACK      KEY8,FMSRBAT,FMSRUNIQ
          CALL      DTRA0000
          GOTO      LPAG9999
.
LPAG6000  MOVE      ONE,SCRNUMB         * at start of file   ##nez 26/5/92
          PACK      KEY8,BATCHNO,SP10                        ##sb 18.06.92
          CALL      DTRA0000
.
LPAG9999  RETURN
.**********************************************************************
.*                        FPAG0000                                    *
.*                Display the Last page                               *
.**********************************************************************
FPAG0000  DISPLAY   *P1:9,*EF
          PACK      KEY8,BATCHNO,SP10                        ##sb 18.06.92
          CALL      DTRA0000
FPAG9999  RETURN
.**********************************************************************
.*                         STRA0000                                   *
.*                 Store the sub-account details                      *
.**********************************************************************
.
STRA0000
          STORE     UNIQUEID,RECCOUNT,ACCT01,ACCT02,ACCT03,ACCT04,ACCT05:
                                   ACCT06,ACCT07,ACCT08,ACCT09,ACCT10:
                                   ACCT11,ACCT12,ACCT13,ACCT14
STRA9999  RETURN 
.
LTRA0000
          LOAD      UNIQUEID,ITEM,ACCT01,ACCT02,ACCT03,ACCT04,ACCT05:
                               ACCT06,ACCT07,ACCT08,ACCT09,ACCT10: 
                               ACCT11,ACCT12,ACCT13,ACCT14
LTRA9999  RETURN
.
CTRA0000
          MOVE      ZERO,ITEM
CTRA1000
          ADD       ONE,ITEM
          MOVE      SP3,UNIQUEID
          STORE     UNIQUEID,ITEM,ACCT01,ACCT02,ACCT03,ACCT04,ACCT05:
                                   ACCT06,ACCT07,ACCT08,ACCT09,ACCT10:
                                   ACCT11,ACCT12,ACCT13,ACCT14
          COMPARE   TEN4,ITEM
          GOTO      CTRA9999 IF EQUAL
.
          GOTO      CTRA1000
.
CTRA9999  RETURN
.
.**********************************************************************
.  SCRC - Print for a range of batches           Called By RANG,redisps
.**********************************************************************
SCRC0000  DISPLAY   *P1:6,*EF:
                    *P5:6,"From Batch Number    : ",*V2LON,FROMBAT,*HOFF:
                    *P5:7,"To   Batch Number    : ",*V2LON,TOBAT
.
SCRC9999  RETURN
.
.*********************************************************************
.*                         RANG0000                                  *
.*                keyin batch range                                  *
.*********************************************************************
.
RANG0000
          UNPACK    SP70,FROMBAT,TOBAT
          CALL      SCRC0000           * display screen
.
RANG1000  MOVE      ZERO,BATCHFLG
          MOVE      "28",CCOL
          MOVE      "6",CVERT
          CALL      KSTRFM00             * keyin the batch number
          BRANCH    EXIT,RANG9999,RANG9999
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSRBAT
          MOVE      FMSRBAT,FROMBAT
.
          MOVE      ZERO,BATCHFLG
          MOVE      "28",CCOL
          MOVE      "7",CVERT
          CALL      KSTRFM00             * keyin the batch number
          BRANCH    EXIT,RANG1000,RANG9999
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSRBAT
          MOVE      FMSRBAT,TOBAT
.
RANG2000  CALL      CONTQST
          BRANCH    CEXIT,RANG3000,RANG0000,RANG9999
.
RANG3000  CALL      LIST0000             * print selected batchs 
.  
RANG9999  RETURN
.
.
.*********************************************************************
.*                         LIST0000                                  *
.*                print the batch report                             *
.*********************************************************************
.
LIST0000  DISPLAY   *P1:24,*EL,"Printing : "
          CALL      IBACLOCK
          MOVE      ZERO,CNOUNDLN
          MOVE      ZERO,CPAGENO
.
          CALL      HEAD132
          MOVE      THREE,ROW
          CALL      HEAD0000
.
          PACK      KEY8,FROMBAT,SP10
          CALL      RSFMSR1
.
LIST1000  CALL      RKFMSR1
          BRANCH    OVRCD,LIST8000
.
          MATCH     FMSRBAT,TOBAT
          GOTO      LIST8000 IF LESS
.
          MOVE      "Invalid Account Code               ",FMAMDESC
          PACK      FMAMUNIT,SP70
          PACK      KEY14,FMSRLEDG,FMSRACCT,SP70
          CALL      RDFMAM1
.
          DISPLAY   *P13:24,*EL,*V2LON,FMSRACCT
          UNPACK    FMSRDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DISPDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          ADD       ONE,ROW
.
          COMPARE   EIGHT,ROW            * if first item on page
          GOTO      LIST3000 IF EQUAL         print batch number as well
.
          MATCH     BATCHNO,FMSRBAT      * test if new batch
          GOTO      LIST2000 IF NOT EQUAL
.
          PRINT    "|",*9,"|",*11,FMSRLEDG,SLASH,FMSRACCT:
                   *27,FMAMDESC,*63,"|",DISPDATE,"|",*76,FMSRREF:
                   *92,"|",FMAMUNIT,"|",FMSRUNIT,*132,"|"
.
          COMPARE   "56",ROW
          GOTO      LIST4000 IF NOT LESS
.
          GOTO      LIST1000
.
.-----  new batch so print a blankline then the record with ---
.----   its batch number.                                   -----
.
LIST2000  MOVE      FMSRBAT,BATCHNO
          PRINT    "|",*9,"|",*63,"|",*74,"|",*92,"|",*113,"|",*132,"|"
          ADD       ONE,ROW
.
LIST3000  PRINT    "|",*3,FMSRBAT,*9,"|",*11,FMSRLEDG,SLASH,FMSRACCT:
                   *27,FMAMDESC,*63,"|",DISPDATE,"|",*76,FMSRREF:
                   *92,"|",FMAMUNIT,"|",FMSRUNIT,*132,"|"
.
          COMPARE   "56",ROW
          GOTO      LIST4000 IF NOT LESS
.
          GOTO     LIST1000
.
LIST4000  CALL      HEAD132
          MOVE      THREE,ROW
          CALL      HEAD0000
          GOTO      LIST1000
.
LIST8000  CALL      UND132
          PRINT     *N:
                    "***** End of Report *****"
.
LIST9999  RETURN
.
.*********************************************************************
.*                         HEAD0000                                  *
.*                print the report colomn headings                   *
.*********************************************************************
.
HEAD0000  PRINT     "Financial Year : ",FINYEAR
          CALL      UND132
          PRINT     "|",*3,"BATCH",*9,"|",*11,"Ledger/Account":         
                    *63,"|"," Date",*74,"|"," Reference",*92,"|":
                    "Statistical Units",*113,"|":
                    *119,"Quantity",*132,"|"
          CALL      UND132
          ADD       FOUR,ROW
.
HEAD9999  RETURN
.
.**********************************************************************
.*                 Redisplay routine for standard keyins              *
.**********************************************************************
.
RAMAFM00  MOVE      FMAMACCT,SAVEACCT
          MOVE      FMAMDESC,ACCTDESC
          BRANCH    MENUOPT1,RAMAFM03
          CALL      MPMT0000
          CALL      DBAD0000
          GOTO      RAMAFM05
.
RAMAFM03  CALL      IPMT0000
          DISPLAY   *P22:4,*V2LON,FMLALEDG,*HOFF,*P36:4,FMLADESC:
                    *P22:5,*V2LON,HASHTOTL:
                    *P22:6,DISPDATE,*HOFF,*P36:6,WKDTDESC:
                    "  Ending ",WKDTPDAT,*V2LON:
                    *P22:7,TEMPLBAT
          MATCH     SP70,TEMPLBAT
          GOTO      RAMAFM05 IF EQUAL
          DISPLAY   *P33:7,"Def Reference : ",*V2LON,TEMPLREF;
.
RAMAFM05  COMPARE   ONE,SUBSCRN
          GOTO      RAMAFM06 IF NOT EQUAL   * on subscreem
          CALL      SCRB0000
          RETURN
.
RAMAFM06  CALL      DTRS0000
          BRANCH    MENUOPT1,RAMAFM07
          GOTO      RAMAFM08
.
RAMAFM07  DISPLAY   *P26:22,*V2LON,BATCHNO,*P63:22,HASHRUNT
.
RAMAFM08  MOVE      ONE,ITEM
          CALL      LTRA0000
.
          MATCH     SP3,UNIQUEID
          GOTO      RAMAFM10 IF EQUAL
.
          PACK      KEY8,BATCHNO,UNIQUEID
          GOTO      RAMAFM20
.
RAMAFM10  PACK      KEY8,BATCHNO,SIBPRE,RECTOTAL
.
RAMAFM20  CALL      RSFMSR1
          CALL      RPFMSR1
          BRANCH    OVRCD,RAMAFM30
.
          PACK      KEY8,FMSRBAT,FMSRUNIQ
          CALL      DTRA0000
          GOTO      RAMAFM40
.
RAMAFM30  PACK      KEY8,SP10
          CALL      DTRA0000
.
RAMAFM40  ADD       ONE,RECCOUNT
          ADD       ONE,ROW
          MOVE      SAVEACCT,FMSRACCT 
          DISPLAY   *P1:ROW,*V2LON,RECCOUNT,".":
                    *P6:ROW,FMSRACCT,*HOFF:
                    *P19:ROW,ACCTDESC
          RETURN
.
.-----  Redisplay after a ? on ledger ----
.
RLMAFM00  CALL      IPMT0000
          DISPLAY   *P22:4,*V2LON,FMLALEDG,*HOFF,*P36:4,FMLADESC;
          BRANCH    ACCEPT,RLMAFM99
.
          DISPLAY   *P22:5,*V2LON,HASHTOTL:
                    *P22:6,DISPDATE,*HOFF,*P36:6,WKDTDESC:
                    "  Ending ",WKDTPDAT,*V2LON:
                    *P22:7,TEMPLBAT
          MATCH     SP70,TEMPLBAT
          GOTO      RLMAFM99 IF EQUAL
          DISPLAY   *P33:7,"Def Reference : ",*V2LON,TEMPLREF;
.
RLMAFM99  RETURN
.
RBCFFM00  CALL      RLMCFM00
.
          INC       FMSSTRIO/INC
          INC       FMSSCZIO/INC
.
          INC       FMSBPFIO/INC
          INC       FMSAMAKY
          INC       FMSLMAKY
          INC       FMSLMCKY
          INC       FMSSTRKY
.
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD
          INC       FMSUDACD           * FMS audit update routines 
.
