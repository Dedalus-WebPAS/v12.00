.*******************************************************************************
.*    Program      : F01PMMPR                                                  *
.*    Description  : Conversion pmsmpraf to new File layout                    *
.*                                                                             *
.*    Author       : Mike Laming                                               *
.*    Date         : 25/01/2010                                                *
.*    Modifications:                                                           *
.*                                                                             *
.*         V10.05.01  01/01/2015  Ania P                      CAR 261630       *
.*                    Removed use of PORT for temp file naming                 *
.*         V10.01.02  28/03/2011 J.Tan CAR 233054                              *
.*                    Mods iserase for ORACLE                                  *
.*******************************************************************************
.
.  Global change F01PMMPR  eg F57PTDOC
.  Global change PMSMPRFD  eg PATDOCFD (new layout)
.  Global change pmsmpraf  eg patdoctf
.  Global change PMSMPRA1  eg PATDOCT1
.  Global change KEY22   eg KEY8
.  Global change KEY28  eg KEY9
.  Global change WRPMMPR1  eg WRDOCT1
.  Global change spmmpraf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
          INC       PATMTFFD/INC
          INC       PATMBFFD/INC
          INC       IBASEQFD/INC  
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.
.         Filename : f01mprxx.dat          (xx = port id)
.
ERRTEMP1  IFILE SQL, FIXED=10, KEY="U1-3,4-9"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
ERRRCLAM  DIM       3      3        1     Claim Code
ERRRHFND  DIM       6      6        4     Health Fund

.End of Record                     10
.
.         File Variables
.
ERASE     INIT      "iserase "
FNAME     INIT      "f01mpr"          * set up for temp file name
ISBUILD   INIT      "isbuild "
TEMPFILE  DIM       8
UKEY      INIT      " 10 U1-3,4-9"    * set up for record length & relevant key
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1   IFILE    SQL, FIXED=128, KEY="U1-3,4-9,10-12,13-20,21-22"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.PMMPCCOD  DIM       3      3        1     Claim Code (Catg CL)
.PMMPHFUN  DIM       6      6        4     Health Fund
.PMMPHFTY  DIM       3      3        10    Health Fund Type (Cat HT)
.PMMPMPRC  DIM       8      8        13    Multiple Procedures Code
.DPMMPCNT  DIM       2      2        21    Counter
.PMMPPAMT  FORM      12.2   8        23    Patient Portion Amount
.PMMPRAMT  FORM      12.2   8        31    Rebate Portion Amount
.PMMPITMN  DIM       9      9        39    MBS Item Code
OLDPSPAR  DIM       80     80       48    Spare variable
.
.End of Record                      128
.
.Redefine form field from key
.
PMMPCOUN  FORM      2      2        21    Counter
.
.
.                                     ******** copy the new FD here *******
.Data File Definition
.--------------------
PMSMPRA1   IFILE    SQL, FIXED=128, KEY="U48-53,1-3,4-9,10-12,13-20,21-22"
PMSMPRA2   IFILE    SQL, FIXED=128, KEY="U1-3,4-9,10-12,39-47,48-53,13-20,21-22"
PMSMPRA3   IFILE    SQL, FIXED=128, KEY="U13-20,48-53,1-3,4-9,10-12,21-22"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMMPCCOD  DIM       3      3        1     Claim Code (Catg CL)
PMMPHFUN  DIM       6      6        4     Health Fund
PMMPHFTY  DIM       3      3        10    Health Fund Type (Cat HT)
PMMPMPRC  DIM       8      8        13    Multiple Procedures Code
DPMMPCNT  DIM       2      2        21    Counter
PMMPPAMT  FORM      12.2   8        23    Patient Portion Amount
PMMPRAMT  FORM      12.2   8        31    Rebate Portion Amount
PMMPITMN  DIM       9      9        39    MBS Item Code
PMMPCNID  DIM       6      6        48    Contract Id. Code
PMMPSPAR  DIM       74     74       54    Spare variable
.
.End of Record                      128
.
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
.
INPFILE   DIM       8
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
MAPFLAG   FORM      1
SAVEFLG   FORM      1
SKEY9     DIM       9
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION PMSMPRFD"
PRGID     INIT      "F01PMMPR"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                * Choose main option
          BRANCH    EXIT,MAIN9999           * EXIT
          BRANCH    OPTION,MAIN0500:
                           MAIN4000
.
MAIN0500  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
. ------------------------------------ Option 2 ------------------------------
.
MAIN4000  CALL      OPNF0000                      * Opening Mapping file
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000,MAIN4000,MAIN9999 * Yes, no, cancel
.
MAIN5000  CALL      CREA0000                      * Create temp file
          CALL      CLER0000                      * empty it 
.
          CALL      PRE20000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      REA20000                      * update data
          CALL      PERR0000                      * Print error report
          CALL      KILL0000                      * Delete temp file
.
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
          GOTO      MAIN9999
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      "pmsmpraf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsmpraf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmmpraf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsmpraf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmmpraf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmsmpraf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmmpraf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmsmpraf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 128 UC48-53,1-3,4-9,10-12,13-20,21-22",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-3,4-9,10-12,39-47,48-53,13-20,21-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC13-20,48-53,1-3,4-9,10-12,21-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-3,48-53,4-9,10-12,13-20,21-22",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSMPRA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
.
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY22,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
          PACK      PMMPSPAR,SP70,SP30
          MOVE      SP6,PMMPCNID
.                                               * Pack key here
          PACK      KEY28,PMMPCNID,PMMPCCOD,PMMPHFUN,PMMPHFTY,PMMPMPRC:
                          DPMMPCNT,SP70
          CALL      WRPMMPR1                    * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSMPRA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmmpraf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat pmsmpraf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'pmsmpraf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: MAIN0000 *
.*                                Select Option                               *
.******************************************************************************
.
OPTN0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTION
          HLINE     *G37,2,57,80
          DISPLAY   *P40:4,*EF:
                    *P1:3,*V2LON,"0",*HOFF," = Exit":
               *P1:4,*V2LON,"1",*HOFF," = Convert pmsmpraf to new file format ":
                                      "(CISAM only)":
               *P1:5,*V2LON,"2",*HOFF," = Load pmsmpraf with new contract ids ":
                            "from Mapping file":
                    *P1:7,"Select Option : ";
.
OPTN1000  KEYIN     *P17:7,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN9000:
                           OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          CHE20000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
CHE20000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      PMSMPRA1,"pmsmpraf"
          TRAPCLR   IO
          BRANCH    OVRCD,CHE22000       * Original file does not exist
          CLOSE     PMSMPRA1
          GOTO      CHE29000
.
CHE22000  DISPLAY   *P1:23,*EF,"File 'pmsmpraf' ";
          SCAN      "I * I",DIM60
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has not been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed":
                    *P1:24;
          CALL      HITENTER
.
          MOVE      ONE,EXIT
          GOTO      CHE29999
.
CHE29000  MOVE      ZERO,EXIT
.
CHE29999  RETURN
+
.*****************************************************************************
.*                          PRE20000               Called by: MAIN0000       *
.*                       Preparing files                                     *
.*****************************************************************************
.
PRE20000  CALL      CHE20000             * old file found ok ?
          BRANCH    EXIT,PRE29000        * no - finish
.
          OPEN      PMSMPRA1,"pmsmpraf"
.
.         Set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          MOVE      ZERO,EXIT
          GOTO      PRE29999
.
.
PRE29000  MOVE      ONE,EXIT
.
PRE29999  RETURN
+
.*****************************************************************************
.*                               REA20000          Called by: MAIN0000       *
.*             Loop thru file and load contract id                           *
.*****************************************************************************
.
REA20000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY28,SP70
          CALL      RSPMMPR1                      * position at start
REA21000  CALL      RKPMMPR1                      * read next record
          BRANCH    OVRCD,REA26000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          PACK      KEY28,PMMPCNID,PMMPCCOD,PMMPHFUN,PMMPHFTY,PMMPMPRC:
                          PMMPCOUN,SP70           * save Key for re-position
.
.         MAPFLAG =1 - Using Theatre Fee Mapping file
.                  2 - Using Bed Fee Mapping file
.
          BRANCH    MAPFLAG,REA21200,REA21400
          GOTO      REA22000
.
.         Checking Theatre fee Mapping file
.
REA21200  PACK      KEY9,PMMPCCOD,PMMPHFUN,SP20
          CALL      RDPTMTF1
          BRANCH    OVRCD,REA22000
          MATCH     SP70,PTMTCNTR                  * blank contract id
          GOTO      REA22000 IF EQUAL
          MOVE      PTMTCNTR,PMMPCNID
          GOTO      REA24000
.
.         Checking Bed fee Mapping file
.
REA21400  PACK      SKEY9,PMMPCCOD,PMMPHFUN,SP70
          PACK      KEY12,PMMPCCOD,PMMPHFUN,SP20
          CALL      RDPTMBF1                        * full read
          COMPARE   ZERO,OVRCD
          GOTO      REA21600 IF EQUAL
.
          CALL      RSPTMBF1
          CALL      RKPTMBF1
          BRANCH    OVRCD,REA22000
          PACK      KEY9,PTMBCLAM,PTMBHFND,SP70
          MATCH     SKEY9,KEY9
          GOTO      REA22000 IF NOT EQUAL
.
REA21600  MATCH     SP70,PTMBCNTR                  * blank contract id
          GOTO      REA22000 IF EQUAL
          MOVE      PTMBCNTR,PMMPCNID
          GOTO      REA24000
.
REA22000  CALL      ADDE0000                       * Add error to temp file
          GOTO      REA21000
.
REA24000  CALL      UPPMMPR1
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          CALL      RSPMMPR1                      * re-position at next record
.
          GOTO      REA21000                      * get next record
.
REA26000  CLOSE     PMSMPRA1                      * close new file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
REA29999  RETURN
+
.**********************************************************************
.*                               ADDE0000                             *
.*             Add error record to temp file                          *
.**********************************************************************
ADDE0000  PACK      KEY9,PMMPCCOD,PMMPHFUN,SP20
          CALL      RDTEMP1
          IF        OVRCD=1
            CALL     WRTEMP1                      * Add error to temp file
          ENDIF
.
ADDE9999  RETURN
+
.**********************************************************************
.*                               PERR0000                             *
.*             Print error report                                     *
.**********************************************************************
PERR0000  CALL      HEAD80
.
          PRINT     *10,"Missing Contract Mapping":
                        " - Casemix matrix"
.
          CALL      UND80
          PRINT     *1,"| Claim Code ",*14,"| Health Fund |" *80,"|"
          CALL      UND80
.
          PACK      KEY9,SP70
          CALL      RSTEMP1
PERR1000  CALL      RKTEMP1
          BRANCH    OVRCD,PERR9000
.
          PRINT     *1,"| ",ERRRCLAM,*14,"| ",ERRRHFND,*28,"|",*80,"|"
.
          PACK      KEY9,ERRRCLAM,ERRRHFND,SP70
          CALL      DETEMP1                      * Add error to temp file
          GOTO      PERR1000
.
PERR9000  CALL      UND80
          PRINT     *10,"***  End of Report ***"
.
PERR9999  RETURN
+
.**************************************************************************
.*                              OPNF0000                                  *
.*             Open Mapping files                                         *
.**************************************************************************
OPNF0000  MOVE      ZERO,MAPFLAG
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMTFA1,"patmtfaf"
          TRAPCLR   IO
          BRANCH    OVRCD,OPNF1000
.
          MOVE      ONE,MAPFLAG         * Using Theatre fee Mapping file
          GOTO      OPNF9000
.
OPNF1000  DISPLAY   *P1:23,*EF,*B,"Theatre Fee Mapping file is not found, ":
                    *P1:24,"Bed Fee Mapping file will be used. ";
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMBFA1,"patmbfaf"
          TRAPCLR   IO
          BRANCH    OVRCD,OPNF2000
.
          MOVE      TWO,MAPFLAG         * Using Bed fee Mapping file
          GOTO      OPNF9000
.
OPNF2000  DISPLAY   *P1:23,*EF,*B,"Bed Fee Mapping file is not found. ";
.
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      OPNF9999
.
OPNF9000  MOVE      ZERO,EXIT
OPNF9999  RETURN
+
.**************************************************************************
.*                              CREA0000                                  *
.*             create a new temporary file                                *
.**************************************************************************
CREA0000  CALL      TFILENAM
          PACK      TEMPFILE,TFILNAME
          CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      ERRTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.******************************************************************************
.*                             CLER0000                 Called by:            *
.*               close and erase the temporary file                           *
.******************************************************************************
.
CLER0000  PACK      KEY9,SP70
          CALL      RSTEMP1
          CALL      RKTEMP1
          BRANCH    OVRCD,CLER9999
.
          PACK      KEY9,ERRRCLAM,ERRRHFND,SP70
          CALL      DETEMP1
.
          GOTO      CLER0000
.
CLER9999  RETURN
+
.****************************************************************************
.*                              KILL0000                                    *
.*               close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     ERRTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
.
.*****************************************************************************
RSTEMP1   READ      ERRTEMP1,KEY9;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      ERRTEMP1,KEY9;ERRRCLAM,ERRRHFND
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    ERRTEMP1;ERRRCLAM,ERRRHFND
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     ERRTEMP1,KEY9;KEY9
          RETURN

DETEMP1   DELETE    ERRTEMP1,KEY9
          RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
READSOLD  MOVE      ZERO,OVRCD
          RESET     KEY22
          READ      OLDFILE1,KEY22;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN

READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;PMMPCCOD,PMMPHFUN,PMMPHFTY,PMMPMPRC,DPMMPCNT:
                        PMMPPAMT,PMMPRAMT,PMMPITMN,PMMPSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPMMPCNT,PMMPCOUN
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
RSPMMPR1  RESET     KEY28
          READ      PMSMPRA1,KEY28;;
          RETURN
.
RKPMMPR1  MOVE      ZERO,OVRCD
          READKS    PMSMPRA1;PMMPCCOD,PMMPHFUN,PMMPHFTY,PMMPMPRC,DPMMPCNT:
                        PMMPPAMT,PMMPRAMT,PMMPITMN,PMMPCNID,PMMPSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPMMPCNT,PMMPCOUN
          RETURN
.
WRPMMPR1  RESET     KEY28     
          MOVE      PMMPCOUN,DPMMPCNT
          WRITE     PMSMPRA1,KEY28;PMMPCCOD,PMMPHFUN,PMMPHFTY,PMMPMPRC,DPMMPCNT:
                        PMMPPAMT,PMMPRAMT,PMMPITMN,PMMPCNID,PMMPSPAR
          RETURN
.
UPPMMPR1
          MOVE      PMMPCOUN,DPMMPCNT
          UPDATE    PMSMPRA1;PMMPCCOD,PMMPHFUN,PMMPHFTY,PMMPMPRC,DPMMPCNT:
                        PMMPPAMT,PMMPRAMT,PMMPITMN,PMMPCNID,PMMPSPAR
          RETURN
.
.
.
          INC       STD001IO
          INC       PATMTFIO/INC
          INC       PATMBFIO/INC
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
