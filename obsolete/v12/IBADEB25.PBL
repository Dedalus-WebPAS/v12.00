.-----------------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.06.01  15/05/2015  Davin         CAR 310155
.           Recompiled for PATGBCRN - added MOD10V05 for BPAY
.V10.04.02  17/06/2014 Steve Armstrong  CAR 301639
.           Added call to TFILENAM for FNAMPOST (AUTOPCOD)
.           in SELPRT00.
.           Recompiled for changes to AUTOPCOD & AUPCDVAR.
.V10.04.01  15/04/2014 Ebon Clements CAR 299449
.           Recompiled for IBAPRINT 6 character printers
.-------------------------------------------------------
.V10.03.02 20/06/2013  Davin         CAR 287161
.           Recompiled for PATGBCRN - right justify ptcnhbpi
.V10.03.01  18/07/2012  Don Nguyen    CAR 264561
.           Added PATHSPFD for changes in PATGBCRN
.-------------------------------------------------------
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
.V10.01.01  10/03/2011 Jill Parkinson CAR 233088
.           Added pmsvx1af
.V10.00.01  30.03.2010 Davin             219072
.           Added PATGBCRN - templated field for BPAY No. (bpayrefn)
.-------------------------------------------------------
. V9.09.01  25.10.2007 Sandra Barcham    109997
.           Allow printing of partial quantities for layout 12
.-------------------------------------------------------
. V9.05.02  24/03/2006  Peter Vela    CAR 61299
.           Increased field no size from DIM3 to DIM5
. V9.05.01  03/03/2006  Mike Lmaing   CAR 75900
.           Add indicator CFDBNFMT for Patient Name Format
.-------------------------------------------------------
. V9.04.01  06.10.2004  Sandra Barcham    CAR 54065
.           Fix 132 standard carried forward layout (removed another blank line)
.-------------------------------------------------------
. V9.03.01  06.10.2004  Sandra Barcham    CAR 54065
.           Fix 132 standard carried forward layout
.-------------------------------------------------------
. V9.02.03  26.03.2003  Sandra Barcham    CAR 37464
.           Fix HPS code in DEBSRHCD for warning and terms description
.           Add f09 changes missed in v9.00
. V9.02.02  20.03.2003  Sandra Barcham    CAR 37464
.           When adding a new debtor code update the keyword table
.           Add f09 changes missed in v9.00
. V9.02.01  23.05.2002  Glenn Saunders
.           Replace all DEBPAT includes with the real ones.
.           Remove all use of custom deb fields for these includes.
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-----------------------------------------------------------------------------
RETURNFL  FILE      ASCII, FIXED=100
.
ADMDATE   DIM       10
CKEYTYPE  FORM      1
CRFWDCOL  FORM      3
CRFWDROW  FORM      3
DEBNAM    DIM       19
DEBREF    DIM       19
.
DIM10A    DIM       10
DIM14A    DIM       14
DIM14B    DIM       14
DIM35     DIM       35
.
DIM10TOT  DIM       10
DIM12TOT  DIM       12
DIM10PRI  DIM       10
DIM9TAX   DIM       9
DIM10TAX  DIM       10
DIM13TAX  DIM       13
DIM9GRN   DIM       9
DIM14GRN  DIM       14
DIM14TAX  DIM       14
DIM4QTY   DIM       4
DIM7QTY   DIM       7
DIM8QTY   DIM       8
DISDATE   DIM       10
SAVADMIS  DIM       8
SAVCOL    FORM      2
SAVVERT   FORM      2
SVSCRID   DIM       2
.
SRCHDOC   DIM       10
SRCHDAT   DIM       8
SRCHDEB   DIM       19
SRCHUR1   DIM       19
SRCHAMT   FORM      8.2
.
CARRIED   FORM      1
CURRROW   FORM      3
DBFHDTOT  FORM      12.2
DBFHFTOT  DIM       14
DIM20     DIM       20
ENDINV    DIM       12
F4P2      FORM      4.2
F5P2      FORM      5.2
F7P2      FORM      7.2
F9P2      FORM      9.2
F12P2     FORM      12.2
F12       FORM      12
FTGSTEXC  DIM       14
FTGSTAMN  DIM       14
FTOTINV   DIM       14
FLGIBAPT  FORM      1
FORM3     FORM      3
FORM5     FORM      5
HEADLENG  FORM      3
HEADTAIL  FORM      1
MAXCOLNO  FORM      3
MAXLENGT  FORM      3
PAIDAMT   FORM      12.2
PAIDFLG   FORM      1
PRNTSTRT  FORM      3
QTYDIM9   DIM       9
SAVEDEB   DIM       8
SAVETOT   FORM      12.2
SAVETAX   FORM      12.2
SAVUR1    DIM       25
SAVUR2    DIM       25
SAVUD1    DIM       8
SAVUD2    DIM       8
SAVUY1    DIM       1
SAVUY2    DIM       1
SAVUC1    DIM       3
SAVUC2    DIM       3
SVTOTALS  FORM      12.2
STAMESS1  DIM       30
STAMESS2  DIM       30
STARTINV  FORM      1
STRINV    DIM       12
TAILLENG  FORM      3
TMPLTFLG  FORM      1
TOTALCRD  FORM      12.2
TOTDIM12  DIM       12
TGSTEXCV  FORM      12.2
TGSTAMNT  FORM      12.2
TRANLINE  FORM      3
VARIABLE  DIM       127
X70       INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
Z40       INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
.-----------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBADEB25
.   Function      :   Invoice Processing                      
.   Generated  On :   18/06/2014
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       AUPCDVAR/INC
          INC       DEBBICFD/INC
          INC       DEBBILFD/INC
          INC       DEBCODFD/INC
          INC       DEBCONFD/INC
          INC       DEBDBTFD/INC
          INC       DEBDCMFD/INC
          INC       DEBDEPFD/INC
          INC       DEBDKIFD/INC
          INC       DEBFDTFD/INC
          INC       DEBFNOFD/INC
          INC       DEBFTHFD/INC
          INC       DEBICMFD/INC
          INC       DEBINVDF    
          INC       DEBITMFD/INC
          INC       DEBLINFD/INC
          INC       DEBOUTDF    
          INC       DEBPTYFD/INC
          INC       DEBSECFD/INC
          INC       DEBTERFD/INC
          INC       IBACONFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       IBAPRNFD/INC
          INC       IBATMDFD/INC
          INC       IBATMHFD/INC
          INC       PATCONFD/INC
          INC       PATDSCFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATSNAFD/INC
          INC       PATVISFD/INC
          INC       PMSVX1FD/INC
          INC       TFILEVAR/INC
          INC       VARGBCRN/INC
          INC       WEBERRFD/INC
.=========================
.Local Variable Definition
.-------------------------
TOTALINV  FORM     12.2 * Scr 01 Fld    21
DBDBUC1D  DIM      35 * Scr 01 Fld    34
DBDBUC2D  DIM      35 * Scr 01 Fld    35
DBDBUC3D  DIM      35 * Scr 01 Fld    36
DBDBUC4D  DIM      35 * Scr 01 Fld    37
DBDBWRND  DIM      35 * Scr 01 Fld    38
INVDATE   DIM       8 * Scr 01 Fld    40
.
.    Multi Item Key Fields Scr 01 Fld    41
.-------------------------------------------------------
DBBI2NAM  INIT      "DBBI2"
DBBI2END  FORM      1   * End Display
DBBI2SNO  FORM      5   * Number of Items on the Screen
DBBI2MKY  DIM       127 * Match Key 
DBBI2EKY  DIM       127 * End Key
DBBI2SKY  DIM       127 * Start Key
DBBI2IDX  INIT      " 132 UC1-5"
DBBI2FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
DBBI2FNM  DIM       8  * Filename
DBBI2CNT  FORM      3  * Number of Items on Screen
TOTALCHG  FORM     12.2 * Scr 01 Fld    55
.
.Word Processor File * Scr 01 Fld    67
.
NAMDBDC1  INIT      "Wdbdc1"
FILDBDC1  DIM       8
.
.
.Word Processor File * Scr 02 Fld    41
.
NAMDBBC1  INIT      "Wdbbc1"
FILDBBC1  DIM       8
.
DBBIUC1D  DIM      35 * Scr 02 Fld    45
DBBIUC2D  DIM      35 * Scr 02 Fld    46
DBBIUC3D  DIM      35 * Scr 02 Fld    47
DBBIUC4D  DIM      35 * Scr 02 Fld    48
TOTALAMT  FORM     12.2 * Scr 02 Fld    50
.
.    Multi Item Key Fields Scr 03 Fld    61
.-------------------------------------------------------
DBFD1NAM  INIT      "DBFD1"
DBFD1END  FORM      1   * End Display
DBFD1SNO  FORM      5   * Number of Items on the Screen
DBFD1MKY  DIM       127 * Match Key 
DBFD1EKY  DIM       127 * End Key
DBFD1SKY  DIM       127 * Start Key
DBFD1IDX  INIT      " 132 UC1-5"
DBFD1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
DBFD1FNM  DIM       8  * Filename
DBFD1CNT  FORM      3  * Number of Items on Screen
FROMINV   DIM      12 * Scr 05 Fld     5
TOINV     DIM      12 * Scr 05 Fld     6
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBADEB25"
PRGNAM    INIT      "Invoice Processing                      "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SELPRT00
          CALL      SC00L000
          CLOSE     DBBI2FL1,DELETE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBDC1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBBC1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBDC1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   81",AUDTSECT
          MOVE      "  9",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudcd";
            OPEN      DEBAUDCD,"debaudcd"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 10",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debauddb";
            OPEN      DEBAUDDB,"debauddb"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 11",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudde";
            OPEN      DEBAUDDE,"debaudde"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 12",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudit";
            OPEN      DEBAUDIT,"debaudit"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 13",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudpt";
            OPEN      DEBAUDPT,"debaudpt"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 14",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudse";
            OPEN      DEBAUDSE,"debaudse"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 15",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudte";
            OPEN      DEBAUDTE,"debaudte"
          ENDIF
          DISPLAY   *P56:24,"Opening debbicaf";
          OPEN      DEBBICA1,"debbicaf"
          DISPLAY   *P56:24,"Opening debbilaf";
          OPEN      DEBBILA1,"debbilaf"
          DISPLAY   *P56:24,"Opening debbilaf";
          OPEN      DEBBILA2,"debbilaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA1,"debcodaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA2,"debcodaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA1,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA2,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA3,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdcmaf";
          OPEN      DEBDCMA1,"debdcmaf"
          DISPLAY   *P56:24,"Opening debdepaf";
          OPEN      DEBDEPA1,"debdepaf"
          DISPLAY   *P56:24,"Opening debdepaf";
          OPEN      DEBDEPA2,"debdepaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA1,"debdkiaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA2,"debdkiaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA1,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA2,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA3,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA4,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA5,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA7,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA8,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfnoaf";
          OPEN      DEBFNOA1,"debfnoaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA1,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA2,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA3,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA4,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA5,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA6,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA7,"debfthaf"
          DISPLAY   *P56:24,"Opening debicmaf";
          OPEN      DEBICMA1,"debicmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA1,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA2,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA3,"debitmaf"
          DISPLAY   *P56:24,"Opening  debdbtaf           ";
          OPEN      DEBLINA1,"debdbtaf"          
          DISPLAY   *P56:24,"Opening  debdbtaf           ";
          OPEN      DEBLINA2,"debdbtaf"          
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA1,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA2,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA3,"debptyaf"
          DISPLAY   *P56:24,"Opening debsecaf";
          OPEN      DEBSECA1,"debsecaf"
          DISPLAY   *P56:24,"Opening debsecaf";
          OPEN      DEBSECA2,"debsecaf"
          DISPLAY   *P56:24,"Opening debteraf";
          OPEN      DEBTERA1,"debteraf"
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
          DISPLAY   *P56:24,"Opening  ibatmdaf           ";
          OPEN      IBATDET1,"ibatmdaf"          
          DISPLAY   *P56:24,"Opening ibatmhaf";
          OPEN      IBATMHA1,"ibatmhaf"
          DISPLAY   *P56:24,"Opening ibatmhaf";
          OPEN      IBATMHA2,"ibatmhaf"
          DISPLAY   *P56:24,"Opening pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
          DISPLAY   *P56:24,"Opening pmsvx1af";
          OPEN      PMSVX1A2,"pmsvx1af"
          DISPLAY   *P56:24,"Opening pmsvx1af";
          OPEN      PMSVX1A3,"pmsvx1af"
          DISPLAY   *P56:24,"Opening weberraf";
          OPEN      WEBERRA1,"weberraf"
          DISPLAY   *P56:24,"Opening weberraf";
          OPEN      WEBERRA2,"weberraf"
          DISPLAY   *P56:24,"Opening weberraf";
          OPEN      WEBERRA3,"weberraf"
.--------------------------------------------------------
. Initialise Batch Screen Unique ID                          
.--------------------------------------------------------
          MOVE     ZERO,DBBI2SNO
          MOVE     "01   41",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,DBBI2SNO
            ENDIF
          ENDIF
          PACK      DBBI2FNM,ANST,DBBI2NAM,PORT
          REP       " 0",DBBI2FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      DBBI2FL1,DBBI2FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     DBBI2FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,DBBI2FNM,DBBI2IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",DBBI2FNM;
          EXECUTE   KEY80,TASKID
          OPEN      DBBI2FL1,DBBI2FNM
.--------------------------------------------------------
. Initialise Wp Filename for Debtor Notes                       
.--------------------------------------------------------
          PACK      FILDBDC1,NAMDBDC1,PORT
          REP       " 0",FILDBDC1
          DISPLAY   *P56:24,"Create & Open ",FILDBDC1;
          PREP      TEMPWORD,FILDBDC1
.
.--------------------------------------------------------
. Initialise Wp Filename for Billing Invoice Notes              
.--------------------------------------------------------
          PACK      FILDBBC1,NAMDBBC1,PORT
          REP       " 0",FILDBBC1
          DISPLAY   *P56:24,"Create & Open ",FILDBBC1;
          PREP      TEMPWORD,FILDBBC1
.
.--------------------------------------------------------
. Initialise Batch Screen Document Line Number               
.--------------------------------------------------------
          MOVE     ZERO,DBFD1SNO
          MOVE     "03   61",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,DBFD1SNO
            ENDIF
          ENDIF
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Input/Print Invoices               
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Input/Print Invoice Details        
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Charge Details                     
          ENDIF
          MATCH     "03",SCRID
          IF         @EQUAL
            CALL       PS03L000   * Re-Print Invoice                   
          ENDIF
          MATCH     "04",SCRID
          IF         @EQUAL
            CALL       PS04L000   * Print Invoices                     
          ENDIF
          MATCH     "05",SCRID
          IF         @EQUAL
            CALL       PS05L000   * Reprint Range of Invoices          
          ENDIF
          MATCH     "DB",SCRID
          IF         @EQUAL
            CALL       PSDBL000   * Debtors Masterfile Addition        
          ENDIF
          RETURN
.--------------------------------
. Screen - Input/Print Invoices               
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Input/Print Invoices               
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Input/Print Invoices               
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Input/Print Invoices               
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Input/Print Invoices               
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Input/Print Invoices               
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Input/Print Invoices               
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Input/Print Invoices               
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L105,SF00L106
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC04L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC03L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL      INVPL000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L105
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L106
          CALL      SC05L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Input/Print Invoice Details        
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Input/Print Invoice Details        
.-------------------------------------------------------
CF01L000  COMPARE   ZERO,ACCEPT
              GOTO      CF01L999 IF EQUAL
          MOVE      SP70,DBDBDEB 
          MOVE      SP70,NADLINE1
          MOVE      SP70,NADLINE2
          MOVE      SP70,NADLINE3
          MOVE      SP70,NADLINE4
          MOVE      SP70,NADLINE5
          MOVE      SP70,DBFHUR1 
          MOVE      SP70,DBFHUR2 
          MOVE      SP70,DBDBPH1 
          MOVE      SP70,DBDBPH2 
          MOVE      SP70,DBDBPH3 
          MOVE      SP70,DBDBCON 
          MOVE      ZERO,DBDBACT 
          MOVE      ZERO,DBDBSTA 
          MOVE      ZERO,DBDBTEX 
          MOVE      SP70,DBDBTER 
          MOVE      SP70,DBDBWRN 
          MOVE      ZERO,TOTALINV
          MOVE      SP70,DBDBPUR 
          MOVE      ZERO,DBDBBAD 
          MOVE      SP70,DBDBSORT
          MOVE      SP70,DBDBUR2 
          MOVE      SP70,DBDBUD1 
          MOVE      SP70,DBDBUD2 
          MOVE      SP70,DBDBUY1 
          MOVE      SP70,DBDBUY2 
          MOVE      SP70,DBDBUC1 
          MOVE      SP70,DBDBUC2 
          MOVE      SP70,DBDBUC3 
          MOVE      SP70,DBDBUC4 
          MOVE      SP70,DBDBUC1D
          MOVE      SP70,DBDBUC2D
          MOVE      SP70,DBDBUC3D
          MOVE      SP70,DBDBUC4D
          MOVE      SP70,DBDBWRND
          MOVE      SP70,DBTEDES 
          MOVE      SP70,INVDATE 
          MOVE      SP70,DBBIUNI 
          MOVE      SP70,DBBISTA 
          MOVE      SP70,DBBIDAT 
          MOVE      SP70,DBBITIM 
          MOVE      SP70,DBBIUID 
          MOVE      SP70,DBBIITM 
          MOVE      SP70,DBBISDAT
          MOVE      SP70,DBBIDREF
          MOVE      SP70,DBBIOREF
          MOVE      ZERO,DBBIQTY 
          MOVE      ZERO,DBBIPRI 
          MOVE      ZERO,DBBITOT 
          MOVE      ZERO,DBBITRT 
          MOVE      ZERO,DBBITAX 
          MOVE      ZERO,TOTALCHG
          MOVE      SP70,DBITDES 
          MOVE      SP70,DBBIGST 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Input/Print Invoice Details        
.--------------------------------------------------------
KY01L000
.
KY01L110
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE2
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE3
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE4
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE5
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH3 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          CALL      MVACCEPT
          MOVE      DBDBDEB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE1,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE2,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE3,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE4,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE5,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH3,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Input/Print Invoice Details        
.---------------------------------------------------------
WP01L000
          PREP     TEMPWORD,FILDBDC1
          PACK     KEY11,DBDBDEB,SP70
          MOVE     KEY11,SAVKEY80
          SETLPTR  SAVKEY80,8 
          CALL      RDDBDC1 
          IF        OVRCD=0
            CALL      RPDBDC1 
          ENDIF
WP01L100
          CALL     RKDBDC1 
          BRANCH   OVRCD,WP01L105
          PACK     KEY11,DBDCDEB,DBDCLIN
          MATCH    SAVKEY80,KEY11   
          GOTO     WP01L105 IF NOT EQUAL
          PACK     VAR,DBDCCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBDCCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP01L100
WP01L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Input/Print Invoice Details        
.---------------------------------------------------------
LM01L000
.---------------------------------------------------------
. Load for :    41 Unique ID                          
.---------------------------------------------------------
          UNPACK    SP70,DBBIDEB,DBBISTA,DBBIUNI
          PACK      KEY15,DBDBDEB,THREE,SP70
          MOVE      KEY15,DBBI2EKY
          STRIP     DBBI2SKY
          SETLPTR   DBBI2EKY,9
          MOVE      DBBI2EKY,DBBI2SKY
          CALL      RDDBBI2 
          IF        OVRCD=0
            CALL      RPDBBI2 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP01L000
          MOVE     ZERO,DBBI2CNT
          MOVE     ZERO,DBBI2END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP01L600
          MATCH    PRGID,SCPSPID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP01L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L101,DP01L102,DP01L103,DP01L010:
                            DP01L104,DP01L105,DP01L106,DP01L107:
                            DP01L108,DP01L109,DP01L110,DP01L111:
                            DP01L112,DP01L113,DP01L114,DP01L115:
                            DP01L116,DP01L010,DP01L010,DP01L010:
                           DP01L010,DP01L010,DP01L010,DP01L010:
                           DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010
          GOTO      DP01L010
.
DP01L101
          PACK      DBBI2MKY,SP70,SP70
          CALL      UPTDBBI2
          IF        DBBI2END=0
            CALL      RKDBBI2 
            IF        OVRCD=0
              PACK      DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
              MATCH     DBBI2EKY,DBBI2MKY
              IF        @EQUAL
                MOVE      ZERO,DBBI2END
                ADD       ONE,DBBI2CNT
                CALL      UPTDBBI2
          CALL      REDITM00
                MOVE      DBBIUNI,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,DBBI2END
              ENDIF
            ELSE
              MOVE      ONE,DBBI2END
            ENDIF
          ENDIF
          IF        DBBI2END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L102
          IF        DBBI2END=0
            MOVE      DBBISTA,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L103
          IF        DBBI2END=0
            UNPACK    DBBIDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L104
          IF        DBBI2END=0
            MOVE      DBBIUID,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L105
          IF        DBBI2END=0
            MOVE      DBBIITM,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L106
          IF        DBBI2END=0
            UNPACK    DBBISDAT,CCENT,CYEAR,CMON,CDAY          
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L107
          IF        DBBI2END=0
            MOVE      DBBIDREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L108
          IF        DBBI2END=0
            MOVE      DBBIOREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L109
          IF        DBBI2END=0
            MOVE      DBBIQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L110
          IF        DBBI2END=0
            MOVE      DBBIPRI,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L111
          IF        DBBI2END=0
            MOVE      DBBITOT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L112
          IF        DBBI2END=0
            MOVE      DBBITRT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L113
          IF        DBBI2END=0
            MOVE      DBBITAX,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L114
          IF        DBBI2END=0
            MOVE      TOTALCHG,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L115
          IF        DBBI2END=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L116
          IF        DBBI2END=0
            MOVE      DBBIGST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
DP01L600
          MATCH    "DBBI2",NAMSSFFI
          GOTO     DP01L605 IF NOT EQUAL
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBWRN,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     DP01L999
DP01L605
DP01L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP01L000
.
          MATCH    "DBBI2",NAMSSFFI
          GOTO     FP01L105 IF NOT EQUAL
          PACK     KEY15,DBBI2SKY,SP70
          CALL     RDDBBI2  * Start
          IF       OVRCD=0
            CALL     RPDBBI2  * Start
          ENDIF
          CALL     DP01L000
          GOTO     FP01L999
FP01L105
FP01L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP01L000
.
          MATCH    "DBBI2",NAMSSFFI
          GOTO     LP01L105 IF NOT EQUAL
          PACK     KEY15,DBBI2SKY,Z70
          CALL     RSDBBI2  * End
          IF       OVRCD=1
            CALL     RPDBBI2 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBBI2SNO
            CALL     RPDBBI2 
            IF       OVRCD=1
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            PACK     DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
            MATCH    DBBI2EKY,DBBI2MKY
            IF       !@EQUAL
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     LP01L999
LP01L105
LP01L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP01L000
.
          MATCH    "DBBI2",NAMSSFFI
          GOTO     PP01L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP01L105
          CALL      RFTDBBI2
          BRANCH   OVRCD,PP01L115
          MOVE      DBBI2MKY,KEY15 
          CALL      RSDBBI2 
PP01L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=DBBI2SNO
            CALL     RPDBBI2 
            IF       OVRCD=1
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            PACK     DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
            MATCH    DBBI2EKY,DBBI2MKY
            IF       !@EQUAL
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     PP01L999
PP01L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBBI2SNO
            CALL     RKDBBI2 
            IF       OVRCD=1
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            PACK     DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
            MATCH    DBBI2EKY,DBBI2MKY
            IF       !@EQUAL
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP01L999
PP01L120
PP01L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP01L000
          MATCH    "DBBI2",NAMSSFFI
          GOTO     NP01L115 IF NOT EQUAL
NP01L105
          CALL     RKDBBI2 
          BRANCH   OVRCD,NP01L110
          PACK     DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
          MATCH    DBBI2EKY,DBBI2MKY
          GOTO     NP01L110 IF NOT EQUAL
          CALL     RPDBBI2 
          CALL     DP01L000
          GOTO     NP01L999
NP01L110
          CALL     RPDBBI2 
          BEEP
          GOTO     NP01L999
NP01L115
NP01L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT01L000
CT01L105
CT01L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Input/Print Invoice Details        
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    41 Unique ID                          
.---------------------------------------------------------
UPTDBBI2
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      DBBI2FL1,KEY5;ANS
          IF        @OVER
            WRITE     DBBI2FL1,KEY5;SCPSROW,SCPSCOL,DBBI2MKY
          ELSE
            UPDATE    DBBI2FL1;SCPSROW,SCPSCOL,DBBI2MKY
          ENDIF
          RETURN
RDTDBBI2
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      DBBI2FL1,KEY5;SCPSROW,SCPSCOL,DBBI2MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTDBBI2
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      DBBI2FL1,KEY5;;
          READKS    DBBI2FL1;SCPSROW,SCPSCOL,DBBI2MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,DBBI2MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Input/Print Invoice Details        
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      FP01L000
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Input/Print Invoice Details        
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L101,PS01L102,PS01L103,PS01L104:
                            PS01L105,PS01L106,PS01L107,PS01L108:
                            PS01L109,PS01L110,PS01L111,PS01L112:
                            PS01L113,PS01L114,PS01L115,PS01L116:
                            PS01L117,PS01L118,PS01L119,PS01L120:
                            PS01L121,PS01L122,PS01L123,PS01L124:
                            PS01L125,PS01L126,PS01L127,PS01L128:
                            PS01L129,PS01L130,PS01L131,PS01L132:
                            PS01L133,PS01L134,PS01L135,PS01L136:
                            PS01L999,PS01L999,PS01L999,PS01L137:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L138,PS01L999:
                            PS01L999,PS01L999
          GOTO     PS01L999
.
PS01L101
          MOVE      NADLINE1,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      NADLINE2,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      NADLINE3,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      NADLINE4,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      NADLINE5,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      DBFHUR1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      DBFHUR2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBACT,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBSTA,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBTEX,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      DBDBTER,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      DBDBWRN,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      TOTALINV,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      DBDBPUR,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBBAD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L120
          MOVE      DBDBSORT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L121
          MOVE      DBDBUR2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L122
          UNPACK    DBDBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L123
          UNPACK    DBDBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L124
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L125
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L126
          MOVE      DBDBUC1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L127
          MOVE      DBDBUC2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L128
          MOVE      DBDBUC3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L129
          MOVE      DBDBUC4,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L130
          MOVE      DBDBUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L131
          MOVE      DBDBUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L132
          MOVE      DBDBUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L133
          MOVE      DBDBUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L134
          MOVE      DBDBWRND,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L135
          MOVE      DBTEDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L136
          UNPACK    INVDATE,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L137
          MOVE      DBBITIM,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L138
          MOVE     FILDBDC1,WORDNAME
          CALL     DISPWORD
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Input/Print Invoice Details        
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L103,SF01L104,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L105:
                            SF01L106,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L107,SF01L108,SF01L006,SF01L006:
                           SF01L109,SF01L110,SF01L111,SF01L112:
                            SF01L113,SF01L114
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L103,SF01L104,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L105:
                            SF01L106,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L111,SF01L020:
                            SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DINV0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L102
          CALL      SING0000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L103
          CALL     SELECTED
          STRIP     DBFHUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBFHUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBFHUR1 
          SFORMAT   VAR,127
          ENDSET    DBFHUR1 
          APPEND    SP70,DBFHUR1 
          RESET     DBFHUR1 
          CMATCH    EXITCHAR,DBFHUR1 
          GOTO      SF01L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBFHUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
          ENDIF
          MOVE      DBFHUR1,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L104
          CALL     SELECTED
          STRIP     DBFHUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBFHUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBFHUR2 
          SFORMAT   VAR,127
          ENDSET    DBFHUR2 
          APPEND    SP70,DBFHUR2 
          RESET     DBFHUR2 
          CMATCH    EXITCHAR,DBFHUR2 
          GOTO      SF01L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBFHUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
          ENDIF
          MOVE      DBFHUR2,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L105
          CALL      DEFDATE1
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EIDAT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          UNPACK    INVDATE,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
          CALL      SELECTED
          BRANCH    EXIT,SF01L001
          COMPARE   ONE,ACCEPT
          GOTO      SF01L001 IF EQUAL
          CALL      RDTDBBI2
          IF        OVRCD=1
            BEEP
            GOTO      SF01L001
          ENDIF
          MATCH     SP70,DBBI2MKY
          IF        @EQUAL
            BEEP
            GOTO      SF01L001
          ENDIF
          MOVE      DBBI2MKY,KEY15 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SELT0000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTDBBI2
          IF        OVRCD=1
            CALL      FP01L000
          ELSE
            MOVE      DBBI2MKY,KEY15 
            CALL      RSDBBI2 
            CALL      RPDBBI2 
            CALL      DP01L000
          ENDIF
          GOTO     SF01L001
.
SF01L107
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      NP01L000
          GOTO     SF01L001
.
SF01L108
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      PP01L000
          GOTO     SF01L001
.
SF01L109
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L110
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      LP01L000
          GOTO     SF01L001
.
SF01L111
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "10",SCPSROW
              MOVE     "  5",SCPSCOL
              MOVE     " 70",SCPSLEN
              MOVE     "10",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILDBDC1,WORDNAME
              MOVE     " 12",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILDBDC1,WORDNAME
            MOVE     " 12",WORDTYPE
            IF       ACCEPT=0
               CALL     EDITWORD
            ENDIF
          ENDIF
          GOTO     SF01L001
.
SF01L112
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      ADDI0000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF01L000
          GOTO      SF01L001
.
SF01L113
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      GENI0000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF01L000
          GOTO      SF01L001
.
SF01L114
          CALL      EXIT0000
          MOVE      ONE,EXIT
          GOTO      SF01L999
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Charge Details                     
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 5",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Charge Details                     
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Charge Details                     
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Charge Details                     
.---------------------------------------------------------
WP02L000
          PREP     TEMPWORD,FILDBBC1
          PACK     KEY17,DBBIDEB,DBBIUNI,SP70
          MOVE     KEY17,SAVKEY80
          SETLPTR  SAVKEY80,14
          CALL      RDDBBC1 
          IF        OVRCD=0
            CALL      RPDBBC1 
          ENDIF
WP02L100
          CALL     RKDBBC1 
          BRANCH   OVRCD,WP02L105
          PACK     KEY17,DBBCDEB,DBBCUNI,DBBCLIN
          MATCH    SAVKEY80,KEY17   
          GOTO     WP02L105 IF NOT EQUAL
          PACK     VAR,DBBCCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBBCCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP02L100
WP02L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Charge Details                     
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Charge Details                     
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Charge Details                     
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L101,PS02L102,PS02L103,PS02L104:
                            PS02L105,PS02L106,PS02L107,PS02L108:
                            PS02L109,PS02L110,PS02L111,PS02L112:
                            PS02L113,PS02L114,PS02L115,PS02L116:
                            PS02L117,PS02L118,PS02L119,PS02L120:
                            PS02L121,PS02L122,PS02L123,PS02L124:
                            PS02L125,PS02L126,PS02L127,PS02L128:
                            PS02L129,PS02L130,PS02L131,PS02L132:
                            PS02L133,PS02L134,PS02L135,PS02L136:
                            PS02L137,PS02L138,PS02L139,PS02L140:
                            PS02L141,PS02L142,PS02L143,PS02L144:
                            PS02L999,PS02L145,PS02L146,PS02L147
          GOTO     PS02L999
.
PS02L101
          MOVE      DBBIDEB,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      DBBIUNI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      DBBISTA,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      DBBIDAT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      DBBITIM,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      DBBIUID,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      DBBIITM,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          UNPACK    DBBISDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      DBBIDREF,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          MOVE      DBBIOREF,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      DBBIQTY,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          MOVE      DBBIPRI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          MOVE      DBBITOT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          MOVE      DBBITRT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          MOVE      DBBITAX,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L116
          MOVE      DBBIUR1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L117
          MOVE      DBBIUR2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L118
          UNPACK    DBBIUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L119
          UNPACK    DBBIUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L120
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBBIUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L121
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBBIUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L122
          MOVE      DBBIUC1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L123
          MOVE      DBBIUC2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L124
          MOVE      DBBIUC3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L125
          MOVE      DBBIUC4,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L126
          MOVE      DBDBNA1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L127
          MOVE      DBDBNA2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L128
          MOVE      DBDBAD1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L129
          MOVE      DBDBAD2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L130
          MOVE      DBDBAD3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L131
          MOVE      DBDBAD4,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L132
          MOVE      DBDBPC,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L133
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L134
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L135
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L136
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L137
          MOVE     FILDBBC1,WORDNAME
          CALL     DISPWORD
          GOTO     PS02L999
.
PS02L138
          MOVE      DBITDES,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L139
          MOVE      DBITIDE,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L140
          MOVE      DBITPRI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L141
          MOVE      DBBIUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L142
          MOVE      DBBIUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L143
          MOVE      DBBIUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L144
          MOVE      DBBIUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L145
          MOVE      TOTALAMT,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L146
          MOVE      DBBIGST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L147
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Charge Details                     
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L104,SF02L105:
                            SF02L106,SF02L107,SF02L108,SF02L109:
                            SF02L110,SF02L111,SF02L112,SF02L113:
                            SF02L114,SF02L115,SF02L116,SF02L117:
                            SF02L118,SF02L119,SF02L120,SF02L121:
                            SF02L122,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L123,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L124,SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L104,SF02L105:
                            SF02L106,SF02L107,SF02L108,SF02L109:
                            SF02L110,SF02L111,SF02L112,SF02L113:
                            SF02L114,SF02L115,SF02L116,SF02L117:
                            SF02L118,SF02L119,SF02L120,SF02L121:
                            SF02L122,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L123,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L124,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          CALL      POST0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      CANC0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L104
.
.
          MOVE      "   42",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   43",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITIDE 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   44",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITPRI 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESALI000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIITM,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   42",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   43",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITIDE,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   44",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITPRI,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
          CALL      DATECURR
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBBISDAT,CCENT,CYEAR,CMON,CDAY          
          UNPACK    DBBISDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L106
          CALL     SELECTED
          STRIP     DBBIDREF
          SFORMAT   VAR,SCPSLEN
          MOVE      DBBIDREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBBIDREF
          SFORMAT   VAR,127
          ENDSET    DBBIDREF
          APPEND    SP70,DBBIDREF
          RESET     DBBIDREF
          CMATCH    EXITCHAR,DBBIDREF
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBBIDREF
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L106
            ENDIF
          ENDIF
          MOVE      DBBIDREF,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L107
          CALL     SELECTED
          STRIP     DBBIOREF
          SFORMAT   VAR,SCPSLEN
          MOVE      DBBIOREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBBIOREF
          SFORMAT   VAR,127
          ENDSET    DBBIOREF
          APPEND    SP70,DBBIOREF
          RESET     DBBIOREF
          CMATCH    EXITCHAR,DBBIOREF
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBBIOREF
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L107
            ENDIF
          ENDIF
          MOVE      DBBIOREF,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EQUTY000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L108
            ENDIF
            BRANCH    EXIT,SF02L108,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIQTY,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPRIC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L109
            ENDIF
            BRANCH    EXIT,SF02L109,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIPRI,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L110
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETOTL000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L110
            ENDIF
            BRANCH    EXIT,SF02L110,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBITOT,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L111
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,DBBITRT 
          IF        SCPSMAN=1
            COMPARE   ZERO,DBBITRT 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L111
            ENDIF
          ENDIF
          MOVE      DBBITRT,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L112
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETAXA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L112
            ENDIF
            BRANCH    EXIT,SF02L112,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBITAX,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L113
          CALL     SELECTED
          STRIP     DBBIUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBBIUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBBIUR1 
          SFORMAT   VAR,127
          ENDSET    DBBIUR1 
          APPEND    SP70,DBBIUR1 
          RESET     DBBIUR1 
          CMATCH    EXITCHAR,DBBIUR1 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBBIUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L113
            ENDIF
          ENDIF
          MOVE      DBBIUR1,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L114
          CALL     SELECTED
          STRIP     DBBIUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBBIUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBBIUR2 
          SFORMAT   VAR,127
          ENDSET    DBBIUR2 
          APPEND    SP70,DBBIUR2 
          RESET     DBBIUR2 
          CMATCH    EXITCHAR,DBBIUR2 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBBIUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L114
            ENDIF
          ENDIF
          MOVE      DBBIUR2,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L115
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBBIUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBBIUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L116
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBBIUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBBIUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L117
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBBIUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBBIUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L118
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBBIUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBBIUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L119
.
.
          MOVE      "   45",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBBIUC1D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L119
            ENDIF
            BRANCH    EXIT,SF02L119,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIUC1,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   45",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIUC1D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L120
.
.
          MOVE      "   46",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBBIUC2D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L120
            ENDIF
            BRANCH    EXIT,SF02L120,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIUC2,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   46",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIUC2D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L121
.
.
          MOVE      "   47",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBBIUC3D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L121
            ENDIF
            BRANCH    EXIT,SF02L121,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIUC3,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   47",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIUC3D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L122
.
.
          MOVE      "   48",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBBIUC4D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L122
            ENDIF
            BRANCH    EXIT,SF02L122,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIUC4,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   48",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIUC4D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L123
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "17",SCPSROW
              MOVE     "  5",SCPSCOL
              MOVE     " 50",SCPSLEN
              MOVE     " 4",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILDBBC1,WORDNAME
              MOVE     "  8",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILDBBC1,WORDNAME
            MOVE     "  8",WORDTYPE
            CALL     EDITWORD
          ENDIF
          GOTO     SF02L001
.
SF02L124
.
.
          MOVE      "   52",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,IBGSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGST0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L124
            ENDIF
            BRANCH    EXIT,SF02L124,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIGST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   52",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      IBGSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.--------------------------------
. Screen - Re-Print Invoice                   
.--------------------------------
SC03L000
SC03L100
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC03L200
          CALL      CF03L000 * Clear Fields
SC03L300
          CALL      KY03L000 * Enter Key Fields
          BRANCH    EXIT,SC03L999,SC03L999
SC03L400
          CALL      WP03L000 * Load any WP Details
SC03L500
          CALL      LM03L000 * Load any Batch Details
SC03L600
          CALL      DF03L000 * Display Fields
SC03L700
          CALL      SF03L000 * Select Fields
          BRANCH    EXIT,SC03L100,SC03L100,SC03L200
SC03L800
SC03L900
SC03L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Re-Print Invoice                   
.-------------------------------------------------------
CF03L000
          MOVE      SP70,DBDBDEB 
          MOVE      SP70,DBDBNA1 
          MOVE      SP70,DBDBNA2 
          MOVE      SP70,DBDBAD1 
          MOVE      SP70,DBDBAD2 
          MOVE      SP70,DBDBAD3 
          MOVE      SP70,DBDBAD4 
          MOVE      SP70,DBDBPC  
          MOVE      SP70,DBDBPH1 
          MOVE      SP70,DBDBPH2 
          MOVE      SP70,DBDBPH3 
          MOVE      SP70,DBDBCON 
          MOVE      ZERO,DBDBACT 
          MOVE      ZERO,DBDBSTA 
          MOVE      ZERO,DBDBTEX 
          MOVE      SP70,DBDBTER 
          MOVE      SP70,DBDBWRN 
          MOVE      SP70,DBDBLIN 
          MOVE      SP70,DBDBPUR 
          MOVE      ZERO,DBDBBAD 
          MOVE      SP70,DBDBSORT
          MOVE      SP70,DBDBUR2 
          MOVE      SP70,DBDBUD1 
          MOVE      SP70,DBDBUD2 
          MOVE      SP70,DBDBUY1 
          MOVE      SP70,DBDBUY2 
          MOVE      SP70,DBDBUC1 
          MOVE      SP70,DBDBUC2 
          MOVE      SP70,DBDBUC3 
          MOVE      SP70,DBDBUC4 
          MOVE      SP70,DBDBUC1D
          MOVE      SP70,DBDBUC2D
          MOVE      SP70,DBDBUC3D
          MOVE      SP70,DBDBUC4D
          MOVE      SP70,DBDBWRND
          MOVE      SP70,DBTEDES 
          MOVE      SP70,DBLNNA1 
          MOVE      SP70,DBFHDOC 
          MOVE      SP70,DBFHDTY 
          MOVE      SP70,DBFHDDAT
          MOVE      SP70,DBFHTER 
          MOVE      ZERO,DBFHTOT 
          MOVE      ZERO,DBFHTAX 
          MOVE      SP70,DBFHDPRT
          MOVE      SP70,DBFHDSTA
          MOVE      SP70,DBFHCDAT
          MOVE      SP70,DBFHCTIM
          MOVE      SP70,DBFHCUSR
          MOVE      SP70,DBFHUR1 
          MOVE      SP70,DBFHUR2 
          MOVE      SP70,DBFHUD1 
          MOVE      SP70,DBFHUD2 
          MOVE      SP70,DBFHUY1 
          MOVE      SP70,DBFHUY2 
          MOVE      SP70,DBFHUC1 
          MOVE      SP70,DBFHUC2 
          MOVE      ZERO,DBFHDTOT
          MOVE      SP70,DBFDDLN 
          MOVE      SP70,DBFDINV 
          MOVE      SP70,DBFDPDAT
          MOVE      SP70,DBFDGLS 
          MOVE      SP70,DBFDITM 
          MOVE      SP70,DBFDSDAT
          MOVE      SP70,DBFDDREF
          MOVE      SP70,DBFDOREF
          MOVE      ZERO,DBFDQTY 
          MOVE      ZERO,DBFDPRI 
          MOVE      ZERO,DBFDTOT 
          MOVE      ZERO,DBFDTAX 
          MOVE      ZERO,TOTALAMT
          MOVE      SP70,DBITDES 
          MOVE      SP70,DBFDGST 
CF03L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Re-Print Invoice                   
.--------------------------------------------------------
KY03L000
.
KY03L110
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBNA1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBNA2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBAD1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBAD2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBAD3 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBAD4 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH3 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBCON 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBACT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBSTA 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBTEX 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBTER 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBWRN 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY03L900,KY03L900
          MOVE      ZERO,ACCEPT
          MOVE      DBDBDEB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBNA1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBNA2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBAD1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBAD2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBAD3,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBAD4,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPC,VAR       
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH3,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBCON,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NO,YESNO
            MOVE      ZERO,FORM2
            MOVE      DBDBACT,FORM2    
            LOAD      YESNO,FORM2,YES
            MOVE      YESNO,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NO,YESNO
            MOVE      ZERO,FORM2
            MOVE      DBDBSTA,FORM2    
            LOAD      YESNO,FORM2,YES
            MOVE      YESNO,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NO,YESNO
            MOVE      ZERO,FORM2
            MOVE      DBDBTEX,FORM2    
            LOAD      YESNO,FORM2,YES
            MOVE      YESNO,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBTER,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBWRN,VAR      
            CALL      DISPITEM
          ENDIF
.
KY03L120
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EINVN000
          BRANCH    EXIT,KY03L110,KY03L900
          MOVE      ZERO,ACCEPT
          MOVE      DBFHDOC,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY03L999
.
KY03L900  MOVE      ONE,EXIT
KY03L999  RETURN
.---------------------------------------------------------
. Load WP files for : Re-Print Invoice                   
.---------------------------------------------------------
WP03L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Re-Print Invoice                   
.---------------------------------------------------------
LM03L000
.---------------------------------------------------------
. Load for :    61 Document Line Number               
.---------------------------------------------------------
          UNPACK    SP70,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN
          PACK      KEY24,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          MOVE      KEY24,DBFD1EKY
          STRIP     DBFD1SKY
          SETLPTR   DBFD1EKY,21
          MOVE      DBFD1EKY,DBFD1SKY
          CALL      RDDBFD1 
          IF        OVRCD=0
            CALL      RPDBFD1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP03L000
          MOVE     ZERO,DBFD1CNT
          MOVE     ZERO,DBFD1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP03L600
          MATCH    PRGID,SCPSPID
          GOTO     DP03L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP03L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP03L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L101,DP03L102,DP03L103,DP03L104:
                            DP03L105,DP03L106,DP03L107,DP03L108:
                            DP03L109,DP03L110,DP03L111,DP03L112:
                            DP03L113,DP03L114,DP03L115,DP03L010:
                           DP03L010,DP03L010,DP03L010,DP03L010:
                           DP03L010,DP03L010,DP03L010,DP03L010
          GOTO      DP03L010
.
DP03L101
          IF        DBFD1END=0
            CALL      RKDBFD1 
            IF        OVRCD=0
              PACK      DBFD1MKY,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN                                                
              MATCH     DBFD1EKY,DBFD1MKY
              IF        @EQUAL
                MOVE      ZERO,DBFD1END
                ADD       ONE,DBFD1CNT
          CALL      REDDET00
                MOVE      DBFDDLN,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,DBFD1END
              ENDIF
            ELSE
              MOVE      ONE,DBFD1END
            ENDIF
          ENDIF
          IF        DBFD1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L102
          IF        DBFD1END=0
            MOVE      DBFDINV,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L103
          IF        DBFD1END=0
            UNPACK    DBFDPDAT,CCENT,CYEAR,CMON,CDAY          
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L104
          IF        DBFD1END=0
            MOVE      NO,YESNO
            MOVE      ZERO,FORM2
            MOVE      DBFDGLS,FORM2    
            LOAD      YESNO,FORM2,YES
            MOVE      YESNO,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L105
          IF        DBFD1END=0
            MOVE      DBFDITM,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L106
          IF        DBFD1END=0
            UNPACK    DBFDSDAT,CCENT,CYEAR,CMON,CDAY          
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L107
          IF        DBFD1END=0
            MOVE      DBFDDREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L108
          IF        DBFD1END=0
            MOVE      DBFDOREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L109
          IF        DBFD1END=0
            MOVE      DBFDQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L110
          IF        DBFD1END=0
            MOVE      DBFDPRI,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L111
          IF        DBFD1END=0
            MOVE      DBFDTOT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L112
          IF        DBFD1END=0
            MOVE      DBFDTAX,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L113
          IF        DBFD1END=0
            MOVE      TOTALAMT,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L114
          IF        DBFD1END=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L115
          IF        DBFD1END=0
            MOVE      DBFDGST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
DP03L600
          MATCH    "DBFD1",NAMSSFFI
          GOTO     DP03L605 IF NOT EQUAL
          GOTO     DP03L999
DP03L605
DP03L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP03L000
.
          MATCH    "DBFD1",NAMSSFFI
          GOTO     FP03L105 IF NOT EQUAL
          PACK     KEY24,DBFD1SKY,SP70
          CALL     RDDBFD1  * Start
          IF       OVRCD=0
            CALL     RPDBFD1  * Start
          ENDIF
          CALL     DP03L000
          GOTO     FP03L999
FP03L105
FP03L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP03L000
.
          MATCH    "DBFD1",NAMSSFFI
          GOTO     LP03L105 IF NOT EQUAL
          PACK     KEY24,DBFD1SKY,Z70
          CALL     RSDBFD1  * End
          IF       OVRCD=1
            CALL     RPDBFD1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBFD1SNO
            CALL     RPDBFD1 
            IF       OVRCD=1
              MOVE     DBFD1SNO,SECTOR
            ENDIF
            PACK     DBFD1MKY,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN                                                
            MATCH    DBFD1EKY,DBFD1MKY
            IF       !@EQUAL
              MOVE     DBFD1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP03L000
          GOTO     LP03L999
LP03L105
LP03L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP03L000
.
          MATCH    "DBFD1",NAMSSFFI
          GOTO     PP03L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP03L105
          COMPARE  SECTOR,DBFD1SNO
          GOTO     PP03L110 IF EQUAL
          CALL     RPDBFD1 
          BRANCH   OVRCD,PP03L115
          PACK     DBFD1MKY,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN                                                
          MATCH    DBFD1EKY,DBFD1MKY
          GOTO     PP03L115 IF NOT EQUAL
          ADD      ONE,SECTOR
          GOTO     PP03L105
PP03L110
          MOVE     ZERO,SECTOR
          IF       DBFD1CNT=DBFD1SNO
            SUB      ONE,DBFD1CNT
          ENDIF
          WHILE    SECTOR<=DBFD1CNT
            CALL     RPDBFD1 
            IF       OVRCD=1
              MOVE     DBFD1SNO,SECTOR
            ENDIF
            PACK     DBFD1MKY,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN                                                
            MATCH    DBFD1EKY,DBFD1MKY
            IF       !@EQUAL
              MOVE     DBFD1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP03L000
          GOTO     PP03L999
PP03L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBFD1SNO
            CALL     RKDBFD1 
            IF       OVRCD=1
              MOVE     DBFD1SNO,SECTOR
            ENDIF
            PACK     DBFD1MKY,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN                                                
            MATCH    DBFD1EKY,DBFD1MKY
            IF       !@EQUAL
              MOVE     DBFD1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP03L999
PP03L120
PP03L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP03L000
          MATCH    "DBFD1",NAMSSFFI
          GOTO     NP03L115 IF NOT EQUAL
NP03L105
          CALL     RKDBFD1 
          BRANCH   OVRCD,NP03L110
          PACK     DBFD1MKY,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN                                                
          MATCH    DBFD1EKY,DBFD1MKY
          GOTO     NP03L110 IF NOT EQUAL
          CALL     RPDBFD1 
          CALL     DP03L000
          GOTO     NP03L999
NP03L110
          CALL     RPDBFD1 
          BEEP
          GOTO     NP03L999
NP03L115
NP03L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT03L000
CT03L105
CT03L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Re-Print Invoice                   
.---------------------------------------------------------
.---------------------------------------------------------
. Display Fields for : Re-Print Invoice                   
.---------------------------------------------------------
DF03L000
          BRANCH   ACCEPT,DF03L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF03L900
          MATCH    PRGID,SCPSPID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF03L010 IF NOT EQUAL
.
          CALL     PS03L000 * Display Field
          GOTO     DF03L010
DF03L900
          MOVE      "DBFD1",NAMSSFFI
          MOVE      "   61",ITMSSFFI
          CALL      FP03L000
DF03L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Re-Print Invoice                   
.---------------------------------------------------------
PS03L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L101,PS03L102,PS03L103,PS03L104:
                            PS03L105,PS03L106,PS03L107,PS03L108:
                            PS03L109,PS03L110,PS03L111,PS03L112:
                            PS03L113,PS03L114,PS03L115,PS03L116:
                            PS03L117,PS03L118,PS03L119,PS03L120:
                            PS03L121,PS03L122,PS03L123,PS03L124:
                            PS03L125,PS03L126,PS03L127,PS03L128:
                            PS03L129,PS03L130,PS03L131,PS03L132:
                            PS03L133,PS03L134,PS03L135,PS03L136:
                            PS03L999,PS03L137,PS03L138,PS03L139:
                            PS03L140,PS03L141,PS03L142,PS03L143:
                            PS03L144,PS03L145,PS03L146,PS03L147:
                            PS03L148,PS03L149,PS03L150,PS03L151:
                            PS03L152,PS03L153,PS03L154,PS03L155:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                           PS03L999,PS03L999,PS03L999,PS03L999:
                           PS03L999,PS03L999,PS03L999,PS03L999
          GOTO     PS03L999
.
PS03L101
          MOVE      DBDBNA1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L102
          MOVE      DBDBNA2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L103
          MOVE      DBDBAD1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L104
          MOVE      DBDBAD2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L105
          MOVE      DBDBAD3,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L106
          MOVE      DBDBAD4,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L107
          MOVE      DBDBPC,VAR       
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L108
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L109
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L110
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L111
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBACT,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBSTA,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBTEX,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L115
          MOVE      DBDBTER,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L116
          MOVE      DBDBWRN,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L117
          MOVE      DBDBLIN,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L118
          MOVE      DBDBPUR,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L119
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBBAD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L120
          MOVE      DBDBSORT,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L121
          MOVE      DBDBUR2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L122
          UNPACK    DBDBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L123
          UNPACK    DBDBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L124
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L125
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L126
          MOVE      DBDBUC1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L127
          MOVE      DBDBUC2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L128
          MOVE      DBDBUC3,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L129
          MOVE      DBDBUC4,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L130
          MOVE      DBDBUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L131
          MOVE      DBDBUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L132
          MOVE      DBDBUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L133
          MOVE      DBDBUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L134
          MOVE      DBDBWRND,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L135
          MOVE      DBTEDES,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L136
          MOVE      DBLNNA1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L137
          MOVE      DBFHDTY,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L138
          UNPACK    DBFHDDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L139
          MOVE      DBFHTER,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L140
          MOVE      DBFHTOT,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L141
          MOVE      DBFHTAX,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L142
          UNPACK    DBFHDPRT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L143
          UNPACK    DBFHDSTA,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L144
          UNPACK    DBFHCDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L145
          MOVE      DBFHCTIM,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L146
          MOVE      DBFHCUSR,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L147
          MOVE      DBFHUR1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L148
          MOVE      DBFHUR2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L149
          UNPACK    DBFHUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L150
          UNPACK    DBFHUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L151
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBFHUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L152
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBFHUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L153
          MOVE      DBFHUC1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L154
          MOVE      DBFHUC2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L155
          MOVE      DBFHDTOT,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
PS03L999
          RETURN
.---------------------------------------------------------
. Selections for : Re-Print Invoice                   
.---------------------------------------------------------
SF03L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF03L001  BRANCH   ACCEPT,SF03L020
.
SF03L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L006,SF03L101,SF03L102,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                           SF03L006,SF03L006,SF03L006,SF03L006:
                           SF03L103,SF03L104,SF03L105,SF03L106
SF03L006  BEEP
          GOTO     SF03L005
SF03L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF03L090
          MATCH    PRGID,SCSLPID
          GOTO     SF03L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF03L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                           SF03L020,SF03L020,SF03L020,SF03L020:
                           SF03L020,SF03L020,SF03L020,SF03L020
          GOTO     SF03L020
SF03L090  MOVE     ZERO,ACCEPT
          MOVE      "DBFD1",NAMSSFFI
          MOVE      "   61",ITMSSFFI
          CALL      FP03L000
          GOTO     SF03L001
.
SF03L101
          MOVE      ONE,EXIT
          GOTO      SF03L999
.
SF03L102
          CALL      REPR0000
          MOVE      ONE,EXIT
          GOTO      SF03L999
.
SF03L103
          MOVE      "DBFD1",NAMSSFFI
          MOVE      "   61",ITMSSFFI
          CALL      NP03L000
          GOTO     SF03L001
.
SF03L104
          MOVE      "DBFD1",NAMSSFFI
          MOVE      "   61",ITMSSFFI
          CALL      PP03L000
          GOTO     SF03L001
.
SF03L105
          MOVE      "DBFD1",NAMSSFFI
          MOVE      "   61",ITMSSFFI
          CALL      FP03L000
          GOTO     SF03L001
.
SF03L106
          MOVE      "DBFD1",NAMSSFFI
          MOVE      "   61",ITMSSFFI
          CALL      LP03L000
          GOTO     SF03L001
SF03L990  MOVE      ONE,EXIT * Exit Char Restart
SF03L999  RETURN
.--------------------------------
. Screen - Print Invoices                     
.--------------------------------
SC04L000
SC04L100
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC04L200
          CALL      CF04L000 * Clear Fields
          CALL      DEFPAR00
SC04L300
          CALL      KY04L000 * Enter Key Fields
          BRANCH    EXIT,SC04L999,SC04L999
SC04L400
          CALL      WP04L000 * Load any WP Details
SC04L500
          CALL      LM04L000 * Load any Batch Details
SC04L600
          CALL      DF04L000 * Display Fields
SC04L700
          CALL      SF04L000 * Select Fields
          BRANCH    EXIT,SC04L100,SC04L100,SC04L200
SC04L800
SC04L900
SC04L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print Invoices                     
.-------------------------------------------------------
CF04L000
          MOVE      SP70,INVDATE 
CF04L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print Invoices                     
.--------------------------------------------------------
KY04L000
          MOVE      ZERO,EXIT
          GOTO      KY04L999
.
KY04L900  MOVE      ONE,EXIT
KY04L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print Invoices                     
.---------------------------------------------------------
WP04L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print Invoices                     
.---------------------------------------------------------
LM04L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print Invoices                     
.---------------------------------------------------------
DF04L000
          BRANCH   ACCEPT,DF04L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF04L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF04L900
          MATCH    PRGID,SCPSPID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF04L010 IF NOT EQUAL
.
          CALL     PS04L000 * Display Field
          GOTO     DF04L010
DF04L900
DF04L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print Invoices                     
.---------------------------------------------------------
PS04L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS04L999,PS04L999,PS04L999,PS04L101
          GOTO     PS04L999
.
PS04L101
          UNPACK    INVDATE,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS04L999
PS04L999
          RETURN
.---------------------------------------------------------
. Selections for : Print Invoices                     
.---------------------------------------------------------
SF04L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF04L001  BRANCH   ACCEPT,SF04L020
.
SF04L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L006,SF04L101,SF04L102,SF04L103
SF04L006  BEEP
          GOTO     SF04L005
SF04L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF04L090
          MATCH    PRGID,SCSLPID
          GOTO     SF04L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF04L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L020,SF04L020,SF04L020,SF04L103
          GOTO     SF04L020
SF04L090  MOVE     ZERO,ACCEPT
          GOTO     SF04L001
.
SF04L101
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L102
          CALL      PINV0000
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L103
          CALL      DEFDATE1
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EIDAT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L103
            ENDIF
            BRANCH    EXIT,SF04L103,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          UNPACK    INVDATE,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF04L001
SF04L990  MOVE      ONE,EXIT * Exit Char Restart
SF04L999  RETURN
.--------------------------------
. Screen - Reprint Range of Invoices          
.--------------------------------
SC05L000
SC05L100
          MOVE      "05",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC05L200
          CALL      CF05L000 * Clear Fields
          CALL      DEFPAR00
SC05L300
          CALL      KY05L000 * Enter Key Fields
          BRANCH    EXIT,SC05L999,SC05L999
SC05L400
          CALL      WP05L000 * Load any WP Details
SC05L500
          CALL      LM05L000 * Load any Batch Details
SC05L600
          CALL      DF05L000 * Display Fields
SC05L700
          CALL      SF05L000 * Select Fields
          BRANCH    EXIT,SC05L100,SC05L100,SC05L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC05L800
SC05L900
SC05L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Reprint Range of Invoices          
.-------------------------------------------------------
CF05L000
          MOVE      SP70,FROMINV 
          MOVE      SP70,TOINV   
CF05L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Reprint Range of Invoices          
.--------------------------------------------------------
KY05L000
          MOVE      ZERO,EXIT
          GOTO      KY05L999
.
KY05L900  MOVE      ONE,EXIT
KY05L999  RETURN
.---------------------------------------------------------
. Load WP files for : Reprint Range of Invoices          
.---------------------------------------------------------
WP05L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Reprint Range of Invoices          
.---------------------------------------------------------
LM05L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Reprint Range of Invoices          
.---------------------------------------------------------
DF05L000
          BRANCH   ACCEPT,DF05L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF05L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF05L900
          MATCH    PRGID,SCPSPID
          GOTO     DF05L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF05L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF05L010 IF NOT EQUAL
.
          CALL     PS05L000 * Display Field
          GOTO     DF05L010
DF05L900
DF05L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Reprint Range of Invoices          
.---------------------------------------------------------
PS05L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS05L999,PS05L999,PS05L999,PS05L999:
                           PS05L101,PS05L102
          GOTO     PS05L999
.
PS05L101
          MOVE      FROMINV,VAR      
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L102
          MOVE      TOINV,VAR        
          CALL      DISPITEM
          GOTO     PS05L999
PS05L999
          RETURN
.---------------------------------------------------------
. Selections for : Reprint Range of Invoices          
.---------------------------------------------------------
SF05L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF05L001  BRANCH   ACCEPT,SF05L020
.
SF05L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF05L006,SF05L101,SF05L102,SF05L006:
                           SF05L103,SF05L006
SF05L006  BEEP
          GOTO     SF05L005
SF05L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF05L090
          MATCH    PRGID,SCSLPID
          GOTO     SF05L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF05L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF05L020,SF05L020,SF05L020,SF05L020:
                           SF05L103,SF05L020
          GOTO     SF05L020
SF05L090  MOVE     ZERO,ACCEPT
          GOTO     SF05L001
.
SF05L101
          MOVE      ZERO,EXIT
          GOTO      SF05L999
.
SF05L102
          CALL      PRTRAN00
          MOVE      ZERO,EXIT
          GOTO      SF05L999
.
SF05L103
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOINV   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RINVN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L103
            ENDIF
            BRANCH    EXIT,SF05L103,SF05L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF05L990 IF EQUAL
          ENDIF
          MOVE      FROMINV,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOINV,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF05L001
SF05L990  MOVE      FOUR,EXIT * Exit Char Exit
SF05L999  RETURN
.--------------------------------
. Screen - Debtors Masterfile Addition        
.--------------------------------
SCDBL000
SCDBL100
          MOVE      "DB",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SCDBL200
          CALL      CFDBL000 * Clear Fields
SCDBL300
          CALL      KYDBL000 * Enter Key Fields
          BRANCH    EXIT,SCDBL999,SCDBL999
SCDBL400
          CALL      WPDBL000 * Load any WP Details
SCDBL500
          CALL      LMDBL000 * Load any Batch Details
SCDBL600
          CALL      DFDBL000 * Display Fields
SCDBL700
          CALL      SFDBL000 * Select Fields
          BRANCH    EXIT,SCDBL100,SCDBL100,SCDBL200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SCDBL800
SCDBL900
SCDBL999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Debtors Masterfile Addition        
.-------------------------------------------------------
CFDBL000
          MOVE      SP70,DBDBDEB 
          MOVE      SP70,DBDBNA1 
          MOVE      SP70,DBDBNA2 
          MOVE      SP70,DBDBAD1 
          MOVE      SP70,DBDBAD2 
          MOVE      SP70,DBDBAD3 
          MOVE      SP70,DBDBAD4 
          MOVE      SP70,DBDBPC  
          MOVE      SP70,DBDBPH1 
          MOVE      SP70,DBDBPH2 
          MOVE      SP70,DBDBPH3 
          MOVE      SP70,DBDBCON 
          MOVE      ZERO,DBDBACT 
          MOVE      ZERO,DBDBSTA 
          MOVE      ZERO,DBDBTEX 
          MOVE      SP70,DBDBTER 
          MOVE      SP70,DBDBPUR 
          MOVE      SP70,DBDBSORT
          MOVE      SP70,DBDBUR2 
          MOVE      SP70,DBDBUD1 
          MOVE      SP70,DBDBUD2 
          MOVE      SP70,DBDBUY1 
          MOVE      SP70,DBDBUY2 
          MOVE      SP70,DBDBUC1 
          MOVE      SP70,DBDBUC2 
          MOVE      SP70,DBDBUC3 
          MOVE      SP70,DBDBUC4 
          MOVE      ZERO,DBDBBAD 
          MOVE      SP70,DBDBWRN 
          MOVE      ZERO,DBDBCLM 
CFDBL999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Debtors Masterfile Addition        
.--------------------------------------------------------
KYDBL000
.
KYDBL110
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "1",CKEYTYP
          CALL      EDEBA000
          BRANCH    EXIT,KYDBL900,KYDBL900
          MOVE      ONE,ACCEPT
          MOVE      DBDBDEB,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KYDBL999
.
KYDBL900  MOVE      ONE,EXIT
KYDBL999  RETURN
.---------------------------------------------------------
. Load WP files for : Debtors Masterfile Addition        
.---------------------------------------------------------
WPDBL000
          PREP     TEMPWORD,FILDBDC1
          PACK     KEY11,DBDBDEB,SP70
          MOVE     KEY11,SAVKEY80
          SETLPTR  SAVKEY80,8 
          CALL      RDDBDC1 
          IF        OVRCD=0
            CALL      RPDBDC1 
          ENDIF
WPDBL100
          CALL     RKDBDC1 
          BRANCH   OVRCD,WPDBL105
          PACK     KEY11,DBDCDEB,DBDCLIN
          MATCH    SAVKEY80,KEY11   
          GOTO     WPDBL105 IF NOT EQUAL
          PACK     VAR,DBDCCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBDCCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WPDBL100
WPDBL105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Debtors Masterfile Addition        
.---------------------------------------------------------
LMDBL000
          RETURN
.---------------------------------------------------------
. Display Fields for : Debtors Masterfile Addition        
.---------------------------------------------------------
DFDBL000
          BRANCH   ACCEPT,DFDBL999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFDBL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFDBL900
          MATCH    PRGID,SCPSPID
          GOTO     DFDBL900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFDBL900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFDBL010 IF NOT EQUAL
.
          CALL     PSDBL000 * Display Field
          GOTO     DFDBL010
DFDBL900
DFDBL999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Debtors Masterfile Addition        
.---------------------------------------------------------
PSDBL000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSDBL999,PSDBL999,PSDBL999,PSDBL999:
                           PSDBL999,PSDBL101,PSDBL102,PSDBL103:
                            PSDBL104,PSDBL105,PSDBL106,PSDBL107:
                            PSDBL108,PSDBL109,PSDBL110,PSDBL111:
                            PSDBL112,PSDBL113,PSDBL114,PSDBL115:
                            PSDBL999,PSDBL116,PSDBL117,PSDBL118:
                            PSDBL119,PSDBL120,PSDBL121,PSDBL122:
                            PSDBL123,PSDBL124,PSDBL125,PSDBL126:
                            PSDBL127,PSDBL128,PSDBL129,PSDBL130:
                            PSDBL131,PSDBL132,PSDBL133,PSDBL134:
                            PSDBL135,PSDBL999,PSDBL136
          GOTO     PSDBL999
.
PSDBL101
          MOVE      DBDBNA1,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL102
          MOVE      DBDBNA2,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL103
          MOVE      DBDBAD1,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL104
          MOVE      DBDBAD2,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL105
          MOVE      DBDBAD3,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL106
          MOVE      DBDBAD4,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL107
          MOVE      DBDBPC,VAR       
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL108
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL109
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL110
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL111
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBACT,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBSTA,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBTEX,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL115
          MOVE      DBDBTER,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL116
          MOVE      DBDBPUR,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL117
          MOVE      DBDBSORT,VAR     
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL118
          MOVE      DBDBUR2,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL119
          UNPACK    DBDBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL120
          UNPACK    DBDBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL121
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL122
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL123
          MOVE      DBDBUC1,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL124
          MOVE      DBDBUC2,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL125
          MOVE      DBDBUC3,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL126
          MOVE      DBDBUC4,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL127
          MOVE      DBDBUC1D,VAR     
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL128
          MOVE      DBDBUC2D,VAR     
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL129
          MOVE      DBDBUC3D,VAR     
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL130
          MOVE      DBDBUC4D,VAR     
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL131
          MOVE     FILDBDC1,WORDNAME
          CALL     DISPWORD
          GOTO     PSDBL999
.
PSDBL132
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBBAD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL133
          MOVE      DBDBWRN,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL134
          MOVE      DBDBWRND,VAR     
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL135
          MOVE      DBTEDES,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
.
PSDBL136
          MOVE      DBDBCLM,VAR      
          CALL      DISPITEM
          GOTO     PSDBL999
PSDBL999
          RETURN
.---------------------------------------------------------
. Selections for : Debtors Masterfile Addition        
.---------------------------------------------------------
SFDBL000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFDBL001  BRANCH   ACCEPT,SFDBL020
.
SFDBL005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFDBL006,SFDBL101,SFDBL102,SFDBL006:
                           SFDBL006,SFDBL103,SFDBL104,SFDBL105:
                            SFDBL106,SFDBL107,SFDBL108,SFDBL109:
                            SFDBL110,SFDBL111,SFDBL112,SFDBL113:
                            SFDBL114,SFDBL115,SFDBL116,SFDBL117:
                            SFDBL006,SFDBL118,SFDBL119,SFDBL120:
                            SFDBL121,SFDBL122,SFDBL123,SFDBL124:
                            SFDBL125,SFDBL126,SFDBL127,SFDBL128:
                            SFDBL006,SFDBL006,SFDBL006,SFDBL006:
                            SFDBL129,SFDBL130,SFDBL131,SFDBL006:
                            SFDBL006,SFDBL006,SFDBL132
SFDBL006  BEEP
          GOTO     SFDBL005
SFDBL020  CALL     RKSCSL1
          BRANCH   OVRCD,SFDBL090
          MATCH    PRGID,SCSLPID
          GOTO     SFDBL090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFDBL090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFDBL020,SFDBL020,SFDBL020,SFDBL020:
                           SFDBL020,SFDBL103,SFDBL104,SFDBL105:
                            SFDBL106,SFDBL107,SFDBL108,SFDBL109:
                            SFDBL110,SFDBL111,SFDBL112,SFDBL113:
                            SFDBL114,SFDBL115,SFDBL116,SFDBL117:
                            SFDBL020,SFDBL118,SFDBL119,SFDBL120:
                            SFDBL121,SFDBL122,SFDBL123,SFDBL124:
                            SFDBL125,SFDBL126,SFDBL127,SFDBL128:
                            SFDBL020,SFDBL020,SFDBL020,SFDBL020:
                            SFDBL129,SFDBL130,SFDBL131,SFDBL020:
                            SFDBL020,SFDBL020,SFDBL132
          GOTO     SFDBL020
SFDBL090  MOVE     ZERO,ACCEPT
          GOTO     SFDBL001
.
SFDBL101
          CALL      SDEB0000
          MOVE      ZERO,EXIT
          GOTO      SFDBL999
.
SFDBL102
          MOVE      ZERO,EXIT
          GOTO      SFDBL999
.
SFDBL103
          CALL     SELECTED
          STRIP     DBDBNA1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBNA1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBNA1 
          SFORMAT   VAR,127
          ENDSET    DBDBNA1 
          APPEND    SP70,DBDBNA1 
          RESET     DBDBNA1 
          CMATCH    EXITCHAR,DBDBNA1 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBNA1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL103
            ENDIF
          ENDIF
          MOVE      DBDBNA1,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL104
          CALL     SELECTED
          STRIP     DBDBNA2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBNA2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBNA2 
          SFORMAT   VAR,127
          ENDSET    DBDBNA2 
          APPEND    SP70,DBDBNA2 
          RESET     DBDBNA2 
          CMATCH    EXITCHAR,DBDBNA2 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBNA2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL104
            ENDIF
          ENDIF
          MOVE      DBDBNA2,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL105
          CALL     SELECTED
          STRIP     DBDBAD1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBAD1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBAD1 
          SFORMAT   VAR,127
          ENDSET    DBDBAD1 
          APPEND    SP70,DBDBAD1 
          RESET     DBDBAD1 
          CMATCH    EXITCHAR,DBDBAD1 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBAD1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL105
            ENDIF
          ENDIF
          MOVE      DBDBAD1,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KADD2000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL106
            ENDIF
            BRANCH    EXIT,SFDBL106,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBAD2,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KADD3000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL107
            ENDIF
            BRANCH    EXIT,SFDBL107,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBAD3,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL108
          CALL     SELECTED
          STRIP     DBDBAD4 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBAD4,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBAD4 
          SFORMAT   VAR,127
          ENDSET    DBDBAD4 
          APPEND    SP70,DBDBAD4 
          RESET     DBDBAD4 
          CMATCH    EXITCHAR,DBDBAD4 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBAD4 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL108
            ENDIF
          ENDIF
          MOVE      DBDBAD4,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL109
          CALL     SELECTED
          STRIP     DBDBPC  
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBPC,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBPC  
          SFORMAT   VAR,127
          ENDSET    DBDBPC  
          APPEND    SP70,DBDBPC  
          RESET     DBDBPC  
          CMATCH    EXITCHAR,DBDBPC  
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBPC  
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL109
            ENDIF
          ENDIF
          MOVE      DBDBPC,VAR       
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL110
          CALL     SELECTED
          STRIP     DBDBPH1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBPH1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBPH1 
          SFORMAT   VAR,127
          ENDSET    DBDBPH1 
          APPEND    SP70,DBDBPH1 
          RESET     DBDBPH1 
          CMATCH    EXITCHAR,DBDBPH1 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBPH1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL110
            ENDIF
          ENDIF
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL111
          CALL     SELECTED
          STRIP     DBDBPH2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBPH2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBPH2 
          SFORMAT   VAR,127
          ENDSET    DBDBPH2 
          APPEND    SP70,DBDBPH2 
          RESET     DBDBPH2 
          CMATCH    EXITCHAR,DBDBPH2 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBPH2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL111
            ENDIF
          ENDIF
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL112
          CALL     SELECTED
          STRIP     DBDBPH3 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBPH3,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBPH3 
          SFORMAT   VAR,127
          ENDSET    DBDBPH3 
          APPEND    SP70,DBDBPH3 
          RESET     DBDBPH3 
          CMATCH    EXITCHAR,DBDBPH3 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBPH3 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL112
            ENDIF
          ENDIF
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL113
          CALL     SELECTED
          STRIP     DBDBCON 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBCON,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBCON 
          SFORMAT   VAR,127
          ENDSET    DBDBCON 
          APPEND    SP70,DBDBCON 
          RESET     DBDBCON 
          CMATCH    EXITCHAR,DBDBCON 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBCON 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL113
            ENDIF
          ENDIF
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL114
          CALL      DEFAULTY
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBDBACT 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBACT,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL115
          CALL      DEFAULTY
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBDBSTA 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBSTA,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL116
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBDBTEX 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBTEX,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL117
.
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBTEDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDBTEA00
          MOVE      DBTETER,DBDBTER
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL117
            ENDIF
            BRANCH    EXIT,SFDBL117,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBTER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTEDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SFDBL001
.
SFDBL118
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EURNO000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL118
            ENDIF
            BRANCH    EXIT,SFDBL118,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBPUR,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL119
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESORT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL119
            ENDIF
            BRANCH    EXIT,SFDBL119,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBSORT,VAR     
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL120
          CALL     SELECTED
          STRIP     DBDBUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBUR2 
          SFORMAT   VAR,127
          ENDSET    DBDBUR2 
          APPEND    SP70,DBDBUR2 
          RESET     DBDBUR2 
          CMATCH    EXITCHAR,DBDBUR2 
          GOTO      SFDBL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBDBUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL120
            ENDIF
          ENDIF
          MOVE      DBDBUR2,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL121
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBDBUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBDBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL122
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBDBUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBDBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL123
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBDBUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL124
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBDBUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL125
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBUC1D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDBUA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL125
            ENDIF
            BRANCH    EXIT,SFDBL125,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBUC1,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBUC1D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFDBL001
.
SFDBL126
.
.
          MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBUC2D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDBUB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL126
            ENDIF
            BRANCH    EXIT,SFDBL126,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBUC2,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBUC2D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFDBL001
.
SFDBL127
.
.
          MOVE      "   35",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBUC3D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDBUC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL127
            ENDIF
            BRANCH    EXIT,SFDBL127,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBUC3,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   35",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBUC3D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFDBL001
.
SFDBL128
.
.
          MOVE      "   36",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBUC4D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDBUD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL128
            ENDIF
            BRANCH    EXIT,SFDBL128,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBUC4,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   36",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBUC4D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFDBL001
.
SFDBL129
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     " 6",SCPSROW
              MOVE     "  5",SCPSCOL
              MOVE     " 70",SCPSLEN
              MOVE     "15",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILDBDC1,WORDNAME
              MOVE     "  8",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILDBDC1,WORDNAME
            MOVE     "  8",WORDTYPE
            CALL     EDITWORD
          ENDIF
          GOTO     SFDBL001
.
SFDBL130
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBDBBAD 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBBAD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SFDBL001
.
SFDBL131
.
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBWRND
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWARN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL131
            ENDIF
            BRANCH    EXIT,SFDBL131,SFDBL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFDBL990 IF EQUAL
          ENDIF
          MOVE      DBDBWRN,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBWRND,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFDBL001
.
SFDBL132
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,DBDBCLM 
          IF        SCPSMAN=1
            COMPARE   ZERO,DBDBCLM 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFDBL132
            ENDIF
          ENDIF
          MOVE      DBDBCLM,VAR      
          CALL      DISPITEM
          GOTO     SFDBL001
SFDBL990  MOVE      FOUR,EXIT * Exit Char Exit
SFDBL999  RETURN
.@@@@@ Function Restart Point @@@@@
.**********************************************************************
. SELPRT00 - select printer routine
. Requires IBACODFD/INC IBAPRNFD/INC
.          IBAIOCOD/INC IBAIOPRN/INC IBAPRINT
.  Note : already includes IBAPASFD & IBAPASIO
.
.  Change: 23.05.2002 - Glenn Saunders - port to v9.00                   v90201
.          Remove all old DEB PAS includes, use proper ones.             v90201
.          Remove read of CFDBPMAS parm, no longer needed                v90201
.
.**********************************************************************
SELPRT00  CALL      TFILENAM
          MOVE      TFILNAME,FNAMPOST
.
          OPEN      IBACODE1,"ibacodef"     * open files
          MOVE      SP70,SPLFILE
          CALL      SELPRINT
.
SELPRT10  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*85,IBCNUGST
          READ      CONTROLF,EIGHTY1;*19,CFDBNFMT,*243,CFDBILAY        *C-75900
          READ      CONTROLF,EIGHTY7;CFDBLOCS,CFDBSTDS,CFDBIDDS,CFDBSOPT:
                                     *62,CFDBIVHD,CFDBIVTL
.
          MOVE      ONE,FLGIBAPT
          MOVE      ZERO,OVRCD
.
.         Remove access to DEB PAS clones and use PAS includes           v90201
.
SELPRT50  TRAP      OVERCOND IF IO
          OPEN      PATMA1A1,"patma1af"         * Change to use PATMA1   v90201
          TRAPCLR   IO
          BRANCH    OVRCD,SELPRT99
          MOVE      ZERO,FLGIBAPT
          OPEN      PATMX1A1,"patmx1af"
.
          COMPARE   EIGHT,CFDBILAY
          GOTO      SELPRT99 IF NOT EQUAL
.
          TRAP      OVERCOND IF IO
          OPEN      PATDSCH1,"patdschf"          * Use PAT DSC filename  v90201
          TRAPCLR   IO
          BRANCH    OVRCD,SELPRT99
          MOVE      ZERO,FLGIBAPT
.
          TRAP      OVERCOND IF IO
          OPEN      PATMI1A1,"patmi1af"          * Use PATMI1 filename   v90201
          TRAPCLR   IO
          BRANCH    OVRCD,SELPRT99
          MOVE      ZERO,FLGIBAPT
.
          TRAP      OVERCOND IF IO
          OPEN      PATVISA1,"patvisaf"          * Use PATVIS filename   v90201
          TRAPCLR   IO
          BRANCH    OVRCD,SELPRT99
          MOVE      ZERO,FLGIBAPT
.
          TRAP      OVERCOND IF IO
          OPEN      PATSNAA1,"patsnaaf"          * Use PATSNA filename   v90201
          TRAPCLR   IO
          BRANCH    OVRCD,SELPRT99
          MOVE      ZERO,FLGIBAPT
.
SELPRT99  RETURN
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
DEFDATE1  MOVE     CCC,CCENT
          MOVE     CYY,CYEAR
          MOVE     CMM,CMON
          MOVE     CDD,CDAY
          REP      " 0",CCENT
          REP      " 0",CYEAR
          REP      " 0",CMON
          REP      " 0",CDAY
          RETURN
.---------------------
. Read Item
.---------------------
REDITM00  MOVE     DBBIITM,KEY8
          CALL     RDDBIT1
          IF       OVRCD=1
            MOVE     "***** ITEM RECORD MISSING *****",DBITDES
          ENDIF
          ASSIGN   DBBITOT+DBBITAX,TOTALCHG
          MOVE     "   21",FLDID
          CALL     GETPOSIT
          IF       EXIT=0
            MOVE     TOTALINV,VAR
            CALL     DISPITEM
          ENDIF
          MOVE     "   41",FLDID
          CALL     GETPOSIT
.
REDITM99  RETURN
.-------------------------------------------------------------
. Delete Manual Invoice
.-------------------------------------------------------------
DINV0000  MOVE     "3",DBBISTA
          PACK     KEY15,DBDBDEB,DBBISTA,SP70
          CALL     RSDBBI2
          CALL     RKDBBI2
          BRANCH   OVRCD,DINV1900
          MATCH    DBDBDEB,DBBIDEB
          GOTO     DINV1900 IF NOT EQUAL
          MATCH    "3",DBBISTA
          GOTO     DINV1900 IF NOT EQUAL
.
          MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DINV1000,DINV9000,DINV9100
.
DINV1000  MOVE     "3",DBBISTA
          PACK     KEY15,DBDBDEB,DBBISTA,SP70
          CALL     RSDBBI2
DINV1100  CALL     RKDBBI2
          BRANCH   OVRCD,DINV1900
          MATCH    DBDBDEB,DBBIDEB
          GOTO     DINV1900 IF NOT EQUAL
          MATCH    "3",DBBISTA
          GOTO     DINV1900 IF NOT EQUAL
          PACK     KEY14,DBBIDEB,DBBIUNI
          CALL     DEDBBI1
          GOTO     DINV1100
.
DINV1900  MOVE     TWO,EXIT            * Restart Screen
          GOTO     DINV9999
.
DINV9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DINV9999
.
DINV9100  MOVE     "3",DBBISTA
          PACK     KEY15,DBDBDEB,DBBISTA,SP70
          CALL     RSDBBI2
          CALL     RKDBBI2
          BRANCH   OVRCD,DINV9190
          MATCH    DBDBDEB,DBBIDEB
          GOTO     DINV9190 IF NOT EQUAL
          MATCH    "3",DBBISTA
          GOTO     DINV9190 IF NOT EQUAL
.
          MOVE     "1",DBBISTA
          CALL     UPDBBI2
          GOTO     DINV9100
.
DINV9190  MOVE     TWO,EXIT            * Restart Screen on "Cancel"
          GOTO     DINV9999
.
DINV9999  RETURN
.-------------------------------------------------------------------------
. Process Billing Details
.   - Create New Invoice for all Billing Details
.   - Print New Invoice (Standard Invoice Print ie Pass Debtor & Invoice)
.-------------------------------------------------------------------------
SING0000  MOVE       ZERO,STARTINV         * Set Flag to Start
          PACK       KEY15,DBDBDEB,THREE,SP70
          CALL       RSDBBI2
SING1000  CALL       RKDBBI2
          BRANCH     OVRCD,SING9000
          MATCH      DBDBDEB,DBBIDEB
          GOTO       SING9000 IF NOT EQUAL
          MATCH      "3",DBBISTA           * Manual Invoice in Progress
          GOTO       SING9000 IF NOT EQUAL
          BRANCH     STARTINV,SING2000
.
          CALL       STINV000              * Start Invoice for Debtor
.
SING2000  CALL       PLINE000              * Process Line Item
.
          GOTO       SING1000
.
SING9000  COMPARE    ZERO,STARTINV         * Did we create an invoice
          GOTO       SING9999 IF EQUAL     * NO
.
          IF         CFDBILAY=8
            CALL       GETAD000
          ENDIF
.
          PACK       KEY21,DBFHDEB,DBFHDTY,DBFHDOC
          CALL       RADBFH1
          IF         OVRCD=0
            CALL       UPDBFH1             * Update Totals
          ENDIF
.
          MOVE      "Print Invoice. ",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,SING9999
.
          MOVE      DBDBTER,KEY3
          CALL      RDDBTE1
          IF        OVRCD=1
            MOVE      SP70,DBTEDES
          ENDIF
.
. Print the invoice.
.
          CALL       OPNPRINT
          CALL       PRINV000              * Print Invoice
          CALL       CLSPRINT
.
SING9999  RETURN
.
GETAD000  PACK      DBFHUR2,SP70
.
          MATCH     SP8,DBDBPUR
          GOTO      GETAD999 IF EQUAL
.
          BRANCH    FLGIBAPT,GETAD999
.
GETAD500  MOVE      ZERO TO PVIBILL           * Change to PATVIS fldname v90201
.
GETAD700  PACK      KEY24,DBDBPUR,Z40
          CALL      RDSVISA1                  * Change to PATVIS read    v90201
GETAD710  CALL      RDPVISA1                  * Change to PATVIS read    v90201
          BRANCH    OVRCD,GETAD999
.
          MATCH     DBDBPUR,PVIURNO
          GOTO      GETAD999 IF NOT EQUAL
.
          COMPARE   THREE,PVITYPE
          GOTO      GETAD710 IF NOT EQUAL
.
          PACK      KEY8,PVIURNO,SP70
          CALL      RDMAST1                   * Use PATMA1 read          v90201
          BRANCH    OVRCD,GETAD710
.
          PACK      KEY8,PVIBILL,SP70        * Change to PATVIS fldname v90201
          CALL      RDMISS1                   * Change to PATMI1 read    v90201
          BRANCH    OVRCD,GETAD710
.
          BRANCH    ASTAT,GETAD710,GETAD900,GETAD720,GETAD900
          GOTO      GETAD710
.
GETAD720  PACK      KEY8,PVIBILL,SP70        * Change to PATVIS fldname v90201
          CALL      RDDSCH1                   * Use PAT DSC read         v90201
          BRANCH    OVRCD,GETAD710
.
GETAD900  PACK      DBFHUR2,PVIBILL,SP70     * Change to PATVIS fldname v90201
          GOTO      GETAD999
.
GETAD950  PACK      DBFHUR2,SP70
.
GETAD999  RETURN
.-------------------------------------------------------------
. Locking Standard Routine to Enter Key Field
.-------------------------------------------------------------
EKEYF000  MOVE      SCRID,SVSCRID
          CALL      UUDBDB1
          MOVE      TWO,CKEYTYP
          CALL      KDBDBS00                * Call Standard Keyin Routine wDBh ?
          BRANCH    EXIT,EKEYF999,EKEYF999  * EXIT 1 Null Entry 2 EXITchar
          COMPARE   ZERO,OVRCD            * Add Debtor Details
          GOTO      EKEYF070 IF EQUAL
.
          MATCH     "01",SCRID
          GOTO      EKEYF020 IF NOT EQUAL
.
          CALL      CHKSEC00              * Check Security Level
          BRANCH    EXIT,EKEYF000
          MATCH     "@",DBDBDEB
          GOTO      EKEYF050 IF EQUAL
EKEYF020  MOVE      "Debtor Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EKEYF000
.
EKEYF050  CALL      ADDEB000              * Add Debtor Screen
          BRANCH    EXIT,EKEYF000
.
EKEYF070  MOVE     SP70,DBLNNA1
          MATCH    SP70,DBDBLIN
          IF       !@EQUAL
            PACK     KEY8,DBDBLIN,SP70
            CALL     RDDBDB1
          ENDIF
.
EKEYF100  PACK      KEY8,DBDBDEB,SP70       * Setup Key to File
          CALL      RLDBDB1                 * Read and Lock Record
          BRANCH    OVRCD,EKEYF999,EKEYF200 * OVRCD=1 Not on File 2 Locked
          CALL      GETCDS00                * Get User Def Code Descriptions
          MOVE      ZERO,EXIT               * Setup EXIT Field
          MOVE      ZERO,OVRCD              * Setup Ovrcd Field
          GOTO      EKEYF999
.
EKEYF200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EKEYF100 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * EXIT
          GOTO      EKEYF000 IF EQUAL       * Must be a valid response
          MATCH     ANSE,ANS                * EXIT
          GOTO      EKEYF200 IF NOT EQUAL   * Must be a valid response
          GOTO      EKEYF000                * Return to Keyin
.
EKEYF999  MOVE      ZERO,TOTALINV
          RETURN                            * End of Routine
.---------------------------------------------------
. Get User Def Code Descriptions
.---------------------------------------------------
GETCDS00   CALL     FORAD000
.
           MOVE     SP70,DBDBUC1D
           MOVE     SP70,DBDBUC2D
           MOVE     SP70,DBDBUC3D
           MOVE     SP70,DBDBUC4D
           MOVE     SP70,DBDBWRND
.
           MATCH    SP70,DBDBWRN
           IF       !@EQUAL
             MOVE     "DBWR",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBWRN
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBWRND
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC1
           IF       !@EQUAL
             MOVE     "DB01",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC1
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC1D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC2
           IF       !@EQUAL
             MOVE     "DB02",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC2
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC2D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC3
           IF       !@EQUAL
             MOVE     "DB03",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC3
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC3D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC4
           IF       !@EQUAL
             MOVE     "DB04",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC4
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC4D
             ENDIF
           ENDIF
.
           MOVE     SP70,DBTEDES
           PACK     KEY3,DBDBTER,SP70
           CALL     RDDBTE1
.
           MOVE     SP70,DBLNNA1
           MATCH    SP70,DBDBLIN
           IF       !@EQUAL
             PACK     KEY8,DBDBLIN,SP70
             CALL     RDDBLN1
           ENDIF
.
           RETURN
.----------------------------------------
. Add Debtor Screen
.----------------------------------------
ADDEB000  MOVE      ZERO,HLEF
          CALL      GETSCR00      * Save Current Screen
.
          CALL      SCDBL000
.
          MOVE      SVSCRID,SCRID
.
ADDEB010  MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
.
          MOVE      DBDBDEB,KEY8
          CALL      RDDBDB1
          MOVE      OVRCD,EXIT
ADDEB999  RETURN
.----------------------------------------
. Check Security
.----------------------------------------
CHKSEC00  READ     CONTROLF,EIGHTY1;*233,CFDBNDB,CFDBSDB
          MOVE     ZERO,EXIT
          IF       CFDBSDB>SECLEV
            MOVE     "Security Level Inadequate - ",DISPMSG
            BEEP
            CALL     MESSAGE1
            MOVE     ONE,EXIT
          ENDIF
          RETURN
.
.------------------------------------------------------------
. Enter Invoice Date
.------------------------------------------------------------
EIDAT000  READ      CONTROLF,EIGHTY1;CFDBPASS,*77,CFDBSQLA,CFDBSQLB:
                                                   CFDBFDAT,CFDBTDAT
          MOVE      SP2,CDAY
          MOVE      "0",CKEYTYP
          MOVE      ONE,CDEFDTE
          CALL      KEYDATE
          BRANCH    OVRCD,EIDAT900
          MATCH     SP2,CDAY
          GOTO      EIDAT900 IF EQUAL
          PACK      INVDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",INVDATE
          MATCH     CFDBFDAT,INVDATE   * Date Range
          GOTO      EIDAT800 IF LESS
          MATCH     INVDATE,CFDBTDAT
          GOTO      EIDAT800 IF LESS
          MOVE      ZERO,EXIT
          GOTO      EIDAT999
.
EIDAT800  BEEP
          MOVE      "Invoice Date NOT in Processing Date Range - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EIDAT000
.
EIDAT900  MOVE      TWO,EXIT
.
EIDAT999  RETURN
.
.-------------------------------------------------------------
. Item Selected
.-------------------------------------------------------------
SELT0000  CALL     RDDBBI2
          IF       OVRCD=1
            BEEP
            MOVE     "Can't Read Billing Details - ",DISPMSG
            CALL     MESSAGE1
            GOTO     SELT9999
          ENDIF
.
          MOVE      DBBIITM,KEY8
          CALL      RDDBIT1
          BRANCH    OVRCD,SELT9100
.
          MOVE      DBITPTY,KEY8
          CALL      RDDBPT1
          BRANCH    OVRCD,SELT9200
.
          PACK      KEY12,PASSCODE,DBPTDEP
          CALL      RDDBSE1
          BRANCH    OVRCD,SELT9300
.
          UNPACK    SP70,IBGSDESC
          PACK      KEY6,DBBIGST,SP70
          CALL      RDIBGS1
          IF        OVRCD=0 & IBGSACTV=1
            MOVE      "GST Code is Inactive          ",IBGSDESC
          ENDIF
.
          ASSIGN   TOTALINV-DBBITOT-DBBITAX,TOTALINV
          ASSIGN   DBBITOT+DBBITAX,TOTALCHG
          ASSIGN   DBBITOT+DBBITAX,TOTALAMT
          CALL     GETDES00
.
          CALL     SC02L000
          GOTO     SELT9999
.
SELT9100  BEEP
          MOVE     "Invalid Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9200  BEEP
          MOVE     "Invalid Product Type on Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9300  BEEP
          MOVE     "Inadequate Security for Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9999  RETURN
.---------------------------------------------------
. Get User Def Code Descriptions
.---------------------------------------------------
GETDES00   MOVE     SP70,DBBIUC1D
           MOVE     SP70,DBBIUC2D
           MOVE     SP70,DBBIUC3D
           MOVE     SP70,DBBIUC4D
           MATCH    SP70,DBBIUC1
           IF       !@EQUAL
             MOVE     "FD01",DBCDCAT
             PACK     KEY7,DBCDCAT,DBBIUC1
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBBIUC1D
             ENDIF
           ENDIF
           MATCH    SP70,DBBIUC2
           IF       !@EQUAL
             MOVE     "FD02",DBCDCAT
             PACK     KEY7,DBCDCAT,DBBIUC2
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBBIUC2D
             ENDIF
           ENDIF
           MATCH    SP70,DBBIUC3
           IF       !@EQUAL
             MOVE     "FD03",DBCDCAT
             PACK     KEY7,DBCDCAT,DBBIUC3
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBBIUC3D
             ENDIF
           ENDIF
           MATCH    SP70,DBBIUC4
           IF       !@EQUAL
             MOVE     "FD04",DBCDCAT
             PACK     KEY7,DBCDCAT,DBBIUC4
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBBIUC4D
             ENDIF
           ENDIF
.
GETDES99   RETURN
.
.-------------------------------------------------------------
. Add Item to the Billing Detail
.-------------------------------------------------------------
ADDI0000  MOVE      ONE,F6
          PACK      KEY14,DBDBDEB,Z70       * Setup Key to File
          CALL      RSDBBI1
          CALL      RPDBBI1
          BRANCH    OVRCD,ADDI2000
          MATCH     DBDBDEB,DBBIDEB
          GOTO      ADDI2000 IF NOT EQUAL
          MATCH     "0",DBBISTA             * Check Status of Record
          GOTO      ADDI1000 IF NOT EQUAL   * If ZERO then Record Should be
.                                           * Locked. If Not Locked then
.                                           * Delete Record as it has not been
.                                           * Created Correctly
          PACK      KEY14,DBDBDEB,DBBIUNI,SP70       * Setup Key to File
          CALL      RLDBBI1                 * Read and Lock Record
          BRANCH    OVRCD,ADDI0000,ADDI1000 * OVRCD=1 Not on File 2 Locked OK
          MATCH     "0",DBBISTA             * Check Status of Record
          GOTO      ADDI1000 IF NOT EQUAL   * Still Zero so Delete Record
          CALL      DEDBBI1                 * Delete Record with invalid status
          GOTO      ADDI1000
.
ADDI1000  MOVE      DBBIUNI,F6
          ADD       ONE,F6
.
ADDI2000  MOVE      DBDBDEB,DBBIDEB
          MOVE      F6,DBBIUNI
          REP       " 0",DBBIUNI
          CALL      CLRBIL00
          PACK      KEY14,DBDBDEB,DBBIUNI,SP70  * Setup Key to File
          UNPACK    KEY14,DBBIDEB,DBBIUNI
          MOVE      "3",DBBISTA
          CALL      RADBBI1                     * Read
          COMPARE   ZERO,OVRCD
          GOTO      ADDI2000 IF EQUAL
          CALL      WRDBBI1                     * Write
.
          MOVE      ONE,ACCEPT
          MOVE      ZERO,POSTFLAG
.
          CALL      SC02L000                    * Input Details
.
          IF        POSTFLAG=0
            PACK      KEY14,DBDBDEB,DBBIUNI,SP70  * Setup Key to File
            CALL      RDDBBI1                     * Read
            IF        OVRCD=0
              CALL      DEDBBI1
            ENDIF
          ELSE
            GOTO      ADDI0000
          ENDIF
.
ADDI9999  RETURN
.------------------------------
. Clear Fields for New Record
.------------------------------
CLRBIL00  PACK      DBBIDAT,CCC,CYY,CMM,CDD
          REP       " 0",DBBIDAT
          CLOCK     TIME,CTIMEIS
          UNPACK    CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK      DBBITIM,CHOUR,CMIN,KEY2
          MOVE      PASSCODE,DBBIUID
.
          MOVE     SP70,DBBIITM
          MOVE     SP70,DBBISDAT
          MOVE     SP70,DBBIDREF
          MOVE     SP70,DBBIOREF
          MOVE     ZERO,DBBIQTY
          MOVE     ZERO,DBBIPRI
          MOVE     ZERO,DBBITOT
          MOVE     ZERO,DBBITRT
          MOVE     ZERO,DBBITAX
          MOVE     SP70,DBBIUR1
          MOVE     SP70,DBBIUR2
          MOVE     SP70,DBBIUD1
          MOVE     SP70,DBBIUD2
          MOVE     ZERO,DBBIUY1
          MOVE     ZERO,DBBIUY2
          MOVE     SP70,DBBIUC1
          MOVE     SP70,DBBIUC2
          MOVE     SP70,DBBIUC3
          MOVE     SP70,DBBIUC4
          MOVE     SP70,DBBIGST
          MOVE     SP70,DBBISPA
          RETURN
.
.-------------------------------------------------------------
. Print Invoices
.-------------------------------------------------------------
GENI0000  READ      CONTROLF,EIGHTY1;*20,CFDBIFL
          IF        CFDBIFL<>0
            MOVE      "ERROR: Generation in Progress. Try Later - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      GENI9999
          ENDIF
.
          DISPLAY   *P1:24,*EL,"Scanning ... "
          MOVE      ZERO,SECTOR
.
          PACK      KEY15,DBDBDEB,ONE,SP70
          CALL      RSDBBI2
GENI1000  CALL      RKDBBI2
          BRANCH    OVRCD,GENI9000
          MATCH     DBDBDEB,DBBIDEB
          GOTO      GENI9000 IF NOT EQUAL
          MATCH     "1",DBBISTA           * Invoicing in Progress
          GOTO      GENI9000 IF NOT EQUAL
.
          CALL      CALTAX00
.
          ASSIGN    TOTALINV+DBBITOT+DBBITAX,TOTALINV
          MOVE      "3",DBBISTA           * Invoicing in Progress
          CALL      UPDBBI2
.
          IF        CFDBILAY=8
            MATCH     SP25,DBBIUR1
            IF        !@EQUAL
              UNPACK    DBBIUR1,SAVADMIS,DIM20
            ENDIF
          ENDIF
          PACK      KEY15,DBDBDEB,ONE,SP70
          CALL      RSDBBI2
          GOTO      GENI1000
.
GENI9000
GENI9999  RETURN
.
.------------------------------------------------------------
. Exit and Save as Billing Details
.------------------------------------------------------------
EXIT0000  MOVE     "3",DBBISTA
          PACK     KEY15,DBDBDEB,DBBISTA,SP70
          CALL     RSDBBI2
          CALL     RKDBBI2
          BRANCH   OVRCD,EXIT9999
          MATCH    DBDBDEB,DBBIDEB
          GOTO     EXIT9999 IF NOT EQUAL
          MATCH    "3",DBBISTA
          GOTO     EXIT9999 IF NOT EQUAL
          MOVE     "1",DBBISTA
          CALL     UPDBBI2
          GOTO     EXIT0000
.
EXIT9999  RETURN
.
DATECURR  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          REP       " 0",CYEAR
          REP       " 0",CMON
          REP       " 0",CDAY
          RETURN
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Post Changes.
.-------------------------------------------------------------
POST0000  MOVE     "3",DBBISTA
.
          IF       CFDBILAY=8
            MATCH    SP8,DPVIBILL             * Change to PATVIS fldname v90201
            IF       !@EQUAL
              PACK     DBBIUR1,DPVIBILL,SP70  * Change to PATVIS fldname v90201
            ENDIF
          ENDIF
.
          PACK     KEY14,DBBIDEB,DBBIUNI,SP70  * Setup Key
          CALL     RADBBI1            * Check for record on file
          IF       OVRCD=0
            CALL     UPDBBI1          * Update Changes
            CALL     UUDBBI1          * Unloc
          ELSE
            CALL     WRDBBI1          * Write New Record
          ENDIF
.
          ASSIGN    TOTALINV+DBBITOT+DBBITAX,TOTALINV
.
          CALL      PNOTE000          * Save Notes
.
          COMPARE   ZERO,DBDBCLM      * Check Credit Limit if Not Zero
          CALL      CRDCHK00 IF NOT EQUAL
.
          MOVE      ONE,POSTFLAG
          RETURN                      * Return to program.
.---------------------------
. Save Notes
.---------------------------
PNOTE000  PACK      KEY17,DBBIDEB,DBBIUNI,SP70
          CALL      RSDBBC1
PNOTE200  CALL      RKDBBC1
          BRANCH    OVRCD,PNOTE250
          MATCH     DBBIDEB,DBBCDEB
          GOTO      PNOTE250 IF NOT EQUAL
          MATCH     DBBIUNI,DBBCUNI
          GOTO      PNOTE250 IF NOT EQUAL
          PACK      KEY17,DBBCDEB,DBBCUNI,DBBCLIN
          CALL      DEDBBC1
          GOTO      PNOTE200
.
PNOTE250  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBBC1
          TRAPCLR   IO
          BRANCH    OVRCD,PNOTE999
          MOVE      ZERO,F3
PNOTE260  READ      TEMPWORD,SEQ;DBBCCOM
          GOTO      PNOTE999 IF OVER
          MOVE      F3,DBBCLIN
          PACK      KEY17,DBBIDEB,DBBIUNI,DBBCLIN
          UNPACK    KEY17,DBBCDEB,DBBCUNI,DBBCLIN
          CALL      WRDBBC1
          ADD       ONE,F3
          GOTO      PNOTE260
.
PNOTE999  RETURN
.------------------------------
. Credit Limit Check
.------------------------------
CRDCHK00  CALL      DEBOUT00      * Calculate Total Outstanding
          PACK      KEY14,DBDBDEB,SP70
          CALL      RSDBBI1
CRDCHK10  CALL      RKDBBI1
          BRANCH    OVRCD,CRDCHK20
          MATCH     DBBIDEB,DBDBDEB
          GOTO      CRDCHK20 IF NOT EQUAL
          ASSIGN    TOTALOUT+DBBITOT+DBBITAX,TOTALOUT
          GOTO      CRDCHK10
.
CRDCHK20  IF        TOTALOUT>DBDBCLM
            BEEP
            MOVE      "WARNING : Debtors Credit Limit Exceeded - ",DISPMSG
            CALL      MESSAGE1
            CLEAR     DISPMSG
            APPEND    "Limit -",DISPMSG
            MOVE      "9,999,999.99",KEY12
            FEDIT     DBDBCLM,KEY12
            APPEND    KEY12,DISPMSG
            APPEND    "  Total Charges -",DISPMSG
            MOVE      "9,999,999.99",KEY12
            FEDIT     TOTALOUT,KEY12
            APPEND    KEY12,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
          RETURN
.
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Cancel Changes.
.-------------------------------------------------------------
CANC0000  PACK     KEY14,DBBIDEB,DBBIUNI
          CALL     RDDBBI1
          IF       OVRCD=0
            ASSIGN   TOTALINV+DBBITOT+DBBITAX,TOTALINV
          ENDIF
          RETURN
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Delete Record.
.-------------------------------------------------------------
DELT0000  MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DELT1000,DELT9000,DELT9100
.
DELT1000  PACK     KEY14,DBBIDEB,DBBIUNI,SP70   * Setup Key to File
          CALL     RADBBI1             * Read Record
          IF       OVRCD=0
            CALL     DEDBBI1           * Delete Record
          ENDIF
.
. Delete Invoice Details
.-----------------------------------
          PACK     KEY17,DBBIDEB,DBBIUNI,SP70   * Setup Key to File
          CALL     RSDBBC1
DELT1100  CALL     RKDBBC1
          BRANCH   OVRCD,DELT1190
          MATCH    DBBIDEB,DBBCDEB
          GOTO     DELT1190 IF NOT EQUAL
          MATCH    DBBIUNI,DBBCUNI
          GOTO     DELT1190 IF NOT EQUAL
          PACK     KEY17,DBBCDEB,DBBCUNI,DBBCLIN,SP70   * Setup Key to File
          CALL     DEDBBC1
          GOTO     DELT1100
.
DELT1190  MOVE     ZERO,EXIT           * Exit Screen
          GOTO     DELT9999
.
DELT9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DELT9999
DELT9100  MOVE     ZERO,EXIT           * Exit Screen on "Cancel"
          GOTO     DELT9999
DELT9999  RETURN
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
ESALI000  IF        ACCEPT=1
            MOVE      "    6",FLDID
            CALL      GETPOSIT
            IF        EXIT=0
              MOVE      DBBIUNI,VAR
              CALL      DISPITEM
            ENDIF
            MOVE      "   11",FLDID
            CALL      GETPOSIT
          ENDIF
.
          MOVE      ZERO,CKEYTYP
          CALL      KDBITX00
          BRANCH    EXIT,ESALI900,ESALI900
          IF        DBITACT=0
            MOVE      "Sales Item Not Active. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ESALI000
          ENDIF
          MOVE      DBITITM,DBBIITM
.
          CALL      LODWP000
.
          COMPARE   ONE,ACCEPT
          GOTO      ESALI999 IF EQUAL
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FILDBBC1,WORDNAME
            CALL      DISPWORD
          ENDIF
          MOVE      DBITPRI,DBBIPRI
          ASSIGN    DBBIPRI*DBBIQTY,DBBITOT
          CALL      CALTAX00
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          GOTO      ESALI999
.
ESALI800  BEEP
          GOTO      ESALI000
.
ESALI900  BRANCH    ACCEPT,ESALI990
          MOVE      DBBIITM,KEY8
          CALL      RDDBIT1
          MOVE      ZERO,EXIT
          GOTO      ESALI999
.
ESALI990  MOVE      TWO,EXIT
.
ESALI999  RETURN
.
LODWP000  PREP     TEMPWORD,FILDBBC1
          PACK     KEY11,DBITITM,SP70
          CALL      RDDBIC1
          IF        OVRCD=0
            CALL      RPDBIC1
          ENDIF
LODWP100  CALL     RKDBIC1
          BRANCH   OVRCD,LODWP999
          MATCH    DBITITM,DBICITM
          GOTO     LODWP999 IF NOT EQUAL
          PACK     VAR,DBICCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBICCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     LODWP100
LODWP999  CLOSE    TEMPWORD
          RETURN
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
EQUTY000  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBBIQTY
          COMPARE   ONE,ACCEPT
          GOTO      EQUTY999 IF EQUAL
.
EQUTY100  ASSIGN    DBBIPRI*DBBIQTY,DBBITOT
          CALL      CALTAX00
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00
          MOVE      "   15",FLDID
          CALL      GETPOSIT
.
EQUTY999  RETURN
.
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
EPRIC000  MOVE      DBITPRI,DBBIPRI
          IF        DBITMOD=1
            IF        ACCEPT=0
              BEEP
              MOVE      "Price Fixed for this Sales Item. ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      EPRIC100
          ENDIF
.
          COMPARE   ZERO,DBBIPRI
          GOTO      EPRIC050 IF EQUAL
          COMPARE   ONE,ACCEPT
          GOTO      EPRIC100 IF EQUAL
.
EPRIC050  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBBIPRI
.
EPRIC100  ASSIGN    DBBIPRI*DBBIQTY,DBBITOT
          CALL      CALTAX00    * Calculate Tax Amount
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00    * Display Fields
          MOVE      "   16",FLDID
          CALL      GETPOSIT
.
EPRIC999  RETURN
.
CALTAX00  MOVE      ZERO,DBBITRT
          MOVE      ZERO,DBBITAX
          MOVE      ZERO,IBGEAMNT
.
          MATCH     SP6,DBBIGST
          GOTO      CALTAX99 IF EQUAL
.
          COMPARE   ONE,DBDBTEX
          GOTO      CALTAX99 IF EQUAL
.
          PACK      KEY14,DBBIGST,INVDATE,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     DBBIGST,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  IF        IBGEAMNT<>0
            ASSIGN    (DBBITOT*IBGEAMNT)/100.0,DBBITAX
          ENDIF
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,IBGEAMNT
.
CALTAX99  RETURN
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
ETOTL000  IF        DBITMOD=1
            ASSIGN    DBBIQTY*DBBIPRI,DBBITOT
            IF        ACCEPT=0
              BEEP
              MOVE      "Price Fixed for this Sales Item. ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      ETOTL999
          ENDIF
.
          ASSIGN    DBBIQTY*DBBIPRI,DBBITOT
          COMPARE   ONE,ACCEPT
          GOTO      ETOTL500 IF EQUAL
.
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBBITOT
          IF        !(DBBITOT=(DBBIQTY*DBBIPRI))
            ASSIGN    DBBITOT/DBBIQTY,DBBIPRI
          ENDIF
.
ETOTL500  CALL      CALTAX00
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00         * Display Other
          MOVE      "   17",FLDID
          CALL      GETPOSIT
.
ETOTL999  RETURN
.
.
DISPIT00  MOVE      "   16",FLDID   * Price
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIPRI,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   17",FLDID   * Extended Total
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBITOT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   18",FLDID   * Tax Rate
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBITRT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   19",FLDID   * Tax
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBITAX,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   50",FLDID   * Total Charge
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          RETURN
.------------------------------------------------------------
. Enter Tax Amount
.------------------------------------------------------------
ETAXA000  COMPARE   ONE,DBDBTEX
          GOTO      ETAXA100 IF NOT EQUAL
          MOVE      ZERO,DBBITAX
          MOVE      ZERO,DBBITRT
          COMPARE   ONE,ACCEPT
          GOTO      ETAXA900 IF EQUAL
          MOVE      "WARNING : Debtor is Flagged as Tax Exempt - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      ETAXA200
.
ETAXA100  CALL      CALTAX00
          COMPARE   ONE,ACCEPT          * Default if in Insert Mode
          GOTO      ETAXA900 IF EQUAL
.
ETAXA200  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBBITAX
.
          ASSIGN    DBBITAX+DBBITOT,TOTALAMT
          MOVE      "   50",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
.
ETAXA900  MOVE      ZERO,EXIT
          MOVE      ZERO,OVRCD
.
ETAXA999  RETURN
.
.---------------------------------------------------------
. Enter User Defined Code 1
.---------------------------------------------------------
EUDCA000  MOVE       "FD01",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCA999,EUDCA999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCA000
          ENDIF
          MOVE       DBCDCOD,DBBIUC1
          MOVE       DBCDDES,DBBIUC1D
EUDCA999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 2
.---------------------------------------------------------
EUDCB000  MOVE       "FD02",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCB999,EUDCB999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCB000
          ENDIF
          MOVE       DBCDCOD,DBBIUC2
          MOVE       DBCDDES,DBBIUC2D
.
EUDCB999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 3
.---------------------------------------------------------
EUDCC000  MOVE       "FD03",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCC999,EUDCC999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCC000
          ENDIF
          MOVE       DBCDCOD,DBBIUC3
          MOVE       DBCDDES,DBBIUC3D
.
EUDCC999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 4
.---------------------------------------------------------
EUDCD000  MOVE       "FD04",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCD999,EUDCD999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCD000
          ENDIF
          MOVE       DBCDCOD,DBBIUC4
          MOVE       DBCDDES,DBBIUC4D
.
EUDCD999  RETURN
.------------------------------------------------------------
. Enter GST Code
.------------------------------------------------------------
EGST0000  BRANCH    IBCNUGST,EGST0100,EGST0100
          GOTO      EGST9999
.
EGST0100  UNPACK    SP70,IBGSDESC
          MOVE      DBITGST,IBGSCODE
          CALL      KIBGSA00
          BRANCH    EXIT,EGST1000,EGST9999
.
          MOVE      IBGSCODE,DBBIGST
          GOTO      EGST1500
.
EGST1000  MOVE      SP70,DBBIGST
          MOVE      SP70,IBGSDESC
.
EGST1500  CALL      CALTAX00
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00         * Display Other
.
          MOVE      "   52",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,IBGSDESC,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,DBBIGST,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
          GOTO      EGST9999
.
EGST9999  RETURN
.
REDDET00   ASSIGN     DBFDTAX+DBFDTOT,TOTALAMT
           MOVE       DBFDITM,KEY8
           CALL       RDDBIT1
           RETURN
.-------------------------------------------------------------
. Re Print Invoice
.-------------------------------------------------------------
REPR0000  CALL       OPNPRINT
          CALL       PRINV000              * Print Invoice
          CALL       CLSPRINT
.
          MOVE       "Re-Print Complete - ",DISPMSG
          BEEP
          CALL       MESSAGE1
.
REPR9999  RETURN
.
EINVN000   MOVE     ONE,DBFHDTY
           MOVE     DBDBDEB,DBFHDEB
           MOVE     ZERO,CKEYTYP
           CALL     KDBFHA00
           BRANCH   EXIT,EINVN999,EINVN999
           ASSIGN   DBFHTOT+DBFHTAX,DBFHDTOT
EINVN999   RETURN
.---------------------------------------
. Setup Defaults for Invoice Generation
.---------------------------------------
DEFPAR00  MOVE      "Start     ",FROMINV
          MOVE      "Finish    ",TOINV
          MOVE      SP70,STRINV
          MOVE      Z70,ENDINV
.
          PACK      INVDATE,CCC,CYY,CMM,CDD
          READ      CONTROLF,EIGHTY1;CFDBPASS,*77,CFDBSQLA,CFDBSQLB:
                                                   CFDBFDAT,CFDBTDAT
          REP       " 0",INVDATE
          MATCH     CFDBFDAT,INVDATE   * Date Range
          GOTO      DEFPAR80 IF LESS
          MATCH     INVDATE,CFDBTDAT
          GOTO      DEFPAR80 IF LESS
          GOTO      DEFPAR90
.
DEFPAR80  MOVE      CFDBTDAT,INVDATE
.
DEFPAR90  MOVE      ZERO,ACCEPT
          RETURN
.
.-------------------------------------------------------------
. Print Invoices
.-------------------------------------------------------------
PINV0000  READ      CONTROLF,EIGHTY1;*20,CFDBIFL
          IF        CFDBIFL=0
            MOVE      "ERROR : Invoice Generation NOT in Progress. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      PINV9999
          ENDIF
.
          CALL      OPNPRINT
          DISPLAY   *P1:24,*EL,"Scanning : "
          MOVE      ZERO,SECTOR
          PACK      KEY8,SP70
          CALL      RSDBDB1
PINV1000  CALL      RKDBDB1
          BRANCH    OVRCD,PINV9000
          ADD       ONE,SECTOR
          IF        SECTOR%100=0
            DISPLAY   *P15:24,*V2LON,SECTOR
          ENDIF
.
          CALL      PDEB0000    * Process Billing Details
.
          GOTO      PINV1000
.
PINV9000  CALL      CLSPRINT
          MOVE      "Invoice Processing Complete - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ZERO,CFDBIFL
          WRITAB    CONTROLF,EIGHTY1;*20,CFDBIFL
.
PINV9999  RETURN
.-------------------------------------------------------------------------
. Process Billing Details
.   - Create New Invoice for all Billing Details
.   - Print New Invoice (Standard Invoice Print ie Pass Debtor & Invoice)
.-------------------------------------------------------------------------
PDEB0000  MOVE       ZERO,STARTINV         * Set Flag to Start
          PACK       KEY15,DBDBDEB,TWO,SP70
          CALL       RSDBBI2
PDEB1000  CALL       RKDBBI2
          BRANCH     OVRCD,PDEB9000
          MATCH      DBDBDEB,DBBIDEB
          GOTO       PDEB9000 IF NOT EQUAL
          MATCH      "2",DBBISTA           * Invoicing in Progress
          GOTO       PDEB9000 IF NOT EQUAL
          BRANCH     STARTINV,PDEB2000
          CALL       STINV000              * Start Invoice for Debtor
.
PDEB2000  CALL       PLINE000              * Process Line Item
.
          GOTO       PDEB1000
.
PDEB9000  COMPARE    ZERO,STARTINV         * Did we create an invoice
          GOTO       PDEB9999 IF EQUAL     * NO
.
          IF         CFDBILAY=8
            CALL       GETAD000
          ENDIF
.
          PACK       KEY21,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          CALL       RADBFH1
          IF         OVRCD=0
            CALL       UPDBFH1             * Update Totals
          ENDIF
.
          MOVE       DBDBTER,KEY3
          CALL       RDDBTE1
          IF         OVRCD=1
            MOVE       SP70,DBTEDES
          ENDIF
.
. Print the invoice.
.
          CALL       PRINV000              * Print Invoice
.
PDEB9999  RETURN
.----------------------------------------------------
. Get Next Invoice Number & Initailise Header Record
.----------------------------------------------------
STINV000  MOVE       ONE,STARTINV
          READ       CONTROLF,EIGHTY1;*242,CFDBMAN
          READ       CONTROLF,EIGHTY7;*26,CFDBINV
          COMPARE    ONE,CFDBMAN
          GOTO       STINV010 IF NOT EQUAL
          CALL       MANINV00
          GOTO       STINV020
.
STINV010  ADD        ONE,CFDBINV
          WRITAB     CONTROLF,EIGHTY7;*26,CFDBINV
.
STINV020  MOVE       ZERO,TRANLINE
.
          MOVE       DBDBDEB,DBFHDEB           * Debtor
          MOVE       ONE,DBFHDTY               * Doc. Type 1=Inv
          MOVE       CFDBINV,DBFHDOC           * Document Reference
          REP        " 0",DBFHDOC
          MOVE       INVDATE,DBFHDDAT          * Document Date
          MOVE       DBDBTER,DBFHTER           * Terms Code
          MOVE       ZERO,DBFHTOT              * Total of Document
          MOVE       ZERO,DBFHTAX              * Tax Total
          PACK       DBFHDPRT,CCC,CYY,CMM,CDD  * Date Printed
          PACK       DBFHDSTA,SP70             * Statement Date
          PACK       DBFHCDAT,CCC,CYY,CMM,CDD  * Creation Date
          REP        " 0",DBFHDPRT             * Ensure Dates Zero Filled
          REP        " 0",DBFHCDAT
          REP        " 0",DBFHDDAT
          CLOCK      TIME,CTIMEIS
          UNPACK     CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK       DBFHCTIM,CHOUR,CMIN,KEY2
          MOVE       PASSCODE,DBFHCUSR         * Creation User ID
          MOVE       SP70,DBFHSPA              * Spare
.
          PACK       KEY21,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          CALL       RADBFH1
          COMPARE    ZERO,OVRCD
          GOTO       STINV000 IF EQUAL
          CALL       WRDBFH1
.
          RETURN
.------------------------------------------------------------
. Manual Invoice Number Allocation
.------------------------------------------------------------
MANINV00  MOVE       SP70,DISPMSG
          CALL       MESSAGE2
.
          MOVE       DBFHUR1,SAVUR1
          MOVE       DBFHUR2,SAVUR2
          MOVE       DBFHUD1,SAVUD1
          MOVE       DBFHUD2,SAVUD2
          MOVE       DBFHUY1,SAVUY1
          MOVE       DBFHUY2,SAVUY2
          MOVE       DBFHUC1,SAVUC1
          MOVE       DBFHUC2,SAVUC2
.
MANINV10  BEEP
          KEYIN      *P1:24,*EL,"Enter Invoice Number : ",CFDBINV:
                     *P50:24,*EL,"Ok (Y/N) ? ",ANS
          REP        UPPLOW,ANS
          MATCH      ANSN,ANS
          GOTO       MANINV10 IF EQUAL
          MATCH      ANSY,ANS
          GOTO       MANINV10 IF NOT EQUAL
          COMPARE    ONE,CFDBINV
          GOTO       MANINV10 IF LESS
.
MANINV20  MOVE       DBDBDEB,DBFHDEB           * Debtor
          MOVE       ONE,DBFHDTY               * Doc. Type 1=Inv
          MOVE       CFDBINV,DBFHDOC           * Document Reference
          REP        " 0",DBFHDOC           * Document Reference
          MOVE       DBFHDOC,KEY12
          PACK       KEY21,DBFHDTY,DBFHDOC,SP70
          CALL       RSDBFH6
          CALL       RKDBFH6
          BRANCH     OVRCD,MANINV99
          MATCH      "1",DBFHDTY
          GOTO       MANINV99 IF NOT EQUAL
          MATCH      KEY12,DBFHDOC
          GOTO       MANINV99 IF NOT EQUAL
          BEEP
          DISPLAY    *P1:24,*EL,"Invoice Number Already Exists - ";
          CALL       HITENTER
          GOTO       MANINV10
.
MANINV99  CALL       MESSAGE3
.
          MOVE       SAVUR1,DBFHUR1
          MOVE       SAVUR2,DBFHUR2
          MOVE       SAVUD1,DBFHUD1
          MOVE       SAVUD2,DBFHUD2
          MOVE       SAVUY1,DBFHUY1
          MOVE       SAVUY2,DBFHUY2
          MOVE       SAVUC1,DBFHUC1
          MOVE       SAVUC2,DBFHUC2
.
          RETURN
.------------------------------------------------------------------------
. Process Billing Line Item
.  - Create Financial Detail Record
.  - Create Financial Notes Records
.  - Delete Billing Details
.------------------------------------------------------------------------
PLINE000  ADD        ONE,TRANLINE
          MOVE       TRANLINE,DBFDDLN   * Line Number
          MOVE       DBBIDEB,DBFDDEB    * Debtor
          MOVE       ONE,DBFDDTY        * Doc. Type 1=Inv
          MOVE       CFDBINV,DBFDDOC    * Document Reference (Invoice Number)
          REP        " 0",DBFDDOC
          PACK       KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          CALL       RADBFD1       * Check File
          COMPARE    ZERO,OVRCD    * Must Write to File
          GOTO       PLINE000 IF EQUAL
.
          CALL       CHKPAY00      * Check for Over Credit or Payments
.
PLINE100  CALL       MVFDT000      * Move Fields
          PACK       KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
.
          CALL       WRDBFD1       * Write Detail Record
.
          CALL       CNOTE000      * Copy Notes from Billing File to Fin Det.
.
          PACK       KEY14,DBBIDEB,DBBIUNI
          CALL       RDDBBI1
          IF         OVRCD=0
            CALL       DEDBBI1
          ENDIF
.
          ADD        DBFDTOT,DBFHTOT   * Total of Document
          ADD        DBFDTAX,DBFHTAX   * Tax Total
.
          RETURN
.------------------------------------------------------------
. Move in Financial Detail Transaction
.------------------------------------------------------------
MVFDT000  MOVE       TRANLINE,DBFDDLN   * Line Number
          MOVE       DBBIDEB,DBFDDEB    * Debtor
          MOVE       ONE,DBFDDTY        * Doc. Type 1=Inv
          MOVE       CFDBINV,DBFDDOC    * Document Reference (Invoice Number)
          REP        " 0",DBFDDOC
          MOVE       DBFDDOC,DBFDINV    * Invoice Ref
          MOVE       DBFDDLN,DBFDILN    * Invoice Line
          MOVE       INVDATE,DBFDIDAT   * Invoice Date
          REP        " 0",DBFDIDAT
          MOVE       "99999999",DBFDPDAT * Paid Date
          MOVE       ZERO,DBFDGLS       * Ledger Status
          MOVE       DBBIITM,KEY8       * Read Item for General Ledger Details
          CALL       RDDBIT1
          MOVE       DBITLED,DBFDLED    * Ledger
          MOVE       DBITIAC,DBFDIAC    * Income Account
          MOVE       DBITCAC,DBFDCAC    * Control Account
          MOVE       DBITTAC,DBFDTAC    * Tax Account
          MOVE       DBITTCA,DBFDTCA    * Tax Control
          MOVE       DBBIUNI,DBFDBCHG   * Billing Charge Number
          MOVE       DBBIDAT,DBFDBDAT   * Billing Input Date
          MOVE       DBBITIM,DBFDBTIM   * Billing Input Time
          MOVE       DBBIUID,DBFDBUSR   * Billing Input User ID
          MOVE       DBBIITM,DBFDITM    * Sales Item Code
          MOVE       DBBISDAT,DBFDSDAT  * Service Date
          MOVE       DBBIDREF,DBFDDREF  * Debtors Reference
          MOVE       DBBIOREF,DBFDOREF  * Our Reference
          MOVE       DBBIQTY,DBFDQTY    * Quantity
          MOVE       DBBIPRI,DBFDPRI    * Price
          MOVE       DBBITOT,DBFDTOT    * Extended Total
.
.         CALL       CALTAX00
.
          MOVE       IBGEAMNT,DBFDTRT    * Tax Rate
          MOVE       DBBITAX,DBFDTAX     * Tax Amount
          MOVE       DBBIGST,DBFDGST     * GST Code
.
          MOVE       ZERO,DBFDPAID
          IF         PAIDFLG=1
            MOVE       PAIDAMT,DBFDPAID
          ENDIF
          IF         (DBFDTOT+DBFDTAX-DBFDPAID=0)
            MOVE       INVDATE,DBFDPDAT  * Paid Date=Inv. Date if 0 Outstanding
            REP        " 0",DBFDPDAT
          ENDIF
.
          MOVE       DBBIUR1,DBFDUR1    * User Def Ref 1
          MOVE       DBBIUR2,DBFDUR2    * User Def Ref 2
          MOVE       DBBIUD1,DBFDUD1    * User Def Date 1
          MOVE       DBBIUD2,DBFDUD2    * User Def Date 2
          MOVE       DBBIUY1,DBFDUY1    * User Def Y/N 1
          MOVE       DBBIUY2,DBFDUY2    * User Def Y/N 2
          MOVE       DBBIUC1,DBFDUC1    * User Def Code 1
          MOVE       DBBIUC2,DBFDUC2    * User Def Code 2
          MOVE       DBBIUC3,DBFDUC3    * User Def Code 3
          MOVE       DBBIUC4,DBFDUC4    * User Def Code 4
          MOVE       SP70,DBFDSPA       * Spare
.
          RETURN
.----------------------------------------------------------------------
. Check for Extra Credit or Over Payment transaction with
. "000000000" Invoice Reference
.----------------------------------------------------------------------
CHKPAY00  MOVE       ZERO,PAIDAMT
          MOVE       ZERO,PAIDFLG
          ASSIGN     DBBITOT+DBBITAX,TOTALINV
CHKPAY10  MOVE       "000000000000",KEY12
          PACK       KEY24,DBBIDEB,ONE,KEY12,SP70
          CALL       RSDBFD1
          CALL       RKDBFD1
          BRANCH     OVRCD,CHKPAY99
          MATCH      DBFDDEB,DBBIDEB
          GOTO       CHKPAY99 IF NOT EQUAL
          MATCH      "1",DBFDDTY
          GOTO       CHKPAY99 IF NOT EQUAL
          MATCH      "000000000000",DBFDDOC
          GOTO       CHKPAY99 IF NOT EQUAL
.
          MOVE       ONE,PAIDFLG
          ASSIGN     SEQ*(DBFDTOT+DBFDTAX),TOTALCRD
.
          IF         TOTALINV>TOTALCRD
            SUB        TOTALCRD,TOTALINV
            ADD        TOTALCRD,PAIDAMT
            CALL       DEDUM000         * Delete Dummy & Update Credit/Payment
            GOTO       CHKPAY10         * Cr Offset against new invoice
          ENDIF
.
          ADD        TOTALINV,PAIDAMT
          ADD        TOTALINV,DBFDTOT
          IF         DBFDTOT>0
            ADD        DBFDTOT,DBFDTAX
            MOVE       ZERO,DBFDTOT
          ENDIF
          IF         DBFDTOT+DBFDTAX=0
            CALL       DEDUM000         * Delete Dummy & Update Credit/Payment
          ELSE
            CALL       UPDUM000         * Update Dummy & Update Credit/Payment
          ENDIF
.
CHKPAY99  RETURN
.--------------------------------------------------------------------
. Delete Dummy and Update Payment/Credit Record with Invoice Detail
.--------------------------------------------------------------------
DEDUM000  PACK       KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          CALL       DEDBFD1          * Delete Dummy Invoice Transaction
          PACK       KEY24,DBFDOREF   * Key of Original Credit/Payment
          CALL       RDDBFD1          * Update with Invoice Reference
          IF         OVRCD=0
            MOVE       CFDBINV,DBFDINV  * Invoice Reference
            REP        " 0",DBFDINV     * Invoice Reference
            MOVE       TRANLINE,DBFDILN * Invoice Line
            MOVE       INVDATE,DBFDIDAT * Invoice Date
            CALL       UPDBFD1          * Update with Invoice Reference
          ENDIF
          RETURN
.--------------------------------------------------------------------
. Update Dummy and Update Payment/Credit Record with Invoice Detail
. This will require the system to generate a new entry into the
. transaction details file.
.--------------------------------------------------------------------
UPDUM000  CALL       UPDBFD1          * Update Dummy Invoice
          PACK       KEY24,DBFDOREF   * Key of Original Credit/Payment
          CALL       RDDBFD1          * Update with Invoice Reference
          BRANCH     OVRCD,UPDUM999
.
          MOVE       DBFDTOT,SAVETOT
          SUB        TOTALINV,DBFDTOT
          IF         DBFDTOT<0
            ASSIGN     DBFDTOT*SEQ,SAVETAX
            ADD        DBFDTOT,DBFDTAX
            MOVE       ZERO,DBFDTOT
          ELSE
            MOVE       TOTALINV,SAVETOT
            MOVE       ZERO,SAVETAX
          ENDIF
          ASSIGN     DBFDTOT+DBFDTAX,DBFDPAID
          CALL       UPDBFD1          * Update with Invoice Reference
.
          MOVE       CFDBINV,DBFDINV  * Invoice Reference
          REP        " 0",DBFDINV     * Invoice Reference
          MOVE       TRANLINE,DBFDILN * Invoice Line
          MOVE       INVDATE,DBFDIDAT * Invoice Date
          MOVE       SAVETOT,DBFDTOT  * Split Total
          MOVE       SAVETAX,DBFDTAX  * Split Tax
          ASSIGN     DBFDTOT+DBFDTAX,DBFDPAID
.
          MOVE       DBFDDLN,F3
UPDUM100  ADD        ONE,F3
          MOVE       F3,DBFDDLN
          PACK       KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          CALL       RADBFD1
          COMPARE    ZERO,OVRCD
          GOTO       UPDUM100 IF EQUAL
          CALL       WRDBFD1
.
UPDUM999  RETURN
.-------------------------------------------------------------------
. Copy Billing Notes to Financial Details
.-------------------------------------------------------------------
CNOTE000  PACK       KEY17,DBBIDEB,DBBIUNI,SP70
          CALL       RSDBBC1
CNOTE100  CALL       RKDBBC1
          BRANCH     OVRCD,CNOTE999
          MATCH      DBBIDEB,DBBCDEB
          GOTO       CNOTE999 IF NOT EQUAL
          MATCH      DBBIUNI,DBBCUNI
          GOTO       CNOTE999 IF NOT EQUAL
.
CNOTE110  PACK       KEY27,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,DBBCLIN,SP70
          CALL       RADBFN1
          BRANCH     OVRCD,CNOTE200
          MOVE       DBBCLIN,F3
          ADD        ONE,F3
          MOVE       F3,DBBCLIN
          GOTO       CNOTE110
.
CNOTE200  UNPACK     KEY27,DBFNDEB,DBFNDTY,DBFNDOC,DBFNDLN,DBFNLIN
          MOVE       DBBCCOM,DBFNCOM
          MOVE       SP70,DBBCSPA
          CALL       WRDBFN1
.
          PACK       KEY17,DBBCDEB,DBBCUNI,DBBCLIN
          CALL       DEDBBC1
          GOTO       CNOTE100
.
CNOTE999  RETURN
.
.------------------------------------------------------------
. Re Print Range of Invoices
.------------------------------------------------------------
PRTRAN00  CALL      OPNPRINT
          PACK      KEY21,STRINV,SP70
          CALL      RSDBFH3
PRTRAN10  CALL      RKDBFH3
          BRANCH    OVRCD,PRTRAN90
          MATCH     DBFHDOC,ENDINV
          GOTO      PRTRAN90 IF LESS
          MATCH     "1",DBFHDTY
          GOTO      PRTRAN10 IF NOT EQUAL
.
          MOVE      DBFHDEB,KEY8
          CALL      RDDBDB1
          BRANCH    OVRCD,PRTRAN10
.
          CALL      GETCDS00
.
          CALL      PRINV000              * Print Invoice
          GOTO      PRTRAN10
.
PRTRAN90  CALL      CLSPRINT
          MOVE      "Re-Print Complete - ",DISPMSG
          BEEP
          CALL      MESSAGE1
.
PRTRAN99  RETURN
.--------------------------------------------------
. Enter Range
.  where ssff    = System & File for Keyin Routines
.        INV     = Field ID
.        RINVN   = Call Routine Label
.        "    1" = Screen Item Number for "from" Variable
.        "    2" = Screen Item Number for "to" Variable
.        yyyyy.. = Description of Variable
.
.  Return Values
.        FROMINV  Code & Description for Start of Range
.        TOINV    Code & Description for End of Range
.        STRINV   Code for Start of Range
.        ENDINV   Code for End of Range
.--------------------------------------------------
RINVN000   MOVE     "    5",FLDID
           CALL     GETPOSIT
           KEYIN    *PCCOL:CVERT,*RV,*V2LON,*JR,*ZF,STRINV
           MATCH    "000000000000",STRINV
           GOTO     RINVN100 IF EQUAL
           PACK     KEY11,SP70
           REP      " 0",KEY11
           PACK     KEY12,KEY11,EXITCHAR
           MATCH    KEY12,STRINV
           GOTO     RINVN999 IF EQUAL
           PACK     FROMINV,STRINV,SP70
           GOTO     RINVN140
RINVN100   MOVE     "Start             ",FROMINV
           MOVE     SP70,STRINV
.
RINVN140   MOVE     FROMINV,VAR
           CALL     DISPITEM
.
RINVN150   MOVE     "    6",FLDID
           CALL     GETPOSIT
           MOVE     SP70,ENDINV
           KEYIN    *PCCOL:CVERT,*RV,*V2LON,*JR,*ZF,ENDINV
           MATCH    "000000000000",ENDINV
           GOTO     RINVN100 IF EQUAL
           PACK     KEY11,SP70
           REP      " 0",KEY11
           PACK     KEY12,KEY11,EXITCHAR
           MATCH    KEY12,ENDINV
           GOTO     RINVN999 IF EQUAL
           PACK     TOINV,ENDINV,SP70
           MATCH    STRINV,ENDINV
           GOTO     RINVN999 IF EQUAL
           GOTO     RINVN999 IF NOT LESS
           BEEP
           MOVE     "To Invoice Must Be > From Invoice - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RINVN000
.
RINVN200   MOVE     "Finish             ",TOINV
           MOVE     Z70,ENDINV
.
RINVN999   MOVE     "    5",FLDID
           CALL     GETPOSIT
           RETURN
.
DEFAULTY    MOVE     ANSY,DEFYESNO
            RETURN
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Post Changes.
.-------------------------------------------------------------
SDEB0000  READ     CONTROLF,EIGHTY1;*233,CFDBNDB
          ADD      ONE,CFDBNDB
          WRITAB   CONTROLF,EIGHTY1;*233,CFDBNDB
          MOVE     CFDBNDB,KEY8
          SQUEEZE  KEY8
          PACK     DBDBDEB,KEY8,SP70
.
SDEB1000  PACK     KEY8,DBDBDEB,SP70  * Setup Key
          CALL     RADBDB1            * Check for record on file
          BRANCH   OVRCD,SDEB2000
          GOTO     SDEB0000
.
SDEB2000  CALL     WRDBDB1            * Write New Record
          MOVE     ONE,AUDTTYPE       * New Record Audit Type
          CALL     WADBDB00           * Write Audit Record
          CALL     SNOTE000           * Save Notes
.
          PROC     DEBDKIUP
.
          RETURN                      * Return to program.
.---------------------------
. Save Notes
.---------------------------
SNOTE000  PACK      KEY11,DBDBDEB,SP70
          CALL      RSDBDC1
SNOTE200  CALL      RKDBDC1
          BRANCH    OVRCD,SNOTE250
          MATCH     DBDBDEB,DBDCDEB
          GOTO      SNOTE250 IF NOT EQUAL
          PACK      KEY11,DBDCDEB,DBDCLIN
          CALL      DEDBDC1
          GOTO      SNOTE200
.
SNOTE250  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBDC1
          TRAPCLR   IO
          BRANCH    OVRCD,SNOTE999
          MOVE      ZERO,F3
SNOTE260  READ      TEMPWORD,SEQ;DBDCCOM
          GOTO      SNOTE999 IF OVER
          MOVE      F3,DBDCLIN
          PACK      KEY11,DBDBDEB,DBDCLIN
          UNPACK    KEY11,DBDCDEB,DBDCLIN
          CALL      WRDBDC1
          ADD       ONE,F3
          GOTO      SNOTE260
.
SNOTE999  RETURN
.
.---------------------------------------------------------
. Debtor Code for Addition
.---------------------------------------------------------
EDEBA000  MOVE     SAVEDEB,DBDBDEB
          CALL     RDDBDB1
EDEBA999  RETURN
.------------------------------------------------------------
. Enter Address Line 2 and Validate Suburb
.------------------------------------------------------------
KADD2000  STRIP     DBDBAD2
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBAD2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBAD2
          SFORMAT   VAR,127
          ENDSET    DBDBAD2
          APPEND    SP70,DBDBAD2
          RESET     DBDBAD2
          CMATCH    EXITCHAR,DBDBAD2
          GOTO      KADD2900 IF EQUAL
.
          MOVE      TWO,SUBKYLIN
          PACK      IBAADLN2,DBDBAD2,SP30,SP30
          PACK      IBAADLN3,DBDBAD3,SP30,SP30
          PROC      AUTOPCOD
          BRANCH    EXIT,KADD2000,KADD2500
.
          MOVE      IBAPCOD,DBDBPC
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPC,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "    9",FLDID
          CALL      GETPOSIT
KADD2500  MOVE      ZERO,EXIT
          GOTO      KADD2999
.
KADD2900  MOVE      TWO,EXIT
.
KADD2999  RETURN
.
.------------------------------------------------------------
. Enter Address Line 3 and Validate Suburb
.------------------------------------------------------------
KADD3000  STRIP     DBDBAD3
          SFORMAT   VAR,SCPSLEN
          MOVE      DBDBAD3,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBDBAD3
          SFORMAT   VAR,127
          ENDSET    DBDBAD3
          APPEND    SP70,DBDBAD3
          RESET     DBDBAD3
          CMATCH    EXITCHAR,DBDBAD3
          GOTO      KADD3900 IF EQUAL
.
          MOVE      THREE,SUBKYLIN
          PACK      IBAADLN2,DBDBAD2,SP30,SP30
          PACK      IBAADLN3,DBDBAD3,SP30,SP30
          PROC      AUTOPCOD
          BRANCH    EXIT,KADD3000,KADD3500
.
          MOVE      IBAPCOD,DBDBPC
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPC,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   10",FLDID
          CALL      GETPOSIT
KADD3500  MOVE      ZERO,EXIT
          GOTO      KADD3999
.
KADD3900  MOVE      TWO,EXIT
.
KADD3999  RETURN
.
.------------------------------------------------------------
. Enter U/R Number and Read details from Patient Master File
.------------------------------------------------------------
EURNO000  BRANCH    FLGIBAPT,EURNO999
.
.         Remove use of 6 digit U/R No.                                 v90201
.
EURNO200  KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,DBDBPUR
          ENDSET    DBDBPUR
          APPEND    SP70,DBDBPUR
          RESET     DBDBPUR
.
          ENDSET    DBDBPUR
          CMATCH    EXITCHAR,DBDBPUR
          GOTO      EURNO910 IF EQUAL
          CMATCH    QUEST,DBDBPUR
          GOTO      EURNO210 IF NOT EQUAL
.
          CALL      HURNO000
          BRANCH    EXIT,EURNO000
.
EURNO210  RESET     DBDBPUR
          MATCH     SP70,DBDBPUR
          GOTO      EURNO900 IF EQUAL
.
          CALL      GETMAS00
          BRANCH    EXIT,EURNO000
          MOVE      ZERO,EXIT
          GOTO      EURNO999
.
EURNO900  MOVE      ONE,EXIT
          GOTO      EURNO999
.
EURNO910  MOVE      TWO,EXIT
          GOTO      EURNO999
.
EURNO999  RETURN
.
GETMAS00  MOVE      DBDBPUR,KEY8
          CALL      RDMAST1                     * Use PATMA1 read        v90201
          IF        OVRCD=1
            MOVE      "U/R Number Does Not Exist. ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      ONE,EXIT
            GOTO      GETMAS99
          ENDIF
.
GETMAS80  MOVE      ONE,PACFRMT
          IF        CFDBNFMT = 2
            MOVE      TWO,PACFRMT                                      *I-75900
          ENDIF                                                        *I-75900
          MOVE      PTITL,PACTITLE
          MOVE      PGNAME,PACGNAME
          MOVE      PSNAME,PACSNAME
          CALL      PACNAME
          MOVE      PACFNAME,DBDBNA1
          MOVE      PADD1,DBDBAD1
          MOVE      PADD2,DBDBAD2
          MOVE      PSUBRB,DBDBAD3
          MOVE      PADD4,DBDBAD4                                      *I-75900
          MOVE      PPOST,DBDBPC
          MOVE      PTELEB,DBDBPH1
          MOVE      PTELEP,DBDBPH2
.
GETMAS90  MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBNA1,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBAD1,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBAD2,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBAD3,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBAD4,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPC,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH1,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH2,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   22",FLDID
          CALL      GETPOSIT
.
GETMAS99  RETURN
.------------------------------------------------------------
. Fork to Patient Search Program
.------------------------------------------------------------
HURNO000  MOVE      SP70,DBDBPUR
          MOVE      "ibadeb",KEY6
          PACK      FILENAME,KEY6,PORT,SP70
          REP       " 0",FILENAME
          PACK      ERROR,FILENAME,SP70
          MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          FORK      "IBAADT13",ANS
.
          CALL      PUTSCR00
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RETURNFL,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,HURNO900
.
HURNO200  READ      RETURNFL,SEQ;DBDBPUR
          GOTO      HURNO800 IF OVER
          CLOSE     RETURNFL
          PREP      RETURNFL,FILENAME
          CLOSE     RETURNFL
          MOVE      ZERO,EXIT
          GOTO      HURNO999
.
HURNO800  CLOSE     RETURNFL
          PREP      RETURNFL,FILENAME
          CLOSE     RETURNFL
.
HURNO900  MOVE      ONE,EXIT
.
HURNO999  RETURN
.
.----------------------------------------------------------
. Sort Key Keyin Default to debtor name if blank
.----------------------------------------------------------
ESORT000  MATCH     SP70,DBDBSORT
          IF        @EQUAL
            MOVE      DBDBNA1,DBDBSORT
          ENDIF
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBDBSORT
          RETURN

.---------------------------------------------------------
. Enter User Defined Code 1
.---------------------------------------------------------
EDBUA000  MOVE       "DB01",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EDBUA999,EDBUA999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EDBUA000
          ENDIF
          MOVE       DBCDCOD,DBDBUC1
          MOVE       DBCDDES,DBDBUC1D
EDBUA999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 2
.---------------------------------------------------------
EDBUB000  MOVE       "DB02",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EDBUB999,EDBUB999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EDBUB000
          ENDIF
          MOVE       DBCDCOD,DBDBUC2
          MOVE       DBCDDES,DBDBUC2D
EDBUB999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 3
.---------------------------------------------------------
EDBUC000  MOVE       "DB03",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EDBUC999,EDBUC999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EDBUC000
          ENDIF
          MOVE       DBCDCOD,DBDBUC3
          MOVE       DBCDDES,DBDBUC3D
EDBUC999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 4
.---------------------------------------------------------
EDBUD000  MOVE       "DB04",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EDBUD999,EDBUD999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EDBUD000
          ENDIF
          MOVE       DBCDCOD,DBDBUC4
          MOVE       DBCDDES,DBDBUC4D
EDBUD999  RETURN
.
.---------------------------------------------------------
. Enter Warning Code
.---------------------------------------------------------
EWARN000  MOVE       "DBWR",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          MOVE       DBCDCOD,DBDBWRN
          BRANCH     EXIT,EWARN999,EWARN999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EWARN000
          ENDIF
          MOVE       DBCDCOD,DBDBWRN
          MOVE       DBCDDES,DBDBWRND
EWARN999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       AUTOPCOD    
          INC       DEBBICIO/INC
          INC       DEBBILIO/INC
          INC       DEBCODIO/INC
          INC       DEBCODKY    
          INC       DEBDBTIO/INC
          INC       DEBDBTKY    
          INC       DEBDCMIO/INC
          INC       DEBDEPIO/INC
          INC       DEBDKIIO/INC
          INC       DEBDKIKY    
          INC       DEBDKIPR    
          INC       DEBFADCD    
          INC       DEBFDTIO/INC
          INC       DEBFNOIO/INC
          INC       DEBFTHIO/INC
          INC       DEBFTHKY    
          INC       DEBICMIO/INC
          INC       DEBINVCD    
          INC       DEBITMCD    
          INC       DEBITMIO/INC
          INC       DEBITMKY    
          INC       DEBLINIO/INC
          INC       DEBOUTCD    
          INC       DEBPTYIO/INC
          INC       DEBSECIO/INC
          INC       DEBSRHCD    
          INC       DEBTERIO/INC
          INC       DEBTERKY    
          INC       IBAGEDIO/INC
          INC       IBAGKIKY    
          INC       IBAGSTIO/INC
          INC       IBAGSTKY    
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
          INC       IBATMDIO/INC
          INC       IBATMHIO/INC
          INC       PATDSCIO/INC
          INC       PATGBCRN    
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATSNAIO/INC
          INC       PATVISIO/INC
          INC       PMSVX1IO/INC
          INC       TFILENAM    
          INC       WEBERRIO/INC
.
          INC       STDGENCD
.
