.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.03.01  27/02/2013  Ania P              CAR 281021
.           RECOMPILED for FMSBNKKY
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
. V9.11.01  27.03.2009 Sandra Barcham   172763
.           Added parameter FMCOEPWC to std laser
.-------------------------------------------------------
. V9.09.01  30.07.2007 Sandra Barcham CAR 146314
.           Re-use cheque layout 4 (DVC) for Modbury
.-------------------------------------------------------
. V9.03.01  17.02.2004 Sandra Barcham
.           Changed variable name FMCHFORM to FMCHFRMT
.-------------------------------------------------------
. V9.02.01  03.04.2003 Peter Vela                   CAR 19895
.           Recompiled for APS60CD
.           Changed system date to cheque printing date in all cheque layouts.
. V9.02.00  30.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.05  20.05.2002 Raghunandan Surve,HPS -      SRF17025
.           Recompile again for ASP60CD
.           14.05.2002 Raghunandan Surve,HPS -      SRF17025
.           Recompile again for ASP60CD
. VF.09.04  14.05.2002 Raghunandan Surve,HPS -      SRF17025
.           Recompile For ASP60CD copybook. (Make Mercy same as f.01)
. VF.09.03  03.09.2001 Glenn Saunders srf 10799 (continuation of D.Matthews)
.           Recompile for APS60CD copybook. (Apply f.01 Hutt changes !!)
. VF.09.02  22.08.2001 Glenn Saunders srf 10799 (continuation of D.Matthews)
.           Recompile for APS60CD copybook.
. VF.09.01  26.06.2001 Dave Matthews
.           Alter Mercy (Dunedin) cheque formatting
. VF.09.01  26.06.2001 Dave Matthews
.           Alter Mercy (Dunedin) cheque formatting
. VF.09.B04 11.04.2001 Dave Matthews
.           Alter Hutt Valley cheque formatting for new NZ style cheques
. VF.09.B03 12.12.2000 Charles Handaya
.           Add in new MHD layout NZ site, Laser printer
. VF.09.B02 28.11.2000 Sandra Barcham
.           Added BAS Code
. VF.09.B01 30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
. VF.09.B00 26.10.2000 Charles Handaya
.           Change "Cheque Audit Report" to "Payment Audit Report"
.-------------------------------------------------------
. VF.01.05  23.10.2000 Charles Handaya
.           Add in a new HWK layout that copied from 0=std
. VF.01.04  12.10.2000 Charles Handaya
.           Default to Ledger specified in parameter system (FMDEFLED),
.           before creating a Batch.
.           Add a Date printed at Cheque Remittance for Layout 19
.           srf 6645
. VF.01.03  18.09.2000 Charles Handaya
.           Fix cheque layout for CHC
. VF.01.02  04.08.2000 Charles Handaya
.           Add new Cheque Layout for Southland (STH)
.           srf 647056
. VF.01.01  12.04.2000 Sandra Barcham
.           Added payment of pay as you go
.-------------------------------------------------------
. VF.00.13  28.04.2000 Sandra Barcham
.           Recompiled for FMSBNKKY change
. VF.00.12  13.01.2000 Sandra Barcham
.           Recompiled for FMSBNKKY change
. VF.00.11  07.01.2000 Charles Handaya
.           Fix cheque layout for LTR
.           srf 636139
. VF.00.10  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.09  09.11.1999 Sandra Barcham
.           Fix Cheque Lyout for LTR
.           Use *+ & *- on writes to BNZ
. VF.00.08  04.11.1999 Sandra Barcham
.           Fix apsbnkaf.txt for MHD
.           srf 645998
. VF.00.07  03.11.1999 Sandra Barcham
.           Fix Hash Total
.           srf 646044
.           Add unique line number to bnz transaction 2 records
.           srf 646069
. VF.00.06  30.10.1999 Sandra Barcham
.           Print creditors bank if direct debit
.           srf 646058
. VF.00.05  11.07.1999 Sandra Barcham
.           Add in LTR Latrobe Regional cheque layout
.           Hand ibaaps60.us1 the file name to transfer as a parameter
. VF.00.04  01.07.1999 Sandra Barcham
.           Add in LAS standard cheque layout
. VF.00.03  27.05.1999 Sandra Barcham
.           Change bnz bank file layout to add bank account
.           srf 645527
. VF.00.02  13.05.1999 Sandra Barcham
.           Change STV cheque layout
.           srf 631036
. VF.00.01  03.05.1999 Sandra Barcham
.           Change STV cheque layout
.           srf 631036
.-------------------------------------------------------
CORREF    DIM       15
D25       DIM       25
DDATERUN  DIM       10
F10P2     FORM      10.2
INSTTOT   FORM      10.2
INVLINES  FORM      6
REMLINES  FORM      6
DBTBNK    DIM       3
DBTDESC   DIM       7
TAPEFLAG  FORM      1
VALFROM   FORM      3
VALTO     FORM      3
RECORD7   FORM      6
INSTCNT   FORM      5
HYPHEN    INIT      "-"
PRINTREM  FORM      1
LODGREF   DIM       18
FIRSTINV  DIM       15
LASTCCHQ  DIM       20
LASTUINV  DIM       35
.
BANK      DIM       2
STAT      DIM       1
BRAN      DIM       3
BANK3     DIM       3
BRAN3     DIM       3
.
CANCHQNO  FORM      2
DIM20     DIM       20
FORM6P2   FORM      6.2
FORM8P2   FORM      8.2
TEMPGROS  FORM      12.2
TEMPNET   FORM      12.2
TEMPDISC  FORM      10.2
TEMPPOR   FORM      1
PAYLINE   FORM      3
APSBNKAF  FILE      ASCII, FIXED=256
APBNAMOT  DIM       12
APBNACCT  DIM       17
APBNPNAM  DIM       20
APBNCHEQ  DIM       12
FORM3     FORM      3
DOSCRLF   INIT      015,012
Z0        INIT      "0"
Z00       INIT      "00"
.
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS60
.   Function      :   Print Cheques & Remittances             
.   Generated  On :   07/04/2011
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APS60DF     
          INC       APSAPYDF    
          INC       APSAPYFD/INC
          INC       APSBMFFD/INC
          INC       APSCAFFD/INC
          INC       APSCILFD/INC
          INC       APSDBTFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSMASFD/INC
          INC       APSNSCFD/INC
          INC       APSTMPDF    
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSBNKFD/INC
          INC       FMSCHQFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSDISFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSRESFD/INC
          INC       IBABATFD/INC
          INC       IBAPRNFD/INC
.=========================
.Local Variable Definition
.-------------------------
CHEQACCT  DIM      15 * Scr 01 Fld     8
BATCHNO   DIM       5 * Scr 02 Fld     5
DATEENT   DIM      10 * Scr 02 Fld     7
GENFAXYN  FORM      1 * Scr 03 Fld    10
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS60"
PRGNAM    INIT      "Print Cheques & Remittances             "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      OPENAPAP
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA4,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apscilaf";
          OPEN      APSCILA1,"apscilaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA1,"apsnscaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA2,"apsnscaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA2,"fmsbcfaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA1,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA2,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA3,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA4,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA5,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA6,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmschqaf";
          OPEN      FMSCHQA1,"fmschqaf"
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening fmsresaf";
          OPEN      FMSRESA1,"fmsresaf"
...       DISPLAY   *P56:24,"Opening  ibaprntf           ";
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
          DISPLAY   *P56:24,"Opening  ihapassf           ";
          OPEN      IHAPASS1,"ihapassf"          
          DISPLAY   *P56:24,"Opening  ihapassf           ";
          OPEN      IHAPASS2,"ihapassf"          
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Print Cheques & Remittances        
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Create Batch                       
          ENDIF
          MATCH     "03",SCRID
          IF         @EQUAL
            CALL       PS03L000   * Generate Bank Transfer File        
          ENDIF
          MATCH     "1A",SCRID
          IF         @EQUAL
            CALL       PS1AL000   * Unused cheques subscreen           
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L105
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SCR01000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SCR02000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L104
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      AUDIT000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L105
          CALL      SCR03000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Print Cheques & Remittances        
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print Cheques & Remittances        
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print Cheques & Remittances        
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print Cheques & Remittances        
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print Cheques & Remittances        
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print Cheques & Remittances        
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print Cheques & Remittances        
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L101:
                            PS01L102,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L103,PS01L104
          GOTO     PS01L999
.
PS01L101
          MOVE      CHEQACCT,VAR     
          CALL      DISPITEM
          CALL      INSERT01
          GOTO     PS01L999
.
PS01L102
          MOVE      FMCHDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      CHEQNO,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Print Cheques & Remittances        
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L104,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L105,SF01L106
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L105,SF01L106
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      ALIGN000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF01L001
.
SF01L102
          CALL      PRNPY000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L103
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L104
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      RESTA000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KRUND000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
          CALL     SELECTED
          MOVE      "1",CKEYTYP
          CALL      KCHEQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CHEQNO,VAR       
          CALL      DISPITEM
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Create Batch                       
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Create Batch                       
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Create Batch                       
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Create Batch                       
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Create Batch                       
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Create Batch                       
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Create Batch                       
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L101,PS02L102,PS02L103,PS02L104:
                            PS02L105,PS02L106,PS02L107,PS02L108:
                            PS02L109
          GOTO     PS02L999
.
PS02L101
          MOVE      BATCHNO,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      SECUSER,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      DATEENT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      CHEQACCT,VAR     
          CALL      DISPITEM
          CALL      INSERT02
          GOTO     PS02L999
.
PS02L105
          MOVE      FMCHDES,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      FMDSCODE,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      FMRSCODE,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Create Batch                       
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L104,SF02L006,SF02L105:
                            SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L104,SF02L020,SF02L105:
                            SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          CALL      CRBAT000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      CKDOC000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L104
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMDSA00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FMDSCODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMRSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMRSA00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L105
            ENDIF
            BRANCH    EXIT,SF02L105,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FMRSCODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMRSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.--------------------------------
. Screen - Generate Bank Transfer File        
.--------------------------------
SC03L000
SC03L100
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC03L200
          CALL      CF03L000 * Clear Fields
SC03L300
          CALL      KY03L000 * Enter Key Fields
          BRANCH    EXIT,SC03L999,SC03L999
SC03L400
          CALL      WP03L000 * Load any WP Details
SC03L500
          CALL      LM03L000 * Load any Batch Details
SC03L600
          CALL      DF03L000 * Display Fields
SC03L700
          CALL      SF03L000 * Select Fields
          BRANCH    EXIT,SC03L100,SC03L100,SC03L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC03L800
SC03L900
SC03L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Generate Bank Transfer File        
.-------------------------------------------------------
CF03L000
CF03L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Generate Bank Transfer File        
.--------------------------------------------------------
KY03L000
          MOVE      ZERO,EXIT
          GOTO      KY03L999
.
KY03L900  MOVE      ONE,EXIT
KY03L999  RETURN
.---------------------------------------------------------
. Load WP files for : Generate Bank Transfer File        
.---------------------------------------------------------
WP03L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Generate Bank Transfer File        
.---------------------------------------------------------
LM03L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Generate Bank Transfer File        
.---------------------------------------------------------
DF03L000
          BRANCH   ACCEPT,DF03L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF03L900
          MATCH    PRGID,SCPSPID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF03L010 IF NOT EQUAL
.
          CALL     PS03L000 * Display Field
          GOTO     DF03L010
DF03L900
DF03L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Generate Bank Transfer File        
.---------------------------------------------------------
PS03L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L101:
                            PS03L102,PS03L103,PS03L999,PS03L999:
                           PS03L999,PS03L104
          GOTO     PS03L999
.
PS03L101
          MOVE      CHEQACCT,VAR     
          CALL      DISPITEM
          CALL      INSERT01
          GOTO     PS03L999
.
PS03L102
          MOVE      FMCHDES,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L103
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      GENFAXYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L104
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
PS03L999
          RETURN
.---------------------------------------------------------
. Selections for : Generate Bank Transfer File        
.---------------------------------------------------------
SF03L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF03L001  BRANCH   ACCEPT,SF03L020
.
SF03L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L006,SF03L101,SF03L102,SF03L103:
                            SF03L104,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L105,SF03L006,SF03L006:
                           SF03L006,SF03L106
SF03L006  BEEP
          GOTO     SF03L005
SF03L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF03L090
          MATCH    PRGID,SCSLPID
          GOTO     SF03L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF03L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L105,SF03L020,SF03L020:
                           SF03L020,SF03L106
          GOTO     SF03L020
SF03L090  MOVE     ZERO,ACCEPT
          GOTO     SF03L001
.
SF03L101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      ALIGN000
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF03L001
.
SF03L102
          CALL      DIRTR000
          MOVE      ZERO,EXIT
          GOTO      SF03L999
.
SF03L103
          MOVE      ZERO,EXIT
          GOTO      SF03L999
.
SF03L104
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      RESTA000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF03L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF03L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF03L999
          ENDIF
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF03L000
          ENDIF
          GOTO      SF03L001
.
SF03L105
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,GENFAXYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      GENFAXYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KRUND000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L106
            ENDIF
            BRANCH    EXIT,SF03L106,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     SF03L001
SF03L990  MOVE      FOUR,EXIT * Exit Char Exit
SF03L999  RETURN
.--------------------------------
. Screen - Unused cheques subscreen           
.--------------------------------
SC1AL000
SC1AL100
          MOVE      "1A",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "15",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC1AL200
          CALL      CF1AL000 * Clear Fields
SC1AL300
          CALL      KY1AL000 * Enter Key Fields
          BRANCH    EXIT,SC1AL999,SC1AL999
SC1AL400
          CALL      WP1AL000 * Load any WP Details
SC1AL500
          CALL      LM1AL000 * Load any Batch Details
SC1AL600
          CALL      DF1AL000 * Display Fields
SC1AL700
          CALL      SF1AL000 * Select Fields
          BRANCH    EXIT,SC1AL100,SC1AL100,SC1AL200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC1AL800
SC1AL900
SC1AL999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Unused cheques subscreen           
.-------------------------------------------------------
CF1AL000
CF1AL999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Unused cheques subscreen           
.--------------------------------------------------------
KY1AL000
          MOVE      ZERO,EXIT
          GOTO      KY1AL999
.
KY1AL900  MOVE      ONE,EXIT
KY1AL999  RETURN
.---------------------------------------------------------
. Load WP files for : Unused cheques subscreen           
.---------------------------------------------------------
WP1AL000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Unused cheques subscreen           
.---------------------------------------------------------
LM1AL000
          RETURN
.---------------------------------------------------------
. Display Fields for : Unused cheques subscreen           
.---------------------------------------------------------
DF1AL000
          BRANCH   ACCEPT,DF1AL999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF1AL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF1AL900
          MATCH    PRGID,SCPSPID
          GOTO     DF1AL900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF1AL900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF1AL010 IF NOT EQUAL
.
          CALL     PS1AL000 * Display Field
          GOTO     DF1AL010
DF1AL900
DF1AL999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Unused cheques subscreen           
.---------------------------------------------------------
PS1AL000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS1AL999,PS1AL101,PS1AL102,PS1AL999:
                            PS1AL999,PS1AL999,PS1AL103,PS1AL104
          GOTO     PS1AL999
.
PS1AL101
          MOVE      FROMCHQ2,VAR     
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL102
          MOVE      TOCHQ2,VAR       
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL103
          UNPACK    TRANDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL104
          MOVE      DIM35,VAR        
          CALL      DISPITEM
          GOTO     PS1AL999
PS1AL999
          RETURN
.---------------------------------------------------------
. Selections for : Unused cheques subscreen           
.---------------------------------------------------------
SF1AL000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF1AL001  BRANCH   ACCEPT,SF1AL020
.
SF1AL005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF1AL006,SF1AL101,SF1AL102,SF1AL103:
                            SF1AL104,SF1AL105,SF1AL106,SF1AL107
SF1AL006  BEEP
          GOTO     SF1AL005
SF1AL020  CALL     RKSCSL1
          BRANCH   OVRCD,SF1AL090
          MATCH    PRGID,SCSLPID
          GOTO     SF1AL090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF1AL090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF1AL020,SF1AL101,SF1AL102,SF1AL020:
                            SF1AL020,SF1AL020,SF1AL106,SF1AL107
          GOTO     SF1AL020
SF1AL090  MOVE     ZERO,ACCEPT
          GOTO     SF1AL001
.
SF1AL101
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFCHQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF1AL101
            ENDIF
            BRANCH    EXIT,SF1AL101,SF1AL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF1AL990 IF EQUAL
          ENDIF
          MOVE      FROMCHQ2,VAR     
          CALL      DISPITEM
          GOTO     SF1AL001
.
SF1AL102
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KTCHQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF1AL102
            ENDIF
            BRANCH    EXIT,SF1AL102,SF1AL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF1AL990 IF EQUAL
          ENDIF
          MOVE      TOCHQ2,VAR       
          CALL      DISPITEM
          GOTO     SF1AL001
.
SF1AL103
          CALL      SETQF000
          MOVE      ZERO,EXIT
          GOTO      SF1AL999
.
SF1AL104
          MOVE      ZERO,EXIT
          GOTO      SF1AL999
.
SF1AL105
          CALL      PUCHQ000
          MOVE      ZERO,EXIT
          GOTO      SF1AL999
.
SF1AL106
          CALL     SELECTED
          CALL      KEYDATE
          PACK      TRANDATE,CCENT,CYEAR,CMON,CDAY          
          UNPACK    TRANDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF1AL001
.
SF1AL107
          CALL     SELECTED
          STRIP     DIM35   
          SFORMAT   VAR,SCPSLEN
          MOVE      DIM35,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DIM35   
          SFORMAT   VAR,127
          ENDSET    DIM35   
          APPEND    SP70,DIM35   
          RESET     DIM35   
          CMATCH    EXITCHAR,DIM35   
          GOTO      SF1AL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DIM35   
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF1AL107
            ENDIF
          ENDIF
          MOVE      DIM35,VAR        
          CALL      DISPITEM
          GOTO     SF1AL001
SF1AL990  MOVE      FOUR,EXIT * Exit Char Exit
SF1AL999  RETURN
.@@@@@ Function Restart Point @@@@@
.**********************************************************************
. Open Payments File - Exit program if doesn't exist
.**********************************************************************
OPENAPAP
          CALL      CHKAP000           * check if file exists
          BRANCH    OVRCD,OPEN1000
.
          MOVE      "9999999999999999999999999999999999999999",KEY40
          MOVE      ZERO,APIMTYP
          CALL      RDAPIM1
.
          MOVE      ZERO,F1            * get transaction program status
          MOVE      APIMTYP,F1
          MOVE      TRSTAT0,TRSTAT
          LOAD      TRSTAT,F1,TRSTAT1
          GOTO      OPEN9999
.
OPEN1000
        MOVE "ERROR - No Payments File. Use Create Proposed Payments ",DISPMSG
          CALL      MESSAGE1
          GOTO      OPEN9000
.
OPEN9000
          CLOCK      FORK,KEY2         * exit program
          MATCH      " 0",KEY2
          IF         @EQUAL
            CHAIN       PGM
          ELSE
            STOP
          ENDIF
.
OPEN9999  RETURN
.
.**********************************************************************
. Screen 01
.**********************************************************************
SCR01000
          MOVE      SP70,APAPCHQ
          MOVE      SP70,APAPPYB
          MOVE      SP70,APAPPYC
          MOVE      SP70,APAPPYD
          PACK      KEY52,SP70
          CALL      RSAPAP1
.
          MOVE      SP70,FMBNREF
          MOVE      SP70,CHEQNO
.
SCR01100  CALL      RKAPAP1
          BRANCH    OVRCD,SCR01200
.
          MOVE      APAPCHQ,CHEQACCT
          MATCH     APAPPYC,SP70       * cheques printed yet ?
          IF        !@EQUAL
            TYPE      APAPPYC          * check if valid numeric cheque number
            GOTO      SCR01100 IF NOT EQUAL
.
            MOVE      APAPPYC,FMBNREF
            MOVE      APAPPYC,F15
            MOVE      F15,F8
            MOVE      F8,CHEQNO
          ENDIF
.
SCR01200  MOVE      APAPPYD,DATERUN
          UNPACK    DATERUN,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      SP70,FMCHDES
          PACK      KEY15,CHEQACCT,SP70
          CALL      RDFMCH1
.
          MATCH     SP70,APAPPYB
          IF        @EQUAL
            MATCH     SP70,APAPDOF
            IF        @EQUAL
              MOVE      SP70,SPLFILE
              CALL      SELPRINT
              MOVE      ZERO,ACCEPT
              CALL      SC01L000
              MOVE      SP70,SPLFILE
            ELSE
              BEEP
              MOVE      "Cant Print Cheques - Transfer File Created - ",DISPMSG
              CALL      MESSAGE1
            ENDIF
          ELSE
            BEEP
            MOVE    "Cant Re-Print Cheques - Batch Already Created - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
SCR01999  RETURN
.**********************************************************************
. Screen 02
.**********************************************************************
SCR02000  MOVE      SP70,APAPCHQ
          MOVE      SP70,APAPPYB
          MOVE      SP70,APAPPYC
          MOVE      SP70,APAPPYD
          PACK      KEY52,SP70
          CALL      RSAPAP1
          CALL      RKAPAP1
.
          MOVE      APAPCHQ,CHEQACCT
          MOVE      APAPPYC,FMBNREF
          MOVE      APAPPYD,DATERUN
.
          MOVE      SP70,FMCHDES
          PACK      KEY15,CHEQACCT,SP70
          CALL      RDFMCH1
.
          MOVE      "Current User Unknown                    ",SECUSER
          PACK      KEY4,PASSCODE,SP70
          CALL      RDPASS1
.
          MOVE      APAPPYB,BATCHNO
          PACK      KEY5,BATCHNO
          CALL      RDAPBM1
          IF        1=OVRCD
            MOVE      "New  ",BATCHNO
            MOVE      SP70,APAPPYB
            MOVE      SP70,FMDSCODE
            MOVE      SP70,FMRSCODE
            PACK      KEY8,CCC,CYY,CMM,CDD,SP70
            UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
            REP       " 0",KEY8
            CALL      PACDATE
            MOVE      CPCDATE,DATEENT
          ELSE
            MOVE      APBMBCH,BATCHNO
            MOVE      APBMDIS,FMDSCODE
            MOVE      APBMRES,FMRSCODE
            UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,DATEENT
          ENDIF
.
          MATCH     SP70,FMBNREF
          IF        !@EQUAL
            MATCH     SP70,APAPPYB
            IF        @EQUAL
              MOVE      ZERO,ACCEPT
              CALL      SC02L000
            ELSE
              BEEP
              CLEAR     DISPMSG
              APPEND    "Batch ",DISPMSG
              APPEND    APAPPYB,DISPMSG
              APPEND    " Already Created - ",DISPMSG
              CALL      MESSAGE1
            ENDIF
          ELSE
            BEEP
            MOVE      "Cheques Have Not Been Printed - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
SCR02999  RETURN
.**********************************************************************
. Screen 03
.**********************************************************************
SCR03000  MOVE      SP70,APAPCHQ
          MOVE      SP70,APAPPYB
          MOVE      SP70,APAPPYC
          MOVE      SP70,APAPPYD
          PACK      KEY52,SP70
          CALL      RSAPAP1
.
          MOVE      SP70,FMBNREF
          MOVE      SP70,CHEQNO
.
SCR03100  CALL      RKAPAP1
          BRANCH    OVRCD,SCR03200
          MOVE      APAPPOR,TEMPPOR    * Print Order
          MOVE      APAPCHQ,CHEQACCT
.
          MATCH     "DD-",APAPPYC
          GOTO      SCR03100 IF NOT EQUAL
.
          BEEP
          MOVE      "Direct Bank Transfer Already Performed - ",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,SCR03999
.
SCR03200  MOVE      APAPPYD,DATERUN
          UNPACK    DATERUN,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      SP70,FMCHDES
          PACK      KEY15,CHEQACCT,SP70
          CALL      RDFMCH1
.
          MATCH     SP70,APAPPYB
          IF        @EQUAL
            MATCH     SP70,APAPDOF
            IF        @EQUAL
              MOVE      SP70,SPLFILE
              CALL      SELPRINT
              MOVE      ZERO,ACCEPT
              CALL      SC03L000
              MOVE      SP70,SPLFILE
            ELSE
              BEEP
              MOVE      "Cant Transfer - GL Transfer File Created - ",DISPMSG
              CALL      MESSAGE1
            ENDIF
          ELSE
            BEEP
            MOVE      "Cant Transfer - Batch Already Created - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
SCR03999  RETURN
.
.**********************************************************************
. Set insert mode for screen 01
.**********************************************************************
INSERT01
          MATCH     SP70,FMBNREF
          IF        @EQUAL
            MOVE      ONE,ACCEPT
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Keyin Date
.----------------------------------------------------------------------
KRUND000
          PACK      DATERUN,CCC,CYY,CMM,CDD,SP70
          REP       " 0",DATERUN
          UNPACK    DATERUN,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,KRUND000
          PACK      DATERUN,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      CPCDATE,DDATERUN
KRUND999  RETURN
.----------------------------------------------------------------------
. Keyin Cheque
.----------------------------------------------------------------------
KCHEQ000
          CALL      ABNKFM00
          BRANCH    EXIT,KCHEQ999,KCHEQ999
.
          MOVE      SP70,APMACRD
          CALL      CKDOC000
          IF        OVRCD=1
            SQUEEZE   FMBNREF
            CLEAR     DISPMSG
            APPEND    "Cheque ",DISPMSG
            APPEND    FMBNREF,DISPMSG
            APPEND    " Used in Batch ",DISPMSG
            APPEND    APCLBCH,DISPMSG
            APPEND    " For Cred ",DISPMSG
            APPEND    APCLCRD,DISPMSG
            APPEND    " - ",DISPMSG
            CALL      MESSAGE1
            PACK      FMBNREF,FMBNREF,SP70
            GOTO      KCHEQ000
          ENDIF
.
KCHEQ999  RETURN
.**********************************************************************
. Set insert mode for screen 02
.**********************************************************************
INSERT02
          MATCH     "New  ",BATCHNO
          IF        @EQUAL
            MOVE      ONE,ACCEPT
          ENDIF
.
          RETURN
.****************************************************************************
. Check if a document reference exists in another fms batch awaiting update
.         Requires : FMBNREF - (DIM 15)  Document reference
.         Returns  : OVRCD     (0=not found, 1=found)
.                    APCL record where reference was found
.
. This routine is designed specifically to check if a particular cheque
. number has already been used in a batch which has not yet been updated
. in the FMS system (in fmsbnkaf)
.****************************************************************************
CKDOC000  PACK      KEY40,FMBNREF,SP70
          CALL      RSAPCL1
.
CKDOC100  CALL      RKAPCL1            * check if reference exists
          BRANCH    OVRCD,CKDOC900
          MATCH     FMBNREF,APCLDOC
          GOTO      CKDOC900 IF NOT EQUAL
.
          MATCH     APCLBCH,APBMBCH    * same batch ?
          GOTO      CKDOC950 IF NOT EQUAL
          MATCH     SP70,APMACRD
          IF        !@EQUAL
            MATCH     APCLCRD,APMACRD  * same creditor ?
            GOTO      CKDOC950 IF NOT EQUAL
          ENDIF
          GOTO      CKDOC100
.
.
CKDOC900  MOVE      ZERO,OVRCD
          GOTO      CKDOC999
.
CKDOC950  MOVE      ONE,OVRCD
.
CKDOC999  RETURN
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
.----------------------------------------------------------------------
. DIRTR000 - Process Direct Bank Transfers
.----------------------------------------------------------------------
DIRTR000  CALL      INTDT000                     * Initialize Fields & Open File
.
          MOVE      ZERO,INSTTOT
          MOVE      ZERO,RECORD7
.
          PACK      KEY52,SP70
          PACK      KEY58,SP70
          PERFORM   TEMPPOR,RSAPAP1,RSAPAP4
DIRTR100  PERFORM   TEMPPOR,RKAPAP1,RKAPAP4      * loop through payments file
          BRANCH    OVRCD,DIRTR900
          CALL      VALTRN00                     * Validate Transaction
          BRANCH    EXIT,DIRTR100                * Get Next
.
          PACK      KEY41,APAPCRD,APAPREF,APAPDOC,APAPBCH,APAPTYP,SP70
          DISPLAY   *P1:24,"Processing : ",*V2LON,KEY41,*EL;
.
          MATCH     SP70,LASTDOCT                * print last trans
          IF        !@EQUAL
            MATCH     KEY41,LASTDOCT
            CALL      REMLIN00 IF NOT EQUAL
          ENDIF
          PACK      LASTDOCT,KEY41,SP70
.
          MATCH     SP70,LASTORD                 * save first ord of invoice
          IF        @EQUAL
            MOVE      APAPORD,LASTORD
          ENDIF
.
          MATCH     APAPCRD,LASTCRE              * new creditor ?
          IF        !@EQUAL
            MATCH     SP70,LASTCRE
            CALL      REMEND00 IF NOT EQUAL      * Write Direct Debit
            MOVE      ZERO,DOLLARS
.
            MOVE      ZERO,REMLINES
            PACK      KEY5,APAPCRD,SP70
            CALL      RDAPMA1
            IF        GENFAXYN=1
              CALL      OPNPRINT * If Generating Faxes New file for each Rem
            ENDIF
            CALL      REMHED00                   * print remittance header
            MOVE      APAPCRD,LASTCRE
          ENDIF
.
          MATCH     "1",APAPTYP                  * accumulate totals
          IF        @EQUAL
            SUB       APAPTPY,XTOTCRD
            SUB       APAPTPY,TOTCRD
          ELSE
            ADD       APAPTPY,XTOTINVC
            ADD       APAPTPY,TOTINVC
          ENDIF
          ADD       APAPTPY,XACCUM
          ADD       APAPTPY,DOLLARS
.
          GOTO      DIRTR100
.
DIRTR900  MATCH     SP70,LASTCRE
          IF        !@EQUAL
            MATCH     LASTCRE,LASTDOCT
            CALL      REMLIN00 IF EQUAL          * print last transaction
            CALL      REMEND00                   * Write Direct Debit
          ENDIF
          CALL      ENDDT000                     * Write Totals etc
          IF        GENFAXYN=0
            CALL      CLSPRINT * If Generating Faxes New file for each Rem
          ENDIF
.
DIRTR999  RETURN
.--------------------------------------------------------------------------
. Validate Transaction for Processing in Direct Bank Transfer
.--------------------------------------------------------------------------
VALTRN00  IF        APAPTPY=0
            MOVE      Z70,APAPPYC                 * update cheque number ref
            MOVE      DATERUN,APAPPYD             * update accounting date
            PERFORM   TEMPPOR,UPAPAP1,UPAPAP4
            GOTO      VALTRN90                    * Ignore if no payment
          ENDIF
.
          MOVE      ZERO,F1
          MOVE      APAPGMT,F1
          COMPARE   ZERO,F1
          GOTO      VALTRN90 IF EQUAL             * Ignore if Paid by Cheque
.
          MATCH     APAPCRD,LASTCRE               * new creditor ?
          GOTO      VALTRN80 IF EQUAL
          CALL      DBALC000                      * check if payment required
          IF        OVRCD=1
            PACK      KEY52,APAPCRD,Z70           * if so, skip this creditor
            PACK      KEY58,APAPSKY,APAPCRD,Z70
            PERFORM   TEMPPOR,RSAPAP1,RSAPAP4
            GOTO      VALTRN90                    * Next Creditor
          ENDIF
.
VALTRN80  MOVE      ZERO,EXIT
          GOTO      VALTRN99
.
VALTRN90  MOVE      ONE,EXIT
.
VALTRN99  RETURN
.------------------------------------------------------------
. Initialization for Direct Bank Transfer
.------------------------------------------------------------
INTDT000  CALL      RDFMCO50
          READ      CONTROLF,NUM50;*85,FMCOLOGR
          MOVE      FMCOLOGR,FORM5
          ADD       ONE,FORM5
          MOVE      FORM5,FMCOLOGR
          WRITAB    CONTROLF,NUM50;*85,FMCOLOGR
          CLOSE     SCRSBGA1            * Close files to stop "S*O 024"
          CLOSE     SCRPSTA1
.
          MOVE      ZERO,TAPEFLAG
          MATCH     "T",FMCHFRMT
          IF        @EQUAL
            MOVE      ONE,TAPEFLAG
          ENDIF
          PACK      FILENAME WITH FMCHBNAM,SLASH,ABA
          PREPARE   DBTFILE,FILENAME
.
          IF        TAPEFLAG=1
            PACK      FILENAME WITH FMCHBNAM,SLASH,HDR
            PREPARE   DBTHEAD,FILENAME
            PACK      FILENAME WITH FMCHBNAM,SLASH,EOF
            PREPARE   DBTEOF,FILENAME
          ENDIF
.
          IF        GENFAXYN=0
            CALL      OPNPRINT * If Generating Faxes New file for each Rem
          ENDIF
.
          OPEN      SCRSBGA1,"scrsbgaf" * Re-open files
          OPEN      SCRPSTA1,"scrpstaf"
.
          DISPLAY   *P1:24,*EL,*P25:24,"Creating  :"
.
          MOVE      "01",S0RLSEQ
          MOVE      FMCHBNAM,S0BNKNAM
          MOVE      FMCHDESC,S0USRNAM
          MOVE      FMCHUSER,S0USRNUM
          MOVE      FMCHEDSC,S0DESC
          UNPACK    DATERUN,CCENT,CYEAR,CMON,CDAY
          PACK      S0DATE,CDAY,CMON,CYEAR
          REP       " 0",S0DATE
          CALL      WRDBT0                            * Descriptive Record
.
          MOVE      "99",CLNO
          MOVE      ZERO,RECORD7
.
          MOVE      ZERO,XTOTINVC
          MOVE      ZERO,XTOTCRD
          MOVE      ZERO,XACCUM
.
          MOVE      ZERO,TOTINVC
          MOVE      ZERO,TOTCRD
.
          MOVE      ZERO,DOLLARS
          MOVE      SP70,LASTCRE
          MOVE      SP70,LASTDOCT
          MOVE      SP70,LASTORD
          RETURN
.------------------------------------------------------------
. Print Remittance Header if Required
.------------------------------------------------------------
REMHED00  MOVE      APAPGMT,F1
          BRANCH    F1,REMHED20,REMHED10,REMHED90
REMHED10  IF        INVLINES<2
            GOTO      REMHED90
          ENDIF
.
REMHED20  MOVE      APMACON,KEY21
          PRINT     *F,*N,*N,*N,*N,*N:
                                *N,*45,"Date   : ",DDATERUN:
                    *N,*5,APMACN1,*45,"Fax    : ",APMACFAX:
                    *N,*5,APMACN2,*45,"Ph.    : ",APMACTEL:
                    *N,*5,APMACA1,*45,"Contact: ",KEY21:
                    *N,*5,APMACA2,*45,"Code   : ",APMACRD:
                    *N,*5,APMACA3," ",APMACPC:
                    *N,*N,*20,"Direct Bank Transfer Advice":
                    *N,"-----------------------------------------------":
                       "---------------------":
                    *N,"Date     Reference No.  Order      Transaction":
                          "     Credit      Debit":
                    *N,"-----------------------------------------------":
                       "---------------------"
          MOVE      ZERO,PRINTREM               * Print Remittance
          MOVE      ZERO,CLNO
          GOTO      REMHED99
.
REMHED90  MOVE      ONE,PRINTREM                * Don't Print Remittance
.
REMHED99  RETURN
.------------------------------------------------------------
. Print Remittance Line Item if Required
.------------------------------------------------------------
REMLIN00  ADD       ONE,REMLINES
.
          UNPACK    SP70,APIMIDT
          UNPACK    SP70,APIMCM1
          UNPACK    SP70,APIMCM2
          UNPACK    LASTDOCT,APIMCRD,APIMREF,APIMDOC,APIMBCH,APIMTYP
          PACK      KEY40,APIMCRD,APIMREF,APIMDOC,APIMBCH,SP70
          CALL      RDAPIM3
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          BRANCH    PRINTREM,REMLIN99
.
          MOVE      CLNO,TESTLINE      * work out how many lines required
.
          IF        FMCOAPCH<>9
            MATCH     SP70,APIMCM1       * add on lines for comment (if req)
            IF        !@EQUAL
              ADD       ONE,TESTLINE
            ENDIF
            MATCH     SP70,APIMCM2
            IF        !@EQUAL
              ADD       ONE,TESTLINE
            ENDIF
          ENDIF
.
          COMPARE   "35",TESTLINE
          CALL      REMNX000 IF NOT LESS      * page full ?
.
          IF        FMCOAPCH<>9
            ADD       ONE,CLNO           * get next line
          ENDIF
.
          MATCH     "1",APIMTYP
          IF        @EQUAL
            MOVE      "Credit  ",KEY8
            ADD       XTOTINVC,XTOTCRD
            PRINT     CPDATE,SP1,APIMDOC,LASTORD,SP3,KEY8,*45,XTOTCRD
            MULT      SEQ,XTOTCRD
          ELSE
            MOVE      "Invoice ",KEY8
            ADD       XTOTCRD,XTOTINVC
            PRINT     CPDATE,SP1,APIMREF,LASTORD,SP3,KEY8,*58,XTOTINVC
          ENDIF
          MATCH     SP70,APIMCM1
          IF        !@EQUAL
            MOVE      APIMCM1,KEY50
            PRINT     *10,KEY50
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,APIMCM2
          IF        !@EQUAL
            MOVE      APIMCM2,KEY50
            PRINT     *10,KEY50
            ADD       ONE,CLNO
          ENDIF
.
          MOVE      ZERO,XTOTINVC
          MOVE      ZERO,XTOTCRD
          MOVE      ZERO,XACCUM
          MOVE      SP70,LASTORD
.
REMLIN99  RETURN
.------------------------------------------------------------
. Print Remittance Total & Write Direct Debit
.------------------------------------------------------------
REMEND00  IF        REMLINES=1
            PACK      LODGREF,APIMREF,SP70
          ELSE
            MOVE      "DD-",KEY3
            REP       " 0",FMCOLOGR
            PACK      LODGREF,KEY3,FMCOLOGR,SP70
          ENDIF
          BRANCH    PRINTREM,REMEND90
.
          PRINT     *N,"--------------------------------------------":
                          "------------------------":
                    *N,"Lodgement Reference : ",LODGREF:
                       *48,"Total : ",DOLLARS
          IF        FMCHDFRM=3
            PRINT     "Account : ",APMABSB,APMABAC,"  Name: ",APMAPNM:
                      *N,"--------------------------------------------":
                            "------------------------"
          ELSE
            PRINT     "BSB: ",APMABSB,"  Account: ",APMABAC,SP1,APMAPNM:
                      *N,"--------------------------------------------":
                            "------------------------"
          ENDIF
.
REMEND90  CALL      WRDBT000                   * Write Direct Debit Entry
          CALL      UPLRF000                   * Update Logment Reference
          IF        GENFAXYN=1
            CALL      FAXPRINT
          ENDIF
.
REMEND99  RETURN
.-----------------------------------------------------------------------
. Next Page
.-----------------------------------------------------------------------
REMNX000  PRINT     *N,"--------------------------------------------":
                          "-------------------------":
                    *N,*30,"Continued"
          CALL      REMHED00
          RETURN
.------------------------------------------------------------
. Write Debit Transfer Record
.------------------------------------------------------------
WRDBT000  MOVE      APMABSB,S1BSBNUM
          MOVE      APMABAC,S1ACCNUM                 * account already *JR
          PACK      S1NZOPC,APMAUR1,SP70
          MOVE      "50",S1TRCODE                    * transaction code
          MOVE      DOLLARS,F10P2
          MULT      "100",F10P2
          MOVE      F10P2,S1AMOUNT
          REP       " 0" IN S1AMOUNT                 * amount cents only
          IF        FMCHDFRM=3
            MOVE      APMAPNM,D25                 * account name
            PACK      S1ACTITL,D25,SP10
          ELSE
            MOVE      APMAPNM,S1ACTITL                 * account name
          ENDIF
          MOVE      LODGREF,S1LDGREF                 * logment reference
          UNPACK    FMCHBSB,BANK3,BRAN3              * Trace bsb code
          PACK      S1TRCBSB,BANK3,HYPHEN,BRAN3      * Trace bsb code
          MOVE      FMCHACCT,S1TRCACC                * Trace account
          MOVE      S0USRNAM,S1REMNAM                * Name of reimitter
          CALL      WRDBT1                           * Detail Record
          ADD       DOLLARS,INSTTOT
          ADD       ONE,INSTCNT
          ADD       ONE,RECORD7
.
          RETURN
.
.---------------------------
. Print Institutional Total
.---------------------------
ENDDT000  COMPARE   ZERO,RECORD7
          GOTO      ENDDT900 IF EQUAL
          BRANCH    FMCHDFRM,ENDDT100,ENDDT200,ENDDT100
.
. Cemtex
.--------
ENDDT100  MOVE      INSTTOT,F10P2
          MULT      "100",F10P2
          MOVE      F10P2,S7BRHCRE                         * grand credit total
          REP       " 0",S7BRHCRE
          MOVE      S7BRHCRE,S7BRHNET                      * grand net total
          MOVE      "0000000000",S7BRHDEB                  * Debit Total
          MOVE      RECORD7 TO S7RECCNT                    * grand record count
          REP       " 0" IN S7RECCNT
          CALL      WRDBT7                                 * grand Sub-Total
          GOTO      ENDDT400
.
. Cemtex with Credit Entry
.---------------------------
ENDDT200  MOVE      INSTTOT,F10P2
          MULT      "100",F10P2
.
          MOVE      S1TRCBSB TO S1BSBNUM
          MOVE      S1TRCACC TO S1ACCNUM
          MOVE      "13" TO S1TRCODE
          MOVE      F10P2 TO S1AMOUNT
          REP       " 0" IN S1AMOUNT
          MOVE      S0USRNAM TO S1ACTITL
          MOVE      "INVOICE PAYMENT   ",S1LDGREF
          CALL      WRDBT1
.
          ADD       ONE,RECORD7
          MOVE      SP70,S7BRHNET
          MOVE      "0000000000",S7BRHNET
          MOVE      F10P2,S7BRHCRE                         * grand credit total
          REP       " 0",S7BRHCRE
          MOVE      F10P2,S7BRHDEB                         * grand credit total
          REP       " 0",S7BRHDEB
          MOVE      RECORD7 TO S7RECCNT                    * grand record count
          REP       " 0" IN S7RECCNT
          CALL      WRDBT7                                 * grand Sub-Total
          GOTO      ENDDT400
.
ENDDT400  CALL      TRAN0000
          MOVE      ZERO,INSTTOT
          MOVE      ZERO,INSTCNT
          GOTO      ENDDT999
.------------------------------------------------------------
. Delete Files No Records Exported
.------------------------------------------------------------
ENDDT900  PACK      FILENAME WITH FMCHBNAM,SLASH,ABA  * No Records
          CLOSE     DBTFILE                           * Delete ABA
          PREPARE   DBTFILE,FILENAME
          CLOSE     DBTFILE
          IF        TAPEFLAG=1
            PACK      FILENAME WITH FMCHBNAM,SLASH,HDR  * Delt HDR if TAPE
            CLOSE     DBTHEAD                           * Delete HDR
            PREPARE   DBTHEAD,FILENAME
            CLOSE     DBTHEAD
            PACK      FILENAME WITH FMCHBNAM,SLASH,EOF  * Delt EOF if TAPE
            CLOSE     DBTEOF                            * Delete EOF
            PREPARE   DBTEOF,FILENAME
            CLOSE     DBTEOF
          ENDIF
.
ENDDT999  RETURN
.------------------------------------------------------------
. UPLRF - Save Logment Reference Number
.------------------------------------------------------------
UPLRF000  PACK      SKEY52,APAPCRD,APAPREF,APAPTYP,APAPDOC:
                           APAPORD,APAPLIN,APAPBCH,SP70
.
          MOVE      ZERO,XTOTINVC
          MOVE      ZERO,XTOTCRD
          MOVE      ZERO,XACCUM
          MOVE      ZERO,TOTINVC
          MOVE      ZERO,TOTCRD
.
          PACK      KEY52,LASTCRE,SP70          * position at start of creditor
.
UPLRF100  CALL      RSAPAP1                      * loop through payments file
          CALL      RKAPAP1
          BRANCH    OVRCD,UPLRF999
          PACK      KEY52,APAPCRD,APAPREF,APAPTYP,APAPDOC:
                          APAPORD,APAPLIN,APAPBCH,SP70
          MATCH     LASTCRE,KEY52
          GOTO      UPLRF999 IF NOT EQUAL
.
          MOVE      "DD-",KEY3              * This is to make sure it is not
          REP       " 0",FMCOLOGR           * treated a Cheque number
          PACK      APAPPYC,KEY3,FMCOLOGR,SP70
          MOVE      DATERUN,APAPPYD         * update accounting date
          CALL      UPAPAP1
.
          GOTO      UPLRF100
.
UPLRF999  MOVE      ZERO,DOLLARS
          MOVE      SKEY52,KEY52
          CALL      RDAPAP1                 * restore original record
          RETURN
.--------------------------------------------------------------------------
. Execute Transfer Script eg softerm
.--------------------------------------------------------------------------
TRAN0000  MOVE     YES,DEFYESNO
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "ibaaps60.us1 ",KEY80
          APPEND   FMCHBNAM,KEY80
          APPEND   DOT,KEY80
          APPEND   ABA,KEY80
          RESET    KEY80
.
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PACK      FILENAME WITH FMCHBNAM,SLASH,ABA  * No Records
          CLOSE     DBTFILE                           * Delete ABA
          PREPARE   DBTFILE,FILENAME
          CLOSE     DBTFILE
          IF        TAPEFLAG=1
            PACK      FILENAME WITH FMCHBNAM,SLASH,HDR  * Delt HDR if TAPE
            CLOSE     DBTHEAD                           * Delete HDR
            PREPARE   DBTHEAD,FILENAME
            CLOSE     DBTHEAD
            PACK      FILENAME WITH FMCHBNAM,SLASH,EOF  * Delt EOF if TAPE
            CLOSE     DBTEOF                            * Delete EOF
            PREPARE   DBTEOF,FILENAME
            CLOSE     DBTEOF
          ENDIF
.
TRAN9999  RETURN
.------------------------------------------------------------
. Close Spool File and Send Fax
.------------------------------------------------------------
FAXPRINT  COMPARE   ZERO,CPRTFLG
          GOTO      FAXPR999 IF NOT EQUAL
.
.         Check if file is of non-zero size
.
          CALL      SPLEMPTY
          BRANCH    OVRCD,FAXPR800,FAXPR900
.
          MATCH     SP70,APMACFAX
          GOTO      FAXPR950 IF EQUAL
.
          CLEAR     KEY80
          APPEND    "ibaaps60.us2 ",KEY80
          APPEND    SPLFILE,KEY80
          APPEND    SP1,KEY80
          APPEND    "#"",KEY80
          APPEND    APMACFAX,KEY80
          APPEND    "#"",KEY80
          APPEND    SP1,KEY80
          APPEND    PASSCODE,KEY80
          RESET     KEY80
.
          DISPLAY   *P1:24,*EL:
                    *P20:24,*EL,*V2LON,"Fax being queued. Please wait";
          EXECUTE   KEY80,TASKID
          GOTO      FAXPR900
.
.         Quick delete of spool file
.
FAXPR800  MOVE      FILENAME,CSPDESC       * Name of file to be deleted
          CALL      SPLDELET
FAXPR900  MOVE      SP8,SPLFILE
          GOTO      FAXPR999
.
FAXPR950  CALL      CLSPRINT               * No Fax Number
.
FAXPR999  RETURN
.
.*****************************************************************************
.  KFCHQ - Keyin from unused cheque
.*****************************************************************************
KFCHQ000
          MOVE      FROMCHQ1,FROMCHQ2
          KEYIN     *PCCOL:CVERT,*DV,SP8:
                    *PCCOL:CVERT,*V2LON,*RV,FROMCHQ2:
                    *PCCOL:CVERT,*V2LON,*DV,FROMCHQ2;
          IF        FROMCHQ2<FROMCHQ1
            MOVE      "Cannot be before first cheque number - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KFCHQ000
          ENDIF
.
          IF        FROMCHQ2>TOCHQ2
            MOVE      "Cannot be after to cheque number - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KFCHQ000
          ENDIF
.
          IF        !(FROMCHQ2>TOCHQ3) & !(FROMCHQ2<FROMCHQ3)
            CLEAR     DISPMSG
            APPEND    "Cannot be in current cheque range ",DISPMSG
            APPEND    FROMCHQ3,DISPMSG
            APPEND    "-",DISPMSG
            APPEND    TOCHQ3,DISPMSG
            APPEND    " - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KFCHQ000
          ENDIF
.
KFCHQ999  RETURN
.*****************************************************************************
.  KTCHQ - Keyin to unused cheque
.*****************************************************************************
KTCHQ000
          MOVE      TOCHQ1,TOCHQ2
          KEYIN     *PCCOL:CVERT,*DV,SP8:
                    *PCCOL:CVERT,*V2LON,*RV,TOCHQ2:
                    *PCCOL:CVERT,*V2LON,*DV,TOCHQ2;
          IF        TOCHQ2>TOCHQ1
            MOVE      "Cannot be after last cheque number - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KTCHQ000
          ENDIF
.
          IF        TOCHQ2<FROMCHQ2
            MOVE      "Cannot be before from cheque number - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KTCHQ000
          ENDIF
.
          IF        !(TOCHQ2>TOCHQ3) & !(TOCHQ2<FROMCHQ3)
            CLEAR     DISPMSG
            APPEND    "Cannot be in current cheque range ",DISPMSG
            APPEND    FROMCHQ3,DISPMSG
            APPEND    "-",DISPMSG
            APPEND    TOCHQ3,DISPMSG
            APPEND    " - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KFCHQ000
          ENDIF
.
KTCHQ999  RETURN
.**********************************************************************
. Set QUITFLAG
.**********************************************************************
SETQF000
          MOVE      ONE,QUITFLAG
.
SETQF999  RETURN
.**********************************************************************
. Process unused cheques
.**********************************************************************
PUCHQ000
          CALL      POST0000           * create unused cheques
.
          PACK      KEY52,SP70         * clear old cheque numbers
          CALL      RSAPAP1
.
PUCHQ100
          CALL      RKAPAP1
          BRANCH    OVRCD,PUCHQ999
.
          MOVE      SP70,APAPPYC       * clear cheque number
          CALL      UPAPAP1
          GOTO      PUCHQ100
.
PUCHQ999  RETURN
.**********************************************************************
.  POST - Post data                                    Called By ML
.        Requires - DIM35    (reason)
.                   TRANDATE (transaction date)
.                   APAPCHQ  (bank account)
.                   CHEQ[12] (cheque number range)
.**********************************************************************
POST0000  MOVE      SP70,FMBNBNK
          PACK      KEY20,APAPCHQ,Z70
          CALL      RSFMBN1            * get last unique id
          CALL      RPFMBN1
          MATCH     APAPCHQ,FMBNBNK
          GOTO      POST0200 IF EQUAL
          MOVE      "    0",FMBNUNQ
.
POST0200  MOVE      FMBNUNQ,F5
.
          MOVE      FROMCHQ2,F8        * get first cheq number
          SUB       ONE,F8
.
.---- cheq loop ----
.
POST1000  ADD       ONE,F8             * get next cheq number
          MOVE      F8,CHEQNO
          COMPARE   F8,TOCHQ2
          GOTO      POST9999 IF LESS   * no more cheques ?
.
          DISPLAY   *P1:24,"Processing : ",*V2LON,CHEQNO,*EF;
          MOVE      CHEQNO,CFORM8
          MOVE      CFORM8,CFORM15
          MOVE      CFORM15,CRECNO
          PACK      KEY36,APAPCHQ,ZERO,CRECNO,SP70
          CALL      RSFMBN2                 * check if cheque already on file
          CALL      RKFMBN2                 * get next record
          BRANCH    OVRCD,POST2000          * no more records ?
.
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,SP70
          MATCH     KEY36,KEY31
          GOTO      POST1000 IF EQUAL       * out of range ?
.
POST2000
          CALL      GNID0000                * get next unique number
.
          UNPACK    KEY20,FMBNBNK,FMBNUNQ
          MOVE      CRECNO,FMBNREF        * set up vars
          MOVE      TRANDATE,FMBNDAT
          MOVE      DIM35,FMBNNAM
          PACK      FMBNPDT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",FMBNPDT
          MOVE      "0",FMBNTYP
          MOVE      "0",FMBNAMT
          MOVE      "2",FMBNPRE
          UNPACK    SP70,FMBNLED,FMBNACC,FMBNFYR,FMBNBCH,FMBNLNO,FMBNCRE
          CALL      WRFMBN1            * write record
          GOTO      POST1000
.
POST9999  RETURN
.**********************************************************************
. Get next bank rec unique id
.**********************************************************************
GNID0000
          MOVE      "~~~~~",KEY5
          PACK      KEY20,APAPCHQ,KEY5
          CALL      RSFMBN1
          CALL      RPFMBN1
          BRANCH    OVRCD,GNID1150
          MATCH     FMBNBNK,APAPCHQ
          GOTO      GNID1150 IF NOT EQUAL
.
          UNPACK    FMBNUNQ,ANS,KEY4
          MOVE      ZERO,F4
          MOVE      KEY4,F4
.
GNID1100
          COMPARE   "9999",F4          * at end of group ?
          GOTO      GNID1110 IF NOT EQUAL
.
          MATCH     "z",ANS
          GOTO      BADERROR IF EQUAL
.
          REP       REPUNIQ,ANS
          MOVE      ZERO,F4
.
GNID1110
          ADD       ONE,F4
          PACK      KEY20,APAPCHQ,ANS,F4,SP70
          CALL      RDFMBN1
          BRANCH    OVRCD,GNID1200
          GOTO      GNID1100
.
.---- no records !! ----
.
GNID1150  MOVE      ONE,F4
          MOVE      " ",ANS
          PACK      KEY20,APAPCHQ,ANS,F4,SP70
.
GNID1200
.
GNID9999  RETURN
.
BADERROR  DISPLAY   *P1:24,"CONTACT IBA - fmsbnkaf full for ",APAPCHQ," - ";
          CALL      HITENTER
          CHAIN     PGM
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APS60CD     
          INC       APSAPYCD    
          INC       APSAPYIO/INC
          INC       APSBMFIO/INC
          INC       APSCAFIO/INC
          INC       APSCILIO/INC
          INC       APSDBTIO/INC
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSMASIO/INC
          INC       APSNSCIO/INC
          INC       FMSAMAIO/INC
          INC       FMSBCFIO/INC
          INC       FMSBNKIO/INC
          INC       FMSBNKKY    
          INC       FMSCHQIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSDISIO/INC
          INC       FMSDISKY    
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSRESIO/INC
          INC       FMSRESKY    
          INC       IBABATIO/INC
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
.
          INC       STDGENCD
.
