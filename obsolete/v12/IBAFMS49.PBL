. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS49                                             *
. * Desc      :   Compare Databases                                    *
. **********************************************************************
. * Date      :   04.12.1991                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS49
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSAMAFD/INC       * Account
          INC       FMSLMAFD/INC       * Ledger
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
FMSAMAAX  IFILE  SQL, FIXED=345, KEY="U1-2,3-14"               * by Code
XXAMLEDG  DIM       2
XXAMACCT  DIM       14
XXAMDESC  DIM       35
.
FILE1DAT  INIT      "fmslmaaf"
FILE2DAT  INIT      "fmsamaaf"
.
ACCEPT    FORM      1        * accept mode (1=on)
COUNT     FORM      5        * counter
FILE1     DIM       48       * file
FILE2     DIM       48       * file
OPTIONA   FORM      2        * screen A selection keyin var
LEDG      DIM       2        * ledger
LEDG1     DIM       2        * ledger
LEDG2     DIM       2        * ledger
LEDGD     DIM       35       * ledger description
LEDG1D    DIM       35       * ledger description
LEDG2D    DIM       35       * ledger description
PATH      DIM       40       * path
PRTSTAT   FORM      1        * inc stat accounts (1=yes)
STRING    DIM       40       * parameter for routine RMBL
.
PRGID     INIT      "IBAFMS49"
PRGNAM    INIT      "Compare Databases"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      OPNA0000           * get ledger 1 file
          UNPACK    SP70,LEDG1,LEDG1D  * clear vars
          UNPACK    SP70,LEDG2,LEDG2D
          UNPACK    SP70,PATH
          CALL      DHED0000           * display screen header
          MOVE      "28",CCOL          * set up keyin address
          MOVE      "4",CVERT
          CALL      PROC0000           * get ledger 1 key
          BRANCH    EXIT,ML9999        * exit option
          PACK      LEDG1,LEDG,SP70    * save data
          PACK      LEDG1D,LEDGD,SP70
.
ML0200    MOVE      "28",CCOL          * set up keyin address
          MOVE      "5",CVERT
          CALL      PATH0000           * get path
          BRANCH    EXIT,ML0100        * exit option
.
          CALL      OPNB0000           * get ledger 2 file (if possible)
          BRANCH    EXIT,ML0200        * exit option
.
          MOVE      "28",CCOL          * set up keyin address
          MOVE      "6",CVERT
          CALL      PROC0000           * get ledger 2 key
          BRANCH    EXIT,ML0200        * exit option
          PACK      LEDG2,LEDG,SP70    * save data
          PACK      LEDG2D,LEDGD,SP70
.
          MOVE      "28",CCOL          * set up keyin address
          MOVE      "7",CVERT
          CALL      YORN0000
          MOVE      FYESNO,PRTSTAT
.
          CALL      CONTQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,ML0100,ML9999
.
          CALL      POST0000           * print missing accounts
          GOTO      ML0100
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
INIT9999  DISPLAY   *P1:24,*EF;
          RETURN
.******************************************************************************
.  OPNA - Open Files A                           Called by ML
.******************************************************************************
OPNA0000  DISPLAY   *P10:24,"Opening ",FILE1DAT;  * Ledger
          OPEN      FMSLMAA1,FILE1DAT
.
          DISPLAY   *P10:24,"Opening ",FILE2DAT;  * Account
          OPEN      FMSAMAA1,FILE2DAT
.
OPNA9999  DISPLAY   *P1:24,*EF;
          RETURN
.******************************************************************************
.  OPNB - Open Files B                           Called by ML
.******************************************************************************
OPNB0000  PACK      STRING,PATH,SP70
          CALL      RMBL0000                     * remove trailing blanks
          PACK      PATH,STRING
.
          PACK      FILE1,PATH,FILE1DAT
          PACK      FILE2,PATH,FILE2DAT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P10:24,"Opening ",FILE1;  * Ledger
          OPEN      FMSLMAA1,FILE1
          BRANCH    OVRCD,OPNB9500
.
          DISPLAY   *P10:24,"Opening ",FILE2;  * Account
          OPEN      FMSAMAA1,FILE2
          BRANCH    OVRCD,OPNB9500
          TRAPCLR   IO
.
          DISPLAY   *P10:24,"Opening ",FILE2DAT;  * Account
          OPEN      FMSAMAAX,FILE2DAT
.
OPNB9000  MOVE      ZERO,EXIT
          GOTO      OPNB9999
.
OPNB9500  MOVE      ONE,EXIT
.
          DISPLAY   *P1:24,*B,*EF,"Files not found in ",*+,PATH," - ";
          CALL      HITENTER
.
OPNB9999  DISPLAY   *P1:24,*EF;
          RETURN
.******************************************************************************
.  PROC - Get Key                                Called by ML
.         Returns : EXIT     (1=exit)
.******************************************************************************
PROC0000  UNPACK    SP70,LEDG,LEDGD
.
PROC0100  CALL      KLMAFM00
.
          BRANCH    EXIT,PROC9500,PROC9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
          PACK      LEDG,FMLALEDG,SP70
          PACK      LEDGD,FMLADESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,LEDG,*HOFF,SP2,LEDGD;
.
PROC9000  MOVE      ZERO,EXIT               * continue
          GOTO      PROC9999
.
PROC9500  MOVE      ONE,EXIT                * quit
.
PROC9999  RETURN
.******************************************************************************
.  DHED - Display Screen header                  Called by PROC, redisps
.******************************************************************************
DHED0000  DISPLAY   *P1:4,"   Ledger 1              : ":
                          *V2LON,LEDG1,*HOFF,SP2,LEDG1D,*EF:
                    *P1:5,"   Dpath 2 (End with '/'): ":
                          *V2LON,PATH,*HOFF:
                    *P1:6,"   Ledger 2              : ":
                          *V2LON,LEDG2,*HOFF,SP2,LEDG2D:
                    *P1:7,"   Incl. Stat Acct's Y/N : ";
.
DHED9999  RETURN
.**********************************************************************
.  PATH - Get Path                                     Called By ML
.        Requires - CCOL, CVERT
.        Returns  - EXIT     (1=quit)
.**********************************************************************
PATH0000  UNPACK    UNDLN70,PATH
          KEYIN     *PCCOL:CVERT,*DV,PATH:
                    *PCCOL:CVERT,*V2LON,PATH,*EL;
          PACK      PATH,PATH,SP70
          MATCH     SP70,PATH
          GOTO      PATH9500 IF EQUAL
.
PATH9000  MOVE      ZERO,EXIT          * continue
          GOTO      PATH9999
.
PATH9500  MOVE      ONE,EXIT           * quit
.
PATH9999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.**********************************************************************
POST0000  MOVE      ZERO,CPAGENO         * reset page no.           
          MOVE      ZERO,COUNT
          CLOCK     TIME,CTIMEIS         * get current time        
          MOVE      "999",CLNO           * set line number        
.
          PACK      KEY14,LEDG2,SP70
          CALL      RSFMAM1              * go to correct pos in file
.
POST1000  CALL      RKFMAM1              * get next record
          BRANCH    OVRCD,POST9000
          MATCH     FMAMLEDG,LEDG2
          GOTO      POST9000 IF NOT EQUAL
.
          BRANCH    PRTSTAT,POST1100     * print stat accounts
          MATCH     "8",FMAMTYPE
          GOTO      POST1000 IF NOT LESS
.
POST1100  PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          DISPLAY   *P1:24,"Processing : ",*V2LON,KEY14,*EF;
.
          PACK      KEY14,LEDG1,FMAMACCT,SP70
          CALL      RDFMAMX
          COMPARE   ONE,OVRCD             * account found ?
          GOTO      POST1000 IF NOT EQUAL
.
          ADD       ONE,COUNT
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          CALL      WRIT0000              * print account
          GOTO      POST1000
.
POST9000  DISPLAY   *P1:24,*B,*EF,"Number of missing accounts : ",COUNT," - ";
          CALL      HITENTER
          COMPARE   ZERO,COUNT
          GOTO      POST9999 IF EQUAL
.
          CALL      UND80
          PRINT     "Number of missing accounts : ",COUNT
.
POST9999  RETURN
.**********************************************************************
.  HEAD - Print header                                 Called By POST
.**********************************************************************
HEAD0000  CALL      HEAD80
          PRINT     *+:
                    *N,"Accounts in Ledger ",PATH,LEDG2,SP2,LEDG2D:
                    *N,"Not In Ledger ",LEDG1,SP2,LEDG1D
          CALL      UND80
          PRINT     "Ledger/Account"
          CALL      UND80
          ADD       "4",CLNO
.
HEAD9999  RETURN
.**********************************************************************
.  WRIT - Print line                                   Called By POST
.**********************************************************************
WRIT0000  PRINT     FMAMLEDG,SLASH,FMAMACCT,SP2,FMAMDESC
          ADD       ONE,CLNO
.
WRIT9999  RETURN
.**********************************************************************
.  RMBL - Remove trailing and leading blanks          Called By lots
.        Requires - STRING   (input string)
.        Returns  - STRING   (output string without blanks)
.**********************************************************************
.
.---- remove trailing blanks ----
.
RMBL0000  PACK      STRING,STRING,SP70      * Ensure string filled to end
          ENDSET    STRING                  * Move form ptr to end of string
.
RMBL1000  CMATCH    SP1,STRING              * Quit loop if char pointed to by
          GOTO      RMBL2000 IF NOT EQUAL   *    form pointer is blank
.
          BUMP      STRING,-1               * Decrement form pointer
          GOTO      RMBL1000 IF NOT EOS     * Quit loop if form ptr = 1
.
          SETLPTR   STRING,ZERO             * Set form and length pointers to 0
          GOTO      RMBL9999                *    since we are at start of string
.                                           *    and exit routine
.
RMBL2000  LENSET    STRING                  * Set length pointer to form pointer
          RESET     STRING                  * Set form pointer to one
.
.---- remove leading blanks ----
.
RMBL3000  CMATCH    SP1,STRING              * Quit loop if char pointed to by
          GOTO      RMBL9000 IF NOT EQUAL   *    form pointer is blank
.
          BUMP      STRING,1                * Increment form pointer
          GOTO      RMBL3000 IF NOT EOS     * Quit loop if form ptr = eos
.
          SETLPTR   STRING,ZERO             * Set form and length pointers to 0
          GOTO      RMBL9999                *    since we are at start of string
.                                           *    and exit routine
.
RMBL9000  
.
RMBL9999  RETURN
.******************************************************************************
.  Redisplays
.******************************************************************************
RLMAFM00  CALL      DHED0000
.
RZZZFM99  RETURN
.******************************************************************************
.  IO Routines
.******************************************************************************
RSFMAMX   RESET     KEY14
          READ      FMSAMAAX,KEY14;;
          RETURN
.
RAFMAMX   RESET     KEY14
          MOVE      ZERO,OVRCD
          READ      FMSAMAAX,KEY14;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDFMAMX   RESET     KEY14
          MOVE      ZERO,OVRCD
          READ      FMSAMAAX,KEY14;XXAMLEDG,XXAMACCT,XXAMDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
RKFMAMX   MOVE      ZERO,OVRCD
          READKS    FMSAMAAX;XXAMLEDG,XXAMACCT,XXAMDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
RPFMAMX   MOVE      ZERO,OVRCD
          READKP    FMSAMAAX;XXAMLEDG,XXAMACCT,XXAMDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
UPFMAMX   UPDATE    FMSAMAAX;XXAMLEDG,XXAMACCT,XXAMDESC
          RETURN
.
WRFMAMX   RESET     KEY14
          WRITE     FMSAMAAX,KEY14;XXAMLEDG,XXAMACCT,XXAMDESC
          RETURN
.
DEFMAMX   RESET     KEY14
          DELETE    FMSAMAAX,KEY14
          RETURN
.
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSAMAIO/INC       * Account
          INC       FMSLMAIO/INC       * Ledger
          INC       FMSLMAKY           * Ledger
