.-------------------------------------------------------
          INC       FMSSTDDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO
. VF.00.01  23.12.1999 Sandra Barcham
.           Recompiled for FMSCCAFD
.           srf 646145
.-------------------------------------------------------
F6P1      FORM      6.1
LASTPAGE  FORM      1
CCLINES   FORM      10
TOTENDB   FORM      12.2
OUTENDB   DIM       18
OUTFORB   DIM       18
TOUTAMT   DIM       18
LASTYEAR  FORM      1
HEADING   DIM       20
FMSP      INIT      "fmsp"
FMSR      INIT      "fmsr"
FMST      INIT      "fmst"
QFORMAT   INIT      "9999.9"
AFORMAT   INIT      "(9,999,999.99 "
FORMAT    INIT      "(9,999,999,999.99 "
QUANT     DIM       6
OUTAMT    DIM       14
ESTAMT    DIM       14
POSTDATE  DIM       10
COUNT     FORM      2
DEBCRED   DIM       2
ACCTPRIN  FORM      1     * Flag Account Name Print 0 = No 1 = Yes
FPSFILE   DIM       8
ORDNO     DIM       8
CHQNO     DIM       8
TRNFILE   DIM       8
CTRFILE   DIM       8
.
COSTCODE  DIM       12
SUBJCODE  DIM       12
TOTFORB   FORM      12.2
F10P2     FORM      10.2
COSTTOT   FORM      12.2
ACCTTOT   FORM      12.2
GRANTOT   FORM      12.2
STRSUB    DIM       12
ENDSUB    DIM       12
STRCCC    DIM       12
ENDCCC    DIM       12
LASTCCC    DIM       12
FINPER    DIM       2
STRPER    DIM       2
ENDPER    DIM       2
STRDAT    DIM       8
ENDDAT    DIM       8
PERSDATE  DIM       8
PEREDATE  DIM       8
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAFMS48
.   Function      :   Cost Centre Transaction Analysis        
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSINPFD/INC
          INC       APSMASFD/INC
          INC       APSNSCFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCCAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSCTRFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSSBAFD/INC
          INC       FMSTRNFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
.=========================
.Local Variable Definition
.-------------------------
YEAREND   DIM       8 * Scr 00 Fld     8
FROMPER   DIM      35 * Scr 00 Fld     9
TOPER     DIM      35 * Scr 00 Fld    10
FROMCCC   DIM      40 * Scr 00 Fld    11
TOCCC     DIM      40 * Scr 00 Fld    12
FROMSUB   DIM      40 * Scr 00 Fld    13
TOSUB     DIM      40 * Scr 00 Fld    14
SBREAK    FORM      1 * Scr 00 Fld    15
PRTTRAN   FORM      1 * Scr 00 Fld    16
CASHFLAG  FORM      1 * Scr 00 Fld    17
ZEROBAL   FORM      1 * Scr 00 Fld    18
PRTSUBJ   FORM      1 * Scr 00 Fld    19
PRTCOST   FORM      1 * Scr 00 Fld    20
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAFMS48"
PRGNAM    INIT      "Cost Centre Transaction Analysis        "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA1,"apsnscaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA2,"apsnscaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 45",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudcc";
            OPEN      FMSAUDCC,"fmsaudcc"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 44",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudsa";
            OPEN      FMSAUDSA,"fmsaudsa"
          ENDIF
          DISPLAY   *P56:24,"Opening fmsccaaf";
          OPEN      FMSCCAA1,"fmsccaaf"
          DISPLAY   *P56:24,"Opening fmsccaaf";
          OPEN      FMSCCAA2,"fmsccaaf"
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening  fmssbaaf           ";
          OPEN      FMSSBAA1,"fmssbaaf"          
          DISPLAY   *P56:24,"Opening  fmssbaaf           ";
          OPEN      FMSSBAA2,"fmssbaaf"          
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Cost Centre Transaction Analysis   
          ENDIF
          RETURN
.--------------------------------
. Screen - Cost Centre Transaction Analysis   
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      DEFPAR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Cost Centre Transaction Analysis   
.-------------------------------------------------------
CF00L000
          MOVE      SP70,FMLALEDG
          MOVE      SP70,FMLADESC
          MOVE      SP70,FMLCYEAR
          MOVE      SP70,YEAREND 
          MOVE      SP70,FROMPER 
          MOVE      SP70,TOPER   
          MOVE      SP70,FROMCCC 
          MOVE      SP70,TOCCC   
          MOVE      SP70,FROMSUB 
          MOVE      SP70,TOSUB   
          MOVE      ZERO,SBREAK  
          MOVE      ZERO,PRTTRAN 
          MOVE      ZERO,CASHFLAG
          MOVE      ZERO,ZEROBAL 
          MOVE      ZERO,PRTSUBJ 
          MOVE      ZERO,PRTCOST 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Cost Centre Transaction Analysis   
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Cost Centre Transaction Analysis   
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Cost Centre Transaction Analysis   
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Cost Centre Transaction Analysis   
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Cost Centre Transaction Analysis   
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L101,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L115,PS00L116
          GOTO     PS00L999
.
PS00L101
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FMLCYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          UNPACK    YEAREND,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      TOPER,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FROMCCC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      TOCCC,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      FROMSUB,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      TOSUB,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SBREAK,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTTRAN,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CASHFLAG,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      ZEROBAL,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTSUBJ,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTCOST,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Cost Centre Transaction Analysis   
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L006,SF00L105,SF00L006:
                            SF00L106,SF00L006,SF00L107,SF00L006:
                            SF00L108,SF00L006,SF00L109,SF00L110:
                            SF00L111,SF00L112,SF00L113,SF00L114
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L104,SF00L020,SF00L105,SF00L020:
                            SF00L106,SF00L020,SF00L107,SF00L020:
                            SF00L108,SF00L020,SF00L109,SF00L110:
                            SF00L111,SF00L112,SF00L113,SF00L114
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L104
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLAA00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,YEAREND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLCA00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      YEREND00
          MOVE      FMLCYEAR,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    YEAREND,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPER   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RFPER000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPER,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCCC   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RCOST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCCC,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCCC,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOSUB   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RSUBJ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMSUB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOSUB,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L109
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,SBREAK  
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SBREAK,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
          CALL      DEFAULTY
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRTTRAN 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTTRAN,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L111
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CASHFLAG
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CASHFLAG,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L112
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,ZEROBAL 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      ZEROBAL,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L113
          CALL      DEFAULTY
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRTSUBJ 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTSUBJ,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L114
          CALL      DEFAULTY
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRTCOST 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTCOST,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.-----------------------------------------------------------------
. Set Default Parameters
.-----------------------------------------------------------------
DEFPAR00  CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          MOVE      "Start",FROMCCC
          MOVE      "End",TOCCC
          MOVE      SP70,STRCCC
          MOVE      Z70,ENDCCC
          MOVE      "Start",FROMSUB
          MOVE      "End",TOSUB
          MOVE      SP70,STRSUB
          MOVE      Z70,ENDSUB
          MOVE      ZERO,SBREAK
          MOVE      ONE,PRTTRAN
          MOVE      ONE,PRTCOST
          MOVE      ONE,PRTSUBJ
          MOVE      ZERO,CASHFLAG
          MOVE      ZERO,ZEROBAL
.
. Determine Current Financial Year & Period
.
          PACK      KEY2,SP70
          CALL      RSFMLA1
DEFPER10  CALL      RKFMLA1
          BRANCH    OVRCD,DEFPER90
.
          PACK      KEY6,FMLALEDG,FMLACYRR
          CALL      RDFMLC1
          BRANCH    OVRCD,DEFPER10
.
          MOVE      FMLAPER,STRPER
          MOVE      FMLAPER,ENDPER
          MOVE      STRPER,F2
          LOAD      ENDDAT,F2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO,FMLC05TO:
                                FMLC06TO,FMLC07TO,FMLC08TO,FMLC09TO,FMLC10TO:
                                FMLC11TO,FMLC12TO,FMLC13TO
          LOAD      STRDAT,F2,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR,FMLC05FR:
                                FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR,FMLC10FR:
                                FMLC11FR,FMLC12FR,FMLC13FR
          LOAD      PERDESC,F2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE,FMLC05DE:
                               FMLC06DE,FMLC07DE,FMLC08DE,FMLC09DE,FMLC10DE:
                               FMLC11DE,FMLC12DE,FMLC13DE
          PACK      FROMPER,STRPER,SP1,PERDESC
          PACK      TOPER,STRPER,SP1,PERDESC
          MOVE      FMLC12TO,YEAREND
          LOAD      YEAREND,FMLAPERS,FMLC13TO
          GOTO      DEFPER99
.
DEFPER90  MOVE      "ERROR - Ledger Masterfiles Not Set up correctly - ",DISPMSG
          CALL      MESSAGE1
          CHAIN     PGM
.
DEFPER99  RETURN
.
.-----------------------------------------------------------------
. Determine Year Ending
.-----------------------------------------------------------------
YEREND00  MOVE      FMLC12TO,YEAREND
          LOAD      YEAREND,FMLAPERS,FMLC13TO
          RETURN
.
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
DEFAULTY    MOVE     ANSY,DEFYESNO
            RETURN
.------------------------------------------------------------
. Print Report
.------------------------------------------------------------
REPT0000  CALL      OPEN0000
          MOVE      ZERO,LASTPAGE
          IF        CASHFLAG=0
            MOVE      "Accrual Report ",HEADING
          ELSE
            MOVE      "Cash Report    ",HEADING
          ENDIF
.
          MOVE      ZERO,ACCTTOT   * Account Total
          MOVE      ZERO,COSTTOT   * Cost Centre
          MOVE      ZERO,GRANTOT   * Grand Total
          MOVE      SP70,LASTCCC
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,CCLINES       * Line Printed for Cost Centre
          MOVE      "99",CLNO
          CLOCK     TIME,CTIMEIS
          PACK      KEY14,FMLALEDG,STRCCC,SP70
          CALL      RSFMAM1
          CALL      RPFMAM1
.
REPT1000  CALL      RKFMAM1              * read next
          BRANCH    OVRCD,REPT9500       * end of report if over
.
          MATCH     FMAMLEDG,FMLALEDG    * Test if same ledger
          GOTO      REPT9500 IF NOT EQUAL
.
          CALL      GCOD0000             * Determine Cost Centre & Subjective
.
          MATCH     "6",FMAMTYPE         * Test if posting FMAMACCT type
          GOTO      REPT1000 IF NOT LESS
.
          MATCH     STRCCC,COSTCODE
          GOTO      REPT1000 IF LESS
          MATCH     COSTCODE,ENDCCC
          GOTO      REPT9500 IF LESS
.
          MATCH     STRSUB,SUBJCODE
          GOTO      REPT1000 IF LESS
          MATCH     SUBJCODE,ENDSUB
          GOTO      REPT1000 IF LESS
.
          PACK      KEY14,FMAMLEDG,COSTCODE
          CALL      RDFMCC1              * Must have a Valid Cost Centre
          BRANCH    OVRCD,REPT1000
.
          PACK      KEY14,FMAMLEDG,SUBJCODE
          CALL      RDFMSA1              * Must have a Valid Subjective
          BRANCH    OVRCD,REPT1000
.
          MATCH     COSTCODE,LASTCCC
          CALL      CSTTOT00 IF NOT EQUAL
.
.-----  read through the cash or accrual transaction file ----
.
REPT1600  MOVE      ZERO,ACCTTOT
          MOVE      ZERO,ACCTPRIN        * FMAMACCT Code Not Printed
          PACK      KEY32,FMAMLEDG,FMAMACCT,STRDAT,SP20
          CALL      RSFMTR2
.
REPT1700  CALL      RKFMTR2
          BRANCH    OVRCD,REPT2000
.
          MATCH     FMAMLEDG,FMTRLEDG    * test for same ledger
          GOTO      REPT2000 IF NOT EQUAL
.
          MATCH     FMAMACCT,FMTRACCT    * test if same FMAMACCT
          GOTO      REPT2000 IF NOT EQUAL
.
          MATCH     FMTRPDAT,ENDDAT      * test if in date range
          GOTO      REPT2000 IF LESS
.
          BRANCH    ACCTPRIN,REPT1800
          COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
          MOVE      ONE,ACCTPRIN        * FMAMACCT Code Not Printed
          ADD       ONE,CCLINES          * Line Printed for Cost Centre
          IF        (PRTSUBJ=1&PRTTRAN=1)
            ADD       ONE,CLNO
            PRINT     "Subjective       : ",SUBJCODE,FMSADESC
          ENDIF
.
REPT1800  COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
.
          ADD       ONE,CCLINES          * Line Printed for Cost Centre
          CALL      PLIN0000             * print the report line
          GOTO      REPT1700
.
REPT2000  CALL      FORB0000
          CALL      ACCTOT00
          GOTO      REPT1000
.                                            * have we printed anything?
REPT9500  IF        CPAGENO=0
            MOVE      SP70,SUBJCODE
            MOVE      SP70,FMSADESC
            CALL      HEAD0000
            CALL      UND132
            PRINT     *50,"*** End of Report ***"
            GOTO      REPT9999
          ENDIF
.
          MOVE      ONE,LASTPAGE
          CALL      CSTTOT00
          MOVE      FORMAT,TOUTAMT
          FEDIT     GRANTOT,TOUTAMT      * format total
.
          CALL      UND132
          PRINT     "Report Total  ",*115,TOUTAMT
          CALL      UND132
          PRINT     *50,"*** End of Report ***"
.
REPT9999  RETURN
.------------------------------------------------------------
. Cost Centre Total Print
.------------------------------------------------------------
CSTTOT00  COMPARE   ZERO,CPAGENO
          GOTO      CSTTOT90 IF EQUAL
          IF        (CCLINES=0&COSTTOT=0)
            GOTO      CSTTOT90
          ENDIF
          MOVE      ZERO,CCLINES       * Line Printed for Cost Centre
.
          PACK      KEY14,FMAMLEDG,LASTCCC
          CALL      RDFMCC1              * Read Last Cost Centre
.
          MOVE      FORMAT,TOUTAMT
          FEDIT     COSTTOT,TOUTAMT      * format total
.
          IF        PRTCOST=1
            IF        (PRTSUBJ=1&PRTTRAN=0)
              CALL      UND132
            ENDIF
            PRINT     "Cost Centre      : ",FMCCCOCE,SP1,FMCCDESC,*115,TOUTAMT
            ADD       ONE,CLNO
          ENDIF
.
          BRANCH    LASTPAGE,CSTTOT99
.
          PACK      KEY14,FMAMLEDG,COSTCODE
          CALL      RDFMCC1              * New Cost Centre
          IF        SBREAK=0
            MOVE      "99",CLNO
          ELSE
            IF        (PRTSUBJ=1|PRTTRAN=1)
              CALL      UND132
              PRINT     "Cost Centre      : ",FMCCCOCE,SP1,FMCCDESC
              ADD       "1",CLNO
            ENDIF
          ENDIF
.
          MOVE     COSTCODE,LASTCCC
          MOVE     ZERO,COSTTOT
          GOTO     CSTTOT99
.
CSTTOT90  MOVE     FMCCCOCE,LASTCCC
          GOTO     CSTTOT99
.
CSTTOT99  RETURN
.-----------------------------------------------------------------------
. ACCTOT00 - Print Account Totals
.          - ACCTTOT = Account Total
.          - TOTFORB = Brought Forward        (not printed at present)
.          - TOTENDB = Balance Carried orward (not printed at present)
.-----------------------------------------------------------------------
ACCTOT00  MOVE      ACCTTOT,TOTENDB
          ADD       TOTFORB,TOTENDB
.
          MOVE      FORMAT,OUTFORB
          FEDIT     TOTFORB,OUTFORB      * format balance B/F
.
          MOVE      FORMAT,TOUTAMT
          FEDIT     ACCTTOT,TOUTAMT      * format total
.
          MOVE      FORMAT,OUTENDB
          FEDIT     TOTENDB,OUTENDB      * format end balance
.
. Account Description Has Been Printed so must have Transactions
.
          BRANCH    ACCTPRIN,ACCTOT10
.
. Chack for Zero Balance
.
          IF        (ZEROBAL=0&ACCTTOT=0)
            GOTO      ACCTOT99
          ENDIF
.
          COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
          MOVE      ONE,ACCTPRIN        * Account Code Not Printed
          IF        (PRTSUBJ=1&PRTTRAN=1)
            ADD       ONE,CLNO
            PRINT     "Subjective       : ",SUBJCODE,FMSADESC
          ENDIF
.
ACCTOT10  IF        PRTSUBJ=1
            IF        PRTTRAN=1
              PRINT     *120,"--------------":
                        *N,*115,TOUTAMT
              CALL      UND132
              ADD       TWO,CLNO
            ELSE
              PRINT     "Subjective       : ",SUBJCODE,FMSADESC,*115,TOUTAMT
              ADD       ONE,CLNO
            ENDIF
          ENDIF
.
ACCTOT99  RETURN
.**********************************************************************
.*                         PLIN0000                                   *
.*                   Print a line on the report                       *
.**********************************************************************
PLIN0000  CALL      FAMT0000
.
          UNPACK    FMTRPDAT,CCENT,CYEAR,CMON,CDAY
          PACK      POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          ADD       FMTRAMT,ACCTTOT
          ADD       FMTRAMT,COSTTOT
          ADD       FMTRAMT,GRANTOT
.
          MOVE      SP8,CHQNO
          MOVE      FMTRORD,ORDNO
          MATCH     "PY",FMTRTYPE
          IF        @EQUAL
            MOVE      SP8,ORDNO
            MOVE      FMTRORD,CHQNO
          ENDIF
.
          MOVE      SP70,APMACN1
          MATCH     SP70,FMTRCRED
          GOTO      PLIN0500 IF EQUAL
          MATCH     "     ",FMTRCRED
          GOTO      PLIN0500 IF EQUAL
          MATCH     "00000",FMTRCRED
          GOTO      PLIN0500 IF EQUAL
          UNPACK    FMTRCRED,KEY2,KEY3
          MATCH     "~~",KEY2
          GOTO      PLIN0400 IF NOT EQUAL
          PACK      KEY8,FMTRBAT,KEY3
          CALL      RDAPNS1
          IF        OVRCD=0
            MOVE      APNSNA1,APMACN1
          ELSE
            CLEAR     APMACN1
            APPEND    "Creditor : ",APMACN1
            APPEND    FMTRCRED,APMACN1
            RESET     APMACN1
          ENDIF
          GOTO      PLIN0500

PLIN0400  PACK      KEY5,FMTRCRED
          CALL      RDAPMA1
          IF        OVRCD=1
            CLEAR     APMACN1
            APPEND    "Creditor : ",APMACN1
            APPEND    FMTRCRED,APMACN1
            RESET     APMACN1
          ENDIF
.
PLIN0500  MATCH     "IN",FMTRTYPE
          GOTO      PLIN0600 IF NOT EQUAL
.
          UNPACK    FMTRORD,KEY1,KEY7
          MATCH     SP70,KEY7
          GOTO      PLIN0600 IF EQUAL
          CALL      RDSIPA1           * Read Purchase Order Masterfile
          BRANCH    OVRCD,PLIN0600
.
          PACK      KEY51,FMTRBAT,FMTRCRED,FMTRDOCR,FMTRDOCR,FMTRORD,SP70
          CALL      RSAPIN1
PLIN0510  CALL      RKAPIN1       * Find Matching AP Entry transaction
          BRANCH    OVRCD,PLIN0600
          PACK      KEY48,APINBCH,APINCRD,APINREF,APINDOC,APINORD,SP70
          MATCH     KEY48,KEY51
          GOTO      PLIN0600 IF NOT EQUAL
.
          MATCH     APINLED,FMTRLEDG
          GOTO      PLIN0510 IF NOT EQUAL
          MATCH     APINACC,FMTRACCT
          GOTO      PLIN0510 IF NOT EQUAL
          COMPARE   APINAMT,FMTRAMT
          GOTO      PLIN0510 IF NOT EQUAL
          MATCH     APINDES,FMTRDESC
          GOTO      PLIN0510 IF NOT EQUAL
.
. This Must be it or at least very very close
.
          PACK      KEY12,SIPAPON,APINCAT
          CALL      RDSIPF1
          BRANCH    OVRCD,PLIN0600
.
          PACK      KEY10,SIPAPON,APINCAT
          CALL      RDSIPC1
          BRANCH    OVRCD,PLIN0600
.
          MOVE      QFORMAT,QUANT
          MOVE      SIPCOQT,F6P1
          FEDIT     F6P1,QUANT
          MOVE      AFORMAT,ESTAMT
          ASSIGN    SIPCOQT*SIPCECT,F12P2
          FEDIT     F12P2,ESTAMT
          GOTO      PLIN0700
.
PLIN0600  MOVE      SP70,QUANT
          MOVE      SP70,ESTAMT
.
PLIN0700  MOVE      AFORMAT,OUTAMT
          MOVE      APMACN1,KEY30
          FEDIT     FMTRAMT,OUTAMT
          MOVE      FMTRDOCR,KEY10
          IF        PRTTRAN=1
            PRINT     POSTDATE,SP1,ORDNO,SP1,KEY30,SP1,KEY10,SP1,FMTRBAT:
                      SP1,FMTRDESC,QUANT,ESTAMT,OUTAMT
            ADD       ONE,CLNO
          ENDIF
PLIN9999  RETURN
.**********************************************************************
.*                         HEAD0000                                   *
.*                    print the page heading                          *
.**********************************************************************
HEAD0000  CALL      HEAD132
          DISPLAY   *P1:24,*EL,"Page : ",*V2LON,CPAGENO
.
          IF         CPAGENO=1
            ADD        "3",CLNO
            PRINT      *1,"Ledger           : ",FMLALEDG,SP1,FMLADESC:
                         *110,HEADING,*N:
                       *1,"Cost Centre From : ",FROMCCC," to ",TOCCC,*N:
                       *1,"Subjective  From : ",FROMSUB," to ",TOSUB
          ENDIF
          UNPACK     YEAREND,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PRINT      *1,"Period Range     : ",FROMPER," to ",TOPER:
                     SP5,"Year Ending  : ",CPCDATE
.
          PRINT     "Cost Centre      : ",COSTCODE,SP1,FMCCDESC
.
          CALL      UND132
          PRINT     "Acct. Date Pur. Ref Supplier                       ":
                    "Reference  Batch Part Description           Orde":
                    "r Qty     Exp Cost      Inv Cost"
          CALL      UND132
          ADD       FOUR,CLNO
          IF        ACCTPRIN=1
            IF        (PRTSUBJ=1&PRTTRAN=1)
              ADD       ONE,CLNO
              PRINT     "Subjective       : ",SUBJCODE,FMSADESC
            ENDIF
          ENDIF
.
HEAD9999  RETURN
.**********************************************************************
.                          OPEN0000
.                   Open the fps trn and dsf files
.**********************************************************************
OPEN0000  CLEAR     FPSFILE
          CLEAR     CTRFILE
          CLEAR     TRNFILE
.
.----  set up the filenames ----
.
          PACK      FPSFILE,FMSP,FMLCYEAR
          PACK      CTRFILE,FMSR,FMLCYEAR
          PACK      TRNFILE,FMST,FMLCYEAR
.
OPEN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FPSFILE    * open FPS file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN6000       * if no file then no records
.
          MOVE      FMLCYEAR,F4
          SUB       ONE,F4
          PACK      FPSFILE,FMSP,F4
          REP       " 0",FPSFILE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA2,FPSFILE    * open last years fps file
          TRAPCLR   IO
          MOVE      OVRCD,LASTYEAR      * LASTYEAR Flag = 0 if open
.
          BRANCH    CASHFLAG,OPEN4000
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,TRNFILE    * open TRN file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN7000       * if no file then no records
          GOTO      OPEN9999
.
OPEN4000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,CTRFILE    * open CTR file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN7000       * if no file then no records
          GOTO      OPEN9999
.
OPEN6000  MOVE      ONE,EXIT
          BEEP
          DISPLAY   *P1:24,*EL:
                    "No financial period summaries exist for this year. ";
          CALL      HITENTER
          GOTO      OPEN9999
.
OPEN7000  MOVE      ONE,EXIT
          BEEP
          DISPLAY   *P1:24,*EL,"No transactions exist for this year. ";
          CALL      HITENTER
          GOTO      OPEN9999
.
OPEN9999  RETURN
.***********************************************************************
.*                        FORB0000                                     *
.*              format the balance brought forward                     *
.***********************************************************************
FORB0000  MOVE      ZERO,TOTFORB
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMFP1
          BRANCH    OVRCD,FORB8000
.
          MOVE      STRPER,F2
          SUB       ONE,F2
          MOVE      ZERO,COUNT
.
          BRANCH    CASHFLAG,FORB5000
          MOVE      FMFPABF,TOTFORB
          COMPARE   ZERO,F2
          GOTO      FORB8000 IF EQUAL
.
FORB1000  ADD       ONE,COUNT
.
          LOAD      F10P2,COUNT,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                             FMFPA05,FMFPA06,FMFPA07,FMFPA08,FMFPA09:
                             FMFPA10,FMFPA11,FMFPA12,FMFPA13
.
          ADD       F10P2,TOTFORB
          COMPARE   F2,COUNT
          GOTO      FORB1000 IF LESS
          GOTO      FORB8000
.
FORB5000  MOVE      FMFPCBF,TOTFORB
          COMPARE   ZERO,F2
          GOTO      FORB8000 IF EQUAL
.
FORB5100  ADD       ONE,COUNT
.
          LOAD      F10P2,COUNT,FMFPC01,FMFPC02,FMFPC03,FMFPC04:
                             FMFPC05,FMFPC06,FMFPC07,FMFPC08,FMFPC09:
                             FMFPC10,FMFPC11,FMFPC12,FMFPC13
.
          ADD       F10P2,TOTFORB
          COMPARE   F2,COUNT
          GOTO      FORB5100 IF LESS
.
. Check for balance sheet item and end of year B/F indicator
.----------------------------------------------------------------------
FORB8000  BRANCH    FMLCYLC,FORB9999
          MOVE      FMAMTYPE,F1
          BRANCH    F1,FORB9999,FORB9999,FORB8100,FORB8100,FORB8100
          GOTO      FORB9999
.
FORB8100  BRANCH    LASTYEAR,FORB9999    * Is Last Year Open. 0=Yes 1=No
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMFP2
          BRANCH    OVRCD,FORB9999
          BRANCH    CASHFLAG,FORB8500
          ADD       FMFPABF,TOTFORB
          ADD       FMFPA01,TOTFORB
          ADD       FMFPA02,TOTFORB
          ADD       FMFPA03,TOTFORB
          ADD       FMFPA04,TOTFORB
          ADD       FMFPA05,TOTFORB
          ADD       FMFPA06,TOTFORB
          ADD       FMFPA07,TOTFORB
          ADD       FMFPA08,TOTFORB
          ADD       FMFPA09,TOTFORB
          ADD       FMFPA10,TOTFORB
          ADD       FMFPA11,TOTFORB
          ADD       FMFPA12,TOTFORB
          ADD       FMFPA13,TOTFORB
          GOTO      FORB9999
.
FORB8500  ADD       FMFPCBF,TOTFORB
          ADD       FMFPC01,TOTFORB
          ADD       FMFPC02,TOTFORB
          ADD       FMFPC03,TOTFORB
          ADD       FMFPC04,TOTFORB
          ADD       FMFPC05,TOTFORB
          ADD       FMFPC06,TOTFORB
          ADD       FMFPC07,TOTFORB
          ADD       FMFPC08,TOTFORB
          ADD       FMFPC09,TOTFORB
          ADD       FMFPC10,TOTFORB
          ADD       FMFPC11,TOTFORB
          ADD       FMFPC12,TOTFORB
          ADD       FMFPC13,TOTFORB
.
FORB9999  RETURN
.**********************************************************************
. FAMT0000 - Fix BCAMT as Debit/Credit
.**********************************************************************
FAMT0000  MATCH     "JC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CS",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CR",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RF",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RI",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MOVE      "Dr",DEBCRED
          GOTO      FAMT9999
.
FAMT1000  MULT      SEQ,FMTRAMT
          MOVE      "Cr",DEBCRED
.
FAMT9999  RETURN
.
.****************************************************************************
.  GCOD - get subjective and cost codes from FMAMACCT code    Called by lots
.        Requires - FMAMACCT   (FMAMACCT code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    FMAMACCT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    FMAMACCT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    FMAMACCT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    FMAMACCT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    FMAMACCT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    FMAMACCT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    FMAMACCT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    FMAMACCT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    FMAMACCT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    FMAMACCT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    FMAMACCT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    FMAMACCT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    FMAMACCT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    FMAMACCT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    FMAMACCT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    FMAMACCT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    FMAMACCT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    FMAMACCT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    FMAMACCT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    FMAMACCT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    FMAMACCT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    FMAMACCT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    FMAMACCT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    FMAMACCT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY1,KEY1,KEY1:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.
.------------------------------------------------------------
. Enter Range of Financial Periods
.------------------------------------------------------------
RFPER000   MOVE     "    9",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
.
           CALL     KPER0000
           BRANCH   EXIT,RFPER100,RFPER999
           MOVE     FINPER,STRPER
           PACK     FROMPER,FINPER,SP1,PERDESC
           MOVE     PERSDATE,STRDAT
           GOTO     RFPER140
RFPER100   MOVE     "Start             ",FROMPER
           MOVE     SP70,STRPER
           MOVE     SP70,STRDAT
.
RFPER140   MOVE     FROMPER,VAR
           CALL     DISPITEM
.
RFPER150   MOVE     "   10",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
.
           CALL     KPER0000
           BRANCH   EXIT,RFPER200,RFPER999
           MOVE     FINPER,ENDPER
           PACK     TOPER,FINPER,SP1,PERDESC
           MOVE     PEREDATE,ENDDAT
           MATCH    STRPER,ENDPER
           GOTO     RFPER999 IF EQUAL
           GOTO     RFPER999 IF NOT LESS
           BEEP
           MOVE     "To Period Must Be > From Period - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RFPER000
.
RFPER200   MOVE     "Finish             ",TOPER
           MOVE     Z70,ENDPER
           MOVE     Z70,ENDDAT
.
RFPER999   MOVE     "    9",FLDID
           CALL     GETPOSIT
           RETURN
.
KPER0000  KEYIN     *PCCOL:CVERT,"__":
                    *PCCOL:CVERT,*V2LON,F2;
          COMPARE   F2,ZERO
          GOTO      KPER9900 IF EQUAL
          COMPARE   F2,ZERO
          GOTO      KPER9000 IF NOT LESS
          ASSIGN    FMLAPERS+12,MAXPER
          COMPARE   F2,MAXPER
          GOTO      KPER9000 IF LESS
.
          MOVE      F2,FINPER
          REP       " 0",FINPER
.
          LOAD      PEREDATE,F2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO,FMLC05TO:
                                FMLC06TO,FMLC07TO,FMLC08TO,FMLC09TO,FMLC10TO:
                                FMLC11TO,FMLC12TO,FMLC13TO
          LOAD      PERSDATE,F2,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR,FMLC05FR:
                                FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR,FMLC10FR:
                                FMLC11FR,FMLC12FR,FMLC13FR
          LOAD      PERDESC,F2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE,FMLC05DE:
                               FMLC06DE,FMLC07DE,FMLC08DE,FMLC09DE,FMLC10DE:
                               FMLC11DE,FMLC12DE,FMLC13DE
.
          MOVE      ZERO,EXIT
          GOTO      KPER9999
KPER9000  BEEP
          GOTO      KPER0000
.
KPER9900  MOVE      ONE,EXIT
          GOTO      KPER9999
.
KPER9999  RETURN
.------------------------------------------------------------
. Enter Range of Cost Centres
.------------------------------------------------------------
RCOST000   MOVE     "   11",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
.
           MOVE     FMLALEDG,FMCCLEDG
           CALL     KFMCCA00
           BRANCH   EXIT,RCOST100,RCOST999
           MOVE     FMCCCOCE,STRCCC
           PACK     FROMCCC,FMCCCOCE,SP1,FMCCDESC
           GOTO     RCOST140
RCOST100   MOVE     "Start             ",FROMCCC
           MOVE     SP70,STRCCC
.
RCOST140   MOVE     FROMCCC,VAR
           CALL     DISPITEM
.
RCOST150   MOVE     "   12",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
.
           MOVE     FMLALEDG,FMCCLEDG
           CALL     KFMCCA00
           BRANCH   EXIT,RCOST200,RCOST999
           MOVE     FMCCCOCE,ENDCCC
           PACK     TOCCC,FMCCCOCE,SP1,FMCCDESC
           MATCH    STRCCC,ENDCCC
           GOTO     RCOST999 IF EQUAL
           GOTO     RCOST999 IF NOT LESS
           BEEP
           MOVE     "To Cost Centre Must Be > From Cost Centre - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RCOST000
.
RCOST200   MOVE     "Finish             ",TOCCC
           MOVE     Z70,ENDCCC
.
RCOST999   MOVE     "   11",FLDID
           CALL     GETPOSIT
           RETURN
.
.------------------------------------------------------------
. Enter Range of Subjectives
.------------------------------------------------------------
RSUBJ000   MOVE     "   13",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
.
           MOVE     FMLALEDG,FMSALEDG
           MOVE     "6",CSUBJIND
           CALL     KFMSAA00
           BRANCH   EXIT,RSUBJ100,RSUBJ999
           MOVE     FMSASUBJ,STRSUB
           PACK     FROMSUB,FMSASUBJ,SP1,FMSADESC
           GOTO     RSUBJ140
RSUBJ100   MOVE     "Start             ",FROMSUB
           MOVE     SP70,STRSUB
.
RSUBJ140   MOVE     FROMSUB,VAR
           CALL     DISPITEM
.
RSUBJ150   MOVE     "   14",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
.
           MOVE     FMLALEDG,FMSALEDG
           CALL     KFMSAA00
           BRANCH   EXIT,RSUBJ200,RSUBJ999
           MOVE     FMSASUBJ,ENDSUB
           PACK     TOSUB,FMSASUBJ,SP1,FMSADESC
           MATCH    STRSUB,ENDSUB
           GOTO     RSUBJ999 IF EQUAL
           GOTO     RSUBJ999 IF NOT LESS
           BEEP
           MOVE     "To Subjective Must Be > From Subjective - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RSUBJ000
.
RSUBJ200   MOVE     "Finish             ",TOSUB
           MOVE     Z70,ENDSUB
.
RSUBJ999   MOVE     "   13",FLDID
           CALL     GETPOSIT
           RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSINPIO/INC
          INC       APSMASIO/INC
          INC       APSNSCIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCCAIO/INC
          INC       FMSCCAKY    
          INC       FMSCODCD    
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSCTRIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSSBAIO/INC
          INC       FMSSBAKY    
          INC       FMSTRNIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
.
          INC       STDGENCD
.
