.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.01.01  30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
.-------------------------------------------------------
. VF.00.04  11.01.2000 Charles Handaya
.           Recompiled for Audit Files date
. VF.00.03  23.12.1999 Sandra Barcham
.           Recompiled for FMSCCAFD
.           srf 646145
. VF.00.02  30.06.1999 Sandra Barcham
.           Recompiled for FMSLEVKY
.           srf 632475
. VF.00.01  29.04.1999 Sandra Barcham
.           Recompiled for FMSLEVKY
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS74
.   Function      :   Reporting Template Maintenance          
.   Generated  On :   07/04/2011
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSTMPDF    
          INC       FMSAMAFD/INC
          INC       FMSCCAFD/INC
          INC       FMSCONFD/INC
          INC       FMSLEVFD/INC
          INC       FMSLMAFD/INC
          INC       FMSNRAFD/INC
          INC       FMSNRBFD/INC
          INC       FMSNRCFD/INC
          INC       FMSNRDFD/INC
          INC       FMSNREFD/INC
          INC       FMSNRFFD/INC
          INC       FMSPRCFD/INC
          INC       FMSSBAFD/INC
          INC       IBAPRNFD/INC
.=========================
.Local Variable Definition
.-------------------------
XXXXTCOD  DIM      12 * Scr 03 Fld     6
XXXXDESC  DIM      40 * Scr 03 Fld     7
XXXXPRTC  DIM       3 * Scr 03 Fld     8
XXXXTLEV  DIM       3 * Scr 03 Fld    10
.
.    Multi Item Key Fields Scr 03 Fld    12
.-------------------------------------------------------
FMNC1NAM  INIT      "FMNC1"
FMNC1END  FORM      1   * End Display
FMNC1SNO  FORM      5   * Number of Items on the Screen
FMNC1MKY  DIM       127 * Match Key 
FMNC1EKY  DIM       127 * End Key
FMNC1SKY  DIM       127 * Start Key
FMNC1IDX  INIT      " 132 UC1-5"
FMNC1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
FMNC1FNM  DIM       8  * Filename
FMNC1CNT  FORM      3  * Number of Items on Screen
SUBCCDES  DIM      40 * Scr 03 Fld    20
.
.    Multi Item Key Fields Scr 04 Fld    12
.-------------------------------------------------------
FMNF1NAM  INIT      "FMNF1"
FMNF1END  FORM      1   * End Display
FMNF1SNO  FORM      5   * Number of Items on the Screen
FMNF1MKY  DIM       127 * Match Key 
FMNF1EKY  DIM       127 * End Key
FMNF1SKY  DIM       127 * Start Key
FMNF1IDX  INIT      " 132 UC1-5"
FMNF1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
FMNF1FNM  DIM       8  * Filename
FMNF1CNT  FORM      3  * Number of Items on Screen
XXXXSCOD  DIM      12 * Scr 05 Fld     6
XXXXASEQ  DIM       5 * Scr 05 Fld    12
FROMLAB   DIM       5 * Scr 07 Fld     4
FROMDESC  DIM      40 * Scr 07 Fld     5
TOLAB     DIM       5 * Scr 07 Fld     6
TODESC    DIM      40 * Scr 07 Fld     7
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS74"
PRGNAM    INIT      "Reporting Template Maintenance          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDFMCO00
          CALL      SC00L000
          CLOSE     FMNC1FL1,DELETE
.
          CLOSE     FMNF1FL1,DELETE
.
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 45",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudcc";
            OPEN      FMSAUDCC,"fmsaudcc"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 44",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudsa";
            OPEN      FMSAUDSA,"fmsaudsa"
          ENDIF
          DISPLAY   *P56:24,"Opening fmsccaaf";
          OPEN      FMSCCAA1,"fmsccaaf"
          DISPLAY   *P56:24,"Opening fmsccaaf";
          OPEN      FMSCCAA2,"fmsccaaf"
          DISPLAY   *P56:24,"Opening  fmslevaf           ";
          OPEN      FMSLEVA1,"fmslevaf"          
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmsnraaf";
          OPEN      FMSNRAA1,"fmsnraaf"
          DISPLAY   *P56:24,"Opening fmsnrbaf";
          OPEN      FMSNRBA1,"fmsnrbaf"
          DISPLAY   *P56:24,"Opening fmsnrbaf";
          OPEN      FMSNRBA2,"fmsnrbaf"
          DISPLAY   *P56:24,"Opening fmsnrcaf";
          OPEN      FMSNRCA1,"fmsnrcaf"
          DISPLAY   *P56:24,"Opening fmsnrcaf";
          OPEN      FMSNRCA2,"fmsnrcaf"
          DISPLAY   *P56:24,"Opening fmsnrdaf";
          OPEN      FMSNRDA1,"fmsnrdaf"
          DISPLAY   *P56:24,"Opening fmsnreaf";
          OPEN      FMSNREA1,"fmsnreaf"
          DISPLAY   *P56:24,"Opening fmsnreaf";
          OPEN      FMSNREA2,"fmsnreaf"
          DISPLAY   *P56:24,"Opening fmsnrfaf";
          OPEN      FMSNRFA1,"fmsnrfaf"
          DISPLAY   *P56:24,"Opening fmsnrfaf";
          OPEN      FMSNRFA2,"fmsnrfaf"
          DISPLAY   *P56:24,"Opening  fmsprcaf           ";
          OPEN      FMSPRCA1,"fmsprcaf"          
          DISPLAY   *P56:24,"Opening  fmssbaaf           ";
          OPEN      FMSSBAA1,"fmssbaaf"          
          DISPLAY   *P56:24,"Opening  fmssbaaf           ";
          OPEN      FMSSBAA2,"fmssbaaf"          
.--------------------------------------------------------
. Initialise Batch Screen Sub Cost Centre                    
.--------------------------------------------------------
          MOVE     ZERO,FMNC1SNO
          MOVE     "03   12",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,FMNC1SNO
            ENDIF
          ENDIF
          PACK      FMNC1FNM,ANST,FMNC1NAM,PORT
          REP       " 0",FMNC1FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMNC1FL1,FMNC1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     FMNC1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,FMNC1FNM,FMNC1IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",FMNC1FNM;
          EXECUTE   KEY80,TASKID
          OPEN      FMNC1FL1,FMNC1FNM
.--------------------------------------------------------
. Initialise Batch Screen Sub Subjective                     
.--------------------------------------------------------
          MOVE     ZERO,FMNF1SNO
          MOVE     "04   12",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,FMNF1SNO
            ENDIF
          ENDIF
          PACK      FMNF1FNM,ANST,FMNF1NAM,PORT
          REP       " 0",FMNF1FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMNF1FL1,FMNF1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     FMNF1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,FMNF1FNM,FMNF1IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",FMNF1FNM;
          EXECUTE   KEY80,TASKID
          OPEN      FMNF1FL1,FMNF1FNM
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Menu                          
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Cost Centre Template Header        
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Subjective Template Header         
          ENDIF
          MATCH     "03",SCRID
          IF         @EQUAL
            CALL       PS03L000   * Cost Centre Template Linkage       
          ENDIF
          MATCH     "04",SCRID
          IF         @EQUAL
            CALL       PS04L000   * Subjective Template Linkage        
          ENDIF
          MATCH     "05",SCRID
          IF         @EQUAL
            CALL       PS05L000   * Change Cost Centre Parent          
          ENDIF
          MATCH     "06",SCRID
          IF         @EQUAL
            CALL       PS06L000   * Change Subjective Parent           
          ENDIF
          MATCH     "07",SCRID
          IF         @EQUAL
            CALL       PS07L000   * Print Cost Centre Template         
          ENDIF
          MATCH     "08",SCRID
          IF         @EQUAL
            CALL       PS08L000   * Print Subjective Template          
          ENDIF
          MATCH     "09",SCRID
          IF         @EQUAL
            CALL       PS09L000   * Copy Cost Centre Template          
          ENDIF
          MATCH     "10",SCRID
          IF         @EQUAL
            CALL       PS10L000   * Copy Subjective Template           
          ENDIF
          MATCH     "11",SCRID
          IF         @EQUAL
            CALL       PS11L000   * Check Cost Centre Template         
          ENDIF
          MATCH     "12",SCRID
          IF         @EQUAL
            CALL       PS12L000   * Check Subjective Template          
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Menu                          
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      CLRC0000
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Menu                          
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Menu                          
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Menu                          
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Menu                          
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Menu                          
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Menu                          
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Menu                          
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L105,SF00L106,SF00L107:
                            SF00L108,SF00L109,SF00L110,SF00L111:
                            SF00L112,SF00L113,SF00L114
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      GSTR0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L105
          CALL      SC03L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L106
          CALL      SC04L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L107
          CALL      SC05L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L108
          CALL      SC06L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L109
          CALL      SC07L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L110
          CALL      SC08L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L111
          CALL      SC09L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L112
          CALL      SC10L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L113
          CALL      SC11L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L114
          CALL      SC12L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - Cost Centre Template Header        
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Cost Centre Template Header        
.-------------------------------------------------------
CF01L000
          MOVE      SP70,FMNACODE
          MOVE      SP70,FMNADESC
          MOVE      SP70,FMNALEDG
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Cost Centre Template Header        
.--------------------------------------------------------
KY01L000
.
KY01L110
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KFMNA000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      OVRCD,ACCEPT
          MOVE      FMNACODE,VAR     
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Cost Centre Template Header        
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Cost Centre Template Header        
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Cost Centre Template Header        
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Cost Centre Template Header        
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L101,PS01L102,PS01L103,PS01L999
          GOTO     PS01L999
.
PS01L101
          MOVE      FMNADESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      FMNALEDG,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Cost Centre Template Header        
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L006:
                            SF01L103,SF01L104,SF01L006,SF01L105
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L103,SF01L104,SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          CALL      CANCA000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      POSTA000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L103
          CALL     SELECTED
          STRIP     FMNADESC
          SFORMAT   VAR,SCPSLEN
          MOVE      FMNADESC,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,FMNADESC
          SFORMAT   VAR,127
          ENDSET    FMNADESC
          APPEND    SP70,FMNADESC
          RESET     FMNADESC
          CMATCH    EXITCHAR,FMNADESC
          GOTO      SF01L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,FMNADESC
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
          ENDIF
          MOVE      FMNADESC,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLAA00
          MOVE      FMLALEDG,FMNALEDG
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      FMNALEDG,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L105
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELTA000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Subjective Template Header         
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Subjective Template Header         
.-------------------------------------------------------
CF02L000
          MOVE      SP70,FMNDCODE
          MOVE      SP70,FMNDDESC
          MOVE      SP70,FMNDLEDG
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Subjective Template Header         
.--------------------------------------------------------
KY02L000
.
KY02L110
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KFMND000
          BRANCH    EXIT,KY02L900,KY02L900
          MOVE      OVRCD,ACCEPT
          MOVE      FMNDCODE,VAR     
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Subjective Template Header         
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Subjective Template Header         
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Subjective Template Header         
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Subjective Template Header         
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L101,PS02L102,PS02L103,PS02L999
          GOTO     PS02L999
.
PS02L101
          MOVE      FMNDDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      FMNDLEDG,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Subjective Template Header         
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L006:
                            SF02L103,SF02L104,SF02L006,SF02L105
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L103,SF02L104,SF02L020,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          CALL      CANCB000
          MOVE      ONE,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      POSTB000
          MOVE      ONE,EXIT
          GOTO      SF02L999
.
SF02L103
          CALL     SELECTED
          STRIP     FMNDDESC
          SFORMAT   VAR,SCPSLEN
          MOVE      FMNDDESC,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,FMNDDESC
          SFORMAT   VAR,127
          ENDSET    FMNDDESC
          APPEND    SP70,FMNDDESC
          RESET     FMNDDESC
          CMATCH    EXITCHAR,FMNDDESC
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,FMNDDESC
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L103
            ENDIF
          ENDIF
          MOVE      FMNDDESC,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLAA00
          MOVE      FMLALEDG,FMNDLEDG
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FMNDLEDG,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELTB000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.--------------------------------
. Screen - Cost Centre Template Linkage       
.--------------------------------
SC03L000
SC03L100
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC03L200
          CALL      CF03L000 * Clear Fields
SC03L300
          CALL      KY03L000 * Enter Key Fields
          BRANCH    EXIT,SC03L999,SC03L999
SC03L400
          CALL      WP03L000 * Load any WP Details
SC03L500
          CALL      LM03L000 * Load any Batch Details
SC03L600
          CALL      DF03L000 * Display Fields
SC03L700
          CALL      SF03L000 * Select Fields
          BRANCH    EXIT,SC03L100,SC03L100,SC03L200
SC03L800
SC03L900
SC03L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Cost Centre Template Linkage       
.-------------------------------------------------------
CF03L000
          MOVE      SP70,FMNACODE
          MOVE      SP70,XXXXTCOD
          MOVE      SP70,XXXXDESC
          MOVE      SP70,XXXXPRTC
          MOVE      SP70,XXXXTLEV
          MOVE      SP70,FMNCSCOD
CF03L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Cost Centre Template Linkage       
.--------------------------------------------------------
KY03L000
.
KY03L110
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KFMNA000
          BRANCH    EXIT,KY03L900,KY03L900
          MOVE      ZERO,ACCEPT
          MOVE      FMNACODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNADESC,VAR     
            CALL      DISPITEM
          ENDIF
.
KY03L120
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KFMNB000
          BRANCH    EXIT,KY03L110,KY03L900
          MOVE      OVRCD,ACCEPT
          MOVE      XXXXTCOD,VAR     
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY03L999
.
KY03L900  MOVE      ONE,EXIT
KY03L999  RETURN
.---------------------------------------------------------
. Load WP files for : Cost Centre Template Linkage       
.---------------------------------------------------------
WP03L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Cost Centre Template Linkage       
.---------------------------------------------------------
LM03L000
.---------------------------------------------------------
. Load for :    12 Sub Cost Centre                    
.---------------------------------------------------------
          UNPACK    SP70,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD
          PACK      KEY32,XXXXCODE,XXXXTCOD,SP70
          MOVE      KEY32,FMNC1EKY
          STRIP     FMNC1SKY
          SETLPTR   FMNC1EKY,15
          MOVE      FMNC1EKY,FMNC1SKY
          CALL      RDFMNC1 
          IF        OVRCD=0
            CALL      RPFMNC1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP03L000
          MOVE     ZERO,FMNC1CNT
          MOVE     ZERO,FMNC1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP03L600
          MATCH    PRGID,SCPSPID
          GOTO     DP03L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP03L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP03L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L101:
                            DP03L102,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L103:
                            DP03L104
          GOTO      DP03L010
.
DP03L101
          PACK      FMNC1MKY,SP70,SP70
          CALL      UPTFMNC1
          IF        FMNC1END=0
            CALL      RKFMNC1 
            IF        OVRCD=0
              PACK      FMNC1MKY,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD                                            
              MATCH     FMNC1EKY,FMNC1MKY
              IF        @EQUAL
                MOVE      ZERO,FMNC1END
                ADD       ONE,FMNC1CNT
                CALL      UPTFMNC1
          CALL      REDITC00
                MOVE      FMNCSCOD,VAR     
                CALL      DISPITEM
              ELSE
                MOVE      ONE,FMNC1END
              ENDIF
            ELSE
              MOVE      ONE,FMNC1END
            ENDIF
          ENDIF
          IF        FMNC1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L102
          IF        FMNC1END=0
            MOVE      FMNCASEQ,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L103
          IF        FMNC1END=0
            MOVE      SUBCCDES,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L104
          IF        FMNC1END=0
            MOVE      FMNBTLEV,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
DP03L600
          MATCH    "FMNC1",NAMSSFFI
          GOTO     DP03L605 IF NOT EQUAL
          GOTO     DP03L999
DP03L605
DP03L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP03L000
.
          MATCH    "FMNC1",NAMSSFFI
          GOTO     FP03L105 IF NOT EQUAL
          PACK     KEY32,FMNC1SKY,SP70
          CALL     RDFMNC1  * Start
          IF       OVRCD=0
            CALL     RPFMNC1  * Start
          ENDIF
          CALL     DP03L000
          GOTO     FP03L999
FP03L105
FP03L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP03L000
.
          MATCH    "FMNC1",NAMSSFFI
          GOTO     LP03L105 IF NOT EQUAL
          PACK     KEY32,FMNC1SKY,Z70
          CALL     RSFMNC1  * End
          IF       OVRCD=1
            CALL     RPFMNC1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<FMNC1SNO
            CALL     RPFMNC1 
            IF       OVRCD=1
              MOVE     FMNC1SNO,SECTOR
            ENDIF
            PACK     FMNC1MKY,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD                                            
            MATCH    FMNC1EKY,FMNC1MKY
            IF       !@EQUAL
              MOVE     FMNC1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP03L000
          GOTO     LP03L999
LP03L105
LP03L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP03L000
.
          MATCH    "FMNC1",NAMSSFFI
          GOTO     PP03L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP03L105
          CALL      RFTFMNC1
          BRANCH   OVRCD,PP03L115
          MOVE      FMNC1MKY,KEY32 
          CALL      RSFMNC1 
PP03L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=FMNC1SNO
            CALL     RPFMNC1 
            IF       OVRCD=1
              MOVE     FMNC1SNO,SECTOR
            ENDIF
            PACK     FMNC1MKY,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD                                            
            MATCH    FMNC1EKY,FMNC1MKY
            IF       !@EQUAL
              MOVE     FMNC1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP03L000
          GOTO     PP03L999
PP03L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<FMNC1SNO
            CALL     RKFMNC1 
            IF       OVRCD=1
              MOVE     FMNC1SNO,SECTOR
            ENDIF
            PACK     FMNC1MKY,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD                                            
            MATCH    FMNC1EKY,FMNC1MKY
            IF       !@EQUAL
              MOVE     FMNC1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP03L999
PP03L120
PP03L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP03L000
          MATCH    "FMNC1",NAMSSFFI
          GOTO     NP03L115 IF NOT EQUAL
NP03L105
          CALL     RKFMNC1 
          BRANCH   OVRCD,NP03L110
          PACK     FMNC1MKY,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD                                            
          MATCH    FMNC1EKY,FMNC1MKY
          GOTO     NP03L110 IF NOT EQUAL
          CALL     RPFMNC1 
          CALL     DP03L000
          GOTO     NP03L999
NP03L110
          CALL     RPFMNC1 
          BEEP
          GOTO     NP03L999
NP03L115
NP03L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT03L000
CT03L105
CT03L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Cost Centre Template Linkage       
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    12 Sub Cost Centre                    
.---------------------------------------------------------
UPTFMNC1
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      FMNC1FL1,KEY5;ANS
          IF        @OVER
            WRITE     FMNC1FL1,KEY5;SCPSROW,SCPSCOL,FMNC1MKY
          ELSE
            UPDATE    FMNC1FL1;SCPSROW,SCPSCOL,FMNC1MKY
          ENDIF
          RETURN
RDTFMNC1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      FMNC1FL1,KEY5;SCPSROW,SCPSCOL,FMNC1MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTFMNC1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      FMNC1FL1,KEY5;;
          READKS    FMNC1FL1;SCPSROW,SCPSCOL,FMNC1MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,FMNC1MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Cost Centre Template Linkage       
.---------------------------------------------------------
DF03L000
          BRANCH   ACCEPT,DF03L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF03L900
          MATCH    PRGID,SCPSPID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF03L010 IF NOT EQUAL
.
          CALL     PS03L000 * Display Field
          GOTO     DF03L010
DF03L900
          MOVE      "FMNC1",NAMSSFFI
          MOVE      "   12",ITMSSFFI
          CALL      FP03L000
DF03L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Cost Centre Template Linkage       
.---------------------------------------------------------
PS03L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L101,PS03L999,PS03L102,PS03L103:
                            PS03L104,PS03L105,PS03L106,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999
          GOTO     PS03L999
.
PS03L101
          MOVE      FMNADESC,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L102
          MOVE      XXXXDESC,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L103
          MOVE      XXXXPRTC,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L104
          MOVE      FMPRDESC,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L105
          MOVE      XXXXTLEV,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L106
          MOVE      FMLVDESC,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
PS03L999
          RETURN
.---------------------------------------------------------
. Selections for : Cost Centre Template Linkage       
.---------------------------------------------------------
SF03L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF03L001  BRANCH   ACCEPT,SF03L020
.
SF03L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L006,SF03L101,SF03L102,SF03L006:
                            SF03L006,SF03L006,SF03L103,SF03L104:
                            SF03L006,SF03L105,SF03L006,SF03L106:
                            SF03L006,SF03L107,SF03L108,SF03L109:
                            SF03L110,SF03L111,SF03L112,SF03L006:
                            SF03L006
SF03L006  BEEP
          GOTO     SF03L005
SF03L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF03L090
          MATCH    PRGID,SCSLPID
          GOTO     SF03L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF03L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L103,SF03L104:
                            SF03L020,SF03L105,SF03L020,SF03L106:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020
          GOTO     SF03L020
SF03L090  MOVE     ZERO,ACCEPT
          MOVE      "FMNC1",NAMSSFFI
          MOVE      "   12",ITMSSFFI
          CALL      FP03L000
          GOTO     SF03L001
.
SF03L101
          CALL      POSTC000
          MOVE      ONE,EXIT
          GOTO      SF03L999
.
SF03L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      REMVC000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF03L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF03L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF03L999
          ENDIF
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF03L000
          ENDIF
          GOTO      SF03L001
.
SF03L103
          CALL     SELECTED
          STRIP     XXXXDESC
          SFORMAT   VAR,SCPSLEN
          MOVE      XXXXDESC,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,XXXXDESC
          SFORMAT   VAR,127
          ENDSET    XXXXDESC
          APPEND    SP70,XXXXDESC
          RESET     XXXXDESC
          CMATCH    EXITCHAR,XXXXDESC
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,XXXXDESC
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L103
            ENDIF
          ENDIF
          MOVE      XXXXDESC,VAR     
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L104
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMPRDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMPC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L104
            ENDIF
            BRANCH    EXIT,SF03L104,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      XXXXPRTC,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMPRDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF03L001
.
SF03L105
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLVDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLV000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L105
            ENDIF
            BRANCH    EXIT,SF03L105,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      XXXXTLEV,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLVDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF03L001
.
SF03L106
          CALL      SELECTED
          BRANCH    EXIT,SF03L001
          COMPARE   ONE,ACCEPT
          GOTO      SF03L001 IF EQUAL
          CALL      RDTFMNC1
          IF        OVRCD=1
            BEEP
            GOTO      SF03L001
          ENDIF
          MATCH     SP70,FMNC1MKY
          IF        @EQUAL
            BEEP
            GOTO      SF03L001
          ENDIF
          MOVE      FMNC1MKY,KEY32 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SELITC00
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTFMNC1
          IF        OVRCD=1
            CALL      FP03L000
          ELSE
            MOVE      FMNC1MKY,KEY32 
            CALL      RSFMNC1 
            CALL      RPFMNC1 
            CALL      DP03L000
          ENDIF
          GOTO     SF03L001
.
SF03L107
          MOVE      "FMNC1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      NP03L000
          GOTO     SF03L001
.
SF03L108
          MOVE      "FMNC1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      PP03L000
          GOTO     SF03L001
.
SF03L109
          CALL      ADDTC000
          GOTO      SF03L001
.
SF03L110
          MOVE      "FMNC1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      DELTC000
          GOTO     SF03L001
.
SF03L111
          MOVE      "FMNC1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      FP03L000
          GOTO     SF03L001
.
SF03L112
          MOVE      "FMNC1",NAMSSFFI
          MOVE      "   13",ITMSSFFI
          CALL      LP03L000
          GOTO     SF03L001
SF03L990  MOVE      ONE,EXIT * Exit Char Restart
SF03L999  RETURN
.--------------------------------
. Screen - Subjective Template Linkage        
.--------------------------------
SC04L000
SC04L100
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC04L200
          CALL      CF04L000 * Clear Fields
SC04L300
          CALL      KY04L000 * Enter Key Fields
          BRANCH    EXIT,SC04L999,SC04L999
SC04L400
          CALL      WP04L000 * Load any WP Details
SC04L500
          CALL      LM04L000 * Load any Batch Details
SC04L600
          CALL      DF04L000 * Display Fields
SC04L700
          CALL      SF04L000 * Select Fields
          BRANCH    EXIT,SC04L100,SC04L100,SC04L200
SC04L800
SC04L900
SC04L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Subjective Template Linkage        
.-------------------------------------------------------
CF04L000
          MOVE      SP70,FMNDCODE
          MOVE      SP70,XXXXTCOD
          MOVE      SP70,XXXXDESC
          MOVE      SP70,XXXXPRTC
          MOVE      SP70,XXXXTLEV
          MOVE      SP70,FMNFSCOD
CF04L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Subjective Template Linkage        
.--------------------------------------------------------
KY04L000
.
KY04L110
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNDDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KFMND000
          BRANCH    EXIT,KY04L900,KY04L900
          MOVE      ZERO,ACCEPT
          MOVE      FMNDCODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNDDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
KY04L120
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KFMNE000
          BRANCH    EXIT,KY04L110,KY04L900
          MOVE      OVRCD,ACCEPT
          MOVE      XXXXTCOD,VAR     
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY04L999
.
KY04L900  MOVE      ONE,EXIT
KY04L999  RETURN
.---------------------------------------------------------
. Load WP files for : Subjective Template Linkage        
.---------------------------------------------------------
WP04L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Subjective Template Linkage        
.---------------------------------------------------------
LM04L000
.---------------------------------------------------------
. Load for :    12 Sub Subjective                     
.---------------------------------------------------------
          UNPACK    SP70,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD
          PACK      KEY32,XXXXCODE,XXXXTCOD,SP70
          MOVE      KEY32,FMNF1EKY
          STRIP     FMNF1SKY
          SETLPTR   FMNF1EKY,15
          MOVE      FMNF1EKY,FMNF1SKY
          CALL      RDFMNF1 
          IF        OVRCD=0
            CALL      RPFMNF1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP04L000
          MOVE     ZERO,FMNF1CNT
          MOVE     ZERO,FMNF1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP04L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP04L600
          MATCH    PRGID,SCPSPID
          GOTO     DP04L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP04L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP04L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP04L010,DP04L010,DP04L010,DP04L010:
                            DP04L010,DP04L010,DP04L010,DP04L010:
                            DP04L010,DP04L010,DP04L010,DP04L101:
                            DP04L102,DP04L010,DP04L010,DP04L010:
                            DP04L010,DP04L010,DP04L010,DP04L103:
                            DP04L104
          GOTO      DP04L010
.
DP04L101
          PACK      FMNF1MKY,SP70,SP70
          CALL      UPTFMNF1
          IF        FMNF1END=0
            CALL      RKFMNF1 
            IF        OVRCD=0
              PACK      FMNF1MKY,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD                                            
              MATCH     FMNF1EKY,FMNF1MKY
              IF        @EQUAL
                MOVE      ZERO,FMNF1END
                ADD       ONE,FMNF1CNT
                CALL      UPTFMNF1
          CALL      REDITD00
                MOVE      FMNFSCOD,VAR     
                CALL      DISPITEM
              ELSE
                MOVE      ONE,FMNF1END
              ENDIF
            ELSE
              MOVE      ONE,FMNF1END
            ENDIF
          ENDIF
          IF        FMNF1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP04L010
.
DP04L102
          IF        FMNF1END=0
            MOVE      FMNFASEQ,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP04L010
.
DP04L103
          IF        FMNF1END=0
            MOVE      SUBCCDES,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP04L010
.
DP04L104
          IF        FMNF1END=0
            MOVE      FMNETLEV,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP04L010
DP04L600
          MATCH    "FMNF1",NAMSSFFI
          GOTO     DP04L605 IF NOT EQUAL
          GOTO     DP04L999
DP04L605
DP04L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP04L000
.
          MATCH    "FMNF1",NAMSSFFI
          GOTO     FP04L105 IF NOT EQUAL
          PACK     KEY32,FMNF1SKY,SP70
          CALL     RDFMNF1  * Start
          IF       OVRCD=0
            CALL     RPFMNF1  * Start
          ENDIF
          CALL     DP04L000
          GOTO     FP04L999
FP04L105
FP04L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP04L000
.
          MATCH    "FMNF1",NAMSSFFI
          GOTO     LP04L105 IF NOT EQUAL
          PACK     KEY32,FMNF1SKY,Z70
          CALL     RSFMNF1  * End
          IF       OVRCD=1
            CALL     RPFMNF1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<FMNF1SNO
            CALL     RPFMNF1 
            IF       OVRCD=1
              MOVE     FMNF1SNO,SECTOR
            ENDIF
            PACK     FMNF1MKY,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD                                            
            MATCH    FMNF1EKY,FMNF1MKY
            IF       !@EQUAL
              MOVE     FMNF1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP04L000
          GOTO     LP04L999
LP04L105
LP04L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP04L000
.
          MATCH    "FMNF1",NAMSSFFI
          GOTO     PP04L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP04L105
          CALL      RFTFMNF1
          BRANCH   OVRCD,PP04L115
          MOVE      FMNF1MKY,KEY32 
          CALL      RSFMNF1 
PP04L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=FMNF1SNO
            CALL     RPFMNF1 
            IF       OVRCD=1
              MOVE     FMNF1SNO,SECTOR
            ENDIF
            PACK     FMNF1MKY,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD                                            
            MATCH    FMNF1EKY,FMNF1MKY
            IF       !@EQUAL
              MOVE     FMNF1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP04L000
          GOTO     PP04L999
PP04L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<FMNF1SNO
            CALL     RKFMNF1 
            IF       OVRCD=1
              MOVE     FMNF1SNO,SECTOR
            ENDIF
            PACK     FMNF1MKY,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD                                            
            MATCH    FMNF1EKY,FMNF1MKY
            IF       !@EQUAL
              MOVE     FMNF1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP04L999
PP04L120
PP04L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP04L000
          MATCH    "FMNF1",NAMSSFFI
          GOTO     NP04L115 IF NOT EQUAL
NP04L105
          CALL     RKFMNF1 
          BRANCH   OVRCD,NP04L110
          PACK     FMNF1MKY,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD                                            
          MATCH    FMNF1EKY,FMNF1MKY
          GOTO     NP04L110 IF NOT EQUAL
          CALL     RPFMNF1 
          CALL     DP04L000
          GOTO     NP04L999
NP04L110
          CALL     RPFMNF1 
          BEEP
          GOTO     NP04L999
NP04L115
NP04L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT04L000
CT04L105
CT04L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Subjective Template Linkage        
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    12 Sub Subjective                     
.---------------------------------------------------------
UPTFMNF1
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      FMNF1FL1,KEY5;ANS
          IF        @OVER
            WRITE     FMNF1FL1,KEY5;SCPSROW,SCPSCOL,FMNF1MKY
          ELSE
            UPDATE    FMNF1FL1;SCPSROW,SCPSCOL,FMNF1MKY
          ENDIF
          RETURN
RDTFMNF1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      FMNF1FL1,KEY5;SCPSROW,SCPSCOL,FMNF1MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTFMNF1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      FMNF1FL1,KEY5;;
          READKS    FMNF1FL1;SCPSROW,SCPSCOL,FMNF1MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,FMNF1MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Subjective Template Linkage        
.---------------------------------------------------------
DF04L000
          BRANCH   ACCEPT,DF04L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF04L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF04L900
          MATCH    PRGID,SCPSPID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF04L010 IF NOT EQUAL
.
          CALL     PS04L000 * Display Field
          GOTO     DF04L010
DF04L900
          MOVE      "FMNF1",NAMSSFFI
          MOVE      "   12",ITMSSFFI
          CALL      FP04L000
DF04L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Subjective Template Linkage        
.---------------------------------------------------------
PS04L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS04L999,PS04L999,PS04L999,PS04L999:
                            PS04L101,PS04L999,PS04L102,PS04L103:
                            PS04L104,PS04L105,PS04L106,PS04L999:
                            PS04L999,PS04L999,PS04L999,PS04L999:
                            PS04L999,PS04L999,PS04L999,PS04L999:
                            PS04L999
          GOTO     PS04L999
.
PS04L101
          MOVE      FMNDDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L102
          MOVE      XXXXDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L103
          MOVE      XXXXPRTC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L104
          MOVE      FMPRDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L105
          MOVE      XXXXTLEV,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L106
          MOVE      FMLVDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
PS04L999
          RETURN
.---------------------------------------------------------
. Selections for : Subjective Template Linkage        
.---------------------------------------------------------
SF04L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF04L001  BRANCH   ACCEPT,SF04L020
.
SF04L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L006,SF04L101,SF04L102,SF04L006:
                            SF04L006,SF04L006,SF04L103,SF04L104:
                            SF04L006,SF04L105,SF04L006,SF04L106:
                            SF04L006,SF04L107,SF04L108,SF04L109:
                            SF04L110,SF04L111,SF04L112,SF04L006:
                            SF04L006
SF04L006  BEEP
          GOTO     SF04L005
SF04L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF04L090
          MATCH    PRGID,SCSLPID
          GOTO     SF04L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF04L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L020,SF04L020,SF04L020,SF04L020:
                            SF04L020,SF04L020,SF04L103,SF04L104:
                            SF04L020,SF04L105,SF04L020,SF04L106:
                            SF04L020,SF04L020,SF04L020,SF04L020:
                            SF04L020,SF04L020,SF04L020,SF04L020:
                            SF04L020
          GOTO     SF04L020
SF04L090  MOVE     ZERO,ACCEPT
          MOVE      "FMNF1",NAMSSFFI
          MOVE      "   12",ITMSSFFI
          CALL      FP04L000
          GOTO     SF04L001
.
SF04L101
          CALL      POSTD000
          MOVE      ONE,EXIT
          GOTO      SF04L999
.
SF04L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      REMVD000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF04L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF04L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF04L999
          ENDIF
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF04L000
          ENDIF
          GOTO      SF04L001
.
SF04L103
          CALL     SELECTED
          STRIP     XXXXDESC
          SFORMAT   VAR,SCPSLEN
          MOVE      XXXXDESC,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,XXXXDESC
          SFORMAT   VAR,127
          ENDSET    XXXXDESC
          APPEND    SP70,XXXXDESC
          RESET     XXXXDESC
          CMATCH    EXITCHAR,XXXXDESC
          GOTO      SF04L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,XXXXDESC
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L103
            ENDIF
          ENDIF
          MOVE      XXXXDESC,VAR     
          CALL      DISPITEM
          GOTO     SF04L001
.
SF04L104
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMPRDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMPC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L104
            ENDIF
            BRANCH    EXIT,SF04L104,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      XXXXPRTC,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMPRDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L105
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLVDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLV000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L105
            ENDIF
            BRANCH    EXIT,SF04L105,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      XXXXTLEV,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLVDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L106
          CALL      SELECTED
          BRANCH    EXIT,SF04L001
          COMPARE   ONE,ACCEPT
          GOTO      SF04L001 IF EQUAL
          CALL      RDTFMNF1
          IF        OVRCD=1
            BEEP
            GOTO      SF04L001
          ENDIF
          MATCH     SP70,FMNF1MKY
          IF        @EQUAL
            BEEP
            GOTO      SF04L001
          ENDIF
          MOVE      FMNF1MKY,KEY32 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SELITD00
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTFMNF1
          IF        OVRCD=1
            CALL      FP04L000
          ELSE
            MOVE      FMNF1MKY,KEY32 
            CALL      RSFMNF1 
            CALL      RPFMNF1 
            CALL      DP04L000
          ENDIF
          GOTO     SF04L001
.
SF04L107
          MOVE      "FMNF1",NAMSSFFI
          MOVE      "     ",ITMSSFFI
          CALL      NP04L000
          GOTO     SF04L001
.
SF04L108
          MOVE      "FMNF1",NAMSSFFI
          MOVE      "     ",ITMSSFFI
          CALL      PP04L000
          GOTO     SF04L001
.
SF04L109
          CALL      ADDTD000
          GOTO      SF04L001
.
SF04L110
          CALL      DELTD000
          GOTO      SF04L001
.
SF04L111
          MOVE      "FMNF1",NAMSSFFI
          MOVE      "     ",ITMSSFFI
          CALL      FP04L000
          GOTO     SF04L001
.
SF04L112
          MOVE      "FMNF1",NAMSSFFI
          MOVE      "     ",ITMSSFFI
          CALL      LP04L000
          GOTO     SF04L001
SF04L990  MOVE      ONE,EXIT * Exit Char Restart
SF04L999  RETURN
.--------------------------------
. Screen - Change Cost Centre Parent          
.--------------------------------
SC05L000
SC05L100
          MOVE      "05",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC05L200
          CALL      CF05L000 * Clear Fields
SC05L300
          CALL      KY05L000 * Enter Key Fields
          BRANCH    EXIT,SC05L999,SC05L999
SC05L400
          CALL      WP05L000 * Load any WP Details
SC05L500
          CALL      LM05L000 * Load any Batch Details
SC05L600
          CALL      DF05L000 * Display Fields
SC05L700
          CALL      SF05L000 * Select Fields
          BRANCH    EXIT,SC05L100,SC05L100,SC05L200
SC05L800
SC05L900
SC05L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Change Cost Centre Parent          
.-------------------------------------------------------
CF05L000
          MOVE      SP70,FMNACODE
          MOVE      SP70,XXXXSCOD
          MOVE      SP70,XXXXTCOD
          MOVE      SP70,XXXXASEQ
CF05L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Change Cost Centre Parent          
.--------------------------------------------------------
KY05L000
.
KY05L110
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KFMNA000
          BRANCH    EXIT,KY05L900,KY05L900
          MOVE      ZERO,ACCEPT
          MOVE      FMNACODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNADESC,VAR     
            CALL      DISPITEM
          ENDIF
.
KY05L120
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,XXXXDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,XXXXTLEV
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KFMNC000
          BRANCH    EXIT,KY05L110,KY05L900
          MOVE      OVRCD,ACCEPT
          MOVE      XXXXSCOD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      XXXXDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      XXXXTLEV,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY05L999
.
KY05L900  MOVE      ONE,EXIT
KY05L999  RETURN
.---------------------------------------------------------
. Load WP files for : Change Cost Centre Parent          
.---------------------------------------------------------
WP05L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Change Cost Centre Parent          
.---------------------------------------------------------
LM05L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Change Cost Centre Parent          
.---------------------------------------------------------
DF05L000
          BRANCH   ACCEPT,DF05L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF05L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF05L900
          MATCH    PRGID,SCPSPID
          GOTO     DF05L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF05L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF05L010 IF NOT EQUAL
.
          CALL     PS05L000 * Display Field
          GOTO     DF05L010
DF05L900
DF05L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Change Cost Centre Parent          
.---------------------------------------------------------
PS05L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS05L999,PS05L999,PS05L999,PS05L999:
                            PS05L101,PS05L999,PS05L102,PS05L103:
                            PS05L104,PS05L105,PS05L106,PS05L107
          GOTO     PS05L999
.
PS05L101
          MOVE      FMNADESC,VAR     
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L102
          MOVE      XXXXDESC,VAR     
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L103
          MOVE      XXXXTLEV,VAR     
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L104
          MOVE      XXXXTCOD,VAR     
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L105
          MOVE      FMNBDESC,VAR     
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L106
          MOVE      FMNBTLEV,VAR     
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L107
          MOVE      XXXXASEQ,VAR     
          CALL      DISPITEM
          GOTO     PS05L999
PS05L999
          RETURN
.---------------------------------------------------------
. Selections for : Change Cost Centre Parent          
.---------------------------------------------------------
SF05L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF05L001  BRANCH   ACCEPT,SF05L020
.
SF05L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF05L006,SF05L101,SF05L102,SF05L006:
                            SF05L006,SF05L006,SF05L006,SF05L006:
                            SF05L103,SF05L006,SF05L006,SF05L104
SF05L006  BEEP
          GOTO     SF05L005
SF05L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF05L090
          MATCH    PRGID,SCSLPID
          GOTO     SF05L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF05L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF05L020,SF05L020,SF05L020,SF05L020:
                            SF05L020,SF05L020,SF05L020,SF05L020:
                            SF05L103,SF05L020,SF05L020,SF05L104
          GOTO     SF05L020
SF05L090  MOVE     ZERO,ACCEPT
          GOTO     SF05L001
.
SF05L101
          MOVE      ONE,EXIT
          GOTO      SF05L999
.
SF05L102
          CALL      POSTE000
          MOVE      ONE,EXIT
          GOTO      SF05L999
.
SF05L103
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNBDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNBTLEV
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPARC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L103
            ENDIF
            BRANCH    EXIT,SF05L103,SF05L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF05L990 IF EQUAL
          ENDIF
          MOVE      XXXXTCOD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNBDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNBTLEV,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF05L001
.
SF05L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KASEQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L104
            ENDIF
            BRANCH    EXIT,SF05L104,SF05L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF05L990 IF EQUAL
          ENDIF
          MOVE      XXXXASEQ,VAR     
          CALL      DISPITEM
          GOTO     SF05L001
SF05L990  MOVE      ONE,EXIT * Exit Char Restart
SF05L999  RETURN
.--------------------------------
. Screen - Change Subjective Parent           
.--------------------------------
SC06L000
SC06L100
          MOVE      "06",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC06L200
          CALL      CF06L000 * Clear Fields
SC06L300
          CALL      KY06L000 * Enter Key Fields
          BRANCH    EXIT,SC06L999,SC06L999
SC06L400
          CALL      WP06L000 * Load any WP Details
SC06L500
          CALL      LM06L000 * Load any Batch Details
SC06L600
          CALL      DF06L000 * Display Fields
SC06L700
          CALL      SF06L000 * Select Fields
          BRANCH    EXIT,SC06L100,SC06L100,SC06L200
SC06L800
SC06L900
SC06L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Change Subjective Parent           
.-------------------------------------------------------
CF06L000
          MOVE      SP70,FMNDCODE
          MOVE      SP70,XXXXSCOD
          MOVE      SP70,XXXXTCOD
          MOVE      SP70,XXXXASEQ
CF06L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Change Subjective Parent           
.--------------------------------------------------------
KY06L000
.
KY06L110
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNDDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KFMND000
          BRANCH    EXIT,KY06L900,KY06L900
          MOVE      ZERO,ACCEPT
          MOVE      FMNDCODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNDDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
KY06L120
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,XXXXDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,XXXXTLEV
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KFMNF000
          BRANCH    EXIT,KY06L110,KY06L900
          MOVE      OVRCD,ACCEPT
          MOVE      XXXXSCOD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      XXXXDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      XXXXTLEV,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY06L999
.
KY06L900  MOVE      ONE,EXIT
KY06L999  RETURN
.---------------------------------------------------------
. Load WP files for : Change Subjective Parent           
.---------------------------------------------------------
WP06L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Change Subjective Parent           
.---------------------------------------------------------
LM06L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Change Subjective Parent           
.---------------------------------------------------------
DF06L000
          BRANCH   ACCEPT,DF06L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF06L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF06L900
          MATCH    PRGID,SCPSPID
          GOTO     DF06L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF06L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF06L010 IF NOT EQUAL
.
          CALL     PS06L000 * Display Field
          GOTO     DF06L010
DF06L900
DF06L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Change Subjective Parent           
.---------------------------------------------------------
PS06L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS06L999,PS06L999,PS06L999,PS06L999:
                            PS06L101,PS06L999,PS06L102,PS06L103:
                            PS06L104,PS06L105,PS06L106,PS06L107
          GOTO     PS06L999
.
PS06L101
          MOVE      FMNDDESC,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L102
          MOVE      XXXXDESC,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L103
          MOVE      XXXXTLEV,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L104
          MOVE      XXXXTCOD,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L105
          MOVE      FMNEDESC,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L106
          MOVE      FMNBTLEV,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L107
          MOVE      XXXXASEQ,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
PS06L999
          RETURN
.---------------------------------------------------------
. Selections for : Change Subjective Parent           
.---------------------------------------------------------
SF06L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF06L001  BRANCH   ACCEPT,SF06L020
.
SF06L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF06L006,SF06L101,SF06L102,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L103,SF06L006,SF06L006,SF06L104
SF06L006  BEEP
          GOTO     SF06L005
SF06L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF06L090
          MATCH    PRGID,SCSLPID
          GOTO     SF06L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF06L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L103,SF06L020,SF06L020,SF06L104
          GOTO     SF06L020
SF06L090  MOVE     ZERO,ACCEPT
          GOTO     SF06L001
.
SF06L101
          MOVE      ONE,EXIT
          GOTO      SF06L999
.
SF06L102
          CALL      POSTF000
          MOVE      ONE,EXIT
          GOTO      SF06L999
.
SF06L103
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNEDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNBTLEV
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPARD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF06L103
            ENDIF
            BRANCH    EXIT,SF06L103,SF06L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF06L990 IF EQUAL
          ENDIF
          MOVE      XXXXTCOD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNEDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNBTLEV,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF06L001
.
SF06L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KASEQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF06L104
            ENDIF
            BRANCH    EXIT,SF06L104,SF06L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF06L990 IF EQUAL
          ENDIF
          MOVE      XXXXASEQ,VAR     
          CALL      DISPITEM
          GOTO     SF06L001
SF06L990  MOVE      ONE,EXIT * Exit Char Restart
SF06L999  RETURN
.--------------------------------
. Screen - Print Cost Centre Template         
.--------------------------------
SC07L000
SC07L100
          MOVE      "07",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC07L200
          CALL      CF07L000 * Clear Fields
          CALL      SETACCEP
SC07L300
          CALL      KY07L000 * Enter Key Fields
          BRANCH    EXIT,SC07L999,SC07L999
SC07L400
          CALL      WP07L000 * Load any WP Details
SC07L500
          CALL      LM07L000 * Load any Batch Details
SC07L600
          CALL      DF07L000 * Display Fields
SC07L700
          CALL      SF07L000 * Select Fields
          BRANCH    EXIT,SC07L100,SC07L100,SC07L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC07L800
SC07L900
SC07L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print Cost Centre Template         
.-------------------------------------------------------
CF07L000
          MOVE      SP70,FROMLAB 
          MOVE      SP70,TOLAB   
CF07L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print Cost Centre Template         
.--------------------------------------------------------
KY07L000
          MOVE      ZERO,EXIT
          GOTO      KY07L999
.
KY07L900  MOVE      ONE,EXIT
KY07L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print Cost Centre Template         
.---------------------------------------------------------
WP07L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print Cost Centre Template         
.---------------------------------------------------------
LM07L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print Cost Centre Template         
.---------------------------------------------------------
DF07L000
          BRANCH   ACCEPT,DF07L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF07L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF07L900
          MATCH    PRGID,SCPSPID
          GOTO     DF07L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF07L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF07L010 IF NOT EQUAL
.
          CALL     PS07L000 * Display Field
          GOTO     DF07L010
DF07L900
DF07L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print Cost Centre Template         
.---------------------------------------------------------
PS07L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS07L999,PS07L999,PS07L999,PS07L101:
                            PS07L102,PS07L103,PS07L104
          GOTO     PS07L999
.
PS07L101
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L102
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L103
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L104
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS07L999
PS07L999
          RETURN
.---------------------------------------------------------
. Selections for : Print Cost Centre Template         
.---------------------------------------------------------
SF07L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF07L001  BRANCH   ACCEPT,SF07L020
.
SF07L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF07L006,SF07L101,SF07L102,SF07L103:
                            SF07L006,SF07L104,SF07L006
SF07L006  BEEP
          GOTO     SF07L005
SF07L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF07L090
          MATCH    PRGID,SCSLPID
          GOTO     SF07L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF07L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF07L020,SF07L020,SF07L020,SF07L103:
                            SF07L020,SF07L104,SF07L020
          GOTO     SF07L020
SF07L090  MOVE     ZERO,ACCEPT
          GOTO     SF07L001
.
SF07L101
          MOVE      ZERO,EXIT
          GOTO      SF07L999
.
SF07L102
          CALL      POSTG000
          MOVE      ZERO,EXIT
          GOTO      SF07L999
.
SF07L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCOSF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF07L103
            ENDIF
            BRANCH    EXIT,SF07L103,SF07L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF07L990 IF EQUAL
          ENDIF
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF07L001
.
SF07L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCOST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF07L104
            ENDIF
            BRANCH    EXIT,SF07L104,SF07L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF07L990 IF EQUAL
          ENDIF
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF07L001
SF07L990  MOVE      FOUR,EXIT * Exit Char Exit
SF07L999  RETURN
.--------------------------------
. Screen - Print Subjective Template          
.--------------------------------
SC08L000
SC08L100
          MOVE      "08",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC08L200
          CALL      CF08L000 * Clear Fields
          CALL      SETACCEP
SC08L300
          CALL      KY08L000 * Enter Key Fields
          BRANCH    EXIT,SC08L999,SC08L999
SC08L400
          CALL      WP08L000 * Load any WP Details
SC08L500
          CALL      LM08L000 * Load any Batch Details
SC08L600
          CALL      DF08L000 * Display Fields
SC08L700
          CALL      SF08L000 * Select Fields
          BRANCH    EXIT,SC08L100,SC08L100,SC08L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC08L800
SC08L900
SC08L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print Subjective Template          
.-------------------------------------------------------
CF08L000
          MOVE      SP70,FROMLAB 
          MOVE      SP70,TOLAB   
CF08L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print Subjective Template          
.--------------------------------------------------------
KY08L000
          MOVE      ZERO,EXIT
          GOTO      KY08L999
.
KY08L900  MOVE      ONE,EXIT
KY08L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print Subjective Template          
.---------------------------------------------------------
WP08L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print Subjective Template          
.---------------------------------------------------------
LM08L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print Subjective Template          
.---------------------------------------------------------
DF08L000
          BRANCH   ACCEPT,DF08L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF08L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF08L900
          MATCH    PRGID,SCPSPID
          GOTO     DF08L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF08L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF08L010 IF NOT EQUAL
.
          CALL     PS08L000 * Display Field
          GOTO     DF08L010
DF08L900
DF08L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print Subjective Template          
.---------------------------------------------------------
PS08L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS08L999,PS08L999,PS08L999,PS08L101:
                            PS08L102,PS08L103,PS08L104
          GOTO     PS08L999
.
PS08L101
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
          GOTO     PS08L999
.
PS08L102
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS08L999
.
PS08L103
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
          GOTO     PS08L999
.
PS08L104
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS08L999
PS08L999
          RETURN
.---------------------------------------------------------
. Selections for : Print Subjective Template          
.---------------------------------------------------------
SF08L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF08L001  BRANCH   ACCEPT,SF08L020
.
SF08L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF08L006,SF08L101,SF08L102,SF08L103:
                            SF08L006,SF08L104,SF08L006
SF08L006  BEEP
          GOTO     SF08L005
SF08L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF08L090
          MATCH    PRGID,SCSLPID
          GOTO     SF08L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF08L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF08L020,SF08L020,SF08L020,SF08L103:
                            SF08L020,SF08L104,SF08L020
          GOTO     SF08L020
SF08L090  MOVE     ZERO,ACCEPT
          GOTO     SF08L001
.
SF08L101
          MOVE      ZERO,EXIT
          GOTO      SF08L999
.
SF08L102
          CALL      POSTH000
          MOVE      ZERO,EXIT
          GOTO      SF08L999
.
SF08L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSUBF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF08L103
            ENDIF
            BRANCH    EXIT,SF08L103,SF08L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF08L990 IF EQUAL
          ENDIF
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF08L001
.
SF08L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSUBT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF08L104
            ENDIF
            BRANCH    EXIT,SF08L104,SF08L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF08L990 IF EQUAL
          ENDIF
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF08L001
SF08L990  MOVE      FOUR,EXIT * Exit Char Exit
SF08L999  RETURN
.--------------------------------
. Screen - Copy Cost Centre Template          
.--------------------------------
SC09L000
SC09L100
          MOVE      "09",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC09L200
          CALL      CF09L000 * Clear Fields
          CALL      SETACCEP
SC09L300
          CALL      KY09L000 * Enter Key Fields
          BRANCH    EXIT,SC09L999,SC09L999
SC09L400
          CALL      WP09L000 * Load any WP Details
SC09L500
          CALL      LM09L000 * Load any Batch Details
SC09L600
          CALL      DF09L000 * Display Fields
SC09L700
          CALL      SF09L000 * Select Fields
          BRANCH    EXIT,SC09L100,SC09L100,SC09L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC09L800
SC09L900
SC09L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Copy Cost Centre Template          
.-------------------------------------------------------
CF09L000
          MOVE      SP70,FROMLAB 
          MOVE      SP70,TOLAB   
CF09L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Copy Cost Centre Template          
.--------------------------------------------------------
KY09L000
          MOVE      ZERO,EXIT
          GOTO      KY09L999
.
KY09L900  MOVE      ONE,EXIT
KY09L999  RETURN
.---------------------------------------------------------
. Load WP files for : Copy Cost Centre Template          
.---------------------------------------------------------
WP09L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Copy Cost Centre Template          
.---------------------------------------------------------
LM09L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Copy Cost Centre Template          
.---------------------------------------------------------
DF09L000
          BRANCH   ACCEPT,DF09L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF09L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF09L900
          MATCH    PRGID,SCPSPID
          GOTO     DF09L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF09L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF09L010 IF NOT EQUAL
.
          CALL     PS09L000 * Display Field
          GOTO     DF09L010
DF09L900
DF09L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Copy Cost Centre Template          
.---------------------------------------------------------
PS09L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS09L999,PS09L999,PS09L999,PS09L101:
                            PS09L102,PS09L103,PS09L104
          GOTO     PS09L999
.
PS09L101
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
          GOTO     PS09L999
.
PS09L102
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS09L999
.
PS09L103
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
          GOTO     PS09L999
.
PS09L104
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS09L999
PS09L999
          RETURN
.---------------------------------------------------------
. Selections for : Copy Cost Centre Template          
.---------------------------------------------------------
SF09L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF09L001  BRANCH   ACCEPT,SF09L020
.
SF09L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF09L006,SF09L101,SF09L102,SF09L103:
                            SF09L006,SF09L104,SF09L006
SF09L006  BEEP
          GOTO     SF09L005
SF09L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF09L090
          MATCH    PRGID,SCSLPID
          GOTO     SF09L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF09L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF09L020,SF09L020,SF09L020,SF09L103:
                            SF09L020,SF09L104,SF09L020
          GOTO     SF09L020
SF09L090  MOVE     ZERO,ACCEPT
          GOTO     SF09L001
.
SF09L101
          MOVE      ZERO,EXIT
          GOTO      SF09L999
.
SF09L102
          CALL      POSTI000
          MOVE      ZERO,EXIT
          GOTO      SF09L999
.
SF09L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCOSF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF09L103
            ENDIF
            BRANCH    EXIT,SF09L103,SF09L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF09L990 IF EQUAL
          ENDIF
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF09L001
.
SF09L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "1",CKEYTYP
          CALL      KCOST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF09L104
            ENDIF
            BRANCH    EXIT,SF09L104,SF09L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF09L990 IF EQUAL
          ENDIF
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF09L001
SF09L990  MOVE      FOUR,EXIT * Exit Char Exit
SF09L999  RETURN
.--------------------------------
. Screen - Copy Subjective Template           
.--------------------------------
SC10L000
SC10L100
          MOVE      "10",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC10L200
          CALL      CF10L000 * Clear Fields
          CALL      SETACCEP
SC10L300
          CALL      KY10L000 * Enter Key Fields
          BRANCH    EXIT,SC10L999,SC10L999
SC10L400
          CALL      WP10L000 * Load any WP Details
SC10L500
          CALL      LM10L000 * Load any Batch Details
SC10L600
          CALL      DF10L000 * Display Fields
SC10L700
          CALL      SF10L000 * Select Fields
          BRANCH    EXIT,SC10L100,SC10L100,SC10L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC10L800
SC10L900
SC10L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Copy Subjective Template           
.-------------------------------------------------------
CF10L000
          MOVE      SP70,FROMLAB 
          MOVE      SP70,TOLAB   
CF10L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Copy Subjective Template           
.--------------------------------------------------------
KY10L000
          MOVE      ZERO,EXIT
          GOTO      KY10L999
.
KY10L900  MOVE      ONE,EXIT
KY10L999  RETURN
.---------------------------------------------------------
. Load WP files for : Copy Subjective Template           
.---------------------------------------------------------
WP10L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Copy Subjective Template           
.---------------------------------------------------------
LM10L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Copy Subjective Template           
.---------------------------------------------------------
DF10L000
          BRANCH   ACCEPT,DF10L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF10L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF10L900
          MATCH    PRGID,SCPSPID
          GOTO     DF10L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF10L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF10L010 IF NOT EQUAL
.
          CALL     PS10L000 * Display Field
          GOTO     DF10L010
DF10L900
DF10L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Copy Subjective Template           
.---------------------------------------------------------
PS10L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS10L999,PS10L999,PS10L999,PS10L101:
                            PS10L102,PS10L103,PS10L104
          GOTO     PS10L999
.
PS10L101
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
          GOTO     PS10L999
.
PS10L102
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS10L999
.
PS10L103
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
          GOTO     PS10L999
.
PS10L104
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS10L999
PS10L999
          RETURN
.---------------------------------------------------------
. Selections for : Copy Subjective Template           
.---------------------------------------------------------
SF10L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF10L001  BRANCH   ACCEPT,SF10L020
.
SF10L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF10L006,SF10L101,SF10L102,SF10L103:
                            SF10L006,SF10L104,SF10L006
SF10L006  BEEP
          GOTO     SF10L005
SF10L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF10L090
          MATCH    PRGID,SCSLPID
          GOTO     SF10L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF10L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF10L020,SF10L020,SF10L020,SF10L103:
                            SF10L020,SF10L104,SF10L020
          GOTO     SF10L020
SF10L090  MOVE     ZERO,ACCEPT
          GOTO     SF10L001
.
SF10L101
          MOVE      ZERO,EXIT
          GOTO      SF10L999
.
SF10L102
          CALL      POSTJ000
          MOVE      ZERO,EXIT
          GOTO      SF10L999
.
SF10L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSUBF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF10L103
            ENDIF
            BRANCH    EXIT,SF10L103,SF10L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF10L990 IF EQUAL
          ENDIF
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF10L001
.
SF10L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "1",CKEYTYP
          CALL      KSUBT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF10L104
            ENDIF
            BRANCH    EXIT,SF10L104,SF10L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF10L990 IF EQUAL
          ENDIF
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF10L001
SF10L990  MOVE      FOUR,EXIT * Exit Char Exit
SF10L999  RETURN
.--------------------------------
. Screen - Check Cost Centre Template         
.--------------------------------
SC11L000
SC11L100
          MOVE      "11",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC11L200
          CALL      CF11L000 * Clear Fields
          CALL      SETACCEP
SC11L300
          CALL      KY11L000 * Enter Key Fields
          BRANCH    EXIT,SC11L999,SC11L999
SC11L400
          CALL      WP11L000 * Load any WP Details
SC11L500
          CALL      LM11L000 * Load any Batch Details
SC11L600
          CALL      DF11L000 * Display Fields
SC11L700
          CALL      SF11L000 * Select Fields
          BRANCH    EXIT,SC11L100,SC11L100,SC11L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC11L800
SC11L900
SC11L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Check Cost Centre Template         
.-------------------------------------------------------
CF11L000
          MOVE      SP70,FROMLAB 
          MOVE      SP70,TOLAB   
CF11L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Check Cost Centre Template         
.--------------------------------------------------------
KY11L000
          MOVE      ZERO,EXIT
          GOTO      KY11L999
.
KY11L900  MOVE      ONE,EXIT
KY11L999  RETURN
.---------------------------------------------------------
. Load WP files for : Check Cost Centre Template         
.---------------------------------------------------------
WP11L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Check Cost Centre Template         
.---------------------------------------------------------
LM11L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Check Cost Centre Template         
.---------------------------------------------------------
DF11L000
          BRANCH   ACCEPT,DF11L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF11L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF11L900
          MATCH    PRGID,SCPSPID
          GOTO     DF11L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF11L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF11L010 IF NOT EQUAL
.
          CALL     PS11L000 * Display Field
          GOTO     DF11L010
DF11L900
DF11L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Check Cost Centre Template         
.---------------------------------------------------------
PS11L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS11L999,PS11L999,PS11L999,PS11L101:
                            PS11L102,PS11L103,PS11L104
          GOTO     PS11L999
.
PS11L101
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
          GOTO     PS11L999
.
PS11L102
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS11L999
.
PS11L103
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
          GOTO     PS11L999
.
PS11L104
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS11L999
PS11L999
          RETURN
.---------------------------------------------------------
. Selections for : Check Cost Centre Template         
.---------------------------------------------------------
SF11L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF11L001  BRANCH   ACCEPT,SF11L020
.
SF11L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF11L006,SF11L101,SF11L102,SF11L103:
                            SF11L006,SF11L104,SF11L006
SF11L006  BEEP
          GOTO     SF11L005
SF11L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF11L090
          MATCH    PRGID,SCSLPID
          GOTO     SF11L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF11L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF11L020,SF11L020,SF11L020,SF11L103:
                            SF11L020,SF11L104,SF11L020
          GOTO     SF11L020
SF11L090  MOVE     ZERO,ACCEPT
          GOTO     SF11L001
.
SF11L101
          MOVE      ZERO,EXIT
          GOTO      SF11L999
.
SF11L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      POSTK000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF11L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF11L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF11L999
          ENDIF
          MOVE      "11",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF11L000
          ENDIF
          GOTO      SF11L001
.
SF11L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCOSF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF11L103
            ENDIF
            BRANCH    EXIT,SF11L103,SF11L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF11L990 IF EQUAL
          ENDIF
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF11L001
.
SF11L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCOST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF11L104
            ENDIF
            BRANCH    EXIT,SF11L104,SF11L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF11L990 IF EQUAL
          ENDIF
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF11L001
SF11L990  MOVE      FOUR,EXIT * Exit Char Exit
SF11L999  RETURN
.--------------------------------
. Screen - Check Subjective Template          
.--------------------------------
SC12L000
SC12L100
          MOVE      "12",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC12L200
          CALL      CF12L000 * Clear Fields
          CALL      SETACCEP
SC12L300
          CALL      KY12L000 * Enter Key Fields
          BRANCH    EXIT,SC12L999,SC12L999
SC12L400
          CALL      WP12L000 * Load any WP Details
SC12L500
          CALL      LM12L000 * Load any Batch Details
SC12L600
          CALL      DF12L000 * Display Fields
SC12L700
          CALL      SF12L000 * Select Fields
          BRANCH    EXIT,SC12L100,SC12L100,SC12L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC12L800
SC12L900
SC12L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Check Subjective Template          
.-------------------------------------------------------
CF12L000
          MOVE      SP70,FROMLAB 
          MOVE      SP70,TOLAB   
CF12L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Check Subjective Template          
.--------------------------------------------------------
KY12L000
          MOVE      ZERO,EXIT
          GOTO      KY12L999
.
KY12L900  MOVE      ONE,EXIT
KY12L999  RETURN
.---------------------------------------------------------
. Load WP files for : Check Subjective Template          
.---------------------------------------------------------
WP12L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Check Subjective Template          
.---------------------------------------------------------
LM12L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Check Subjective Template          
.---------------------------------------------------------
DF12L000
          BRANCH   ACCEPT,DF12L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF12L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF12L900
          MATCH    PRGID,SCPSPID
          GOTO     DF12L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF12L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF12L010 IF NOT EQUAL
.
          CALL     PS12L000 * Display Field
          GOTO     DF12L010
DF12L900
DF12L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Check Subjective Template          
.---------------------------------------------------------
PS12L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS12L999,PS12L999,PS12L999,PS12L101:
                            PS12L102,PS12L103,PS12L104
          GOTO     PS12L999
.
PS12L101
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
          GOTO     PS12L999
.
PS12L102
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS12L999
.
PS12L103
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
          GOTO     PS12L999
.
PS12L104
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS12L999
PS12L999
          RETURN
.---------------------------------------------------------
. Selections for : Check Subjective Template          
.---------------------------------------------------------
SF12L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF12L001  BRANCH   ACCEPT,SF12L020
.
SF12L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF12L006,SF12L101,SF12L102,SF12L103:
                            SF12L006,SF12L104,SF12L006
SF12L006  BEEP
          GOTO     SF12L005
SF12L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF12L090
          MATCH    PRGID,SCSLPID
          GOTO     SF12L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF12L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF12L020,SF12L020,SF12L020,SF12L103:
                            SF12L020,SF12L104,SF12L020
          GOTO     SF12L020
SF12L090  MOVE     ZERO,ACCEPT
          GOTO     SF12L001
.
SF12L101
          MOVE      ZERO,EXIT
          GOTO      SF12L999
.
SF12L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      POSTL000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF12L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF12L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF12L999
          ENDIF
          MOVE      "12",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF12L000
          ENDIF
          GOTO      SF12L001
.
SF12L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSUBF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF12L103
            ENDIF
            BRANCH    EXIT,SF12L103,SF12L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF12L990 IF EQUAL
          ENDIF
          MOVE      FROMLAB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF12L001
.
SF12L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSUBT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF12L104
            ENDIF
            BRANCH    EXIT,SF12L104,SF12L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF12L990 IF EQUAL
          ENDIF
          MOVE      TOLAB,VAR        
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF12L001
SF12L990  MOVE      FOUR,EXIT * Exit Char Exit
SF12L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Read in FMS parameters
.----------------------------------------------------------------------
RDFMCO00
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CALL      RDFMCO66
.
RDFMCO99  RETURN
.********************************************************************
. CLRC - clear XXXXCODE
.********************************************************************
CLRC0000
          MOVE      SP70,XXXXCODE
          RETURN
.*****************************************************************************
. GSTR - get a string of a specified length           Called by lots
.    Requires - CCOL, CVERT  (screen address to get input)
.               CSTRLEN      (string length - up to 35 chars)
.    Returns  - CSTRING      (string entered)
.*****************************************************************************
GSTR0000  STORE     UNDLN70,CSTRLEN,KEY1:
                    KEY2,KEY3,KEY4,KEY5,KEY6,KEY7,KEY8,KEY9,KEY10:
                    KEY11,KEY12,KEY13,KEY14,KEY15,KEY16,KEY17,KEY18,KEY19,KEY20:
                    KEY21,KEY22,KEY23,KEY24,KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                    KEY31,KEY32,KEY33,KEY34,KEY35
          BRANCH    CSTRLEN,GSTR0001,GSTR0002,GSTR0003,GSTR0004:
                            GSTR0005,GSTR0006,GSTR0007,GSTR0008:
                            GSTR0009,GSTR0010,GSTR0011,GSTR0012:
                            GSTR0013,GSTR0014,GSTR0015,GSTR0016:
                            GSTR0017,GSTR0018,GSTR0019,GSTR0020:
                            GSTR0021,GSTR0022,GSTR0023,GSTR0024:
                            GSTR0025,GSTR0026,GSTR0027,GSTR0028:
                            GSTR0029,GSTR0030,GSTR0031,GSTR0032:
                            GSTR0033,GSTR0034,GSTR0035
.
GSTR0001  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY1:
                    *PCCOL:CVERT,*V2LON,KEY1;
          GOTO      GSTR0090
.
GSTR0002  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY2:
                    *PCCOL:CVERT,*V2LON,KEY2;
          GOTO      GSTR0090
.
GSTR0003  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY3:
                    *PCCOL:CVERT,*V2LON,KEY3;
          GOTO      GSTR0090
.
GSTR0004  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY4:
                    *PCCOL:CVERT,*V2LON,KEY4;
          GOTO      GSTR0090
.
GSTR0005  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY5:
                    *PCCOL:CVERT,*V2LON,KEY5;
          GOTO      GSTR0090
.
GSTR0006  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY6:
                    *PCCOL:CVERT,*V2LON,KEY6;
          GOTO      GSTR0090
.
GSTR0007  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY7:
                    *PCCOL:CVERT,*V2LON,KEY7;
          GOTO      GSTR0090
.
GSTR0008  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY8:
                    *PCCOL:CVERT,*V2LON,KEY8;
          GOTO      GSTR0090
.
GSTR0009  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY9:
                    *PCCOL:CVERT,*V2LON,KEY9;
          GOTO      GSTR0090
.
GSTR0010  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY10:
                    *PCCOL:CVERT,*V2LON,KEY10;
          GOTO      GSTR0090
.
GSTR0011  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY11:
                    *PCCOL:CVERT,*V2LON,KEY11;
          GOTO      GSTR0090
.
GSTR0012  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY12:
                    *PCCOL:CVERT,*V2LON,KEY12;
          GOTO      GSTR0090
.
GSTR0013  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY13:
                    *PCCOL:CVERT,*V2LON,KEY13;
          GOTO      GSTR0090
.
GSTR0014  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY14:
                    *PCCOL:CVERT,*V2LON,KEY14;
          GOTO      GSTR0090
.
GSTR0015  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY15:
                    *PCCOL:CVERT,*V2LON,KEY15;
          GOTO      GSTR0090
.
GSTR0016  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY16:
                    *PCCOL:CVERT,*V2LON,KEY16;
          GOTO      GSTR0090
.
GSTR0017  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY17:
                    *PCCOL:CVERT,*V2LON,KEY17;
          GOTO      GSTR0090
.
GSTR0018  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY18:
                    *PCCOL:CVERT,*V2LON,KEY18;
          GOTO      GSTR0090
.
GSTR0019  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY19:
                    *PCCOL:CVERT,*V2LON,KEY19;
          GOTO      GSTR0090
.
GSTR0020  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY20:
                    *PCCOL:CVERT,*V2LON,KEY20;
          GOTO      GSTR0090
.
GSTR0021  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY21:
                    *PCCOL:CVERT,*V2LON,KEY21;
          GOTO      GSTR0090
.
GSTR0022  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY22:
                    *PCCOL:CVERT,*V2LON,KEY22;
          GOTO      GSTR0090
.
GSTR0023  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY23:
                    *PCCOL:CVERT,*V2LON,KEY23;
          GOTO      GSTR0090
.
GSTR0024  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY24:
                    *PCCOL:CVERT,*V2LON,KEY24;
          GOTO      GSTR0090
.
GSTR0025  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY25:
                    *PCCOL:CVERT,*V2LON,KEY25;
          GOTO      GSTR0090
.
GSTR0026  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY26:
                    *PCCOL:CVERT,*V2LON,KEY26;
          GOTO      GSTR0090
.
GSTR0027  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY27:
                    *PCCOL:CVERT,*V2LON,KEY27;
          GOTO      GSTR0090
.
GSTR0028  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY28:
                    *PCCOL:CVERT,*V2LON,KEY28;
          GOTO      GSTR0090
.
GSTR0029  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY29:
                    *PCCOL:CVERT,*V2LON,KEY29;
          GOTO      GSTR0090
.
GSTR0030  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY30:
                    *PCCOL:CVERT,*V2LON,KEY30;
          GOTO      GSTR0090
.
GSTR0031  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY31:
                    *PCCOL:CVERT,*V2LON,KEY31;
          GOTO      GSTR0090
.
GSTR0032  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY32:
                    *PCCOL:CVERT,*V2LON,KEY32;
          GOTO      GSTR0090
.
GSTR0033  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY33:
                    *PCCOL:CVERT,*V2LON,KEY33;
          GOTO      GSTR0090
.
GSTR0034  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY34:
                    *PCCOL:CVERT,*V2LON,KEY34;
          GOTO      GSTR0090
.
GSTR0035  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY35:
                    *PCCOL:CVERT,*V2LON,KEY35;
          GOTO      GSTR0090
.
GSTR0090  LOAD      CSTRING,CSTRLEN,KEY1:
                    KEY2,KEY3,KEY4,KEY5,KEY6,KEY7,KEY8,KEY9,KEY10:
                    KEY11,KEY12,KEY13,KEY14,KEY15,KEY16,KEY17,KEY18,KEY19,KEY20:
                    KEY21,KEY22,KEY23,KEY24,KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                    KEY31,KEY32,KEY33,KEY34,KEY35
          DISPLAY   *PCCOL:CVERT,*V2LON,CSTRING;
.
GSTR9999  RETURN
.----------------------------------------------------------------------
. Clear data
.----------------------------------------------------------------------
CANCA000  CALL      UUFMNA1
          MOVE      SP70,XXXXCODE
          RETURN
.********************************************************************
. POSTA - Post data for FMNA                         Called by ML
.********************************************************************
POSTA000
          PACK      KEY3,FMNACODE,SP70
          CALL      RAFMNA1
          IF        OVRCD=1
            CALL      WRFMNA1
          ELSE
            CALL      UPFMNA1
          ENDIF
          CALL      CANCA000           * clear data
.
POSTA999  RETURN
.----------------------------------------------------------------------
. Keyin FMNA
.----------------------------------------------------------------------
KFMNA000
          PACK      XXXXCODE,XXXXCODE,SP70
          MATCH     SP70,XXXXCODE
          IF        @EQUAL
            CALL      KFMNAA00                   * keyin FMNA
            BRANCH    EXIT,KFMNA950,KFMNA950
          ELSE
            UNPACK    SP70,FMNADESC
            PACK      KEY3,XXXXCODE,SP70
            CALL      RDFMNA1
          ENDIF
.
          UNPACK    SP70,FMNADESC,FMNALEDG
          PACK      KEY3,FMNACODE,SP70           * lock Cost Centre Template
          REPEAT
            CALL      RLFMNA1
            IF        OVRCD=2
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              BEEP
              KEYIN     *P1:24,*EL,"Cost Centre Template ":
                        *DV,KEY3," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              CALL      MESSAGE3
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      KFMNA000 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          MOVE      OVRCD,ACCEPT
          UNPACK    SP70,FMLADESC
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
.
.
KFMNA900  MOVE      ZERO,EXIT
          MOVE      FMNACODE,XXXXCODE
          GOTO      KFMNA999
.
KFMNA950  MOVE      TWO,EXIT
          CALL      CANCA000
.
KFMNA999  RETURN
.----------------------------------------------------------------------
. Delete FMNA Data
.----------------------------------------------------------------------
DELTA000
          PACK     DISPMSG,SP70,SP70   * save line 24
          CALL     MESSAGE2
.
          CALL     DELQST              * delete (y/n/c) ?
          SUB      ONE,CEXIT
          BRANCH   CEXIT,DELTA950,DELTA900
.
          MOVE     SP70,FMNBCODE       * check if template data exists
          PACK     KEY15,FMNACODE,SP70
          CALL     RSFMNB1
          CALL     RKFMNB1
          MATCH    FMNACODE,FMNBCODE
          IF       @EQUAL
            DISPLAY   *P1:24,*B,*EF,"Cost Centres are Linked to this ":
                      "Template. Continue (Y/N) ? ";
            MOVE      "24",CVERT
            MOVE      "60",CCOL
            MOVE      "N",DEFYESNO
            CALL      YORN0000
            COMPARE   ONE,FYESNO
            GOTO      DELTA950 IF NOT EQUAL
          ENDIF
.
          PACK      KEY15,FMNACODE,SP70
.
DELTA100
          CALL      RSFMNB1
          CALL      RKFMNB1
          BRANCH    OVRCD,DELTA200
          PACK      KEY15,FMNBCODE,FMNBTCOD,SP70
          MATCH     FMNACODE,KEY15
          GOTO      DELTA200 IF NOT EQUAL
.
          CALL      DEFMNB1
          GOTO      DELTA100
.
DELTA200
          PACK      KEY32,FMNACODE,SP70
.
DELTA300
          CALL      RSFMNC1
          CALL      RKFMNC1
          BRANCH    OVRCD,DELTA400
          PACK      KEY32,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD,SP70
          MATCH     FMNACODE,KEY32
          GOTO      DELTA400 IF NOT EQUAL
.
          CALL      DEFMNC1
          GOTO      DELTA300
.
DELTA400
          PACK     KEY3,FMNACODE,SP70  * delete data
          CALL     DEFMNA1
.
DELTA900  MOVE     TWO,EXIT
          CALL     CANCA000            * clear data
          GOTO     DELTA999
.
DELTA950  MOVE     ONE,EXIT
.
DELTA999
          CALL     MESSAGE3            * restore line 24
          RETURN
.----------------------------------------------------------------------
. Clear data
.----------------------------------------------------------------------
CANCB000  CALL      UUFMND1
          MOVE      SP70,XXXXCODE
          RETURN
.********************************************************************
. POSTB - Post data for FMND                         Called by ML
.********************************************************************
POSTB000
          PACK      KEY3,FMNDCODE,SP70
          CALL      RAFMND1
          IF        OVRCD=1
            CALL      WRFMND1
          ELSE
            CALL      UPFMND1
          ENDIF
          CALL      CANCB000           * clear data
.
POSTB999  RETURN
.----------------------------------------------------------------------
. Keyin FMND
.----------------------------------------------------------------------
KFMND000
          PACK      XXXXCODE,XXXXCODE,SP70
          MATCH     SP70,XXXXCODE
          IF        @EQUAL
            CALL      KFMNDA00                   * keyin FMND
            BRANCH    EXIT,KFMND950,KFMND950
          ELSE
            UNPACK    SP70,FMNDDESC
            PACK      KEY3,XXXXCODE,SP70
            CALL      RDFMND1
          ENDIF
.
          UNPACK    SP70,FMNDDESC,FMNDLEDG
          PACK      KEY3,FMNDCODE,SP70           * lock Subjective Template
          REPEAT
            CALL      RLFMND1
            IF        OVRCD=2
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              BEEP
              KEYIN     *P1:24,*EL,"Subjective Template ":
                        *DV,KEY3," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              CALL      MESSAGE3
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      KFMND000 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          MOVE      OVRCD,ACCEPT
          UNPACK    SP70,FMLADESC
          PACK      KEY2,FMNDLEDG,SP70
          CALL      RDFMLA1
.
.
KFMND900  MOVE      ZERO,EXIT
          MOVE      FMNDCODE,XXXXCODE
          GOTO      KFMND999
.
KFMND950  MOVE      TWO,EXIT
          CALL      CANCB000
.
KFMND999  RETURN
.----------------------------------------------------------------------
. Delete FMND Data
.----------------------------------------------------------------------
DELTB000
          PACK     DISPMSG,SP70,SP70   * save line 24
          CALL     MESSAGE2
.
          CALL     DELQST              * delete (y/n/c) ?
          SUB      ONE,CEXIT
          BRANCH   CEXIT,DELTB950,DELTB900
.
          MOVE     SP70,FMNECODE       * check if template data exists
          PACK     KEY15,FMNDCODE,SP70
          CALL     RSFMNE1
          CALL     RKFMNE1
          MATCH    FMNDCODE,FMNECODE
          IF       @EQUAL
            DISPLAY   *P1:24,*B,*EF,"Subjectives are Linked to this ":
                      "Template. Continue (Y/N) ? ";
            MOVE      "24",CVERT
            MOVE      "60",CCOL
            MOVE      "N",DEFYESNO
            CALL      YORN0000
            COMPARE   ONE,FYESNO
            GOTO      DELTB950 IF NOT EQUAL
          ENDIF
.
          PACK      KEY15,FMNDCODE,SP70
.
DELTB100
          CALL      RSFMNE1
          CALL      RKFMNE1
          BRANCH    OVRCD,DELTB200
          PACK      KEY15,FMNECODE,FMNETCOD,SP70
          MATCH     FMNDCODE,KEY15
          GOTO      DELTB200 IF NOT EQUAL
.
          CALL      DEFMNE1
          GOTO      DELTB100
.
DELTB200
          PACK      KEY32,FMNDCODE,SP70
.
DELTB300
          CALL      RSFMNF1
          CALL      RKFMNF1
          BRANCH    OVRCD,DELTB400
          PACK      KEY32,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD,SP70
          MATCH     FMNDCODE,KEY32
          GOTO      DELTB400 IF NOT EQUAL
.
          CALL      DEFMNF1
          GOTO      DELTB300
.
DELTB400
          PACK     KEY3,FMNDCODE,SP70  * delete data
          CALL     DEFMND1
.
DELTB900  MOVE     TWO,EXIT
          CALL     CANCA000            * clear data
          GOTO     DELTB999
.
DELTB950  MOVE     ONE,EXIT
.
DELTB999
          CALL     MESSAGE3            * restore line 24
          RETURN
.----------------------------------------------------------------------
. Read Data
.----------------------------------------------------------------------
REDITC00
          PACK      FMCCDESC,SP70
          PACK      KEY14,FMNALEDG,FMNCSCOD,SP70
          CALL      RDFMCC1
.
          MOVE      "000",FMNBTLEV
          PACK      FMNBDESC,FMCCDESC,SP70
          PACK      KEY15,FMNACODE,FMNCSCOD,SP70
          CALL      RDFMNB1
.
          PACK      SUBCCDES,FMNBDESC,SP70
.
REDITC99  RETURN
.----------------------------------------------------------------------
. Post for screen 03
.----------------------------------------------------------------------
POSTC000
          MOVE      XXXXDESC,FMNBDESC
          MOVE      XXXXTLEV,FMNBTLEV
          MOVE      XXXXPRTC,FMNBPRTC
          PACK      KEY15,FMNACODE,XXXXTCOD,SP70
          UNPACK    KEY15,FMNBCODE,FMNBTCOD
          CALL      RAFMNB1
          IF        OVRCD=1
            CALL      WRFMNB1
          ELSE
            CALL      UPFMNB1
          ENDIF
.
POSTC999  RETURN
.----------------------------------------------------------------------
. Delete Total Cost Centre
.----------------------------------------------------------------------
REMVC000
          PACK     DISPMSG,SP70,SP70   * save line 24
          CALL     MESSAGE2
.
          CALL     DELQST              * delete (y/n/c) ?
          SUB      ONE,CEXIT
          BRANCH   CEXIT,REMVC950,REMVC900
.
          MOVE     SP70,FMNCTCOD       * check for children
          PACK     KEY32,XXXXCODE,XXXXTCOD,SP70
          CALL     RSFMNC1
          CALL     RPFMNC1
          CALL     RKFMNC1
          PACK     KEY15,FMNCCODE,FMNCTCOD,SP70
          MATCH    KEY15,KEY32
          IF       @EQUAL
            DISPLAY   *P1:24,*B,*EF,"Cost Centres are Linked to this ":
                      "Total Cost Centre - ";
            CALL      HITENTER
            GOTO      REMVC950
          ENDIF
.
          MOVE     SP70,FMNCSCOD       * check for children
          PACK     KEY27,XXXXCODE,XXXXTCOD,SP70
          CALL     RSFMNC2
          CALL     RPFMNC2
          CALL     RKFMNC2
          PACK     KEY15,FMNCCODE,FMNCSCOD,SP70
          MATCH    KEY15,KEY27
          IF       @EQUAL
            DISPLAY   *P1:24,*B,*EF,"Total Cost Centre has a Parent - ";
            CALL      HITENTER
            GOTO      REMVC950
          ENDIF
.
          PACK     KEY15,XXXXCODE,XXXXTCOD,SP70
          CALL     RAFMNE1
          CALL     DEFMNE1
.
REMVC900  MOVE     TWO,EXIT
          GOTO     REMVC999
.
REMVC950  CALL     POSTC000
          MOVE     ONE,EXIT
.
REMVC999
          CALL     MESSAGE3            * restore line 24
          RETURN
.----------------------------------------------------------------------
. Keyin FMNB
.----------------------------------------------------------------------
KFMNB000
          PACK      FMNBCODE,FMNACODE,SP70
          CALL      KFMNBA00                     * keyin FMNB
          BRANCH    EXIT,KFMNB910,KFMNB950
.
          PACK      KEY14,FMNALEDG,FMNBTCOD,SP70
          CALL      RDFMCC1
          IF        OVRCD=0
            BEEP
            CLEAR     DISPMSG
            APPEND    "Normal Cost Centre Already Exists - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KFMNB000
          ENDIF
.
          UNPACK    SP70,FMNBDESC,FMNBPRTC,FMNBTLEV
          PACK      KEY15,FMNBCODE,FMNBTCOD,SP70
          CALL      RDFMNB1
          MOVE      OVRCD,ACCEPT
.
          MOVE      FMNBTCOD,XXXXTCOD
          MOVE      FMNBDESC,XXXXDESC
          MOVE      FMNBPRTC,XXXXPRTC
          MOVE      FMNBTLEV,XXXXTLEV
.
          MOVE      SP70,FMLVDESC
          PACK      KEY3,XXXXTLEV,SP70
          CALL      RDFMLV1
.
          MOVE      SP70,FMPRDESC
          PACK      KEY3,XXXXPRTC,SP70
          CALL      RDFMPR1
.
KFMNB900  MOVE      ZERO,EXIT
          MOVE      ACCEPT,OVRCD
          GOTO      KFMNB999
.
KFMNB910  MOVE      ONE,EXIT
          CALL      CANCA000
          GOTO      KFMNB999
.
KFMNB950  MOVE      TWO,EXIT
          CALL      CANCA000
.
KFMNB999  RETURN
.----------------------------------------------------------------------
. Keyin FMPC
.----------------------------------------------------------------------
KFMPC000
          CALL      KPRCFM00                     * keyin FMPC
          PACK      XXXXPRTC,FMPRCODE,SP70
          BRANCH    EXIT,KFMPC900,KFMPC950
.
KFMPC900
          MOVE      SP70,FMPRDESC
          PACK      KEY3,XXXXPRTC,SP70
          CALL      RDFMPR1
          MOVE      ZERO,EXIT
          GOTO      KFMPC999
.
KFMPC950  MOVE      TWO,EXIT
.
KFMPC999  RETURN
.----------------------------------------------------------------------
. Keyin FMLV
.----------------------------------------------------------------------
KFMLV000  MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00                     * keyin FMLV
          PACK      XXXXTLEV,FMLVCODE,SP70
          BRANCH    EXIT,KFMLV000,KFMLV950
.
          MATCH     "03",SCRID                   * check if level valid
          CALL      CKFMNB00 IF EQUAL
          MATCH     "04",SCRID
          CALL      CKFMNE00 IF EQUAL
          BRANCH    EXIT,KFMLV000
.
KFMLV900
          MOVE      SP70,FMLVDESC
          PACK      KEY3,XXXXTLEV,SP70
          CALL      RDFMLV1
          MOVE      ZERO,EXIT
          GOTO      KFMLV999
.
KFMLV950  MOVE      TWO,EXIT
.
KFMLV999  RETURN
.----------------------------------------------------------------------
. Check levels for screen 03
.----------------------------------------------------------------------
CKFMNB00
.
.---- check parent ----
.
          MOVE      SP70,FMNCSCOD                * check if linked
          PACK      KEY27,XXXXCODE,XXXXTCOD,SP70
          CALL      RSFMNC2
          CALL      RPFMNC2
          CALL      RKFMNC2
          PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
          MATCH     KEY15,KEY27
          IF        @EQUAL
            MOVE      "00000",FMNBTLEV
            PACK      KEY15,FMNCCODE,FMNCTCOD,SP70
            CALL      RDFMNB1
            MATCH     FMNBTLEV,XXXXTLEV
            IF        !@LESS
              BEEP
              CLEAR     DISPMSG
              APPEND    "Must have a Lower Level than ",DISPMSG
              APPEND    FMNBTLEV,DISPMSG
              APPEND    " - ",DISPMSG
              RESET     DISPMSG
              CALL      MESSAGE1
              GOTO      CKFMNB95
            ENDIF
          ENDIF
.
.---- check children ----
.
          PACK      KEY32,XXXXCODE,XXXXTCOD,SP70
          CALL      RSFMNC1
          CALL      RPFMNC1
.
CKFMNB10
          CALL      RKFMNC1
          BRANCH    OVRCD,CKFMNB90
          PACK      KEY15,FMNCCODE,FMNCTCOD,SP70
          MATCH     KEY15,KEY32
          GOTO      CKFMNB90 IF NOT EQUAL
.
          MOVE      "00000",FMNBTLEV
          PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
          CALL      RDFMNB1
.
          MATCH     XXXXTLEV,FMNBTLEV
          GOTO      CKFMNB10 IF LESS
.
          BEEP
          CLEAR     DISPMSG
          APPEND    "Must have a Higher Level than Sub Cost Centres - ",DISPMSG
          CALL      MESSAGE1
          GOTO      CKFMNB95
.
CKFMNB90  MOVE      ZERO,EXIT
          GOTO      CKFMNB99
.
CKFMNB95  MOVE      ONE,EXIT
.
CKFMNB99  RETURN
.----------------------------------------------------------------------
. Check levels for screen 04
.----------------------------------------------------------------------
CKFMNE00
.
.---- check parent ----
.
          MOVE      SP70,FMNFSCOD                * check if linked
          PACK      KEY27,XXXXCODE,XXXXTCOD,SP70
          CALL      RSFMNF2
          CALL      RPFMNF2
          CALL      RKFMNF2
          PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
          MATCH     KEY15,KEY27
          IF        @EQUAL
            MOVE      "00000",FMNETLEV
            PACK      KEY15,FMNFCODE,FMNFTCOD,SP70
            CALL      RDFMNE1
            MATCH     FMNETLEV,XXXXTLEV
            IF        !@LESS
              BEEP
              CLEAR     DISPMSG
              APPEND    "Must have a Lower Level than ",DISPMSG
              APPEND    FMNETLEV,DISPMSG
              APPEND    " - ",DISPMSG
              RESET     DISPMSG
              CALL      MESSAGE1
              GOTO      CKFMNE95
            ENDIF
          ENDIF
.
.---- check children ----
.
          PACK      KEY32,XXXXCODE,XXXXTCOD,SP70
          CALL      RSFMNF1
          CALL      RPFMNF1
.
CKFMNE10
          CALL      RKFMNF1
          BRANCH    OVRCD,CKFMNE90
          PACK      KEY15,FMNFCODE,FMNFTCOD,SP70
          MATCH     KEY15,KEY32
          GOTO      CKFMNE90 IF NOT EQUAL
.
          MOVE      "00000",FMNETLEV
          PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
          CALL      RDFMNE1
.
          MATCH     XXXXTLEV,FMNETLEV
          GOTO      CKFMNE10 IF LESS
.
          BEEP
          CLEAR     DISPMSG
          APPEND    "Must have a Higher Level than Sub Subjectives - ",DISPMSG
          CALL      MESSAGE1
          GOTO      CKFMNE95
.
CKFMNE90  MOVE      ZERO,EXIT
          GOTO      CKFMNE99
.
CKFMNE95  MOVE      ONE,EXIT
.
CKFMNE99  RETURN
.----------------------------------------------------------------------
. Keyin Data
.----------------------------------------------------------------------
SELITC00
          PACK      KEY32,FMNC1MKY,SP70
          CALL      RDFMNC1
          BRANCH    OVRCD,SELITC90     * note: record should be there !!
.
          MOVE      "   13",KEY5       * get screen position for item 13
          PACK      KEY20,PRGID,SCRID,KEY5,CVERT,SP70
          UNPACK    SP70,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          CALL      RSSCPS2
          CALL      RKSCPS2
          PACK      KEY17,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SP70
.
          MATCH     KEY20,KEY17        * keyin next item if on screen
          IF        @EQUAL
            MOVE      SCPSCOL,F2
            KEYIN     *PF2:CVERT,*V2LON,*ZF,*DE,*RV,*JR,FMNCASEQ
            PACK      FMNCASEQ,FMNCASEQ,SP70
            MATCH     EXITCHAR,FMNCASEQ
            GOTO      SELITC90 IF EQUAL
          ELSE
            MOVE      "00000",FMNCASEQ
          ENDIF
.
          CALL      UPFMNC1
.
SELITC90
.
SELITC99  RETURN
.----------------------------------------------------------------------
. Add for screen 03
.----------------------------------------------------------------------
ADDTC000
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
          KEYIN     *P1:24,*EF,"Add ",*V2LON:
                    "N",*HOFF,"ormal or ",*V2LON:
                    "T",*HOFF,"otal Cost Centres ? ",*V2LON,ANS
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "N",ANS
          GOTO      ADDTC100 IF EQUAL
          MATCH     "T",ANS
          GOTO      ADDTC500 IF EQUAL
          GOTO      ADDTC999
.
.---- add normal cost centres ----
.
ADDTC100
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,ADDTC999          * should be there !!
.
          DISPLAY   *P1:24,*EF,"Add Normal Cost Centres from ";
          MOVE      "30",CCOL
          MOVE      "24",CVERT
          CALL      KCCAFM00
          BRANCH    EXIT,ADDTC999,ADDTC999
          PACK      KEY12,FMCCCOCE,SP70
.
          DISPLAY   *P42:24,*EF," to ";
          MOVE      "46",CCOL
          MOVE      "24",CVERT
          CALL      KCCAFM00
          BRANCH    EXIT,ADDTC100,ADDTC999
          PACK      SKEY12,FMCCCOCE,SP70
.
          MATCH     KEY12,SKEY12
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Cost Centre Range - ";
            CALL      HITENTER
            GOTO      ADDTC100
          ENDIF
.
          PACK      KEY14,FMNALEDG,KEY12,SP70
          CALL      RSFMCC1
          CALL      RPFMCC1
.
ADDTC200
          CALL      RKFMCC1
          BRANCH    OVRCD,ADDTC999
          MATCH     FMCCLEDG,FMLALEDG
          GOTO      ADDTC999 IF NOT EQUAL
          MATCH     FMCCCOCE,SKEY12
          GOTO      ADDTC999 IF LESS
.
          MOVE      SP70,FMNCSCOD                * check if linked
          PACK      KEY27,FMNACODE,FMCCCOCE,SP70
          CALL      RSFMNC2
          CALL      RPFMNC2
          CALL      RKFMNC2
          PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            PACK      KEY27,FMNACODE,FMCCCOCE,XXXXTCOD,SP70
            UNPACK    KEY27,FMNCCODE,FMNCSCOD,FMNCTCOD
            MOVE      "00000",FMNCASEQ
            MOVE      SP70,FMNCSPAR
            CALL      WRFMNC2
          ENDIF
          GOTO      ADDTC200
.
.---- add total cost centres ----
.
ADDTC500
          PACK      FMNBCODE,FMNACODE,SP70
.
          DISPLAY   *P1:24,*EF,"Add Total Cost Centres from ";
          MOVE      "30",CCOL
          MOVE      "24",CVERT
          CALL      KFMNBA00
          BRANCH    EXIT,ADDTC999,ADDTC999
          PACK      KEY12,FMNBTCOD,SP70
.
          DISPLAY   *P42:24,*EF," to ";
          MOVE      "46",CCOL
          MOVE      "24",CVERT
          CALL      KFMNBA00
          BRANCH    EXIT,ADDTC100,ADDTC999
          PACK      SKEY12,FMNBTCOD,SP70
.
          MATCH     KEY12,SKEY12
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Cost Centre Range - ";
            CALL      HITENTER
            GOTO      ADDTC500
          ENDIF
.
          PACK      KEY15,FMNACODE,KEY12,SP70
          CALL      RSFMNB1
          CALL      RPFMNB1
.
ADDTC600
          CALL      RKFMNB1
          BRANCH    OVRCD,ADDTC999
          MATCH     FMNBCODE,FMNACODE
          GOTO      ADDTC999 IF NOT EQUAL
          MATCH     FMNBTCOD,SKEY12
          GOTO      ADDTC999 IF LESS
.
          MATCH     FMNBTCOD,XXXXTCOD            * check not current code
          GOTO      ADDTC600 IF EQUAL
.
          MATCH     XXXXTLEV,FMNBTLEV            * check if level ok
          GOTO      ADDTC600 IF NOT LESS
.
          MOVE      SP70,FMNCSCOD                * check if linked
          PACK      KEY27,FMNACODE,FMNBTCOD,SP70
          CALL      RSFMNC2
          CALL      RPFMNC2
          CALL      RKFMNC2
          PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            PACK      KEY27,FMNACODE,FMNBTCOD,XXXXTCOD,SP70
            UNPACK    KEY27,FMNCCODE,FMNCSCOD,FMNCTCOD
            MOVE      "00000",FMNCASEQ
            MOVE      SP70,FMNCSPAR
            CALL      WRFMNC2
          ENDIF
          GOTO      ADDTC600
.
.
ADDTC999
          CALL      FP03L000                * display page 1
          CALL      MESSAGE3
          RETURN
.----------------------------------------------------------------------
. Delete for screen 03
.----------------------------------------------------------------------
DELTC000
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
          KEYIN     *P1:24,*EF,"Delete ",*V2LON:
                    "N",*HOFF,"ormal or ",*V2LON:
                    "T",*HOFF,"otal Cost Centres ? ",*V2LON,ANS
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "N",ANS
          GOTO      DELTC100 IF EQUAL
          MATCH     "T",ANS
          GOTO      DELTC500 IF EQUAL
          GOTO      DELTC999
.
.---- delete normal cost centres ----
.
DELTC100
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,DELTC999          * should be there !!
.
          DISPLAY   *P1:24,*EF,"Delete Normal Cost Centres from ";
          MOVE      "33",CCOL
          MOVE      "24",CVERT
          CALL      KCCAFM00
          BRANCH    EXIT,DELTC999,DELTC999
          PACK      KEY12,FMCCCOCE,SP70
.
          DISPLAY   *P45:24,*EF," to ";
          MOVE      "49",CCOL
          MOVE      "24",CVERT
          CALL      KCCAFM00
          BRANCH    EXIT,DELTC100,DELTC999
          PACK      SKEY12,FMCCCOCE,SP70
.
          MATCH     KEY12,SKEY12
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Cost Centre Range - ";
            CALL      HITENTER
            GOTO      DELTC100
          ENDIF
.
          PACK      KEY14,FMNALEDG,KEY12,SP70
          CALL      RSFMCC1
          CALL      RPFMCC1
.
DELTC200
          CALL      RKFMCC1
          BRANCH    OVRCD,DELTC999
          MATCH     FMCCLEDG,FMLALEDG
          GOTO      DELTC999 IF NOT EQUAL
          MATCH     FMCCCOCE,SKEY12
          GOTO      DELTC999 IF LESS
.
          PACK      KEY27,FMNACODE,FMCCCOCE,XXXXTCOD,SP70
          CALL      RAFMNC2
          IF        OVRCD=0
            DISPLAY   *P1:24,*EF,"Deleting : ",*V2LON,KEY27;
            CALL      DEFMNC2
          ENDIF
          GOTO      DELTC200
.
.---- delete total cost centres ----
.
DELTC500
          PACK      FMNBCODE,FMNACODE,SP70
.
          DISPLAY   *P1:24,*EF,"Delete Total Cost Centres from ";
          MOVE      "33",CCOL
          MOVE      "24",CVERT
          CALL      KFMNBA00
          BRANCH    EXIT,DELTC999,DELTC999
          PACK      KEY12,FMNBTCOD,SP70
.
          DISPLAY   *P45:24,*EF," to ";
          MOVE      "49",CCOL
          MOVE      "24",CVERT
          CALL      KFMNBA00
          BRANCH    EXIT,DELTC100,DELTC999
          PACK      SKEY12,FMNBTCOD,SP70
.
          MATCH     KEY12,SKEY12
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Cost Centre Range - ";
            CALL      HITENTER
            GOTO      DELTC500
          ENDIF
.
          PACK      KEY15,FMNACODE,KEY12,SP70
          CALL      RSFMNB1
          CALL      RPFMNB1
.
DELTC600
          CALL      RKFMNB1
          BRANCH    OVRCD,DELTC999
          MATCH     FMNBCODE,FMNACODE
          GOTO      DELTC999 IF NOT EQUAL
          MATCH     FMNBTCOD,SKEY12
          GOTO      DELTC999 IF LESS
.
          PACK      KEY27,FMNACODE,FMNBTCOD,XXXXTCOD,SP70
          CALL      RAFMNC2
          IF        OVRCD=0
            DISPLAY   *P1:24,*EF,"Deleting : ",*V2LON,KEY27;
            CALL      DEFMNC2
          ENDIF
          GOTO      DELTC600
.
.
DELTC999
          CALL      FP03L000                * display page 1
          CALL      MESSAGE3
          RETURN
.----------------------------------------------------------------------
. Read Data
.----------------------------------------------------------------------
REDITD00
          PACK      FMSADESC,SP70
          PACK      KEY14,FMNDLEDG,FMNFSCOD,SP70
          CALL      RDFMSA1
.
          MOVE      "000",FMNETLEV
          PACK      FMNEDESC,FMSADESC,SP70
          PACK      KEY15,FMNDCODE,FMNFSCOD,SP70
          CALL      RDFMNE1
.
          PACK      SUBCCDES,FMNEDESC,SP70
.
REDITD99  RETURN
.----------------------------------------------------------------------
. Post for screen 04
.----------------------------------------------------------------------
POSTD000
          MOVE      XXXXDESC,FMNEDESC
          MOVE      XXXXTLEV,FMNETLEV
          MOVE      XXXXPRTC,FMNEPRTC
          PACK      KEY15,FMNDCODE,XXXXTCOD,SP70
          UNPACK    KEY15,FMNECODE,FMNETCOD
          CALL      RAFMNE1
          IF        OVRCD=1
            CALL      WRFMNE1
          ELSE
            CALL      UPFMNE1
          ENDIF
.
POSTD999  RETURN
.----------------------------------------------------------------------
. Delete Total Subjective
.----------------------------------------------------------------------
REMVD000
          PACK     DISPMSG,SP70,SP70   * save line 24
          CALL     MESSAGE2
.
          CALL     DELQST              * delete (y/n/c) ?
          SUB      ONE,CEXIT
          BRANCH   CEXIT,REMVD950,REMVD900
.
          MOVE     SP70,FMNFTCOD       * check for children
          PACK     KEY32,XXXXCODE,XXXXTCOD,SP70
          CALL     RSFMNF1
          CALL     RPFMNF1
          CALL     RKFMNF1
          PACK     KEY15,FMNFCODE,FMNFTCOD,SP70
          MATCH    KEY15,KEY32
          IF       @EQUAL
            DISPLAY   *P1:24,*B,*EF,"Subjectives are Linked to this ":
                      "Total Cost Centre - ";
            CALL      HITENTER
            GOTO      REMVD950
          ENDIF
.
          MOVE     SP70,FMNFSCOD       * check for children
          PACK     KEY27,XXXXCODE,XXXXTCOD,SP70
          CALL     RSFMNF2
          CALL     RPFMNF2
          CALL     RKFMNF2
          PACK     KEY15,FMNFCODE,FMNFSCOD,SP70
          MATCH    KEY15,KEY27
          IF       @EQUAL
            DISPLAY   *P1:24,*B,*EF,"Total Cost Centre has a Parent - ";
            CALL      HITENTER
            GOTO      REMVD950
          ENDIF
.
          PACK     KEY15,XXXXCODE,XXXXTCOD,SP70
          CALL     RAFMNE1
          CALL     DEFMNE1
.
REMVD900  MOVE     TWO,EXIT
          GOTO     REMVD999
.
REMVD950  CALL     POSTD000
          MOVE     ONE,EXIT
.
REMVD999
          CALL     MESSAGE3            * restore line 24
          RETURN
.----------------------------------------------------------------------
. Keyin FMNE
.----------------------------------------------------------------------
KFMNE000
          PACK      FMNECODE,FMNDCODE,SP70
          CALL      KFMNEA00                     * keyin FMNE
          BRANCH    EXIT,KFMNE910,KFMNE950
.
          PACK      KEY14,FMNALEDG,FMNETCOD,SP70
          CALL      RDFMSA1
          IF        OVRCD=0
            BEEP
            CLEAR     DISPMSG
            APPEND    "Normal Subjective Already Exists - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KFMNE000
          ENDIF
.
          UNPACK    SP70,FMNEDESC,FMNEPRTC,FMNETLEV
          PACK      KEY15,FMNECODE,FMNETCOD,SP70
          CALL      RDFMNE1
          MOVE      OVRCD,ACCEPT
.
          MOVE      FMNETCOD,XXXXTCOD
          MOVE      FMNEDESC,XXXXDESC
          MOVE      FMNEPRTC,XXXXPRTC
          MOVE      FMNETLEV,XXXXTLEV
.
          MOVE      SP70,FMLVDESC
          PACK      KEY3,XXXXTLEV,SP70
          CALL      RDFMLV1
.
          MOVE      SP70,FMPRDESC
          PACK      KEY3,XXXXPRTC,SP70
          CALL      RDFMPR1
.
KFMNE900  MOVE      ZERO,EXIT
          MOVE      ACCEPT,OVRCD
          GOTO      KFMNE999
.
KFMNE910  MOVE      ONE,EXIT
          CALL      CANCB000
          GOTO      KFMNE999
.
KFMNE950  MOVE      TWO,EXIT
          CALL      CANCB000
.
KFMNE999  RETURN
.----------------------------------------------------------------------
. Keyin Data
.----------------------------------------------------------------------
SELITD00
          PACK      KEY32,FMNF1MKY,SP70
          CALL      RDFMNF1
          BRANCH    OVRCD,SELITD90     * note: record should be there !!
.
          MOVE      "   13",KEY5       * get screen position for item 13
          PACK      KEY20,PRGID,SCRID,KEY5,CVERT,SP70
          UNPACK    SP70,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          CALL      RSSCPS2
          CALL      RKSCPS2
          PACK      KEY17,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SP70
.
          MATCH     KEY20,KEY17        * keyin next item if on screen
          IF        @EQUAL
            MOVE      SCPSCOL,F2
            KEYIN     *PF2:CVERT,*V2LON,*ZF,*DE,*RV,*JR,FMNFASEQ
            PACK      FMNFASEQ,FMNFASEQ,SP70
            MATCH     EXITCHAR,FMNFASEQ
            GOTO      SELITD90 IF EQUAL
          ELSE
            MOVE      "00000",FMNFASEQ
          ENDIF
.
          CALL      UPFMNF1
.
SELITD90
.
SELITD99  RETURN
.----------------------------------------------------------------------
. Add for screen 04
.----------------------------------------------------------------------
ADDTD000
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
          KEYIN     *P1:24,*EF,"Add ",*V2LON:
                    "N",*HOFF,"ormal or ",*V2LON:
                    "T",*HOFF,"otal Subjectives ? ",*V2LON,ANS
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "N",ANS
          GOTO      ADDTD100 IF EQUAL
          MATCH     "T",ANS
          GOTO      ADDTD500 IF EQUAL
          GOTO      ADDTD999
.
.---- add normal subjectives ----
.
ADDTD100
          PACK      KEY2,FMNDLEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,ADDTD999          * should be there !!
.
          DISPLAY   *P1:24,*EF,"Add Normal Subjectives from ";
          MOVE      "30",CCOL
          MOVE      "24",CVERT
          MOVE      "6",CSUBJIND
          CALL      KSBAFM00
          BRANCH    EXIT,ADDTD999,ADDTD999
          PACK      KEY12,FMSASUBJ,SP70
.
          DISPLAY   *P42:24,*EF," to ";
          MOVE      "46",CCOL
          MOVE      "24",CVERT
          CALL      KSBAFM00
          BRANCH    EXIT,ADDTD100,ADDTD999
          PACK      SKEY12,FMSASUBJ,SP70
.
          MATCH     KEY12,SKEY12
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Subjectives Range - ";
            CALL      HITENTER
            GOTO      ADDTD100
          ENDIF
.
          PACK      KEY14,FMNDLEDG,KEY12,SP70
          CALL      RSFMSA1
          CALL      RPFMSA1
.
ADDTD200
          CALL      RKFMSA1
          BRANCH    OVRCD,ADDTD999
          MATCH     FMSALEDG,FMLALEDG
          GOTO      ADDTD999 IF NOT EQUAL
          MATCH     FMSASUBJ,SKEY12
          GOTO      ADDTD999 IF LESS
.
          CALL      CKSBA000                     * check if a valid subjective
          BRANCH    OVRCD,ADDTD200
.
          MOVE      SP70,FMNFSCOD                * check if linked
          PACK      KEY27,FMNDCODE,FMSASUBJ,SP70
          CALL      RSFMNF2
          CALL      RPFMNF2
          CALL      RKFMNF2
          PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            PACK      KEY27,FMNDCODE,FMSASUBJ,XXXXTCOD,SP70
            UNPACK    KEY27,FMNFCODE,FMNFSCOD,FMNFTCOD
            MOVE      "00000",FMNFASEQ
            MOVE      SP70,FMNFSPAR
            CALL      WRFMNF2
          ENDIF
          GOTO      ADDTD200
.
.---- add total subjectives ----
.
ADDTD500
          PACK      FMNECODE,FMNDCODE,SP70
.
          DISPLAY   *P1:24,*EF,"Add Total Subjectives from ";
          MOVE      "30",CCOL
          MOVE      "24",CVERT
          CALL      KFMNEA00
          BRANCH    EXIT,ADDTD999,ADDTD999
          PACK      KEY12,FMNETCOD,SP70
.
          DISPLAY   *P42:24,*EF," to ";
          MOVE      "46",CCOL
          MOVE      "24",CVERT
          CALL      KFMNEA00
          BRANCH    EXIT,ADDTD100,ADDTD999
          PACK      SKEY12,FMNETCOD,SP70
.
          MATCH     KEY12,SKEY12
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Subjectives Range - ";
            CALL      HITENTER
            GOTO      ADDTD500
          ENDIF
.
          PACK      KEY15,FMNDCODE,KEY12,SP70
          CALL      RSFMNE1
          CALL      RPFMNE1
.
ADDTD600
          CALL      RKFMNE1
          BRANCH    OVRCD,ADDTD999
          MATCH     FMNECODE,FMNDCODE
          GOTO      ADDTD999 IF NOT EQUAL
          MATCH     FMNETCOD,SKEY12
          GOTO      ADDTD999 IF LESS
.
          MATCH     FMNETCOD,XXXXTCOD            * check not current code
          GOTO      ADDTD600 IF EQUAL
.
          MATCH     XXXXTLEV,FMNETLEV            * check if level ok
          GOTO      ADDTD600 IF NOT LESS
.
          MOVE      SP70,FMNFSCOD                * check if linked
          PACK      KEY27,FMNDCODE,FMNETCOD,SP70
          CALL      RSFMNF2
          CALL      RPFMNF2
          CALL      RKFMNF2
          PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            PACK      KEY27,FMNDCODE,FMNETCOD,XXXXTCOD,SP70
            UNPACK    KEY27,FMNFCODE,FMNFSCOD,FMNFTCOD
            MOVE      "00000",FMNFASEQ
            MOVE      SP70,FMNFSPAR
            CALL      WRFMNF2
          ENDIF
          GOTO      ADDTD600
.
.
ADDTD999
          CALL      FP04L000                * display page 1
          CALL      MESSAGE3
          RETURN
.----------------------------------------------------------------------
. Delete for screen 04
.----------------------------------------------------------------------
DELTD000
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
          KEYIN     *P1:24,*EF,"Delete ",*V2LON:
                    "N",*HOFF,"ormal or ",*V2LON:
                    "T",*HOFF,"otal Subjectives ? ",*V2LON,ANS
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "N",ANS
          GOTO      DELTD100 IF EQUAL
          MATCH     "T",ANS
          GOTO      DELTD500 IF EQUAL
          GOTO      DELTD999
.
.---- delete normal subjectives ----
.
DELTD100
          PACK      KEY2,FMNDLEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,DELTD999          * should be there !!
.
          DISPLAY   *P1:24,*EF,"Delete Normal Subjectives from ";
          MOVE      "33",CCOL
          MOVE      "24",CVERT
          MOVE      "6",CSUBJIND
          CALL      KSBAFM00
          BRANCH    EXIT,DELTD999,DELTD999
          PACK      KEY12,FMSASUBJ,SP70
.
          DISPLAY   *P45:24,*EF," to ";
          MOVE      "49",CCOL
          MOVE      "24",CVERT
          CALL      KSBAFM00
          BRANCH    EXIT,DELTD100,DELTD999
          PACK      SKEY12,FMSASUBJ,SP70
.
          MATCH     KEY12,SKEY12
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Subjectives Range - ";
            CALL      HITENTER
            GOTO      DELTD100
          ENDIF
.
          PACK      KEY14,FMNDLEDG,KEY12,SP70
          CALL      RSFMSA1
          CALL      RPFMSA1
.
DELTD200
          CALL      RKFMSA1
          BRANCH    OVRCD,DELTD999
          MATCH     FMSALEDG,FMLALEDG
          GOTO      DELTD999 IF NOT EQUAL
          MATCH     FMSASUBJ,SKEY12
          GOTO      DELTD999 IF LESS
.
          PACK      KEY27,FMNDCODE,FMSASUBJ,XXXXTCOD,SP70
          CALL      RAFMNF2
          IF        OVRCD=0
            DISPLAY   *P1:24,*EF,"Deleting : ",*V2LON,KEY27;
            CALL      DEFMNF2
          ENDIF
          GOTO      DELTD200
.
.---- delete total subjectives ----
.
DELTD500
          PACK      FMNECODE,FMNDCODE,SP70
.
          DISPLAY   *P1:24,*EF,"Delete Total Subjectives from ";
          MOVE      "33",CCOL
          MOVE      "24",CVERT
          CALL      KFMNEA00
          BRANCH    EXIT,DELTD999,DELTD999
          PACK      KEY12,FMNETCOD,SP70
.
          DISPLAY   *P45:24,*EF," to ";
          MOVE      "49",CCOL
          MOVE      "24",CVERT
          CALL      KFMNEA00
          BRANCH    EXIT,DELTD100,DELTD999
          PACK      SKEY12,FMNETCOD,SP70
.
          MATCH     KEY12,SKEY12
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Subjectives Range - ";
            CALL      HITENTER
            GOTO      DELTD500
          ENDIF
.
          PACK      KEY15,FMNDCODE,KEY12,SP70
          CALL      RSFMNE1
          CALL      RPFMNE1
.
DELTD600
          CALL      RKFMNE1
          BRANCH    OVRCD,DELTD999
          MATCH     FMNECODE,FMNDCODE
          GOTO      DELTD999 IF NOT EQUAL
          MATCH     FMNETCOD,SKEY12
          GOTO      DELTD999 IF LESS
.
          PACK      KEY27,FMNDCODE,FMNETCOD,XXXXTCOD,SP70
          CALL      RAFMNF2
          IF        OVRCD=0
            DISPLAY   *P1:24,*EF,"Deleting : ",*V2LON,KEY27;
            CALL      DEFMNF2
          ENDIF
          GOTO      DELTD600
.
.
DELTD999
          CALL      FP04L000                * display page 1
          CALL      MESSAGE3
          RETURN
.********************************************************************
. POSTE - Post data for FMNC                         Called by ML
.********************************************************************
POSTE000
          MATCH     XXXXSCOD,XXXXTCOD
          IF        @EQUAL
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - From and To Code Identical - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      POSTE999
          ENDIF
.
          MOVE      SP70,FMNCSCOD                * check if linked
          PACK      KEY27,XXXXCODE,XXXXSCOD,SP70
          CALL      RSFMNC2
          CALL      RPFMNC2
          CALL      RKFMNC2
          PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            MATCH     SP70,XXXXTCOD
            IF        !@EQUAL
              PACK      KEY27,XXXXCODE,XXXXSCOD,XXXXTCOD,SP70
              UNPACK    KEY27,FMNCCODE,FMNCSCOD,FMNCTCOD
              MOVE      XXXXASEQ,FMNCASEQ
              CALL      WRFMNC2
            ENDIF
          ELSE
            MATCH     SP70,XXXXTCOD
            IF        !@EQUAL
              PACK      KEY27,XXXXCODE,XXXXSCOD,XXXXTCOD,SP70
              UNPACK    KEY27,FMNCCODE,FMNCSCOD,FMNCTCOD
              MOVE      XXXXASEQ,FMNCASEQ
              CALL      UPFMNC2
            ELSE
              PACK      KEY27,FMNCCODE,FMNCSCOD,FMNCTCOD,SP70
              CALL      DEFMNC2
            ENDIF
          ENDIF
.
POSTE999  RETURN
.----------------------------------------------------------------------
. Keyin FMNC
.----------------------------------------------------------------------
KFMNC000
          PACK      FMNCCODE,FMNACODE,SP70
          PACK      FMLALEDG,FMNALEDG,SP70
          CALL      KFMNCA00                     * keyin FMNC
          BRANCH    EXIT,KFMNC910,KFMNC950
.
          MOVE      FMNCSCOD,XXXXSCOD
          MOVE      FMNBDESC,XXXXDESC
          MOVE      FMNBTLEV,XXXXTLEV
.
          MOVE      SP70,FMNCSCOD                * check if linked
          PACK      KEY27,FMNACODE,XXXXSCOD,SP70
          CALL      RSFMNC2
          CALL      RPFMNC2
          CALL      RKFMNC2
          PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            UNPACK    SP70,XXXXTCOD,XXXXASEQ
            UNPACK    SP70,FMNBDESC,FMNBPRTC,FMNBTLEV
            MOVE      ONE,ACCEPT
          ELSE
            MOVE      FMNCTCOD,XXXXTCOD
            MOVE      FMNCASEQ,XXXXASEQ
            MOVE      FMNCTCOD,FMNCSCOD
            CALL      REDITC000
            MOVE      ZERO,ACCEPT
          ENDIF
.
.
KFMNC900  MOVE      ZERO,EXIT
          MOVE      ACCEPT,OVRCD
          GOTO      KFMNC999
.
KFMNC910  MOVE      ONE,EXIT
          CALL      CANCA000
          GOTO      KFMNC999
.
KFMNC950  MOVE      TWO,EXIT
          CALL      CANCA000
.
KFMNC999  RETURN
.----------------------------------------------------------------------
. Keyin Parent
.----------------------------------------------------------------------
KPARC000
          PACK      FMNBCODE,FMNACODE,SP70
          CALL      KFMNBA00                     * keyin FMNB
          BRANCH    EXIT,KPARC910,KPARC950
.
          PACK      XXXXTCOD,FMNBTCOD,SP70
          MATCH     FMNBTLEV,XXXXTLEV            * check level
          IF        !@LESS
            BEEP
            CLEAR     DISPMSG
            APPEND    "Must have a Higher Level than Sub Cost Centre ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      KPARC000
          ENDIF
.
KPARC900  MOVE      ZERO,EXIT
          GOTO      KPARC999
.
KPARC910  BRANCH    ACCEPT,KPARC950              * quit if in insert
          MOVE      ONE,EXIT
          UNPACK    SP70,XXXXTCOD,FMNBTCOD,FMNBDESC,FMNBTLEV,FMNBPRTC
          GOTO      KPARC999
.
KPARC950  MOVE      TWO,EXIT
.
KPARC999  RETURN
.----------------------------------------------------------------------
. Keyin ASEQ
.----------------------------------------------------------------------
KASEQ000
          REP       " 0",XXXXASEQ
          KEYIN     *PCCOL:CVERT,*V2LON,*DE,*ZF,*JR,*RV,XXXXASEQ
          PACK      XXXXASEQ,XXXXASEQ,SP70
.
          MATCH     EXITCHAR,XXXXASEQ  * exitchar entered ?
          GOTO      KASEQ970 IF EQUAL
.
          MATCH     SP70,XXXXASEQ      * nothing entered ?
          GOTO      KASEQ950 IF EQUAL
.
KASEQ900  MOVE      ZERO,EXIT
          GOTO      KASEQ999
.
KASEQ950  MOVE      ONE,EXIT
          GOTO      KASEQ999
.
KASEQ970  MOVE      TWO,EXIT
.
KASEQ999  RETURN
.********************************************************************
. POSTF - Post data for FMNF                         Called by ML
.********************************************************************
POSTF000
          MATCH     XXXXSCOD,XXXXTCOD
          IF        @EQUAL
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - From and To Code Identical - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      POSTF999
          ENDIF
.
          MOVE      SP70,FMNFSCOD                * check if linked
          PACK      KEY27,XXXXCODE,XXXXSCOD,SP70
          CALL      RSFMNF2
          CALL      RPFMNF2
          CALL      RKFMNF2
          PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            MATCH     SP70,XXXXTCOD
            IF        !@EQUAL
              PACK      KEY27,XXXXCODE,XXXXSCOD,XXXXTCOD,SP70
              UNPACK    KEY27,FMNFCODE,FMNFSCOD,FMNFTCOD
              MOVE      XXXXASEQ,FMNFASEQ
              CALL      WRFMNF2
            ENDIF
          ELSE
            MATCH     SP70,XXXXTCOD
            IF        !@EQUAL
              PACK      KEY27,XXXXCODE,XXXXSCOD,XXXXTCOD,SP70
              UNPACK    KEY27,FMNFCODE,FMNFSCOD,FMNFTCOD
              MOVE      XXXXASEQ,FMNFASEQ
              CALL      UPFMNF2
            ELSE
              PACK      KEY27,FMNFCODE,FMNFSCOD,FMNFTCOD,SP70
              CALL      DEFMNF2
            ENDIF
          ENDIF
.
POSTF999  RETURN
.----------------------------------------------------------------------
. Keyin FMNF
.----------------------------------------------------------------------
KFMNF000
          PACK      FMNFCODE,FMNDCODE,SP70
          PACK      FMLALEDG,FMNDLEDG,SP70
          CALL      KFMNFA00                     * keyin FMNF
          BRANCH    EXIT,KFMNF910,KFMNF950
.
          MOVE      FMNFSCOD,XXXXSCOD
          MOVE      FMNEDESC,XXXXDESC
          MOVE      FMNETLEV,XXXXTLEV
.
          MOVE      SP70,FMNFSCOD                * check if linked
          PACK      KEY27,FMNDCODE,XXXXSCOD,SP70
          CALL      RSFMNF2
          CALL      RPFMNF2
          CALL      RKFMNF2
          PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            UNPACK    SP70,XXXXTCOD,XXXXASEQ
            UNPACK    SP70,FMNBDESC,FMNBPRTC,FMNBTLEV
            MOVE      ONE,ACCEPT
          ELSE
            MOVE      FMNFTCOD,XXXXTCOD
            MOVE      FMNFASEQ,XXXXASEQ
            MOVE      FMNFTCOD,FMNFSCOD
            CALL      REDITD000
            MOVE      ZERO,ACCEPT
          ENDIF
.
.
KFMNF900  MOVE      ZERO,EXIT
          MOVE      ACCEPT,OVRCD
          GOTO      KFMNF999
.
KFMNF910  MOVE      ONE,EXIT
          CALL      CANCB000
          GOTO      KFMNF999
.
KFMNF950  MOVE      TWO,EXIT
          CALL      CANCB000
.
KFMNF999  RETURN
.----------------------------------------------------------------------
. Keyin Parent
.----------------------------------------------------------------------
KPARD000
          PACK      FMNECODE,FMNDCODE,SP70
          CALL      KFMNEA00                     * keyin FMNE
          BRANCH    EXIT,KPARD910,KPARD950
.
          PACK      XXXXTCOD,FMNETCOD,SP70
          MATCH     FMNETLEV,XXXXTLEV            * check level
          IF        !@LESS
            BEEP
            CLEAR     DISPMSG
            APPEND    "Must have a Higher Level than Sub Subjective ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      KPARD000
          ENDIF
.
KPARD900  MOVE      ZERO,EXIT
          GOTO      KPARD999
.
KPARD910  BRANCH    ACCEPT,KPARD950              * quit if in accept mode
          MOVE      ONE,EXIT
          UNPACK    SP70,XXXXTCOD,FMNETCOD,FMNEDESC,FMNETLEV,FMNEPRTC
          GOTO      KPARD999
.
KPARD950  MOVE      TWO,EXIT
.
KPARD999  RETURN
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
.********************************************************************
. POSTG - Post data for FMNA                         Called by ML
. Requires IBACODFD/INC IBAPRNFD/INC
.          IBAIOCOD/INC IBAIOPRN/INC IBAPRINT
.  Note : already includes IBAPASFD & IBAPASIO
.********************************************************************
POSTG000
          PACK      DISPMSG,SP70,SP70       * save line 24
          CALL      MESSAGE2
.
          MATCH     FROMTEMP,TOTEMP         * check range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Range - ";
            CALL      HITENTER
            GOTO      POSTG999
          ENDIF
.
          OPEN      IBACODE1,"ibacodef"     * open files
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
.
          CLOSE     SCRSBGA1                * close files to stop "S*O 024"
          CLOSE     SCRPSTA1
.
          CALL      OPNPRINT                * open spool file
.
          OPEN      SCRSBGA1,"scrsbgaf"     * re-open files
          OPEN      SCRPSTA1,"scrpstaf"
.
          DISPLAY   *P1:24,"Printing :   ";
          MOVE      ZERO,CPAGENO            * reset page no.
          CLOCK     TIME,CTIMEIS            * get current time
          MOVE      "599",CLNO              * init last line number
          PACK      SKEY3,SP70
.
          PACK      KEY3,FROMTEMP,SP70      * Cost Centre Template Loop
          CALL      RSFMNA1
          CALL      RPFMNA1
.
POSTG010
          CALL      RKFMNA1
          BRANCH    OVRCD,POSTG910
          MATCH     FMNACODE,TOTEMP
          GOTO      POSTG910 IF LESS
          DISPLAY   *P12:24,*V2LON,FMNACODE,*EL;
.
          PACK      KEY3,FMNACODE,SP70      * lock Cost Centre Template
          REPEAT
            CALL      RLFMNA1
            BRANCH    OVRCD,POSTG900
            IF        OVRCD=2
              BEEP
              KEYIN     *P1:24,*EL,"Cost Centre Template ":
                        *DV,KEY3," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      POSTG900 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          CALL      GENRC000                * print data
.
POSTG900
          PACK      KEY3,FMNACODE,SP70      * unlock template
          CALL      RDFMNA1
          CALL      UUFMNA1
.
          GOTO      POSTG010
.
POSTG910  COMPARE   ZERO,CPAGENO
          CALL      HEAG0000 IF EQUAL       * print head if nothing printed
          CALL      UND132                  * print line
          PRINT     "****   End of Report   ****"
          CALL      SELPRINT
.
          CALL      CLSPRINT                * close spool file
          CLOSE     IBACODE1                * close files
...       CLOSE     IBAPRNT1
.
          CALL      MESSAGE3                * restore line 24
          MOVE      ZERO,EXIT               * 0=printed ok
          GOTO      POSTG999
.
POSTG950  MOVE      ONE,EXIT                * not printed
.
POSTG999  RETURN
.********************************************************************
. HEAG - print report                               Called by REPK
.         Requires : FROMLAB,TOLAB   (print range display labels)
.                    FROMCODE,TOCODE (print range)
.********************************************************************
HEAG0000  CALL      HEAD132                      * print heading
.
          ADD       "4",CLNO
          PRINT     *40,"Print Cost Centre Template ":
                    *N,*40,"From : ",FROMLAB,SP2,FROMDESC:
                    *N,*40,"To   : ",TOLAB,SP2,TODESC:
                    *N,"Template : ",FMNACODE,SP2,FMNADESC
          CALL      UND132                       * print line
          ADD       "1",CLNO
          PRINT     "           Cost Centre                     ":
                    "                         Seq    Print Code   ":
                    "             Level    Adds To "
          CALL      UND132                       * print line
.
HEAG9999  RETURN
.********************************************************************
. WRIG - print data line                            Called by REPK
.********************************************************************
WRIG0000
          MATCH     SKEY3,FMNACODE
          IF        !@EQUAL
            PACK      SKEY3,FMNACODE,SP70
            ADD       "599",CLNO
          ENDIF
.
          COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAG0000 IF NOT LESS         * start new page
.
          UNPACK    SFMSB,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD
.
          UNPACK    SP70,FMCCDESC,FMNBPRTC,FMNBTLEV
          MOVE      "000",FMNBTLEV
          PACK      KEY14,FMNALEDG,FMNCTCOD,SP70
          CALL      RDFMCC1
          PACK      FMNBDESC,FMCCDESC,SP70
          PACK      KEY15,FMNCCODE,FMNCTCOD,SP70
          CALL      RDFMNB1
.
          UNPACK    SP70,FMPRDESC,FMPRPT1B,FMPRPT2B,FMPRPT3B
          UNPACK    SP70,FMPRPT1A,FMPRPT2A,FMPRPT3A,FMPRUNDC
          MOVE      ZERO,FMPRUNDL
          MOVE      ZERO,FMPRBLIN
          MOVE      ZERO,FMPRALIN
          MOVE      ZERO,FMPRBOLD
          MOVE      ZERO,FMPRSUPP
          PACK      KEY3,FMNBPRTC,SP70
          CALL      RDFMPR1
.
          PACK      VAR,FMNCTCOD,SP2,FMNBDESC,SP2,SEQFMSB,SP5:
                    FMNBPRTC,SP2,FMPRDESC,SP2,FMNBTLEV,SP5
.
          SUB       ONE,DEPFMSB                  * depth = depth - 1
          MOVE      SP70,SFMSB
          LOAD      SFMSB,DEPFMSB,SFMSB01,SFMSB02,SFMSB03,SFMSB04,SFMSB05:
                                  SFMSB06,SFMSB07,SFMSB08,SFMSB09,SFMSB10:
                                  SFMSB11,SFMSB12,SFMSB13,SFMSB14,SFMSB15:
                                  SFMSB16,SFMSB17,SFMSB18,SFMSB19,SFMSB20:
                                  SFMSB21,SFMSB22,SFMSB23,SFMSB24,SFMSB25:
                                  SFMSB26,SFMSB27,SFMSB28,SFMSB29,SFMSB30
          UNPACK    SFMSB,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD
          PACK      VAR,VAR,FMNCTCOD
.
          CALL     PGEG0000            * Print Before Routine
          CALL     PROG0000
          CALL     PAFG0000            * Print After Routine
.
WRIG9999  RETURN
.**********************************************************************
. Print a line
.**********************************************************************
PROG0000  MOVE      FMPRBOLD,F1            * increment bolding indicator
          ADD       ONE,F1                 * increment bolding indicator
.
PROG0050  PRINT     *12,*+,VAR;
.
PROG0900
          SUB       ONE,F1            * decrement bolding indicator
          BRANCH    F1,PROG0050       * repeat print for bolding ?
.
PROG1000  PRINT     SP1
          ADD       ONE,CLNO
.
PROG9999  RETURN
.
.**********************************************************************
. Print Before Print Code Options
.**********************************************************************
PGEG0000  COMPARE   "0",FMPRBLIN
          GOTO      PGEG2000 IF EQUAL       * No Before Lines
.
          COMPARE   "9",FMPRBLIN
          GOTO      PGEG1000 IF EQUAL       * New Page ?
.
PGEG0500  COMPARE   "1",FMPRBLIN
          GOTO      PGEG2000 IF LESS        * print blank line ?
.
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      PGEG1000 IF NOT LESS    * page full
          PRINT     SP1
          SUB       ONE,FMPRBLIN
          GOTO      PGEG0500
.
PGEG1000  CALL      HEAG0000
.
PGEG2000
.
PGEG9999  RETURN
.
.**********************************************************************
. Print After Print Code Options
.**********************************************************************
PAFG0000
          COMPARE   "1",FMPRUNDL
          CALL      UNDG0000 IF EQUAL       * print underline ?
.
          COMPARE   "0",FMPRALIN
          GOTO      PAFG9999 IF EQUAL       * Print Any After Blank Lines (No)
.
          COMPARE   "9",FMPRALIN
          GOTO      PAFG1000 IF EQUAL       * Print New Page
.
PAFG0500  COMPARE   "1",FMPRALIN
          GOTO      PAFG9999 IF LESS        * print blank line ?
.
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      PAFG1000 IF NOT LESS    * page full
          PRINT     SP1
          SUB       ONE,FMPRALIN
          GOTO      PAFG0500
.
PAFG1000  CALL      HEAG0000
.
.
PAFG9999  RETURN
.**********************************************************************
. Print Draft Underline (If Required)
.**********************************************************************
UNDG0000
          PRINT     *12,"------------------------------------------------------"
.
UNDG9999  RETURN
.**********************************************************************
. GENRC - generate cost centre                        Called By PRNT
.**********************************************************************
GENRC000
          UNPACK    SP70,SFMSB01,SFMSB02         * clear save keys
          UNPACK    SP70,SFMSB03,SFMSB04
          UNPACK    SP70,SFMSB05,SFMSB06
          UNPACK    SP70,SFMSB07,SFMSB08
          UNPACK    SP70,SFMSB09,SFMSB10
          UNPACK    SP70,SFMSB11,SFMSB12
          UNPACK    SP70,SFMSB13,SFMSB14
          UNPACK    SP70,SFMSB15,SFMSB16
          UNPACK    SP70,SFMSB17,SFMSB18
          UNPACK    SP70,SFMSB19,SFMSB20
          UNPACK    SP70,SFMSB21,SFMSB22
          UNPACK    SP70,SFMSB23,SFMSB24
          UNPACK    SP70,SFMSB25,SFMSB26
          UNPACK    SP70,SFMSB27,SFMSB28
          UNPACK    SP70,SFMSB29,SFMSB30
.
          PACK      KEY18,FMNACODE,Z70           * get item with highest level
          CALL      RSFMNB2
          CALL      RPFMNB2
          BRANCH    OVRCD,GENRC999
.
          PACK      SFMSB,FMNBCODE,FMNBTCOD,SP70 * store current key
          MOVE      ONE,DEPFMSB                  * depth = 1
          MOVE      ZERO,SEQFMSB                 * sequence = 1
.
.---- process loop ----
.
GENRC100
          COMPARE   DEPFMSB,ZERO                 * while depth > 0
          GOTO      GENRC999 IF NOT LESS
.
          PACK      KEY32,SFMSB,SP70             * get next sub-item
          CALL      RSFMNC1
          CALL      RKFMNC1
          BRANCH    OVRCD,GENRC200
          PACK      KEY15,FMNCCODE,FMNCTCOD,SP70
          MATCH     KEY32,KEY15
          GOTO      GENRC200 IF NOT EQUAL
.
          CALL      RDFMNB1                      * make sure account exists
          BRANCH    OVRCD,GENRC100
.
.---- there is a next sub item ----
.
.                                                * save current key
          PACK      SFMSB,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD,SP70
          STORE     SFMSB,DEPFMSB,SFMSB01,SFMSB02,SFMSB03,SFMSB04,SFMSB05:
                                  SFMSB06,SFMSB07,SFMSB08,SFMSB09,SFMSB10:
                                  SFMSB11,SFMSB12,SFMSB13,SFMSB14,SFMSB15:
                                  SFMSB16,SFMSB17,SFMSB18,SFMSB19,SFMSB20:
                                  SFMSB21,SFMSB22,SFMSB23,SFMSB24,SFMSB25:
                                  SFMSB26,SFMSB27,SFMSB28,SFMSB29,SFMSB30
.
          ADD       ONE,DEPFMSB                  * depth = depth + 1
          PACK      SFMSB,FMNCCODE,FMNCSCOD,SP70
          GOTO      GENRC100
.
.---- there is no next sub item ----
.
GENRC200
          ADD       ONE,SEQFMSB                  * sequence = sequence + 1
          DISPLAY   *P1:24,*EL,*P50:24,"Processing : ":
                    *V2LON,SEQFMSB,"-",SFMSB,*EL;
.
          CALL      WRIG0000                     * print data
.
          GOTO      GENRC100
.
GENRC999  RETURN
.----------------------------------------------------------------------
. Keyin from code (FMNA)
.----------------------------------------------------------------------
KCOSF000
          DISPLAY   *PCCOL:CVERT,SP5;
          CALL      KFMNAA00                     * keyin FMNA
          BRANCH    EXIT,KCOSF100,KCOSF950
.
          UNPACK    SP70,FMNADESC,FMNALEDG
          PACK      KEY3,FMNACODE,SP70
          CALL      RDFMNA1
.
          PACK      FROMLAB,FMNACODE,SP70
          PACK      FROMTEMP,FMNACODE,SP70
          PACK      FROMDESC,FMNADESC,SP70
          GOTO      KCOSF900
.
KCOSF100
          MATCH     "09",SCRID
          GOTO      KCOSF000 IF EQUAL
.
          PACK      FROMLAB,START,SP70
          PACK      FROMTEMP,SP70
          PACK      FROMDESC,SP70
.
KCOSF900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KCOSF999
.
KCOSF950  MOVE      TWO,EXIT                     * quit screen
.
KCOSF999  RETURN
.----------------------------------------------------------------------
. Keyin to code (FMNA)
.----------------------------------------------------------------------
KCOST000
          CALL      KFMNAA00                     * keyin FMNA
          BRANCH    EXIT,KCOST100,KCOST950
.
          UNPACK    SP70,FMNADESC,FMNALEDG
          PACK      KEY3,FMNACODE,SP70
          CALL      RDFMNA1
.
          PACK      TOLAB,FMNACODE,SP70
          PACK      TOTEMP,FMNACODE,SP70
          PACK      TODESC,FMNADESC,SP70
          GOTO      KCOST900
.
KCOST100
          MATCH     "09",SCRID
          GOTO      KCOST000 IF EQUAL
.
          PACK      TOLAB,END,SP70
          PACK      TOTEMP,Z70
          PACK      TODESC,SP70
.
KCOST900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KCOST999
.
KCOST950  MOVE      TWO,EXIT                     * quit screen
.
KCOST999  RETURN
.********************************************************************
. POSTH - Post data for FMND                         Called by ML
. Requires IBACODFD/INC IBAPRNFD/INC
.          IBAIOCOD/INC IBAIOPRN/INC IBAPRINT
.  Note : already includes IBAPASFD & IBAPASIO
.********************************************************************
POSTH000
          PACK      DISPMSG,SP70,SP70       * save line 24
          CALL      MESSAGE2
.
          MATCH     FROMTEMP,TOTEMP         * check range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Range - ";
            CALL      HITENTER
            GOTO      POSTH999
          ENDIF
.
          OPEN      IBACODE1,"ibacodef"     * open files
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
.
          CLOSE     SCRSBGA1                * close files to stop "S*O 024"
          CLOSE     SCRPSTA1
.
          CALL      OPNPRINT                * open spool file
.
          OPEN      SCRSBGA1,"scrsbgaf"     * re-open files
          OPEN      SCRPSTA1,"scrpstaf"
.
          DISPLAY   *P1:24,"Printing :   ";
          MOVE      ZERO,CPAGENO            * reset page no.
          CLOCK     TIME,CTIMEIS            * get current time
          MOVE      "599",CLNO              * init last line number
          PACK      SKEY3,SP70
.
          PACK      KEY3,FROMTEMP,SP70      * Subjective Template Loop
          CALL      RSFMND1
          CALL      RPFMND1
.
POSTH010
          CALL      RKFMND1
          BRANCH    OVRCD,POSTH910
          MATCH     FMNDCODE,TOTEMP
          GOTO      POSTH910 IF LESS
          DISPLAY   *P12:24,*V2LON,FMNDCODE,*EL;
.
          PACK      KEY3,FMNDCODE,SP70      * lock Subjective Template
          REPEAT
            CALL      RLFMND1
            BRANCH    OVRCD,POSTH900
            IF        OVRCD=2
              BEEP
              KEYIN     *P1:24,*EL,"Subjective Template ":
                        *DV,KEY3," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      POSTH900 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          CALL      GENRS000                * print data
.
POSTH900
          PACK      KEY3,FMNDCODE,SP70      * unlock template
          CALL      RDFMND1
          CALL      UUFMND1
.
          GOTO      POSTH010
.
POSTH910  COMPARE   ZERO,CPAGENO
          CALL      HEAH0000 IF EQUAL       * print head if nothing printed
          CALL      UND132                  * print line
          PRINT     "****   End of Report   ****"
          CALL      SELPRINT
.
          CALL      CLSPRINT                * close spool file
          CLOSE     IBACODE1                * close files
...       CLOSE     IBAPRNT1
.
          CALL      MESSAGE3                * restore line 24
          MOVE      ZERO,EXIT               * 0=printed ok
          GOTO      POSTH999
.
POSTH950  MOVE      ONE,EXIT                * not printed
.
POSTH999  RETURN
.********************************************************************
. HEAH - print report                               Called by REPK
.         Requires : FROMLAB,TOLAB   (print range display labels)
.                    FROMCODE,TOCODE (print range)
.********************************************************************
HEAH0000  CALL      HEAD132                      * print heading
.
          ADD       "4",CLNO
          PRINT     *40,"Print Subjective Template ":
                    *N,*40,"From : ",FROMLAB,SP2,FROMDESC:
                    *N,*40,"To   : ",TOLAB,SP2,TODESC:
                    *N,"Template : ",FMNDCODE,SP2,FMNDDESC
          CALL      UND132                       * print line
          ADD       "1",CLNO
          PRINT     "           Subjective                      ":
                    "                         Seq    Print Code   ":
                    "             Level    Adds To "
          CALL      UND132                       * print line
.
HEAH9999  RETURN
.********************************************************************
. WRIH - print data line                            Called by REPK
.********************************************************************
WRIH0000
          MATCH     SKEY3,FMNDCODE
          IF        !@EQUAL
            PACK      SKEY3,FMNDCODE,SP70
            ADD       "599",CLNO
          ENDIF
.
          COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAH0000 IF NOT LESS         * start new page
.
          UNPACK    SFMSE,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD
.
          UNPACK    SP70,FMSADESC,FMNEPRTC,FMNETLEV
          MOVE      "000",FMNETLEV
          PACK      KEY14,FMNDLEDG,FMNFTCOD,SP70
          CALL      RDFMSA1
          PACK      FMNEDESC,FMSADESC,SP70
          PACK      KEY15,FMNFCODE,FMNFTCOD,SP70
          CALL      RDFMNE1
.
          UNPACK    SP70,FMPRDESC,FMPRPT1B,FMPRPT2B,FMPRPT3B
          UNPACK    SP70,FMPRPT1A,FMPRPT2A,FMPRPT3A,FMPRUNDC
          MOVE      ZERO,FMPRUNDL
          MOVE      ZERO,FMPRBLIN
          MOVE      ZERO,FMPRALIN
          MOVE      ZERO,FMPRBOLD
          MOVE      ZERO,FMPRSUPP
          PACK      KEY3,FMNEPRTC,SP70
          CALL      RDFMPR1
.
          PACK      VAR,FMNFTCOD,SP2,FMNEDESC,SP2,SEQFMSE,SP5:
                    FMNEPRTC,SP2,FMPRDESC,SP2,FMNETLEV,SP5
.
          SUB       ONE,DEPFMSE                  * depth = depth - 1
          MOVE      SP70,SFMSE
          LOAD      SFMSE,DEPFMSE,SFMSE01,SFMSE02,SFMSE03,SFMSE04,SFMSE05:
                                  SFMSE06,SFMSE07,SFMSE08,SFMSE09,SFMSE10:
                                  SFMSE11,SFMSE12,SFMSE13,SFMSE14,SFMSE15:
                                  SFMSE16,SFMSE17,SFMSE18,SFMSE19,SFMSE20:
                                  SFMSE21,SFMSE22,SFMSE23,SFMSE24,SFMSE25:
                                  SFMSE26,SFMSE27,SFMSE28,SFMSE29,SFMSE30
          UNPACK    SFMSE,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD
          PACK      VAR,VAR,FMNFTCOD
.
          CALL     PBEH0000            * Print Before Routine
          CALL     PROH0000
          CALL     PAFH0000            * Print After Routine
.
WRIH9999  RETURN
.**********************************************************************
. Print a line
.**********************************************************************
PROH0000  MOVE      FMPRBOLD,F1            * increment bolding indicator
          ADD       ONE,F1                 * increment bolding indicator
.
PROH0050  PRINT     *12,*+,VAR;
.
PROH0900
          SUB       ONE,F1            * decrement bolding indicator
          BRANCH    F1,PROH0050       * repeat print for bolding ?
.
PROH1000  PRINT     SP1
          ADD       ONE,CLNO
.
PROH9999  RETURN
.
.**********************************************************************
. Print Before Print Code Options
.**********************************************************************
PBEH0000  COMPARE   "0",FMPRBLIN
          GOTO      PBEH2000 IF EQUAL       * No Before Lines
.
          COMPARE   "9",FMPRBLIN
          GOTO      PBEH1000 IF EQUAL       * New Page ?
.
PBEH0500  COMPARE   "1",FMPRBLIN
          GOTO      PBEH2000 IF LESS        * print blank line ?
.
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      PBEH1000 IF NOT LESS    * page full
          PRINT     SP1
          SUB       ONE,FMPRBLIN
          GOTO      PBEH0500
.
PBEH1000  CALL      HEAH0000
.
PBEH2000
.
PBEH9999  RETURN
.
.**********************************************************************
. Print After Print Code Options
.**********************************************************************
PAFH0000
          COMPARE   "1",FMPRUNDL
          CALL      UNDH0000 IF EQUAL       * print underline ?
.
          COMPARE   "0",FMPRALIN
          GOTO      PAFH9999 IF EQUAL       * Print Any After Blank Lines (No)
.
          COMPARE   "9",FMPRALIN
          GOTO      PAFH1000 IF EQUAL       * Print New Page
.
PAFH0500  COMPARE   "1",FMPRALIN
          GOTO      PAFH9999 IF LESS        * print blank line ?
.
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      PAFH1000 IF NOT LESS    * page full
          PRINT     SP1
          SUB       ONE,FMPRALIN
          GOTO      PAFH0500
.
PAFH1000  CALL      HEAH0000
.
.
PAFH9999  RETURN
.**********************************************************************
. Print Draft Underline (If Required)
.**********************************************************************
UNDH0000
          PRINT     *12,"------------------------------------------------------"
.
UNDH9999  RETURN
.**********************************************************************
. GENRS - generate Subjective                        Called By PRNT
.**********************************************************************
GENRS000
          UNPACK    SP70,SFMSE01,SFMSE02         * clear save keys
          UNPACK    SP70,SFMSE03,SFMSE04
          UNPACK    SP70,SFMSE05,SFMSE06
          UNPACK    SP70,SFMSE07,SFMSE08
          UNPACK    SP70,SFMSE09,SFMSE10
          UNPACK    SP70,SFMSE11,SFMSE12
          UNPACK    SP70,SFMSE13,SFMSE14
          UNPACK    SP70,SFMSE15,SFMSE16
          UNPACK    SP70,SFMSE17,SFMSE18
          UNPACK    SP70,SFMSE19,SFMSE20
          UNPACK    SP70,SFMSE21,SFMSE22
          UNPACK    SP70,SFMSE23,SFMSE24
          UNPACK    SP70,SFMSE25,SFMSE26
          UNPACK    SP70,SFMSE27,SFMSE28
          UNPACK    SP70,SFMSE29,SFMSE30
.
          PACK      KEY18,FMNDCODE,Z70           * get item with highest level
          CALL      RSFMNE2
          CALL      RPFMNE2
          BRANCH    OVRCD,GENRS999
.
          PACK      SFMSE,FMNECODE,FMNETCOD,SP70 * store current key
          MOVE      ONE,DEPFMSE                  * depth = 1
          MOVE      ZERO,SEQFMSE                 * sequence = 1
.
.---- process loop ----
.
GENRS100
          COMPARE   DEPFMSE,ZERO                 * while depth > 0
          GOTO      GENRS999 IF NOT LESS
.
          PACK      KEY32,SFMSE,SP70             * get next sub-item
          CALL      RSFMNF1
          CALL      RKFMNF1
          BRANCH    OVRCD,GENRS200
          PACK      KEY15,FMNFCODE,FMNFTCOD,SP70
          MATCH     KEY32,KEY15
          GOTO      GENRS200 IF NOT EQUAL
.
          CALL      RDFMNE1                      * make sure account exists
          BRANCH    OVRCD,GENRS100
.
.---- there is a next sub item ----
.
.                                                * save current key
          PACK      SFMSE,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD,SP70
          STORE     SFMSE,DEPFMSE,SFMSE01,SFMSE02,SFMSE03,SFMSE04,SFMSE05:
                                  SFMSE06,SFMSE07,SFMSE08,SFMSE09,SFMSE10:
                                  SFMSE11,SFMSE12,SFMSE13,SFMSE14,SFMSE15:
                                  SFMSE16,SFMSE17,SFMSE18,SFMSE19,SFMSE20:
                                  SFMSE21,SFMSE22,SFMSE23,SFMSE24,SFMSE25:
                                  SFMSE26,SFMSE27,SFMSE28,SFMSE29,SFMSE30
.
          ADD       ONE,DEPFMSE                  * depth = depth + 1
          PACK      SFMSE,FMNFCODE,FMNFSCOD,SP70
          GOTO      GENRS100
.
.---- there is no next sub item ----
.
GENRS200
          ADD       ONE,SEQFMSE                  * sequence = sequence + 1
          DISPLAY   *P1:24,*EL,*P50:24,"Processing : ":
                    *V2LON,SEQFMSE,"-",SFMSE,*EL;
.
          CALL      WRIH0000                     * print data
.
          GOTO      GENRS100
.
GENRS999  RETURN
.----------------------------------------------------------------------
. Keyin from code (FMND)
.----------------------------------------------------------------------
KSUBF000
          DISPLAY   *PCCOL:CVERT,SP5;
          CALL      KFMNDA00                     * keyin FMND
          BRANCH    EXIT,KSUBF100,KSUBF950
.
          UNPACK    SP70,FMNDDESC,FMNDLEDG
          PACK      KEY3,FMNDCODE,SP70
          CALL      RDFMND1
.
          PACK      FROMLAB,FMNDCODE,SP70
          PACK      FROMTEMP,FMNDCODE,SP70
          PACK      FROMDESC,FMNDDESC,SP70
          GOTO      KSUBF900
.
KSUBF100
          MATCH     "10",SCRID
          GOTO      KSUBF000 IF EQUAL
.
          PACK      FROMLAB,START,SP70
          PACK      FROMTEMP,SP70
          PACK      FROMDESC,SP70
.
KSUBF900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KSUBF999
.
KSUBF950  MOVE      TWO,EXIT                     * quit screen
.
KSUBF999  RETURN
.----------------------------------------------------------------------
. Keyin to code (FMND)
.----------------------------------------------------------------------
KSUBT000
          CALL      KFMNDA00                     * keyin FMND
          BRANCH    EXIT,KSUBT100,KSUBT950
.
          UNPACK    SP70,FMNDDESC,FMNDLEDG
          PACK      KEY3,FMNDCODE,SP70
          CALL      RDFMND1
.
          PACK      TOLAB,FMNDCODE,SP70
          PACK      TOTEMP,FMNDCODE,SP70
          PACK      TODESC,FMNDDESC,SP70
          GOTO      KSUBT900
.
KSUBT100
          MATCH     "10",SCRID
          GOTO      KSUBT000 IF EQUAL
.
          PACK      TOLAB,END,SP70
          PACK      TOTEMP,Z70
          PACK      TODESC,SP70
.
KSUBT900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KSUBT999
.
KSUBT950  MOVE      TWO,EXIT                     * quit screen
.
KSUBT999  RETURN
.********************************************************************
. POSTI - Post data for FMNA                         Called by ML
.********************************************************************
POSTI000
          PACK      KEY3,FROMTEMP,SP70      * lock Cost Centre Template
          REPEAT
            CALL      RLFMNA1
            BRANCH    OVRCD,POSTI999
            IF        OVRCD=2
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              BEEP
              KEYIN     *P1:24,*EL,"Cost Centre Template ":
                        *DV,KEY3," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              CALL      MESSAGE3
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      POSTI999 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          PACK      KEY3,TOTEMP,SP70        * write new Cost Centre Template
          UNPACK    KEY3,FMNACODE
          CALL      RDFMNA1
          IF        OVRCD=1
            CALL      WRFMNA1
            CALL      RLFMNA1
          ELSE
            GOTO      POSTI900
          ENDIF
.
          PACK      KEY15,FROMTEMP,SP70
.
POSTI100
          CALL      RSFMNB1
          CALL      RKFMNB1
          BRANCH    OVRCD,POSTI200
          PACK      KEY15,FMNBCODE,FMNBTCOD,SP70
          MATCH     FROMTEMP,KEY15
          GOTO      POSTI200 IF NOT EQUAL
.
          MOVE      TOTEMP,FMNBCODE
          CALL      WRFMNB1
          GOTO      POSTI100
.
POSTI200
          PACK      KEY32,FROMTEMP,SP70
.
POSTI300
          CALL      RSFMNC1
          CALL      RKFMNC1
          BRANCH    OVRCD,POSTI400
          PACK      KEY32,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD,SP70
          MATCH     FROMTEMP,KEY32
          GOTO      POSTI400 IF NOT EQUAL
.
          MOVE      TOTEMP,FMNCCODE
          CALL      WRFMNC1
          GOTO      POSTI300
.
POSTI400
.
POSTI900
          PACK      KEY3,FROMTEMP,SP70           * unlock from template
          CALL      RDFMNA1
          CALL      UUFMNA1
.
          PACK      KEY3,TOTEMP,SP70             * unlock to template
          CALL      RDFMNA1
          CALL      UUFMNA1
.
POSTI999  RETURN
.********************************************************************
. POSTJ - Post data for FMND                         Called by ML
.********************************************************************
POSTJ000
          PACK      KEY3,FROMTEMP,SP70      * lock Subjective Template
          REPEAT
            CALL      RLFMND1
            BRANCH    OVRCD,POSTJ999
            IF        OVRCD=2
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              BEEP
              KEYIN     *P1:24,*EL,"Subjective Template ":
                        *DV,KEY3," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              CALL      MESSAGE3
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      POSTJ999 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          PACK      KEY3,TOTEMP,SP70        * write new Subjective Template
          UNPACK    KEY3,FMNDCODE
          CALL      RDFMND1
          IF        OVRCD=1
            CALL      WRFMND1
            CALL      RLFMND1
          ELSE
            GOTO      POSTJ900
          ENDIF
.
          PACK      KEY15,FROMTEMP,SP70
.
POSTJ100
          CALL      RSFMNE1
          CALL      RKFMNE1
          BRANCH    OVRCD,POSTJ200
          PACK      KEY15,FMNECODE,FMNETCOD,SP70
          MATCH     FROMTEMP,KEY15
          GOTO      POSTJ200 IF NOT EQUAL
.
          MOVE      TOTEMP,FMNECODE
          CALL      WRFMNE1
          GOTO      POSTJ100
.
POSTJ200
          PACK      KEY32,FROMTEMP,SP70
.
POSTJ300
          CALL      RSFMNF1
          CALL      RKFMNF1
          BRANCH    OVRCD,POSTJ400
          PACK      KEY32,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD,SP70
          MATCH     FROMTEMP,KEY32
          GOTO      POSTJ400 IF NOT EQUAL
.
          MOVE      TOTEMP,FMNFCODE
          CALL      WRFMNF1
          GOTO      POSTJ300
.
POSTJ400
.
POSTJ900
          PACK      KEY3,FROMTEMP,SP70           * unlock from template
          CALL      RDFMND1
          CALL      UUFMND1
.
          PACK      KEY3,TOTEMP,SP70             * unlock to template
          CALL      RDFMND1
          CALL      UUFMND1
.
POSTJ999  RETURN
.********************************************************************
. POSTK - Post data for FMNA                         Called by ML
. Requires IBACODFD/INC IBAPRNFD/INC
.          IBAIOCOD/INC IBAIOPRN/INC IBAPRINT
.  Note : already includes IBAPASFD & IBAPASIO
.********************************************************************
POSTK000
          SFORMAT   VAR,127
          PACK      DISPMSG,SP70,SP70       * save line 24
          CALL      MESSAGE2
.
          MATCH     FROMTEMP,TOTEMP         * check range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Range - ";
            CALL      HITENTER
            GOTO      POSTK999
          ENDIF
.
          OPEN      IBACODE1,"ibacodef"     * open files
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
.
          CLOSE     SCRSBGA1                * close files to stop "S*O 024"
          CLOSE     SCRPSTA1
.
          CALL      OPNPRINT                * open spool file
.
          OPEN      SCRSBGA1,"scrsbgaf"     * re-open files
          OPEN      SCRPSTA1,"scrpstaf"
.
          DISPLAY   *P1:24,"Printing :   ";
          MOVE      ZERO,CPAGENO            * reset page no.
          CLOCK     TIME,CTIMEIS            * get current time
          MOVE      "599",CLNO              * init last line number
          PACK      SKEY3,SP70
.
          PACK      KEY3,FROMTEMP,SP70      * Cost Centre Template Loop
          CALL      RSFMNA1
          CALL      RPFMNA1
.
POSTK010
          CALL      RKFMNA1
          BRANCH    OVRCD,POSTK910
          MATCH     FMNACODE,TOTEMP
          GOTO      POSTK910 IF LESS
          DISPLAY   *P12:24,*V2LON,FMNACODE,*EL;
.
          PACK      KEY3,FMNACODE,SP70      * lock Cost Centre Template
          REPEAT
            CALL      RLFMNA1
            BRANCH    OVRCD,POSTK900
            IF        OVRCD=2
              BEEP
              KEYIN     *P1:24,*EL,"Cost Centre Template ":
                        *DV,KEY3," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      POSTK900 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
          IF        OVRCD=1
            CLEAR     VAR
            APPEND    "Ledger ",VAR
            APPEND    FMNALEDG,VAR
            APPEND    " does not exist ",VAR
            RESET     VAR
            CALL      WRIK0000
          ENDIF
.
          PACK      KEY15,FMNACODE,SP70
          CALL      RSFMNB1
.
POSTK100
          CALL      RKFMNB1
          BRANCH    OVRCD,POSTK200
          PACK      KEY15,FMNBCODE,FMNBTCOD,SP70
          MATCH     FMNACODE,KEY15
          GOTO      POSTK200 IF NOT EQUAL
.
          PACK      KEY14,FMNALEDG,FMNBTCOD,SP70
          CALL      RDFMCC1
          IF        OVRCD=0
            CLEAR     VAR
            APPEND    "GL Cost Centre ",VAR
            APPEND    FMNALEDG,VAR
            APPEND    SLASH,VAR
            APPEND    FMNBTCOD,VAR
            APPEND    " exists as well as Total Cost Centre ",VAR
            RESET     VAR
            CALL      WRIK0000
          ENDIF
.
          MOVE      SP70,FMNCSCOD                * check if linked
          PACK      KEY27,FMNACODE,FMNBTCOD,SP70
          CALL      RSFMNC2
          CALL      RPFMNC2
          CALL      RKFMNC2
          PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            PACK      KEY15,FMNBCODE,FMNBTCOD,SP70
            PACK      KEY18,FMNBCODE,Z70         * get item with highest level
            CALL      RSFMNB2
            CALL      RPFMNB2
            PACK      KEY16,FMNBCODE,FMNBTCOD,SP70
            CALL      RDFMNB1                    * restore old record
.
            MATCH     KEY15,KEY16                * is this the header record ?
            IF        !@EQUAL
              CLEAR     VAR
              APPEND    "WARNING - Total Cost Centre ",VAR
              APPEND    FMNACODE,VAR
              APPEND    SLASH,VAR
              APPEND    FMNBTCOD,VAR
              APPEND    " does not have a Parent ",VAR
              RESET     VAR
              CALL      WRIK0000
            ENDIF
          ENDIF
.
          GOTO      POSTK100
.
POSTK200
          PACK      KEY32,FMNACODE,SP70
          CALL      RSFMNC1
.
POSTK300
          CALL      RKFMNC1
          BRANCH    OVRCD,POSTK400
          PACK      KEY32,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD,SP70
          MATCH     FMNACODE,KEY32
          GOTO      POSTK400 IF NOT EQUAL
.
          MOVE      "000",FMNBTLEV
          PACK      KEY14,FMNALEDG,FMNCSCOD,SP70
          CALL      RDFMCC1
          IF        OVRCD=1
            PACK      KEY15,FMNACODE,FMNCSCOD,SP70
            CALL      RDFMNB1
            IF        OVRCD=1
              CLEAR     VAR
              APPEND    "Cost Centre ",VAR
              APPEND    FMNCSCOD,VAR
              APPEND    " does not exist but has Parent ",VAR
              APPEND    FMNCTCOD,VAR
              RESET     VAR
              CALL      WRIK0000
            ENDIF
          ENDIF
          PACK      XXXXTLEV,FMNBTLEV,SP70
.
          PACK      KEY15,FMNACODE,FMNCTCOD,SP70
          CALL      RDFMNB1
          IF        OVRCD=1
            CLEAR     VAR
            APPEND    "Total Cost Centre ",VAR
            APPEND    FMNCTCOD,VAR
            APPEND    " does not exist but has Child ",VAR
            APPEND    FMNCSCOD,VAR
            RESET     VAR
            CALL      WRIK0000
          ELSE
            MATCH     FMNBTLEV,XXXXTLEV
            IF        !@LESS
              CLEAR     VAR
              APPEND    "Total Cost Centre ",VAR
              APPEND    FMNCTCOD,VAR
              APPEND    " does not have a higher level than ",VAR
              APPEND    FMNCSCOD,VAR
              RESET     VAR
              CALL      WRIK0000
            ENDIF
          ENDIF
.
          GOTO      POSTK300
.
POSTK400
          PACK      KEY14,FMNALEDG,SP70
          CALL      RSFMCC1
.
POSTK500
          CALL      RKFMCC1
          BRANCH    OVRCD,POSTK600
          PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
          MATCH     FMNALEDG,KEY14
          GOTO      POSTK600 IF NOT EQUAL
.
          MOVE      SP70,FMNCSCOD                * check if linked
          PACK      KEY27,FMNACODE,FMCCCOCE,SP70
          CALL      RSFMNC2
          CALL      RPFMNC2
          CALL      RKFMNC2
          PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            CLEAR     VAR
            APPEND    "GL Cost Centre ",VAR
            APPEND    FMCCLEDG,VAR
            APPEND    SLASH,VAR
            APPEND    FMCCCOCE,VAR
            APPEND    " not linked ",VAR
            RESET     VAR
            CALL      WRIK0000
          ENDIF
.
          GOTO      POSTK500
.
POSTK600
.
POSTK900
          PACK      KEY3,FMNACODE,SP70      * unlock template
          CALL      RDFMNA1
          CALL      UUFMNA1
.
          GOTO      POSTK010
.
POSTK910  COMPARE   ZERO,CPAGENO
          CALL      HEAK0000 IF EQUAL       * print head if nothing printed
          CALL      UND132                  * print line
          PRINT     "****   End of Report   ****"
          CALL      SELPRINT
.
          CALL      CLSPRINT                * close spool file
          CLOSE     IBACODE1                * close files
...       CLOSE     IBAPRNT1
.
          CALL      MESSAGE3                * restore line 24
          MOVE      ZERO,EXIT               * 0=printed ok
          GOTO      POSTK999
.
POSTK950  MOVE      ONE,EXIT                * not printed
.
POSTK999  RETURN
.********************************************************************
. HEAK - print report                               Called by REPK
.         Requires : FROMLAB,TOLAB   (print range display labels)
.                    FROMCODE,TOCODE (print range)
.********************************************************************
HEAK0000  CALL      HEAD132                      * print heading
.
          ADD       "3",CLNO
          PRINT     *40,"Print Cost Centre Template Error Report":
                    *N,*40,"From : ",FROMLAB,SP2,FROMDESC:
                    *N,*40,"To   : ",TOLAB,SP2,TODESC
          CALL      UND132                       * print line
          ADD       "1",CLNO
          PRINT     "Template   Error"
          CALL      UND132                       * print line
          MOVE      SP70,SKEY3
.
HEAK9999  RETURN
.********************************************************************
. WRIK - print data line                            Called by REPK
.********************************************************************
WRIK0000
          COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAK0000 IF NOT LESS         * start new page
.
          MATCH     SKEY3,FMNACODE
          IF        !@EQUAL
            PACK      SKEY3,FMNACODE,SP70
            PRINT     *N,FMNACODE,SP2,FMNADESC
            ADD       "2",CLNO
          ENDIF
.
          PRINT     *12,*+,VAR
          ADD       "1",CLNO           * add one to line number
.
WRIK9999  RETURN
.********************************************************************
. POSTL - Post data for FMND                         Called by ML
. Requires IBACODFD/INC IBAPRNFD/INC
.          IBAIOCOD/INC IBAIOPRN/INC IBAPRINT
.  Note : already includes IBAPASFD & IBAPASIO
.********************************************************************
POSTL000
          SFORMAT   VAR,127
          PACK      DISPMSG,SP70,SP70       * save line 24
          CALL      MESSAGE2
.
          MATCH     FROMTEMP,TOTEMP         * check range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Range - ";
            CALL      HITENTER
            GOTO      POSTL999
          ENDIF
.
          OPEN      IBACODE1,"ibacodef"     * open files
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
.
          CLOSE     SCRSBGA1                * close files to stop "S*O 024"
          CLOSE     SCRPSTA1
.
          CALL      OPNPRINT                * open spool file
.
          OPEN      SCRSBGA1,"scrsbgaf"     * re-open files
          OPEN      SCRPSTA1,"scrpstaf"
.
          DISPLAY   *P1:24,"Printing :   ";
          MOVE      ZERO,CPAGENO            * reset page no.
          CLOCK     TIME,CTIMEIS            * get current time
          MOVE      "599",CLNO              * init last line number
          PACK      SKEY3,SP70
.
          PACK      KEY3,FROMTEMP,SP70      * Subjective Template Loop
          CALL      RSFMND1
          CALL      RPFMND1
.
POSTL010
          CALL      RKFMND1
          BRANCH    OVRCD,POSTL910
          MATCH     FMNDCODE,TOTEMP
          GOTO      POSTL910 IF LESS
          DISPLAY   *P12:24,*V2LON,FMNDCODE,*EL;
.
          PACK      KEY3,FMNDCODE,SP70      * lock Subjective Template
          REPEAT
            CALL      RLFMND1
            BRANCH    OVRCD,POSTL900
            IF        OVRCD=2
              BEEP
              KEYIN     *P1:24,*EL,"Subjective Template ":
                        *DV,KEY3," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      POSTL900 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          PACK      KEY2,FMNDLEDG,SP70
          CALL      RDFMLA1
          IF        OVRCD=1
            CLEAR     VAR
            APPEND    "Ledger ",VAR
            APPEND    FMNDLEDG,VAR
            APPEND    " does not exist ",VAR
            RESET     VAR
            CALL      WRIL0000
          ENDIF
.
          PACK      KEY15,FMNDCODE,SP70
          CALL      RSFMNE1
.
POSTL100
          CALL      RKFMNE1
          BRANCH    OVRCD,POSTL200
          PACK      KEY15,FMNECODE,FMNETCOD,SP70
          MATCH     FMNDCODE,KEY15
          GOTO      POSTL200 IF NOT EQUAL
.
          PACK      KEY14,FMNDLEDG,FMNETCOD,SP70
          CALL      RDFMSA1
          IF        OVRCD=0
            CLEAR     VAR
            APPEND    "GL Subjective ",VAR
            APPEND    FMNDLEDG,VAR
            APPEND    SLASH,VAR
            APPEND    FMNETCOD,VAR
            APPEND    " exists as well as Total Subjective ",VAR
            RESET     VAR
            CALL      WRIL0000
          ENDIF
.
          MOVE      SP70,FMNFSCOD                * check if linked
          PACK      KEY27,FMNDCODE,FMNETCOD,SP70
          CALL      RSFMNF2
          CALL      RPFMNF2
          CALL      RKFMNF2
          PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            PACK      KEY15,FMNECODE,FMNETCOD,SP70
            PACK      KEY18,FMNECODE,Z70         * get item with highest level
            CALL      RSFMNE2
            CALL      RPFMNE2
            PACK      KEY16,FMNECODE,FMNETCOD,SP70
            CALL      RDFMNE1                    * restore old record
.
            MATCH     KEY15,KEY16                * is this the header record ?
            IF        !@EQUAL
              CLEAR     VAR
              APPEND    "WARNING - Total Subjective ",VAR
              APPEND    FMNDCODE,VAR
              APPEND    SLASH,VAR
              APPEND    FMNETCOD,VAR
              APPEND    " does not have a Parent ",VAR
              RESET     VAR
              CALL      WRIL0000
            ENDIF
          ENDIF
.
          GOTO      POSTL100
.
POSTL200
          PACK      KEY32,FMNDCODE,SP70
          CALL      RSFMNF1
.
POSTL300
          CALL      RKFMNF1
          BRANCH    OVRCD,POSTL400
          PACK      KEY32,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD,SP70
          MATCH     FMNDCODE,KEY32
          GOTO      POSTL400 IF NOT EQUAL
.
          MOVE      "000",FMNETLEV
          PACK      KEY14,FMNDLEDG,FMNFSCOD,SP70
          CALL      RDFMSA1
          IF        OVRCD=1
            PACK      KEY15,FMNDCODE,FMNFSCOD,SP70
            CALL      RDFMNE1
            IF        OVRCD=1
              CLEAR     VAR
              APPEND    "Subjective ",VAR
              APPEND    FMNFSCOD,VAR
              APPEND    " does not exist but has Parent ",VAR
              APPEND    FMNFTCOD,VAR
              RESET     VAR
              CALL      WRIL0000
            ENDIF
          ELSE
            MOVE      "6",CSUBJIND
            CALL      CKSBA000                   * check if a valid subjective
            IF        OVRCD=1
              CLEAR     VAR
              APPEND    "Subjective ",VAR
              APPEND    FMNFSCOD,VAR
              APPEND    " is an invalid type ",VAR
              APPEND    FMSASTYP,VAR
              RESET     VAR
              CALL      WRIL0000
            ENDIF
          ENDIF
          PACK      XXXXTLEV,FMNETLEV,SP70
.
          PACK      KEY15,FMNDCODE,FMNFTCOD,SP70
          CALL      RDFMNE1
          IF        OVRCD=1
            CLEAR     VAR
            APPEND    "Total Subjective ",VAR
            APPEND    FMNFTCOD,VAR
            APPEND    " does not exist but has Child ",VAR
            APPEND    FMNFSCOD,VAR
            RESET     VAR
            CALL      WRIL0000
          ELSE
            MATCH     FMNETLEV,XXXXTLEV
            IF        !@LESS
              CLEAR     VAR
              APPEND    "Total Subjective ",VAR
              APPEND    FMNFTCOD,VAR
              APPEND    " does not have a higher level than ",VAR
              APPEND    FMNFSCOD,VAR
              RESET     VAR
              CALL      WRIL0000
            ENDIF
          ENDIF
.
          GOTO      POSTL300
.
POSTL400
          PACK      KEY14,FMNDLEDG,SP70
          CALL      RSFMSA1
.
POSTL500
          CALL      RKFMSA1
          BRANCH    OVRCD,POSTL600
          PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          MATCH     FMNDLEDG,KEY14
          GOTO      POSTL600 IF NOT EQUAL
.
          MOVE      "6",CSUBJIND
          CALL      CKSBA000                     * check if a valid subjective
          BRANCH    OVRCD,POSTL500
.
          MOVE      SP70,FMNFSCOD                * check if linked
          PACK      KEY27,FMNDCODE,FMSASUBJ,SP70
          CALL      RSFMNF2
          CALL      RPFMNF2
          CALL      RKFMNF2
          PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
          MATCH     KEY15,KEY27
          IF        !@EQUAL
            CLEAR     VAR
            APPEND    "GL Subjective ",VAR
            APPEND    FMSALEDG,VAR
            APPEND    SLASH,VAR
            APPEND    FMSASUBJ,VAR
            APPEND    " not linked ",VAR
            RESET     VAR
            CALL      WRIL0000
          ENDIF
.
          GOTO      POSTL500
.
POSTL600
.
POSTL900
          PACK      KEY3,FMNDCODE,SP70      * unlock template
          CALL      RDFMND1
          CALL      UUFMND1
.
          GOTO      POSTL010
.
POSTL910  COMPARE   ZERO,CPAGENO
          CALL      HEAL0000 IF EQUAL       * print head if nothing printed
          CALL      UND132                  * print line
          PRINT     "****   End of Report   ****"
          CALL      SELPRINT
.
          CALL      CLSPRINT                * close spool file
          CLOSE     IBACODE1                * close files
...       CLOSE     IBAPRNT1
.
          CALL      MESSAGE3                * restore line 24
          MOVE      ZERO,EXIT               * 0=printed ok
          GOTO      POSTL999
.
POSTL950  MOVE      ONE,EXIT                * not printed
.
POSTL999  RETURN
.********************************************************************
. HEAL - print report                               Called by REPL
.         Requires : FROMLAB,TOLAB   (print range display labels)
.                    FROMCODE,TOCODE (print range)
.********************************************************************
HEAL0000  CALL      HEAD132                      * print heading
.
          ADD       "3",CLNO
          PRINT     *40,"Print Subjective Template Error Report":
                    *N,*40,"From : ",FROMLAB,SP2,FROMDESC:
                    *N,*40,"To   : ",TOLAB,SP2,TODESC
          CALL      UND132                       * print line
          ADD       "1",CLNO
          PRINT     "Template   Error"
          CALL      UND132                       * print line
          MOVE      SP70,SKEY3
.
HEAL9999  RETURN
.********************************************************************
. WRIL - print data line                            Called by REPL
.********************************************************************
WRIL0000
          COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAL0000 IF NOT LESS         * start new page
.
          MATCH     SKEY3,FMNDCODE
          IF        !@EQUAL
            PACK      SKEY3,FMNDCODE,SP70
            PRINT     *N,FMNDCODE,SP2,FMNDDESC
            ADD       "2",CLNO
          ENDIF
.
          PRINT     *12,*+,VAR
          ADD       "1",CLNO           * add one to line number
.
WRIL9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       FMSAMAIO/INC
          INC       FMSCCAIO/INC
          INC       FMSCCAKY    
          INC       FMSCONIO/INC
          INC       FMSLEVIO/INC
          INC       FMSLEVKY    
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSNRAIO/INC
          INC       FMSNRAKY    
          INC       FMSNRBIO/INC
          INC       FMSNRBKY    
          INC       FMSNRCIO/INC
          INC       FMSNRCKY    
          INC       FMSNRDIO/INC
          INC       FMSNRDKY    
          INC       FMSNREIO/INC
          INC       FMSNREKY    
          INC       FMSNRFIO/INC
          INC       FMSNRFKY    
          INC       FMSPRCIO/INC
          INC       FMSPRCKY    
          INC       FMSSBAIO/INC
          INC       FMSSBAKY    
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
.
          INC       STDGENCD
.
