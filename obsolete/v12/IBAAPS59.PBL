.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
.           REMEMBER to fix UNPACK at LM01L000 - This is what you need --
. "....      UNPACK    SP70,APAPCRD,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,etc"
. "          UNPACK    SP70,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,APAPBCH"
. V9.09.01  29/03/2007  Mike Laming 125296
.           Tricked up version to get around Program Generator problem
.           See LM01L000 for UNPACK to APAPCRD
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.01.02  30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
. VF.01.01  12.04.2000 Sandra Barcham
.           Add in GST
.-------------------------------------------------------
. VF.00.04  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.03  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
. VF.00.02  11.07.1999 Sandra Barcham
.           Add in Latrobe Regional cheque layout
. VF.00.01  01.07.1999 Sandra Barcham
.           Fix count of cheques to be printed
.-------------------------------------------------------
CREDORD   FORM      "1"
CHEQAMNT  FORM      14.2
DIM117    DIM       117
DIRCAMNT  FORM      14.2
DIRCNUMB  FORM      8
LASTSKY   DIM       6
RECCOUNT  FORM      8
SKEY58    DIM       58
WHICHORD  FORM      1                        * 1-Creditor 2-Sort Key Order
.--------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS59
.   Function      :   Modify Proposed Payments                
.   Generated  On :   07/04/2011
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSAPYDF    
          INC       APSAPYFD/INC
          INC       APSBMFFD/INC
          INC       APSCAFFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSTMPDF    
          INC       FMSAMAFD/INC
          INC       FMSCHQFD/INC
          INC       FMSCONFD/INC
          INC       FMSDISFD/INC
          INC       FMSLMAFD/INC
          INC       FMSRESFD/INC
          INC       IBAPRNFD/INC
.=========================
.Local Variable Definition
.-------------------------
.
.    Multi Item Key Fields Scr 01 Fld     8
.-------------------------------------------------------
APAP1NAM  INIT      "APAP1"
APAP1END  FORM      1   * End Display
APAP1SNO  FORM      5   * Number of Items on the Screen
APAP1MKY  DIM       127 * Match Key 
APAP1EKY  DIM       127 * End Key
APAP1SKY  DIM       127 * Start Key
APAP1IDX  INIT      " 132 UC1-5"
APAP1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
APAP1FNM  DIM       8  * Filename
APAP1CNT  FORM      3  * Number of Items on Screen
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS59"
PRGNAM    INIT      "Modify Proposed Payments                "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      OPENAPAP
          CALL      SC00L000
          CLOSE     APAP1FL1,DELETE
.
          CALL      CLOSAPAP
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmschqaf";
          OPEN      FMSCHQA1,"fmschqaf"
          DISPLAY   *P56:24,"Opening fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmsresaf";
          OPEN      FMSRESA1,"fmsresaf"
.--------------------------------------------------------
. Initialise Batch Screen Invoice                            
.--------------------------------------------------------
          MOVE     ZERO,APAP1SNO
          MOVE     "01    8",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,APAP1SNO
            ENDIF
          ENDIF
          PACK      APAP1FNM,ANST,APAP1NAM,PORT
          REP       " 0",APAP1FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APAP1FL1,APAP1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     APAP1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,APAP1FNM,APAP1IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",APAP1FNM;
          EXECUTE   KEY80,TASKID
          OPEN      APAP1FL1,APAP1FNM
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Modify Proposed Payments           
          ENDIF
          MATCH     "1A",SCRID
          IF         @EQUAL
            CALL       PS1AL000   * Order Details                      
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SCR01000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L104
          CALL      PRNT0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Modify Proposed Payments           
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Modify Proposed Payments           
.-------------------------------------------------------
CF01L000
          MOVE      SP70,APAPCRD 
          MOVE      SP70,APMACN1 
          MOVE      SP70,APMACN2 
          MOVE      SP70,APAPREF 
          MOVE      SP70,APAPDOC 
          MOVE      SP70,APAPBCH 
          MOVE      SP70,APAPORD 
          MOVE      ZERO,APAPTPY 
          MOVE      SP70,DISPTYP 
          MOVE      ZERO,CRDMOD  
          MOVE      SP70,APAPLIN 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Modify Proposed Payments           
.--------------------------------------------------------
KY01L000
.
KY01L110
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAPMAA00
          MOVE      APMACRD,APAPCRD
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          CALL      CALC0000
          MOVE      APAPCRD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN2,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Modify Proposed Payments           
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Modify Proposed Payments           
.---------------------------------------------------------
LM01L000
.---------------------------------------------------------
. Load for :     8 Invoice                            
.---------------------------------------------------------
....      UNPACK    SP70,APAPCRD,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,APAPBCH
          UNPACK    SP70,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,APAPBCH
          PACK      KEY52,APAPCRD,SP70
          MOVE      KEY52,APAP1EKY
          STRIP     APAP1SKY
          SETLPTR   APAP1EKY,5
          MOVE      APAP1EKY,APAP1SKY
          CALL      RDAPAP1 
          IF        OVRCD=0
            CALL      RPAPAP1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP01L000
          MOVE     ZERO,APAP1CNT
          MOVE     ZERO,APAP1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP01L600
          MATCH    PRGID,SCPSPID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP01L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L101:
                            DP01L010,DP01L010,DP01L102,DP01L103:
                            DP01L010,DP01L010,DP01L104,DP01L105:
                            DP01L106,DP01L010,DP01L107
          GOTO      DP01L010
.
DP01L101
          PACK      APAP1MKY,SP70,SP70
          CALL      UPTAPAP1
          IF        APAP1END=0
            CALL      RKAPAP1 
            IF        OVRCD=0
              PACK      APAP1MKY,APAPCRD,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,APAPBCH                        
              MATCH     APAP1EKY,APAP1MKY
              IF        @EQUAL
                MOVE      ZERO,APAP1END
                ADD       ONE,APAP1CNT
                CALL      UPTAPAP1
                MOVE      APAPREF,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,APAP1END
              ENDIF
            ELSE
              MOVE      ONE,APAP1END
            ENDIF
          ENDIF
          IF        APAP1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L102
          IF        APAP1END=0
            MOVE      APAPDOC,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L103
          IF        APAP1END=0
            MOVE      APAPBCH,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L104
          IF        APAP1END=0
            MOVE      APAPORD,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L105
          IF        APAP1END=0
            MOVE      APAPTPY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L106
          IF        APAP1END=0
          CALL      GTYPE000
            MOVE      DISPTYP,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L107
          IF        APAP1END=0
            MOVE      APAPLIN,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
DP01L600
          MATCH    "APAP1",NAMSSFFI
          GOTO     DP01L605 IF NOT EQUAL
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CRDMOD,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     DP01L999
DP01L605
DP01L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP01L000
.
          MATCH    "APAP1",NAMSSFFI
          GOTO     FP01L105 IF NOT EQUAL
          PACK     KEY52,APAP1SKY,SP70
          CALL     RDAPAP1  * Start
          IF       OVRCD=0
            CALL     RPAPAP1  * Start
          ENDIF
          CALL     DP01L000
          GOTO     FP01L999
FP01L105
FP01L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP01L000
.
          MATCH    "APAP1",NAMSSFFI
          GOTO     LP01L105 IF NOT EQUAL
          PACK     KEY52,APAP1SKY,Z70
          CALL     RSAPAP1  * End
          IF       OVRCD=1
            CALL     RPAPAP1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APAP1SNO
            CALL     RPAPAP1 
            IF       OVRCD=1
              MOVE     APAP1SNO,SECTOR
            ENDIF
            PACK     APAP1MKY,APAPCRD,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,APAPBCH                        
            MATCH    APAP1EKY,APAP1MKY
            IF       !@EQUAL
              MOVE     APAP1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     LP01L999
LP01L105
LP01L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP01L000
.
          MATCH    "APAP1",NAMSSFFI
          GOTO     PP01L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP01L105
          CALL      RFTAPAP1
          BRANCH   OVRCD,PP01L115
          MOVE      APAP1MKY,KEY52 
          CALL      RSAPAP1 
PP01L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=APAP1SNO
            CALL     RPAPAP1 
            IF       OVRCD=1
              MOVE     APAP1SNO,SECTOR
            ENDIF
            PACK     APAP1MKY,APAPCRD,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,APAPBCH                        
            MATCH    APAP1EKY,APAP1MKY
            IF       !@EQUAL
              MOVE     APAP1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     PP01L999
PP01L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APAP1SNO
            CALL     RKAPAP1 
            IF       OVRCD=1
              MOVE     APAP1SNO,SECTOR
            ENDIF
            PACK     APAP1MKY,APAPCRD,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,APAPBCH                        
            MATCH    APAP1EKY,APAP1MKY
            IF       !@EQUAL
              MOVE     APAP1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP01L999
PP01L120
PP01L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP01L000
          MATCH    "APAP1",NAMSSFFI
          GOTO     NP01L115 IF NOT EQUAL
NP01L105
          CALL     RKAPAP1 
          BRANCH   OVRCD,NP01L110
          PACK     APAP1MKY,APAPCRD,APAPREF,APAPTYP,APAPDOC,APAPORD,APAPLIN,APAPBCH                        
          MATCH    APAP1EKY,APAP1MKY
          GOTO     NP01L110 IF NOT EQUAL
          CALL     RPAPAP1 
          CALL     DP01L000
          GOTO     NP01L999
NP01L110
          CALL     RPAPAP1 
          BEEP
          GOTO     NP01L999
NP01L115
NP01L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT01L000
CT01L105
CT01L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Modify Proposed Payments           
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :     8 Invoice                            
.---------------------------------------------------------
UPTAPAP1
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      APAP1FL1,KEY5;ANS
          IF        @OVER
            WRITE     APAP1FL1,KEY5;SCPSROW,SCPSCOL,APAP1MKY
          ELSE
            UPDATE    APAP1FL1;SCPSROW,SCPSCOL,APAP1MKY
          ENDIF
          RETURN
RDTAPAP1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      APAP1FL1,KEY5;SCPSROW,SCPSCOL,APAP1MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTAPAP1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      APAP1FL1,KEY5;;
          READKS    APAP1FL1;SCPSROW,SCPSCOL,APAP1MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,APAP1MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Modify Proposed Payments           
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
          MOVE      "APAP1",NAMSSFFI
          MOVE      "    8",ITMSSFFI
          CALL      FP01L000
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Modify Proposed Payments           
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L101,PS01L102,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L103,PS01L999
          GOTO     PS01L999
.
PS01L101
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      CRDMOD,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Modify Proposed Payments           
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L006,SF01L102:
                            SF01L006,SF01L006,SF01L006,SF01L103:
                            SF01L104,SF01L105,SF01L006,SF01L006:
                            SF01L106,SF01L107,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L103:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          MOVE      "APAP1",NAMSSFFI
          MOVE      "    8",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L101
          CALL      KAMTS000
          GOTO      SF01L001
.
SF01L102
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L103
          CALL      SELECTED
          BRANCH    EXIT,SF01L001
          COMPARE   ONE,ACCEPT
          GOTO      SF01L001 IF EQUAL
          CALL      RDTAPAP1
          IF        OVRCD=1
            BEEP
            GOTO      SF01L001
          ENDIF
          MATCH     SP70,APAP1MKY
          IF        @EQUAL
            BEEP
            GOTO      SF01L001
          ENDIF
          MOVE      APAP1MKY,KEY52 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SCR1A000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTAPAP1
          IF        OVRCD=1
            CALL      FP01L000
          ELSE
            MOVE      APAP1MKY,KEY52 
            CALL      RSAPAP1 
            CALL      RPAPAP1 
            CALL      DP01L000
          ENDIF
          GOTO     SF01L001
.
SF01L104
          MOVE      "APAP1",NAMSSFFI
          MOVE      "    8",ITMSSFFI
          CALL      NP01L000
          GOTO     SF01L001
.
SF01L105
          MOVE      "APAP1",NAMSSFFI
          MOVE      "    8",ITMSSFFI
          CALL      PP01L000
          GOTO     SF01L001
.
SF01L106
          MOVE      "APAP1",NAMSSFFI
          MOVE      "    8",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L107
          MOVE      "APAP1",NAMSSFFI
          MOVE      "    8",ITMSSFFI
          CALL      LP01L000
          GOTO     SF01L001
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Order Details                      
.--------------------------------
SC1AL000
SC1AL100
          MOVE      "1A",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 6",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC1AL200
          CALL      CF1AL000 * Clear Fields
          CALL      RAPAP000
SC1AL300
          CALL      KY1AL000 * Enter Key Fields
          BRANCH    EXIT,SC1AL999,SC1AL999
SC1AL400
          CALL      WP1AL000 * Load any WP Details
SC1AL500
          CALL      LM1AL000 * Load any Batch Details
SC1AL600
          CALL      DF1AL000 * Display Fields
SC1AL700
          CALL      SF1AL000 * Select Fields
          BRANCH    EXIT,SC1AL100,SC1AL100,SC1AL200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC1AL800
          CALL      CALC0000
SC1AL900
SC1AL999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Order Details                      
.-------------------------------------------------------
CF1AL000
CF1AL999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Order Details                      
.--------------------------------------------------------
KY1AL000
          MOVE      ZERO,EXIT
          GOTO      KY1AL999
.
KY1AL900  MOVE      ONE,EXIT
KY1AL999  RETURN
.---------------------------------------------------------
. Load WP files for : Order Details                      
.---------------------------------------------------------
WP1AL000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Order Details                      
.---------------------------------------------------------
LM1AL000
          RETURN
.---------------------------------------------------------
. Display Fields for : Order Details                      
.---------------------------------------------------------
DF1AL000
          BRANCH   ACCEPT,DF1AL999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF1AL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF1AL900
          MATCH    PRGID,SCPSPID
          GOTO     DF1AL900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF1AL900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF1AL010 IF NOT EQUAL
.
          CALL     PS1AL000 * Display Field
          GOTO     DF1AL010
DF1AL900
DF1AL999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Order Details                      
.---------------------------------------------------------
PS1AL000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS1AL999,PS1AL999,PS1AL999,PS1AL999:
                            PS1AL999,PS1AL999,PS1AL999,PS1AL101:
                            PS1AL102,PS1AL103,PS1AL104,PS1AL105:
                            PS1AL106,PS1AL107,PS1AL108,PS1AL109:
                            PS1AL110,PS1AL111,PS1AL112,PS1AL999:
                           PS1AL113,PS1AL114,PS1AL115,PS1AL116:
                            PS1AL117,PS1AL118,PS1AL119
          GOTO     PS1AL999
.
PS1AL101
          CALL      RAPIN000
          MOVE      APAPREF,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL102
          MOVE      APAPDOC,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL103
          MOVE      DISPTYP,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL104
          MOVE      APAPORD,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL105
          MOVE      APAPLIN,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL106
          CALL      RFMLA000
          MOVE      APINLED,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL107
          CALL      RFMAM000
          MOVE      APINACC,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL108
          CALL      RFMDS000
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL109
          CALL      RFMRS000
          MOVE      APINRES,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL110
          MOVE      APINCAT,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL111
          MOVE      APINDES,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL112
          MOVE      APINQTY,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL113
          CALL      GETAO000
          MOVE      ORIGTOT,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL114
          MOVE      APAPTPY,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL115
          MOVE      APAPBCH,VAR      
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL116
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL117
          MOVE      FMAMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL118
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS1AL999
.
PS1AL119
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS1AL999
PS1AL999
          RETURN
.---------------------------------------------------------
. Selections for : Order Details                      
.---------------------------------------------------------
SF1AL000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF1AL001  BRANCH   ACCEPT,SF1AL020
.
SF1AL005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF1AL006,SF1AL101,SF1AL102,SF1AL103:
                            SF1AL104,SF1AL006,SF1AL105,SF1AL006:
                            SF1AL006,SF1AL006,SF1AL006,SF1AL006:
                            SF1AL006,SF1AL006,SF1AL006,SF1AL006:
                            SF1AL006,SF1AL006,SF1AL006,SF1AL006:
                           SF1AL006,SF1AL106,SF1AL006,SF1AL006:
                            SF1AL006,SF1AL006,SF1AL006
SF1AL006  BEEP
          GOTO     SF1AL005
SF1AL020  CALL     RKSCSL1
          BRANCH   OVRCD,SF1AL090
          MATCH    PRGID,SCSLPID
          GOTO     SF1AL090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF1AL090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF1AL020,SF1AL020,SF1AL020,SF1AL020:
                            SF1AL020,SF1AL020,SF1AL020,SF1AL020:
                            SF1AL020,SF1AL020,SF1AL020,SF1AL020:
                            SF1AL020,SF1AL020,SF1AL020,SF1AL020:
                            SF1AL020,SF1AL020,SF1AL020,SF1AL020:
                           SF1AL020,SF1AL106,SF1AL020,SF1AL020:
                            SF1AL020,SF1AL020,SF1AL020
          GOTO     SF1AL020
SF1AL090  MOVE     ZERO,ACCEPT
          GOTO     SF1AL001
.
SF1AL101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      NEXT0000
          MOVE      "1A",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF1AL000
          GOTO      SF1AL001
.
SF1AL102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PREV0000
          MOVE      "1A",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF1AL000
          GOTO      SF1AL001
.
SF1AL103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      FIRS0000
          MOVE      "1A",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF1AL000
          GOTO      SF1AL001
.
SF1AL104
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      LAST0000
          MOVE      "1A",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF1AL000
          GOTO      SF1AL001
.
SF1AL105
          MOVE      ZERO,EXIT
          GOTO      SF1AL999
.
SF1AL106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAMTS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF1AL106
            ENDIF
            BRANCH    EXIT,SF1AL106,SF1AL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF1AL990 IF EQUAL
          ENDIF
          MOVE      APAPTPY,VAR      
          CALL      DISPITEM
          GOTO     SF1AL001
SF1AL990  MOVE      FOUR,EXIT * Exit Char Exit
SF1AL999  RETURN
.@@@@@ Function Restart Point @@@@@
.**********************************************************************
. Open Payments File - Exit program if doesn't exist
.**********************************************************************
OPENAPAP
          CALL      CHKAP000           * check if file exists
          BRANCH    OVRCD,OPEN1000
.
          MOVE      "9999999999999999999999999999999999999999",KEY40
          MOVE      ZERO,APIMTYP
          CALL      RDAPIM1
.
          MOVE      ZERO,F1            * get transaction program status
          MOVE      APIMTYP,F1
          MOVE      TRSTAT0,TRSTAT
          LOAD      TRSTAT,F1,TRSTAT1
          GOTO      OPEN9999
.
OPEN1000
        MOVE "ERROR - No Payments File. Use Create Proposed Payments ",DISPMSG
          CALL      MESSAGE1
          GOTO      OPEN9000
.
OPEN9000
          CLOCK      FORK,KEY2         * exit program
          MATCH      " 0",KEY2
          IF         @EQUAL
            CHAIN       PGM
          ELSE
            STOP
          ENDIF
.
OPEN9999  RETURN
.
.**********************************************************************
. Close Payments File - delete file if empty
.**********************************************************************
CLOSAPAP
          CALL      CHKAP000           * check if file exists
          BRANCH    OVRCD,CLOS9999
.
          PACK      KEY52,SP70
          CALL      RSAPAP1            * check if file empty
          CALL      RKAPAP1
.
          IF        1=OVRCD
            CALL      DELAP000         * delete file
          ENDIF
.
CLOS9999  RETURN
.
.**********************************************************************
. Screen 01
.**********************************************************************
SCR01000
          MOVE      SP70,APAPPYC
          MOVE      SP70,KEY52
          CALL      RSAPAP1
          CALL      RKAPAP1
          MATCH     SP70,APAPPYC
          IF        @EQUAL
            CALL      SC01L000
          ELSE
            BEEP
            MOVE      "Cannot Modify - Cheques Alread Printed - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
SCR01999  RETURN
.**********************************************************************
. Open Payments File - Exit program if doesn't exist
.**********************************************************************
DELT0000
          MOVE      "About to Delete Payments File -",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,DELT9500      * delete cancelled
.
          CALL      DELAP000           * delete if file exists
          BRANCH    EXIT,DELT1000,DELT2000
          GOTO      DELT9000           * delete ok - so exit
.
DELT1000
        MOVE "ERROR - No Payments File. Use Create Proposed Payments ",DISPMSG
          CALL      MESSAGE1
          GOTO      DELT9500
.
DELT2000
          MOVE      "ERROR - Cant Delete Payments File - ",DISPMSG
          CALL      MESSAGE1
          GOTO      DELT9500
.
DELT9000  MOVE      ZERO,EXIT
          GOTO      DELT9999
.
DELT9500  MOVE      ONE,EXIT
.
DELT9999  RETURN
.
.**********************************************************************
. Print data
. Requires IBACODFD IBAPRNFD
.          IBAIOCOD IBAIOPRN IBAPRINT
.  Note : already includes IBAPASFD & IBAPASIO
.**********************************************************************
PRNT0000
          OPEN      IBACODE1,"ibacodef"
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
.
          CALL      PRTORD00           * Get Print Order (Creditor or Sort Key)
          BRANCH    EXIT,PRNT9999
.
          CALL      OPNPRINT
.
          IF        WHICHORD=CREDORD
            CALL      PCRD0000           * Print in Creditor Order
          ELSE
            CALL      PSKY0000           * Print in Sort Key Order
          ENDIF
.
          IF        CPAGENO>0
            CALL      SELPRINT
            CALL      CLSPRINT
          ELSE
            MOVE      "Nothing to Print !! - ",DISPMSG
            CALL      MESSAGE1
            CALL      CLSPRINT
          ENDIF
          CLOSE     IBACODE1
...       CLOSE     IBAPRNT1
PRNT9999  RETURN
.-----------------------------------------------------------------
. Get Creditor or Sort Key Order for the Printing and issuing
.-----------------------------------------------------------------
PRTORD00  MOVE      ZERO,EXIT
.
          MOVE      ANSC,ANS
          DISPLAY   *P1:24,*EL,"Order for Proposed Payments - ":
                    "(",*V2LON,"C",*HOFF,")reditor or (",*V2LON,"S":
                    *HOFF,")ort Key order: ";
          KEYIN     *P63:24,*V2LON,*RV,ANS,*P1:24,*EL;
          PACK      ANS,ANS,SP70
          MATCH     SP1,ANS
          GOTO      PRTORD90 IF EQUAL
.
          MATCH     EXITCHAR,ANS
          GOTO      PRTORD90 IF EQUAL
.
          TYPE      ANS
          GOTO      PRTORD00 IF EQUAL
.
          REP       "C1c1S2s2",ANS
          TYPE      ANS
          GOTO      PRTORD00 IF NOT EQUAL
.
          MOVE      ANS,WHICHORD
          GOTO      PRTORD99
.
PRTORD90  MOVE      ONE,EXIT
.
PRTORD99  RETURN
.**********************************************************************
. PCRD - Print data
.**********************************************************************
PCRD0000  CALL      RDPAR000           * read selection parameters
.
          CALL      RDFMCO50
.
          MOVE      "24",MAXLINES
          IF        FMCOAPCH=1
            MOVE      "27",MAXLINES
          ENDIF
          IF        FMCOAPCH=2
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=3
            MOVE      "39",MAXLINES
          ENDIF
          IF        FMCOAPCH=4
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=5
            MOVE      "20",MAXLINES
          ENDIF
          IF        FMCOAPCH=6
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=7
            MOVE      "12",MAXLINES
          ENDIF
          IF        FMCOAPCH=8
            MOVE      "27",MAXLINES
          ENDIF
          IF        FMCOAPCH=9
            MOVE      "13",MAXLINES
          ENDIF
          IF        FMCOAPCH=10
            MOVE      "27",MAXLINES
          ENDIF
          IF        FMCOAPCH=11
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=12
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=13
            MOVE      "23",MAXLINES
          ENDIF
          IF        FMCOAPCH=14
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=15
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=16
            MOVE      "28",MAXLINES
          ENDIF
          IF        FMCOAPCH=17
            MOVE      "37",MAXLINES
          ENDIF
          IF        FMCOAPCH=18
            MOVE      "27",MAXLINES
          ENDIF
          IF        FMCOAPCH=19
            MOVE      "28",MAXLINES
          ENDIF
          IF        FMCOAPCH=20
            MOVE      "27",MAXLINES
          ENDIF
.
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      "999",CLNO
          CALL      GETSCR23
.
          MOVE      ZERO,REPNO
          MOVE      ZERO,CRDPAY
          MOVE      ZERO,CRDMOD
          MOVE      ZERO,TOTPAY
          MOVE      ZERO,TOTMOD
          MOVE      SP70,LASTCRE
          MOVE      ZERO,CHEQNUMB
          MOVE      ZERO,CHEQAMNT
          MOVE      ZERO,DIRCNUMB
          MOVE      ZERO,DIRCAMNT
          MOVE      ZERO,F5
.
          DISPLAY   *P1:24,"Printing (C1)... "
          MOVE      ZERO,RECCOUNT
          PACK      KEY52,SP70
          CALL      RSAPAP1
PCRD1000  CALL      RKAPAP1
          BRANCH    OVRCD,PCRD2000
.
          ADD       ONE,RECCOUNT
          IF        RECCOUNT%100=0
            DISPLAY   *P20:24,*V2LON,RECCOUNT
          ENDIF
.
.          DISPLAY   *P1:24,"Printing 1 : ":
.                    *V2LON,APAPSKY,APAPCRD,APAPREF,APAPDOC,APAPBCH;
          MATCH     APAPCRD,LASTCRE
          IF        !@EQUAL
            CALL      DBALC000                   * check if debit bal creditor
            IF        OVRCD=1
              PACK      KEY52,APAPCRD,Z70        * if so, skip this creditor
              CALL      RSAPAP1
              GOTO      PCRD1000
            ENDIF
.
            MATCH     SP70,LASTCRE
            CALL      ECRD0000 IF NOT EQUAL      * end of creditor routine
            MOVE      APAPCRD,APMACRD
            MOVE      SP70,APMACN1
            PACK      KEY5,APAPCRD,SP70
            CALL      RDAPMA1
.
            COMPARE   "50",CLNO
            CALL      HEAD0000 IF NOT LESS
.
            STRIP    APMACN1                * summarise data
            STRIP    APMACN2
            STRIP    APMACA1
            STRIP    APMACA2
            STRIP    APMACA3
            STRIP    APMACPC
            PACK     DIM123,APMACN1,SP1,APMACN2,SP1,APMACA1,SP1:
                            APMACA2,SP1,APMACA3,SP1,APMACPC
.
            PRINT     *N,*1,APMACRD,SP2,DIM123
            ADD       "2",CLNO
            MOVE      APAPCRD,LASTCRE
.
            MOVE      ZERO,F1
            MOVE      APAPGMT,F1
            IF        F1=0
              ADD       ONE,CHEQNUMB          * increment cheque number
              ADD       TMPMOD,CHEQAMNT
              MOVE      "CHEQUE      ",DIM12
            ELSE
              ADD       ONE,DIRCNUMB          * increment cheque number
              ADD       TMPMOD,DIRCAMNT
              MOVE      "DIRECT DEBIT",DIM12
            ENDIF
            MOVE      ZERO,F5
          ENDIF
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          CALL      PLIN0000                * print line
.
          GOTO      PCRD1000
.
PCRD2000
          IF        !(999=CLNO)
            CALL      ECRD0000              * end of creditor routine
            CALL      ETOT0000              * end of print routine
          ENDIF
.
          MOVE      "999",CLNO
          MOVE      ONE,REPNO
          MOVE      ZERO,CRDPAY
          MOVE      ZERO,CRDMOD
          MOVE      ZERO,TOTPAY
          MOVE      ZERO,TOTMOD
          MOVE      SP70,LASTCRE
.
          DISPLAY   *P1:24,"Printing (C2)... "
          MOVE      ZERO,RECCOUNT
          PACK      KEY52,SP70
          CALL      RSAPAP1
.
PCRD3000
          CALL      RKAPAP1
          BRANCH    OVRCD,PCRD4000
.
          ADD       ONE,RECCOUNT
          IF        RECCOUNT%100=0
            DISPLAY   *P20:24,*V2LON,RECCOUNT
          ENDIF
.
.          DISPLAY   *P1:24,"Printing 2 : ":
.                    *V2LON,APAPCRD,APAPREF,APAPDOC,APAPBCH;
.
          CALL      DBALC000                * check if debit bal creditor
          IF        OVRCD=1
            MOVE      APAPCRD,APMACRD
            MOVE      SP70,APMACN1
            PACK      KEY5,APAPCRD,SP70
            CALL      RDAPMA1
.
            COMPARE   "55",CLNO
            CALL      HEAD0000 IF NOT LESS
.
            CALL      PLIN0000              * print line
          ENDIF
.
          PACK      KEY52,APAPCRD,Z70       * get next creditor
          CALL      RSAPAP1
          GOTO      PCRD3000
.
PCRD4000
          IF        !(999=CLNO)
            CALL      ETOT0000            * end of print routine
          ENDIF
.
          CALL      UND132
          CALL      PUTSCR23
.
PCRD9999  RETURN
.**********************************************************************
. PSKY - Print data
.**********************************************************************
PSKY0000
          CALL      RDPAR000           * read selection parameters
.
          CALL      RDFMCO50
.
          MOVE      "24",MAXLINES
          IF        FMCOAPCH=1
            MOVE      "27",MAXLINES
          ENDIF
          IF        FMCOAPCH=2
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=3
            MOVE      "39",MAXLINES
          ENDIF
          IF        FMCOAPCH=4
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=5
            MOVE      "20",MAXLINES
          ENDIF
          IF        FMCOAPCH=6
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=7
            MOVE      "12",MAXLINES
          ENDIF
          IF        FMCOAPCH=8
            MOVE      "27",MAXLINES
          ENDIF
          IF        FMCOAPCH=9
            MOVE      "13",MAXLINES
          ENDIF
          IF        FMCOAPCH=10
            MOVE      "27",MAXLINES
          ENDIF
          IF        FMCOAPCH=11
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=12
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=13
            MOVE      "23",MAXLINES
          ENDIF
          IF        FMCOAPCH=14
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=15
            MOVE      "24",MAXLINES
          ENDIF
          IF        FMCOAPCH=16
            MOVE      "28",MAXLINES
          ENDIF
          IF        FMCOAPCH=17
            MOVE      "37",MAXLINES
          ENDIF
          IF        FMCOAPCH=18
            MOVE      "27",MAXLINES
          ENDIF
          IF        FMCOAPCH=19
            MOVE      "28",MAXLINES
          ENDIF
          IF        FMCOAPCH=20
            MOVE      "27",MAXLINES
          ENDIF
.
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      "999",CLNO
          CALL      GETSCR23
.
          MOVE      ZERO,REPNO
          MOVE      ZERO,CRDPAY
          MOVE      ZERO,CRDMOD
          MOVE      ZERO,TOTPAY
          MOVE      ZERO,TOTMOD
          MOVE      SP70,LASTCRE
          MOVE      SP70,LASTSKY
          MOVE      ZERO,CHEQAMNT
          MOVE      ZERO,CHEQNUMB
          MOVE      ZERO,DIRCAMNT
          MOVE      ZERO,DIRCNUMB
          MOVE      ZERO,F5
.
          DISPLAY   *P1:24,"Printing (S1)... "
          MOVE      ZERO,RECCOUNT
          PACK      KEY58,SP70
          CALL      RSAPAP4
PSKY1000  CALL      RKAPAP4
          BRANCH    OVRCD,PSKY2000
.
          ADD       ONE,RECCOUNT
          IF        RECCOUNT%100=0
            DISPLAY   *P20:24,*V2LON,RECCOUNT
          ENDIF
.          DISPLAY   *P1:24,"Printing 1 : ":
.                    *V2LON,APAPSKY,APAPCRD,APAPREF,APAPDOC,APAPBCH;
.
          MATCH     APAPCRD,LASTCRE
          IF        !@EQUAL
            CALL      DBALC000                    * check if debit bal creditor
            IF        OVRCD=1
              PACK      KEY58,APAPSKY,APAPCRD,Z70 * if so, skip this creditor
              CALL      RSAPAP4
              GOTO      PSKY1000
            ENDIF
.
            MATCH     SP70,LASTCRE
            CALL      ECRD0000 IF NOT EQUAL       * end of creditor routine
            MOVE      APAPCRD,APMACRD
            MOVE      SP70,APMACN1
            PACK      KEY5,APAPCRD,SP70
            CALL      RDAPMA1
.
            COMPARE   "50",CLNO
            CALL      HEAD0000 IF NOT LESS
.
            STRIP    APMACN1                * summarise data
            STRIP    APMACN2
            STRIP    APMACA1
            STRIP    APMACA2
            STRIP    APMACA3
            STRIP    APMACPC
            PACK     DIM117,APMACN1,SP1,APMACN2,SP1,APMACA1,SP1:
                            APMACA2,SP1,APMACA3,SP1,APMACPC
.
            PRINT     *N,*1,APMASKY,*10,APMACRD,SP2,DIM117
            ADD       "2",CLNO
            MOVE      APAPCRD,LASTCRE
            MOVE      APAPSKY,LASTSKY
.
            MOVE      ZERO,F1
            MOVE      APAPGMT,F1
            IF        F1=0
              ADD       ONE,CHEQNUMB          * increment cheque number
              ADD       TMPMOD,CHEQAMNT
              MOVE      "CHEQUE      ",DIM12
            ELSE
              ADD       ONE,DIRCNUMB          * increment cheque number
              ADD       TMPMOD,DIRCAMNT
              MOVE      "DIRECT DEBIT",DIM12
            ENDIF
            MOVE      ZERO,F5
          ENDIF
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          CALL      PLSK0000                * print line
.
          GOTO      PSKY1000
.
PSKY2000
          IF        !(999=CLNO)
            CALL      ECRD0000              * end of creditor routine
            CALL      ETOT0000              * end of print routine
          ENDIF
.
          MOVE      "999",CLNO
          MOVE      ONE,REPNO
          MOVE      ZERO,CRDPAY
          MOVE      ZERO,CRDMOD
          MOVE      ZERO,TOTPAY
          MOVE      ZERO,TOTMOD
          MOVE      SP70,LASTCRE
          MOVE      SP70,LASTSKY
.
          DISPLAY   *P1:24,"Printing (S2)... "
          MOVE      ZERO,RECCOUNT
          PACK      KEY58,SP70
          CALL      RSAPAP4
.
PSKY3000
          CALL      RKAPAP4
          BRANCH    OVRCD,PSKY4000
.
          ADD       ONE,RECCOUNT
          IF        RECCOUNT%100=0
            DISPLAY   *P20:24,*V2LON,RECCOUNT
          ENDIF
.          DISPLAY   *P1:24,"Printing 2 : ":
.                    *V2LON,APAPSKY,APAPCRD,APAPREF,APAPDOC,APAPBCH;
          CALL      DBALC000                * check if debit bal creditor
          IF        OVRCD=1
            MOVE      APAPCRD,APMACRD
            MOVE      SP70,APMACN1
            PACK      KEY5,APAPCRD,SP70
            CALL      RDAPMA1
.
            COMPARE   "55",CLNO
            CALL      HEAD0000 IF NOT LESS
.
            CALL      PLSK0000              * print line
          ENDIF
.
          PACK      KEY58,APAPSKY,APAPCRD,Z70       * get next creditor
          CALL      RSAPAP4
          GOTO      PSKY3000
.
PSKY4000
          IF        !(999=CLNO)
            CALL      ETOT0000            * end of print routine
          ENDIF
.
          CALL      UND132
          CALL      PUTSCR23
.
PSKY9999  RETURN
.**********************************************************************
.  HEAD - Print Heading                                Called By PDAT
.**********************************************************************
HEAD0000
          MOVE      SP70,FMCHDES
          PACK      KEY15,APAPCHQ,SP70
          CALL      RDFMCH1
.
          UNPACK    APAPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          BRANCH    REPNO,HEAD2000
.
.---- report 1 ----
.
          CALL      HEAD132
          PRINT     "Cheque Account      : ",APAPCHQ,SP2,FMCHDES,*N:
                    "Run Date            : ",CPCDATE
          ADD       "3",CLNO
.
          MATCH     SP70,CREDF
          IF        !@EQUAL
            STRIP     CREDF
            STRIP     CREDT
            STRIP     TYPEF
            STRIP     TYPET
            STRIP     DATEF
            STRIP     DATET
            STRIP     TERMF
            STRIP     TERMT
            PRINT     *+,"Creditor Range      : ",CREDF," to ",CREDT,*50:
                      "Creditor Type Range : ",TYPEF," to ",TYPET,*N:
                      "Payable Date Range  : ";
            MATCH     "Start",DATEF
            IF        @EQUAL
              PRINT     DATEF;
            ELSE
              UNPACK    DATEF,CCENT,CYEAR,CMON,CDAY
              CALL      PACDATE
              PRINT     CPCDATE;
            ENDIF
            MATCH     "End",DATET
            IF        @EQUAL
              PRINT     " to ",DATET;
            ELSE
              UNPACK    DATET,CCENT,CYEAR,CMON,CDAY
              CALL      PACDATE
              PRINT     " to ",CPCDATE;
            ENDIF
            PRINT     *50,"Term Code Range     : ",TERMF," to ",TERMT
            ADD       "2",CLNO
          ENDIF
.
          CALL      UND132
          IF        WHICHORD=CREDORD
            PRINT     *1,"Creditor",*20,"Invoice Ref",*37,"Document Ref":
                      *54,"Batch",*66,"Type",*72,"Ledger",*79,"Date":
                      *90,"Original Amount",*110,"Modified Amount"
          ELSE
            PRINT     *1,"Sort-Key",*10,"Creditor",*20,"Invoice Ref":
                      *37,"Document Ref":
                      *54,"Batch",*66,"Type",*72,"Ledger",*79,"Date":
                      *90,"Original Amount",*110,"Modified Amount"
          ENDIF
          CALL      UND132
          GOTO      HEAD9999
.
.---- report 2 ----
.
HEAD2000
          CALL      HEAD132
          PRINT     "Cheque Account : ",APAPCHQ,SP2,FMCHDES,*N:
                    "Run Date       : ",CPCDATE,*N:
                    "Creditors That Will Not Be Processed"
          CALL      UND132
          PRINT     *1,"Creditor",*75,"Original Amount",*100,"Modified Amount"
          CALL      UND132
          ADD       "4",CLNO
.
HEAD9999  RETURN
.**********************************************************************
.  ECRD - End creditor routine                         Called By PDAT
.**********************************************************************
ECRD0000  MATCH     SP70,LASTCRE      * skip if no creditor found yet
          GOTO      ECRD9999 IF EQUAL
.
          PRINT     SP1
          CALL      UND132
          PRINT     *30,DIM12,*60,"Total For Creditor ",LASTCRE:
                    *90,CRDPAY,*110,CRDMOD
          CALL      UND132
          ADD       "2",CLNO
          MOVE      ZERO,CRDPAY
          MOVE      ZERO,CRDMOD
.
ECRD9999  RETURN
.**********************************************************************
.  ETOT - End report routine                         Called By PDAT
.**********************************************************************
ETOT0000
          BRANCH    REPNO,ETOT1000
.
          PRINT     *60,"Overall Totals ",*90,TOTPAY,*110,TOTMOD,*N,*N:
                    *45,"Total Number and Amount of Direct Debits    = ":
                    *97,DIRCNUMB,*108,DIRCAMNT,*N:
                    *45,"Total Number and Amount of Cheques Required = ":
                    *97,CHEQNUMB,*108,CHEQAMNT
          ADD       "3",CLNO
          GOTO      ETOT9999
.
ETOT1000
          CALL      UND132
          PRINT     *1,"Overall Totals ",*75,TOTPAY,*100,TOTMOD
          ADD       "1",CLNO
.
ETOT9999  RETURN
.**********************************************************************
.  PLIN - Print Line                                   Called By PDAT
.**********************************************************************
PLIN0000
          BRANCH    REPNO,PLIN5000
.
.---- report 1 ----
.
          PACK      KEY5,APAPBCH,SP70
          CALL      RDAPBM1
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      SP70,APINLED
          PACK      KEY51,APAPBCH,APAPCRD,APAPREF,APAPDOC,APAPORD,APAPLIN,SP70
          CALL      RDAPIN1
.
          UNPACK    SP70,APIMCM1
          UNPACK    SP70,APIMCM2
          PACK      KEY40,APAPBCH,APAPCRD,APAPREF,APAPDOC,SP70
          CALL      RDAPIM1
          IF        OVRCD=0
            UNPACK    APIMDDT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
          ENDIF
.
          MOVE      ZERO,F1
          MOVE      APAPTYP,F1
          MOVE      DISPTYP0,DISPTYP
          LOAD      DISPTYP,F1,DISPTYP1,DISPTYP2,DISPTYP3,DISPTYP4
.
          PRINT     *20,APAPREF,*37,APAPDOC,*54,APAPBCH,*66,DISPTYP:
                    *72,APINLED,*79,CPCDATE;
          ADD       "1",CLNO
.
          ADD       APAPGST,APAPPAY
          MOVE      APAPPAY,ORDPAY
          MOVE      APAPTPY,ORDMOD
          PACK      KEY41,APAPCRD,APAPREF,APAPDOC,APAPBCH,APAPTYP,SP70
.
PLIN1000  CALL      RKAPAP1
          BRANCH    OVRCD,PLIN2000
.
          PACK      KEY42,APAPCRD,APAPREF,APAPDOC,APAPBCH,APAPTYP,SP70
          MATCH     KEY41,KEY42
          GOTO      PLIN2000 IF NOT EQUAL
.
          ADD       APAPGST,APAPPAY
          ADD       APAPPAY,ORDPAY
          ADD       APAPTPY,ORDMOD
          GOTO      PLIN1000
.
PLIN2000  CALL      RPAPAP1
          PRINT     *90,ORDPAY,*110,ORDMOD
.
          COMPARE   ORDMOD,ZERO        * see if remittance would be full
          CALL      LCNT0000 IF NOT EQUAL
.
          ADD       ORDPAY,CRDPAY
          ADD       ORDMOD,CRDMOD
          ADD       ORDPAY,TOTPAY
          ADD       ORDMOD,TOTMOD
          GOTO      PLIN9999
.
.---- report 2 ----
.
PLIN5000
          PRINT     *1,APMACRD,SP2,APMACN1,*75,TMPPAY,*100,TMPMOD
          ADD       "1",CLNO
.
          ADD       TMPPAY,TOTPAY
          ADD       TMPMOD,TOTMOD
.
PLIN9999  RETURN
.**********************************************************************
.  PLSK - Print Line                                   Called By PDAT
.**********************************************************************
PLSK0000
          BRANCH    REPNO,PLSK5000
.
.---- report 1 ----
.
          PACK      KEY5,APAPBCH,SP70
          CALL      RDAPBM1
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      SP70,APINLED
          PACK      KEY51,APAPBCH,APAPCRD,APAPREF,APAPDOC,APAPORD,APAPLIN,SP70
          CALL      RDAPIN1
.
          UNPACK    SP70,APIMCM1
          UNPACK    SP70,APIMCM2
          PACK      KEY40,APAPBCH,APAPCRD,APAPREF,APAPDOC,SP70
          CALL      RDAPIM1
          IF        OVRCD=0
            UNPACK    APIMDDT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
          ENDIF
.
          MOVE      ZERO,F1
          MOVE      APAPTYP,F1
          MOVE      DISPTYP0,DISPTYP
          LOAD      DISPTYP,F1,DISPTYP1,DISPTYP2,DISPTYP3,DISPTYP4
.
          PRINT     *20,APAPREF,*37,APAPDOC,*54,APAPBCH,*66,DISPTYP:
                    *72,APINLED,*79,CPCDATE;
          ADD       "1",CLNO
.
          ADD       APAPGST,APAPPAY
          MOVE      APAPPAY,ORDPAY
          MOVE      APAPTPY,ORDMOD
          PACK      KEY41,APAPCRD,APAPREF,APAPDOC,APAPBCH,APAPTYP,SP70
.
PLSK1000  CALL      RKAPAP4
          BRANCH    OVRCD,PLSK2000
.
          PACK      KEY42,APAPCRD,APAPREF,APAPDOC,APAPBCH,APAPTYP,SP70
          MATCH     KEY41,KEY42
          GOTO      PLSK2000 IF NOT EQUAL
.
          ADD       APAPGST,APAPPAY
          ADD       APAPPAY,ORDPAY
          ADD       APAPTPY,ORDMOD
          GOTO      PLSK1000
.
PLSK2000  CALL      RPAPAP4
          PRINT     *90,ORDPAY,*110,ORDMOD
.
          COMPARE   ORDMOD,ZERO        * see if remittance would be full
          CALL      LCNT0000 IF NOT EQUAL
.
          ADD       ORDPAY,CRDPAY
          ADD       ORDMOD,CRDMOD
          ADD       ORDPAY,TOTPAY
          ADD       ORDMOD,TOTMOD
          GOTO      PLSK9999
.
.---- report 2 ----
.
PLSK5000
          PRINT     *1,APMACRD,SP2,APMACN1,*75,TMPPAY,*100,TMPMOD
          ADD       "1",CLNO
.
          ADD       TMPPAY,TOTPAY
          ADD       TMPMOD,TOTMOD
.
PLSK9999  RETURN
.------------------------------------------------------------
. LCNT - count lines on remittance
.------------------------------------------------------------
LCNT0000
          MOVE      F5,TESTLINE        * work out how many lines required
.
          MATCH     SP70,APIMCM1       * add on lines for comment (if req)
          IF        !@EQUAL
            ADD       ONE,TESTLINE
          ENDIF
          MATCH     SP70,APIMCM2
          IF        !@EQUAL
            ADD       ONE,TESTLINE
          ENDIF
.
          IF        !(TESTLINE < MAXLINES)
            MOVE      ZERO,F1
            MOVE      APAPGMT,F1
            IF        F1=0
              ADD       ONE,CHEQNUMB
            ENDIF
            MOVE      ZERO,F5
          ENDIF
          ADD       ONE,F5             * get next line
.
          MATCH     SP70,APIMCM1
          IF        !@EQUAL
            ADD       ONE,F5
          ENDIF
.
          MATCH     SP70,APIMCM2
          IF        !@EQUAL
            ADD       ONE,F5
          ENDIF
.
LCNT9999  RETURN
.------------------------------------------------------------
. Save Screen Display Line 23
.------------------------------------------------------------
GETSCR23  GETVAR    LINE23A,ATTR23A,1,23
          RETURN
.
.------------------------------------------------------------
. Restore Screen Display Line 23
.------------------------------------------------------------
PUTSCR23  PUTVAR    LINE23A,ATTR23A,1,23
          RETURN
.--------------------------------------------------------------------------
. Check if Debit Balance Creditor (Returns OVRCD (1=yes), TMPMOD=balance)
.--------------------------------------------------------------------------
DBALC000
          PACK      SKEY52,APAPCRD,APAPREF,APAPTYP,APAPDOC:
                           APAPORD,APAPLIN,APAPBCH,SP70
.                                           * save key and init totals
          MOVE      ZERO,TMPPAY
          MOVE      ZERO,TMPMOD
          PACK      KEY52,APAPCRD,SP70
          CALL      RSAPAP1
.
DBALC100  CALL      RKAPAP1
          BRANCH    OVRCD,DBALC200
.
          MATCH     APAPCRD,SKEY52
          GOTO      DBALC200 IF NOT EQUAL
.
          MOVE      WHICHORD,APAPPOR
          CALL      UPAPAP1
          ADD       APAPPAY,TMPPAY
          ADD       APAPGST,TMPPAY
          ADD       APAPTPY,TMPMOD
          GOTO      DBALC100
.
DBALC200  MOVE      SKEY52,KEY52
          CALL      RDAPAP1                 * restore original record
.
          COMPARE   TMPMOD,ZERO
          GOTO      DBALC950 IF NOT LESS
.
DBALC900  MOVE      ZERO,OVRCD
          GOTO      DBALC999
.
DBALC950  MOVE      ONE,OVRCD
.
DBALC999  RETURN
.--------------------------------------------------------------------------
. Check if Debit Balance Sort Key (Returns OVRCD (1=yes), TMPMOD=balance)
.--------------------------------------------------------------------------
DBALS000
          PACK      SKEY58,APAPSKY,APAPCRD,APAPREF,APAPTYP,APAPDOC:
                           APAPORD,APAPLIN,APAPBCH,SP70
.                                           * save key and init totals
          MOVE      ZERO,TMPPAY
          MOVE      ZERO,TMPMOD
          PACK      KEY58,APAPSKY,SP70
          CALL      RSAPAP4
DBALS100  CALL      RKAPAP4
          BRANCH    OVRCD,DBALS200
.
          MATCH     APAPSKY,SKEY58
          GOTO      DBALS200 IF NOT EQUAL
.
          ADD       APAPPAY,TMPPAY
          ADD       APAPGST,TMPPAY
          ADD       APAPTPY,TMPMOD
          GOTO      DBALS100
.
DBALS200  MOVE      SKEY58,KEY58
          CALL      RDAPAP4                 * restore original record
.
          COMPARE   TMPMOD,ZERO
          GOTO      DBALS950 IF NOT LESS
.
DBALS900  MOVE      ZERO,OVRCD
          GOTO      DBALS999
.
DBALS950  MOVE      ONE,OVRCD
.
DBALS999  RETURN
.**********************************************************************
. Calc Totals for Creditor
.**********************************************************************
CALC0000
          MOVE      ZERO,CRDPAY
          MOVE      ZERO,CRDMOD
.
          PACK      KEY52,APMACRD,SP70
          CALL      RSAPAP1
.
CALC1000
          CALL      RKAPAP1
          BRANCH    OVRCD,CALC8000
          MATCH     APAPCRD,APMACRD
          GOTO      CALC8000 IF NOT EQUAL
.
          ADD       APAPPAY,CRDPAY
          ADD       APAPGST,CRDPAY
          ADD       APAPTPY,CRDMOD
.
          GOTO      CALC1000
.
CALC8000
          MOVE      APMACRD,APAPCRD
.
CALC9999  RETURN
.**********************************************************************
. Print data
.**********************************************************************
GTYPE000
         MOVE       ZERO,F1
         MOVE       APAPTYP,F1
         MOVE       DISPTYP0,DISPTYP
         LOAD       DISPTYP,F1,DISPTYP1,DISPTYP2,DISPTYP3,DISPTYP4
         RETURN
.**********************************************************************
. Keyin Amounts
.**********************************************************************
KAMTS000
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,APAPTPY:
                    *PCCOL:CVERT,*DV,APAPTPY;
          ASSIGN    APAPGST+APAPPAY,ORIGTOT
          IF        ORIGTOT<ZERO
            IF        ORIGTOT>APAPTPY
              BEEP
              MOVE      "Cannot Be Less Than The Original Amount - ",DISPMSG
              CALL      MESSAGE1
              GOTO      KAMTS000
            ENDIF
          ELSE
            IF        ORIGTOT<APAPTPY
              BEEP
              MOVE      "Cannot Be Greater Than The Original Amount - ",DISPMSG
              CALL      MESSAGE1
              GOTO      KAMTS000
            ENDIF
          ENDIF
.
          CALL      UPAPAP1
.
KAMTS999  RETURN
.**********************************************************************
. Call screen 1A
.**********************************************************************
SCR1A000
          CALL      SC1AL000
          RETURN
.----------------------------------------------------------------------
. Read Data
.----------------------------------------------------------------------
RAPAP000
          CALL      RDAPAP1
.
RAPAP999  RETURN
.----------------------------------------------------------------------
. Read Data
.----------------------------------------------------------------------
RAPIN000
          UNPACK    SP70,APINLED,APINACC,APINDIS
          UNPACK    SP70,APINRES,APINCAT,APINDES
          PACK      KEY51,APAPBCH,APAPCRD,APAPREF,APAPDOC,APAPORD,APAPLIN,SP70
          UNPACK    KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL      RDAPIN1
.
RAPIN999  RETURN
.----------------------------------------------------------------------
. Read FMLA Data
.----------------------------------------------------------------------
RFMLA000
          MOVE     SP70,FMLADESC
          PACK     KEY2,APINLED
          CALL     RDFMLA1
.
RFMLA999  RETURN
.----------------------------------------------------------------------
. Read FMAM Data
.----------------------------------------------------------------------
RFMAM000
          MOVE     SP70,FMAMDESC
          PACK     KEY14,APINLED,APINACC
          CALL     RDFMAM1
.
RFMAM999  RETURN
.----------------------------------------------------------------------
. Read FMDS Data
.----------------------------------------------------------------------
RFMDS000
          MOVE     SP70,FMDSDESC
          PACK     KEY5,APINDIS
          CALL     RDFMDS1
.
RFMDS999  RETURN
.----------------------------------------------------------------------
. Read FMRS Data
.----------------------------------------------------------------------
RFMRS000
          MOVE     SP70,FMRSDESC
          PACK     KEY4,APINRES
          CALL     RDFMRS1
.
RFMRS999  RETURN
.**********************************************************************
. Calc outstanding amount
.**********************************************************************
GETAO000
          ASSIGN    APAPGST+APAPPAY,ORIGTOT
          RETURN
.----------------------------------------------------------------------
. Read Next
.----------------------------------------------------------------------
NEXT0000
          CALL      RKAPAP1
          MATCH     APMACRD,APAPCRD
          IF        !@EQUAL
            MOVE      ONE,OVRCD
          ENDIF
          IF        1=OVRCD
            CALL      RPAPAP1
            BEEP
          ENDIF
.
NEXT9999  RETURN
.----------------------------------------------------------------------
. Read PREV
.----------------------------------------------------------------------
PREV0000
          CALL      RPAPAP1
          MATCH     APMACRD,APAPCRD
          IF        !@EQUAL
            MOVE      ONE,OVRCD
          ENDIF
          IF        1=OVRCD
            CALL      RKAPAP1
            BEEP
          ENDIF
.
PREV9999  RETURN
.----------------------------------------------------------------------
. Read FIRS
.----------------------------------------------------------------------
FIRS0000
          REPEAT
            CALL      RPAPAP1
            MATCH     APMACRD,APAPCRD
            IF        !@EQUAL
              MOVE      ONE,OVRCD
            ENDIF
          UNTIL     OVRCD=1
          CALL      RKAPAP1
.
FIRS9999  RETURN
.----------------------------------------------------------------------
. Read LAST
.----------------------------------------------------------------------
LAST0000
          REPEAT
            CALL      RKAPAP1
            MATCH     APMACRD,APAPCRD
            IF        !@EQUAL
              MOVE      ONE,OVRCD
            ENDIF
          UNTIL     OVRCD=1
          CALL      RPAPAP1
.
LAST9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSAPYCD    
          INC       APSAPYIO/INC
          INC       APSBMFIO/INC
          INC       APSCAFIO/INC
          INC       APSCKIKY    
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCHQIO/INC
          INC       FMSCONIO/INC
          INC       FMSDISIO/INC
          INC       FMSLMAIO/INC
          INC       FMSRESIO/INC
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
.
          INC       STDGENCD
.
