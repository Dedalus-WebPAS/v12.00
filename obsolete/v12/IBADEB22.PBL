.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.01  28.02.2002  Glenn Saunders   srf 15126
.           Re-compile for changes in DEBDKIKY
. VF.09.B01 25.01.2001 Charles Handaya
.           Modification of BAS Statement
.           Create FD & IO for Import Billing Details text file
.-------------------------------------------------------
. VF.00.01  24.04.1999 Sandra Barcham
.           Make program match user manual V6.00.05
.           Write load debtors billing details V6.00.04
.           srf 645143
.-------------------------------------------------------
D2A       DIM       2
D50       DIM       50
ENDDAT    DIM       8
ENDDEB    DIM       8
ENDEXT    DIM       4
ERRFLAG   FORM      1
ERRLINE   DIM       127
LASTDATE  DIM       8
PHLENGTH  FORM      2
STRDAT    DIM       8
STRDEB    DIM       8
STREXT    DIM       4
TOTIDD    FORM      6
TOTLOC    FORM      6
TOTPULSE  FORM      6
TOTSTD    FORM      6
VALIDQTY  FORM      12.2
VALIDREC  FORM      8
Z50       INIT      "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBADEB22
.   Function      :   Import Billing Details                  
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       DEBBICFD/INC
          INC       DEBBILFD/INC
          INC       DEBCODFD/INC
          INC       DEBCONFD/INC
          INC       DEBDBTFD/INC
          INC       DEBDKIFD/INC
          INC       DEBIBDFD/INC
          INC       DEBITMFD/INC
          INC       DEBPTYFD/INC
          INC       IBACHGFD/INC
          INC       IBAEXTFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       IBAPBXFD/INC
.=========================
.Local Variable Definition
.-------------------------
INPUTFIL  DIM      40 * Scr 00 Fld     4
TOTALQTY  FORM     12.2 * Scr 00 Fld     5
TOTALREC  FORM      8 * Scr 00 Fld     6
FROMDEB   DIM      45 * Scr 02 Fld     4
TODEB     DIM      45 * Scr 02 Fld     5
FROMEXT   DIM      40 * Scr 02 Fld     6
TOEXT     DIM      40 * Scr 02 Fld     7
FROMDAT   DIM      10 * Scr 02 Fld     8
TODAT     DIM      10 * Scr 02 Fld     9
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBADEB22"
PRGNAM    INIT      "Import Billing Details                  "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC01L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   81",AUDTSECT
          MOVE      "  9",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudcd";
            OPEN      DEBAUDCD,"debaudcd"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 10",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debauddb";
            OPEN      DEBAUDDB,"debauddb"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 12",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudit";
            OPEN      DEBAUDIT,"debaudit"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 13",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudpt";
            OPEN      DEBAUDPT,"debaudpt"
          ENDIF
          DISPLAY   *P56:24,"Opening debbicaf";
          OPEN      DEBBICA1,"debbicaf"
          DISPLAY   *P56:24,"Opening debbilaf";
          OPEN      DEBBILA1,"debbilaf"
          DISPLAY   *P56:24,"Opening debbilaf";
          OPEN      DEBBILA2,"debbilaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA1,"debcodaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA2,"debcodaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA1,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA2,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA3,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA4,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA1,"debdkiaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA2,"debdkiaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA1,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA2,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA3,"debitmaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA1,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA2,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA3,"debptyaf"
          DISPLAY   *P56:24,"Opening  ibachgaf           ";
          OPEN      IBACHGA1,"ibachgaf"          
          DISPLAY   *P56:24,"Opening ibaextaf";
          OPEN      IBAEXTA1,"ibaextaf"
          DISPLAY   *P56:24,"Opening ibaextaf";
          OPEN      IBAEXTA2,"ibaextaf"
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
          DISPLAY   *P56:24,"Opening  ibapabxf           ";
          OPEN      IBAPBXA1,"ibapabxf"          
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Import Billing Details             
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Menu                               
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Generate Phone Charges             
          ENDIF
          RETURN
.--------------------------------
. Screen - Import Billing Details             
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Import Billing Details             
.-------------------------------------------------------
CF00L000
          MOVE      SP70,INPUTFIL
          MOVE      ZERO,TOTALQTY
          MOVE      ZERO,TOTALREC
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Import Billing Details             
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Import Billing Details             
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Import Billing Details             
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Import Billing Details             
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Import Billing Details             
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103
          GOTO     PS00L999
.
PS00L101
          MOVE      INPUTFIL,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TOTALQTY,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      TOTALREC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Import Billing Details             
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L105
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L104,SF00L105
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      POST0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL     SELECTED
          STRIP     INPUTFIL
          SFORMAT   VAR,SCPSLEN
          MOVE      INPUTFIL,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,INPUTFIL
          SFORMAT   VAR,127
          ENDSET    INPUTFIL
          APPEND    SP70,INPUTFIL
          RESET     INPUTFIL
          CMATCH    EXITCHAR,INPUTFIL
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,INPUTFIL
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
          ENDIF
          MOVE      INPUTFIL,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,TOTALQTY
          IF        SCPSMAN=1
            COMPARE   ZERO,TOTALQTY
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
          ENDIF
          MOVE      TOTALQTY,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,TOTALREC
          IF        SCPSMAN=1
            COMPARE   ZERO,TOTALREC
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
          ENDIF
          MOVE      TOTALREC,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - Menu                               
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Menu                               
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Menu                               
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Menu                               
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Menu                               
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Menu                               
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Menu                               
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Menu                               
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          CALL      SC00L000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L103
          MOVE      ZERO,EXIT
          GOTO      SF01L999
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Generate Phone Charges             
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
          CALL      MVACCEPT
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Generate Phone Charges             
.-------------------------------------------------------
CF02L000
          MOVE      SP70,FROMDEB 
          MOVE      SP70,TODEB   
          MOVE      SP70,FROMEXT 
          MOVE      SP70,TOEXT   
          MOVE      SP70,FROMDAT 
          MOVE      SP70,TODAT   
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Generate Phone Charges             
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Generate Phone Charges             
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Generate Phone Charges             
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Generate Phone Charges             
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Generate Phone Charges             
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L103,PS02L104,PS02L105:
                            PS02L106
          GOTO     PS02L999
.
PS02L101
          MOVE      FROMDEB,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      TODEB,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      FROMEXT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      TOEXT,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      FROMDAT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      TODAT,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Generate Phone Charges             
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L104,SF02L006,SF02L105:
                            SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L103:
                            SF02L020,SF02L104,SF02L020,SF02L105:
                            SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      PROC0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODEB   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RDEBT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L103
            ENDIF
            BRANCH    EXIT,SF02L103,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMDEB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODEB,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOEXT   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      REXTE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMEXT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOEXT,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODAT   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RDATE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L105
            ENDIF
            BRANCH    EXIT,SF02L105,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMDAT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODAT,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      ONE,EXIT * Exit Char Restart
SF02L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.---------------------
. Process Import File
.---------------------
POST0000  MOVE      FALSE,EXIT
.
          MOVE      "90",CLNO          * Setup Report Parameters
          MOVE      "0",CPAGENO
          CLOCK     TIME,CTIMEIS
.
          MOVE      ZERO,VALIDQTY
          MOVE      ZERO,ERRFLAG       * 0=ok, 1=err+print, 2=quit
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2           * save & clear line 24
.
          STRIP     INPUTFIL
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      DEBIBDA1,INPUTFIL
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      POST8020 IF EQUAL
          MOVE      ZERO,SECTOR
.
POST0100  IF        SECTOR%100=0
            DISPLAY   *P1:24,"Verifying : ",*V2LON,SECTOR,*EL;
          ENDIF
          MOVE      ZERO,EXIT
          TRAP      FORMAT00 IF FORMAT
          CALL      RKDBIB1
          TRAPCLR   FORMAT
          BRANCH    EXIT,POST8030      * format error ?
          BRANCH    OVRCD,POST1000     * end of file ?
.
POST0200  PACK      KEY8,DBIBDEBT,SP70
          CALL      RDDBDB1
          BRANCH    OVRCD,POST8040     * debtor does not exist ?
.
          COMPARE   ONE,DBDBACT
          GOTO      POST8070 IF NOT EQUAL
.
          PACK      KEY8,DBIBITEM,SP70
          CALL      RDDBIT1
          BRANCH    OVRCD,POST8050     * sales item does not exist ?
.
          COMPARE   ONE,DBITACT
          GOTO      POST8060 IF NOT EQUAL
.
          PACK      KEY6,DBIBGST,SP70
          CALL      RDIBGS1
          BRANCH    OVRCD,POST8100     * GST Code does not exist ?
.
          COMPARE   ONE,IBGSACTV
          GOTO      POST8110 IF EQUAL
.
          REP       " 0",DBIBSERD
          UNPACK    DBIBSERD,D4,D2,D2A
          MATCH     "1900",D4
          GOTO      POST8010 IF LESS
          MATCH     "01",D2
          GOTO      POST8010 IF LESS
          MATCH     "13",D2
          GOTO      POST8010 IF NOT LESS
          MATCH     "01",D2A
          GOTO      POST8010 IF LESS
          MATCH     "32",D2A
          GOTO      POST8010 IF NOT LESS
.
          ADD       DBIBQTY,VALIDQTY
.
POST0300  ADD       ONE,SECTOR
          GOTO      POST0100
.
.---- Write to Debtors billing details ----
.
POST1000  IF        VALIDQTY<>TOTALQTY
            GOTO      POST8080
          ENDIF
          IF        SECTOR<>TOTALREC
            GOTO      POST8090
          ENDIF
.
          BRANCH    ERRFLAG,POST9200   * errors found ?
.
          OPEN      DEBIBDA1,INPUTFIL
          MOVE      ZERO,SECTOR
.
POST1100  IF        SECTOR%100=0
            DISPLAY   *P1:24,"Updating : ",*V2LON,SECTOR,*EL;
          ENDIF
          CALL      RKDBIB1
          BRANCH    OVRCD,POST9100     * end of file ?
.
          MOVE      ONE,F6
          PACK      KEY14,DBIBDEBT,Z70,SP70
          CALL      RSDBBI1
          CALL      RPDBBI1
          BRANCH    OVRCD,POST1200
.
          MATCH     DBIBDEBT,DBBIDEB
          GOTO      POST1200 IF NOT EQUAL
.
          MOVE      DBBIUNI,F6
POST1190  ADD       ONE,F6
.
POST1200  MOVE      F6,DBBIUNI
          REP       " 0",DBBIUNI
          PACK      KEY14,DBIBDEBT,DBBIUNI,SP70
          CALL      RDDBBI1
          BRANCH    OVRCD,POST1250
          GOTO      POST1190
.
POST1250  PACK      KEY8,DBIBITEM,SP70
          CALL      RDDBIT1
          PACK      KEY8,DBIBDEBT,SP70
          CALL      RDDBDB1
          IF        DBIBPRIC=0
            MOVE      DBITPRI,DBBIPRI
            MATCH     SP70,DBIBGST
            IF        @EQUAL
              MOVE      DBITGST,DBBIGST
            ELSE
              MOVE      DBIBGST,DBBIGST
            ENDIF
          ELSE
            MOVE      DBIBPRIC,DBBIPRI
            MOVE      DBIBGST,DBBIGST
          ENDIF
          IF        DBITMOD=0
            MOVE       DBITPRI,DBBIPRI
          ENDIF
          MOVE      DBIBQTY,DBBIQTY
          ASSIGN    (DBBIPRI*DBBIQTY),DBBITOT
          MOVE      DBIBSERD,DBBISDAT
          REP       " 0",DBBISDAT
.
          CALL      CALTAX00
.
          MOVE      DBIBDEBT,DBBIDEB
          MOVE      ONE,DBBISTA
          PACK      DBBIDAT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",DBBIDAT
          CLOCK     TIME,CTIMEIS
          UNPACK    CTIMEIS,CHOUR,KEY1,CMON,KEY1,KEY2
          PACK      DBBITIM,CHOUR,CMON,KEY2
          MOVE      PASSCODE,DBBIUID
          MOVE      DBIBITEM,DBBIITM
          MOVE      DBIBDREF,DBBIDREF
          MOVE      DBIBOREF,DBBIOREF
          MOVE      SP70,DBBIUR1
          MOVE      SP70,DBBIUR2
          MOVE      SP70,DBBIUD1
          MOVE      SP70,DBBIUD2
          MOVE      SP70,DBBIUY1
          MOVE      SP70,DBBIUY2
          MOVE      SP70,DBBIUC1
          MOVE      SP70,DBBIUC2
          MOVE      SP70,DBBIUC3
          MOVE      SP70,DBBIUC4
          MOVE      SP70,DBBISPA
.
          PACK      KEY14,DBBIDEB,DBBIUNI,SP70
          CALL      WRDBBI1
.
          MATCH     SP70,DBIBCMT1
          GOTO      POST1300 IF EQUAL
.
          MOVE      DBIBCMT1,D50
          CALL      WRTCM000
.
POST1300  MATCH     SP70,DBIBCMT2
          GOTO      POST1310 IF EQUAL
.
          MOVE      DBIBCMT2,D50
          CALL      WRTCM000
.
POST1310  MATCH     SP70,DBIBCMT3
          GOTO      POST1320 IF EQUAL
.
          MOVE      DBIBCMT3,D50
          CALL      WRTCM000
.
POST1320  MATCH     SP70,DBIBCMT4
          GOTO      POST1330 IF EQUAL
.
          MOVE      DBIBCMT4,D50
          CALL      WRTCM000
.
POST1330  ADD       ONE,SECTOR
          GOTO      POST1100
.
.---- errors ----
.
POST8010  COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"Invalid Date ",DBIBSERD," on line ",SECTOR:
                    " of file ",INPUTFIL
          MOVE      "1",ERRFLAG
          GOTO      POST0300
.
POST8020  COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"File ",INPUTFIL," Missing"
          MOVE      "1",ERRFLAG
          GOTO      POST9200
.
POST8030  COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"Format Error on line ",SECTOR," of file ",INPUTFIL
          MOVE      "1",ERRFLAG
          GOTO      POST9200
.
POST8040  CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    INPUTFIL,ERRLINE
          APPEND    " - Debtor ",ERRLINE
          APPEND    DBIBDEBT,ERRLINE
          APPEND    " Does Not Exist",ERRLINE
          RESET     ERRLINE
.
          IF        ERRFLAG=0
            MOVE      ZERO,EXIT
            CALL      DEBTS000                     * change debtor
            BRANCH    EXIT,POST0200,POST9000       * 0=continue, 1=retry, 2=quit
          ENDIF
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      POST0300
.
POST8050  CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    INPUTFIL,ERRLINE
          APPEND    " - Sales Item ",ERRLINE
          APPEND    DBIBITEM,ERRLINE
          APPEND    " Does Not Exist",ERRLINE
          RESET     ERRLINE
.
          IF        ERRFLAG=0
            MOVE      ZERO,EXIT
            CALL      SALES000                 * sales item
            BRANCH    EXIT,POST0200,POST9000       * 0=continue, 1=retry, 2=quit
          ENDIF
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      POST0300
.
POST8060  CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    INPUTFIL,ERRLINE
          APPEND    " - Sales Item ",ERRLINE
          APPEND    DBIBITEM,ERRLINE
          APPEND    " Not Active",ERRLINE
          RESET     ERRLINE
.
          IF        ERRFLAG=0
            MOVE      ZERO,EXIT
            CALL      SALES000                 * change account
            BRANCH    EXIT,POST0200,POST9000       * 0=continue, 1=retry, 2=quit
          ENDIF
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      POST0300
.
POST8070  CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    INPUTFIL,ERRLINE
          APPEND    " - Debtor ",ERRLINE
          APPEND    DBIBDEBT,ERRLINE
          APPEND    " Not Active",ERRLINE
          RESET     ERRLINE
.
          IF        ERRFLAG=0
            MOVE      ZERO,EXIT
            CALL      DEBTS000                     * change account
            BRANCH    EXIT,POST0200,POST9000       * 0=continue, 1=retry, 2=quit
          ENDIF
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      POST0300
.
POST8080  COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"Entered Quantity (",TOTALQTY,") not equal ":
                    "to Temporary File (",VALIDQTY,")"
          MOVE      "1",ERRFLAG
          GOTO      POST9200
.
POST8090  COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"Entered Number of Records (",TOTALREC,") not equal ":
                    "to Temporary File (",SECTOR,")"
          MOVE      "1",ERRFLAG
          GOTO      POST9200
.
POST8100  CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    INPUTFIL,ERRLINE
          APPEND    " - GST Code ",ERRLINE
          APPEND    DBIBGST,ERRLINE
          APPEND    " Does Not Exist",ERRLINE
          RESET     ERRLINE
.
          IF        ERRFLAG=0
            MOVE      ZERO,EXIT
            CALL      GSTCD000                 * GST Code
            BRANCH    EXIT,POST0200,POST9000       * 0=continue, 1=retry, 2=quit
          ENDIF
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      POST0300
.
POST8110  CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    INPUTFIL,ERRLINE
          APPEND    " - GST Code ",ERRLINE
          APPEND    DBIBGST,ERRLINE
          APPEND    " Not Active",ERRLINE
          RESET     ERRLINE
.
          IF        ERRFLAG=0
            MOVE      ZERO,EXIT
            CALL      GSTCD000                 * change GST Code
            BRANCH    EXIT,POST0200,POST9000       * 0=continue, 1=retry, 2=quit
          ENDIF
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      POST0300
.
POST9000  MOVE      ZERO,EXIT
          BEEP
          KEYIN     *P1:24,*EL,"Interface Cancelled. Delete Interface File":
                               " (Y/N) ? ",ANS
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      POST9999 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      POST9100 IF NOT EQUAL
          CLOSE     DEBIBDA1
          PREPARE   DEBIBDA1,INPUTFIL
          CLOSE     DEBIBDA1
          GOTO      POST9999
.
POST9100  MOVE      ZERO,EXIT
          BEEP
          KEYIN     *P1:24,*EL,"Interface Complete. Delete Interface File":
                               " (Y/N) ? ",ANS
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      POST9999 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      POST9100 IF NOT EQUAL
          CLOSE     DEBIBDA1
          PREPARE   DEBIBDA1,INPUTFIL
          CLOSE     DEBIBDA1
          GOTO      POST9999
.
POST9200  DISPLAY   *P1:24,"Errors Found. Error Report Has Been Created - ";
          CALL      HITENTER
          CALL      UND132
          PRINT     *50,"**** End of Report. NO Items Written ****"
          MOVE      ZERO,EXIT
.
POST9999  RETURN
.**********************************************************************
. Set exit
.**********************************************************************
FORMAT00  MOVE      "1",EXIT
          RETURN
.**********************************************************************
.  DEBTS - Handle invalid debtors                        Called By RUNINT
.        Requires - ERRLINE  (problem with current account)
.        Returns  - EXIT     (0=cont, 1=retry, 2=quit)
.**********************************************************************
DEBTS000  DISPLAY   *P1:23,*B,*+,ERRLINE,*EL:
                    *P1:24,"(",*V2LON:
                    "C",*HOFF,")ontinue & Create Error Report, (",*V2LON:
                    "M",*HOFF,")odify Debtor, (",*V2LON:
                    "Q",*HOFF,")uit ? ",*EL;
          KEYIN     *V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "C",ANS
          GOTO      DEBTS900 IF EQUAL
          MATCH     "M",ANS
          GOTO      DEBTS100 IF EQUAL
          MATCH     "Q",ANS
          GOTO      DEBTS970 IF EQUAL
          BEEP
          GOTO      DEBTS000
.
.----- modify ----
.
DEBTS100  DISPLAY   *P1:24,"Debtor : ",*EL;
          MOVE      "10",CCOL
          MOVE      "24",CVERT
          CALL      KDBDBA00
          BRANCH    EXIT,DEBTS000,DEBTS000
          DISPLAY   *PCCOL:CVERT,*V2LON,DBDBDEB;
.
          KEYIN     *HOFF,"     OK (",*V2LON:
                    "Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
          MOVE      "34",CCOL
          MOVE      "24",CVERT
          CALL      YORN0000
          COMPARE   "1",FYESNO
          GOTO      DEBTS100 IF NOT EQUAL
.
          MOVE      DBDBDEB,DBIBDEBT
          CALL      WRDBIB1
          GOTO      DEBTS950
.
DEBTS900  MOVE      ZERO,EXIT          * continue
          GOTO      DEBTS999
.
DEBTS950  MOVE      ONE,EXIT           * retry
          GOTO      DEBTS999
.
DEBTS970  MOVE      TWO,EXIT           * quit
          GOTO      DEBTS999
.
DEBTS999  DISPLAY   *P1:24,*EL;
          RETURN
.
.**********************************************************************
.  SALES - Handle invalid sales items                    Called By RUNINT
.        Requires - ERRLINE  (problem with current account)
.        Returns  - EXIT     (0=cont, 1=retry, 2=quit)
.**********************************************************************
SALES000  DISPLAY   *P1:23,*B,*+,ERRLINE,*EL:
                    *P1:24,"(",*V2LON:
                    "C",*HOFF,")ontinue & Create Error Report, (",*V2LON:
                    "M",*HOFF,")odify Sales Item, (",*V2LON:
                    "Q",*HOFF,")uit ? ",*EL;
          KEYIN     *V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "C",ANS
          GOTO      SALES900 IF EQUAL
          MATCH     "M",ANS
          GOTO      SALES100 IF EQUAL
          MATCH     "Q",ANS
          GOTO      SALES970 IF EQUAL
          BEEP
          GOTO      SALES000
.
.----- modify ----
.
SALES100  DISPLAY   *P1:24,"Sales Item : ",*EL;
          MOVE      "14",CCOL
          MOVE      "24",CVERT
          CALL      KDBITA00
          BRANCH    EXIT,SALES000,SALES000
          DISPLAY   *PCCOL:CVERT,*V2LON,DBITITM;
.
          KEYIN     *HOFF,"     OK (",*V2LON:
                    "Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          CALL      YORN0000
          COMPARE   "1",FYESNO
          GOTO      SALES100 IF NOT EQUAL
.
          MOVE      DBITITM,DBIBITEM
          CALL      WRDBIB1
          GOTO      SALES950
.
SALES900  MOVE      ZERO,EXIT          * continue
          GOTO      SALES999
.
SALES950  MOVE      ONE,EXIT           * retry
          GOTO      SALES999
.
SALES970  MOVE      TWO,EXIT           * quit
          GOTO      SALES999
.
SALES999  DISPLAY   *P1:24,*EL;
          RETURN
.
.**********************************************************************
.  GSTCD - Handle invalid GST Code                  Called By POST8100 POST8110
.        Requires - ERRLINE  (problem with current account)
.        Returns  - EXIT     (0=cont, 1=retry, 2=quit)
.**********************************************************************
GSTCD000  DISPLAY   *P1:23,*B,*+,ERRLINE,*EL:
                    *P1:24,"(",*V2LON:
                    "C",*HOFF,")ontinue & Create Error Report, (",*V2LON:
                    "M",*HOFF,")odify GST Code, (",*V2LON:
                    "Q",*HOFF,")uit ? ",*EL;
          KEYIN     *V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "C",ANS
          GOTO      GSTCD900 IF EQUAL
          MATCH     "M",ANS
          GOTO      GSTCD100 IF EQUAL
          MATCH     "Q",ANS
          GOTO      GSTCD970 IF EQUAL
          BEEP
          GOTO      GSTCD000
.
.----- modify ----
.
GSTCD100  DISPLAY   *P1:24,"GST Code   : ",*EL;
          MOVE      "14",CCOL
          MOVE      "24",CVERT
          CALL      KIBGSA00
          BRANCH    EXIT,GSTCD000,GSTCD000
          DISPLAY   *PCCOL:CVERT,*V2LON,IBGSCODE;
.
          KEYIN     *HOFF,"     OK (",*V2LON:
                    "Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          CALL      YORN0000
          COMPARE   "1",FYESNO
          GOTO      GSTCD100 IF NOT EQUAL
.
          MOVE      IBGSCODE,DBIBGST
          CALL      WRDBIB1
          GOTO      GSTCD950
.
GSTCD900  MOVE      ZERO,EXIT          * continue
          GOTO      GSTCD999
.
GSTCD950  MOVE      ONE,EXIT           * retry
          GOTO      GSTCD999
.
GSTCD970  MOVE      TWO,EXIT           * quit
          GOTO      GSTCD999
.
GSTCD999  DISPLAY   *P1:24,*EL;
          RETURN
.
WRTCM000  MOVE      ZERO,F3
          PACK      KEY17,DBBIDEB,DBBIUNI,Z50
          CALL      RSDBBC1
          CALL      RPDBBC1
          BRANCH    OVRCD,WRTCM100
.
          MATCH     DBBIDEB,DBBCDEB
          GOTO      WRTCM100 IF NOT EQUAL
          MATCH     DBBIUNI,DBBCUNI
          GOTO      WRTCM100 IF NOT EQUAL
.
          MOVE      DBBCLIN,F3
WRTCM090  ADD       ONE,F3
.
WRTCM100  MOVE      F3,DBBCLIN
          MOVE      DBBIDEB,DBBCDEB
          MOVE      DBBIUNI,DBBCUNI
          MOVE      D50,DBBCCOM
          PACK      DBBCSPA,SP70
.
          PACK      KEY17,DBBCDEB,DBBCUNI,DBBCLIN,SP70
          CALL      RADBBC1
          IF        OVRCD<>1
            GOTO      WRTCM090
          ENDIF
.
          CALL      WRDBBC1
.
WRTCM999  RETURN
.
CALTAX00  MOVE      ZERO,DBBITRT
          MOVE      ZERO,DBBITAX
.
          MATCH     SP6,DBBIGST
          GOTO      CALTAX99 IF EQUAL
.
          COMPARE   ONE,DBDBTEX
          GOTO      CALTAX99 IF EQUAL
.
          PACK      KEY14,DBBIGST,DBBISDAT,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX99
.
          MATCH     DBBIGST,IBGECODE
          GOTO      CALTAX99 IF NOT EQUAL
.
CALTAX10  IF        IBGEAMNT<>0
            ASSIGN    (DBBITOT*IBGEAMNT)/100.0,DBBITAX
          ENDIF
.
CALTAX99  RETURN
.------------------------------------------------------------
. Process Phone Charges
.------------------------------------------------------------
PROC0000  DISPLAY  *P1:24,*EL,"Processing ... "
          READ     CONTROLF,EIGHTY7;CFDBLOCS,CFDBSTDS,CFDBIDDS
          MOVE     "99",CLNO
          MOVE     ZERO,CPAGENO
          PACK     KEY12,STRDEB,SP70
          CALL     RSIBEXT2
PROC1000  CALL     RKIBEXT2
          BRANCH   OVRCD,PROC9000
          MATCH    IBEXDEBT,ENDDEB
          GOTO     PROC9000 IF LESS
          MATCH    SP70,IBEXDEBT
          GOTO     PROC1000 IF EQUAL
          MOVE     IBEXDEBT,KEY8
          CALL     RDDBDB1
          BRANCH   OVRCD,PROC1000
.
          MATCH    STREXT,IBEXEXTN
          GOTO     PROC1000 IF LESS
          MATCH    IBEXEXTN,ENDEXT
          GOTO     PROC1000 IF LESS
.
          DISPLAY  *P30:24,IBEXDEBT,"/",IBEXEXTN
.
          CALL     PCALC000             * Calculate Pulses
          COMPARE  ZERO,TOTPULSE        * NO Charges
          GOTO     PROC1000 IF EQUAL
.
          CALL     WRTRN000             * Write Billing Transactions
.
          GOTO     PROC1000
.
PROC9000  CALL     UND132
          PRINT    *50,"***** End of Report *****"
          MOVE     "Complete - ",DISPMSG
          CALL     MESSAGE1
.
PROC9999  RETURN
.------------------------------------------------------------
. Calculate Local, STD, IDD Pulses
.------------------------------------------------------------
PCALC000  PACK     KEY20,IBEXEXTN,STRDAT,SP70
          MOVE     ZERO,TOTPULSE
          MOVE     ZERO,TOTIDD
          MOVE     ZERO,TOTSTD
          MOVE     ZERO,TOTLOC
          CALL     RSIBPBX1
PCALC100  CALL     RKIBPBX1
          BRANCH   OVRCD,PCALC999
          MATCH    IBEXEXTN,IBPBEXTN
          GOTO     PCALC999 IF NOT EQUAL
          MATCH    IBPBSDAT,ENDDAT
          GOTO     PCALC999 IF LESS
.
          MATCH    SP70,IBPBBILD
          GOTO     PCALC100 IF NOT EQUAL
.
          ADD      IBPBPULS,TOTPULSE
          MOVE     IBPBSDAT,LASTDATE            * Last Call Processed
.
          MATCH    "001",IBPBPHNO
          GOTO     PCALC140 IF EQUAL
.
          COMPARE  ONE,IBPBPULS
          GOTO     PCALC120 IF NOT EQUAL
.
          STRIP    IBPBPHNO
          MOVELPTR IBPBPHNO,PHLENGTH            * get length of phone no.
          COMPARE  NINE,PHLENGTH                * phone no. < 9 digits?
          GOTO     PCALC130 IF LESS
. STD
PCALC120  ADD      IBPBPULS,TOTSTD
          GOTO     PCALC100
. Local
PCALC130  ADD      IBPBPULS,TOTLOC
          GOTO     PCALC100
. International
PCALC140  ADD      IBPBPULS,TOTIDD
          GOTO     PCALC100
.
PCALC999  RETURN
.------------------------------------------------------------
. Write Billing Transactions
.------------------------------------------------------------
WRTRN000  MOVE     IBEXCHRG,KEY3
          CALL     RDIBCHG1
          BRANCH   OVRCD,WRTRN999
.
          COMPARE  ZERO,TOTLOC          * Local Calls
          GOTO     WRTRN100 IF EQUAL
          CALL     GETUNI00             * Get Next Unique ID & Setup Variables
          MOVE     CFDBLOCS,DBBIITM
          MOVE     TOTLOC,DBBIQTY
          CALL     WRBIL000             * Write Record
.
WRTRN100  COMPARE  ZERO,TOTSTD          * STD Calls
          GOTO     WRTRN200 IF EQUAL
          CALL     GETUNI00             * Get Next Unique ID & Setup Variables
          MOVE     CFDBSTDS,DBBIITM
          MOVE     TOTSTD,DBBIQTY
          CALL     WRBIL000             * Write Record
.
.
WRTRN200  COMPARE  ZERO,TOTIDD          * IDD Calls
          GOTO     WRTRN900 IF EQUAL
          CALL     GETUNI00             * Get Next Unique ID & Setup Variables
          MOVE     CFDBIDDS,DBBIITM
          MOVE     TOTIDD,DBBIQTY
          CALL     WRBIL000             * Write Record
.
WRTRN900  CALL     UPPBX000             * Update Item Billed
.
WRTRN999  RETURN
.------------------------------------------------------------
. Write Record
.------------------------------------------------------------
WRBIL000  MOVE     IBCHRATE,DBBIPRI
          ASSIGN   DBBIQTY*DBBIPRI,DBBITOT
          MOVE     SP6,DBBIGST
          MOVE     ZERO,DBBITRT
          MOVE     ZERO,DBBITAX
          PACK     KEY8,DBITITM,SP70
          CALL     RDDBIT1
          IF       OVRCD<>1
            CALL     CALTAX00
          ENDIF
          PACK     KEY14,DBBIDEB,F6       * Setup Key to File
          CALL     RADBBI1
          IF       OVRCD=0
            ADD      ONE,F6
            GOTO     WRBIL000
          ENDIF
          MOVE     F6,DBBIUNI
          CALL     WRDBBI1
          CALL     PRLINE00    * Print Audit
          RETURN
.------------------------------------------------------------
. Print Line
.------------------------------------------------------------
PRLINE00  COMPARE   "55",CLNO
          CALL      PHEAD000 IF NOT LESS
          MOVE      DBBIDEB,KEY8
          CALL      RDDBDB1
          MOVE      DBDBNA1,KEY28
          MOVE      DBBIITM,KEY8
          CALL      RDDBIT1
          MOVE      DBITDES,KEY24
          UNPACK    DBBISDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     DBBIDEB,SP1,KEY28,SP1,DBBIUNI,SP1,DBBIITM,KEY24,SP1:
                    CPCDATE,DBBIQTY,DBBIPRI,DBBITOT
          PRINT     *10,DBBIDREF
          ADD       "2",CLNO
          RETURN
.
PHEAD000  CALL      HEAD132
          PRINT     "Debtors From ",FROMDEB," to ",TODEB
          PRINT     "Extensions From ",FROMEXT," to ",TOEXT
          PRINT     "Call Date  From ",FROMDAT," to ",TODAT
          CALL      UND132
          PRINT     "Debtor   Reference                    ID     Sales Item":
                    "                          Date            Qty          ":
                    "  Price          Total"
          CALL      UND132
          ADD       "3",CLNO
          RETURN
.------------------------------------------------------------
. Get Unique Id for Billing Record and Move in Fields
.------------------------------------------------------------
GETUNI00  MOVE      ONE,F6
          PACK      KEY14,IBEXDEBT,Z70       * Setup Key to File
          CALL      RSDBBI1
          CALL      RPDBBI1
          BRANCH    OVRCD,GETUNI90
          MATCH     IBEXDEBT,DBBIDEB
          GOTO      GETUNI90 IF NOT EQUAL
          MOVE      DBBIUNI,F6
          ADD       ONE,F6
.
GETUNI90  MOVE      IBEXDEBT,DBBIDEB
          MOVE      ONE,DBBISTA
          PACK      DBBIDAT,CCC,CYY,CMM,CDD
          REP       " 0",DBBIDAT
          CLOCK     TIME,CTIMEIS
          UNPACK    CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK      DBBITIM,CHOUR,CMIN,KEY2
          MOVE      PASSCODE,DBBIUID
          MOVE      LASTDATE,DBBISDAT
.
          CLEAR     DBBIDREF
          APPEND    "Ext. ",DBBIDREF
          APPEND    IBEXEXTN,DBBIDREF
          APPEND    " Period ",DBBIDREF
          APPEND    FROMDAT,DBBIDREF
          APPEND    " to ",DBBIDREF
          APPEND    TODAT,DBBIDREF
          APPEND    SP70,DBBIDREF
          RESET     DBBIDREF
.
          MOVE      ZERO,DBBITRT
          MOVE      ZERO,DBBITAX
          MOVE      SP70,DBBIUR1
          MOVE      SP70,DBBIUR2
          MOVE      SP70,DBBIUC1
          MOVE      SP70,DBBIUC2
          MOVE      SP70,DBBIUC3
          MOVE      SP70,DBBIUC4
          MOVE      SP70,DBBIUD1
          MOVE      SP70,DBBIUD2
          MOVE      ZERO,DBBIUY1
          MOVE      ZERO,DBBIUY2
          MOVE      SP70,DBBISPA
          RETURN
.------------------------------------------------------------
. Update Billing Date
.------------------------------------------------------------
UPPBX000  PACK     KEY20,IBEXEXTN,STRDAT,SP70
          CALL     RSIBPBX1
UPPBX100  CALL     RKIBPBX1
          BRANCH   OVRCD,UPPBX999
          MATCH    IBEXEXTN,IBPBEXTN
          GOTO     UPPBX999 IF NOT EQUAL
          MATCH    IBPBSDAT,ENDDAT
          GOTO     UPPBX999 IF LESS
.
          MATCH    SP70,IBPBBILD
          GOTO     UPPBX100 IF NOT EQUAL
.
          PACK     IBPBBILD,CCC,CYY,CMM,CDD
          REP      " 0",IBPBBILD
          CALL     UPIBPBX1
          GOTO     UPPBX100
.
UPPBX999  RETURN
.--------------------------------------------------
. Enter Range
.  where DBDB    = System & File for Keyin Routines
.        DEB     = Field ID
.        RDEBT   = Call Routine Label
.        "    1" = Screen Item Number for "from" Variable
.        "    2" = Screen Item Number for "to" Variable
.        yyyyy.. = Description of Variable
.
.  Return Values
.        FROMDEB  Code & Description for Start of Range
.        TODEB    Code & Description for End of Range
.        STRDEB   Code for Start of Range
.        ENDDEB   Code for End of Range
.--------------------------------------------------
RDEBT000   MOVE     "    4",FLDID
           CALL     GETPOSIT
           CALL     KDBDBA00
           BRANCH   EXIT,RDEBT100,RDEBT999
           MOVE     DBDBDEB,STRDEB
           PACK     FROMDEB,DBDBDEB,SP1,DBDBNA1
           GOTO     RDEBT140
RDEBT100   MOVE     "Start             ",FROMDEB
           MOVE     SP70,STRDEB
.
RDEBT140   MOVE     FROMDEB,VAR
           CALL     DISPITEM
.
RDEBT150   MOVE     "    5",FLDID
           CALL     GETPOSIT
           CALL     KDBDBA00
           BRANCH   EXIT,RDEBT200,RDEBT999
           MOVE     DBDBDEB,ENDDEB
           PACK     TODEB,DBDBDEB,SP1,DBDBNA1
           MATCH    STRDEB,ENDDEB
           GOTO     RDEBT999 IF EQUAL
           GOTO     RDEBT999 IF NOT LESS
           BEEP
           MOVE     "To Debtor Must Be > From Debtor - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RDEBT000
.
RDEBT200   MOVE     "Finish             ",TODEB
           MOVE     Z70,ENDDEB
.
RDEBT999   MOVE     "    4",FLDID
           CALL     GETPOSIT
           RETURN
.
.--------------------------------------------------
. Enter Range
.  where IBEX    = System & File for Keyin Routines
.        EXT     = Field ID
.        REXTE   = Call Routine Label
.        "    1" = Screen Item Number for "from" Variable
.        "    2" = Screen Item Number for "to" Variable
.        yyyyy.. = Description of Variable
.
.  Return Values
.        FROMEXT  Code & Description for Start of Range
.        TOEXT    Code & Description for End of Range
.        STREXT   Code for Start of Range
.        ENDEXT   Code for End of Range
.--------------------------------------------------
REXTE000   MOVE     "    6",FLDID
           CALL     GETPOSIT
           CALL     KIBEXA00
           BRANCH   EXIT,REXTE100,REXTE999
           MOVE     IBEXEXTN,STREXT
           PACK     FROMEXT,IBEXEXTN,SP1,IBEXDESC
           GOTO     REXTE140
REXTE100   MOVE     "Start             ",FROMEXT
           MOVE     SP70,STREXT
.
REXTE140   MOVE     FROMEXT,VAR
           CALL     DISPITEM
.
REXTE150   MOVE     "    7",FLDID
           CALL     GETPOSIT
           CALL     KIBEXA00
           BRANCH   EXIT,REXTE200,REXTE999
           MOVE     IBEXEXTN,ENDEXT
           PACK     TOEXT,IBEXEXTN,SP1,IBEXDESC
           MATCH    STREXT,ENDEXT
           GOTO     REXTE999 IF EQUAL
           GOTO     REXTE999 IF NOT LESS
           BEEP
           MOVE     "To Extension Must Be > From Extension - ",DISPMSG
           CALL     MESSAGE1
           GOTO     REXTE000
.
REXTE200   MOVE     "Finish             ",TOEXT
           MOVE     Z70,ENDEXT
.
REXTE999   MOVE     "    6",FLDID
           CALL     GETPOSIT
           RETURN
.
.----------------------------------------
. Enter Date Range
.  where DAT     = Field ID
.        RDATE   = Call Routine Label
.        "    1" = Screen Item Number for "from" Variable
.        "    2" = Screen Item Number for "to" Variable
.
.  Return Values
.        FROMDAT  Date for Start of Range Formatted in a DIM 10
.        TODAT    Date for End of Range Formatted in a DIM 10
.        STRDAT   Date for Start of Range Format CCYYMMDD
.        ENDDAT   Date for End of Range Format CCYYMMDD
.----------------------------------------
RDATE000   MOVE     "    8",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RDATE100
           MATCH    SP2,CDAY
           GOTO     RDATE100 IF EQUAL
           PACK     STRDAT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",STRDAT
           CALL     PACDATE
           MOVE     CPCDATE,FROMDAT
           GOTO     RDATE140
RDATE100   MOVE     "Start             ",FROMDAT
           MOVE     SP70,STRDAT
.
RDATE140   MOVE     FROMDAT,VAR
           CALL     DISPITEM
.
RDATE150   MOVE     "    9",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RDATE200
           MATCH    SP2,CDAY
           GOTO     RDATE200 IF EQUAL
           PACK     ENDDAT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",ENDDAT
           CALL     PACDATE
           MOVE     CPCDATE,TODAT
           MATCH    STRDAT,ENDDAT
           GOTO     RDATE999 IF EQUAL
           GOTO     RDATE999 IF NOT LESS
           BEEP
           MOVE     "To Date Must Be > From Date - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RDATE000
.
RDATE200   MOVE     "Finish             ",TODAT
           MOVE     "99999999",ENDDAT
.
RDATE999   MOVE     "    8",FLDID
           CALL     GETPOSIT
           RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       DEBBICIO/INC
          INC       DEBBILIO/INC
          INC       DEBCODIO/INC
          INC       DEBDBTIO/INC
          INC       DEBDBTKY    
          INC       DEBDKIIO/INC
          INC       DEBDKIKY    
          INC       DEBDKIPR    
          INC       DEBIBDIO/INC
          INC       DEBITMIO/INC
          INC       DEBITMKY    
          INC       DEBPTYIO/INC
          INC       IBACHGIO/INC
          INC       IBAEXTIO/INC
          INC       IBAEXTKY    
          INC       IBAGEDIO/INC
          INC       IBAGKIKY    
          INC       IBAGSTIO/INC
          INC       IBAGSTKY    
          INC       IBAPBXIO/INC
.
          INC       STDGENCD
.
