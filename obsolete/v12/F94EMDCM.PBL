.***************************************************************************
.* System    :   Emergency                                                 *
.* Program   :   F94EMDCM                                                  *
.* Desc      :   Write records to emrdcmaf from emrvcdaf                   *
.***************************************************************************
.* Date      :   16/05/2008                                                *
.* Author    :   Jill Habasque                                             *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       EMRVCDFD/INC
          INC       EMRICDFD/INC
          INC       EMRDCMFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
COUNT     FORM      8
.
PRGID     INIT      "F94EMDCM"
PRGNAM    INIT      "Write records to emrdcmaf    "
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000         * proceed with clean up
.
ML1000    CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML2000:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML2000    CALL      PROC0000               * process
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          OPEN      EMRVCDA2,"emrvcdaf"
          OPEN      EMRICDA1,"emricdaf"
          OPEN      EMRDCMA1,"emrdcmaf"
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
.
PROC0000  MOVE      ZERO,COUNT
          CALL      IBACLOCK
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS
.
          PACK      KEY17,SP70
          CALL      RSEMVCD2
PROC1000  CALL      RKEMVCD2
          BRANCH    OVRCD,PROC9999
.
          ADD       ONE,COUNT
          DISPLAY    *P1:24,"Record ",COUNT,SP10,EMVCVIST
.
          MATCH     "005",EMVCTYPE
          GOTO      PROC1000 IF NOT EQUAL
.
          CALL      SETEXT00
.
          GOTO      PROC1000
.
PROC9999  DISPLAY   *P1:21,"Finished : ",*V2LON,CTIMEIS
          CALL      HITENTER
          RETURN
+
.------------------------------------------------------------
.  Update EMR Text File
.------------------------------------------------------------
SETEXT00  BRANCH    EMVCCSYS,SETEXT99,SETEXT99,SETEXT99,SETEXT99
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,SETEXT99
.
          MOVE      SP70,KEY22
          MOVE      SP70,KEY48
          PACK      KEY8,EMVCVIST,SP70
          CALL      RDEMDCM1
          IF        OVRCD=1
            CALL      CLREMD00              * Clear the text file
            MOVE      EMVCVIST,EMDCADMI     * Updating diagnosis comments
.           UNPACK    EMICDESC,KEY48,KEY22                             *D-60868
            CALL      SPLDIA00                                         *I-60868
            MOVE      SP70,EMICDESC
            MOVE      KEY48,EMICDESC
            CALL      STEMD000              * Diagnosis file variable storage
            MATCH     SP70,KEY22
            IF        !@EQUAL
              MOVE      SP70,EMICDESC
              MOVE      KEY22,EMICDESC
              CALL      STEMD000              * Diagnosis file variable storage
            ENDIF
            CALL      WREMDCM1
          ELSE
            MOVE      EMVCVIST,EMDCADMI     * Updating diagnosis comments
.           UNPACK    EMICDESC,KEY48,KEY22                             *D-60868
            CALL      SPLDIA00                                         *I-60868
            MOVE      SP70,EMICDESC
            MOVE      KEY48,EMICDESC
            CALL      STEMD000              * Diagnosis file variable storage
            MATCH     SP70,KEY22
            IF        !@EQUAL
              MOVE      SP70,EMICDESC
              MOVE      KEY22,EMICDESC
              CALL      STEMD000              * Diagnosis file variable storage
            ENDIF
            CALL      UPEMDCM1
          ENDIF

SETEXT99  RETURN
.------------------------------------------------------------
.  Save Routen for Text
.------------------------------------------------------------
STEMD000  MATCH     SP70,EMDCTXT1
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT1
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT2
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT2
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT3
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT3
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT4
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT4
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT5
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT5
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT6
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT6
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT7
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT7
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT8
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT8
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT9
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT9
            GOTO      STEMD999
          ENDIF
.
STEMD999  RETURN
.------------------------------------------------------------
. Split Diagnosis in to KEY48 and KEY22                                *I-60868
.------------------------------------------------------------
SPLDIA00  MOVE      FORTY8,FORM2
SPLDIA10  RESET     EMICDESC,FORM2
          CMATCH    EMICDESC,SP1
.
          IF        @EQUAL
            UNPACK    EMICDESC,KEY22
            RESET     EMICDESC
            SETLPTR   EMICDESC,FORM2
            UNPACK    EMICDESC,KEY48
            RESET     EMICDESC
            GOTO      SPLDIA99
          ENDIF
.
          SUBTRACT  ONE,FORM2
.
          IF        FORM2=ZERO
            RESET     EMICDESC
            UNPACK    EMICDESC,KEY48,KEY22
          ELSE
            GOTO      SPLDIA10
          ENDIF
.
SPLDIA99  RETURN
+
.------------------------------------------------------------
.  Clear Diagnisis File
.------------------------------------------------------------
CLREMD00  MOVE      SP70,EMDCTXT1
          MOVE      SP70,EMDCTXT2
          MOVE      SP70,EMDCTXT3
          MOVE      SP70,EMDCTXT4
          MOVE      SP70,EMDCTXT5
          MOVE      SP70,EMDCTXT6
          MOVE      SP70,EMDCTXT7
          MOVE      SP70,EMDCTXT8
          MOVE      SP70,EMDCTXT9
.
CLREMR99  RETURN
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       EMRVCDIO/INC
          INC       EMRDCMIO/INC
          INC       EMRICDIO/INC
