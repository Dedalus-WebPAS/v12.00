.*****************************************************************************
.*    Program      : F94OPSRG                                                *
.*    Description  : Conversion of oprsrgaf to new File layout               *
.*                   Fixit program to change Item fields from DIM 6 to DIM 15*
.*                                                                           *
.*    Modifications:                                                         *
.*       V9.04.00  15/02/2005 Lina Vo   CAR 56404                            *
.*                 Created New                                               *
.*                                                                           *
.*****************************************************************************
.
.  Global change F94OPSRG   eg F57PTDOC
.  Global change OPRSRGFD    eg PATDOCFD
.  Global change OPRSRGIO    eg PATIODOC
.  Global change oprsrgaf   eg patdoctf
.  Global change OPRSRGA1  eg PATDOCT1
.  Global change KEY25     eg KEY8
.  Global change WROPSRG1     eg WRDOCT1
.  Global change sopsrgaf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
          INC       OPRSRGFD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE
.   
OLDFILE   IFILE    SQL, FIXED=603, KEY="U1-10,11-11"
.
CMDLINE   DIM       100
DIM60     DIM       60
.
OLDICD1   DIM       6
OLDICD2   DIM       6
OLDICD3   DIM       6
OLDDCD1   DIM       6
OLDDCD2   DIM       6
OLDDNM1   DIM       6
OLDDNM2   DIM       6
OLDCAT1   DIM       6
OLDCAT2   DIM       6
OLDDRT1   DIM       6
OLDDRT2   DIM       6
OLDPACK   DIM       6
OLDDRS1   DIM       6
OLDDRS2   DIM       6
OLDDRS3   DIM       6
OLDWDV1   DIM       6
OLDWDV2   DIM       6
OLDWDV3   DIM       6
OLDIRIG   DIM       6
OLDIRGS   DIM       6
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
.********************************************************************
PRGNAM    INIT      "Conversion of OPRSRGFD"
PRGID     INIT      "F94OPSRG"
VERSION   INIT      "V12.00.00"
.********************************************************************
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and WROPSRG1 records to new file
.
          CALL      READ0000                     * read old records and WROPSRG1
          CALL      ENDP0000                     * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
.          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,"oprsrgaf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat oprsrgaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sopsrgaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat oprsrgaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sopsrgaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "oprsrgaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sopsrgaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "oprsrgaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 U9-16",CMDLINE
.
          APPEND    " 783 UC1-10,11-11",CMDLINE          * 1st index
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
..          PACK      CMDLINE,SP60,SP60
..          CLEAR     CMDLINE
..          APPEND    "isadd ",CMDLINE
..          APPEND    NEWFILE,CMDLINE
..          APPEND    " UC16-65,1-15",CMDLINE        * 2nd index
..          APPEND    SP60,CMDLINE
..          RESET     CMDLINE
..          EXECUTE   CMDLINE,TASKID
.
          OPEN      OPRSRGA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and WROPSRG1 each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY11,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.                                               * Pack key here
.
          PACK      OPSGICD1,OLDICD1,SP70
          PACK      OPSGICD2,OLDICD2,SP70
          PACK      OPSGICD3,OLDICD3,SP70
          PACK      OPSGDCD1,OLDDCD1,SP70
          PACK      OPSGDCD2,OLDDCD2,SP70
          PACK      OPSGDNM1,OLDDNM1,SP70
          PACK      OPSGDNM2,OLDDNM2,SP70
          PACK      OPSGCAT1,OLDCAT1,SP70
          PACK      OPSGCAT2,OLDCAT2,SP70
          PACK      OPSGDRT1,OLDDRT1,SP70
          PACK      OPSGDRT2,OLDDRT2,SP70
          PACK      OPSGPACK,OLDPACK,SP70
          PACK      OPSGDRS1,OLDDRS1,SP70
          PACK      OPSGDRS2,OLDDRS2,SP70
          PACK      OPSGDRS3,OLDDRS3,SP70
          PACK      OPSGWDV1,OLDWDV1,SP70
          PACK      OPSGWDV2,OLDWDV2,SP70
          PACK      OPSGWDV3,OLDWDV3,SP70
          PACK      OPSGIRIG,OLDIRIG,SP70
          PACK      OPSGIRGS,OLDIRGS,SP70
.
          PACK      KEY11,OPSGUNID,OPSGTMNO,SP70
          CALL      WROPSRG1                       * WROPSRG1 to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     OPRSRGA1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sopsrgaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat oprsrgaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding oprsrgaf.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.**********************************************************************
. ---- OLD IO ROUTINES ----
.**********************************************************************
.  Copy and paste the Positional Read routine from the original
.  IO file, rename the routine READSOLD and change the index name
.  to OLDFILE
.
.
READSOLD  RESET     KEY11
          READ      OLDFILE,KEY11;;
          RETURN
.
.  Copy and paste the Read Next routine from the original
.  IO file, rename the routine READKOLD and change the index name 
.  to OLDFILE
.
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;OPSGUNID,OPSGTMNO,OPSGTIPS,OPSGTIDR,OPSGTISS:
                        OPSGTISE,OPSGSGDL,OPSGCCNT,OPSGCNTO,OPSGBLOS,OPSGWCON:
                        OPSGWCM1,OPSGWCM2,OPSGWCM3,OLDICD1,OLDICD2,OLDICD3:
                        OPSGDST1,OLDDCD1,OLDDNM1,OPSGDPS1,OPSGDCK1,OPSGDPR1:
                        OPSGDST2,OLDDCD2,OLDDNM2,OPSGDPS2,OPSGDCK2,OPSGDPR2:
                        OLDCAT1,OLDCAT2,OLDDRT1,OLDDRT2,OLDPACK,OLDDRS1:
                        OLDDRS2,OLDDRS3,OLDWDV1,OLDWDV2,OLDWDV3,OLDIRIG:
                        OLDIRGS,OPSGIRAI,OPSGIRAO,OPSGCLFS,OPSGINFC,OPSGSPMI:
                        OPSGSPAP,OPSGOTHR,OPSGUC01,OPSGUC02,OPSGUC03,OPSGUC04:
                        OPSGUC05,OPSGUC06,OPSGUC07,OPSGUC08,OPSGUC09,OPSGUC10:
                        OPSGUC11,OPSGUC12,OPSGUC13,OPSGUC14,OPSGUC15,OPSGUC16:
                        OPSGUC17,OPSGUC18,OPSGUC19,OPSGUC20,OPSGUY01,OPSGUY02:
                        OPSGUY03,OPSGUY04,OPSGUY05,OPSGUY06,OPSGUY07,OPSGUY08:
                        OPSGUY09,OPSGUY10,OPSGUT01,OPSGUT02,OPSGUT03,OPSGUT04:
                        OPSGUT05,OPSGUT06,OPSGUT07,OPSGUT08,OPSGUT09,OPSGUT10:
                        OPSGUF01,OPSGUF02,OPSGUF03,OPSGUF04,OPSGUF05,OPSGUF06:
                        OPSGUF07,OPSGUF08,OPSGUF09,OPSGUF10,OPSGUTHR,OPSGIDES:
                        OPSGNOOP,OPSGSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
          INC       STD001IO
          INC       OPRSRGIO/INC
