.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 08.12.2000 Charles Handaya
.           Replaced AMSGLTDF with IBAGINFD
.           BAS Statement Modification
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAMS63
.   Function      :   General Ledger Transfer                 
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       AMSCONFD/INC
          INC       AMSDSFFD/INC
          INC       AMSGILFD/INC
          INC       AMSGLTDF    
          INC       AMSMASFD/INC
          INC       AMSTRNFD/INC
          INC       IBAGINFD/INC
.=========================
.Local Variable Definition
.-------------------------
TRANDESC  DIM      40 * Scr 00 Fld     3
TRANPER   FORM      2 * Scr 00 Fld     4
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAMS63"
PRGNAM    INIT      "General Ledger Transfer                 "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "    3",AUDTSECT
          MOVE      " 10",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening amsaudma";
            OPEN      AMSAUDMA,"amsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening amsdsfaf";
          OPEN      AMSDSFA1,"amsdsfaf"
          DISPLAY   *P56:24,"Opening amsdsfaf";
          OPEN      AMSDSFA2,"amsdsfaf"
          DISPLAY   *P56:24,"Opening amsgilaf";
          OPEN      AMSGILA1,"amsgilaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA1,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA2,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA3,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA4,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA5,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA6,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA7,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA8,"amsmasaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA1,"amstrnaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA2,"amstrnaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA3,"amstrnaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
          MOVE      SP70,TRANDESC
          MOVE      ZERO,TRANPER 
          MOVE      ZERO,CFAMIRUN
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L101,PS00L102:
                            PS00L999,PS00L103
          GOTO     PS00L999
.
PS00L101
          MOVE      TRANDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TRANPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CFAMIRUN,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L102,SF00L103:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL     SELECTED
          STRIP     TRANDESC
          SFORMAT   VAR,SCPSLEN
          MOVE      TRANDESC,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,TRANDESC
          SFORMAT   VAR,127
          ENDSET    TRANDESC
          APPEND    SP70,TRANDESC
          RESET     TRANDESC
          CMATCH    EXITCHAR,TRANDESC
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,TRANDESC
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
          ENDIF
          MOVE      TRANDESC,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L103
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CFAMIRUN
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPER0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      TRANPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CFAMIRUN,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL      PROC0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
EPER0000  MOVE      SP70,VAR
          CALL      DISPITEM
          MOVE      "    3",AUDTSECT
          READ      CONTROLF,AUDTSECT;*18,CFAMIRUN,CFAMGL01,CFAMGL02,CFAMGL03:
                                          CFAMGL04:
                                          CFAMGL05,CFAMGL06,CFAMGL07,CFAMGL08:
                                          CFAMGL09,CFAMGL10,CFAMGL11,CFAMGL12:
                                          CFAMGL13
          MOVE      ZERO,SECTOR
EPER0100  ADD       ONE,SECTOR
          LOAD      F1,SECTOR,CFAMGL01,CFAMGL02,CFAMGL03,CFAMGL04:
                              CFAMGL05,CFAMGL06,CFAMGL07,CFAMGL08:
                              CFAMGL09,CFAMGL10,CFAMGL11,CFAMGL12:
                              CFAMGL13
          COMPARE   ZERO,F1
          GOTO      EPER1000 IF EQUAL
          COMPARE   "13",SECTOR
          GOTO      EPER0100 IF NOT EQUAL
          BEEP
          MOVE      "All Periods Have Been Transferred. ",DISPMSG
          CALL      MESSAGE1
          GOTO      EPER9999
.
EPER1000  MOVE      SECTOR,TRANPER
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,TRANPER
          IF        ((TRANPER<1)|(TRANPER>13))
            BEEP
            GOTO      EPER1000
          ENDIF
.
          LOAD      F1,TRANPER,CFAMGL01,CFAMGL02,CFAMGL03,CFAMGL04:
                               CFAMGL05,CFAMGL06,CFAMGL07,CFAMGL08:
                               CFAMGL09,CFAMGL10,CFAMGL11,CFAMGL12:
                               CFAMGL13
.
          IF        F1=1
            BEEP
            MOVE      "Period Already Transferred. ",DISPMSG
            CALL      MESSAGE1
            GOTO      EPER1000
          ENDIF
.
EPER9999  RETURN
PROC0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      IBAGINA1,TRANDESC
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      PROC9100 IF EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PREP      IBAGINA1,TRANDESC
          TRAPCLR   IO
          BRANCH    OVRCD,PROC9200
.
          MOVE      THREE,AUDTSECT
          READ      CONTROLF,AUDTSECT;CFAMSRUN,CFAMYEAR,*18,CFAMIRUN
          ADD       ONE,CFAMIRUN
          WRITAB    CONTROLF,AUDTSECT;*18,CFAMIRUN
          SUB       ONE,CFAMIRUN
          READ      CONTROLF,AUDTSECT;*23,CFAMGL01,CFAMGL02,CFAMGL03,CFAMGL04:
                                          CFAMGL05,CFAMGL06,CFAMGL07,CFAMGL08:
                                          CFAMGL09,CFAMGL10,CFAMGL11,CFAMGL12:
                                          CFAMGL13
          STORE     ONE,TRANPER,CFAMGL01,CFAMGL02,CFAMGL03,CFAMGL04:
                                CFAMGL05,CFAMGL06,CFAMGL07,CFAMGL08:
                                CFAMGL09,CFAMGL10,CFAMGL11,CFAMGL12:
                                CFAMGL13
          WRITAB    CONTROLF,AUDTSECT;*23,CFAMGL01,CFAMGL02,CFAMGL03,CFAMGL04:
                                          CFAMGL05,CFAMGL06,CFAMGL07,CFAMGL08:
                                          CFAMGL09,CFAMGL10,CFAMGL11,CFAMGL12:
                                          CFAMGL13
.
.
. Transfer Depreciation to the General Ledger Transaction File
. from Dep'n Summary and Flag Dep'n Summary as sent.
.--------------------------------------------------------------
          PACK      KEY18,CFAMYEAR,SP70
          DISPLAY   *P1:24,*EL,"Processing Depreciation : "
          CALL      RSAMDS2
PROC1000  CALL      RKAMDS2
          BRANCH    OVRCD,PROC3000
          MATCH     CFAMYEAR,AMDSYEAR
          GOTO      PROC3000 IF NOT EQUAL
.
          LOAD      F1,TRANPER,AMDSG01,AMDSG02,AMDSG03,AMDSG04,AMDSG05:
                               AMDSG06,AMDSG07,AMDSG08,AMDSG09,AMDSG10:
                               AMDSG11,AMDSG12,AMDSG13
          BRANCH    F1,PROC1000     * Already Transferred to General Ledger
          PACK      KEY14,AMDSREG,AMDSASS
          CALL      RDAMMA1
          BRANCH    OVRCD,PROC1000
          MOVE      AMMAGIC,KEY5
          CALL      RDAMGI1
          BRANCH    OVRCD,PROC1000
          DISPLAY   *P27:24,*V2LON,AMDSREG,"/",AMDSASS
          PACK      KEY19,AMDSREG,AMDSASS,Z70
.
          PACK      KEY19,AMDSREG,AMDSASS,Z70
          PACK      KEY14,AMDSREG,AMDSASS,Z70
          CALL      RSAMTR1
          CALL      RPAMTR1
          BRANCH    OVRCD,PROC2000
          PACK      KEY19,AMTRREG,AMTRASS,Z70
          MATCH     KEY14,KEY19
          GOTO      PROC2000 IF NOT EQUAL
          MOVE      AMTRUNI,SECTOR
          GOTO      PROC2100
.
. Dr Expense Depreciation
. Cr Accumulated Depreciation
.------------------------------------------------------------
PROC2000  MOVE      ZERO,SECTOR
PROC2100  ADD       ONE,SECTOR
          PACK      KEY19,AMMAREG,AMMAASS,SECTOR
          UNPACK    KEY19,AMTRREG,AMTRASS,AMTRUNI
          CALL      RDAMTR1
          COMPARE   ZERO,OVRCD
          GOTO      PROC2100 IF EQUAL
.
          PACK      AMTRREF,AMMADRF,SP70
          CLEAR     AMTRCOM
          APPEND    "Dep'n. Per/Year: ",AMTRCOM
          APPEND    TRANPER,AMTRCOM
          APPEND    "/",AMTRCOM
          APPEND    CFAMYEAR,AMTRCOM
          RESET     AMTRCOM
          PACK      AMTRDAT,CCC,CYY,CMM,CDD
          REP       " 0",AMTRDAT
          MOVE      CFAMYEAR,AMTRYEAR
          MOVE      TRANPER,AMTRPER
          MOVE      "IBAAMS63",AMTRREF
.
          MOVE      SP70,AMTRIRUN
          MOVE      AMGILED,AMTRDLED
          MOVE      AMGIADP,AMTRCACC
          MOVE      AMGIEDP,AMTRDACC
          LOAD      AMTRAMT,TRANPER,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05:
                                    AMDSA06,AMDSA07,AMDSA08,AMDSA09,AMDSA10:
                                    AMDSA11,AMDSA12,AMDSA13
          MOVE      AMGIDIS,AMTRDIS
          MOVE      AMGIRES,AMTRRES
          COMPARE   ZERO,AMTRAMT
          GOTO      PROC2200 IF EQUAL
.
          CALL      WRAMTR1
.
PROC2200  STORE     ONE,TRANPER,AMDSG01,AMDSG02,AMDSG03,AMDSG04,AMDSG05:
                                AMDSG06,AMDSG07,AMDSG08,AMDSG09,AMDSG10:
                                AMDSG11,AMDSG12,AMDSG13
          CALL      UPAMDS2         * Flag as Transferred
          GOTO      PROC1000
.
. Process Transaction File and Create Interface File
.
PROC3000  PACK      KEY25,CFAMYEAR,TRANPER,SP70
          MOVE      ZERO,SECTOR
          DISPLAY   *P1:24,*EL,"Generating Interface File : "
          CALL      RSAMTR3
PROC4000  CALL      RKAMTR3
          BRANCH    OVRCD,PROC4900
          MATCH     CFAMYEAR,AMTRYEAR
          GOTO      PROC4900 IF NOT EQUAL
.
          MOVE      TRANPER,KEY2
          MATCH     KEY2,AMTRPER
          GOTO      PROC4900 IF NOT EQUAL
.
          MATCH     SP70,AMTRIRUN           * Only Process If NOT Processed
          GOTO      PROC4000 IF NOT EQUAL   * ie Run Number Not Blank
.
          MOVE      AMTRDLED,IBGILEDG
          MOVE      AMTRDACC,IBGIACCT
          MOVE      AMTRDAT,IBGIDATE
          MOVE      SP1,IBGISIGN
          MOVE      AMTRAMT,IBGIVALU
.
          CLEAR     KEY30
          APPEND    "Reg/Asst : ",KEY30
          APPEND    AMTRREG,KEY30
          APPEND    "/",KEY30
          APPEND    AMTRASS,KEY30
          RESET     KEY30
          MOVE      KEY30,IBGIDESC
.
          CLEAR     KEY15
          APPEND    "Asset Run:",KEY15
          APPEND    CFAMIRUN,KEY15
          RESET     KEY15
          MOVE      KEY15,IBGIREF
.
          MOVE      AMTRDIS,IBGIDISS
          MOVE      AMTRRES,IBGIRESP
          MOVE      AMTRCACC,IBGICRAC
          MOVE      AMTRCACC,IBGICRAA
          MOVE      SP70,IBGIBASC
.
          ADD       ONE,SECTOR
          CALL      WRIBGI1
.
          MOVE      CFAMIRUN,AMTRIRUN
          CALL      UPAMTR3
          GOTO      PROC4000
.
PROC4900  COMPARE   ZERO,SECTOR
          GOTO      PROC93000 IF EQUAL
          DISPLAY   *P1:24,*EL,"Interface Complete. - ";
          CALL      HITENTER
          GOTO      PROC9999
.
PROC9100  BEEP
          DISPLAY   *P1:24,*EL,"Transfer File Already Exists.":
                               " Interface Aborted. - ";
          CALL      HITENTER
          GOTO      PROC9999
.
PROC9200  BEEP
          DISPLAY   *P1:24,*EL,"Unable to Create Interface File.":
                               " Interface Aborted. - ";
          CALL      HITENTER
          GOTO      PROC9999
.
PROC9300  BEEP
          DISPLAY   *P1:24,*EL,"No Entries to be Transferred.":
                               " Interface Aborted. - ";
          CALL      HITENTER
          GOTO      PROC9999
.
PROC9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       AMSDSFIO/INC
          INC       AMSGILIO/INC
          INC       AMSMASIO/INC
          INC       AMSTRNIO/INC
          INC       IBAGINIO/INC
.
          INC       STDGENCD
.
