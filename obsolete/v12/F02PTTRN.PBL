.*****************************************************************************
.*    Program      : FO2PTTRN                                                *
.*    Description  : Conversion pattranf to new File layout                  *
.*                                                                           *
.*    Author       : Davin Sloan  CAR 242269                                 *
.*    Date         : 21/06/2011                                              *
.*    Modifications: V10.03.02 28/03/2013 Ebon Clements  CAR 283241          *
.*                   Changed OFIX0000 key to improve speed                   *
.*                   V10.03.01 26/03/2013 Ebon Clements  CAR 283241          *
.*                   Added DISNUM for display count that doesn't use modulus *
.*                   V10.02.01 01/07/2011 J.Tan   CAR 239592                 *
.*                   Mods to set Claim type from Admission file              *
.*****************************************************************************
.
.  Global change FO2PTTRN  eg F57PTDOC
.  Global change PATTRNFD  eg PATDOCFD (new layout)
.  Global change pattranf  eg patdoctf
.  Global change PATTRAN1  eg PATDOCT1
.  Global change KEY30     eg KEY8
.  Global change WRTRAN1   eg WRDOCT1
.  Global change spttranf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
          INC       PATMI1FD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
.
OLDFILE1  IFILE     SQL, FIXED=261, KEY="U1-3,4-6,7-14,15-22,32-39"
.
. Name    Type      Length   Phys.  Start  Description
. ----    ----      ------   -----  -----  -----------
.TWARD    DIM       3            3      1  TRANSFER WARD NUMBER
....
OLDSPARE  DIM       22          22    239  Spare variable
.
.End of Record                        261
.
.
PATTRAN1  IFILE     SQL, FIXED=317, KEY="U1-3,4-6,7-14,15-22,32-39"
PATTRAN2  IFILE     SQL, FIXED=317, KEY="U32-39,7-14,15-22,1-3,4-6"
PATTRAN3  IFILE     SQL, FIXED=317, KEY="U75-80,7-14,15-22,1-3,4-6,32-39"
PATTRAN4  IFILE     SQL, FIXED=317, KEY="U1-3,7-14,15-22,4-6,32-39"
.
. Name    Type      Length   Phys.  Start  Description
. ----    ----      ------   -----  -----  -----------
TWARD     DIM       3            3      1  TRANSFER WARD NUMBER
TBED      DIM       3            3      4  TRANSFER BED NUMBER
TDATE     DIM       8            8      7  TRANSFER DATE (CCYYMMDD)
TTIME     DIM       8            8     15  TRANSFER TIME (HH:MM)
TMOVE     DIM       1            1     23  MOVEMENT TYPE
.                                             A - ADMISSION
.                                             D - DISCHARGE
.                                             C - CHANGE RECORD
.                                             L - ON LEAVE
.                                             R - RETURN FROM LEAVE
TURNO     DIM       8            8     24  PATIENT U/R  NUMBER
DTADMN    DIM       8            8     32  PATIENT ADMISSION  NUMBER
TRATEF    FORM     12.2          8     40  PAT PORTION OF DAILY CHARGE
.                                             Daily rate = TRATEF + TRATEH
.                                                          - TDISC - TALLW
.                                          Accommodation Charge - Nursing Home
TRATEG    FORM     12.2          8     48  GOVERNMENT  CHARGEABLE
TDISC     FORM     12.2          8     56  PAT DISC (SUB FROM TRATEF)
TALLW     FORM     12.2          8     64  PAT ALLOW (SUB FROM TRATEF)
TATYPE    DIM       3            3     72  ADMISSION TYPE
TADOCT    DIM       6            6     75  ATTENDING DOCTOR
TRATEH    FORM     12.2          8     81  H/FND PORTION OF DAILY CHARGE
TEXTRA    FORM     12.2          8     89  EXTRA CHGE PER DAY (PUB HOSP)
PTTRITFS  FORM     12.2          8     97  Nursing Home Income Tested fee
TFORM12A  FORM     12.2          8    105  SPARE FORM 12.2
.
TRCDATE   DIM       8            8    113  DATE THIS RECORD LAST CHANGED
TRCTIME   DIM       8            8    121  TIME THIS RECORD LAST CHANGED
.
TRBTYP    DIM       3            3    129  E.F.R. BED TYPE FOR THIS BED
TRBEND    FORM      3            3    132  END DAY IN RNGE FOR THIS RATE
TCHSTAT   DIM       3            3    135  CHRGEABLE STATUS (USER DEF.2)
.                                          (PUBLIC HOSPITAL ONLY)
.
TDEPT     DIM       3            3    138  DEPARTMENT CODE (CAT AC)
PTTRLTYP  DIM       3            3    141  Type of Patient leave (Cat TL)
DPTTREPN  DIM       2            2    144  Episode number
PTTREPSD  FORM      1            2    146  Manual Stepdown
.                                           0 - Normal
.                                           1 - Forced Stepdown
.                                           2 - Bed Fee Update
PTTRLSPT  FORM     12.2          8    148  Patient portion of lumpsum
PTTRLSRB  FORM     12.2          8    156  Rebate portion of lumpsum
PTTRAEND  FORM      4            3    164  End day for additional rate
PTTRADPT  FORM     12.2          8    167  Additional dialy rate - pat.
.                                          Resident contribution - Nursing Home
PTTRADRB  FORM     12.2          8    175  Additional daily rate - rebate
PTTRNHAC  DIM        3           3    183  Nursing Home Account code (Catg NH)
PTTROPER  DIM        4           4    186  Operator Id
PTTRAUAT  DIM        1           1    190  Auto update of admission type
PTTRCDAT  DIM        8           8    191  Date Record Created (CCYYMMDD)
PTTRCTIM  DIM        8           8    199  Time Record Created (hh:mm:ss)
PTTRCUID  DIM        4           4    207  Passcode Created
PTTRLTSC  DIM        5           5    211  Leave Transfer Source
PTTRUCID  DIM       10          10    216  Web User Id who Created Record
PTTRUUID  DIM       10          10    226  Web User Id who Updated Record
PTTRCLTY  DIM        3           3    236  Claim Type (Cat CL)
PTTRTRTY  DIM        3           3    239  Transfer Type (Cat RB)
PTTRTEAM  DIM        5           5    242  Team
PTTRRSTR  DIM       10          10    247  Registrar
PTTRRESI  DIM       10          10    257  Resident
PTTRSPAR  DIM       50          50    267  Spare variable
.
.End of Record                        317
.
.  redefind form fields for key
.  ----------------------------
. NAME    TYPE      LENGTH  START  DESCRIPTION
. ----    ----      ------  -----  -----------
TADMN     FORM      8          30  PATIENT ADMISSION  NUMBER
PTTREPNO  FORM      2              Episode number
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
SAVEVISN  DIM       8
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PATTRNFD"
PRGID     INIT      "FO2PTTRN"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      "pattranf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pattranf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spttranf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pattranf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spttranf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pattranf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spttranf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pattranf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 317 UC1-3,4-6,7-14,15-22,32-39",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC32-39,7-14,15-22,1-3,4-6",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC75-80,7-14,15-22,1-3,4-6,32-39",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-3,7-14,15-22,4-6,32-39",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PATTRAN1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          OPEN      PATMI1A1,"patmi1af"
          PACK      KEY30,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM                 * reset counter
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      DTADMN,KEY8
          CALL      RDMISS1
          IF        OVRCD=0
            MOVE      ACLAIM,PTTRCLTY              * set claim code
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
          MOVE      SP70,PTTRTRTY
          MOVE      SP70,PTTRTEAM
          MOVE      SP70,PTTRRSTR
          MOVE      SP70,PTTRRESI
          MOVE      SP70,PTTRSPAR
.
          PACK      KEY30,TWARD,TBED,TDATE,TTIME,TADMN,SP70
          CALL      WRTRAN1                       * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATTRAN1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spttranf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat pattranf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'pattranf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*            Oracle fix to populate pattranf not required (use sql)         *
.*****************************************************************************
OFIX0000  DISPLAY   *P1:20,*EL,"Record No. :";
.
          OPEN      PATTRAN2,"pattranf"
          OPEN      PATMI1A1,"patmi1af"
.
          MOVE      SP70,SAVEVISN                 * Clear save visit number
.
          PACK      KEY30,SP70
          CALL      RDSTRAN2                      * position at start of file
OFIX0500  CALL      RDKTRAN2                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          MATCH     SP70,PTTRCLTY                 * Only update claim code
          GOTO      OFIX0500 IF NOT EQUAL         * if blank
.
          MATCH     SAVEVISN,DTADMN         
          IF        !@EQUAL
            MOVE      DTADMN,KEY8                 * Only read admission file
            CALL      RDMISS1                     * if visit number changes
            BRANCH    OVRCD,OFIX0500
.
            MOVE      DTADMN,SAVEVISN             * Save visit number
          ENDIF
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000 | RECNUM = 1
            MOVE      ZERO,DISNUM                 * reset counter
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      ACLAIM,PTTRCLTY              * set claim code
          CALL      UPTRAN2
.
          GOTO      OFIX0500                     * get next record
.
OFIX9000  CLOSE     PATTRAN1
          CLOSE     PATMI1A1
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:24,*EL,"Update completed.  ";
          CALL      HITENTER
.
OFIX9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
.
READSOLD  RESET     KEY30
          READ      OLDFILE1,KEY30;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;TWARD,TBED,TDATE,TTIME:
                             TMOVE,TURNO,DTADMN,TRATEF,TRATEG:
                             TDISC,TALLW,TATYPE,TADOCT,TRATEH:
                             TEXTRA,PTTRITFS,TFORM12A,TRCDATE,TRCTIME:
                             TRBTYP,TRBEND,TCHSTAT,TDEPT,PTTRLTYP:
                             DPTTREPN,PTTREPSD,PTTRLSPT,PTTRLSRB:
                             PTTRAEND,PTTRADPT,PTTRADRB,PTTRNHAC:
                             PTTROPER,PTTRAUAT,PTTRCDAT,PTTRCTIM,PTTRCUID:
                             PTTRLTSC,PTTRUCID,PTTRUUID,PTTRCLTY,OLDSPARE
          GOTO      OVERCOND IF OVER
          MOVE      DTADMN,TADMN
          MOVE      DPTTREPN,PTTREPNO
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRTRAN1   MOVE      PTTROPER,PTTRCUID
.
          MOVE      ZERO,OVRCD
          RESET     KEY30
          MOVE      TADMN,DTADMN
          MOVE      PTTREPNO,DPTTREPN
          WRITE     PATTRAN1,KEY30;TWARD,TBED,TDATE,TTIME:
                                   TMOVE,TURNO,DTADMN,TRATEF,TRATEG:
                                   TDISC,TALLW,TATYPE,TADOCT,TRATEH:
                                   TEXTRA,PTTRITFS,TFORM12A,TRCDATE,TRCTIME:
                                   TRBTYP,TRBEND,TCHSTAT,TDEPT,PTTRLTYP:
                                   DPTTREPN,PTTREPSD,PTTRLSPT,PTTRLSRB:
                                   PTTRAEND,PTTRADPT,PTTRADRB,PTTRNHAC:
                                   PTTROPER,PTTRAUAT,PTTRCDAT,PTTRCTIM,PTTRCUID:
                                   PTTRLTSC,PTTRUCID,PTTRUUID,PTTRCLTY,PTTRTRTY:
                                   PTTRTEAM,PTTRRSTR,PTTRRESI,PTTRSPAR
.
          RETURN
.
.
RDSTRAN2  RESET     KEY30
          READ      PATTRAN2,KEY30;;
          RETURN
.
RDKTRAN2  MOVE      ZERO,OVRCD
          READKS    PATTRAN2;TWARD,TBED,TDATE,TTIME:
                             TMOVE,TURNO,DTADMN,TRATEF,TRATEG:
                             TDISC,TALLW,TATYPE,TADOCT,TRATEH:
                             TEXTRA,PTTRITFS,TFORM12A,TRCDATE,TRCTIME:
                             TRBTYP,TRBEND,TCHSTAT,TDEPT,PTTRLTYP:
                             DPTTREPN,PTTREPSD,PTTRLSPT,PTTRLSRB:
                             PTTRAEND,PTTRADPT,PTTRADRB,PTTRNHAC:
                             PTTROPER,PTTRAUAT,PTTRCDAT,PTTRCTIM,PTTRCUID:
                             PTTRLTSC,PTTRUCID,PTTRUUID,PTTRCLTY,PTTRTRTY:
                             PTTRTEAM,PTTRRSTR,PTTRRESI,PTTRSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DTADMN,TADMN
          MOVE      DPTTREPN,PTTREPNO
          RETURN
.
UPTRAN2   MOVE      TADMN,DTADMN
          MOVE      PTTREPNO,DPTTREPN
          UPDATE    PATTRAN2;TWARD,TBED,TDATE,TTIME:
                             TMOVE,TURNO,DTADMN,TRATEF,TRATEG:
                             TDISC,TALLW,TATYPE,TADOCT,TRATEH:
                             TEXTRA,PTTRITFS,TFORM12A,TRCDATE,TRCTIME:
                             TRBTYP,TRBEND,TCHSTAT,TDEPT,PTTRLTYP:
                             DPTTREPN,PTTREPSD,PTTRLSPT,PTTRLSRB:
                             PTTRAEND,PTTRADPT,PTTRADRB,PTTRNHAC:
                             PTTROPER,PTTRAUAT,PTTRCDAT,PTTRCTIM,PTTRCUID:
                             PTTRLTSC,PTTRUCID,PTTRUUID,PTTRCLTY,PTTRTRTY:
                             PTTRTEAM,PTTRRSTR,PTTRRESI,PTTRSPAR
          RETURN
.
RDPMVX11  RETURN                  * Visit extension table is not required
.
          INC       STD001IO
          INC       PATMI1IO/INC
.
