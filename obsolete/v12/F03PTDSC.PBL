.*****************************************************************************
.*    Program      : F03PTDSC                                                *
.*    Description  : Conversion patdschf to new File layout                  *
.*                                                                           *
.*    Author       : Mike Laming      CAR 251645                             *
.*    Date         : 11/11/2011                                              *
.*    Modifications:                                                         *
.*        V10.03.01  11/11/2011  Fixit created                               *
.*****************************************************************************
.
.  Global change F03PTDSC  eg F57PTDOC
.  Global change PATDSCFD  eg PATDOCFD (new layout)
.  Global change patdschf  eg patdoctf
.  Global change PATDSCH1  eg PATDOCT1
.  Global change KEY8   eg KEY8
.  Global change KEY8  eg KEY9
.  Global change WRDSCH1  eg WRDOCT1
.  Global change sptdschf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
.
OLDFILE1  IFILE     SQL, FIXED=240, KEY="U9-16"
.
. NAME    TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----   ------   --------  ----------   -----------
.DURNO     DIM       8           8         1      U.R NO.
.DDADMNO   DIM       8           8         9      ADMISSION NO.
.DDATE     DIM       8           8        17      PATIENT DIS. DATE (CCYYMMDD)
.DTIME     DIM       8           8        25      PATIENT DISCHARGE TIME
..
.DSTAT     DIM       3           3        33      DISCHARGE STATUS      (CAT D )
.DDEST     DIM       3           3        36      DISCHARGE DESTINATION (CAT DD)
..
.DDIAG     DIM      50          50        39      DISCHARGE DIAGNOSIS
.DDIAG2    DIM      50          50        89      DISCHARGE DIAGNOSIS (PART 2)
.DUSD1     DIM       3           3       139      USER DEFINED FIELD 1 (CAT D1)
.DUSD2     DIM       3           3       142      USER DEFINED FIELD 2 (CAT D2)
.DUSD3     DIM       3           3       145      USER DEFINED FIELD 3 (CAT D3)
.DUSD4     DIM       3           3       148      USER DEFINED FIELD 4 (CAT D4)
.DUSD5     DIM       3           3       151      USER DEFINED FIELD 5 (CAT D5)
.DFMBS     DIM       9           9       154      DISCHARGE DIAGNOSIS CODE
.PTDSDMDC  DIM       4           4       163      MDC code
.PTDSDDRG  DIM       4           4       167      DRG code
.DWLREASN  DIM       3           3       171      Reason Discharged Patient was
..                                                put back on Waiting List (RW)
.PTDSSIDX  DIM       1           1       174      DRG severity index
.PTDSVOGU  DIM       3           3       175      Vers grouper used when grouping
.PTDSOPER  DIM       4           4       178      Operator who discharged patie
.PTDSUYN1  FORM      1           2       182      User Defined Y/N Field 1
.PTDSUYN2  FORM      1           2       184      User Defined Y/N Field 2
.PTDSUYN3  FORM      1           2       186      User Defined Y/N Field 3
.PTDSUYN4  FORM      1           2       188      User Defined Y/N Field 4
.PTDSDWRD  DIM       3           3       190      Discharge Ward
.PTDSDLOS  FORM      4           3       193      Length of Stay
.PTDSSREF  DIM       4           4       196      Separation referral
.PTDSPALD  DIM       3           3       200      Palliative care days (PRS2)
.PTDSDPMN  DIM       3           3       203      Departure Means (Cat SI)
OLDSPARE    DIM       34         34       206      SPARE
..End of Record                          240
..
.   NEW FIELDS - Stored in DSPARE       *******************************
.PTDSLSDN  DIM       8           8       206  Linked Statistical Discharge No
..
..
.SDDATE    DIM          8            17      PATIENT DISCHARGE DATE (YYMMDD)
..
..  redefine form fields from key
..  -----------------------------
.. NAME     TYPE      LENGTH     START LOC.   DESCRIPTION
.. ----     ----      ------     ----------   -----------
.DADMNO     FORM         8             9      ADMISSION NO.
..
..
.                                     ******** copy the new FD here *******
.
PATDSCH1  IFILE     SQL, FIXED=280, KEY="U9-16"
PATDSCH2  IFILE     SQL, FIXED=280, KEY="U17-24,9-16"
PATDSCH3  IFILE     SQL, FIXED=280, KEY="U1-8,17-24,9-16"
.
. NAME    TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----   ------   --------  ----------   -----------
DURNO     DIM       8           8         1      U.R NO.
DDADMNO   DIM       8           8         9      ADMISSION NO.
DDATE     DIM       8           8        17      PATIENT DIS. DATE (CCYYMMDD)
DTIME     DIM       8           8        25      PATIENT DISCHARGE TIME
.
DSTAT     DIM       3           3        33      DISCHARGE STATUS      (CAT D )
DDEST     DIM       3           3        36      DISCHARGE DESTINATION (CAT DD)
.
DDIAG     DIM      50          50        39      DISCHARGE DIAGNOSIS
DDIAG2    DIM      50          50        89      DISCHARGE DIAGNOSIS (PART 2)
DUSD1     DIM       3           3       139      USER DEFINED FIELD 1 (CAT D1)
DUSD2     DIM       3           3       142      USER DEFINED FIELD 2 (CAT D2)
DUSD3     DIM       3           3       145      USER DEFINED FIELD 3 (CAT D3)
DUSD4     DIM       3           3       148      USER DEFINED FIELD 4 (CAT D4)
DUSD5     DIM       3           3       151      USER DEFINED FIELD 5 (CAT D5)
DFMBS     DIM       9           9       154      DISCHARGE DIAGNOSIS CODE
PTDSDMDC  DIM       4           4       163      MDC code
PTDSDDRG  DIM       4           4       167      DRG code
DWLREASN  DIM       3           3       171      Reason Discharged Patient was
.                                                put back on Waiting List (RW)
PTDSSIDX  DIM       1           1       174      DRG severity index
PTDSVOGU  DIM       3           3       175      Vers grouper used when grouping
PTDSOPER  DIM       4           4       178      Operator who discharged patie
PTDSUYN1  FORM      1           2       182      User Defined Y/N Field 1
PTDSUYN2  FORM      1           2       184      User Defined Y/N Field 2
PTDSUYN3  FORM      1           2       186      User Defined Y/N Field 3
PTDSUYN4  FORM      1           2       188      User Defined Y/N Field 4
PTDSDWRD  DIM       3           3       190      Discharge Ward
PTDSDLOS  FORM      4           3       193      Length of Stay
PTDSSREF  DIM       4           4       196      Separation referral
PTDSPALD  DIM       3           3       200      Palliative care days (PRS2)
PTDSDPMN  DIM       3           3       203      Departure Means (Cat SI)
PTDSLSDN  DIM       8           8       206      Linked Statistical Discharge No
DSPARE    DIM       66         66       214      SPARE
.End of Record                          280
.
.
SDDATE    DIM          8            17      PATIENT DISCHARGE DATE (YYMMDD)
.
.  redefine form fields from key
.  -----------------------------
. NAME     TYPE      LENGTH     START LOC.   DESCRIPTION
. ----     ----      ------     ----------   -----------
DADMNO     FORM         8             9      ADMISSION NO.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DIM60     DIM       60
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PATDSCFD"
PRGID     INIT      "F03PTDSC"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
..   (removed Oracle option)
..                  *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
..        BRANCH    COPTION,OPTN9000:            * run c-isam fixit
..                          OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      "patdschf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patdschf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptdschf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patdschf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptdschf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patdschf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sptdschf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patdschf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
..PATDSCH1  IFILE     SQL, FIXED=280, KEY="U9-16"
          APPEND    " 280 UC9-16",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
..PATDSCH2  IFILE     SQL, FIXED=280, KEY="U17-24,9-16"
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC17-24,9-16",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
..PATDSCH3  IFILE     SQL, FIXED=280, KEY="U1-8,17-24,9-16"
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-8,17-24,9-16",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PATDSCH1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY8,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
.
          IF        (RECNUM%1000) = 0 | (RECNUM%1000) = 1
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
           PACK      DSPARE,SP70
.                                               * Pack key here
          PACK      KEY8,DDADMNO,SP70
          CALL      WRDSCH1                    * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATDSCH1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sptdschf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat patdschf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'patdschf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*            Oracle fix to.......                                           *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:20,*EL,"Record No. :";
          OPEN      PATDSCH1,"patdschf"
.
..        PACK      KEY8,.....
..        CALL      RS....                        * position at start of file
OFIX0500  
..        CALL      RK....                        * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
.         
          IF        (RECNUM%1000) = 0 | (RECNUM%1000) = 1
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
..        CALL      UP.....
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     PATDSCH1
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:24,*EL,"Update completed.  ";
          CALL      HITENTER
.
OFIX9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
.
READSOLD  RESET     KEY8
          READ      OLDFILE1,KEY8;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DURNO,DDADMNO,DDATE,DTIME,DSTAT:
                             DDEST,DDIAG,DDIAG2,DUSD1,DUSD2:
                             DUSD3,DUSD4,DUSD5,DFMBS,PTDSDMDC:
                             PTDSDDRG,DWLREASN,PTDSSIDX,PTDSVOGU,PTDSOPER:
                             PTDSUYN1,PTDSUYN2,PTDSUYN3,PTDSUYN4,PTDSDWRD:
                             PTDSDLOS,PTDSSREF,PTDSPALD,PTDSDPMN,OLDSPARE
          GOTO      OVERCOND IF OVER
          MOVE      DDADMNO,DADMNO
          MOVE      DDATE,SDDATE
          UNPACK    OLDSPARE,PTDSLSDN              * data saved in DSPARE
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRDSCH1   MOVE      DADMNO,DDADMNO
          MOVE      PASSCODE,PTDSOPER
          RESET     KEY8
          WRITE     PATDSCH1,KEY8;DURNO,KEY8,DDATE,DTIME,DSTAT:
                                  DDEST,DDIAG,DDIAG2,DUSD1,DUSD2:
                                  DUSD3,DUSD4,DUSD5,DFMBS,PTDSDMDC:
                                  PTDSDDRG,DWLREASN,PTDSSIDX,PTDSVOGU,PTDSOPER:
                                  PTDSUYN1,PTDSUYN2,PTDSUYN3,PTDSUYN4,PTDSDWRD:
                                  PTDSDLOS,PTDSSREF,PTDSPALD,PTDSDPMN,PTDSLSDN:
                                  DSPARE
          RETURN
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
          INC       STD001IO
