.*****************************************************************************
.*    Program      : F05PMNUT                                                *
.*    Description  : Conversion pmsnutaf to new File layout                  *
.*                                                                           *
.*    Author       : Steve Armstrong (CAR 298445)                            *
.*    Date         : 03/09/2014                                              *
.*    Modifications:                                                         *
.*                                                                           *
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
.         Old File Definition
.
OLDFILE1  IFILE     SQL, FIXED=450, KEY="U1-8,9-16"
.
. NAME    TYPE   LENGTH  PHYSICAL  START LOC.  DESCRIPTION
. ----    ----   ------  --------  ----------  -----------
.PMNUADMN  DIM       8        8          1      Admission no.
.PMNUDATE  DIM       8        8          9      Meal Date (CCYYMMDD)
.
.PMNUCRTD  DIM      16       16         17      Date & time - record created
.PMNUUPDD  DIM      16       16         33      Date & time - record updated
.PMNUCRTU  DIM      10       10         49      Web User Id - record created
.PMNUUPDU  DIM      10       10         59      Web User Id - record updated
.
.PMNUDTYP  DIM       3        3         69      Main Diet Type (Cat MJ)
.PMNUWARD  DIM       3        3         72      Ward for meals
.PMNUSIZE  DIM       3        3         75      Serving Size (Cat MS)
.PMNUDCDE  DIM      10       10         78      Name of Dietician
.PMNUPAGN  DIM      20       20         88      Dietician's Pager Number
.PMNUALVL  DIM       3        3        108      Menu/Assistance Lvl (Cat MK)
.
.PMNUFLUI  DIM       3        3        111      Fluids    (Cat MU)
.PMNUTEAT  DIM       3        3        114      Teat type (Cat MT)
.PMNUADTV  DIM       3        3        117      Additives (Cat MW)
.PMNUVOLU  DIM       3        3        120      Volume    (Cat MV)
.
.                                              Meal information codes
.
.PMNUML01  DIM       3        3        123      Meal  1 code (Cat MJ)
.PMNUML02  DIM       3        3        126      Meal  2 code (Cat MM)
.PMNUML03  DIM       3        3        129      Meal  3 code (Cat MJ)
.PMNUML04  DIM       3        3        132      Meal  4 code (Cat MM)
.PMNUML05  DIM       3        3        135      Meal  5 code (Cat MJ)
.PMNUML06  DIM       3        3        138      Meal  6 code (Cat MM)
.PMNUML07  DIM       3        3        141      Meal  7 code
.PMNUML08  DIM       3        3        144      Meal  8 code
.PMNUML09  DIM       3        3        147      Meal  9 code
.PMNUML10  DIM       3        3        150      Meal 10 code
.
.                                              Menu printing information
.
.PMNUSTAT  FORM      1        2        153      Meal Status
.                                               0 = Menu Not Printed
.                                               1 = Menu Printed
.                                               2 = Menu Returned
.PMNUBELT  FORM      1        2        155      Belt line ticket printed ?
.                                               1 = Yes
.                                               2 = No
.PMNUMTYP  FORM      1        2        157      Menu type printed
.                                               1 = Standard Menu- from menu fle
.                                               2 = Daily Special- no ward code
.                                               3 = Daily Special- with ward cde
.                                               4 = Fasting
.PMNUPRNT  DIM      16       16        159      Date & time meal was printed
.                                                (CCYYMMDDHH:MM:SS)
.
.                                              Comment fields
.
.PMNUCOM1  DIM      40       40        175      Dietary Comment field 1
.PMNUCOM2  DIM      40       40        215      Dietary Comment field 2
.PMNUCOM3  DIM      40       40        255      Dietary Comment field 3
.PMNUCOM4  DIM      40       40        295      Dietary Comment field 4
.PMNUCOM5  DIM      40       40        335      Dietary Comment field 5
.
.                                              User defined information
.
.PMNUUDF1  DIM       3        3        375      User defined field 1
.PMNUUDF2  DIM       3        3        378      User defined field 2
.PMNUUDF3  DIM       3        3        381      User defined field 3
.PMNUUDF4  DIM       3        3        384      User defined field 4
.PMNUUDF5  DIM       3        3        387      User defined field 5
.
.PMNUFAST  DIM       1        1        390      Fasting indicator
.
.PMNUSPAR  DIM      59       59        391      Spare Variable
.
.End of Record                        450
.
.
.         New File Definition
.
PMSNUTA1  IFILE     SQL, FIXED=693, KEY="U1-8,9-16"
.
. NAME    TYPE   LENGTH  PHYSICAL  START LOC.  DESCRIPTION
. ----    ----   ------  --------  ----------  -----------
PMNUADMN  DIM       8        8          1      Admission no.
PMNUDATE  DIM       8        8          9      Meal Date (CCYYMMDD)
.
PMNUCRTD  DIM      16       16         17      Date & time - record created
PMNUUPDD  DIM      16       16         33      Date & time - record updated
PMNUCRTU  DIM      10       10         49      Web User Id - record created
PMNUUPDU  DIM      10       10         59      Web User Id - record updated
.
PMNUDTYP  DIM       3        3         69      Main Diet Type (Cat MJ)
PMNUWARD  DIM       3        3         72      Ward for meals
PMNUSIZE  DIM       3        3         75      Serving Size (Cat MS)
PMNUDCDE  DIM      10       10         78      Name of Dietician
PMNUPAGN  DIM      20       20         88      Dietician's Pager Number
PMNUALVL  DIM       3        3        108      Menu/Assistance Lvl (Cat MK)
.
PMNUFLUI  DIM       3        3        111      Fluids    (Cat MU)
PMNUTEAT  DIM       3        3        114      Teat type (Cat MT)
PMNUADTV  DIM       3        3        117      Additives (Cat MW)
PMNUVOLU  DIM       3        3        120      Volume    (Cat MV)
.
.                                              Meal information codes
.
PMNUML01  DIM       3        3        123      Meal  1 code (Cat MJ)
PMNUML02  DIM       3        3        126      Meal  2 code (Cat MM)
PMNUML03  DIM       3        3        129      Meal  3 code (Cat MJ)
PMNUML04  DIM       3        3        132      Meal  4 code (Cat MM)
PMNUML05  DIM       3        3        135      Meal  5 code (Cat MJ)
PMNUML06  DIM       3        3        138      Meal  6 code (Cat MM)
PMNUML07  DIM       3        3        141      Meal  7 code
PMNUML08  DIM       3        3        144      Meal  8 code
PMNUML09  DIM       3        3        147      Meal  9 code
PMNUML10  DIM       3        3        150      Meal 10 code
.
.                                              Menu printing information
.
PMNUSTAT  FORM      1        2        153      Meal Status
.                                               0 = Menu Not Printed
.                                               1 = Menu Printed
.                                               2 = Menu Returned
PMNUBELT  FORM      1        2        155      Belt line ticket printed ?
.                                               1 = Yes
.                                               2 = No
PMNUMTYP  FORM      1        2        157      Menu type printed
.                                               1 = Standard Menu- from menu fle
.                                               2 = Daily Special- no ward code
.                                               3 = Daily Special- with ward cde
.                                               4 = Fasting
PMNUPRNT  DIM      16       16        159      Date & time meal was printed
.                                                (CCYYMMDDHH:MM:SS)
.
.                                              Comment fields
.
PMNUCOM1  DIM      40       40        175      Dietary Comment field 1
PMNUCOM2  DIM      40       40        215      Dietary Comment field 2
PMNUCOM3  DIM      40       40        255      Dietary Comment field 3
PMNUCOM4  DIM      40       40        295      Dietary Comment field 4
PMNUCOM5  DIM      40       40        335      Dietary Comment field 5
.
.                                              User defined information
.
PMNUUDF1  DIM       3        3        375      User defined field 1
PMNUUDF2  DIM       3        3        378      User defined field 2
PMNUUDF3  DIM       3        3        381      User defined field 3
PMNUUDF4  DIM       3        3        384      User defined field 4
PMNUUDF5  DIM       3        3        387      User defined field 5
.
PMNUFAST  DIM       1        1        390      Fasting indicator
PMNUBSUP  DIM      40       40        391      Breakfast Supplement Text
PMNUMSUP  DIM      40       40        431      Morning Tea Supplement Text
PMNULSUP  DIM      40       40        471      Lunch Supplement Text
PMNUASUP  DIM      40       40        511      Afternoon Tea Supplement Text
PMNUDSUP  DIM      40       40        551      Dinner Supplement Text
PMNUSSUP  DIM      40       40        591      Supper Supplement Text
PMNUDIET  DIM       3        3        631      Diet Code (Cat DC)
.
PMNUSPAR  DIM      59       59        634      Spare Variable
.
.End of Record                        693
.
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PMSNUTFD"
PRGID     INIT      "F05PMNUT"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000              * run c-isam fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
.
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      "pmsnutaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsnutaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmnutaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsnutaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmnutaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmsnutaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmnutaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmsnutaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 693 UC1-8,9-16",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC9-16,1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSNUTA1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY16,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      SP70,PMNUBSUP                 * load new data fields
          MOVE      SP70,PMNUMSUP
          MOVE      SP70,PMNULSUP
          MOVE      SP70,PMNUASUP
          MOVE      SP70,PMNUDSUP
          MOVE      SP70,PMNUSSUP
          MOVE      SP70,PMNUDIET
.
          CALL      WRPMNUT1                      * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSNUTA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmnutaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not zipped or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat pmsnutaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'pmsnutaf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.         Old IO Routines
.
READSOLD  RESET     KEY16
          READ      OLDFILE1,KEY16;;
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;PMNUADMN,PMNUDATE,PMNUCRTD,PMNUUPDD:
                             PMNUCRTU,PMNUUPDU,PMNUDTYP,PMNUWARD,PMNUSIZE:
                             PMNUDCDE,PMNUPAGN,PMNUALVL,PMNUFLUI,PMNUTEAT:
                             PMNUADTV,PMNUVOLU,PMNUML01,PMNUML02,PMNUML03:
                             PMNUML04,PMNUML05,PMNUML06,PMNUML07,PMNUML08:
                             PMNUML09,PMNUML10,PMNUSTAT,PMNUBELT,PMNUMTYP:
                             PMNUPRNT,PMNUCOM1,PMNUCOM2,PMNUCOM3,PMNUCOM4:
                             PMNUCOM5,PMNUUDF1,PMNUUDF2,PMNUUDF3,PMNUUDF4:
                             PMNUUDF5,PMNUFAST,PMNUSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
.         New IO Routines
.
WRPMNUT1  RESET     KEY16
          WRITE     PMSNUTA1,KEY16;PMNUADMN,PMNUDATE,PMNUCRTD,PMNUUPDD:
                                   PMNUCRTU,PMNUUPDU,PMNUDTYP,PMNUWARD,PMNUSIZE:
                                   PMNUDCDE,PMNUPAGN,PMNUALVL,PMNUFLUI,PMNUTEAT:
                                   PMNUADTV,PMNUVOLU,PMNUML01,PMNUML02,PMNUML03:
                                   PMNUML04,PMNUML05,PMNUML06,PMNUML07,PMNUML08:
                                   PMNUML09,PMNUML10,PMNUSTAT,PMNUBELT,PMNUMTYP:
                                   PMNUPRNT,PMNUCOM1,PMNUCOM2,PMNUCOM3,PMNUCOM4:
                                   PMNUCOM5,PMNUUDF1,PMNUUDF2,PMNUUDF3,PMNUUDF4:
                                   PMNUUDF5,PMNUFAST,PMNUBSUP,PMNUMSUP,PMNULSUP:
                                   PMNUASUP,PMNUDSUP,PMNUSSUP,PMNUDIET,PMNUSPAR
          RETURN
.
          INC       STD001IO
+
