.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.01.01  02.08.2000 Charles Handaya
.           Add in Export File
.-------------------------------------------------------
. VF.00.03  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.02  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
. VF.00.01  28.04.1999 Sandra Barcham
.           Allow for 12.2 amounts
.           srf 630913
.-------------------------------------------------------
BALANCE   FORM      12.2
SEQTYPE   FORM      1
CON       DIM       2
DISPDR    DIM       20
DISPCR    DIM       20
FORMAT    INIT      "(999,999,999,999.99 "
FTOTAL0   DIM       20
FTOTAL1   DIM       20
FTOTAL2   DIM       20
FTOTAL3   DIM       20
FTOTAL4   DIM       20
OBAL      DIM       20
PBAL      DIM       20
REPTOTC   FORM      12.2
REPTOTD   FORM      12.2
REPTOTO   FORM      12.2
RTOT0     FORM      12.2
RTOT1     FORM      12.2
RTOT2     FORM      12.2
RTOT3     FORM      12.2
RTOT4     FORM      12.2
STOT0     FORM      12.2
STOT1     FORM      12.2
STOT2     FORM      12.2
STOT3     FORM      12.2
STOT4     FORM      12.2
TOTAL0    FORM      12.2
TOTAL1    FORM      12.2
TOTAL2    FORM      12.2
TOTAL3    FORM      12.2
TOTAL4    FORM      12.2
TOTALC    FORM      12.2
TOTALD    FORM      12.2
TRNAMT    FORM      12.2
END       INIT      "End       "
START     INIT      "Start     "
FROMDATE  DIM       8
TODATE    DIM       8
. replace A with temp file id (dim 1)
. replace %2 with key length
. replace 140 with file length
. replace aps64 with 6 char lower case program id (eg. aps66)
ISBUILD   INIT      "isbuild "         * define temp file variables
ISERASE   INIT      "iserase "
TMP0ADAT  INIT      " 231 UC1-15,16-30,31-35,48-55,56-58 ":
                   "UC36-43,1-15,16-30,31-35,48-55,56-58"
NEZTMP0A  IFILE     SQL, FIXED=231, KEY="U1-15,16-30,31-35,48-55,56-58"
NEZTMP0B  IFILE     SQL, FIXED=231, KEY="U36-43,1-15,16-30,31-35,48-55,56-58"
NAMEA     INIT      "aps64A"
FILENAMA  DIM       8
KILLTMPA  DIM       110
MAKETMPA  DIM       110
.                            * temp file definition
. Name     Type      Length Physical Start Description
. ----     ----      ------ -------- ----- -----------
.APIMREF   DIM       15     15       1
.APIMDOC   DIM       15     15       16
.APIMBCH   DIM       5      5        31
.APBMADT   DIM       8      8        36
.CON       DIM       2      2        44
.APIMTER   DIM       2      2        46
.APINORD   DIM       8      8        48
.APINLIN   DIM       3      3        56
.APINDES   DIM       35     35       59
.DISPDR    DIM       20     20       94
.DISPCR    DIM       20     20       114
.APINLED   DIM       2      2        134
.FMLADESC  DIM       35     35       136
.APINACC   DIM       12     12       171
.FMAMACCT  DIM       35     35       183
CONDESCP   DIM       13     13       218
.
. End of file                        231
.
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS64
.   Function      :   Creditors Transaction Analysis          
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSBMFFD/INC
          INC       APSCTSFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       FMSAMAFD/INC
          INC       FMSLMAFD/INC
.=========================
.Local Variable Definition
.-------------------------
REPSEQ    DIM      20 * Scr 00 Fld     2
CREDFROM  DIM      40 * Scr 00 Fld     3
CREDEND   DIM      40 * Scr 00 Fld     4
SORTFROM  DIM       6 * Scr 00 Fld     5
SORTEND   DIM       6 * Scr 00 Fld     6
TYPEFROM  DIM      40 * Scr 00 Fld     7
TYPEEND   DIM      40 * Scr 00 Fld     8
RECORDER  FORM      1 * Scr 00 Fld     9
FROMCRED  DIM       5 * Scr 00 Fld    13
ENDCRED   DIM       5 * Scr 00 Fld    14
FROMTYPE  DIM       3 * Scr 00 Fld    15
ENDTYPE   DIM       3 * Scr 00 Fld    16
FROMSORT  DIM       6 * Scr 00 Fld    17
ENDSORT   DIM       6 * Scr 00 Fld    18
REPTTYPE  FORM      1 * Scr 00 Fld    19
REPTSEQ   FORM      1 * Scr 00 Fld    20
FROMDATD  DIM      10 * Scr 00 Fld    21
TODATD    DIM      10 * Scr 00 Fld    22
SEQDESC   DIM      26 * Scr 00 Fld    23
EXPORTYN  FORM      1 * Scr 00 Fld    24
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS64"
PRGNAM    INIT      "Creditors Transaction Analysis          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsctsaf";
          OPEN      APSCTSA1,"apsctsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Input Parameters                   
          ENDIF
          RETURN
.--------------------------------
. Screen - Input Parameters                   
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Input Parameters                   
.-------------------------------------------------------
CF00L000
          MOVE      SP70,REPSEQ  
          MOVE      SP70,CREDFROM
          MOVE      SP70,CREDEND 
          MOVE      SP70,SORTFROM
          MOVE      SP70,SORTEND 
          MOVE      SP70,TYPEFROM
          MOVE      SP70,TYPEEND 
          MOVE      ZERO,RECORDER
          MOVE      SP70,FROMCRED
          MOVE      SP70,ENDCRED 
          MOVE      SP70,FROMTYPE
          MOVE      SP70,ENDTYPE 
          MOVE      SP70,FROMSORT
          MOVE      SP70,ENDSORT 
          MOVE      ZERO,REPTTYPE
          MOVE      ZERO,REPTSEQ 
          MOVE      SP70,FROMDATD
          MOVE      SP70,TODATD  
          MOVE      SP70,SEQDESC 
          MOVE      ZERO,EXPORTYN
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Input Parameters                   
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Input Parameters                   
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Input Parameters                   
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Input Parameters                   
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Input Parameters                   
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L101,PS00L102,PS00L103:
                            PS00L104,PS00L105,PS00L106,PS00L107:
                            PS00L108,PS00L999,PS00L999,PS00L999:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L115,PS00L116:
                            PS00L117,PS00L118,PS00L119,PS00L120
          GOTO     PS00L999
.
PS00L101
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CREDEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      SORTFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SORTEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      TYPEFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      TYPEEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      RECORDER,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      FROMCRED,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      ENDCRED,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      FROMTYPE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      ENDTYPE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      FROMSORT,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      ENDSORT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      REPTTYPE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      FROMDATD,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      TODATD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      SEQDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Input Parameters                   
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L103,SF00L006,SF00L104,SF00L006:
                            SF00L105,SF00L006,SF00L106,SF00L107:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L108,SF00L006,SF00L109,SF00L110
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L101,SF00L102,SF00L020:
                            SF00L103,SF00L020,SF00L104,SF00L020:
                            SF00L105,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L108,SF00L020,SF00L109,SF00L110
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KREPSQ00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L102
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CREDEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFCRED00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CREDEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SORTEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFSORT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SORTFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SORTEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TYPEEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFTYPE00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      TYPEFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TYPEEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,RECORDER
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      RECORDER,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L107
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      REPT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L108
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODATD  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDATF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMDATD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODATD,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSEQN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
            BRANCH    EXIT,SF00L109,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SEQDESC,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Set up screen 00
.----------------------------------------------------------------------
SETSCR00
          MOVE      ONE,ACCEPT              * set accept mode
.
          MOVE      "0",SEQTYPE             * default sequence
          CALL      DDAT0000                * default date range
.
          RETURN
.----------------------------------------------------------------------
. Default range
.----------------------------------------------------------------------
DDAT0000
          PACK      FROMDATE,SP70
          PACK      FROMDATD,START,SP70
.
          PACK      TODATE,Z70
          PACK      TODATD,END,SP70
          RETURN
.----------------------------------------------------------------------
. Enter creditor sequence
.----------------------------------------------------------------------
KREPSQ00  MOVE       ZERO,EXIT
          KEYIN      *PCCOL:CVERT,*EL,*V2LON,ANS
          REP        UPPLOW,ANS
          MATCH      "S",ANS
          GOTO       KREPSQ10 IF EQUAL
          MATCH      "C",ANS
          GOTO       KREPSQ20 IF EQUAL
          MATCH      "T",ANS
          GOTO       KREPSQ30 IF EQUAL
          MATCH      EXITCHAR,ANS
          GOTO       KREPSQ95 IF EQUAL
          BEEP
          GOTO       KREPSQ00
.
KREPSQ10  MOVE       "Sort Key Order",REPSEQ
          MOVE       ONE,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ20  MOVE       "Creditor Code Order",REPSEQ
          MOVE       TWO,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ30  MOVE       "Creditor Type Order",REPSEQ
          MOVE       THREE,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ95  MOVE       TWO,EXIT
.
KREPSQ99  RETURN
.
.----------------------------------------------------------------------
. Enter Creditor Code
.----------------------------------------------------------------------
KFCRED00  MOVE       "    3",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,KFCRED10,KFCRED99
          MOVE       APMACRD,FROMCRED
          PACK       CREDFROM,APMACRD,SP1,APMACN1
          GOTO       KFCRED20
.
KFCRED10  MOVE       SP70,FROMCRED
          MOVE       "Start                              ",CREDFROM
.
KFCRED20  MOVE       CREDFROM,VAR
          CALL       DISPITEM
.
KFCRED30  MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,KFCRED40,KFCRED99
          MOVE       APMACRD,ENDCRED
          PACK       CREDEND,APMACRD,SP1,APMACN1
          MATCH      FROMCRED,ENDCRED
          GOTO       KFCRED99 IF NOT LESS
.
          BEEP
          MOVE       "To Creditor Code Must Be > From Creditor Code - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFCRED00
.
KFCRED40  MOVE       "~~~~~",ENDCRED
          MOVE       "End                                   ",CREDEND
.
KFCRED99  RETURN
.
.----------------------------------------------------------------------
. Enter SORT Code
.----------------------------------------------------------------------
KFSORT00  MOVE       ZERO,EXIT
          MOVE       "    5",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          KEYIN      *PCCOL:CVERT,*V2LON,FROMSORT
          ENDSET     FROMSORT
          APPEND     SP70,FROMSORT
          RESET      FROMSORT
          MATCH      EXITCHAR,FROMSORT
          GOTO       KFSORT95 IF EQUAL
.
          MATCH      SP70,FROMSORT
          GOTO       KFSORT10 IF EQUAL
          MOVE       FROMSORT,SORTFROM
          GOTO       KFSORT20
.
KFSORT10  MOVE       "      ",FROMSORT
          MOVE       "Start ",SORTFROM
.
KFSORT20  MOVE       SORTFROM,VAR
          CALL       DISPITEM
.
          MOVE       "    6",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          KEYIN      *PCCOL:CVERT,*V2LON,ENDSORT
          ENDSET     ENDSORT
          APPEND     SP70,ENDSORT
          RESET      ENDSORT
          MATCH      EXITCHAR,ENDSORT
          GOTO       KFSORT95 IF EQUAL
.
          MATCH      SP70,ENDSORT
          GOTO       KFSORT30 IF EQUAL
          MOVE       ENDSORT,SORTEND
          MATCH      FROMSORT,ENDSORT
          GOTO       KFSORT99 IF NOT LESS
.
          BEEP
          MOVE       "To Sort Key Must Be > From Sort Key - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    6",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFSORT00
.
KFSORT30  MOVE       "~~~~~~",ENDSORT
          MOVE       "End   ",SORTEND
          GOTO       KFSORT99
.
KFSORT95  MOVE       TWO,EXIT
.
KFSORT99  RETURN
.
.----------------------------------------------------------------------
. Enter Type Code
.----------------------------------------------------------------------
KFTYPE00  MOVE       "    7",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPCTA00
          BRANCH     EXIT,KFTYPE10,KFTYPE99
          MOVE       APCTCODE,FROMTYPE
          PACK       TYPEFROM,APCTCODE,SP1,APCTDESC
          GOTO       KFTYPE20
.
KFTYPE10  MOVE       "   ",FROMTYPE
          MOVE       "Start                              ",TYPEFROM
.
KFTYPE20  MOVE       TYPEFROM,VAR
          CALL       DISPITEM
.
          MOVE       "    8",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPCTA00
          BRANCH     EXIT,KFTYPE30,KFTYPE99
          MOVE       APCTCODE,ENDTYPE
          PACK       TYPEEND,APCTCODE,SP1,APCTDESC
          MATCH      FROMTYPE,ENDTYPE
          GOTO       KFTYPE99 IF NOT LESS
.
          BEEP
          MOVE       "To Creditor Type Must Be > From Creditor Type - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    8",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFTYPE00
.
KFTYPE30  MOVE       "~~~",ENDTYPE
          MOVE       "End                                     ",TYPEEND
.
KFTYPE99  RETURN
.
.----------------------------------------------------------------------
. Print Creditors Register
.
. Parameters  : REPTTYPE  FORM 1  1=Supplier Details 2=Creditor Details
.               REPTSEQ   FORM 1  1=by Sort, 2=by Code, 3=by Type
.               FROMCRED  DIM  5  Creditor Range
.               ENDCRED   DIM  5
.               FROMSORT  DIM  5  Sort Key Range
.               ENDSORT   DIM  5
.               FROMTYPE  DIM  5  Type Range
.               ENDTYPE   DIM  5
.
.----------------------------------------------------------------------
REPT0000  PACK      FILENAMA,NAMEA,PORT,SP70     * set up and open temp file
          REP       " 0",FILENAMA
          PACK      MAKETMPA,ISBUILD,FILENAMA,TMP0ADAT
          PACK      KILLTMPA,ISERASE,FILENAMA
.
          MATCH     FROMSORT,ENDSORT
          GOTO      REPT0010 IF NOT LESS
          MOVE      "Last Sort Key must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0010  MATCH     FROMCRED,ENDCRED
          GOTO      REPT0020 IF NOT LESS
          MOVE      "Last Creditor must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0020  MATCH     FROMTYPE,ENDTYPE
          GOTO      REPT0030 IF NOT LESS
          MOVE      "Last Creditor Type must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0030  MATCH     FROMDATE,TODATE
          GOTO      REPT0040 IF NOT LESS
          MOVE      "Last Date must be after the First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0040  MOVE      "99",CLNO
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,STOT1
          MOVE      ZERO,STOT2
          MOVE      ZERO,STOT3
          MOVE      ZERO,RTOT1
          MOVE      ZERO,RTOT2
          MOVE      ZERO,RTOT3
          DISPLAY   *P1:24,*EL,"Processing : "
          CALL      MAKEXP00                     * create export file
.
          BRANCH    REPTSEQ,REPT1000,REPT2000,REPT3000
.
. Report by Sort Key
.
REPT1000  PACK      KEY11,FROMSORT,SP70
          CALL      RSAPMA3
.
REPT1100  CALL      RKAPMA3
          BRANCH    OVRCD,REPT5000
          MATCH     APMASKY,ENDSORT
          GOTO      REPT5000 IF LESS
.
          MATCH     FROMCRED,APMACRD
          GOTO      REPT1100 IF LESS
          MATCH     APMACRD,ENDCRED
          GOTO      REPT1100 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          GOTO      REPT1100 IF LESS
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT1100 IF LESS
.
          CALL      PCRED000          * Print Creditor
          GOTO      REPT1100
.
. Report by Code
.
REPT2000  PACK      KEY5,FROMCRED,SP70
          CALL      RSAPMA1
          CALL      RPAPMA1
.
REPT2100  CALL      RKAPMA1
          BRANCH    OVRCD,REPT5000
          MATCH     APMACRD,ENDCRED
          GOTO      REPT5000 IF LESS
.
          MATCH     FROMSORT,APMASKY
          GOTO      REPT2100 IF LESS
          MATCH     APMASKY,ENDSORT
          GOTO      REPT2100 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          GOTO      REPT2100 IF LESS
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT2100 IF LESS
.
          CALL      PCRED000          * Print Creditor
          GOTO      REPT2100
.
. Report by Type
.
REPT3000  PACK      KEY8,FROMTYPE,SP70
          CALL      RSAPMA2
REPT3100  CALL      RKAPMA2
          BRANCH    OVRCD,REPT3900
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT3900 IF LESS
.
          MATCH     FROMSORT,APMASKY
          GOTO      REPT3100 IF LESS
          MATCH     APMASKY,ENDSORT
          GOTO      REPT3100 IF LESS
.
          MATCH     FROMCRED,APMACRD
          GOTO      REPT3100 IF LESS
          MATCH     APMACRD,ENDCRED
          GOTO      REPT3100 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          IF        !@EQUAL
            CALL      STOT0000            * Print Sub Total
            MOVE      APMATYP,FROMTYPE    * Force Page Break of Type Change
            MOVE      "88",CLNO
          ENDIF
.
          CALL      PCRED000          * Print Creditor
          GOTO      REPT3100
.
REPT3900  CALL      STOT0000            * Print Sub Total
.
. End of Report
.
REPT5000  CALL      PTOT0000
          CALL      TRAN0000
.
          CLOSE     NEZTMP0A
          CLOSE     NEZTMP0B
          EXECUTE   KILLTMPA,TASKID
          MOVE      ZERO,EXIT
          GOTO      REPT9999
.
REPT9000  MOVE      ONE,EXIT * Return to Prompt
          GOTO      REPT9999
.
REPT9999  RETURN
.------------------------------------------------------------
. Print Report Heading
.------------------------------------------------------------
PHEAD000  CALL      HEAD132
.
PHEAD100  BRANCH    REPTSEQ,PHEAD110,PHEAD120,PHEAD130
.
PHEAD110  PRINT     "Alpha Sort Key Order";
          GOTO      PHEAD200
.
PHEAD120  PRINT     "Creditor Code Order";
          GOTO      PHEAD200
.
PHEAD130  PRINT     "Creditor Type Order";
          GOTO      PHEAD200
.
PHEAD200  PRINT     *63,SEQDESC:
                    *N,"Creditor Code From : ",CREDFROM," To : ",CREDEND:
                    *N,"Creditor Type From : ",TYPEFROM," To : ",TYPEEND:
                    *N,"Posting Date From  : ",FROMDATD," To : ",TODATD:
                    *63,"Sort Key From : ",SORTFROM," To : ",SORTEND
          CALL      UND132
          PRINT     *1,"Invoice Ref.",*17,"Document Ref.",*33,"Batch":
                    *40,"Post Date",*50,"Ty",*53,"PP",*56,"Ord",*64,"Line":
                    *69,"Description",*95,"             Debit":
                    *114,"            Credit"
          CALL      UND132
          ADD       "5" TO CLNO
          RETURN
.
.------------------------------------------------------------
. Print Details
.------------------------------------------------------------
PRINTINV  COMPARE   "58" TO CLNO
          CALL      PHEAD000 IF NOT LESS
.
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CALL      WRTEXP00
.
          MOVE      APINDES,KEY20
.
          PRINT     *1,APIMREF,*17,APIMDOC,*33,APIMBCH:
                    *39,CPCDATE,*50,CON,*53,APIMTER,*56,APINORD,*65,APINLIN:
                    *69,KEY20,*94,DISPDR,*113,DISPCR
.
          ADD       ONE TO CLNO
.
PRTOUT    RETURN
.------------------------------------------------------------
. Format Transaction
.------------------------------------------------------------
CHECKTRN  MOVE      APIMTYP,F1
          BRANCH    F1,CREDIT,PAY,CANCELED,REINST
.
INVOICE   MOVE      "In",CON
          MOVE      "Invoice      ",CONDESCP
          MOVE      SP70,DISPDR
          MOVE      FORMAT,DISPCR
          FEDIT     TRNAMT,DISPCR
          ADD       TRNAMT,TOTALC
          ADD       TRNAMT,RTOT3
          ADD       TRNAMT,STOT3
          RETURN
.
CREDIT    MOVE      "Cr",CON
          MOVE      "Credit Note  ",CONDESCP
          MOVE      SP70,DISPCR
          MOVE      FORMAT,DISPDR
          FEDIT     TRNAMT,DISPDR
          ADD       TRNAMT,TOTALD
          ADD       TRNAMT,RTOT2
          ADD       TRNAMT,STOT2
          RETURN
.
PAY       MOVE      "Py",CON
          MOVE      "Payment      ",CONDESCP
          MOVE      SP70,DISPCR
          MOVE      FORMAT,DISPDR
          FEDIT     TRNAMT,DISPDR
          ADD       TRNAMT,TOTALD
          ADD       TRNAMT,RTOT2
          ADD       TRNAMT,STOT2
          RETURN
.
CANCELED  MOVE      "Cc",CON
          MOVE      "Cancel       ",CONDESCP
          MOVE      FORMAT,DISPDR
          MOVE      FORMAT,DISPCR
          FEDIT     TRNAMT,DISPDR
          FEDIT     TRNAMT,DISPCR
          ADD       TRNAMT,TOTALD
          ADD       TRNAMT,TOTALC
          ADD       TRNAMT,RTOT2
          ADD       TRNAMT,STOT2
          ADD       TRNAMT,RTOT3
          ADD       TRNAMT,STOT3
          RETURN
.
REINST    MOVE      "Ri",CON
          MOVE      "Reinstatement",CONDESCP
          MOVE      SP70,DISPDR
          MOVE      FORMAT,DISPCR
          FEDIT     TRNAMT,DISPCR
          ADD       TRNAMT,TOTALC
          ADD       TRNAMT,RTOT3
          ADD       TRNAMT,STOT3
          RETURN
.----------------------------------------------------------------------
. Print Report Totals
.----------------------------------------------------------------------
PTOT0000  MOVE      FORMAT,FTOTAL1
          MOVE      FORMAT,FTOTAL2
          MOVE      FORMAT,FTOTAL3
          FEDIT     RTOT1,FTOTAL1
          FEDIT     RTOT2,FTOTAL2
          FEDIT     RTOT3,FTOTAL3
.
          MATCH     "**********",FTOTAL1
          IF        @EQUAL
            MOVE      RTOT1,FTOTAL1
          ENDIF
          MATCH     "**********",FTOTAL2
          IF        @EQUAL
            MOVE      RTOT2,FTOTAL2
          ENDIF
          MATCH     "**********",FTOTAL3
          IF        @EQUAL
            MOVE      RTOT3,FTOTAL3
          ENDIF
.
          CALL      UND132
          PRINT     *65,FTOTAL1,*94,FTOTAL2,*113,FTOTAL3
          CALL      UND132
          PRINT     *25,"*****  N.B.  This Report will only reflect the data":
                    " for the Period Selected.  *****",*N
          PRINT     *30,"*****  End of Report *****"
          MOVE      ZERO,RTOT1
          MOVE      ZERO,RTOT2
          MOVE      ZERO,RTOT3
          RETURN
.----------------------------------------------------------------------
. Print Report Sub Totals
.----------------------------------------------------------------------
STOT0000  IF        STOT1+STOT2+STOT3=0
            GOTO      STOT9999
          ENDIF
          MOVE      FORMAT,FTOTAL1
          MOVE      FORMAT,FTOTAL2
          MOVE      FORMAT,FTOTAL3
          FEDIT     STOT1,FTOTAL1
          FEDIT     STOT2,FTOTAL2
          FEDIT     STOT3,FTOTAL3
.
          MATCH     "**********",FTOTAL1
          IF        @EQUAL
            MOVE      STOT1,FTOTAL1
          ENDIF
          MATCH     "**********",FTOTAL2
          iF        @EQUAL
            MOVE      STOT2,FTOTAL2
          ENDIF
          MATCH     "**********",FTOTAL3
          IF        @EQUAL
            MOVE      STOT3,FTOTAL3
          ENDIF
.
          CALL      UND132
          PRINT     "Creditor Type ",FROMTYPE:
                    *65,FTOTAL1,*94,FTOTAL2,*113,FTOTAL3
          ADD       ONE,CLNO
          CALL      UND132
          MOVE      ZERO,STOT1
          MOVE      ZERO,STOT2
          MOVE      ZERO,STOT3
.
STOT9999  RETURN
.-----------------
. Format amount
.-----------------
FAMT0000  MOVE      ZERO,EXIT
          ASSIGN    APINAMT+APINGST,TRNAMT
          MOVE      APIMTYP,F1
          BRANCH    F1,FAMT9999,FAMT9999,FAMT2000
          GOTO      FAMT9999
.
FAMT2000  MOVE      ONE,EXIT
.
FAMT9999  RETURN
.------------------------------------------------------------
. Print Creditor and Trans
.------------------------------------------------------------
PCRED000  CLOSE     NEZTMP0A
          CLOSE     NEZTMP0B
          EXECUTE   KILLTMPA,TASKID
          EXECUTE   MAKETMPA,TASKID
          OPEN      NEZTMP0A,FILENAMA
          OPEN      NEZTMP0B,FILENAMA
          MOVE      ZERO TO TOTALC
          MOVE      ZERO TO TOTALD
.
          DISPLAY   *P1:24,"Processing : ",*V2LON,APMACRD,*EF;
          PACK      KEY40,APMACRD,SP70
          CALL      RSAPIM3
.
PCRED100  CALL      RKAPIM3
          BRANCH    OVRCD,PCRED999
          MATCH     APMACRD,APIMCRD
          GOTO      PCRED999 IF NOT EQUAL
.
          MOVE      SP70,APBMADT
          MOVE      SP70,APBMUDT
          PACK      KEY5,APIMBCH,SP70
          CALL      RDAPBM1
.
          MATCH     SP70,APBMUDT       * check if updated
          GOTO      PCRED100 IF EQUAL
.
          MATCH     FROMDATE,APBMADT
          GOTO      PCRED100 IF LESS
          MATCH     APBMADT,TODATE
          GOTO      PCRED100 IF LESS
.
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RSAPIN1
.
PCRED200  CALL      RKAPIN1
          BRANCH    OVRCD,PCRED100
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
          MATCH     KEY40,KEY51
          GOTO      PCRED100 IF NOT EQUAL
.
          CALL      FAMT0000
          CALL      CHECKTRN
.
          PACK      FMLADESC,SP70
          PACK      KEY2,APINLED,SP70
          CALL      RDFMLA1
.
          PACK      FMAMDESC,SP70
          PACK      KEY14,APINLED,APINACC,SP70
          CALL      RDFMAM1
.
          PACK      KEY46,APIMREF,APIMDOC,APIMBCH,APINORD,APINDOC,SP70
          CALL      WRNEZA1
.
          GOTO      PCRED200
.
PCRED999  CALL      PDATA000           * print data
          RETURN
.------------------------------------------------------------
. Print Data
.------------------------------------------------------------
PDATA000
          COMPARE   "52",CLNO
          CALL      PHEAD000 IF NOT LESS
.
          DISPLAY   *P1:24,"Printing   : ",*V2LON,APMACRD,*EF;
          PRINT     "Creditor : ",APMACRD,*31,APMACN1:
                    *70,"Type : ",APMATYP,SP1,APCTDESC:
                    *N,*31,APMACN2
          ADD       TWO,CLNO
.
          IF        SEQTYPE=1
            PACK      KEY54,SP70
            CALL      RSNEZA2
          ELSE
            PACK      KEY46,SP70
            CALL      RSNEZA1
          ENDIF
.
PDATA200
          IF        SEQTYPE=1
            CALL      RKNEZA2
          ELSE
            CALL      RKNEZA1
          ENDIF
          BRANCH    OVRCD,PDATA999
.
          CALL      PRINTINV
.
          GOTO      PDATA200
.
PDATA999  CALL      PRINTTOT
          RETURN
.------------------------------------------------------------
. Print Creditor Total
.------------------------------------------------------------
PRINTTOT  MOVE      FORMAT,DISPDR
          FEDIT     TOTALD,DISPDR
          MOVE      FORMAT,DISPCR
          FEDIT     TOTALC,DISPCR
          MOVE      TOTALC,BALANCE
          SUB       TOTALD,BALANCE
          ADD       APMAPOT,BALANCE
          ADD       BALANCE,RTOT1
          ADD       BALANCE,STOT1
.
          MOVE      FORMAT,PBAL
          FEDIT     BALANCE,PBAL
          MOVE      FORMAT,OBAL
          FEDIT     APMAPOT,OBAL
          PRINT     *N,"Balance at last Purge : ",OBAL:
                    " Current Balance  : ",PBAL:
                    *85,"Totals ",*94,DISPDR,*113,DISPCR
          CALL      UND132
          ADD       "2" TO CLNO
          ADD       TOTALD,REPTOTD
          ADD       TOTALC,REPTOTC
          ADD       APMAPOT,REPTOTO
          MOVE      ZERO,TOTALD
          MOVE      ZERO,TOTALC
          RETURN
.
.**********************************************************************
. NEZTMP0A IO routines                           Called by Lots
.**********************************************************************
RSNEZA1   RESET     KEY46
          READ      NEZTMP0A,KEY46;;
          RETURN
.
RANEZA1   RESET     KEY46
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY46;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZA1   RESET     KEY46
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY46;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZA1   MOVE      ZERO,OVRCD
          READKS    NEZTMP0A;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZA1   MOVE      ZERO,OVRCD
          READKP    NEZTMP0A;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZA1   UPDATE    NEZTMP0A;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          RETURN
.
WRNEZA1   RESET     KEY46
          WRITE     NEZTMP0A,KEY46;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          RETURN
.
DENEZA1   RESET     KEY46
          DELETE    NEZTMP0A,KEY46
          RETURN
.
RSNEZA2   RESET     KEY54
          READ      NEZTMP0B,KEY54;;
          RETURN
.
RANEZA2   RESET     KEY54
          MOVE      ZERO,OVRCD
          READ      NEZTMP0B,KEY54;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZA2   RESET     KEY54
          MOVE      ZERO,OVRCD
          READ      NEZTMP0B,KEY54;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZA2   MOVE      ZERO,OVRCD
          READKS    NEZTMP0B;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZA2   MOVE      ZERO,OVRCD
          READKP    NEZTMP0B;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZA2   UPDATE    NEZTMP0B;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          RETURN
.
WRNEZA2   RESET     KEY54
          WRITE     NEZTMP0B,KEY54;APIMREF,APIMDOC,APIMBCH,APBMADT,CON:
                    APIMTER,APINORD,APINLIN,APINDES,DISPDR,DISPCR:
                    APINLED,FMLADESC,APINACC,FMAMACCT,CONDESCP
          RETURN
.
DENEZA2   RESET     KEY54
          DELETE    NEZTMP0B,KEY54
          RETURN
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export details Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
          MOVE     "EXPORT",DIM6
          PACK     EXPORTFN,DIM6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
.
          WRITE    EXPORTFL,SEQ;"Creditor Code",TABDELM:
                                "Sortkey",TABDELM:
                                "Creditor Type",TABDELM:
                                "Creditor Name 1",TABDELM:
                                "Creditor Name 2",TABDELM:
                                "Invoice Reference",TABDELM:
                                "Document Reference",TABDELM:
                                "Batch No.",TABDELM:
                                "Posting Date",TABDELM:
                                "Ledger",TABDELM:
                                "Ledger Description",TABDELM:
                                "Account",TABDELM:
                                "Account Description",TABDELM:
                                "Transaction Type",TABDELM:
                                "Terms",TABDELM:
                                "Order No.",TABDELM:
                                "Line No.",TABDELM:
                                "Transaction Description",TABDELM:
                                "Debit",TABDELM:
                                "Credit"
          GOTO      MAKEXP99
.
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXP99 IF NOT EQUAL
.
          WRITE    EXPORTFL,SEQ;APMACRD,TABDELM:
                                APMASKY,TABDELM:
                                APMATYP,TABDELM:
                                APMACN1,TABDELM:
                                APMACN2,TABDELM:
                                APIMREF,TABDELM:
                                APIMDOC,TABDELM:
                                APIMBCH,TABDELM:
                                CPCDATE,TABDELM:
                                APINLED,TABDELM:
                                FMLADESC,TABDELM:
                                APINACC,TABDELM:
                                FMAMDESC,TABDELM:
                                CONDESCP,TABDELM:
                                APIMTER,TABDELM:
                                APINORD,TABDELM:
                                APINLIN,TABDELM:
                                APINDES,TABDELM:
                                DISPDR,TABDELM:
                                DISPCR
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9999 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.
.----------------------------------------
. Enter Date Range
.  where xxx     = Field ID
.        KDATF   = Call Routine Label
.        "    1" = Screen Item Number for "from" Variable
.        "    2" = Screen Item Number for "to" Variable
.
.  Return Values
.        FROMDATD  Date for Start of Range Formatted in a DIM 10
.        TODATD    Date for End of Range Formatted in a DIM 10
.        FROMDATE   Date for Start of Range Format CCYYMMDD
.        TODATE   Date for End of Range Format CCYYMMDD
.----------------------------------------
KDATF000   MOVE     "   21",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,KDATF100
           MATCH    SP2,CDAY
           GOTO     KDATF100 IF EQUAL
           PACK     FROMDATE,CCENT,CYEAR,CMON,CDAY
           REP      " 0",FROMDATE
           CALL     PACDATE
           MOVE     CPCDATE,FROMDATD
           GOTO     KDATF140
KDATF100   MOVE     "Start             ",FROMDATD
           MOVE     SP70,FROMDATE
.
KDATF140   MOVE     FROMDATD,VAR
           CALL     DISPITEM
.
KDATF150   MOVE     "   22",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,KDATF200
           MATCH    SP2,CDAY
           GOTO     KDATF200 IF EQUAL
           PACK     TODATE,CCENT,CYEAR,CMON,CDAY
           REP      " 0",TODATE
           CALL     PACDATE
           MOVE     CPCDATE,TODATD
           MATCH    FROMDATE,TODATE
           GOTO     KDATF999 IF EQUAL
           GOTO     KDATF999 IF NOT LESS
           BEEP
           MOVE     "To Date Must Be > From Date - ",DISPMSG
           CALL     MESSAGE1
           MOVE     "   22",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
           GOTO     KDATF000
.
KDATF200   MOVE     "End                ",TODATD
           MOVE     "99999999",TODATE
.
KDATF999   MOVE     "   21",FLDID
           CALL     GETPOSIT
           RETURN
.
.
.----------------------------------------------------------------------
. Enter report sequence
.----------------------------------------------------------------------
KSEQN000  MOVE       ZERO,EXIT
          KEYIN      *PCCOL:CVERT,*EL,*V2LON,ANS
          PACK       ANS,ANS,SP70
          REP        UPPLOW,ANS
          MATCH      "I",ANS
          GOTO       KSEQN010 IF EQUAL
          MATCH      "D",ANS
          GOTO       KSEQN020 IF EQUAL
          MATCH      EXITCHAR,ANS
          GOTO       KSEQN095 IF EQUAL
          BEEP
          GOTO       KSEQN000
.
KSEQN010  MOVE       "Invoice Reference Sequence",SEQDESC
          MOVE       ZERO,SEQTYPE
          GOTO       KSEQN999
.
KSEQN020  MOVE       "Posting Date Sequence     ",SEQDESC
          MOVE       ONE,SEQTYPE
          GOTO       KSEQN999
.
KSEQN095  MOVE       TWO,EXIT          * quit
.
KSEQN999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSBMFIO/INC
          INC       APSCKIKY    
          INC       APSCTSIO/INC
          INC       APSCTSKY    
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       FMSAMAIO/INC
          INC       FMSLMAIO/INC
.
          INC       STDGENCD
.
