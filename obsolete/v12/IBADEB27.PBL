.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.04.01  15/04/2014 Ebon Clements CAR 299449
.           Recompiled for IBAPRINT 6 character printers
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.01  28.02.2002  Glenn Saunders   srf 15126
.           Re-compile for changes in DEBDKIKY
.-------------------------------------------------------
. VF.01.02  30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
. VF.01.01  12.10.2000 Sandra Barcham
.           Removed IBABATFD & IBABATIO as not required
.-------------------------------------------------------
. VF.00.01  02.11.1999 Sandra Barcham
.           Changed locked message to use X
.-------------------------------------------------------
CASHTOT   FORM      12.2
CARDTOT   FORM      12.2
CHEQTOT   FORM      12.2
CRLINE    FORM      3
DBFHDTOT  FORM      12.2   8        31    Total Inc Tax
DBFHFTOT  DIM       14                    Formatted Total
ENDADD    FORM      1
F12P2     FORM      12.2
FMTCHEQ   DIM       14
FMTCASH   DIM       14
FMTCARD   DIM       14
GRANDTOT  DIM       14
INVDAT    DIM       8
INVREF    DIM       12
INVTOT    FORM      12.2
NOTELINE  FORM      3
OTHDAT    DIM       8
PAYTYPE   FORM      1
TOTTAX    FORM      12.2
TOTQTY    FORM      12.2
TOTTOT    FORM      12.2
TRANLINE  FORM      3
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBADEB27
.   Function      :   Cash Receipt Processing                 
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       DEBCODFD/INC
          INC       DEBCONFD/INC
          INC       DEBCREFD/INC
          INC       DEBDBTFD/INC
          INC       DEBDKIFD/INC
          INC       DEBFDTFD/INC
          INC       DEBFNOFD/INC
          INC       DEBFTHFD/INC
          INC       DEBICMFD/INC
          INC       DEBINVDF    
          INC       DEBITMFD/INC
          INC       DEBLINFD/INC
          INC       DEBPTYFD/INC
          INC       DEBSECFD/INC
          INC       DEBTCRFD/INC
          INC       DEBTDCFD/INC
          INC       DEBTERFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       IBAPRNFD/INC
.=========================
.Local Variable Definition
.-------------------------
TOTALINV  FORM     12.2 * Scr 01 Fld    19
DBDBUC1D  DIM      35 * Scr 01 Fld    32
DBDBUC2D  DIM      35 * Scr 01 Fld    33
DBDBUC3D  DIM      35 * Scr 01 Fld    34
DBDBUC4D  DIM      35 * Scr 01 Fld    35
DBDBWRND  DIM      35 * Scr 01 Fld    36
DBCRUC1D  DIM      35 * Scr 01 Fld    60
DBCRUC2D  DIM      35 * Scr 01 Fld    61
PAYTDESC  DIM      15 * Scr 01 Fld    62
TOTALALL  FORM     12.2 * Scr 02 Fld    19
TOTALOUT  FORM     12.2 * Scr 02 Fld    21
.
.    Multi Item Key Fields Scr 02 Fld    31
.-------------------------------------------------------
DBTC1NAM  INIT      "DBTC1"
DBTC1END  FORM      1   * End Display
DBTC1SNO  FORM      5   * Number of Items on the Screen
DBTC1MKY  DIM       127 * Match Key 
DBTC1EKY  DIM       127 * End Key
DBTC1SKY  DIM       127 * Start Key
DBTC1IDX  INIT      " 132 UC1-5"
DBTC1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
DBTC1FNM  DIM       8  * Filename
DBTC1CNT  FORM      3  * Number of Items on Screen
TOTALAMT  FORM     12.2 * Scr 02 Fld    40
DBTCUC1D  DIM      35 * Scr 03 Fld    32
DBTCUC2D  DIM      35 * Scr 03 Fld    33
DBTCUC3D  DIM      35 * Scr 03 Fld    34
DBTCUC4D  DIM      35 * Scr 03 Fld    35
.
.Word Processor File * Scr 03 Fld    37
.
NAMDBTD1  INIT      "Wdbtd1"
FILDBTD1  DIM       8
.
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBADEB27"
PRGNAM    INIT      "Cash Receipt Processing                 "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CLOSE     DBTC1FL1,DELETE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBTD1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA1,"debcodaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA2,"debcodaf"
          DISPLAY   *P56:24,"Opening debcreaf";
          OPEN      DEBCREA1,"debcreaf"
          DISPLAY   *P56:24,"Opening debcreaf";
          OPEN      DEBCREA2,"debcreaf"
          DISPLAY   *P56:24,"Opening debcreaf";
          OPEN      DEBCREA3,"debcreaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA1,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA2,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA3,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA1,"debdkiaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA2,"debdkiaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA1,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA2,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA3,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA4,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA5,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA7,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA8,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfnoaf";
          OPEN      DEBFNOA1,"debfnoaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA1,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA2,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA3,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA4,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA5,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA6,"debfthaf"
          DISPLAY   *P56:24,"Opening debfthaf";
          OPEN      DEBFTHA7,"debfthaf"
          DISPLAY   *P56:24,"Opening debicmaf";
          OPEN      DEBICMA1,"debicmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA1,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA2,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA3,"debitmaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA1,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA2,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA3,"debptyaf"
          DISPLAY   *P56:24,"Opening debsecaf";
          OPEN      DEBSECA1,"debsecaf"
          DISPLAY   *P56:24,"Opening debsecaf";
          OPEN      DEBSECA2,"debsecaf"
          DISPLAY   *P56:24,"Opening debtcraf";
          OPEN      DEBTCRA1,"debtcraf"
          DISPLAY   *P56:24,"Opening debtdcaf";
          OPEN      DEBTDCA1,"debtdcaf"
          DISPLAY   *P56:24,"Opening debteraf";
          OPEN      DEBTERA1,"debteraf"
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
.--------------------------------------------------------
. Initialise Batch Screen Document Line                      
.--------------------------------------------------------
          MOVE     ZERO,DBTC1SNO
          MOVE     "02   31",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,DBTC1SNO
            ENDIF
          ENDIF
          PACK      DBTC1FNM,ANST,DBTC1NAM,PORT
          REP       " 0",DBTC1FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      DBTC1FL1,DBTC1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     DBTC1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,DBTC1FNM,DBTC1IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",DBTC1FNM;
          EXECUTE   KEY80,TASKID
          OPEN      DBTC1FL1,DBTC1FNM
.--------------------------------------------------------
. Initialise Wp Filename for Notes                              
.--------------------------------------------------------
          PACK      FILDBTD1,NAMDBTD1,PORT
          REP       " 0",FILDBTD1
          DISPLAY   *P56:24,"Create & Open ",FILDBTD1;
          PREP      TEMPWORD,FILDBTD1
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Menu                               
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Input Cash Rec.                    
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Receipt Allocation Header          
          ENDIF
          MATCH     "03",SCRID
          IF         @EQUAL
            CALL       PS03L000   * Item Details                       
          ENDIF
          RETURN
.--------------------------------
. Screen - Menu                               
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Menu                               
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Menu                               
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Menu                               
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Menu                               
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Menu                               
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Menu                               
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Menu                               
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      BDEP0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL      PJRN0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Input Cash Rec.                    
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
          CALL      SETHED00
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Input Cash Rec.                    
.-------------------------------------------------------
CF01L000
          MOVE      SP70,DBCRDEB 
          MOVE      SP70,NADLINE1
          MOVE      SP70,NADLINE2
          MOVE      SP70,NADLINE3
          MOVE      SP70,NADLINE4
          MOVE      SP70,NADLINE5
          MOVE      SP70,DBDBPH1 
          MOVE      SP70,DBDBPH2 
          MOVE      SP70,DBDBPH3 
          MOVE      SP70,DBDBCON 
          MOVE      ZERO,DBDBACT 
          MOVE      ZERO,DBDBSTA 
          MOVE      ZERO,DBDBTEX 
          MOVE      SP70,DBDBTER 
          MOVE      SP70,DBDBWRN 
          MOVE      ZERO,TOTALINV
          MOVE      SP70,DBDBPUR 
          MOVE      ZERO,DBDBBAD 
          MOVE      SP70,DBDBSORT
          MOVE      SP70,DBDBUR2 
          MOVE      SP70,DBDBUD1 
          MOVE      SP70,DBDBUD2 
          MOVE      SP70,DBDBUY1 
          MOVE      SP70,DBDBUY2 
          MOVE      SP70,DBDBUC1 
          MOVE      SP70,DBDBUC2 
          MOVE      SP70,DBDBUC3 
          MOVE      SP70,DBDBUC4 
          MOVE      SP70,DBDBUC1D
          MOVE      SP70,DBDBUC2D
          MOVE      SP70,DBDBUC3D
          MOVE      SP70,DBDBUC4D
          MOVE      SP70,DBDBWRND
          MOVE      SP70,DBTEDES 
          MOVE      SP70,DBCRREC 
          MOVE      SP70,DBCRTYP 
          MOVE      SP70,DBCRDRW 
          MOVE      SP70,DBCRCHQ 
          MOVE      SP70,DBCRBNK 
          MOVE      SP70,DBCRBRA 
          MOVE      ZERO,DBCRAMT 
          MOVE      SP70,DBCRDAT 
          MOVE      SP70,DBCRUSR 
          MOVE      SP70,DBCRIDT 
          MOVE      SP70,DBCRITM 
          MOVE      SP70,DBCRUR1 
          MOVE      SP70,DBCRUR2 
          MOVE      SP70,DBCRUD1 
          MOVE      SP70,DBCRUD2 
          MOVE      SP70,DBCRUY1 
          MOVE      SP70,DBCRUY2 
          MOVE      SP70,DBCRUC1 
          MOVE      SP70,DBCRUC2 
          MOVE      SP70,DBCRUC1D
          MOVE      SP70,DBCRUC2D
          MOVE      SP70,PAYTDESC
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Input Cash Rec.                    
.--------------------------------------------------------
KY01L000
.
KY01L110
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE2
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE3
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE4
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NADLINE5
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBDBPH3 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "1",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ONE,ACCEPT
          MOVE      DBCRDEB,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE1,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE2,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE3,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE4,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE5,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBDBPH3,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Input Cash Rec.                    
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Input Cash Rec.                    
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Input Cash Rec.                    
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Input Cash Rec.                    
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L101,PS01L102,PS01L103,PS01L104:
                            PS01L105,PS01L106,PS01L107,PS01L108:
                            PS01L109,PS01L110,PS01L111,PS01L112:
                            PS01L113,PS01L114,PS01L115,PS01L116:
                            PS01L117,PS01L118,PS01L119,PS01L120:
                            PS01L121,PS01L122,PS01L123,PS01L124:
                            PS01L125,PS01L126,PS01L127,PS01L128:
                            PS01L129,PS01L130,PS01L131,PS01L132:
                            PS01L133,PS01L999,PS01L999,PS01L999:
                            PS01L134,PS01L135,PS01L136,PS01L137:
                            PS01L138,PS01L139,PS01L140,PS01L141:
                            PS01L142,PS01L143,PS01L144,PS01L145:
                            PS01L146,PS01L147,PS01L148,PS01L149:
                            PS01L150,PS01L151,PS01L152,PS01L153:
                            PS01L154,PS01L155
          GOTO     PS01L999
.
PS01L101
          MOVE      NADLINE1,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      NADLINE2,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      NADLINE3,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      NADLINE4,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      NADLINE5,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBACT,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBSTA,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBTEX,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      DBDBTER,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      DBDBWRN,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      TOTALINV,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      DBDBPUR,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBBAD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      DBDBSORT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      DBDBUR2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L120
          UNPACK    DBDBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L121
          UNPACK    DBDBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L122
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L123
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L124
          MOVE      DBDBUC1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L125
          MOVE      DBDBUC2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L126
          MOVE      DBDBUC3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L127
          MOVE      DBDBUC4,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L128
          MOVE      DBDBUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L129
          MOVE      DBDBUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L130
          MOVE      DBDBUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L131
          MOVE      DBDBUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L132
          MOVE      DBDBWRND,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L133
          MOVE      DBTEDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L134
          MOVE      DBCRREC,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L135
          MOVE      DBCRTYP,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L136
          MOVE      DBCRDRW,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L137
          MOVE      DBCRCHQ,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L138
          MOVE      DBCRBNK,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L139
          MOVE      DBCRBRA,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L140
          MOVE      DBCRAMT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L141
          UNPACK    DBCRDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L142
          MOVE      DBCRUSR,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L143
          UNPACK    DBCRIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L144
          MOVE      DBCRITM,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L145
          MOVE      DBCRUR1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L146
          MOVE      DBCRUR2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L147
          UNPACK    DBCRUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L148
          UNPACK    DBCRUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L149
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBCRUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L150
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBCRUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L151
          MOVE      DBCRUC1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L152
          MOVE      DBCRUC2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L153
          MOVE      DBCRUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L154
          MOVE      DBCRUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L155
          MOVE      PAYTDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Input Cash Rec.                    
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L103,SF01L104,SF01L105:
                            SF01L106,SF01L107,SF01L108,SF01L109:
                            SF01L006,SF01L006,SF01L006,SF01L110:
                            SF01L111,SF01L112,SF01L113,SF01L114:
                            SF01L115,SF01L116,SF01L117,SF01L006:
                            SF01L006,SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L103,SF01L104,SF01L105:
                            SF01L106,SF01L107,SF01L108,SF01L109:
                            SF01L020,SF01L020,SF01L020,SF01L110:
                            SF01L111,SF01L112,SF01L113,SF01L114:
                            SF01L115,SF01L116,SF01L117,SF01L020:
                            SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          CALL      POST0000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L102
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L103
.
.
          MOVE      "   62",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PAYTDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPAYT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      DBCRTYP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   62",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PAYTDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDRAW000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      DBCRDRW,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECHEQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      DBCRCHQ,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EBANK000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      DBCRBNK,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EBRAN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      DBCRBRA,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L108
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,DBCRAMT 
          IF        SCPSMAN=1
            COMPARE   ZERO,DBCRAMT 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
          ENDIF
          MOVE      DBCRAMT,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L109
          CALL      DEFDATE1
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ERDAT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L109
            ENDIF
            BRANCH    EXIT,SF01L109,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          UNPACK    DBCRDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L110
          CALL     SELECTED
          STRIP     DBCRUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBCRUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBCRUR1 
          SFORMAT   VAR,127
          ENDSET    DBCRUR1 
          APPEND    SP70,DBCRUR1 
          RESET     DBCRUR1 
          CMATCH    EXITCHAR,DBCRUR1 
          GOTO      SF01L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBCRUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L110
            ENDIF
          ENDIF
          MOVE      DBCRUR1,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L111
          CALL     SELECTED
          STRIP     DBCRUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBCRUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBCRUR2 
          SFORMAT   VAR,127
          ENDSET    DBCRUR2 
          APPEND    SP70,DBCRUR2 
          RESET     DBCRUR2 
          CMATCH    EXITCHAR,DBCRUR2 
          GOTO      SF01L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBCRUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L111
            ENDIF
          ENDIF
          MOVE      DBCRUR2,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L112
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBCRUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBCRUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L113
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBCRUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBCRUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L114
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBCRUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBCRUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L115
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBCRUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBCRUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L116
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L116
            ENDIF
            BRANCH    EXIT,SF01L116,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      DBCRUC1,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L117
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L117
            ENDIF
            BRANCH    EXIT,SF01L117,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      DBCRUC2,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Receipt Allocation Header          
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Receipt Allocation Header          
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Receipt Allocation Header          
.--------------------------------------------------------
KY02L000
.
KY02L110
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOTALOUT
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      DISHED00
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EINVN000
          BRANCH    EXIT,KY02L900,KY02L900
          MOVE      ZERO,ACCEPT
          MOVE      DBFHDOC,VAR      
          CALL      DISPITEM
          CALL      MVACCEPT
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALOUT,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Receipt Allocation Header          
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Receipt Allocation Header          
.---------------------------------------------------------
LM02L000
.---------------------------------------------------------
. Load for :    31 Document Line                      
.---------------------------------------------------------
          UNPACK    SP70,DBTCDEB,DBTCDLN
          PACK      KEY11,DBFHDEB,SP70
          MOVE      KEY11,DBTC1EKY
          STRIP     DBTC1SKY
          SETLPTR   DBTC1EKY,8
          MOVE      DBTC1EKY,DBTC1SKY
          CALL      RDDBTC1 
          IF        OVRCD=0
            CALL      RPDBTC1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP02L000
          MOVE     ZERO,DBTC1CNT
          MOVE     ZERO,DBTC1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP02L600
          MATCH    PRGID,SCPSPID
          GOTO     DP02L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP02L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP02L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                           DP02L010,DP02L010,DP02L010,DP02L010:
                           DP02L010,DP02L010,DP02L101,DP02L102:
                            DP02L103,DP02L104,DP02L105,DP02L106:
                            DP02L107,DP02L108,DP02L109,DP02L110:
                            DP02L111,DP02L010,DP02L010,DP02L010:
                           DP02L010,DP02L010,DP02L010,DP02L010:
                           DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010
          GOTO      DP02L010
.
DP02L101
          PACK      DBTC1MKY,SP70,SP70
          CALL      UPTDBTC1
          IF        DBTC1END=0
            CALL      RKDBTC1 
            IF        OVRCD=0
              PACK      DBTC1MKY,DBTCDEB,DBTCDLN                                                                
              MATCH     DBTC1EKY,DBTC1MKY
              IF        @EQUAL
                MOVE      ZERO,DBTC1END
                ADD       ONE,DBTC1CNT
                CALL      UPTDBTC1
          CALL      REDDET00
                MOVE      DBTCDLN,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,DBTC1END
              ENDIF
            ELSE
              MOVE      ONE,DBTC1END
            ENDIF
          ENDIF
          IF        DBTC1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L102
          IF        DBTC1END=0
            MOVE      DBTCITM,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L103
          IF        DBTC1END=0
            UNPACK    DBTCSDAT,CCENT,CYEAR,CMON,CDAY          
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L104
          IF        DBTC1END=0
            MOVE      DBTCDREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L105
          IF        DBTC1END=0
            MOVE      DBTCOREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L106
          IF        DBTC1END=0
            MOVE      DBTCQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L107
          IF        DBTC1END=0
            MOVE      DBTCPRI,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L108
          IF        DBTC1END=0
            MOVE      DBTCTOT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L109
          IF        DBTC1END=0
            MOVE      DBTCTAX,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L110
          IF        DBTC1END=0
            MOVE      TOTALAMT,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L111
          IF        DBTC1END=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
DP02L600
          MATCH    "DBTC1",NAMSSFFI
          GOTO     DP02L605 IF NOT EQUAL
          GOTO     DP02L999
DP02L605
DP02L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP02L000
.
          MATCH    "DBTC1",NAMSSFFI
          GOTO     FP02L105 IF NOT EQUAL
          PACK     KEY11,DBTC1SKY,SP70
          CALL     RDDBTC1  * Start
          IF       OVRCD=0
            CALL     RPDBTC1  * Start
          ENDIF
          CALL     DP02L000
          GOTO     FP02L999
FP02L105
FP02L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP02L000
.
          MATCH    "DBTC1",NAMSSFFI
          GOTO     LP02L105 IF NOT EQUAL
          PACK     KEY11,DBTC1SKY,Z70
          CALL     RSDBTC1  * End
          IF       OVRCD=1
            CALL     RPDBTC1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBTC1SNO
            CALL     RPDBTC1 
            IF       OVRCD=1
              MOVE     DBTC1SNO,SECTOR
            ENDIF
            PACK     DBTC1MKY,DBTCDEB,DBTCDLN                                                                
            MATCH    DBTC1EKY,DBTC1MKY
            IF       !@EQUAL
              MOVE     DBTC1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP02L000
          GOTO     LP02L999
LP02L105
LP02L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP02L000
.
          MATCH    "DBTC1",NAMSSFFI
          GOTO     PP02L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP02L105
          CALL      RFTDBTC1
          BRANCH   OVRCD,PP02L115
          MOVE      DBTC1MKY,KEY11 
          CALL      RSDBTC1 
PP02L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=DBTC1SNO
            CALL     RPDBTC1 
            IF       OVRCD=1
              MOVE     DBTC1SNO,SECTOR
            ENDIF
            PACK     DBTC1MKY,DBTCDEB,DBTCDLN                                                                
            MATCH    DBTC1EKY,DBTC1MKY
            IF       !@EQUAL
              MOVE     DBTC1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP02L000
          GOTO     PP02L999
PP02L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBTC1SNO
            CALL     RKDBTC1 
            IF       OVRCD=1
              MOVE     DBTC1SNO,SECTOR
            ENDIF
            PACK     DBTC1MKY,DBTCDEB,DBTCDLN                                                                
            MATCH    DBTC1EKY,DBTC1MKY
            IF       !@EQUAL
              MOVE     DBTC1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP02L999
PP02L120
PP02L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP02L000
          MATCH    "DBTC1",NAMSSFFI
          GOTO     NP02L115 IF NOT EQUAL
NP02L105
          CALL     RKDBTC1 
          BRANCH   OVRCD,NP02L110
          PACK     DBTC1MKY,DBTCDEB,DBTCDLN                                                                
          MATCH    DBTC1EKY,DBTC1MKY
          GOTO     NP02L110 IF NOT EQUAL
          CALL     RPDBTC1 
          CALL     DP02L000
          GOTO     NP02L999
NP02L110
          CALL     RPDBTC1 
          BEEP
          GOTO     NP02L999
NP02L115
NP02L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT02L000
CT02L105
CT02L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Receipt Allocation Header          
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    31 Document Line                      
.---------------------------------------------------------
UPTDBTC1
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      DBTC1FL1,KEY5;ANS
          IF        @OVER
            WRITE     DBTC1FL1,KEY5;SCPSROW,SCPSCOL,DBTC1MKY
          ELSE
            UPDATE    DBTC1FL1;SCPSROW,SCPSCOL,DBTC1MKY
          ENDIF
          RETURN
RDTDBTC1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      DBTC1FL1,KEY5;SCPSROW,SCPSCOL,DBTC1MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTDBTC1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      DBTC1FL1,KEY5;;
          READKS    DBTC1FL1;SCPSROW,SCPSCOL,DBTC1MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,DBTC1MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Receipt Allocation Header          
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
          MOVE      "DBTC1",NAMSSFFI
          MOVE      "   31",ITMSSFFI
          CALL      FP02L000
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Receipt Allocation Header          
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L103,PS02L104,PS02L105:
                            PS02L106,PS02L107,PS02L108,PS02L109:
                            PS02L110,PS02L111,PS02L112,PS02L113:
                            PS02L114,PS02L115,PS02L116,PS02L999:
                            PS02L117,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999
          GOTO     PS02L999
.
PS02L101
          MOVE      DBCRDEB,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      NADLINE1,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      NADLINE2,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      NADLINE3,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      NADLINE4,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      NADLINE5,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      DBCRREC,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      DBCRTYP,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      DBCRDRW,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          MOVE      DBCRCHQ,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      DBCRBNK,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          MOVE      DBCRBRA,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          MOVE      DBCRAMT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          UNPACK    DBCRDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          MOVE      PAYTDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L116
          MOVE      TOTALALL,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L117
          MOVE      TOTALOUT,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Receipt Allocation Header          
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L006,SF02L103,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L104,SF02L105,SF02L106:
                            SF02L107,SF02L108
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L103,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          MOVE      "DBTC1",NAMSSFFI
          MOVE      "   31",ITMSSFFI
          CALL      FP02L000
          GOTO     SF02L001
.
SF02L101
          MOVE      ONE,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      STRAN000
          MOVE      ONE,EXIT
          GOTO      SF02L999
.
SF02L103
          CALL      SELECTED
          BRANCH    EXIT,SF02L001
          COMPARE   ONE,ACCEPT
          GOTO      SF02L001 IF EQUAL
          CALL      RDTDBTC1
          IF        OVRCD=1
            BEEP
            GOTO      SF02L001
          ENDIF
          MATCH     SP70,DBTC1MKY
          IF        @EQUAL
            BEEP
            GOTO      SF02L001
          ENDIF
          MOVE      DBTC1MKY,KEY11 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SELT0000
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTDBTC1
          IF        OVRCD=1
            CALL      FP02L000
          ELSE
            MOVE      DBTC1MKY,KEY11 
            CALL      RSDBTC1 
            CALL      RPDBTC1 
            CALL      DP02L000
          ENDIF
          GOTO     SF02L001
.
SF02L104
          MOVE      "DBTC1",NAMSSFFI
          MOVE      "   31",ITMSSFFI
          CALL      NP02L000
          GOTO     SF02L001
.
SF02L105
          MOVE      "DBTC1",NAMSSFFI
          MOVE      "   31",ITMSSFFI
          CALL      PP02L000
          GOTO     SF02L001
.
SF02L106
          MOVE      "DBTC1",NAMSSFFI
          MOVE      "   31",ITMSSFFI
          CALL      FP02L000
          GOTO     SF02L001
.
SF02L107
          MOVE      "DBTC1",NAMSSFFI
          MOVE      "   31",ITMSSFFI
          CALL      LP02L000
          GOTO     SF02L001
.
SF02L108
          CALL      RTOT0000
          GOTO      SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.--------------------------------
. Screen - Item Details                       
.--------------------------------
SC03L000
SC03L100
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 6",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC03L200
          CALL      CF03L000 * Clear Fields
SC03L300
          CALL      KY03L000 * Enter Key Fields
          BRANCH    EXIT,SC03L999,SC03L999
SC03L400
          CALL      WP03L000 * Load any WP Details
SC03L500
          CALL      LM03L000 * Load any Batch Details
SC03L600
          CALL      DF03L000 * Display Fields
SC03L700
          CALL      SF03L000 * Select Fields
          BRANCH    EXIT,SC03L100,SC03L100,SC03L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC03L800
SC03L900
SC03L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Item Details                       
.-------------------------------------------------------
CF03L000
CF03L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Item Details                       
.--------------------------------------------------------
KY03L000
          MOVE      ZERO,EXIT
          GOTO      KY03L999
.
KY03L900  MOVE      ONE,EXIT
KY03L999  RETURN
.---------------------------------------------------------
. Load WP files for : Item Details                       
.---------------------------------------------------------
WP03L000
          PREP     TEMPWORD,FILDBTD1
          PACK     KEY14,DBTCDEB,DBTCDLN,SP70
          MOVE     KEY14,SAVKEY80
          SETLPTR  SAVKEY80,11
          CALL      RDDBTD1 
          IF        OVRCD=0
            CALL      RPDBTD1 
          ENDIF
WP03L100
          CALL     RKDBTD1 
          BRANCH   OVRCD,WP03L105
          PACK     KEY14,DBTDDEB,DBTDDLN,DBTDLIN
          MATCH    SAVKEY80,KEY14   
          GOTO     WP03L105 IF NOT EQUAL
          PACK     VAR,DBTDCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBTDCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP03L100
WP03L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Item Details                       
.---------------------------------------------------------
LM03L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Item Details                       
.---------------------------------------------------------
DF03L000
          BRANCH   ACCEPT,DF03L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF03L900
          MATCH    PRGID,SCPSPID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF03L010 IF NOT EQUAL
.
          CALL     PS03L000 * Display Field
          GOTO     DF03L010
DF03L900
DF03L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Item Details                       
.---------------------------------------------------------
PS03L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L101,PS03L999,PS03L999:
                           PS03L999,PS03L102,PS03L103,PS03L104:
                            PS03L105,PS03L106,PS03L107,PS03L108:
                            PS03L109,PS03L110,PS03L111,PS03L112:
                            PS03L113,PS03L114,PS03L115,PS03L116:
                            PS03L117,PS03L118,PS03L119,PS03L120:
                            PS03L121,PS03L122,PS03L123,PS03L124:
                            PS03L125,PS03L126,PS03L127,PS03L128:
                            PS03L129
          GOTO     PS03L999
.
PS03L101
          MOVE      DBTCDLN,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L102
          MOVE      DBTCITM,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L103
          UNPACK    DBTCSDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L104
          MOVE      DBTCDREF,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L105
          MOVE      DBTCOREF,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L106
          MOVE      DBTCQTY,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L107
          MOVE      DBTCPRI,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L108
          MOVE      DBTCTOT,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L109
          MOVE      DBTCTRT,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L110
          MOVE      DBTCTAX,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L111
          MOVE      DBTCUR1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L112
          MOVE      DBTCUR2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L113
          UNPACK    DBTCUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L114
          UNPACK    DBTCUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L115
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBTCUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L116
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBTCUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L117
          MOVE      DBTCUC1,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L118
          MOVE      DBTCUC2,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L119
          MOVE      DBTCUC3,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L120
          MOVE      DBTCUC4,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L121
          MOVE      DBITDES,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L122
          MOVE      DBITIDE,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L123
          MOVE      DBITPRI,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L124
          MOVE      DBTCUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L125
          MOVE      DBTCUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L126
          MOVE      DBTCUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L127
          MOVE      DBTCUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L128
          MOVE      TOTALAMT,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L129
          MOVE     FILDBTD1,WORDNAME
          CALL     DISPWORD
          GOTO     PS03L999
PS03L999
          RETURN
.---------------------------------------------------------
. Selections for : Item Details                       
.---------------------------------------------------------
SF03L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF03L001  BRANCH   ACCEPT,SF03L020
.
SF03L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L006,SF03L101,SF03L102,SF03L103:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                           SF03L006,SF03L104,SF03L105,SF03L106:
                            SF03L107,SF03L108,SF03L109,SF03L110:
                            SF03L111,SF03L112,SF03L113,SF03L114:
                            SF03L115,SF03L116,SF03L117,SF03L118:
                            SF03L119,SF03L120,SF03L121,SF03L122:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L123
SF03L006  BEEP
          GOTO     SF03L005
SF03L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF03L090
          MATCH    PRGID,SCSLPID
          GOTO     SF03L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF03L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                           SF03L020,SF03L104,SF03L105,SF03L106:
                            SF03L107,SF03L108,SF03L109,SF03L110:
                            SF03L111,SF03L112,SF03L113,SF03L114:
                            SF03L115,SF03L116,SF03L117,SF03L118:
                            SF03L119,SF03L120,SF03L121,SF03L122:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L123
          GOTO     SF03L020
SF03L090  MOVE     ZERO,ACCEPT
          GOTO     SF03L001
.
SF03L101
          CALL      CANA0000
          MOVE      ZERO,EXIT
          GOTO      SF03L999
.
SF03L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      POSA0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF03L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF03L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF03L999
          ENDIF
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF03L000
          ENDIF
          GOTO      SF03L001
.
SF03L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELA0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF03L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF03L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF03L999
          ENDIF
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF03L000
          ENDIF
          GOTO      SF03L001
.
SF03L104
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITIDE 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITPRI 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESALI000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L104
            ENDIF
            BRANCH    EXIT,SF03L104,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      DBTCITM,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITIDE,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITPRI,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF03L001
.
SF03L105
          CALL      DATECURR
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBTCSDAT,CCENT,CYEAR,CMON,CDAY          
          UNPACK    DBTCSDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L106
          CALL     SELECTED
          STRIP     DBTCDREF
          SFORMAT   VAR,SCPSLEN
          MOVE      DBTCDREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBTCDREF
          SFORMAT   VAR,127
          ENDSET    DBTCDREF
          APPEND    SP70,DBTCDREF
          RESET     DBTCDREF
          CMATCH    EXITCHAR,DBTCDREF
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBTCDREF
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L106
            ENDIF
          ENDIF
          MOVE      DBTCDREF,VAR     
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L107
          CALL     SELECTED
          STRIP     DBTCOREF
          SFORMAT   VAR,SCPSLEN
          MOVE      DBTCOREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBTCOREF
          SFORMAT   VAR,127
          ENDSET    DBTCOREF
          APPEND    SP70,DBTCOREF
          RESET     DBTCOREF
          CMATCH    EXITCHAR,DBTCOREF
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBTCOREF
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L107
            ENDIF
          ENDIF
          MOVE      DBTCOREF,VAR     
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EQUTY000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L108
            ENDIF
            BRANCH    EXIT,SF03L108,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      DBTCQTY,VAR      
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPRIC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L109
            ENDIF
            BRANCH    EXIT,SF03L109,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      DBTCPRI,VAR      
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L110
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETOTL000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L110
            ENDIF
            BRANCH    EXIT,SF03L110,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      DBTCTOT,VAR      
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L111
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,DBTCTRT 
          IF        SCPSMAN=1
            COMPARE   ZERO,DBTCTRT 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L111
            ENDIF
          ENDIF
          MOVE      DBTCTRT,VAR      
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L112
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETAXA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L112
            ENDIF
            BRANCH    EXIT,SF03L112,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      DBTCTAX,VAR      
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L113
          CALL     SELECTED
          STRIP     DBTCUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBTCUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBTCUR1 
          SFORMAT   VAR,127
          ENDSET    DBTCUR1 
          APPEND    SP70,DBTCUR1 
          RESET     DBTCUR1 
          CMATCH    EXITCHAR,DBTCUR1 
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBTCUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L113
            ENDIF
          ENDIF
          MOVE      DBTCUR1,VAR      
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L114
          CALL     SELECTED
          STRIP     DBTCUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBTCUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBTCUR2 
          SFORMAT   VAR,127
          ENDSET    DBTCUR2 
          APPEND    SP70,DBTCUR2 
          RESET     DBTCUR2 
          CMATCH    EXITCHAR,DBTCUR2 
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBTCUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L114
            ENDIF
          ENDIF
          MOVE      DBTCUR2,VAR      
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L115
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBTCUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBTCUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L116
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBTCUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBTCUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L117
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBTCUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBTCUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L118
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBTCUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBTCUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L119
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBTCUC1D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          STRIP     DBTCUC1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBTCUC1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBTCUC1 
          SFORMAT   VAR,127
          ENDSET    DBTCUC1 
          APPEND    SP70,DBTCUC1 
          RESET     DBTCUC1 
          CMATCH    EXITCHAR,DBTCUC1 
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBTCUC1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L119
            ENDIF
          ENDIF
          MOVE      DBTCUC1,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTCUC1D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF03L001
.
SF03L120
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBTCUC2D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          STRIP     DBTCUC2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBTCUC2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBTCUC2 
          SFORMAT   VAR,127
          ENDSET    DBTCUC2 
          APPEND    SP70,DBTCUC2 
          RESET     DBTCUC2 
          CMATCH    EXITCHAR,DBTCUC2 
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBTCUC2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L120
            ENDIF
          ENDIF
          MOVE      DBTCUC2,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTCUC2D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF03L001
.
SF03L121
.
.
          MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBTCUC3D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          STRIP     DBTCUC3 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBTCUC3,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBTCUC3 
          SFORMAT   VAR,127
          ENDSET    DBTCUC3 
          APPEND    SP70,DBTCUC3 
          RESET     DBTCUC3 
          CMATCH    EXITCHAR,DBTCUC3 
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBTCUC3 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L121
            ENDIF
          ENDIF
          MOVE      DBTCUC3,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTCUC3D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF03L001
.
SF03L122
.
.
          MOVE      "   35",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBTCUC4D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          STRIP     DBTCUC4 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBTCUC4,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBTCUC4 
          SFORMAT   VAR,127
          ENDSET    DBTCUC4 
          APPEND    SP70,DBTCUC4 
          RESET     DBTCUC4 
          CMATCH    EXITCHAR,DBTCUC4 
          GOTO      SF03L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBTCUC4 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L122
            ENDIF
          ENDIF
          MOVE      DBTCUC4,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   35",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTCUC4D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF03L001
.
SF03L123
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "10",SCPSROW
              MOVE     " 10",SCPSCOL
              MOVE     " 50",SCPSLEN
              MOVE     "10",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILDBTD1,WORDNAME
              MOVE     "  8",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILDBTD1,WORDNAME
            MOVE     "  8",WORDTYPE
            CALL     EDITWORD
          ENDIF
          GOTO     SF03L001
SF03L990  MOVE      FOUR,EXIT * Exit Char Exit
SF03L999  RETURN
.@@@@@ Function Restart Point @@@@@
.-------------------------------------------------------------
. Print Bank Deposit List
.-------------------------------------------------------------
BDEP0000   DISPLAY   *P1:24,*EL,"Printing ..."
           MOVE      ZERO,CPAGENO
           CLOCK     TIME,CTIMEIS
           MOVE      "99",CLNO
           MOVE      ZERO,CASHTOT
           MOVE      ZERO,CHEQTOT
           MOVE      ZERO,CARDTOT
           PACK      KEY11,ZERO,SP70  * Read Through file using Reset Indicator
           CALL      RDDBCR2
           IF        OVRCD=0
             CALL      RPDBCR2
           ENDIF
BDEP1000   CALL      RKDBCR2
           BRANCH    OVRCD,BDEP9000
           MATCH     "0",DBCRRST      * Reset Indicator=0  Reset for Bank Dep.
           GOTO      BDEP9000 IF NOT EQUAL
.
           MOVE      DBCRTYP,F1
           BRANCH    F1,BDEP1100,BDEP1200,BDEP1300
. Cash
BDEP1100   ADD       DBCRAMT,CASHTOT
           GOTO      BDEP1000
. Cheque
BDEP1200   ADD       DBCRAMT,CHEQTOT
           CALL      PLINE000
           GOTO      BDEP1000
. Credit Card
BDEP1300   ADD       DBCRAMT,CARDTOT
           GOTO      BDEP1000
.
BDEP9000   MOVE      "999,999,999.99",FMTCHEQ
           MOVE      "999,999,999.99",FMTCASH
           MOVE      "999,999,999.99",FMTCARD
           MOVE      "999,999,999.99",GRANDTOT
           FEDIT     CASHTOT,FMTCASH
           FEDIT     CHEQTOT,FMTCHEQ
           FEDIT     CARDTOT,FMTCARD
           ASSIGN    CASHTOT+CHEQTOT+CARDTOT,F12P2
           FEDIT     F12P2,GRANDTOT
           COMPARE   "55",CLNO
           CALL      PHEAD000 IF NOT LESS
           CALL      UND132
           PRINT     *90,"Total of Cheques Deposited : ",FMTCHEQ
           PRINT     " "
           PRINT     *90,"Total of Cash Deposited    : ",FMTCASH
           PRINT     *90,"Total of Credit Cards      : ",FMTCARD
           PRINT     " "
           PRINT     *90,"Grand Total                : ",GRANDTOT
           CALL      UND132
           PRINT     *50,"***** End of Report *****"
.
BDEP9999   RETURN
.
PLINE000   COMPARE   "55",CLNO
           CALL      PHEAD000 IF NOT LESS
           MOVE      DBCRDEB,KEY8
           CALL      RDDBDB1
           MOVE      DBDBNA1,KEY25
           MOVE      "999,999,999.99",FMTCHEQ
           FEDIT     DBCRAMT,FMTCHEQ
           ADD       ONE,CLNO
           PRINT     DBCRDEB,SP1,KEY25,SP1,DBCRREC,SP1,DBCRCHQ,SP1,DBCRDRW:
                     SP1,DBCRBNK,SP1,DBCRBRA,FMTCHEQ
           RETURN
.
PHEAD000   CALL      HEAD132
           DISPLAY   *P20:24,*V2LON,CPAGENO
           PRINT     *50,"Bank Deposit Listing"
           CALL      UND132
           PRINT     "Debtor                             Receipt    ":
                     "Cheque   Drawer                         Bank  ":
                     " Branch                           Amount"
           CALL      UND132
           MOVE      "6",CLNO
           RETURN
.-------------------------------------------------------------
. Print Cash Journal
.-------------------------------------------------------------
PJRN0000   DISPLAY   *P1:24,*EL,"Printing ..."
           MOVE      ZERO,CPAGENO
           CLOCK     TIME,CTIMEIS
           MOVE      "99",CLNO
           MOVE      ZERO,CASHTOT
           MOVE      ZERO,CHEQTOT
           MOVE      ZERO,CARDTOT
           PACK      KEY11,ZERO,SP70  * Read Through file using Reset Indicator
           CALL      RDDBCR2
           IF        OVRCD=0
             CALL      RPDBCR2
           ENDIF
PJRN1000   CALL      RKDBCR2
           BRANCH    OVRCD,PJRN9000
           MATCH     "0",DBCRRST      * Reset Indicator=0  Reset for Bank Dep.
           GOTO      PJRN9000 IF NOT EQUAL
.
           MOVE      DBCRTYP,F1
           BRANCH    F1,PJRN1100,PJRN1200,PJRN1300
. Cash
PJRN1100   ADD       DBCRAMT,CASHTOT
           MOVE      "CASH",KEY40
           CALL      PDET0000
           GOTO      PJRN1000
. Cheque
PJRN1200   ADD       DBCRAMT,CHEQTOT
           PACK      KEY40,DBCRBNK,SP1,DBCRBRA,SP1,DBCRCHQ
           CALL      PDET0000
           GOTO      PJRN1000
. Credit Card
PJRN1300   ADD       DBCRAMT,CARDTOT
           MOVE      "CREDIT CARD",KEY40
           CALL      PDET0000
           GOTO      PJRN1000
.
PJRN9000   MOVE      "999,999,999.99",FMTCHEQ
           MOVE      "999,999,999.99",FMTCASH
           MOVE      "999,999,999.99",FMTCARD
           MOVE      "999,999,999.99",GRANDTOT
           FEDIT     CASHTOT,FMTCASH
           FEDIT     CHEQTOT,FMTCHEQ
           FEDIT     CARDTOT,FMTCARD
           ASSIGN    CASHTOT+CHEQTOT+CARDTOT,F12P2
           FEDIT     F12P2,GRANDTOT
           CALL      UND132
           PRINT     *90,"Grand Total                : ",GRANDTOT
           PRINT     " "
           PRINT     *90,"Total of Cheques           : ",FMTCHEQ
           PRINT     *90,"Total of Cash              : ",FMTCASH
           PRINT     *90,"Total of Credit Cards      : ",FMTCARD
           CALL      UND132
           PRINT     *50,"***** End of Report *****"
PJRN9100   KEYIN     *P1:24,*EL,"Reset Cash Journal (":
                     *V2LON,"Y",*HOFF,"/":
                     *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
           REP       UPPLOW,ANS
           MATCH     ANSN,ANS
           GOTO      PJRN9999 IF EQUAL
           MATCH     ANSY,ANS
           GOTO      PJRN9100 IF NOT EQUAL
.
           CALL      RESET000
.
PJRN9999   RETURN
.
PDET0000   COMPARE   "55",CLNO
           CALL      JHEAD000 IF NOT LESS
           MOVE      DBCRDEB,KEY8
           CALL      RDDBDB1
           MOVE      DBDBNA1,KEY30
           MOVE      "999,999,999.99",FMTCHEQ
           FEDIT     DBCRAMT,FMTCHEQ
           ADD       ONE,CLNO
           PRINT     DBCRDEB,SP1,KEY30,SP1,KEY40,SP1:
                     DBCRREC,FMTCHEQ;
           MOVE      SP70,INVREF
           PACK      KEY24,DBCRDEB,THREE,DBCRREC,SP70
           CALL      RSDBFD1
PDET1000   CALL      RKDBFD1
           BRANCH    OVRCD,PDET9000
           PACK      KEY21,DBCRDEB,THREE,DBCRREC,SP70
           PACK      KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN
           MATCH     KEY21,KEY24
           GOTO      PDET9000 IF NOT EQUAL
           MATCH     DBFDINV,INVREF
           IF        @EQUAL
             ASSIGN    INVTOT+DBFDTOT+DBFDTAX,INVTOT
             GOTO      PDET1000
           ENDIF
           MATCH     SP70,INVREF
           IF        !@EQUAL
             MOVE      "999,999,999.99",FMTCHEQ
             FEDIT     INVTOT,FMTCHEQ
             PRINT     *108,INVREF,SP1,FMTCHEQ
           ENDIF
           MOVE      DBFDINV,INVREF
           ASSIGN    DBFDTOT+DBFDTAX,INVTOT
           GOTO      PDET1000
PDET9000   MOVE      "999,999,999.99",FMTCHEQ
           FEDIT     INVTOT,FMTCHEQ
           PRINT     *108,INVREF,SP1,FMTCHEQ
           RETURN
.
JHEAD000   CALL      HEAD132
           DISPLAY   *P20:24,*V2LON,CPAGENO
           PRINT     *50,"Cash Journal List"
           CALL      UND132
           PRINT     "Debtor                                  Bank   ":
                     "Branch                    Cheque  Receipt       ":
                     "    Amount  Invoice            Amount"
           CALL      UND132
           MOVE      "6",CLNO
           RETURN
.
RESET000   PACK      KEY11,ZERO,SP70  * Read Through file using Reset Indicator
           CALL      RSDBCR2
           CALL      RKDBCR2
           BRANCH    OVRCD,RESET900
           MATCH     "0",DBCRRST      * Reset Indicator=0  Reset for Bank Dep.
           GOTO      RESET900 IF NOT EQUAL
           MOVE      "1",DBCRRST      * Reset Indicator=0  Reset for Bank Dep.
           PACK      DBCRDDT,CCC,CYY,CMM,CDD  * Creation Date
           REP       " 0",DBCRDDT
           CLOCK     TIME,CTIMEIS
           UNPACK    CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
           PACK      DBCRDTM,CHOUR,CMIN,KEY2
           CALL      UPDBCR2
           GOTO      RESET000
.
RESET900   BEEP
           MOVE      "Reset Complete - ",DISPMSG
           CALL      MESSAGE1
.
RESET999   RETURN

.------------------------------------------------------------
. Setup Details for Receipt Header
.------------------------------------------------------------
SETHED00
          MOVE      ONE,ACCEPT
SETHED99  RETURN
DEFDATE1  MOVE     CCC,CCENT
          MOVE     CYY,CYEAR
          MOVE     CMM,CMON
          MOVE     CDD,CDAY
          REP      " 0",CCENT
          REP      " 0",CYEAR
          REP      " 0",CMON
          REP      " 0",CDAY
          RETURN
.-------------------------------------------------------------
. Post Rec Heading
.-------------------------------------------------------------
POST0000  CALL      WRFTH000
          MOVE      ZERO,TOTALALL
          MOVE      ZERO,ACCEPT
          CALL      SC02L000
.
POST9999  RETURN
.------------------------------------------------------------
. Write Document Header
.------------------------------------------------------------
WRFTH000  READ       CONTROLF,EIGHTY7;*50,CFDBREC
          ADD        ONE,CFDBREC               * Next Rec Number
          WRITAB     CONTROLF,EIGHTY7;*50,CFDBREC
.
          MOVE       DBDBDEB,DBFHDEB             * Doc. Type 3=Cash Rec
          MOVE       THREE,DBFHDTY             * Doc. Type 3=Cash Rec
          MOVE       CFDBREC,DBFHDOC           * Document Reference
          REP        " 0",DBFHDOC
          MOVE       DBCRDAT,DBFHDDAT          * Document Date
          REP        " 0",DBFHDDAT             * Document Date
          MOVE       SP70,DBFHTER              * Terms Not Applicable to CR
          PACK       DBFHDPRT,CCC,CYY,CMM,CDD  * Date Printed
          PACK       DBFHDSTA,SP70             * Statement Date
          PACK       DBFHCDAT,CCC,CYY,CMM,CDD  * Creation Date
          REP        " 0",DBFHDPRT
          REP        " 0",DBFHCDAT
          MOVE       ZERO,DBFHTOT
          MOVE       ZERO,DBFHTAX
          CLOCK      TIME,CTIMEIS
          UNPACK     CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK       DBFHCTIM,CHOUR,CMIN,KEY2
          MOVE       PASSCODE,DBFHCUSR         * Creation User ID
          MOVE       SP70,DBFHUR1              * User Def Ref 1
          MOVE       SP70,DBFHUR2              * User Def Ref 2
          MOVE       SP70,DBFHUD1              * User Def Date 1
          MOVE       SP70,DBFHUD2              * User Def Date 2
          MOVE       SP70,DBFHUY1              * User Def Y/N 1
          MOVE       SP70,DBFHUY2              * User Def Y/N 2
          MOVE       SP70,DBFHUC1              * User Def Code 1
          MOVE       SP70,DBFHUC2              * User Def Code 2
          MOVE       SP70,DBFHSPA              * Spare
.
          PACK       KEY21,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          CALL       RADBFH1
          COMPARE    ZERO,OVRCD
          GOTO       WRFTH000 IF EQUAL
          CALL       WRDBFH1
.
          MOVE       SP70,DBCRDDT
          MOVE       SP70,DBCRDTM
          MOVE       ZERO,DBCRRST
          MOVE       DBFHDOC,DBCRREC
          PACK       KEY12,DBCRREC,SP70
          CALL       RADBCR1
          IF         OVRCD=1
            CALL       WRDBCR1
          ELSE
            MOVE       "Fatal Error on Rec. Call IBA - Ref Dup WRDBCR",DISPMSG
            CALL       MESSAGE1
            CHAIN      PGM
          ENDIF
          RETURN
.
.-------------------------------------------------------------
. Locking Standard Routine to Enter Key Field
.-------------------------------------------------------------
EKEYF000  MOVE      ZERO,CKEYTYP
          CALL      KDBDBA00                * Call Standard Keyin Routine wDBh ?
          BRANCH    EXIT,EKEYF999,EKEYF999  * EXIT 1 Null Entry 2 EXITchar
.
           MOVE     SP70,DBLNNA1
           MATCH    SP70,DBDBLIN
           IF       !@EQUAL
             PACK     KEY8,DBDBLIN,SP70
             CALL     RDDBDB1
           ENDIF
.
EKEYF100  PACK      KEY8,DBDBDEB,SP70       * Setup Key to File
          CALL      RLDBDB1                 * Read and Lock Record
          BRANCH    OVRCD,EKEYF999,EKEYF200 * OVRCD=1 Not on File 2 Locked
          CALL      GETCDS00                * Get User Def Code Descriptions
          MOVE      ZERO,EXIT               * Setup EXIT Field
          MOVE      DBDBDEB,DBCRDEB
          GOTO      EKEYF999
.
EKEYF200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EKEYF100 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * EXIT
          GOTO      EKEYF000 IF EQUAL       * Must be a valid response
          MATCH     ANSE,ANS                * EXIT
          GOTO      EKEYF200 IF NOT EQUAL   * Must be a valid response
          GOTO      EKEYF000                * Return to Keyin
.
EKEYF999  RETURN                            * End of Routine
.---------------------------------------------------
. Get User Def Code Descriptions
.---------------------------------------------------
GETCDS00   CALL     FORAD000
.
           MOVE     SP70,DBDBUC1D
           MOVE     SP70,DBDBUC2D
           MOVE     SP70,DBDBUC3D
           MOVE     SP70,DBDBUC4D
           MOVE     SP70,DBDBWRND
.
           MATCH    SP70,DBDBWRN
           IF       !@EQUAL
             MOVE     "DBWR",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBWRN
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBWRND
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC1
           IF       !@EQUAL
             MOVE     "DB01",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC1
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC1D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC2
           IF       !@EQUAL
             MOVE     "DB02",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC2
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC2D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC3
           IF       !@EQUAL
             MOVE     "DB03",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC3
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC3D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC4
           IF       !@EQUAL
             MOVE     "DB04",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC4
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC4D
             ENDIF
           ENDIF
.
           MOVE     SP70,DBTEDES
           PACK     KEY3,DBDBTER,SP70
           CALL     RDDBTE1
.
           RETURN
.
.------------------------------------------------------------
. Enter Payment Type
.------------------------------------------------------------
EPAYT000  IF        ACCEPT=0
            MOVE      ONE,ACCEPT
          ENDIF
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EL,"Payment Type : ":
                           *V2LON,"1 ",*HOFF,"- Cash, ":
                           *V2LON,"2 ",*HOFF,"- Cheque, ":
                           *V2LON,"3 ",*HOFF,"- Credit Card"
EPAYT100  KEYIN     *PCCOL:CVERT,*V2LON,PAYTYPE
          COMPARE   ZERO,PAYTYPE
          GOTO      EPAYT900 IF EQUAL
          MOVE      PAYTYPE,DBCRTYP
          BRANCH    PAYTYPE,EPAYT110,EPAYT120,EPAYT130
          BEEP
          GOTO      EPAYT100
.
EPAYT110  MOVE      "Cash      ",PAYTDESC
          MOVE      ZERO,EXIT
          GOTO      EPAYT999
.
EPAYT120  MOVE      "Cheque     ",PAYTDESC
          MOVE      ZERO,EXIT
          GOTO      EPAYT999
.
EPAYT130  MOVE      "Credit Card",PAYTDESC
          MOVE      ZERO,EXIT
          GOTO      EPAYT999
.
EPAYT900  MOVE      TWO,EXIT
.
EPAYT999  CALL      MESSAGE3
          RETURN
.
.------------------------------------------------------------
. Enter Drawer
.------------------------------------------------------------
EDRAW000  MOVE      SP70,DBCRDRW
          MOVE      ZERO,EXIT
          COMPARE   "2",PAYTYPE
          GOTO      EDRAW999 IF NOT EQUAL
.
          MOVE      DBDBNA1,DBCRDRW
          STRIP     DBCRDRW
          SFORMAT   VAR,SCPSLEN
          MOVE      DBCRDRW,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBCRDRW
          SFORMAT   VAR,127
          ENDSET    DBCRDRW
          APPEND    SP70,DBCRDRW
          RESET     DBCRDRW
          CMATCH    EXITCHAR,DBCRDRW
          GOTO      EDRAW990 IF EQUAL
          MOVE      ZERO,EXIT
          MATCH     SP70,DBCRDRW
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
          GOTO      EDRAW999
.
EDRAW990  MOVE      TWO,EXIT
.
EDRAW999  RETURN
.
.------------------------------------------------------------
. Enter Cheque No.
.------------------------------------------------------------
ECHEQ000  MOVE      SP70,DBCRCHQ
          MOVE      ZERO,EXIT
          COMPARE   "2",PAYTYPE
          GOTO      ECHEQ999 IF NOT EQUAL
.
          STRIP     DBCRCHQ
          SFORMAT   VAR,SCPSLEN
          MOVE      DBCRCHQ,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBCRCHQ
          SFORMAT   VAR,127
          ENDSET    DBCRCHQ
          APPEND    SP70,DBCRCHQ
          RESET     DBCRCHQ
          CMATCH    EXITCHAR,DBCRCHQ
          GOTO      ECHEQ990 IF EQUAL
          MOVE      ZERO,EXIT
          MATCH     SP70,DBCRCHQ
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
          GOTO      ECHEQ999
.
ECHEQ990  MOVE      TWO,EXIT
.
ECHEQ999  RETURN
.
.------------------------------------------------------------
. Enter Bank
.------------------------------------------------------------
EBANK000  MOVE      SP70,DBCRBNK
          MOVE      ZERO,EXIT
          COMPARE   "2",PAYTYPE
          GOTO      EBANK999 IF NOT EQUAL
.
          STRIP     DBCRBNK
          SFORMAT   VAR,SCPSLEN
          MOVE      DBCRBNK,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBCRBNK
          SFORMAT   VAR,127
          ENDSET    DBCRBNK
          APPEND    SP70,DBCRBNK
          RESET     DBCRBNK
          CMATCH    EXITCHAR,DBCRBNK
          GOTO      EBANK990 IF EQUAL
          MOVE      ZERO,EXIT
          MATCH     SP70,DBCRBNK
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
          GOTO      EBANK999
.
EBANK990  MOVE      TWO,EXIT
.
EBANK999  RETURN
.
.------------------------------------------------------------
. Enter Branch
.------------------------------------------------------------
EBRAN000  MOVE      SP70,DBCRBRA
          MOVE      ZERO,EXIT
          COMPARE   "2",PAYTYPE
          GOTO      EBRAN999 IF NOT EQUAL
.
          STRIP     DBCRBRA
          SFORMAT   VAR,SCPSLEN
          MOVE      DBCRBRA,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBCRBRA
          SFORMAT   VAR,127
          ENDSET    DBCRBRA
          APPEND    SP70,DBCRBRA
          RESET     DBCRBRA
          CMATCH    EXITCHAR,DBCRBRA
          GOTO      EBRAN990 IF EQUAL
          MOVE      ZERO,EXIT
          MATCH     SP70,DBCRBRA
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
          GOTO      EBRAN999
.
EBRAN990  MOVE      TWO,EXIT
.
EBRAN999  RETURN
.
.------------------------------------------------------------
. Enter Invoice Date
.------------------------------------------------------------
ERDAT000  READ      CONTROLF,EIGHTY1;CFDBPASS,*77,CFDBSQLA,CFDBSQLB:
                                                   CFDBFDAT,CFDBTDAT
          MOVE      "0",CKEYTYP
          CALL      KEYDATE
          BRANCH    OVRCD,ERDAT900
          MATCH     SP2,CDAY
          GOTO      ERDAT900 IF EQUAL
          PACK      DBCRDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DBCRDAT
          MATCH     CFDBFDAT,DBCRDAT   * Date Range
          GOTO      ERDAT800 IF LESS
          MATCH     DBCRDAT,CFDBTDAT
          GOTO      ERDAT800 IF LESS
          MOVE      ZERO,EXIT
          GOTO      ERDAT999
.
ERDAT800  BEEP
          MOVE      "Receipt Date NOT in Processing Date Range - ",DISPMSG
          CALL      MESSAGE1
          GOTO      ERDAT000
.
ERDAT900  MOVE      TWO,EXIT
.
ERDAT999  RETURN
.
.---------------------------------------------------------
. Enter User Defined Code 1
.---------------------------------------------------------
EUDCA000  MOVE       "CR01",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCA999,EUDCA999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCA000
          ENDIF
          MOVE       DBCDCOD,DBCRUC1
          MOVE       DBCDDES,DBCRUC1D
EUDCA999  RETURN
.
.---------------------------------------------------------
. Enter User Defined Code 2
.---------------------------------------------------------
EUDCB000  MOVE       "CR02",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCB999,EUDCB999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCB000
          ENDIF
          MOVE       DBCDCOD,DBCRUC2
          MOVE       DBCDDES,DBCRUC2D
EUDCB999  RETURN
.
.----------------------------------------
. Display Header
.----------------------------------------
DISHED00  MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCRDEB,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE1,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE2,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE3,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE4,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NADLINE5,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCRREC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCRTYP,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCRDRW,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCRCHQ,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCRBNK,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCRBRA,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCRAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    DBCRDAT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PAYTDESC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALALL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          RETURN
.
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.-------------------------------------------------------------
. Read Details of Line
.-------------------------------------------------------------
REDDET00  ASSIGN   DBTCTAX+DBTCTOT,TOTALAMT
          MOVE     DBTCITM,KEY8
          CALL     RDDBIT1
          IF       OVRCD=1
            MOVE     "***** ITEM RECORD MISSING *****",DBITDES
          ENDIF
          MOVE     "   21",FLDID
          CALL     GETPOSIT
          IF       EXIT=0
            MOVE     TOTALOUT,VAR
            CALL     DISPITEM
          ENDIF
          MOVE     "   31",FLDID
          CALL     GETPOSIT
          RETURN
.
.------------------------------------------------------------
. Save Cash Transaction Details
.------------------------------------------------------------
STRAN000  MOVE       ZERO,TRANLINE
          PACK       KEY11,DBFHDEB,SP70
          CALL       RSDBTC1
STRAN100  CALL       RKDBTC1
          BRANCH     OVRCD,STRAN900
          MATCH      DBTCDEB,DBFHDEB
          GOTO       STRAN900 IF NOT EQUAL
.
STRAN110  CALL       MVFDT000
          PACK       KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          CALL       RADBFD1       * Check File
          COMPARE    ZERO,OVRCD    * Must Write to File
          GOTO       STRAN110 IF EQUAL
.
          CALL       WRDBFD1       * Write Detail Record
          ASSIGN     TOTALALL+DBFDTOT,TOTALALL
          ASSIGN     TOTALALL+DBFDTAX,TOTALALL
          CALL       CNOTE000      * Copy Notes from Billing File to Fin Det.
.
          CALL       UPINV000      * Update Invoice Details
.
          GOTO       STRAN100
.
STRAN900
STRAN999  RETURN
.------------------------------------------------------------
. Move in Financial Detail Transaction
.------------------------------------------------------------
MVFDT000  ADD        ONE,TRANLINE
          MOVE       TRANLINE,DBFDDLN    * Line Number
          MOVE       DBTCDEB,DBFDDEB     * Debtor
          MOVE       THREE,DBFDDTY       * Doc. Type 3=Cash Rec.te
          MOVE       CFDBREC,DBFDDOC     * Document Reference (Rec. Number)
          REP        " 0",DBFDDOC
          MOVE       INVREF,DBFDINV      * Invoice Ref
          MOVE       DBTCDLN,DBFDILN     * Invoice Line
          MOVE       INVDAT,DBFDIDAT     * Invoice Date
          REP        " 0",DBFDIDAT
          MOVE       DBCRDAT,DBFDPDAT    * Paid Date = Document Date for Cash
          REP        " 0",DBFDPDAT
.
          MOVE       ZERO,DBFDGLS        * Ledger Status
          MOVE       DBTCITM,KEY8        * Read Item for General Ledger Details
          CALL       RDDBIT1
          MOVE       DBITLED,DBFDLED     * Ledger
          MOVE       DBITIAC,DBFDIAC     * Income Account
          MOVE       DBITCAC,DBFDCAC     * Control Account
          MOVE       DBITTAC,DBFDTAC     * Tax Account
          MOVE       DBITTCA,DBFDTCA     * Tax Control
          MOVE       SP70,DBFDBCHG       * Billing Charge Number
          PACK       DBFDBDAT,CCC,CYY,CMM,CDD
          REP        " 0",DBFDBDAT
          UNPACK     CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK       DBFDBTIM,CHOUR,CMIN,KEY2
          MOVE       PASSCODE,DBFDBUSR   * Billing Input User ID
          MOVE       DBTCITM,DBFDITM     * Sales Item Code
          MOVE       DBTCSDAT,DBFDSDAT   * Service Date
          REP        " 0",DBFDSDAT
          MOVE       DBTCDREF,DBFDDREF   * Debtors Reference
          MOVE       DBTCOREF,DBFDOREF   * Our Reference
          MOVE       DBTCQTY,DBFDQTY     * Quantity
          MOVE       DBTCPRI,DBFDPRI     * Price
          MOVE       DBTCTOT,DBFDTOT     * Extended Total
          MOVE       DBTCTRT,DBFDTRT     * Tax Rate
          MOVE       DBTCTAX,DBFDTAX     * Tax Amount
          ASSIGN     DBFDTAX+DBFDTOT,DBFDPAID       * Paid Amount
          MOVE       DBTCUR1,DBFDUR1     * User Def Ref 1
          MOVE       DBTCUR2,DBFDUR2     * User Def Ref 2
          MOVE       DBTCUD1,DBFDUD1     * User Def Date 1
          MOVE       DBTCUD2,DBFDUD2     * User Def Date 2
          MOVE       DBTCUY1,DBFDUY1     * User Def Y/N 1
          MOVE       DBTCUY2,DBFDUY2     * User Def Y/N 2
          MOVE       DBTCUC1,DBFDUC1     * User Def Code 1
          MOVE       DBTCUC2,DBFDUC2     * User Def Code 2
          MOVE       DBTCUC3,DBFDUC3     * User Def Code 3
          MOVE       DBTCUC4,DBFDUC4     * User Def Code 4
          MOVE       DBTCGST,DBFDGST     * GST Code
          MOVE       SP70,DBFDSPA        * Spare
          RETURN
.-------------------------------------------------------------------
. Copy Notes to Financial Details Notes File
.-------------------------------------------------------------------
CNOTE000  PACK       KEY14,DBTCDEB,DBTCDLN,SP70
          CALL       RSDBTD1
CNOTE100  CALL       RKDBTD1
          BRANCH     OVRCD,CNOTE999
          MATCH      DBTCDEB,DBTDDEB
          GOTO       CNOTE999 IF NOT EQUAL
          MATCH      DBTCDLN,DBTDDLN
          GOTO       CNOTE999 IF NOT EQUAL
.
CNOTE110  PACK       KEY27,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,DBTDLIN,SP70
          CALL       RADBFN1
          BRANCH     OVRCD,CNOTE200
          MOVE       DBTDLIN,F3   * This is here just in case it should
          ADD        ONE,F3       * Not Normally Occur
          MOVE       F3,DBTDLIN
          GOTO       CNOTE110
.
CNOTE200  UNPACK     KEY27,DBFNDEB,DBFNDTY,DBFNDOC,DBFNDLN,DBFNLIN
          MOVE       DBTDCOM,DBFNCOM
          MOVE       SP70,DBTDSPA
          CALL       WRDBFN1
.
          PACK       KEY14,DBTDDEB,DBTDDLN,DBTDLIN
          CALL       DEDBTD1
          GOTO       CNOTE100
.
CNOTE999  RETURN
.------------------------------------------------------------
. Update Invoice Transaction Details
.------------------------------------------------------------
UPINV000  MATCH      "000000000000",INVREF
          GOTO       UPINV500 IF NOT EQUAL
.
. Write dummy invoice record for Cash Not releated to a Invoice
.----------------------------------------------------------------------
.         Save KEY50 to Matching Cash Entry
.
          IF         DBFDTAX+DBFDTOT=0
            GOTO       UPINV999
          ENDIF
          PACK       KEY50,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
.
UPINV100  PACK       KEY24,DBFDDEB,ONE,INVREF,DBFDDLN,SP70
          CALL       RADBFD1       * Check File
          BRANCH     OVRCD,UPINV200
          MOVE       DBFDDLN,F3
          ADD        ONE,F3
          MOVE       F3,DBFDDLN
          GOTO       UPINV100
.
UPINV200  MULT       SEQ,DBFDTOT          * Credit Balance Invoice for
          MULT       SEQ,DBFDTAX          * Outstanding/Aging
          MOVE       ZERO,DBFDPAID        * Nothing Paid
          MOVE       INVDAT,DBFDIDAT      * Invoice Date same as Document Date
          MOVE       "99999999",DBFDPDAT  * Record as Outstanding
          MOVE       INVREF,DBFDDOC       * Document Reference "000000000000"
          MOVE       KEY50,DBFDOREF       * Save Key to Credit in Reference
          MOVE       ONE,DBFDDTY          * Doc. Type Invoice
          CALL       WRDBFD1              * Write Detail Record
          GOTO       UPINV999
.
. Update Existing Invoice with Amount Paid/Credit
.
UPINV500  ASSIGN     DBFDTOT+DBFDTAX,TOTALAMT
          PACK       KEY24,DBFDDEB,ONE,DBFDINV,DBFDILN,SP70
          CALL       RDDBFD1
          BRANCH     OVRCD,UPINV900
.
          ADD        TOTALAMT,DBFDPAID       * Increase Amount Paid by Cr Amt.
          IF         DBFDPAID=(DBFDTAX+DBFDTOT)
            MOVE       DBCRDAT,DBFDPDAT    * Paid Date = Document Date for Cash
            REP        " 0",DBFDPDAT
          ELSE
            MOVE       "99999999",DBFDPDAT
          ENDIF
          CALL       UPDBFD1
          GOTO       UPINV999
.
UPINV900  BEEP
          MOVE       "ERROR : Update Failed on Invoice Details - ",DISPMSG
          CALL       MESSAGE1
.
UPINV999  RETURN
.
.-------------------------------------------------------------
. Enter Invoice Number
.    - Accept Invoice Number
.    - Copy Details to Receipt
.-------------------------------------------------------------
EINVN000  MOVE     ONE,DBFHDTY
          MOVE     DBDBDEB,DBFHDEB
          MOVE     ZERO,CKEYTYP
          CALL     KDBFHX00
          BRANCH   EXIT,EINVN200,EINVN200,EINVN100
.
          MOVE     DBFHDOC,INVREF
          MOVE     DBFHDDAT,INVDAT
          MOVE     ZERO,DBFHDTOT
          MOVE     ZERO,TOTALOUT
          CALL     CLRTMP00       * Clear Temp File for Debtor
          CALL     CPDET000       * Note as Debtor is Locked No Other User
.                                 * Can Post a Credit At the Same Time
          MOVE     ZERO,EXIT
          GOTO     EINVN999
.
. NON REFERENCED CASH REC.
.--------------------------
EINVN100  CALL     CHKOUT00       * If Outstanding Invoices Exists then
          BRANCH   EXIT,EINVN000  * Non Referenced Credit Notes Not Allowed
          CALL     CLRTMP00       * Clear Temp File for Debtor
          MOVE     DBDBDEB,DBFHDEB
          MOVE     ZERO,DBFHDTOT
          MOVE     ZERO,TOTALOUT
          GOTO     EINVN999
.
EINVN200  COMPARE  TOTALALL,DBCRAMT
          GOTO     EINVN900 IF NOT EQUAL
.
          CALL     UPFTH000             * Update Header Details & Write to Audit
.
          ASSIGN   DBFHTAX+DBFHTOT,TOTALALL
          COMPARE  TOTALALL,DBCRAMT     * Re Check Totals
          GOTO     EINVN999 IF EQUAL    * Should Always Match
.
          BEEP
          MOVE     "ERROR - Transaction Don't Add to Total - ",DISPMSG
          CALL     MESSAGE1
.
. Totals Don't Match
.
EINVN900  CALL     TOTERR00
          BRANCH   EXIT,EINVN000
          MOVE     TWO,EXIT
.
EINVN999  RETURN
.------------------------------------------------------------
. Copy Invoice Details to Blank Receipt Temp File
.------------------------------------------------------------
CPDET000  CALL     CHKREC00                  * Check if Invoice Already on Rec.
          BRANCH   EXIT,CPDET500             * Yes
.
          MOVE     ZERO,CRLINE
          PACK     KEY44,DBFHDEB,DBFHDDAT,DBFHDOC,SP70
          CALL     RDDBFD3
          IF       OVRCD=0
            CALL     RPDBFD3
          ENDIF
CPDET100  CALL     RKDBFD3
          BRANCH   OVRCD,CPDET500
          MATCH    DBFHDEB,DBFDDEB           * Same Debtor
          GOTO     CPDET500 IF NOT EQUAL
          MATCH    DBFHDDAT,DBFDIDAT         * Same Invoice Date
          GOTO     CPDET500 IF NOT EQUAL
          MATCH    DBFHDOC,DBFDINV           * Same Invoice Reference
          GOTO     CPDET500 IF NOT EQUAL
.
          MOVE     DBFDDEB,DBTCDEB           * Same Debtor
          MOVE     DBFDILN,DBTCDLN
          PACK     KEY11,DBTCDEB,DBTCDLN
          CALL     RDDBTC1
          IF       OVRCD=0
            CALL     ADDET000
            CALL     UPDBTC1
            CALL     CPNOT000           * Add Notes
          ELSE
            CALL     MVDET000
            CALL     WRDBTC1
            MOVE     ZERO,NOTELINE
            CALL     CPNOT000           * Copy Notes
          ENDIF
          GOTO     CPDET100           * Next Line
.
. Delete any Items with Zero Outstanding
.----------------------------------------
CPDET500  PACK     KEY11,DBFHDEB,SP70
          CALL     RSDBTC1
.
CPDET510  CALL     RKDBTC1
          BRANCH   OVRCD,CPDET999
          MATCH    DBFHDEB,DBTCDEB
          GOTO     CPDET999 IF NOT EQUAL
.
          IF       (DBTCTAX+DBTCTOT)=0
            PACK     KEY11,DBTCDEB,DBTCDLN
            CALL     DEDBTC1
            CALL     DENOT000
          ENDIF
          ASSIGN   DBFHDTOT+DBTCTOT+DBTCTAX,DBFHDTOT
          ASSIGN   TOTALOUT+DBTCTOT+DBTCTAX,TOTALOUT
          GOTO     CPDET510
.
CPDET999  RETURN
.------------------------------------------------------------
. Check for Previous Receipt
.------------------------------------------------------------
CHKREC00  PACK     KEY44,DBFHDEB,DBFHDDAT,DBFHDOC,THREE,DBCRREC,SP70
          CALL     RDDBFD3
          IF       OVRCD=0
            CALL     RPDBFD3
          ENDIF
          MOVE     ZERO,EXIT
CHKREC10  CALL     RKDBFD3
          BRANCH   OVRCD,CHKREC99
          MATCH    DBFHDEB,DBFDDEB           * Same Debtor
          GOTO     CHKREC99 IF NOT EQUAL
          MATCH    DBFHDDAT,DBFDIDAT         * Same Invoice Date
          GOTO     CHKREC99 IF NOT EQUAL
          MATCH    DBFHDOC,DBFDINV           * Same Invoice Reference
          GOTO     CHKREC99 IF NOT EQUAL
          MATCH    "3",DBFDDTY               * If Cash Rec
          GOTO     CHKREC99 IF NOT EQUAL
          MATCH    DBCRREC,DBFDDOC           * And Same Cash Rec. Reference
          GOTO     CHKREC99 IF NOT EQUAL
.
          ASSIGN   TOTALALL-DBFDTOT-DBFDTAX,TOTALALL
.
          MOVE     DBFDDEB,DBTCDEB           * Same Debtor
          MOVE     DBFDILN,DBTCDLN
          PACK     KEY11,DBTCDEB,DBTCDLN,SP70
          CALL     RDDBTC1
          IF       OVRCD=0
            CALL     ADDET000
            CALL     UPDBTC1
            CALL     CPNOT000           * Add Notes
          ELSE
            CALL     MVDET000
            CALL     WRDBTC1
            MOVE     ZERO,NOTELINE
          ENDIF
          PACK     KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          CALL     RDDBFD1
          IF       OVRCD=0
            CALL     DEDBFD1
            CALL     DELINV00
          ENDIF
          MOVE     ONE,EXIT
          GOTO     CHKREC10
.
CHKREC99  RETURN
.------------------------------------------------------------
. Add in Invoice Details
.------------------------------------------------------------
ADDET000  MOVE      DBFDDTY,F1
          BRANCH    F1,ADDET200,ADDET400,ADDET400,ADDET200
ADDET200  ADD       DBFDQTY,DBTCQTY    * This would be very Strange if
          ADD       DBFDTOT,DBTCTOT    * it happened
          ADD       DBFDTAX,DBTCTAX
          GOTO      ADDET999
.
ADDET400  SUB       DBFDQTY,DBTCQTY    * Take off Payments & Credits
          SUB       DBFDTOT,DBTCTOT
          SUB       DBFDTAX,DBTCTAX
          GOTO      ADDET999
.
ADDET999  RETURN
.------------------------------------------------------------
. Move in Invoice Details
.------------------------------------------------------------
MVDET000  MOVE      DBFDDEB,DBTCDEB
          MOVE      DBFDITM,DBTCITM
          MOVE      DBFDSDAT,DBTCSDAT
          MOVE      DBFDDREF,DBTCDREF
          MOVE      DBFDOREF,DBTCOREF
          MOVE      DBFDQTY,DBTCQTY
          MOVE      DBFDPRI,DBTCPRI
          MOVE      DBFDTOT,DBTCTOT
          MOVE      DBFDTRT,DBTCTRT
          MOVE      DBFDTAX,DBTCTAX
          MOVE      DBFDUR1,DBTCUR1
          MOVE      DBFDUR2,DBTCUR2
          MOVE      DBFDUD1,DBTCUD1
          MOVE      DBFDUD2,DBTCUD2
          MOVE      DBFDUY1,DBTCUY1
          MOVE      DBFDUY2,DBTCUY2
          MOVE      DBFDUC1,DBTCUC1
          MOVE      DBFDUC2,DBTCUC2
          MOVE      DBFDUC3,DBTCUC3
          MOVE      DBFDUC4,DBTCUC4
          MOVE      DBFDGST,DBTCGST
          MOVE      SP70,DBTCSPA
          RETURN
.------------------------------------------------------------
. Copy Notes from Invoice
.------------------------------------------------------------
CPNOT000  PACK      KEY27,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          CALL      RSDBFN1
CPNOT100  CALL      RKDBFN1
          BRANCH    OVRCD,CPNOT999
          PACK      KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          PACK      KEY27,DBFNDEB,DBFNDTY,DBFNDOC,DBFNDLN,SP70
          MATCH     KEY24,KEY27
          GOTO      CPNOT999 IF NOT EQUAL
          MOVE      DBTCDEB,DBTDDEB
          MOVE      DBTCDLN,DBTDDLN
          MOVE      DBFNCOM,DBTDCOM
          MOVE      SP70,DBTDSPA
.
CPNOT110  ADD       ONE,NOTELINE
          MOVE      NOTELINE,DBTDLIN
          PACK      KEY14,DBTDDEB,DBTDDLN,DBTDLIN
          CALL      RADBTD1
          COMPARE   ZERO,OVRCD
          GOTO      CPNOT110 IF EQUAL  * Should Never Happen
          CALL      WRDBTD1
          GOTO      CPNOT100
.
CPNOT999  RETURN
.------------------------------------------------------------
. Clear Temp Files for input
.------------------------------------------------------------
CLRTMP00  PACK      KEY11,DBFHDEB,SP70
          CALL      RSDBTC1
          CALL      RKDBTC1
          BRANCH    OVRCD,CLRTMP50
          MATCH     DBTCDEB,DBFHDEB
          GOTO      CLRTMP50 IF NOT EQUAL
          PACK      KEY11,DBTCDEB,DBTCDLN
          CALL      DEDBTC1
          GOTO      CLRTMP00
.
CLRTMP50  PACK      KEY14,DBFHDEB,SP70
          CALL      RSDBTD1
          CALL      RKDBTD1
          BRANCH    OVRCD,CLRTMP99
          MATCH     DBTDDEB,DBFHDEB
          GOTO      CLRTMP99 IF NOT EQUAL
          PACK      KEY14,DBTDDEB,DBTDDLN,DBTDLIN
          CALL      DEDBTD1
          GOTO      CLRTMP50
.
CLRTMP99  RETURN
.------------------------------------------------------------
. Delete Notes for a Item
.------------------------------------------------------------
DENOT000  PACK      KEY14,DBTCDEB,DBTCDLN,SP70
          CALL      RSDBTD1
          CALL      RKDBTD1
          BRANCH    OVRCD,CLRTMP99
          MATCH     DBTDDEB,DBTCDEB
          GOTO      DENOT999 IF NOT EQUAL
          PACK      KEY14,DBTDDEB,DBTDDLN,DBTDLIN
          CALL      DEDBTD1
          GOTO      DENOT000
DENOT999  RETURN
.------------------------------------------------------------
. Check Outstanding Invoices
.  - NON Invoice Referenced Receipts May only be posted
.    if the debtor has no outstanding invoices.
.------------------------------------------------------------
CHKOUT00  MOVE      "99999999",KEY8
          PACK      KEY52,DBDBDEB,KEY8,SP70
          CALL      RSDBFD2            * Process all transactions paid after
CHKOUT10  CALL      RKDBFD2            * the as at date.
          BRANCH    OVRCD,CHKOUT95
          MATCH     DBFDDEB,DBDBDEB
          GOTO      CHKOUT95 IF NOT EQUAL
          MATCH     "1",DBFDDTY        * Process Invoices Only
          GOTO      CHKOUT10 IF NOT EQUAL
          MATCH     "000000000000",DBFDDOC
          GOTO      CHKOUT10 IF EQUAL
.
          IF        (DBFDTAX+DBFDTOT-DBFDPAID)<>0
            MOVE      "Debtor has Outstanding Invoices - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      "Non Invoice Referenced Receipts Not Allowed - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      ONE,EXIT
            GOTO      CHKOUT99
          ENDIF
          GOTO      CHKOUT10
.
CHKOUT95  MOVE      ZERO,EXIT
.
CHKOUT99  RETURN
.--------------------------------------------------------------------------
. Unbalance Receipt to Allocation
.--------------------------------------------------------------------------
TOTERR00  BEEP
          MOVE     "Total Allocated not Equal to Receipt Total - ",DISPMSG
          CALL     MESSAGE1
          MOVE     SP70,DISPMSG
          CALL     MESSAGE2
.
TOTERR10  KEYIN    *P1:24,*EL,"Do You Wish to Cancel the Entire Receipt (":
                   *V2LON,"Y",*HOFF,"/":
                   *V2LON,"N",*HOFF,") ? ",*V2LON,*RV,ANS
          REP      UPPLOW,ANS
          MATCH    "Y",ANS
          GOTO     TOTERR80 IF EQUAL
          MATCH    "N",ANS
          GOTO     TOTERR10 IF NOT EQUAL
          CALL     MESSAGE3
          MOVE     ONE,EXIT
          GOTO     TOTERR99
.
TOTERR80  CALL     MESSAGE3
.
          CALL     DELALL00        * Delete Entire Cash Rec.
.
          MOVE     ZERO,EXIT
          GOTO     TOTERR99
.
TOTERR99  RETURN
.------------------------------------------------------------
. Delete Entire Cash Receipt
.------------------------------------------------------------
DELALL00  PACK     KEY12,DBCRREC,SP70
          CALL     RDDBCR1
          IF       OVRCD=0
            MOVE     ZERO,DBCRAMT   * Make Receipt Record for Zero Amount
            CALL     UPDBCR1        * ie Cancel/Delete
          ENDIF
.
          PACK     KEY21,DBDBDEB,THREE,DBCRREC,SP70
          CALL     RDDBFH1
          IF       OVRCD=0
            CALL     DEDBFH1        * ie Cancel/Delete
          ENDIF
.
DELALL10  PACK     KEY24,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          CALL     RSDBFD1
          CALL     RKDBFD1
          BRANCH   OVRCD,DELALL99
          PACK     KEY21,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          PACK     KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          MATCH    KEY21,KEY24
          GOTO     DELALL99 IF NOT EQUAL
.
          CALL     DEDBFD1
          CALL     DELINV00         * Restore Invoice Details
          GOTO     DELALL10
.
DELALL99  RETURN
.--------------------------------------------
. Restore Invoice Details
.--------------------------------------------
DELINV00  MATCH    "000000000000",DBFDINV
          GOTO     DELINV50 IF NOT EQUAL
.
. Delete Dummy Record for Non Referenced Payment (Unusual)
.------------------------------------------------------------
          IF       DBFDTOT+DBFDTAX=0
            GOTO     DELINV99
          ENDIF
          ASSIGN   DBFDTOT+DBFDTAX,TOTALAMT
          MULT     SEQ,TOTALAMT
          PACK     KEY50,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          PACK     KEY24,DBFDDEB,ONE,DBFDINV,SP70
          PACK     KEY21,DBFDDEB,ONE,DBFDINV,SP70
          CALL     RSDBFD1
DELINV10  CALL     RKDBFD1
          BRANCH   OVRCD,DELINV90
          PACK     KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          MATCH    KEY21,KEY24
          GOTO     DELINV90 IF NOT EQUAL
          MATCH    KEY50,DBFDOREF             * Find Matching Line
          GOTO     DELINV10 IF NOT EQUAL
          CALL     DEDBFD1
          GOTO     DELINV99
.
. Normal Invoice Remove Payment From..
.------------------------------------------------------------
DELINV50  ASSIGN   DBFDTOT+DBFDTAX,TOTALAMT
          PACK     KEY24,DBFDDEB,ONE,DBFDINV,DBFDILN,SP70
          CALL     RDDBFD1
          BRANCH   OVRCD,DELINV90
          SUB      TOTALAMT,DBFDPAID
          MOVE     "99999999",DBFDPDAT
          CALL     UPDBFD1
          GOTO     DELINV99
DELINV90  BEEP
          MOVE     "ERROR: Cash Rec. Invoice Cancel Failed - ",DISPMSG
          CALL     MESSAGE1
DELINV99  RETURN
.------------------------------------------------------------
. Update Debtors Transaction Header
.------------------------------------------------------------
UPFTH000  PACK     KEY21,DBDBDEB,THREE,DBCRREC,SP70
          CALL     RDDBFH1
          BRANCH   OVRCD,UPFTH900
.
          PACK     KEY24,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          CALL     RSDBFD1
UPFTH100  CALL     RKDBFD1
          BRANCH   OVRCD,DELALL99
          PACK     KEY21,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          PACK     KEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
          MATCH    KEY21,KEY24
          GOTO     UPFTH200 IF NOT EQUAL
.
          ADD      DBFDTAX,DBFHTAX
          ADD      DBFDTOT,DBFHTOT
          GOTO     UPFTH100
.
UPFTH200  CALL     UPDBFH1
          GOTO     UPFTH999
.
UPFTH900  BEEP
          MOVE     "ERROR: Header Record Update Failed - ",DISPMSG
          CALL     MESSAGE1
.
UPFTH999  RETURN
.
.-------------------------------------------------------------
. Item Selected
.-------------------------------------------------------------
SELT0000  CALL     RDDBTC1
          IF       OVRCD=1
            BEEP
            MOVE     "Can't Read Details - ",DISPMSG
            CALL     MESSAGE1
            GOTO     SELT9999
          ENDIF
.
          MOVE      DBTCITM,KEY8
          CALL      RDDBIT1
          BRANCH    OVRCD,SELT9100
.
          MOVE      DBITPTY,KEY8
          CALL      RDDBPT1
          BRANCH    OVRCD,SELT9200
.
          PACK      KEY12,PASSCODE,DBPTDEP
          CALL      RDDBSE1
          BRANCH    OVRCD,SELT9300
.
          ASSIGN   DBTCTOT+DBTCTAX,TOTALAMT
          ASSIGN   TOTALOUT-DBTCTOT-DBTCTAX,TOTALOUT
          CALL     GETDES00
.
          CALL     SC03L000
.
          GOTO     SELT9999
.
SELT9100  BEEP
          MOVE     "Invalid Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9200  BEEP
          MOVE     "Invalid Product Type on Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9300  BEEP
          MOVE     "Inadequate Security for Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9999  RETURN
.
.---------------------------------------------------
. Get User Def Code Descriptions
.---------------------------------------------------
GETDES00   MOVE     SP70,DBTCUC1D
           MOVE     SP70,DBTCUC2D
           MOVE     SP70,DBTCUC3D
           MOVE     SP70,DBTCUC4D
           MATCH    SP70,DBTCUC1
           IF       !@EQUAL
             MOVE     "FD01",DBCDCAT
             PACK     KEY7,DBCDCAT,DBTCUC1
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBTCUC1D
             ENDIF
           ENDIF
           MATCH    SP70,DBTCUC2
           IF       !@EQUAL
             MOVE     "FD02",DBCDCAT
             PACK     KEY7,DBCDCAT,DBTCUC2
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBTCUC2D
             ENDIF
           ENDIF
           MATCH    SP70,DBTCUC3
           IF       !@EQUAL
             MOVE     "FD03",DBCDCAT
             PACK     KEY7,DBCDCAT,DBTCUC3
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBTCUC3D
             ENDIF
           ENDIF
           MATCH    SP70,DBTCUC4
           IF       !@EQUAL
             MOVE     "FD04",DBCDCAT
             PACK     KEY7,DBCDCAT,DBTCUC4
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBTCUC4D
             ENDIF
           ENDIF
.
GETDES99   RETURN
.
.-------------------------------------------------------------
. Modify Receipt Total
.-------------------------------------------------------------
RTOT0000  MOVE      "   16",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
          MOVE      DBCRAMT,F12P2
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,F12P2
          COMPARE   F12P2,DBCRAMT
          GOTO      RTOT9000 IF EQUAL
          PACK      KEY12,DBCRREC,SP70
          CALL      RDDBCR1
          IF        OVRCD=0
            MOVE      F12P2,DBCRAMT
            CALL      UPDBCR1
          ENDIF
.
RTOT9000  MOVE      DBCRAMT,VAR
          CALL      DISPITEM
RTOT9999  RETURN
.
DATECURR  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          REP       " 0",CYEAR
          REP       " 0",CMON
          REP       " 0",CDAY
          RETURN
.-------------------------------------------------------------
. Cancel Post
.-------------------------------------------------------------
CANA0000  PACK     KEY11,DBTCDEB,DBTCDLN,SP70
          CALL     RDDBTC1
          IF       OVRCD=0
            ASSIGN   TOTALOUT+DBTCTOT+DBTCTAX,TOTALOUT
          ENDIF
          RETURN
.
.-------------------------------------------------------------
. Audit & Locking Standard Routine to POSA Changes.
.-------------------------------------------------------------
POSA0000  PACK     KEY11,DBTCDEB,DBTCDLN,SP70  * Setup Key
          CALL     RADBTC1            * Check for record on file
          IF       OVRCD=0
            CALL     UPDBTC1          * Update Changes
          ELSE
            CALL     WRDBTC1          * Write New Record
          ENDIF
          ASSIGN    TOTALOUT+DBTCTOT+DBTCTAX,TOTALOUT
          CALL      PNOTE000          * Save Notes
          MOVE      ZERO,EXIT         * Save Complete so Exit Screen
          GOTO      POSA9999
.
POSA9000  MOVE      ONE,EXIT          * Return to Prompt Invalid Totals
.
POSA9999  RETURN                      * Return to program.
.---------------------------
. Save Notes
.---------------------------
PNOTE000  PACK      KEY14,DBTCDEB,DBTCDLN,SP70
          CALL      RSDBTD1
PNOTE200  CALL      RKDBTD1
          BRANCH    OVRCD,PNOTE250
          MATCH     DBTCDEB,DBTDDEB
          GOTO      PNOTE250 IF NOT EQUAL
          MATCH     DBTCDLN,DBTDDLN
          GOTO      PNOTE250 IF NOT EQUAL
          PACK      KEY14,DBTDDEB,DBTDDLN,DBTDLIN
          CALL      DEDBTD1
          GOTO      PNOTE200
.
PNOTE250  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBTD1
          TRAPCLR   IO
          BRANCH    OVRCD,PNOTE999
          MOVE      ZERO,F3
PNOTE260  READ      TEMPWORD,SEQ;DBTDCOM
          GOTO      PNOTE999 IF OVER
          MOVE      F3,DBTDLIN
          PACK      KEY14,DBTCDEB,DBTCDLN,DBTDLIN
          UNPACK    KEY14,DBTDDEB,DBTDDLN,DBTDLIN
          CALL      WRDBTD1
          ADD       ONE,F3
          GOTO      PNOTE260
.
PNOTE999  RETURN
.
.-------------------------------------------------------------
. Delete Item From Credit Note
.-------------------------------------------------------------
DELA0000  MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DELA1000,DELA9000,DELA9100
.
DELA1000  PACK     KEY11,DBTCDEB,DBTCDLN,SP70  * Setup Key
          CALL     RADBTC1            * Check for record on file
          IF       OVRCD=0
            CALL     DEDBTC1          * Delete
          ENDIF
          CALL     DNOTE000           * Delete Notes
          MOVE     ZERO,EXIT          * Exit Screen
          GOTO     DELA9999
DELA9000  MOVE     ONE,EXIT           * Return to Prompt on "No"
          GOTO     DELA9999
DELA9100  MOVE     ZERO,EXIT          * Exit Screen on "Cancel"
          GOTO     DELA9999
.
DELA9999  RETURN
.---------------------------
. Save Notes
.---------------------------
DNOTE000  PACK      KEY14,DBTCDEB,DBTCDLN,SP70
          CALL      RSDBTD1
DNOTE100  CALL      RKDBTD1
          BRANCH    OVRCD,DNOTE999
          MATCH     DBTCDEB,DBTDDEB
          GOTO      DNOTE999 IF NOT EQUAL
          MATCH     DBTCDLN,DBTDDLN
          GOTO      DNOTE999 IF NOT EQUAL
          PACK      KEY14,DBTDDEB,DBTDDLN,DBTDLIN
          CALL      DEDBTD1
          GOTO      DNOTE100
DNOTE999  RETURN
.
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
ESALI000  COMPARE   ONE,ACCEPT         * Display Line Number on Screen if
          CALL      DISLIN00 IF EQUAL  * in Add Mode.
.
          MATCH     "000000000000",DBFHDOC    * Related to an Invoice
          GOTO      ESALI990 IF NOT EQUAL   * Yes
.
          MOVE      ZERO,CKEYTYP
          CALL      KDBITX00
          BRANCH    EXIT,ESALI900,ESALI900
          IF        DBITACT=0
            MOVE      "Sales Item Not Active. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ESALI000
          ENDIF
          MOVE      DBITITM,DBTCITM
.
          IF        ACCEPT=1
            CALL      LODWP000
          ENDIF
.
          COMPARE   ONE,ACCEPT
          GOTO      ESALI999 IF EQUAL
.
          MOVE      "   37",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FILDBTD1,WORDNAME
            CALL      DISPWORD
          ENDIF
          MOVE      DBITPRI,DBTCPRI
          ASSIGN    DBTCPRI*DBTCQTY,DBTCTOT
          CALL      CALTAX00
          ASSIGN    DBTCTOT+DBTCTAX,TOTALAMT
          CALL      DISPIT00
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          GOTO      ESALI999
.
ESALI900  BRANCH    ACCEPT,ESALI910
          MOVE      DBTCITM,KEY8
          CALL      RDDBIT1
          MOVE      ZERO,EXIT
          GOTO      ESALI999

ESALI910  MOVE      ZERO,ENDADD   * End Add Items
          MOVE      TWO,EXIT
          GOTO      ESALI999
.
ESALI990  BEEP
          MOVE      "Can't Change Sales Item for Invoice Item - ",DISPMSG
          CALL      MESSAGE1
          MOVE      DBTCITM,KEY8
          CALL      RDDBIT1
          GOTO      ESALI999
.
ESALI999  RETURN
.
LODWP000  PREP     TEMPWORD,FILDBTD1
          PACK     KEY11,DBITITM,SP70
          CALL      RDDBIC1
          IF        OVRCD=0
            CALL      RPDBIC1
          ENDIF
LODWP100  CALL     RKDBIC1
          BRANCH   OVRCD,LODWP999
          MATCH    DBITITM,DBICITM
          GOTO     LODWP999 IF NOT EQUAL
          PACK     VAR,DBICCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBICCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     LODWP100
LODWP999  CLOSE    TEMPWORD
          RETURN
.------------------------------------------------------------
. Display Line Number of Entry
.------------------------------------------------------------
DISLIN00  MOVE      "    6",FLDID      * Display Item Number if in Add
          CALL      GETPOSIT           * Mode
          IF        EXIT=0
            MOVE      DBTCDLN,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          RETURN
.
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
EQUTY000  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBTCQTY
          COMPARE   ONE,ACCEPT
          GOTO      EQUTY999 IF EQUAL
.
EQUTY100  ASSIGN    DBTCPRI*DBTCQTY,DBTCTOT
          CALL      CALTAX00
          ASSIGN    DBTCTOT+DBTCTAX,TOTALAMT
.
          CALL      DISPIT00
          MOVE      "   14",FLDID
          CALL      GETPOSIT
.
EQUTY999  RETURN
.
.------------------------------------------------------------
. Enter Price
.------------------------------------------------------------
EPRIC000  IF        DBITMOD=1
            IF        ACCEPT=0
              BEEP
              MOVE      "Price Fixed for this Sales Item. ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      EPRIC100
          ENDIF
.
          COMPARE   ZERO,DBTCPRI
          GOTO      EPRIC050 IF EQUAL
          COMPARE   ONE,ACCEPT
          GOTO      EPRIC100 IF EQUAL
.
EPRIC050  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBTCPRI
.
EPRIC100  ASSIGN    DBTCPRI*DBTCQTY,DBTCTOT
.
          CALL      CALTAX00    * Calculate Tax Amount
          ASSIGN    DBTCTOT+DBTCTAX,TOTALAMT
          CALL      DISPIT00    * Display Fields
          MOVE      "   15",FLDID
          CALL      GETPOSIT
.
EPRIC999  RETURN
.
CALTAX00  MOVE      ZERO,DBTCTRT
          MOVE      ZERO,DBTCTAX
.
          MATCH     SP6,DBTCGST
          GOTO      CALTAX99 IF EQUAL
.
          COMPARE   ONE,DBDBTEX
          GOTO      CALTAX99 IF EQUAL
.
          PACK      KEY14,DBTCGST,INVDAT,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     DBTCGST,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  IF        IBGEAMNT<>0
            ASSIGN    (DBTCTOT*IBGEAMNT)/100.0,DBTCTAX
          ENDIF
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,IBGEAMNT
.
CALTAX99  RETURN
.
.------------------------------------------------------------
. Enter Total
.------------------------------------------------------------
ETOTL000  IF        DBITMOD=1
            ASSIGN    DBTCQTY*DBTCPRI,DBTCTOT
            IF        ACCEPT=0
              BEEP
              MOVE      "Price Fixed for this Sales Item. ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      ETOTL999
          ENDIF
.
          ASSIGN    DBTCQTY*DBTCPRI,DBTCTOT
          COMPARE   ONE,ACCEPT
          GOTO      ETOTL500 IF EQUAL
.
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBTCTOT
          IF        !(DBTCTOT=(DBTCQTY*DBTCPRI))
            ASSIGN    DBTCTOT/DBTCQTY,DBTCPRI
          ENDIF
.
ETOTL500  CALL      CALTAX00
          ASSIGN    DBTCTOT+DBTCTAX,TOTALAMT
          CALL      DISPIT00         * Display Other
          MOVE      "   16",FLDID
          CALL      GETPOSIT
.
ETOTL999  RETURN
.
.
DISPIT00  MOVE      "   15",FLDID   * Price
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTCPRI,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   16",FLDID   * Extended Total
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTCTOT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   17",FLDID   * Tax Rate
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTCTRT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   18",FLDID   * Tax
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBTCTAX,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   36",FLDID   * Total Charge
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          RETURN
.
.------------------------------------------------------------
. Enter Tax Amount
.------------------------------------------------------------
ETAXA000  COMPARE   ONE,DBDBTEX
          GOTO      ETAXA100 IF NOT EQUAL
          MOVE      ZERO,DBTCTAX
          MOVE      ZERO,DBTCTRT
          COMPARE   ONE,ACCEPT
          GOTO      ETAXA900 IF EQUAL
          MOVE      "WARNING : Debtor is Flagged as Tax Exempt - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      ETAXA200
.
ETAXA100  CALL      CALTAX00
          COMPARE   ONE,ACCEPT          * Default if in Insert Mode
          GOTO      ETAXA900 IF EQUAL
.
ETAXA200  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBTCTAX
.
          ASSIGN    DBTCTAX+DBTCTOT,TOTALAMT
          MOVE      "   36",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
.
ETAXA900  MOVE      ZERO,EXIT
          MOVE      ZERO,OVRCD
.
ETAXA999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       DEBCODIO/INC
          INC       DEBCODKY    
          INC       DEBCREIO/INC
          INC       DEBDBTIO/INC
          INC       DEBDBTKY    
          INC       DEBDKIIO/INC
          INC       DEBDKIKY    
          INC       DEBDKIPR    
          INC       DEBFADCD    
          INC       DEBFDTIO/INC
          INC       DEBFNOIO/INC
          INC       DEBFTHIO/INC
          INC       DEBFTHKY    
          INC       DEBICMIO/INC
          INC       DEBITMCD    
          INC       DEBITMIO/INC
          INC       DEBLINIO/INC
          INC       DEBPTYIO/INC
          INC       DEBSECIO/INC
          INC       DEBTCRIO/INC
          INC       DEBTDCIO/INC
          INC       DEBTERIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGSTIO/INC
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
.
          INC       STDGENCD
.
