. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS50                                             *
. * Desc      :   Reporting Maintenance                                *
. **********************************************************************
. * Date      :   12.09.1990                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.03.01  05.11.2003  Mike Laming  CAR 37633                       *
. *           Recompile for PRCFMSPR - Change Projection FAMT6000      *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.B01 30.10.2000 Charles Handaya                               *
. *           Added Column Type : 7-Statistical Units                  *
. *           srf 6934                                                 *
. **********************************************************************
. * VF.01.01  23.10.2000 Sandra Barcham                                *
. *           When you choose use subjective also do for stat posting  *
. *           srf 1852                                                 *
. **********************************************************************
. * VF.00.04  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.03  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. * VF.00.02  30.06.1999 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. *           srf 632475                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS50
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       IBAESCFD/INC
.
          INC       FMSAMAFD/INC
          INC       FMSBTYFD/INC
          INC       FMSCSAFD/INC
          INC       FMSCONFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMBFD/INC
          INC       FMSLMCFD/INC
          INC       FMSLEVFD/INC
          INC       FMSUDRFD/INC
          INC       FMSRDFFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
REPTYPEF  FORM      1
REPTYPE   INIT      "       "
REPTYPE0  INIT      "Accrual"
REPTYPE1  INIT      "Cash"
.
PRTWARN   FORM      "0"
.
CHANGE    INIT      "Change"
COPY      INIT      "Copy"
DELETE    INIT      "Delete"
INSERT    INIT      "Insert"
OPTNDESC  DIM       10
.
FROMDES   DIM       35
FROMCOD   DIM       3
TOCOD     DIM       3
COPYFLAG  FORM      1
.
ACCEPT    FORM      1                  * accept mode (1=on)
DIM52     DIM       52
SP80      INIT      "                                        ":
                    "                                        "
.
SUPPTYPE  DIM       20
SUPPTYP0  INIT      "None"
SUPPTYP1  INIT      "Posting"
SUPPTYP2  INIT      "All"
SUPPTYP3  INIT      "Ign. Sub Ac Suppress"
.
ABUDDESC  DIM       35
BUDDESC   DIM       35
ADESC     DIM       15
ADESC0    INIT      "Normal A/c Name"
ADESC1    INIT      "Use Cost Centre"
ADESC2    INIT      "Use Subjective "
CHSELCT   FORM      2
CLEARFLG  FORM      1
.
DISPFLAG  FORM      1
.
FILENAME  DIM       8
.
INSERTFG  FORM      2
.
SAVCOSTC  DIM       12
SAVCHEAD  DIM       12
.
SCCITEM1  FORM      2
PERDFROM  FORM      2
PERDTO    FORM      2
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
PRGID     INIT      "IBAFMS50"
PRGNAM    INIT      "Ledger Reporting"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      OPTN0000           * insert/modify/delete/exit ?
          COMPARE   ZERO,COPTION
          GOTO      ML9999 IF EQUAL    * exit program
          COMPARE   FOUR,COPTION
          GOTO      ML4000 IF EQUAL    * Copy Option
.
ML0200    CALL      CLR0000
          CALL      PROC0000           * get entry
          BRANCH    EXIT,ML0100,ML0100 * exit option
.
          LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO * set up mode
          CALL      SCRA0000           * display screen A
          MOVE      ZERO,CLEARFLG
.
          BRANCH    COPTION,ML1000,ML1000,ML2000
.
.---- add/modify data ----
.
ML1000    CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML0200        * don't save data
.
          CALL      POST0000           * post screen A data
          GOTO      ML1000             * get next entry
.
.---- delete data ----
.
ML2000    CALL      DELQST             * ok to delete (y/n/c) ?
          BRANCH    CEXIT,ML2100,ML0200,ML0100
.
ML2100    CALL      DELT0000           * delete screen A data
          GOTO      ML0200             * get next entry
.
ML4000    CALL      COPY0000
          GOTO      ML0100             * get next entry
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmsrdfaf";  * Reporting file
          OPEN      FMSRDFA1,"fmsrdfaf"
.
          DISPLAY   *P64:24,"fmscsaaf";  * Account file
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmsamaaf";  * Account file
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmslmaaf";  * Reporting file
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmbaf";  * Report Sequences
          OPEN      FMSLMBA1,"fmslmbaf"
.
          DISPLAY   *P64:24,"fmslmcaf";  * Report Sequences
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsbtyaf";  * Budget Types
          OPEN      FMSBTYA1,"fmsbtyaf"
.
          DISPLAY   *P64:24,"fmslevaf";  * Budget Types
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmsudraf";  * Budget Types
          OPEN      FMSUDRA1,"fmsudraf"
.
          DISPLAY   *P64:24,"controlf";  * controlf
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          PACK      FMCOHPRT,FMCOHPRT,SP70
          REP       " 0",FMCOHPRT
.
          DISPLAY   *P64:24,"ibaescaf";  * Printer Types
          OPEN      IBAESCA1,"ibaescaf"
          OPEN      IBAESCA2,"ibaescaf"
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.* OPTN - Select option                          Called by ML0100        *
.*       Returns COPTION - 1 = insert 2 = change 3 = delete 4 = copy     *
.*************************************************************************
OPTN0000  DISPLAY  *P1:3,*EF:
                   *P1:4,*V2LON,"0",*P1:5,"1",*P1:6,"2",*P1:7,"3",*P1:8,"4":
                   *HOFF:
                   *P3:4,"= Exit":
                   *P3:5,"= Insert":
                   *P3:6,"= Change":
                   *P3:7,"= Delete":
                   *P3:8,"= Copy":
                   *P1:10,"Select Option :"
.
OPTN1000  KEYIN    *P17:10,*DV,UNDLN1,*P17:10,*V2LON,COPTION
.
          MOVE     ZERO,COPYFLAG
          COMPARE  ZERO,COPTION    * Exit
          GOTO     OPTN9000 IF EQUAL
.
          COMPARE  "5",COPTION
          GOTO     OPTN1000 IF NOT LESS
.
          LOAD     OPTNDESC,COPTION,INSERT,CHANGE,DELETE,COPY
          DISPLAY  *P70:3,*V2LON,OPTNDESC
          GOTO     OPTN9999
.
OPTN9000  
OPTN9999  RETURN
.**********************************************************************
. Copy From One style to a new style
.**********************************************************************
COPY0000  MOVE      ONE,COPYFLAG
          CALL      SCRB0000
.
          MOVE      "28",CCOL          * set up screen address
          MOVE      "4",CVERT
          CALL      KRDFFM00
          BRANCH    EXIT,COPY9999,COPY9999
          MOVE      FMRDCOD,FROMCOD
          MOVE      FMRDDES,FROMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDCOD,*HOFF,SP1,FMRDDES
.
          MOVE      TWO,COPYFLAG
          MOVE      "28",CCOL          * set up screen address
          MOVE      "6",CVERT
          CALL      ARDFFM00
          BRANCH    EXIT,COPY9999
          MOVE      FMRDCOD,TOCOD
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDCOD
          CALL      CONTQST              * ok to cont
          BRANCH    CEXIT,COPY1000,COPY0000,COPY9999
.
COPY1000  PACK      KEY3,FROMCOD
          CALL      RDFMRD1
          BRANCH    OVRCD,COPY0000
.
          PACK      KEY3,TOCOD
          CALL      RAFMRD1
          COMPARE   ZERO,OVRCD
          GOTO      COPY0000 IF EQUAL
          MOVE      TOCOD,KEY3
          MOVE      TOCOD,FMRDCOD
          CALL      WRFMRD1
          GOTO      COPY0000
.
COPY9999  MOVE      ZERO,COPYFLAG
          RETURN
.******************************************************************************
.* SCRB - Display Screen A                     
.******************************************************************************
SCRB0000  DISPLAY   *P1:4,*EF,"    From Report          : ":
                        *P1:6,"    To   Report          : "
          BRANCH    COPYFLAG,SCRB9999,SCRB1000
SCRB1000  DISPLAY   *P28:4,*V2LON,FROMCOD,*HOFF,SP1,FROMDES
.
SCRB9999  RETURN
.************************************************************************
.* CLR - Clear the file variables               Called by ML1000        *
.************************************************************************
CLR0000   UNPACK    SP70,FMRDLED,FMRDREP,FMRDRS,FMRDPT,FMRDLEV,FMRDCBT
          UNPACK    SP70,FMRDDES,YESNO,IBESPR        
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMLACYRR,CURYEAR
          MOVE      FMLAPER,PERDFROM
          MOVE      FMLAPER,PERDTO
          MOVE      ZERO,CLEARFLG
CLR9999   RETURN 
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.******************************************************************************
SCRA0000  DISPLAY   *P1:4,"    Report Required      : ",*V2LON,FMRDCOD,*EF:
                    *P1:6,*V2LON," 1",*HOFF,". Report Description   : ":
                    *P1:7,*V2LON," 2",*HOFF,". Ledger               : ":
                    *P1:8,*V2LON," 3",*HOFF,". Report Sequence      : ":
                    *P1:9,*V2LON," 4",*HOFF,". Report Style         : ":
                   *P1:10,*V2LON," 5",*HOFF,". Printer Type         : ":
                   *P1:11,*V2LON," 6",*HOFF,". From Report Level    : ":
                   *P1:12,*V2LON," 7",*HOFF,". First Print Position : ":
                   *P1:13,*V2LON," 8",*HOFF,". Last  Print Position : ":
                   *P1:14,*V2LON," 9",*HOFF,". Cash/Accrual Report  : ":
                   *P1:15,*V2LON,"10",*HOFF,". Budget Type          : ":
                   *P1:16,*V2LON,"11",*HOFF,". Alternative Budget   : ":
                   *P1:17,*V2LON,"12",*HOFF,". Posting A/c Name     : ":
                   *P1:18,*V2LON,"13",*HOFF,". Zero Account         : ":
                   *P1:19,*V2LON,"14",*HOFF,". Sub Account Print    : ":
                   *P1:20,*V2LON,"15",*HOFF,". Financial Year       : ":
                   *P1:21,*V2LON,"16",*HOFF,". Period Range         : ":
                   *P1:22,*V2LON,"17",*HOFF,". Use Credit Print(Y/N): ":
                   *P1:23,*V2LON,"18",*HOFF,". Suppress Headings    : ";
SCRA0005  BRANCH    CLEARFLG,SCRA9999
.
SCRA0010  MOVE      SP70,FMLADESC
          MOVE      FMRDLED,KEY2
          CALL      RDFMLA1
.
          MOVE      SP70,FMLBDESC
          MOVE      FMRDREP,KEY2
          CALL      RDFMLB1
.
          MOVE      SP70,FMUDDES
          MOVE      FMRDRS,KEY3
          CALL      RDFMUD1
.
          MATCH     SP70,FMRDPT
          GOTO      SCRA1000 IF EQUAL
          PACK      KEY5,FMRDPT,SP3
          CALL      RDIBES1
          COMPARE   ZERO,OVRCD
          GOTO      SCRA1100 IF EQUAL
.
SCRA1000  MOVE      SP70,IBESSEQ
.
SCRA1100  MOVE      SP70,FMLVDESC
          PACK      KEY3,FMRDLEV
          MATCH     "000",FMRDLEV
          GOTO      SCRA1200 IF EQUAL
          CALL      RDFMLV1
          COMPARE   ZERO,OVRCD
          GOTO      SCRA1300 IF EQUAL
.
SCRA1200  MOVE      SP70,FMLVDESC
.
SCRA1300  MOVE      SP70,FMBTDESC
          MOVE      FMRDCBT,KEY4
          CALL      RDFMBT1
.
          COMPARE   INSERTFG,CVERT
          GOTO      SCRA1305 IF NOT LESS
          MOVE      FMRDCAS,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
.
SCRA1305  COMPARE   ONE,CHSELCT
          GOTO      SCRA1310 IF EQUAL
          DISPLAY   *P28:6,*V2LON,FMRDDES
SCRA1310  COMPARE   TWO,CHSELCT
          GOTO      SCRA1320 IF EQUAL
          DISPLAY   *P28:7,*V2LON,FMRDLED,SP4,*HOFF,FMLADESC
          COMPARE   "7",INSERTFG
          GOTO      SCRA9999 IF EQUAL
SCRA1320  COMPARE   THREE,CHSELCT
          GOTO      SCRA1330 IF EQUAL
          DISPLAY   *P28:8,*V2LON,FMRDREP,SP4,*HOFF,FMLBDESC
          COMPARE   "8",INSERTFG
          GOTO      SCRA9999 IF EQUAL
SCRA1330  COMPARE   FOUR,CHSELCT
          GOTO      SCRA1340 IF EQUAL
          DISPLAY   *P28:9,*V2LON,FMRDRS,SP3,*HOFF,FMUDDES
          COMPARE   "9",INSERTFG
          GOTO      SCRA9999 IF EQUAL
SCRA1340  COMPARE   FIVE,CHSELCT
          GOTO      SCRA1350 IF EQUAL
          DISPLAY   *P28:10,*V2LON,IBESPR,SP4,*HOFF,IBESSEQ
          COMPARE   "10",INSERTFG
          GOTO      SCRA9999 IF EQUAL
SCRA1350  COMPARE   SIX,CHSELCT
          GOTO      SCRA1360 IF EQUAL
          DISPLAY   *P28:11,*V2LON,FMRDLEV,SP3,*HOFF,FMLVDESC
          COMPARE   "11",INSERTFG
          GOTO      SCRA9999 IF EQUAL
SCRA1360  COMPARE   SEVEN,CHSELCT
          GOTO      SCRA1370 IF EQUAL
          DISPLAY   *P28:12,*V2LON,FMRDFPR
          COMPARE   "12",INSERTFG
          GOTO      SCRA9999 IF EQUAL
SCRA1370  COMPARE   EIGHT,CHSELCT
          GOTO      SCRA1380 IF EQUAL
          DISPLAY   *P28:13,*V2LON,FMRDTPR
          COMPARE   "13",INSERTFG
          GOTO      SCRA9999 IF EQUAL
SCRA1380  COMPARE   NINE,CHSELCT
          GOTO      SCRA1390 IF EQUAL
.
          MOVE      SP70,REPTYPE
          LOAD      REPTYPE,REPTYPEF,REPTYPE1,REPTYPE0     * get description
          DISPLAY   *P28:14,*V2LON,REPTYPEF,*HOFF,SP5,REPTYPE;
          COMPARE   "14",INSERTFG
          GOTO      SCRA9999 IF EQUAL
.
SCRA1390  COMPARE   TEN,CHSELCT
          GOTO      SCRA1400 IF EQUAL
          DISPLAY   *P28:15,*V2LON,FMRDCBT,SP2,*HOFF,FMBTDESC
          MOVE      FMBTDESC,BUDDESC
          COMPARE   "15",INSERTFG
          GOTO      SCRA9999 IF EQUAL
SCRA1400  
          COMPARE   TEN1,CHSELCT
          GOTO      SCRA1500 IF EQUAL
          MOVE      SP70,FMBTDESC
          MOVE      FMRDPBT,KEY4
          CALL      RDFMBT1
          DISPLAY   *P28:16,*V2LON,FMRDPBT,SP2,*HOFF,FMBTDESC
          MOVE      FMBTDESC,ABUDDESC
          COMPARE   "16",INSERTFG
          GOTO      SCRA9999 IF EQUAL
.
SCRA1500  COMPARE   "12",CHSELCT
          GOTO      SCRA1600 IF EQUAL
          MOVE      ADESC0,ADESC
          LOAD      ADESC,FMRDDOP,ADESC1,ADESC2
          DISPLAY   *P28:17,*V2LON,FMRDDOP,SP5,*HOFF,ADESC
.
SCRA1600  COMPARE   "13",CHSELCT
          GOTO      SCRA1700 IF EQUAL
          MOVE      FMRDZER,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
          DISPLAY   *P28:18,*V2LON,YESNO
.
SCRA1700  COMPARE   "14",CHSELCT
          GOTO      SCRA1800 IF EQUAL
          MOVE      ZERO,F1
          MOVE      FMRDSUPP,F1
          MOVE      SUPPTYP0,SUPPTYPE
          LOAD      SUPPTYPE,F1,SUPPTYP1,SUPPTYP2,SUPPTYP3
          DISPLAY   *P28:19,*V2LON,F1,SP1,SUPPTYPE
.
SCRA1800  MOVE      ZERO,FYESNO
          MOVE      FMRDCRIN,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
          DISPLAY   *P28:22,*V2LON,YESNO
.
          MOVE      ZERO,FYESNO
          MOVE      FMRDSHED,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
          DISPLAY   *P28:23,*V2LON,YESNO
.
SCRA9000  CALL      DDAT0000
.
SCRA9999  RETURN
.**********************************************************************
.  DDAT - display date data                            Called By lots
.**********************************************************************
DDAT0000  
          DISPLAY   *P28:20,*V2LON,CURYEAR;
          PACK      KEY6,FMRDLED,CURYEAR,SP70
          CALL      RDFMLC1
          BRANCH    OVRCD,DDAT9999
          LOAD      PEREDAT,PERDFROM,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                            FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO,FMLC09TO:
                            FMLC10TO,FMLC11TO,FMLC12TO,FMLC13TO
          LOAD      PERDESC,PERDFROM,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                            FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE,FMLC09DE:
                            FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:21,*V2LON,PERDFROM,*HOFF,SP1,PERDESC," to ";
.
          COMPARE   ZERO,PERDTO
          GOTO      DDAT9999 IF EQUAL
          LOAD      PEREDAT,PERDTO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                            FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO,FMLC09TO:
                            FMLC10TO,FMLC11TO,FMLC12TO,FMLC13TO
          LOAD      PERDESC,PERDTO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                            FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE,FMLC09DE:
                            FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P50:21,*V2LON,PERDTO,*HOFF,SP1,PERDESC;
.
.
DDAT9999  RETURN
.******************************************************************************
.* DEFV - set up default variables               Called by SELA0000           *
.******************************************************************************
DEFV0000  MOVE      SP70,FMRDDES       * set description
          MOVE      ZERO,FMRDCAS
          MOVE      ZERO,FMRDSHED
.
DEFV9999  RETURN
.******************************************************************************
.* PROC - Enter Report Required                  Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMRDDISS (variable entered)                               *
.******************************************************************************
PROC0000  DISPLAY   *P1:4,"    Report Required      : ",*EF;
          MOVE      ZERO,CHSELCT
          COMPARE   ONE,COPTION
          GOTO      PROC1000 IF NOT EQUAL
          MOVE      ONE,CLEARFLG
.
PROC1000  MOVE      "28",CCOL          * set up screen address
          MOVE      "4",CVERT
.
          MOVE      ZERO,FMRDCAS
          COMPARE   ONE,COPTION        * insert mode ?
          CALL      ARDFFM00 IF EQUAL
.
          COMPARE   ONE,COPTION        * not insert mode ?
          CALL      KRDFFM00 IF NOT EQUAL
.
          MOVE      TWO,REPTYPEF
          LOAD      REPTYPEF,FMRDCAS,ONE
          MOVE      SP70,REPTYPE
          LOAD      REPTYPE,REPTYPEF,REPTYPE1,REPTYPEF0
.
PROC9999  RETURN
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.******************************************************************************
SELA0000  MOVE      ZERO,CCITEM
          MOVE      ZERO,INSERTFG
.
          COMPARE   ONE,ACCEPT
          CALL      DEFV0000 IF EQUAL            * set up default values
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,CCITEM                   * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      REPTQST                      * select/post/cancel ?
          MOVE      ZERO,INSERTFG
.
          COMPARE   ZERO,CCITEM
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,CCITEM
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
          COMPARE   "-2",CCITEM
          GOTO      SELA3000 IF EQUAL            * Run Report ?
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "5",CVERT
          ADD       CCITEM,CVERT
          BRANCH    CCITEM,SELA1100,SELA1200,SELA1300,SELA1400,SELA1500:
                           SELA1600,SELA1700,SELA1800,SELA1900,SELA2000:
                           SELA2100,SELA2200,SELA2300,SELA2700,SELA2400:
                           SELA2500,SELA2750,SELA2800
.
          BRANCH    ACCEPT,SELA0900              * finished accept mode ?
          BEEP                                   * illegal option
.
SELA0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELA0100                     * get next option
.
.---- option 1 ----
.
SELA1100  MATCH     FMRDDES,SP70
          GOTO      SELA1150 IF NOT EQUAL        * description spaces ?
.
          PACK      FMRDDES,UNDLN70
.
SELA1150  KEYIN     *PCCOL:CVERT,*DV,FMRDDES:    * read in description
                    *PCCOL:CVERT,*V2LON,*RV,FMRDDES;
          PACK      FMRDDES,FMRDDES,SP70
.
          MATCH     FMRDDES,SP70
          GOTO      SELA1100 IF EQUAL            * description spaces ?
          MATCH     FMRDDES,UNDLN70
          GOTO      SELA9500 IF EQUAL            * nothing entered ?
          MATCH     FMRDDES,EXITCHAR
          GOTO      SELA9500 IF EQUAL            * EXITCHAR entered ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDDES;
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  MOVE      CVERT,INSERTFG
          MOVE      CCITEM,SCCITEM1
          CALL      KLMAFM00
          MOVE      SCCITEM1,CCITEM
          BRANCH    EXIT,SELA1200,SELA9500
          MOVE      FMLALEDG,FMRDLED
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDLED,*HOFF,SP4,FMLADESC
          GOTO      SELA0100
.
.---- option 3 ----
.
SELA1300  MOVE      CVERT,INSERTFG
          MOVE      CCITEM,SCCITEM1
          CALL      KLMBFM00
          MOVE      SCCITEM1,CCITEM
          BRANCH    EXIT,SELA1300,SELA9500
          MOVE      FMLBRPNO,FMRDREP
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDREP,*HOFF,SP4,FMLBDESC
          GOTO      SELA0100
.
.---- option 4 ----
.
SELA1400  MOVE      CVERT,INSERTFG
          MOVE      CCITEM,SCCITEM1
          CALL      KUDRFM00
          MOVE      SCCITEM1,CCITEM
          BRANCH    EXIT,SELA1400,SELA9500
          MOVE      FMUDSTY,FMRDRS
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDRS,*HOFF,SP3,FMUDDES
          GOTO      SELA0100
.
.---- option 5 ----
.
SELA1500  MOVE      SP70,FMRDPT
          MOVE      CCITEM,SCCITEM1
          MOVE      CVERT,INSERTFG
          CALL      KESCIB00
          MOVE      SCCITEM1,CCITEM
          BRANCH    EXIT,SELA1550,SELA9500
          MOVE      IBESPR,FMRDPT
          DISPLAY   *PCCOL:CVERT,*V2LON,IBESPR,*HOFF,SP4,IBESSEQ
          GOTO      SELA0100
.
SELA1550  DISPLAY   *PCCOL:CVERT,*V2LON,*EL
          GOTO      SELA0100
.
.
.---- option 6 ----
.
SELA1600  MOVE      CVERT,INSERTFG
          MOVE      CCITEM,SCCITEM1
          MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00
          MOVE      SCCITEM1,CCITEM
          BRANCH    EXIT,SELA1650,SELA9500
          MOVE      FMLVCODE,FMRDLEV
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDLEV,*HOFF,SP3,FMLVDESC
          GOTO      SELA0100
.
SELA1650  MOVE      "000",FMRDLEV
          MOVE      SP70,FMLVDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDLEV
          GOTO      SELA0100
.
.---- option 7  ----
.
SELA1700  MOVE      "00000",FMRDFPR
          KEYIN     *PCCOL:CVERT,"00000":
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*DE,FMRDFPR
          ENDSET    FMRDFPR
          APPEND    SP70,FMRDFPR
          RESET     FMRDFPR
          MOVE      CVERT,INSERTFG
          MATCH     SP70,FMRDFPR
          GOTO      SELA1750 IF NOT EQUAL
          MOVE      "00000",FMRDFPR
SELA1750  DISPLAY   *PCCOL:CVERT,*V2LON,FMRDFPR
          GOTO      SELA0100
.
.---- option 8  ----
.
SELA1800  MOVE      "999999",FMRDTPR
          KEYIN     *PCCOL:CVERT,"99999":
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*DE,FMRDTPR
          ENDSET    FMRDTPR
          APPEND    SP70,FMRDTPR
          RESET     FMRDTPR
          MATCH     SP70,FMRDTPR
          GOTO      SELA1850 IF NOT EQUAL
          MOVE      "99999",FMRDTPR
.
SELA1850  DISPLAY   *PCCOL:CVERT,*V2LON,FMRDTPR
          GOTO      SELA0100
.
.---- option  9 ----
.
SELA1900  KEYIN     *P1:24,*V2LON,"1",*HOFF," = ",*DV,REPTYPE1,", ":
                           *V2LON,"2",*HOFF," = ",*DV,REPTYPE0,*EL:
                    *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,REPTYPEF;
          BRANCH    REPTYPEF,SELA1910,SELA1910
          BEEP
          GOTO      SELA1900
.
SELA1910  LOAD      FMRDCAS,REPTYPEF,ONE,ZERO
          MOVE      SP70,REPTYPE
          LOAD      REPTYPE,REPTYPEF,REPTYPE1,REPTYPE0
          DISPLAY   *PCCOL:CVERT,*V2LON,REPTYPEF,*HOFF,SP5,REPTYPE:
                    *P1:24,*EL;
          GOTO      SELA0100
.
.---- option 10 ----
.
SELA2000  MOVE      CVERT,INSERTFG
          MOVE      CCITEM,SCCITEM1
          CALL      KBTYFM00
          MOVE      SCCITEM1,CCITEM
          BRANCH    EXIT,SELA2090,SELA9500
          MOVE      FMBTCODE,FMRDCBT
          MOVE      FMBTDESC,BUDDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDCBT,SP2,*HOFF,FMBTDESC
          GOTO      SELA0100
.
SELA2090  UNPACK    SP70,FMRDCBT,FMBTCODE,FMBTDESC
          UNPACK    SP70,BUDDESC
          GOTO      SELA0100
.
.---- option 11 ----
.
SELA2100  MOVE      CVERT,INSERTFG
          MOVE      CCITEM,SCCITEM1
          CALL      KBTYFM00
          MOVE      SCCITEM1,CCITEM
          BRANCH    EXIT,SELA2190,SELA9500
          MOVE      FMBTCODE,FMRDPBT
          MOVE      FMBTDESC,ABUDDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRDPBT,SP2,*HOFF,FMBTDESC
          GOTO      SELA0100
.
SELA2190  UNPACK    SP70,FMRDPBT,FMBTCODE,FMBTDESC
          UNPACK    SP70,ABUDDESC
          GOTO      SELA0100
.
.---- option 12 ----
.
SELA2200  MOVE      CVERT,INSERTFG
          MOVE      CCITEM,SCCITEM1
          MOVE      ADESC0,ADESC
          DISPLAY   *P1:24,*EL,"Options : ":
                    *V2LON,"0",*HOFF," = ",ADESC0,", ":
                    *V2LON,"1",*HOFF," = ",ADESC1,", ":
                    *V2LON,"2",*HOFF," = ",ADESC2;
          KEYIN     *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*EL,*V2LON,FMRDDOP;
          COMPARE   ZERO,FMRDDOP
          GOTO      SELA2210 IF EQUAL
          LOAD      ADESC,FMRDDOP,ADESC1,ADESC2
          BRANCH    FMRDDOP,SELA2210,SELA2210
          BEEP
          GOTO      SELA2200
.
SELA2210  DISPLAY   *PCCOL:CVERT,*V2LON,FMRDDOP,SP5,*HOFF,ADESC:
                    *P1:24,*EF;
          GOTO      SELA0100
.
.---- option 13 ----
.
SELA2300  MOVE      "Y",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,FMRDZER
          GOTO      SELA0100
.
.---- option 15 ----
.
SELA2400  MOVE      CVERT,INSERTFG
          MOVE      CCITEM,SCCITEM1
          MOVE      CURYEAR,UNDLN70
          CALL      KLMCFM00             * keyin financial year
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          MOVE      SCCITEM1,CCITEM
          BRANCH    EXIT,SELA2450,SELA9500
.
SELA2450  LOAD      FMLCYEAR,EXIT,CURYEAR
          PACK      KEY6,FMLALEDG,FMLCYEAR,SP70
          CALL      RDFMLC1
          PACK      CURYEAR,FMLCYEAR,SP70
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          CALL      DDAT0000
          GOTO      SELA0100
.
.---- option 16 ----
.
SELA2500  MOVE      PERDFROM,FORM2
          KEYIN     *P28:CVERT,*EL:
                    *P28:CVERT,*V2LON,*RV,*DE,FORM2:
                    *P28:CVERT,*DV,FORM2;
          COMPARE   ONE,FORM2            * must be more than zero
          GOTO      SELA2500 IF LESS
.
          MOVE      "12",F2
          ADD       FMLAPERS,F2
          COMPARE   FORM2,F2             * cant be more than max no of periods
          GOTO      SELA2500 IF LESS
.
          MOVE      FORM2,PERDFROM
          MOVE      ZERO,PERDTO
          CALL      DDAT0000
.
.
SELA2600  MOVE      PERDFROM,FORM2
          KEYIN     *P50:CVERT,*EL:
                    *P50:CVERT,*V2LON,*RV,*DE,FORM2:
                    *P50:CVERT,*DV,FORM2;
          COMPARE   ONE,FORM2            * must be more than zero
          GOTO      SELA2600 IF LESS
.
          MOVE      "12",F2
          ADD       FMLAPERS,F2
          COMPARE   FORM2,F2             * cant be more than max no of periods
          GOTO      SELA2600 IF LESS
.
          MOVE      FORM2,PERDTO
          CALL      DDAT0000
          GOTO      SELA0100
.
.---- option 14 ----
.
SELA2700
          DISPLAY   *P1:24,*EL,"Options : ":
                    *V2LON,"0",*HOFF," = ",SUPPTYP0,", ":
                    *V2LON,"1",*HOFF," = ",SUPPTYP1,", ":
                    *V2LON,"2",*HOFF," = ",SUPPTYP2,", ":
                    *V2LON,"3",*HOFF," = ",SUPPTYP3;
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,F1;
          COMPARE   ZERO,F1
          GOTO      SELA2710 IF EQUAL
          BRANCH    F1,SELA2710,SELA2710,SELA2710
          BEEP
          GOTO      SELA2700
.
SELA2710  MOVE      F1,FMRDSUPP
          MOVE      SUPPTYP0,SUPPTYPE
          LOAD      SUPPTYPE,F1,SUPPTYP1,SUPPTYP2,SUPPTYP3
          DISPLAY   *P28:19,*V2LON,F1,SP1,SUPPTYPE:
                    *P1:24,*EL;
          GOTO      SELA0100
.
.---- option 17 ----
.
SELA2750  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,FMRDCRIN
          GOTO      SELA0100
.
.---- option 18 ----
.
SELA2800  MOVE      "Y",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,FMRDSHED
          GOTO      SELA0100
.
. Run Report
.------------
SELA3000  COMPARE   PERDFROM,PERDTO
          GOTO      SELA3100 IF NOT LESS
.
          DISPLAY   *P1:24,*B,*EF:
                    "From Period Cannot Be After To Period - ";
          CALL      HITENTER
          GOTO      SELA0100
.
SELA3100  DISPLAY   *P1:23,*EF
          LOAD      PRTWARN,PERDTO,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN,FMLC05IN:
                                  FMLC06IN,FMLC07IN,FMLC08IN,FMLC09IN,FMLC10IN:
                                  FMLC11IN,FMLC12IN,FMLC13IN
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P1:23,*EL,"    Start : ",*V2LON,CTIMEIS;
          PROC      FMSPR000                     * run report
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P30:23,"Completed : ",*V2LON,CTIMEIS;
          GOTO      SELA0100
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT                     * cancel
          GOTO      SELA9999
.
SELA9999  RETURN
.******************************************************************************
.* POST - Post data                              Called by ML0000             *
.******************************************************************************
POST0000  PACK      KEY3,FMRDCOD,SP70
          MOVE      ZERO,FMRDSTAT           * clear unused variable
          CALL      DEFMRD1                 * delete old record (if possible)
          CALL      WRFMRD1                 * write new record
.
POST9999  RETURN
.******************************************************************************
.* DELT - Delete data                            Called by ML0000             *
.******************************************************************************
DELT0000  PACK      KEY3,FMRDCOD,SP70
          CALL      DEFMRD1                 * delete old record (if possible)
.
DELT9999  RETURN
+
.******************************************************************************
.         Subroutine to Select Item, Save Report, Run Report or Exit   
.------------------------------------------------------------------------------
.
REPTQST   MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"S",*HOFF,")ave Report,":
                    " (",*V2LON,"R",*HOFF,")un Report,":
                    " e(",*V2LON,"X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      REPTQST IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  X",CCITEMD
          GOTO      REPTQST1 IF EQUAL
.
          MATCH     "  S",CCITEMD
          GOTO      REPTQST2 IF EQUAL
.
          MATCH     "  R",CCITEMD
          GOTO      REPTQST3 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      REPTQSTE IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          MOVE      CCITEMD,CHSELCT
          COMPARE   ONE,CCITEM
          GOTO      REPTQSTE IF LESS
.
          RETURN
.
REPTQSTE  BEEP
          GOTO      REPTQST
.
REPTQST1  MOVE      "-1",CCITEM
          RETURN
.
REPTQST2  MOVE      "0",CCITEM
          RETURN
.
REPTQST3  MOVE      "-2",CCITEM
          RETURN
+
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
RRDFFM00  COMPARE   ZERO,COPYFLAG
          GOTO      RRDFFM10 IF NOT EQUAL
          DISPLAY   *P1:4,"    Report Required      : ",*EF;
          GOTO      RRDFFM99
.
RRDFFM10  CALL      SCRB0000
RRDFFM99  RETURN
.
.
RLMAFM00  CALL      SCRA0000
          RETURN
.
RLMBFM00  CALL      SCRA0000
          RETURN
.
RLEVFM00  CALL      SCRA0000
          RETURN
.
RUDRFM00  CALL      SCRA0000
          RETURN
.
RBTYFM00  CALL      SCRA0000
          RETURN
.
RESCIB00  CALL      SCRA0000
          RETURN
.
RLMCFM00  MOVE      ZERO,CHSELCT
          CALL      SCRA0000
          RETURN
.
          INC       PRCFMSPR           * Report Printing Procedure
.
          INC       FMSAMAIO/INC
          INC       FMSBTYIO/INC
          INC       FMSCSAIO/INC
          INC       FMSCONIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMBIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLEVIO/INC
          INC       FMSUDRIO/INC
          INC       FMSRDFIO/INC
.
          INC       FMSBTYKY
          INC       FMSLMAKY
          INC       FMSLMBKY
          INC       FMSLMCKY
          INC       FMSLEVKY
          INC       FMSUDRKY
          INC       FMSRDFKY
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       IBAESCKY
          INC       IBAESCIO/INC
.
