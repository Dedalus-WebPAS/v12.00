. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS98                                             *
. * Desc      :   Parameter Maintenance                                *
. **********************************************************************
. * Date      :   19.09.1990                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.09.02 04.09.2007 Sandra Barcham  CAR 149415                     *
. *          Using Dissection Code - Sector Code Reporting             *
. * V9.09.01 30.07.2007 Sandra Barcham  CAR 146314                     *
. *          Re-use DVC Cheque layout for Modbury                      *
. **********************************************************************
. * V9.04.01 20.06.2006 Sandra Barcham                                 *
. *          Added FMCOEXTR Extra character for oracle financial       *
. *          Extract                                                   *
. **********************************************************************
. * V9.03.01  08.01.2004  Mike Laming  CAR 45907                       *
. *           Added Creditor Exempt Bas code.                          *
. *           Add FMCOCSRL (Indiv.Receipt Rel.Flag) to IBA Quotes Scrn *
. **********************************************************************
. * VF.09.01  25.03.2003 Davin  CAR/Quote: 18326                       *
. *           Added FMCOUBPP - Update Batches for Proposed Payments    *
. * VF.09.B02 12.12.2000 Charles Handaya                               *
. *           Add new Cheque Layout for Mercy Hospital Dunedin (MHD) NZ*
. * VF.09.B01 15.11.2000 Sandra Barcham                                *
. *           Added Pay as you go BAS Code                             *
. **********************************************************************
. * VF.01.02  23.10.2000 Charles Handaya                               *
. *           Add new Cheque Layout for Hawkes Bay (HWK) copied from   *
. *                                                             0=std  *
. * VF.01.01  04.08.2000 Charles Handaya                               *
. *           Add new Cheque Layout for Southland (STH)                *
. *           srf 647056                                               *
. **********************************************************************
. * VF.00.06  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.05  03.08.1999 Sandra Barcham                                *
. *           Add Batch update in progrss indicator                    *
. *           srf 630614                                               *
. * VF.00.04  11.07.1999 Sandra Barcham                                *
. *           Add new layout for Latrobe Regional                      *
. * VF.00.03  01.07.1999 Sandra Barcham                                *
. *           Add new layout for standard laser                        *
. * VF.00.02  13.05.1999 Sandra Barcham                                *
. *           New Cheque layout for SVB                                *
. *           Quote 9446                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for new fmsdisky                              *
. * VF.00.00  28.10.1998 Sandra Barcham                                *
. *           Remove cglcontf parameters no longer required            *
. **********************************************************************
.
.$$$$$$
.
.  System Parameter Maintenance (IBAFMS98)
.  ---------------------------------------
.
.  - Program description.
.    This is a maintenance program which modifies system control parameters 
.    for the Accounting system.  All parameters are stored in CONTROL FILE 
.
.  - Initialisation
.      - display screen header
.      - open CONTROLF
. 
.  - Processing Options
. 
.      0 = Exit
.
.      1 = System Audits
.          - read and display audit parameters from CONTROLF.  Currently none
.            are used, there are 26 in two columns on one screen.
.          - user can select audit and turn yes or no.
.
.      2 = Subjective Parameter Maintenance
.          - read and display Subjective parameters 
.          - user can select the Subjective parameters and alter them
.            within their ranges.
.          - user can select which parameters to change and post if required.
.
.      3 = Account Code Fields
.          - read and display parameters and display the appropiate 
.            description to the values 
.          - user can select which parameters to change and post if required.
. 
.      4 = I.B.A. Controlled Screen
.          - read and display IBA parameters and use small individual routines
.            to display a description to the values
.          - user can select the IBA parameters and alter them within their
.            ranges.
.          - write any changes at users choice.
. 
.  - END
.
.*****************************************************************************
.$$$$$$
          INC       FMSSTDDF
.
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
.
          INC       FMSAMAFD/INC
          INC       FMSBPFFD/INC
          INC       FMSBTYFD/INC
          INC       FMSCONFD/INC
          INC       FMSCODFD/INC
          INC       FMSCSAFD/INC
          INC       FMSDISFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMBFD/INC
          INC       FMSLMCFD/INC
          INC       FMSRESFD/INC
          INC       FMSSBAFD/INC
.
          INC       IBABASFD/INC
          INC       IBACONFD/INC
          INC       IBAGSTFD/INC
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
HACCNT    FORM     1        95         * INVENTORY INTERFACE * in INVCONFD
.
DANSX     INIT      "   "
.
STATTYP   INIT      "       "
STATTYP0  INIT      "Accrual"
STATTYP1  INIT      "Cash   "
.
.*****************************************************************************
.                           VARIABLE DECLARATIONS
.*****************************************************************************
.
CVERT98   FORM      2
CCOL98    FORM      2
CONAMEX   DIM       25
COUNT     FORM      1
DANS1     DIM       3
DANS2     DIM       3
DANS3     DIM       3
DANS4     DIM       3
DANS5     DIM       3
DANS6     DIM       3
DANS7     DIM       3
DANS8     DIM       3
DANS9     DIM       3
DANS10    DIM       3
DANS      DIM       1
DIM20     DIM       20
FORM5     FORM      5
FORM6P6   FORM      6.6
FORM8     FORM      8
OPTIONA   FORM      2
OPTIONC   FORM      2
MAINOPT   FORM      2
RECPTDIR  DIM       20
SCRNO     FORM      2
TOTALON   FORM      2                  * total no. of fields active
.
LAYDESC   INIT      "     "
LAYDESC0  INIT      "Std"
LAYDESC1  INIT      "HLC"
LAYDESC2  INIT      "HAS"
LAYDESC3  INIT      "WGH"
LAYDESC4  INIT      "MOD"
LAYDESC5  INIT      "TAM"
LAYDESC6  INIT      "ACC"
LAYDESC7  INIT      "CHC"
LAYDESC8  INIT      "PVH"
LAYDESC9  INIT      "BUD"
LAYDES10  INIT      "HDH"
LAYDES11  INIT      "SAR"
LAYDES12  INIT      "MAT"
LAYDES13  INIT      "Std"
LAYDES14  INIT      "HUT"
LAYDES15  INIT      "WWH"
LAYDES16  INIT      "HSP"
LAYDES17  INIT      "STV"
LAYDES18  INIT      "SVB"
LAYDES19  INIT      "LAS"
LAYDES20  INIT      "LTR"
LAYDES21  INIT      "STH"
LAYDES22  INIT      "HWK"
LAYDES23  INIT      "MHD"
.
INTDESC   INIT      "                           "
INTDESC0  INIT      "Anne Caudle Centre"
INTDESC1  INIT      "Southland Area Health Board"
.
PRTDESC   INIT      "                     "
PRTDESC0  INIT      "as per Report Style"
PRTDESC1  INIT      "as per Decimal Places"
.
EXPTYP    INIT      "                           "
EXPTYP0   INIT      "Goods Received Not Invoiced"
EXPTYP1   INIT      "Goods Ordered Not Invoiced"
.
BUDVAR    INIT      "                            "
BUDVAR0   INIT      "Actual > Budget +ve Variance"
BUDVAR1   INIT      "Actual > Budget -ve Variance"
.
TACC      INIT      "                             "
TACC0     INIT      "No Access Allowed            "
TACC1     INIT      "Input Invoices if Ok'd by DOF"
TACC2     INIT      "Input Invoices anytime       "
TACC3     INIT      "Allow Full Access            "
.
NEZSEC    FORM      "0"
COMD      INIT      "                         "
COMD0     INIT      "Received but Not Invoiced"
COMD1     INIT      "Raised but Not Received  "
.
FORBUD    INIT      "                "
FORBUD0   INIT      "No Update Forced"
FORBUD1   INIT      "Update Act/Budg "
FORBUD2   INIT      "Update Budgets  "
.
PRGID     INIT      "IBAFMS98"
PRGNAM    INIT      "Parameter Maintenance"
VERSION   INIT      "V12.00.00"
.*****************************************************************************
.         MAIN LINE 
.*****************************************************************************
ML0000    CALL      INIT0000           * display header,open required files
.
ML1000    CALL      SELN0000
          BRANCH    MAINOPT,ML2000,ML3000,ML4000,ML8000,ML8300:
                            ML8500,ML7000,ML5000,ML6000,ML8800:
                            ML8900
          GOTO      ML9999
.
.---- Do The Audit Flags Screen ----
.
ML2000    CALL      READ0000           * read control variables
          CALL      DPAD0000           * display audits from controlf 
          CALL      ADPS0000           * audit screen position keyin
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write audits to controlf
          GOTO      ML1000
.
.---- Do The Subjective Parameters Screen ----
.
ML3000    CALL      READ0000           * read control variables
          CALL      DUSB0000           * display user screen 1
.
          MATCH     "1426",PASSCODE
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL;
            CALL      HITENTER
            GOTO      ML1000
          ENDIF
          CALL      CPWD0000
          BRANCH    EXIT,ML1000
.
          CALL      GUSB0000           * get user screen 1
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write user parameters
          GOTO      ML1000
.
.---- Do The Account Code Fields Screen ----
.
ML4000    CALL      READ0000           * read control variables
          CALL      DUSR0000           * display user screen 1
          CALL      GUSR0000           * get user screen 1
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write user parameters
          GOTO      ML1000
.
.---- Do The Journal Screen ----
.
ML5000    CALL      READ0000           * read control variables
          CALL      CPWD0000           * check pass word
          BRANCH    EXIT,ML1000
          CALL      DJOU0000           * display user screen 1
          CALL      GJOU0000           * get user screen 1
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write user parameters
          GOTO      ML1000
.
.---- Do The Batch Control Screen ---
.
ML6000    CALL      READ0000           * read control variables
          CALL      CPWD0000           * check pass word
          BRANCH    EXIT,ML1000
          CALL      DBCS0000           * display Batch screen
          CALL      GBCS0000           * Get Batch options post cancel select
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write parameter options
          GOTO      ML1000
.
.---- Do The IBA  Controlled Screen 1 ----
.
ML7000    CALL      READ0000           * read control variables
          CALL      CPWD0000           * check pass word
          BRANCH    EXIT,ML1000
          CALL      DIBA0000           * display IBA screen 1
          CALL      GIBA0000           * Get IBA options post cancel select
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write IBA parameter options
          GOTO      ML1000
.
.---- Dissection Codes for Control Accounts ----
.
ML8000    CALL      GDIS0000           * do screen
          GOTO      ML1000
.
.---- extract balance params ----
.
ML8300    CALL      READ0000
          CALL      EBAL0000           * do screen
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write IBA parameter options
          GOTO      ML1000
.
.---- User Controlled Screen ----
.
ML8500    CALL      USER0000           * do screen
          GOTO      ML1000
.
.---- Do The IBA Controlled Screen 5 ----
.
ML8800    CALL      READ0000           * read control variables
          CALL      CPWD0000           * check pass word
          BRANCH    EXIT,ML1000
          CALL      DQUO0000           * display IBA screen 1
          CALL      GQUO0000           * Get IBA options post cancel select
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write IBA parameter options
          GOTO      ML1000
.
.---- Do The IBA Controlled Screen 6 ----
.
ML8900    CALL      READ0000           * read control variables
          CALL      CPWD0000           * check pass word
          BRANCH    EXIT,ML1000
          CALL      DIB60000           * display IBA screen 1
          CALL      GIB60000           * Get IBA options post cancel select
          BRANCH    EXIT,ML1000
          CALL      WRIT0000           * write IBA parameter options
          GOTO      ML1000
.
ML9999    CHAIN       PGM
.*****************************************************************************
.                                  INIT0000
.*****************************************************************************
INIT0000  CALL      DISPHEAD
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
.
          DISPLAY   *P64:24,"fmscodaf";
          OPEN      FMSCODA1,"fmscodaf"
.
          DISPLAY   *P64:24,"fmscodaf";
          OPEN      FMSCODA2,"fmscodaf"
.
          DISPLAY   *P64:24,"fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
.
          DISPLAY   *P64:24,"fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmsresaf";
          OPEN      FMSRESA1,"fmsresaf"
.
          DISPLAY   *P64:24,"fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
          OPEN      FMSAMAA4,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmssbaaf";
          OPEN      FMSSBAA1,"fmssbaaf"
          OPEN      FMSSBAA2,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmsbtyaf";
          OPEN      FMSBTYA1,"fmsbtyaf"
.
          DISPLAY   *P64:24,"fmslmbaf";
          OPEN      FMSLMBA1,"fmslmbaf"
.
          DISPLAY   *P64:24,"fmsbpfaf";
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          OPEN      IBAGSTA2,"ibagstaf"
.
          DISPLAY   *P64:24,"ibabasaf";
          OPEN      IBABASA1,"ibabasaf"
.
INIT9999  RETURN
.*****************************************************************************
.                                  SELN0000
.   select main menu options and store in MAINOPT and branch in main line
.*****************************************************************************
SELN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF," = Exit":
                    *P1:5,*V2LON," 1",*HOFF," = System Audits":
                    *P1:6,*V2LON," 2",*HOFF," = Subjective Parameters":
                    *P1:7,*V2LON," 3",*HOFF," = Account Code Fields":
                    *P1:8,*V2LON," 4",*HOFF," = ":
                                       "Dissection Codes for Control Accounts":
                    *P1:9,*V2LON," 5",*HOFF," = Extract Balances Parameters":
                   *P1:10,*V2LON," 6",*HOFF," = User Controlled Screen":
                   *P1:11,*V2LON," 7",*HOFF:
                          " = I.B.A. Controlled Screen 1 (General Parameters)":
                   *P1:12,*V2LON," 8",*HOFF:
                          " = I.B.A. Controlled Screen 2 (Journal Parameters)":
                   *P1:13,*V2LON," 9",*HOFF:
                          " = I.B.A. Controlled Screen 3 (Batch Parameters)":
                   *P1:14,*V2LON,"10",*HOFF:
                          " = I.B.A. Controlled Screen 4 (Quote Screen)":
                   *P1:15,*V2LON,"11",*HOFF:
                          " = I.B.A. Controlled Screen 5 (General Screen 2)":
                   *P1:24,*EL,"Select Option : ";
.
SELN2000  KEYIN     *P17:24,"__":
                    *P17:24,*V2LON,MAINOPT
          COMPARE   ZERO,MAINOPT                 * user wants to exit ?
          GOTO      SELN9999 IF EQUAL
          BRANCH    MAINOPT,SELN9999,SELN9999,SELN9999,SELN9999,SELN9999:
                            SELN9999,SELN9999,SELN9999,SELN9999,SELN9999:
                            SELN9999
          BEEP                                   * illegal option
          GOTO      SELN2000
.
SELN9999  RETURN
.*****************************************************************************
.         DUSB0000                               Called By : ML0000
.         Display audits from controlf file
.*****************************************************************************
DUSB0000  DISPLAY   *P55:3,*EF,*V2LON,"Subjective Parameters":
                    *P1:4,*V2LON," 1",*HOFF,". Separate CC/Subj     (Y/N)  :":
                    *P50:4,"Separator Character :":
                    *P1:5,*V2LON," 2",*HOFF,". Subjective Code Length      :":
                    *P1:6,*V2LON," 3",*HOFF,". Cost Centre Code Length     :":
                    *P1:7,*V2LON," 4",*HOFF,". Subjective Abb. Desc Length :":
                    *P1:8,*V2LON," 5",*HOFF,". Cost Centre Abb. Desc Length:":
                    *P1:9,*V2LON," 6",*HOFF,". Subjective Report Number    :":
                   *P1:10,*V2LON," 7",*HOFF,". Cost Centre Report Number   :":
                   *P5:12,*V2LON,"WARNING - These details should not be ":
                          *P5:13,"          altered after system setup";
.
          MOVE      SP70,FMLBDESC
          PACK      KEY2,FMSUUD7A
          REP       " 0",KEY2
          CALL      RDFMLB1
.
          MOVE      DYES,DANSX
          BRANCH    FMSUUD2A,DUSB0100
          MOVE      DNO,DANSX
          MOVE      SP70,FMSUUD2B
.
DUSB0100  DISPLAY   *P35:4,*V2LON,DANSX,*P72:4,FMSUUD2B:
                    *P35:5,FMSUUD3A,*P35:6,FMSUUD4A,*P35:7,FMSUUD5A:
                    *P35:8,FMSUUD6A,*P35:9,FMSUUD7A,*HOFF,SP2,FMLBDESC;
          MOVE      SP70,FMLBDESC
          PACK      KEY2,FMSUUD8A
          REP       " 0",KEY2
          CALL      RDFMLB1
.
          DISPLAY   *V2LON,*P35:10,FMSUUD8A,*HOFF,SP2,FMLBDESC;
.
DUSB9999  RETURN
.*****************************************************************************
.         GUSB0000                               Called By : ML0000
.         Allow user to modify data in Subjective screen
.*****************************************************************************
GUSB0000  CALL      MAINQST                      * select item, post, cancel,
          COMPARE   CCITEM,ZERO
          GOTO      GUSB9000 IF EQUAL            * post
.
          COMPARE   "-1",CCITEM
          GOTO      GUSB9500 IF EQUAL            * cancel
.
          MOVE      "35",CCOL98                  * get screen address
          MOVE      "3",CVERT98
          ADD       CCITEM,CVERT98
          BRANCH    CCITEM,GUSB0200,GUSB0300,GUSB0300,GUSB0300:
                           GUSB0300,GUSB0300,GUSB0300
          BEEP                                   * illegal option
          GOTO      GUSB0000
.
.---- option 2 ----
.
GUSB0200  MOVE      CVERT98,CVERT
          MOVE      CCOL98,CCOL
          MOVE      "_",DEFYESNO
          CALL      YORN0000                     * get yes/no
          MOVE      FYESNO,FMSUUD2A
          MOVE      SP70,FMSUUD2B
          DISPLAY   *P72:CVERT,*EL;
          COMPARE   ONE,FMSUUD2A
          GOTO      GUSB0000 IF NOT EQUAL        * no entered ?
.
          KEYIN     *P72:CVERT98,"_":            * get separator
                    *P72:CVERT98,*V2LON,FMSUUD2B,*EL
          PACK      FMSUUD2B,FMSUUD2B,SP70
          GOTO      GUSB0000
.
.---- option 3..8 ---
.
GUSB0300  KEYIN     *PCCOL98:CVERT98,"__",*EL:
                    *PCCOL98:CVERT98,*V2LON,FORM2:
                    *PCCOL98:CVERT98,*DV,FORM2
          COMPARE   FORM2,ZERO
          GOTO      GUSB0310 IF LESS   * entry greater than zero
.
          DISPLAY   *P1:24,*EL,*B,"Entry Must Be Greater Than Zero - ";
          CALL      HITENTER
          GOTO      GUSB0300
.
GUSB0310  STORE     FORM2,CCITEM,FMSUUD2A,FMSUUD3A,FMSUUD4A:
                                 FMSUUD5A,FMSUUD6A,FMSUUD7A,FMSUUD8A
          BRANCH    CCITEM,GUSB0000,GUSB0350,GUSB0350,GUSB0360:
                           GUSB0360,GUSB0370,GUSB0370
.
GUSB0350  MOVE      FMSUUD3A,F2
          ADD       FMSUUD4A,F2
          COMPARE   "12",F2
          GOTO      GUSB0000 IF LESS   * lengths < 12 ?
.
          DISPLAY   *P1:24,*EL,*B:
                    "Sum of Subj and CC Code Lengths Must Be Less Than 12 - ";
          CALL      HITENTER
          GOTO      GUSB0300
.
GUSB0360  MOVE      FMSUUD5A,F2
          ADD       FMSUUD6A,F2
          COMPARE   "35",F2
          GOTO      GUSB0000 IF LESS   * length < 35 ?
.
          DISPLAY   *P1:24,*EL,*B:
                    "Sum of Abbrev. Desc. Lengths Must Be Less Than 35 - ";
          CALL      HITENTER
          GOTO      GUSB0300
.
GUSB0370  MOVE      SP70,FMLBDESC
          PACK      KEY2,FORM2,SP70
          REP       " 0",KEY2
          CALL      RDFMLB1
          BRANCH    OVRCD,GUSB0390
          DISPLAY   *P39:CVERT98,FMLBDESC;
.
          COMPARE   FMSUUD7A,FMSUUD8A
          GOTO      GUSB0000 IF NOT EQUAL        * report numbers different ?
.
          DISPLAY   *P1:24,*EL,*B:
                    "Subj and CC Code Report Numbers Must Not Be Equal - ";
          CALL      HITENTER
          GOTO      GUSB0300
.
GUSB0390  DISPLAY   *P1:24,*EL,*B,"Report Does Not Exist - ";
          CALL      HITENTER
          GOTO      GUSB0300
.
.
GUSB9000  MOVE      ZERO,EXIT
          GOTO      GUSB9999
.
GUSB9500  MOVE      ONE,EXIT
.
GUSB9999  RETURN
.*****************************************************************************
.         DPAD0000                               Called By : ML0000
.         Display audits from controlf file
.*****************************************************************************
DPAD0000  DISPLAY   *P55:3,*EF,*V2LON,"System Audits",*EF:
                  *P1:4,*V2LON," 1",*HOFF,". Account Master File (fmsamaaf) :":
                  *P1:5,*V2LON," 2",*HOFF,". Subjective File     (fmssbaaf) :":
                  *P1:6,*V2LON," 3",*HOFF,". Cost Centre File    (fmsccaaf) :":
                  *P1:7,*V2LON," 4",*HOFF,". Ledger Master File  (fmslmaaf) :":
                  *P1:8,*V2LON," 5",*HOFF,". Audit E (Not Used)             :":
                  *P1:9,*V2LON," 6",*HOFF,". Creditor Master File(apsmasaf) :":
                 *P1:10,*V2LON," 7",*HOFF,". Budgets  (fmsbudaf & fmsbpfaf) :":
                 *P1:11,*V2LON," 8",*HOFF,". Audit H (Not Used)             :":
                 *P1:12,*V2LON," 9",*HOFF,". Audit I (Not Used)             :":
                 *P1:13,*V2LON,"10",*HOFF,". Audit J (Not Used)             :":
                 *P1:14,*V2LON,"11",*HOFF,". Audit K (Not Used)             :":
                 *P1:15,*V2LON,"12",*HOFF,". Audit L (Not Used)             :"
.
          MOVE      ZERO,FORM2
          MOVE      THREE,CVERT98
          MOVE      "38",CCOL98
.
DPAD1000  ADD       ONE,FORM2
          ADD       ONE,CVERT98
          COMPARE   "13",FORM2
          GOTO      DPAD9999 IF EQUAL            * any more data ?
.
DPAD2000  LOAD      COUNT,FORM2,FMSAUDA,FMSAUDB,FMSAUDC,FMSAUDD: 
                    FMSAUDE,FMSAUDF,FMSAUDG,FMSAUDH,FMSAUDI,FMSAUDJ:
                    FMSAUDK,FMSAUDL
          MOVE      DNO,DANSX
          LOAD      DANSX,COUNT,DYES
          DISPLAY   *PCCOL98:CVERT98,*V2LON,DANSX;   * display data
          GOTO      DPAD1000
.
DPAD9999  RETURN
.*****************************************************************************
.         ADPS0000                               Called By ML0000
.         Audit Post and Select or cancel items
.*****************************************************************************
ADPS0000  CALL      MAINQST            * post cancel or select item
          COMPARE   ZERO,CCITEM
          GOTO      ADPS7000 IF EQUAL
.
          COMPARE   "-1",CCITEM
          GOTO      ADPS8000 IF EQUAL
.
          MOVE      THREE,CVERT98
          MOVE      "38",CCOL98
          ADD       CCITEM,CVERT98
          BRANCH    CCITEM,ADPS1000,ADPS1000,ADPS1000,ADPS1000:
                           ADPS1000,ADPS1000,ADPS1000,ADPS1000:
                           ADPS1000,ADPS1000,ADPS1000,ADPS1000
          BEEP                                   * illegal option
          GOTO      ADPS0000
.
.---- execute option ----
.
ADPS1000  MOVE      CVERT98,CVERT
          MOVE      CCOL98,CCOL
          MOVE      "_",DEFYESNO
          CALL      YORN0000                     * get yes/no
.
          STORE     FYESNO,CCITEM,FMSAUDA,FMSAUDB,FMSAUDC,FMSAUDD:
                                  FMSAUDE,FMSAUDF,FMSAUDG,FMSAUDH:
                                  FMSAUDI,FMSAUDJ,FMSAUDK,FMSAUDL
          GOTO      ADPS0000
.
.
ADPS7000  MOVE      ZERO,EXIT 
          GOTO      ADPS9999
.
ADPS8000  MOVE      ONE,EXIT
.
ADPS9999  RETURN
.*****************************************************************************
.         DIBA0000                               Called By ML0000
.         Read and display IBA parameters
.*****************************************************************************
. commented out display - who knows if we will ever use this crap
....                *P1:9,*V2LON," 6",*HOFF:
....                       ". Current  Period File Link         :":
....               *P1:10,*V2LON," 7",*HOFF:
....                       ". Previous Period File Link         :":
....               *P1:11,*V2LON," 8",*HOFF:
....                       ". Current  Dissection File Link     :":
....               *P1:12,*V2LON," 9",*HOFF:
....                       ". Previous Dissection File Link     :":
....               *P1:13,*V2LON,"10",*HOFF:
....                       ". Current  Responsibility File Link :":
....               *P1:14,*V2LON,"11",*HOFF:
....                       ". Previous Responsibility File Link :":
....               *P1:14,*V2LON,"11",*HOFF:
....                       ". Update First Level Totals   (Y/N) :":
....               *P1:15,*V2LON,"12",*HOFF:
....                       ". Responsibility Summary      (Y/N) :":
.
DIBA0000  READ      CONTROLF,TWO;*4,CONAME,*182,CONAMEX
          READ      CONTROLF,THIRTY6;*15,RECPTDIR
.
          MOVE      LAYDESC0,LAYDESC
          LOAD      LAYDESC,FMCOAPCH,LAYDESC1,LAYDESC2,LAYDESC3,LAYDESC4:
                                     LAYDESC5,LAYDESC6,LAYDESC7,LAYDESC8:
                                     LAYDESC9,LAYDES10,LAYDES11,LAYDES12:
                                     LAYDES13,LAYDES14,LAYDES15,LAYDES16:
                                     LAYDES17,LAYDES18,LAYDES19,LAYDES20:
                                     LAYDES21,LAYDES22,LAYDES23
          PACK      LAYDESC,LAYDESC,SP70
.
          MOVE      DNO TO DANS1
          LOAD      DANS1 WITH HACCNT OF DYES
.
DIBA0100  DISPLAY   *P55:3,*EF,*V2LON,"I.B.A Control Screen 1",*HOFF:
                    *P1:4,*V2LON," 1",*HOFF:
                           ". Menu Program                      :":
                    *P1:5,*V2LON," 2",*HOFF:
                           ". Security Key                      :":
                    *P1:6,*V2LON," 3",*HOFF:
                           ". IBAFMS98 Password                 :":
                    *P1:7,*V2LON," 4",*HOFF:
                           ". Accounting System Data Directory  :":
                    *P1:8,*V2LON," 5",*HOFF:
                           ". Accounting SQL Directory          :":
                *P1:9,*V2LON," 6",*HOFF,". Accounting Batch Pickup Directory :":
               *P1:10,*V2LON," 7",*HOFF,". Company Name in ANSWER            :":
               *P1:11,*V2LON," 8",*HOFF,". Company Name in IBAMENU           :":
               *P1:12,*V2LON," 9",*HOFF,". Combined Cheque Layout            :":
                   *P1:13,*V2LON,"10",*HOFF:
                           ". SQL Report Run Command            :":
                   *P1:14,*V2LON,"11",*HOFF:
                           ". Stat-Post Write to RSF File (Y/N) :":
                   *P1:15,*V2LON,"12",*HOFF:
                           ". Payroll Interface File Type       :":
                   *P1:16,*V2LON,"13",*HOFF:
                           ". Print Stat Account Format         :":
                   *P1:17,*V2LON,"14",*HOFF:
                           ". Default Account in IBAAPS28 & 30  :":
                   *P1:18,*V2LON,"15",*HOFF:
                           ". Committed Expenditure Type        :":
                   *P1:19,*V2LON,"16",*HOFF:
                           ". Actual > Budget Variance Display  :":
                   *P1:20,*V2LON,"17",*HOFF:
                           ". Trans Program Status in Prop Pay  :":
                   *P1:21,*V2LON,"18",*HOFF:
                           ". Using Inventory Interface         :":
                    *P41:4,*V2LON,HMENUFMS,*P41:5,HSECUFMS:
                    *P41:6,HSECRFMS,*P41:7,HDATAFMS,*P41:8,HDATASQL:
                    *P41:9,RECPTDIR:
                    *P41:10,*V2LON,CONAMEX,*P41:11,CONAME:
                    *P41:12,FMCOAPCH,*P44:12,*HOFF,LAYDESC
.
          MOVE      ZERO,F1
          MOVE      FMCOINFF,F1
          MOVE      INTDESC0,INTDESC
          LOAD      INTDESC,F1,INTDESC1
          PACK      INTDESC,INTDESC,SP70
.
          MOVE      DNO,DANSX
          LOAD      DANSX,FMCOSTPO,DYES
          DISPLAY   *P41:13,*V2LON,HFSQLCMD:
                    *P41:14,*V2LON,DANSX:
                    *P41:15,*V2LON,F1,*HOFF,SP2,INTDESC
.
          MOVE      ZERO,F1
          MOVE      FMCOPSTA,F1
          MOVE      PRTDESC0,PRTDESC
          LOAD      PRTDESC,F1,PRTDESC1
          PACK      PRTDESC,PRTDESC,SP70
.
          DISPLAY   *P41:16,*V2LON,F1,*HOFF,SP2,PRTDESC
.
          MOVE      ZERO,F1
          MOVE      FMCODEFA,F1
          MOVE      DNO,DANSX
          LOAD      DANSX,F1,DYES
.
          DISPLAY   *P41:17,*V2LON,DANSX;
.
          MOVE      ZERO,F1
          REP       " 0",FMCOEXTY
          MOVE      FMCOEXTY,F1
          MOVE      EXPTYP0,EXPTYP
          LOAD      EXPTYP,F1,EXPTYP1
.
          DISPLAY   *P41:18,*V2LON,F1,*HOFF,SP2,EXPTYP;
.
          MOVE      ZERO,F1
          REP       " 0",FMCOBVAR
          MOVE      FMCOBVAR,F1
          MOVE      BUDVAR0,BUDVAR
          LOAD      BUDVAR,F1,BUDVAR1
.
          DISPLAY   *P41:19,*V2LON,F1,*HOFF,SP2,BUDVAR;
.
          MOVE      ZERO,F1
          REP       " 0",FMCOTACC
          MOVE      FMCOTACC,F1
          MOVE      TACC0,TACC
          LOAD      TACC,F1,TACC1,TACC2,TACC3
.
          DISPLAY   *P41:20,*V2LON,F1,*HOFF,SP2,TACC;
          MOVE      ZERO,F1
.
          MOVE      DNO TO DANS1
          LOAD      DANS1 WITH HACCNT OF DYES
          DISPLAY   *P41:21,*V2LON,DANS1;
.
DIBA9999  RETURN
.******************************************************************************
.         GIBA0000                               Called By ML0000
.         get any changes from user to IBA systems parameters
.******************************************************************************
GIBA0000  CALL      MAINQST            * post cancel or select item
.
          COMPARE   ZERO,CCITEM        * Post = 0
          GOTO      GIBA9000 IF EQUAL
          COMPARE   "-1",CCITEM        * Cancel = -1
          GOTO      GIBA9990 IF EQUAL
.
          BRANCH    CCITEM,GIBA1100,GIBA1200,GIBA1300,GIBA1400,GIBA1500:
                           GIBA1600,GIBA1700,GIBA1800,GIBA2000:
                           GIBA2400,GIBA2500,GIBA2600,GIBA2800:
                           GIBA2820,GIBA2830,GIBA2850,GIBA2870,GIBA2890
          BEEP
          GOTO      GIBA0000
.
.---- menu program ----
.
GIBA1100  KEYIN     *P41:4,*EL,*DV,UNDLN8:
                    *P41:4,*V2LON,HMENUFMS:
                    *P41:4,*DV,HMENUFMS
          PACK      HMENUFMS,HMENUFMS,SP70
          GOTO      GIBA0000
.
.---- security key ----
.
GIBA1200  KEYIN     *P41:5,*EL,*DV,UNDLN6:
                    *P41:5,*V2LON,HSECUFMS:
                    *P41:5,*DV,HSECUFMS
          PACK      HSECUFMS,HSECUFMS,SP70
          GOTO      GIBA0000
.
.---- IBAFMS98 password ----
.
GIBA1300  KEYIN     *P41:6,*EL,*DV,UNDLN8:
                    *P41:6,*V2LON,HSECRFMS:
                    *P41:6,*DV,HSECRFMS
          PACK      HSECRFMS,HSECRFMS,SP70
          GOTO      GIBA0000
.
.---- accounting data directory ----
.
GIBA1400  DISPLAY   *P1:24,*EL,*V2LON:
                    "** Note : Directory must be full path & ":
                    " have a SLASH as the last character **"
.
          KEYIN     *P41:7,*DV,UNDLN20:
                    *P41:7,*V2LON,HDATAFMS,*EL:
                    *P1:24,*EL;
          PACK      HDATAFMS,HDATAFMS,SP70
          GOTO      GIBA0000
.
.---- accounting SQL directory ----
.
GIBA1500  DISPLAY   *P1:24,*EL,*V2LON:
                    "** Note : Directory must be full path & ":
                    " have a SLASH as the last character **"
.
          KEYIN     *P41:8,*DV,UNDLN20:
                    *P41:8,*V2LON,HDATASQL,*EL:
                    *P1:24,*EL;
          PACK      HDATASQL,HDATASQL,SP70
          GOTO      GIBA0000
.
.---- etc ----
.
GIBA1600  KEYIN     *P41:9,*EL,*V2LON,RECPTDIR
          GOTO      GIBA0000
.
GIBA1700  KEYIN     *P41:10,*EL,*V2LON,CONAMEX
          GOTO      GIBA0000
.
GIBA1800  KEYIN     *P41:11,*EL,*V2LON,CONAME
          GOTO      GIBA0000
.
GIBA2000  KEYIN     *P1:23,*V2LON,"0",*HOFF,"=",*DV,LAYDESC0,",":
                           *V2LON,"1",*HOFF,"=",*DV,LAYDESC1,",":
                           *V2LON,"2",*HOFF,"=",*DV,LAYDESC2,",":
                           *V2LON,"3",*HOFF,"=",*DV,LAYDESC3,",":
                           *V2LON,"4",*HOFF,"=",*DV,LAYDESC4,",":
                           *V2LON,"5",*HOFF,"=",*DV,LAYDESC5,",":
                           *V2LON,"6",*HOFF,"=",*DV,LAYDESC6,",":
                           *V2LON,"7",*HOFF,"=",*DV,LAYDESC7,",":
                           *V2LON,"8",*HOFF,"=",*DV,LAYDESC8,",":
                           *V2LON,"9",*HOFF,"=",*DV,LAYDESC9,",":
                           *V2LON,"10",*HOFF,"=",*DV,LAYDES10,",":
                           *V2LON,"11",*HOFF,"=",*DV,LAYDES11,",":
                           *V2LON,"12",*HOFF,"=",*DV,LAYDES12,*EL:
                    *P1:24,*V2LON,"13",*HOFF,"=",*DV,LAYDES13,",":
                           *V2LON,"14",*HOFF,"=",*DV,LAYDES14,",":
                           *V2LON,"15",*HOFF,"=",*DV,LAYDES15,",":
                           *V2LON,"16",*HOFF,"=",*DV,LAYDES16,",":
                           *V2LON,"17",*HOFF,"=",*DV,LAYDES17,",":
                           *V2LON,"18",*HOFF,"=",*DV,LAYDES18,",":
                           *V2LON,"19",*HOFF,"=",*DV,LAYDES19,",":
                           *V2LON,"20",*HOFF,"=",*DV,LAYDES20,",":
                           *V2LON,"21",*HOFF,"=",*DV,LAYDES21,",":
                           *V2LON,"22",*HOFF,"=",*DV,LAYDES22,",":
                           *V2LON,"23",*HOFF,"=",*DV,LAYDES23,*EL:
                    *P41:12,"__",*EL:
                    *P41:12,*V2LON,FMCOAPCH:
                    *P41:12,*DV,FMCOAPCH
.
          COMPARE   ZERO,FMCOAPCH
          GOTO      GIBA200A IF EQUAL
          BRANCH    FMCOAPCH,GIBA200A,GIBA200A,GIBA200A,GIBA200A,GIBA200A: 
                             GIBA200A,GIBA200A,GIBA200A,GIBA200A,GIBA200A:
                             GIBA200A,GIBA200A,GIBA200A,GIBA200A,GIBA200A:
                             GIBA200A,GIBA200A,GIBA200A,GIBA200A,GIBA200A:
                             GIBA200A,GIBA200A,GIBA200A
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Cheque Layout - ";
          CALL      HITENTER
          GOTO      GIBA2000
.
GIBA200A  MOVE      LAYDESC0,LAYDESC
          LOAD      LAYDESC,FMCOAPCH,LAYDESC1,LAYDESC2,LAYDESC3,LAYDESC4:
                                     LAYDESC5,LAYDESC6,LAYDESC7,LAYDESC8:
                                     LAYDESC9,LAYDES10,LAYDES11,LAYDES12:
                                     LAYDES13,LAYDES14,LAYDES15,LAYDES16:
                                     LAYDES17,LAYDES18,LAYDES19,LAYDES20:
                                     LAYDES21,LAYDES22,LAYDES23
          DISPLAY   *P44:12,*EL,*V2LON,*HOFF,LAYDESC
          DISPLAY   *P1:23,*EF;
          GOTO      GIBA0000
.
GIBA2400  KEYIN     *P41:13,*EL,*DV,UNDLN20:
                    *P41:13,*V2LON,HFSQLCMD:
                    *P41:13,*DV,HFSQLCMD
          PACK      HFSQLCMD,HFSQLCMD,SP70
          GOTO      GIBA0000
.
.---- stat-post write to rsf file ----
.
GIBA2500  MOVE      "41",CCOL
          MOVE      "14",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCOSTPO
          GOTO      GIBA0000
.
.---- interface file type ----
.
GIBA2600  KEYIN     *P1:24,*V2LON,"0",*HOFF," = ",*DV,INTDESC0,", ":
                           *V2LON,"1",*HOFF," = ",*DV,INTDESC1,*EL:
                    *P41:15,"_",*EL:
                    *P41:15,*V2LON,F1:
                    *P41:15,*DV,F1
          COMPARE   "0",F1
          GOTO      GIBA2610 IF EQUAL
          COMPARE   "1",F1
          GOTO      GIBA2610 IF EQUAL
          BEEP
          GOTO      GIBA2600
.
GIBA2610  MOVE      INTDESC0,INTDESC
          LOAD      INTDESC,F1,INTDESC1
          PACK      INTDESC,INTDESC,SP70
          MOVE      F1,FMCOINFF
          DISPLAY   *P41:15,*V2LON,FMCOINFF,*HOFF,SP2,INTDESC:
                    *P1:24,*EF;
          GOTO      GIBA0000
.
.---- interface file type ----
.
GIBA2800  KEYIN     *P1:24,*V2LON,"0",*HOFF," = ",*DV,PRTDESC0,", ":
                           *V2LON,"1",*HOFF," = ",*DV,PRTDESC1,*EL:
                    *P41:16,"_",*EL:
                    *P41:16,*V2LON,F1:
                    *P41:16,*DV,F1
          COMPARE   "0",F1
          GOTO      GIBA2810 IF EQUAL
          COMPARE   "1",F1
          GOTO      GIBA2810 IF EQUAL
          BEEP
          GOTO      GIBA2800
.
GIBA2810  MOVE      PRTDESC0,PRTDESC
          LOAD      PRTDESC,F1,PRTDESC1
          PACK      PRTDESC,PRTDESC,SP70
          MOVE      F1,FMCOPSTA
          DISPLAY   *P41:16,*V2LON,FMCOPSTA,*HOFF,SP2,PRTDESC:
                    *P1:24,*EF;
          GOTO      GIBA0000
.
.
.---- stat-post write to rsf file ----
.
GIBA2820  MOVE      "41",CCOL
          MOVE      "17",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCODEFA
          GOTO      GIBA0000
.
.---- committed expenditure type ----
.
GIBA2830  KEYIN     *P1:24,*V2LON,"0",*HOFF," = ",*DV,EXPTYP0,", ":
                           *V2LON,"1",*HOFF," = ",*DV,EXPTYP1,*EL:
                    *P41:18,"_",*EL:
                    *P41:18,*V2LON,F1:
                    *P41:18,*DV,F1
          COMPARE   "0",F1
          GOTO      GIBA2840 IF EQUAL
          COMPARE   "1",F1
          GOTO      GIBA2840 IF EQUAL
          BEEP
          GOTO      GIBA2830
.
GIBA2840  MOVE      EXPTYP0,EXPTYP
          LOAD      EXPTYP,F1,EXPTYP1
          PACK      EXPTYP,EXPTYP,SP70
          MOVE      F1,FMCOEXTY
          DISPLAY   *P41:18,*V2LON,FMCOEXTY,*HOFF,SP2,EXPTYP:
                    *P1:24,*EF;
          GOTO      GIBA0000
.
.---- Actual > Budget Display Variance ----
.
GIBA2850  KEYIN     *P1:24,*V2LON,"0",*HOFF," = ",*DV,BUDVAR0,", ":
                           *V2LON,"1",*HOFF," = ",*DV,BUDVAR1,*EL:
                    *P41:19,"_",*EL:
                    *P41:19,*V2LON,F1:
                    *P41:19,*DV,F1
          COMPARE   "0",F1
          GOTO      GIBA2860 IF EQUAL
          COMPARE   "1",F1
          GOTO      GIBA2860 IF EQUAL
          BEEP
          GOTO      GIBA2850
.
GIBA2860  MOVE      BUDVAR0,BUDVAR
          LOAD      BUDVAR,F1,BUDVAR1
          PACK      BUDVAR,BUDVAR,SP70
          MOVE      F1,FMCOBVAR
          DISPLAY   *P41:19,*V2LON,FMCOBVAR,*HOFF,SP2,BUDVAR:
                    *P1:24,*EF;
          GOTO      GIBA0000
.
.---- Transaction Program Status During Proposed Payments ----
.
GIBA2870  KEYIN     *P1:23,*V2LON,"0",*HOFF," = ",*DV,TACC0,", ":
                           *V2LON,"1",*HOFF," = ",*DV,TACC1,*EF:
                    *P1:24,*V2LON,"2",*HOFF," = ",*DV,TACC2,", ":
                           *V2LON,"3",*HOFF," = ",*DV,TACC3:
                    *P41:20,"_",*EL:
                    *P41:20,*V2LON,F1:
                    *P41:20,*DV,F1
          COMPARE   "0",F1
          GOTO      GIBA2880 IF EQUAL
          BRANCH    F1,GIBA2880,GIBA2880,GIBA2880
          BEEP
          GOTO      GIBA2850
.
GIBA2880  MOVE      TACC0,TACC
          LOAD      TACC,F1,TACC1,TACC2,TACC3
          PACK      TACC,TACC,SP70
          MOVE      F1,FMCOTACC
          DISPLAY   *P41:20,*V2LON,FMCOTACC,*HOFF,SP2,TACC:
                    *P1:23,*EF;
          GOTO      GIBA0000
.
GIBA2890  KEYIN     *P41:21,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
.
          MATCH     DYES,ANS
          GOTO      GIBA2894 IF EQUAL
.
          MATCH     DNO,ANS
          GOTO      GIBA2898 IF EQUAL
.
          BEEP
          GOTO      GIBA2890
.
GIBA2894  MOVE      ONE,HACCNT
          DISPLAY   *P41:21,*V2LON,DYES
          GOTO      GIBA0000
.
GIBA2898  MOVE      ZERO,HACCNT
          DISPLAY   *P41:21,*V2LON,DNO
          GOTO      GIBA0000
.
GIBA9000  MOVE      ZERO,EXIT
          WRITAB    CONTROLF,THIRTY6;*15,RECPTDIR
          WRITAB    CONTROLF,TWO;*4,CONAME,*182,CONAMEX
          GOTO      GIBA9999
.
GIBA9990  MOVE      ONE,EXIT
.
GIBA9999  RETURN
.*****************************************************************************
.         DQUO0000                               Called By ML0000
.         Read and display QUO parameters
.*****************************************************************************
DQUO0000  MOVE      ZERO,F1
          MOVE      FMCOHPRT,F1
          MOVE      F1,FMCOHPRT
          MOVE      DNO,DANS1
          LOAD      DANS1,F1,DYES
.
          MOVE      ZERO,F1
          MOVE      FMCOATOT,F1
          MOVE      F1,FMCOATOT
          MOVE      DNO,DANS2
          LOAD      DANS2,F1,DYES
.
          MOVE      ZERO,F1
          MOVE      FMCODUPI,F1
          MOVE      F1,FMCODUPI
          MOVE      DNO,DANS3
          LOAD      DANS3,F1,DYES
.
          MOVE      ZERO,F1
          MOVE      FMCOITRK,F1
          MOVE      F1,FMCOITRK
          MOVE      DNO,DANS4
          LOAD      DANS4,F1,DYES
.
          MOVE      ZERO,F1
          MOVE      FMCODTWR,F1
          MOVE      F1,FMCODTWR
          MOVE      DNO,DANS5
          LOAD      DANS5,F1,DYES
.
          MOVE      ZERO,F1
          MOVE      FMCOCSRL,F1
          MOVE      F1,FMCOCSRL
          MOVE      DNO,DANS6
          LOAD      DANS6,F1,DYES
.
          MOVE      ZERO,F1
          MOVE      FMCOSCDI,F1
          MOVE      F1,FMCOSCDI
          MOVE      DNO,DANS7
          LOAD      DANS7,F1,DYES
.
          DISPLAY   *P55:3,*EF,*V2LON,"I.B.A Control Screen 4",*HOFF:
                    *P1:4,*V2LON," 1",*HOFF:
                    ". Suppress Heading Print     (#7256 ACC) : ",*V2LON,DANS1:
                    *P1:5,*V2LON," 2",*HOFF:
                    ". Print Ledg Totals in APS62 (#7612 HAS) : ",*V2LON,DANS2:
                    *P1:6,*V2LON," 3",*HOFF:
                    ". Disallow Dup. Inv. Ref's   (#8285 STH) : ",*V2LON,DANS3:
                    *P1:7,*V2LON," 4",*HOFF:
                    ". Using Invoice Tracking     (#8628 HWK) : ",*V2LON,DANS4:
                    *P1:8,*V2LON," 5",*HOFF:
                    ". Date Warning in IBAAPS18   (#8943 HSH) : ",*V2LON,DANS5:
                    *P1:9,*V2LON," 6",*HOFF:
                    ". Allow indiv. Release in IBAAPS46      : ",*V2LON,DANS6:
                    *P1:10,*V2LON," 7",*HOFF:
                    ". Using Diss Code - Sector Code Report  : ",*V2LON,DANS7
.
DQUO9999  RETURN
.******************************************************************************
.         GQUO0000                               Called By ML0000
.         get any changes from user to QUO systems parameters
.******************************************************************************
GQUO0000  CALL      MAINQST            * post cancel or select item
.
          COMPARE   ZERO,CCITEM        * Post = 0
          GOTO      GQUO9000 IF EQUAL
          COMPARE   "-1",CCITEM        * Cancel = -1
          GOTO      GQUO9990 IF EQUAL
.
          BRANCH    CCITEM,GQUO1100,GQUO1200,GQUO1300,GQUO1400,GQUO1500:
                           GQUO1600,GQUO1700
          BEEP
          GOTO      GQUO0000
.
.---- option 1 ----
.
GQUO1100  
          MOVE      "45",CCOL
          MOVE      "4",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCOHPRT
          GOTO      GQUO0000
.
.---- option 2 ----
.
GQUO1200  
          MOVE      "45",CCOL
          MOVE      "5",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCOATOT
          GOTO      GQUO0000
.
.---- option 3 ----
.
GQUO1300  
          MOVE      "45",CCOL
          MOVE      "6",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCODUPI
          GOTO      GQUO0000
.
.---- option 4 ----
.
GQUO1400  
          MOVE      "45",CCOL
          MOVE      "7",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCOITRK
          GOTO      GQUO0000
.
.---- option 5 ----
.
GQUO1500  
          MOVE      "45",CCOL
          MOVE      "8",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCODTWR
          GOTO      GQUO0000
.
.---- option 6 ----
.
GQUO1600  MOVE      "45",CCOL
          MOVE      "9",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCOCSRL
          GOTO      GQUO0000
.                         
.---- option 7 ----       
.                   
GQUO1700  MOVE      "45",CCOL
          MOVE      "10",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCOSCDI
          GOTO      GQUO0000
.
GQUO9000  MOVE      ZERO,EXIT
          GOTO      GQUO9999
.
GQUO9990  MOVE      ONE,EXIT
.
GQUO9999  RETURN
.******************************************************************************
.         DUSR0000                               Called By ML0000
.         Read and display all user system parameters from controlf
.******************************************************************************
DUSR0000  DISPLAY   *P55:3,*EF,*V2LON,"Account Code Fields":
                    *P1:4,*V2LON," 1",*HOFF,". Define Ref. 1 (Y/N) :":
                          *P31:4,"Length : ":
                          *P43:4,"Description : ":
                    *P1:5,*V2LON," 2",*HOFF,". Define Ref. 2 (Y/N) :":
                          *P31:5,"Length : ":
                          *P43:5,"Description : ":
                    *P1:6,*V2LON," 3",*HOFF,". Define Ref. 3 (Y/N) :":
                          *P31:6,"Length : ":
                          *P43:6,"Description : ":
                    *P1:7,*V2LON," 4",*HOFF,". Define Ref. 4 (Y/N) :":
                          *P31:7,"Length : ":
                          *P43:7,"Description : ":
                    *P1:8,*V2LON," 5",*HOFF,". Define Code 1 (Y/N) :":
                          *P43:8,"Category    : ":
                    *P1:9,*V2LON," 6",*HOFF,". Define Code 2 (Y/N) :":
                          *P43:9,"Category    : ":
                   *P1:10,*V2LON," 7",*HOFF,". Define Code 3 (Y/N) :":
                         *P43:10,"Category    : ":
                   *P1:11,*V2LON," 8",*HOFF,". Define Code 4 (Y/N) :":
                         *P43:11,"Category    : ":
                   *P1:12,*V2LON," 9",*HOFF,". Define Date 1 (Y/N) :":
                         *P43:12,"Description : ":
                   *P1:13,*V2LON,"10",*HOFF,". Define Date 2 (Y/N) :":
                         *P43:13,"Description : ":
                   *P1:14,*V2LON,"11",*HOFF,". Define Date 3 (Y/N) :":
                         *P43:14,"Description : ":
                   *P1:15,*V2LON,"12",*HOFF,". Define Date 4 (Y/N) :":
                         *P43:15,"Description : ":
                   *P1:16,*V2LON,"13",*HOFF,". Define Amt. 1 (Y/N) :":
                         *P31:16,"Dec.Pl : ":
                         *P43:16,"Description : ":
                   *P1:17,*V2LON,"14",*HOFF,". Define Amt. 2 (Y/N) :":
                         *P31:17,"Dec.Pl : ":
                         *P43:17,"Description : ":
                   *P1:18,*V2LON,"15",*HOFF,". Define Amt. 3 (Y/N) :":
                         *P31:18,"Dec.Pl : ":
                         *P43:18,"Description : ":
                   *P1:19,*V2LON,"16",*HOFF,". Define Amt. 4 (Y/N) :":
                         *P31:19,"Dec.Pl : ":
                         *P43:19,"Description : ":
                   *P1:20,*V2LON,"17",*HOFF,". Notes Req.    (Y/N) :"
.
          MOVE      ZERO,FORM2
          MOVE      "3",CVERT98
          MOVE      "27",CCOL98
.
DUSR2000  ADD       ONE,FORM2
          ADD       ONE,CVERT98
.
.---- display yes/no ----
.
          LOAD      COUNT,FORM2,FMACR1ON,FMACR2ON,FMACR3ON,FMACR4ON:
                                FMACC1ON,FMACC2ON,FMACC3ON,FMACC4ON:
                                FMACD1ON,FMACD2ON,FMACD3ON,FMACD4ON:
                                FMACA1ON,FMACA2ON,FMACA3ON,FMACA4ON,FMACW1ON
          MOVE      DNO,DANSX
          LOAD      DANSX,COUNT,DYES
          DISPLAY   *PCCOL98:CVERT98,*V2LON,DANSX;   * display Yes/No
.
          COMPARE   "17",FORM2
          GOTO      DUSR5000 IF EQUAL            * any more data ?
.
          COMPARE   COUNT,ZERO
          GOTO      DUSR2000 IF EQUAL    * don't display cat/desc if not used
.
          BRANCH    FORM2,DUSR3100,DUSR3100,DUSR3100,DUSR3100:
                          DUSR3200,DUSR3200,DUSR3200,DUSR3200:
                          DUSR3150,DUSR3150,DUSR3150,DUSR3150:
                          DUSR3120,DUSR3120,DUSR3120,DUSR3120
.
.---- display length ----
.
DUSR3100  LOAD      F2,FORM2,FMACR1LN,FMACR2LN,FMACR3LN,FMACR4LN
          DISPLAY   *P40:CVERT98,*V2LON,F2;
          GOTO      DUSR3150
.
.---- display decimal places ----
.
DUSR3120  LOAD      COUNT,FORM2,FMACR1ON,FMACR2ON,FMACR3ON,FMACR4ON:
                                FMACC1ON,FMACC2ON,FMACC3ON,FMACC4ON:
                                FMACD1ON,FMACD2ON,FMACD3ON,FMACD4ON:
                                FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP
          DISPLAY   *P40:CVERT98,*V2LON,COUNT;
          GOTO      DUSR3150
.
.---- display description ----
.
DUSR3150  LOAD      DIM20,FORM2,FMACR1NA,FMACR2NA,FMACR3NA,FMACR4NA:
                                FMACC1NA,FMACC2NA,FMACC3NA,FMACC4NA:
                                FMACD1NA,FMACD2NA,FMACD3NA,FMACD4NA:
                                FMACA1NA,FMACA2NA,FMACA3NA,FMACA4NA
          DISPLAY   *P57:CVERT98,*V2LON,DIM20;
          GOTO      DUSR2000                     * go to start of loop
.
.---- display category ----
.
DUSR3200  LOAD      DIM2,FORM2,FMACR1NA,FMACR2NA,FMACR3NA,FMACR4NA:
                               FMACC1NA,FMACC2NA,FMACC3NA,FMACC4NA
          MATCH     SP2,DIM2
          GOTO      DUSR2000 IF EQUAL
          MATCH     "00",DIM2
          GOTO      DUSR2000 IF EQUAL
          PACK      KEY5,DIM2,SP70
          PACK      FMCDDESC,SP20
          CALL      RDFMCD1
          DISPLAY   *P57:CVERT98,*V2LON,DIM2,*HOFF,SP1,FMCDDESC
          GOTO      DUSR2000                     * go to start of loop
.
DUSR5000  
.
DUSR9999  RETURN
.*******************************************************************************
.         GUSR0000                               Called By ML0000
.         Get user system parameters for changes EXIT=0, POST  EXIT=-1 CANCEL
.******************************************************************************
GUSR0000  CALL      MAINQST                      * select, post or cancel
          COMPARE   ZERO,CCITEM
          GOTO      GUSR9000 IF EQUAL            * post
.
          COMPARE   "-1",CCITEM         
          GOTO      GUSR9990 IF EQUAL            * cancel
.
          MOVE      CCITEM,LINENO
          COMPARE   "18",CCITEM
          GOTO      GUSR1000 IF LESS             * execute option
.
          BEEP                                   * illegal option
          GOTO      GUSR0000
.
GUSR1000  MOVE      "3",CVERT98                  * calculate row number
          ADD       CCITEM,CVERT98  
          MOVE      "27",CCOL98 
.
          MOVE      CVERT98,CVERT
          MOVE      CCOL98,CCOL
          MOVE      "_",DEFYESNO
          CALL      YORN0000                     * get yes/no
          STORE     FYESNO,LINENO,FMACR1ON,FMACR2ON,FMACR3ON,FMACR4ON:
                                  FMACC1ON,FMACC2ON,FMACC3ON,FMACC4ON:
                                  FMACD1ON,FMACD2ON,FMACD3ON,FMACD4ON:
                                  FMACA1ON,FMACA2ON,FMACA3ON,FMACA4ON,FMACW1ON
.
          COMPARE   ZERO,FYESNO
          GOTO      GUSR2000 IF EQUAL            * no entered ?
.
          MOVE      FMACR1ON,TOTALON             * check how many filds are on
          ADD       FMACR2ON,TOTALON
          ADD       FMACR3ON,TOTALON
          ADD       FMACR4ON,TOTALON
          ADD       FMACC1ON,TOTALON
          ADD       FMACC2ON,TOTALON
          ADD       FMACC3ON,TOTALON
          ADD       FMACC4ON,TOTALON
          ADD       FMACD1ON,TOTALON
          ADD       FMACD2ON,TOTALON
          ADD       FMACD3ON,TOTALON
          ADD       FMACD4ON,TOTALON
          ADD       FMACA1ON,TOTALON
          ADD       FMACA2ON,TOTALON
          ADD       FMACA3ON,TOTALON
          ADD       FMACA4ON,TOTALON
          COMPARE   "9",TOTALON
          GOTO      GUSR3000 IF LESS             * to many fields on ?
.
          DISPLAY   *P1:24,*B,*EL,"Up to 8 Fields may be Activated - ";
          CALL      HITENTER
          STORE     ZERO,LINENO,FMACR1ON,FMACR2ON,FMACR3ON,FMACR4ON:
                                 FMACC1ON,FMACC2ON,FMACC3ON,FMACC4ON:
                                 FMACD1ON,FMACD2ON,FMACD3ON,FMACD4ON:
                                 FMACA1ON,FMACA2ON,FMACA3ON,FMACA4ON,FMACW1ON
          DISPLAY   *PCCOL98:CVERT98,*V2LON,DNO;
          GOTO      GUSR0000                     * get next option
.
.---- no entered so clear cat/desc ----
.
GUSR2000  STORE     SP70,LINENO,FMACR1NA,FMACR2NA,FMACR3NA,FMACR4NA:
                                FMACC1NA,FMACC2NA,FMACC3NA,FMACC4NA:
                                FMACD1NA,FMACD2NA,FMACD3NA,FMACD4NA:
                                FMACA1NA,FMACA2NA,FMACA3NA,FMACA4NA
          DISPLAY   *P40:CVERT98,SP3,*P57:CVERT98,*EL
          GOTO      GUSR0000
.
.---- yes entered so get data ----
.
GUSR3000  BRANCH    LINENO,GUSR3100,GUSR3100,GUSR3100,GUSR3100:
                           GUSR3200,GUSR3200,GUSR3200,GUSR3200:
                           GUSR3150,GUSR3150,GUSR3150,GUSR3150:
                           GUSR3120,GUSR3120,GUSR3120,GUSR3120,GUSR0000
.
.---- get length ----
.
GUSR3100  MOVE      "10",F2
          KEYIN     *P40:CVERT98,*DV,F2:
                    *P40:CVERT98,*RV,*V2LON,F2:
                    *P40:CVERT98,*DV,F2
          STORE     F2,LINENO,FMACR1LN,FMACR2LN,FMACR3LN,FMACR4LN
          COMPARE   ZERO,F2
          GOTO      GUSR1000 IF EQUAL
          GOTO      GUSR3150
.
.---- get decimal places ----
.
GUSR3120  MOVE      "2",F1
          KEYIN     *P40:CVERT98,*DV,F1:
                    *P40:CVERT98,*RV,*V2LON,F1:
                    *P40:CVERT98,*DV,F1
          COMPARE   "7",F1
          GOTO      GUSR3130 IF NOT LESS
          STORE     F1,LINENO,FMACR1ON,FMACR2ON,FMACR3ON,FMACR4ON:
                              FMACC1ON,FMACC2ON,FMACC3ON,FMACC4ON:
                              FMACD1ON,FMACD2ON,FMACD3ON,FMACD4ON:
                              FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP
          GOTO      GUSR3150
.
GUSR3130  DISPLAY   *P1:24,*B,*EL,"No More Than Six Decimal Places Allowed - ";
          CALL      HITENTER
          GOTO      GUSR3120
.
.---- get description ----
.
GUSR3150  KEYIN     *P57:CVERT98,*DV,UNDLN20:
                    *P57:CVERT98,*V2LON,DIM20,*EL
          PACK      DIM20,DIM20,SP70
.
          MATCH     SP70,DIM20
          GOTO      GUSR3000 IF EQUAL
          STORE     DIM20,LINENO,FMACR1NA,FMACR2NA,FMACR3NA,FMACR4NA:
                                 FMACC1NA,FMACC2NA,FMACC3NA,FMACC4NA:
                                 FMACD1NA,FMACD2NA,FMACD3NA,FMACD4NA:
                                 FMACA1NA,FMACA2NA,FMACA3NA,FMACA4NA
          GOTO      GUSR0000                     * go to start of loop
.
.---- get category ----
.
GUSR3200  MOVE      "57",CCOL
          MOVE      CVERT98,CVERT
          CALL      KCATFM00                     * get category
          BRANCH    EXIT,GUSR1000,GUSR0000
          STORE     FMCDCATY,LINENO,FMACR1NA,FMACR2NA,FMACR3NA,FMACR4NA:
                                    FMACC1NA,FMACC2NA,FMACC3NA,FMACC4NA
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCDCATY,*HOFF,SP1,FMCDDESC;
          GOTO      GUSR0000
.
.----- set exit flag ----
.
GUSR9000  MOVE      ZERO,EXIT
          GOTO      GUSR9999
.
GUSR9990  MOVE      ONE,EXIT
.
GUSR9999  RETURN
.**********************************************************************
. DJOU - display journal parameter screen             Called By ML
.**********************************************************************
DJOU0000  DISPLAY   *P55:3,*EF,*V2LON,"I.B.A Control Screen 2",*HOFF:
                    *P5:4,*V2LON,"General Journals":
                    *P1:5," 1",*HOFF,". Journal Prefix       : ":
                    *V2LON,FMJOPRE1:
                    *P1:6," 2",*HOFF,". Next Journal ID      : ":
                    *V2LON,FMJONEX1:
                    *P5:8,"Standing Journals":
                    *P1:9," 3",*HOFF,". Journal Prefix       : ":
                    *V2LON,FMJOPRE2:
                   *P1:10," 4",*HOFF,". Next Journal ID      : ":
                   *V2LON,FMJONEX2:
                   *P5:12,"Periodic Journals":
                   *P1:13," 5",*HOFF,". Journal Prefix       : ":
                   *V2LON,FMJOPRE3:
                   *P1:14," 6",*HOFF,". Next Journal ID      : ":
                   *V2LON,FMJONEX3:
                   *P5:16,"Inter Fund Transfer Journal":
                   *P1:17," 7",*HOFF,". Journal Prefix       : ":
                   *V2LON,FMJOPRE4:
                   *P1:18," 8",*HOFF,". Next Journal ID      : ":
                   *V2LON,FMJONEX4:
                   *P5:20,"Interface Journals":
                   *P1:21," 9",*HOFF,". Journal Prefix       : ":
                   *V2LON,FMJOPRE5:
                   *P1:22,"10",*HOFF,". Next Journal ID      : ":
                   *V2LON,FMJONEX5
.
DJOU9999  RETURN
.**********************************************************************
. GJOU - Get journal parameters                       Called By ML
.        Returns  - EXIT     (1=post)
.**********************************************************************
GJOU0000  CALL      MAINQST            * select/post/cancel ?
          COMPARE   ZERO,CCITEM
          GOTO      GJOU9000 IF EQUAL  * post
.
          COMPARE   SEQ,CCITEM
          GOTO      GJOU9500 IF EQUAL  * cancel
          BRANCH    CCITEM,GJOU0100,GJOU0200,GJOU0300,GJOU0400:
                           GJOU0500,GJOU0600,GJOU0700,GJOU0800:
                           GJOU0900,GJOU1000
.
.---- option 1 ----
.
GJOU0100  KEYIN     *P28:5,"_",*P28:5,*V2LON,FMJOPRE1,*EL;
          PACK      FMJOPRE1,FMJOPRE1,SP70
          GOTO      GJOU0000
.
.---- option 2 ----
.
GJOU0200  KEYIN     *P28:6,"______",*P28:6,*V2LON,FMJONEX1,*P28:6,*DV,FMJONEX1;
          GOTO      GJOU0000
.
.---- option 3 ----
.
GJOU0300  KEYIN     *P28:9,"_",*P28:9,*V2LON,FMJOPRE2,*EL;
          PACK      FMJOPRE2,FMJOPRE2,SP70
          GOTO      GJOU0000
.
.---- option 4 ----
.
GJOU0400  KEYIN     *P28:10,"______",*P28:10,*V2LON,FMJONEX2:
                    *P28:10,*DV,FMJONEX2;
          GOTO      GJOU0000
.
.---- option 5 ----
.
GJOU0500  KEYIN     *P28:13,"_",*P28:13,*V2LON,FMJOPRE3,*EL;
          PACK      FMJOPRE3,FMJOPRE3,SP70
          GOTO      GJOU0000
.
.---- option 6 ----
.
GJOU0600  KEYIN     *P28:14,"______",*P28:14,*V2LON,FMJONEX3:
                    *P28:14,*DV,FMJONEX3;
          GOTO      GJOU0000
.
.---- option 7 ----
.
GJOU0700  KEYIN     *P28:17,"_",*P28:17,*V2LON,FMJOPRE4,*EL;
          PACK      FMJOPRE4,FMJOPRE4,SP70
          GOTO      GJOU0000
.
.---- option 8 ----
.
GJOU0800  KEYIN     *P28:18,"______",*P28:18,*V2LON,FMJONEX4:
                    *P28:18,*DV,FMJONEX4;
          GOTO      GJOU0000
.
.---- option 9 ----
.
GJOU0900  KEYIN     *P28:21,"_",*P28:21,*V2LON,FMJOPRE5,*EL;
          PACK      FMJOPRE5,FMJOPRE5,SP70
          GOTO      GJOU0000
.
.---- option 10 ----
.
GJOU1000  KEYIN     *P28:22,"______",*P28:22,*V2LON,FMJONEX5:
                    *P28:22,*DV,FMJONEX5;
          GOTO      GJOU0000
.
GJOU9000  MOVE      ZERO,EXIT          * continue
          GOTO      GJOU9999
.
GJOU9500  MOVE      ONE,EXIT           * quit
.
GJOU9999  RETURN
.**********************************************************************
. DBCS - display batch control screen             Called By ML
.**********************************************************************
DBCS0000  MOVE      STATTYP0,STATTYP
          LOAD      STATTYP,FMCOUST,STATTYP1
          MOVE      DNO,DANS1
          LOAD      DANS1,FMCOCALC,DYES
.
          MOVE      ZERO,F1
          MOVE      FMCOFUPD,F1
          MOVE      FORBUD0,FORBUD
          LOAD      FORBUD,F1,FORBUD1,FORBUD2
.
          DISPLAY   *P55:3,*EF,*V2LON,"I.B.A Control Screen 3",*HOFF:
                    *P5:4,*V2LON,"Next Available Batch Numbers ":
                    *P1:5," 1",*HOFF,". Journal                          : ":
                    *V2LON,FMBCJBAT:
                    *P1:6," 2",*HOFF,". Statistical Transaction          : ":
                    *V2LON,FMBSTBAT:
                    *P1:7," 3",*HOFF,". Creditor System - Invoices       : ":
                    *V2LON,FMBCCBAT:
                    *P1:8," 4",*HOFF,".                 - Credits        : ":
                    *V2LON,FMBCRBAT:
                    *P1:9," 5",*HOFF,".                 - Payments       : ":
                    *V2LON,FMBPABAT:
                   *P1:10," 6",*HOFF,".                 - Auto. Payments : ":
                    *V2LON,FMBAUBAT:
                   *P1:11," 7",*HOFF,".                 - Cancelled Cheq : ":
                    *V2LON,FMBCHBAT:
                   *P1:12," 8",*HOFF,". Other Systems                    : ":
                    *V2LON,FMBCOBAT:
                    *P5:14,"Update Controls",*V2LON:
                   *P1:15," 9",*HOFF,". Statistical Update Type    ( / ) : ":
                    *V2LON,*P33:15,"A",*P35:15,"C",*P40:15,STATTYP:
                   *P1:16,"10",*HOFF,". Re-calculation On          ( / ) : ":
                    *V2LON,*P33:16,"Y",*P35:16,"N",*P40:16,DANS1:
                   *P1:17,"11",*HOFF,". Force Re-calc for Budgets        : ":
                    *V2LON,*P40:17,FMCOFUPD,SP2,FORBUD:
                    *P5:19,*V2LON,"Manual Commitment Order Number Range":
                   *P1:20,"12",*HOFF,". First Order Number               : ":
                    *V2LON,FMCOFONO:
                   *P1:21,"13",*HOFF,". Last Order Number                : ":
                    *V2LON,FMCOLONO
.
DBCS9999  RETURN
.**********************************************************************
. GBCS - Get batch control parameters                   Called By ML
.        Returns  - EXIT     (1=post)
.**********************************************************************
GBCS0000  CALL      MAINQST            * select/post/cancel ?
          COMPARE   ZERO,CCITEM
          GOTO      GBCS9000 IF EQUAL  * post
.
          COMPARE   SEQ,CCITEM
          GOTO      GBCS9500 IF EQUAL  * cancel
          MOVE      "4",CVERT
          ADD       CCITEM,CVERT
          BRANCH    CCITEM,GBCS0200,GBCS0200,GBCS0200,GBCS0200,GBCS0200:
                           GBCS0200,GBCS0200,GBCS0200:
                           GBCS0400,GBCS0500,GBCS0550,GBCS0600,GBCS0700
          BEEP 
          GOTO      GBCS0000
.
.---- option 2 ----
.
GBCS0200  KEYIN     *P40:CVERT,"_____",*P40:CVERT,*V2LON,KEY5;
          PACK      KEY5,KEY5,SP10
          REP       " 0",KEY5
          DISPLAY   *P40:CVERT,*V2LON,KEY5;
          STORE     KEY5,CCITEM,FMBCJBAT,FMBSTBAT,FMBCCBAT,FMBCRBAT:
                                FMBPABAT,FMBAUBAT,FMBCHBAT,FMBCOBAT
          GOTO      GBCS0000
.
.---- option 4 ----
.
GBCS0400  DISPLAY   *P1:24,"(",*V2LON,"A",*HOFF,")ccrual, (":
                    *V2LON,"C",*HOFF,")ash",*EL;
.
GBCS0410  KEYIN     *P40:15,*EL,"_",*P40:15,*V2LON,DIM1;
          PACK      DIM1,DIM1,SP10
          REP       "a1A1c2C2",DIM1
          MOVE      ZERO,F1
          MOVE      DIM1,F1
          BRANCH    F1,GBCS0420,GBCS0420
          BEEP
          GOTO      GBCS0410
.
GBCS0420  LOAD      STATTYP,F1,STATTYP0,STATTYP1
          SUB       ONE,F1
          MOVE      F1,FMCOUST
          DISPLAY   *P40:15,*V2LON,STATTYP,*P1:24,*EL;
          GOTO      GBCS0000
.
.---- option 5 ----
.
GBCS0500  MOVE      "40",CCOL
          MOVE      "16",CVERT
          MOVE      UNDLN5,DEFYESNO
          CALL      YORN0000           * yes or no
          MOVE      FYESNO,FMCOCALC
          GOTO      GBCS0000
.
.---- option 5 ----
.
GBCS0550  MOVE      "40",CCOL
          MOVE      "17",CVERT
          MOVE      ZERO,F1
          MOVE      FMCOFUPD,F1
.
          DISPLAY   *P1:24,"0=",FORBUD0,"  1=",FORBUD1,"  2=",FORBUD2,*EL;
          REPEAT
            KEYIN     *PCCOL:CVERT,*V2LON,*EL,*RV,F1;
          UNTIL     F1=0 | F1=1 | F1=2
.
          MOVE      F1,FMCOFUPD
          MOVE      FORBUD0,FORBUD
          LOAD      FORBUD,F1,FORBUD1,FORBUD2
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCOFUPD,*HOFF,SP2,FORBUD:
                    *P1:24,*EF;
          GOTO      GBCS0000
.
.---- option 6 ----
.
GBCS0600  KEYIN     *P40:20,"_______":
                    *P40:20,*V2LON,FMCOFONO;
          COMPARE   FMCOFONO,ZERO
          GOTO      GBCS0600 IF NOT LESS
          DISPLAY   *P40:20,*V2LON,FMCOFONO;
          GOTO      GBCS0000
.
.---- option 7 ----
.
GBCS0700  KEYIN     *P40:21,"_______":
                    *P40:21,*V2LON,FMCOLONO;
          COMPARE   FMCOLONO,ZERO
          GOTO      GBCS0700 IF NOT LESS
          DISPLAY   *P40:21,*V2LON,FMCOLONO;
          GOTO      GBCS0000
.
GBCS9000  MOVE      ZERO,EXIT          * continue
          GOTO      GBCS9999
.
GBCS9500  MOVE      ONE,EXIT           * quit
.
GBCS9999  RETURN
.**********************************************************************
.  DDIS - Display dissection screen                    Called By ML
.**********************************************************************
DDIS0000  MOVE      "1",SCRNO
          MOVE      SP70,FMDSDESC
          PACK      KEY5,FMCOIDIS,SP70
          CALL      RDFMDS1
          DISPLAY   *P55:3,*EF,*V2LON,"Control Account Dissect":
                    *V2LON,*P1:5,"1",*HOFF,". Invoice Dissection Code      :":
                    *P38:5,*V2LON,FMCOIDIS,*HOFF,SP2,FMDSDESC
.
          MOVE      SP70,FMDSDESC
          PACK      KEY5,FMCOCDIS,SP70
          CALL      RDFMDS1
          DISPLAY   *P1:6,*V2LON,"2",*HOFF,". Credit Note Dissection Code  :":
                    *P38:6,*V2LON,FMCOCDIS,*HOFF,SP2,FMDSDESC
.
          MOVE      SP70,FMDSDESC
          PACK      KEY5,FMCOPDIS,SP70
          CALL      RDFMDS1
          DISPLAY   *P1:7,*V2LON,"3",*HOFF,". Payment Dissection Code      :":
                    *P38:7,*V2LON,FMCOPDIS,*HOFF,SP2,FMDSDESC
.
          MOVE      SP70,FMDSDESC
          PACK      KEY5,FMCORDIS,SP70
          CALL      RDFMDS1
          DISPLAY   *P1:8,*V2LON,"4",*HOFF,". Cash Receipt Dissection Code :":
                    *P38:8,*V2LON,FMCORDIS,*HOFF,SP2,FMDSDESC
.
DDIS9999  RETURN
.**********************************************************************
.         * CONTROL ACCOUNT DISSECTION CODES MAINTENANCE
.**********************************************************************
GDIS0000  CALL      RDFMCO66
.
          CALL      DDIS0000
.
OPTION2A  CALL      MAINQST
.
          COMPARE   ZERO TO CCITEM
          GOTO      GDIS9000 IF EQUAL
.
          COMPARE   SEQ TO CCITEM
          GOTO      GDIS9999 IF EQUAL
.
          MOVE      "38",CCOL
          MOVE      "4",CVERT
          ADD       CCITEM,CVERT
          BRANCH    CCITEM TO CONTACA,CONTACA,CONTACA,CONTACA
          BEEP
          GOTO      OPTION2A
.
CONTACA   MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00
.         CALL      KDISFM00
          BRANCH    EXIT,CONTACA,GDIS9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMDSCODE,*HOFF,SP2,FMDSDESC;
          MOVE      "    1",DIM5
          MOVE      FMDSCODE,DIM5
          STORE     DIM5,CCITEM,FMCOIDIS,FMCOCDIS,FMCOPDIS,FMCORDIS
          GOTO      OPTION2A
.
GDIS9000  CALL      WRFMCO66
.
GDIS9999  RETURN
.******************************************************************************
.         USER0000                               Called by ML
.******************************************************************************
USER0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,ZERO;*107,IBCNUBAS
          READ      CONTROLF,NUM50;*85,FMCOLOGR:
                                   *238,FMCOSTSC,*245,FMCOINVP,FMCOJAUT:
                                   *248,FMCOBUPD
          READ      CONTROLF,NUM51;*242,FMDEFCRD,FMDEFLED,FMDEFDIS
          READ      CONTROLF,NUM66;*72,FMCOPAYG,FMCOINGS,FMCOPGCR,FMCOPBAS
          READ      CONTROLF,NUM66;*93,FMCOXBAS,*96,FMCOEXTR
          TRAPCLR   FORMAT
          COMPARE   ZERO,OVRCD
          GOTO      USER0010 IF EQUAL
.
          MOVE      ZERO,FMCOJAUT
          MOVE      "  ",FMCOBUPD
          MOVE      SP6,FMCOPAYG
          MOVE      SP6,FMCOINGS
          MOVE      SP5,FMCOPGCR
          MOVE      SP3,FMCOPBAS
          MOVE      SP3,FMCOXBAS
          MOVE      SP1,FMCOEXTR
          WRITAB    CONTROLF,NUM50;*85,FMCOLOGR:
                                   *238,FMCOSTSC,*245,FMCOINVP,FMCOJAUT:
                                   *248,FMCOBUPD
          WRITAB    CONTROLF,NUM51;*242,FMDEFCRD,FMDEFLED,FMDEFDIS
          WRITAB    CONTROLF,NUM66;*72,FMCOPAYG,FMCOINGS,FMCOPGCR,FMCOPBAS
          WRITAB    CONTROLF,NUM66;*93,FMCOXBAS,*96,FMCOEXTR
          GOTO      USER0000
.
USER0010  CALL      READ0000           * read parameters
.
          PACK      FMCOCOMT,FMCOCOMT,SP70
          REP       " 0",FMCOCOMT
          MOVE      ZERO,F1
          MOVE      FMCOCOMT,F1
          MOVE      COMD0,COMD
          LOAD      COMD,F1,COMD1
.
          PACK      FMCOINFC,FMCOINFC,SP70
          REP       " 0",FMCOINFC
          MOVE      ZERO,FORM6P6
          MOVE      FMCOINFC,FORM6P6
          MOVE      FORM6P6,FMCOINFC
.
          PACK      FMCOINPV,FMCOINPV,SP70
          REP       " 0",FMCOINPV
          MOVE      ZERO,FORM6P6
          MOVE      FMCOINPV,FORM6P6
          MOVE      FORM6P6,FMCOINPV
.
          MOVE      DNO,DANS4
          LOAD      DANS4,FMDEFCRD,DYES
.
          MOVE      DNO,DANS5
          LOAD      DANS5,FMCOINVP,DYES
.
          MOVE      DNO,DANS6
          LOAD      DANS6,FMCOJAUT,DYES
.
          MOVE      FMDEFLED,KEY2
          CALL      RDFMLA1
          MOVE      FMDEFDIS,KEY5
          CALL      RDFMDS1
.
          PACK      IBGSDESC,SP70
          PACK      KEY6,FMCOPAYG,SP70
          CALL      RDIBGS1
          MOVE      IBGSDESC,KEY30
.
          PACK      IBGSDESC,SP70
          PACK      KEY6,FMCOINGS,SP70
          CALL      RDIBGS1
.
          PACK      APMACN1,SP70
          PACK      KEY5,FMCOPGCR,SP70
          CALL      RDAPMA1
.
          PACK      KEY31,SP70
          PACK      KEY3,FMCOXBAS,SP70
          CALL      RDIBBA1
          MOVE      IBBADESC,KEY31
.
          PACK      IBBADESC,SP70
          PACK      KEY3,FMCOPBAS,SP70
          CALL      RDIBBA1
.
          DISPLAY   *P55:3,*EF,*V2LON,"User Controlled Screen",*HOFF:
                   *P1:4,*V2LON," 1",*HOFF:
                    ". Security Level for C/D Stat Tran :":
                   *P1:5,*V2LON," 2",*HOFF:
                    ". Enquiry Committed Exp Type       :":
                   *P1:6,*V2LON," 3",*HOFF:
                    ". Invoice Fixed Charge             :":
                   *P1:7,*V2LON," 4",*HOFF:
                    ". Invoice Percentage Charge        :":
                   *P1:8,*V2LON," 5",*HOFF:
                    ". Default Creditor in IBAAPS15(Y/N):":
                   *P1:9,*V2LON," 6",*HOFF:
                    ". Next Bank Transfer Lodgement No. :":
                   *P1:10,*V2LON," 7",*HOFF:
                    ". Contract Inv. Price Control (Y/N):":
                   *P1:11,*V2LON," 8",*HOFF:
                    ". Default Ledger APS15             :":
                   *P1:12,*V2LON," 9",*HOFF:
                    ". Default Dissection APS15         :":
                   *P1:13,*V2LON,"10",*HOFF:
                    ". Journal Authorisation in Use(Y/N):":
                   *P1:14,*V2LON,"11",*HOFF:
                    ". Batch Update in Progress (Port)  :":
                   *P1:15,*V2LON,"12",*HOFF:
                    ". Pay as You Go GST Code           :":
                   *P1:16,*V2LON,"13",*HOFF:
                    ". Default GST Code for Invoices    :":
                   *P1:17,*V2LON,"14",*HOFF:
                    ". Pay As You Go Creditor Code      :":
                   *P1:18,*V2LON,"15",*HOFF:
                    ". Extra Character for Oracle Extrct:"
          IF       IBCNUBAS=1
            DISPLAY  *P1:19,*V2LON,"16",*HOFF:
                      ". Pay As You Go Tax Dept. BAS Code :"
            DISPLAY  *P1:20,*V2LON,"17",*HOFF:
                      ". BAS code for Exempt Creditor     :"
          ENDIF
          DISPLAY   *P40:4,*V2LON,FMCOSTSC,*P40:5,FMCOCOMT,*HOFF,SP2,COMD:
                    *P40:6,*V2LON,FMCOINFC,*P40:7,FMCOINPV," %":
                    *P40:8,*V2LON,DANS4:
                    *P40:9,*V2LON,FMCOLOGR:
                    *P40:10,*V2LON,DANS5:
                    *P40:11,*V2LON,FMDEFLED,*HOFF,SP2,FMLADESC:
                    *P40:12,*V2LON,FMDEFDIS,*HOFF,SP2,FMDSDESC:
                    *P40:13,*V2LON,DANS6,*P40:14,FMCOBUPD:
                    *P40:15,FMCOPAYG,*HOFF,SP2,KEY30:
                    *P40:16,*V2LON,FMCOINGS,*HOFF,SP2,IBGSDESC:
                    *P40:17,*V2LON,FMCOPGCR,*HOFF,SP3,APMACN1:
                    *P40:18,*V2LON,FMCOEXTR
          IF       IBCNUBAS=1
            DISPLAY   *P40:19,*V2LON,FMCOPBAS,*HOFF,SP5,IBBADESC
            DISPLAY   *P40:20,*V2LON,FMCOXBAS,*HOFF,SP5,KEY31
          ENDIF
.
UPHOSP    CALL      MAINQST
.
          COMPARE   ZERO,CCITEM
          GOTO      USER9000 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      USER9999 IF EQUAL
.
          IF        IBCNUBAS=1
            BRANCH    CCITEM OF KHOS11,KHOS12,KHOS13,KHOS14,KHOS15:
                                KHOS16,KHOS17,KHOS18,KHOS19,KHOS20:
                                KHOS21,KHOS22,KHOS23,KHOS24,KHOS25:
                                KHOS26,KHOS27
          ELSE
            BRANCH    CCITEM OF KHOS11,KHOS12,KHOS13,KHOS14,KHOS15:
                                KHOS16,KHOS17,KHOS18,KHOS19,KHOS20:
                                KHOS21,KHOS22,KHOS23,KHOS24,KHOS25
          ENDIF
          BEEP
          GOTO      UPHOSP
.
KHOS11    KEYIN     *P40:4,*EL,*V2LON,FORM1,*P40:4,*DV,FORM1
          MOVE      FORM1 TO FMCOSTSC
          GOTO      UPHOSP
.
KHOS12     DISPLAY   *P1:24,"0=",COMD0," 1=",COMD1;
           REPEAT
            KEYIN     *P40:5,*EL,*V2LON,FORM1;
          UNTIL     FORM1=0 | FORM1=1
          MOVE      FORM1,FMCOCOMT
          MOVE      FMCOCOMT,FORM1
          MOVE      COMD0,COMD
          LOAD      COMD,FORM1,COMD1
          DISPLAY   *P40:5,*V2LON,FMCOCOMT,SP2,COMD,*P1:24,*EF;
          GOTO      UPHOSP
.
KHOS13    MOVE      FMCOINFC,FORM6P6
          KEYIN     *P40:6,*V2LON,*RV,FORM6P6:
                    *P40:6,*DV,FORM6P6;
          MOVE      FORM6P6,FMCOINFC
          GOTO      UPHOSP
.
KHOS14    MOVE      FMCOINPV,FORM6P6
          KEYIN     *P40:7,*V2LON,*RV,FORM6P6:
                    *P40:7,*DV,FORM6P6;
          MOVE      FORM6P6,FMCOINPV
          GOTO      UPHOSP
.
KHOS15    MOVE      "40",CCOL
          MOVE      "8",CVERT
          MOVE      "_",DEFYESNO
          CALL      YORN0000                     * get yes/no
          MOVE      FYESNO,FMDEFCRD
          MOVE      DNO,DANS4
          LOAD      DANS4,FYESNO,DYES
          GOTO      UPHOSP
.
KHOS16    MOVE      FMCOLOGR,FORM5
          KEYIN     *P40:9,*V2LON,*RV,FORM5:
                    *P40:9,*DV,FORM5;
          MOVE      FORM5,FMCOLOGR
          GOTO      UPHOSP
.
KHOS17    MOVE      "40",CCOL
          MOVE      "10",CVERT
          MOVE      "_",DEFYESNO
          CALL      YORN0000                     * get yes/no
          MOVE      FYESNO,FMCOINVP
          MOVE      DNO,DANS5
          LOAD      DANS5,FYESNO,DYES
          GOTO      UPHOSP
.
KHOS18    MOVE      "40",CCOL
          MOVE      "11",CVERT
          CALL      KLMAFM00                * get data
          BRANCH    EXIT,KHOS18A,KHOS18A    * entry ok ? (1=blank, 2=EXITCHAR)
          MOVE      FMLALEDG,FMDEFLED
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
          GOTO      UPHOSP
KHOS18A   MOVE      SP70,FMDEFLED
          MOVE      SP70,FMLADESC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMDEFLED,*HOFF,SP2,FMLADESC;
          GOTO      UPHOSP
.
KHOS19    MOVE      "40",CCOL
          MOVE      "12",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00
.         CALL      KDISFM00                * get data
          BRANCH    EXIT,KHOS19A,KHOS19A    * entry ok ? (1=blank, 2=EXITCHAR)
          MOVE      FMDSCODE,FMDEFDIS
          DISPLAY   *PCCOL:CVERT,*V2LON,FMDSCODE,*HOFF,SP2,FMDSDESC;
          GOTO      UPHOSP
KHOS19A   MOVE      SP70,FMDEFDIS
          MOVE      SP70,FMDSDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMDEFDIS,*HOFF,SP2,FMDSDESC;
          GOTO      UPHOSP
.
KHOS20    MOVE      "40",CCOL
          MOVE      "13",CVERT
          MOVE      "_",DEFYESNO
          CALL      YORN0000                     * get yes/no
          MOVE      FYESNO,FMCOJAUT
          MOVE      DNO,DANS6
          LOAD      DANS6,FYESNO,DYES
          GOTO      UPHOSP
.
KHOS21    KEYIN     *P40:14,*EL,*V2LON,FMCOBUPD
          RESET     FMCOBUPD
          GOTO      UPHOSP IF NOT EOS
          MOVE      SP2,FMCOBUPD
          GOTO      UPHOSP
.
KHOS22    MOVE     FORTY,CCOL
          MOVE     TEN5,CVERT
          CALL     KIBGSA00
          BRANCH   EXIT,KHOS22,KHOS22E
.
KHOS22D   MOVE     IBGSCODE,FMCOPAYG
          DISPLAY  *P40:15,*V2LON,FMCOPAYG,*HOFF,*P48:15,IBGSDESC
          MOVE     ZERO,OVRCD
          GOTO     UPHOSP
.
KHOS22E   MOVE     SP6,IBGSCODE
          MOVE     SP70,IBGSDESC
          GOTO     KHOS22D
.
KHOS23    MOVE     FORTY,CCOL
          MOVE     TEN6,CVERT
          CALL     KIBGSA00
          BRANCH   EXIT,KHOS23,KHOS23E
.
KHOS23D   MOVE     IBGSCODE,FMCOINGS
          DISPLAY  *P40:16,*V2LON,FMCOINGS,*HOFF,*P48:16,IBGSDESC
          MOVE     ZERO,OVRCD
          GOTO     UPHOSP
.
KHOS23E   MOVE     SP6,IBGSCODE
          MOVE     SP70,IBGSDESC
          GOTO     KHOS23D
.
KHOS24    MOVE     FORTY,CCOL
          MOVE     TEN7,CVERT
          CALL     KAPMAA00
          BRANCH   EXIT,KHOS24,KHOS24E
.
KHOS24D   MOVE     APMACRD,FMCOPGCR
          DISPLAY  *P40:17,*V2LON,FMCOPGCR,*HOFF,*P48:17,APMACN1
          MOVE     ZERO,OVRCD
          GOTO     UPHOSP
.
KHOS24E   MOVE     SP6,FMCOPGCR
          MOVE     SP70,APMACN1
          GOTO     KHOS24D
.
KHOS25    KEYIN     *P40:18,*EL,*V2LON,FMCOEXTR
          RESET     FMCOEXTR
          GOTO      UPHOSP IF NOT EOS
          MOVE      SP1,FMCOEXTR
          GOTO      UPHOSP
.
KHOS26    MOVE     FORTY,CCOL
          MOVE     TEN9,CVERT
          CALL     KIBBAA00
          BRANCH   EXIT,KHOS26E,KHOS26E
.
          COMPARE  ZERO,IBBAACTV
          GOTO     KHOS26D IF EQUAL
.
          MOVE     "Invalid BAS Code Inactive - ",DISPMSG
          CALL     MESSAGE1
          GOTO     KHOS26
.
KHOS26D   MOVE     IBBABASC,FMCOPBAS
          DISPLAY  *P40:19,*V2LON,FMCOPBAS,*HOFF,*P48:19,IBBADESC
          MOVE     ZERO,OVRCD
          GOTO     UPHOSP
.
KHOS26E   MOVE     SP3,IBBABASC
          MOVE     SP70,IBBADESC
          GOTO     KHOS26D
.
KHOS27    MOVE     FORTY,CCOL
          MOVE     TWENTY,CVERT
          CALL     KIBBAA00
          BRANCH   EXIT,KHOS27E,KHOS27E
.
          COMPARE  ZERO,IBBAACTV
          GOTO     KHOS27D IF EQUAL
.
          MOVE     "Invalid BAS Code Inactive - ",DISPMSG
          CALL     MESSAGE1
          GOTO     KHOS27
.
KHOS27D   MOVE     IBBABASC,FMCOXBAS
          DISPLAY  *P40:20,*V2LON,FMCOXBAS,*HOFF,*P48:20,IBBADESC
          MOVE     ZERO,OVRCD
          GOTO     UPHOSP
.
KHOS27E   MOVE     SP3,IBBABASC
          MOVE     SP70,IBBADESC
          GOTO     KHOS27D
.
USER9000  WRITAB    CONTROLF,NUM50;*85,FMCOLOGR:
                                   *238,FMCOSTSC,*245,FMCOINVP,FMCOJAUT:
                                   *248,FMCOBUPD
          WRITAB    CONTROLF,NUM51;*242,FMDEFCRD,FMDEFLED,FMDEFDIS
          CALL      WRFMCO66
.
USER9999  RETURN
.
.******************************************************************************
.  SCRA - Display Screen A                       Called by EBAL, redisps
.******************************************************************************
SCRA0000  MOVE      "2",SCRNO
          DISPLAY   *P55:3,*EF,*V2LON,"Extract Balances":
                    *P5:4,*V2LON,"Extraction Parameters":
                    *P1:6," 1",*HOFF,". Hospital Code        : ",*V2LON:
                    *P1:7," 2",*HOFF,". Financial Year       : ",*V2LON:
                    *P1:8," 3",*HOFF,". Last Transfer Period : ",*V2LON:
                    *P1:9," 4",*HOFF,". Current Year Budget  : ",*V2LON:
                   *P1:10," 5",*HOFF,". Last Year Budget     : ",*V2LON:
                   *P1:11," 6",*HOFF,". Extract Balances Dir : ",*V2LON:
                   *P1:12," 7",*HOFF,". Extract Ledger       : ",*V2LON:
                   *P5:14,"Installation Parameters":
                   *P1:16," 8",*HOFF,". Current Year Budget  : ",*V2LON:
                   *P1:17," 9",*HOFF,". Last Year Budget     : ",*V2LON:
                   *P1:18,"10",*HOFF,". Install Balances Dir : ",*V2LON:
                   *P1:19,"11",*HOFF,". Consolidated Ledger  : ",*V2LON:
                   *P28:6,FMCOHOSP:
                   *P28:7,FMCOYEAR:
                   *P28:8,FMCOPERD;
.
          UNPACK   SP70,FMBTDESC
          PACK     KEY4,FMCOCBUD,SP70
          CALL     RDFMBT1
          DISPLAY  *P28:9,*V2LON,FMCOCBUD,*HOFF,SP2,FMBTDESC;
.
          UNPACK   SP70,FMBTDESC
          PACK     KEY4,FMCOLBUD,SP70
          CALL     RDFMBT1
.
          UNPACK   SP70,FMLADESC
          PACK     KEY2,FMCOELED,SP70
          CALL     RDFMLA1
          DISPLAY  *P28:10,*V2LON,FMCOLBUD,*HOFF,SP2,FMBTDESC:
                   *P28:11,*V2LON,FMCOSDIR:
                   *P28:12,*V2LON,FMCOELED,*HOFF,SP2,FMLADESC;
.
          UNPACK   SP70,FMBTDESC
          PACK     KEY4,FMCOLCBU,SP70
          CALL     RDFMBT1
          DISPLAY  *P28:16,*V2LON,FMCOLCBU,*HOFF,SP2,FMBTDESC;
.
          UNPACK   SP70,FMBTDESC
          PACK     KEY4,FMCOLLBU,SP70
          CALL     RDFMBT1
.
          UNPACK   SP70,FMLADESC
          PACK     KEY2,FMCOLLED,SP70
          CALL     RDFMLA1
          DISPLAY  *P28:17,*V2LON,FMCOLLBU,*HOFF,SP2,FMBTDESC:
                   *P28:18,*V2LON,FMCOLDIR:
                   *P28:19,*V2LON,FMCOLLED,*HOFF,SP2,FMLADESC:
                   *P28:19,*V2LON,FMCOLLED,*HOFF,SP2,FMLADESC:
                  *P5:21,"Note : If last years budget is not set up, then both":
                  *P5:22,"last years actuals and budgets will not be loaded";
.
SCRA9999  RETURN
.******************************************************************************
.  EBAL - Perform extract balances screen        Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
EBAL0000  CALL      SCRA0000           * display screen A
.
EBAL0100  CALL      MAINQST            * get option
          MOVE      CCITEM,OPTIONA
.
EBAL0110  MOVE      "28",CCOL          * get screen address
          LOAD      CVERT,OPTIONA,FIVE,FIVE,FIVE,FIVE,FIVE:
                                  FIVE,FIVE,EIGHT,EIGHT,EIGHT,EIGHT
          ADD       OPTIONA,CVERT
          MOVE      OPTIONA,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,EBAL9500,EBAL9000:                   * quit, continue
                       EBAL1100,EBAL1200,EBAL1300,EBAL1400: * execute option
                       EBAL1400,EBAL1500,EBAL1600,EBAL1400:
                       EBAL1400,EBAL1500,EBAL1700
          BEEP                         * illegal option
          GOTO      EBAL0100           * get another option
.
.---- option 1 ----
.
EBAL1100  MOVE      UNDLN70,FMCOHOSP
          KEYIN     *PCCOL:CVERT,*DV,FMCOHOSP:
                    *PCCOL:CVERT,*V2LON,*DE,*JR,*ZF,FMCOHOSP:
                    *PCCOL:CVERT,*DV,FMCOHOSP
          PACK      FMCOHOSP,FMCOHOSP,SP70
.
          MATCH     "0\",FMCOHOSP
          GOTO      EBAL9500 IF EQUAL       * exitchar entered ?
.
          MATCH     "00",FMCOHOSP
          GOTO      EBAL1100 IF EQUAL       * nothing entered ?
.
          MATCH     SP70,FMCOHOSP
          GOTO      EBAL1100 IF EQUAL       * nothing entered ?
          GOTO      EBAL0100
.
.---- option 2 ----
.
EBAL1200  MOVE      UNDLN70,FMCOYEAR
          KEYIN     *PCCOL:CVERT,*DV,FMCOYEAR:
                    *PCCOL:CVERT,*V2LON,*DE,*JR,*ZF,FMCOYEAR:
                    *PCCOL:CVERT,*DV,FMCOYEAR
          PACK      FMCOYEAR,FMCOYEAR,SP70
.
          MATCH     "000\",FMCOYEAR
          GOTO      EBAL9500 IF EQUAL       * exitchar entered ?
.
          MATCH     "0000",FMCOYEAR
          GOTO      EBAL1200 IF EQUAL       * nothing entered ?
.
          MATCH     SP70,FMCOYEAR
          GOTO      EBAL1200 IF EQUAL       * nothing entered ?
          GOTO      EBAL0100
.
.---- option 3 ----
.
EBAL1300  MOVE      UNDLN70,FMCOPERD
          KEYIN     *PCCOL:CVERT,*DV,FMCOPERD:
                    *PCCOL:CVERT,*V2LON,*DE,*JR,*ZF,FMCOPERD:
                    *PCCOL:CVERT,*DV,FMCOPERD
          PACK      FMCOPERD,FMCOPERD,SP70
.
          MATCH     "0\",FMCOPERD
          GOTO      EBAL9500 IF EQUAL       * exitchar entered ?
.
          MATCH     "00",FMCOPERD
          GOTO      EBAL1300 IF EQUAL       * nothing entered ?
.
          MATCH     SP70,FMCOPERD
          GOTO      EBAL1300 IF EQUAL       * nothing entered ?
          GOTO      EBAL0100
.
.---- option 4 ----
.
EBAL1400  CALL      KBTYFM00
          BRANCH    EXIT,EBAL1410,EBAL9500
.
EBAL1410  MOVE      SP70,FMBTDESC
          PACK      KEY4,FMBTCODE,SP70
          CALL      RDFMBT1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBTCODE,*HOFF,SP2,FMBTDESC;
          STORE     FMBTCODE,OPTIONA,KEY4,KEY4,KEY4,FMCOCBUD:
                                     FMCOLBUD,KEY4,KEY4,FMCOLCBU,FMCOLLBU
          GOTO      EBAL0100
.
.---- option 5 ----
.
EBAL1500  KEYIN     *P1:24,*V2LON,"***  Directory must end with a '/'  ***":
                    *EL,*HOFF,*PCCOL:CVERT,"______________________________":
                    *PCCOL:CVERT,*V2LON,KEY30,*EL
          STORE     KEY30,OPTIONA,KEY4,KEY4,KEY4,KEY4,KEY4:
                                  FMCOSDIR,KEY4,KEY4,KEY4,FMCOLDIR
          GOTO      EBAL0100
.
.---- option 6 ----
.
EBAL1600  CALL      KLMAFM00                * get data
          BRANCH    EXIT,EBAL1610,EBAL9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
EBAL1610  MOVE      SP70,FMLADESC
          PACK      FMCOELED,FMLALEDG,SP70
          PACK      KEY2,FMLALEDG,SP70
          CALL      RDFMLA1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
          GOTO      EBAL0100
.
.---- option 7 ----
.
EBAL1700  CALL      KLMAFM00                * get data
          BRANCH    EXIT,EBAL1710,EBAL9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
EBAL1710  MOVE      SP70,FMLADESC
          PACK      FMCOLLED,FMLALEDG,SP70
          PACK      KEY2,FMLALEDG,SP70
          CALL      RDFMLA1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
          GOTO      EBAL0100
.
.
EBAL9000  MOVE      ZERO,EXIT          * continue
          GOTO      EBAL9999
.
EBAL9500  MOVE      ONE,EXIT           * quit
.
EBAL9999  RETURN
.*****************************************************************************
.         DIB60000                               Called By ML0000
.         Read and display IBA parameters
.*****************************************************************************
DIB60000  DISPLAY   *P55:3,*EF,*V2LON,"I.B.A Control Screen 5",*HOFF:
                    *P1:4,*V2LON," 1",*HOFF:
                           ". Prt Address on Cheq. in STD Layout:":
                    *P1:5,*V2LON," 2",*HOFF:
                           ". Update Batches for Prop. Payments :"
.
          MOVE      ZERO,F1
          MOVE      FMCOEPWC,F1
          MOVE      DNO,DANSX
          LOAD      DANSX,F1,DYES
          DISPLAY   *P41:4,*V2LON,DANSX;
.
          MOVE      ZERO,F1
          MOVE      FMCOUBPP,F1
          MOVE      DNO,DANS2
          LOAD      DANS2,F1,DYES
          DISPLAY   *P41:5,*V2LON,DANS2;
.
DIB6999   RETURN
.******************************************************************************
.         GIB60000                               Called By ML0000
.         get any changes from user to IBA systems parameters
.******************************************************************************
GIB60000  CALL      MAINQST            * post cancel or select item
.
          COMPARE   ZERO,CCITEM        * Post = 0
          GOTO      GIB69000 IF EQUAL
          COMPARE   "-1",CCITEM        * Cancel = -1
          GOTO      GIB69990 IF EQUAL
.
          BRANCH    CCITEM,GIB61100,GIB61200
          BEEP
          GOTO      GIB60000
.
.---- Print Address on Cheque in Standard Layout
.
GIB61100  MOVE      "41",CCOL
          MOVE      "4",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCOEPWC
          GOTO      GIB60000
.
.---- Update Batches for Proposed Payments
.
GIB61200  MOVE      "41",CCOL
          MOVE      "5",CVERT
          CALL      YORN0000
          MOVE      FYESNO,FMCOUBPP
          GOTO      GIB60000
.
GIB69000  MOVE      ZERO,EXIT
          GOTO      GIB69999
.
GIB69990  MOVE      ONE,EXIT
.
GIB69999  RETURN
.
.******************************************************************************
.         READ0000                               Called by ML
.         Read controlf vars to file
.******************************************************************************
READ0000  CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CALL      RDFMCO66
          READ      CONTROLF,TWO;*207,HMENUFMS
          READ      CONTROLF,TWENTY3;*95,HACCNT
READ9999  RETURN
.******************************************************************************
.         WRIT0000                               Called by ML
.         Write controlf vars to file
.******************************************************************************
WRIT0000  DISPLAY   *P60:24,*V2LON,"Updating controlf";
          CALL      WRFMCO50
          CALL      WRFMCO51
          CALL      WRFMCO52
          CALL      WRFMCO65
          CALL      WRFMCO66
          WRITAB    CONTROLF,TWO;*207,HMENUFMS
          WRITAB    CONTROLF,TWENTY3;*95,HACCNT
          DISPLAY   *P1:24,*EL;
WRIT9999  RETURN
.*****************************************************************************
.         CPWD0000                               Called by ML
.    get password from controlf 
.******************************************************************************
CPWD0000  BRANCH    NEZSEC,CPWD8000
.
          KEYIN     *P1:24,*EL,*P20:24,"Enter Password : ",*EOFF,DIM8;
          PACK      DIM8,DIM8,SP70
          MATCH     DIM8,HSECRFMS
          GOTO      CPWD9000 IF NOT EQUAL
.
          KEYIN     *EOFF,DIM8;
          MOVE      DIM8,FORM8
.
          SUB       CDD,FORM8
          SUB       CMM,FORM8
          SUB       CYY,FORM8
.
          COMPARE   ZERO,FORM8
          GOTO      CPWD9000 IF NOT EQUAL
.
CPWD8000  MOVE      ZERO,EXIT 
          MOVE      ONE,NEZSEC
          GOTO      CPWD9999
.
CPWD9000  MOVE      ONE,EXIT
.
CPWD9999  RETURN
.******************************************************************************
.         Redisplay routines
.******************************************************************************
.
RCATFM00  
RCODFM00  
          CALL      DUSR0000
          RETURN
.
RDISFM00  
RBTYFM00  
RAMAFM00  
RSBAFM00  
RLMAFM00  
RBPFFM00  
RLMCFM00  
RRESFM00  
          BRANCH    SCRNO,RDISA000,RDISB000
.
RDISA000  CALL      DDIS0000
          RETURN
.
RDISB000  CALL      SCRA0000
          RETURN
.
.******************************************************************************
.         File includes
.******************************************************************************
          INC       APSMASIO/INC
          INC       APSMXRIO/INC
.
          INC       FMSAMAIO/INC
          INC       FMSBPFIO/INC
          INC       FMSBTYIO/INC
          INC       FMSCONIO/INC
          INC       FMSCODIO/INC
          INC       FMSDISIO/INC
          INC       FMSLMAIO/INC
          INC       FMSCSAIO/INC
          INC       FMSLMBIO/INC
          INC       FMSLMCIO/INC
          INC       FMSRESIO/INC
          INC       FMSSBAIO/INC
.
          INC       APSMASKY
          INC       APSCKIKY
          INC       FMSAMAKY
          INC       FMSSBAKY
          INC       FMSRESKY
          INC       FMSBPFKY
          INC       FMSBTYKY
          INC       FMSCODKY
          INC       FMSDISKY
          INC       FMSLMAKY
          INC       FMSLMCKY
.
          INC       IBABASIO/INC
          INC       IBABASKY
          INC       IBAGSTIO/INC
          INC       IBAGKIKY
          INC       IBAGSTKY
          INC       FMSSTDCD
