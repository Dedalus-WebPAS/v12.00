.,*****************************************************************************
.* System         : Accident and Emergency                       Release 5.01 *
.* Program        : IBAAAE87.PBL                                              *
.* Name           : Print A&E Letters                                         *
.******************************************************************************
.* Date           : 15/04/1994                                                *
.* Author         : Rob Leonard                                               *
.* Function       : Print A&E Letters                                         *
.* Modifications  :                                                           *
.*                                                                            *
.*       V10.04.02  12/06/2014  Steve Armstrong        CAR 301639             *
.*                  Added call to DTMP0000 on exiting the program             *
.*       V10.04.01  07/03/2014  Ania P                 CAR 261630             *
.*                  Remove the use of PORT for temp file names                *
.******************************************************************************
.*        V9.03.01  29/10/2003  Sandra Barcham         43893                  *
.*                  Recompiled for NZHISIIO and NZHISIUP                      *
.*        V9.02.01  31/01/2003  Lina Vo                SRF22709               *
.*                  Remove open of outpreaf                                   *
.*        V5.10.01  21/08/2002  Raghunandan Surve,HPS  SRF18814               *
.*                  Re-compiled for PATGPCDS                                  *
.*        V5.08.02  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.01  11/07/2000  Steve Downing                                 *
.*                  Initialised CKYIMAND variable for PATDOCKY                *
.*        V5.07.01  18/10/1999  Steve Downing  SRF 646137                     *
.*                  Added PTCNDCQS - Single column for doctor code search     * 
.*        V5.07.00  22/10/1998  Jim Sathopoulos                               *
.*                  507 Changes                                               *
.*        V5.04.02  14/06/1997  Steve Armstrong                               *
.*                  Fixed bugs in global recompile                            *
.*        V5.04.01  18/02/97 Howellsy     WHT                                 *
.*                  Added Cell Phone, Postal Add1-4, Postal Post Code         *
.*        V5.03.01  16/04/1996    Howellsy   5.04                             *
.*                  Changed Accident & Emergency to Emergency.                *
.*        V5.03.B0  16/05/1995  Paul Howells         SRF 134950               *
.*                  Changed Priority Code to a hospital controlled code       *
.*        V5.02.01  30.11.1994    B.G.Ackland                                 *
.*                  Remove Date of Death Link to NHI/MWS                      *
.*                  Recompile for Latest NHI/MWS Changes                      *
.*        V5.02.02  11/12/1994  Graeme Williams                               *
.*                  Added option for a fifth priority code                    *
.*        V5.02.03  27/02/1995   Paul Howells    SRF 134113                   *
.*                  Test nhi paramater before opening nhi files.              *
.*        V5.02.04  24/03/1995    Paul howells   SRF135690 & 135691           *
.*                  Recompile for PATGPPKY & PATGPCKY.                        *
.******************************************************************************
.
.    PROGRAMMERS NOTE - Adding to Word Processor Variables  (AAE86 & AAE87)
.
.    Add to LC and LP variables on an Alphabetical order basis (PAGE first)
.    SEARCH command altered for total number of variables.
.    LOAD command altered to handle new variable(s).
.
.======================================================================
.         FILE INCLUDES
.======================================================================
.
          INC       STD001FD
          INC       AAECONFD/INC
          INC       AAELETFD/INC            * A&E letters file
          INC       AAEDE1FD/INC            * A&E Master Details
          INC       AAEDI1FD/INC
          INC       BOKRC1FD/INC
          INC       NZHISIFD/INC
          INC       OUTPREFD/INC
          INC       PATALRFD/INC
          INC       PATCALAG/INC 
          INC       PATCOMM/INC             * common data
          INC       PATCODFD/INC            * codes file
          INC       PATCONFD/INC            * control file
          INC       PATDHEAD/INC
          INC       PATDNRFD/INC
          INC       PATDSCFD/INC            * discharge file
          INC       PATDO1FD/INC            * doctors file
          INC       PATFN1FD/INC            * health fund
          INC       PMSHCLFD/INC
          INC       PMSHCPFD/INC            * GP file
          INC       PMSHCGFD/INC            * GP prac file
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       PATMI1FD/INC
          INC       NHIMASFD/INC
          INC       PATNIDFD/INC
          INC       PATPR1FD/INC
          INC       PATSDNFD/INC
          INC       PATSMWFD/INC
          INC       PATGSRFD/INC
          INC       PATTRNFD/INC
          INC       PMSVX1FD/INC
          INC       PMIVARS/INC
          INC       SCRPSTFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.======================================================================
.         PROGRAM VARIABLES
.======================================================================
.
BJDAY     FORM      3
CJDAY     FORM      3 
CKACTIVE  FORM      1 
CKLINKED  FORM      1
CMDLINE   DIM       50        * for execte command
CNTURNO   FORM      2         * counter of records displayed
CODE      DIM       2         * patdscod
CONAME    DIM       35        * hospital name
COUNT     FORM      2
CURRDATE  DIM       8         * current date
CURRPERD  DIM       6         * current period
DATELINE  DIM       20
DEXT      DIM       3
DIM3      DIM       3
DIM4      DIM       4
DIM40     DIM       40        * doctors formatted surname
DIM70     DIM       70        * working copy of line of text when % var in it
DIM70B    DIM       70        * use this to get rid of text before % sign
DISPSTRN  DIM       70        * the %variable actual value
DOCCODE   DIM       6
DPRIT     DIM       12
ENDSTR    FORM      2         * fp position in string
FORM3     FORM      3         * for letters
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
INITIAL   DIM       1
LETTDATE  DIM       8         * letter date
LETTNUMB  FORM      3         * letter number
LINE      DIM       55
MODE1     DIM       1
MONTH     DIM       9
NORGE01   FORM      1         * 1=range not entered, 0=range entered
NORGE02   FORM      1
NORGE03   FORM      1
NORGE04   FORM      1
NORGE05   FORM      1 
NORGE06   FORM      1  
NORGE07   FORM      1   
NORGE08   FORM      1    
NORGE09   FORM      1     
NORGE10   FORM      1      
NORGE11   FORM      1       
NORGE12   FORM      1
NORGE13   FORM      1 
NORGE14   FORM      1  
NORGE15   FORM      1   
NORGE16   FORM      1    
NORGE17   FORM      1     
NORGE18   FORM      1      
NORGE19   FORM      1       
NORGE20   FORM      1        
NORGE21   FORM      1 
NORGE22   FORM      1  
NORGE23   FORM      1   
NORGE24   FORM      1    
NORGE25   FORM      1     
NORGE26   FORM      1
NORGE27   FORM      1 
OK        FORM      1         * flag to indicate something entered
PERCPOS   FORM      2         * position % is located at
PRTSTRNG  DIM       70        * the modified string with % vars subst in
SCNDGNAM  DIM       40
SCRNFLAG  FORM      1         * redisplay flag
SEARCHV   DIM       30        * the %var to search for in the list
SRCHNUM   FORM      2         * number of the variable in the list 
STARTSTR  FORM      2         * fp position in string
SVERT     FORM      2
URNO01    DIM       16
URNO02    DIM       16
URNO03    DIM       16
URNO04    DIM       16
URNO05    DIM       16
URNO06    DIM       16
URNO07    DIM       16
URNO08    DIM       16
URNO09    DIM       16
URNO10    DIM       16
URNO11    DIM       16
URNO12    DIM       16
URNO13    DIM       16
URNO14    DIM       16
URNO15    DIM       16
URNO16    DIM       16
URNO17    DIM       16
URNO18    DIM       16
WORKDATE  DIM       8
.
LEFTMARG  FORM      3         * left margin
PHYSPAGE  FORM      3         * physical page
TOPMARG   FORM      3         * top margin
BOTTMARG  FORM      3         * bottom margin
MLETPLEN  FORM      3         * length to print to
.
.         Variables for single and range searches
.
DSFRAAE   DIM       8         * AAE Number
DSTOAAE   DIM       8
DXFRAAE   DIM       8
DXTOAAE   DIM       8
.
DSFRDOCT  DIM       6         * Doctor Code
DSTODOCT  DIM       6
DXFRDOCT  DIM       6
DXTODOCT  DIM       6
.
DSFRDD    DIM       9         * Discharge Diagnosis
DSTODD    DIM       9
DXFRDD    DIM       9
DXTODD    DIM       9
.
DSFRDS    DIM       10         * Date Seen
DSTODS    DIM       10
DXFRDS    DIM       8
DXTODS    DIM       8
.
DSFRDT    DIM       10        * Discharge Date
DSTODT    DIM       10
DXFRDT    DIM       8
DXTODT    DIM       8
.
DSFRDV    DIM       10         * Date of Visit
DSTODV    DIM       10
DXFRDV    DIM       8
DXTODV    DIM       8
.
DSFRDURN  DIM       8         * Duration of Wait
DSTODURN  DIM       8
DXFRDURN  FORM      4
DXTODURN  FORM      4
.
DSFRRGP   DIM       8         * Referring GP
DSTORGP   DIM       8
DXFRRGP   DIM       8
DXTORGP   DIM       8
.
DSFRUR    DIM       8         * U/R
DSTOUR    DIM       8
DXFRUR    DIM       8
DXTOUR    DIM       8
.
DXADHOS   DIM       1         * Single range search vars
DSADHOS   DIM       3
DXCOMC    DIM       3
DXCOMPW   DIM       3
DXDSCHS   DIM       3
DXINIT    DIM       3
DXINSR    DIM       3
DXMODAR   DIM       3
DXPATCL   DIM       3
DXPLACE   DIM       3
DXPRAAE   DIM       3
DXSEAT    DIM       3
DXSITUT   DIM       3
DXSRCRF   DIM       3
DXUSDEF1  DIM       3
DXUSDEF2  DIM       3
DXUSDEF3  DIM       3
DXUSDEF4  DIM       3
DXUSDEF5  DIM       3
.
.         the variables required for printing information
.
LPAAENUM  DIM       8
LPADHOS   DIM       3
LPCCODE   DIM       3
LPCCODED  DIM       20
LPCOMPW   DIM       3
LPCOMPWD  DIM       20
LPDADMIT  DIM       5
LPDADMIS  DIM       8
LPDATES   DIM       20
LPDCODE   DIM       3
LPDDATE   DIM       20 
LPDDIAG   DIM       9
LPDIAG    DIM       50
LPDNAME   DIM       50
LPDSTAT   DIM       3
LPDTIME   DIM       8 
LPDURWT   DIM       4 
LPEADDA   DIM       35
LPEADDB   DIM       35
LPEADDC   DIM       35
LPEADDD   DIM       35
LPEDESC   DIM       20
LPEPHONE  DIM       20
LPEPOST   DIM       8 
LPEWORK   DIM       6
LPFULLN   DIM       40
LPGIVN    DIM       25 
LPHELTH   DIM       6
LPHELTHD  DIM       20
LPHLTHT   DIM       8 
LPHLTHTD  DIM       20 
LPINCTM   DIM       5
LPISTAT   DIM       3 
LPISTATD  DIM       20 
LPINITC   DIM       3 
LPINITCD  DIM       20 
LPMODE    DIM       3 
LPMODED   DIM       20 
LPNATNUM  DIM       20
LPNOPREV  DIM       2 
LPPADDA   DIM       35 
LPPADDB   DIM       35
LPPADDC   DIM       35
LPPADDD   DIM       35
LPPCLSS   DIM       3
LPPCLSSD  DIM       20
LPPPBUS   DIM       20 
LPPPHOME  DIM       20 
LPPPOST   DIM       8 
LPPLIN    DIM       3 
LPPLIND   DIM       20 
LPPRAE    DIM       3
LPPRAED   DIM       20 
LPPRID    DIM       20
LPRGPCOD  DIM       8 
LPRGPNAM  DIM       40
LPRGPPC   DIM       6
LPRGPPD   DIM       20 
LPSEAT    DIM       3 
LPSEATD   DIM       20 
LPSIT     DIM       3 
LPSITD    DIM       20 
LPSORC    DIM       3 
LPSORCD   DIM       20 
LPSURN    DIM       20 
LPTIMEI   DIM       5
LPTIMES   DIM       5 
LPTODDAT  DIM       20
LPURNUM   DIM       8 
LPUDEF1   DIM       3
LPUDEF1D  DIM       20 
LPUDEF2   DIM       3 
LPUDEF2D  DIM       20 
LPUDEF3   DIM       3
LPUDEF3D  DIM       20 
LPUDEF4   DIM       3 
LPUDEF4D  DIM       20 
LPUDEF5   DIM       3 
LPUDEF5D  DIM       20 
LPVDATE   DIM       20
LPVTIME   DIM       5
LPOCELL   INIT      "XXXXXXXXXXXXXXXXXXXX"
LPOADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LPOADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LPOADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LPOADDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LPOPOST   INIT      "XXXXXXXX"
.
.======================================================================
.         CONSTANTS
.======================================================================
.
DPRIT1    INIT      "Urgent    "
DPRIT2    INIT      "Moderate  "
DPRIT3    INIT      "Non Urgent"
.
.         Word Processor program constants 
.
LCPAGE    INIT      "%page"        * Page Break
LCAAENUM  INIT      "%aaenum"      * A&E Number
LCADHOS   INIT      "%adhos"       * Admitted to Hospital
LCCCODE   INIT      "%ccode"       * Compensation Code (CL)
LCCCODED  INIT      "%ccoded"      * Compensation Code Description
LCCOMPW   INIT      "%compw"       * Completion Wait Code (EW)
LCCOMPWD  INIT      "%compwd"      * Completion Wait Code Description
LCDADMIT  INIT      "%dsadmit"     * Decision to Admit Time
LCDADMIS  INIT      "%dassess"     * Discharge Assessment
LCDATES   INIT      "%dateseen"    * Date Seen
LCDCODE   INIT      "%dcode"       * Doctor Code Allocated
LCDDATE   INIT      "%ddate"       * Discharge Date
LCDDIAG   INIT      "%disdiagc"    * Discharge Diagnosis Code
LCDIAG    INIT      "%diag"        * Diagnosis
LCDNAME   INIT      "%dname"       * Doctor Name Allocated
LCDSTAT   INIT      "%dstatus"     * Discharge Status
LCDTIME   INIT      "%dtime"       * Discharge Time
LCDURWT   INIT      "%durwt"       * Duration of Wait
LCEADDA   INIT      "%eadda"       * Employer address line 1
LCEADDB   INIT      "%eaddb"       * Employer address line 2
LCEADDC   INIT      "%eaddc"       * Employer address line 3
LCEADDD   INIT      "%eaddd"       * Employer address line 4
LCEDESC   INIT      "%edesc"       * Employer Description
LCEPHONE  INIT      "%ephone"      * Employer Phone
LCEPOST   INIT      "%epost"       * Employer Postcode
LCEWORK   INIT      "%ework"       * Employer / Workcare
LCFULLN   INIT      "%fulln"       * Patient Full name
LCGIVN    INIT      "%givn"        * Given names
LCHELTH   INIT      "%health"      * Health Fund
LCHELTHD  INIT      "%healthd"     * Health Fund Description
LCHLTHT   INIT      "%healtht"     * Health Fund Table
LCHLTHTD  INIT      "%healthtd"    * Health Fund Table Description
LCINCTM   INIT      "%inctime"     * Incident Time
LCISTAT   INIT      "%istatus"     * Insurance Status (U1)
LCISTATD  INIT      "%istatsd"     * Insurance Status Description
LCINITC   INIT      "%initcod"     * Initiator Code (AI)
LCINITCD  INIT      "%initcodd"    * Initiator Code Description
LCMODE    INIT      "%mode"        * Mode of arrival (EA)
LCMODED   INIT      "%moded"       * Mode of arrival Description
LCNATNUM  INIT      "%natnum"      * National number
LCNOPREV  INIT      "%noprev"      * No. Previous Visits Charged
LCPADDA   INIT      "%padda"       * Patient address line 1
LCPADDB   INIT      "%paddb"       * Patient address line 2
LCPADDC   INIT      "%paddc"       * Patient address line 3
LCPADDD   INIT      "%paddd"       * Patient address line 4
LCPCLSS   INIT      "%pclass"      * Patient Classification (A)
LCPCLSSD  INIT      "%pclassd"     * Patient Classification Description
LCPPBUS   INIT      "%ppbus"       * Patient phone business
LCPPHOME  INIT      "%pphome"      * Patient phone home
LCPPOST   INIT      "%ppost"       * Patient post code
LCPLIN    INIT      "%plinc"       * Place of Incident Code (AP)
LCPLIND   INIT      "%plincd"      * Place of Incident Description
LCPRAE    INIT      "%prevae"      * Previous A&E Attendance (EP)
LCPRAED   INIT      "%prevaed"     * Previous A&E Attendance Description
LCPRID    INIT      "%pridesc"     * Priority Description
LCRGPCOD  INIT      "%rgpcode"     * Referring GP Code
LCRGPNAM  INIT      "%rgpname"     * Referring GP Name
LCRGPPC   INIT      "%rgppcode"    * Referring GP Practice Code
LCRGPPD   INIT      "%rgppd"       * Referring GP Practice Description
LCSEAT    INIT      "%seat"        * Seatbelt Details Code (AR)
LCSEATD   INIT      "%seatd"       * Seatbelt Details Description
LCSIT     INIT      "%sit"         * Situation (ES)  
LCSITD    INIT      "%sitd"        * Situation Description  
LCSORC    INIT      "%sorc"        * Source of Referral (S)
LCSORCD   INIT      "%sorcd"       * Source of Referral Description
LCSURN    INIT      "%surn"        * Surname
LCTIMEI   INIT      "%timei"       * Time of Initial Assessment
LCTIMES   INIT      "%timeseen"    * Time Actually Seen
LCTODDAT  INIT      "%today"       * Todays Date
LCURNUM   INIT      "%urno"        * U/R Number
LCUDEF1   INIT      "%usdef1"      * User Defined Field 1
LCUDEF1D  INIT      "%usdef1d"     * User Defined Field 1 Description
LCUDEF2   INIT      "%usdef2"      * User Defined Field 2
LCUDEF2D  INIT      "%usdef2d"     * User Defined Field 2 Description
LCUDEF3   INIT      "%usdef3"      * User Defined Field 3
LCUDEF3D  INIT      "%usdef3d"     * User Defined Field 3 Description
LCUDEF4   INIT      "%usdef4"      * User Defined Field 4
LCUDEF4D  INIT      "%usdef4d"     * User Defined Field 4 Description
LCUDEF5   INIT      "%usdef5"      * User Defined Field 5
LCUDEF5D  INIT      "%usdef5d"     * User Defined Field 5 Description
LCVDATE   INIT      "%vdate"       * Date of Visit
LCVTIME   INIT      "%vtime"       * Time of Visit
LCCTELE   INIT      "%ctele"            * Cellular Phone Number
LCPODDA   INIT      "%podda"            * Postal address line 1
LCPODDB   INIT      "%poddb"            * Postal address line 2
LCPODDC   INIT      "%poddc"            * Postal address line 3
LCPODDD   INIT      "%poddd"            * Postal address line 4
LCPOOST   INIT      "%poost"            * Postal Post Code       
.
.
DEXT1     INIT      "st"
DEXT2     INIT      "nd"
DEXT3     INIT      "rd"
DEXT4     INIT      "th"
FINISH    INIT      "Finish"
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
MONTH1    INIT      "January"
MONTH2    INIT      "February"
MONTH3    INIT      "March"
MONTH4    INIT      "April"
MONTH5    INIT      "May"
MONTH6    INIT      "June"
MONTH7    INIT      "July"
MONTH8    INIT      "August"
MONTH9    INIT      "September"
MONTH10   INIT      "October"
MONTH11   INIT      "November"
MONTH12   INIT      "December"
NINES     INIT      "9999999999999999999"
PRFXFILE  INIT      "aae87t"
REPSTR    INIT      "a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0":
                    "1020304050"
SP50      INIT      "                                                  "
SPECCHAR  INIT      "%"
STARS     INIT      "*****************************"
START     INIT      "Start"
TMPKEY    INIT      " 37 U1-16 "
Z15       INIT      "zzzzzzzzzzzzzzz"
ZEDS      INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
.======================================================================
.         FILE DEFINITIONS
.======================================================================
.
TEMPFILE  IFILE     SQL, FIXED=37, KEY="U1-16"
.
.Name     Type      Size   Physical  Start  Desc
.----     ----      ----   --------  -----  ---------------
XURNO     DIM       8         8         1   U/R Number
XAAENUM   DIM       8         8         9   AAE Number
XSNAME    DIM       20        20       17
. End of record                        37
.
.
PRGID     INIT      "IBAAAE87"
PRGNAM    INIT      "Print Emergency Letters"
VERSION   INIT      "V12.00.00"
.
.*********************************************************************
.*                  ML0000                                           *
.*        Mainline Code                                              *
.*********************************************************************
ML0000    CALL      INIT0000
.
ML1000    CALL      OPTN0000                * print letters ??
          BRANCH    EXIT,ML9999
.
ML2000    CALL      CLRV0000                * clear all variables
          CALL      RDSC0000                * display screen
          CALL      PARA0000                * enter the parameters
          BRANCH    EXIT,ML1000
.
ML4000    CALL      EDIT0000                * display patients
          BRANCH    EXIT,ML2000
.
ML5000    CALL      LETT0000                * select the letter
          BRANCH    EXIT,ML4000
.
ML6000    CALL      PRNT0000                * print the letter
          GOTO      ML2000
.
ML9999    CALL      DTMP0000
          CHAIN     PGM
+
.*********************************************************************
.*                  INIT0000                    Called by : ML0000   *
.*        Initialization and open files                              *
.*********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CNEWDS
          MOVE      ONE,CCANLDTE            * can cancel def
          MOVE      ONE,CDEFDTE             * once to accept default
          MOVE      ZERO,CHIGHLT            * highlight
.
          CALL      TFILENAM
          PACK      CFNAME,TFILNAME,SP70
.
          DISPLAY   *P50:24,"Opening",*EL;
          DISPLAY   *P58:24,"aaeletaf"
          OPEN      AAELETA1,"aaeletaf"
          OPEN      AAELETA2,"aaeletaf"
          DISPLAY   *P58:24,"aaede1af"
          OPEN      AAEDE1A1,"aaede1af"
          OPEN      AAEDE1A2,"aaede1af"
          DISPLAY   *P58:24,"aaedi1af"
          OPEN      AAEDI1A1,"aaedi1af"
          DISPLAY   *P58:24,"bokrc1af"
          OPEN      BOKRC1A6,"bokrc1af"
          DISPLAY   *P58:24,"controlf"
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P58:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
          DISPLAY   *P58:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
          DISPLAY   *P58:24,"pmshclaf"
          OPEN      PMSHCLA1,"pmshclaf"
.         DISPLAY   *P58:24,"outpreaf"
.         OPEN      OUTPREA1,"outpreaf"
          DISPLAY   *P58:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          DISPLAY   *P58:24,"patmx1af"
          OPEN      PATMX1A1,"patmx1af"
          DISPLAY   *P58:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
          DISPLAY   *P58:24,"patmi1af"
          OPEN      PATMI1A1,"patmi1af"
          DISPLAY   *P58:24,"patpramf"
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
          DISPLAY   *P58:24,"patpraxf"
          DISPLAY   *P58:24,"patfn1af"
          OPEN      PATFN1A1,"patfn1af"
          DISPLAY   *P58:24,"pmshcpaf"
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSHCPA2,"pmshcpaf"
          DISPLAY   *P58:24,"pmshcgaf"
          OPEN      PMSHCGA1,"pmshcgaf"
          DISPLAY   *P58:24,"patdschf"
          OPEN      PATDSCH1,"patdschf"
          DISPLAY   *P58:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATDO1A2,"patdo1af"
          DISPLAY   *P58:24,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
.
          READ      CONTROLF,TWENTY1;*247,PTCNDCQS
          READ      CONTROLF,THIRTY;*208,AECNDXPA,*218,AECNDXPB,*228,AECNDXPC:
                                    *238,AECNDXPD
          READ      CONTROLF,FIFTY9;*234,PTCNNMPI
          READ      CONTROLF,SEVENTY8;*6,AECNDXPE
          CALL      GPDX0000                     * get priority descriptions
.
          IF        PTCNNMPI = 1
            DISPLAY   *P58:24,"nhimasaf"
            OPEN      NHIMASA2,"nhimasaf"
          ELSE
            DISPLAY   *P58:24,"patnidaf"
            OPEN      PATNIDA1,"patnidaf"
          ENDIF
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
INIT9999  RETURN
+
.*********************************************************************
.*                  OPTN0000                    Called by : ML1000   *
.*        Determine whether to print letters                         *
.*        Returns : EXIT = 1      exit selected                      *
.*********************************************************************
OPTN0000  MOVE      FALSE,EXIT
          HLINE     *G37,2,52,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*P1:5,ONE,*HOFF:
                    *P3:4,"= Exit":
                    *P3:5,"= Print Emergency Letters":
                    *P1:7,"Select Option :"
.
OPTN1000  KEYIN     *P17:7,*DV,UNDLN1:
                    *P17:7,*V2LON,MOPTION
.
          BRANCH    MOPTION,OPTN9999
.
          COMPARE   ZERO,MOPTION
          GOTO      OPTN9000 IF EQUAL       * exit selected
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      TRUE,EXIT
          CALL      DTMP0000                * delete temp file
.
OPTN9999  RETURN
+
.*********************************************************************
.*                  CLRV0000                    Called by : ML2000   *
.*        Clear all input and display variables             PARA5000 *
.*********************************************************************
CLRV0000  MOVE      SP8,DXFRUR              * code : from U/R
          MOVE      "zzzzzzzz",DXTOUR       * code : to   U/R
          MOVE      SP8,DSFRUR
          MOVE      SP8,DSTOUR
.
          MOVE      SP8,DXFRAAE             * code : from AAE
          MOVE      "zzzzzzzz",DXTOAAE      * code : to   AAE
          MOVE      SP8,DSFRAAE
          MOVE      SP8,DSTOAAE
.
          MOVE      SP8,DXFRDV              * code : from Date of Visit
          MOVE      "zzzzzzzz",DXTODV       * code : to   Date of Visit
          MOVE      SP10,DSFRDV
          MOVE      SP10,DSTODV
.
          MOVE      SP8,DXFRDOCT            * code : from Doctor
          MOVE      "zzzzzzzz",DXTODOCT     * code : to   Doctor 
          MOVE      SP8,DSFRDOCT
          MOVE      SP8,DSTODOCT
.
          MOVE      ZERO,DXFRDURN           * code : from Duration
          MOVE      "9999",DXTODURN         * code : to   Duration
          MOVE      SP8,DSFRDURN
          MOVE      SP8,DSTODURN
.
          MOVE      SP8,DXFRDS              * code : from Date seen
          MOVE      "zzzzzzzz",DXTODS       * code : to   Date seen
          MOVE      SP10,DSFRDS
          MOVE      SP10,DSTODS
.
          MOVE      SP8,DXFRRGP             * code : from Referring GP
          MOVE      "zzzzzzzz",DXTORGP      * code : to   Referring GP
          MOVE      SP8,DSFRRGP
          MOVE      SP8,DSTORGP
.
          MOVE      SP8,DXFRDT              * code : from Discharge Date
          MOVE      "zzzzzzzz",DXTODT       * code : to   Discharge Date
          MOVE      SP10,DSFRDT
          MOVE      SP10,DSTODT
.
          MOVE      SP10,DXFRDD             * code : from Discharge Diag
          MOVE      "zzzzzzzzz",DXTODD      * code : to   Discharge Diag
          MOVE      SP10,DSFRDD
          MOVE      SP10,DSTODD
.
          MOVE      SP50,DXADHOS  
          MOVE      SP50,DXCOMC   
          MOVE      SP50,DXCOMPW 
          MOVE      SP50,DXDSCHS 
          MOVE      SP50,DXINIT   
          MOVE      SP50,DXINSR  
          MOVE      SP50,DXMODAR
          MOVE      SP50,DXPATCL
          MOVE      SP50,DXPLACE
          MOVE      SP50,DXPRAAE
          MOVE      SP50,DXSEAT
          MOVE      SP50,DXSITUT  
          MOVE      SP50,DXSRCRF  
          MOVE      SP50,DXUSDEF1 
          MOVE      SP50,DXUSDEF2 
          MOVE      SP50,DXUSDEF3
          MOVE      SP50,DXUSDEF4
          MOVE      SP50,DXUSDEF5
.
          MOVE      ONE,NORGE01                  * set as no range entered
          MOVE      ONE,NORGE02 
          MOVE      ONE,NORGE03
          MOVE      ONE,NORGE04          
          MOVE      ONE,NORGE05         
          MOVE      ONE,NORGE06        
          MOVE      ONE,NORGE07       
          MOVE      ONE,NORGE08      
          MOVE      ONE,NORGE09     
          MOVE      ONE,NORGE10    
          MOVE      ONE,NORGE11   
          MOVE      ONE,NORGE12  
          MOVE      ONE,NORGE13 
          MOVE      ONE,NORGE14
          MOVE      ONE,NORGE15           
          MOVE      ONE,NORGE16          
          MOVE      ONE,NORGE17         
          MOVE      ONE,NORGE18        
          MOVE      ONE,NORGE19       
          MOVE      ONE,NORGE20      
          MOVE      ONE,NORGE21     
          MOVE      ONE,NORGE22    
          MOVE      ONE,NORGE23   
          MOVE      ONE,NORGE24  
          MOVE      ONE,NORGE25 
          MOVE      ONE,NORGE26
          MOVE      ONE,NORGE27
          CALL      CLPN0000                     * clear print  vars
.
CLRV9999  RETURN
+
.*********************************************************************
.*                  CLPN0000                                         *
.*        Clear all print variables                                  *
.*********************************************************************
CLPN0000  MOVE      SP50,LPAAENUM
          MOVE      SP50,LPADHOS 
          MOVE      SP50,LPCCODE
          MOVE      SP50,LPCCODED 
          MOVE      SP50,LPCOMPW 
          MOVE      SP50,LPCOMPWD 
          MOVE      SP50,LPDADMIT
          MOVE      SP50,LPDADMIS
          MOVE      SP50,LPDATES
          MOVE      SP50,LPDCODE
          MOVE      SP50,LPDDATE
          MOVE      SP50,LPDDIAG
          MOVE      SP50,LPDIAG  
          MOVE      SP50,LPDNAME
          MOVE      SP50,LPDSTAT
          MOVE      SP50,LPDTIME
          MOVE      SP50,LPDURWT
          MOVE      SP50,LPEADDA
          MOVE      SP50,LPEADDB
          MOVE      SP50,LPEADDC 
          MOVE      SP50,LPEADDD
          MOVE      SP50,LPEDESC 
          MOVE      SP50,LPEPHONE 
          MOVE      SP50,LPEPOST
          MOVE      SP50,LPFULLN
          MOVE      SP50,LPGIVN
          MOVE      SP50,LPHELTH 
          MOVE      SP50,LPHELTHD
          MOVE      SP50,LPHLTHT 
          MOVE      SP50,LPHLTHTD
          MOVE      SP50,LPINCTM 
          MOVE      SP50,LPISTAT 
          MOVE      SP50,LPISTATD 
          MOVE      SP50,LPINITC 
          MOVE      SP50,LPINITCD 
          MOVE      SP50,LPMODE  
          MOVE      SP50,LPMODED 
          MOVE      SP50,LPNATNUM
          MOVE      SP50,LPNOPREV 
          MOVE      SP50,LPPADDA 
          MOVE      SP50,LPPADDB 
          MOVE      SP50,LPPADDC
          MOVE      SP50,LPPADDD
          MOVE      SP50,LPPCLSS
          MOVE      SP50,LPPCLSSD
          MOVE      SP50,LPPPBUS
          MOVE      SP50,LPPPHOME 
          MOVE      SP50,LPPPOST
          MOVE      SP50,LPPLIN
          MOVE      SP50,LPPLIND 
          MOVE      SP50,LPPRAE 
          MOVE      SP50,LPPRAED
          MOVE      SP50,LPPRID 
          MOVE      SP50,LPRGPCOD
          MOVE      SP50,LPRGPNAM 
          MOVE      SP50,LPRGPPC 
          MOVE      SP50,LPRGPPD
          MOVE      SP50,LPSEAT
          MOVE      SP50,LPSEATD 
          MOVE      SP50,LPSIT  
          MOVE      SP50,LPSITD
          MOVE      SP50,LPSORC
          MOVE      SP50,LPSORCD 
          MOVE      SP50,LPSURN 
          MOVE      SP50,LPTIMEI 
          MOVE      SP50,LPTIMES
          MOVE      SP50,LPTODDAT 
          MOVE      SP50,LPURNUM 
          MOVE      SP50,LPUDEF1
          MOVE      SP50,LPUDEF1D
          MOVE      SP50,LPUDEF2
          MOVE      SP50,LPUDEF2D
          MOVE      SP50,LPUDEF3
          MOVE      SP50,LPUDEF3D
          MOVE      SP50,LPUDEF4
          MOVE      SP50,LPUDEF4D
          MOVE      SP50,LPUDEF5
          MOVE      SP50,LPUDEF5D
          MOVE      SP50,LPVDATE
          MOVE      SP50,LPVTIME
          MOVE      SP50,LPOCELL 
          MOVE      SP50,LPOADDA
          MOVE      SP50,LPOADDB
          MOVE      SP50,LPOADDC
          MOVE      SP50,LPOADDD
          MOVE      SP50,LPOPOST
.
CLPN9999  RETURN
+
.*********************************************************************
.*                  RDSC0000                    Called by : ML2000   *
.*        Display the screen                                         *
.*********************************************************************
RDSC0000  HLINE     *G37,2,52,80
          DISPLAY   *P52:2,*V2LON,"- General Letters ":
                    *P1:3,*EF:
                    *P1:4," 1",*P49:5,"10":
                    *P1:5," 2",*P49:6,"11":
                    *P1:6," 3",*P49:7,"12":
                    *P1:7," 4",*P49:8,"13":
                    *P1:8," 5",*P49:9,"14":
                    *P1:9," 6",*P49:10,"15":
                    *P1:10," 7",*P49:11,"16":
                    *P1:11," 8",*P49:12,"17":
                    *P1:12," 9",*P49:13,"18":
                    *P49:14,"19":
                    *P49:15,"20":
                    *P49:16,"21":
                    *P49:17,"22":
                    *P49:18,"23":
                    *P49:19,"24":
                    *P49:20,"25":
                    *P49:21,"26":
                    *P49:22,"27":
                    *P3:4,*HOFF,". U/R Number      : ",*P42:4,"To":
                    *P3:5,". AAE Number      : ",*P34:5,"To":
                    *P3:6,". Date of Visit   : ",*P34:6,"To":
                    *P3:7,". Doctor Code     : ",*P34:7,"To":
                    *P3:8,". Duration of Wait: ",*P34:8,"To":
                    *P3:9,". Date Seen       : ",*P34:9,"To":
                    *P3:10,". Referring GP    : ",*P34:10,"To":
                    *P3:11,". Discharge Date  : ",*P34:11,"To":
                    *P3:12,". Discharge Diagns: ",*P34:12,"To":
                    *P51:5,". Compensation Code   : ":
                    *P51:6,". Patient Classifictn : ":
                    *P51:7,". Insurance Status    : ":
                    *P51:8,". Source of Referral  : ":
                    *P51:9,". Situation           : ":
                    *P51:10,". Mode of Arrival     : ":
                    *P51:11,". Admitted to Hospital: ":
                    *P51:12,". Seatbelt Details    : ":
                    *P51:13,". Initiator Code      : ":
                    *P51:14,". Place of Incident   : ":
                    *P51:15,". User Defined 1      : ":
                    *P51:16,". User Defined 2      : ":
                    *P51:17,". User Defined 3      : ":
                    *P51:18,". User Defined 4      : ":
                    *P51:19,". User Defined 5      : ":
                    *P51:20,". Completion Wait Code: ":
                    *P51:21,". Prev AAE Attendance : ":
                    *P51:22,". Discharge Status    : ":
                    *V2LON:
                    *P23:04,DSFRUR,*P45:04,DSTOUR:
                    *P23:05,DSFRAAE,*P37:05,DSTOAAE:
                    *P23:06,DSFRDV,*P37:06,DSTODV:
                    *P23:07,DSFRDOCT,*P37:07,DSTODOCT:
                    *P23:08,DSFRDURN,*P37:08,DSTODURN:
                    *P23:09,DSFRDS,*P37:09,DSTODS:
                    *P23:10,DSFRRGP,*P37:10,DSTORGP:
                    *P23:11,DSFRDT,*P37:11,DSTODT:
                    *P23:12,DSFRDD,*P37:12,DSTODD:
                    *P76:5,DXCOMC,*P76:6,DXPATCL,*P76:7,DXINSR,*P76:8,DXSRCRF:
                    *P76:9,DXSITUT,*P76:10,DXMODAR,*P76:11,DSADHOS:
                    *P76:12,DXSEAT,*P76:13,DXINIT,*P76:14,DXPLACE:
                    *P76:15,DXUSDEF1,*P76:16,DXUSDEF2,*P76:17,DXUSDEF3:
                    *P76:18,DXUSDEF4,*P76:19,DXUSDEF5,*P76:20,DXCOMPW:
                    *P76:21,DXPRAAE,*P77:22,DXDSCHS
.
RDSC9999  RETURN
+
.*********************************************************************
.*                  PARA0000                    Called by : ML2000   *
.*        Enter all the parameters                                   *
.*        Returns : EXIT = 1      exit selected                      * 
.*********************************************************************
PARA0000  CALL      MQST0000                * display question and get response
          BRANCH    EXIT,PARA7000,PARA5000,PARA9100
.                        Process  Cancel   Exit 
.
          BRANCH    CCITEM,PARA0100,PARA0200,PARA0300,PARA0400,PARA0500:
                           PARA0600,PARA0700,PARA0800,PARA0900,PARA1000:
                           PARA1100,PARA1200,PARA1300,PARA1400,PARA1500:
                           PARA1600,PARA1700,PARA1800,PARA1900,PARA2000:
                           PARA2100,PARA2200,PARA2300,PARA2400,PARA2500:
                           PARA2600,PARA2700
          BEEP
          GOTO      PARA0000
.
.         enter the fields
.
PARA0100  MOVE      ZERO,NORGE01            * set as range entered
          CALL      URNO0000                * U/R range
          GOTO      PARA0000
.
PARA0200  MOVE      ZERO,NORGE02            * set as range entered
          CALL      AAEN0000                * A&E number range
          GOTO      PARA0000
.
PARA0300  MOVE      ZERO,NORGE03            * set as range entered
          CALL      DVIS0000                * Date of Visit range
          GOTO      PARA0000
.
PARA0400  MOVE      ZERO,NORGE04            * set as range entered
          CALL      DOCT0000                * doctor code range
          GOTO      PARA0000
.
PARA0500  MOVE      ZERO,NORGE05            * set as range entered
          CALL      DURN0000                * Duration of Wait range
          GOTO      PARA0000
.
PARA0600  MOVE      ZERO,NORGE06            * set as range entered
          CALL      DSEN0000                * Date Seen range
          GOTO      PARA0000
.
PARA0700  MOVE      ZERO,NORGE07            * set as range entered
          CALL      RFGP0000                * Referring GP range
          GOTO      PARA0000
.
PARA0800  MOVE      ZERO,NORGE08            * set as range entered
          CALL      DISC0000                * Discharge Date range
          GOTO      PARA0000
.
PARA0900  MOVE      ZERO,NORGE09            * set as range entered
          CALL      DIAG0000                * Discharge Diagnosis range
          GOTO      PARA0000
.
PARA1000  MOVE      ZERO,NORGE10            * set as range entered
          CALL      COMP0000                * Compensation Code
          GOTO      PARA0000
.
PARA1100  MOVE      ZERO,NORGE11            * set as range entered
          CALL      PATC0000                * Patient Classification
          GOTO      PARA0000
.
PARA1200  MOVE      ZERO,NORGE12            * set as range entered
          CALL      INSR0000                * Insurance Status
          GOTO      PARA0000
.
PARA1300  MOVE      ZERO,NORGE13            * set as range entered
          CALL      SORC0000                * Source of Referral
          GOTO      PARA0000
.
PARA1400  MOVE      ZERO,NORGE14            * set as range entered
          CALL      SITN0000                * Situation
          GOTO      PARA0000
.
PARA1500  MOVE      ZERO,NORGE15            * set as range entered
          CALL      MODE0000                * Mode of Arrival
          GOTO      PARA0000
.
PARA1600  MOVE      ZERO,NORGE16            * set as range entered
          CALL      AHOS0000                * Admitted to Hospital
          GOTO      PARA0000
.
PARA1700  MOVE      ZERO,NORGE17            * set as range entered
          CALL      SEAT0000                * Seatbelt Details
          GOTO      PARA0000
.
PARA1800  MOVE      ZERO,NORGE18            * set as range entered
          CALL      INTC0000                * Initiator Code
          GOTO      PARA0000
.
PARA1900  MOVE      ZERO,NORGE19            * set as range entered
          CALL      PLCE0000                * Place of Incident
          GOTO      PARA0000
.
PARA2000  MOVE      ZERO,NORGE20            * set as range entered
          CALL      USDA0000                * User Defined 1
          GOTO      PARA0000
.
PARA2100  MOVE      ZERO,NORGE21            * set as range entered
          CALL      USDB0000                * User Defined 2
          GOTO      PARA0000
.
PARA2200  MOVE      ZERO,NORGE22            * set as range entered
          CALL      USDC0000                * User Defined 3
          GOTO      PARA0000
.
PARA2300  MOVE      ZERO,NORGE23            * set as range entered
          CALL      USDD0000                * User Defined 4
          GOTO      PARA0000
.
PARA2400  MOVE      ZERO,NORGE24            * set as range entered
          CALL      USDE0000                * User Defined 5
          GOTO      PARA0000
.
PARA2500  MOVE      ZERO,NORGE25            * set as range entered
          CALL      CMPL0000                * Completion Wait Code
          GOTO      PARA0000
.
PARA2600  MOVE      ZERO,NORGE26            * set as range entered
          CALL      PREV0000                * Previous AAE Attendance's
          GOTO      PARA0000
.
PARA2700  MOVE      ZERO,NORGE27            * set as range entered
          CALL      DSTA0000                * Discharge Status
          GOTO      PARA0000
.
.         Cancel selected
.
PARA5000  CALL      CLRV0000                * clear all variables
PARA5100  CALL      RDSC0000                * redisplay screen
          GOTO      PARA0000
.
.         Process selected
.
PARA7000  CALL      SAAE0000                * get all the aae records
          BRANCH    EXIT,PARA5100           * none found
.
PARA8000  MOVE      ZERO,EXIT               * continue
          GOTO      PARA9999
.
PARA9100  MOVE      TRUE,EXIT               * Exit selected
.
PARA9999  RETURN
+
.*********************************************************************
.*                  MQST0000                    Called by : PARA0000 *
.*        Display the option on line 24 and enter response           *
.*        Returns : EXIT = 1      Process selected                   * 
.*                  EXIT = 2      Cancel  selected                   * 
.*                  EXIT = 3      Exit    selected                   * 
.*                  CCITEM        valid parameter number (EXIT=0)    *
.********************************************************************* 
MQST0000  DISPLAY   *P1:24,*EL:
                    *P1:24,"Select item, (P)rocess, (C)ancel, (E)xit":
                    " ? __",*V2LON:
                    *P15:24,"P",*P26:24,"C",*P36:24,"E"
.
MQST1000  KEYIN     *P44:24,*DV,UNDLN2:
                    *P44:24,*V2LON,*JR,DIM2:
                    *P44:24,*DV,DIM2
.
          ENDSET    DIM2
          APPEND    SP2,DIM2
          RESET     DIM2
.
          TYPE      DIM2
          GOTO      MQST5000 IF EQUAL       * number entered
.
.         letter entered
.
          UNPACK    DIM2,ANS,ANS            * get the letter entered
          REP       UPPLOW,ANS              * change to upper case
          MOVE      ZERO,EXIT               * clear exit flag
          REP       "P1C2E3",ANS          * set to numeric
          MOVE      ANS,EXIT                * set exit flag
          BRANCH    EXIT,MQST9999,MQST9999,MQST9999
.
          BEEP
          GOTO      MQST1000                * invalid letter
.
.         numeric entered
.
MQST5000  MOVE      DIM2,FORM2              * change to numberic
          MOVE      FORM2,CCITEM            * set the variable
          MOVE      ZERO,EXIT               * set exit flag
.
          COMPARE   CCITEM,ZERO
          GOTO      MQST9999 IF LESS 
.
          BEEP
          GOTO      MQST1000
.
MQST9999  RETURN
+
.*********************************************************************
.*                  DOCT0000                                         *
.*        Enter the doctor code ranges                               *
.*********************************************************************
DOCT0000  UNPACK    UNDLN20,DSFRDOCT,DSTODOCT    * clear descriptions
          DISPLAY   *P23:7,DSFRDOCT,*P37:7,DSTODOCT
          MOVE      SP6,CKYIDEF6
          MOVE      ZERO,CKYIMAND
.
.         enter FROM code
.
          MOVE      "23",ECOL               * column
          MOVE      "7",EVERT               * row
          CALL      PATDOCKY                * enter from doctor code
          COMPARE   ZERO,EXIT
          GOTO      DOCT1000 IF EQUAL       * code entered
.
          MOVE      SP6,DXFRDOCT            * set code
          MOVE      START,DSFRDOCT          * description
          GOTO      DOCT2000
.
DOCT1000  MOVE      DOCCODE,DXFRDOCT        * set up code
          MOVE      DOCCODE,DSFRDOCT        * set up display var
.
DOCT2000  DISPLAY   *P23:7,*V2LON,DSFRDOCT
.
.         enter TO code
.
DOCT5000  MOVE      "37",ECOL               * column
          MOVE      "7",EVERT               * row
          CALL      PATDOCKY                * enter from doctor code
          COMPARE   ZERO,EXIT
          GOTO      DOCT6000 IF EQUAL       * code entered
.
          MOVE      "zzzzzz",DXTODOCT       * set code
          MOVE      FINISH,DSTODOCT         * description
          GOTO      DOCT8000
.
DOCT6000  MOVE      DOCCODE,DXTODOCT        * set up code
          MOVE      DOCCODE,DSTODOCT        * set up display var
.
DOCT8000  MATCH     DXFRDOCT,DXTODOCT
          GOTO      DOCT9000 IF NOT LESS    * end code >= start code
.
          DISPLAY   *P1:24,*B,"End Doctor code must be after Start code.  ",*EL;
          CALL      HITENTER 
          GOTO      DOCT0000
.
DOCT9000  DISPLAY   *P37:7,*V2LON,DSTODOCT
.
DOCT9999  RETURN
+
.*********************************************************************
.*                  URNO0000                                         *
.*        Enter U/R numbers                                          *
.*********************************************************************
URNO0000  MOVE      FALSE,EXIT
          MOVE      SP8,DXFRUR
          MOVE      FOUR,CVERT
          MOVE      TWENTY3,CCOL
          CALL      KURN                         * From U/R
          BRANCH    EXIT,URNO1000
          MOVE      PURNO,DXFRUR
          MOVE      PURNO,DSFRUR
          GOTO      URNO2000
.
URNO1000  MOVE      SP8,DXFRUR
          MOVE      START,DSFRUR
          DISPLAY   *P23:4,*V2LON,DSFRUR
.
URNO2000  DISPLAY   *P42:4,"To "
          MOVE      FORTY5,CCOL
          CALL      KURN                         * To U/R
          BRANCH    EXIT,URNO3000
          MOVE      PURNO,DXTOUR
          MOVE      PURNO,DSTOUR
          GOTO      URNO4000
.
URNO3000  MOVE      ZEDS,DXTOUR
          MOVE      FINISH,DSTOUR
          DISPLAY   *P45:4,*V2LON,DSTOUR
.
URNO4000  MATCH     DXFRUR,DXTOUR
          GOTO      URNO5000 IF LESS
          MOVE      FALSE,EXIT
          GOTO      URNO9999
.
URNO5000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid U/R range.  ";
          CALL      HITENTER
.
URNO9999  RETURN
+
.*********************************************************************
.*                  RFGP0000                                         *
.*        Enter Referring GP Range                                   *
.*********************************************************************
RFGP0000  MOVE      FALSE,EXIT
          MOVE      SP8,DXFRRGP
          MOVE      TEN,CVERT
          MOVE      TWENTY3,CCOL
          CALL      PMSHCPKY                     * From GP
          BRANCH    EXIT,RFGP1000
          MOVE      CKYIDEF8,DXFRRGP
          MOVE      CKYIDEF8,DSFRRGP
          GOTO      RFGP2000
.
RFGP1000  MOVE      SP8,DXFRRGP
          MOVE      START,DSFRRGP
          DISPLAY   *P23:10,*V2LON,DSFRRGP
.
RFGP2000  MOVE      THIRTY7,CCOL
          CALL      PMSHCPKY                     * To GP
          BRANCH    EXIT,RFGP3000
          MOVE      CKYIDEF8,DXTORGP
          MOVE      CKYIDEF8,DSTORGP
          GOTO      RFGP4000
.
RFGP3000  MOVE      ZEDS,DXTORGP
          MOVE      FINISH,DSTORGP
          DISPLAY   *P37:10,*V2LON,DSTORGP
.
RFGP4000  MATCH     DXFRRGP,DXTORGP
          GOTO      RFGP5000 IF LESS
          MOVE      FALSE,EXIT
          GOTO      RFGP9999
.
RFGP5000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid GP range.  ";
          CALL      HITENTER
.
RFGP9000  MOVE      TRUE,EXIT
.
RFGP9999  RETURN
.*********************************************************************
.*                  AAEN0000                                         *
.*        Enter A&E numbers                                          *
.*********************************************************************
AAEN0000  MOVE      FALSE,EXIT
          MOVE      SP8,DXFRAAE
          KEYIN     *P23:5,*V2LON,*JR,DXFRAAE
          MOVE      DXFRAAE,DSFRAAE
          PACK      DXFRAAE,DXFRAAE,SP8
          MATCH     DXFRAAE,SP8
          GOTO      AAEN2000 IF NOT EQUAL
.
AAEN1000  MOVE      SP8,DXFRAAE
          MOVE      START,DSFRAAE
          DISPLAY   *P23:5,*V2LON,DSFRAAE
.
AAEN2000  KEYIN     *P37:5,*V2LON,*JR,DXTOAAE
          MOVE      DXTOAAE,DSTOAAE
          PACK      DXTOAAE,DXTOAAE,SP8
          MATCH     DXTOAAE,SP8
          GOTO      AAEN4000 IF NOT EQUAL
.
AAEN3000  MOVE      ZEDS,DXTOAAE
          MOVE      FINISH,DSTOAAE
          DISPLAY   *P37:5,*V2LON,DSTOAAE
.
AAEN4000  MATCH     DXFRAAE,DXTOAAE
          GOTO      AAEN5000 IF LESS
          MOVE      FALSE,EXIT
          GOTO      AAEN9999
.
AAEN5000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid AAE range.  ";
          CALL      HITENTER
.
AAEN9000  MOVE      TRUE,EXIT
.
AAEN9999  RETURN
+
.**********************************************************************
.*                  DVIS0000                                          *
.*        Visit Date Range                                            *
.**********************************************************************
DVIS0000  UNPACK    SP20,DXFRDV,DXTODV
          UNPACK    DXFRDV,CCENT,CYEAR,CMON,CDAY
          DISPLAY   *P23:6,"__/__/____ To __/__/____ ";
          MOVE      ZERO,CHIGHLT
          MOVE      TWENTY3,CCOL
          MOVE      SIX,CVERT
          CALL      KEYDATE
          BRANCH    OVRCD,DVIS0100
          PACK      DXFRDV WITH CCENT,CYEAR,CMON,CDAY
          PACK      DSFRDV WITH CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",DSFRDV
          GOTO      DVIS1000
.
DVIS0100  MOVE      SP10,DXFRDV
          MOVE      START,DSFRDV
          DISPLAY   *P23:6,*V2LON,DSFRDV
.
DVIS1000  UNPACK    DXTODV,CDAY,CMON,CCENT,CYEAR
          MOVE      "37",CCOL
          MOVE      SIX,CVERT
          CALL      KEYDATE
          BRANCH    OVRCD,DVIS2000
          PACK      DXTODV,CCENT,CYEAR,CMON,CDAY
          PACK      DSTODV WITH CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",DSTODV
          GOTO      DVIS3000
.
DVIS2000  MOVE      ZEDS,DXTODV
          MOVE      FINISH,DSTODV
          DISPLAY   *P37:6,*V2LON,DSTODV
.
DVIS3000  MATCH     DXFRDV,DXTODV
          GOTO      DVIS8000 IF LESS
          GOTO      DVIS9999
.
DVIS7000  DISPLAY   *P1:24,*B,*EL,"Invalid Date.  ";
          CALL      HITENTER
          DISPLAY   *P37:7,"__/__/____";
          GOTO      DVIS1000
.
DVIS8000  DISPLAY   *P1:24,*B,*EL,"Invalid Date Range.  ";
          CALL      HITENTER
          GOTO      DVIS0000
.
DVIS9999  RETURN 
+
.**********************************************************************
.*                  DSEN0000                                          *
.*        Date Seen Range                                             *
.**********************************************************************
DSEN0000  MOVE      SP10,DXFRDS
          UNPACK    DXFRDS,CCENT,CYEAR,CMON,CDAY
          DISPLAY   *P23:9,"__/__/____ To __/__/____ ";
          MOVE      ZERO,CHIGHLT
          MOVE      TWENTY3,CCOL
          MOVE      NINE,CVERT
          CALL      KEYDATE
          BRANCH    OVRCD,DSEN0100
          PACK      DXFRDS,CCENT,CYEAR,CMON,CDAY
          PACK      DSFRDS WITH CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",DSFRDS
          GOTO      DSEN1000
.
DSEN0100  MOVE      SP10,DXFRDS
          MOVE      START,DSFRDS
          DISPLAY   *P23:9,*V2LON,DSFRDS
.
DSEN1000  MOVE      SP10,DXTODS
          UNPACK    DXTODS,CCENT,CYEAR,CMON,CDAY
          MOVE      "37",CCOL
          MOVE      NINE,CVERT
          CALL      KEYDATE
          BRANCH    OVRCD,DSEN2000
          PACK      DXTODS,CCENT,CYEAR,CMON,CDAY
          PACK      DSTODS WITH CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",DSTODS
          GOTO      DSEN3000
.
DSEN2000  MOVE      ZEDS,DXTODS
          MOVE      FINISH,DSTODS
          DISPLAY   *P37:9,*V2LON,DSTODS
.
DSEN3000  MATCH     DXFRDS,DXTODS
          GOTO      DSEN8000 IF LESS
          GOTO      DSEN9999
.
DSEN7000  DISPLAY   *P1:24,*EL,*B,"Invalid Date.  ";
          CALL      HITENTER
          DISPLAY   *P37:7,"__/__/____";
          GOTO      DSEN1000
.
DSEN8000  DISPLAY   *P1:24,*EL,*B,"Invalid Date Range.  ";
          CALL      HITENTER
          GOTO      DSEN0000
.
DSEN9999  RETURN 
+
.**********************************************************************
.*                  DISC0000                                          *
.*        Discharge Date Range                                        *
.**********************************************************************
DISC0000  MOVE      SP10,DXFRDT
          UNPACK    DXFRDT,CCENT,CYEAR,CMON,CDAY
          DISPLAY   *P23:11,"__/__/____ To __/__/____ ";
          MOVE      ZERO,CHIGHLT
          MOVE      TWENTY3,CCOL
          MOVE      TEN1,CVERT
          CALL      KEYDATE
          BRANCH    OVRCD,DISC0100
          PACK      DXFRDT,CCENT,CYEAR,CMON,CDAY
          PACK      DSFRDT WITH CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",DSFRDT
          GOTO      DISC1000
.
DISC0100  MOVE      SP10,DXFRDT
          MOVE      START,DSFRDT
          DISPLAY   *P23:11,*V2LON,DSFRDT
.
DISC1000  MOVE      SP10,DXTODT
          UNPACK    DXTODT,CCENT,CYEAR,CMON,CDAY
          MOVE      "37",CCOL
          MOVE      TEN1,CVERT
          CALL      KEYDATE
          BRANCH    OVRCD,DISC2000
          PACK      DXTODT,CCENT,CYEAR,CMON,CDAY
          PACK      DSTODT WITH CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",DSTODT
          GOTO      DISC3000
.
DISC2000  MOVE      SP10,DXTODT
          MOVE      FINISH,DSTODT
          DISPLAY   *P37:11,*V2LON,DSTODT
.
DISC3000  MATCH     DXFRDT,DXTODT
          GOTO      DISC8000 IF LESS
          GOTO      DISC9999
.
DISC7000  DISPLAY   *P1:24,*EL,*B,"Invalid Date.  ";
          CALL      HITENTER
          DISPLAY   *P37:11,"__/__/____";
          GOTO      DISC1000
.
DISC8000  DISPLAY   *P1:24,*EL,*B,"Invalid Date Range.  ";
          CALL      HITENTER
          GOTO      DISC0000
.
DISC9999  RETURN 
.*********************************************************************
.*                  DURN0000                                         *
.*        Enter Duration of Wait range                               *
.*********************************************************************
DURN0000  MOVE      FALSE,EXIT
          MOVE      ZERO,DXFRDURN
          KEYIN     *P23:8,"     ",*P23:8,*V2LON,DXFRDURN
.
          MOVE      DXFRDURN,DSFRDURN
          COMPARE   DXFRDURN,ZERO
          GOTO      DURN2000 IF NOT EQUAL
.
DURN1000  MOVE      ZERO,DXFRDURN
          MOVE      START,DSFRDURN
          DISPLAY   *P23:8,*V2LON,DSFRDURN
.
DURN2000  KEYIN     *P37:8,"      ",*P37:8,*V2LON,DXTODURN
          MOVE      DXTODURN,DSTODURN
          COMPARE   DXTODURN,ZERO
          GOTO      DURN4000 IF NOT EQUAL
.
DURN3000  MOVE      NINES,DXTODURN
          MOVE      FINISH,DSTODURN
          DISPLAY   *P37:8,*V2LON,DSTODURN
.
DURN4000  COMPARE   DXFRDURN,DXTODURN
          GOTO      DURN5000 IF LESS
          MOVE      FALSE,EXIT
          GOTO      DURN9999
.
DURN5000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Duration range.  ";
          CALL      HITENTER
.
DURN9000  MOVE      TRUE,EXIT
.
DURN9999  RETURN
+
.*********************************************************************
.*                  DIAG0000                                         *
.*        Enter Discharge Diagnosis                                  *
.*********************************************************************
DIAG0000  MOVE      FALSE,EXIT
          MOVE      SP8,DXFRDD
          KEYIN     *P23:12,*V2LON,*JR,DXFRDD   * From Discharge Diag
          MOVE      DXFRDD,DSFRDD
.
          PACK      DXFRDD,DXFRDD,SP8
          MATCH     DXFRDD,SP8
          GOTO      DIAG2000 IF NOT EQUAL
.
DIAG1000  MOVE      SP8,DXFRDD
          MOVE      START,DSFRDD
          DISPLAY   *P23:12,*V2LON,DSFRDD
.
DIAG2000  KEYIN     *P37:12,*V2LON,*JR,DXTODD    * To Discharge Diag
          MOVE      DXTODD,DSTODD
          PACK      DXTODD,DXTODD,SP8
          MATCH     DXTODD,SP8
          GOTO      DIAG4000 IF NOT EQUAL
.
DIAG3000  MOVE      ZEDS,DXTODD
          MOVE      FINISH,DSTODD
          DISPLAY   *P37:12,*V2LON,DSTODD
.
DIAG4000  MATCH     DXFRDD,DXTODD
          GOTO      DIAG5000 IF LESS
          MOVE      FALSE,EXIT
          GOTO      DIAG9999
.
DIAG5000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Invalid Diagnosis range. ";
          CALL      HITENTER
.
DIAG9000  MOVE      TRUE,EXIT
.
DIAG9999  RETURN
+
.*********************************************************************
.*                  COMP0000                                         *
.*        Enter the Compensation Code                                *
.*********************************************************************
COMP0000  DISPLAY   *P76:5,DXCOMC
          MOVE      "CL",CODE               * cat CL
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "5",EVERT               * row
.
          CALL      PATCODKY
          BRANCH    EXIT,COMP9000,COMP8000
.
COMP1000  MOVE      ACODE,DXCOMC            * set up code
          DISPLAY   *P76:5,*V2LON,DXCOMC
          GOTO      COMP9999
.
COMP8000  MOVE      SP3,DXCOMC
          CALL      RDSC0000
.
COMP9000  MOVE      ONE,NORGE10             * no value entered
          MOVE      SP3,DXCOMC
.
COMP9999  RETURN
+
.*********************************************************************
.*                  PATC0000                                         *
.*        Enter the Patient Classification                           *
.*********************************************************************
PATC0000  DISPLAY   *P76:6,DXPATCL
          MOVE      "A ",CODE               * cat A
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "6",EVERT               * row
.
          CALL      PATCODKY
          BRANCH    EXIT,PATC9000,PATC8000
.
PATC1000  MOVE      ACODE,DXPATCL           * set up code
          DISPLAY   *P76:6,*V2LON,DXPATCL
          GOTO      PATC9999
.
PATC8000  MOVE      SP3,DXPATCL
          CALL      RDSC0000
.
PATC9000  MOVE      ONE,NORGE11             * no value entered
          MOVE      SP3,DXPATCL
.
PATC9999  RETURN
+
.*********************************************************************
.*                  INSR0000                                         *
.*        Enter the Insurance Status                                 *
.*********************************************************************
INSR0000  DISPLAY   *P76:7,DXINSR
          MOVE      "U1",CODE               * cat U1
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "7",EVERT               * row
.
          CALL      PATCODKY
          BRANCH    EXIT,INSR9000,INSR8000
.
INSR1000  MOVE      ACODE,DXINSR            * set up code
          DISPLAY   *P76:7,*V2LON,DXINSR
          GOTO      INSR9999
.
INSR8000  MOVE      SP3,DXINSR
          CALL      RDSC0000
.
INSR9000  MOVE      ONE,NORGE12             * no value entered
          MOVE      SP3,DXINSR
.
INSR9999  RETURN
+
.*********************************************************************
.*                  SORC0000                                         *
.*        Enter the Source of Referral                               *
.*********************************************************************
SORC0000  DISPLAY   *P76:8,DXINSR
          MOVE      "S ",CODE               * cat S
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "8",EVERT               * row
.
          CALL      PATCODKY
          BRANCH    EXIT,SORC9000,SORC8000
.
SORC1000  MOVE      ACODE,DXSRCRF           * set up code
          DISPLAY   *P76:8,*V2LON,DXSRCRF
          GOTO      SORC9999
.
SORC8000  MOVE      SP3,DXSRCRF
          CALL      RDSC0000
.
SORC9000  MOVE      ONE,NORGE13             * no value entered
          MOVE      SP3,DXSRCRF
.
SORC9999  RETURN
+
.*********************************************************************
.*                  SITN0000                                         *
.*        Enter the Situation                                        *
.*********************************************************************
SITN0000  DISPLAY   *P76:9,DXSITUT
          MOVE      "ES",CODE               * cat ES
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "9",EVERT               * row
.
          CALL      PATCODKY                * enter from code
          BRANCH    EXIT,SITN9000,SITN8000
.
SITN1000  MOVE      ACODE,DXSITUT           * set up code
          DISPLAY   *P76:9,*V2LON,DXSITUT
          GOTO      SITN9999
.
SITN8000  MOVE      SP3,DXSITUT
          CALL      RDSC0000
.
SITN9000  MOVE      ONE,NORGE14             * no value entered
          MOVE      SP3,DXSITUT
.
SITN9999  RETURN
+
.*********************************************************************
.*                  MODE0000                                         *
.*        Enter the Mode of Arrival                                  *
.*********************************************************************
MODE0000  DISPLAY   *P76:10,DXMODAR
          MOVE      "EA",CODE               * cat EA
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "10",EVERT               * row
.
          CALL      PATCODKY
          BRANCH    EXIT,MODE9000,MODE8000
.
MODE1000  MOVE      ACODE,DXMODAR           * set up code
          DISPLAY   *P76:10,*V2LON,DXMODAR
          GOTO      MODE9999
.
MODE8000  MOVE      SP3,DXMODAR
          CALL      RDSC0000
.
MODE9000  MOVE      ONE,NORGE15             * no value entered
          MOVE      SP3,DXMODAR
.
MODE9999  RETURN
+
.*********************************************************************
.*                  AHOS0000                                         *
.*        Admitted to Hospital                                       *
.*********************************************************************
AHOS0000  KEYIN     *P76:11,*V2LON,ANS;
          REP       UPPLOW,ANS
          MOVE      ONE,DXADHOS
          MOVE      "Yes",DSADHOS
          MATCH     ANSY,ANS
          GOTO      AHOS9000 IF EQUAL       * Yes
          MOVE      "No",DSADHOS
          MOVE      ZERO,DXADHOS
          MATCH     ANSN,ANS
          GOTO      AHOS9000 IF EQUAL       * No
          BEEP
          GOTO      AHOS0000
.
AHOS9000  DISPLAY   *P76:11,*V2LON,DSADHOS
.
AHOS9999  RETURN
+
.*********************************************************************
.*                  SEAT0000                                         *
.*        Enter the Seat Belt Details                                *
.*********************************************************************
SEAT0000  DISPLAY   *P76:12,DXSEAT
          MOVE      "AR",CODE               * cat AR
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "12",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,SEAT9000,SEAT8000
.
SEAT1000  MOVE      ACODE,DXSEAT            * set up code
          DISPLAY   *P76:12,*V2LON,DXSEAT
          GOTO      SEAT9999
.
SEAT8000  MOVE      SP3,DXSEAT
          CALL      RDSC0000
.
SEAT9000  MOVE      ONE,NORGE17             * no value entered
          MOVE      SP3,DXSEAT
.
SEAT9999  RETURN
+
.*********************************************************************
.*                  INTC0000                                         *
.*        Enter the Initiator Details                                *
.*********************************************************************
INTC0000  DISPLAY   *P76:13,DXINIT
          MOVE      "AI",CODE               * cat AI
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "13",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,INTC9000,INTC8000
.
INTC1000  MOVE      ACODE,DXINIT            * set up code
          DISPLAY   *P76:13,*V2LON,DXINIT
          GOTO      INTC9999
.
INTC8000  MOVE      SP3,DXINIT
          CALL      RDSC0000
.
INTC9000  MOVE      ONE,NORGE18             * no value entered
          MOVE      SP3,DXINIT
.
INTC9999  RETURN
+
.*********************************************************************
.*                  PLCE0000                                         *
.*        Enter the Place of Incident                                *
.*********************************************************************
PLCE0000  DISPLAY   *P76:14,DXPLACE
          MOVE      "AP",CODE               * cat AP
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "14",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,PLCE9000,PLCE8000
.
PLCE1000  MOVE      ACODE,DXPLACE           * set up code
          DISPLAY   *P76:14,*V2LON,DXPLACE
          GOTO      PLCE9999
.
PLCE8000  MOVE      SP3,DXPLACE
          CALL      RDSC0000
.
PLCE9000  MOVE      ONE,NORGE19             * no value entered
          MOVE      SP3,DXPLACE
.
PLCE9999  RETURN
+
.*********************************************************************
.*                  USDA0000                                         *
.*        Enter the User Defined Field 1                             *
.*********************************************************************
USDA0000  DISPLAY   *P76:15,DXUSDEF1
          MOVE      "A1",CODE               * cat A1
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "15",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,USDA9000,USDA8000
.
USDA1000  MOVE      ACODE,DXUSDEF1           * set up code
          DISPLAY   *P76:15,*V2LON,DXUSDEF1
          GOTO      USDA9999
.
USDA8000  MOVE      SP3,DXUSDEF1
          CALL      RDSC0000
.
USDA9000  MOVE      ONE,NORGE20             * no value entered
          MOVE      SP3,DXUSDEF1
.
USDA9999  RETURN
+
.*********************************************************************
.*                  USDB0000                                         *
.*        Enter the User Defined Field 2                             *
.*********************************************************************
USDB0000  DISPLAY   *P76:16,DXUSDEF2
          MOVE      "A2",CODE               * cat A2
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "16",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,USDB9000,USDB8000
.
USDB1000  MOVE      ACODE,DXUSDEF2           * set up code
          DISPLAY   *P76:16,*V2LON,DXUSDEF2
          GOTO      USDB9999
.
USDB8000  MOVE      SP3,DXUSDEF2
          CALL      RDSC0000
.
USDB9000  MOVE      ONE,NORGE21             * no value entered
          MOVE      SP3,DXUSDEF2
.
USDB9999  RETURN
+
.*********************************************************************
.*                  USDC0000                                         *
.*        Enter the User Defined Field 3                             *
.*********************************************************************
USDC0000  DISPLAY   *P76:17,DXUSDEF3
          MOVE      "A3",CODE               * cat A3
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "17",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,USDC9000,USDC8000
.
USDC1000  MOVE      ACODE,DXUSDEF3           * set up code
          DISPLAY   *P76:17,*V2LON,DXUSDEF3
          GOTO      USDC9999
.
USDC8000  MOVE      SP3,DXUSDEF3
          CALL      RDSC0000
.
USDC9000  MOVE      ONE,NORGE22             * no value entered
          MOVE      SP3,DXUSDEF3
.
USDC9999  RETURN
+
.*********************************************************************
.*                  USDD0000                                         *
.*        Enter the User Defined Field 4                             *
.*********************************************************************
USDD0000  DISPLAY   *P76:18,DXUSDEF4
          MOVE      "A4",CODE               * cat A4
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "18",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,USDD9000,USDD8000
.
USDD1000  MOVE      ACODE,DXUSDEF4           * set up code
          DISPLAY   *P76:18,*V2LON,DXUSDEF4
          GOTO      USDD9999
.
USDD8000  MOVE      SP3,DXUSDEF4
          CALL      RDSC0000
.
USDD9000  MOVE      ONE,NORGE23             * no value entered
          MOVE      SP3,DXUSDEF4
.
USDD9999  RETURN
+
.*********************************************************************
.*                  USDE0000                                         *
.*        Enter the User Defined Field 5                             *
.*********************************************************************
USDE0000  DISPLAY   *P76:19,DXUSDEF5
          MOVE      "A5",CODE               * cat A5
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "19",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,USDE9000,USDE8000
.
USDE1000  MOVE      ACODE,DXUSDEF5           * set up code
          DISPLAY   *P76:19,*V2LON,DXUSDEF5
          GOTO      USDE9999
.
USDE8000  MOVE      SP3,DXUSDEF5
          CALL      RDSC0000
.
USDE9000  MOVE      ONE,NORGE24             * no value entered
          MOVE      SP3,DXUSDEF5
.
USDE9999  RETURN
+
.*********************************************************************
.*                  CMPL0000                                         *
.*        Enter the Completion Wait Code                             *
.*********************************************************************
CMPL0000  DISPLAY   *P76:20,DXCOMPW
          MOVE      "EW",CODE               * cat EW
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "20",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,CMPL9000,CMPL8000
.
CMPL1000  MOVE      ACODE,DXCOMPW           * set up code
          DISPLAY   *P76:20,*V2LON,DXCOMPW
          GOTO      CMPL9999
.
CMPL8000  MOVE      SP3,DXCOMPW
          CALL      RDSC0000
.
CMPL9000  MOVE      ONE,NORGE25             * no value entered
          MOVE      SP3,DXCOMPW
.
CMPL9999  RETURN
+
.*********************************************************************
.*                  PREV0000                                         *
.*        Enter the Previous A&E Attendance's                        *
.*********************************************************************
PREV0000  DISPLAY   *P76:21,DXPRAAE
          MOVE      "EP",CODE               * cat EP
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "21",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,PREV9000,PREV8000
.
PREV1000  MOVE      ACODE,DXPRAAE           * set up code
          DISPLAY   *P76:21,*V2LON,DXPRAAE
          GOTO      PREV9999
.
PREV8000  MOVE      SP3,DXPRAAE
          CALL      RDSC0000
.
PREV9000  MOVE      ONE,NORGE26             * no value entered
          MOVE      SP3,DXPRAAE
.
PREV9999  RETURN
+
.*********************************************************************
.*                  DSTA0000                                         *
.*        Enter the Discharge Status                                 *
.*********************************************************************
DSTA0000  DISPLAY   *P76:22,DXDSCHS
          MOVE      "D ",CODE               * cat D
          MOVE      SP3,CKYIDEF3            * no default
.
          MOVE      "76",ECOL               * column
          MOVE      "22",EVERT              * row
.
          CALL      PATCODKY
          BRANCH    EXIT,DSTA9000,DSTA8000
.
DSTA1000  MOVE      ACODE,DXDSCHS           * set up code
          DISPLAY   *P76:22,*V2LON,DXDSCHS
          GOTO      DSTA9999
.
DSTA8000  MOVE      SP3,DXDSCHS
          CALL      RDSC0000
.
DSTA9000  MOVE      ONE,NORGE27             * no value entered
          MOVE      SP3,DXDSCHS
.
DSTA9999  RETURN
+
.**********************************************************************
.*                  SAAE0000                                          *
.*        Search for patients satisfying the search criteria and post *
.*        to the temp file                                            *
.*        Returns : EXIT = 1      no patients found                   * 
.********************************************************************** 
SAAE0000  PACK      KEY16,DXFRUR,SP10       * set up key
          CALL      CTMP0000                * create temp file
.
          CALL      RDSDETA2
          DISPLAY   *P1:24,*EL,"U/R Number  : ";
.
SAAE1000  CALL      RDKDETA2
          BRANCH    OVRCD,SAAE6000
.
SAAE2000  DISPLAY   *P15:24,ADAURNO
.
.         validate the U/R read in 
.
          MATCH     ADAURNO,DXTOUR
          GOTO      SAAE6000 IF LESS        * U/R too high
.
SAAE2020  BRANCH    NORGE02,SAAE2030
          MATCH     DXFRAAE,DADANUMB        * Check AAE range
          GOTO      SAAE1000 IF LESS 
          MATCH     DADANUMB,DXTOAAE
          GOTO      SAAE1000 IF LESS
.
SAAE2030  BRANCH    NORGE03,SAAE2040
          MATCH     DXFRDV,ADADATE          * Check Date of visit
          GOTO      SAAE1000 IF LESS 
          MATCH     ADADATE,DXTODV
          GOTO      SAAE1000 IF LESS
.
SAAE2040  BRANCH    NORGE04,SAAE2050
          MATCH     DXFRDOCT,ADADOCT        * Check Doctor Code
          GOTO      SAAE1000 IF LESS 
          MATCH     ADADOCT,DXTODOCT
          GOTO      SAAE1000 IF LESS
.
SAAE2050  BRANCH    NORGE05,SAAE2060
          COMPARE   DXFRDURN,ADADURN        * Check Duration of Wait
          GOTO      SAAE1000 IF LESS 
          COMPARE   ADADURN,DXTODURN
          GOTO      SAAE1000 IF LESS
.
SAAE2060  BRANCH    NORGE06,SAAE2070
          MATCH     DXFRDS,ADASDTE          * Check Date Seen
          GOTO      SAAE1000 IF LESS 
          MATCH     ADASDTE,DXTODS
          GOTO      SAAE1000 IF LESS
.
SAAE2070  BRANCH    NORGE07,SAAE2080
          MATCH     DXFRRGP,AEDARFGP        * Check Referring GP
          GOTO      SAAE1000 IF LESS 
          MATCH     AEDARFGP,DXTORGP
          GOTO      SAAE1000 IF LESS
.
SAAE2080  BRANCH    NORGE08,SAAE2090
          MOVE      ADANUMB,KEY8
          CALL      RDDISA1
          BRANCH    OVRCD,SAAE1000
          MATCH     DXFRDT,ADSDATE          * Check Discharge Date
          GOTO      SAAE1000 IF LESS 
          MATCH     ADSDATE,DXTODT
          GOTO      SAAE1000 IF LESS
.
SAAE2090  BRANCH    NORGE09,SAAE2100
          MOVE      ADANUMB,KEY8
          CALL      RDDISA1
          BRANCH    OVRCD,SAAE1000
          MATCH     DXFRDD,ADSDIAG          * Check Discharge Diagnosis
          GOTO      SAAE1000 IF LESS 
          MATCH     ADSDIAG,DXTODD
          GOTO      SAAE1000 IF LESS
.
SAAE2100  BRANCH    NORGE10,SAAE2110
          MATCH     DXCOMC,ADACOMP          * Check Compensation Code
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2110  BRANCH    NORGE11,SAAE2120
          MATCH     DXPATCL,ADACLASS         * Check Patient Classification
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2120  BRANCH    NORGE12,SAAE2130
          MATCH     DXINSR,ADAINSUR          * Check Insurance Status
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2130  BRANCH    NORGE13,SAAE2140
          MATCH     DXSRCRF,ADASRC           * Check Source of Referral
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2140  BRANCH    NORGE14,SAAE2150
          MATCH     DXSITUT,ADASIT           * Check Situation
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2150  BRANCH    NORGE15,SAAE2160
          MATCH     DXMODAR,ADAMODE          * Check Mode of Arrival
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2160  BRANCH    NORGE16,SAAE2170
          MOVE      ADAADMIT,DIM1
          MATCH     DXADHOS,DIM1             * Check Admitted to Hospital
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2170  BRANCH    NORGE17,SAAE2180
          MATCH     DXSEAT,AEDARTAS          * Check Seatbelt Details
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2180  BRANCH    NORGE18,SAAE2190
          MATCH     DXINIT,AEDAINIT          * Check Initiator Code
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2190  BRANCH    NORGE19,SAAE2200
          MATCH     DXPLACE,AEDAPLIN         * Check Place of Incident
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2200  BRANCH    NORGE20,SAAE2210
          MATCH     DXUSDEF1,ADAUSR1         * Check User Defined 1
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2210  BRANCH    NORGE21,SAAE2220
          MATCH     DXUSDEF2,ADAUSR2        * Check User Defined 2
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2220  BRANCH    NORGE22,SAAE2230
          MATCH     DXUSDEF3,ADAUSR3        * Check User Defined 3
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2230  BRANCH    NORGE23,SAAE2240
          MATCH     DXUSDEF4,ADAUSR4        * Check User Defined 4
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2240  BRANCH    NORGE24,SAAE2250
          MATCH     DXUSDEF5,ADAUSR5        * Check User Defined 5
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2250  BRANCH    NORGE25,SAAE2260
          MATCH     DXCOMPW,ADAWAIT         * Check Completion Wait Code
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2260  BRANCH    NORGE26,SAAE2270
          MATCH     DXPRAAE,ADAPREV         * Check Previous AAE Attendance's
          GOTO      SAAE1000 IF NOT EQUAL
.
SAAE2270  BRANCH    NORGE27,SAAE5000
          MOVE      ADANUMB,KEY8
          CALL      RDDISA1
          BRANCH    OVRCD,SAAE1000
          MATCH     DXDSCHS,ADSDISC         * Check Discharge Status
          GOTO      SAAE1000 IF NOT EQUAL
.
.         Have a valid patient         
.
SAAE5000  PACK      KEY16,ADAURNO,ADANUMB        
          READ      TEMPFILE,KEY16;ANS
          GOTO      SAAE1000 IF NOT OVER    * already on temp file
.
          MOVE      ADAURNO,XURNO
          MOVE      ADANUMB,XAAENUM
          MOVE      SP50,XSNAME
          MOVE      ADAURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,SAAE5500
          MOVE      PSNAME,XSNAME
.
SAAE5500  DISPLAY   *P15:24,*V2LON,XURNO
          RESET     KEY16
          WRITE     TEMPFILE,KEY16;XURNO,XAAENUM,XSNAME
          GOTO      SAAE1000
.
.         end of AAE Master/Detail file
.
SAAE6000  MOVE      SP20,KEY16
          READ      TEMPFILE,KEY16;;
          READKS    TEMPFILE;ANS
          GOTO      SAAE9100 IF OVER        * no codes found
.
          MOVE      FALSE,EXIT
          GOTO      SAAE9999
.
SAAE9100  DISPLAY   *P1:24,*B,"No Patients found for these criteria.  ",*EL;
          CALL      HITENTER 
          MOVE      TRUE,EXIT               * no codes found
.
SAAE9999  RETURN
+
.*********************************************************************
.*                  EDIT0000                    Called by : PARA8000 *
.*        Loop through temp file and display all the patients        *
.*        Returns : EXIT = 0      send selected
.*                  EXIT = 1      exit selected
.********************************************************************* 
EDIT0000  MOVE      SP20,KEY16
          READ      TEMPFILE,KEY16;;
          MOVE      ONE,CPAGENO             * page number
          MOVE      "4",CVERT               * starting row
          MOVE      "0",CNTURNO             * item counter
          DISPLAY   *P1:3,*EF:
                    *P5:4,*V2LON,*ULON,"U/R     ",*P15:4:
                    "Surname                 ",*P50:4,"AAE Number       "
.
EDIT1000  READKS    TEMPFILE;XURNO,XAAENUM,XSNAME      * loop over temp file
          GOTO      EDIT5000 IF OVER
.
          ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      EDIT4000 IF NOT LESS    * new page needed
.
          ADD       ONE,CNTURNO
          PACK      KEY16,XURNO,XAAENUM
.
EDIT2000  STORE     KEY16,CNTURNO,URNO01,URNO02,URNO03,URNO04,URNO05,URNO06:
                                  URNO07,URNO08,URNO09,URNO10,URNO11,URNO12:
                                  URNO13,URNO14,URNO15,URNO16,URNO17,URNO18
          DISPLAY   *P1:CVERT,*V2LON,CNTURNO,*HOFF,".":
                    *P5:CVERT,XURNO,SP2,XSNAME,*P50:CVERT,XAAENUM
          GOTO      EDIT1000
.
.         New page needed 
.
EDIT4000  COMPARE   "2",CPAGENO
          GOTO      EDIT4500 IF NOT LESS    * not on first page
.
.         need a new screen, no previous screen
.
EDIT4100  DISPLAY   *P1:24,"Select item to delete, (E)xit, (S)end letter, ":
                    "(N)ext ? ",*EL,*V2LON,*P25:24,ANSE,*P33:24,ANSS:
                    *P48:24,ANSN
          MOVE      ONE,OK                  * which prompt to use
          MOVE      "56",CCOL
          CALL      INPT0000                * input choice 
          BRANCH    EXIT,EDIT9100,EDIT9000,EDIT7000,EDIT6400
.                        Exit     Send     Next     Previous
          GOTO      EDIT6000
.
.         need a new screen, with a previous screen
.
EDIT4500  DISPLAY   *P1:24,"Select item to delete, (E)xit, (S)end letter, ":
                    "(N)ext, (P)revious ? ",*EL,*V2LON,*P25:24,ANSE:
                    *P33:24,ANSS,*P48:24,ANSN,*P56:24,ANSP
.
          MOVE      TWO,OK                  * which prompt to use
          MOVE      "68",CCOL               * keyin posn
          CALL      INPT0000                * input choice 
          BRANCH    EXIT,EDIT9100,EDIT9000,EDIT7000,EDIT8000
.                        Exit     Send     Next     Previous
          GOTO      EDIT6000
.
.         end of data reached
.
EDIT5000  COMPARE   ZERO,CNTURNO
          GOTO      EDIT9200 IF EQUAL       * no data displayed
.
          COMPARE   "2",CPAGENO
          GOTO      EDIT5500 IF NOT LESS    * not on first page
.
.         end of data, no previous screen
.
EDIT5100  DISPLAY   *P1:24,"Select item to delete, (E)xit, (S)end letter ? ":
                    *EL,*V2LON,*P25:24,ANSE,*P33:24,ANSS
.
          MOVE      THREE,OK                * which prompt to use
          MOVE      "48",CCOL
          CALL      INPT0000                * input choice 
          BRANCH    EXIT,EDIT9100,EDIT9000,EDIT6400,EDIT6400
.                        Exit     Send     Next     Previous
          GOTO      EDIT6000
.
.         end of data with previous screen
.
EDIT5500  DISPLAY   *P1:24,"Select item to delete, (E)xit, (S)end letter, ":
                    "(P)revious ? ",*EL,*V2LON,*P25:24,ANSE,*P33:24,ANSS:
                    *P48:24,ANSP
.
          MOVE      FOUR,OK                 * which prompt to use
          MOVE      "60",CCOL
          CALL      INPT0000                * input choice 
          BRANCH    EXIT,EDIT9100,EDIT9000,EDIT6400,EDIT8000
.                        Exit     Send     Next     Previous
.
.         number selected
.
EDIT6000  MOVE      SP20,KEY16
          LOAD      KEY16,FORM2,URNO01,URNO02,URNO03,URNO04,URNO05,URNO06:
                                URNO07,URNO08,URNO09,URNO10,URNO11,URNO12:
                                URNO13,URNO14,URNO15,URNO16,URNO17,URNO18
.
          READ      TEMPFILE,KEY16;XURNO,XAAENUM,XSNAME
          GOTO      EDIT6400 IF OVER
.
.         valid number
.
EDIT6100  DISPLAY   *P1:24,"Are you sure you don't want to send a letter ":
                    "to for this patient (",*V2LON,ANSY,*HOFF,"/",*V2LON,ANSN:
                    *HOFF,") ? ",*EL;
.
          KEYIN     *P74:24,*DV,UNDLN1:
                    *P74:24,*V2LON,ANS
.
          REP       UPPLOW,ANS
          REP       "Y1N2",ANS
          MOVE      "0",FORM1
          MOVE      ANS,FORM1               * get as numeric
          BRANCH    FORM1,EDIT6200,EDIT6500 * valid options Yes,No
.
          BEEP
          GOTO      EDIT6100
.
.         delete the patient from the list
.
EDIT6200  DELETE    TEMPFILE,KEY16
          GOTO      EDIT0000                * redisplay screen
.
.         invalid choice
.
EDIT6400  BEEP
.
EDIT6500  BRANCH    OK,EDIT4100,EDIT4500,EDIT5100,EDIT5500
          GOTO      EDIT0000
.
. ------- Next screen -------
.
EDIT7000  MOVE      URNO18,KEY16              * last record for the screen
          READ      TEMPFILE,KEY16;ANS        * position on last record
          READKS    TEMPFILE;XURNO,XAAENUM,XSNAME
          MOVE      "5",CVERT
          DISPLAY   *P1:5,*EF;
          MOVE      "1",CNTURNO               * reset counter
          ADD       ONE,CPAGENO               * add to page counter
          UNPACK    SP50,URNO01,URNO02,URNO03
          UNPACK    SP50,URNO04,URNO05,URNO06
          UNPACK    SP50,URNO07,URNO08,URNO09
          UNPACK    SP50,URNO10,URNO11,URNO12
          UNPACK    SP50,URNO12,URNO13,URNO14
          UNPACK    SP50,URNO15,URNO16,URNO17
          UNPACK    SP50,URNO18
          GOTO      EDIT2000                 * display the item
.
. ------- Previous screen -------
.
EDIT8000  MOVE      URNO01,KEY16            * first record of screen
          READ      TEMPFILE,KEY16;ANS
          MOVE      "0",FORM2               * set counter
.
EDIT8100  ADD       ONE,FORM2               * incrment counter
          COMPARE   "19",FORM2
          GOTO      EDIT8200 IF NOT LESS    * finished reads
.
          READKP    TEMPFILE;XURNO,XAAENUM,XSNAME
          GOTO      EDIT8100 IF NOT OVER
.
EDIT8200  MOVE      "5",CVERT               * reset row
          DISPLAY   *P1:5,*EF;
          MOVE      "1",CNTURNO             * reset counter
          SUB       ONE,CPAGENO             * add to page counter
          UNPACK    SP50,URNO01,URNO02,URNO03,URNO04,URNO05,URNO06
          UNPACK    SP50,URNO07,URNO08,URNO09,URNO10,URNO11,URNO12
          UNPACK    SP50,URNO12,URNO13,URNO14,URNO15,URNO16,URNO17,URNO18
          GOTO      EDIT2000                * display the item
.
.         Send selected 
.
EDIT9000  MOVE      FALSE,EXIT              * send selected
          GOTO      EDIT9999
.
.         Exit entered
.
EDIT9100  DISPLAY   *P1:24,"Are you sure you don't want to send any letters ":
                    "to these patients (",*V2LON,ANSY,*HOFF,"/",*V2LON,ANSN:
                    *HOFF,") ? ",*EL;
.
          KEYIN     *P74:24,*DV,UNDLN1,*P74:24,*V2LON,ANS
          REP       UPPLOW,ANS
          REP       "Y1N2",ANS
          MOVE      "0",FORM1               * default
          MOVE      ANS,FORM1               * get as numeric
          BRANCH    FORM1,EDIT9200,EDIT6500 * valid options Yes,No
.
          BEEP
          GOTO      EDIT9100
.
EDIT9200  MOVE      TRUE,EXIT               * exit selected
.
EDIT9999  RETURN
+
.*********************************************************************
.*                  LETT0000                    Called by : ML5000   *
.*        Get the letter number                                      *
.*        Returns : EXIT = 1      nothing entered                    * 
.*                  LETTNUMB      letter number                      *
.*********************************************************************
LETT0000  DISPLAY   *P1:23,*EL:
                    *P1:24,"Please enter the letter code to be sent : ",*EL;
          KEYIN     *P43:24,*DV,UNDLN3:
                    *P43:24,*V2LON,*JR,CCITEMD:
                    *P43:24,*DV,CCITEMD
.                   
          ENDSET    CCITEMD
          APPEND    SP3,CCITEMD
          RESET     CCITEMD
.
          MATCH     SP3,CCITEMD
          GOTO      LETT9100 IF EQUAL       * exit selected
.
          MATCH     "  ?",CCITEMD
          GOTO      LETT1000 IF NOT EQUAL   * validate
.
          CALL      AELT0000                * ? routine
          GOTO      LETT0000
.
.         validate the letter number
.
LETT1000  PACK      KEY6,CCITEMD,SP2,ZERO   * set for header
          CALL      RDAELET1                * letter file
          BRANCH    OVRCD,LETT3000          * invalid letter
.
          MOVE       AELELTNO,LETTNUMB      * set up the letter number
          DISPLAY   *P1:23,"Letter : ",AELETEXT
.
          CALL      CONTQST
          BRANCH    CEXIT,LETT2000,LETT0000,LETT9100       * Yes,No,Cancel
.
LETT2000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
.       
          DISPLAY   *P1:24,"Enter the date for the letter : ",*EL;
          MOVE      "33",CCOL
          MOVE      "24",CVERT
.
          CALL      KEYDATE
          BRANCH    CQUEST,LETT2000
          BRANCH    OVRCD,LETT2000
.
          PACK      LETTDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",LETTDATE
.
          MATCH     LETTDATE,CURRDATE
          GOTO      LETT9000 IF NOT LESS    * date <= current
.
          DISPLAY   *P1:24,*B,"Date must not be into the future.  ",*EL;
          CALL      HITENTER 
          GOTO      LETT2000
.
LETT3000  DISPLAY   *P1:24,*B,"Invalid letter.  ",*EL;
          CALL      HITENTER 
          GOTO      LETT0000
.
LETT9000  MOVE      FALSE,EXIT              * valid letter
          GOTO      LETT9999
.
LETT9100  MOVE      TRUE,EXIT               * exit selected
.
LETT9999  RETURN
+
.*********************************************************************
.*                  PRNT0000                    Called by : ML6000   *
.*        Print the letter chosen                                    *
.*        Para's  : LETTNUMB      the letter number                  * 
.********************************************************************* 
PRNT0000  MOVE      SP20,KEY16                   * start of temp file
          READ      TEMPFILE,KEY16;;
          DISPLAY   *P1:24,"Printing Patient : ",*EL;
.
.         loop through temp file
.
PRNT1000  READKS    TEMPFILE;XURNO,XAAENUM,XSNAME
          GOTO      PRNT9000 IF OVER 
.
PRNT2000  PACK      KEY8,XAAENUM           
          CALL      RDDETA1
          BRANCH    OVRCD,PRNT1000
.
          DISPLAY   *P19:24,XURNO;
          CALL      FORM0000                     * format all variables
.
PRNT4000  CALL      PTFL0000                     * print the letter
          BRANCH    EXIT,PRNT9999                * no data for letter
          GOTO      PRNT1000
.
PRNT9000  DISPLAY   *P1:24,*B,"Letter has been printed.  ",*EL;
          CALL      HITENTER 
          MOVE      FALSE,EXIT
.
PRNT9999  RETURN
+
.*********************************************************************
.*                  FORM0000                    Called by : PRNT0000 *
.*        Format all variables to contain what they should           *
.********************************************************************* 
FORM0000  CALL      CLPN0000                     * clear print vars
.
.         read required files to set up variables
.
          MOVE      ADAURNO,KEY8
          CALL      RDMAST1                      * Master file
.
          MOVE      ADANUMB,KEY8                 * Discharge file
          CALL      RDDISA1
.
          PACK      KEY10,AEDARFGP,SP10          * GP
          CALL      RDPMHCP1
.
          PACK      PMHGPRAC,AEDAGPPC,SP20
          PACK      PMHGCNTR,AEDAGPPT,SP20
          PACK      KEY12,PMHGPRAC,PMHGCNTR       * GP practice
          CALL      RDPMHCG1
.
          PACK      KEY14,AEDAFUND,AEDATBLE      * Health fund
          CALL      RDFUND1
.
          MOVE      ADADOCT,KEY6                 * Doctors file
          CALL      RDDOCT1
.
.         set up values from files in print variables
.
          MOVE      ADANUMB,LPAAENUM             * A&E Number
.
          MOVE      "No",LPADHOS                 * Admitted to Hospital
          IF        ADAADMIT=1
            MOVE      "Yes",LPADHOS
          ENDIF
.
          MOVE      ADACOMP,LPCCODE              * Compensation code
          MOVE      STARS,TDESC
          MATCH     SP3,ADACOMP
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSL,ADACOMP
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPCCODED
.
          MOVE      ADAWAIT,LPCOMPW              * Completion wait code
          MOVE      STARS,TDESC
          MATCH     SP3,ADACOMP
          IF        !@EQUAL
            PACK      KEY5,ANSE,ANSW,ADAWAIT
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPCOMPWD
.
          MOVE      AEDADTAT,LPDADMIT            * Decision to admit time
.
          MOVE      ADSSSES,LPDADMIS             * Discharge assessment
.
          PACK      ADASDTE,ADASDTE,SP8
          MOVE      ADASDTE,WORKDATE
          CALL      FDAT0000
          MOVE      DATELINE,LPDATES             * Date seen
.
          MOVE      ADADOCT,LPDCODE              * Doctor code allocated
.
          PACK      ADSDATE,ADSDATE,SP8
          MOVE      ADSDATE,WORKDATE             * Discharge date
          CALL      FDAT0000
          MOVE      DATELINE,LPDDATE
.
          MOVE      ADSDIAG,LPDDIAG              * Discharge diagnosis code
          MOVE      ADADIAG,LPDIAG               * Diagnosis
          MOVE      ADSDISC,LPDSTAT              * Discharge status (ED)
          MOVE      ADSTIME,LPDTIME              * Discharge time
.
          MOVE      DSNAME,PACSNAME              * Doctor name allocated
          MOVE      DGNAME,PACGNAME
          MOVE      DGNAME,INITIAL
          MOVE      DTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,LPDNAME 
.
          MOVE      ADADURN,LPDURWT              * Duration of waiting
.
          MOVE      ADAADD1,LPEADDA              * Employer address 1
          MOVE      ADAADD2,LPEADDB              * Employer address 2
          MOVE      ADASUBR,LPEADDC              * Employer address 3
          MOVE      ADAADD4,LPEADDD              * Employer address 4
          MOVE      ADAEMPL,LPEDESC              * Employer description
          MOVE      ADATELE,LPEPHONE             * Employer phone
          MOVE      ADAPOST,LPEPOST              * Employer postcode
          MOVE      AEDAEMPL,LPEWORK             * Employer/Workcare
.
          MOVE      PSNAME,PACSNAME              * Patient full name
          MOVE      PGNAME,PACGNAME
          MOVE      PGNAME,INITIAL
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,LPFULLN
.
          MOVE      PGNAME,LPGIVN                * Given name
          MOVE      PSNAME,LPSURN                * Surname
.
          MOVE      AEDAFUND,LPHELTH             * Health fund
          MOVE      HFNAME,LPHELTHD              * Health fund desc
          MOVE      AEDATBLE,LPHLTHT             * Health fund table
          MOVE      HFNAME,LPHLTHTD              * Health fund table desc
.
          MOVE      AEDATESI,LPINCTM             * Incident time
.                                                  (time elapsed AE)
          MOVE      ADAINSUR,LPISTAT             * Insurance status
          MOVE      STARS,TDESC
          MATCH     SP3,ADAINSUR
          IF        !@EQUAL
            PACK      KEY5,ANSU,ONE,ADAINSUR
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPISTATD
.
          MOVE      AEDAINIT,LPINITC             * Initiator code
          MOVE      STARS,TDESC
          MATCH     SP3,AEDAINIT
          IF        !@EQUAL
            PACK      KEY5,ANSA,ANSI,AEDAINIT
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPINITCD
.
          MOVE      ADAMODE,LPMODE               * Mode of arrival
          MOVE      STARS,TDESC
          MATCH     SP3,ADAMODE
          IF        !@EQUAL
            PACK      KEY5,ANSE,ANSA,ADAMODE
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPMODED
.
.         National number
.
          PACK      KEY10,CHOSINDX,ADAURNO
          PACK      KEY8,ADAURNO
          BRANCH    PTCNNMPI,FORM2000,FORM3000,FORM3000  * National number
          GOTO      FORM4000
.
FORM2000  CALL      RDNHMAS2                     * use file 1
          BRANCH    OVRCD,FORM4000
          MOVE      NHMANMPI,LPNATNUM
          GOTO      FORM4000
.
FORM3000  CALL      RDPTNID1                     * use file 2
          BRANCH    OVRCD,FORM4000
          MOVE      PTNINMPI,LPNATNUM
.
FORM4000  MOVE      AEDAPVIS,LPNOPREV            * No. prev visits charged
.
          MOVE      PADD1,LPPADDA                * Patient address 1
          MOVE      PADD2,LPPADDB                * Patient address 2
          MOVE      PSUBRB,LPPADDC               * Patient address 3
          MOVE      PADD4,LPPADDD                * Patient address 4
          MOVE      PTELEP,LPPPBUS               * Patient phone business
          MOVE      PTELEB,LPPPHOME              * Patient phone home
          MOVE      PPOST,LPPPOST                * Patient post code
.
          MOVE      PTMXCELL,LPOCELL           * load cellular phone number
          MOVE      PTMXADD1,LPOADDA           * load postal address line 1
          MOVE      PTMXADD2,LPOADDB           * load postal address line 2
          MOVE      PTMXADD3,LPOADDC           * load postal address line 3
          MOVE      PTMXADD4,LPOADDD           * load postal address line 4
          MOVE      PTMXPOST,LPOPOST           * load postal Post Code     
.
          MOVE      ADACLASS,LPPCLSS             * Patient classification
          MOVE      STARS,TDESC
          MATCH     SP3,ADACLASS
          IF        !@EQUAL
            PACK      KEY5,ANSA,SP1,ADACLASS
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPPCLSSD
.
          MOVE      AEDAPLIN,LPPLIN              * Place of incident
          MOVE      STARS,TDESC
          MATCH     SP3,AEDAPLIN
          IF        !@EQUAL
            PACK      KEY5,ANSA,ANSP,AEDAPLIN
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPPLIND
.
          MOVE      ADAPREV,LPPRAE               * Previous AAE attendance
          MOVE      STARS,TDESC
          MATCH     SP3,ADAPREV
          IF        !@EQUAL
            PACK      KEY5,ANSE,ANSP,ADAPREV
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPPRAED
.
.         Priority description
.
          MOVE       SP20,TDESC
          MATCH      SP3,ADAPRTY
          IF         !@EQUAL
            PACK       KEY5,ANSA,ANSA,ADAPRTY
            CALL       RDCODE1
          ENDIF
          MOVE       TDESC,LPPRID
.          LOAD      LPPRID,ADAPRTY,AECNDXPA,AECNDXPB,AECNDXPC,AECNDXPD,AECNDXPE
.
          MOVE      AEDARFGP,LPRGPCOD            * Referring GP code
          MOVE      AEDAGPPC,LPRGPPC             * Referring GP prac code
          MOVE      PMHGPNAM,LPRGPPD             * Referring GP desc
.
          MOVE      PMHCSNAM,PACSNAME            * Referring GP name
          MOVE      PMHCGNAM,PACGNAME
          MOVE      PMHCINIT,INITIAL
          MOVE      SP1,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,LPRGPNAM
.
          MOVE      AEDARTAS,LPSEAT              * Seatbelt details code
          MOVE      STARS,TDESC
          MATCH     SP3,AEDARTAS
          IF        !@EQUAL
            PACK      KEY5,ANSA,ANSR,AEDARTAS
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPSEATD
.
          MOVE      ADASIT,LPSIT                 * Situation
          MOVE      STARS,TDESC
          MATCH     SP3,ADASIT
          IF        !@EQUAL
            PACK      KEY5,ANSE,ANSS,ADASIT
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPSITD
.
          MOVE      ADASRC,LPSORC                * Source of referral
          MOVE      STARS,TDESC
          MATCH     SP3,ADASRC
          IF        !@EQUAL
            PACK      KEY5,ANSS,SP1,ADASRC
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPSORCD
.
          MOVE      AEDATIAS,LPTIMEI             * Time of initial assessment
          MOVE      ADASEEN,LPTIMES              * Time actually seen
.
          PACK      WORKDATE,CCC,CYY,CMM,CDD     * Today
          CALL      FDAT0000
          MOVE      DATELINE,LPTODDAT
.
          MOVE      ADAURNO,LPURNUM              * U/R number
.
          MOVE      ADAUSR1,LPUDEF1              * User Defined 1
          MOVE      STARS,TDESC
          MATCH     SP3,ADAUSR1
          IF        !@EQUAL
            PACK      KEY5,ANSA,ONE,ADAUSR1
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPUDEF1D
.
          MOVE      ADAUSR2,LPUDEF2              * User Defined 2
          MOVE      STARS,TDESC
          MATCH     SP3,ADAUSR2
          IF        !@EQUAL
            PACK      KEY5,ANSA,TWO,ADAUSR2
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPUDEF2D
.
          MOVE      ADAUSR3,LPUDEF3              * User Defined 3
          MOVE      STARS,TDESC
          MATCH     SP3,ADAUSR3
          IF        !@EQUAL
            PACK      KEY5,ANSA,THREE,ADAUSR3
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPUDEF3D
.
          MOVE      ADAUSR4,LPUDEF4              * User Defined 4
          MOVE      STARS,TDESC
          MATCH     SP3,ADAUSR4
          IF        !@EQUAL
            PACK      KEY5,ANSA,FOUR,ADAUSR4
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPUDEF4D
.
          MOVE      ADAUSR5,LPUDEF5              * User Defined 5
          MOVE      STARS,TDESC
          MATCH     SP3,ADAUSR5
          IF        !@EQUAL
            PACK      KEY5,ANSA,FIVE,ADAUSR5
            CALL      RDCODE1
          ENDIF
          MOVE      TDESC,LPUDEF5D
.
          PACK      ADADATE,ADADATE,SP8
          MOVE      ADADATE,WORKDATE             * Date of visit
          CALL      FDAT0000
          MOVE      DATELINE,LPVDATE
.
          MOVE      ADATIME,LPVTIME              * Time of visit         
.
FORM9999  RETURN
+
.*********************************************************************
.*                  PTFL0000                    Called by : PRNT4000 *
.*        Print the letter                                           *
.*********************************************************************
PTFL0000  MOVE      ONE,CLNO                * line number to print
          MOVE      ZERO,FORM3              * read letter file header
          PACK      KEY6,LETTNUMB,FORM3
          CALL      RDAELET1
          BRANCH    OVRCD,PTFL9600          * letter header has gone
.
          MOVE      AELEPPAG,PHYSPAGE       * physical paper length
          MOVE      AELEPTOP,TOPMARG        * top margin
          MOVE      AELEPBOT,BOTTMARG       * bottom margin
          SUB       AELEPBOT,AELEPPAG       * where to print to at bottom
          MOVE      AELEPPAG,MLETPLEN       * length to print to 
          MOVE      AELEPTAB,LEFTMARG       * left margin
.
.         print top margin 
.
PTFL0050  PRINT     *N;                     * print blank line
          COMPARE   TOPMARG,CLNO
          GOTO      PTFL1000 IF NOT LESS    * printed top margin
.
          ADD       ONE,CLNO  
          GOTO      PTFL0050
.
.         print letter one line at a time 
.
PTFL1000  CALL      RKAELET1                * get next line of letter
          BRANCH    OVRCD,PTFL9000          * end of letter reached
.
          COMPARE   LETTNUMB,AELELTNO
          GOTO      PTFL9000 IF NOT EQUAL   * different letter number
.
PTFL2000  CALL      PVAR0000                * substitute % var value
          PRINT     *N,*LEFTMARG,PRTSTRNG;  * print text with % vars
          ADD       ONE,CLNO
.
          COMPARE   CLNO,MLETPLEN
          CALL      PAGE0000 IF EQUAL       * print page when required
          GOTO      PTFL1000
.
.         end of current letter reached
.
PTFL9000  COMPARE   TOPMARG,CLNO
          GOTO      PTFL9500 IF EQUAL       * no lines of text printed
.
          MOVE      PHYSPAGE,CCITEM         * actual page length
          SUB       CLNO,CCITEM             * number of lines left to print
          MOVE      ONE,CLNO                * first line
.
.         print the bottom margin
.
PTFL9100  PRINT     *N;
          COMPARE   CCITEM,CLNO
          GOTO      PTFL9400 IF NOT LESS    * printed bottom margin
.
          ADD       ONE,CLNO
          GOTO      PTFL9100
.
PTFL9400  MOVE      CCITEM,PHYSPAGE         * restore physical page length
          MOVE      FALSE,EXIT              * indicate to continue
          GOTO      PTFL9999
.
PTFL9500  DISPLAY   *P1:24,*B,"Letter has not been set up yet.  ",*EL;
          CALL      HITENTER 
          GOTO      PTFL9900
.
PTFL9600  DISPLAY   *P1:24,*B,"Invalid Letter number.  ",*EL;
          CALL      HITENTER 
.
PTFL9900  MOVE      TRUE,EXIT               * enter another letter code
.
PTFL9999  RETURN
+
.*********************************************************************
.*                  PAGE0000                    Called by : PTFL0000 *
.*        Routine to paginate if a new page is required              *
.*********************************************************************
PAGE0000  MOVE      AELELINO,FORM3          * save line number
.
          CALL      RKAELET1
          BRANCH    OVRCD,PAGE8000          * no more records for this letter
.
          COMPARE   LETTNUMB,AELELTNO
          GOTO      PAGE8000 IF NOT EQUAL   * no more records for this letter
.
          MOVE      TOPMARG,CCITEM          * save the top margin value
          ADD       BOTTMARG,CCITEM         * get number of lines to print
          MOVE      ONE,CLNO                * set line counter
.
.         loop to paginate 
.
PAGE1000  PRINT     *N;
          COMPARE   CLNO,CCITEM 
          GOTO      PAGE9000 IF EQUAL       * finished doing page
.
          ADD       ONE,CLNO
          GOTO      PAGE1000
.
PAGE8000  PACK      KEY6,LETTNUMB,FORM3     * restore original record
          CALL      RDAELET1                * read it
          GOTO      PAGE9999
.
.         done new page, get back original record
.
PAGE9000  MOVE      TOPMARG,CLNO            * set the line counter
          PACK      KEY6,LETTNUMB,FORM3     * set for original record
          CALL      RDAELET1                * get back record
.
PAGE9999  RETURN
+
.*********************************************************************
.*                  PVAR0000                    Called by : PRIN2000 *
.*        Modify a line to substitute "%" variable values            *
.*********************************************************************
PVAR0000  MOVE      AELETEXT,DIM70          * the working line of text
          PACK      PRTSTRNG,SP50,SP50,SP10 * the print-string
          RESET     PRTSTRNG,0
          MOVE      ONE,STARTSTR            * set start position
          MOVE      ONE,ENDSTR              * set end position
.
.         look for % sign
.
PVAR2000  SCAN      SPECCHAR,DIM70
          GOTO      PVAR8000 IF NOT EQUAL   * no % sign in work string
.
.         have a % character, save its position and get to character 
.         before it in string (for the append command later on)
.
PVAR3000  MOVEFPTR  DIM70,PERCPOS           * save FP of % sign
          BUMP      DIM70,-1                * get char before % sign
          GOTO      PVAR3100 IF NOT EOS     * not at start of string
.
          RESET     DIM70,0                 * at start of string
.
.         check that start posn <= end position
.
PVAR3100  MOVEFPTR  DIM70,ENDSTR            * position before % sign
          COMPARE   STARTSTR,ENDSTR
          GOTO      PVAR3200 IF NOT LESS    * end position is >= start position 
.
          RESET     DIM70,STARTSTR          * set pointer to next % sign
          GOTO      PVAR9999 IF EOS         *  if end < start
          GOTO      PVAR3300
.
.         string is set up OK, add text before % sign to print-string
.
PVAR3200  RESET     DIM70,STARTSTR          * set up so FP -> LL is the text 
          SETLPTR   DIM70,ENDSTR            * before % sign
          APPEND    DIM70,PRTSTRNG          * add text to print-string
.
.         remove the text of DIM70 which was added to print-string
.
PVAR3300  SETLPTR   DIM70,70                * reset LL to end
          RESET     DIM70,PERCPOS           * reset FP to where % sign is
          MOVE      DIM70,DIM70B            * remove text before % sign
          MOVE      DIM70B,DIM70            * reset the work string
.
.         get the %var from the list - held in SEARCHV
.
PVAR4000  CALL      GETV0000                * extract the % var
          MOVEFPTR  DIM70,STARTSTR          * store finish pos. of var
          BRANCH    EXIT,PVAR5000           * invalid % variable
          RESET     SEARCHV
.
.         search for the %var in the list of constants 
.
          SEARCH    SEARCHV,LCPAGE,EIGHTY8,SRCHNUM
.                   string ,start ,items ,what item number
          BRANCH    SRCHNUM,PVAR7000,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500,PVAR4500:
                            PVAR4500,PVAR4500,PVAR4500,PVAR4500
.
.         have a variable from the list
.
PVAR4500  COMPARE   ZERO,SRCHNUM 
          GOTO      PVAR5000 IF EQUAL       * variable not in list
.
.         load DISPSTRN with the actual value of the % var 
.
          LOAD      DISPSTRN,SRCHNUM,ANSZ,LPAAENUM,LPADHOS,LPCCODE,LPCCODED:
                                     LPCOMPW,LPCOMPWD,LPDADMIT,LPDADMIS,LPDATES:
                                     LPDCODE,LPDDATE,LPDDIAG,LPDIAG:
                                     LPDNAME,LPDSTAT,LPDTIME,LPDURWT,LPEADDA:
                                     LPEADDB,LPEADDC,LPEADDD,LPEDESC,LPEPHONE:
                                     LPEPOST,LPEWORK,LPFULLN,LPGIVN,LPHELTH:
                                     LPHELTHD,LPHLTHT,LPHLTHTD,LPINCTM,LPISTAT:
                                     LPISTATD,LPINITC,LPINITCD,LPMODE,LPMODED:
                                     LPNATNUM,LPNOPREV,LPPADDA,LPPADDB,LPPADDC:
                                     LPPADDD,LPPCLSS,LPPCLSSD,LPPPBUS,LPPPHOME:
                                     LPPPOST,LPPLIN,LPPLIND,LPPRAE,LPPRAED:
                                     LPPRID,LPRGPCOD,LPRGPNAM,LPRGPPC,LPRGPPD:
                                     LPSEAT,LPSEATD,LPSIT,LPSITD,LPSORC:
                                     LPSORCD,LPSURN,LPTIMEI,LPTIMES,LPTODDAT:
                                     LPURNUM,LPUDEF1,LPUDEF1D,LPUDEF2,LPUDEF2D:
                                     LPUDEF3,LPUDEF3D,LPUDEF4,LPUDEF4D,LPUDEF5:
                                     LPUDEF5D,LPVDATE,LPVTIME,LPOCELL,LPOADDA:
                                     LPOADDB,LPOADDC,LPOADDD,LPOPOST
.
          APPEND    DISPSTRN,PRTSTRNG       * add the value of variable
.
.         remove trailing blanks from print-string
.
          ENDSET    PRTSTRNG                * get to end of string
.
PVAR4600  CMATCH    SP1,PRTSTRNG
          GOTO      PVAR2000 IF NOT EQUAL   * removed all blanks
.
          BUMP      PRTSTRNG,-1
          GOTO      PVAR4600 IF NOT EOS     * more vars to check
          GOTO      PVAR2000                * scan rest of string 
.
.         % variable not found in the list so just add it as it is
.
PVAR5000  RESET     SEARCHV                 * add the string starting with %
          APPEND    SEARCHV,PRTSTRNG 
          GOTO      PVAR8000 IF EOS         * end of print-string
          GOTO      PVAR2000                * search rest of work string
.
.         %page variable found
.
PVAR7000  MOVE      PHYSPAGE,CCITEM         * physical page length
          SUB       CLNO,CCITEM             * lines left to print on curr page
.
          MOVE      ONE,CLNO                * set line counter
          ADD       TOPMARG,CCITEM          * lines for top margin on next page
          SUB       ONE,CCITEM              * take one off as will print blank
.
PVAR7100  PRINT     *N;
          COMPARE   CLNO,CCITEM
          GOTO      PVAR7500 IF EQUAL       * printed new page
.
          ADD       ONE,CLNO
          GOTO      PVAR7100
.
PVAR7500  MOVE      TOPMARG,CLNO            * restore line counter
          SUB       ONE,CLNO                * take one off as will print blank
          PACK      PRTSTRNG,SP50,SP50,SP10 * clear print string
          GOTO      PVAR9999
.
.         % sign not found so just set up the actual text
.
PVAR8000  APPEND    DIM70,PRTSTRNG          * set up text
          RESET     PRTSTRNG 
.
PVAR9999  RETURN
+
.*********************************************************************
.*                  GETV0000                    Called by : PVAR4000 *
.*        Extracts the "%" variable from the line of text            *
.*        Para's  : DIM70         work string starting with % sign   * 
.*        Returns : SEARCHV       the variable to search for         * 
.*********************************************************************
GETV0000  MOVE      FALSE,EXIT
          PACK      SEARCHV,SP50,SP50,SP10  * clear return variable
          RESET     SEARCHV,0               * get to start of search-string
          MOVE      DIM70,ANS               * get % char
          APPEND    ANS,SEARCHV             * put % var in search-string
          RESET     SEARCHV,0               * get to start of search-string
.
.         check if letter after % is lower case
.
          BUMP      DIM70                   * get next char
          MOVE      DIM70,ANS               * put next char in ans
          REPLACE   REPSTR,ANS              * if ans = 0, have lower case letter
          MATCH     "0",ANS
          GOTO      GETV9000 IF NOT EQUAL   * no longer in the %variable
.
.         have a correct % variable so go about setting it up
.
          BUMP      DIM70,-1                * get back to % sign
          PACK      SEARCHV,SP50,SP50,SP10  * initialise SEARCHV
          RESET     SEARCHV,0               *   value and pointers
.
.         append % var to SEARCHV until anything but 
.         a lower case letter is found
.
GETV1000  MOVE      DIM70,ANS               * get next letter
          APPEND    ANS,SEARCHV             * add it to search-string
          BUMP      DIM70 
          GOTO      GETV9999 IF EOS         * no more characters
.
          MOVE      DIM70,ANS               * check next letter
          REPLACE   REPSTR,ANS              * if ans = 0, have lower case letter
          MATCH     "0",ANS
          GOTO      GETV9999 IF NOT EQUAL   * finished setting up string
          GOTO      GETV1000                * get next letter
.
GETV9000  MOVE      TRUE,EXIT
.
GETV9999  RETURN
+
.**********************************************************************
.*                           FDAT0000                                 *
.*                 Routine to format the date                         *
.**********************************************************************
FDAT0000  UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",WORKDATE
          CLEAR     DATELINE
          MATCH     SP2,CDAY
          GOTO      FDAT7000 IF EQUAL
          MATCH     "99",CDAY
          GOTO      FDAT7000 IF EQUAL
          MOVE      CDAY,FORM2
.
.         add date extension onto the day
.
          LOAD      DEXT,FORM2,DEXT1,DEXT2,DEXT3,DEXT4,DEXT4,DEXT4,DEXT4:
                    DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4:
                    DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT1:
                    DEXT2,DEXT3,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4:
                    DEXT4,DEXT4,DEXT1
          MOVE      CMON,FORM2
.
.         change month into long format 
.
          LOAD      MONTH,FORM2,MONTH1,MONTH2,MONTH3,MONTH4,MONTH5,MONTH6:
                    MONTH7,MONTH8,MONTH9,MONTH10,MONTH11,MONTH12
          RESET     CDAY
          CMATCH    "0",CDAY
          GOTO      FDAT1000 IF NOT EQUAL
          BUMP      CDAY
.
.         pack the formatted date
.
FDAT1000  PACK      DATELINE,CDAY,DEXT,SP1,MONTH,SP1,CCENT,CYEAR
          MOVE      DATELINE,LINE
          STRIP     LINE
          MOVE      LINE,DATELINE
          GOTO      FDAT9999
.
.         date does not exist 
.
FDAT7000  MOVE      "99th XXXXXXXXX 1999",DATELINE
.
FDAT9999  RETURN
.*********************************************************************
.*                  INPT0000                    Called by : EDIT0000 *
.*        Input response to prompt                                   *
.*        Para's  : CCOL          column for keyin                   *
.*                  CNTURNO       number of record on screen         *
.*        Returns : FORM2         valid number if entered            *
.*                  EXIT = 1      Exit selected                      *
.*                  EXIT = 2      Send letter selected               *
.*                  EXIT = 3      Next screen selected               *
.*                  EXIT = 4      Previous screen selected           *
.*********************************************************************
INPT0000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
.
          TYPE      DIM2
          GOTO      INPT5000 IF EQUAL       * number entered
.
          MOVE      ZERO,EXIT               * set default value
          UNPACK    DIM2,ANS,ANS            * get letter entered
          REP       UPPLOW,ANS              * get as upper case
          REP       "E1S2N3P4",ANS          * turn valid letters to numbers
          MOVE      ANS,EXIT                * set exit value
          BRANCH    EXIT,INPT9999,INPT9999,INPT9999,INPT9999
.
          BEEP
          GOTO      INPT0000
.
.         number entered
.
INPT5000  MOVE      DIM2,FORM2              * get as number
          MOVE      ZERO,EXIT               * signal number selected
          COMPARE   FORM2,ZERO
          GOTO      INPT5100 IF NOT LESS    * -ve entered
.
          COMPARE   FORM2,CNTURNO
          GOTO      INPT9999 IF NOT LESS    * valid answer
.
INPT5100  BEEP
          GOTO      INPT0000
.
INPT9999  RETURN
+
.*********************************************************************
.*                  AELT0000                                         *
.*        Display list of letters for ?                              *
.********************************************************************* 
AELT0000  MOVE      FIVE,CVERT              * line counter
          PACK      KEY6,SP6                * key of blanks
          CALL      RSAELET1                * positional read
.
          DISPLAY   *P1:3,*EF,*V2LON,*P33:4,"EMERGENCY LETTERS":
                    *P1:5,*ULON,"Letter",*P8:5,"          Description         "
.
AELT0100  CALL      RKAELET1  
          BRANCH    OVRCD,AELT0999
.
          COMPARE   ZERO,AELELINO
          GOTO      AELT0100 IF NOT EQUAL   * not a header record
.
          ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      AELT0400 IF NOT LESS    * wont fit on the page
.
AELT0300  DISPLAY   *P1:CVERT,*V2LON,AELELTNO,*HOFF,*P8:CVERT,AELETEXT
          GOTO      AELT0100
.
AELT0400  DISPLAY   *P1:24,"( )ontinue, ( )irst, ( )ext ? ",*EL:
                    *V2LON,*P2:24,ANSC,*P14:24,ANSF,*P23:24,ANSN
.
          KEYIN     *P31:24,*DV,UNDLN1:
                    *P31:24,*V2LON,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANSC,ANS
          GOTO      AELT0999 IF EQUAL       * Continue selected
.
          MATCH     ANSF,ANS
          GOTO      AELT0000 IF EQUAL       * First selected
.
.         (N)ext screen selected
.
AELT0700  DISPLAY   *P1:6,*EF;
          MOVE      SIX,CVERT               * first display row 
          GOTO      AELT0300                * display the data
.
AELT0999  RETURN
+
.*********************************************************************
.*                  CTMP0000                                         *
.*        Create the temp file which holds selected patients         *
.********************************************************************* 
CTMP0000  CALL      DTMP0000                * delete temp file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,CFNAME,TMPKEY,SP50,SP50
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID          * create temp file
          OPEN      TEMPFILE,CFNAME         * open temp file
.
CTMP9999  RETURN
+
.*********************************************************************
.*                  DTMP0000                    Called by : xxxx0000 *
.*        Delete the temp file                                       *
.********************************************************************* 
DTMP0000  CLEAR     CMDLINE
          PACK      CMDLINE,ISERASE,CFNAME
          RESET     CMDLINE
.
          CLOSE     TEMPFILE,DELETE         * close temp file
          EXECUTE   CMDLINE,TASKID          * delete temp file
.
DTMP9999  RETURN
+
.*********************************************************************
.         get the priority descriptions
.*********************************************************************
GPDX0000  READ      CONTROLF,THIRTY;*208,AECNDXPA,AECNDXPB:
                                    AECNDXPC,AECNDXPD
          READ      CONTROLF,SEVENTY8;*6,AECNDXPE
.
          MATCH     "0000000000",AECNDXPA
          GOTO      GPDX5000 IF EQUAL       * nothing set up
          MATCH     SP10,AECNDXPA
          GOTO      GPDX8000 IF NOT EQUAL   * have a parameter
.
. no system parameters so use our standard ones
.
GPDX5000  MOVE      DPRIT1,AECNDXPA
          MOVE      DPRIT2,AECNDXPB
          MOVE      DPRIT3,AECNDXPC
          MOVE      SP10,AECNDXPD
          MOVE      SP10,AECNDXPE
.
. remove trailing blanks
.
GPDX8000  STRIP     AECNDXPA
          STRIP     AECNDXPB
          STRIP     AECNDXPC
          STRIP     AECNDXPD
          STRIP     AECNDXPE
.
GPDX9999  RETURN
+
AGECHK    RETURN
GETSVAR   RETURN
OPEN0000  RETURN
CLOS0000  RETURN
.
.         I/O includes
.
          INC       STD001IO
          INC       AAEDE1IO/INC
          INC       AAEDI1IO/INC
          INC       AAELETIO/INC
.         INC       AGECHK
          INC       BOKRC1IO/INC
          INC       CALCAGE
          INC       CLPATMAS
          INC       PMSHCPKY
          INC       NZIBSRCH
          INC       NZHISIIO
          INC       OUTPREIO/INC
          INC       PATALRIO/INC
          INC       PATCOMN1
          INC       PATDNRIO/INC
          INC       PATCODKY                * ? for codes file
          INC       PATDOCKY                * ? for doctor file
          INC       PMSHCLIO/INC 
.          INC       PMSHCPDS
          INC       PMSHCPIO/INC
          INC       PMSHCGIO/INC
          INC       PMSVX1IO/INC
          INC       PATCODIO/INC            * codes file
          INC       PATDO1IO/INC            * doctors file
.         INC       PATDSCIO/INC
          INC       PATFN1IO/INC
          INC       PATMA1IO/INC
          INC       PMSPX2IO/INC
          INC       PATMI1IO/INC
          INC       PATNIDIO/INC
          INC       PATPR1IO/INC
          INC       PATGSRIO/INC
          INC       NHIMASIO/INC
          INC       PATSDNIO/INC
          INC       PATSMWIO/INC
          INC       PATSNDX
          INC       PATSNX2
.
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
.
