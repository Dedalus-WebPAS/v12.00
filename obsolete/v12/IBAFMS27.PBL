. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS27                                             *
. * Desc      :   Cash Batch Header Load                               *
. **********************************************************************
. * Date      :   02/08/2002                                           *
. * Author    :   Davin                                                *
. * Mods      :                                                        *
. **********************************************************************
. * V9.03.01  24.06.2003 Guomin Fu   CAR 40703                         *
. *           Mods to add 3 instead of 2 to the number of trans-       *
. *           actions so the control entry is not deleted when the     *
. *           batch is updated.                                        *
. **********************************************************************
.
          INC       FMSSTDDF
.
          INC       FMSAMAFD/INC
          INC       FMSBASFD/INC
          INC       FMSBCFFD/INC
          INC       FMSCSAFD/INC
          INC       FMSCTRFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSTRNFD/INC
.
          INC       IBABATFD/INC
          INC       IBACONFD/INC
          INC       IBAPASFD/INC
.
.**********************************************************************
.*                   Data variables required                          *
.**********************************************************************
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
ACCDESC   DIM       15
ACCEND    DIM       10
ACCYEAR   DIM       4 
BASFLAG   FORM      1
CASDESC   DIM       15
CASEND    DIM       10
CASYEAR   DIM       4 
CASHFLAG  FORM      1
BATDESC   DIM       11
BCH       INIT      "bch"
BSTATUS   FORM      1
BATCHNO   FORM      5
DEBCRED   DIM       2
DM5       DIM       5
DM6       DIM       6
DM10      DIM       10
ENTRDATE  DIM       10
FORMAT    INIT      "(999,999,999,999.99 "
FILNAME   DIM       8
FMSG      INIT      "fmsg"
FMSR      INIT      "fmsr"
FMST      INIT      "fmst"
ITEM      FORM      5
ITEM01    DIM       6
ITEM02    DIM       6
ITEM03    DIM       6
ITEM04    DIM       6
ITEM05    DIM       6
ITEM06    DIM       6
ITEM07    DIM       6
ITEM08    DIM       6
ITEM09    DIM       6
ITEM10    DIM       6
ITEM11    DIM       6
ITEM12    DIM       6
ITEM13    DIM       6
ITEM14    DIM       6
ITEM15    DIM       6
ITEM16    DIM       6
ITEM17    DIM       6
ITEM18    DIM       6
NEXTSCRF  FORM      1
OUTFORM   DIM       20
POSTDATE  DIM       10
CASHDATE  DIM       10
PROCC01   DIM      10
PROCC02   DIM      10
PROCC03   DIM      10
PROCC04   DIM      10
PROCC05   DIM      10
PROCC06   DIM      10
PROCC07   DIM      10
PROCC08   DIM      10
PROCC09   DIM      10
PROCC10   DIM      10
PROCC11   DIM      10
PROCC12   DIM      10
PROCC13   DIM      10
PROCC14   DIM      10
PROCC15   DIM      10
PROCC16   DIM      10
PROCC17   DIM      10
PROCC18   DIM      10
RECCOUNT  FORM      2
ROW       FORM      2
SCRCOUNT  FORM      4
SCRNUMB   FORM      4
XECTOR    FORM      3
SECTOR01  FORM      3 
SECTOR02  FORM      3 
SECTOR03  FORM      3 
SECTOR04  FORM      3 
SECTOR05  FORM      3 
SECTOR06  FORM      3 
SECTOR07  FORM      3 
SECTOR08  FORM      3 
SECTOR09  FORM      3 
SECTOR10  FORM      3 
SECTOR11  FORM      3 
SECTOR12  FORM      3 
SECTOR13  FORM      3 
SECTOR14  FORM      3 
SECTOR15  FORM      3 
SECTOR16  FORM      3 
SECTOR17  FORM      3 
SECTOR18  FORM      3 
STATDESC  DIM       30
STATUS    DIM       1
VALIDFLG  FORM      1
WKDTDESC  DIM       12
WKDTPDAT  DIM       10
.
PRGID     INIT      "IBAFMS27"
PRGNAM    INIT      "Cash Batch Header Load "           
VERSION   INIT      "V12.00.00"
.**********************************************************************
.*                           ML0000                                   *
.*                    Mainline  Code                                  *
.**********************************************************************
ML0000    CALL      INIT0000             * initialisation
.
ML1000    CALL      DSBS0000             * display the screen
          CALL      CLRV0000             * clear input variables
.
          CALL      ACPT0000             * accept initial values
          BRANCH    EXIT,ML9999
ML2000    CALL      SELF0000             * select, post or exit
          BRANCH    EXIT,ML9999          * exit
.
          CALL      WRTF0000             * write to fmsbcfaf
          BRANCH    EXIT,ML2000          * field(s) missing
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
INIT0000  CALL      DISPHEAD
          DISPLAY   *P64:24,"fmsamaaf"
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmslmaaf"
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf"
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsbcfaf"
          OPEN      FMSBCFA1,"fmsbcfaf"
          OPEN      FMSBCFA2,"fmsbcfaf"
          OPEN      FMSBCFA3,"fmsbcfaf"
.
          DISPLAY   *P64:24,"ihapassf"
          OPEN      IHAPASS1,"ihapassf"
          OPEN      IHAPASS2,"ihapassf"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*107,IBCNUBAS,IBCNBSFY
.
INIT9999  RETURN
+
.*************************************************************************
.*                                  CLRV0000                             *
.*                          clear fmsbcfaf variables                     *
.*************************************************************************
CLRV0000  MOVE      ZERO,F5
          PACK      FMBCBAT,SP70
          PACK      FMBCSTA,SP70
          MOVE      ZERO,FMBCSEC
          MOVE      ZERO,FMBCTOT
          MOVE      ZERO,FMBCDIS
          PACK      FMBCUID,SP70
          PACK      FMBCDAT,SP70
          PACK      FMBCPDAT,SP70
          PACK      FMBCLED,SP70
          PACK      FMBCTRT,SP70
          MOVE      ZERO,FMBCINV
          PACK      FMBCCDAT,SP70
          PACK      FMBCSPAR,SP70
CLRV9999  RETURN
+
.*************************************************************************
.*                                  ACPT0000                             *
.*                          accept initial values                        *
.*************************************************************************
ACPT0000  CALL      KBAT0000                   * keyin the batch number
          BRANCH    EXIT,ACPT9500
.
ACPT0500  CALL      KLDG0000                   * keyin the ledger number
          BRANCH    EXIT,ACPT0000
.
ACPT1000  CALL      KNOE0000                   * number of entries
          BRANCH    EXIT,ACPT0500
.
ACPT2000  CALL      KTOT0000                   * batch total
          BRANCH    EXIT,ACPT1000
.
ACPT3000  CALL      KDTE0000                   * date entered
          BRANCH    EXIT,ACPT2000
.
ACPT4000  CALL      KPTD0000                   * post to date
          BRANCH    EXIT,ACPT3000
.
ACPT9000  MOVE      ZERO,EXIT
          GOTO      ACPT9999
.
ACPT9500  MOVE      ONE,EXIT
ACPT9999  RETURN
+
.**************************************************************************
.*                                   SELF0000                             *
.*                         select field to modify or post                 *
.**************************************************************************
SELF0000  CALL      SPXP0000                   * select, post or exit
          COMPARE   ZERO,CCITEM                * ok to post
          GOTO      SELF9000 IF EQUAL
.
          COMPARE   "-1",CCITEM                * exit
          GOTO      SELF9500 IF EQUAL
.
          BRANCH    CCITEM,SELF1000,SELF2000,SELF3000,SELF4000:
                           SELF5000,SELF6000
          BEEP
          GOTO      SELF0000                   * invalid selection
.
SELF1000  CALL      KBAT0000                   * batch number
          BRANCH    EXIT,SELF9500
          GOTO      SELF0000
.
SELF2000  CALL      KLDG0000                   * ledger number
          BRANCH    EXIT,SELF1000
          GOTO      SELF0000
.
SELF3000  CALL      KNOE0000                   * number of entries
          BRANCH    EXIT,SELF2000
          GOTO      SELF0000
.
SELF4000  CALL      KTOT0000                   * batch total
          BRANCH    EXIT,SELF3000
          GOTO      SELF0000
.
SELF5000  CALL      KDTE0000                   * date entered
          BRANCH    EXIT,SELF4000
          GOTO      SELF0000
.
SELF6000  CALL      KPTD0000                   * post to date
          BRANCH    EXIT,SELF5000
          GOTO      SELF0000
.
SELF9000  MOVE      ZERO,EXIT                  * ok
          GOTO      SELF9999
.
SELF9500  MOVE      ONE,EXIT                   * exit
SELF9999  RETURN
+
.**********************************************************************
.*                         KBAT0000                                   *
.*         Keyin the batch number to write to fmsbcfaf                *
.**********************************************************************
KBAT0000  MOVE      SP5,D5
          DISPLAY   *P2:4,*EL,*V2LON,ONE,*HOFF,". Batch No          : ";
          KEYIN     *P25:4,*V2LON,*ZF,*JR,D5
.
          ENDSET    D5
          APPEND    SP70,D5
          RESET     D5
          MATCH     SP70,D5
          GOTO      KBAT9500 IF EQUAL
          MATCH     "00000",D5
          GOTO      KBAT9500 IF EQUAL
.
          TYPE      D5
          GOTO      KBAT0000 IF NOT EQUAL
.
KBAT1000  DISPLAY   *P25:4,*V2LON,D5
          PACK      KEY5,D5,SP70
          CALL      RDFMBC1
          IF        OVRCD=1
            MOVE      D5,FMBCBAT
            MOVE      ZERO,EXIT              * doesn't exist, so ok
            GOTO      KBAT9999
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Batch already on file - ";
          CALL      HITENTER
          GOTO      KBAT0000
.
KBAT9500  MOVE      ONE,EXIT                 * null entry so exit
KBAT9999  RETURN
+
.**********************************************************************
.*                         KLDG0000                                   *
.*                  Keyin the ledger number                           *
.**********************************************************************
KLDG0000  MOVE      SP2,D2
          DISPLAY   *P2:6,*EL,*V2LON,TWO,*HOFF,". Ledger Number     : ";
          MOVE      FMBCLED,D2
          KEYIN     *P25:6,*V2LON,*JR,D2
.
          ENDSET    D2
          APPEND    SP70,D2
          RESET     D2
          MATCH     SP70,D2
          GOTO      KLDG9500 IF EQUAL
.
KLDG1000  DISPLAY   *P25:6,*V2LON,D2
          PACK      KEY2,D2,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,KLDG9000           * doesn't exist
.
          DISPLAY   *P32:6,FMLADESC;
          MOVE      D2,FMBCLED
          MOVE      ZERO,EXIT                * exists, so ok
          GOTO      KLDG9999
.
KLDG9000  DISPLAY   *P1:24,*EL,*B,"Not on Ledger Master Details file - ";
          CALL      HITENTER
          GOTO      KLDG0000
.
KLDG9500  MOVE      SP2,FMBCLED
          MOVE      ONE,EXIT                 * exit
KLDG9999  RETURN
+
.**********************************************************************
.*                         KNOE0000                                   *
.*                  Keyin the number of entries                       *
.**********************************************************************
KNOE0000  MOVE      ZERO,F5
          DISPLAY   *P2:7,*EL,*V2LON,THREE,*HOFF,". Number of Entries : ";
          KEYIN     *P25:7,*V2LON,F5
.
          COMPARE   ZERO,F5
          GOTO      KNOE9500 IF EQUAL
.
KNOE1000  DISPLAY   *P25:7,*V2LON,F5
          MOVE      F5,FMBCSEC               * no. of sectors
          ADD       THREE,FMBCSEC            * must add 3
          MOVE      ZERO,EXIT
          GOTO      KNOE9999
.
KNOE9500  DISPLAY   *P25:7,*EL;
          MOVE      ZERO,FMBCSEC
          MOVE      ONE,EXIT                 * null entry so exit
KNOE9999  RETURN
+
.**********************************************************************
.*                         KTOT0000                                   *
.*                  Keyin the batch total                             *
.**********************************************************************
KTOT0000  MOVE      ZERO,F12P2
          DISPLAY   *P2:8,*EL,*V2LON,FOUR,*HOFF,". Batch Total       : ";
          KEYIN     *P25:8,*V2LON,F12P2
.
          COMPARE   ZERO,F12P2
          GOTO      KTOT9500 IF EQUAL
.
KTOT1000  DISPLAY   *P25:8,*V2LON,F12P2
          MOVE      F12P2,FMBCTOT            * batch total
          MOVE      ZERO,EXIT
          GOTO      KTOT9999
.
KTOT9500  DISPLAY   *P25:8,*EL;
          MOVE      ZERO,FMBCTOT
          MOVE      ONE,EXIT                 * exit
KTOT9999  RETURN
+
.**********************************************************************
.*                         KDTE0000                                   *
.*                  Keyin the date entered                            *
.**********************************************************************
KDTE0000  DISPLAY   *P2:9,*EL,*V2LON,FIVE,*HOFF,". Date Entered      : ";
          PACK      D8,CCC,CYY,CMM,CDD           * todays date
          REP       " 0",D8
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          MOVE      "25",CCOL
          MOVE      "9",CVERT
          UNPACK    D8,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    CQUEST,KDTE0000
          BRANCH    OVRCD,KDTE9500
          PACK      FMBCDAT,CCENT,CYEAR,CMON,CDAY
.
KDTE9000  MOVE      ZERO,EXIT
          GOTO      KDTE9999
.
KDTE9500  MOVE      ONE,EXIT
          MOVE      SP8,FMBCDAT
KDTE9999  RETURN
+
.**********************************************************************
.*                         KPTD0000                                   *
.*                  Keyin the post to date                            *
.**********************************************************************
KPTD0000  DISPLAY   *P2:10,*EL,*V2LON,SIX,*HOFF,". Post to Date      : ";
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          MOVE      "25",CCOL
          MOVE      "10",CVERT
          UNPACK    SP8,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    CQUEST,KPTD0000
          BRANCH    OVRCD,KPTD9500
          PACK      D8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,POSTDATE
.
          MOVE      D8,WORKDATE
          CALL      CFYR0000
          IF        EXIT=1
            DISPLAY   *P1:24,*EL,*B,ERRMSG;
            CALL      HITENTER
            GOTO      KPTD0000
          ENDIF
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ACCEND
          MOVE      PERDESC,ACCDESC
.
          DISPLAY   *P25:10,*V2LON,POSTDATE,*HOFF,SP2,ACCDESC:
                    *P52:10,"Ending ",*V2LON,ACCEND
.
KPTD9000  MOVE      ZERO,EXIT
          MOVE      D8,FMBCPDAT
          MOVE      D8,FMBCCDAT
          GOTO      KPTD9999
.
KPTD9500  MOVE      ONE,EXIT
          MOVE      SP8,FMBCPDAT
          MOVE      SP8,FMBCCDAT
KPTD9999  RETURN
+
.*************************************************************************
.*                        WRTF0000                                       *
.*                  Write record to fmsbcfaf                             *
.*************************************************************************
WRTF0000  MOVE      "2",FMBCSTA
          MOVE      ZERO,FMBCDIS
          MOVE      PASSCODE,FMBCUID
          MOVE      "CS",FMBCTRT
          MOVE      ZERO,FMBCINV
.
          CALL      CHKF0000                   * check fields
          BRANCH    EXIT,WRTF9500              * field(s) missing
.
          PACK      KEY5,FMBCBAT
          CALL      RDFMBC1
          IF        OVRCD=1
            CALL      WRFMBC1                  * should not exist
            DISPLAY   *P1:24,*EL,*B,"Batch successfully posted - ";
            CALL      HITENTER
          ELSE
            DISPLAY   *P1:24,*EL,*B,"Batch already on file - ";
            CALL      HITENTER
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      WRTF9999
.
WRTF9500  MOVE      ONE,EXIT
WRTF9999  RETURN
+
.*********************************************************************
.*                         CHKF0000                                  *
.*                  check fields are populated                       *
.*********************************************************************
CHKF0000  MATCH     SP70,FMBCBAT
          GOTO      CHKF9500 IF EQUAL
.
          MATCH     SP70,FMBCLED
          GOTO      CHKF9500 IF EQUAL
.
          COMPARE   ZERO,FMBCSEC
          GOTO      CHKF9500 IF EQUAL
.
          COMPARE   ZERO,FMBCTOT
          GOTO      CHKF9500 IF EQUAL
.
          MATCH     SP70,FMBCDAT
          GOTO      CHKF9500 IF EQUAL
.
          MATCH     SP70,FMBCPDAT
          GOTO      CHKF9500 IF EQUAL
.
          MATCH     SP70,FMBCCDAT
          GOTO      CHKF9500 IF EQUAL
.
          MOVE      ZERO,EXIT               * fields ok
          GOTO      CHKF9999
.
CHKF9500  MOVE      ONE,EXIT                * field(s) missing
          DISPLAY   *P1:24,*EL,*B,"Field(s) missing - ";
          CALL      HITENTER
CHKF9999  RETURN
+
.*********************************************************************
.*                         SPXP0000                                  *
.*                  select, post or exit prompt                      *
.*********************************************************************
SPXP0000  MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select, (",*V2LON,"P",*HOFF,")ost, e(":
                    *V2LON,"X",*HOFF,")it : ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      SPXP0000 IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  X",CCITEMD
          GOTO      SPXP2000 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      SPXP9500 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      SPXP1000 IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      SPXP1000 IF LESS
.
          RETURN
.
SPXP1000  BEEP
          GOTO      SPXP0000
.
SPXP2000  MOVE      "-1",CCITEM
          RETURN
.
SPXP9500  MOVE      "0",CCITEM
SPXP9999  RETURN
+
.**********************************************************************
.*                        DSBS0000                                    *
.*             display batch header input screen                      *
.**********************************************************************
DSBS0000  DISPLAY   *P1:4,*EF:
                    *P2:4,*V2LON,ONE,*HOFF,". Batch No          : ":
                    *P2:6,*V2LON,TWO,*HOFF,". Ledger Number     : ":
                    *P2:7,*V2LON,THREE,*HOFF,". Number of Entries : ":
                    *P2:8,*V2LON,FOUR,*HOFF,". Batch Total       : ":
                    *P2:9,*V2LON,FIVE,*HOFF,". Date Entered      : ": 
                    *P2:10,*V2LON,SIX,*HOFF,". Post to Date      : "
DSBS9999  RETURN
+
.**********************************************************************
.*                 Redisplay routine for standard keyins              *
.**********************************************************************
RLMCFM00  RETURN 
+
RBCFFM00  CALL      DSBS0000             * display the screen
          RETURN
+
.**********************************************************************
          INC       FMSAMAIO/INC
          INC       FMSBASIO/INC
          INC       FMSBCFIO/INC
          INC       FMSCTRIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSTRNIO/INC
.
          INC       IBAIHAIO/INC
          INC       IBABATIO/INC 
.
          INC       FMSLMCKY 
          INC       FMSBCFKY 
.
          INC       FMSSTDCD
