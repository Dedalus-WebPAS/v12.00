. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS97                                             *
. * Desc      :   Enquiries Parameters                                 *
. **********************************************************************
. * Date      :   22.10.1990                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS97
.             open files and initialise variables
.             WHILE user wants to modify parameters DO
.                  get desired option
.                  allow user to modify option
.             END WHILE
.             IF user wants to post data
.                  THEN write data to controlf
.             END IF
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSAMAFD/INC       * account
          INC       FMSBTYFD/INC       * budget
          INC       FMSLMAFD/INC       * ledger
          INC       FMSLMCFD/INC       * ledger calendar
          INC       FMSCSAFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
FMSTMP0A  IFILE     SQL, FIXED=15, KEY="U1-2,3-6"
NAMEA     INIT      "fmstmA"
FILENAMA  DIM       8
KILLTMPA  DIM       80
MAKETMPA  DIM       80
.
TYPDESC   INIT      "                        "   * projection type
TYPDESC0  INIT      "Not Active"
TYPDESC1  INIT      "% Var Extrapolation"
TYPDESC2  INIT      "Simple Linear Projection"
.
ABPDESC   INIT      "                 "
ABPDESC0  INIT      "Dollars Only"
ABPDESC1  INIT      "Dollars and Cents"
.
.
MAXITEMA  FORM      "13"               * maximum no. of items on screen A + 1
.
CURPAGE   FORM      3                  * current page number
DESC1     DIM       28                 * description 1
ITEMNUM   FORM      2                  * item number
KPERIOD   FORM      2                  * period number
MAXPERDS  FORM      2                  * maximum no. of periods
MORE      FORM      1                  * more data (1=yes)
OPTIONA   FORM      2                  * screen selection keyin var
PAGENO    FORM      3                  * current page number
PERDDESC  DIM       20                 * period description
SAVITEM   FORM      2                  * item number for Screen A
SKEY      DIM       35                 * key save for Screen A
.
PRGID     INIT      "IBAFMS97"
PRGNAM    INIT      "Enquiry Parameters"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML1000    CALL      KLMA0000           * read ledger
          BRANCH    EXIT,ML9999
.
          CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML1000        * exit screen
.
          CALL      WTMA0000           * update in temp file data
          GOTO      ML1000
.
ML9999    CLOSE     FMSTMP0A
          EXECUTE   KILLTMPA,TASKID
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmsamaaf";  * account
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsbtyaf";  * budget
          OPEN      FMSBTYA1,"fmsbtyaf"
.
          DISPLAY   *P64:24,"fmslmaaf";  * ledger
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";  * ledger calendar
          OPEN      FMSLMCA1,"fmslmcaf"
.
          PACK      FILENAMA,NAMEA,PORT
          REP       " 0",FILENAMA

          CLEAR     MAKETMPA
          APPEND    "isbuild ",MAKETMPA
          APPEND    FILENAMA,MAKETMPA
          APPEND    " 15 u1-2,3-6",MAKETMPA
          RESET     MAKETMPA
.
          CLEAR     KILLTMPA
          APPEND    "iserase ",KILLTMPA
          APPEND    FILENAMA,KILLTMPA
          RESET     KILLTMPA
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
. KLMA - Keyin Ledger
.******************************************************************************
KLMA0000  
          MOVE      "4",CVERT
          MOVE      "32",CCOL
          DISPLAY   *P1:3,*EF:
                    *P1:4,"    Ledger Calendar          :";
.
          CALL      KLMAFM00           * get ledger
          BRANCH    EXIT,KLMA9500,KLMA9500
.
          CALL      SCRA0000
          CALL      RTMA0000           * read and display data
.
KLMA9000  MOVE      ZERO,EXIT
          GOTO      KLMA9999
.
KLMA9500  MOVE      ONE,EXIT
.
KLMA9999  RETURN
.******************************************************************************
.* SCRA - Display Screen A                       Called by ML0000             *
.*        Returns - EXIT     (1=no current ledgers)                           *
.******************************************************************************
SCRA0000  
          PACK      KEY6,FMLALEDG,FMLACYRR,SP70
          CALL      RDFMLC1            * read period details
.
          MOVE      "12",MAXPERDS      * calculate max no. of periods
          ADD       FMLAPERS,MAXPERDS
.
          MOVE      SP70,PERDDESC
          MOVE      FMLAPER,KPERIOD
          LOAD      PERDDESC,KPERIOD,FMLC01DE,FMLC02DE,FMLC03DE:
                    FMLC04DE,FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                    FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
.
          MOVE      ZERO,F1
          MOVE      FMLAPTY,F1
          MOVE      SP70,TYPDESC
          MOVE      TYPDESC0,TYPDESC
          LOAD      TYPDESC,F1,TYPDESC1,TYPDESC2
.
          MOVE      ZERO,F1
          MOVE      FMLAABP,F1
          MOVE      SP70,ABPDESC
          MOVE      ABPDESC0,ABPDESC
          LOAD      ABPDESC,F1,ABPDESC1
.
          DISPLAY   *P1:3,*EF:
                    *P1:4,"    Ledger Calendar          :":
                    *P32:4,*V2LON,FMLALEDG,SP4,*HOFF,FMLADESC:
                    *P1:6,*V2LON," 1",*HOFF,". Current Year             :":
                    *P1:7,*V2LON," 2",*HOFF,". Current Period           :":
                    *P1:8,*V2LON," 3",*HOFF,". Projection Type          :":
                    *P1:9,*V2LON," 4",*HOFF,". Analysis by Period Format:":
                    *P1:10,*V2LON,*ULON,"Item",*P7:10,"Year":
                    *P13:10,"Accrual Budget",*P47:10,"Cash Budget",*HOFF:
                    *P32:6,*V2LON,FMLACYRR:
                    *P32:7,*V2LON,FMLAPER,SP4,*HOFF,PERDDESC:
                    *P32:8,*V2LON,FMLAPTY,SP5,*HOFF,TYPDESC:
                    *P32:9,*V2LON,FMLAABP,SP5,*HOFF,ABPDESC
.
SCRA9999  RETURN
.******************************************************************************
.* SELA - Enter parameters                       Called by ML0000             *
.*        Returns : EXIT     (1=don't post)                                   *
.******************************************************************************
SELA0000  MOVE      "1",PAGENO         * start at first page
          CALL      DATA0000           * display budget data
.
SELA0100  CALL      MQSA0000           * get desired action
          COMPARE   ZERO,OPTIONA
          GOTO      SELA9000 IF EQUAL  * post
.
          COMPARE   SEQ,OPTIONA
          GOTO      SELA9500 IF EQUAL  * cancel
.
          MOVE      "32",CCOL          * get screen address
          MOVE      "5",CVERT
          ADD       OPTIONA,CVERT  
.
          BRANCH    OPTIONA,SELA1200,SELA1300,SELA1400,SELA1500
.
          ADD       "1",CVERT
          MOVE      OPTIONA,SAVITEM
          MOVE      SP70,SKEY
          LOAD      SKEY,OPTIONA,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY6,SKEY,SP70
          CALL      RDXTMA 
          MOVE      FMLCBUDG,FMLCBUDG     * save accrual budget data
          COMPARE   ONE,OVRCD
          GOTO      SELA5000 IF NOT EQUAL
          BEEP                         * illegal option
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  CALL      KLMCFM00           * get financial year
          BRANCH    EXIT,SELA1200,SELA9500
          MOVE      FMLCYEAR,FMLACYRR
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLACYRR;
          GOTO      SELA0100
.
.---- option 3 ----
.
SELA1300  KEYIN     *PCCOL:CVERT,"__",*EL:
                    *PCCOL:CVERT,*V2LON,KPERIOD,*EL;
          MOVE      KPERIOD,FMLAPER
          REP       " 0",FMLAPER
          COMPARE   "1",KPERIOD
          GOTO      SELA1390 IF LESS
.
          COMPARE   KPERIOD,MAXPERDS
          GOTO      SELA1390 IF LESS
.
          PACK      KEY6,FMLALEDG,FMLACYRR
          CALL      RDFMLC1            * read period details
          LOAD      PERDDESC,KPERIOD,FMLC01DE,FMLC02DE,FMLC03DE:
                    FMLC04DE,FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                    FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLAPER,*HOFF,SP4,PERDDESC;
          GOTO      SELA0100
.
SELA1390  DISPLAY   *P1:24,*B,*EL:
                    "Period Must Be Between 1 and ",MAXPERDS," - ";
          CALL      HITENTER
          GOTO      SELA1300
.
.---- option 4 ----
.
SELA1400  DISPLAY   *P1:24,*EL,*V2LON,"0",*HOFF," = ",TYPDESC0:
                    ", ",*V2LON,"1",*HOFF," = ",TYPDESC1:
                    ", ",*V2LON,"2",*HOFF," = ",TYPDESC2;
.
SELA1450  KEYIN     *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,F1; * get projection type
          ADD       ONE,F1
          MOVE      SP70,TYPDESC
          LOAD      TYPDESC,F1,TYPDESC0,TYPDESC1,TYPDESC2
          MATCH     SP70,TYPDESC
          GOTO      SELA1490 IF NOT EQUAL
          BEEP
          GOTO      SELA1450
.
SELA1490  SUB       ONE,F1
          MOVE      F1,FMLAPTY
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLAPTY,*HOFF,SP5,TYPDESC:
                    *P1:24,*EL;
          GOTO      SELA0100
.
.---- option 5 ----
.
SELA1500  DISPLAY   *P1:24,*EL,*V2LON,"0",*HOFF," = ",ABPDESC0:
                    ", ",*V2LON,"1",*HOFF," = ",ABPDESC1;
.
SELA1550  KEYIN     *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,F1;      * get format type
          ADD       ONE,F1
          MOVE      SP70,ABPDESC
          LOAD      ABPDESC,F1,ABPDESC0,ABPDESC1
          MATCH     SP70,ABPDESC
          GOTO      SELA1590 IF NOT EQUAL
          BEEP
          GOTO      SELA1550
.
SELA1590  SUB       ONE,F1
          MOVE      F1,FMLAABP
          DISPLAY   *PCCOL:CVERT,*V2LON,F1,*HOFF,SP5,ABPDESC:
                    *P1:24,*EL;
          GOTO      SELA0100
.
.---- budget data ----
.
SELA5000  DISPLAY   *P1:CVERT,*V2LON,SAVITEM,DOT,*P7:CVERT,FMLCYEAR,*EL;
          MOVE      "13",CCOL
          CALL      KBTYFM00           * get budget code
          BRANCH    EXIT,SELA5100,SELA9500
.
          MOVE      FMBTCODE,FMLCBUDG
.
SELA5100  PACK      KEY4,FMLCBUDG,SP70
          MOVE      SP70,FMBTDESC
          MOVE      FMLCYEAR,FMBTYEAR
          CALL      RDFMBT1            * get budget data
          MOVE      FMBTDESC,DESC1
          DISPLAY   *P1:CVERT,*V2LON,SAVITEM,DOT:
                    *P7:CVERT,FMLCYEAR,*P13:CVERT,FMLCBUDG,*HOFF,SP1,DESC1;
          MATCH     FMBTYEAR,FMLCYEAR
          GOTO      SELA6000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B:
                    "Budget Year Must Be Identical To Financial Year - ";
          CALL      HITENTER
          GOTO      SELA5000
.
SELA6000  MOVE      "47",CCOL
          CALL      KBTYFM00           * get budget code
          BRANCH    EXIT,SELA6100,SELA9500
.
          MOVE      FMBTCODE,FMLCCBUD
.
SELA6100  PACK      KEY4,FMLCCBUD,SP70
          MOVE      SP70,FMBTDESC
          CALL      RDFMBT1            * get budget data
          MOVE      FMBTDESC,KEY28
          MATCH     FMBTYEAR,FMLCYEAR
          GOTO      SELA6200 IF EQUAL
.
          DISPLAY   *P1:CVERT,*V2LON,SAVITEM,DOT:
                    *P7:CVERT,FMLCYEAR,SP2,FMLCBUDG,*HOFF,SP1,DESC1:
                    *P47:CVERT,*V2LON,FMLCCBUD,*HOFF,SP1,KEY28:
                    *P1:24,*EL,*B:
                    "Budget Year Must Be Identical To Financial Year - ";
          CALL      HITENTER
          GOTO      SELA6000
.
SELA6200  DISPLAY   *P1:CVERT,*V2LON,SAVITEM,*HOFF,DOT:
                    *P7:CVERT,FMLCYEAR,SP2,FMLCBUDG,SP1,DESC1:
                    *P47:CVERT,FMLCCBUD,SP1,KEY28;
          CALL      UPXTMA             * update data
          GOTO      SELA0100
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * exit
.
SELA9999  RETURN
.******************************************************************************
.* DATA - display Screen A data                  Called By MQSA,SELA          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMA (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATA0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17
          PACK      KEY6,FMLALEDG,SP70
          CALL      RSXTMA                       * go to start of records
          MOVE      "10",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "4",ITEMNUM                  * start at item 1
          DISPLAY   *P1:11,*EF;                  * clear data area on screen
.
DATA1000  CALL      RKXTMA                       * get next record
          BRANCH    OVRCD,DATA9000               * no more records ?
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      DATA9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMA,ITEMNUM
          GOTO      DATA2000 IF LESS             * at start of next screen ?
.
          MOVE      "5",ITEMNUM
          ADD       ONE,CURPAGE
.
DATA2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATA1000 IF LESS             * not up to current page ?
          GOTO      DATA9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMLCBUDG,SP70
          CALL      RDFMBT1                      * get budget description
          MOVE      FMBTDESC,KEY28
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,FMLCYEAR,*P13:LINENO,FMLCBUDG,SP1,KEY28;
.
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMLCCBUD,SP70
          CALL      RDFMBT1                      * get budget description
          MOVE      FMBTDESC,KEY28
          DISPLAY   SP1,FMLCCBUD,SP1,KEY28;
.
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70  * save key
          STORE     KEY6,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          GOTO      DATA1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATA9000  MOVE      ZERO,MORE                    * no more data
          GOTO      DATA9999
.
.---- reached EOP before EOF ----
.
DATA9500  MOVE      ONE,MORE                      * more data
.
DATA9999  RETURN
.******************************************************************************
.* MQSA - Main question for Screen A             Called By SELA0000           *
.******************************************************************************
MQSA0000  DISPLAY   *P1:24,"Select Item, (",*V2LON,"P",*HOFF:
                    ")ost, (",*V2LON,"C",*HOFF,")ancel";     * display prompt
          MOVE      "29",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSA1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQSA1000  COMPARE   PAGENO,ONE
          GOTO      MQSA2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"L",*HOFF,")ast Page";
          ADD       "13",CCOL
.
MQSA2000  DISPLAY   " :",*EL;
          ADD       "4",CCOL
.
MQSA3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQSA4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQSA4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATA0000
          GOTO      MQSA0000
.
MQSA4000  COMPARE   PAGENO,ONE
          GOTO      MQSA5000 IF EQUAL
.
          MATCH     " L",DIM2
          GOTO      MQSA5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATA0000
          GOTO      MQSA0000
.
MQSA5000  MOVE      SEQ,OPTIONA
          MATCH     " C",DIM2
          GOTO      MQSA9999 IF EQUAL
.
          MOVE      ZERO,OPTIONA
          MATCH     " P",DIM2
          GOTO      MQSA9999 IF EQUAL
.
          MOVE      DIM2,OPTIONA
          COMPARE   OPTIONA,ZERO
          GOTO      MQSA9999 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQSA3000           * get another option
.
MQSA9999  RETURN
.**********************************************************************
.  RTMA - read in data for temp file A           Called by ML
.**********************************************************************
RTMA0000  DISPLAY   *P1:24,*EL;
          EXECUTE   KILLTMPA,TASKID
          EXECUTE   MAKETMPA,TASKID
          OPEN      FMSTMP0A,FILENAMA
          PACK      KEY6,FMLALEDG,SP70
          CALL      RSFMLC1                 * go to start of records
.
RTMA1000  CALL      RKFMLC1                 * get next record
          BRANCH    OVRCD,RTMA9999          * no more records ?
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      RTMA9999 IF NOT EQUAL   * no more valid records ?
.
          MOVE      SP70,FMBTYEAR
          PACK      KEY4,FMLCBUDG,SP70
          CALL      RDFMBT1                 * check if budget valid
          MATCH     FMBTYEAR,FMLCYEAR
          GOTO      RTMA2000 IF EQUAL
          MOVE      SP70,FMLCBUDG
          CALL      UPFMLC1
.
RTMA2000  
          MOVE      SP70,FMBTYEAR
          PACK      KEY4,FMLCCBUD,SP70
          CALL      RDFMBT1                 * check if budget valid
          MATCH     FMBTYEAR,FMLCYEAR
          GOTO      RTMA3000 IF EQUAL
          MOVE      SP70,FMLCCBUD
          CALL      UPFMLC1
.
RTMA3000  
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          CALL      WRXTMA                  * write record
          GOTO      RTMA1000
.
RTMA9999  RETURN
.**********************************************************************
.  WTMA - save data in temp file A               Called by POST
.**********************************************************************
WTMA0000  CALL      UPFMLA1                 * update ledger data
.
          PACK      KEY6,SP70               * update ledger callendar data
.
WTMA1000  CALL      RSXTMA
          CALL      RKXTMA                  * get next record
          BRANCH    OVRCD,WTMA9999          * no more records ?
.
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          CALL      RDFMLC1                 * read old record
          CALL      RDXTMA                  * read new record
          CALL      UPFMLC1                 * update record
          GOTO      WTMA1000
.
WTMA9999  RETURN
.**********************************************************************
. temp file routines
.**********************************************************************
RSXTMA    RESET     KEY6
          READ      FMSTMP0A,KEY6;;
          RETURN
.
RAXTMA    RESET     KEY6
          MOVE      ZERO,OVRCD
          READ      FMSTMP0A,KEY6;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDXTMA    RESET     KEY6
          MOVE      ZERO,OVRCD
          READ      FMSTMP0A,KEY6;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
RKXTMA    MOVE      ZERO,OVRCD
          READKS    FMSTMP0A;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
RPXTMA    MOVE      ZERO,OVRCD
          READKP    FMSTMP0A;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD
          GOTO      OVERCOND IF OVER
          RETURN
.
UPXTMA    UPDATE    FMSTMP0A;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD
          RETURN
.
WRXTMA    RESET     KEY6
          WRITE     FMSTMP0A,KEY6;FMLCLEDG,FMLCYEAR,FMLCBUDG,FMLCCBUD,SP70
          RETURN
.
DEXTMA    RESET     KEY6
          DELETE    FMSTMP0A,KEY6
          RETURN
.
.******************************************************************************
.* Redisplays                                                                 *
.******************************************************************************
RLMAFM00
RLMCFM00
          CALL      SCRA0000
          CALL      DATA0000
          RETURN
.
RBTYFM00
          CALL      SCRA0000           * redisplay for Screen A data keyins
          CALL      DATA0000
          PACK      KEY6,SKEY,SP70
          CALL      RDXTMA
          DISPLAY   *P1:CVERT,*V2LON,SAVITEM,DOT:
                    *P7:CVERT,FMLCYEAR,SP2,FMLCBUDG,*HOFF,SP1,DESC1,*EL;
          RETURN
.
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSAMAIO/INC       * account
          INC       FMSBTYIO/INC       * budget
          INC       FMSLMAIO/INC       * ledger
          INC       FMSLMCIO/INC       * ledger calendar
.
          INC       FMSBTYKY           * budget
          INC       FMSLMAKY           * ledger
          INC       FMSLMCKY           * ledger calendar
.
          INC       FMSSTDCD           * FMS Acc. standard routines
