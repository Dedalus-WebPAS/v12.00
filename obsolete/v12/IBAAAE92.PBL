.**********************************************************************
.* System   : Accident and Emergency                                  *
.* Program  : IBAAAE92                                                *
.* Desc     : A & E Board Charging Master Listing                     *
.**********************************************************************
.* Date     :  30/12/1991                                             *
.* Author   :  Graeme Williams                                        *
.* Mods     :                                                         *
.*        V5.08.03  25/10/2000  Dean Cramer   SRF 6710                *
.*                  Recomplied for PATFNDDS                           *
.*                  Changed for health fund table code size increase  *
.*                  to 8 characters                                   *
.*        V5.08.02  16/08/2000  Caleb Sharman                         *
.*                  Changed Health Fund variables to be 8 chars       *
.*        V5.08.01  06/06/2000  Jill Habasque                         *
.*                  Changed from key10 to key14 for the health fund   *
.*                  file                                              *
.*        V5.03.01  16/04/1996    Howellsy   5.04                     *
.*                  Changed Accident & Emergency to Emergency.        *
.*        V5.01.02  24/05/1995  Matt Surridge                         *
.*                  Fixed bugs for global recompile.                  *
.**********************************************************************
.
.$$$$$
.    A & E Board Charging Master Listing ( IBAAAE92 )
.    ------------------------------------------------
.
.    - Initialisation
.
.    - Display Header
.            - Open Files
.               AAEBCHA1
.               PATFN1A1
.               PATCODE1
.               CONTROLF
.
.    - Processing Options
.
.            - 0 = Exit
.            - 1 = Print Master Listing
.
.                - Clear Input Variables
.                - Display Screen Format
.                - Ask for a range of claim codes and health funds (boards)
.                    "?" options available
.                - Okay to Continue (Y/N/C)
.                - Print report for select ranges:
.                    Printed on report - Claim code
.                                        Health fund
.                                        Day range
.                                        Description
.                                        Patient portion
.                                        Board portion
.                                        Number of invoices
.    - END
.$$$$$
.
          INC       STD001FD
          INC       AAEBCHFD/INC           * board charging file
          INC       PATFN1FD/INC           * health funds file
          INC       PATCODFD/INC           * patient codes file
          INC       PATCONFD/INC
+
.**********************************************************************
.*                           CONSTANTS                                *
.**********************************************************************
.
CODECL    INIT      "CL"                   * category for claim code
.
DOCCODE   DIM       6
DFINISH   INIT      "Finish"
DSTART    INIT      "Start"
.
MISSING   INIT      "Missing Code"
.
UNKNOWN   INIT      " : Unknown Code"
.
Z30       INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
ZERO4     INIT      "0000"
ZERO8     INIT      "0000    "
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
.
AFUNDH    DIM       6         * parameter to PATFNDDS.PBL
.
CLMCODE   DIM       3
CLMDESC   DIM       20
CLM2CODE  DIM       3
CLM2DESC  DIM       20
CODE      DIM       2
.
DCLM      DIM       20
.
ENDCLM    DIM       3
ENDFUND   DIM       6
.
FAGEGRP   FORM      3
FROMDAY   FORM      3
FUNDNAME  DIM       30
FUND2NAM  DIM       30
.
HFUND     DIM       6
H2FUND    DIM       6
.
KFUND     DIM       6
.
LASTKEY   DIM       12
.
NEWKEY    DIM       12
NRECS     FORM      8
.
STRTCLM   DIM       3
STRTFUND  DIM       6
.
PRGID     INIT      "IBAAAE92"
PRGNAM    INIT      "Emergency Board Charging Master Listing"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                           MAINLINE                                 *
.**********************************************************************
.
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    COPTION,ML1000
          GOTO      ML9999                 * Exit selected
.
. ---- Generate master listing ----
.
ML1000    CALL      RNGE0000               * ask for ranges
          BRANCH    EXIT,ML0100            * abort selected
.
          CALL      PRT0000                * print master listing
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
+
.**********************************************************************
.*                             INIT0000                               *
.*                      Initialization  Routine                       *
.**********************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"aaebchaf";
          OPEN      AAEBCHA1,"aaebchaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          MOVE      ONE,CNEWDS               * new style "?" options
.
INIT9999  RETURN
.
+
.**********************************************************************
.*                             CLR0000                                *
.*                 Routine to Clear Local Variables                   *
.**********************************************************************
.
CLR0000   UNPACK    SP30,CLMCODE,CLMDESC,HFUND
          MOVE      SP30,FUNDNAME
.
          UNPACK    SP30,CLM2CODE,CLM2DESC,H2FUND
          MOVE      SP30,FUND2NAM
          RETURN
+
.****************************************************************************
.*                                OPTN0000                                  *
.*                        get user options or exit                          *
.*                                                                          *
.*    valid options     --->  (0) Exit                                      *
.*                            (1) Add                                       *
.*                            (2) Modify                                    *
.*                            (3) Delete                                    *
.****************************************************************************
.
. ---- display option screen ----
.
OPTN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Print Master Listing"
.
OPTN1000  KEYIN     *P1:7,"Select Option : ",*EL:
                    *P17:7,*DV,UNDLN2:
                    *P17:7,*V2LON,COPTION:
                    *P17:7,*DV,COPTION
.
.         Validate selection
.
          BRANCH    COPTION,OPTN8000
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9999 IF EQUAL              * exit      
.
          BEEP
          GOTO      OPTN1000
.
OPTN8000  
.
OPTN9999  RETURN
+
.**********************************************************************
.*                            SCR0000                                 *
.*                     Main Data Screen Display                       *
.**********************************************************************
.
SCR0000   DISPLAY   *P1:3,*EF:
                    *P5:4,"Starting claim code",*P30:4," : ":
                    *P5:5,"  Ending claim code",*P30:5," : ":
                    *P5:7,"Starting board      ",*P30:7," : ":
                    *P5:8,"  Ending board      ",*P30:8," : "
.
SCR9999   RETURN
.**********************************************************************
.*                            DKEY0000                                *
.*                     Redisplay main key variables                   *
.**********************************************************************
.
DKEY0000  DISPLAY   *P33:4,*V2LON,CLMCODE,*HOFF,*P45:4,CLMDESC:
                    *P33:5,*V2LON,CLM2CODE,*HOFF,*P45:5,CLM2DESC:
                    *P33:7,*V2LON,HFUND,*HOFF,*P45:7,FUNDNAME:
                    *P33:8,*V2LON,H2FUND,*HOFF,*P45:8,FUND2NAM
.
DKEY9999  RETURN
+
.**********************************************************************
.*                           KEYC0000                                 *
.*                      Input a codes file entry                      *
.**********************************************************************
KEYC0000  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN3:
                    *PCCOL:CVERT,*V2LON,ACODE:
                    *PCCOL:CVERT,*DV,ACODE
.
          CALL      VCOD0000                 * validate code
          BRANCH    EXIT,KEYC9999:           * nothing or EXITCHAR input
                         KEYC9000:           * valid code input
                         KEYC5000:           * "?" input
                         KEYC0000            * invalid code
.
.         "?" option for codes file entry
.
KEYC5000  CALL      PATCODDS                 * display codes
.
KEYC6000  KEYIN     *P1:24,"Input code :",*EL:
                    *P14:24,*DV,UNDLN3:
                    *P14:24,*V2LON,ACODE:
                    *P14:24,*DV,ACODE
.
          CALL      VCOD0000                 * validate code
          BRANCH    EXIT,KEYC9900:           * nothing or EXITCHAR input
                         KEYC8900:           * valid code input
                         KEYC5000:           * "?" input
                         KEYC6000            * invalid code
.
.         Valid code input
.
KEYC8900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYC9000  MOVE      ZERO,EXIT                * valid code input
          GOTO      KEYC9999
.
.         Nothing input after "?"
.
KEYC9900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYC9999  RETURN
.**********************************************************************
.*                           VCOD0000                                 *
.*                   Validate a codes file entry                      *
.**********************************************************************
.
VCOD0000  ENDSET    ACODE
          APPEND    SP3,ACODE
          RESET     ACODE
.
          MATCH     SP3,ACODE                * check if anything was input
          GOTO      VCOD9000 IF EQUAL        * no, return with exit flag set
.
          CMATCH    EXITCHAR,ACODE           * check if exitchar was input
          GOTO      VCOD9000 IF EQUAL        * yes, return with exit flag set
.
          CMATCH    QUEST,ACODE              * check for a "?" option
          GOTO      VCOD9100 IF EQUAL        * yes, set exit flag accordingly
.
          PACK      KEY5,CODE,ACODE          * key for codes file entry
          CALL      RDCODE1                  * test if valid code
          BRANCH    OVRCD,VCOD9200           * invalid code
.
          MOVE      TWO,EXIT                 * valid code
          GOTO      VCOD9999
.
VCOD9000  MOVE      ONE,EXIT                 * nothing input, or exitchar
          GOTO      VCOD9999
.
VCOD9100  MOVE      THREE,EXIT               * "?" input
          GOTO      VCOD9999
.
VCOD9200  DISPLAY   *P1:24,*EL,*B,"Invalid code. ";
          CALL      HITENTER
          MOVE      FOUR,EXIT                * invalid code input
.
VCOD9999  RETURN
.
.**********************************************************************
.*                           KEYF0000                                 *
.*                      Input a health fund code                      *
.**********************************************************************
KEYF0000  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN6:
                    *PCCOL:CVERT,*V2LON,KFUND:
                    *PCCOL:CVERT,*DV,KFUND
.
          CALL      VFND0000                 * validate code
          BRANCH    EXIT,KEYF9500:           * EXITCHAR or nothing input
                         KEYF9000:           * valid code input
                         KEYF5000:           * "?" input
                         KEYF0000            * invalid code
.
.         "?" option for codes file entry
.
KEYF5000  CALL      PATDSFN1                 * display codes
.
KEYF6000  KEYIN     *P1:24,"Input code :",*EL:
                    *P14:24,*DV,UNDLN6:
                    *P14:24,*V2LON,KFUND:
                    *P14:24,*DV,KFUND
.
          CALL      VFND0000                 * validate code
          BRANCH    EXIT,KEYF9400:           * EXITCHAR or nothing input
                         KEYF8900:           * valid code input
                         KEYF5000:           * "?" input
                         KEYF6000            * invalid code
.
.         Valid code input
.
KEYF8900  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYF9000  MOVE      ZERO,EXIT                * valid code input
          GOTO      KEYF9999
.
.         Nothing input after "?"
.
KEYF9400  CALL      SCR0000                  * redisplay screen
          CALL      DKEY0000                 * display key variables
.
KEYF9500  MOVE      ONE,EXIT                 * nothing input
.
KEYF9999  RETURN
.**********************************************************************
.*                           VFND0000                                 *
.*                   Validate a health fund code                      *
.**********************************************************************
VFND0000  RESET     KFUND                    * was anything input ?
          GOTO      VFND9000 IF EOS          * no, return with exit flag set
.
          ENDSET    KFUND
          APPEND    SP6,KFUND
          RESET     KFUND
.
          MOVE      SP30,HFNAME              * assume no description
.
          MATCH     SP6,KFUND                * check if blanks was input
          GOTO      VFND8000 IF EQUAL        * yes, this is a valid code
.
          CMATCH    EXITCHAR,KFUND           * check if exitchar was input
          GOTO      VFND9000 IF EQUAL        * yes, return with exit flag set
.
          CMATCH    QUEST,KFUND              * check for a "?" option
          GOTO      VFND9100 IF EQUAL        * yes, set exit flag accordingly
.
          PACK      KEY14,KFUND,ZERO8,SP10   * key for health fund code
          CALL      RDFUND1                  * test if valid code
          BRANCH    OVRCD,VFND9200           * invalid code
.
VFND8000  MOVE      TWO,EXIT                 * valid code
          GOTO      VFND9999
.
VFND9000  MOVE      ONE,EXIT                 * nothing input, or exitchar
          GOTO      VFND9999
.
VFND9100  MOVE      THREE,EXIT               * "?" input
          GOTO      VFND9999
.
VFND9200  DISPLAY   *P1:24,*EL,*B,"Invalid code. ";
          CALL      HITENTER
          MOVE      FOUR,EXIT                * invalid code input
.
VFND9999  RETURN
+
.**************************************************************************
.*                              RNGE0000                                  *
.*               Input a range of claim codes and health funds            *
.**************************************************************************
RNGE0000  CALL      CLR0000                * clear input variables
          CALL      SCR0000                * display screen format for copy
RNGE1000  CALL      FCLM0000               * input 1st claim code
          BRANCH    EXIT,RNGE9999          * exitchar input
          CALL      SCLM0000               * input 2nd claim code
          BRANCH    EXIT,RNGE9999,RNGE1000 * exitchar input, invalid range
RNGE2000  CALL      FFND0000               * input 1st health fund
          BRANCH    EXIT,RNGE9999          * exitchar input
          CALL      SFND0000               * input 2nd health fund
          BRANCH    EXIT,RNGE9999,RNGE2000 * exitchar input, invalid range
.
          CALL      CONTQST                * Okay to continue
          BRANCH    CEXIT,RNGE8000,RNGE0000,RNGE9000
.
.         We have the ranges for the report
.
RNGE8000  MOVE      ZERO,EXIT
          GOTO      RNGE9999
.
.         Cancel selected
.
RNGE9000  MOVE      ONE,EXIT
.
RNGE9999  RETURN
.**********************************************************************
.*                           FCLM0000                                 *
.*                      Input 1st claim code                          *
.**********************************************************************
FCLM0000  MOVE      "33",CCOL                * column for keyin
          MOVE      FOUR,CVERT               * row for keyin
          MOVE      CODECL,CODE              * category for keyin
.
          DISPLAY   *P33:5,*EL               * clear ending claim display
.
          MOVE      SP20,CLMDESC
          MOVE      SP20,CLMCODE
          MOVE      SP20,STRTCLM
.
          CALL      KEYC0000                 * keyin a code
          BRANCH    EXIT,FCLM9000            * nothing input
.
          MOVE      ACODE,CLMCODE            * save code input
          MOVE      ACODE,STRTCLM            * save code input
          MOVE      TDESC,CLMDESC            * save code description
.
          DISPLAY   *P33:4,*V2LON,CLMCODE:   * display code
                    *P45:4,*HOFF,CLMDESC     * display description
          MOVE      ZERO,EXIT
          GOTO      FCLM9999
.
.         Check if this nothing, or EXITCHAR
.
FCLM9000  CMATCH    EXITCHAR,ACODE           * exitchar input ?
          GOTO      FCLM9999 IF EQUAL        * yes, abort input
.
          PACK      CLMDESC,DSTART,SP20
          DISPLAY   *P45:4,DSTART
          MOVE      ZERO,EXIT
.
FCLM9999  RETURN
.**********************************************************************
.*                           SCLM0000                                 *
.*                      Input 2nd claim code                          *
.**********************************************************************
SCLM0000  MOVE      "33",CCOL                * column for keyin
          MOVE      FIVE,CVERT               * row for keyin
          MOVE      CODECL,CODE              * category for keyin
.
          MOVE      SP20,CLM2DESC
          MOVE      SP20,CLM2CODE
          MOVE      SP20,ENDCLM
.
          CALL      KEYC0000                 * keyin a code
          BRANCH    EXIT,SCLM9000            * nothing input
.
          MOVE      ACODE,CLM2CODE           * save code input
          MOVE      ACODE,ENDCLM             * save code input
          MOVE      TDESC,CLM2DESC           * save code description
.
          DISPLAY   *P33:5,*V2LON,CLM2CODE:  * display code
                    *P45:5,*HOFF,CLM2DESC    * display description
.
.         Check for a valid range
.
          MATCH     STRTCLM,ENDCLM           * compare the claim codes
          GOTO      SCLM2000 IF LESS         * invalid range
.
          MOVE      ZERO,EXIT
          GOTO      SCLM9999
.
.         The ending claim code is less than the starting code
.
SCLM2000  DISPLAY   *P1:24,*B,*EL,"Invalid claim code range. ";
          CALL      HITENTER
          MOVE      TWO,EXIT                 * flag invalid range
          GOTO      SCLM9999
.
.         Check if this nothing, or EXITCHAR
.
SCLM9000  CMATCH    EXITCHAR,ACODE           * exitchar input ?
          GOTO      SCLM9999 IF EQUAL        * yes, abort input
.
          DISPLAY   *P45:5,DFINISH
          PACK      CLM2DESC,DFINISH,SP20
          MOVE      Z30,ENDCLM
          MOVE      ZERO,EXIT
.
SCLM9999  RETURN
.**********************************************************************
.*                           FFND0000                                 *
.*                      Input 1st health fund code                    *
.**********************************************************************
FFND0000  MOVE      SP30,FUNDNAME            * clear fund name
          MOVE      SP30,HFUND               * clear fund code
          MOVE      SP30,STRTFUND            * clear starting fund code
.
          DISPLAY   *P33:8,*EL               * clear ending fund display
.
          MOVE      "33",CCOL                * column for keyin
          MOVE      SEVEN,CVERT              * row for keyin
          CALL      KEYF0000                 * keyin fund
          BRANCH    EXIT,FFND9000            * nothing or exitchar input
.
          MOVE      KFUND,HFUND              * save health fund code
          MOVE      KFUND,STRTFUND           * save health fund code
          MOVE      HFNAME,FUNDNAME          * save health fund description
.
          DISPLAY   *P33:7,*V2LON,HFUND:     * display code
                    *P45:7,*HOFF,FUNDNAME    * display description
          GOTO      FFND9999
.
.         Check if this nothing, or EXITCHAR
.
FFND9000  CMATCH    EXITCHAR,KFUND           * exitchar input ?
          GOTO      FFND9999 IF EQUAL        * yes, abort input
.
          PACK      FUNDNAME,DSTART,SP20
          DISPLAY   *P45:7,DSTART
          MOVE      ZERO,EXIT
.
FFND9999  RETURN
.**********************************************************************
.*                           SFND0000                                 *
.*                      Input 2nd claim code                          *
.**********************************************************************
SFND0000  MOVE      "33",CCOL                * column for keyin
          MOVE      EIGHT,CVERT              * row for keyin
.
          MOVE      SP20,H2FUND
          MOVE      SP30,FUND2NAM
          MOVE      SP20,ENDFUND
.
          CALL      KEYF0000                 * keyin a code
          BRANCH    EXIT,SFND9000            * nothing input
.
          MOVE      KFUND,H2FUND             * save health fund code
          MOVE      KFUND,ENDFUND            * save health fund code
          MOVE      HFNAME,FUND2NAM          * save health fund description
.
          DISPLAY   *P33:8,*V2LON,H2FUND:    * display code
                    *P45:8,*HOFF,FUND2NAM    * display description
.
.         Check for a valid range
.
          MATCH     STRTFUND,ENDFUND         * compare fund codes
          GOTO      SFND2000 IF LESS         * invalid code range
.
          MOVE      ZERO,EXIT
          GOTO      SFND9999
.
.         The ending health fund code is less than the starting code
.
SFND2000  DISPLAY   *P1:24,*B,*EL,"Invalid health fund code range. ";
          CALL      HITENTER
          MOVE      TWO,EXIT                 * flag invalid range
          GOTO      SFND9999
.
.         Check if this nothing, or EXITCHAR
.
SFND9000  CMATCH    EXITCHAR,KFUND           * exitchar input ?
          GOTO      SFND9999 IF EQUAL        * yes, abort input
.
          DISPLAY   *P45:8,DFINISH
          PACK      FUND2NAM,DFINISH,SP30
          MOVE      Z30,ENDFUND
          MOVE      ZERO,EXIT
.
SFND9999  RETURN
.**********************************************************************
.*                           PRT0000                                  *
.*                      Print the master listing                      *
.**********************************************************************
PRT0000   DISPLAY   *P1:24,*EL,*P10:24,"Scanning : ";
.
          MOVE      ZERO,CPAGENO             * reset page number
          CLOCK     TIME,CTIMEIS             * starting time
          CALL      HEAD0000                 * print heading for first page
          MOVE      ZERO,NRECS               * reset record counter
          MOVE      SP30,LASTKEY             * initialise last primary key
.
          PACK      KEY15,STRTCLM,STRTFUND,SP30
          CALL      RSAEBCH1
PRT1000   CALL      RKAEBCH1                 * get the next record
          BRANCH    OVRCD,PRT9000            * no more records
.
          MATCH     AEBCCLM,ENDCLM           * passed ending claim code ?
          GOTO      PRT9000 IF LESS          * yes, finished report
.
          MATCH     STRTFUND,AEBCBRD         * before first fund in range ?
          GOTO      PRT2000 IF LESS          * yes, skip forward to fund
.
          MATCH     AEBCBRD,ENDFUND          * after last fund in range ?
          GOTO      PRT3000 IF LESS          * yes, skip forward to next claim
.
          DISPLAY   *P21:24,*V2LON,AEBCCLM,AEBCBRD,AEBCAGEG,AEBCNVIS;
.
          CALL      PREC0000                 * print this record
          ADD       ONE,NRECS                * increment record count
          GOTO      PRT1000
.
.         Skip forward to the first fund in the range
.
PRT2000   PACK      KEY15,AEBCCLM,STRTFUND,SP30
          CALL      RSAEBCH1
          GOTO      PRT1000
.
.         Skip forward to the next claim code
.
PRT3000   PACK      KEY15,AEBCCLM,Z30
          CALL      RSAEBCH1
          GOTO      PRT1000
.
.         Finished report
.
PRT9000   CALL      ENDP0000                 * finish off report
.
PRT9999   RETURN
.**********************************************************************
.*                           HEAD0000                                 *
.*                      Print the master listing heading              *
.**********************************************************************
HEAD0000  CALL      HEAD132                  * print standard heading
.
          PRINT     *N,*40,"Starting Claim Code  : ":
                       CLMCODE,SP5,CLMDESC:
                    *N,*40,"  Ending Claim Code  : ":
                       CLM2CODE,SP5,CLM2DESC:
                    *N,*40,"Starting Board       : ":
                       HFUND,SP2,FUNDNAME:
                    *N,*40,"  Ending Board       : ":
                       H2FUND,SP2,FUND2NAM:
                    *N
          ADD       SIX,CLNO
.
          CALL      UND132                   * print underlines
          PRINT     *1,"|":
                    *36,"|":
                    *45,"|":
                    *57,"|":
                    *69,"|":
                    *101,"|-- Daily Charge --":
                    *120,"|No.":
                    *124,"| Item":
                    *132,"|":
                    *N:
                    *1,"| Claim Code":
                    *36,"| Board":
                    *45,"| Age Range":
                    *57,"|Visit Range":
                    *69,"| Rate Description":
                    *101,"| Patient":
                    *111,"|  Board":
                    *120,"|Inv":
                    *124,"| Group":
                    *132,"|"
          CALL      UND132                   * print underlines
          ADD       TWO,CLNO
.
HEAD9999  RETURN
.**********************************************************************
.*                           PREC0000                                 *
.*                      Print a single record                         *
.**********************************************************************
.
.         Check for a new claim code/board/department
.
PREC0000  PACK      NEWKEY,AEBCCLM,AEBCBRD,AEBCAGEG
.
          MATCH     NEWKEY,LASTKEY           * check for a change in dept
          GOTO      PREC0500 IF EQUAL        * no change
.
          MOVE      ONE,FROMDAY              * initialise from day for range
.
.         Check if we just have a change in age group
.
          SETLPTR   NEWKEY,9
          SETLPTR   LASTKEY,9
.
          MATCH     NEWKEY,LASTKEY
          GOTO      PREC0100 IF EQUAL
.
.         Change of department, etc.
.
          SETLPTR   NEWKEY,12
.
          MOVE      NEWKEY,LASTKEY           * save dept key
          MOVE      ZERO,FAGEGRP             * initialise from age group
          GOTO      PREC0500
.
.         Just a change in age group, calculate start of new age range
.
PREC0100  SETLPTR   LASTKEY,12
          RESET     LASTKEY,10
          MOVE      LASTKEY,ACODE            * get the last age group code
          MOVE      ACODE,FAGEGRP            * change to numeric
          ADD       ONE,FAGEGRP              * increment by one
.
          SETLPTR   NEWKEY,12
          MOVE      NEWKEY,LASTKEY           * save dept key
.
.         Get the descriptions that will be needed
.
PREC0500  MOVE      CODECL,CODE              * category for department
          MOVE      AEBCCLM,ACODE            * claim code
          CALL      RCOD0000                 * read in description
          MOVE      TDESC,DCLM               * save description
.
          COMPARE   "55",CLNO                * current page full ?
          CALL      HEAD0000 IF NOT LESS     * yes, print heading
.
          PRINT     *1,"| ",AEBCCLM,SP2,DCLM:
                    *36,"| ",AEBCBRD:
                    *45,"| ",FAGEGRP," - ",AEBCAGEG:
                    *57,"| ",FROMDAY," - ",AEBCNVIS:
                    *69,"| ",AEBCDESC:
                    *101,"| ",AEBCPPOR:
                    *111,"|",AEBCBPOR:
                    *120,"| ",AEBCNINV:
                    *124,"|  ",AEBCITEM:
                    *132,"|"
          ADD       ONE,CLNO
.
          MOVE      AEBCNVIS,FROMDAY
          ADD       ONE,FROMDAY
.
PREC9999  RETURN
.**********************************************************************
.*                           RCOD0000                                 *
.*                      Get the description for a code                *
.**********************************************************************
RCOD0000  PACK      TDESC,MISSING,SP20       * desc. for a blank code
          MATCH     SP3,ACODE                * check if code is blank
          GOTO      RCOD9999 IF EQUAL        * yes, use desc for blank code
.
          PACK      TDESC,ACODE,UNKNOWN,SP20
          PACK      KEY5,CODE,ACODE
          CALL      RDCODE1
.
RCOD9999  RETURN
.
.**********************************************************************
.*                           ENDP0000                                 *
.*                      Print the end of the report                   *
.**********************************************************************
ENDP0000  CALL      UND132                   * finish off report
.
          PRINT     *N,"Number of records = ",NRECS,*N:
                    *N,"*** End of Report ***"
ENDP9999  RETURN
+
.********************************************************************** 
.*              I/O INCLUDES FOR FILES AND GENERAL ROUTINES           *
.**********************************************************************
.
         INC       STD001IO
         INC       PATCODKY
         INC       PATFNDDS
         INC       PATCODIO/INC            * patient i/o for codes
         INC       AAEBCHIO/INC            * parameters file
         INC       PATFN1IO/INC            * health fund file
