.*****************************************************************************
.*    Program      : F90PTECD                                                *
.*    Description  : Conversion patecdaf to new File layout                  *
.*                                                                           *
.*    Author       : Mike Laming                                             *
.*    Date         : 30 Apr 2008                                             *
.*    Modifications:                                                         *
.*****************************************************************************
.
.  Global change F90PTECD   eg F57PTDOC
.  Global change PATECDFD    eg PATDOCFD (new layout)
.  Global change PATECDIO    eg PATDOCIO (new layout)
.  Global change patecdaf   eg patdoctf
.  Global change PATECDA1  eg PATDOCT1
.  Global change KEY12     eg KEY8
.  Global change WRPTECD1  eg WRDOCT1
.  Global change svptecdf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.   
OLDFILE1  IFILE     SQL, FIXED=162, KEY="U1-8,9-10,11-12" 
.
.                                     ******** copy the old FD here *******
. NAME    TYPE   LENGTH  PHYSICAL START LOC.  DESCRIPTION
. ----    ----   ------  -------- ----------  -----------
.DPTEDADM  DIM       8        8         1      Admin no
.DPTEDEPN  DIM       2        2         9      Episode no
.DPTEDCNT  DIM       2        2        11      Episode unique counter
.PTEDCODE  DIM       9        9        13      Disease code
.PTEDTYPE  DIM       1        1        22      Disease type (P,S,C,A,L)
.DPTEDUNQ  DIM       2        2        23      Unique no/patmdisf record no
.PTEDDTCD  DIM       8        8        25      Date of coding (ccyymmdd) 
.PTEDOPER  DIM       4        4        33      Operator (No longer used)
.PTEDACDT  DIM       8        8        37      Accident date (ccyymmdd)
.PTEDTIME  DIM       5        5        45      Coding Time (hh:mm)
.PTEDCCCL  DIM       1        1        50      CC Class Level
.PTEDUSID  DIM      10       10        51      Web User ID
.PTEDDRGD  DIM       1        1        61      DRG Driver 0=Not Used 1=Used
OLDDDESC  DIM      70       70        62      Free Format Description
.PTEDOSET  DIM       1        1       132      Diagnostic onset type (QLD)
.                                             " " and 1 = Condition present
.                                             2 = Condition arises
OLDDSPAR  DIM      29       29       133      Spare variable
.
.End of Record                       162
.
.
.                                     ******** copy the new FD here *******
.
.Data File Definition
.--------------------
PATECDA1  IFILE     SQL, FIXED=210, KEY="U1-8,9-10,11-12"
PATECDA2  IFILE     SQL, FIXED=210, KEY="U1-8,23-24,9-10,11-12"
PATECDA3  IFILE     SQL, FIXED=210, KEY="U13-21,1-8,23-24,9-10,11-12"
PATECDA4  IFILE     SQL, FIXED=210, KEY="U25-32,1-8,9-10,11-12"
PATECDA5  IFILE     SQL, FIXED=210, KEY="U1-8,13-21,9-10,11-12"
.
. NAME    TYPE   LENGTH  PHYSICAL START LOC.  DESCRIPTION
. ----    ----   ------  -------- ----------  -----------
DPTEDADM  DIM       8        8         1      Admin no
DPTEDEPN  DIM       2        2         9      Episode no
DPTEDCNT  DIM       2        2        11      Episode unique counter
PTEDCODE  DIM       9        9        13      Disease code
PTEDTYPE  DIM       1        1        22      Disease type (P,S,C,A,L)
DPTEDUNQ  DIM       2        2        23      Unique no/patmdisf record no
PTEDDTCD  DIM       8        8        25      Date of coding (ccyymmdd) 
PTEDOPER  DIM       4        4        33      Operator (No longer used)
PTEDACDT  DIM       8        8        37      Accident date (ccyymmdd)
PTEDTIME  DIM       5        5        45      Coding Time (hh:mm)
PTEDCCCL  DIM       1        1        50      CC Class Level
PTEDUSID  DIM      10       10        51      Web User ID
PTEDDRGD  DIM       1        1        61      DRG Driver 0=Not Used 1=Used
PTEDDESC  DIM     100      100        62      Free Format Description
PTEDOSET  DIM       1        1       162      Diagnostic onset type (QLD)
.                                             " " and 1 = Condition present
.                                             2 = Condition arises
PTEDSPAR  DIM      47       47       163      Spare variable
.
.End of Record                       210
.
.Redefined Variables
.-------------------
PTEDADMN  FORM      8
PTEDEPNO  FORM      2
PTEDCNT   FORM      2
PTEDUNQN  FORM      2
.
SPTEDCOD  DIM       8
.
ECDFLAG   FORM      1
SECDKEY   DIM       14
.
. ***********************************************************************
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION PATECDFD"
PRGID     INIT      "F90PTECD"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write 
          CALL      VERIFY00                      * verify new file
          BRANCH    EXIT,MAIN9999
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,"patecdaf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patecdaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "svptecdf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patecdaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "svptecdf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patecdaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "svptecdf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patecdaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 210 UC1-8,9-10,11-12",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-8,23-24,9-10,11-12",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC13-21,1-8,23-24,9-10,11-12",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC25-32,1-8,9-10,11-12",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-8,13-21,9-10,11-12",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PATECDA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY12,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
          PACK      PTEDDESC,OLDDDESC,SP50
          PACK      PTEDSPAR,SP50
.                                               * Pack key here
          PACK      KEY12,DPTEDADM,DPTEDEPN,DPTEDCNT,SP50
          CALL      WRPTECD1                       * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  MOVE      ZERO,EXIT
....      CLOSE     PATECDA1                      * close new file
....      CLOSE     OLDFILE1                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.**********************************************************************
.*                               VERIFY00                             *
.*             loop thru old file and read each new record            *
.**********************************************************************
VERIFY00  MOVE      ZERO,EXIT
          MOVE      ZERO,RECNUM
          DISPLAY   *P1:20,*EL,"Verifying  : ";
          PACK      KEY12,SP60
          CALL      READSOLD                    * position at start
VERIFY10  CALL      READKOLD                    * read next record
          BRANCH    OVRCD,VERIFY60              * no more records
          ADD       ONE,RECNUM                  * update record counter
.
.                                               * Pack key here
          PACK      KEY12,DPTEDADM,DPTEDEPN,DPTEDCNT,SP50
          CALL      RDPTECD1                    * read to new file
          BRANCH    OVRCD,VERIFY80
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      VERIFY10                      * get next record
.
VERIFY60  CLOSE     PATECDA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          DISPLAY   *P15:20,*V2LON,RECNUM
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
          GOTO      VERIFY99
.
VERIFY80  DISPLAY   *P15:20,*V2LON,RECNUM
          DISPLAY   *P1:22,"New file has missing records - the old file copy":
                    " will be retained. ":
                    *P1:24,"    ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
VERIFY99  RETURN
.
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "svptecdf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat patecdaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding patecdaf.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  RESET     KEY12    
          READ      OLDFILE1,KEY12;;
          RETURN    
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DPTEDADM,DPTEDEPN,DPTEDCNT,PTEDCODE,PTEDTYPE:
                             DPTEDUNQ,PTEDDTCD,PTEDOPER,PTEDACDT,PTEDTIME:
                             PTEDCCCL,PTEDUSID,PTEDDRGD,OLDDDESC,PTEDOSET:
                             OLDDSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPTEDADM,PTEDADMN
          MOVE      DPTEDEPN,PTEDEPNO
          MOVE      DPTEDCNT,PTEDCNT
          MOVE      DPTEDUNQ,PTEDUNQN
          RETURN
.
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Read Direct and the Write statement from the new
.                  I/O file - (no changes are needed to this routine)
.
RDPTECD1  MOVE      ZERO,OVRCD
          RESET     KEY12
          READ      PATECDA1,KEY12;DPTEDADM,DPTEDEPN,DPTEDCNT,PTEDCODE,PTEDTYPE:
                                   DPTEDUNQ,PTEDDTCD,PTEDOPER,PTEDACDT,PTEDTIME:
                                   PTEDCCCL,PTEDUSID,PTEDDRGD,PTEDDESC,PTEDOSET:
                                   PTEDSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPTEDADM,PTEDADMN
          MOVE      DPTEDEPN,PTEDEPNO
          MOVE      DPTEDCNT,PTEDCNT
          MOVE      DPTEDUNQ,PTEDUNQN
          RETURN
.         
WRPTECD1  RESET     KEY12          
          MOVE      PTEDADMN,DPTEDADM 
          MOVE      PTEDEPNO,DPTEDEPN 
          MOVE      PTEDCNT,DPTEDCNT
          MOVE      PTEDUNQN,DPTEDUNQ
          WRITE     PATECDA1,KEY12;DPTEDADM,DPTEDEPN,DPTEDCNT,PTEDCODE,PTEDTYPE:
                                   DPTEDUNQ,PTEDDTCD,PTEDOPER,PTEDACDT,PTEDTIME:
                                   PTEDCCCL,PTEDUSID,PTEDDRGD,PTEDDESC,PTEDOSET:
                                   PTEDSPAR
          RETURN
.
          INC       STD001IO
