.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.04.01  18/06/2014  Steve Armstrong     CAR 301639
.           Added call to TFILENAM for FNAMPOST (AUTOPCOD)
.           in CKPPY000.
.           Recompiled for changes to AUTOPCOD & AUPCDVAR.
.-------------------------------------------------------
.V10.03.01  27/02/2013  Ania P              CAR 281021
.           Recompiled for FMSBNKKY
.-------------------------------------------------------
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
.-------------------------------------------------------
. V9.11.01  27.03.2009 Sandra Barcham   172763
.           Added parameter FMCOEPWC to std laser
.-------------------------------------------------------
. V9.09.01  30.07.2007 Sandra Barcham CAR 146314
.           Re-use cheque layout 4 (DVC) for Modbury
.-------------------------------------------------------
. V9.04.01  13.04.2005 Peter Vela CAR 59696
.           Recompiled for SINCGBFD
. V9.03.01  25.02.2004 Mike Laming CAR 44010
.           Add Ledger/Account edit to Screen 4  at WAPIN000
. V9.02.00  30.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.05  20.05.2002 Raghunandan Surve,HPS -      SRF17025
.           Recompile again for ASP18CD
.           14.05.2002 Raghunandan Surve,HPS -      SRF17025
.           Recompile again for ASP18CD
. VF.09.04  14.05.2002 Raghunandan Surve,HPS -      SRF17025
.           Recompile For ASP18CD copybook. (Make Mercy same as f.01)
. VF.09.03  03.09.2001 Glenn Saunders  srf 10799 (continuation from D.Matthews)
.           Recompile For ASP18CD copybook. (Make Hutt same as f.01)
. VF.09.02  22.08.2001 Glenn Saunders  srf 10799 (continuation from D.Matthews)
.           Recompile for ASP18CD copybook.
. VF.09.01  26.06.2001 Dave Matthews
.           Alter Mercy (Dunedin) cheque formatting
. VF.09.B03 11.04.2001 Dave Matthews
.           Alter Hutt Valley cheque formatting for new NZ style cheques
. VF.09.B02 12.12.2000 Charles Handaya
.           Add in new MHD layout NZ site, Laser printer
. VF.09.B01 27.11.2000 Sandra Barcham
.           Added BAS Code
.-------------------------------------------------------
. VF.01.07  23.10.2000 Charles Handaya
.           Add in a new HWK layout that copied from 0=std
. VF.01.06  12.10.2000 Charles Handaya
.           Add a Date printed at Cheque Remittance for Layout 19
.           srf 6645
. VF.01.05  18.09.2000 Charles Handaya
.           Fix cheque layout for CHC
. VF.01.04  04.08.2000 Charles Handaya
.           Add new Cheque Layout for Southland (STH)
.           srf 647056
. VF.00.03  01.08.2000 Sandra Barcham
.           Stop recalculating gst for Australia
.           srf 4656
. VF.00.02  10.05.2000 Sandra Barcham
.           Added N to APIMPAYG to allow no gst
. VF.00.01  14.04.2000 Sandra Barcham
.           Added GST
.-------------------------------------------------------
. VF.00.10  28.04.2000 Sandra Barcham
.           Recompiled for change to FMSBNKKY
. VF.00.09  13.01.2000 Sandra Barcham
.           Recompiled for change to FMSBNKKY
. VF.00.08  07.01.2000 Charles Handaya
.           Fix cheque layout for LTR
.           srf 636139
. VF.00.07  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           17.11.1999 Sandra Barcham
.           Stop transactions disappearing
.           srf 633548
.           Allow Cancelled direct debits
.           srf 635048
. VF.00.06  09.11.1999 Sandra Barcham
.           Fix Cheque Lyout for LTR
. VF.00.05  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
. VF.00.04  11.07.1999 Sandra Barcham
.           Add LTR cheque layout
. VF.00.03  01.07.1999 Sandra Barcham
.           Add LAS cheque layout
. VF.00.02  13.05.1999 Sandra Barcham
.           Add SVB cheque layout
.           quote 9446
. VF.00.01  03.05.1999 Sandra Barcham
.           Change STV cheque layout
.           srf 631036
.-------------------------------------------------------
CORREF    DIM       15
FORM8P2   FORM      8.2
NOGST     FORM      1
PAYASGO   FORM      1
PAYASTOT  FORM      12.2
SP11      INIT      "           "
TEMPDISC  FORM      10.2
TEMPGROS  FORM      12.2
TEMPNET   FORM      12.2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS18
.   Function      :   Prompt Payments Input                   
.   Generated  On :   18/06/2014
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APS18DF     
          INC       APSAPYDF    
          INC       APSAPYFD/INC
          INC       APSBCHDF    
          INC       APSBMFFD/INC
          INC       APSCAFFD/INC
          INC       APSCILFD/INC
          INC       APSCIOFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSISLFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSNKIFD/INC
          INC       APSNSCFD/INC
          INC       APSORDFD/INC
          INC       APSPPDFD/INC
          INC       APSTMPDF    
          INC       AUPCDVAR/INC
          INC       FMSAMADF    
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSBNKFD/INC
          INC       FMSCAFFD/INC
          INC       FMSCHQFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSDISFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSRESFD/INC
          INC       FMSTDSFD/INC
          INC       IBABATFD/INC
          INC       IBACONFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       IBAPRNFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIHFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINORIFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSCMFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINWARFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.=========================
.Local Variable Definition
.-------------------------
BATCHCAL  FORM     12.2 * Scr 00 Fld    13
FLAGINST  FORM      1 * Scr 00 Fld    26
CRDNAM80  DIM      80 * Scr 01 Fld     4
CRDADD80  DIM      80 * Scr 01 Fld     5
CHEQUENO  DIM       8 * Scr 01 Fld    16
CHQTOTL   FORM     12.2 * Scr 01 Fld    19
INVKEY40  DIM      40 * Scr 01 Fld    20
FLAGGST   FORM      1 * Scr 01 Fld    21
LASTCRED  DIM      36 * Scr 01 Fld    30
LASTINV   DIM      15 * Scr 01 Fld    31
LASTTOT   FORM     10.2 * Scr 01 Fld    32
PAYLINE   FORM      3 * Scr 01 Fld    34
TOTALALL  FORM     12.2 * Scr 02 Fld    23
.
.    Multi Item Key Fields Scr 02 Fld    29
.-------------------------------------------------------
APIN1NAM  INIT      "APIN1"
APIN1END  FORM      1   * End Display
APIN1SNO  FORM      5   * Number of Items on the Screen
APIN1MKY  DIM       127 * Match Key 
APIN1EKY  DIM       127 * End Key
APIN1SKY  DIM       127 * Start Key
APIN1IDX  INIT      " 132 UC1-5"
APIN1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
APIN1FNM  DIM       8  * Filename
APIN1CNT  FORM      3  * Number of Items on Screen
LEDACDES  DIM      50 * Scr 02 Fld    31
TRANDESC  DIM      75 * Scr 02 Fld    32
SUPDES1   DIM      60 * Scr 02 Fld    42
SUPDES2   DIM      60 * Scr 02 Fld    43
INVTOTAL  FORM     12.2 * Scr 06 Fld    28
TOTALLOC  FORM     12.2 * Scr 06 Fld    30
DOCTOTAL  FORM     12.2 * Scr 06 Fld    60
COMMENTI  DIM      35 * Scr S1 Fld     7
COMMENT1  DIM      70 * Scr S1 Fld     8
COMMENT2  DIM      70 * Scr S1 Fld     9
ORIGTRAN  DIM      12 * Scr S4 Fld    10
ORGBATCH  DIM       5 * Scr S4 Fld    23
ORGDOCRE  DIM      15 * Scr S4 Fld    24
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS18"
PRGNAM    INIT      "Prompt Payments Input                   "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      CKPPY000
          CALL      SC00L000
          CLOSE     APIN1FL1,DELETE
.
          CALL      KILL0000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apscilaf";
          OPEN      APSCILA1,"apscilaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsislaf";
          OPEN      APSISLA1,"apsislaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsnkiaf";
          OPEN      APSNKIA1,"apsnkiaf"
          DISPLAY   *P56:24,"Opening apsnkiaf";
          OPEN      APSNKIA2,"apsnkiaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA1,"apsnscaf"
          DISPLAY   *P56:24,"Opening apsppdaf";
          OPEN      APSPPDA1,"apsppdaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA2,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA3,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA5,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA6,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmscafaf";
          OPEN      FMSCAFA1,"fmscafaf"
          DISPLAY   *P56:24,"Opening fmschqaf";
          OPEN      FMSCHQA1,"fmschqaf"
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening fmsresaf";
          OPEN      FMSRESA1,"fmsresaf"
          DISPLAY   *P56:24,"Opening  fmstdsaf           ";
          OPEN      FMSTDSA1,"fmstdsaf"          
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
          DISPLAY   *P56:24,"Opening  ihapassf           ";
          OPEN      IHAPASS1,"ihapassf"          
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA4,"sincicaf"
          DISPLAY   *P56:24,"Opening weberraf";
          OPEN      WEBERRA1,"weberraf"
          DISPLAY   *P56:24,"Opening weberraf";
          OPEN      WEBERRA2,"weberraf"
          DISPLAY   *P56:24,"Opening weberraf";
          OPEN      WEBERRA3,"weberraf"
.--------------------------------------------------------
. Initialise Batch Screen Unique ID                          
.--------------------------------------------------------
          MOVE     ZERO,APIN1SNO
          MOVE     "02   29",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,APIN1SNO
            ENDIF
          ENDIF
          PACK      APIN1FNM,ANST,APIN1NAM,PORT
          REP       " 0",APIN1FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APIN1FL1,APIN1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     APIN1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,APIN1FNM,APIN1IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",APIN1FNM;
          EXECUTE   KEY80,TASKID
          OPEN      APIN1FL1,APIN1FNM
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Batch Header Input                 
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Input Payment Header               
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Payment Allocation for Non-Specific
          ENDIF
          MATCH     "04",SCRID
          IF         @EQUAL
            CALL       PS04L000   * Tran. Detail Non-Specific Creditor 
          ENDIF
          MATCH     "05",SCRID
          IF         @EQUAL
            CALL       PS05L000   * Non Specific Creditor Name&Address 
          ENDIF
          MATCH     "06",SCRID
          IF         @EQUAL
            CALL       PS06L000   * Payment Header                     
          ENDIF
          MATCH     "N1",SCRID
          IF         @EQUAL
            CALL       PSN1L000   * Non Specific Creditor Payment      
          ENDIF
          MATCH     "PH",SCRID
          IF         @EQUAL
            CALL       PSPHL000   * Payment Creditor without Invoice   
          ENDIF
          MATCH     "S1",SCRID
          IF         @EQUAL
            CALL       PSS1L000   * Specific Creditor Valid Invoice    
          ENDIF
          MATCH     "S2",SCRID
          IF         @EQUAL
            CALL       PSS2L000   * Modify Invoice Payment Screen      
          ENDIF
          MATCH     "S4",SCRID
          IF         @EQUAL
            CALL       PSS4L000   * Sundry Details Modification        
          ENDIF
          MATCH     "S7",SCRID
          IF         @EQUAL
            CALL       PSS7L000   * New Purchase Order Transaction     
          ENDIF
          RETURN
.--------------------------------
. Screen - Batch Header Input                 
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      FMSCON00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Batch Header Input                 
.-------------------------------------------------------
CF00L000
          MOVE      SP70,APIMBCH 
          MOVE      SP70,APBMADT 
          MOVE      ZERO,APBMTOT 
          MOVE      SP70,APBMLED 
          MOVE      SP70,APBMDIS 
          MOVE      SP70,APBMRES 
          MOVE      SP70,APBMCHQ 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Batch Header Input                 
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,BATCHCAL
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APBMDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SECUSER 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KAPBCH00
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      OVRCD,ACCEPT
          MOVE      APIMBCH,VAR      
          CALL      DISPITEM
          CALL      GBAT0000
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      BATCHCAL,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SECUSER,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Batch Header Input                 
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Batch Header Input                 
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Batch Header Input                 
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Batch Header Input                 
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L101,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L115:
                            PS00L116,PS00L117
          GOTO     PS00L999
.
PS00L101
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          CALL      GBDES000
          MOVE      APBMLED,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      APBMDIS,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      APBMRES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      BATCHCAL,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          UNPACK    PERSDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      PERDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      SECUSER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      APBMCHQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      FMCHDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      FLAGINST,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Batch Header Input                 
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L108,SF00L109:
                            SF00L110,SF00L111,SF00L112,SF00L113:
                            SF00L006,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L113:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      POSTHEAD
          GOTO      SF00L001
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELBCH00
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PEREDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERSDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      APDATE00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    PERSDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PERDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EBTOT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLAA00
          MOVE      FMLALEDG,APBMLED
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      GBDES000
          MOVE      APBMLED,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMDSA00
          MOVE      FMDSCODE,APBMDIS
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMDIS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMRSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMRSA00
          MOVE      FMRSCODE,APBMRES
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMRES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMRSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      UPDT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L109
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      LSTBCH00
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L110
          CALL      UUAPBM1 
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L111
          CALL      UUAPBM1 
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L112
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      APSBCHPR
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L113
.
.
          MOVE      "   25",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCHDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCHAC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L113
            ENDIF
            BRANCH    EXIT,SF00L113,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMCHQ,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   25",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCHDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Input Payment Header               
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Input Payment Header               
.-------------------------------------------------------
CF01L000
          MOVE      SP70,APIMCRD 
          MOVE      SP70,CHEQUENO
          MOVE      SP70,APIMDDT 
          MOVE      SP70,APIMREF 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Input Payment Header               
.--------------------------------------------------------
KY01L000
.
KY01L110
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CRDNAM80
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CRDADD80
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACA1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACA2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACA3 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACPC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACTEL
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACFAX
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACON 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAPMA000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      APIMCRD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CRDNAM80,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CRDADD80,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACA1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACA2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACA3,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACPC,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACTEL,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACFAX,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACON,VAR      
            CALL      DISPITEM
          ENDIF
.
KY01L120
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CHQTOTL 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      DISPLAST
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      EDOCR000
          BRANCH    EXIT,KY01L110,KY01L900
          MOVE      OVRCD,ACCEPT
          MOVE      CHEQUENO,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CHQTOTL,VAR      
            CALL      DISPITEM
          ENDIF
.
KY01L130
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      ECRDT000
          BRANCH    EXIT,KY01L120,KY01L900
          MOVE      OVRCD,ACCEPT
          UNPACK    APIMDDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
KY01L140
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KAPIM000
          BRANCH    EXIT,KY01L130,KY01L900
          MOVE      OVRCD,ACCEPT
          MOVE      APIMREF,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Input Payment Header               
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Input Payment Header               
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Input Payment Header               
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Input Payment Header               
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L101,PS01L102,PS01L103,PS01L104:
                            PS01L105,PS01L999,PS01L106,PS01L107:
                            PS01L108,PS01L109,PS01L110,PS01L111:
                            PS01L112,PS01L113,PS01L114,PS01L999:
                            PS01L999,PS01L999,PS01L115,PS01L116:
                            PS01L117,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L118,PS01L119,PS01L120:
                            PS01L999,PS01L121
          GOTO     PS01L999
.
PS01L101
          MOVE      APBMBCH,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      BATCHCAL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      CRDNAM80,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      CRDADD80,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      APMACA1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      APMACA2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      APMACA3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      APMACPC,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      APMACTEL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      APMACFAX,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      APMACON,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      CHQTOTL,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      INVKEY40,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      FLAGGST,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      LASTCRED,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      LASTINV,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L120
          MOVE      LASTTOT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L121
          MOVE      PAYLINE,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Input Payment Header               
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L101,SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          CALL      CKDOC000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Payment Allocation for Non-Specific
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Payment Allocation for Non-Specific
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Payment Allocation for Non-Specific
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Payment Allocation for Non-Specific
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Payment Allocation for Non-Specific
.---------------------------------------------------------
LM02L000
.---------------------------------------------------------
. Load for :    29 Unique ID                          
.---------------------------------------------------------
          UNPACK    SP70,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,SP70
          MOVE      KEY51,APIN1EKY
          STRIP     APIN1SKY
          SETLPTR   APIN1EKY,25
          MOVE      APIN1EKY,APIN1SKY
          CALL      RDAPIN1 
          IF        OVRCD=0
            CALL      RPAPIN1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP02L000
          MOVE     ZERO,APIN1CNT
          MOVE     ZERO,APIN1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP02L600
          MATCH    PRGID,SCPSPID
          GOTO     DP02L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP02L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP02L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                           DP02L101,DP02L102,DP02L103,DP02L104:
                            DP02L010,DP02L010,DP02L105,DP02L106:
                            DP02L107,DP02L108,DP02L109,DP02L110:
                            DP02L010,DP02L111,DP02L112,DP02L010:
                           DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010
          GOTO      DP02L010
.
DP02L101
          PACK      APIN1MKY,SP70,SP70
          CALL      UPTAPIN1
          IF        APIN1END=0
            CALL      RKAPIN1 
            IF        OVRCD=0
              PACK      APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
              MATCH     APIN1EKY,APIN1MKY
              IF        @EQUAL
                MOVE      ZERO,APIN1END
                ADD       ONE,APIN1CNT
                CALL      UPTAPIN1
          CALL      RDET0000
                MOVE      APINLIN,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,APIN1END
              ENDIF
            ELSE
              MOVE      ONE,APIN1END
            ENDIF
          ENDIF
          IF        APIN1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L102
          IF        APIN1END=0
            MOVE      APINORD,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L103
          IF        APIN1END=0
            MOVE      LEDACDES,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L104
          IF        APIN1END=0
            MOVE      TRANDESC,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L105
          IF        APIN1END=0
            MOVE      APINDES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L106
          IF        APIN1END=0
            MOVE      APINCAT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L107
          IF        APIN1END=0
            MOVE      APINQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L108
          IF        APIN1END=0
            MOVE      APINUCT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L109
          IF        APIN1END=0
            MOVE      APINAMT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L110
          IF        APIN1END=0
            MOVE      APINGST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L111
          IF        APIN1END=0
            MOVE      SUPDES1,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L112
          IF        APIN1END=0
            MOVE      SUPDES2,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
DP02L600
          MATCH    "APIN1",NAMSSFFI
          GOTO     DP02L605 IF NOT EQUAL
          CALL      UPDTOT00
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SP1,VAR          
            CALL      DISPITEM
          ENDIF
          GOTO     DP02L999
DP02L605
DP02L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP02L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     FP02L105 IF NOT EQUAL
          PACK     KEY51,APIN1SKY,SP70
          CALL     RDAPIN1  * Start
          IF       OVRCD=0
            CALL     RPAPIN1  * Start
          ENDIF
          CALL     DP02L000
          GOTO     FP02L999
FP02L105
FP02L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP02L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     LP02L105 IF NOT EQUAL
          PACK     KEY51,APIN1SKY,Z70
          CALL     RSAPIN1  * End
          IF       OVRCD=1
            CALL     RPAPIN1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APIN1SNO
            CALL     RPAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP02L000
          GOTO     LP02L999
LP02L105
LP02L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP02L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     PP02L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP02L105
          CALL      RFTAPIN1
          BRANCH   OVRCD,PP02L115
          MOVE      APIN1MKY,KEY51 
          CALL      RSAPIN1 
PP02L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=APIN1SNO
            CALL     RPAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP02L000
          GOTO     PP02L999
PP02L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APIN1SNO
            CALL     RKAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP02L999
PP02L120
PP02L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP02L000
          MATCH    "APIN1",NAMSSFFI
          GOTO     NP02L115 IF NOT EQUAL
NP02L105
          CALL     RKAPIN1 
          BRANCH   OVRCD,NP02L110
          PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
          MATCH    APIN1EKY,APIN1MKY
          GOTO     NP02L110 IF NOT EQUAL
          CALL     RPAPIN1 
          CALL     DP02L000
          GOTO     NP02L999
NP02L110
          CALL     RPAPIN1 
          BEEP
          GOTO     NP02L999
NP02L115
NP02L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT02L000
CT02L105
CT02L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Payment Allocation for Non-Specific
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    29 Unique ID                          
.---------------------------------------------------------
UPTAPIN1
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      APIN1FL1,KEY5;ANS
          IF        @OVER
            WRITE     APIN1FL1,KEY5;SCPSROW,SCPSCOL,APIN1MKY
          ELSE
            UPDATE    APIN1FL1;SCPSROW,SCPSCOL,APIN1MKY
          ENDIF
          RETURN
RDTAPIN1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      APIN1FL1,KEY5;SCPSROW,SCPSCOL,APIN1MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTAPIN1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      APIN1FL1,KEY5;;
          READKS    APIN1FL1;SCPSROW,SCPSCOL,APIN1MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,APIN1MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Payment Allocation for Non-Specific
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      FP02L000
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Payment Allocation for Non-Specific
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L103,PS02L104,PS02L105:
                            PS02L106,PS02L107,PS02L108,PS02L109:
                            PS02L110,PS02L111,PS02L112,PS02L113:
                            PS02L114,PS02L115,PS02L999,PS02L116:
                            PS02L117,PS02L118,PS02L119,PS02L120:
                            PS02L121,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999
          GOTO     PS02L999
.
PS02L101
          MOVE      APIMCRD,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      APMACA1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      APMACA2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      APMACA3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      APMACPC,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      APMACTEL,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      APMACFAX,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          MOVE      APMACON,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      APIMREF,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          UNPACK    APIMTDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          MOVE      APIMTER,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L116
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L117
          MOVE      APIMDIS,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L118
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L119
          CALL      CALCA000
          MOVE      TOTALALL,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L120
          CALL      UPDTOT00
          MOVE      SP1,VAR          
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L121
          MOVE      SIORNAME,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Payment Allocation for Non-Specific
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L103,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L104,SF02L105,SF02L106:
                            SF02L006,SF02L006,SF02L107,SF02L108:
                            SF02L109
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L103,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      FP02L000
          GOTO     SF02L001
.
SF02L101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      SAPI0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L102
          CALL      DELORD00
          CALL      UPDTOT00
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
          CALL      SELECTED
          BRANCH    EXIT,SF02L001
          COMPARE   ONE,ACCEPT
          GOTO      SF02L001 IF EQUAL
          CALL      RDTAPIN1
          IF        OVRCD=1
            BEEP
            GOTO      SF02L001
          ENDIF
          MATCH     SP70,APIN1MKY
          IF        @EQUAL
            BEEP
            GOTO      SF02L001
          ENDIF
          MOVE      APIN1MKY,KEY51 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      DETS0000
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTAPIN1
          IF        OVRCD=1
            CALL      FP02L000
          ELSE
            MOVE      APIN1MKY,KEY51 
            CALL      RSAPIN1 
            CALL      RPAPIN1 
            CALL      DP02L000
          ENDIF
          GOTO     SF02L001
.
SF02L104
          CALL      DITEM000
          GOTO      SF02L001
.
SF02L105
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      NP02L000
          GOTO     SF02L001
.
SF02L106
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      PP02L000
          GOTO     SF02L001
.
SF02L107
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      FP02L000
          GOTO     SF02L001
.
SF02L108
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      LP02L000
          GOTO     SF02L001
.
SF02L109
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      ADDORD00
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF02L000
          GOTO      SF02L001
SF02L990  MOVE      ONE,EXIT * Exit Char Restart
SF02L999  RETURN
.--------------------------------
. Screen - Tran. Detail Non-Specific Creditor 
.--------------------------------
SC04L000
SC04L100
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC04L200
          CALL      CF04L000 * Clear Fields
SC04L300
          CALL      KY04L000 * Enter Key Fields
          BRANCH    EXIT,SC04L999,SC04L999
SC04L400
          CALL      WP04L000 * Load any WP Details
SC04L500
          CALL      LM04L000 * Load any Batch Details
SC04L600
          CALL      DF04L000 * Display Fields
SC04L700
          CALL      SF04L000 * Select Fields
          BRANCH    EXIT,SC04L100,SC04L100,SC04L200
SC04L800
SC04L900
SC04L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Tran. Detail Non-Specific Creditor 
.-------------------------------------------------------
CF04L000
CF04L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Tran. Detail Non-Specific Creditor 
.--------------------------------------------------------
KY04L000
          MOVE      ZERO,EXIT
          GOTO      KY04L999
.
KY04L900  MOVE      ONE,EXIT
KY04L999  RETURN
.---------------------------------------------------------
. Load WP files for : Tran. Detail Non-Specific Creditor 
.---------------------------------------------------------
WP04L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Tran. Detail Non-Specific Creditor 
.---------------------------------------------------------
LM04L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Tran. Detail Non-Specific Creditor 
.---------------------------------------------------------
DF04L000
          BRANCH   ACCEPT,DF04L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF04L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF04L900
          MATCH    PRGID,SCPSPID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF04L010 IF NOT EQUAL
.
          CALL     PS04L000 * Display Field
          GOTO     DF04L010
DF04L900
DF04L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Tran. Detail Non-Specific Creditor 
.---------------------------------------------------------
PS04L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS04L999,PS04L999,PS04L101,PS04L102:
                            PS04L103,PS04L104,PS04L105,PS04L999:
                            PS04L999,PS04L999,PS04L106,PS04L107:
                            PS04L108,PS04L109,PS04L110,PS04L111:
                            PS04L112,PS04L113,PS04L114,PS04L115:
                            PS04L116,PS04L117,PS04L999,PS04L999:
                           PS04L999,PS04L999,PS04L999,PS04L999:
                           PS04L999,PS04L999,PS04L999,PS04L118:
                            PS04L119,PS04L120
          GOTO     PS04L999
.
PS04L101
          MOVE      APINLED,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L102
          MOVE      APINACC,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L103
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L104
          MOVE      APINRES,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L105
          MOVE      APINDES,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L106
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L107
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L108
          MOVE      FMAMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L109
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L110
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L111
          MOVE      FMCSBNK,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L112
          MOVE      BANKNAME,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L113
          MOVE      FMCSCRD,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L114
          MOVE      CREDNAME,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L115
          MOVE      FMCSAGST,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L116
          MOVE      AGSTNAME,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L117
          MOVE      FMCACHQ,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L118
          MOVE      APINCGS,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L119
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L120
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
PS04L999
          RETURN
.---------------------------------------------------------
. Selections for : Tran. Detail Non-Specific Creditor 
.---------------------------------------------------------
SF04L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF04L001  BRANCH   ACCEPT,SF04L020
.
SF04L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L006,SF04L101,SF04L102,SF04L103:
                            SF04L104,SF04L105,SF04L106,SF04L107:
                            SF04L108,SF04L006,SF04L109,SF04L006:
                            SF04L006,SF04L006,SF04L006,SF04L006:
                            SF04L006,SF04L006,SF04L006,SF04L006:
                            SF04L006,SF04L006,SF04L006,SF04L006:
                           SF04L006,SF04L006,SF04L006,SF04L006:
                           SF04L006,SF04L006,SF04L006,SF04L110:
                            SF04L006,SF04L111
SF04L006  BEEP
          GOTO     SF04L005
SF04L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF04L090
          MATCH    PRGID,SCSLPID
          GOTO     SF04L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF04L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L020,SF04L020,SF04L102,SF04L103:
                            SF04L104,SF04L105,SF04L106,SF04L020:
                            SF04L020,SF04L020,SF04L109,SF04L020:
                            SF04L020,SF04L020,SF04L020,SF04L020:
                            SF04L020,SF04L020,SF04L020,SF04L020:
                            SF04L020,SF04L020,SF04L020,SF04L020:
                           SF04L020,SF04L020,SF04L020,SF04L020:
                           SF04L020,SF04L020,SF04L020,SF04L110:
                            SF04L020,SF04L111
          GOTO     SF04L020
SF04L090  MOVE     ZERO,ACCEPT
          GOTO     SF04L001
.
SF04L101
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L102
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L102
            ENDIF
            BRANCH    EXIT,SF04L102,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINLED,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L103
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMAMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSBNK 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,BANKNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSCRD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CREDNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSAGST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AGSTNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCACHQ 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      FMAMTY01
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMAM000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L103
            ENDIF
            BRANCH    EXIT,SF04L103,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          CALL      GETCON00
          MOVE      APINACC,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMAMDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSBNK,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      BANKNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSCRD,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CREDNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSAGST,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AGSTNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCACHQ,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L104
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMDS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L104
            ENDIF
            BRANCH    EXIT,SF04L104,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L105
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMRSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMRS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L105
            ENDIF
            BRANCH    EXIT,SF04L105,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINRES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMRSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      INVDES00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L106
            ENDIF
            BRANCH    EXIT,SF04L106,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINDES,VAR      
          CALL      DISPITEM
          GOTO     SF04L001
.
SF04L107
          CALL      WAPIN000
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L108
          CALL      DAPIN000
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      K04AMT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L109
            ENDIF
            BRANCH    EXIT,SF04L109,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     SF04L001
.
SF04L110
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,IBGSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGSTC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L110
            ENDIF
            BRANCH    EXIT,SF04L110,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINCGS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      IBGSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L111
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      K04GST00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L111
            ENDIF
            BRANCH    EXIT,SF04L111,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     SF04L001
SF04L990  MOVE      ONE,EXIT * Exit Char Restart
SF04L999  RETURN
.--------------------------------
. Screen - Non Specific Creditor Name&Address 
.--------------------------------
SC05L000
SC05L100
          MOVE      "05",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC05L200
          CALL      CF05L000 * Clear Fields
SC05L300
          CALL      KY05L000 * Enter Key Fields
          BRANCH    EXIT,SC05L999,SC05L999
SC05L400
          CALL      WP05L000 * Load any WP Details
SC05L500
          CALL      LM05L000 * Load any Batch Details
SC05L600
          CALL      DF05L000 * Display Fields
SC05L700
          CALL      SF05L000 * Select Fields
          BRANCH    EXIT,SC05L100,SC05L100,SC05L200
SC05L800
SC05L900
SC05L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Non Specific Creditor Name&Address 
.-------------------------------------------------------
CF05L000
          MOVE      SP70,APNSUNI 
          MOVE      SP70,APNSNA1 
          MOVE      SP70,APNSNA2 
          MOVE      SP70,APNSAD1 
          MOVE      SP70,APNSAD2 
          MOVE      SP70,APNSAD3 
          MOVE      SP70,APNSPC  
          MOVE      SP70,APNSABN 
          MOVE      ZERO,APNSGREG
CF05L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Non Specific Creditor Name&Address 
.--------------------------------------------------------
KY05L000
.
KY05L110
          CALL      MVBCH000
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KAPNSA00
          BRANCH    EXIT,KY05L900,KY05L900
          MOVE      OVRCD,ACCEPT
          MOVE      APNSUNI,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY05L999
.
KY05L900  MOVE      ONE,EXIT
KY05L999  RETURN
.---------------------------------------------------------
. Load WP files for : Non Specific Creditor Name&Address 
.---------------------------------------------------------
WP05L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Non Specific Creditor Name&Address 
.---------------------------------------------------------
LM05L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Non Specific Creditor Name&Address 
.---------------------------------------------------------
DF05L000
          BRANCH   ACCEPT,DF05L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF05L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF05L900
          MATCH    PRGID,SCPSPID
          GOTO     DF05L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF05L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF05L010 IF NOT EQUAL
.
          CALL     PS05L000 * Display Field
          GOTO     DF05L010
DF05L900
DF05L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Non Specific Creditor Name&Address 
.---------------------------------------------------------
PS05L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS05L999,PS05L101,PS05L102,PS05L103:
                            PS05L104,PS05L105,PS05L106,PS05L999:
                            PS05L999,PS05L999,PS05L107,PS05L108
          GOTO     PS05L999
.
PS05L101
          MOVE      APNSNA1,VAR      
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L102
          MOVE      APNSNA2,VAR      
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L103
          MOVE      APNSAD1,VAR      
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L104
          MOVE      APNSAD2,VAR      
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L105
          MOVE      APNSAD3,VAR      
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L106
          MOVE      APNSPC,VAR       
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L107
          MOVE      APNSABN,VAR      
          CALL      DISPITEM
          GOTO     PS05L999
.
PS05L108
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      APNSGREG,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS05L999
PS05L999
          RETURN
.---------------------------------------------------------
. Selections for : Non Specific Creditor Name&Address 
.---------------------------------------------------------
SF05L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF05L001  BRANCH   ACCEPT,SF05L020
.
SF05L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF05L006,SF05L101,SF05L102,SF05L103:
                            SF05L104,SF05L105,SF05L106,SF05L006:
                            SF05L107,SF05L108,SF05L109,SF05L110
SF05L006  BEEP
          GOTO     SF05L005
SF05L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF05L090
          MATCH    PRGID,SCSLPID
          GOTO     SF05L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF05L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF05L020,SF05L101,SF05L102,SF05L103:
                            SF05L104,SF05L105,SF05L106,SF05L020:
                            SF05L020,SF05L020,SF05L109,SF05L110
          GOTO     SF05L020
SF05L090  MOVE     ZERO,ACCEPT
          GOTO     SF05L001
.
SF05L101
          CALL     SELECTED
          STRIP     APNSNA1 
          SFORMAT   VAR,SCPSLEN
          MOVE      APNSNA1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APNSNA1 
          SFORMAT   VAR,127
          ENDSET    APNSNA1 
          APPEND    SP70,APNSNA1 
          RESET     APNSNA1 
          CMATCH    EXITCHAR,APNSNA1 
          GOTO      SF05L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,APNSNA1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L101
            ENDIF
          ENDIF
          MOVE      APNSNA1,VAR      
          CALL      DISPITEM
          GOTO     SF05L001
.
SF05L102
          CALL     SELECTED
          STRIP     APNSNA2 
          SFORMAT   VAR,SCPSLEN
          MOVE      APNSNA2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APNSNA2 
          SFORMAT   VAR,127
          ENDSET    APNSNA2 
          APPEND    SP70,APNSNA2 
          RESET     APNSNA2 
          CMATCH    EXITCHAR,APNSNA2 
          GOTO      SF05L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,APNSNA2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L102
            ENDIF
          ENDIF
          MOVE      APNSNA2,VAR      
          CALL      DISPITEM
          GOTO     SF05L001
.
SF05L103
          CALL     SELECTED
          STRIP     APNSAD1 
          SFORMAT   VAR,SCPSLEN
          MOVE      APNSAD1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APNSAD1 
          SFORMAT   VAR,127
          ENDSET    APNSAD1 
          APPEND    SP70,APNSAD1 
          RESET     APNSAD1 
          CMATCH    EXITCHAR,APNSAD1 
          GOTO      SF05L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,APNSAD1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L103
            ENDIF
          ENDIF
          MOVE      APNSAD1,VAR      
          CALL      DISPITEM
          GOTO     SF05L001
.
SF05L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KADD2000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L104
            ENDIF
            BRANCH    EXIT,SF05L104,SF05L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF05L990 IF EQUAL
          ENDIF
          MOVE      APNSAD2,VAR      
          CALL      DISPITEM
          GOTO     SF05L001
.
SF05L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KADD3000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L105
            ENDIF
            BRANCH    EXIT,SF05L105,SF05L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF05L990 IF EQUAL
          ENDIF
          MOVE      APNSAD3,VAR      
          CALL      DISPITEM
          GOTO     SF05L001
.
SF05L106
          CALL     SELECTED
          STRIP     APNSPC  
          SFORMAT   VAR,SCPSLEN
          MOVE      APNSPC,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APNSPC  
          SFORMAT   VAR,127
          ENDSET    APNSPC  
          APPEND    SP70,APNSPC  
          RESET     APNSPC  
          CMATCH    EXITCHAR,APNSPC  
          GOTO      SF05L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,APNSPC  
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L106
            ENDIF
          ENDIF
          MOVE      APNSPC,VAR       
          CALL      DISPITEM
          GOTO     SF05L001
.
SF05L107
          MOVE      ZERO,EXIT
          GOTO      SF05L999
.
SF05L108
          CALL      WAPNS000
          MOVE      ZERO,EXIT
          GOTO      SF05L999
.
SF05L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPABN00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L109
            ENDIF
            BRANCH    EXIT,SF05L109,SF05L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF05L990 IF EQUAL
          ENDIF
          MOVE      APNSABN,VAR      
          CALL      DISPITEM
          GOTO     SF05L001
.
SF05L110
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPREG00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF05L110
            ENDIF
            BRANCH    EXIT,SF05L110,SF05L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF05L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      APNSGREG,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF05L001
SF05L990  MOVE      ONE,EXIT * Exit Char Restart
SF05L999  RETURN
.--------------------------------
. Screen - Payment Header                     
.--------------------------------
SC06L000
SC06L100
          MOVE      "06",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          CALL      SBACK000 * Display Background
.
SC06L200
          CALL      CF06L000 * Clear Fields
SC06L300
          CALL      KY06L000 * Enter Key Fields
          BRANCH    EXIT,SC06L999,SC06L999
SC06L400
          CALL      WP06L000 * Load any WP Details
SC06L500
          CALL      LM06L000 * Load any Batch Details
SC06L600
          CALL      DF06L000 * Display Fields
SC06L700
          CALL      SF06L000 * Select Fields
          BRANCH    EXIT,SC06L100,SC06L100,SC06L200
SC06L800
SC06L900
SC06L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Payment Header                     
.-------------------------------------------------------
CF06L000
CF06L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Payment Header                     
.--------------------------------------------------------
KY06L000
          MOVE      ZERO,EXIT
          GOTO      KY06L999
.
KY06L900  MOVE      ONE,EXIT
KY06L999  RETURN
.---------------------------------------------------------
. Load WP files for : Payment Header                     
.---------------------------------------------------------
WP06L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Payment Header                     
.---------------------------------------------------------
LM06L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Payment Header                     
.---------------------------------------------------------
DF06L000
          BRANCH   ACCEPT,DF06L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF06L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF06L900
          MATCH    PRGID,SCPSPID
          GOTO     DF06L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF06L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF06L010 IF NOT EQUAL
.
          CALL     PS06L000 * Display Field
          GOTO     DF06L010
DF06L900
DF06L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Payment Header                     
.---------------------------------------------------------
PS06L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS06L101,PS06L102,PS06L103,PS06L104:
                            PS06L105,PS06L106,PS06L107,PS06L108:
                            PS06L109,PS06L110,PS06L111,PS06L112:
                            PS06L113,PS06L114,PS06L115,PS06L116:
                            PS06L117,PS06L118,PS06L119,PS06L120:
                            PS06L121,PS06L122,PS06L123,PS06L124:
                            PS06L125,PS06L126,PS06L127,PS06L128:
                            PS06L129,PS06L130,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L131:
                            PS06L132
          GOTO     PS06L999
.
PS06L101
          MOVE      CHEQUENO,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L102
          UNPACK    APIMDDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L103
          MOVE      APIMREF,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L104
          MOVE      CRDNAM80,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L105
          MOVE      CRDADD80,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L106
          MOVE      APIMCRD,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L107
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L108
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L109
          MOVE      APMACA1,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L110
          MOVE      APMACA2,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L111
          MOVE      APMACA3,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L112
          MOVE      APMACPC,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L113
          MOVE      APMACTEL,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L114
          MOVE      APMACFAX,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L115
          MOVE      APMACON,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L116
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          CALL      ALLTOT00
          GOTO     PS06L999
.
PS06L117
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          CALL      ALLTOT00
          GOTO     PS06L999
.
PS06L118
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L119
          MOVE      APIMTER,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L120
          MOVE      APPPDES,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L121
          MOVE      APIMCM1,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L122
          MOVE      APIMCM2,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L123
          MOVE      APIMICM,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L124
          MOVE      APBMBCH,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L125
          MOVE      BATCHCAL,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L126
          MOVE      APIMDIS,VAR      
          CALL      DISPITEM
          CALL      ALLTOT00
          GOTO     PS06L999
.
PS06L127
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L128
          MOVE      INVTOTAL,VAR     
          CALL      DISPITEM
          CALL      ALLTOT00
          GOTO     PS06L999
.
PS06L129
          MOVE      ALLTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L130
          MOVE      TOTALLOC,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L131
          MOVE      DOCTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L132
          MOVE      GSTALLOC,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
PS06L999
          RETURN
.---------------------------------------------------------
. Selections for : Payment Header                     
.---------------------------------------------------------
SF06L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF06L001  BRANCH   ACCEPT,SF06L020
.
SF06L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006
SF06L006  BEEP
          GOTO     SF06L005
SF06L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF06L090
          MATCH    PRGID,SCSLPID
          GOTO     SF06L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF06L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020
          GOTO     SF06L020
SF06L090  MOVE     ZERO,ACCEPT
          GOTO     SF06L001
SF06L990  MOVE      ONE,EXIT * Exit Char Restart
SF06L999  RETURN
.--------------------------------
. Screen - Non Specific Creditor Payment      
.--------------------------------
SCN1L000
SCN1L100
          MOVE      "N1",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "14",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SCN1L200
          CALL      CFN1L000 * Clear Fields
SCN1L300
          CALL      KYN1L000 * Enter Key Fields
          BRANCH    EXIT,SCN1L999,SCN1L999
SCN1L400
          CALL      WPN1L000 * Load any WP Details
SCN1L500
          CALL      LMN1L000 * Load any Batch Details
SCN1L600
          CALL      DFN1L000 * Display Fields
SCN1L700
          CALL      SFN1L000 * Select Fields
          BRANCH    EXIT,SCN1L100,SCN1L100,SCN1L200
SCN1L800
SCN1L900
SCN1L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Non Specific Creditor Payment      
.-------------------------------------------------------
CFN1L000
          MOVE      SP70,APIMIDT 
          MOVE      SP70,APIMCM1 
          MOVE      SP70,APIMCM2 
          MOVE      SP70,APIMICM 
          MOVE      ZERO,APIMTOT 
          MOVE      ZERO,APIMGST 
CFN1L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Non Specific Creditor Payment      
.--------------------------------------------------------
KYN1L000
          MOVE      ZERO,EXIT
          GOTO      KYN1L999
.
KYN1L900  MOVE      ONE,EXIT
KYN1L999  RETURN
.---------------------------------------------------------
. Load WP files for : Non Specific Creditor Payment      
.---------------------------------------------------------
WPN1L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Non Specific Creditor Payment      
.---------------------------------------------------------
LMN1L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Non Specific Creditor Payment      
.---------------------------------------------------------
DFN1L000
          BRANCH   ACCEPT,DFN1L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFN1L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFN1L900
          MATCH    PRGID,SCPSPID
          GOTO     DFN1L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFN1L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFN1L010 IF NOT EQUAL
.
          CALL     PSN1L000 * Display Field
          GOTO     DFN1L010
DFN1L900
DFN1L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Non Specific Creditor Payment      
.---------------------------------------------------------
PSN1L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSN1L101,PSN1L102,PSN1L103,PSN1L104:
                            PSN1L105,PSN1L106,PSN1L107,PSN1L999:
                           PSN1L999,PSN1L999,PSN1L999,PSN1L999:
                            PSN1L999,PSN1L999
          GOTO     PSN1L999
.
PSN1L101
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSN1L999
.
PSN1L102
          MOVE      APIMCM1,VAR      
          CALL      DISPITEM
          GOTO     PSN1L999
.
PSN1L103
          MOVE      APIMCM2,VAR      
          CALL      DISPITEM
          GOTO     PSN1L999
.
PSN1L104
          MOVE      APIMICM,VAR      
          CALL      DISPITEM
          GOTO     PSN1L999
.
PSN1L105
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          GOTO     PSN1L999
.
PSN1L106
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          GOTO     PSN1L999
.
PSN1L107
          CALL      CALCP000
          MOVE      PAYTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PSN1L999
PSN1L999
          RETURN
.---------------------------------------------------------
. Selections for : Non Specific Creditor Payment      
.---------------------------------------------------------
SFN1L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFN1L001  BRANCH   ACCEPT,SFN1L020
.
SFN1L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFN1L101,SFN1L102,SFN1L103,SFN1L104:
                            SFN1L105,SFN1L106,SFN1L006,SFN1L006:
                           SFN1L006,SFN1L006,SFN1L107,SFN1L108:
                            SFN1L109,SFN1L110
SFN1L006  BEEP
          GOTO     SFN1L005
SFN1L020  CALL     RKSCSL1
          BRANCH   OVRCD,SFN1L090
          MATCH    PRGID,SCSLPID
          GOTO     SFN1L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFN1L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFN1L101,SFN1L102,SFN1L103,SFN1L104:
                            SFN1L105,SFN1L106,SFN1L020,SFN1L020:
                           SFN1L020,SFN1L020,SFN1L020,SFN1L020:
                            SFN1L020,SFN1L020
          GOTO     SFN1L020
SFN1L090  MOVE     ZERO,ACCEPT
          GOTO     SFN1L001
.
SFN1L101
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EINDT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFN1L101
            ENDIF
            BRANCH    EXIT,SFN1L101,SFN1L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFN1L990 IF EQUAL
          ENDIF
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SFN1L001
.
SFN1L102
          CALL     SELECTED
          STRIP     APIMCM1 
          SFORMAT   VAR,SCPSLEN
          MOVE      APIMCM1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APIMCM1 
          SFORMAT   VAR,127
          ENDSET    APIMCM1 
          APPEND    SP70,APIMCM1 
          RESET     APIMCM1 
          CMATCH    EXITCHAR,APIMCM1 
          GOTO      SFN1L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,APIMCM1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFN1L102
            ENDIF
          ENDIF
          MOVE      APIMCM1,VAR      
          CALL      DISPITEM
          GOTO     SFN1L001
.
SFN1L103
          CALL     SELECTED
          STRIP     APIMCM2 
          SFORMAT   VAR,SCPSLEN
          MOVE      APIMCM2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APIMCM2 
          SFORMAT   VAR,127
          ENDSET    APIMCM2 
          APPEND    SP70,APIMCM2 
          RESET     APIMCM2 
          CMATCH    EXITCHAR,APIMCM2 
          GOTO      SFN1L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,APIMCM2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFN1L103
            ENDIF
          ENDIF
          MOVE      APIMCM2,VAR      
          CALL      DISPITEM
          GOTO     SFN1L001
.
SFN1L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KICM0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFN1L104
            ENDIF
            BRANCH    EXIT,SFN1L104,SFN1L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFN1L990 IF EQUAL
          ENDIF
          MOVE      APIMICM,VAR      
          CALL      DISPITEM
          GOTO     SFN1L001
.
SFN1L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETOIN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFN1L105
            ENDIF
            BRANCH    EXIT,SFN1L105,SFN1L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFN1L990 IF EQUAL
          ENDIF
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          GOTO     SFN1L001
.
SFN1L106
          CALL      CALCP000
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PAYTOTAL
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGST0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFN1L106
            ENDIF
            BRANCH    EXIT,SFN1L106,SFN1L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFN1L990 IF EQUAL
          ENDIF
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          CALL      CALCP000
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PAYTOTAL,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFN1L001
.
SFN1L107
          MOVE      ZERO,EXIT
          GOTO      SFN1L999
.
SFN1L108
          CALL      MODCRD00
          GOTO      SFN1L001
.
SFN1L109
          CALL      WPYNS000
          MOVE      ZERO,EXIT
          GOTO      SFN1L999
.
SFN1L110
          CALL      DAPIM000
          MOVE      ZERO,EXIT
          GOTO      SFN1L999
SFN1L990  MOVE      ONE,EXIT * Exit Char Restart
SFN1L999  RETURN
.--------------------------------
. Screen - Payment Creditor without Invoice   
.--------------------------------
SCPHL000
SCPHL100
          MOVE      "PH",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "14",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SCPHL200
          CALL      CFPHL000 * Clear Fields
SCPHL300
          CALL      KYPHL000 * Enter Key Fields
          BRANCH    EXIT,SCPHL999,SCPHL999
SCPHL400
          CALL      WPPHL000 * Load any WP Details
SCPHL500
          CALL      LMPHL000 * Load any Batch Details
SCPHL600
          CALL      DFPHL000 * Display Fields
SCPHL700
          CALL      SFPHL000 * Select Fields
          BRANCH    EXIT,SCPHL100,SCPHL100,SCPHL200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SCPHL800
SCPHL900
SCPHL999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Payment Creditor without Invoice   
.-------------------------------------------------------
CFPHL000
          MOVE      SP70,APINLED 
          MOVE      SP70,APIMICM 
          MOVE      SP70,APIMCM1 
          MOVE      SP70,APIMCM2 
          MOVE      ZERO,APIMTOT 
          MOVE      SP70,APINDIS 
          MOVE      SP70,APINRES 
CFPHL999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Payment Creditor without Invoice   
.--------------------------------------------------------
KYPHL000
          MOVE      ZERO,EXIT
          GOTO      KYPHL999
.
KYPHL900  MOVE      ONE,EXIT
KYPHL999  RETURN
.---------------------------------------------------------
. Load WP files for : Payment Creditor without Invoice   
.---------------------------------------------------------
WPPHL000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Payment Creditor without Invoice   
.---------------------------------------------------------
LMPHL000
          RETURN
.---------------------------------------------------------
. Display Fields for : Payment Creditor without Invoice   
.---------------------------------------------------------
DFPHL000
          BRANCH   ACCEPT,DFPHL999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFPHL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFPHL900
          MATCH    PRGID,SCPSPID
          GOTO     DFPHL900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFPHL900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFPHL010 IF NOT EQUAL
.
          CALL     PSPHL000 * Display Field
          GOTO     DFPHL010
DFPHL900
DFPHL999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Payment Creditor without Invoice   
.---------------------------------------------------------
PSPHL000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSPHL999,PSPHL101,PSPHL999,PSPHL999:
                            PSPHL999,PSPHL999,PSPHL102,PSPHL103:
                            PSPHL104,PSPHL105,PSPHL106,PSPHL107:
                            PSPHL108,PSPHL109,PSPHL110,PSPHL111
          GOTO     PSPHL999
.
PSPHL101
          MOVE      APINLED,VAR      
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL102
          MOVE      APIMICM,VAR      
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL103
          MOVE      APIMCM1,VAR      
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL104
          MOVE      APIMCM2,VAR      
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL105
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL106
          CALL      RSNAM000
          MOVE      FMLAPAY,VAR      
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL107
          MOVE      FMAMDESC,VAR     
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL108
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL109
          MOVE      APINRES,VAR      
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL110
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PSPHL999
.
PSPHL111
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PSPHL999
PSPHL999
          RETURN
.---------------------------------------------------------
. Selections for : Payment Creditor without Invoice   
.---------------------------------------------------------
SFPHL000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFPHL001  BRANCH   ACCEPT,SFPHL020
.
SFPHL005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFPHL006,SFPHL101,SFPHL102,SFPHL103:
                            SFPHL006,SFPHL006,SFPHL104,SFPHL105:
                            SFPHL106,SFPHL107,SFPHL006,SFPHL006:
                            SFPHL108,SFPHL109,SFPHL006,SFPHL006
SFPHL006  BEEP
          GOTO     SFPHL005
SFPHL020  CALL     RKSCSL1
          BRANCH   OVRCD,SFPHL090
          MATCH    PRGID,SCSLPID
          GOTO     SFPHL090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFPHL090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFPHL020,SFPHL101,SFPHL020,SFPHL020:
                            SFPHL020,SFPHL020,SFPHL104,SFPHL105:
                            SFPHL106,SFPHL107,SFPHL020,SFPHL020:
                            SFPHL108,SFPHL109,SFPHL020,SFPHL020
          GOTO     SFPHL020
SFPHL090  MOVE     ZERO,ACCEPT
          GOTO     SFPHL001
.
SFPHL101
          CALL      RSNAM000
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLAPAY 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMAMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSLED000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFPHL101
            ENDIF
            BRANCH    EXIT,SFPHL101,SFPHL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFPHL990 IF EQUAL
          ENDIF
          MOVE      APINLED,VAR      
          CALL      DISPITEM
          CALL      RSNAM000
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLAPAY,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMAMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFPHL001
.
SFPHL102
          CALL      DELS1000
          MOVE      ZERO,EXIT
          GOTO      SFPHL999
.
SFPHL103
          CALL      POSPH000
          MOVE      ZERO,EXIT
          GOTO      SFPHL999
.
SFPHL104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KICM0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFPHL104
            ENDIF
            BRANCH    EXIT,SFPHL104,SFPHL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFPHL990 IF EQUAL
          ENDIF
          MOVE      APIMICM,VAR      
          CALL      DISPITEM
          GOTO     SFPHL001
.
SFPHL105
          CALL     SELECTED
          STRIP     APIMCM1 
          SFORMAT   VAR,SCPSLEN
          MOVE      APIMCM1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APIMCM1 
          SFORMAT   VAR,127
          ENDSET    APIMCM1 
          APPEND    SP70,APIMCM1 
          RESET     APIMCM1 
          CMATCH    EXITCHAR,APIMCM1 
          GOTO      SFPHL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,APIMCM1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFPHL105
            ENDIF
          ENDIF
          MOVE      APIMCM1,VAR      
          CALL      DISPITEM
          GOTO     SFPHL001
.
SFPHL106
          CALL     SELECTED
          STRIP     APIMCM2 
          SFORMAT   VAR,SCPSLEN
          MOVE      APIMCM2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APIMCM2 
          SFORMAT   VAR,127
          ENDSET    APIMCM2 
          APPEND    SP70,APIMCM2 
          RESET     APIMCM2 
          CMATCH    EXITCHAR,APIMCM2 
          GOTO      SFPHL990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,APIMCM2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFPHL106
            ENDIF
          ENDIF
          MOVE      APIMCM2,VAR      
          CALL      DISPITEM
          GOTO     SFPHL001
.
SFPHL107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPHIN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFPHL107
            ENDIF
            BRANCH    EXIT,SFPHL107,SFPHL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFPHL990 IF EQUAL
          ENDIF
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          GOTO     SFPHL001
.
SFPHL108
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMDS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFPHL108
            ENDIF
            BRANCH    EXIT,SFPHL108,SFPHL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFPHL990 IF EQUAL
          ENDIF
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFPHL001
.
SFPHL109
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMRSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMRS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFPHL109
            ENDIF
            BRANCH    EXIT,SFPHL109,SFPHL990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFPHL990 IF EQUAL
          ENDIF
          MOVE      APINRES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMRSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFPHL001
SFPHL990  MOVE      FOUR,EXIT * Exit Char Exit
SFPHL999  RETURN
.--------------------------------
. Screen - Specific Creditor Valid Invoice    
.--------------------------------
SCS1L000
SCS1L100
          MOVE      "S1",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "14",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SCS1L200
          CALL      CFS1L000 * Clear Fields
SCS1L300
          CALL      KYS1L000 * Enter Key Fields
          BRANCH    EXIT,SCS1L999,SCS1L999
SCS1L400
          CALL      WPS1L000 * Load any WP Details
SCS1L500
          CALL      LMS1L000 * Load any Batch Details
SCS1L600
          CALL      DFS1L000 * Display Fields
SCS1L700
          CALL      SFS1L000 * Select Fields
          BRANCH    EXIT,SCS1L100,SCS1L100,SCS1L200
SCS1L800
SCS1L900
SCS1L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Specific Creditor Valid Invoice    
.-------------------------------------------------------
CFS1L000
CFS1L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Specific Creditor Valid Invoice    
.--------------------------------------------------------
KYS1L000
          MOVE      ZERO,EXIT
          GOTO      KYS1L999
.
KYS1L900  MOVE      ONE,EXIT
KYS1L999  RETURN
.---------------------------------------------------------
. Load WP files for : Specific Creditor Valid Invoice    
.---------------------------------------------------------
WPS1L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Specific Creditor Valid Invoice    
.---------------------------------------------------------
LMS1L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Specific Creditor Valid Invoice    
.---------------------------------------------------------
DFS1L000
          BRANCH   ACCEPT,DFS1L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFS1L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFS1L900
          MATCH    PRGID,SCPSPID
          GOTO     DFS1L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFS1L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFS1L010 IF NOT EQUAL
.
          CALL     PSS1L000 * Display Field
          GOTO     DFS1L010
DFS1L900
DFS1L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Specific Creditor Valid Invoice    
.---------------------------------------------------------
PSS1L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSS1L999,PSS1L999,PSS1L999,PSS1L999:
                            PSS1L101,PSS1L102,PSS1L103,PSS1L104:
                            PSS1L105,PSS1L106
          GOTO     PSS1L999
.
PSS1L101
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          GOTO     PSS1L999
.
PSS1L102
          CALL      CALCP000
          MOVE      PAYTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PSS1L999
.
PSS1L103
          MOVE      COMMENTI,VAR     
          CALL      DISPITEM
          GOTO     PSS1L999
.
PSS1L104
          MOVE      COMMENT1,VAR     
          CALL      DISPITEM
          GOTO     PSS1L999
.
PSS1L105
          MOVE      COMMENT2,VAR     
          CALL      DISPITEM
          GOTO     PSS1L999
.
PSS1L106
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          GOTO     PSS1L999
PSS1L999
          RETURN
.---------------------------------------------------------
. Selections for : Specific Creditor Valid Invoice    
.---------------------------------------------------------
SFS1L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFS1L001  BRANCH   ACCEPT,SFS1L020
.
SFS1L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFS1L006,SFS1L101,SFS1L102,SFS1L103:
                            SFS1L006,SFS1L006,SFS1L104,SFS1L105:
                            SFS1L106,SFS1L006
SFS1L006  BEEP
          GOTO     SFS1L005
SFS1L020  CALL     RKSCSL1
          BRANCH   OVRCD,SFS1L090
          MATCH    PRGID,SCSLPID
          GOTO     SFS1L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFS1L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFS1L020,SFS1L020,SFS1L020,SFS1L020:
                            SFS1L020,SFS1L020,SFS1L104,SFS1L105:
                            SFS1L106,SFS1L020
          GOTO     SFS1L020
SFS1L090  MOVE     ZERO,ACCEPT
          GOTO     SFS1L001
.
SFS1L101
          CALL      WPYSC000
          MOVE      ZERO,EXIT
          GOTO      SFS1L999
.
SFS1L102
          CALL      DELS1000
          MOVE      ZERO,EXIT
          GOTO      SFS1L999
.
SFS1L103
          CALL      POSS1000
          MOVE      ZERO,EXIT
          GOTO      SFS1L999
.
SFS1L104
          CALL      DISS1000
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KICM0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS1L104
            ENDIF
            BRANCH    EXIT,SFS1L104,SFS1L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFS1L990 IF EQUAL
          ENDIF
          MOVE      COMMENTI,VAR     
          CALL      DISPITEM
          GOTO     SFS1L001
.
SFS1L105
          CALL     SELECTED
          STRIP     COMMENT1
          SFORMAT   VAR,SCPSLEN
          MOVE      COMMENT1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,COMMENT1
          SFORMAT   VAR,127
          ENDSET    COMMENT1
          APPEND    SP70,COMMENT1
          RESET     COMMENT1
          CMATCH    EXITCHAR,COMMENT1
          GOTO      SFS1L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,COMMENT1
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS1L105
            ENDIF
          ENDIF
          MOVE      COMMENT1,VAR     
          CALL      DISPITEM
          GOTO     SFS1L001
.
SFS1L106
          CALL     SELECTED
          STRIP     COMMENT2
          SFORMAT   VAR,SCPSLEN
          MOVE      COMMENT2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,COMMENT2
          SFORMAT   VAR,127
          ENDSET    COMMENT2
          APPEND    SP70,COMMENT2
          RESET     COMMENT2
          CMATCH    EXITCHAR,COMMENT2
          GOTO      SFS1L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,COMMENT2
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS1L106
            ENDIF
          ENDIF
          MOVE      COMMENT2,VAR     
          CALL      DISPITEM
          GOTO     SFS1L001
SFS1L990  MOVE      ONE,EXIT * Exit Char Restart
SFS1L999  RETURN
.--------------------------------
. Screen - Modify Invoice Payment Screen      
.--------------------------------
SCS2L000
SCS2L100
          MOVE      "S2",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SCS2L200
          CALL      CFS2L000 * Clear Fields
SCS2L300
          CALL      KYS2L000 * Enter Key Fields
          BRANCH    EXIT,SCS2L999,SCS2L999
SCS2L400
          CALL      WPS2L000 * Load any WP Details
SCS2L500
          CALL      LMS2L000 * Load any Batch Details
SCS2L600
          CALL      DFS2L000 * Display Fields
SCS2L700
          CALL      SFS2L000 * Select Fields
          BRANCH    EXIT,SCS2L100,SCS2L100,SCS2L200
SCS2L800
SCS2L900
SCS2L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Modify Invoice Payment Screen      
.-------------------------------------------------------
CFS2L000
CFS2L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Modify Invoice Payment Screen      
.--------------------------------------------------------
KYS2L000
          MOVE      ZERO,EXIT
          GOTO      KYS2L999
.
KYS2L900  MOVE      ONE,EXIT
KYS2L999  RETURN
.---------------------------------------------------------
. Load WP files for : Modify Invoice Payment Screen      
.---------------------------------------------------------
WPS2L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Modify Invoice Payment Screen      
.---------------------------------------------------------
LMS2L000
.---------------------------------------------------------
. Load for :    29 Unique ID                          
.---------------------------------------------------------
          UNPACK    SP70,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE      KEY51,APIN1EKY
          STRIP     APIN1SKY
          SETLPTR   APIN1EKY,40
          MOVE      APIN1EKY,APIN1SKY
          CALL      RDAPIN1 
          IF        OVRCD=0
            CALL      RPAPIN1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DPS2L000
          MOVE     ZERO,APIN1CNT
          MOVE     ZERO,APIN1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DPS2L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DPS2L600
          MATCH    PRGID,SCPSPID
          GOTO     DPS2L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DPS2L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DPS2L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DPS2L010,DPS2L010,DPS2L010,DPS2L010:
                            DPS2L010,DPS2L010,DPS2L010,DPS2L010:
                            DPS2L010,DPS2L010,DPS2L010,DPS2L010:
                            DPS2L010,DPS2L010,DPS2L010,DPS2L010:
                            DPS2L010,DPS2L010,DPS2L010,DPS2L010:
                           DPS2L010,DPS2L010,DPS2L010,DPS2L010:
                            DPS2L010,DPS2L010,DPS2L010,DPS2L010:
                           DPS2L101,DPS2L102,DPS2L103,DPS2L104:
                            DPS2L010,DPS2L010,DPS2L105,DPS2L106:
                            DPS2L107,DPS2L108,DPS2L109,DPS2L110:
                            DPS2L010,DPS2L111,DPS2L112,DPS2L010:
                           DPS2L010,DPS2L010,DPS2L010,DPS2L010:
                            DPS2L010,DPS2L010
          GOTO      DPS2L010
.
DPS2L101
          PACK      APIN1MKY,SP70,SP70
          CALL      UPTAPIN1
          IF        APIN1END=0
            CALL      RKAPIN1 
            IF        OVRCD=0
              PACK      APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
              MATCH     APIN1EKY,APIN1MKY
              IF        @EQUAL
                MOVE      ZERO,APIN1END
                ADD       ONE,APIN1CNT
                CALL      UPTAPIN1
          CALL      S2DET000
                MOVE      APINLIN,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,APIN1END
              ENDIF
            ELSE
              MOVE      ONE,APIN1END
            ENDIF
          ENDIF
          IF        APIN1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L102
          IF        APIN1END=0
            MOVE      APINORD,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L103
          IF        APIN1END=0
            MOVE      LEDACDES,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L104
          IF        APIN1END=0
            MOVE      TRANDESC,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L105
          IF        APIN1END=0
            MOVE      APINDES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L106
          IF        APIN1END=0
            MOVE      APINCAT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L107
          IF        APIN1END=0
            MOVE      APINQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L108
          IF        APIN1END=0
            MOVE      APINUCT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L109
          IF        APIN1END=0
            MOVE      APINAMT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L110
          IF        APIN1END=0
            MOVE      APINGST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L111
          IF        APIN1END=0
            MOVE      SUPDES1,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
.
DPS2L112
          IF        APIN1END=0
            MOVE      SUPDES2,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPS2L010
DPS2L600
          MATCH    "APIN1",NAMSSFFI
          GOTO     DPS2L605 IF NOT EQUAL
          CALL      UPDTOT00
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SP1,VAR          
            CALL      DISPITEM
          ENDIF
          GOTO     DPS2L999
DPS2L605
DPS2L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FPS2L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     FPS2L105 IF NOT EQUAL
          PACK     KEY51,APIN1SKY,SP70
          CALL     RDAPIN1  * Start
          IF       OVRCD=0
            CALL     RPAPIN1  * Start
          ENDIF
          CALL     DPS2L000
          GOTO     FPS2L999
FPS2L105
FPS2L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LPS2L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     LPS2L105 IF NOT EQUAL
          PACK     KEY51,APIN1SKY,Z70
          CALL     RSAPIN1  * End
          IF       OVRCD=1
            CALL     RPAPIN1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APIN1SNO
            CALL     RPAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DPS2L000
          GOTO     LPS2L999
LPS2L105
LPS2L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PPS2L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     PPS2L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PPS2L105
          CALL      RFTAPIN1
          BRANCH   OVRCD,PPS2L115
          MOVE      APIN1MKY,KEY51 
          CALL      RSAPIN1 
PPS2L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=APIN1SNO
            CALL     RPAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DPS2L000
          GOTO     PPS2L999
PPS2L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APIN1SNO
            CALL     RKAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PPS2L999
PPS2L120
PPS2L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NPS2L000
          MATCH    "APIN1",NAMSSFFI
          GOTO     NPS2L115 IF NOT EQUAL
NPS2L105
          CALL     RKAPIN1 
          BRANCH   OVRCD,NPS2L110
          PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
          MATCH    APIN1EKY,APIN1MKY
          GOTO     NPS2L110 IF NOT EQUAL
          CALL     RPAPIN1 
          CALL     DPS2L000
          GOTO     NPS2L999
NPS2L110
          CALL     RPAPIN1 
          BEEP
          GOTO     NPS2L999
NPS2L115
NPS2L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CTS2L000
CTS2L105
CTS2L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Modify Invoice Payment Screen      
.---------------------------------------------------------
.---------------------------------------------------------
. Display Fields for : Modify Invoice Payment Screen      
.---------------------------------------------------------
DFS2L000
          BRANCH   ACCEPT,DFS2L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFS2L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFS2L900
          MATCH    PRGID,SCPSPID
          GOTO     DFS2L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFS2L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFS2L010 IF NOT EQUAL
.
          CALL     PSS2L000 * Display Field
          GOTO     DFS2L010
DFS2L900
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      FPS2L000
DFS2L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Modify Invoice Payment Screen      
.---------------------------------------------------------
PSS2L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSS2L999,PSS2L999,PSS2L999,PSS2L101:
                            PSS2L102,PSS2L103,PSS2L104,PSS2L105:
                            PSS2L106,PSS2L107,PSS2L108,PSS2L109:
                            PSS2L110,PSS2L111,PSS2L112,PSS2L113:
                            PSS2L114,PSS2L999,PSS2L999,PSS2L999:
                           PSS2L999,PSS2L999,PSS2L999,PSS2L115:
                            PSS2L999,PSS2L999,PSS2L999,PSS2L999:
                           PSS2L999,PSS2L999,PSS2L999,PSS2L999:
                            PSS2L999,PSS2L999,PSS2L999,PSS2L999:
                            PSS2L999,PSS2L999,PSS2L999,PSS2L999:
                            PSS2L999,PSS2L999,PSS2L999,PSS2L999:
                           PSS2L999,PSS2L999,PSS2L999,PSS2L999:
                            PSS2L999,PSS2L999
          GOTO     PSS2L999
.
PSS2L101
          MOVE      APIMCRD,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L102
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L103
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L104
          MOVE      APMACA1,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L105
          MOVE      APMACA2,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L106
          MOVE      APMACA3,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L107
          MOVE      APMACPC,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L108
          MOVE      APMACTEL,VAR     
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L109
          MOVE      APMACFAX,VAR     
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L110
          MOVE      APMACON,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L111
          MOVE      APIMREF,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L112
          UNPACK    APIMDDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L113
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L114
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          GOTO     PSS2L999
.
PSS2L115
          CALL      UPDTOT00
          MOVE      SP1,VAR          
          CALL      DISPITEM
          GOTO     PSS2L999
PSS2L999
          RETURN
.---------------------------------------------------------
. Selections for : Modify Invoice Payment Screen      
.---------------------------------------------------------
SFS2L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFS2L001  BRANCH   ACCEPT,SFS2L020
.
SFS2L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFS2L006,SFS2L101,SFS2L102,SFS2L006:
                            SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                            SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                            SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                            SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                           SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                            SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                           SFS2L103,SFS2L006,SFS2L006,SFS2L006:
                            SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                            SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                            SFS2L006,SFS2L006,SFS2L006,SFS2L006:
                           SFS2L006,SFS2L104,SFS2L105,SFS2L106:
                            SFS2L107,SFS2L108
SFS2L006  BEEP
          GOTO     SFS2L005
SFS2L020  CALL     RKSCSL1
          BRANCH   OVRCD,SFS2L090
          MATCH    PRGID,SCSLPID
          GOTO     SFS2L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFS2L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                           SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                           SFS2L103,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                           SFS2L020,SFS2L020,SFS2L020,SFS2L020:
                            SFS2L020,SFS2L020
          GOTO     SFS2L020
SFS2L090  MOVE     ZERO,ACCEPT
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      FPS2L000
          GOTO     SFS2L001
.
SFS2L101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      SAVE0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SFS2L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SFS2L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SFS2L999
          ENDIF
          MOVE      "S2",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DFS2L000
          ENDIF
          GOTO      SFS2L001
.
SFS2L102
          CALL      DELORD00
          CALL      UPDTOT00
          MOVE      ZERO,EXIT
          GOTO      SFS2L999
.
SFS2L103
          CALL      SELECTED
          BRANCH    EXIT,SFS2L001
          COMPARE   ONE,ACCEPT
          GOTO      SFS2L001 IF EQUAL
          CALL      RDTAPIN1
          IF        OVRCD=1
            BEEP
            GOTO      SFS2L001
          ENDIF
          MATCH     SP70,APIN1MKY
          IF        @EQUAL
            BEEP
            GOTO      SFS2L001
          ENDIF
          MOVE      APIN1MKY,KEY51 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      S2SEL000
          MOVE      "S2",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTAPIN1
          IF        OVRCD=1
            CALL      FPS2L000
          ELSE
            MOVE      APIN1MKY,KEY51 
            CALL      RSAPIN1 
            CALL      RPAPIN1 
            CALL      DPS2L000
          ENDIF
          GOTO     SFS2L001
.
SFS2L104
          CALL      S2DIL000
          GOTO      SFS2L001
.
SFS2L105
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      NPS2L000
          GOTO     SFS2L001
.
SFS2L106
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      PPS2L000
          GOTO     SFS2L001
.
SFS2L107
          MOVE      "     ",NAMSSFFI
          MOVE      "     ",ITMSSFFI
          CALL      FPS2L000
          GOTO     SFS2L001
.
SFS2L108
          MOVE      "     ",NAMSSFFI
          MOVE      "     ",ITMSSFFI
          CALL      LPS2L000
          GOTO     SFS2L001
SFS2L990  MOVE      ONE,EXIT * Exit Char Restart
SFS2L999  RETURN
.--------------------------------
. Screen - Sundry Details Modification        
.--------------------------------
SCS4L000
SCS4L100
          MOVE      "S4",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SCS4L200
          CALL      CFS4L000 * Clear Fields
SCS4L300
          CALL      KYS4L000 * Enter Key Fields
          BRANCH    EXIT,SCS4L999,SCS4L999
SCS4L400
          CALL      WPS4L000 * Load any WP Details
SCS4L500
          CALL      LMS4L000 * Load any Batch Details
SCS4L600
          CALL      DFS4L000 * Display Fields
SCS4L700
          CALL      SFS4L000 * Select Fields
          BRANCH    EXIT,SCS4L100,SCS4L100,SCS4L200
SCS4L800
SCS4L900
SCS4L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Sundry Details Modification        
.-------------------------------------------------------
CFS4L000
CFS4L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Sundry Details Modification        
.--------------------------------------------------------
KYS4L000
          MOVE      ZERO,EXIT
          GOTO      KYS4L999
.
KYS4L900  MOVE      ONE,EXIT
KYS4L999  RETURN
.---------------------------------------------------------
. Load WP files for : Sundry Details Modification        
.---------------------------------------------------------
WPS4L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Sundry Details Modification        
.---------------------------------------------------------
LMS4L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Sundry Details Modification        
.---------------------------------------------------------
DFS4L000
          BRANCH   ACCEPT,DFS4L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFS4L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFS4L900
          MATCH    PRGID,SCPSPID
          GOTO     DFS4L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFS4L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFS4L010 IF NOT EQUAL
.
          CALL     PSS4L000 * Display Field
          GOTO     DFS4L010
DFS4L900
DFS4L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Sundry Details Modification        
.---------------------------------------------------------
PSS4L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSS4L999,PSS4L999,PSS4L101,PSS4L102:
                            PSS4L103,PSS4L104,PSS4L999,PSS4L999:
                            PSS4L999,PSS4L105,PSS4L106,PSS4L107:
                            PSS4L108,PSS4L109,PSS4L110,PSS4L111:
                            PSS4L112,PSS4L113,PSS4L114,PSS4L115:
                            PSS4L116,PSS4L117,PSS4L118,PSS4L119:
                            PSS4L999,PSS4L999,PSS4L999,PSS4L999:
                           PSS4L999,PSS4L999,PSS4L999,PSS4L120:
                            PSS4L121,PSS4L122
          GOTO     PSS4L999
.
PSS4L101
          MOVE      APINLED,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L102
          MOVE      APINACC,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L103
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L104
          MOVE      APINRES,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L105
          MOVE      ORIGTRAN,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L106
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L107
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L108
          MOVE      FMAMDESC,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L109
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L110
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L111
          MOVE      FMCSBNK,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L112
          MOVE      BANKNAME,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L113
          MOVE      FMCSCRD,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L114
          MOVE      CREDNAME,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L115
          MOVE      FMCSAGST,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L116
          MOVE      AGSTNAME,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L117
          MOVE      FMCACHQ,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L118
          MOVE      ORGBATCH,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L119
          MOVE      ORGDOCRE,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L120
          MOVE      APINCGS,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L121
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PSS4L999
.
PSS4L122
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     PSS4L999
PSS4L999
          RETURN
.---------------------------------------------------------
. Selections for : Sundry Details Modification        
.---------------------------------------------------------
SFS4L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFS4L001  BRANCH   ACCEPT,SFS4L020
.
SFS4L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFS4L006,SFS4L101,SFS4L102,SFS4L103:
                            SFS4L104,SFS4L105,SFS4L006,SFS4L106:
                            SFS4L107,SFS4L006,SFS4L108,SFS4L006:
                            SFS4L006,SFS4L006,SFS4L006,SFS4L006:
                            SFS4L006,SFS4L006,SFS4L006,SFS4L006:
                            SFS4L006,SFS4L006,SFS4L006,SFS4L006:
                            SFS4L006,SFS4L006,SFS4L006,SFS4L006:
                           SFS4L006,SFS4L006,SFS4L006,SFS4L006:
                            SFS4L006,SFS4L109
SFS4L006  BEEP
          GOTO     SFS4L005
SFS4L020  CALL     RKSCSL1
          BRANCH   OVRCD,SFS4L090
          MATCH    PRGID,SCSLPID
          GOTO     SFS4L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFS4L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFS4L020,SFS4L020,SFS4L102,SFS4L103:
                            SFS4L104,SFS4L105,SFS4L020,SFS4L020:
                            SFS4L020,SFS4L020,SFS4L108,SFS4L020:
                            SFS4L020,SFS4L020,SFS4L020,SFS4L020:
                            SFS4L020,SFS4L020,SFS4L020,SFS4L020:
                            SFS4L020,SFS4L020,SFS4L020,SFS4L020:
                            SFS4L020,SFS4L020,SFS4L020,SFS4L020:
                           SFS4L020,SFS4L020,SFS4L020,SFS4L020:
                            SFS4L020,SFS4L109
          GOTO     SFS4L020
SFS4L090  MOVE     ZERO,ACCEPT
          GOTO     SFS4L001
.
SFS4L101
          MOVE      ZERO,EXIT
          GOTO      SFS4L999
.
SFS4L102
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS4L102
            ENDIF
            BRANCH    EXIT,SFS4L102,SFS4L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFS4L990 IF EQUAL
          ENDIF
          MOVE      APINLED,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFS4L001
.
SFS4L103
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMAMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSBNK 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,BANKNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSCRD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CREDNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSAGST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AGSTNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCACHQ 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      FMAMTY01
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMAM000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS4L103
            ENDIF
            BRANCH    EXIT,SFS4L103,SFS4L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFS4L990 IF EQUAL
          ENDIF
          CALL      GETCON00
          MOVE      APINACC,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMAMDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSBNK,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      BANKNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSCRD,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CREDNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSAGST,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AGSTNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCACHQ,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SFS4L001
.
SFS4L104
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMDS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS4L104
            ENDIF
            BRANCH    EXIT,SFS4L104,SFS4L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFS4L990 IF EQUAL
          ENDIF
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFS4L001
.
SFS4L105
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMRSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMRS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS4L105
            ENDIF
            BRANCH    EXIT,SFS4L105,SFS4L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFS4L990 IF EQUAL
          ENDIF
          MOVE      APINRES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMRSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SFS4L001
.
SFS4L106
          CALL      WAPIN000
          MOVE      ZERO,EXIT
          GOTO      SFS4L999
.
SFS4L107
          CALL      DAPIN000
          MOVE      ZERO,EXIT
          GOTO      SFS4L999
.
SFS4L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      K04AMT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS4L108
            ENDIF
            BRANCH    EXIT,SFS4L108,SFS4L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFS4L990 IF EQUAL
          ENDIF
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     SFS4L001
.
SFS4L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      K04GST00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS4L109
            ENDIF
            BRANCH    EXIT,SFS4L109,SFS4L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFS4L990 IF EQUAL
          ENDIF
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     SFS4L001
SFS4L990  MOVE      ONE,EXIT * Exit Char Restart
SFS4L999  RETURN
.--------------------------------
. Screen - New Purchase Order Transaction     
.--------------------------------
SCS7L000
SCS7L100
          MOVE      "S7",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 7",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SCS7L200
          CALL      CFS7L000 * Clear Fields
SCS7L300
          CALL      KYS7L000 * Enter Key Fields
          BRANCH    EXIT,SCS7L999,SCS7L999
SCS7L400
          CALL      WPS7L000 * Load any WP Details
SCS7L500
          CALL      LMS7L000 * Load any Batch Details
SCS7L600
          CALL      DFS7L000 * Display Fields
SCS7L700
          CALL      SFS7L000 * Select Fields
          BRANCH    EXIT,SCS7L100,SCS7L100,SCS7L200
SCS7L800
SCS7L900
SCS7L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : New Purchase Order Transaction     
.-------------------------------------------------------
CFS7L000
CFS7L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for New Purchase Order Transaction     
.--------------------------------------------------------
KYS7L000
          MOVE      ZERO,EXIT
          GOTO      KYS7L999
.
KYS7L900  MOVE      ONE,EXIT
KYS7L999  RETURN
.---------------------------------------------------------
. Load WP files for : New Purchase Order Transaction     
.---------------------------------------------------------
WPS7L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : New Purchase Order Transaction     
.---------------------------------------------------------
LMS7L000
          RETURN
.---------------------------------------------------------
. Display Fields for : New Purchase Order Transaction     
.---------------------------------------------------------
DFS7L000
          BRANCH   ACCEPT,DFS7L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFS7L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFS7L900
          MATCH    PRGID,SCPSPID
          GOTO     DFS7L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFS7L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFS7L010 IF NOT EQUAL
.
          CALL     PSS7L000 * Display Field
          GOTO     DFS7L010
DFS7L900
DFS7L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : New Purchase Order Transaction     
.---------------------------------------------------------
PSS7L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSS7L101,PSS7L102,PSS7L103,PSS7L104:
                            PSS7L105,PSS7L106,PSS7L107,PSS7L108:
                            PSS7L109,PSS7L110,PSS7L111,PSS7L112:
                            PSS7L113,PSS7L114,PSS7L115,PSS7L116:
                            PSS7L117,PSS7L999,PSS7L999,PSS7L999:
                            PSS7L999,PSS7L118,PSS7L119,PSS7L120:
                            PSS7L121,PSS7L122,PSS7L123,PSS7L124:
                            PSS7L125,PSS7L126,PSS7L127,PSS7L128:
                            PSS7L129,PSS7L130,PSS7L131,PSS7L132:
                            PSS7L133,PSS7L134,PSS7L135,PSS7L136:
                            PSS7L137,PSS7L138,PSS7L139,PSS7L140:
                            PSS7L141,PSS7L142,PSS7L143,PSS7L144
          GOTO     PSS7L999
.
PSS7L101
          MOVE      APINLED,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L102
          MOVE      APINACC,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L103
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L104
          MOVE      APINRES,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L105
          MOVE      ORGDOCRE,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L106
          MOVE      APINCAT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L107
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L108
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L109
          MOVE      ORGBATCH,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L110
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L111
          MOVE      FMAMDESC,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L112
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L113
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L114
          MOVE      FMCSBNK,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L115
          MOVE      BANKNAME,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L116
          MOVE      FMCSCRD,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L117
          MOVE      CREDNAME,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L118
          MOVE      SIPFITM,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L119
          MOVE      SIPFREC,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L120
          UNPACK    SIPFDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L121
          MOVE      SIPFDEL,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L122
          MOVE      SIPFQTY,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L123
          MOVE      SIPFCST,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L124
          MOVE      SIPFSUT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L125
          UNPACK    SIPFNDD,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L126
          UNPACK    SIPFDUP,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L127
          MOVE      SIPFUDT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L128
          MOVE      SIPCCST,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L129
          MOVE      SIPCPRD,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L130
          MOVE      SIPCDAT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L131
          MOVE      SIPCWAR,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L132
          MOVE      SIPCCAT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L133
          MOVE      SIPCPN,VAR       
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L134
          MOVE      SIPCPD,VAR       
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L135
          MOVE      SIPCCON,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L136
          UNPACK    SIPCCDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L137
          MOVE      SIPCSUT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L138
          UNPACK    SIPCEDD,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L139
          MOVE      SIPCOQT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L140
          MOVE      SIPCECT,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L141
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L142
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L143
          MOVE      SISCDES,VAR      
          CALL      DISPITEM
          GOTO     PSS7L999
.
PSS7L144
          MOVE      ORIGTRAN,VAR     
          CALL      DISPITEM
          GOTO     PSS7L999
PSS7L999
          RETURN
.---------------------------------------------------------
. Selections for : New Purchase Order Transaction     
.---------------------------------------------------------
SFS7L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFS7L001  BRANCH   ACCEPT,SFS7L020
.
SFS7L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L006,SFS7L101,SFS7L102:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L103,SFS7L104,SFS7L105:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006:
                            SFS7L006,SFS7L006,SFS7L006,SFS7L006
SFS7L006  BEEP
          GOTO     SFS7L005
SFS7L020  CALL     RKSCSL1
          BRANCH   OVRCD,SFS7L090
          MATCH    PRGID,SCSLPID
          GOTO     SFS7L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFS7L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L101,SFS7L102:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020:
                            SFS7L020,SFS7L020,SFS7L020,SFS7L020
          GOTO     SFS7L020
SFS7L090  MOVE     ZERO,ACCEPT
          GOTO     SFS7L001
.
SFS7L101
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KS3AMT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS7L101
            ENDIF
            BRANCH    EXIT,SFS7L101,SFS7L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SFS7L990 IF EQUAL
          ENDIF
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     SFS7L001
.
SFS7L102
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,APINGST 
          IF        SCPSMAN=1
            COMPARE   ZERO,APINGST 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SFS7L102
            ENDIF
          ENDIF
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     SFS7L001
.
SFS7L103
          CALL      POSAV000
          MOVE      ZERO,EXIT
          GOTO      SFS7L999
.
SFS7L104
          CALL      PODEL000
          MOVE      ZERO,EXIT
          GOTO      SFS7L999
.
SFS7L105
          MOVE      ZERO,EXIT
          GOTO      SFS7L999
SFS7L990  MOVE      ONE,EXIT * Exit Char Restart
SFS7L999  RETURN
.@@@@@ Function Restart Point @@@@@
.**********************************************************************
. Check if proposed payments in progress (Exit program if so)
. General Routine (nb : CKPPI000 + CKPPU000 is for Invoice Input)
.**********************************************************************
CKPPY000  MATCH     "IBAAPS18",PRGID
          IF        @EQUAL
            CALL      TFILENAM
            MOVE      TFILNAME,FNAMPOST
          ENDIF
.
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS
          MOVE      IBCNUBAS,BASFLAG
          MOVE      SP3,BASDESC
          IF        BASFLAG=1
            MOVE      "BAS",BASDESC
          ENDIF
.
          MOVE      "9999999999999999999999999999999999999999",KEY40
          CALL      RDAPIM1            * check if proposed payments active
          BRANCH    OVRCD,CKPPY999
.
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO50
          PACK      FMCOTACC,FMCOTACC,SP70
          REP       " 0",FMCOTACC
.
          MATCH     "3",FMCOTACC       * full access allowed ?
          GOTO      CKPPY999 IF EQUAL
.
          MOVE      "ACCESS DENIED - Proposed Payments In Progress - ",DISPMSG
          CALL      MESSAGE1
.
          MATCH     "1426",PASSCODE    * sneaky delete of payments file
          GOTO      CKPPY900 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKPPY900 IF NOT EQUAL
.
          MOVE      "HELLO IBA - Delete Proposed Payments File ? ",DISPMSG
          CALL      MESSAGE4           * does iba want to delete auto pay file ?
          BRANCH    EXIT,CKPPY999
.
          CALL      DELAP000           * delete file if possible
          GOTO      CKPPY000
.
CKPPY900
          CLOCK      FORK,KEY2         * exit program
          MATCH      " 0",KEY2
          IF         @EQUAL
            CHAIN       PGM
          ELSE
            STOP
          ENDIF
.
CKPPY999  READ       CONTROLF,SIXTY3;*85,INCOSTYP
          RETURN
.
KILL0000  CLEAR     COMMAND
          APPEND    "iserase ",COMMAND
          APPEND    APIN1FNM,COMMAND
          RESET     COMMAND
          EXECUTE   COMMAND,TASKID
.
KILL9999  RETURN

.----------------------------------------------------------------------
. Read FMS Control File Parameters
.----------------------------------------------------------------------
FMSCON00  CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CALL      RDFMCO66
.
          READ       CONTROLF,TWENTY3;*95,HACCNT
          READ       CONTROLF,ZERO;*85,IBCNUGST
.
          PACK       KEY2,SP70
          CALL       RSFMLA1
          CALL       RKFMLA1
          BRANCH     OVRCD,FMSERR01
.
FMSCON10  MATCH      SP70,FMLABNK
          GOTO       FMSERR02 IF EQUAL
          MATCH      SP70,FMLACRD
          GOTO       FMSERR03 IF EQUAL
          MATCH      SP70,FMLAAGST
          GOTO       FMSERR04 IF EQUAL
.
          CALL       RKFMLA1
          COMPARE    ZERO,OVRCD
          GOTO       FMSCON10 IF EQUAL
.
          RETURN
.
FMSERR01  DISPLAY    *P1:24,*EL,"No Ledgers Found - ";
          CALL       HITENTER
          GOTO       FATALERR
.
FMSERR02  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"Bank Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSERR03  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"Creditors Control Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSERR04  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"G.S.T. Control Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSCOS00  MOVE       ONE,EXIT
          PACK       KEY15,FMLALEDG,ONE,SP70
          CALL       RSFMAM2
          CALL       RKFMAM2
          BRANCH     OVRCD,FMSCOS99
.
          MATCH      "6",FMAMTYPE
          RETURN     IF NOT LESS
.
          MOVE       ZERO,EXIT
.
FMSCOS99  RETURN
.----------------------------------------
. Read Batch Header Details
.----------------------------------------
GBAT0000
          PACK      KEY5,APBMBCH       * check if batch exists
          CALL      RDAPBM1
          BRANCH    OVRCD,GBAT5000
.
          MOVE      APBMLED,KEY2
          CALL      RDFMLA1
          MOVE      APBMDIS,KEY5
          CALL      RDFMDS1
          MOVE      APBMRES,KEY4
          CALL      RDFMRS1
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
          MOVE      APBMOPR,KEY4
          CALL      RDPASS1
.
. Calculate Batch Total
.----------------------
          MOVE      ZERO,ACCEPT
          MOVE      ZERO,OVRCD
          MOVE      ZERO,BATCHCAL
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
GBAT0150
          CALL      RKAPIM1
          BRANCH    OVRCD,GBAT9999
          MATCH     APBMBCH,APIMBCH
          GOTO      GBAT9999 IF NOT EQUAL
          ASSIGN    APIMTOT+APIMGST-APIMDIS+BATCHCAL,BATCHCAL
          GOTO      GBAT0150
.
. Insert Setup Defaults
.----------------------
GBAT5000  MOVE      ONE,ACCEPT
.
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMLALEDG,APBMLED
.
          MOVE      SP70,KEY5
          CALL      RSFMDS1
          CALL      RKFMDS1
          MOVE      FMDSCODE,APBMDIS
.
          MOVE      SP70,KEY4
          CALL      RSFMRS1
          CALL      RKFMRS1
          MOVE      FMRSCODE,APBMRES
.
GBAT9999  RETURN
.----------------------------------------
. Read Batch Header Details
.----------------------------------------
GBDES000
          BRANCH    ACCEPT,GBDES999         * skip if in accept mode
.
          MOVE      APBMLED,KEY2
          CALL      RDFMLA1
          MOVE      APBMDIS,KEY5
          CALL      RDFMDS1
          MOVE      APBMRES,KEY4
          CALL      RDFMRS1
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
.
GBDES999  RETURN
.----------------------------------------------------------------------
. Save Header Details
.----------------------------------------------------------------------
POSTHEAD
          MATCH     "New  ",APBMBCH
          GOTO      PHED0100 IF NOT EQUAL
          MOVE      SP70,APBMUDT
PHED0010
          CALL      RDFMCOPA
          MOVE      FMBPABAT,APBMBCH
          MATCH     "00000",APBMBCH
          GOTO      PHED0010 IF EQUAL
          PACK      KEY5,APBMBCH
          CALL      RAAPBM1
          COMPARE   ZERO,OVRCD
          GOTO      PHED0010 IF EQUAL         * Must not be on file
          CALL      RAFMBC1
          COMPARE   ZERO,OVRCD
          GOTO      PHED0010 IF EQUAL         * Must not be on file
.
PHED0100  MOVE     APBMBCH,APIMBCH
          PACK     KEY5,APBMBCH
          MOVE     "PY",APBMTYP
          CALL     RAAPBM1
          IF       OVRCD=0
            CALL     UPAPBM1
          ELSE
            CALL     WRAPBM1
            CALL     RLAPBM1
          ENDIF
.
          CALL     SC01L000
.
          MOVE      ZERO,BATCHCAL
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
PHED1000
          CALL      RKAPIM1
          BRANCH    OVRCD,PHED1100
          MATCH     APBMBCH,APIMBCH
          GOTO      PHED1100 IF NOT EQUAL
          ASSIGN    APIMTOT+APIMGST-APIMDIS+BATCHCAL,BATCHCAL
          GOTO      PHED1000
.
PHED1100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      APBMBCH,APIMBCH
          MOVE      APIMBCH,VAR
          CALL      DISPITEM
          MOVE      ZERO,ACCEPT
          CALL      DF00L000 * Display Fields
.
          RETURN
.
.----------------------------------------------------------------------
. Delete Batch
.----------------------------------------------------------------------
DELBCH00
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          CALL      DELQST
          COMPARE   ONE,CEXIT
          GOTO      DELBCH90 IF NOT EQUAL
.
          MOVE      APBMBCH,KEY5
          CALL      RDAPBM1
          IF        OVRCD=0
            CALL      DEAPBM1
          ENDIF
.
DELBCH10
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
          CALL      RKAPIM1
          BRANCH    OVRCD,DELBCH20
          MATCH     APIMBCH,APBMBCH
          GOTO      DELBCH20 IF NOT EQUAL
.
          PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF
          CALL      DEAPCL1
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      DEAPIM1
          GOTO      DELBCH10
DELBCH20
          PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1
          CALL      RKAPIN1
          BRANCH    OVRCD,DELBCH30
          MATCH     APINBCH,APBMBCH
          GOTO      DELBCH30 IF NOT EQUAL
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL      DEAPIN1
          GOTO      DELBCH20
DELBCH30
          MOVE      TWO,EXIT
          GOTO      DELBCH99
.
DELBCH90  MOVE      ONE,EXIT
          CALL      MESSAGE3
          GOTO      DELBCH99
.
DELBCH99  RETURN
.----------------------------------------------------------------------
. Keyin Batch Number (enter=next batch)
.----------------------------------------------------------------------
KAPBCH00
          MOVE      ZERO,CKEYTYP
          MOVE      "PY",APBMTYP
          CALL      KAPBMZ00
          BRANCH    EXIT,KAPBC800,KAPBC999  * Exit 1=null 2=exitchar
.
KAPBC100  PACK      KEY5,APBMBCH            * Pack Key for Read Lock
          CALL      RLAPBM1                 * Lock Record if On File
          BRANCH    OVRCD,KAPBC999,KAPBC200 * OVRCD 1=Not on File 2=Locked
.                                           * Record Now Lock
          MATCH     "PY",APBMTYP
          GOTO      KAPBC300 IF NOT EQUAL
.
          PACK      FMCHDES,SP70
          PACK      KEY15,APBMCHQ,SP70
          CALL      RDFMCH1
.
          MATCH     SP8,APBMUDT
          GOTO      KAPBC700 IF EQUAL
          MATCH     "00000000",APBMUDT
          GOTO      KAPBC700 IF EQUAL
          GOTO      KAPBC750
.
KAPBC200  MOVE      SP70,DISPMSG            * Save Line 24
          CALL      MESSAGE2                * and Prompt for Retry
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      KAPBC100 IF EQUAL       * Retry Read with Lock
          MATCH     ANSX,ANS
          GOTO      KAPBC200 IF NOT EQUAL   * Invalid Entry
          GOTO      KAPBCH00                * Return to Keyin
.
KAPBC300  CLEAR     DISPMSG                 * Save Line 24
          APPEND    "Batch Type Invalid. ",DISPMSG
          APPEND    APBMTYP,DISPMSG
          APPEND    " - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          GOTO      KAPBCH00                * Return to Keyin
.
KAPBC700  MOVE      ZERO,ACCEPT
          MOVE      ZERO,OVRCD
          GOTO      KAPBC900
.-------------------------------------------------
. Batch Already Updated
.-------------------------------------------------
KAPBC750  MOVE      SP70,DISPMSG
          UNPACK    APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          CLEAR     DISPMSG
          APPEND    "Batch Updated on the ",DISPMSG
          APPEND    CPCDATE,DISPMSG
          APPEND    " Changes NOT Possible - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          GOTO      KAPBCH00                * Return to Keyin
.---------------------------------------------------
. Get Next Batch Number (Null Entry)
.---------------------------------------------------
KAPBC800  MOVE      ZERO,EXIT
          MOVE      ZERO,BATCHCAL
          MOVE      "New  ",APBMBCH
          PACK      APBMDAT,CCC,CYY,CMM,CDD
          REP       " 0",APBMDAT              * Date Entered
          MOVE      PASSCODE,APBMOPR
          MOVE      APBMOPR,KEY4
          CALL      RDPASS1
.
          MOVE      SP70,KEY5               * Set up Defaults in case
          MOVE      SP70,KEY4               * They are not entered
          MOVE      SP70,KEY2
          CALL      RSFMDS1
          CALL      RKFMDS1
          CALL      RSFMRS1
          CALL      RKFMRS1
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMRSCODE,APBMRES
          MOVE      FMDSCODE,APBMDIS
          MOVE      FMLALEDG,APBMLED
          MOVE      SP70,FMLADESC
          MOVE      SP70,FMDSDESC
          MOVE      SP70,FMRSDESC
.
          MOVE      ONE,ACCEPT
          MOVE      ONE,OVRCD
.
KAPBC900  MOVE      APBMBCH,APIMBCH
          MOVE      SP70,LASTCRED
          MOVE      SP70,LASTINV
          MOVE      ZERO,LASTTOT
.
KAPBC999  RETURN
.
.----------------------------------------------------------------------
. Enter Accounting Period Date
.----------------------------------------------------------------------
APDATE00  MATCH     SP8,APBMADT             * any date entered yet
          IF        @EQUAL
            MOVE      CCC,CCENT
            MOVE      CYY,CYEAR
            MOVE      CMM,CMON
            MOVE      CDD,CDAY * default to todays date
            PACK      APBMADT,CCENT,CYEAR,CMON,CDAY
            REP       " 0",APBMADT
          ELSE
            UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          ENDIF
.
          CALL      KEYDATE                 * keyin posting date
          BRANCH    OVRCD,APDATE00
          BRANCH    CQUEST,APDATE00
          PACK      APBMADT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",APBMADT
.
          ENDSET    FMLALEDG
          APPEND    SP2,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP2,FMLALEDG
          IF        @EQUAL
            MOVE      SP2,KEY2
            CALL      RSFMLA1
            CALL      RKFMLA1
          ELSE
            MOVE      FMLALEDG,KEY2
            CALL      RDFMLA1
          ENDIF
.
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
          IF        EXIT=0
            MOVE      PERDESC,WKDTDESC
            UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,WKDTPDAT
            IF        PERLOCK=1
              BEEP
              CLEAR     DISPMSG
              APPEND    "Period is Locked - ",DISPMSG
              RESET     DISPMSG
              CALL      MESSAGE1
              GOTO      APDATE00
            ENDIF
          ELSE
            MOVE      ERRMSG,DISPMSG
            CALL      MESSAGE1
            GOTO      APDATE00
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Enter Batch Total
.----------------------------------------------------------------------
EBTOT000  IF        ACCEPT=1
            MOVE      ZERO,APBMTOT
          ENDIF
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,APBMTOT
          RETURN
.----------------------------------------------------------------------
. List Batch - Summary
.----------------------------------------------------------------------
LSTBCH00  CLOSE     FMSAMAA1
          CLOSE     FMSAMAA2
          CLOSE     FMSAMAA3
          CLOSE     FMSAMAA4
          OPEN      IBACODE1,"ibacodef"
...       OPEN      IBAPRNT1,"ibaprntf"                               *C-239574
          CALL      OPNPRINT
          MOVE      ZERO,CPAGENO
          MOVE      "88",CLNO
          CLOCK     TIME,CTIMEIS
          PACK      KEY40,APBMBCH,SP70
          MOVE      SP70,KEY5
          CALL      RSAPIM1
LSTBCH10
          CALL      RKAPIM1
          BRANCH    OVRCD,LSTBCH90
          MATCH     APIMBCH,APBMBCH
          GOTO      LSTBCH90 IF NOT EQUAL
          ASSIGN    APIMTOT-APIMDIS+APIMGST,INVTOTAL
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEDBCH00 IF NOT LESS
          MATCH     APIMCRD,KEY5
          IF        !@EQUAL
            MOVE    APIMCRD,KEY5
            MATCH   "~~",APIMCRD
            IF      @EQUAL
              UNPACK  KEY5,KEY2,KEY3
              PACK    KEY8,APIMBCH,KEY3
              CALL    RDAPNS1
              PRINT     "| ",KEY5,SP1,APNSNA1,*80,"|"
            ELSE
              CALL    RDAPMA1
              PRINT     "| ",APMACRD,SP1,APMACN1,*80,"|"
            ENDIF
            ADD     ONE,CLNO
          ENDIF
          PRINT     "|",*32,APIMDOC,*48,APIMREF,*64,INVTOTAL," |"
          GOTO      LSTBCH10
.
LSTBCH90  IF        CPAGENO>0
            CALL      UND80
            PRINT     *25,"*** End of List ***"
            CALL      SELPRINT
            CALL      CLSPRINT
            MOVE      THREE,EXIT
          ELSE
            MOVE      "No Entries in That Batch - ",DISPMSG
            CALL      MESSAGE1
            CALL      CLSPRINT
            MOVE      ONE,EXIT
          ENDIF
          CLOSE     IBACODE1
...       CLOSE     IBAPRNT1
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      ZERO,CPRTFLG
          MOVE      SP8,SPLFILE          * Make Sure a New File Allocated for
          RETURN                         * New Print ie Cheques
.
HEDBCH00
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,KEY10
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      KEY12,CPCDATE,SP70
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CALL      HEAD80
          PRINT     "Batch Number  : ",APBMBCH,*35,"Operator          : ":
                    SECUSER
          PRINT     "Date Entered  : ",KEY10,*35,"Accounting Period : ",KEY12:
                    PERDESC
          PRINT     "Total Entered : ",APBMTOT,*35,"Calculated Total  : ":
                    BATCHCAL
          CALL      UND80
          PRINT     "| Creditor                     Cheque":
                    " No.      Invoice Ref.            Payment |"
          CALL      UND80
          MOVE      "7",CLNO
          RETURN


.**********************************************************************
. Batch print routine
.   Requires : APSBCHDF
.              IBACRAFD & IO and CREDMAST open
.              IHAPASSF open
.              IBACODFD & IO
.              IBAPRNFD & IO and IBAPRINT
.**********************************************************************
APSBCHPR  BRANCH    NOPRINT,APBCPR10   * no printer selection ?
          OPEN      IBACODE1,"ibacodef"
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
          CALL      OPNPRINT
.
APBCPR10  MOVE      ZERO,CPAGENO
          CALL      APBF0000           * format batch
          CALL      APBP0000           * print batch
          BRANCH    NOPRINT,APBCPR99   * no printer selection ?
.
          IF        CPAGENO>0
            CALL      SELPRINT
            CALL      CLSPRINT
          ELSE
            MOVE      "Nothing to Print !! - ",DISPMSG
            CALL      MESSAGE1
            CALL      CLSPRINT
          ENDIF
          CLOSE     IBACODE1
...       CLOSE     IBAPRNT1                                          *D-239574
.
          MOVE      ZERO,CPRTFLG    * Make Sure a New Spool File is
          MOVE      SP8,SPLFILE     * Allocated for the Next Print
APBCPR99  RETURN
.
.*********************************************************************
.*                         APBF0000                                  *
.*                  Format the batch data                            *
.*********************************************************************
.
APBF0000  CLEAR     BATDESC
          MATCH      "CR",APBMTYP
          GOTO       APBF1200 IF NOT EQUAL
          MOVE       "Credit Notes      ",BATDESC
          GOTO        APBF2000
.
APBF1200  MATCH      "IN",APBMTYP
          GOTO       APBF1300 IF NOT EQUAL
          MOVE       "Invoices          ",BATDESC
          GOTO        APBF2000
.
APBF1300  MATCH      "PY",APBMTYP
          GOTO       APBF1400 IF NOT EQUAL
          MOVE       "Payments          ",BATDESC
          GOTO        APBF2000
.
APBF1400  MATCH      "CC",APBMTYP
          GOTO       APBF1500 IF NOT EQUAL
          MOVE       "Cancelled Payments",BATDESC
          GOTO       APBF2000
.
APBF1500  MATCH      "PP",APBMTYP
          GOTO       APBF2000 IF NOT EQUAL
          MOVE       "Prompt Payments   ",BATDESC
          GOTO       APBF2000
.
APBF2000  CLEAR      DIM28
.
.----- Format the post date ----
.
          UNPACK     APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK       POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP        " 0",POSTDATE
.
.----- get the financial period description and end date ----
.
          MOVE      APBMADT,WORKDATE
          PACK      KEY2,APBMLED
          CALL      RDFMLA1
          CALL      CFYR0000
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMDAT
          UNPACK     APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       ENTRDATE,CPCDATE,SP70
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMUDT
          MOVE       "Batch Awaiting Update",STATDESC
.
          MATCH      "0000000000",APBMUDT
          GOTO       APBF5000 IF EQUAL
.
          MOVE       "Batch Updated ",STATDESC
          UNPACK     APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       STATDESC,STATDESC,CPCDATE,SP70
.
.----- get user description -----
.
APBF5000  CLEAR      SECUSER
          PACK       KEY4,APBMOPR
          CALL       RDPASS1
.
APBF9999  RETURN
.
.*********************************************************************
.*                          APBP0000                                 *
.*                     Print a single batch                          *
.*********************************************************************
APBP0000  CALL      IBACLOCK
.
          DISPLAY   *P1:24,*EL,"Printing Batch : ",*V2LON,APBMBCH;
.
          MOVE      ZERO,TOTDEBS       * initialise total debits
          MOVE      SP70,LASTCRD
          MOVE      SP70,LASTDOC
          MOVE      Z70,LASTREF
          CALL      HEAD0000           * print header
.
APBP3000  PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1            * go to start of records
.
APBP3100  CALL      RKAPIN1            * go to start of records
          BRANCH    OVRCD,APBP7000     * no more records ?
          MATCH     APINBCH,APBMBCH
          GOTO      APBP7000 IF NOT EQUAL
.
          CALL      PGST0000
.
          MOVE      SP70,APIMTER
          MOVE      ZERO,APIMTOT
          MOVE      ZERO,APIMDIS
          MOVE      ZERO,APIMGST
          PACK      KEY40,APINBCH,APINCRD,APINREF,APINDOC,SP70
          CALL      RDAPIM1
.
          MOVE      APINCRD,LASTCRD
          MOVE      APINDOC,LASTDOC
          MOVE      APINREF,LASTREF
.
          CALL      PLIN0000             * print the report line
          GOTO      APBP3100
.
.---- print totals ----
.
APBP7000  MOVE      "~~~~~~~~~~~~~~~~~~~~",APINREF
          MOVE      "~~~~~~~~~~~~~~~~~~~~",APINDOC
          CALL      PGST0000
          MOVE      FORMAT2,OUTFORM2
          FEDIT     TOTDEBS,OUTFORM2
          PRINT     SP1
          CALL      UND132
          PRINT     *100,"Total : ",*113,OUTFORM2
          CALL      UND132
.
APBP9999  RETURN
.
.**********************************************************************
.  PGST - Print Gst Data                               Called By APBP
.**********************************************************************
PGST0000  MATCH     APINCRD,LASTCRD
          GOTO      PGST1000 IF NOT EQUAL
          MATCH     APINREF,LASTREF
          GOTO      PGST1000 IF NOT EQUAL
          MATCH     APINDOC,LASTDOC
          GOTO      PGST9999 IF EQUAL
.
PGST1000  MATCH     Z70,LASTREF
          GOTO      PGST9999 IF EQUAL
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          MATCH     ANSP,APIMPAYG
          IF        @EQUAL
            ASSIGN    APIMTOT-APIMDIS,APIMTOT
          ELSE
            ASSIGN    APIMTOT-APIMDIS+APIMGST,APIMTOT
          ENDIF
          ADD       APIMTOT,TOTDEBS        * add to debits
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APIMTOT,OUTFORM2
          PRINT     *113,OUTFORM2
.
PGST9999  RETURN
.**********************************************************************
.*                         HEAD0000                                   *
.*                  display the page heading                          *
.**********************************************************************
.
HEAD0000  MOVE      ONE,CNOUNDLN
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          PACK      CPHDROPT,SP70
          CALL      HEAD132
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APBMTOT,OUTFORM2
.
          PRINT        "Batch Number : ",APBMBCH:
                   *60,"Post to Date : ",POSTDATE,SP1,PERDESC,"Ending ",ENDDATE:
                    *N,"Batch Type   : ",APBMTYP,SP1,BATDESC:
                   *60,"Entered      : ",ENTRDATE," by ",SECUSER:
                    *N,"Batch Total  : ",OUTFORM2:
                   *60,"Status       : ",STATDESC
          CALL      UND132
.
          MOVE      "Document Ref   ",REFDESC1
          MOVE      "Invoice Number ",REFDESC2
          MATCH     "IN",APBMTYP
          IF        @EQUAL
            MOVE      "Invoice Number ",REFDESC1
            MOVE      "               ",REFDESC2
          ENDIF
          MATCH     "CR",APBMTYP
          IF        @EQUAL
            MOVE      "Credit Note    ",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
          MATCH     "PY",APBMTYP
          IF        @EQUAL
            MOVE      "Payment  Number",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
          MATCH     "CC",APBMTYP
          IF        @EQUAL
            MOVE      "Payment  Number",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
.
          PRINT     *1,"Creditor Code",*17,"Creditor Name",*50,REFDESC1:
                    *67,REFDESC2,*97,"        Posting":
                    *117,"    Transaction":
                    *N,*1,"Ledger/Account",*16,"Order No",*26,"Catalog":
                    *34,"Quantity":
                    *43," Diss",*49,"Resp",*54,BASDESC:
                    *65,"Transaction Description":
                    *97,"         Amount",*117,"         Amount"
.
          CALL      UND132
.
          ADD       FIVE,CLNO
.
HEAD9999  RETURN
.
.**********************************************************************
.*                         PLIN0000                                   *
.*                 Print the report lines                             *
.**********************************************************************
.
PLIN0000  COMPARE   "55",CLNO            * test for a full page
          CALL      UND132 IF NOT LESS
          COMPARE   "55",CLNO            * test for a full page
          CALL      HEAD0000 IF NOT LESS
.
.----- format the amount for printing ----
.
          CLEAR     DIM28
          PACK      KEY14,APINLED,APINACC
          UNPACK    SP70,FMAMDESC
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          MOVE      FMAMDESC,DIM28
.
          MOVE      APINQTY,IQUANT
.
.---- print supplier if desired ----
.
PLIN9100  PACK      APMACN1,SP70
          PACK      KEY5,APINCRD,SP70
          MATCH     "~~",KEY5
          GOTO      PLIN9150 IF NOT EQUAL
.
          CALL      GETBAT00            * Get Batch# for Non-Spec Cred Ret KEY8
          CALL      RDAPNS1
          MOVE      APNSNA1,APMACN1
          GOTO      PLIN9160
.
PLIN9150  CALL      RDAPMA1
.
PLIN9160  MATCH     APMACN1,LASTNAME
          GOTO      PLIN9200 IF EQUAL       * same as last creditor ?
.
          PACK      LASTNAME,APMACN1,SP70
          ADD       TWO,CLNO
          MATCH     SP70,REFDESC2           * print invoice ref ?
          IF        @EQUAL
            MOVE      SP70,INVREF
          ELSE
            MOVE      APINREF,INVREF
          ENDIF
          PRINT     *N,APINCRD,*17,APMACN1,*50,APINDOC,*67,INVREF;
          COMPARE   ZERO,APIMGST
          GOTO      PLIN9200 IF EQUAL
.
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APIMGST,OUTFORM2
          MATCH     ANSP,APIMPAYG
          IF        @EQUAL
            PRINT     *83,"P.A.Y.G. :",*93,OUTFORM2;
          ELSE
            PRINT     *83,"G.S.T.   :",*93,OUTFORM2;
          ENDIF
.
PLIN9200  MOVE      FORMAT2,OUTFORM2
          FEDIT     APINAMT,OUTFORM2
.
          MATCH     "~~",KEY5
          GOTO      PLIN9210 IF EQUAL
.
          MATCH     "Cheque Print",APIMDOC
          GOTO      PLIN9250 IF EQUAL
.
PLIN9210  CALL      GETSIN00
          IF        BASFLAG=1
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*54,APINBASC,*58,APINDES:
                      *93,OUTFORM2;
          ELSE
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*58,APINDES:
                      *93,OUTFORM2;
          ENDIF
          ADD       ONE,CLNO             * increment the row
          GOTO      PLIN9999
.
PLIN9250  CALL      GETSIN00
          UNPACK    APINDES,KEY5,KEY15,KEY8,KEY3,KEY1
          MOVE      KEY1,F1
          CLEAR     KEY34
          IF        F1=0
            APPEND    "IN Batch ",KEY34
          ELSE
            APPEND    "CR Batch ",KEY34
          ENDIF
          APPEND    KEY5,KEY34
          APPEND    " Ref ",KEY34
          STRIP     KEY15
          APPEND    KEY15,KEY34
          RESET     KEY34
          IF        BASFLAG=1
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*54,APINBASC,*58,KEY34:
                      *93,OUTFORM2;
          ELSE
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*58,KEY34:
                      *93,OUTFORM2;
          ENDIF
          ADD       ONE,CLNO             * increment the row
.
PLIN9999  RETURN
.
.----------------------------------------------------------------------
. Get Sin Catalog Code
.----------------------------------------------------------------------
GETSIN00  COMPARE   ONE,INCOSTYP
          GOTO      GETSIN99 IF NOT EQUAL
.
          MATCH     SP70,APINORD
          GOTO      GETSIN99 IF EQUAL
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1          * Read Inventory Directory
          BRANCH    OVRCD,GETSIN99
.
          MOVE      "sinpocaf",KEY8
          PACK      KEY80,APISDIR,KEY8
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SINPOCA1,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,GETSIN99
.
          MOVE      APINCAT,KEY3
          PACK      KEY10,KEY7,KEY3,SP70
          CALL      RDSIPC1
          BRANCH    OVRCD,GETSIN99
          MATCH     SP70,SIPCCAT
          IF        !@EQUAL
            MOVE      SIPCCAT,APINCAT
          ENDIF
.         CLOSE     SINPOCA1           srf 616745 & 641977
.
GETSIN99  RETURN
.----------------------------------------------------------------------
. Get the Payments Batch Number for Cancelled Cheques and Reinstatements
.----------------------------------------------------------------------
GETBAT00  UNPACK    KEY5,KEY2,KEY3
          PACK      KEY8,APINBCH,KEY3
.
          MATCH     "3",APIMTYP           * Cancelled Cheque
          CALL      IMSBCH00 IF EQUAL
.
          MATCH     "4",APIMTYP           * Reinstated Cheque
          CALL      IMSBCH00 IF EQUAL
.
GETBAT99  RETURN
.----------------------------------------------------------------------
. Get the Payments Batch Number from the apsimsaf file
. RETURNS   KEY8 set for reading non-spec. cred. apsnscaf file
.----------------------------------------------------------------------
. ------- Save Current Record Positions
IMSBCH00  PACK      KEY41,APINBCH,APINCRD,APINREF,APINDOC,SP70
          PACK      KEY52,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
.
. ------- Get Matching Payments Batch Number
          PACK      KEY40,APINCRD,APINDOC,APINREF,SP70
          CALL      RSAPIM4
.
IMSBCH10  CALL      RKAPIM4
          BRANCH    OVRCD,IMSBCH90
.
          PACK      KEY35,APINCRD,APINDOC,APINREF,SP70
          MATCH     KEY35,KEY40
          GOTO      IMSBCH90 IF NOT EQUAL
.
          MATCH     "2",APIMTYP
          GOTO      IMSBCH10 IF NOT EQUAL
.
          MOVE      APIMBCH,APINBCH         * Move in the payments batch number
          UNPACK    KEY5,KEY2,KEY3
          PACK      KEY8,APIMBCH,KEY3
.
. ------- Reset original position in the invoice files.
IMSBCH90  PACK      KEY40,KEY41
          CALL      RDAPIM1
.
          PACK      KEY51,KEY52
          CALL      RDAPIN1
.
IMSBCH99  RETURN
.----------------------------------------------------------------------
. Enter Cheque Account
.----------------------------------------------------------------------
KCHAC000
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
          CALL      RKAPIM1
          BRANCH    OVRCD,KCHAC900
          MATCH     APIMBCH,APBMBCH
          GOTO      KCHAC900 IF NOT EQUAL
.
          MOVE      "Transactions Exist - Field Cannot Be Modified - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCHAC999
.
KCHAC900  CALL      KFMCHA00
          MOVE      FMCHCHQ,APBMCHQ
.
KCHAC999  RETURN
.
.----------------------------------------------------------------------
. Save Header Details
.----------------------------------------------------------------------
DISPLAST
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      LASTCRED,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      LASTINV,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            IF        LASTTOT=0
              MOVE      SP70,VAR
            ELSE
              MOVE      LASTTOT,VAR
            ENDIF
            CALL      DISPITEM
          ENDIF
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APBMTOT,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            IF        BATCHCAL=0
              MOVE      SP70,VAR
            ELSE
              MOVE      BATCHCAL,VAR
            ENDIF
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APBMBCH,VAR
            CALL      DISPITEM
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Enter Creditor Code
.----------------------------------------------------------------------
KAPMA000  ENDSET   APMACRD
          APPEND   SP70,APMACRD
          RESET    APMACRD
          MATCH    SP70,APMACRD
          GOTO     KAPMA500 IF NOT EQUAL
          PACK     CRDNAM80,SP70,SP70
          PACK     CRDADD80,SP70,SP70
.
          OPEN     APSMXRA1,"apsmxraf"
          OPEN     APSMXRA2,"apsmxraf"
          MOVE     ZERO,CKEYTYP
          CALL     KAPMAZ00
          CLOSE    APSMXRA1
          CLOSE    APSMXRA2
          BRANCH   EXIT,KAPMA200,KAPMA999
          IF       APMAHPY=1
            MOVE     "Creditor On Hold for Payments - ",DISPMSG
            CALL     MESSAGE1
            MOVE     SP70,APMACRD
            GOTO     KAPMA000
          ENDIF
          MOVE     APMACRD,APIMCRD
          MOVE     ZERO,NOGST
          MOVE     ZERO,PAYASGO
.
          GOTO     KAPMA900
.
.         COMPARE  TWO,IBCNUGST
.         GOTO     KAPMA900 IF NOT EQUAL
.
.         MATCH    SP11,APMAABN
.         IF       @EQUAL
.           BEEP
.           MOVE     "WARNING: Payments for PAYG Creditor - ",DISPMSG
.           CALL     MESSAGE1
.         ENDIF
.
.         GOTO     KAPMA900
.
. Non Specific Creditor
.----------------------------------------
KAPMA200  MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          MOVE      APBMBCH,APNSBCH
          CALL      SC05L000
.
          CALL      PUTSCR00
.
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "    6",FLDID
          CALL      GETPOSIT
.
          PACK      KEY8,APBMBCH,APNSUNI
          CALL      RDAPNS1
          BRANCH    OVRCD,KAPMA000
          CALL      MAPNS000
          GOTO      KAPMA900
.
. Already have a creditor code
.----------------------------------------
KAPMA500  MATCH    "~~",APMACRD
          GOTO     KAPMA600 IF NOT EQUAL
          PACK     KEY8,APBMBCH,APNSUNI
          CALL     RDAPNS1
          IF       OVRCD=1
            MOVE     SP70,APIMCRD
            GOTO     KAPMA000
          ENDIF
          CALL     MAPNS000
          GOTO     KAPMA900
.
. Specific Creditor
.----------------------------------------
KAPMA600  MOVE     APMACRD,APIMCRD
          MOVE     APIMCRD,KEY5
          CALL     RDAPMA1
          IF       OVRCD=1
            MOVE     SP70,APMACRD
            MOVE     SP70,APIMCRD
            GOTO     KAPMA000
          ENDIF
.
KAPMA900  STRIP    APMACN1
          STRIP    APMACN2
          CLEAR    CRDNAM80
          APPEND   APMACN1,CRDNAM80
          APPEND   SP1,CRDNAM80
          APPEND   APMACN2,CRDNAM80
          RESET    CRDNAM80
.
          STRIP    APMACA1
          STRIP    APMACA2
          STRIP    APMACA3
          STRIP    APMACPC
          CLEAR    CRDADD80
          APPEND   APMACA1,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACA2,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACA3,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACPC,CRDADD80
          RESET    CRDADD80
          MOVE     ZERO,EXIT
.
KAPMA999  RETURN
.--------------------------------------------------
. Move Non Specific Creditor Details into Fields
.--------------------------------------------------
MAPNS000  MOVE     APNSNA1,APMACN1
          MOVE     APNSNA2,APMACN2
          MOVE     APNSAD1,APMACA1
          MOVE     APNSAD2,APMACA2
          MOVE     APNSAD3,APMACA3
          MOVE     APNSPC,APMACPC
          CLEAR    APMACRD
          APPEND   "~~",APMACRD
          APPEND   APNSUNI,APMACRD
          RESET    APMACRD
          MOVE     APMACRD,APIMCRD
.
          MOVE     SP70,APMATYP
          MOVE     SP70,APMASKY
          MOVE     SP70,APMACTEL
          MOVE     SP70,APMACFAX
          MOVE     SP70,APMACMOD
          MOVE     SP70,APMACEDI
          MOVE     SP70,APMACON
          MOVE     SP70,APMASN1
          MOVE     SP70,APMASN2
          MOVE     SP70,APMASA1
          MOVE     SP70,APMASA2
          MOVE     SP70,APMASA3
          MOVE     SP70,APMASPC
          MOVE     SP70,APMASTEL
          MOVE     SP70,APMASFAX
          MOVE     SP70,APMASMOD
          MOVE     SP70,APMASEDI
          MOVE     SP70,APMASCON
          MOVE     SP70,APMABSB
          MOVE     SP70,APMABAC
          MOVE     SP70,APMAPNM
          MOVE     ZERO,APMAPPT
          MOVE     ZERO,APMAPOT
          MOVE     ZERO,APMAHOR
          MOVE     ZERO,APMAHIN
          MOVE     ZERO,APMAHCR
          MOVE     ZERO,APMAHPY
          MOVE     ZERO,APMAPMT
          MOVE     ZERO,APMAGMT
          MOVE     SP70,APMAPPD
          MOVE     SP70,APMADTM
          MOVE     SP70,APMAUR1
          MOVE     SP70,APMAUR2
          MOVE     SP70,APMAUD1
          MOVE     SP70,APMAUD2
          MOVE     SP70,APMAUC1
          MOVE     SP70,APMAUC2
          MOVE     ZERO,APMAGREG
          MOVE     ZERO,APMAUY2
          MOVE     SP70,APMATSE
          MOVE     SP70,APMAABN
          MOVE     SP70,APMASPA
          RETURN
.---------------------------------------------------------------------------
.   System    :   Accounts Payable System
.   Include   :   APSMASKY
.   Routine   :   KAPMAA00 Keyin Creditor Code
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KAPMAZ00  TOPIC     "APMACRD "
          MOVE      UNDLN70,APMACRD
          KEYIN     *PCCOL:CVERT,*DV,APMACRD:
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,APMACRD:
                    *PCCOL:CVERT,*DV,APMACRD
.
          ENDSET    APMACRD
          APPEND    SP70,APMACRD
          RESET     APMACRD
.
          MATCH     SP70,APMACRD
          GOTO      KAPMAZ90 IF EQUAL
.
          MATCH     "0000E",APMACRD
          GOTO      KAPMAZ95 IF EQUAL
          MATCH     "0000e",APMACRD
          GOTO      KAPMAZ95 IF EQUAL
          MATCH     "0000X",APMACRD
          GOTO      KAPMAZ95 IF EQUAL
          MATCH     "0000x",APMACRD
          GOTO      KAPMAZ95 IF EQUAL
          ENDSET    APMACRD
          CMATCH    EXITCHAR,APMACRD
          GOTO      KAPMAZ95 IF EQUAL
.
          CMATCH    QUEST,APMACRD
          GOTO      KAPMAZ10 IF NOT EQUAL
.
          MOVE      "Creditor",APMAKMOD     * set for creditor keyin
          MOVE      CCITEM,SCCITEM
          CALL      HAPMAX00
          MOVE      SCCITEM,CCITEM
          BRANCH    OVRCD,KAPMAZ00
.
          ENDSET    APMACRD
          APPEND    SP70,APMACRD
          RESET     APMACRD
.
          MATCH     SP70,APMACRD
          GOTO      KAPMAZ00 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,APMACRD
.
KAPMAZ10  RESET     APMACRD
          PACK      KEY5,APMACRD
          CALL      RAAPMA1
          BRANCH    OVRCD,KAPMAZ80
          BRANCH    CKEYTYP,KAPMAZ75
          CALL      RDAPMA1
.
KAPMAZ70  MOVE      ZERO,EXIT
          GOTO      KAPMAZ99
.
KAPMAZ75  MOVE      "Creditor Code Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KAPMAZ00
.
KAPMAZ80  MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KAPMAZ99,KAPMAZ99
          MOVE      "Creditor Code Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KAPMAZ00
.
KAPMAZ90  MOVE      ONE,EXIT
          GOTO      KAPMAZ99
.
KAPMAZ95  MOVE      TWO,EXIT
KAPMAZ99  TOPIC     PRGID
          RETURN
.
.----------------------------------------------------------------------
. Enter Cheque Number
.----------------------------------------------------------------------
EDOCR000  ENDSET   DOCREF
          APPEND   SP70,DOCREF
          RESET    DOCREF
          MATCH    SP70,DOCREF
          GOTO     EDOCR800 IF NOT EQUAL
.
EDOCR010  MOVE     SP70,APIMREF
          MOVE     SP70,APIMDOC
          MOVE     ONE,CKEYTYP
          MOVE     "0",FMBNTYP
          MOVE     APBMCHQ,FMBNBNK
          MOVE     APMACRD,APIMCRD
          PACK     SAVKEY40,APMACRD,SP70
          MOVE     SP70,APIMDOC
          MOVE     SP70,CHEQUENO
          MOVE     ZERO,CHQTOTL
.
          CALL     KFMBNZ00
          MATCH    "~~",SAVKEY40
          IF       @EQUAL
            UNPACK   SAVKEY40,KEY2,KEY3
            PACK     KEY8,APBMBCH,KEY3
            CALL     RDAPNS1
            MOVE     SAVKEY40,APMACRD
            MOVE     SAVKEY40,APIMCRD
            MOVE     APNSNA1,APMACN1
            MOVE     APNSNA2,APMACN2
            MOVE     APNSAD1,APMACA1
            MOVE     APNSAD2,APMACA2
            MOVE     APNSAD3,APMACA3
            MOVE     APNSPC,APMACPC
          ELSE
            MOVE     SAVKEY40,KEY5
            CALL     RDAPMA1
          ENDIF
          BRANCH    EXIT,EDOCR030,EDOCR900
.
          CALL      CKDOC000
          IF        OVRCD=1
            MOVE      FMBNREF,KEY15
            SQUEEZE   KEY15
            CLEAR     DISPMSG
            APPEND    "Cheque ",DISPMSG
            APPEND    KEY15,DISPMSG
            APPEND    " Used in Batch ",DISPMSG
            APPEND    APCLBCH,DISPMSG
            APPEND    " For Cred ",DISPMSG
            APPEND    APCLCRD,DISPMSG
            APPEND    " - ",DISPMSG
            CALL      MESSAGE4
            BRANCH    EXIT,EDOCR010
          ENDIF
          GOTO     EDOCR040
.
EDOCR030  MOVE     "Cheque Print   ",FMBNREF
.
EDOCR040  MOVE     FMBNREF,APIMDOC
          MOVE     FMBNREF,DOCREF
          UNPACK   FMBNREF,KEY7,CHEQUENO
.
          MOVE     APIMDOC,DOCREF
          MOVE     APBMBCH,APIMBCH
          MOVE     APMACRD,APIMCRD
          PACK     KEY20,APIMCRD,APIMDOC,SP70
          PACK     KEY40,APIMCRD,APIMDOC,SP70
          CALL     RSAPIM4
EDOCR100  CALL     RKAPIM4
          BRANCH   OVRCD,EDOCR200
          PACK     KEY40,APIMCRD,APIMDOC,APIMREF,APIMBCH
          MATCH    KEY20,KEY40
          GOTO     EDOCR200 IF NOT EQUAL
          MATCH    "2",APIMTYP
          GOTO     EDOCR100 IF NOT EQUAL
          MATCH    APBMBCH,APIMBCH
          GOTO     EDOCR300 IF EQUAL
          UNPACK   APIMDDT,CCENT,CYEAR,CMON,CDAY
          CALL     PACDATE
.
          CLEAR    DISPMSG
          MATCH    "Cheque Print   ",FMBNREF
          IF       !@EQUAL
            APPEND   "Duplicate Cheque No. in Batch ",DISPMSG
            APPEND   APIMBCH,DISPMSG
            APPEND   " Dated ",DISPMSG
            APPEND   CPCDATE,DISPMSG
          ELSE
            MATCH    "~~",APIMCRD
            GOTO     EDOCR200 IF EQUAL
            APPEND   "Cheques Currently Being Printed in Batch ",DISPMSG
            APPEND   APIMBCH,DISPMSG
          ENDIF
.
          APPEND   " - ",DISPMSG
          RESET    DISPMSG
          CALL     MESSAGE4
          BRANCH   EXIT,EDOCR010
.
EDOCR200  MOVE     APMACRD,APIMCRD
          MOVE     DOCREF,APIMDOC
          MOVE     SP70,INVREF
          MOVE     SP70,APIMREF
          MOVE     APBMBCH,APIMBCH
          MOVE     ONE,APIMTYP
          MOVE     ZERO,APIMUPD
          MOVE     SP70,APIMTER
          MOVE     SP70,APIMPDT
          MOVE     SP70,APIMDDT
          MOVE     SP70,DOCDATE
          MOVE     SP70,APIMTDT
          MOVE     ZERO,APIMTOT
          MOVE     ZERO,APIMDIS
          MOVE     ZERO,APIMGST
          MOVE     SP70,APIMCM1
          MOVE     SP70,APIMCM2
          MOVE     ZERO,APIMDIS
          MOVE     ZERO,APIMPAY
          MOVE     SP70,APIMSPA
          MOVE     ZERO,EXIT
          GOTO     EDOCR999
.
EDOCR300  MOVE     APIMDDT,DOCDATE
          MOVE     ZERO,CHQTOTL
          PACK     KEY45,APIMCRD,APIMDOC,APIMREF,APIMBCH
          PACK     KEY40,APIMCRD,APIMDOC,SP70
          PACK     KEY20,APIMCRD,APIMDOC,SP70
          CALL     RSAPIM4
EDOCR310  CALL     RKAPIM4
          BRANCH   OVRCD,EDOCR320
          PACK     KEY40,APIMCRD,APIMDOC
          MATCH    KEY20,KEY40
          GOTO     EDOCR320 IF NOT EQUAL
          MATCH    APBMBCH,APIMBCH
          GOTO     EDOCR310 IF NOT EQUAL
          ASSIGN   CHQTOTL+APIMTOT+APIMGST,CHQTOTL
          GOTO     EDOCR310
.
EDOCR320  MOVE     APBMBCH,APIMBCH
          UNPACK   KEY20,APIMCRD,APIMDOC
          GOTO     EDOCR999
.
EDOCR800  MOVE     DOCREF,APIMDOC
          UNPACK   DOCREF,KEY7,CHEQUENO
          MOVE     DOCDATE,APIMDDT
          MOVE     ZERO,EXIT
          GOTO     EDOCR999
.
EDOCR900  MOVE     SP70,APMACRD
          MOVE     SP70,CHEQUENO
          MOVE     SP70,INVREF
          MOVE     SP70,DOCREF
          MOVE     SP70,DOCDATE
          MOVE     SP70,VAR
          CALL     DISPITEM
          MOVE     ONE,EXIT
.
EDOCR999  RETURN
.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSBNKKY
.   Routine   :   KFMBNZ00 Keyin Cheque
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KFMBNZ00
          TOPIC     "FMBNREF "
          MOVE      UNDLN70,KEY8
          KEYIN     *PCCOL:CVERT,*DV,KEY8:
                    *PCCOL:CVERT,*V2LON,*JR,KEY8:
                    *PCCOL:CVERT,*DV,KEY8
.
          REP       UPPLOW,KEY8
          ENDSET    KEY8
          APPEND    SP70,KEY8
          RESET     KEY8
.
          MATCH     SP70,KEY8
          GOTO      KFMBNZ90 IF EQUAL
.
          ENDSET    KEY8
          CMATCH    EXITCHAR,KEY8
          GOTO      KFMBNZ95 IF EQUAL
          CMATCH    ANSX,KEY8
          GOTO      KFMBNZ95 IF EQUAL
.
          CMATCH    QUEST,KEY8
          GOTO      KFMBNZ10 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      QFMBNA00            * Cheque Help
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMBNREF
          APPEND    SP70,FMBNREF
          RESET     FMBNREF
.
          MATCH     SP70,FMBNREF
          GOTO      KFMBNZ00 IF EQUAL
          UNPACK    FMBNREF,KEY7,KEY8
.
          DISPLAY   *PCCOL:CVERT,*V2LON,KEY8
KFMBNZ10
          RESET     KEY8
          TYPE      KEY8
          GOTO      KFMBNZ76 IF NOT EQUAL
.
          MOVE      KEY8,CFORM8             * remove leading zero's (srf 120558)
          MOVE      KEY8,APTMAMT            * check for decimals    (srf 121738)
          IF        CFORM8<>APTMAMT
            BEEP
            CLEAR     DISPMSG
            APPEND    "No Decimal Places Allowed - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KFMBNZ00
          ENDIF
.
          MOVE      CFORM8,KEY8
          DISPLAY   *PCCOL:CVERT,*V2LON,KEY8
.
          PACK      FMBNREF,SP7,KEY8
          MOVE      "0",FMBNTYP
          PACK      KEY36,FMBNBNK,ZERO,FMBNREF,SP70
          CALL      RSFMBN2
          CALL      RKFMBN2
          BRANCH    OVRCD,KFMBNZ80
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,SP70
          MATCH     KEY31,KEY36
          GOTO      KFMBNZ80 IF NOT EQUAL
          BRANCH    CKEYTYP,KFMBNZ75
KFMBNZ70
          MOVE      ZERO,EXIT
          GOTO      KFMBNZ99
KFMBNZ75
          MOVE      "Cheque Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMBNZ00
KFMBNZ76
          MOVE      "Cheque No. Must be Numeric - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMBNZ00
KFMBNZ80
          MOVE      SP70,FMBNLED
          MOVE      SP70,FMBNACC
          MOVE      SP70,FMBNDAT
          MOVE      SP70,FMBNPRE
          MOVE      SP70,FMBNPDT
          MOVE      ZERO,FMBNAMT
          MOVE      SP70,FMBNFYR
          MOVE      SP70,FMBNBCH
          MOVE      SP70,FMBNLNO
          MOVE      SP70,FMBNCRE
          MOVE      SP70,FMBNNAM
          MOVE      SP70,FMBNSPAR
          MOVE      SP70,FMBNUNQ
          UNPACK    KEY36,FMBNBNK,FMBNTYP,FMBNREF
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMBNZ99,KFMBNZ99
          MOVE      "Cheque Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMBNZ00
KFMBNZ90
          MOVE      ONE,EXIT
          GOTO      KFMBNZ99
KFMBNZ95
          MOVE      TWO,EXIT
KFMBNZ99  TOPIC     PRGID
          RETURN
.
.
.----------------------------------------------------------------------
. Enter Invoice Date
.----------------------------------------------------------------------
ECRDT000
          MATCH     "ZZZZZZZZ",DOCDATE
          GOTO      ECRDT900 IF EQUAL
.
          MATCH     SP70,DOCDATE
          GOTO      ECRDT800 IF NOT EQUAL
.
ECRDT100
          PACK      DOCDATE,CCC,CYY,CMM,CDD
          PACK      APIMDDT,CCC,CYY,CMM,CDD
.
          MATCH     "Cheque Print   ",DOCREF
          GOTO      ECRDT800 IF EQUAL
.
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      SP70,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,ECRDT900
          BRANCH    CQUEST,ECRDT100
          MATCH     SP70,CDAY
          GOTO      ECRDT900 IF EQUAL
.
          PACK      DOCDATE,CCENT,CYEAR,CMON,CDAY
          PACK      APIMDDT,CCENT,CYEAR,CMON,CDAY
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",APIMDDT
          REP       " 0",KEY8
          MATCH     APIMDDT,KEY8
          IF        @LESS
            MOVE      "Date in the Future. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,ECRDT100
            GOTO      ECRDT800
          ENDIF
.
          UNPACK    APIMDDT,KEY4,KEY2
          MOVE      KEY4,TSTCCYY1
          MOVE      KEY2,TSTMM1
.
          UNPACK    KEY8,KEY4,KEY2
          MOVE      KEY4,TSTCCYY2
          MOVE      KEY2,TSTMM2
          IF        TSTCCYY2-TSTCCYY1>1
            MOVE      "Date Over 1 Year. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,ECRDT100
            GOTO      ECRDT800
          ENDIF
          IF        TSTCCYY2=TSTCCYY1
            IF        TSTMM2-TSTMM1>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,ECRDT100
              GOTO      ECRDT800
            ENDIF
          ELSE
            IF        TSTMM2-TSTMM1+12>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,ECRDT100
              GOTO      ECRDT800
            ENDIF
          ENDIF
.
          COMPARE   ONE,FMCODTWR
          GOTO      ECRDT800 IF NOT EQUAL
.
          MATCH     PERSDAT,APIMDDT
          IF        @LESS
            MOVE      "Date before Period Start Date. ",DISPMSG
            CALL      MESSAGE4
            BRANCH    EXIT,ECRDT100
          ENDIF
          MATCH     APIMDDT,PEREDAT
          IF        @LESS
            MOVE      "Date after Period End Date. ",DISPMSG
            CALL      MESSAGE4
            BRANCH    EXIT,ECRDT100
          ENDIF
.
ECRDT800  MOVE      DOCDATE,APIMDDT
          MOVE      ZERO,EXIT
          GOTO      ECRDT999
.
ECRDT900  MOVE      ONE,EXIT
          MOVE      SP70,DOCREF
          MOVE      SP70,DOCDATE
          MOVE      SP70,APIMDDT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
ECRDT999  RETURN
.----------------------------------------------------------------------
. Enter Invoice Reference
.----------------------------------------------------------------------
KAPIM000  MOVE     SP70,INVKEY40
          MOVE     ZERO,SAVETOT
          MATCH    "~~",APIMCRD            * Non Specific Creditor
          GOTO     KAPIM700 IF EQUAL
.
          PACK     KEY70,APBMBCH,APMACRD,APIMDOC
          MOVE     APMACRD,APIMCRD
          MOVE     APBMBCH,APIMBCH
          MOVE     TWO,CKEYTYP
          CALL     IAPIMX00
          MOVE     APIMREF,INVREF
          UNPACK   KEY70,APIMBCH,APIMCRD,APIMDOC
          PACK     KEY70,APIMBCH,APIMCRD,APIMREF,APIMDOC
          BRANCH   EXIT,KAPIM500,KAPIM900
.--------------------------------------------------
. If not then get invoice details for default
.--------------------------------------------------
KAPIM010  PACK     KEY35,APIMCRD,APIMREF,SP70
          PACK     KEY40,APIMCRD,APIMREF,Z70
          CALL     RSAPIM3
.
KAPIM100  CALL     RPAPIM3
          BRANCH   OVRCD,KAPIM200          * No Invoice Found
          PACK     KEY40,APIMCRD,APIMREF,SP70
          MATCH    KEY35,KEY40
          GOTO     KAPIM200 IF NOT EQUAL   * No Invoice Found
          MATCH    "2",APIMTYP
          GOTO     KAPIM100 IF EQUAL
          MATCH    "0",APIMUPD
          GOTO     KAPIM150 IF EQUAL
          MATCH    APIMBCH,APBMBCH
          GOTO     KAPIM100 IF EQUAL
          PACK     INVKEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
.
          MATCH    ANSZ,APIMPAYG
          IF       @EQUAL
            MOVE     ONE,PAYASGO
          ENDIF
          MATCH    ANSP,APIMPAYG
          IF       @EQUAL
            BEEP
            MOVE     "WARNING: Payments for PAYG Invoice - ",DISPMSG
            CALL     MESSAGE1
            MOVE     ONE,NOGST
          ENDIF
          MATCH    ANSN,APIMPAYG
          IF       @EQUAL
            MOVE     ONE,NOGST
          ENDIF
.--------------------------------------------------
. Valid Invoice Reference
. Check to see if existing record for batch
.--------------------------------------------------
          UNPACK   KEY70,APIMBCH,APIMCRD,APIMREF,APIMDOC
          PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RAAPIM1
          IF       OVRCD=0
            CALL     RDAPIM1
            MOVE     ZERO,ACCEPT
            MOVE     ZERO,OVRCD
            ASSIGN   APIMTOT-APIMDIS+APIMGST,SAVETOT
            GOTO     KAPIM130
          ENDIF
.
          MOVE     ZERO,PAYLINE
          MOVE     ZERO,INVTOTAL
          MOVE     ZERO,GSTTOTAL
          PACK     KEY25,APIMCRD,APIMREF,SP70
          PACK     KEY40,KEY25,SP70
          CALL     RSAPIM3
.
KAPIM110  CALL     RKAPIM3
          BRANCH   OVRCD,KAPIM120
          PACK     KEY40,APIMCRD,APIMREF,SP70
.
          MATCH    KEY25,KEY40
          GOTO     KAPIM120 IF NOT EQUAL
.
          MOVE     APIMTYP,F1
          IF       F1=3
            GOTO     KAPIM110
          ENDIF
.
          CALL     SUMINP00
          BRANCH   EXIT,KAPIM000
.
          GOTO     KAPIM110
.
KAPIM120  CALL     RMZERO00            * remove any zero transactions
.
          IF       INVTOTAL+GSTTOTAL=0
            MOVE     "Zero Outstanding for this Cheque Account. - ",DISPMSG
            CALL     MESSAGE4
            BRANCH   EXIT,KAPIM000
            MOVE     ZERO,EXIT
          ENDIF
.
          PACK     APIMDDT,DOCDATE,SP70
          MOVE     TWO,APIMTYP
          MOVE     GSTTOTAL,APIMGST
          MOVE     INVTOTAL,APIMTOT
          MOVE     ZERO,APIMDIS
          MOVE     ONE,ACCEPT
          MOVE     ONE,OVRCD
.
KAPIM130  UNPACK   KEY70,APIMBCH,APIMCRD,APIMREF,APIMDOC
          IF       ACCEPT=1
            MOVE     SP70,APIMICM
            MOVE     SP70,APIMCM1
            MOVE     SP70,APIMCM2
          ENDIF
          CALL     VICRD000   * Valid Invoice Creditor Screen
          GOTO     KAPIM000
.--------------------------------------------------
. Details Not Updated
.--------------------------------------------------
KAPIM150  MOVE     "Invoice Has Not Been Updated - ",DISPMSG
          CALL     MESSAGE1
          GOTO     KAPIM000
.--------------------------------------------------
. Reference Not Found
.--------------------------------------------------
KAPIM200  UNPACK   KEY35,APIMCRD,APIMREF
          UNPACK   KEY70,APIMBCH,APIMCRD,APIMREF,APIMDOC
          MOVE     "Invoice Not Found. Input Invoices Now. - ",DISPMSG
          CALL     MESSAGE4
          BRANCH   EXIT,KAPIM000
          MOVE     ZERO,EXIT
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF CHILDERR
          FORK      "IBAAPS15",KEY50
          TRAPCLR   CHILDERR
.
          CALL      PUTSCR00
.
          IF        OVRCD=1
            MOVE      "Error in Invoice Input. ",DISPMSG
            CALL      MESSAGE1
            MOVE      KEY50,DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
          GOTO      KAPIM010
.--------------------------------------------------
. No Invoice Reference
.--------------------------------------------------
KAPIM500  MOVE     ZERO,EXIT
          MOVE     SP70,APIMREF
          MOVE     SP70,INVREF
          MOVE     ZERO,EXIT
          PACK     KEY40,APBMBCH,APMACRD,APIMREF,DOCREF
          UNPACK   KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RAAPIM1
          IF       OVRCD=0
            CALL     RDAPIM1
            ASSIGN   APIMTOT-APIMDIS+APIMGST,SAVETOT
            MOVE     ONE,F3
            MOVE     F3,APINLIN
            MOVE     SP70,APINORD
            PACK     KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,APINLIN
            CALL     RDAPIN1
            PACK     KEY5,APINDIS
            CALL     RDFMDS1
            PACK     KEY4,APINRES
            CALL     RDFMRS1
            PACK     KEY2,APINLED
            CALL     RDFMLA1
            PACK     KEY14,APINLED,APINACC
            CALL     RDFMAM1
            MOVE     ZERO,OVRCD
            MOVE     ZERO,ACCEPT
          ELSE
            MOVE     "No Invoice Reference. - ",DISPMSG
            CALL     MESSAGE1
            GOTO     KAPIM900
          ENDIF
.
. Payments in Suspense no longer allowed
.
            CALL     MESSAGE4
            BRANCH   EXIT,KAPIM900
.
            MOVE     TWO,APIMTYP
            MOVE     ZERO,APIMUPD
            MOVE     SP70,APIMTER
            MOVE     SP70,APIMPDT
            MOVE     SP70,APIMTDT
            MOVE     ZERO,APIMTOT
            MOVE     ZERO,APIMDIS
            MOVE     ZERO,APIMGST
            MOVE     SP70,APIMCM1
            MOVE     SP70,APIMCM2
            MOVE     ZERO,APIMDIS
            MOVE     ZERO,APIMPAY
            MOVE     SP70,APIMSPA
            MOVE     ONE,OVRCD
            MOVE     ONE,ACCEPT
.         ENDIF
.
          CALL     NICRD000   * No Invoice Screen
.
          GOTO     KAPIM000
.--------------------------------------------------
. Non Specific Creditor
.--------------------------------------------------
KAPIM700  MOVE      UNDLN70,APIMREF
          MOVE      ZERO,SAVETOT
          KEYIN     *PCCOL:CVERT,*DV,APIMREF:
                    *PCCOL:CVERT,*V2LON,APIMREF:
                    *PCCOL:CVERT,*DV,APIMREF
          ENDSET   APIMREF
          APPEND   SP70,APIMREF
          RESET    APIMREF
          MATCH    SP70,APIMREF
          GOTO     KAPIM900 IF EQUAL
          MATCH    "X              ",APIMREF
          GOTO     KAPIM900 IF EQUAL
          MATCH    "x              ",APIMREF
          GOTO     KAPIM900 IF EQUAL
          CMATCH   EXITCHAR,APIMREF
          GOTO     KAPIM900 IF EQUAL
          MOVE     APIMREF,VAR
          CALL     DISPITEM
.
          PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          PACK     KEY70,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RAAPIM1
          IF       OVRCD=0
            CALL     RDAPIM1
            MOVE     APIMTER,KEY2
            CALL     RDAPPP1
            MOVE     ZERO,ACCEPT
            MOVE     ZERO,OVRCD
            ASSIGN   APIMTOT-APIMDIS+APIMGST,SAVETOT
          ELSE
            MOVE     TWO,APIMTYP
            MOVE     ZERO,APIMUPD
            MOVE     SP70,APIMTER
            MOVE     SP70,APIMPDT
            MOVE     SP70,APIMTDT
            MOVE     ZERO,APIMTOT
            MOVE     ZERO,APIMDIS
            MOVE     ZERO,APIMGST
            MOVE     SP70,APIMCM1
            MOVE     SP70,APIMCM2
            MOVE     ZERO,APIMDIS
            MOVE     ZERO,APIMPAY
            MOVE     SP70,APIMPAYG
            MOVE     SP70,APIMSPA
            MOVE     ONE,ACCEPT
            MOVE     ONE,OVRCD
            MOVE     ZERO,EXIT
          ENDIF
.
          CALL      NSCRD000          * Non Specific Creditor Screen
.
          GOTO      KAPIM700
.
.-----------------------------------------------------------------
. Exit Back to Previous Key Field
.-----------------------------------------------------------------
KAPIM900  MOVE     ONE,EXIT
          MOVE     SP70,DOCREF
          MOVE     "ZZZZZZZZ",DOCDATE
          MOVE     SP70,VAR
          CALL     DISPITEM
.
KAPIM999  RETURN
.--------------------------------------------------
. Summarise Details
.--------------------------------------------------
SUMINP00  PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RSAPIN1             * Loop Through Allocation Details
.
SUMINP10  CALL      RKAPIN1             * Within The Invoice
          BRANCH    OVRCD,SUMINP90
          PACK      SAVKEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH     KEY40,KEY51
          GOTO      SUMINP90 IF NOT EQUAL
.
          CALL      CHKCHQ00            * Check for the same Cheque Account
          BRANCH    EXIT,SUMINP10       * No.
.
          MATCH     "1",APINUPD         * check if updated
          GOTO      SUMINP80 IF NOT EQUAL
          MATCH     "1",APIMUPD
          GOTO      SUMINP80 IF NOT EQUAL
.
          MOVE      APIMTYP,SKEY1
          MOVE      SKEY1,F1
          IF        F1=1
            MULT      SEQ,APINAMT       * Subtract Credit Details
            MULT      SEQ,APINPAY
            MULT      SEQ,APINGST
          ENDIF
.
          IF        F1=2
            MULT      SEQ,APINAMT       * Subtract Payment Details
            MULT      SEQ,APINPAY
            MULT      SEQ,APINGST
            UNPACK    APINDES,APINBCH,APINDOC,APINORD,APINLIN,SKEY1
          ENDIF
.
          IF        F1=4
            UNPACK    APINDES,APINBCH,APINDOC,APINORD,APINLIN,SKEY1
          ENDIF
.
          ADD       APINAMT,INVTOTAL
          ADD       APINGST,GSTTOTAL
.--------------------------------------------------
. Save Transaction to This Batch
. N.B. APINDES holds Key to Original Transaction
.--------------------------------------------------
          MOVE      APINGST,TEMPGST
          MOVE      APINAMT,TEMPAMT
          PACK      TEMPDES,APINBCH,APINDOC,APINORD,APINLIN,SKEY1,SP70
          UNPACK    KEY70,APINBCH,APINCRD,APINREF,APINDOC
.
          MOVE      ZERO,APINPAY
          ADD       ONE,PAYLINE
          MOVE      APINLIN,PAYLINE
          MOVE      SKEY1,F1
          IF        F1=1
            ADD       "500",PAYLINE
          ENDIF
          SUB       ONE,PAYLINE
.
          REPEAT
            ADD       ONE,PAYLINE
            MOVE      PAYLINE,APINLIN
            PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
            CALL      RDAPIN00
          UNTIL     OVRCD<>2
.
          IF        OVRCD=0
            CALL      RDAPIN1
            ADD       TEMPGST,APINGST
            ADD       TEMPAMT,APINAMT
            CALL      UPAPIN1
          ELSE
            PACK      APINDES,TEMPDES,SP70
            PACK      APINRES,APBMRES,SP70
            PACK      APINDIS,APBMDIS,SP70
            MOVE      ZERO,APINUPD
            MOVE      SP3,APINBASC
            CALL      WRAPIN1
          ENDIF
.
          MOVE      SAVKEY51,KEY51
          CALL      RDAPIN1
          GOTO      SUMINP10
.
.
SUMINP80  BEEP
          CLEAR     DISPMSG
          APPEND    "Record for this Invoice Not Updated in Batch - ",DISPMSG
          APPEND    APINBCH,DISPMSG
          APPEND    " - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
.
          CALL      RMALL000      * remove all transactions
          MOVE      ONE,EXIT
          GOTO      SUMINP99
.
SUMINP90  MOVE      ZERO,EXIT
.
SUMINP99  RETURN
.----------------------------------------------------------------------
. remove any zero transactions
.----------------------------------------------------------------------
RMZERO00  PACK      KEY51,APBMBCH,APMACRD,INVREF,DOCREF,SP70
          PACK      KEY40,KEY51,SP70
.
RMZERO92  CALL      RSAPIN1             * Loop Through Allocation Details
          CALL      RKAPIN1             * Within The Invoice
          BRANCH    OVRCD,RMZERO99
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH     KEY40,KEY51
          GOTO      RMZERO99 IF NOT EQUAL
.
          IF        APINAMT+APINGST=0
            CALL      DEAPIN1
          ENDIF
          GOTO      RMZERO92
.
RMZERO99  RETURN
.----------------------------------------------------------------------
. remove all transactions
.----------------------------------------------------------------------
RMALL000  PACK      KEY51,APBMBCH,APMACRD,INVREF,DOCREF,SP70
          PACK      KEY40,KEY51,SP70
.
RMALL092  CALL      RSAPIN1             * Loop Through Allocation Details
          CALL      RKAPIN1             * Within The Invoice
          BRANCH    OVRCD,RMALL999
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH     KEY40,KEY51
          GOTO      RMALL999 IF NOT EQUAL
.
          CALL      DEAPIN1
          GOTO      RMALL092
.
RMALL999  RETURN
.--------------------------------------------------
. Dummy read for description
.--------------------------------------------------
RDAPIN00  RESET     KEY51
          MOVE      ZERO,OVRCD
          READ      APSINPA1,KEY51;KEY50,KEY32,SKEY35
          GOTO      OVERCOND IF OVER
          MATCH     TEMPDES,SKEY35
          GOTO      OVERLOCK IF NOT EQUAL
          RETURN
.--------------------------------------------------
. Check for matching cheque account
.--------------------------------------------------
CHKCHQ00  PACK     KEY14,APINLED,APINACC,SP70
          CALL     GBNK0000              * Determine Control Account
.
CHKCHQ99  RETURN
.--------------------------------------------------
. Check for matching cheque account
.  Requires KEY14 - account
.--------------------------------------------------
GBNK0000  UNPACK   SP70,FMLABNK,FMLABNK2
          PACK     KEY2,KEY14,SP70
          CALL     RDFMLA1
          CALL     RDFMAM1
          BRANCH   OVRCD,GBNK8000
.
          UNPACK   SP70,FMCSCRD,FMCSDIS,FMCSDEB,FMCSPAY,FMCSAGST
          UNPACK   SP70,FMCSBNK,FMCSBNK2
          CALL     RDFMCS1
.
          MATCH    SP70,FMCSCRD
          IF       @EQUAL
            MOVE     FMLACRD,FMCSCRD
          ENDIF
.
          MATCH    SP70,FMCSDIS
          IF       @EQUAL
            MOVE     FMLADIS,FMCSDIS
          ENDIF
.
          MATCH    SP70,FMCSDEB
          IF       @EQUAL
            MOVE     FMLADEB,FMCSDEB
          ENDIF
.
          MATCH    SP70,FMCSPAY
          IF       @EQUAL
            MOVE     FMLAPAY,FMCSPAY
          ENDIF
.
          MATCH    SP70,FMCSAGST
          IF       @EQUAL
            MOVE     FMLAAGST,FMCSAGST
          ENDIF
.
          MOVE     SP70,FMCACHQ
          PACK     KEY14,FMAMLEDG,FMCSBNK,SP70
          CALL     RDFMCA1
          MATCH    APBMCHQ,FMCACHQ
          GOTO     GBNK9000 IF EQUAL
.
          PACK     FMCSBNK,FMCSBNK2,SP70
          MOVE     SP70,FMCACHQ
          PACK     KEY14,FMAMLEDG,FMCSBNK,SP70
          CALL     RDFMCA1
          MATCH    APBMCHQ,FMCACHQ
          GOTO     GBNK9000 IF EQUAL
.
          PACK     FMCSBNK,FMLABNK,SP70
          MOVE     SP70,FMCACHQ
          PACK     KEY14,FMAMLEDG,FMCSBNK,SP70
          CALL     RDFMCA1
          MATCH    APBMCHQ,FMCACHQ
          GOTO     GBNK9000 IF EQUAL
.
          PACK     FMCSBNK,FMLABNK2,SP70
          MOVE     SP70,FMCACHQ
          PACK     KEY14,FMAMLEDG,FMCSBNK,SP70
          CALL     RDFMCA1
          MATCH    APBMCHQ,FMCACHQ
          GOTO     GBNK9000 IF EQUAL
.
GBNK8000  MOVE     ONE,EXIT
          GOTO     GBNK9999
.
GBNK9000  MOVE     ZERO,EXIT
.
GBNK9999  RETURN
.--------------------------------------------------
. Non Specific Creditor Details
.--------------------------------------------------
NSCRD000  MOVE     ZERO,HLEF
          CALL     GETSCR00
.
NSCRD100  MOVE      "N1",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "14",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
          CALL      DFN1L000 * Display Fields
          CALL      SFN1L000 * Select Fields
          BRANCH    EXIT,NSCRD100,NSCRD100,NSCRD100
.
          CALL     PUTSCR00
.
          MOVE     "01",SCRID
          CALL     CALTOT00
.
          MOVE     ZERO,PRCOL
          MOVE     ZERO,PRVERT
          MOVE     "   18",FLDID
          CALL     GETPOSIT
          IF       EXIT=1
            MOVE     "Mandatory Field Missing. Fatal - ",DISPMSG
            CALL     MESSAGE1
            GOTO     FATALERR
          ENDIF
          RETURN
.--------------------------------------------------
. Specific Creditor With NO Invoice
.--------------------------------------------------
NICRD000  MOVE     ZERO,HLEF
          CALL     GETSCR00
.
NICRD100  MOVE      "PH",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "14",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
          CALL      DFPHL000 * Display Fields
          CALL      SFPHL000 * Select Fields
          BRANCH    EXIT,NICRD100,NICRD100,NICRD100
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
.
          CALL     PUTSCR00
.
          MOVE     "01",SCRID
          CALL     CALTOT00
.
          MOVE     ZERO,PRCOL
          MOVE     ZERO,PRVERT
          MOVE     "   18",FLDID
          CALL     GETPOSIT
          IF       EXIT=1
            MOVE     "Mandatory Field Missing. Fatal - ",DISPMSG
            CALL     MESSAGE1
            GOTO     FATALERR
          ENDIF
          RETURN
.--------------------------------------------------
. Specific Creditor With Valid Invoice
.--------------------------------------------------
VICRD000  MOVE     ZERO,HLEF
          CALL     GETSCR00
.
VICRD100  MOVE      "S1",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "14",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
          CALL      DFS1L000 * Display Fields
          CALL      SFS1L000 * Select Fields
          BRANCH    EXIT,VICRD100,VICRD100,VICRD100
.
          CALL     PUTSCR00
.
          MOVE     "01",SCRID
          CALL     CALTOT00
.
          MOVE     ZERO,PRCOL
          MOVE     ZERO,PRVERT
          MOVE     "   18",FLDID
          CALL     GETPOSIT
          IF       EXIT=1
            MOVE     "Mandatory Field Missing. Fatal - ",DISPMSG
            CALL     MESSAGE1
            GOTO     FATALERR
          ENDIF
          RETURN
.
CALTOT00  SUB      SAVETOT,BATCHCAL
          SUB      SAVETOT,CHQTOTL
          MOVE     KEY70,KEY40
          CALL     RAAPIM1
          IF       OVRCD=0
            ASSIGN   BATCHCAL+APIMTOT+APIMGST,BATCHCAL
            ASSIGN   CHQTOTL+APIMTOT+APIMGST,CHQTOTL
          ENDIF
          MOVE     "    3",FLDID
          CALL     GETPOSIT
          IF       EXIT=0
            MOVE     BATCHCAL,VAR
            CALL     DISPITEM
          ENDIF
          MOVE     "   19",FLDID
          CALL     GETPOSIT
          IF       EXIT=0
            MOVE     CHQTOTL,VAR
            CALL     DISPITEM
          ENDIF
          MOVE     CHQTOTL,LASTTOT
          MOVE     APMACN1,LASTCRED
          UNPACK   APIMDOC,KEY7,KEY8
          PACK     LASTINV,KEY8,SP70
          RETURN
.****************************************************************************
. Check if a document reference exists in another fms batch awaiting update
.         Requires : FMBNREF - (DIM 15)  Document reference
.         Returns  : OVRCD     (0=not found, 1=found)
.                    APCL record where reference was found
.
. This routine is designed specifically to check if a particular cheque
. number has already been used in a batch which has not yet been updated
. in the FMS system (in fmsbnkaf)
.****************************************************************************
CKDOC000  PACK      KEY40,FMBNREF,SP70
          CALL      RSAPCL1
.
CKDOC100  CALL      RKAPCL1            * check if reference exists
          BRANCH    OVRCD,CKDOC900
          MATCH     FMBNREF,APCLDOC
          GOTO      CKDOC900 IF NOT EQUAL
.
          MATCH     APCLBCH,APBMBCH    * same batch ?
          GOTO      CKDOC950 IF NOT EQUAL
          MATCH     SP70,APMACRD
          IF        !@EQUAL
            MATCH     APCLCRD,APMACRD  * same creditor ?
            GOTO      CKDOC950 IF NOT EQUAL
          ENDIF
          GOTO      CKDOC100
.
.
CKDOC900  MOVE      ZERO,OVRCD
          GOTO      CKDOC999
.
CKDOC950  MOVE      ONE,OVRCD
.
CKDOC999  RETURN
.
UPDTOT00  PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK     KEY52,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          PACK     KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE     ZERO,TOTALLOC
          MOVE     ZERO,GSTALLOC
          CALL     RSAPIN1
.
UPDTOT10  CALL     RKAPIN1
          BRANCH   OVRCD,UPDTOT90
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC
          MATCH    KEY40,KEY51
          GOTO     UPDTOT90 IF NOT EQUAL
          ADD      APINAMT,TOTALLOC
          ADD      APINGST,GSTALLOC
          GOTO     UPDTOT10
.
UPDTOT90  PACK     KEY51,KEY52
          CALL     RDAPIN1
          MOVE     "06",SCRID
          MOVE     "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALLOC,VAR
            CALL      DISPITEM
          ENDIF
          MOVE     "   61",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      GSTALLOC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE     "02",SCRID
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          RETURN
.
.----------------------------------------------------------------------
. Calculate Allocation Total
.----------------------------------------------------------------------
CALCA000  MOVE     APIMTOT,TOTALALL
          SUB      APIMGST,TOTALALL
          RETURN
.----------------------------------------------------------------------
. Read Line Item Details
.----------------------------------------------------------------------
RDET0000  PACK      KEY14,APINLED,APINACC
          CALL      RDFMAM1
          PACK      LEDACDES,APINLED,SLASH,APINACC,SP70
          STRIP     LEDACDES
          PACK      LEDACDES,LEDACDES,SP1,FMAMDESC,SP70
.
          MATCH     SP6,APINCAT
          GOTO      RDET1000 IF NOT EQUAL
          PACK      TRANDESC,LEDACDES,SP70
          GOTO      RDET9999
.
RDET1000  COMPARE   ZERO,HACCNT
          GOTO      RDET8000 IF EQUAL
.
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1
          BRANCH    OVRCD,RDET8000
.
          CALL      APISOPN1
          BRANCH    INCOSTYP,RDET4000
          GOTO      RDET9999
.
RDET4000  MOVE      SP70,SUPDES1
          MOVE      SP70,SUPDES2
          UNPACK    APINORD,KEY1,KEY7
.
          PACK      KEY12,KEY7,APINCAT
          CALL      RDSIPF1
          BRANCH    OVRCD,RDET8000
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          BRANCH    OVRCD,RDET8000
.
          CLEAR     TRANDESC
          APPEND    "P/N : ",TRANDESC
          APPEND    SIPCPN,TRANDESC
          APPEND    " Desc: ",TRANDESC
          APPEND    SIPCPD,TRANDESC
          RESET     TRANDESC
          GOTO      RDET9999
.
RDET8000  CLEAR     TRANDESC
          APPEND    "Inventory System Invalid. Order=",TRANDESC
          APPEND    APINORD,TRANDESC
          RESET     TRANDESC
          GOTO      RDET9999
.
RDET9999  RETURN
.----------------------------------------------------------------------
. Check for Balanced Payment Details and allow change to total
.----------------------------------------------------------------------
SAPI0000  PACK       KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK       KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE       ZERO,TOTALLOC
          MOVE       ZERO,GSTALLOC
          MOVE       ZERO,F3
          CALL       RSAPIN1
.
SAPI1000  CALL       RKAPIN1
          BRANCH     OVRCD,SAPI1100
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH      KEY40,KEY51
          GOTO       SAPI1100 IF NOT EQUAL
          ADD        APINAMT,TOTALLOC
          ADD        APINGST,GSTALLOC
          ADD        ONE,F3
          GOTO       SAPI1000
.
SAPI1100  ASSIGN     APIMTOT,ALLTOTAL
          COMPARE    ZERO,F3
          GOTO       SAPI5000 IF EQUAL
.
          COMPARE    TOTALLOC,ALLTOTAL
          GOTO       SAPI1150 IF NOT EQUAL   * Balanced so Exit Screen
.
          IF         IBCNUGST=2
            COMPARE    GSTALLOC,APIMGST
            GOTO       SAPI1150 IF NOT EQUAL   * Balanced so Exit Screen
          ENDIF
          GOTO       SAPI9100
.--------------------------
. Totals Unbalanced
.--------------------------
SAPI1150  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
SAPI1200  KEYIN     *P1:24,*EL,"Payment Unbalanced. Change Totals (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          CALL      MESSAGE3
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      SAPI2000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      SAPI9000 IF EQUAL
          BEEP
          GOTO      SAPI1200
.
SAPI2000  MOVE      "15",HTOP
          MOVE      "1",HLEF
          MOVE      "80",HRIG
          MOVE      "24",HBOT
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HRIG
          MOVE      ZERO,HBOT
.
          CALL      MDTOT000
.
          CALL      PUTSCR00
          GOTO      SAPI1100
.-------------------------
. No Detail Delete Header
.-------------------------
SAPI5000  MOVE      "No Details for that Payment. Delete. ",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,SAPI9000
          PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF,SP70
          CALL      DEAPCL1
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      DEAPIM1
          GOTO      SAPI9300
.
SAPI9000  MOVE      TWO,EXIT   * Restart Screen
          GOTO      SAPI9999
.
SAPI9100  MOVE      ZERO,EXIT  * Exit Screen
          IF        IBCNUGST=1
            CALL      GSTUP000
          ENDIF
          GOTO      SAPI9999
.
SAPI9200  MOVE      ONE,EXIT   * Return to Prompt
          GOTO      SAPI9999
.
SAPI9300  MOVE      ZERO,EXIT  * Exit Screen (deleted)
          GOTO      SAPI9999
.
SAPI9999  RETURN
.---------------------------------------
. Change Payment Total
.---------------------------------------
MDTOT000  DISPLAY   *P1:15,*EF
          HLINE     *G37,15,1,80
          DISPLAY   *P1:17,*V2LON," 1.",*HOFF," Payment                : "
          DISPLAY   *P30:17,*V2LON,APIMTOT
          MOVE      "S1",SCRID
          MOVE      "    5",FLDID
          MOVE      ZERO,FLAGGST
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ONE,FLAGGST
            DISPLAY   *P1:18,*V2LON," 2.",*HOFF," G.S.T.                 : "
            DISPLAY   *P30:18,*V2LON,APIMGST
          ENDIF
          MOVE      "02",SCRID
          DISPLAY   *P1:21,"    Amount to be Allocated : "
          DISPLAY   *P30:21,*V2LON,ALLTOTAL
          DISPLAY   *P1:22,"    Amount Allocated       : "
          DISPLAY   *P30:22,*V2LON,TOTALLOC
.
MDTOT100  ASSIGN    APIMTOT,ALLTOTAL
          CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      MDTOT900 IF EQUAL  * Post
          COMPARE   SEQ,CCITEM
          GOTO      MDTOT950 IF EQUAL  * Cancel
          IF        FLAGGST=0
            BRANCH    CCITEM,MDTOT110
          ELSE
            BRANCH    CCITEM,MDTOT110,MDTOT120
          ENDIF
          BEEP
          GOTO      MDTOT100
.
MDTOT110  KEYIN     *P30:17,*V2LON,APIMTOT:
                    *P30:17,*DV,APIMTOT
          IF        FLAGGST=0
            GOTO      MDTOT100
          ENDIF
.
MDTOT120  MOVE      "30",CCOL
          MOVE      "18",CVERT
          CALL      EGST0000
          DISPLAY   *P30:18,*V2LON,APIMGST
          GOTO      MDTOT100
.
MDTOT900  PACK      KEY40,APBMBCH,APMACRD,APIMREF,APIMDOC,SP70
          MOVE      ZERO,APIMDIS
          MOVE      ZERO,APIMUPD
          MOVE      ZERO,APIMOUT
          CALL      RAAPIM1
          IF        OVRCD=0
            CALL      UPAPIM1
          ELSE
            CALL      WRAPIM1
            PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF * write to chq file
            UNPACK    KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF
            CALL      RAAPCL1
            IF        1=OVRCD
              MATCH     "Cheque Print    ",APCLDOC
              CALL      WRAPCL1 IF NOT EQUAL
            ENDIF
          ENDIF
          GOTO      MDTOT999
.
MDTOT950  PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RDAPIM1
.
MDTOT999  RETURN
.
GSTUP000  MOVE      ZERO,GSTTOTAL
          ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      RSAPIN1           * Loop Through Allocation Details
GSTUP100  CALL      RKAPIN1           * Within The Invoice
          BRANCH    OVRCD,GSTUP200
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH     KEY40,KEY51
          GOTO      GSTUP200 IF NOT EQUAL
          ASSIGN    (APINAMT/ALLTOTAL)*APIMGST,APINGST
          ADD       APINGST,GSTTOTAL
          CALL      UPAPIN1
          PACK      SAVKEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          GOTO      GSTUP100
GSTUP200
          IF        !(APIMGST=GSTTOTAL)
            MOVE      SAVKEY51,KEY51
            CALL      RDAPIN1
            IF        OVRCD=0
              ASSIGN    APINGST+APIMGST-GSTTOTAL,APINGST
              CALL      UPAPIN1
            ENDIF
          ENDIF
          RETURN

.----------------------------------------------------------------------
. Delete All Details from Credit Note
.----------------------------------------------------------------------
DELORD00
          PACK       KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF,SP70
          CALL       DEAPCL1
          PACK       KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL       DEAPIM1
          PACK       KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
DELORD10
          CALL       RSAPIN1
          CALL       RKAPIN1
          BRANCH     OVRCD,DELORD99
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH      KEY40,KEY51
          GOTO       DELORD99 IF NOT EQUAL
          CALL       DEAPIN1
          GOTO       DELORD10
.
DELORD99  RETURN
.----------------------------------------------------------------------
. Transaction Detail Screen
.----------------------------------------------------------------------
DETS0000  CALL     RDAPIN1
          BRANCH   OVRCD,DETS9000
          MOVE     APINRES,KEY4
          CALL     RDFMRS1
          MOVE     APINDIS,KEY5
          CALL     RDFMDS1
.
          PACK     KEY14,APINLED,APINACC
          CALL     RDFMAM1
.
          MOVE     APINLED,KEY2
          CALL     RDFMLA1
.
          CALL     RFMCON00    * Get Control Account Details
.
          IF       IBCNUGST=2
            ASSIGN   APINAMT+APINGST,APINAMT
          ENDIF
          CALL     SC04L000
          GOTO     DETS9999
DETS9000  BEEP
DETS9999  RETURN
.
.----------------------------------------------------------------------
. Delete Item From Credit Note
.----------------------------------------------------------------------
DITEM000
          MOVE      "Select Item to Delete   : ",DISPMSG
          CALL      MESSAGE2
DITEM005
          CALL      MDELQ000
          BRANCH    EXIT,DITEM900,DITEM900
          MOVE      SCSLITM,FIELDNO
          MATCH     "   29",SCSLITM
          GOTO      DITEM100 IF NOT EQUAL
          CALL      SELECTED
          MATCH     "APIN1",SCPSMTY
          GOTO      DITEM100 IF NOT EQUAL
.
          CALL      RDTAPIN11
          IF        OVRCD=1
            BEEP
            GOTO      DITEM005
          ENDIF
.
          PACK      KEY51,APIN1MKY,SP70
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      DEAPIN1
          ELSE
            BEEP
            GOTO      DITEM005
          ENDIF
.
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      APIN1FL1,KEY5;;
          READKS    APIN1FL1;SCPSROW,SCPSCOL,APIN1MKY
          IF        !@OVER
            MOVE      APIN1MKY,KEY51
            CALL      RDAPIN1
            IF        !@OVER
              CALL      RPAPIN1
            ENDIF
          ENDIF
          CALL      DP02L000
          CALL      UPDTOT00
          GOTO      DITEM005
.
DITEM100  MOVE      "Invalid Selection. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      DITEM005
.
DITEM900  CALL      MESSAGE3
          RETURN

.----------------------------------------------------------------------
. Add Sundry Items to an Order
.----------------------------------------------------------------------
ADDORD00  MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
.
ADDORD10  MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
          MOVE      ONE,ACCEPT
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,Z70
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      RSAPIN1
          CALL      RPAPIN1
          IF        OVRCD=0
            PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
            MATCH     KEY40,KEY51
            IF        @EQUAL
              MOVE      APINLIN,F3
              ADD       ONE,F3
              MOVE      F3,APINLIN
            ELSE
              MOVE      ONE,F3
              MOVE      F3,APINLIN
              MOVE      SP70,APINORD
            ENDIF
          ELSE
            MOVE      ONE,F3
            MOVE      F3,APINLIN
            MOVE      SP70,APINORD
          ENDIF
.
          MOVE      SP70,APINLED
          MOVE      SP70,APINACC
          MOVE      SP70,APINDIS
          MOVE      SP70,APINRES
          MOVE      SP70,APINDES
          MOVE      ZERO,APINAMT
          MOVE      SP70,APINCAT
          MOVE      ZERO,APINQTY
          MOVE      ZERO,APINUCT
          CALL      SF04L000 * Select Fields
          BRANCH    EXIT,ADDORD50,ADDORD50
          GOTO      ADDORD10
.
ADDORD50  MOVE      ZERO,EXIT
          MOVE      ZERO,ACCEPT
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      UPDTOT00
.
          RETURN
.
FMAMTY01  MOVE      ONE,CACCTIND
          RETURN
.
.--------------------------------------------------
. Get Control Accounts
.--------------------------------------------------
GETCON00
          CALL     RFMCON00
          RETURN
.
.----------------------------------------------------------------------
. Keyin Ledger With Default
.----------------------------------------------------------------------
KFMLA000  TOPIC     "FMLALEDG"
          MOVE      APBMLED,FMLALEDG
          KEYIN     *PCCOL:CVERT,*DV,FMLALEDG:
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*RV,FMLALEDG:
                    *PCCOL:CVERT,*DV,FMLALEDG
          MOVE      FMLALEDG,FMAMLEDG
          MOVE      FMLALEDG,APINLED
.
          ENDSET    FMLALEDG
          APPEND    SP70,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP70,FMLALEDG
          GOTO      KFMLA090 IF EQUAL
.
          ENDSET    FMLALEDG
          CMATCH    EXITCHAR,FMLALEDG
          GOTO      KFMLA095 IF EQUAL
.
          CMATCH    QUEST,FMLALEDG
          GOTO      KFMLA010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMLAA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMLALEDG
          APPEND    SP70,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP70,FMLALEDG
          GOTO      KFMLA000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG
KFMLA010
          RESET     FMLALEDG
          MOVE      FMLALEDG,FMAMLEDG
          MOVE      FMLALEDG,APINLED
          PACK      KEY2,FMLALEDG
          CALL      RAFMLA1
          BRANCH    OVRCD,KFMLA080
          BRANCH    CKEYTYP,KFMLA075
          CALL      RDFMLA1
KFMLA070
          MOVE      ZERO,EXIT
          GOTO      KFMLA099
KFMLA075
          MOVE      "Ledger Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMLA000
KFMLA080
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMLA099,KFMLA099
          MOVE      "Ledger Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMLA000
KFMLA090
          MOVE      ONE,EXIT
          GOTO      KFMLA099
KFMLA095
          MOVE      TWO,EXIT
KFMLA099  TOPIC     PRGID
          RETURN
.--------------------------------------------------
. Enter Account Code
.--------------------------------------------------
KFMAM000
          MOVE      APINLED,FMAMLEDG
          MOVE      ONE,CACCTIND       * posting accounts only
          MOVE      ZERO,CKEYTYP
          CALL      KFMAMA00
          MOVE      FMAMACCT,APINACC
          BRANCH    EXIT,KFMAM999,KFMAM999
.
          COMPARE   ZERO,FMAMSTAT
          GOTO      KFMAM100 IF EQUAL
.
          BEEP
          MOVE      "Account Code Suspended -",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMAM000
.
KFMAM100  PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      GBNK0000
          COMPARE   ZERO,EXIT
          GOTO      KFMAM999 IF EQUAL
.
          MOVE      "Cheque Account Does Not Match - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMAM000
.
KFMAM999  RETURN
.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSDISKY
.   Routine   :   KFMDS000 Keyin Dissection
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KFMDS000 TOPIC     "FMDSCODE"
          MOVE      APBMDIS,FMDSCODE
          KEYIN     *PCCOL:CVERT,*DV,FMDSCODE:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,FMDSCODE:
                    *PCCOL:CVERT,*DV,FMDSCODE
          MOVE      FMDSCODE,APINDIS
.
          ENDSET    FMDSCODE
          APPEND    SP70,FMDSCODE
          RESET     FMDSCODE
.
          MATCH     SP70,FMDSCODE
          GOTO      KFMDS090 IF EQUAL
.
          ENDSET    FMDSCODE
          CMATCH    EXITCHAR,FMDSCODE
          GOTO      KFMDS095 IF EQUAL
.
          CMATCH    QUEST,FMDSCODE
          GOTO      KFMDS010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMDSA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMDSCODE
          APPEND    SP70,FMDSCODE
          RESET     FMDSCODE
.
          MATCH     SP70,FMDSCODE
          GOTO      KFMDS000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMDSCODE
KFMDS010
          RESET     FMDSCODE
          PACK      KEY5,FMDSCODE
          MOVE      FMDSCODE,APINDIS
          CALL      RAFMDS1
          BRANCH    OVRCD,KFMDS080
          BRANCH    CKEYTYP,KFMDS075
          CALL      RDFMDS1
KFMDS070
          MOVE      ZERO,EXIT
          GOTO      KFMDS099
KFMDS075
          MOVE      "Dissection Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMDS000
KFMDS080
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMDS099,KFMDS099
          MOVE      "Dissection Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMDS000
KFMDS090
          MOVE      ONE,EXIT
          GOTO      KFMDS099
KFMDS095
          MOVE      TWO,EXIT
KFMDS099 TOPIC    PRGID
          RETURN
.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSRESKY
.   Routine   :   KFMRS000 Keyin Responsibility
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KFMRS000 TOPIC     "FMRSCODE"
          MOVE      APBMRES,FMRSCODE
          KEYIN     *PCCOL:CVERT,*DV,FMRSCODE:
                    *PCCOL:CVERT,*V2LON,*RV,FMRSCODE:
                    *PCCOL:CVERT,*DV,FMRSCODE
          MOVE      FMRSCODE,APINRES
.
          ENDSET    FMRSCODE
          APPEND    SP70,FMRSCODE
          RESET     FMRSCODE
.
          MATCH     SP70,FMRSCODE
          GOTO      KFMRS090 IF EQUAL
.
          CMATCH    EXITCHAR,FMRSCODE
          GOTO      KFMRS095 IF EQUAL
.
          CMATCH    QUEST,FMRSCODE
          GOTO      KFMRS010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMRSA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMRSCODE
          APPEND    SP70,FMRSCODE
          RESET     FMRSCODE
.
          MATCH     SP70,FMRSCODE
          GOTO      KFMRS000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRSCODE
KFMRS010
          PACK      KEY4,FMRSCODE
          MOVE      FMRSCODE,APINRES
          CALL      RAFMRS1
          BRANCH    OVRCD,KFMRS080
          BRANCH    CKEYTYP,KFMRS075
          CALL      RDFMRS1
KFMRS070
          MOVE      ZERO,EXIT
          GOTO      KFMRS099
KFMRS075
          MOVE      "Responsibility Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMRS000
KFMRS080
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMRS099,KFMRS099
          MOVE      "Responsibility Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMRS000
KFMRS090
          MOVE      ONE,EXIT
          GOTO      KFMRS099
KFMRS095
          MOVE      TWO,EXIT
KFMRS099 TOPIC    PRGID
          RETURN
.--------------------------------------------------
. Keyin Invoice Description
.--------------------------------------------------
INVDES00  IF        ACCEPT=1
            MOVE      SP70,APINDES
          ENDIF
INVDES01  KEYIN     *PCCOL:CVERT,*RV,*V2LON,APINDES
          MOVE      ZERO,EXIT
.
          ENDSET    APINDES
          APPEND    SP70,APINDES
          RESET     APINDES
.
          MATCH     SP70,APINDES
          GOTO      INVDES99 IF EQUAL
.
          CMATCH    QUEST,APINDES
          GOTO      INVDES10 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMTDA00
          MOVE      SCCITEM,CCITEM
.
          MOVE      FMTDCODE,APINDES
          ENDSET    APINDES
          APPEND    SP70,APINDES
          RESET     APINDES
.
          MATCH     SP70,APINDES
          GOTO      INVDES01 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,APINDES
INVDES10
          MOVE      ZERO,EXIT
          PACK      KEY4,APINDES
          CALL      RDFMTD1
          BRANCH    OVRCD,INVDES99
          MOVE      FMTDDESC,APINDES
          GOTO      INVDES01
.
INVDES99  RETURN
.
.----------------------------------------------------------------------
. Save Sundry Transaction Details
.----------------------------------------------------------------------
.* ****************************************** Start of addition        *I-44010
WAPIN000  PACK      KEY14,APINLED,APINACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            MOVE      "Invalid Ledger/Account - ",DISPMSG
            CALL      MESSAGE1
            GOTO      WAPIN980
          ELSE
            MOVE      FMAMTYPE,F1
            IF      F1<1|F1>5
              MOVE      "Invalid Ledger/Account - ",DISPMSG
              CALL      MESSAGE1
              GOTO      WAPIN980
            ENDIF
          ENDIF
.* ******************************************   End of addition        *I-44010
.
.                                                       * change label *C-44010
WAPIN050  IF        IBCNUGST=2
            ASSIGN    (APINAMT-APINGST),APINAMT
          ENDIF
.
          MOVE      ZERO,F3
          MOVE      APINLIN,F3
          COMPARE   ZERO,F3
          GOTO      WAPIN500 IF NOT EQUAL * Must have been a selection
          MOVE      SP70,APINORD          * Must be an add
          MOVE      ZERO,F3
.
WAPIN100  ADD       ONE,F3
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,F3
          CALL      RAAPIN1
          COMPARE   ZERO,OVRCD
          GOTO      WAPIN100 IF EQUAL
.
WAPIN500  MOVE      F3,APINLIN
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,APINLIN
          UNPACK    KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MOVE      ZERO,APINUPD
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      UPAPIN1
          ELSE
            CALL      DEFINP00             * Setup Defaults
            CALL      WRAPIN1
          ENDIF
.
WAPIN980  MOVE      ONE,EXIT                                           *I-44010
.
WAPIN999  RETURN
.----------------------------------------------------------------------
. Default Diss/Resp to Batch Header if Screen S4 or Blank Feilds
.----------------------------------------------------------------------
DEFINP00  MATCH     "S4",SCRID
          GOTO      DEFINP10 IF EQUAL
          MATCH     SP70,APINRES
          IF        @EQUAL
            MOVE      APBMRES,APINRES
          ENDIF
          MATCH     SP70,APINDIS
          IF        @EQUAL
            MOVE      APBMDIS,APINDIS
          ENDIF
          GOTO      DEFINP99
.
DEFINP10  MOVE      APBMDIS,APINDIS
          MOVE      APBMRES,APINRES
.
DEFINP99  RETURN
.----------------------------------------------------------------------
. Delete Sundry Transaction Details
.----------------------------------------------------------------------
DAPIN000  MOVE      ZERO,F3
          MOVE      APINLIN,F3
          COMPARE   ZERO,F3
          GOTO      DAPIN999 IF EQUAL
          MOVE      F3,APINLIN
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,APINLIN
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      DEAPIN1
          ENDIF
.
DAPIN999  RETURN
K04AMT00  KEYIN     *PCCOL:CVERT,*DV,SP20:
                    *PCCOL:CVERT,*V2LON,APINAMT
          IF        APINAMT=0
            MOVE      TWO,EXIT
            GOTO      K04AMT99
          ELSE
            MOVE      SP70,APINCAT
            MOVE      ZERO,APINQTY
            MOVE      ZERO,APINUCT
            MOVE      ZERO,EXIT
          ENDIF
.
          IF        PAYASGO=1
            MOVE      ZERO,APINGST
            GOTO      K04AMT90
          ENDIF
.
          IF        IBCNUGST=2
            MOVE      ZERO,APINGST
            IF        NOGST<>1
              CALL      CALTAX00
            ENDIF
          ENDIF
.
K04AMT90  MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     APINGST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
.
K04AMT99  RETURN
.
CALTAX00  COMPARE   ZERO,IBCNUGST
          GOTO      CALTAX90 IF EQUAL
.
          COMPARE   ZERO,APINAMT
          GOTO      CALTAX90 IF EQUAL
.
          MATCH     SP6,APINCGS
          GOTO      CALTAX90 IF EQUAL
.
          PACK      KEY14,APINCGS,APIMIDT,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     APINCGS,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  COMPARE   TWO,IBCNUGST
          GOTO      CALTAX90 IF NOT EQUAL
.
          ASSIGN    (APINAMT-(APINAMT/(ONE+(IBGEAMNT/HUNDRED)))),APINGST
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,APINGST
.
CALTAX99  RETURN
.
.------------------------------------------------------------
. Enter GST Code
.------------------------------------------------------------
EGSTC000  MOVE      SP6,APINCGS
          MOVE      SP3,APINBASC
          MOVE      SP6,IBGSCODE
          MOVE      SP3,IBGSBASC
          MOVE      SP70,IBGSDESC
          MOVE      SP1,APINPAYG
.
          IF        IBCNUGST=0
            GOTO      EGSTC999
          ELSE
            IF        IBCNUGST=1
              MOVE      FMCOINGS,APINCGS
              GOTO      EGSTC200
            ENDIF
          ENDIF
.
          IF        NOGST=1
            MOVE      ZERO,APINGST
            MOVE      SP6,APINCGS
            MOVE      SP6,APINBASC
            GOTO      EGSTC900
          ENDIF
.
          MOVE      APINCGS,IBGSCODE
          MOVE      ZERO,CKEYTYP
          MOVE      ZERO,INACTV
          CALL      KIBGSA00
          BRANCH    EXIT,EGSTC300,EGSTC999
          MOVE      IBGSCODE,APINCGS
.
EGSTC200  PACK      KEY6,APINCGS,SP70
          CALL      RDIBGS1
          BRANCH    OVRCD,EGSTC000
          MOVE      IBGSBASC,APINBASC
          MOVE      ZERO,EXIT
.
EGSTC300  COMPARE   ZERO,APINAMT
          GOTO      EGSTC999 IF EQUAL
.
          CALL      CALTAX00
.
EGSTC900  MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     APINGST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
.
EGSTC999  RETURN
.
.----------------------------------------------------------------------
. Enter GST
.----------------------------------------------------------------------
K04GST00  IF        NOGST=1
            MOVE      ZERO,APINGST
            GOTO      K04GST99
          ENDIF
.
          IF        PAYASGO=1
            MOVE      ZERO,APINGST
            GOTO      K04GST99
          ENDIF
.
          COMPARE   ZERO,APINGST
          GOTO      K04GST50 IF NOT EQUAL
.
          COMPARE   ZERO,APINAMT
          GOTO      K04GST50 IF EQUAL
.
          IF        IBCNUGST=2
            MOVE      ZERO,APINGST
            IF        NOGST<>1
              CALL      CALTAX00
            ENDIF
          ENDIF
.
K04GST50  KEYIN     *PCCOL:CVERT,*DV,SP20:
                    *PCCOL:CVERT,*V2LON,*RV,APINGST
.
K04GST99  RETURN
.----------------------------------------------------------------------
. Move Batch for Non Specific Creditor Code Entry
.----------------------------------------------------------------------
MVBCH000  MOVE      APBMBCH,APNSBCH
          RETURN
.------------------------------------------------------------
. Enter Address Line 2 and Validate Suburb
.------------------------------------------------------------
KADD2000  STRIP     APNSAD2
          SFORMAT   VAR,SCPSLEN
          MOVE      APNSAD2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APNSAD2
          SFORMAT   VAR,127
          ENDSET    APNSAD2
          APPEND    SP70,APNSAD2
          RESET     APNSAD2
          CMATCH    EXITCHAR,APNSAD2
          GOTO      KADD2900 IF EQUAL
.
          MOVE      TWO,SUBKYLIN
          PACK      IBAADLN2,APNSAD2,SP30,SP30
          PACK      IBAADLN3,APNSAD3,SP30,SP30
          PROC      AUTOPCOD
          BRANCH    EXIT,KADD2000,KADD2500
.
          MOVE      IBAPCOD,APNSPC
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APNSPC,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
KADD2500  MOVE      ZERO,EXIT
          GOTO      KADD2999
.
KADD2900  MOVE      TWO,EXIT
.
KADD2999  RETURN
.
.------------------------------------------------------------
. Enter Address Line 2 and Validate Suburb
.------------------------------------------------------------
KADD3000  STRIP     APNSAD3
          SFORMAT   VAR,SCPSLEN
          MOVE      APNSAD3,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,APNSAD3
          SFORMAT   VAR,127
          ENDSET    APNSAD3
          APPEND    SP70,APNSAD3
          RESET     APNSAD3
          CMATCH    EXITCHAR,APNSAD3
          GOTO      KADD3900 IF EQUAL
.
          MOVE      THREE,SUBKYLIN
          PACK      IBAADLN2,APNSAD2,SP30,SP30
          PACK      IBAADLN3,APNSAD3,SP30,SP30
          PROC      AUTOPCOD
          BRANCH    EXIT,KADD3000,KADD3500
.
          MOVE      IBAPCOD,APNSPC
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APNSPC,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "    6",FLDID
          CALL      GETPOSIT
KADD3500  MOVE      ZERO,EXIT
          GOTO      KADD3999
.
KADD3900  MOVE      TWO,EXIT
.
KADD3999  RETURN
.
.----------------------------------------------------------------------
. Save Non Specific Creditor
.----------------------------------------------------------------------
WAPNS000  MOVE      ZERO,PAYASGO
          MOVE      ZERO,NOGST
          IF        IBCNUGST=2
            IF        APNSGREG=0
              MOVE      ONE,NOGST
            ENDIF
          ENDIF
.
          PACK      KEY8,APNSBCH,APNSUNI
          CALL      RAAPNS1
          IF        OVRCD=0
            CALL      UPAPNS1
          ELSE
            CALL      WRAPNS1
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Enter ABN Number for Non-Specific Creditor
.----------------------------------------------------------------------
KAPABN00  COMPARE   TWO,IBCNUGST
          GOTO      KAPABN99 IF NOT EQUAL
.
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,APNSABN
.
          ENDSET    APNSABN
          APPEND    SP70,APNSABN
          RESET     APNSABN
.
          MATCH     EXITCHAR,APNSABN
          GOTO      KAPABN90 IF EQUAL
.
          MATCH     SP70,APNSABN
          IF        @EQUAL
            BEEP
            MOVE      "You Must Enter An ABN Number - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KAPABN00
          ENDIF
          GOTO      KAPABN99
.
KAPABN90  MOVE      SP70,APNSABN
          MOVE      TWO,EXIT
          GOTO      KAPABN99
.
KAPABN99  RETURN
.----------------------------------------------------------------------
. Enter GST Regisered for Non-Specific Creditor
.----------------------------------------------------------------------
KAPREG00  COMPARE   TWO,IBCNUGST
          GOTO      KAPABN99 IF NOT EQUAL
.
          MOVE      "Y",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,APNSGREG
.
KAPREG99  RETURN
.----------------------------------------------------------------------
. Calculate Allocation Total
.----------------------------------------------------------------------
ALLTOT00  IF        IBCNUGST=2
            ASSIGN    APIMTOT-APIMDIS+APIMGST,PAYTOTAL
            ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
            MOVE      PAYTOTAL,DOCTOTAL
          ELSE
            ASSIGN    APIMTOT-APIMDIS+APIMGST,PAYTOTAL
            ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
            MOVE      ALLTOTAL,DOCTOTAL
          ENDIF
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      INVTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ALLTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   60",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DOCTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   61",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      GSTALLOC,VAR
            CALL      DISPITEM
          ENDIF
          RETURN
.---------------------------------------------------------------------------
. Calculate Payment total for NON-SPECIFIC CREDITOR Screen N1
.---------------------------------------------------------------------------
CALCP000  MOVE     ZERO,APIMDIS
.
          IF       IBCNUGST=2
            ASSIGN   APIMTOT-APIMDIS,PAYTOTAL
            ASSIGN   PAYTOTAL+APIMGST,DOCTOTAL
            ASSIGN   APIMTOT-APIMDIS,ALLTOTAL
          ELSE
            ASSIGN   APIMTOT-APIMDIS+APIMGST,PAYTOTAL
            MOVE     PAYTOTAL,DOCTOTAL
            ASSIGN   APIMTOT-APIMDIS,ALLTOTAL
          ENDIF
.
CALCP999  RETURN
.----------------------------------------------------------------------
. Enter Invoice Date
.----------------------------------------------------------------------
EINDT000  MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,EINDT900
          BRANCH    CQUEST,EINDT000
          MATCH     SP70,CDAY
          GOTO      EINDT900 IF EQUAL
.
          PACK      APIMIDT,CCENT,CYEAR,CMON,CDAY
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",APIMIDT
          REP       " 0",KEY8
          MATCH     APIMIDT,KEY8
          IF        @LESS
            MOVE      "Date in the Future. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,EINDT000
            GOTO      EINDT800
          ENDIF
.
          UNPACK    APIMIDT,KEY4,KEY2
          MOVE      KEY4,TSTCCYY1
          MOVE      KEY2,TSTMM1
.
          UNPACK    KEY8,KEY4,KEY2
          MOVE      KEY4,TSTCCYY2
          MOVE      KEY2,TSTMM2
          IF        TSTCCYY2-TSTCCYY1>1
            MOVE      "Date Over 1 Year. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,EINDT000
            GOTO      EINDT800
          ENDIF
          IF        TSTCCYY2=TSTCCYY1
            IF        TSTMM2-TSTMM1>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,EINDT000
              GOTO      EINDT800
            ENDIF
          ELSE
            IF        TSTMM2-TSTMM1+12>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,EINDT000
              GOTO      EINDT800
            ENDIF
          ENDIF
EINDT800
          MOVE      ZERO,EXIT
          GOTO      EINDT999
.
EINDT900  MOVE      TWO,EXIT
EINDT999  RETURN
.--------------------------------------------------
. Keyin Invoice Description
.--------------------------------------------------
KICM0000  IF        ACCEPT=1
            MOVE      SP70,APIMICM
          ENDIF
KICM0005
          KEYIN     *PCCOL:CVERT,*RV,*V2LON,APIMICM
          MOVE      ZERO,EXIT
.
          ENDSET    APIMICM
          APPEND    SP70,APIMICM
          RESET     APIMICM
.
          MATCH     SP70,APIMICM
          GOTO      KICM9999 IF EQUAL
.
          CMATCH    QUEST,APIMICM
          GOTO      KICM0090 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMTDA00
          MOVE      SCCITEM,CCITEM
.
          MOVE      FMTDCODE,APIMICM
          ENDSET    APIMICM
          APPEND    SP70,APIMICM
          RESET     APIMICM
.
          MATCH     SP70,APIMICM
          GOTO      KICM0000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,APIMICM
KICM0090
          MOVE      ZERO,EXIT
          PACK      KEY4,APIMICM,SP70
          PACK      KEY50,KEY4,SP70
          MATCH     KEY50,APIMICM
          IF        @EQUAL
            CALL      RDFMTD1
            BRANCH    OVRCD,KICM9999
            MOVE      FMTDDESC,APIMICM
            MATCH     KEY50,APIMICM
            GOTO      KICM0005 IF NOT EQUAL
          ENDIF
.
KICM9999
          PACK      COMMENTI,APIMICM,SP70
          RETURN
.
.----------------------------------------------------------------------
. Enter Invoice Total
.----------------------------------------------------------------------
ETOIN000  MOVE        ZERO,APIMDIS
          KEYIN       *PCCOL:CVERT,*V2LON,*RV,APIMTOT
          IF          APIMTOT<0
            BEEP
            GOTO        ETOIN000
          ENDIF
          BRANCH      ACCEPT,ETOIN999
.
          MOVE        APIMTOT,VAR
          CALL        DISPITEM
          MOVE        ZERO,APIMGST
          MOVE        "    6",FLDID
          CALL        GETPOSIT
          IF          EXIT=0
            CALL        EGST0000
            MOVE        APIMGST,VAR
            CALL        DISPITEM
          ENDIF
          MOVE        "    7",FLDID
          CALL        GETPOSIT
          IF          EXIT=0
            CALL        CALCP000
            MOVE        PAYTOTAL,VAR
            CALL        DISPITEM
          ENDIF
          MOVE        "    5",FLDID
          CALL        GETPOSIT
.
ETOIN999  RETURN
.----------------------------------------------------------------------
. Enter GST
.----------------------------------------------------------------------
EGST0000  IF        NOGST=1
            MOVE      ZERO,APIMGST
            GOTO      EGST9999
          ENDIF
.
.         COMPARE   ZERO,APIMGST
.         GOTO      EGST5000 IF NOT EQUAL
.
          COMPARE   ZERO,APIMTOT
          GOTO      EGST5000 IF EQUAL
.
          MATCH     SP6,FMCOINGS
          GOTO      EGST5000 IF EQUAL
.
          IF        PAYASGO=1
            MOVE      FMCOPAYG,KEY6
          ELSE
            MOVE      FMCOINGS,KEY6
          ENDIF
.
          PACK      KEY14,KEY6,APIMIDT,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      EGST3000 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,EGST5000
.
          MATCH     KEY6,IBGECODE
          GOTO      EGST5000 IF NOT EQUAL
.
EGST3000  ASSIGN    APIMTOT-APIMDIS,F12P2
.
          COMPARE     TWO,IBCNUGST
          GOTO        EGST4000 IF NOT EQUAL
.
          IF        PAYASGO=1
            ASSIGN    (F12P2/HUNDRED)*IBGEAMNT,PAYASTOT
            MOVE      ZERO,APIMGST
            GOTO      EGST9999
          ELSE
            IF        NOGST=1
              MOVE      ZERO,APIMGST
            ELSE
              ASSIGN    (F12P2-(F12P2/(ONE+(IBGEAMNT/HUNDRED)))),APIMGST
            ENDIF
          ENDIF
          GOTO      EGST5000
.
EGST4000  ASSIGN    (F12P2/HUNDRED)*IBGEAMNT,APIMGST
.
EGST5000  KEYIN     *PCCOL:CVERT,*DV,SP15,*PCCOL:CVERT,*V2LON,*RV,APIMGST
.
EGST9999  RETURN
.-----------------------------------------------------------------
. Modify a Non Specific Creditor
.-----------------------------------------------------------------
MODCRD00  MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          MOVE      "05",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
          UNPACK    APIMCRD,KEY2,APNSUNI
          PACK      KEY8,APBMBCH,APNSUNI
          CALL      RDAPNS1
          IF        OVRCD=1
            MOVE      "Creditor Not Found. Fatal - ",DISPMSG
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
.
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      APNSUNI,VAR
          CALL      DISPITEM
          MOVE      ZERO,ACCEPT
.
          CALL      DF05L000 * Display Fields
          CALL      SF05L000 * Select Fields
.
          CALL      PUTSCR00
.
          STRIP     APMACN1
          STRIP     APMACN2
          CLEAR     CRDNAM80
          APPEND    APMACN1,CRDNAM80
          APPEND    SP1,CRDNAM80
          APPEND    APMACN2,CRDNAM80
          RESET     CRDNAM80
.
          STRIP     APMACA1
          STRIP     APMACA2
          STRIP     APMACA3
          STRIP     APMACPC
          CLEAR     CRDADD80
          APPEND    APMACA1,CRDADD80
          APPEND    SP1,CRDADD80
          APPEND    APMACA2,CRDADD80
          APPEND    SP1,CRDADD80
          APPEND    APMACA3,CRDADD80
          APPEND    SP1,CRDADD80
          APPEND    APMACPC,CRDADD80
          RESET     CRDADD80
.
          MOVE      "01",SCRID
          MOVE      ZERO,ACCEPT
          CALL      DF01L000
.
          MOVE      "N1",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
.
MODCRD99  RETURN
.
.----------------------------------------------------------------------
. Save Payment Header Details for Non Specific Creditor
.----------------------------------------------------------------------
WPYNS000  MOVE     TWO,APIMTYP      * Type (0=inv,1=Crd,2=Pay)
          MOVE     ZERO,APIMUPD     * Updated 0=No
          MOVE     ZERO,APIMOUT     * Outstanding 0=No
          MOVE     ZERO,APIMDIS     * No Discount on Credit Notes
.
          IF       IBCNUGST=2
            ASSIGN   (APIMTOT-APIMGST),APIMTOT
          ENDIF
.
          ASSIGN   APIMTOT+APIMGST,APIMPAY
          REP      " 0",APIMDDT
          REP      " 0",APIMPDT
          REP      " 0",APIMIDT
          PACK     APIMTDT,CCC,CYY,CMM,CDD
          REP      " 0",APIMTDT
.
          PACK     KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC
          UNPACK   KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RAAPIM1
          IF       OVRCD=0
            MOVE     ONE,F1
            CALL     UPAPIM1
          ELSE
            MOVE     ZERO,F1
            CALL     WRAPIM1
            PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF * write to chq file
            UNPACK    KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF
            CALL      RAAPCL1
            IF        1=OVRCD
              MATCH     "Cheque Print    ",APCLDOC
              CALL      WRAPCL1 IF NOT EQUAL
            ENDIF
          ENDIF
.--------------------------------------------------
. Calculate Total Allocated
.--------------------------------------------------
WPYNS090  MOVE       ZERO,TOTALLOC
          MOVE       ZERO,GSTALLOC
          ASSIGN     APIMTOT-APIMDIS,ALLTOTAL
          PACK       KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK       KEY51,APBMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE       ONE,FLAGINST
          CALL       RSAPIN1
WPYNS100  CALL       RKAPIN1
          BRANCH     OVRCD,WPYNS200
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH      KEY40,KEY51
          GOTO       WPYNS200 IF NOT EQUAL
          MOVE       ZERO,FLAGINST
          ADD        APINAMT,TOTALLOC
          ADD        APINGST,GSTALLOC
          GOTO       WPYNS100
.--------------------------------------------------
. Display Header Details Screen 06
.--------------------------------------------------
WPYNS200  MOVE     "06",SCRID
          CALL     SBACK000 * Display Background
          CALL     DF06L000 * Display Fields
.--------------------------------------------------
. Enter Details Screen 02
.--------------------------------------------------
WPYNS300  MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
          IF        FLAGINST=1
            CALL      INSERT00
          ENDIF
.
WPYNS400  CALL      LM02L000 * Load any Batch Details
          CALL      DF02L000 * Display Fields
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,WPYNS300,WPYNS300,WPYNS400
          RETURN
.--------------------------------------------------
. Enter New Details Accept=1
.--------------------------------------------------
INSERT00  MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      ADDORD00
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          RETURN
.----------------------------------------------------------------------
. Delete Payment Details
.----------------------------------------------------------------------
DAPIM000  MOVE     "Delete Payment. ",DISPMSG
          CALL     MESSAGE4
          BRANCH   EXIT,DAPIM900
          SUB      SAVETOT,BATCHCAL
          PACK     KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC
          UNPACK   KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RDAPIM1
          CALL     DEAPIM1
.
          PACK     KEY40,APIMDOC,APBMBCH,APIMCRD,APIMREF
          CALL     DEAPCL1
.
          PACK     KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC
          PACK     KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL     RSAPIN1
DAPIM100
          CALL     RKAPIN1
          BRANCH   OVRCD,DAPIM199
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH    KEY40,KEY51
          GOTO     DAPIM199 IF NOT EQUAL
.
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL     DEAPIN1
          CALL     RSAPIN1
          GOTO     DAPIM100
.
DAPIM199
          MOVE     "2",EXIT
          GOTO     DAPIM999
DAPIM900
          MOVE     "1",EXIT
DAPIM999
          RETURN
.
.
RSNAM000  PACK      KEY2,APINLED,SP70
          CALL      RDFMLA1
          PACK      KEY14,FMLALEDG,FMLAPAY
          CALL      RDFMAM1
          RETURN
.----------------------------------------------------------------------
. Keyin Ledger With Default
.----------------------------------------------------------------------
KSLED000  MOVE      ZERO,CKEYTYP
          TOPIC     "FMLALEDG"
          MOVE      APBMLED,FMLALEDG
          KEYIN     *PCCOL:CVERT,*DV,FMLALEDG:
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*RV,FMLALEDG:
                    *PCCOL:CVERT,*DV,FMLALEDG
          MOVE      FMLALEDG,FMAMLEDG
          MOVE      FMLALEDG,APINLED
.
          ENDSET    FMLALEDG
          APPEND    SP70,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP70,FMLALEDG
          GOTO      KSLED090 IF EQUAL
.
          ENDSET    FMLALEDG
          CMATCH    EXITCHAR,FMLALEDG
          GOTO      KSLED095 IF EQUAL
.
          CMATCH    QUEST,FMLALEDG
          GOTO      KSLED010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMLAA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMLALEDG
          APPEND    SP70,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP70,FMLALEDG
          GOTO      KSLED000 IF EQUAL
.
          MOVE      FMLALEDG,FMAMLEDG
          MOVE      FMLALEDG,APINLED
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG
KSLED010
          RESET     FMLALEDG
          PACK      KEY2,FMLALEDG
          CALL      RAFMLA1
          BRANCH    OVRCD,KSLED080
          BRANCH    CKEYTYP,KSLED075
.
          CALL      RDFMLA1
          PACK      KEY14,FMLALEDG,FMLABNK,SP70
          CALL      RDFMCA1
          MATCH     FMCACHQ,APBMCHQ
          IF        !@EQUAL
            PACK      FMLABNK,FMLABNK2,SP70
            PACK      KEY14,FMLALEDG,FMLABNK,SP70
            CALL      RDFMCA1
            MATCH     FMCACHQ,APBMCHQ
            GOTO      KSLED076 IF NOT EQUAL
          ENDIF
.
          PACK      KEY14,FMLALEDG,FMLAPAY
          CALL      RDFMAM1
.
KSLED070
          MOVE      ZERO,EXIT
          GOTO      KSLED099
KSLED075
          MOVE      "Ledger Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KSLED000
KSLED076
          MOVE      "Invalid Cheque Account - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KSLED000
KSLED080
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KSLED099,KSLED099
          MOVE      "Ledger Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KSLED000
KSLED090
          MOVE      ONE,EXIT
          GOTO      KSLED099
KSLED095
          MOVE      TWO,EXIT
KSLED099  TOPIC     PRGID
          RETURN
.----------------------------------------------------------------------
. Delete for Screen S1
.----------------------------------------------------------------------
DELS1000
          PACK     KEY40,APIMDOC,APBMBCH,APIMCRD,APIMREF
          CALL     DEAPCL1
          PACK     KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     DEAPIM1
.
. Delete any Details
.--------------------------------------------------
DELS1100  PACK     KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL     RSAPIN1
          CALL     RKAPIN1
          BRANCH   OVRCD,DELS1999
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH    KEY51,KEY40
          GOTO     DELS1999 IF NOT EQUAL
          CALL     DEAPIN1
          GOTO     DELS1100
.
DELS1999  RETURN
.
.--------------------------------------------------
. Post Valid Invoice to Cheque
.--------------------------------------------------
POSPH000  MOVE      TWO,APIMTYP
          MOVE      ZERO,APIMUPD
          MOVE      ZERO,APIMOUT
          MOVE      SP70,APIMTER
          MOVE      DOCDATE,APIMIDT
          MOVE      DOCDATE,APIMDDT
          MOVE      DOCDATE,APIMPDT
          PACK      APIMTDT,CCC,CYY,CMM,CDD
          REP       " 0",APIMIDT
          REP       " 0",APIMDDT
          REP       " 0",APIMPDT
          REP       " 0",APIMTDT
          MOVE      ZERO,APIMDIS
          ASSIGN    APIMTOT+APIMGST,APIMPAY
          PACK      KEY40,APBMBCH,APMACRD,INVREF,DOCREF
          UNPACK    KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      RAAPIM1
          IF        OVRCD=0
            CALL      UPAPIM1
          ELSE
            CALL      WRAPIM1
            PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF * write to chq file
            UNPACK    KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF
            CALL      RAAPCL1
            IF        1=OVRCD
              MATCH     "Cheque Print    ",APIMDOC
              CALL      WRAPCL1 IF NOT EQUAL
            ENDIF
          ENDIF
.--------------------------------------------------
. Create Payment in Suspense Transaction
.--------------------------------------------------
          PACK      KEY51,APBMBCH,APMACRD,INVREF,DOCREF,SP70
          UNPACK    KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MOVE      ONE,F3
          MOVE      F3,APINLIN
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MOVE      ZERO,APINUPD
          MOVE      FMLAPAY,APINACC
          MOVE      SP70,APINCAT
          MOVE      SP70,APINDES
          MOVE      ZERO,APINQTY
          MOVE      ZERO,APINUCT
          MOVE      APIMTOT,APINAMT
          ASSIGN    APIMTOT+APINGST,APINPAY
          MOVE      APIMGST,APINGST
          MOVE      SP70,APINSPA
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      UPAPIN1
          ELSE
            PACK      APINRES,APBMRES,SP70
            PACK      APINDIS,APBMDIS,SP70
            CALL      WRAPIN1
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Enter Invoice Total
.----------------------------------------------------------------------
EPHIN000  MOVE        ZERO,APIMDIS
          MOVE        ZERO,APIMGST
          KEYIN       *PCCOL:CVERT,*V2LON,*RV,APIMTOT
          IF          APIMTOT<0
            MOVE        "Must be greater than zero - ",DISPMSG
            CALL        MESSAGE1
            GOTO        EPHIN000
          ENDIF
          IF          APIMTOT=0
            MOVE        "Must be greater than zero - ",DISPMSG
            CALL        MESSAGE1
            GOTO        EPHIN000
          ENDIF
.
EPHIN999  RETURN
.
DISS1000  MOVE        "    5",FLDID
          CALL        GETPOSIT
          IF          EXIT=0
            MOVE        APIMGST,VAR
            CALL        DISPITEM
          ENDIF
          MOVE        "   10",FLDID
          CALL        GETPOSIT
          IF          EXIT=0
            MOVE        APIMTOT,VAR
            CALL        DISPITEM
          ENDIF
          MOVE        "    6",FLDID
          CALL        GETPOSIT
          IF          EXIT=0
            ASSIGN      APIMGST+APIMTOT,PAYTOTAL
            MOVE        PAYTOTAL,DOCTOTAL
            MOVE        PAYTOTAL,VAR
            CALL        DISPITEM
          ENDIF
          MOVE        "    7",FLDID
          CALL        GETPOSIT
          RETURN
.
.----------------------------------------------------------------------
. Save Payment Header Details for Non Specific Creditor
.----------------------------------------------------------------------
WPYSC000 CALL      POSS1000
.--------------------------------------------------
. Calculate Total Allocated
.--------------------------------------------------
          MOVE       ZERO,TOTALLOC
          MOVE       ZERO,GSTALLOC
          ASSIGN     APIMTOT-APIMDIS,ALLTOTAL
          PACK       KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK       KEY51,APBMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE       ONE,F1
          CALL       RSAPIN1
.
WPYSC100  CALL       RKAPIN1
          BRANCH     OVRCD,WPYSC200
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH      KEY40,KEY51
          GOTO       WPYSC200 IF NOT EQUAL
          MOVE       ZERO,F1
          ADD        APINAMT,TOTALLOC
          ADD        APINGST,GSTALLOC
          GOTO       WPYSC100
.--------------------------------------------------
. Display Header Details Screen 06
.--------------------------------------------------
WPYSC200  MOVE     "06",SCRID
          CALL     SBACK000 * Display Background
          CALL     DF06L000 * Display Fields
.--------------------------------------------------
. Enter Details Screen 02
.--------------------------------------------------
          MOVE     F1,ACCEPT
          CALL     SCS2L000
.
          RETURN
.
.--------------------------------------------------
. Post Valid Invoice to Cheque
.--------------------------------------------------
POSS1000  MATCH     "~~",APIMCRD            * Non Specific Creditor
          IF        !@EQUAL
            MOVE      DOCDATE,APIMIDT
            PACK      KEY40,INVKEY40,SP70
            CALL      RDAPIM1
          ENDIF
.
          MOVE      TWO,APIMTYP
          MOVE      ZERO,APIMUPD
          MOVE      ZERO,APIMOUT
          MOVE      SP70,APIMTER
          MOVE      DOCDATE,APIMDDT
          MOVE      DOCDATE,APIMPDT
          PACK      APIMTDT,CCC,CYY,CMM,CDD
          REP       " 0",APIMIDT
          REP       " 0",APIMDDT
          REP       " 0",APIMPDT
          REP       " 0",APIMTDT
          MOVE      ZERO,APIMDIS
          MOVE      GSTTOTAL,APIMGST
          MOVE      INVTOTAL,APIMTOT
          ASSIGN    APIMTOT+APIMGST,APIMPAY
          MOVE      COMMENT1,APIMCM1
          MOVE      COMMENT2,APIMCM2
          MOVE      COMMENTI,APIMICM
.
          PACK      KEY40,APBMBCH,APMACRD,INVREF,DOCREF
          UNPACK    KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      RAAPIM1
          IF        OVRCD=0
            CALL      UPAPIM1
          ELSE
            CALL      WRAPIM1
            PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF * write to chq file
            UNPACK    KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF
            CALL      RAAPCL1
              IF        1=OVRCD
              MATCH     "Cheque Print    ",APIMDOC
              CALL      WRAPCL1 IF NOT EQUAL
            ENDIF
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Read Line Item Details
.----------------------------------------------------------------------
S2DET000  UNPACK    APINDES,KEY5,KEY15,KEY8,KEY3,KEY1
          MOVE      KEY1,F1
          CLEAR     TRANDESC
          IF        F1=0
            APPEND    "Inv. ",TRANDESC
          ELSE
            APPEND    "Cr.  ",TRANDESC
          ENDIF
          APPEND    "Batch : ",TRANDESC
          APPEND    KEY5,TRANDESC
          APPEND    " Doc. Ref : ",TRANDESC
          STRIP     KEY15
          APPEND    KEY15,TRANDESC
          RESET     TRANDESC
.
          MATCH     SP6,APINCAT                  * inventory related ?
          GOTO      S2DET999 IF EQUAL
.
S2DET100  COMPARE   ZERO,HACCNT
          GOTO      S2DET800 IF EQUAL
.
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1
          BRANCH    OVRCD,S2DET800
.
          CALL      APISOPN1
          BRANCH    INCOSTYP,S2DET400
          GOTO      S2DET999
.
S2DET400  MOVE      SP70,SUPDES1
          MOVE      SP70,SUPDES2
          UNPACK    APINORD,KEY1,KEY7
.
          PACK      KEY12,KEY7,APINCAT
          CALL      RDSIPF1
          BRANCH    OVRCD,S2DET800
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          BRANCH    OVRCD,S2DET800
.
          CLEAR     TRANDESC
          APPEND    "P/N : ",TRANDESC
          APPEND    SIPCPN,TRANDESC
          APPEND    " Desc: ",TRANDESC
          APPEND    SIPCPD,TRANDESC
          RESET     TRANDESC
          GOTO      S2DET999
.
S2DET800  CLEAR     TRANDESC
          APPEND    "Inventory System Invalid. Order=",TRANDESC
          APPEND    APINORD,TRANDESC
          RESET     TRANDESC
          GOTO      S2DET999
.
S2DET999  RETURN
.----------------------------------------------------------------------
. Check for Balanced Payment Details and allow change to total
.----------------------------------------------------------------------
SAVE0000  PACK       KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK       KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE       ZERO,TOTALLOC
          MOVE       ZERO,GSTALLOC
          MOVE       ZERO,F3
          CALL       RSAPIN1
.
SAVE1000  CALL       RKAPIN1
          BRANCH     OVRCD,SAVE1100
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH      KEY40,KEY51
          GOTO       SAVE1100 IF NOT EQUAL
          ADD        APINAMT,TOTALLOC
          ADD        APINGST,GSTALLOC
          ADD        ONE,F3
          GOTO       SAVE1000
.
SAVE1100  ASSIGN     APIMTOT,ALLTOTAL
          MOVE       "06",SCRID
          CALL       DF06L000
          MOVE       "02",SCRID
.
          COMPARE    ZERO,F3
          GOTO       SAVE5000 IF EQUAL
.
          COMPARE    TOTALLOC,ALLTOTAL
          GOTO       SAVE1150 IF NOT EQUAL       * Balanced so Exit Screen
.
          IF         IBCNUGST=2
            COMPARE    APIMGST,GSTALLOC
            GOTO       SAVE1150 IF NOT EQUAL   * G.S.T. Unbalanced
          ENDIF
          GOTO       SAVE9100
.--------------------------
. Totals Unbalanced
.--------------------------
SAVE1150  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
SAVE1200  KEYIN     *P1:24,*EL,"Payment Unbalanced. Change Totals (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          CALL      MESSAGE3
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      SAVE2000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      SAVE9000 IF EQUAL
          BEEP
          GOTO      SAVE1200
.
SAVE2000  MOVE      "15",HTOP
          MOVE      "1",HLEF
          MOVE      "80",HRIG
          MOVE      "24",HBOT
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HRIG
          MOVE      ZERO,HBOT
.
          CALL      CHTOT000
.
          CALL      PUTSCR00
          GOTO      SAVE1100
.-------------------------
. No Detail Delete Header
.-------------------------
SAVE5000  MOVE      "No Details for that Payment. Delete. ",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,SAVE9000
          PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF,SP70
          CALL      DEAPCL1
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      DEAPIM1
          GOTO      SAVE9100
.
SAVE9000  MOVE      TWO,EXIT   * Restart Screen
          GOTO      SAVE9999
.
SAVE9100  MOVE      ZERO,EXIT  * Exit Screen
          GOTO      SAVE9999
.
SAVE9200  MOVE      ONE,EXIT   * Return to Prompt
          GOTO      SAVE9999
.
SAVE9999  RETURN
.---------------------------------------
. Change Payment Total
.---------------------------------------
CHTOT000
          DISPLAY   *P1:15,*EF
          HLINE     *G37,15,1,80
          DISPLAY   *P1:17,*V2LON," 1.",*HOFF," Payment                : "
          DISPLAY   *P30:17,*V2LON,APIMTOT
          MOVE      "S1",SCRID
          MOVE      "    5",FLDID
          MOVE      ZERO,FLAGGST
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ONE,FLAGGST
            DISPLAY   *P1:18,*V2LON," 2.",*HOFF," G.S.T.                 : "
            DISPLAY   *P30:18,*V2LON,APIMGST
          ENDIF
          MOVE      "02",SCRID
          DISPLAY   *P1:21,"    Amount Allocated       : "
          DISPLAY   *P30:21,*V2LON,TOTALLOC
          IF        FLAGGST=1
            DISPLAY   *P1:22,"    G.S.T. Allocated       : "
            DISPLAY   *P30:22,*V2LON,GSTTOTAL
          ENDIF
.
CHTOT100
          ASSIGN    APIMTOT,ALLTOTAL
          CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      CHTOT900 IF EQUAL  * Post
          COMPARE   SEQ,CCITEM
          GOTO      CHTOT950 IF EQUAL  * Cancel
          IF        FLAGGST=0
            BRANCH    CCITEM,CHTOT110
          ELSE
            BRANCH    CCITEM,CHTOT110,CHTOT120
          ENDIF
          BEEP
          GOTO      CHTOT100
.
CHTOT110
          KEYIN     *P30:17,*V2LON,APIMTOT:
                    *P30:17,*DV,APIMTOT
          IF        FLAGGST=0
            GOTO      CHTOT100
          ENDIF
.
CHTOT120  MOVE      "30",CCOL
          MOVE      "18",CVERT
          CALL      EGST0000
          DISPLAY   *P30:18,*V2LON,APIMGST
          GOTO      CHTOT100
.
CHTOT900  PACK      KEY40,APBMBCH,APMACRD,APIMREF,APIMDOC,SP70
          MOVE      ZERO,APIMDIS
          MOVE      ZERO,APIMUPD
          MOVE      ZERO,APIMOUT
          CALL      RAAPIM1
          IF        OVRCD=0
            CALL      UPAPIM1
          ELSE
            CALL      WRAPIM1
            PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF * write to chq file
            UNPACK    KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF
            CALL      RAAPCL1
            IF        1=OVRCD
              MATCH     "Cheque Print    ",APIMDOC
              CALL      WRAPCL1 IF NOT EQUAL
            ENDIF
          ENDIF
          GOTO      CHTOT999
.
CHTOT950  PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RDAPIM1
.
CHTOT999  RETURN
.
.----------------------------------------------------------------------
. Transaction Detail Screen
.----------------------------------------------------------------------
S2SEL000  CALL     RDAPIN1
          BRANCH   OVRCD,S2SEL900
          UNPACK   APINDES,ORGBATCH,ORGDOCRE,KEY8,KEY3,KEY1
          MOVE     "Unlnown    ",ORIGTRAN
          MOVE     KEY1,F1
          IF       F1=0
            MOVE     "Invoice    ",ORIGTRAN
          ENDIF
          IF       F1=1
            MOVE     "Credit Note",ORIGTRAN
          ENDIF
          IF       F1=2
            MOVE     "Payment    ",ORIGTRAN
          ENDIF
          IF       F1=3
            MOVE     "Cancelled  ",ORIGTRAN
          ENDIF
          IF       F1=4
            MOVE     "Reinstated ",ORIGTRAN
          ENDIF
.
          MOVE     APINRES,KEY4
          CALL     RDFMRS1
          MOVE     APINDIS,KEY5
          CALL     RDFMDS1
.
          PACK     KEY14,APINLED,APINACC
          CALL     RDFMAM1
.
          MOVE     APINLED,KEY2
          CALL     RDFMLA1
.
          CALL     RFMCON00    * Get Control Account Details
          PACK     KEY14,APINLED,FMCSBNK
          CALL     RDFMCA1
.
          UNPACK   APINORD,KEY1,KEY7
          CALL     RDAPIS1          * Read Inventory Directory Information
.
          MOVE     SP70,IBGSDESC
          PACK     KEY6,APINCGS,SP70
          CALL     RDIBGS1
.
          IF       IBCNUGST=2
            ASSIGN   APINAMT+APINGST,APINAMT
          ENDIF
.
          MATCH    SP70,APINCAT
          IF       @EQUAL | HACCNT=0 | OVRCD=1
            CALL     SCS4L000
            GOTO     S2SEL999
          ENDIF
.
          CALL      APISOPN1
.
. Inventory System Related Item
.-------------------------------
.
          BRANCH    INCOSTYP,S2SEL500
          CALL      APISCLS1
          GOTO      S2SEL999
.
S2SEL500  UNPACK    APINORD,KEY1,KEY7
          PACK      KEY12,KEY7,APINCAT
          CALL      RDSIPF1
          BRANCH    OVRCD,S2SEL510
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          BRANCH    OVRCD,S2SEL510
.
          PACK      KEY7,SIPFPON
          CALL      RDSIPA1
          BRANCH    OVRCD,S2SEL510
.
          MATCH     SP70,SIPCCAT
          IF        !(@EQUAL)
            MOVE      SIPCCAT,KEY7
            CALL      RDSIIA1
            PACK      KEY27,SIPCCAT,APIMCRD,SIPCSUT
            CALL      RDSIIC1
          ENDIF
          GOTO     S2SEL520
.
S2SEL510  MOVE     "Invalid",SIPCPD
          MOVE     "Invalid",SIPCPN
          MOVE     "Invalid",SIPCSUT
          MOVE     "Invalid",SIPCCAT
          MOVE     "Invalid",SIPCWAR
.
S2SEL520  CALL      RECCAL00
          CALL      SCS7L000
          CALL      APISCLS1
          GOTO      S2SEL999
.
S2SEL900  BEEP
S2SEL999  RETURN
.
RECCAL00  MOVE      SP70,LASTINV
          UNPACK    APINORD,KEY1,KEY7
          BRANCH    INCOSTYP,RECSIN00
          RETURN
.----------------------------------------------------------------------
. Recalculate for New Supply System.
.----------------------------------------------------------------------
RECSIN00  MOVE      SP70,LASTINV
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDSIPA1
          IF        OVRCD=1
            MOVE      "Error ",SIPAPON
          ENDIF
.
          PACK      KEY10,KEY7,APINCAT
          CALL      RDSIPC1
          IF        OVRCD=1
            MOVE      "Error ",SIPCPN
          ENDIF
.
          RETURN
.
.----------------------------------------------------------------------
. Delete Item From Credit Note
.----------------------------------------------------------------------
S2DIL000
          MOVE      "Select Item to Delete   : ",DISPMSG
          CALL      MESSAGE2
S2DIL005
          CALL      MDELQ000
          BRANCH    EXIT,S2DIL900,S2DIL900
          MOVE      SCSLITM,FIELDNO
          MATCH     "   29",SCSLITM
          GOTO      S2DIL100 IF NOT EQUAL
          CALL      SELECTED
          MATCH     "APIN1",SCPSMTY
          GOTO      S2DIL100 IF NOT EQUAL
.
          CALL      RDTAPIN11
          IF        OVRCD=1
            BEEP
            GOTO      S2DIL005
          ENDIF
.
          PACK      KEY51,APIN1MKY,SP70
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      DEAPIN1
          ELSE
            BEEP
            GOTO      S2DIL005
          ENDIF
.
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      APIN1FL1,KEY5;;
          READKS    APIN1FL1;SCPSROW,SCPSCOL,APIN1MKY
          IF        !@OVER
            MOVE      APIN1MKY,KEY51
            CALL      RDAPIN1
            IF        !@OVER
              CALL      RPAPIN1
            ENDIF
          ENDIF
          CALL      DPS2L000
          CALL      UPDTOT00
          GOTO      S2DIL005
.
S2DIL100  MOVE      "Invalid Selection. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      S2DIL005
.
S2DIL900  CALL      MESSAGE3
          RETURN

KS3AMT00
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,APINAMT
          IF        APINAMT=0
            BRANCH    ACCEPT,KS3AMT95  * in insert mode ?
            PROC      DELQST00         * ok to delete transaction ?
            SUB       ONE,CEXIT
            BRANCH    CEXIT,KS3AMT00,KS3AMT95
            CALL      DAPIN000
            GOTO      KS3AMT95
          ELSE
            MOVE      ONE,ACCEPT
            MOVE      SP70,APINCAT
            MOVE      ZERO,APINQTY
            MOVE      ZERO,APINUCT
          ENDIF
.
KS3AMT90  MOVE      ZERO,EXIT
          GOTO      KS3AMT99
.
KS3AMT95  MOVE      TWO,EXIT
.
KS3AMT99  RETURN
.**********************************************************************
. DELQST - my routine wont kill line 24 or modify CVERT & CCOL
.**********************************************************************
          DEFPROC   DELQST00
CCOL      FORM      3
CVERT     FORM      3
LINE24A   DIM       80
ATTR24A   DIM       80
.
          GETVAR    LINE24A,ATTR24A,1,24    * save line 24
          CALL      DELQST                  * ok to delete transaction ?
          PUTVAR    LINE24A,ATTR24A,1,24    * restore line 24
          ENDPROC
.--------------------------------------------------
. Save P/O Detail Line
.--------------------------------------------------
POSAV000
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MOVE      ZERO,APINUPD
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      UPAPIN1
          ELSE
            PACK      APINRES,APBMRES,SP70
            PACK      APINDIS,APBMDIS,SP70
            CALL      WRAPIN1
          ENDIF
.
          RETURN
.
.--------------------------------------------------
. Delete P/O Detail Line
.--------------------------------------------------
PODEL000
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      DEAPIN1
          ENDIF
          RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APS18CD     
          INC       APSAPYCD    
          INC       APSAPYIO/INC
          INC       APSBMFIO/INC
          INC       APSBMFKY    
          INC       APSCAFIO/INC
          INC       APSCILIO/INC
          INC       APSCIOIO/INC
          INC       APSCIOKY    
          INC       APSCKIKY    
          INC       APSIMSIO/INC
          INC       APSIMSKY    
          INC       APSINPIO/INC
          INC       APSISLIO/INC
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       APSNKIIO/INC
          INC       APSNKIPR    
          INC       APSNSCIO/INC
          INC       APSNSCKY    
          INC       APSOPNCD    
          INC       APSORDIO/INC
          INC       APSPPDIO/INC
          INC       APSPPDKY    
          INC       AUTOPCOD    
          INC       FMSAMAIO/INC
          INC       FMSAMAKY    
          INC       FMSBCFIO/INC
          INC       FMSBNKIO/INC
          INC       FMSBNKKY    
          INC       FMSCAFIO/INC
          INC       FMSCHQIO/INC
          INC       FMSCHQKY    
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSDISIO/INC
          INC       FMSDISKY    
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSRESIO/INC
          INC       FMSRESKY    
          INC       FMSTDSIO/INC
          INC       FMSTDSKY    
          INC       IBABATIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGKIKY    
          INC       IBAGSTIO/INC
          INC       IBAGSTKY    
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIHIO/INC
          INC       SINFACIO/INC
          INC       SINORIIO/INC
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSCMIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINWARIO/INC
          INC       TFILENAM    
          INC       WEBERRIO/INC
.
          INC       STDGENCD
.
