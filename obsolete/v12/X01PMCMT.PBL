.*****************************************************************************
.*    Program      : X01PMCMT                                                *
.*    Description  : Conversion pmscmtaf to new File layout                  *
.*                                                                           *
.*    Author       : Tracey Nguyen                                           *
.*    Date         : 10/03/2021                                              *
.*    Modifications:                                                         *
.*        V11.01.01 06/04/2021  Tracey Nguyen      TASK 0901515              *
.*                  Added more fields using the new spare variable           *
.*        V11.01.00 10/03/2021  Tracey Nguyen      TASK 0901515              *
.*                  Created Fixit for pmscmtaf new file layout.              *
.*                                                                           *
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change X01PMCMT  eg F57PTDOC
.  Global change x01pmcmt  eg f57ptdoc
.  Global change PMSCMTFD  eg PATDOCFD (new layout)
.  Global change pmscmtaf  eg patdoctf
.  Global change PMSCMTA1  eg PATDOCT1
.  Global change KEY34   eg KEY8
.  Global change KEY34  eg KEY9
.  Global change WRPMCMT1  eg WRDOCT1
.  Global change spmcmtaf  eg sptdoctf
.
.  Global changes if Oracle Option is required -
.
.  Global Change No  to Yes
.  Global change OFDUMYIO  eg RSPTDOC1
.  Global change OFDUMYIO  eg RKPTDOC1
.  Global change OFDUMYIO  eg UPPTDOC1
.
.  Global changes if Oracle Option is NOT required -

.  Global Change No  to No
.  Global change OFDUMYIO  to OFDUMYIO
.  Global change OFDUMYIO  to OFDUMYIO
.  Global change OFDUMYIO  to OFDUMYIO
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
.
.Data File Definition
.--------------------
OLDFILE1   IFILE    SQL, FIXED=300, KEY="U1-3,260-265,4-9,10-12,259-259,13-21,22-27"
.
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.PMCCCCOD  DIM       3      3        1     Claim code                         
.PMCCHFUN  DIM       6      6        4     Health Fund                        
.PMCCHFTY  DIM       3      3        10    Health Fund Type                   
.PMCCCMCD  DIM       9      9        13    Casemix Code                       
.DPMCCCNT  DIM       6      6        22    Counter                            
.PMCCPODY  FORM      6      4        28    Pre Op Cut Off Days                
.PMCCNPDY  FORM      6      4        32    No Pay Days                        
.PMCCHBPT  FORM      6      4        36    High Boundary Point/Maximum Days Stay
.PMCCCCDY  FORM      6      4        40    Critical Care Cut Off              
.PMCCFTDG  FORM      1      2        44    Field type for Disch DRG           
.                                         Field type=0 - Ignore
.                                                    1 - Mandatory
.                                                    2 - Must be blank
.                                                    3 - Exclusive
.PMCCDDRG  DIM       4      4        46    Discharge DRG                      
.PMCCFTCM  FORM      1      2        50    Field type for CMBS                
.PMCCPCMF  DIM       9      9        52    Primary CMBS from                  
.PMCCPCMT  DIM       9      9        61    Primary CMBS to                    
.PMCCFTSC  FORM      1      2        70    Field type for Secondary CMBS      
.PMCCSCMF  DIM       9      9        72    Secondary CMBS fron                
.PMCCSCMT  DIM       9      9        81    Secondary CMBS to                  
.PMCCFTTC  FORM      1      2        90    Field type for Tertiary CMBS from  
.PMCCTCMF  DIM       9      9        92    Tertiary CMBS from                 
.PMCCTCMT  DIM       9      9        101   Tertiary CMBS to                   
.PMCCFTDS  FORM      1      2        110   Field type for disch status        
.PMCCDSTA  DIM       3      3        112   Discharge Status 1
.PMCCDST2  DIM       3      3        115   Discharge Status 2                 
.PMCCDST3  DIM       3      3        118   Discharge Status 3                 
.PMCCDST4  DIM       3      3        121   Discharge Status 4                 
.PMCCDST5  DIM       3      3        124   Discharge Status 5                 
.PMCCFTDD  FORM      1      2        127   Field type for disch destination   
.PMCCDDES  DIM       3      3        129   Discharge Destination 1 (Cat DD)
.PMCCDDE2  DIM       3      3        132   Discharge Destination 2 (Cat DD)
.PMCCDDE3  DIM       3      3        135   Discharge Destination 3 (Cat DD)
.PMCCDDE4  DIM       3      3        138   Discharge Destination 4 (Cat DD)
.PMCCDDE5  DIM       3      3        141   Discharge Destination 5 (Cat DD)
.PMCCFTAS  FORM      1      2        144   Field type for Adm Source          
.PMCCASRC  DIM       3      3        146   Admission Source 1 (Cat S)
.PMCCASR2  DIM       3      3        149   Admission Source 2 (Cat S)
.PMCCASR3  DIM       3      3        152   Admission Source 3 (Cat S)
.PMCCASR4  DIM       3      3        155   Admission Source 4 (Cat S)
.PMCCASR5  DIM       3      3        158   Admission Source 5 (Cat S)
.PMCCFT1C  FORM      1      2        161   Field type for ICD disease         
.PMCCPICD  DIM       9      9        163   Primary ICD disease 1 (PRIMARY)
.PMCCPIC2  DIM       9      9        172   Primary ICD disease 2 (AND/SECONDARY)
.PMCCPIC3  DIM       9      9        181   Primary ICD disease 3 (AND/TERTIARY)
.PMCCPIC4  DIM       9      9        190   Primary ICD disease 4 (OR/PRIMARY)
.PMCCPIC5  DIM       9      9        199   Primary ICD disease 5 (OR/PRIMARY)
.PMCCFTAT  FORM      1      2        208   Field type for Adm type            
.PMCCATYP  DIM       3      3        210   Admission Type 1 (Cat A)
.PMCCATY2  DIM       3      3        213   Admission Type 2 (Cat A)
.PMCCATY3  DIM       3      3        216   Admission Type 3 (Cat A)
.PMCCATY4  DIM       3      3        219   Admission Type 4 (Cat A)
.PMCCATY5  DIM       3      3        222   Admission Type 5 (Cat A)
.PMCCFTAU  FORM      1      2        225   Field type for Adm UDF             
.PMCCAUDF  DIM       3      3        227   Admission UDF 1                    
.PMCCAUD2  DIM       3      3        230   Admission UDF 2                    
.PMCCAUD3  DIM       3      3        233   Admission UDF 3                    
.PMCCAUD4  DIM       3      3        236   Admission UDF 4                    
.PMCCAUD5  DIM       3      3        239   Admission UDF 5                    
.PMCCFTDU  FORM      1      2        242   Field type for Care Class          
.PMCCDUDF  DIM       3      3        244   Care Class 1 (Cat CC)              
.PMCCDUD2  DIM       3      3        247   Care Class 2 (Cat CC)              
.PMCCDUD3  DIM       3      3        250   Care Class 3 (Cat CC)              
.PMCCDUD4  DIM       3      3        253   Care Class 4 (Cat CC)              
.PMCCDUD5  DIM       3      3        256   Care Class 5 (Cat CC)              
.PMCCTYPE  DIM       1      1        259   Record Type
.                                         O - Overnight
.                                         D - Daycase
.                                         E - Either
.PMCCCONT  DIM       6      6        260   Contract ID
.PMCCMIND  FORM      6      4        266   Minimum Days Stay
OLDCSPAR   DIM       30     30       270   Spare
.
.End of Record                      300

.
.
.                                     ******** copy the new FD here *******
.
.Data File Definition
.--------------------
PMSCMTA1   IFILE    SQL, FIXED=400, KEY="U1-3,260-265,4-9,10-12,259-259,13-21,22-27"
PMSCMTA2   IFILE    SQL, FIXED=400, KEY="U260-265,1-3,4-9,10-12,259-259,13-21,22-27"
PMSCMTA3   IFILE    SQL, FIXED=400, KEY="U1-3,4-9,10-12,259-259,22-27,260-265,13-21"
PMSCMTA4   IFILE    SQL, FIXED=400, KEY="U13-21,1-3,4-9,10-12,259-259,22-27,260-265"
PMSCMTA5   IFILE    SQL, FIXED=400, KEY="U260-265,1-3,4-9,10-12,259-259,22-27,13-21"
.
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMCCCCOD  DIM       3      3        1     Claim code                         
PMCCHFUN  DIM       6      6        4     Health Fund                        
PMCCHFTY  DIM       3      3        10    Health Fund Type                   
PMCCCMCD  DIM       9      9        13    Casemix Code                       
DPMCCCNT  DIM       6      6        22    Counter                            
PMCCPODY  FORM      6      4        28    Pre Op Cut Off Days                
PMCCNPDY  FORM      6      4        32    No Pay Days                        
PMCCHBPT  FORM      6      4        36    High Boundary Point/Maximum Days Stay
PMCCCCDY  FORM      6      4        40    Critical Care Cut Off              
PMCCFTDG  FORM      1      2        44    Field type for Disch DRG           
.                                         Field type=0 - Ignore
.                                                    1 - Mandatory
.                                                    2 - Must be blank
.                                                    3 - Exclusive
PMCCDDRG  DIM       4      4        46    Discharge DRG                      
PMCCFTCM  FORM      1      2        50    Field type for CMBS                
PMCCPCMF  DIM       9      9        52    Primary CMBS from                  
PMCCPCMT  DIM       9      9        61    Primary CMBS to                    
PMCCFTSC  FORM      1      2        70    Field type for Secondary CMBS      
PMCCSCMF  DIM       9      9        72    Secondary CMBS fron                
PMCCSCMT  DIM       9      9        81    Secondary CMBS to                  
PMCCFTTC  FORM      1      2        90    Field type for Tertiary CMBS from  
PMCCTCMF  DIM       9      9        92    Tertiary CMBS from                 
PMCCTCMT  DIM       9      9        101   Tertiary CMBS to                   
PMCCFTDS  FORM      1      2        110   Field type for disch status        
PMCCDSTA  DIM       3      3        112   Discharge Status 1
PMCCDST2  DIM       3      3        115   Discharge Status 2                 
PMCCDST3  DIM       3      3        118   Discharge Status 3                 
PMCCDST4  DIM       3      3        121   Discharge Status 4                 
PMCCDST5  DIM       3      3        124   Discharge Status 5                 
PMCCFTDD  FORM      1      2        127   Field type for disch destination   
PMCCDDES  DIM       3      3        129   Discharge Destination 1 (Cat DD)
PMCCDDE2  DIM       3      3        132   Discharge Destination 2 (Cat DD)
PMCCDDE3  DIM       3      3        135   Discharge Destination 3 (Cat DD)
PMCCDDE4  DIM       3      3        138   Discharge Destination 4 (Cat DD)
PMCCDDE5  DIM       3      3        141   Discharge Destination 5 (Cat DD)
PMCCFTAS  FORM      1      2        144   Field type for Adm Source          
PMCCASRC  DIM       3      3        146   Admission Source 1 (Cat S)
PMCCASR2  DIM       3      3        149   Admission Source 2 (Cat S)
PMCCASR3  DIM       3      3        152   Admission Source 3 (Cat S)
PMCCASR4  DIM       3      3        155   Admission Source 4 (Cat S)
PMCCASR5  DIM       3      3        158   Admission Source 5 (Cat S)
PMCCFT1C  FORM      1      2        161   Field type for ICD disease         
PMCCPICD  DIM       9      9        163   Primary ICD disease 1 (PRIMARY)
PMCCPIC2  DIM       9      9        172   Primary ICD disease 2 (AND/SECONDARY)
PMCCPIC3  DIM       9      9        181   Primary ICD disease 3 (AND/TERTIARY)
PMCCPIC4  DIM       9      9        190   Primary ICD disease 4 (OR/PRIMARY)
PMCCPIC5  DIM       9      9        199   Primary ICD disease 5 (OR/PRIMARY)
PMCCFTAT  FORM      1      2        208   Field type for Adm type            
PMCCATYP  DIM       3      3        210   Admission Type 1 (Cat A)
PMCCATY2  DIM       3      3        213   Admission Type 2 (Cat A)
PMCCATY3  DIM       3      3        216   Admission Type 3 (Cat A)
PMCCATY4  DIM       3      3        219   Admission Type 4 (Cat A)
PMCCATY5  DIM       3      3        222   Admission Type 5 (Cat A)
PMCCFTAU  FORM      1      2        225   Field type for Adm UDF             
PMCCAUDF  DIM       3      3        227   Admission UDF 1                    
PMCCAUD2  DIM       3      3        230   Admission UDF 2                    
PMCCAUD3  DIM       3      3        233   Admission UDF 3                    
PMCCAUD4  DIM       3      3        236   Admission UDF 4                    
PMCCAUD5  DIM       3      3        239   Admission UDF 5                    
PMCCFTDU  FORM      1      2        242   Field type for Care Class          
PMCCDUDF  DIM       3      3        244   Care Class 1 (Cat CC)              
PMCCDUD2  DIM       3      3        247   Care Class 2 (Cat CC)              
PMCCDUD3  DIM       3      3        250   Care Class 3 (Cat CC)              
PMCCDUD4  DIM       3      3        253   Care Class 4 (Cat CC)              
PMCCDUD5  DIM       3      3        256   Care Class 5 (Cat CC)              
PMCCTYPE  DIM       1      1        259   Record Type
.                                         O - Overnight
.                                         D - Daycase
.                                         E - Either
PMCCCONT  DIM       6      6        260   Contract ID
PMCCMIND  FORM      6      4        266   Minimum Days Stay
PMCCICP1  DIM       9      9        270   Primary ICD Procedure 1 (PRIMARY)
PMCCICP2  DIM       9      9        279   Primary ICD Procedure 2 
.                                         (AND/SECONDARY)
PMCCICP3  DIM       9      9        288   Primary ICD Procedure 3 
.                                         (AND/TERTIARY)
PMCCICP4  DIM       9      9        297   Primary ICD Procedure 4 (OR/PRIMARY)
PMCCICP5  DIM       9      9        306   Primary ICD Procedure 5 (OR/PRIMARY)
PMCCICPF  FORM      1      2        315   Field type for ICD Procedure
PMCCFTS4  FORM      1      2        317   Field type for Fourth CMBS
PMCCPC4F  DIM       9      9        319   Fourth CMBS from
PMCCPC4T  DIM       9      9        328   Fourth CMBS to
PMCCFT5C  FORM      1      2        337   Field type for Fifth CMBS
PMCCSC5F  DIM       9      9        339   Fifth CMBS from
PMCCSC5T  DIM       9      9        348   Fifth CMBS to
PMCCFT6C  FORM      1      2        357   Field type for Sixth CMBS from
PMCCTC6F  DIM       9      9        359   Sixth CMBS from
PMCCTC6T  DIM       9      9        368   Sixth CMBS to
PMCCSPAR  DIM       23     23       377   Spare
.
.End of Record                      400

.
.Redefine Key Variables
.----------------------
PMCCCNTR  FORM      6   
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION PMSCMTFD"
PRGID     INIT      "X01PMCMT"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0500:               * no
                          MAIN9000                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9000
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  MOVE      "No",USINGORC
          REP       "yYnN",USINGORC
          MOVE      USINGORC,KEY1
          REP       "Y-N-",KEY1
          MATCH     "-",KEY1
          GOTO      OPTN9200 IF NOT EQUAL
.
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
          MATCH     "Y",USINGORC
          IF        @EQUAL
            DISPLAY   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
          ENDIF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9200  DISPLAY   *P1:3,*EF,*P1:4," Oracle Option has not been set up ":
                          "correctly":
                    *P1:6," Program will terminate    - ";
          MOVE      "Oracle Option has not been set up correctly",ERORTEXT
          WRITE     LOGFILE,SEQ;*+,ERORTEXT
          CALL      HITENTER
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          MOVE      "pmscmtaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmscmtaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmcmtaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmscmtaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmcmtaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmscmtaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmcmtaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmscmtaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 400 UC1-3,260-265,4-9,10-12,259-259,13-21,22-27",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC260-265,1-3,4-9,10-12,259-259,13-21,22-27",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-3,4-9,10-12,259-259,22-27,260-265,13-21",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC13-21,1-3,4-9,10-12,259-259,22-27,260-265",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC260-265,1-3,4-9,10-12,259-259,22-27,13-21",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSCMTA1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY34,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
          PACK      PMCCICP1,SP70
          PACK      PMCCICP2,SP70
          PACK      PMCCICP3,SP70
          PACK      PMCCICP4,SP70
          PACK      PMCCICP5,SP70
          MOVE      ZERO,PMCCICPF
.
          MOVE      ZERO,PMCCFTS4
          PACK      PMCCPC4F,SP70
          PACK      PMCCPC4T,SP70
.
          MOVE      ZERO,PMCCFT5C
          PACK      PMCCSC5F,SP70
          PACK      PMCCSC5T,SP70
.
          MOVE      ZERO,PMCCFT6C
          PACK      PMCCTC6F,SP70
          PACK      PMCCTC6T,SP70
.
          PACK      PMCCSPAR,SP70
.                                               * Pack key here
          PACK      KEY34,PMCCCCOD,PMCCCONT,PMCCHFUN,PMCCHFTY,PMCCTYPE:
                          PMCCCMCD,DPMCCCNT,SP70
          CALL      WRPMCMT1                    * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSCMTA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmcmtaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat pmscmtaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  MOVE      "Error finding 'pmscmtaf'.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"x01pmcmt.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"x01pmcmt.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "PMSCMTFD"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,*EL,"Record No. :";
.
          CALL      SLOG0000                      * write start to log file
.
          OPEN      PMSCMTA1,"pmscmtaf"
.
          PACK      KEY34,SP70
          CALL      OFDUMYIO                      * position at start of file
OFIX0500  CALL      OFDUMYIO                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.         
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          CALL      OFDUMYIO
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     PMSCMTA1
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Update completed ",CDATE,SP1,CTIMEIS:
                    *P1:24;
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
OFIX9999  RETURN
.
OFDUMYIO  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
.
READSOLD  RESET     KEY34
          READ      PMSCMTA1,KEY34;;
          RETURN

.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
.
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;PMCCCCOD,PMCCHFUN,PMCCHFTY,PMCCCMCD,DPMCCCNT:
                        PMCCPODY,PMCCNPDY,PMCCHBPT,PMCCCCDY,PMCCFTDG,PMCCDDRG:
                        PMCCFTCM,PMCCPCMF,PMCCPCMT,PMCCFTSC,PMCCSCMF,PMCCSCMT:
                        PMCCFTTC,PMCCTCMF,PMCCTCMT,PMCCFTDS,PMCCDSTA,PMCCDST2:
                        PMCCDST3,PMCCDST4,PMCCDST5,PMCCFTDD,PMCCDDES,PMCCDDE2:
                        PMCCDDE3,PMCCDDE4,PMCCDDE5,PMCCFTAS,PMCCASRC,PMCCASR2:
                        PMCCASR3,PMCCASR4,PMCCASR5,PMCCFT1C,PMCCPICD,PMCCPIC2:
                        PMCCPIC3,PMCCPIC4,PMCCPIC5,PMCCFTAT,PMCCATYP,PMCCATY2:
                        PMCCATY3,PMCCATY4,PMCCATY5,PMCCFTAU,PMCCAUDF,PMCCAUD2:
                        PMCCAUD3,PMCCAUD4,PMCCAUD5,PMCCFTDU,PMCCDUDF,PMCCDUD2:
                        PMCCDUD3,PMCCDUD4,PMCCDUD5,PMCCTYPE,PMCCCONT,PMCCMIND:
                        OLDCSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPMCCCNT,PMCCCNTR
          RETURN
.
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
WRPMCMT1  RESET     KEY34
          MOVE      PMCCCNTR,DPMCCCNT
          WRITE     PMSCMTA1,KEY34;PMCCCCOD,PMCCHFUN,PMCCHFTY,PMCCCMCD,DPMCCCNT:
                        PMCCPODY,PMCCNPDY,PMCCHBPT,PMCCCCDY,PMCCFTDG,PMCCDDRG:
                        PMCCFTCM,PMCCPCMF,PMCCPCMT,PMCCFTSC,PMCCSCMF,PMCCSCMT:
                        PMCCFTTC,PMCCTCMF,PMCCTCMT,PMCCFTDS,PMCCDSTA,PMCCDST2:
                        PMCCDST3,PMCCDST4,PMCCDST5,PMCCFTDD,PMCCDDES,PMCCDDE2:
                        PMCCDDE3,PMCCDDE4,PMCCDDE5,PMCCFTAS,PMCCASRC,PMCCASR2:
                        PMCCASR3,PMCCASR4,PMCCASR5,PMCCFT1C,PMCCPICD,PMCCPIC2:
                        PMCCPIC3,PMCCPIC4,PMCCPIC5,PMCCFTAT,PMCCATYP,PMCCATY2:
                        PMCCATY3,PMCCATY4,PMCCATY5,PMCCFTAU,PMCCAUDF,PMCCAUD2:
                        PMCCAUD3,PMCCAUD4,PMCCAUD5,PMCCFTDU,PMCCDUDF,PMCCDUD2:
                        PMCCDUD3,PMCCDUD4,PMCCDUD5,PMCCTYPE,PMCCCONT,PMCCMIND:
                        PMCCICP1,PMCCICP2,PMCCICP3,PMCCICP4,PMCCICP5,PMCCICPF:
                        PMCCFTS4,PMCCPC4F,PMCCPC4T,PMCCFT5C,PMCCSC5F,PMCCSC5T:
                        PMCCFT6C,PMCCTC6F,PMCCTC6T,PMCCSPAR
          RETURN
.

          INC       STD001IO
