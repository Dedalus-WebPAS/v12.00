.*****************************************************************************
.*    Program      : F02MRHIS                                                *
.*    Description  : Conversion mrthisaf to new File layout                  *
.*                                                                           *
.*    Author       : Mike Laming                                             *
.*    Date         : 10/05/2011                                              *
.*    Modifications:                                                         *
.*        V10.03.02 26/03/2013  Ebon Clements CAR 283238                     *
.*                  Changed FINDLOCS to read mrtlocaf using index 4          *
.*        V10.03.01 08/11/2011  Davin         CAR xxxxxx                     *
.*                  Added oracle option (ofix0000)                           *
.*****************************************************************************
.*        V10.02.02 15/07/2011  PMcM          CAR 243582                     *
.*                  Added MRHIRC* receipt fields                             *
.*        V10.02.01 27/05/2011  Mike Laming   CAR 240707                     *
.*                  Added MRHIDHOS Destn Hospital Id of MR Record - also add *
.*                        MRHIDHOS to Index 4 (in front MRHILOC)             *
.*        V10.02.00 10/05/2011  Mike Laming   CAR 240707                     *
.*                  Fixit created to add MRHICOMM Movement Comments          *
.*****************************************************************************
.
.  Global change F02MRHIS  eg F57PTDOC
.  Global change MRTHISFD  eg PATDOCFD (new layout)
.  Global change mrthisaf  eg patdoctf
.  Global change MRTHISA1  eg PATDOCT1
.  Global change KEY26   eg KEY8
.  Global change KEY26  eg KEY9
.  Global change WRMRHIS1  eg WRDOCT1
.  Global change smrhisaf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1   IFILE    SQL, FIXED=155, KEY="U1-10,11-18,19-26"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.MRHIKEY   DIM       10     10       1     Key to History Table
.MRHIDATE  DIM       8      8        11    Date of Movement (CCYYMMDD)
.MRHITIME  DIM       8      8        19    Time of Movement (HH:MM:SS)
.MRHILOC   DIM       4      4        27    Desination Location of Rec.
.MRHIRECV  DIM       6      6        31    Requested By (Using Staff Code)
.MRHIREAS  DIM       4      4        37    Reason for Movement
.MRHIOPER  DIM       6      6        41    Operator
.MRHIDDUE  DIM       8      8        47    Due Date         (CCYYMMDD)
.MRHISTAT  DIM       1      1        55    Status (1 - Out, 2 - In)
.MRHILOCK  DIM       2      2        56    Lock Field Variable
.MRHIREQB  DIM       35     35       58    Requested by Free Text Field
.MRHIUSID  DIM       10     10       93    Web User ID
.MRHIEXTN  DIM       20     20       103   Extention Number
.MRHIPAGE  DIM       20     20       123   Pager Number
OLDISPAR  DIM       12     12       143   Spare Variable
.
.End of Record                      155
.
.                                     ******** copy the new FD here *******
.
.Data File Definition
.--------------------
MRTHISA1   IFILE    SQL, FIXED=260, KEY="U1-10,11-18,19-26"
MRTHISA2   IFILE    SQL, FIXED=260, KEY="U55-55,47-54,1-10,11-18,19-26"
MRTHISA3   IFILE    SQL, FIXED=260, KEY="U11-18,19-26,1-10"
MRTHISA4   IFILE    SQL, FIXED=260, KEY="U1-10,11-18,19-26,193-195,27-30"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
MRHIKEY   DIM       10     10       1     Key to History Table
MRHIDATE  DIM       8      8        11    Date of Movement (CCYYMMDD)
MRHITIME  DIM       8      8        19    Time of Movement (HH:MM:SS)
MRHILOC   DIM       4      4        27    Desination Location of Rec.
MRHIRECV  DIM       6      6        31    Requested By (Using Staff Code)
MRHIREAS  DIM       4      4        37    Reason for Movement
MRHIOPER  DIM       6      6        41    Operator
MRHIDDUE  DIM       8      8        47    Due Date         (CCYYMMDD)
MRHISTAT  DIM       1      1        55    Status (1 - Out, 2 - In)
MRHILOCK  DIM       2      2        56    Lock Field Variable
MRHIREQB  DIM       35     35       58    Requested by (Free Text Field)
MRHIUSID  DIM       10     10       93    Web User ID
MRHIEXTN  DIM       20     20       103   Extention Number
MRHIPAGE  DIM       20     20       123   Pager Number
MRHICOMM  DIM       50     50       143   Movement Comments
MRHIDHOS  DIM       3      3        193   Destination Hospital Id of MR Recrd
MRHIRCST  DIM       1      1        196   Receipt status                         
MRHIRCUI  DIM       10     10       197   User who received record               
MRHIRCDT  DIM       8      8        207   Received date                          
MRHIRCTM  DIM       8      8        215   Received time                          
MRHISPAR  DIM       37     37       223   Spare Variable 
.
.End of Record                      260
.
.         mrtlocaf File Definition
.
MRTLOCA4  IFILE     SQL, FIXED=165, KEY="U1-4,55-57"
.
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ------------------
MRLOCODE  DIM       4          4       1  Location Code
MRLODESC  DIM       30        30       5  Description
MRLOTYPE  DIM       3          3      35  Type (Cat LT)
MRLOINDC  DIM       1          1      38  Indicator   1 = Internal
.                                                     2 = External
MRLOSTAT  FORM      1          2      39  Status Indicator 0 = Active
.                                                          1 = Non Active
MRLOUSAG  FORM      1          2      41  Usage Indicator  0 = Not Used
.                                                          1 = Used
MRLOPRNT  DIM       6          6      43  Printer
MRLOSTCD  DIM       6          6      49  Stationery Code
MRLOHOSP  DIM       3          3      55  Hospital ID (pathspaf)
MRLOPRLC  DIM       1          1      58  Priority location (1=yes)
MRLOBPRN  DIM       6          6      59  Bulk Record Request Printer
MRLOTREC  DIM       1          1      65  Using Tracking Receipt For This
.                                         Location  0=No, 1=Yes
MRLOSPAR  DIM       99         99     66  Spare
.
.End of Record                        165
.
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DISNUM    FORM      4
DDCENT    DIM       2
.
IBCNMHOS  FORM      1                       * Multi Hospital flag
INPFILE   DIM       8
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION MRTHISFD"
PRGID     INIT      "F02MRHIS"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":                   
                    *P17:8,*V2LON,COPTION                           
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.         
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      "mrthisaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat mrthisaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "smrhisaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat mrthisaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "smrhisaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "mrthisaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "smrhisaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "mrthisaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 260 UC1-10,11-18,19-26",CMDLINE            * <=== MLML
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC55-55,47-54,1-10,11-18,19-26",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC11-18,19-26,1-10",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-10,11-18,19-26,193-195,27-30",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      MRTHISA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
.
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS   * used to populate Hospital IDs
          IF        IBCNMHOS = 1
            OPEN      MRTLOCA4,"mrtlocaf"
          ENDIF
.
          PACK      KEY26,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
          MOVE      SP70,MRHICOMM
          MOVE      SP70,MRHIDHOS
          MOVE      SP70,MRHIRCST
          MOVE      SP70,MRHIRCUI
          MOVE      SP70,MRHIRCDT
          MOVE      SP70,MRHIRCTM
          MOVE      SP70,MRHISPAR
          IF        IBCNMHOS = 1
            CALL      FINDLOCS              * get Hospital IDs for each Location
          ENDIF
.                                               * Pack key here
          PACK      KEY26,MRHIKEY,MRHIDATE,MRHITIME,SP70
          CALL      WRMRHIS1                    * write to new file
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     MRTHISA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P15:20,*V2LON,RECNUM
.
READ9999  RETURN
.
.**********************************************************************
.*                               FINDLOCs                             *
.*        Read Location record to get Hospital ID                     *
.**********************************************************************
FINDLOCS  MOVE      ZERO,EXIT
          PACK      KEY7,MRHILOC,SP70
          CALL      RSMRLOC4
FINDLO10  CALL      RKMRLOC4
          BRANCH    OVRCD,FINDLO99
.
          MATCH     MRLOCODE,MRHILOC        * is Location = MRTHIS.Home Locn?
          GOTO      FINDLO99 IF NOT EQUAL
.
          MOVE      MRLOHOSP,MRHIDHOS     * set Destination Hospital
.
FINDLO99  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "smrhisaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat mrthisaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'mrthisaf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*            Oracle fix to.......                                           *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:20,*EL,"Record No. :";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS   * used to populate Hospital IDs
          IF        IBCNMHOS = 1
            OPEN      MRTHISA1,"mrthisaf"
            OPEN      MRTLOCA4,"mrtlocaf"
          ELSE
            GOTO      OFIX9999
          ENDIF     
.
          PACK      KEY26,SP70
          CALL      RSMRHIS1                      * position at start of file
OFIX0500  CALL      RKMRHIS1                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          MOVE      SP70,MRHIDHOS
          CALL      FINDLOCS              * get Hospital IDs for each Location
          CALL      UPMRHIS1
.
          GOTO      OFIX0500                     * get next record
.
OFIX9000  CLOSE     MRTHISA1
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:24,*EL,"Update completed.  ";
          CALL      HITENTER
.
OFIX9999  RETURN
+
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
READSOLD  RESET     KEY26
          READ      OLDFILE1,KEY26;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;MRHIKEY,MRHIDATE,MRHITIME,MRHILOC,MRHIRECV:
                        MRHIREAS,MRHIOPER,MRHIDDUE,MRHISTAT,MRHILOCK,MRHIREQB:
                        MRHIUSID,MRHIEXTN,MRHIPAGE,OLDISPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRMRHIS1  RESET     KEY26                                               
          WRITE     MRTHISA1,KEY26;MRHIKEY,MRHIDATE,MRHITIME,MRHILOC,MRHIRECV:
                        MRHIREAS,MRHIOPER,MRHIDDUE,MRHISTAT,MRHILOCK,MRHIREQB:
                        MRHIUSID,MRHIEXTN,MRHIPAGE,MRHICOMM,MRHIDHOS,MRHIRCST:
                        MRHIRCUI,MRHIRCDT,MRHIRCTM,MRHISPAR
          RETURN
.
UPMRHIS1
          UPDATE    MRTHISA1;MRHIKEY,MRHIDATE,MRHITIME,MRHILOC,MRHIRECV:
                        MRHIREAS,MRHIOPER,MRHIDDUE,MRHISTAT,MRHILOCK,MRHIREQB:
                        MRHIUSID,MRHIEXTN,MRHIPAGE,MRHICOMM,MRHIDHOS,MRHIRCST:
                        MRHIRCUI,MRHIRCDT,MRHIRCTM,MRHISPAR
          GOTO      UPDFLOCK IF LOCKED
          RETURN
.
RKMRHIS1
          MOVE      ZERO,OVRCD
          READKS    MRTHISA1;MRHIKEY,MRHIDATE,MRHITIME,MRHILOC,MRHIRECV:
                        MRHIREAS,MRHIOPER,MRHIDDUE,MRHISTAT,MRHILOCK,MRHIREQB:
                        MRHIUSID,MRHIEXTN,MRHIPAGE,MRHICOMM,MRHIDHOS,MRHIRCST:
                        MRHIRCUI,MRHIRCDT,MRHIRCTM,MRHISPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RSMRHIS1  RESET     KEY26
          READ      MRTHISA1,KEY26;;
          RETURN
.
.         mrtlocaf I/O routines
.
RSMRLOC4  MOVE     ZERO,OVRCD
          RESET    KEY7
          READ     MRTLOCA4,KEY7;;
          RETURN
.
RKMRLOC4  MOVE     ZERO,OVRCD
          READKS   MRTLOCA4;MRLOCODE,MRLODESC,MRLOTYPE,MRLOINDC,MRLOSTAT:
                            MRLOUSAG,MRLOPRNT,MRLOSTCD,MRLOHOSP,MRLOPRLC:
                            MRLOBPRN,MRLOTREC,MRLOSPAR
          GOTO     OVERCOND IF OVER
          RETURN
.
          INC       STD001IO
