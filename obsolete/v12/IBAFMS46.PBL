. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS46                                             *
. * Desc      :   Accrual Trial Balance                                *
. **********************************************************************
. * Date      :   03.12.1990                                           *
. * Author    :   Peter Eddey                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
.
          INC       FMSSTDDF
.
          INC       FMSAMAFD/INC
          INC       FMSCSAFD/INC
          INC       FMSONCFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSFPSFD/INC
          INC       FMSDSFFD/INC
          INC       FMSTRNFD/INC
.
.**********************************************************************
.*                   Data variables required                          *
.**********************************************************************
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
EXPORTYN  FORM      1                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
ACCTTYPE  DIM       15
COUNT     FORM      2
DSFFILE   DIM       8
FMSD      INIT      "fmsd"
FMSP      INIT      "fmsp"
FMST      INIT      "fmst"
FORMAT    INIT      "(999,999,999,999.99 "
FORMATT   INIT      "(99,999,999,999,999.99 "
FORM9     FORM      9
FORM12    FORM      12
FORM12P2  FORM      12.2
EFINDATE  DIM       10
ENDDATE    DIM       8
EPERDATE  DIM       10
FPSFILE   DIM       8
NEZPASS   FORM      "1"
ITEM      FORM      1
LASTTYPE  DIM       1
MODIFLAG  FORM      1
NOTES     DIM       30
NETYEAR   FORM      12.2
PRTFLAG   DIM       2
TOTOUT    FORM      7
EXFLAG    DIM       3
YNFLAG    DIM       3
.
OUTPERI   DIM       20    * Formated Totals - B-Fwd Total
OUTDTRN   DIM       20    *                 - Debit Transactions
OUTCTRN   DIM       20    *                 - Debit Transactions
OUTYEAR   DIM       20    *                 - C-Fwd Total
.
TOTPERI   DIM       23    * Formated Totals - B-Fwd Total
TOTDTRN   DIM       23    *                 - Debit Transactions
TOTCTRN   DIM       23    *                 - Debit Transactions
TOTYEAR   DIM       23    *                 - C-Fwd Total
.
ATOTPERI  FORM      12.2  * Account Totals
ATOTDTRN  FORM      12.2
ATOTCTRN  FORM      12.2
ATOTYEAR  FORM      12.2
ANETPER   FORM      12.2
AFILPER   FORM      12.2
.
LTOTPERI  FORM      14.2  * Ledger Totals
LTOTDTRN  FORM      14.2
LTOTCTRN  FORM      14.2
LTOTYEAR  FORM      14.2
.
STOTPERI  FORM      14.2  * Ledger Sub Totals
STOTDTRN  FORM      14.2
STOTCTRN  FORM      14.2
STOTYEAR  FORM      14.2
.
PERIDESC  DIM       15
FPERIOD   DIM       2
SAVETYPE  DIM       1
FIVE5     FORM      "55"
STARTDTE  DIM       8
TOTLMOVE  FORM      12.2
TOTBFW    FORM      12.2
TOTYTD    FORM      12.2
TRANAMT   FORM      12.2
TRNFILE   DIM       8
VALIDFLG  FORM      1
YEAREND   DIM       4
Z12       INIT      "zzzzzzzzzzzz"
ZEROBAL   FORM      1
LASTYEAR  FORM      1
.
PRGID     INIT      "IBAFMS46"
PRGNAM    INIT      "Accrual Trial Balance"                   
VERSION   INIT      "V12.00.00"
.
.**********************************************************************
.*                           ML0000                                   *
.*                    Mainline  Code                                  *
.**********************************************************************
.
ML0000    CALL      INIT0000             * initialisation
.
ML1000    CALL      DSCR0000             * display the screen
.
          CALL      KRED0000             * keyin the report details
          BRANCH    EXIT,ML9999,ML9999

.
ML2000    CALL      SIPC0000             * select item run report exit
          BRANCH    EXIT,ML9999,ML9999   * cancel or exitchar selected
.
.----  Post selected -----
.
          CALL      MAKEXP00             * create export program
          CALL      OPEN0000             * open the relative files     
          BRANCH    EXIT,ML2000
          MOVE      ZERO,CPAGENO
          CALL      PRIN0000             * Print the report
          CALL      TRAN0000
          GOTO      ML2000               * return to the prompt
.
ML9999    CHAIN     PGM
.
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD
          DISPLAY   *P64:24,"fmsamaaf"
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmscsaaf"
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmslmaaf"
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf"
          OPEN      FMSLMCA1,"fmslmcaf"
         
          MOVE      ZERO,MODIFLAG
          MOVE      SP70,YNFLAG
          MOVE      SP70,EXFLAG
.
INIT9999  RETURN

.**********************************************************************
.*                         DSCR0000                                   *
.*                     Display the screen                             *
.**********************************************************************
.
DSCR0000  DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,"1.",*HOFF," Ledger            : ":
                    *P2:5,*V2LON,"2.",*HOFF," Financial Year    : ":
                    *P2:6,*V2LON,"3.",*HOFF," Period            : ":
                    *P2:7,*V2LON,"4.",*HOFF," Zero Accounts(Y/N): ":
                    *P2:8,*V2LON,"5.",*HOFF," Export       (Y/N): "
.
DSCR9999  RETURN
.
.**********************************************************************
.*                         KRED0000                                   *
.*               Keyin the report details                             *
.**********************************************************************
.
KRED0000  MOVE      ZERO,ITEM
.
.-----  This routine keyins in the fields by incrementing a  -----
.-----  counter and callling the modify routine.             -----
.
KRED1000  ADD       ONE,ITEM
.
          COMPARE   SIX,ITEM            * test if all details have been
          GOTO      KRED9999 IF EQUAL      entered
.
          MOVE      ITEM,CCITEM
          CALL      MRED0000             * call keyin routine
          BRANCH    EXIT,KRED2000,KRED9999      exit if exitchar
          GOTO      KRED1000
.
.----- spaces entered so keyin previous field ----
.
KRED2000  SUB       TWO,ITEM
          GOTO      KRED1000
.
KRED9999  RETURN
.
.**********************************************************************
.*                         MRED0000                                   *
.*                  Modify the report details                         *
.**********************************************************************
.
MRED0000  BRANCH    CCITEM,MRED1000,MRED2000,MRED3000,MRED4000,MRED5000
          BEEP
          GOTO      MRED9999
.
MRED1000  CALL      KLED0000             * keyin ledger           
          GOTO      MRED9999
.
MRED2000  CALL      KFIN0000             * keyin financial year
          BRANCH    MODIFLAG,MRED3000    * if in modify mode enforce
          GOTO      MRED9999               keyin of period
.
MRED3000  BRANCH    EXIT,MRED9999,MRED9999
          CALL      KPER0000             * keyin period        
          GOTO      MRED9999
.
MRED4000  CALL      KZER0000
          GOTO      MRED9999
.
MRED5000  CALL      KEXP0000
          GOTO      MRED9999
.
MRED9999  RETURN
.
.**********************************************************************
.*                         KLED0000                                   *
.*                      keyin the ledger                              *
.**********************************************************************
.
KLED0000  MOVE      ZERO,EXIT
          MOVE      FOUR,CVERT
          MOVE      TWENTY5,CCOL
.
          CALL      KLMAFM00
.
          BRANCH    EXIT,KLED9000,KLED9000  * if spaces or exitchar in
.                                                exit program
          DISPLAY   *P42:4,FMLADESC
          GOTO      KLED9999
.
KLED9000  MOVE      TWO,EXIT
    
KLED9999  RETURN
.
RLMAFM00  CALL      DSCR0000
          CALL      RDIS0000
          RETURN
.
.********************************************************************
.*                          KFIN0000                                *
.*                     keyin the finacial year                      *
.********************************************************************
.
KFIN0000  MOVE      ZERO,EXIT
.
KFIN0500  DISPLAY   *P25:5,*EL
          MOVE      TWENTY5,CCOL
          MOVE      FIVE,CVERT
.
          CALL      KLMCFM00             * keyin financial year
. 
          BRANCH    EXIT,KFIN9000,KFIN9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          CLEAR     EFINDATE
          CLEAR     YEAREND
          BRANCH    FMLAPERS,KFIN3000    * branch if thirteen periods
.
. 12 periods
.
          UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          PACK      EFINDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      YEAREND,CCENT,CYEAR  
          DISPLAY   *P32:5,"Ending ",*P42:5,*V2LON,EFINDATE
          GOTO      KFIN9999
.
. 13 periods
.
KFIN3000  UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          PACK      EFINDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      YEAREND,CCENT,CYEAR
          DISPLAY   *P32:5,"Ending ",*P42:5,*V2LON,EFINDATE
          GOTO      KFIN9999
.
KFIN9000  BRANCH    MODIFLAG,KFIN0000
.
KFIN9500  DISPLAY   *P25:5,*EL
.
KFIN9999  RETURN
.
RLMCFM00  CALL      DSCR0000
          CALL      RDIS0000
          RETURN
.
.
.********************************************************************
.*                          KPER0000                                *
.*                     keyin the finacial period                    *
.********************************************************************
.
KPER0000  CLEAR     STARTDTE
          CLEAR     ENDDATE
          CLEAR     PERIDESC
.
          DISPLAY   *P25:6,*EL
          MOVE      ZERO,EXIT
          KEYIN     *P25:6,*DV,UNDLN2:
                    *P25:6,*V2LON,FORM2:
                    *P25:6,*DV,FORM2
.
          COMPARE   ONE,FORM2           * exit if equal
          GOTO      KPER9000 IF LESS 
.
          BRANCH    FMLAPERS,KPER2000    * branch on number of periods
.
          COMPARE   TEN3,FORM2           * test for <= 12 periods
          GOTO      KPER5000 IF LESS
          BEEP 
          GOTO      KPER0000
.
KPER2000  COMPARE   TEN4,FORM2           * test for <= 13 periods
          GOTO      KPER5000 IF LESS
          BEEP 
          GOTO      KPER0000
.
KPER5000  MOVE      FORM2,FPERIOD        * set period variable
.
          BRANCH    FORM2,KPER5100,KPER5200,KPER5300,KPER5400,KPER5500:
                          KPER5600,KPER5700,KPER5800,KPER5900,KPER6000:
                          KPER6100,KPER6200,KPER6300
.
KPER5100  UNPACK    FMLC01TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC01TO,ENDDATE     * set end date
          MOVE      FMLC01FR,STARTDTE    * set period start date
          MOVE      FMLC01DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5200  UNPACK    FMLC02TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC02TO,ENDDATE     * set end date
          MOVE      FMLC02FR,STARTDTE    * set period start date
          MOVE      FMLC02DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5300  UNPACK    FMLC03TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC03TO,ENDDATE     * set end date
          MOVE      FMLC03FR,STARTDTE    * set period start date
          MOVE      FMLC03DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5400  UNPACK    FMLC04TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC04TO,ENDDATE     * set end date
          MOVE      FMLC04FR,STARTDTE    * set period start date
          MOVE      FMLC04DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5500  UNPACK    FMLC05TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC05TO,ENDDATE     * set end date
          MOVE      FMLC05FR,STARTDTE    * set period start date
          MOVE      FMLC05DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5600  UNPACK    FMLC06TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC06TO,ENDDATE     * set end date
          MOVE      FMLC06FR,STARTDTE    * set period start date
          MOVE      FMLC06DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5700  UNPACK    FMLC07TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC07TO,ENDDATE     * set end date
          MOVE      FMLC07FR,STARTDTE    * set period start date
          MOVE      FMLC07DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5800  UNPACK    FMLC08TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC08TO,ENDDATE     * set end date
          MOVE      FMLC08DE,PERIDESC    * set period description
          MOVE      FMLC08FR,STARTDTE    * set period start date
          GOTO      KPER9999
.
KPER5900  UNPACK    FMLC09TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC09TO,ENDDATE     * set end date
          MOVE      FMLC09FR,STARTDTE    * set period start date
          MOVE      FMLC09DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER6000  UNPACK    FMLC10TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC10TO,ENDDATE     * set end date
          MOVE      FMLC10FR,STARTDTE    * set period start date
          MOVE      FMLC10DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER6100  UNPACK    FMLC11TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC11TO,ENDDATE     * set end date
          MOVE      FMLC11FR,STARTDTE    * set period start date
          MOVE      FMLC11DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER6200  UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC12TO,ENDDATE     * set end date
          MOVE      FMLC12FR,STARTDTE    * set period start date
          MOVE      FMLC12DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER6300  UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC13TO,ENDDATE     * set end date
          MOVE      FMLC13FR,STARTDTE    * set period start date
          MOVE      FMLC13DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER9000  BRANCH    MODIFLAG,KPER0000
          MOVE      ONE,EXIT
          DISPLAY   *P25:6,*EL
.
KPER9999  RETURN
.
.**********************************************************************
.*                         KZER0000                                   *
.*                 keyin Zero Balances Y/N
.**********************************************************************
.
KZER0000  MOVE      "Y",DEFYESNO
          MOVE      ZERO,EXIT
          MOVE      "25",CCOL
          MOVE      "7",CVERT
          CALL      YORN0000
          MOVE      FYESNO,ZEROBAL
          MOVE      YESNO,YNFLAG
          RETURN
.
.**********************************************************************
.*                         KEXP0000                                   *
.*                       Export File Y/N
.**********************************************************************
KEXP0000  MOVE      "N",DEFYESNO
          MOVE      ZERO,EXIT
          MOVE      "25",CCOL
          MOVE      "8",CVERT
          CALL      YORN0000
          MOVE      FYESNO,EXPORTYN
          MOVE      YESNO,EXFLAG
          RETURN
.
.**********************************************************************
.*                         SIPC0000                                   *
.*               Select Item Post Cancel                              *
.**********************************************************************
.
SIPC0000  MOVE      ZERO,EXIT
          MOVE      ONE,MODIFLAG
.
          CALL      MQST0000             * select item run report exit
.
          COMPARE   ZERO,CCITEM
          GOTO      SIPC9999 IF EQUAL
          GOTO      SIPC9500 IF LESS
.
          CALL      MRED0000            * modify the field
          BRANCH    EXIT,SIPC9999,SIPC9999
.
          GOTO      SIPC0000
.
SIPC9500  MOVE      ONE,EXIT             * cancel selected
.
SIPC9999  RETURN
.
.**********************************************************************
.*                           PRIN0000                                 *
.*                        Print the report                            *
.**********************************************************************
.
PRIN0000  CALL      IBACLOCK
          CALL      ZTOT0000   * Move Zero to All Totals
          CALL      HEAD0000
.
.----- clear the account type totals ----
.
          DISPLAY   *P1:24,"Printing   : ",*EF;
.
.----- get starting account type ----
.
          MOVE      SP70,LASTTYPE
          PACK      KEY15,FMLALEDG,SP20      
          CALL      RSFMAM2              * position at start of ledger
.
PRIN1000  CALL      RKFMAM2              * read next
          BRANCH    OVRCD,PRIN9500       * end of report if over
.
          MATCH     FMLALEDG,FMAMLEDG    * test if same ledger
          GOTO      PRIN9500 IF NOT EQUAL
.
          MATCH     SP70,LASTTYPE
          GOTO      PRIN2000 IF EQUAL       * first record ?
          MATCH     FMAMTYPE,LASTTYPE
          CALL      PSUB0000 IF NOT EQUAL   * print sub total ?
.
PRIN2000  PACK      LASTTYPE,FMAMTYPE,SP70
.
          MATCH     "6",FMAMTYPE
          GOTO      PRIN9500 IF NOT LESS
.
PRIN3000  COMPARE   FIVE5,CLNO           * if the page is full
          CALL      HEAD0000 IF NOT LESS
.
.---- display the account being processed ---
.
          DISPLAY   *P14:24,*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF;
.
          CALL      SETP0000             * set print display
          CALL      FORB0000
          CALL      PLIN0000             * print the report line
          GOTO      PRIN1000
.
.---- print grand total ----
.
PRIN9500  MATCH     "6",LASTTYPE         * do we have a sub total to print ?
          CALL      PSUB0000 IF LESS
.
          CALL      UND132
.
          MOVE      FORMATT,TOTPERI
          FEDIT     LTOTPERI,TOTPERI
          MOVE      FORMATT,TOTDTRN
          FEDIT     LTOTDTRN,TOTDTRN
          MOVE      FORMATT,TOTCTRN
          FEDIT     LTOTCTRN,TOTCTRN
          MOVE      FORMATT,TOTYEAR
          FEDIT     LTOTYEAR,TOTYEAR
.
          PRINT     *14,"Ledger Total",*47,TOTPERI,*87,TOTCTRN,*N:
                                       *67,TOTDTRN,*107,TOTYEAR,*N:
                    *14,"Number Of Accounts Out Of Balance With Summary Files ":
                    TOTOUT
          CALL      UND132
          BRANCH    FMLCYLC,PRIN9999
.
          PRINT     *N,*20,"N.B.    Brought Forward and Year to Date":
                        " Ledger Totals DO NOT Reflect the Total",*N:
                    *29,"of the Surplus/Deficit for the previous":
                        " Financial Year as the",*N:
                    *29,"Closing Balance Transfer Has NOT Been RUN."
          CALL      UND132
.
PRIN9999  DISPLAY   *P1:24,*EL
          RETURN
.**********************************************************************
.  PSUB - Print sub totals                             Called By PRIN
.**********************************************************************
PSUB0000  CALL      UND132
.
          MOVE      FORMATT,TOTPERI
          FEDIT     STOTPERI,TOTPERI
          MOVE      FORMATT,TOTDTRN
          FEDIT     STOTDTRN,TOTDTRN
          MOVE      FORMATT,TOTCTRN
          FEDIT     STOTCTRN,TOTCTRN
          MOVE      FORMATT,TOTYEAR
          FEDIT     STOTYEAR,TOTYEAR
.
          MOVE      ZERO,F1
          MOVE      LASTTYPE,F1
          LOAD      ACCTYPE,F1,ACCTYPE1,ACCTYPE2,ACCTYPE3,ACCTYPE4,ACCTYPE5:
                               ACCTYPE6,ACCTYPE7,ACCTYPE8,ACCTYPE9
          PRINT     *14,*+,ACCTYPE," Total",*47,TOTPERI,*87,TOTCTRN,*N:
                                            *67,TOTDTRN,*107,TOTYEAR
          CALL      WRTTOT00
.
          MOVE      ZERO,STOTPERI      * clear sub totals
          MOVE      ZERO,STOTDTRN
          MOVE      ZERO,STOTCTRN
          MOVE      ZERO,STOTYEAR
.
          MOVE      "999",CLNO
.
PSUB9999  RETURN
.**********************************************************************
.*                           ZTOT0000                                 *
.*                        Move Zero to all Totals                     *
.**********************************************************************
.
ZTOT0000  MOVE      ZERO,ATOTPERI
          MOVE      ZERO,ATOTDTRN
          MOVE      ZERO,ATOTCTRN
          MOVE      ZERO,ATOTYEAR
          MOVE      ZERO,LTOTPERI
          MOVE      ZERO,LTOTDTRN
          MOVE      ZERO,LTOTCTRN
          MOVE      ZERO,LTOTYEAR
          MOVE      ZERO,STOTPERI
          MOVE      ZERO,STOTDTRN
          MOVE      ZERO,STOTCTRN
          MOVE      ZERO,STOTYEAR
          MOVE      ZERO,TOTOUT
          RETURN
.
.**********************************************************************
.*                           SETP0000                                 *
.*                  set up the print variables                        *
.**********************************************************************
.
SETP0000  MOVE      ZERO,ATOTDTRN
          MOVE      ZERO,ATOTCTRN
.
.-----  total the transactions for the period for this account ---
.
          PACK      KEY32,FMLALEDG,FMAMACCT,STARTDTE,SP20
          CALL      RSFMTR2
.
SETP8000  CALL      RKFMTR2
          BRANCH    OVRCD,SETP9999
.
          MATCH     FMLALEDG,FMTRLEDG    * test same ledger
          GOTO      SETP9999 IF NOT EQUAL
.
          MATCH     FMAMACCT,FMTRACCT    * test same account
          GOTO      SETP9999 IF NOT EQUAL
.
          MATCH     FMTRPDAT,ENDDATE     * test not past end of period
          GOTO      SETP9999 IF LESS
.
          CALL      FAMT0000             * Add Amounts to Totals
          GOTO      SETP8000
.
.----- Test if the thre totals are out of balance ----
.
.
SETP9999  RETURN
.
.**********************************************************************
.*                         PLIN0000                                   *
.*                   Print a line on the report                       *
.**********************************************************************
.
.----- format the numeric totals ---
.
PLIN0000  CALL      CBAL0000           * check if total balances
.
          MOVE      FORMAT,OUTPERI
          FEDIT     ATOTPERI,OUTPERI
          MOVE      FORMAT,OUTDTRN
          FEDIT     ATOTDTRN,OUTDTRN
          MOVE      FORMAT,OUTCTRN
          FEDIT     ATOTCTRN,OUTCTRN
.
          MOVE      ATOTPERI,ATOTYEAR
          ADD       ATOTDTRN,ATOTYEAR
          SUB       ATOTCTRN,ATOTYEAR
          MOVE      FORMAT,OUTYEAR
          FEDIT     ATOTYEAR,OUTYEAR
.
          ADD       ATOTYEAR,LTOTYEAR       * add to grand total
          ADD       ATOTPERI,LTOTPERI
          ADD       ATOTDTRN,LTOTDTRN
          ADD       ATOTCTRN,LTOTCTRN
.
          ADD       ATOTYEAR,STOTYEAR       * add to sub total
          ADD       ATOTPERI,STOTPERI
          ADD       ATOTDTRN,STOTDTRN
          ADD       ATOTCTRN,STOTCTRN
.
          BRANCH    ZEROBAL,PLIN1000
          COMPARE   ZERO,ATOTPERI
          GOTO      PLIN1000 IF NOT EQUAL
          COMPARE   ZERO,ATOTDTRN
          GOTO      PLIN1000 IF NOT EQUAL
          COMPARE   ZERO,ATOTCTRN
          GOTO      PLIN1000 IF NOT EQUAL
          COMPARE   ZERO,ATOTYEAR
          GOTO      PLIN9999 IF EQUAL
.
PLIN1000  PRINT     *1,FMAMACCT,SP1,FMAMDESC:
                    *50,OUTPERI,OUTDTRN,OUTCTRN,OUTYEAR,SP1,PRTFLAG
          ADD       ONE,CLNO
          CALL      WRTEXP00
.
          MATCH     SP70,PRTFLAG            * account out of balance ?
          GOTO      PLIN9999 IF EQUAL
.
          MOVE      FORMAT,OUTCTRN
          FEDIT     ANETPER,OUTCTRN
          MOVE      FORMAT,OUTDTRN
          FEDIT     AFILPER,OUTDTRN
          PRINT     *14,"Net Transactions for Period ",OUTCTRN,SP2:
                        "Net on Summary File for Period ",OUTDTRN
          ADD       ONE,CLNO
.
PLIN9999  RETURN
.**********************************************************************
.  CBAL - Check if in balance                          Called By PLIN
.**********************************************************************
CBAL0000  MOVE      SP70,PRTFLAG
          MOVE      ATOTDTRN,ANETPER
          SUB       ATOTCTRN,ANETPER
          COMPARE   ANETPER,AFILPER
          GOTO      CBAL9999 IF EQUAL  * balanced ?
.
          ADD       ONE,TOTOUT
          MOVE      "**",PRTFLAG
          BRANCH    NEZPASS,CBAL9999   * iba fix ?
.
....      MOVE      SP70,PRTFLAG
          DISPLAY   *P1:10,*EF:
                    *P1:11,"Ledger/Account : ",*V2LON,FMLALEDG,FMAMACCT,*HOFF:
                    *P1:12,"Old Value      : ",*V2LON,AFILPER,*HOFF:
                    *P1:13,"New Value      : ",*V2LON,ANETPER
.
          CALL      CFPS0000           * clear fps data
          PACK      KEY14,FMLALEDG,FMAMACCT,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
.
          MOVE      FPERIOD,FORM2
          STORE     ANETPER,FORM2,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                             FMFPA05,FMFPA06,FMFPA07,FMFPA08,FMFPA09:
                             FMFPA10,FMFPA11,FMFPA12,FMFPA13
.
          MOVE      ANETPER,FORM12
          STORE     FORM12,FORM2,FMFPA01D,FMFPA02D,FMFPA03D,FMFPA04D:
                             FMFPA05D,FMFPA06D,FMFPA07D,FMFPA08D,FMFPA09D:
                             FMFPA10D,FMFPA11D,FMFPA12D,FMFPA13D
.
          MOVE      ANETPER,FORM9
          STORE     FORM9,FORM2,FMFPA01T,FMFPA02T,FMFPA03T,FMFPA04T:
                             FMFPA05T,FMFPA06T,FMFPA07T,FMFPA08T,FMFPA09T:
                             FMFPA10T,FMFPA11T,FMFPA12T,FMFPA13T
.
          CALL      DEFMFP1
          CALL      WRFMFP1
.
CBAL9999  RETURN
.**********************************************************************
.  CFPS - clear fps file                               Called By CBAL
.**********************************************************************
.
CFPS0000  MOVE      ZERO,FMFPCBF
          MOVE      ZERO,FMFPC01
          MOVE      ZERO,FMFPC02
          MOVE      ZERO,FMFPC03
          MOVE      ZERO,FMFPC04
          MOVE      ZERO,FMFPC05
          MOVE      ZERO,FMFPC06
          MOVE      ZERO,FMFPC07
          MOVE      ZERO,FMFPC08
          MOVE      ZERO,FMFPC09
          MOVE      ZERO,FMFPC10
          MOVE      ZERO,FMFPC11
          MOVE      ZERO,FMFPC12
          MOVE      ZERO,FMFPC13
.
          MOVE      ZERO,FMFPABF
          MOVE      ZERO,FMFPA01
          MOVE      ZERO,FMFPA02
          MOVE      ZERO,FMFPA03
          MOVE      ZERO,FMFPA04
          MOVE      ZERO,FMFPA05
          MOVE      ZERO,FMFPA06
          MOVE      ZERO,FMFPA07
          MOVE      ZERO,FMFPA08
          MOVE      ZERO,FMFPA09
          MOVE      ZERO,FMFPA10
          MOVE      ZERO,FMFPA11
          MOVE      ZERO,FMFPA12
          MOVE      ZERO,FMFPA13
.
          MOVE      ZERO,FMFPCOM
          MOVE      ZERO,FMFPCOM2
.
          MOVE      ZERO,FMFPCBFD
          MOVE      ZERO,FMFPC01D
          MOVE      ZERO,FMFPC02D
          MOVE      ZERO,FMFPC03D
          MOVE      ZERO,FMFPC04D
          MOVE      ZERO,FMFPC05D
          MOVE      ZERO,FMFPC06D
          MOVE      ZERO,FMFPC07D
          MOVE      ZERO,FMFPC08D
          MOVE      ZERO,FMFPC09D
          MOVE      ZERO,FMFPC10D
          MOVE      ZERO,FMFPC11D
          MOVE      ZERO,FMFPC12D
          MOVE      ZERO,FMFPC13D
.
          MOVE      ZERO,FMFPABFD
          MOVE      ZERO,FMFPA01D
          MOVE      ZERO,FMFPA02D
          MOVE      ZERO,FMFPA03D
          MOVE      ZERO,FMFPA04D
          MOVE      ZERO,FMFPA05D
          MOVE      ZERO,FMFPA06D
          MOVE      ZERO,FMFPA07D
          MOVE      ZERO,FMFPA08D
          MOVE      ZERO,FMFPA09D
          MOVE      ZERO,FMFPA10D
          MOVE      ZERO,FMFPA11D
          MOVE      ZERO,FMFPA12D
          MOVE      ZERO,FMFPA13D
.
          MOVE      ZERO,FMFPCOMD
.
          MOVE      ZERO,FMFPCBFT
          MOVE      ZERO,FMFPC01T
          MOVE      ZERO,FMFPC02T
          MOVE      ZERO,FMFPC03T
          MOVE      ZERO,FMFPC04T
          MOVE      ZERO,FMFPC05T
          MOVE      ZERO,FMFPC06T
          MOVE      ZERO,FMFPC07T
          MOVE      ZERO,FMFPC08T
          MOVE      ZERO,FMFPC09T
          MOVE      ZERO,FMFPC10T
          MOVE      ZERO,FMFPC11T
          MOVE      ZERO,FMFPC12T
          MOVE      ZERO,FMFPC13T
.
          MOVE      ZERO,FMFPABFT
          MOVE      ZERO,FMFPA01T
          MOVE      ZERO,FMFPA02T
          MOVE      ZERO,FMFPA03T
          MOVE      ZERO,FMFPA04T
          MOVE      ZERO,FMFPA05T
          MOVE      ZERO,FMFPA06T
          MOVE      ZERO,FMFPA07T
          MOVE      ZERO,FMFPA08T
          MOVE      ZERO,FMFPA09T
          MOVE      ZERO,FMFPA10T
          MOVE      ZERO,FMFPA11T
          MOVE      ZERO,FMFPA12T
          MOVE      ZERO,FMFPA13T
.
          MOVE      ZERO,FMFPCOMT
.
CFPS9999  RETURN
.**********************************************************************
.*                         HEAD0000                                   *
.*                    print the page heading                          *
.**********************************************************************
.
.----- format the account type description for the heading ----
.
HEAD0000  CALL      HEAD132
          PRINT        "Ledger           : ",FMLALEDG,SP1,FMLADESC:
                    *N,"Financial Year   : ",FMLCYEAR," Ending ",EFINDATE:
                    *62,"   Period           : ",FPERIOD," Ending ",EPERDATE
.
          CALL      UND132
.
          PRINT     *1,"Account      Description                          ":
                       "   Brought Forward               Debit         ":
                       "     Credit        Year To Date"
.
          CALL      UND132
.
          ADD       FOUR,CLNO
.
HEAD9999  RETURN
         
+
.***********************************************************************
.         Subroutine to SELECT ITEM, RUN REPORT, EXIT
.-----------------------------------------------------------------------
.
MQST0000  MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"R",*HOFF,")un ":
                    "Report, e(":
                    *V2LON,"X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQST0000 IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  X",CCITEMD
          GOTO      MQST1000 IF EQUAL
.
          MATCH     "  R",CCITEMD
          GOTO      MQST2000 IF EQUAL
.
          MATCH     "  *",CCITEMD
          GOTO      MQST3000 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      MQST0500 IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      MQST0500 IF LESS
.
          RETURN
.
MQST0500  BEEP
          GOTO      MQST0000
.
MQST1000  MOVE      "-1",CCITEM
          RETURN
.
MQST2000  MOVE      "0",CCITEM
          RETURN
.
MQST3000  MATCH     "1426",PASSCODE
          GOTO      MQST0500 IF NOT EQUAL
          MOVE      "0",NEZPASS
          DISPLAY   *P20:9,*V2LON,"Hello IBA - You are now in Fixit Mode"
          GOTO      MQST0000
+
.**********************************************************************
.                          OPEN0000
.                   Open the fps trn and dsf files
.**********************************************************************
.
OPEN0000  CLEAR     FPSFILE
          CLEAR     TRNFILE
.
.----  set up the filenames ----
.
          PACK      FPSFILE,FMSP,FMLCYEAR    
          PACK      TRNFILE,FMST,FMLCYEAR
.
OPEN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FPSFILE    * open FPS file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN6000       * if no file then no records
.
          MOVE      FMLCYEAR,F4
          SUB       ONE,F4
          PACK      FPSFILE,FMSP,F4
          REP       " 0",FPSFILE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA2,FPSFILE    * open last years fps file
          TRAPCLR   IO
          MOVE      OVRCD,LASTYEAR      * LASTYEAR Flag = 0 if open
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,TRNFILE    * open TRN file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN7000       * if no file then no records
          GOTO      OPEN9999
.
OPEN6000  MOVE      ONE,EXIT
          DISPLAY   *P1:24,*EL,*B,"No financial period summaries exist ":
                    "for this year. ";
          CALL      HITENTER
          GOTO      OPEN9999
.
OPEN7000  MOVE      ONE,EXIT
          DISPLAY   *P1:24,*EL,*B,"No transactions exist for this year. ";
          CALL      HITENTER
          GOTO      OPEN9999
.
OPEN9999  RETURN
.
.***********************************************************************
.*                        FORB0000                                     *
.*              format the balance brought forward                     *
.***********************************************************************
FORB0000  MOVE      ZERO,ATOTPERI
          MOVE      ZERO,AFILPER
          PACK      KEY14,FMLALEDG,FMAMACCT,SP70
          CALL      RDFMFP1
          BRANCH    OVRCD,FORB8000
          MOVE      FMFPABF,ATOTPERI
.
          MOVE      FPERIOD,FORM2
          LOAD      AFILPER,FORM2,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                             FMFPA05,FMFPA06,FMFPA07,FMFPA08,FMFPA09:
                             FMFPA10,FMFPA11,FMFPA12,FMFPA13
.
          SUB       ONE,FORM2
          MOVE      ZERO,COUNT
.
          COMPARE   ZERO,FORM2
          GOTO      FORB8000 IF EQUAL
.
FORB1000  ADD       ONE,COUNT
          LOAD      FORM12P2,COUNT,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                             FMFPA05,FMFPA06,FMFPA07,FMFPA08,FMFPA09:
                             FMFPA10,FMFPA11,FMFPA12,FMFPA13
.
          ADD       FORM12P2,ATOTPERI
          COMPARE   FORM2,COUNT
          GOTO      FORB1000 IF NOT EQUAL
.
FORB8000  BRANCH    FMLCYLC,FORB9999
          MOVE      FMAMTYPE,F1
          BRANCH    F1,FORB9999,FORB9999,FORB8100,FORB8100,FORB8100
          GOTO      FORB9999
.
FORB8100  BRANCH    LASTYEAR,FORB9999    * Is Last Year Open. 0=Yes 1=No
          PACK      KEY14,FMLALEDG,FMAMACCT
          CALL      RDFMFP2
          BRANCH    OVRCD,FORB9999
          ADD       FMFPABF,ATOTPERI
          ADD       FMFPA01,ATOTPERI
          ADD       FMFPA02,ATOTPERI
          ADD       FMFPA03,ATOTPERI
          ADD       FMFPA04,ATOTPERI
          ADD       FMFPA05,ATOTPERI
          ADD       FMFPA06,ATOTPERI
          ADD       FMFPA07,ATOTPERI
          ADD       FMFPA08,ATOTPERI
          ADD       FMFPA09,ATOTPERI
          ADD       FMFPA10,ATOTPERI
          ADD       FMFPA11,ATOTPERI
          ADD       FMFPA12,ATOTPERI
          ADD       FMFPA13,ATOTPERI
.
FORB9999  RETURN
.
.**********************************************************************
. FAMT0000 - Fix BCAMT as Debit/Credit
.**********************************************************************
FAMT0000  MATCH     "JC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CS",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CR",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RF",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RI",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          ADD       FMTRAMT,ATOTDTRN
          GOTO      FAMT9999
.
FAMT1000  ADD       FMTRAMT,ATOTCTRN
.
FAMT9999  RETURN
.
RDIS0000  DISPLAY   *P25:4,*V2LON,FMLALEDG,*HOFF,*P42:4,FMLADESC
          DISPLAY   *P25:5,*V2LON,FMLCYEAR,*HOFF:
                    *P32:5,"Ending ",*P42:5,*V2LON,EFINDATE
          BRANCH    MODIFLAG,RDIS5000
          GOTO      RDIS9999
.
RDIS5000  DISPLAY   *P25:6,*V2LON,FPERIOD,*HOFF:
                    *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE:
                    *P25:7,*V2LON,YNFLAG:
                    *P25:8,*V2LON,EXFLAG
RDIS9999  RETURN
.
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for 
.              creating and transfering TAB delimited 
.              export files to a PC using the unix script
.              keatran.  
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export Record to File         
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a 
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
          MOVE     "EXPORT",KEY6
          PACK     EXPORTFN,KEY6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
          WRITE    EXPORTFL,SEQ;"Account Code",TABDELM:
                                "Description",TABDELM:
                                "Brought Forward",TABDELM:
                                "Debit",TABDELM:
                                "Credit",TABDELM:
                                "Year to Date"
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXP99 IF NOT EQUAL
          WRITE    EXPORTFL,SEQ;FMAMACCT,TABDELM:
                                FMAMDESC,TABDELM:
                                OUTPERI,TABDELM:
                                OUTDTRN,TABDELM:
                                OUTCTRN,TABDELM:
                                OUTYEAR
WRTEXP99  RETURN
.------------------------------------------------------------
. Write Total to Export File
.------------------------------------------------------------
WRTTOT00  COMPARE  ONE,EXPORTYN
          GOTO     WRTTOT99 IF NOT EQUAL
          WRITE    EXPORTFL,SEQ;SP1,TABDELM:
                                SP1,TABDELM:
                                SP1,TABDELM:
                                SP1,TABDELM:
                                SP1,TABDELM
          WRITE    EXPORTFL,SEQ;SP1,TABDELM:
                                ACCTYPE," Total",TABDELM:
                                TOTPERI,TABDELM:
                                TOTDTRN,TABDELM:
                                TOTCTRN,TABDELM:
                                TOTYEAR
          WRITE    EXPORTFL,SEQ;SP1,TABDELM:
                                SP1,TABDELM:
                                SP1,TABDELM:
                                SP1,TABDELM:
                                SP1,TABDELM
WRTTOT99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9999 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.
.
          INC       FMSSTDCD
          INC       FMSAMAIO/INC
          INC       FMSCSAIO/INC
          INC       FMSONCIO/INC
          INC       FMSLMAIO/INC
          INC       FMSFPSIO/INC
          INC       FMSDSFIO/INC
          INC       FMSLMCIO/INC
          INC       FMSTRNIO/INC
          INC       FMSLMCKY
          INC       FMSLMAKY
