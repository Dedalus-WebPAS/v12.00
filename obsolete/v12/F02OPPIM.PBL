.*****************************************************************************
.*    Program      : F02OPPIM                                                *
.*    Description  : Conversion oprpimaf to new File layout                  *
.*                                                                           *
.*    Author       : Ebon Clements                                           *
.*    Date         : 21/06/2011                                              *
.*    Modifications: V10.02.00  21/06/2011  Ebon Clements  CAR 244975        *
.*                 :            Created program                              *
.*****************************************************************************
.
.  Global change F02OPPIM  eg F57PTDOC
.  Global change OPRPIMFD  eg PATDOCFD (new layout)
.  Global change oprpimaf  eg patdoctf
.  Global change OPRPIMA1  eg PATDOCT1
.  Global change KEY13   eg KEY8
.  Global change KEY13  eg KEY9
.  Global change WROPPIM1  eg WRDOCT1
.  Global change soppimaf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
OLDFILE1   IFILE    SQL, FIXED=299, KEY="U1-10,11-11,12-13"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.OPPIUNID  DIM       10     10       1     Unique ID.
.OPPITMNO  DIM       1      1        11    Team Number
.DOPPICNT  DIM       2      2        12    Counter
.OPPIICDE  DIM       15     15       14    EAN Number/Implant Code
.OPPIIQTY  FORM      3      3        29    Implant Quantity (from oprdecaf)
.OPPILTSN  DIM       20     20       32    Lot/Serial Number
.OPPICOST  DIM       10     10       52    Cost Code
.OPPILOCA  DIM       3      3        62    Location  (category Ow)
.OPPIUC01  DIM       3      3        65    User Defined Code 1  (category oE)
.OPPIUC02  DIM       3      3        68    User Defined Code 2  (category oF)
.OPPIUC03  DIM       3      3        71    User Defined Code 3  (category oG)
.OPPIUC04  DIM       3      3        74    User Defined Code 4  (category oH)
.OPPIUC05  DIM       3      3        77    User Defined Code 5  (category oI)
.OPPIUC06  DIM       3      3        80    User Defined Code 6  (category oJ)
.OPPIUC07  DIM       3      3        83    User Defined Code 7  (category oK)
.OPPIUC08  DIM       3      3        86    User Defined Code 8  (category oL)
.OPPIUC09  DIM       3      3        89    User Defined Code 9  (category oM)
.OPPIUC10  DIM       3      3        92    User Defined Code 10 (category oN)
.OPPIUC11  DIM       3      3        95    User Defined Code 11 (category oO)
.OPPIUC12  DIM       3      3        98    User Defined Code 12 (category oP)
.OPPIUC13  DIM       3      3        101   User Defined Code 13 (category oQ)
.OPPIUC14  DIM       3      3        104   User Defined Code 14 (category oR)
.OPPIUC15  DIM       3      3        107   User Defined Code 15 (category oS)
.OPPIUC16  DIM       3      3        110   User Defined Code 16 (category oT)
.OPPIUC17  DIM       3      3        113   User Defined Code 17 (category oU)
.OPPIUC18  DIM       3      3        116   User Defined Code 18 (category oV)
.OPPIUC19  DIM       3      3        119   User Defined Code 19 (category oW)
.OPPIUC20  DIM       3      3        122   User Defined Code 20 (category oX)
.OPPIUY01  DIM       1      1        125   User Defined Y/N 1
.OPPIUY02  DIM       1      1        126   User Defined Y/N 2
.OPPIUY03  DIM       1      1        127   User Defined Y/N 3
.OPPIUY04  DIM       1      1        128   User Defined Y/N 4
.OPPIUY05  DIM       1      1        129   User Defined Y/N 5
.OPPIUY06  DIM       1      1        130   User Defined Y/N 6
.OPPIUY07  DIM       1      1        131   User Defined Y/N 7
.OPPIUY08  DIM       1      1        132   User Defined Y/N 8
.OPPIUY09  DIM       1      1        133   User Defined Y/N 9
.OPPIUY10  DIM       1      1        134   User Defined Y/N 10
.OPPIUT01  DIM       8      8        135   User Defined Time Field 1
.OPPIUT02  DIM       8      8        143   User Defined Time Field 2
.OPPIUT03  DIM       8      8        151   User Defined Time Field 3
.OPPIUT04  DIM       8      8        159   User Defined Time Field 4
.OPPIUT05  DIM       8      8        167   User Defined Time Field 5
.OPPIUT06  DIM       8      8        175   User Defined Time Field 6
.OPPIUT07  DIM       8      8        183   User Defined Time Field 7
.OPPIUT08  DIM       8      8        191   User Defined Time Field 8
.OPPIUT09  DIM       8      8        199   User Defined Time Field 9
.OPPIUT10  DIM       8      8        207   User Defined Time Field 10
.OPPIUF01  FORM      6      4        215   User Defined Form Field 1
.OPPIUF02  FORM      6      4        219   User Defined Form Field 2
.OPPIUF03  FORM      6      4        223   User Defined Form Field 3
.OPPIUF04  FORM      6      4        227   User Defined Form Field 4
.OPPIUF05  FORM      6      4        231   User Defined Form Field 5
.OPPIUF06  FORM      6      4        235   User Defined Form Field 6
.OPPIUF07  FORM      6      4        239   User Defined Form Field 7
.OPPIUF08  FORM      6      4        243   User Defined Form Field 8
.OPPIUF09  FORM      6      4        247   User Defined Form Field 9
.OPPIUF10  FORM      6      4        251   User Defined Form Field 10
.OPPIDTRT  DIM       6      6        255   DTR Transaction Number (PMMITRAN)
.OPPIDUMM  DIM       1      1        261   No longer used
.OPPIONUM  DIM       7      7        262   Order Number
.OPPIICOS  DIM       15     15       269   Item Cost
.OPPIRCNT  DIM       2      2        284   Replacement Registry Form Counter
OLDDSPAR   DIM       13     13       286   Spare
.
.End of Record                      299
.
.Redefine Key Variables
.----------------------
.OPPICNTR  FORM      2
.
.                                     ******** copy the new FD here *******
.
OPRPIMA1   IFILE    SQL, FIXED=362, KEY="U1-10,11-11,12-13"
OPRPIMA2   IFILE    SQL, FIXED=362, KEY="U14-28,1-10,11-11,12-13"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
OPPIUNID  DIM       10     10       1     Unique ID.
OPPITMNO  DIM       1      1        11    Team Number
DOPPICNT  DIM       2      2        12    Counter
OPPIICDE  DIM       15     15       14    EAN Number/Implant Code
OPPIIQTY  FORM      3      3        29    Implant Quantity (from oprdecaf)
OPPILTSN  DIM       20     20       32    Lot/Serial Number
OPPICOST  DIM       10     10       52    Cost Code
OPPILOCA  DIM       3      3        62    Location  (category Ow)
OPPIUC01  DIM       3      3        65    User Defined Code 1  (category oE)
OPPIUC02  DIM       3      3        68    User Defined Code 2  (category oF)
OPPIUC03  DIM       3      3        71    User Defined Code 3  (category oG)
OPPIUC04  DIM       3      3        74    User Defined Code 4  (category oH)
OPPIUC05  DIM       3      3        77    User Defined Code 5  (category oI)
OPPIUC06  DIM       3      3        80    User Defined Code 6  (category oJ)
OPPIUC07  DIM       3      3        83    User Defined Code 7  (category oK)
OPPIUC08  DIM       3      3        86    User Defined Code 8  (category oL)
OPPIUC09  DIM       3      3        89    User Defined Code 9  (category oM)
OPPIUC10  DIM       3      3        92    User Defined Code 10 (category oN)
OPPIUC11  DIM       3      3        95    User Defined Code 11 (category oO)
OPPIUC12  DIM       3      3        98    User Defined Code 12 (category oP)
OPPIUC13  DIM       3      3        101   User Defined Code 13 (category oQ)
OPPIUC14  DIM       3      3        104   User Defined Code 14 (category oR)
OPPIUC15  DIM       3      3        107   User Defined Code 15 (category oS)
OPPIUC16  DIM       3      3        110   User Defined Code 16 (category oT)
OPPIUC17  DIM       3      3        113   User Defined Code 17 (category oU)
OPPIUC18  DIM       3      3        116   User Defined Code 18 (category oV)
OPPIUC19  DIM       3      3        119   User Defined Code 19 (category oW)
OPPIUC20  DIM       3      3        122   User Defined Code 20 (category oX)
OPPIUY01  DIM       1      1        125   User Defined Y/N 1
OPPIUY02  DIM       1      1        126   User Defined Y/N 2
OPPIUY03  DIM       1      1        127   User Defined Y/N 3
OPPIUY04  DIM       1      1        128   User Defined Y/N 4
OPPIUY05  DIM       1      1        129   User Defined Y/N 5
OPPIUY06  DIM       1      1        130   User Defined Y/N 6
OPPIUY07  DIM       1      1        131   User Defined Y/N 7
OPPIUY08  DIM       1      1        132   User Defined Y/N 8
OPPIUY09  DIM       1      1        133   User Defined Y/N 9
OPPIUY10  DIM       1      1        134   User Defined Y/N 10
OPPIUT01  DIM       8      8        135   User Defined Time Field 1
OPPIUT02  DIM       8      8        143   User Defined Time Field 2
OPPIUT03  DIM       8      8        151   User Defined Time Field 3
OPPIUT04  DIM       8      8        159   User Defined Time Field 4
OPPIUT05  DIM       8      8        167   User Defined Time Field 5
OPPIUT06  DIM       8      8        175   User Defined Time Field 6
OPPIUT07  DIM       8      8        183   User Defined Time Field 7
OPPIUT08  DIM       8      8        191   User Defined Time Field 8
OPPIUT09  DIM       8      8        199   User Defined Time Field 9
OPPIUT10  DIM       8      8        207   User Defined Time Field 10
OPPIUF01  FORM      6      4        215   User Defined Form Field 1
OPPIUF02  FORM      6      4        219   User Defined Form Field 2
OPPIUF03  FORM      6      4        223   User Defined Form Field 3
OPPIUF04  FORM      6      4        227   User Defined Form Field 4
OPPIUF05  FORM      6      4        231   User Defined Form Field 5
OPPIUF06  FORM      6      4        235   User Defined Form Field 6
OPPIUF07  FORM      6      4        239   User Defined Form Field 7
OPPIUF08  FORM      6      4        243   User Defined Form Field 8
OPPIUF09  FORM      6      4        247   User Defined Form Field 9
OPPIUF10  FORM      6      4        251   User Defined Form Field 10
OPPIDTRT  DIM       6      6        255   DTR Transaction Number (PMMITRAN)
OPPIDUMM  DIM       1      1        261   No longer used
OPPIONUM  DIM       7      7        262   Order Number
OPPIICOS  DIM       15     15       269   Item Cost
OPPIRCNT  DIM       2      2        284   Replacement Registry Form Counter
OPPICDAT  DIM       8      8        286   Date Record Created (CCYYMMDD)
OPPICTIM  DIM       8      8        294   Time Record Created (HH:MM:SS)
OPPICUID  DIM       10     10       302   WEB User ID Created (websecaf)
OPPISPAR  DIM       50     50       312   Spare
.
.End of Record                      362
.
.Redefine Key Variables
.----------------------
OPPICNTR  FORM      2

.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DIM60     DIM       60
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION OPRPIMFD"
PRGID     INIT      "F02OPPIM"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000              * run c-isam fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000              * c-isam fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      "oprpimaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat oprpimaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "soppimaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat oprpimaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "soppimaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "oprpimaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "soppimaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "oprpimaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 362 UC1-10,11-11,12-13",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC14-28,1-10,11-11,12-13",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      OPRPIMA1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY13,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
.
          IF        (RECNUM%1000) = 0 | (RECNUM%1000) = 1
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.                                               * Pack key here
          MOVE      SP70,OPPICDAT
          MOVE      SP70,OPPICTIM
          MOVE      SP70,OPPICUID
          MOVE      SP70,OPPISPAR
.
          PACK      KEY13,OPPIUNID,OPPITMNO,OPPICNTR,SP70
          CALL      WROPPIM1                    * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     OPRPIMA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "soppimaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat oprpimaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'oprpimaf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  RESET     KEY13
          READ      OLDFILE1,KEY13;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD
          MOVE      ZERO,OVRCD
          READKS    OLDFILE1;OPPIUNID,OPPITMNO,DOPPICNT,OPPIICDE,OPPIIQTY:
                        OPPILTSN,OPPICOST,OPPILOCA,OPPIUC01,OPPIUC02,OPPIUC03:
                        OPPIUC04,OPPIUC05,OPPIUC06,OPPIUC07,OPPIUC08,OPPIUC09:
                        OPPIUC10,OPPIUC11,OPPIUC12,OPPIUC13,OPPIUC14,OPPIUC15:
                        OPPIUC16,OPPIUC17,OPPIUC18,OPPIUC19,OPPIUC20,OPPIUY01:
                        OPPIUY02,OPPIUY03,OPPIUY04,OPPIUY05,OPPIUY06,OPPIUY07:
                        OPPIUY08,OPPIUY09,OPPIUY10,OPPIUT01,OPPIUT02,OPPIUT03:
                        OPPIUT04,OPPIUT05,OPPIUT06,OPPIUT07,OPPIUT08,OPPIUT09:
                        OPPIUT10,OPPIUF01,OPPIUF02,OPPIUF03,OPPIUF04,OPPIUF05:
                        OPPIUF06,OPPIUF07,OPPIUF08,OPPIUF09,OPPIUF10,OPPIDTRT:
                        OPPIDUMM,OPPIONUM,OPPIICOS,OPPIRCNT,OLDDSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DOPPICNT,OPPICNTR
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WROPPIM1  RESET     KEY13
          MOVE      OPPICNTR,DOPPICNT
          WRITE     OPRPIMA1,KEY13;OPPIUNID,OPPITMNO,DOPPICNT,OPPIICDE,OPPIIQTY:
                        OPPILTSN,OPPICOST,OPPILOCA,OPPIUC01,OPPIUC02,OPPIUC03:
                        OPPIUC04,OPPIUC05,OPPIUC06,OPPIUC07,OPPIUC08,OPPIUC09:
                        OPPIUC10,OPPIUC11,OPPIUC12,OPPIUC13,OPPIUC14,OPPIUC15:
                        OPPIUC16,OPPIUC17,OPPIUC18,OPPIUC19,OPPIUC20,OPPIUY01:
                        OPPIUY02,OPPIUY03,OPPIUY04,OPPIUY05,OPPIUY06,OPPIUY07:
                        OPPIUY08,OPPIUY09,OPPIUY10,OPPIUT01,OPPIUT02,OPPIUT03:
                        OPPIUT04,OPPIUT05,OPPIUT06,OPPIUT07,OPPIUT08,OPPIUT09:
                        OPPIUT10,OPPIUF01,OPPIUF02,OPPIUF03,OPPIUF04,OPPIUF05:
                        OPPIUF06,OPPIUF07,OPPIUF08,OPPIUF09,OPPIUF10,OPPIDTRT:
                        OPPIDUMM,OPPIONUM,OPPIICOS,OPPIRCNT,OPPICDAT,OPPICTIM:
                        OPPICUID,OPPISPAR
          RETURN
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
          INC       STD001IO
