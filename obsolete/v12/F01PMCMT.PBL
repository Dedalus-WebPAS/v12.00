.*****************************************************************************
.*    Program      : F01PMCMT                                                *
.*    Description  : Conversion pmscmtaf to new File layout                  *
.*                                                                           *
.*    Author       : Ebon Clements                                           *
.*    Date         : 19/01/2011                                              *
.*    Modifications: V10.01.00  19/01/2011  Ebon Clements  CAR 233051        *
.*                 :            Created program                              *
.*                   V10.01.01  02/02/2011 J.Tan                             *
.*                              Mods to print error for blank Contract ID    *
.*                   V10.01.03  28/03/2011 J.Tan   CAR 233051                *
.*                              Fixed iserase for ORACLE                     *
.*****************************************************************************
.
.  Global change F01PMCMT  eg F57PTDOC
.  Global change PMSCMTFD  eg PATDOCFD (new layout)
.  Global change pmscmtaf  eg patdoctf
.  Global change PMSCMTA1  eg PATDOCT1
.  Global change KEY28     eg KEY8
.  Global change KEY34     eg KEY9
.  Global change WRPMCMT1  eg WRDOCT1
.  Global change spmcmtaf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
          INC       PATMTFFD/INC
          INC       PATMBFFD/INC
.
.         Filename : f01cmtxx.dat          (xx = port id)
.
ERRTEMP1  IFILE SQL, FIXED=10, KEY="U1-3,4-9"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
ERRRCLAM  DIM       3      3        1     Claim Code
ERRRHFND  DIM       6      6        4     Health Fund

.End of Record                     10
.
.         File Variables
.
ERASE     INIT      "iserase "
FNAME     INIT      "f01cmt"          * set up for temp file name
ISBUILD   INIT      "isbuild "
TEMPFILE  DIM       8
UKEY      INIT      " 10 U1-3,4-9"    * set up for record length & relevant key
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
OLDFILE1   IFILE    SQL, FIXED=289, KEY="U1-3,4-9,10-12,259-259,13-21,22-27"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.PMCCCCOD  DIM       3      3        1     Claim code
.PMCCHFUN  DIM       6      6        4     Health Fund
.PMCCHFTY  DIM       3      3        10    Health Fund Type
.PMCCCMCD  DIM       9      9        13    Casemix Code
.DPMCCCNT  DIM       6      6        22    Counter
.PMCCPODY  FORM      6      4        28    Pre Op Cut Off Days
.PMCCNPDY  FORM      6      4        32    No Pay Days
.PMCCHBPT  FORM      6      4        36    High Boundary Point
.PMCCCCDY  FORM      6      4        40    Critical Care Cut Off
.PMCCFTDG  FORM      1      2        44    Field type for Disch DRG
.                                          Field type=0 - Ignore
.                                                     1 - Mandatory
.                                                     2 - Must be blank
.                                                     3 - Exclusive
.PMCCDDRG  DIM       4      4        46    Discharge DRG
.PMCCFTCM  FORM      1      2        50    Field type for CMBS
.PMCCPCMF  DIM       9      9        52    Primary CMBS from
.PMCCPCMT  DIM       9      9        61    Primary CMBS to
.PMCCFTSC  FORM      1      2        70    Field type for Secondary CMBS
.PMCCSCMF  DIM       9      9        72    Secondary CMBS fron
.PMCCSCMT  DIM       9      9        81    Secondary CMBS to
.PMCCFTTC  FORM      1      2        90    Field type for Tertiary CMBS from
.PMCCTCMF  DIM       9      9        92    Tertiary CMBS from
.PMCCTCMT  DIM       9      9        101   Tertiary CMBS to
.PMCCFTDS  FORM      1      2        110   Field type for disch status
.PMCCDSTA  DIM       3      3        112   Discharge Status 1
.PMCCDST2  DIM       3      3        115   Discharge Status 2
.PMCCDST3  DIM       3      3        118   Discharge Status 3
.PMCCDST4  DIM       3      3        121   Discharge Status 4
.PMCCDST5  DIM       3      3        124   Discharge Status 5
.PMCCFTDD  FORM      1      2        127   Field type for disch destination
.PMCCDDES  DIM       3      3        129   Discharge Destination 1 (Cat DD)
.PMCCDDE2  DIM       3      3        132   Discharge Destination 2 (Cat DD)
.PMCCDDE3  DIM       3      3        135   Discharge Destination 3 (Cat DD)
.PMCCDDE4  DIM       3      3        138   Discharge Destination 4 (Cat DD)
.PMCCDDE5  DIM       3      3        141   Discharge Destination 5 (Cat DD)
.PMCCFTAS  FORM      1      2        144   Field type for Adm Source
.PMCCASRC  DIM       3      3        146   Admission Source 1 (Cat S)
.PMCCASR2  DIM       3      3        149   Admission Source 2 (Cat S)
.PMCCASR3  DIM       3      3        152   Admission Source 3 (Cat S)
.PMCCASR4  DIM       3      3        155   Admission Source 4 (Cat S)
.PMCCASR5  DIM       3      3        158   Admission Source 5 (Cat S)
.PMCCFT1C  FORM      1      2        161   Field type for ICD disease
.PMCCPICD  DIM       9      9        163   Primary ICD disease 1 (PRIMARY)
.PMCCPIC2  DIM       9      9        172   Primary ICD disease 2 (AND/SECONDARY)
.PMCCPIC3  DIM       9      9        181   Primary ICD disease 3 (AND/TERTIARY)
.PMCCPIC4  DIM       9      9        190   Primary ICD disease 4 (OR/PRIMARY)
.PMCCPIC5  DIM       9      9        199   Primary ICD disease 5 (OR/PRIMARY)
.PMCCFTAT  FORM      1      2        208   Field type for Adm type
.PMCCATYP  DIM       3      3        210   Admission Type 1 (Cat A)
.PMCCATY2  DIM       3      3        213   Admission Type 2 (Cat A)
.PMCCATY3  DIM       3      3        216   Admission Type 3 (Cat A)
.PMCCATY4  DIM       3      3        219   Admission Type 4 (Cat A)
.PMCCATY5  DIM       3      3        222   Admission Type 5 (Cat A)
.PMCCFTAU  FORM      1      2        225   Field type for Adm UDF
.PMCCAUDF  DIM       3      3        227   Admission UDF 1
.PMCCAUD2  DIM       3      3        230   Admission UDF 2
.PMCCAUD3  DIM       3      3        233   Admission UDF 3
.PMCCAUD4  DIM       3      3        236   Admission UDF 4
.PMCCAUD5  DIM       3      3        239   Admission UDF 5
.PMCCFTDU  FORM      1      2        242   Field type for Dis UDF
.PMCCDUDF  DIM       3      3        244   Discharge UDF 1
.PMCCDUD2  DIM       3      3        247   Discharge UDF 2
.PMCCDUD3  DIM       3      3        250   Discharge UDF 3
.PMCCDUD4  DIM       3      3        253   Discharge UDF 4
.PMCCDUD5  DIM       3      3        256   Discharge UDF 5
.PMCCTYPE  DIM       1      1        259   Record Type
.                                          O - Overnight
.                                          D - Daycase
.                                          E - Either
OLDDSPAR  DIM       29     29       260   Spare
.
.End of Record                      289
.
.                                     ******** copy the new FD here *******
.
PMSCMTA1   IFILE    SQL, FIXED=300, KEY="U1-3,260-265,4-9,10-12,259-259,13-21,22-27"
PMSCMTA2   IFILE    SQL, FIXED=300, KEY="U260-265,1-3,4-9,10-12,259-259,13-21,22-27"
PMSCMTA3   IFILE    SQL, FIXED=300, KEY="U1-3,4-9,10-12,259-259,22-27,260-265,13-21"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMCCCCOD  DIM       3      3        1     Claim code
PMCCHFUN  DIM       6      6        4     Health Fund
PMCCHFTY  DIM       3      3        10    Health Fund Type
PMCCCMCD  DIM       9      9        13    Casemix Code
DPMCCCNT  DIM       6      6        22    Counter
PMCCPODY  FORM      6      4        28    Pre Op Cut Off Days
PMCCNPDY  FORM      6      4        32    No Pay Days
PMCCHBPT  FORM      6      4        36    High Boundary Point/Maximum Days Stay
PMCCCCDY  FORM      6      4        40    Critical Care Cut Off
PMCCFTDG  FORM      1      2        44    Field type for Disch DRG
.                                         Field type=0 - Ignore
.                                                    1 - Mandatory
.                                                    2 - Must be blank
.                                                    3 - Exclusive
PMCCDDRG  DIM       4      4        46    Discharge DRG
PMCCFTCM  FORM      1      2        50    Field type for CMBS
PMCCPCMF  DIM       9      9        52    Primary CMBS from
PMCCPCMT  DIM       9      9        61    Primary CMBS to
PMCCFTSC  FORM      1      2        70    Field type for Secondary CMBS
PMCCSCMF  DIM       9      9        72    Secondary CMBS fron
PMCCSCMT  DIM       9      9        81    Secondary CMBS to
PMCCFTTC  FORM      1      2        90    Field type for Tertiary CMBS from
PMCCTCMF  DIM       9      9        92    Tertiary CMBS from
PMCCTCMT  DIM       9      9        101   Tertiary CMBS to
PMCCFTDS  FORM      1      2        110   Field type for disch status
PMCCDSTA  DIM       3      3        112   Discharge Status 1
PMCCDST2  DIM       3      3        115   Discharge Status 2
PMCCDST3  DIM       3      3        118   Discharge Status 3
PMCCDST4  DIM       3      3        121   Discharge Status 4
PMCCDST5  DIM       3      3        124   Discharge Status 5
PMCCFTDD  FORM      1      2        127   Field type for disch destination
PMCCDDES  DIM       3      3        129   Discharge Destination 1 (Cat DD)
PMCCDDE2  DIM       3      3        132   Discharge Destination 2 (Cat DD)
PMCCDDE3  DIM       3      3        135   Discharge Destination 3 (Cat DD)
PMCCDDE4  DIM       3      3        138   Discharge Destination 4 (Cat DD)
PMCCDDE5  DIM       3      3        141   Discharge Destination 5 (Cat DD)
PMCCFTAS  FORM      1      2        144   Field type for Adm Source
PMCCASRC  DIM       3      3        146   Admission Source 1 (Cat S)
PMCCASR2  DIM       3      3        149   Admission Source 2 (Cat S)
PMCCASR3  DIM       3      3        152   Admission Source 3 (Cat S)
PMCCASR4  DIM       3      3        155   Admission Source 4 (Cat S)
PMCCASR5  DIM       3      3        158   Admission Source 5 (Cat S)
PMCCFT1C  FORM      1      2        161   Field type for ICD disease
PMCCPICD  DIM       9      9        163   Primary ICD disease 1 (PRIMARY)
PMCCPIC2  DIM       9      9        172   Primary ICD disease 2 (AND/SECONDARY)
PMCCPIC3  DIM       9      9        181   Primary ICD disease 3 (AND/TERTIARY)
PMCCPIC4  DIM       9      9        190   Primary ICD disease 4 (OR/PRIMARY)
PMCCPIC5  DIM       9      9        199   Primary ICD disease 5 (OR/PRIMARY)
PMCCFTAT  FORM      1      2        208   Field type for Adm type
PMCCATYP  DIM       3      3        210   Admission Type 1 (Cat A)
PMCCATY2  DIM       3      3        213   Admission Type 2 (Cat A)
PMCCATY3  DIM       3      3        216   Admission Type 3 (Cat A)
PMCCATY4  DIM       3      3        219   Admission Type 4 (Cat A)
PMCCATY5  DIM       3      3        222   Admission Type 5 (Cat A)
PMCCFTAU  FORM      1      2        225   Field type for Adm UDF
PMCCAUDF  DIM       3      3        227   Admission UDF 1
PMCCAUD2  DIM       3      3        230   Admission UDF 2
PMCCAUD3  DIM       3      3        233   Admission UDF 3
PMCCAUD4  DIM       3      3        236   Admission UDF 4
PMCCAUD5  DIM       3      3        239   Admission UDF 5
PMCCFTDU  FORM      1      2        242   Field type for Dis UDF
PMCCDUDF  DIM       3      3        244   Discharge UDF 1
PMCCDUD2  DIM       3      3        247   Discharge UDF 2
PMCCDUD3  DIM       3      3        250   Discharge UDF 3
PMCCDUD4  DIM       3      3        253   Discharge UDF 4
PMCCDUD5  DIM       3      3        256   Discharge UDF 5
PMCCTYPE  DIM       1      1        259   Record Type
.                                         O - Overnight
.                                         D - Daycase
.                                         E - Either
PMCCCONT  DIM       6      6        260   Contract ID
PMCCMIND  FORM      6      4        266   Minimum Days Stay
PMCCSPAR  DIM       30     30       270   Spare
.
.End of Record                      300
.
.Redefine Key Variables
.----------------------
PMCCCNTR  FORM      6
.
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
.
INPFILE   DIM       8
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
MAPFLAG   FORM      1
SAVEFLG   FORM      1
SKEY9     DIM       9
SAVKEY34  DIM       34
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION PMSCMTFD"
PRGID     INIT      "F01PMCMT"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * Choose main option
          BRANCH    EXIT,MAIN9999                 * EXIT
          BRANCH    OPTION,MAIN0500:
                           MAIN4000
.
MAIN0500  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
MAIN4000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN6000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN6000  CALL      CREA0000                      * Create temp file
          CALL      CLER0000                      * empty it
          CALL      OPNF0000
          CALL      LCON0000                      * Load contract details
          CALL      PERR0000                      * Print error report
          CALL      KILL0000                      * Delete temp file
.
.         GOTO      MAIN9999                      * from map file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
.
          PACK      TEMPFILE,FNAME,PORT
          REP       " 0",TEMPFILE
.
INIT9999  RETURN
.
+
.******************************************************************************
.*                                  OPTN0000              Called by: MAIN0000 *
.*                                Select Option                               *
.******************************************************************************
.
OPTN0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTION
          HLINE     *G37,2,57,80
          DISPLAY   *P40:4,*EF:
                    *P1:3,*V2LON,"0",*HOFF," = Exit":
               *P1:4,*V2LON,"1",*HOFF," = Convert pmscmtaf to new file format ":
                                      "(CISAM only)":
               *P1:5,*V2LON,"2",*HOFF," = Load contracts from map file":
                                      " - patmtfaf/patbtfaf" :
                    *P1:7,"Select Option : ";
.
OPTN1000  KEYIN     *P17:7,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN9000:
                           OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN

.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      "pmscmtaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmscmtaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmcmtaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmscmtaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmcmtaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmscmtaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmcmtaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmscmtaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 300 UC1-3,260-265,4-9,10-12,259-259,13-21,22-27",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60        * Index 2
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC260-265,1-3,4-9,10-12,259-259,13-21,22-27",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60        * Index 3
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-3,4-9,10-12,259-259,22-27,260-265,13-21",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSCMTA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          IF        FORM2 < 17
            CALL      HITENTER
          ENDIF
          DISPLAY   *P1:23,*EF
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
.
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY28,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.                                               * Pack key here
.
          MOVE      SP70,PMCCCONT
          MOVE      ZERO,PMCCMIND
          MOVE      SP70,PMCCSPAR
.
          PACK      KEY34,PMCCCCOD,PMCCCONT,PMCCHFUN,PMCCHFTY,PMCCTYPE:
                          PMCCCMCD,PMCCCNTR,SP70
          CALL      WRPMCMT1                    * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSCMTA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmcmtaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat pmscmtaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'pmscmtaf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
.
.**********************************************************************
.*                               LCON0000                             *
.*             loop thru the file and load the contract id            *
.**********************************************************************
LCON0000  OPEN      PMSCMTA1,"pmscmtaf"
          DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY34,SP60
          CALL      RSPMCMT1                      * position at start
LCON1000  CALL      RKPMCMT1                      * read next record
          BRANCH    OVRCD,LCON6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
          PACK      SAVKEY34,PMCCCCOD,PMCCCONT,PMCCHFUN,PMCCHFTY,PMCCTYPE:
                          PMCCCMCD,PMCCCNTR,SP70
.
.         MAPFLAG =1 - Using Theatre Fee Mapping file
.                  2 - Using Bed Fee Mapping file
.
          BRANCH    MAPFLAG,LCON1200,LCON1400
          GOTO      LCON2000
.
.         Checking Theatre fee Mapping file
.
LCON1200  PACK      KEY9,PMCCCCOD,PMCCHFUN,SP70
          CALL      RDPTMTF1
          BRANCH    OVRCD,LCON2000
          MATCH     SP70,PTMTCNTR                 * Blank Contract ID
          GOTO      LCON2000 IF EQUAL
          MOVE      PTMTCNTR,PMCCCONT
          GOTO      LCON4000
.
.         Checking Bed fee Mapping file
.
LCON1400  PACK      SKEY9,PMCCCCOD,PMCCHFUN,SP70
          PACK      KEY12,PMCCCCOD,PMCCHFUN,SP70
          CALL      RDPTMBF1
          COMPARE   ZERO,OVRCD
          GOTO      LCON1600 IF EQUAL
.
          CALL      RSPTMBF1
          CALL      RKPTMBF1
          BRANCH    OVRCD,LCON2000
          PACK      KEY9,PTMBCLAM,PTMBHFND,SP70
          MATCH     SKEY9,KEY9
          GOTO      LCON2000 IF NOT EQUAL
.
LCON1600  MATCH     SP70,PTMBCNTR                 * Blank Contract ID
          GOTO      LCON2000 IF EQUAL
          MOVE      PTMBCNTR,PMCCCONT
          GOTO      LCON4000
.
LCON2000  CALL     ADDE0000                     * Add error to temp file
          GOTO     LCON1000
.
LCON4000  PACK      KEY34,PMCCCCOD,PMCCCONT,PMCCHFUN,PMCCHFTY,PMCCTYPE:
                          PMCCCMCD,PMCCCNTR,SP70
          CALL      UPPMCMT1                    * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      SAVKEY34,KEY34
          CALL      RSPMCMT1
.
          GOTO      LCON1000                      * get next record
.
LCON6000  CLOSE     PMSCMTA1                      * close new file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
LCON9999  RETURN
+
.**********************************************************************
.*                               ADDE0000                             *
.*             Add error record to temp file                          *
.**********************************************************************
ADDE0000  PACK      KEY9,PMCCCCOD,PMCCHFUN,SP70
          CALL      RDTEMP1
          IF        OVRCD=1
            CALL     WRTEMP1                      * Add error to temp file
          ENDIF
.
ADDE9999  RETURN
+
.**********************************************************************
.*                               PERR0000                             *
.*             Print error report                                     *
.**********************************************************************
PERR0000  CALL      HEAD80
.
          PRINT     *10,"Missing Contract Mapping":
                        " - Casemix matrix"
.
          CALL      UND80
          PRINT     *1,"| Claim Code ",*14,"| Health Fund |" *80,"|"
          CALL      UND80
.
          PACK      KEY9,SP70
          CALL      RSTEMP1
PERR1000  CALL      RKTEMP1
          BRANCH    OVRCD,PERR9000
.
          PRINT     *1,"| ",ERRRCLAM,*14,"| ",ERRRHFND,*28,"|",*80,"|"
.
          PACK      KEY9,ERRRCLAM,ERRRHFND,SP70
          CALL      DETEMP1                      * Add error to temp file
          GOTO      PERR1000
.
PERR9000  CALL      UND80
          PRINT     *10,"***  End of Report ***"
.
PERR9999  RETURN
+
.**************************************************************************
.*                              OPNF0000                                  *
.*             Open Mapping files                                         *
.**************************************************************************
OPNF0000  MOVE      ZERO,MAPFLAG
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMTFA1,"patmtfaf"
          TRAPCLR   IO
          BRANCH    OVRCD,OPNF1000
.
          MOVE      ONE,MAPFLAG         * Using Theatre fee Mapping file
          GOTO      OPNF9000
.
OPNF1000  DISPLAY   *P1:23,*EF,*B,"Theatre Fee Mapping file is not found, ":
                    *P1:24,"Bed Fee Mapping file will be used. ";
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMBFA1,"patmbfaf"
          TRAPCLR   IO
          BRANCH    OVRCD,OPNF2000
.
          MOVE      TWO,MAPFLAG         * Using Bed fee Mapping file
          GOTO      OPNF9000
.
OPNF2000  DISPLAY   *P1:23,*EF,*B,"Bed Fee Mapping file is not found. ";
.
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      OPNF9999
.
OPNF9000  MOVE      ZERO,EXIT
OPNF9999  RETURN
+
.**************************************************************************
.*                              CREA0000                                  *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      ERRTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.******************************************************************************
.*                             CLER0000                 Called by:            *
.*               close and erase the temporary file                           *
.******************************************************************************
CLER0000  PACK      KEY9,SP70
          CALL      RSTEMP1
          CALL      RKTEMP1
          BRANCH    OVRCD,CLER9999
.
          PACK      KEY9,PMCCCCOD,PMCCHFUN,SP70
          CALL      DETEMP1
.
          GOTO      CLER0000
.
CLER9999  RETURN
+
.****************************************************************************
.*                              KILL0000                                    *
.*               close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     ERRTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
.
RSTEMP1   READ      ERRTEMP1,KEY9;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      ERRTEMP1,KEY9;ERRRCLAM,ERRRHFND
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    ERRTEMP1;ERRRCLAM,ERRRHFND
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     ERRTEMP1,KEY9;KEY9
          RETURN

DETEMP1   DELETE    ERRTEMP1,KEY9
          RETURN
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
.
READSOLD  RESET     KEY28
          READ      OLDFILE1,KEY28;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;PMCCCCOD,PMCCHFUN,PMCCHFTY,PMCCCMCD,DPMCCCNT:
                        PMCCPODY,PMCCNPDY,PMCCHBPT,PMCCCCDY,PMCCFTDG,PMCCDDRG:
                        PMCCFTCM,PMCCPCMF,PMCCPCMT,PMCCFTSC,PMCCSCMF,PMCCSCMT:
                        PMCCFTTC,PMCCTCMF,PMCCTCMT,PMCCFTDS,PMCCDSTA,PMCCDST2:
                        PMCCDST3,PMCCDST4,PMCCDST5,PMCCFTDD,PMCCDDES,PMCCDDE2:
                        PMCCDDE3,PMCCDDE4,PMCCDDE5,PMCCFTAS,PMCCASRC,PMCCASR2:
                        PMCCASR3,PMCCASR4,PMCCASR5,PMCCFT1C,PMCCPICD,PMCCPIC2:
                        PMCCPIC3,PMCCPIC4,PMCCPIC5,PMCCFTAT,PMCCATYP,PMCCATY2:
                        PMCCATY3,PMCCATY4,PMCCATY5,PMCCFTAU,PMCCAUDF,PMCCAUD2:
                        PMCCAUD3,PMCCAUD4,PMCCAUD5,PMCCFTDU,PMCCDUDF,PMCCDUD2:
                        PMCCDUD3,PMCCDUD4,PMCCDUD5,PMCCTYPE,OLDDSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPMCCCNT,PMCCCNTR
          RETURN

.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRPMCMT1  RESET     KEY34
          MOVE      PMCCCNTR,DPMCCCNT
          WRITE     PMSCMTA1,KEY34;PMCCCCOD,PMCCHFUN,PMCCHFTY,PMCCCMCD,DPMCCCNT:
                        PMCCPODY,PMCCNPDY,PMCCHBPT,PMCCCCDY,PMCCFTDG,PMCCDDRG:
                        PMCCFTCM,PMCCPCMF,PMCCPCMT,PMCCFTSC,PMCCSCMF,PMCCSCMT:
                        PMCCFTTC,PMCCTCMF,PMCCTCMT,PMCCFTDS,PMCCDSTA,PMCCDST2:
                        PMCCDST3,PMCCDST4,PMCCDST5,PMCCFTDD,PMCCDDES,PMCCDDE2:
                        PMCCDDE3,PMCCDDE4,PMCCDDE5,PMCCFTAS,PMCCASRC,PMCCASR2:
                        PMCCASR3,PMCCASR4,PMCCASR5,PMCCFT1C,PMCCPICD,PMCCPIC2:
                        PMCCPIC3,PMCCPIC4,PMCCPIC5,PMCCFTAT,PMCCATYP,PMCCATY2:
                        PMCCATY3,PMCCATY4,PMCCATY5,PMCCFTAU,PMCCAUDF,PMCCAUD2:
                        PMCCAUD3,PMCCAUD4,PMCCAUD5,PMCCFTDU,PMCCDUDF,PMCCDUD2:
                        PMCCDUD3,PMCCDUD4,PMCCDUD5,PMCCTYPE,PMCCCONT,PMCCMIND:
                        PMCCSPAR
          RETURN
.
RSPMCMT1  RESET     KEY34
          READ      PMSCMTA1,KEY34;;
          RETURN
.
RKPMCMT1
          MOVE      ZERO,OVRCD
          READKS    PMSCMTA1;PMCCCCOD,PMCCHFUN,PMCCHFTY,PMCCCMCD,DPMCCCNT:
                        PMCCPODY,PMCCNPDY,PMCCHBPT,PMCCCCDY,PMCCFTDG,PMCCDDRG:
                        PMCCFTCM,PMCCPCMF,PMCCPCMT,PMCCFTSC,PMCCSCMF,PMCCSCMT:
                        PMCCFTTC,PMCCTCMF,PMCCTCMT,PMCCFTDS,PMCCDSTA,PMCCDST2:
                        PMCCDST3,PMCCDST4,PMCCDST5,PMCCFTDD,PMCCDDES,PMCCDDE2:
                        PMCCDDE3,PMCCDDE4,PMCCDDE5,PMCCFTAS,PMCCASRC,PMCCASR2:
                        PMCCASR3,PMCCASR4,PMCCASR5,PMCCFT1C,PMCCPICD,PMCCPIC2:
                        PMCCPIC3,PMCCPIC4,PMCCPIC5,PMCCFTAT,PMCCATYP,PMCCATY2:
                        PMCCATY3,PMCCATY4,PMCCATY5,PMCCFTAU,PMCCAUDF,PMCCAUD2:
                        PMCCAUD3,PMCCAUD4,PMCCAUD5,PMCCFTDU,PMCCDUDF,PMCCDUD2:
                        PMCCDUD3,PMCCDUD4,PMCCDUD5,PMCCTYPE,PMCCCONT,PMCCMIND:
                        PMCCSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPMCCCNT,PMCCCNTR
          RETURN
.
UPPMCMT1
          MOVE      PMCCCNTR,DPMCCCNT
          UPDATE    PMSCMTA1;PMCCCCOD,PMCCHFUN,PMCCHFTY,PMCCCMCD,DPMCCCNT:
                        PMCCPODY,PMCCNPDY,PMCCHBPT,PMCCCCDY,PMCCFTDG,PMCCDDRG:
                        PMCCFTCM,PMCCPCMF,PMCCPCMT,PMCCFTSC,PMCCSCMF,PMCCSCMT:
                        PMCCFTTC,PMCCTCMF,PMCCTCMT,PMCCFTDS,PMCCDSTA,PMCCDST2:
                        PMCCDST3,PMCCDST4,PMCCDST5,PMCCFTDD,PMCCDDES,PMCCDDE2:
                        PMCCDDE3,PMCCDDE4,PMCCDDE5,PMCCFTAS,PMCCASRC,PMCCASR2:
                        PMCCASR3,PMCCASR4,PMCCASR5,PMCCFT1C,PMCCPICD,PMCCPIC2:
                        PMCCPIC3,PMCCPIC4,PMCCPIC5,PMCCFTAT,PMCCATYP,PMCCATY2:
                        PMCCATY3,PMCCATY4,PMCCATY5,PMCCFTAU,PMCCAUDF,PMCCAUD2:
                        PMCCAUD3,PMCCAUD4,PMCCAUD5,PMCCFTDU,PMCCDUDF,PMCCDUD2:
                        PMCCDUD3,PMCCDUD4,PMCCDUD5,PMCCTYPE,PMCCCONT,PMCCMIND:
                        PMCCSPAR
          GOTO      UPDFLOCK IF LOCKED
          RETURN
.
          INC       STD001IO
          INC       PATMTFIO/INC
          INC       PATMBFIO/INC
