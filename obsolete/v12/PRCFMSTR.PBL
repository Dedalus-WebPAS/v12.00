.******************************************************************************
.* System    :   Accounting System                                            *
.* Procedure :   PRCFMSTR                                                     *
.* Desc      :   Print User Defined Report Specification                      *
.* Routines  :   FMSTR000                                                     *
.* Used in   :   IBAFMS50 IBAFMS51                                            *
.******************************************************************************
.* Date      :   14.12.90                                                     *
.* Author    :   B.G.Ackland (IBA)                                            *
.*               12.06.1991 Neeriem Dye                                       *
.*                          Modified version of PRCFMSPR for StV Templating   *
.*                                                                            *
.*               07.03.1994 B.G.Ackland                                       *
.*                          Print Accounts with Page Break even if Zero       *
.*                                                                            *
.******************************************************************************
.
          DEFPROC FMSTR000
.
          INC     FMSBUDFD/INC
          INC     FMSFPSFD/INC
          INC     FMSNRHFD/INC
          INC     FMSNRIFD/INC
          INC     FMSNRKFD/INC
          INC     FMSPRCFD/INC
          INC     FMSSMAFD/INC
          INC     FMSSBUFD/INC
          INC     FMSTCFFD/INC
          INC     IBAPASFD/INC
.
SCLNO     FORM      3
STRIPDES  FORM      1
NADESC    DIM       40
NBDESC    DIM       40
NDDESC    DIM       40
NEDESC    DIM       40
CURCHAR   DIM       1
LASTCHAR  DIM       1
COLNO     FORM      2
LINENO    FORM      2
DECPLACE  FORM      1
DIM52     DIM       52
F12       FORM      12
F12P1     FORM      12.1
F12P3     FORM      12.3
F12P4     FORM      12.4
F12P5     FORM      12.5
F12P6     FORM      12.6
CDIV1     FORM      12.5     * param for CDIV0000
CDIV2     FORM      12.5     * param for CDIV0000
KAMOUNT   FORM      12.6     * keyin amount
.
FILENAME  DIM      8
SP80      INIT     "                                        ":
                   "                                        "
FORM4     FORM     4
PERS      FORM     2
PRINTFL   FORM     1
ACTYPE    FORM     1
DATCNT    FORM     5
S1        INIT    "s1"
S2        INIT    "s2"
S3        INIT    "s3"
S4        INIT    "s4"
S5        INIT    "s5"
.
FMSB      INIT    "fmsb"
FMSC      INIT    "fmsc"
FMSP      INIT    "fmsp"
FMSS      INIT    "fmss"
.
SAVEACCT  DIM     30                   * save account data
SAVHACC   DIM     14                   * save last heading account
SAVHLEV   DIM     3                    * save last heading account level
SAVHPRT   DIM     3                    * save last heading account print code
.
.---- stat account formats ----
.
FORMAT01  INIT    "(9999,999 "
FORMAT02  INIT    "(9,999,999 "
FORMAT03  INIT    "(99,999,999 "
FORMAT04  INIT    "(999,999,999 "
FORMAT05  INIT    "(9999,999,999 "
FORMAT06  INIT    "(9,999,999,999 "
FORMAT07  INIT    "(99,999,999,999 "
FORMAT08  INIT    "(999,999,999,999 "
FORMAT09  INIT    "(9999,999,999,999 "
FORMAT0A  INIT    "(9,999,999,999,999 "
FORMAT0B  INIT    "(99,99,9999,999,999 "
.
FORMAT11  INIT    "(99,999.9 "
FORMAT12  INIT    "(999,999.9 "
FORMAT13  INIT    "(9999,999.9 "
FORMAT14  INIT    "(9,999,999.9 "
FORMAT15  INIT    "(99,999,999.9 "
FORMAT16  INIT    "(999,999,999.9 "
FORMAT17  INIT    "(9999,999,999.9 "
FORMAT18  INIT    "(9,999,999,999.9 "
FORMAT19  INIT    "(99,999,999,999.9 "
FORMAT1A  INIT    "(999,999,999,999.9 "
FORMAT1B  INIT    "(999,9999,999,999.9 "
.
XORMAT21  INIT    "(9,999.99 "
FORMAT22  INIT    "(99,999.99 "
FORMAT23  INIT    "(999,999.99 "
FORMAT24  INIT    "(9999,999.99 "
FORMAT25  INIT    "(9,999,999.99 "
FORMAT26  INIT    "(99,999,999.99 "
FORMAT27  INIT    "(999,999,999.99 "
FORMAT28  INIT    "(9999,999,999.99 "
FORMAT29  INIT    "(9,999,999,999.99 "
FORMAT2A  INIT    "(99,999,999,999.99 "
FORMAT2B  INIT    "(99,9999,999,999.99 "
.
FORMAT31  INIT    "(9999.999 "
FORMAT32  INIT    "(9,999.999 "
FORMAT33  INIT    "(99,999.999 "
FORMAT34  INIT    "(999,999.999 "
FORMAT35  INIT    "(9999,999.999 "
FORMAT36  INIT    "(9,999,999.999 "
FORMAT37  INIT    "(99,999,999.999 "
FORMAT38  INIT    "(999,999,999.999 "
FORMAT39  INIT    "(9999,999,999.999 "
FORMAT3A  INIT    "(9,999,999,999.999 "
FORMAT3B  INIT    "(9,9999,999,999.999 "
.
FORMAT41  INIT    "(999.9999 "
FORMAT42  INIT    "(9999.9999 "
FORMAT43  INIT    "(9,999.9999 "
FORMAT44  INIT    "(99,999.9999 "
FORMAT45  INIT    "(999,999.9999 "
FORMAT46  INIT    "(9999,999.9999 "
FORMAT47  INIT    "(9,999,999.9999 "
FORMAT48  INIT    "(99,999,999.9999 "
FORMAT49  INIT    "(999,999,999.9999 "
FORMAT4A  INIT    "(9999,999,999.9999 "
FORMAT4B  INIT    "(99999,999,999.9999 "
.
FORMAT51  INIT    "(99.99999 "
FORMAT52  INIT    "(999.99999 "
FORMAT53  INIT    "(9999.99999 "
FORMAT54  INIT    "(9,999.99999 "
FORMAT55  INIT    "(99,999.99999 "
FORMAT56  INIT    "(999,999.99999 "
FORMAT57  INIT    "(9999,999.99999 "
FORMAT58  INIT    "(9,999,999.99999 "
FORMAT59  INIT    "(99,999,999.99999 "
FORMAT5A  INIT    "(999,999,999.99999 "
FORMAT5B  INIT    "(9999,999,999.99999 "
.
FORMAT61  INIT    "(9.999999 "
FORMAT62  INIT    "(99.999999 "
FORMAT63  INIT    "(999.999999 "
FORMAT64  INIT    "(9999.999999 "
FORMAT65  INIT    "(9,999.999999 "
FORMAT66  INIT    "(99,999.999999 "
FORMAT67  INIT    "(999,999.999999 "
FORMAT68  INIT    "(9999,999.999999 "
FORMAT69  INIT    "(9,999,999.999999 "
FORMAT6A  INIT    "(99,999,999.999999 "
FORMAT6B  INIT    "(999,999,999.999999 "
.
MOVEFLAG  FORM    1
SAVPRT    DIM     3
HEADFLAG  FORM    1
.
. Variables to load Row/column Parameters
.
CURROW    FORM     2    * Row Counter
CURCOL    FORM     2    * Column Counter
CHKZERO   FORM     1    * 0=dont print since zero, 1=print
.
CURPERD   FORM     2    * Current Period
COLTYPE   FORM     2    * Column Type
COLWIDT   FORM     2    * Column Width
COLWID    FORM     2    * Column Width
COLATYP   FORM     2    * Column Amount Type
COLSCAL   FORM     2    * Column Scale
COLPERD   FORM     2    * Column Period
COLFORM   DIM      20   * Column Format
COLUMN    FORM     3
RESETCOL  FORM     3
SAVCOL    FORM     3
COUNT     FORM     3
.
DECPLA    FORM     2
.
LASER     FORM      1                        * Laser Print 0 = No
.
REPCHAR   DIM       2
DASH      INIT      "-"
DASHES    INIT      "----------------------------------------":
                    "----------------------------------------"
DESC35    DIM       35
LUND50    DIM       50
LUND52    DIM       52
LUND80    DIM       80
.
VAMTS     FORM     12.5 * Unformatted Amount for variance calculation
VAMTC     FORM     12.2 * Unformatted Amount for variance calculation
SVAMTS    FORM     12.5 * Unformatted Amount for variance calculation
SVAMTC    FORM     12.2 * Unformatted Amount for variance calculation
.
PVAMTS    FORM     12.5 * Unformatted Amount for variance calculation
PVAMTC    FORM     12.5 * Unformatted Amount for variance calculation
.
SUBAMTS   FORM     12.5 * Sub Amount
SUBAMTC   FORM     12.2 * Sub Amount
AMOUNTS   FORM     12.5 * Unformatted Amount
AMOUNTC   FORM     12.2 * Unformatted Amount
SAMOUNTS  FORM     12.5 * Unformatted Amount
SAMOUNTC  FORM     12.2 * Unformatted Amount
AMOUNTD   FORM     12   * Unformatted Amount
FAMOUNT   DIM      20   * Formatted Amount
ANS1      DIM      1
ANS2      DIM      1
ANS3      DIM      1
ANS4      DIM      1
ANS5      DIM      1
ANS6      DIM      1
ANS7      DIM      1
ANS8      DIM      1
ANS9      DIM      1
ANS10     DIM      1
ANS11     DIM      1
ANS12     DIM      1
ANS13     DIM      1
ANS14     DIM      1
ANS15     DIM      1
ANS16     DIM      1
ANS17     DIM      1
ANS18     DIM      1
ANS19     DIM      1
ANS20     DIM      1
.
FINYEAR   DIM      4    * Reporting Year
PERTYPE   FORM     2
RCLOAD    FORM     3
TAMT      FORM     12.5
TAMTC     FORM     12.2
TAMTS     FORM     12.5
TCOL      DIM      1
YESNO2    DIM      3
YESNO3    DIM      3
.    
ACTA01S   FORM     12.5  * Actuals Current Year (Period 1 to Include B-Fwd)
ACTA02S   FORM     12.5
ACTA03S   FORM     12.5
ACTA04S   FORM     12.5
ACTA05S   FORM     12.5
ACTA06S   FORM     12.5
ACTA07S   FORM     12.5
ACTA08S   FORM     12.5
ACTA09S   FORM     12.5
ACTA10S   FORM     12.5
ACTA11S   FORM     12.5
ACTA12S   FORM     12.5
ACTA13S   FORM     12.5
ACTACOM   FORM     12.5
ACTABFD   FORM     12.5
.
ACTB01S   FORM     12.5  * Actuals Last Year (Period 1 to Include B-Fwd)
ACTB02S   FORM     12.5
ACTB03S   FORM     12.5
ACTB04S   FORM     12.5
ACTB05S   FORM     12.5
ACTB06S   FORM     12.5
ACTB07S   FORM     12.5
ACTB08S   FORM     12.5
ACTB09S   FORM     12.5
ACTB10S   FORM     12.5
ACTB11S   FORM     12.5
ACTB12S   FORM     12.5
ACTB13S   FORM     12.5
.
BUDA01S   FORM     12.5  * Budget
BUDA02S   FORM     12.5
BUDA03S   FORM     12.5
BUDA04S   FORM     12.5
BUDA05S   FORM     12.5
BUDA06S   FORM     12.5
BUDA07S   FORM     12.5
BUDA08S   FORM     12.5
BUDA09S   FORM     12.5
BUDA10S   FORM     12.5
BUDA11S   FORM     12.5
BUDA12S   FORM     12.5
BUDA13S   FORM     12.5
.
BUDB01S   FORM     12.5  * Alternative Budget
BUDB02S   FORM     12.5
BUDB03S   FORM     12.5
BUDB04S   FORM     12.5
BUDB05S   FORM     12.5
BUDB06S   FORM     12.5
BUDB07S   FORM     12.5
BUDB08S   FORM     12.5
BUDB09S   FORM     12.5
BUDB10S   FORM     12.5
BUDB11S   FORM     12.5
BUDB12S   FORM     12.5
BUDB13S   FORM     12.5
.
ACTABFC   FORM     12.2
ACTA01C   FORM     12.2
ACTA02C   FORM     12.2
ACTA03C   FORM     12.2
ACTA04C   FORM     12.2
ACTA05C   FORM     12.2
ACTA06C   FORM     12.2
ACTA07C   FORM     12.2
ACTA08C   FORM     12.2
ACTA09C   FORM     12.2
ACTA10C   FORM     12.2
ACTA11C   FORM     12.2
ACTA12C   FORM     12.2
ACTA13C   FORM     12.2
ACTACMC   FORM     12.2
.
ACTBBFC   FORM     12.2
ACTB01C   FORM     12.2
ACTB02C   FORM     12.2
ACTB03C   FORM     12.2
ACTB04C   FORM     12.2
ACTB05C   FORM     12.2
ACTB06C   FORM     12.2
ACTB07C   FORM     12.2
ACTB08C   FORM     12.2
ACTB09C   FORM     12.2
ACTB10C   FORM     12.2
ACTB11C   FORM     12.2
ACTB12C   FORM     12.2
ACTB13C   FORM     12.2
ACTBCMC   FORM     12.2
.
BUDA01C   FORM     12.2
BUDA02C   FORM     12.2
BUDA03C   FORM     12.2
BUDA04C   FORM     12.2
BUDA05C   FORM     12.2
BUDA06C   FORM     12.2
BUDA07C   FORM     12.2
BUDA08C   FORM     12.2
BUDA09C   FORM     12.2
BUDA10C   FORM     12.2
BUDA11C   FORM     12.2
BUDA12C   FORM     12.2
BUDA13C   FORM     12.2
.
BUDB01C   FORM     12.2
BUDB02C   FORM     12.2
BUDB03C   FORM     12.2
BUDB04C   FORM     12.2
BUDB05C   FORM     12.2
BUDB06C   FORM     12.2
BUDB07C   FORM     12.2
BUDB08C   FORM     12.2
BUDB09C   FORM     12.2
BUDB10C   FORM     12.2
BUDB11C   FORM     12.2
BUDB12C   FORM     12.2
BUDB13C   FORM     12.2
.
TEMPVAR   DIM      36
.
PLIN80A   DIM      80
PLIN80B   DIM      79
PLIN52    DIM      51
PLIN100   DIM      100
PLIN110   DIM      109
.
HLIN80A   DIM      80
HLIN80B   DIM      79
HLIN52    DIM      51
HLIN100   DIM      100
HLIN110   DIM      109
.
.---- file status vars (0=file open, 1=file close) ----
.
BUDA1STA  FORM      1
BUDA3STA  FORM      1
FPSA1STA  FORM      1
FPSA2STA  FORM      1
SBUA1STA  FORM      1
SBUA3STA  FORM      1
SMAA1STA  FORM      1
SMAA2STA  FORM      1
.
PERDESC1  DIM       15
PERDESC2  DIM       15
PEREDAT1  DIM       8
PEREDAT2  DIM       8
CPCDATE1  DIM       10
CPCDATE2  DIM       10
.
REPTYPEF  FORM      1
REPTYPE0  INIT      "Accrual"
REPTYPE1  INIT      "Cash"
.
CMDLINE   DIM       127
FMSNRH    INIT      "fmsnrh"
FMSNRI    INIT      "fmsnri"
FMSNRK    INIT      "fmsnrk"
NRHIND    INIT      " 107 U1-3,4-8,9-13 U1-3,9-13,4-8 U1-3,87-98,4-8,9-13"
NRIIND    INIT      " 187 U1-3,4-15,16-16"                       
NRKIND    INIT      " 48 U1-3,4-15,16-27"
.
.
PRGNAM    DIM     35    * Program name declared local so that heading 
.                       * can be altered according to the report parameter
.
.OPEN FILES FOR PROCEDURE
.------------------------
.
          PACK    DISPMSG,SP70,SP70              * save line 24
          CALL    MESSAGE2
.
          MOVE    "0",CNOUNDLN                   * underlines
          MOVE    ONE,STRIPDES                   * strip descriptions
.
          OPEN    CONTROLF,"controlf"
          CALL    RDFMCO50
          CALL    RDFMCO51
          CALL    RDFMCO52
          CALL    RDFMCO65
          CALL    RDFMCO66
.
          CLOSE   FMSNRHA1
          PACK    FILENAME,FMSNRH,PORT,SP70
          REP     " 0",FILENAME
          PACK    CMDLINE,ISERASE,FILENAME
          EXECUTE CMDLINE,TASKID
          PACK    CMDLINE,ISBUILD,FILENAME,NRHIND
          EXECUTE CMDLINE,TASKID
          OPEN    FMSNRHA1,FILENAME
          OPEN    FMSNRHA2,FILENAME
.
          CLOSE   FMSNRIA1
          PACK    FILENAME,FMSNRI,PORT,SP70
          REP     " 0",FILENAME
          PACK    CMDLINE,ISERASE,FILENAME
          EXECUTE CMDLINE,TASKID
          PACK    CMDLINE,ISBUILD,FILENAME,NRIIND
          EXECUTE CMDLINE,TASKID
          OPEN    FMSNRIA1,FILENAME
.
          CLOSE   FMSNRKA1
          PACK    FILENAME,FMSNRK,PORT,SP70
          REP     " 0",FILENAME
          PACK    CMDLINE,ISERASE,FILENAME
          EXECUTE CMDLINE,TASKID
          PACK    CMDLINE,ISBUILD,FILENAME,NRKIND
          EXECUTE CMDLINE,TASKID
          OPEN    FMSNRKA1,FILENAME
.
          UNPACK  SP70,SAVHACC,SAVHLEV,SAVHPRT  * clear save variables
          PACK    FMCOHPRT,FMCOHPRT,SP70
          REP     " 0",FMCOHPRT
          MOVE    ZERO,DATCNT
.
          OPEN    FMSAMAA1,"fmsamaaf"
          OPEN    FMSCCAA1,"fmsccaaf"
          OPEN    FMSNRAA1,"fmsnraaf"
          OPEN    FMSNRBA1,"fmsnrbaf"
          OPEN    FMSNRBA2,"fmsnrbaf"
          OPEN    FMSNRCA1,"fmsnrcaf"
          OPEN    FMSNRCA2,"fmsnrcaf"
          OPEN    FMSNRDA1,"fmsnrdaf"
          OPEN    FMSNREA1,"fmsnreaf"
          OPEN    FMSNREA2,"fmsnreaf"
          OPEN    FMSNRFA1,"fmsnrfaf"
          OPEN    FMSNRFA2,"fmsnrfaf"
          OPEN    FMSSBAA1,"fmssbaaf"
          OPEN    FMSTCFA1,"fmstcfaf"
          OPEN    FMSPRCA1,"fmsprcaf"
          OPEN    IBAESCA1,"ibaescaf"
          OPEN    IBAESCA2,"ibaescaf"
.
.************************************************************************
. PRNT - Print Report                                 Called By ML      *
.        Requires - FMSNRGAF data                                       *
.************************************************************************
PRNT0000  
          MOVE    ONE,FPSA1STA
          MOVE    ONE,SMAA1STA
          MOVE    ONE,FPSA2STA
          MOVE    ONE,SMAA2STA
          MOVE    ONE,BUDA1STA
          MOVE    ONE,BUDA3STA
          MOVE    ONE,SBUA1STA
          MOVE    ONE,SBUA3STA
.
          MOVE    ZERO,RCLOAD
          REPEAT
           ADD      ONE,RCLOAD
           MOVE     ZERO,COLTYPE
           LOAD     COLTYPE,RCLOAD,FMUDT101,FMUDT102,FMUDT103,FMUDT104,FMUDT105:
                                   FMUDT106,FMUDT107,FMUDT108,FMUDT109,FMUDT110:
                                   FMUDT111,FMUDT112,FMUDT113,FMUDT114,FMUDT115:
                                   FMUDT116,FMUDT117,FMUDT118,FMUDT119,FMUDT120:
                                   FMUDT201,FMUDT202,FMUDT203,FMUDT204,FMUDT205:
                                   FMUDT206,FMUDT207,FMUDT208,FMUDT209,FMUDT210:
                                   FMUDT211,FMUDT212,FMUDT213,FMUDT214,FMUDT215:
                                   FMUDT216,FMUDT217,FMUDT218,FMUDT219,FMUDT220:
                                   FMUDT301,FMUDT302,FMUDT303,FMUDT304,FMUDT305:
                                   FMUDT306,FMUDT307,FMUDT308,FMUDT309,FMUDT310:
                                   FMUDT311,FMUDT312,FMUDT313,FMUDT314,FMUDT315:
                                   FMUDT316,FMUDT317,FMUDT318,FMUDT319,FMUDT320:
                                   FMUDT401,FMUDT402,FMUDT403,FMUDT404,FMUDT405:
                                   FMUDT406,FMUDT407,FMUDT408,FMUDT409,FMUDT410:
                                   FMUDT411,FMUDT412,FMUDT413,FMUDT414,FMUDT415:
                                   FMUDT416,FMUDT417,FMUDT418,FMUDT419,FMUDT420:
                                   FMUDT501,FMUDT502,FMUDT503,FMUDT504,FMUDT505:
                                   FMUDT506,FMUDT507,FMUDT508,FMUDT509,FMUDT510:
                                   FMUDT511,FMUDT512,FMUDT513,FMUDT514,FMUDT515:
                                   FMUDT516,FMUDT517,FMUDT518,FMUDT519,FMUDT520
.
           IF       COLTYPE=3 | COLTYPE=4 | COLTYPE=5
             MOVE     ZERO,COLATYP
             LOAD   COLATYP,RCLOAD,FMUDA101,FMUDA102,FMUDA103,FMUDA104,FMUDA105:
                                   FMUDA106,FMUDA107,FMUDA108,FMUDA109,FMUDA110:
                                   FMUDA111,FMUDA112,FMUDA113,FMUDA114,FMUDA115:
                                   FMUDA116,FMUDA117,FMUDA118,FMUDA119,FMUDA120:
                                   FMUDA201,FMUDA202,FMUDA203,FMUDA204,FMUDA205:
                                   FMUDA206,FMUDA207,FMUDA208,FMUDA209,FMUDA210:
                                   FMUDA211,FMUDA212,FMUDA213,FMUDA214,FMUDA215:
                                   FMUDA216,FMUDA217,FMUDA218,FMUDA219,FMUDA220:
                                   FMUDA301,FMUDA302,FMUDA303,FMUDA304,FMUDA305:
                                   FMUDA306,FMUDA307,FMUDA308,FMUDA309,FMUDA310:
                                   FMUDA311,FMUDA312,FMUDA313,FMUDA314,FMUDA315:
                                   FMUDA316,FMUDA317,FMUDA318,FMUDA319,FMUDA320:
                                   FMUDA401,FMUDA402,FMUDA403,FMUDA404,FMUDA405:
                                   FMUDA406,FMUDA407,FMUDA408,FMUDA409,FMUDA410:
                                   FMUDA411,FMUDA412,FMUDA413,FMUDA414,FMUDA415:
                                   FMUDA416,FMUDA417,FMUDA418,FMUDA419,FMUDA420:
                                   FMUDA501,FMUDA502,FMUDA503,FMUDA504,FMUDA505:
                                   FMUDA506,FMUDA507,FMUDA508,FMUDA509,FMUDA510:
                                   FMUDA511,FMUDA512,FMUDA513,FMUDA514,FMUDA515:
                                   FMUDA516,FMUDA517,FMUDA518,FMUDA519,FMUDA520
.
              IF        COLATYP=1
                MOVE    ZERO,FPSA1STA
                MOVE    ZERO,SMAA1STA
              ENDIF
              IF        COLATYP=2
                MOVE    ZERO,BUDA1STA
                MOVE    ZERO,SBUA1STA
              ENDIF
              IF        COLATYP=3
                MOVE    ZERO,BUDA3STA
                MOVE    ZERO,SBUA3STA
              ENDIF
              IF        COLATYP=4
                MOVE    ZERO,FPSA2STA
                MOVE    ZERO,SMAA2STA
              ENDIF
            ENDIF
          UNTIL   RCLOAD>=100
.
          IF      0=FPSA1STA
            PACK    FILENAME,FMSP,CURYEAR,SP70
            REP     " 0",FILENAME
            MOVE    ZERO,OVRCD
            TRAP    OVERCOND IF IO
            OPEN    FMSFPSA1,FILENAME
            TRAPCLR IO
            MOVE    OVRCD,FPSA1STA       * set up status for file
          ENDIF
.
          IF      0=SMAA1STA
            PACK    FILENAME,FMSS,CURYEAR,SP70
            REP     " 0",FILENAME
            MOVE    ZERO,OVRCD
            TRAP    OVERCOND IF IO
            OPEN    FMSSMAA1,FILENAME
            TRAPCLR IO
            MOVE    OVRCD,SMAA1STA       * set up status for file
          ENDIF
.
          IF      0=FPSA2STA
            MOVE    CURYEAR,FORM4
            SUB     ONE,FORM4
            PACK    FILENAME,FMSP,FORM4,SP70
            REP     " 0",FILENAME
            MOVE    ZERO,OVRCD
            TRAP    OVERCOND IF IO
            OPEN    FMSFPSA2,FILENAME
            TRAPCLR IO
            MOVE    OVRCD,FPSA2STA       * set up status for file
          ENDIF
.
          IF      0=SMAA2STA
            PACK    FILENAME,FMSS,FORM4,SP70
            REP     " 0",FILENAME
            MOVE    ZERO,OVRCD
            TRAP    OVERCOND IF IO
            OPEN    FMSSMAA2,FILENAME
            TRAPCLR IO
            MOVE    OVRCD,SMAA2STA       * set up status for file
          ENDIF
.
          IF      0=BUDA1STA
            PACK    FILENAME,FMSB,FMNGCBT,SP70
            REP     " 0",FILENAME
            MOVE    ZERO,OVRCD
            TRAP    OVERCOND IF IO
            OPEN    FMSBUDA1,FILENAME
            TRAPCLR IO
            MOVE    OVRCD,BUDA1STA       * set up status for file
          ENDIF
.
          IF      0=BUDA3STA
            PACK    FILENAME,FMSB,FMNGPBT,SP70
            REP     " 0",FILENAME
            MOVE    ZERO,OVRCD
            TRAP    OVERCOND IF IO
            OPEN    FMSBUDA3,FILENAME
            TRAPCLR IO
            MOVE    OVRCD,BUDA3STA       * set up status for file
          ENDIF
.
          IF      0=SBUA1STA
            PACK    FILENAME,FMSC,FMNGCBT,SP70
            REP     " 0",FILENAME
            MOVE    ZERO,OVRCD
            TRAP    OVERCOND IF IO
            OPEN    FMSSBUA1,FILENAME
            TRAPCLR IO
            MOVE    OVRCD,SBUA1STA       * set up status for file
          ENDIF
.
          IF      0=SBUA3STA
            PACK    FILENAME,FMSC,FMNGPBT,SP70
            REP     " 0",FILENAME
            MOVE    ZERO,OVRCD
            TRAP    OVERCOND IF IO
            OPEN    FMSSBUA3,FILENAME
            TRAPCLR IO
            MOVE    OVRCD,SBUA3STA       * set up status for file
          ENDIF
.
          CALL      CHEK0000             * check if parameters ok
          BRANCH    EXIT,PRNT9000        * If the Ledger has Disappeared
.
          CALL      GENRC000             * generate totals
.
          MOVE      ZERO,DATCNT          * reset count
          MOVE      ZERO,CPAGENO         * reset page no.
          CLOCK     TIME,CTIMEIS         * get current time
          CALL      FILE0000             * goto correct position in file
          BRANCH    EXIT,PRNT9000        * If the Ledger has Disappeared
.
          MOVE      "599",CLNO           * set line number
.
PRNT1000  
          IF        FMNGPSEQ=1
            CALL      RKFMNH2               * get next record     
          ELSE
            CALL      RKFMNH1               * get next record     
          ENDIF
          BRANCH    OVRCD,PRNT9000          * no more records ?  
          MATCH     FMNHREPT,FMNGCODE
          GOTO      PRNT9000 IF NOT EQUAL   * correct report ?    
.
          MATCH     FMNGCLEV,FMNHCLEV       * check cost centre level
          GOTO      PRNT1000 IF LESS
          MATCH     FMNGSLEV,FMNHSLEV       * check subjective level
          GOTO      PRNT1000 IF LESS
.
          ADD       ONE,DATCNT              * display every 1000th record
          IF        (DATCNT%1000=1) & (DISPFLAG=0)
            DISPLAY   *P1:24,*EL,*P20:24,"Printing   : ":
                      *V2LON,FMNALEDG,"/",FMNHACCT,*EL;
          ENDIF
.
          CALL      CKHD0000                * print data
          GOTO      PRNT1000
.
PRNT9000  IF        CPAGENO=0 | CLNO=599
            MOVE      SP70,FMNHACCT
            CALL      HEAD0000                   * print head if required
          ENDIF
          CALL      LINE0000                     * print line
          PRINT     *N,"****   End of Report   ****"
          CALL      RESP0000                     * Reset Printer if required
.
          CLOSE   FMSNRHA1
          PACK    FILENAME,FMSNRH,PORT,SP70
          REP     " 0",FILENAME
          PACK    CMDLINE,ISERASE,FILENAME
          EXECUTE CMDLINE,TASKID
.
          CLOSE   FMSNRIA1
          PACK    FILENAME,FMSNRI,PORT,SP70
          REP     " 0",FILENAME
          PACK    CMDLINE,ISERASE,FILENAME
          EXECUTE CMDLINE,TASKID
.
          CLOSE   FMSNRKA1
          PACK    FILENAME,FMSNRK,PORT,SP70
          REP     " 0",FILENAME
          PACK    CMDLINE,ISERASE,FILENAME
          EXECUTE CMDLINE,TASKID
.
          CALL      MESSAGE3                     * restore line 24
.
PRNT9999  GOTO      FMSTR999
.**********************************************************************
. GENRC - generate cost centre                        Called By PRNT
.**********************************************************************
GENRC000 
          UNPACK    SP70,SFMSB01,SFMSB02         * clear save keys
          UNPACK    SP70,SFMSB03,SFMSB04
          UNPACK    SP70,SFMSB05,SFMSB06
          UNPACK    SP70,SFMSB07,SFMSB08
          UNPACK    SP70,SFMSB09,SFMSB10
          UNPACK    SP70,SFMSB11,SFMSB12
          UNPACK    SP70,SFMSB13,SFMSB14
          UNPACK    SP70,SFMSB15,SFMSB16
          UNPACK    SP70,SFMSB17,SFMSB18
          UNPACK    SP70,SFMSB19,SFMSB20
          UNPACK    SP70,SFMSB21,SFMSB22
          UNPACK    SP70,SFMSB23,SFMSB24
          UNPACK    SP70,SFMSB25,SFMSB26
          UNPACK    SP70,SFMSB27,SFMSB28
          UNPACK    SP70,SFMSB29,SFMSB30
.
          MATCH     SP70,FMNGCCFR                * do we have a from item
          IF        @EQUAL
            PACK      KEY18,FMNACODE,Z70         * get item with highest level
            CALL      RSFMNB2
            CALL      RPFMNB2
            BRANCH    OVRCD,GENRC999
          ELSE
            PACK      KEY15,FMNGCCCD,FMNGCCFR,SP70
            UNPACK    KEY15,FMNBCODE,FMNBTCOD
          ENDIF
.
          PACK      SFMSB,FMNBCODE,FMNBTCOD,SP70 * store current key
          MOVE      ONE,DEPFMSB                  * depth = 1
          MOVE      ZERO,SEQFMSB                 * sequence = 1
.
.---- process loop ----
.
GENRC100  
          COMPARE   DEPFMSB,ZERO                 * while depth > 0
          GOTO      GENRC999 IF NOT LESS
.
          PACK      KEY32,SFMSB,SP70             * get next sub-item
          CALL      RSFMNC1
          CALL      RKFMNC1
          BRANCH    OVRCD,GENRC200
          PACK      KEY15,FMNCCODE,FMNCTCOD,SP70
          MATCH     KEY32,KEY15
          GOTO      GENRC200 IF NOT EQUAL
.
          CALL      RDFMNB1                      * make sure account exists
          BRANCH    OVRCD,GENRC100
.
.---- there is a next sub item ----
.
.                                                * save current key
          PACK      SFMSB,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD,SP70
          STORE     SFMSB,DEPFMSB,SFMSB01,SFMSB02,SFMSB03,SFMSB04,SFMSB05:
                                  SFMSB06,SFMSB07,SFMSB08,SFMSB09,SFMSB10:
                                  SFMSB11,SFMSB12,SFMSB13,SFMSB14,SFMSB15:
                                  SFMSB16,SFMSB17,SFMSB18,SFMSB19,SFMSB20:
                                  SFMSB21,SFMSB22,SFMSB23,SFMSB24,SFMSB25:
                                  SFMSB26,SFMSB27,SFMSB28,SFMSB29,SFMSB30
.
          ADD       ONE,DEPFMSB                  * depth = depth + 1
          PACK      SFMSB,FMNCCODE,FMNCSCOD,SP70
          GOTO      GENRC100
.
.---- there is no next sub item ----
.
GENRC200  
          ADD       ONE,SEQFMSB                  * sequence = sequence + 1
          ADD       ONE,DATCNT                   * display every 1000th record
          IF        (DATCNT%1000=1) & (DISPFLAG=0)
            DISPLAY   *P1:24,*EL,*P20:24,"Processing : ":
                      *V2LON,SEQFMSB,"-",SFMSB,"-",SEQFMSE,"-",SFMSE,*EL;
          ENDIF
.
          CALL      GENRS000                     * generate subjectives
.
          SUB       ONE,DEPFMSB                  * depth = depth - 1
          LOAD      SFMSB,DEPFMSB,SFMSB01,SFMSB02,SFMSB03,SFMSB04,SFMSB05:
                                  SFMSB06,SFMSB07,SFMSB08,SFMSB09,SFMSB10:
                                  SFMSB11,SFMSB12,SFMSB13,SFMSB14,SFMSB15:
                                  SFMSB16,SFMSB17,SFMSB18,SFMSB19,SFMSB20:
                                  SFMSB21,SFMSB22,SFMSB23,SFMSB24,SFMSB25:
                                  SFMSB26,SFMSB27,SFMSB28,SFMSB29,SFMSB30
.
          GOTO      GENRC100
.
GENRC999  RETURN
.**********************************************************************
. GENRS - generate subjectives                        Called By PRNT
.**********************************************************************
GENRS000 
          UNPACK    SP70,SFMSE01,SFMSE02         * clear save keys
          UNPACK    SP70,SFMSE03,SFMSE04
          UNPACK    SP70,SFMSE05,SFMSE06
          UNPACK    SP70,SFMSE07,SFMSE08
          UNPACK    SP70,SFMSE09,SFMSE10
          UNPACK    SP70,SFMSE11,SFMSE12
          UNPACK    SP70,SFMSE13,SFMSE14
          UNPACK    SP70,SFMSE15,SFMSE16
          UNPACK    SP70,SFMSE17,SFMSE18
          UNPACK    SP70,SFMSE19,SFMSE20
          UNPACK    SP70,SFMSE21,SFMSE22
          UNPACK    SP70,SFMSE23,SFMSE24
          UNPACK    SP70,SFMSE25,SFMSE26
          UNPACK    SP70,SFMSE27,SFMSE28
          UNPACK    SP70,SFMSE29,SFMSE30
.
          MATCH     SP70,FMNGSAFR                * do we have a from item
          IF        @EQUAL
            PACK      KEY18,FMNDCODE,Z70         * get item with highest level
            CALL      RSFMNE2
            CALL      RPFMNE2
            BRANCH    OVRCD,GENRS999
          ELSE
            PACK      KEY15,FMNGSACD,FMNGSAFR,SP70
            UNPACK    KEY15,FMNECODE,FMNETCOD
          ENDIF
.
          PACK      SFMSE,FMNECODE,FMNETCOD,SP70 * store current key
          MOVE      ONE,DEPFMSE                  * depth = 1
          MOVE      ZERO,SEQFMSE                 * sequence = 1
.
.---- process loop ----
.
GENRS100  
          COMPARE   DEPFMSE,ZERO                 * while depth > 0
          GOTO      GENRS999 IF NOT LESS
.
          PACK      KEY32,SFMSE,SP70             * get next sub-item
          CALL      RSFMNF1
          CALL      RKFMNF1
          BRANCH    OVRCD,GENRS200
          PACK      KEY15,FMNFCODE,FMNFTCOD,SP70
          MATCH     KEY32,KEY15
          GOTO      GENRS200 IF NOT EQUAL
.
          CALL      RDFMNE1                      * make sure account exists
          BRANCH    OVRCD,GENRS100
.
.---- there is a next sub item ----
.
.                                                * save current key
          PACK      SFMSE,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD,SP70
          STORE     SFMSE,DEPFMSE,SFMSE01,SFMSE02,SFMSE03,SFMSE04,SFMSE05:
                                  SFMSE06,SFMSE07,SFMSE08,SFMSE09,SFMSE10:
                                  SFMSE11,SFMSE12,SFMSE13,SFMSE14,SFMSE15:
                                  SFMSE16,SFMSE17,SFMSE18,SFMSE19,SFMSE20:
                                  SFMSE21,SFMSE22,SFMSE23,SFMSE24,SFMSE25:
                                  SFMSE26,SFMSE27,SFMSE28,SFMSE29,SFMSE30
.
          ADD       ONE,DEPFMSE                  * depth = depth + 1
          PACK      SFMSE,FMNFCODE,FMNFSCOD,SP70
          GOTO      GENRS100
.
.---- there is no next sub item ----
.
GENRS200  
          ADD       ONE,SEQFMSE                  * sequence = sequence + 1
          ADD       ONE,DATCNT                   * display every 1000th record
          IF        (DATCNT%1000=1) & (DISPFLAG=0)
            DISPLAY   *P1:24,*EL,*P20:24,"Processing : ":
                      *V2LON,SEQFMSB,"-",SFMSB,"-",SEQFMSE,"-",SFMSE,*EL;
          ENDIF
.
          UNPACK    SFMSB,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD
          UNPACK    SFMSE,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD
.
          MOVE      SP70,FMCCDESC                * read cc data
          MOVE      "000",FMNBTLEV
          PACK      KEY14,FMNALEDG,FMNCTCOD,SP70
          CALL      RDFMCC1
          UNPACK    SP70,FMNBPRTC
          PACK      FMNBDESC,FMCCDESC,SP70
          PACK      KEY15,FMNCCODE,FMNCTCOD,SP70
          CALL      RDFMNB1
.
          MOVE      ZERO,FMSADTYP                * read subj data
          MOVE      SP70,FMSADESC
          MOVE      "000",FMNETLEV
          PACK      KEY14,FMNDLEDG,FMNFTCOD,SP70
          CALL      RDFMSA1
          UNPACK    SP70,FMNEPRTC
          PACK      FMNEDESC,FMSADESC,SP70
          PACK      KEY15,FMNFCODE,FMNFTCOD,SP70
          CALL      RDFMNE1
.
          PACK      SUBJCODE,FMNFTCOD,SP70       * get account data
          PACK      COSTCODE,FMNCTCOD,SP70
          CALL      BCOD0000
          PACK      FMNHACCT,ACCOUNT,SP70
          MOVE      FMNGDOP,FMSADTYP
          CALL      BDES0000
          MOVE      "0",FMNHAYTD
          PACK      FMNHCPRT,FMNBPRTC,SP70
          PACK      FMNHSPRT,FMNEPRTC,SP70
          PACK      FMNHCLEV,FMNBTLEV,SP70
          PACK      FMNHSLEV,FMNETLEV,SP70
          MOVE      "2",FMNHDPLA
          MOVE      "0",FMNHMULT
          MOVE      "0",FMNHDIV
.
          PACK      KEY6,FMNBTLEV,FMNETLEV,SP70
          MATCH     "000000",KEY6
          IF        @EQUAL
            MOVE      "0",FMNHTYPE
          ELSE
            MOVE      "6",FMNHTYPE
          ENDIF
.
          PACK      KEY13,FMNGCODE,SEQFMSB,SEQFMSE,SP70
          UNPACK    KEY13,FMNHREPT,FMNHCSEQ,FMNHSSEQ
          CALL      RAFMNH1
          IF        OVRCD=1
            MATCH     FMNGCLEV,FMNHCLEV          * check cost centre level
            IF        !@LESS
              MATCH     FMNGSLEV,FMNHSLEV        * check subjective level
              IF        !@LESS
                CALL      WRFMNH1                * write to report file
              ENDIF
            ENDIF
          ENDIF
.
          SUB       ONE,DEPFMSE                  * depth = depth - 1
          LOAD      SFMSE,DEPFMSE,SFMSE01,SFMSE02,SFMSE03,SFMSE04,SFMSE05:
                                  SFMSE06,SFMSE07,SFMSE08,SFMSE09,SFMSE10:
                                  SFMSE11,SFMSE12,SFMSE13,SFMSE14,SFMSE15:
                                  SFMSE16,SFMSE17,SFMSE18,SFMSE19,SFMSE20:
                                  SFMSE21,SFMSE22,SFMSE23,SFMSE24,SFMSE25:
                                  SFMSE26,SFMSE27,SFMSE28,SFMSE29,SFMSE30
.
          PACK      SKEY12,FMNFTCOD,SP70
          UNPACK    SFMSE,FMNFCODE,FMNFTCOD,FMNFASEQ,FMNFSCOD
          IF        DEPFMSE>0
            PACK      KEY15,FMNACODE,FMNCTCOD,SP70
            CALL      RDFMNB1
            IF        OVRCD=1 | FMNGPSEQ=1
              PACK      SUBJCODE,FMNFTCOD,SP70   * get account data
              PACK      COSTCODE,FMNCTCOD,SP70
              CALL      BCOD0000
              PACK      KEY27,FMNGCODE,ACCOUNT,FMNHACCT,SP70
              UNPACK    KEY27,FMNKREPT,FMNKTACC,FMNKSACC
              CALL      RAFMNK1
              IF        OVRCD=1
                CALL      WRFMNK1                * add total to subjective
              ENDIF
            ENDIF
          ENDIF
.
          IF        DEPFMSB>1
            ASSIGN    DEPFMSB-1,F2
            LOAD      KEY32,F2,SFMSB01,SFMSB02,SFMSB03,SFMSB04,SFMSB05:
                               SFMSB06,SFMSB07,SFMSB08,SFMSB09,SFMSB10:
                               SFMSB11,SFMSB12,SFMSB13,SFMSB14,SFMSB15:
                               SFMSB16,SFMSB17,SFMSB18,SFMSB19,SFMSB20:
                               SFMSB21,SFMSB22,SFMSB23,SFMSB24,SFMSB25:
                               SFMSB26,SFMSB27,SFMSB28,SFMSB29,SFMSB30
            UNPACK    KEY32,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD
.
            PACK      KEY15,FMNDCODE,SKEY12,SP70
            CALL      RDFMNE1
            IF        OVRCD=1 | FMNGPSEQ=0
              PACK      SUBJCODE,SKEY12,SP70       * get account data
              PACK      COSTCODE,FMNCTCOD,SP70
              CALL      BCOD0000
              PACK      KEY27,FMNGCODE,ACCOUNT,FMNHACCT,SP70
              UNPACK    KEY27,FMNKREPT,FMNKTACC,FMNKSACC
              CALL      RAFMNK1
              IF        OVRCD=1
                CALL      WRFMNK1                  * add total to cost centre
              ENDIF
            ENDIF
            UNPACK    SFMSB,FMNCCODE,FMNCTCOD,FMNCASEQ,FMNCSCOD
          ENDIF
.
          MATCH     "0",FMNHTYPE
          IF        @EQUAL
            CALL      GDATA000              * calculate from data
          ENDIF
          MATCH     "6",FMNHTYPE
          IF        @EQUAL
            CALL      CDATA000              * calculate from sub accounts
          ENDIF
.
          GOTO      GENRS100
.
GENRS999  RETURN
.****************************************************************************
. GDATA - get data from data files
.****************************************************************************
GDATA000  
          PACK      KEY14,FMNALEDG,FMNHACCT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,GDATA999
.
          MATCH     "7",FMAMTYPE
          GOTO      GDATA999 IF EQUAL
          GOTO      GDATA500 IF LESS
.
.---- stat account ----
.
          IF        SMAA1STA=0
          ENDIF
.
          IF        SMAA2STA=0
          ENDIF
.
          IF        SBUA1STA=0
          ENDIF
.
          IF        SBUA3STA=0
          ENDIF
.
          GOTO      GDATA500
.
.---- normal account ----
.
GDATA500  
          IF        FPSA1STA=0
            CALL      RDFMFP1
            IF        OVRCD=0
              ASSIGN    FMNGCAS+1,F1
              LOAD      FMNIPEBR,F1,FMFPABF,FMFPCBF
              LOAD      FMNIPECE,F1,FMFPCOM,FMFPCOM
              LOAD      FMNIPE01,F1,FMFPA01,FMFPC01
              LOAD      FMNIPE02,F1,FMFPA02,FMFPC02
              LOAD      FMNIPE03,F1,FMFPA03,FMFPC03
              LOAD      FMNIPE04,F1,FMFPA04,FMFPC04
              LOAD      FMNIPE05,F1,FMFPA05,FMFPC05
              LOAD      FMNIPE06,F1,FMFPA06,FMFPC06
              LOAD      FMNIPE07,F1,FMFPA07,FMFPC07
              LOAD      FMNIPE08,F1,FMFPA08,FMFPC08
              LOAD      FMNIPE09,F1,FMFPA09,FMFPC09
              LOAD      FMNIPE10,F1,FMFPA10,FMFPC10
              LOAD      FMNIPE11,F1,FMFPA11,FMFPC11
              LOAD      FMNIPE12,F1,FMFPA12,FMFPC12
              LOAD      FMNIPE13,F1,FMFPA13,FMFPC13
              PACK      KEY16,FMNHREPT,FMAMACCT,ZERO,SP70
              UNPACK    KEY16,FMNIREPT,FMNIACCT,FMNITYPE
              CALL      RDFMNI1
              IF        OVRCD=1
                CALL      WRFMNI1
              ELSE
                CALL      UPFMNI1
              ENDIF
            ENDIF
          ENDIF
.
          IF        FPSA2STA=0
            CALL      RDFMFP2
            IF        OVRCD=0
              ASSIGN    FMNGCAS+1,F1
              LOAD      FMNIPEBR,F1,FMFPABF,FMFPCBF
              LOAD      FMNIPECE,F1,FMFPCOM,FMFPCOM
              LOAD      FMNIPE01,F1,FMFPA01,FMFPC01
              LOAD      FMNIPE02,F1,FMFPA02,FMFPC02
              LOAD      FMNIPE03,F1,FMFPA03,FMFPC03
              LOAD      FMNIPE04,F1,FMFPA04,FMFPC04
              LOAD      FMNIPE05,F1,FMFPA05,FMFPC05
              LOAD      FMNIPE06,F1,FMFPA06,FMFPC06
              LOAD      FMNIPE07,F1,FMFPA07,FMFPC07
              LOAD      FMNIPE08,F1,FMFPA08,FMFPC08
              LOAD      FMNIPE09,F1,FMFPA09,FMFPC09
              LOAD      FMNIPE10,F1,FMFPA10,FMFPC10
              LOAD      FMNIPE11,F1,FMFPA11,FMFPC11
              LOAD      FMNIPE12,F1,FMFPA12,FMFPC12
              LOAD      FMNIPE13,F1,FMFPA13,FMFPC13
              PACK      KEY16,FMNHREPT,FMAMACCT,ONE,SP70
              UNPACK    KEY16,FMNIREPT,FMNIACCT,FMNITYPE
              CALL      RDFMNI1
              IF        OVRCD=1
                CALL      WRFMNI1
              ELSE
                CALL      UPFMNI1
              ENDIF
            ENDIF
          ENDIF
.
          IF        BUDA1STA=0
            CALL      RDFMBU1
            IF        OVRCD=0
              MOVE      ZERO,FMNIPEBR
              MOVE      ZERO,FMNIPECE
              MOVE      FMBUCA01,FMNIPE01
              MOVE      FMBUCA02,FMNIPE02
              MOVE      FMBUCA03,FMNIPE03
              MOVE      FMBUCA04,FMNIPE04
              MOVE      FMBUCA05,FMNIPE05
              MOVE      FMBUCA06,FMNIPE06
              MOVE      FMBUCA07,FMNIPE07
              MOVE      FMBUCA08,FMNIPE08
              MOVE      FMBUCA09,FMNIPE09
              MOVE      FMBUCA10,FMNIPE10
              MOVE      FMBUCA11,FMNIPE11
              MOVE      FMBUCA12,FMNIPE12
              MOVE      FMBUCA13,FMNIPE13
              PACK      KEY16,FMNHREPT,FMAMACCT,TWO,SP70
              UNPACK    KEY16,FMNIREPT,FMNIACCT,FMNITYPE
              CALL      RDFMNI1
              IF        OVRCD=1
                CALL      WRFMNI1
              ELSE
                CALL      UPFMNI1
              ENDIF
            ENDIF
          ENDIF
.
          IF        BUDA3STA=0
            CALL      RDFMBU3
            IF        OVRCD=0
              MOVE      ZERO,FMNIPEBR
              MOVE      ZERO,FMNIPECE
              MOVE      FMBUCA01,FMNIPE01
              MOVE      FMBUCA02,FMNIPE02
              MOVE      FMBUCA03,FMNIPE03
              MOVE      FMBUCA04,FMNIPE04
              MOVE      FMBUCA05,FMNIPE05
              MOVE      FMBUCA06,FMNIPE06
              MOVE      FMBUCA07,FMNIPE07
              MOVE      FMBUCA08,FMNIPE08
              MOVE      FMBUCA09,FMNIPE09
              MOVE      FMBUCA10,FMNIPE10
              MOVE      FMBUCA11,FMNIPE11
              MOVE      FMBUCA12,FMNIPE12
              MOVE      FMBUCA13,FMNIPE13
              PACK      KEY16,FMNHREPT,FMAMACCT,THREE,SP70
              UNPACK    KEY16,FMNIREPT,FMNIACCT,FMNITYPE
              CALL      RDFMNI1
              IF        OVRCD=1
                CALL      WRFMNI1
              ELSE
                CALL      UPFMNI1
              ENDIF
            ENDIF
          ENDIF
.
GDATA999  RETURN
.****************************************************************************
. CDATA - calculate data from sub accounts
.****************************************************************************
CDATA000  
          PACK      KEY27,FMNHREPT,FMNHACCT,SP70
          CALL      RSFMNK1
.
CDATA100  
          CALL      RKFMNK1
          BRANCH    OVRCD,CDATA900
          MATCH     FMNKREPT,FMNHREPT
          GOTO      CDATA900 IF NOT EQUAL
          MATCH     FMNKTACC,FMNHACCT
          GOTO      CDATA900 IF NOT EQUAL
.
          CALL      RDATA000                     * clear totals
          MOVE      NINE,ACTYPE
          PACK      KEY15,FMNHREPT,FMNKSACC,SP70
          PACK      KEY16,FMNHREPT,FMNKSACC,SP70
          CALL      RSFMNI1
.
CDATA200  
          CALL      RKFMNI1
          BRANCH    OVRCD,CDATA300
          PACK      KEY16,FMNIREPT,FMNIACCT,FMNITYPE,SP70
          MATCH     KEY15,KEY16
          GOTO      CDATA300 IF NOT EQUAL
.
          MOVE      FMNITYPE,F2
          IF        F2<>ACTYPE
            CALL      WDATA000
            MOVE      FMNITYPE,ACTYPE
            CALL      RDATA000
          ENDIF
.
          CALL      ADATA000
          GOTO      CDATA200
.
CDATA300  
          CALL      WDATA000
.
          GOTO      CDATA100
.
CDATA900  
.
CDATA999  RETURN
.****************************************************************************
. RDATA - Reset data values
.****************************************************************************
RDATA000  
          MOVE      ZERO,ACTABFD
          MOVE      ZERO,ACTACOM
          MOVE      ZERO,ACTA01S
          MOVE      ZERO,ACTA02S
          MOVE      ZERO,ACTA03S
          MOVE      ZERO,ACTA04S
          MOVE      ZERO,ACTA05S
          MOVE      ZERO,ACTA06S
          MOVE      ZERO,ACTA07S
          MOVE      ZERO,ACTA08S
          MOVE      ZERO,ACTA09S
          MOVE      ZERO,ACTA10S
          MOVE      ZERO,ACTA11S
          MOVE      ZERO,ACTA12S
          MOVE      ZERO,ACTA13S
.
RDATA999  RETURN
.****************************************************************************
. ADATA - Add data values
.****************************************************************************
ADATA000  
          ADD       FMNIPEBR,ACTABFD
          ADD       FMNIPECE,ACTACOM
          ADD       FMNIPE01,ACTA01S
          ADD       FMNIPE02,ACTA02S
          ADD       FMNIPE03,ACTA03S
          ADD       FMNIPE04,ACTA04S
          ADD       FMNIPE05,ACTA05S
          ADD       FMNIPE06,ACTA06S
          ADD       FMNIPE07,ACTA07S
          ADD       FMNIPE08,ACTA08S
          ADD       FMNIPE09,ACTA09S
          ADD       FMNIPE10,ACTA10S
          ADD       FMNIPE11,ACTA11S
          ADD       FMNIPE12,ACTA12S
          ADD       FMNIPE13,ACTA13S
.
ADATA999  RETURN
.****************************************************************************
. WDATA - write data values
.****************************************************************************
WDATA000  
          COMPARE   ACTYPE,NINE             * skip if at start
          GOTO      WDATA999 IF EQUAL
.
          PACK      KEY17,FMNIREPT,FMNIACCT,FMNITYPE,SP70  * save current key
.
          PACK      KEY16,FMNHREPT,FMNHACCT,ACTYPE,SP70
          UNPACK    KEY16,FMNIREPT,FMNIACCT,FMNITYPE
          CALL      RDFMNI1
          IF        OVRCD=1
            MOVE      ACTABFD,FMNIPEBR
            MOVE      ACTACOM,FMNIPECE
            MOVE      ACTA01S,FMNIPE01
            MOVE      ACTA02S,FMNIPE02
            MOVE      ACTA03S,FMNIPE03
            MOVE      ACTA04S,FMNIPE04
            MOVE      ACTA05S,FMNIPE05
            MOVE      ACTA06S,FMNIPE06
            MOVE      ACTA07S,FMNIPE07
            MOVE      ACTA08S,FMNIPE08
            MOVE      ACTA09S,FMNIPE09
            MOVE      ACTA10S,FMNIPE10
            MOVE      ACTA11S,FMNIPE11
            MOVE      ACTA12S,FMNIPE12
            MOVE      ACTA13S,FMNIPE13
            CALL      WRFMNI1
          ELSE
            ADD       ACTABFD,FMNIPEBR
            ADD       ACTACOM,FMNIPECE
            ADD       ACTA01S,FMNIPE01
            ADD       ACTA02S,FMNIPE02
            ADD       ACTA03S,FMNIPE03
            ADD       ACTA04S,FMNIPE04
            ADD       ACTA05S,FMNIPE05
            ADD       ACTA06S,FMNIPE06
            ADD       ACTA07S,FMNIPE07
            ADD       ACTA08S,FMNIPE08
            ADD       ACTA09S,FMNIPE09
            ADD       ACTA10S,FMNIPE10
            ADD       ACTA11S,FMNIPE11
            ADD       ACTA12S,FMNIPE12
            ADD       ACTA13S,FMNIPE13
            CALL      UPFMNI1
          ENDIF
.
          PACK      KEY16,KEY17,SP70             * restore current record
          CALL      RDFMNI1
.
WDATA999  RETURN
.****************************************************************************
.  BDES - get account desc from subjective and cost codes    Called by lots
.        Requires - FMSADTYP  (subjective desc type)
.                   FMNEDESC  (subjective code desc)
.                   FMNBDESC  (cost centre code desc)
.                   FMSUUD6A  (subjective code desc length)
.        Returns  - FMNHDESC  (account code desc)
.****************************************************************************
BDES0000  MOVE      ZERO,F1
          MOVE      FMSADTYP,F1
          BRANCH    F1,BDES1000,BDES2000
          STORE     FMNBDESC,FMSUUD6A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12:
                                      KEY13,KEY14,KEY15,KEY16,KEY17,KEY18:
                                      KEY19,KEY20,KEY21,KEY22,KEY23,KEY24:
                                      KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                                      KEY31,KEY32,KEY33,KEY34,KEY35
          LOAD      FMNHDESC,FMSUUD6A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12:
                                      KEY13,KEY14,KEY15,KEY16,KEY17,KEY18:
                                      KEY19,KEY20,KEY21,KEY22,KEY23,KEY24:
                                      KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                                      KEY31,KEY32,KEY33,KEY34,KEY35
.
          PACK      FMNHDESC,FMNHDESC,SP1,FMNEDESC,SP70 * add cost centre desc
          GOTO      BDES9999
.
BDES1000  PACK      FMNHDESC,FMNBDESC,SP70
          GOTO      BDES9999
.
BDES2000  PACK      FMNHDESC,FMNEDESC,SP70
.
BDES9999  RETURN
.****************************************************************************
.  BCOD - get account code from subjective and cost codes    Called by lots
.        Requires - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD2B  (separater char)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - ACCOUNT   (account code)
.****************************************************************************
BCOD0000  STORE     COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      ACCOUNT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          COMPARE   FMSUUD2A,ONE
          GOTO      BCOD1000 IF NOT EQUAL         * separator char in use ?
.
          PACK      ACCOUNT,ACCOUNT,FMSUUD2B      * include sep. char
.
BCOD1000  PACK      ACCOUNT,ACCOUNT,SUBJCODE,SP70 * add subj code
.
BCOD9999  RETURN
.****************************************************************************
.  GCOD - get subjective and cost codes from account code    Called by lots
.        Requires - ACCOUNT   (account code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.**********************************************************************
. LINE - Print Header                                 Called By PRNT
.**********************************************************************
.
LINE0000  ADD       ONE,CLNO
          BRANCH    FMUDWID,LINE1100,LINE1200,LINE1300,LINE1400
.
LINE1100  PRINT     "--------------------------------------------":
                    "--------------------------------------------":
                    "--------------------------------------------"
          GOTO      LINE9999
.
LINE1200  PRINT     "----------------------------------------":
                    "----------------------------------------"
          GOTO      LINE9999
.
LINE1300  PRINT     "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------"
          GOTO      LINE9999
.
LINE1400  PRINT     "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------":
                    "----------"
          GOTO      LINE9999
.
LINE9999  RETURN
.**********************************************************************
. CHEK - Check if parameters ok                       Called By PRNT
.**********************************************************************
CHEK0000  
          UNPACK    SP70,FMNADESC,FMNALEDG
          PACK      KEY3,FMNGCCCD,SP70
          CALL      RDFMNA1
          BRANCH    OVRCD,CHEK9840
.
          MOVE      SP70,FMCCDESC
          MOVE      "000",FMNBTLEV
          PACK      KEY14,FMNDLEDG,FMNGCCFR,SP70
          CALL      RDFMCC1
          PACK      FMNBDESC,FMCCDESC,SP70
          IF        OVRCD=1
            MATCH     SP70,FMNGCCFR              * do we have a from item ?
            IF        @EQUAL
              PACK      KEY18,FMNACODE,Z70       * get item with highest level
              CALL      RSFMNB2
              CALL      RPFMNB2
            ELSE
              PACK      KEY15,FMNGCCCD,FMNGCCFR,SP70
              CALL      RDFMNB1
            ENDIF
          ELSE
            UNPACK    SP70,FMNCSCOD,FMNCTCOD
            PACK      KEY27,FMNGCCCD,FMNGCCFR,SP70
            CALL      RSFMNC2
            CALL      RKFMNC2
            PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
            MATCH     KEY15,KEY27
            GOTO      CHEK9820 IF NOT EQUAL
          ENDIF
          MATCH     FMNGCLEV,FMNBTLEV
          GOTO      CHEK9800 IF LESS
.
          UNPACK    SP70,FMNDDESC,FMNDLEDG
          PACK      KEY3,FMNGSACD,SP70
          CALL      RDFMND1
          BRANCH    OVRCD,CHEK9850
.
          MATCH     FMNALEDG,FMNDLEDG
          GOTO      CHEK9600 IF NOT EQUAL
.
          MOVE      SP70,FMSADESC
          MOVE      "000",FMNETLEV
          PACK      KEY14,FMNDLEDG,FMNGSAFR,SP70
          CALL      RDFMSA1
          PACK      FMNEDESC,FMSADESC,SP70
          IF        OVRCD=1
            MATCH     SP70,FMNGSAFR              * do we have a from item
            IF        @EQUAL
              PACK      KEY18,FMNDCODE,Z70       * get item with highest level
              CALL      RSFMNE2
              CALL      RPFMNE2
            ELSE
              PACK      KEY15,FMNGSACD,FMNGSAFR,SP70
              CALL      RDFMNE1
            ENDIF
          ELSE
            UNPACK    SP70,FMNFSCOD,FMNFTCOD
            PACK      KEY27,FMNGSACD,FMNGSAFR,SP70
            CALL      RSFMNF2
            CALL      RKFMNF2
            PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
            MATCH     KEY15,KEY27
            GOTO      CHEK9830 IF NOT EQUAL
          ENDIF
          MATCH     FMNGSLEV,FMNETLEV
          GOTO      CHEK9810 IF LESS
.
          UNPACK    SP70,FMLACYRR,FMLAPER        * get defaults
          PACK      FMLCLEDG,FMNALEDG,SP70
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,CHEK9500
          PACK      CURYEAR,FMLACYRR,SP70
          UNPACK    SP70,PERDFDAT,PERDTDAT
.
          PACK      KEY6,FMLALEDG,FMLACYRR,SP70
          CALL      RDFMLC1
.
          COMPARE   PERDFROM,PERDTO
          GOTO      CHEK9700 IF LESS
          GOTO      CHEK9900
.
CHEK9500  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  LEDGER MASTER RECORD MISSING  **********"
          GOTO      CHEK9999
.
CHEK9600  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  TEMPLATES RELATE TO DIFFERENT LEDGERS  ": 
                    "**********"
          GOTO      CHEK9999
.
CHEK9700  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  ILLEGAL PERIOD RANGE  ": 
                    "**********"
          GOTO      CHEK9999
.
CHEK9800  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          MATCH     SP70,FMNGCCFR
          IF        @EQUAL
            PRINT     "**********  HIGHEST COST CENTRE ":
                      " HAS LOWER LEVEL THAN ",FMNGCLEV,"  ","**********"
          ELSE
            PRINT     "**********  COST CENTRE ",FMNGCCFR:
                      " HAS LOWER LEVEL THAN ",FMNGCLEV,"  ","**********"
          ENDIF
          GOTO      CHEK9999
.
CHEK9810  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          MATCH     SP70,FMNGSAFR
          IF        @EQUAL
            PRINT     "**********  HIGHEST SUBJECTIVE ":
                      " HAS LOWER LEVEL THAN ",FMNGSLEV,"  ","**********"
          ELSE
            PRINT     "**********  SUBJECTIVE ",FMNGSAFR:
                      " HAS LOWER LEVEL THAN ",FMNGSLEV,"  ","**********"
          ENDIF
          GOTO      CHEK9999
.
CHEK9820  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT    "**********  COST CENTRE ",FMNGCCFR," NOT ON TEMPLATE ":
                    FMNGCCCD,"  ": 
                    "**********"
          GOTO      CHEK9999
.
CHEK9830  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  SUBJECTIVE ",FMNGSAFR," NOT ON TEMPLATE ":
                    FMNGSACD,"  ": 
                    "**********"
          GOTO      CHEK9999
.
CHEK9840  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT    "********** INVALID COST CENTRE TEMPLATE **********"
          GOTO      CHEK9999
.
CHEK9850  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT    "********** INVALID SUBJECTIVE TEMPLATE **********"
          GOTO      CHEK9999
.
CHEK9900  MOVE      ZERO,EXIT
.
CHEK9999  RETURN
.**********************************************************************
. FILE - Go to starting position on file              Called By PRNT
.**********************************************************************
FILE0000  
          UNPACK    SP70,FMNADESC,FMNALEDG
          PACK      KEY3,FMNGCCCD,SP70
          CALL      RDFMNA1
.
          MOVE      SP70,FMCCDESC
          MOVE      "000",FMNBTLEV
          PACK      KEY14,FMNDLEDG,FMNGCCFR,SP70
          CALL      RDFMCC1
          PACK      FMNBDESC,FMCCDESC,SP70
          IF        OVRCD=1
            MATCH     SP70,FMNGCCFR              * do we have a from item ?
            IF        @EQUAL
              PACK      KEY18,FMNACODE,Z70       * get item with highest level
              CALL      RSFMNB2
              CALL      RPFMNB2
              PACK      FMNBDESC,SP70
            ELSE
              PACK      KEY15,FMNGCCCD,FMNGCCFR,SP70
              CALL      RDFMNB1
            ENDIF
          ELSE
            UNPACK    SP70,FMNCSCOD,FMNCTCOD
            PACK      KEY27,FMNGCCCD,FMNGCCFR,SP70
            CALL      RSFMNC2
            CALL      RKFMNC2
            PACK      KEY15,FMNCCODE,FMNCSCOD,SP70
            MATCH     KEY15,KEY27
            GOTO      FILE9820 IF NOT EQUAL
          ENDIF
          MATCH     FMNGCLEV,FMNBTLEV
          GOTO      FILE9800 IF LESS
.
          UNPACK    SP70,FMNDDESC,FMNDLEDG
          PACK      KEY3,FMNGSACD,SP70
          CALL      RDFMND1
          MATCH     FMNALEDG,FMNDLEDG
          GOTO      FILE9600 IF NOT EQUAL
.
          MOVE      SP70,FMSADESC
          MOVE      "000",FMNETLEV
          PACK      KEY14,FMNDLEDG,FMNGSAFR,SP70
          CALL      RDFMSA1
          PACK      FMNEDESC,FMSADESC,SP70
          IF        OVRCD=1
            MATCH     SP70,FMNGSAFR              * do we have a from item
            IF        @EQUAL
              PACK      KEY18,FMNDCODE,Z70       * get item with highest level
              CALL      RSFMNE2
              CALL      RPFMNE2
              PACK      FMNEDESC,SP70
            ELSE
              PACK      KEY15,FMNGSACD,FMNGSAFR,SP70
              CALL      RDFMNE1
            ENDIF
          ELSE
            UNPACK    SP70,FMNFSCOD,FMNFTCOD
            PACK      KEY27,FMNGSACD,FMNGSAFR,SP70
            CALL      RSFMNF2
            CALL      RKFMNF2
            PACK      KEY15,FMNFCODE,FMNFSCOD,SP70
            MATCH     KEY15,KEY27
            GOTO      FILE9830 IF NOT EQUAL
          ENDIF
          MATCH     FMNGSLEV,FMNETLEV
          GOTO      FILE9810 IF LESS
.
          MOVE      SP70,FMUDDES
          PACK      KEY3,FMNGRS,SP70
          CALL      RDFMUD1
.
          MOVE      SP70,FMLVDESC
          PACK      KEY3,FMNGCLEV,SP70
          CALL      RDFMLV1
          PACK      CCLEVDES,FMLVDESC,SP70
.
          MOVE      SP70,FMLVDESC
          PACK      KEY3,FMNGSLEV,SP70
          CALL      RDFMLV1
          PACK      SALEVDES,FMLVDESC,SP70
.
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMNGCBT,SP70
          CALL      RDFMBT1
          PACK      BUDDESC,FMBTDESC,SP70
.
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMNGPBT,SP70
          CALL      RDFMBT1
          PACK      ALTDESC,FMBTDESC,SP70
.
          MOVE      "Normal A/c Name ",ADESC
          IF        FMNGDOP=1
            MOVE      "Cost Centre Name",ADESC
          ENDIF
          IF        FMNGDOP=2
            MOVE      "Subjective Name ",ADESC
          ENDIF
.
          IF        FMNGCAS=1
            MOVE      "Cash   ",REPTYPE
          ELSE
            MOVE      "Accrual",REPTYPE
          ENDIF
.
          IF        FMNGPSEQ=1
            MOVE      "Subjective Sequence      ",REPSEQ
          ELSE
            MOVE      "Cost Centre Sequence     ",REPSEQ
          ENDIF
.
          UNPACK    SP70,FMLACYRR,FMLAPER        * get defaults
          PACK      FMLCLEDG,FMNALEDG,SP70
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,FILE9500
          PACK      CURYEAR,FMLACYRR,SP70
          UNPACK    SP70,PERDFDAT,PERDTDAT
.
          PACK      KEY6,FMLALEDG,FMLACYRR,SP70
          CALL      RDFMLC1
.
          COMPARE   PERDFROM,PERDTO
          GOTO      FILE9700 IF LESS
.
          MOVE      SP70,IBESSEQ
          MOVE      ZERO,LASER
          MATCH     SP70,FMNGPT
          GOTO      FILE0100 IF EQUAL
          PACK      KEY5,SP3,FMNGPT
          CALL      RDIBES2
          BRANCH    OVRCD,FILE0100
          MOVE      IBESLAS,LASER
.
FILE0100  PACK      KEY13,SP70
          IF        FMNGPSEQ=1
            CALL      RSFMNH2               * go to next desired position
          ELSE
            CALL      RSFMNH1               * go to next desired position
          ENDIF
.
          CALL      BANR0000                * Print Banner Page
          MOVE      ZERO,OVRCD              * continue
          GOTO      FILE9900
.
FILE9500  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  LEDGER MASTER RECORD MISSING  **********"
          GOTO      FILE9999
.
FILE9600  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  TEMPLATES RELATE TO DIFFERENT LEDGERS  ": 
                    "**********"
          GOTO      FILE9999
.
FILE9700  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  ILLEGAL PERIOD RANGE  ": 
                    "**********"
          GOTO      FILE9999
.
FILE9800  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          MATCH     SP70,FMNGCCFR
          IF        @EQUAL
            PRINT     "**********  HIGHEST COST CENTRE ":
                      " HAS LOWER LEVEL THAN ",FMNGCLEV,"  ","**********"
          ELSE
            PRINT     "**********  COST CENTRE ",FMNGCCFR:
                      " HAS LOWER LEVEL THAN ",FMNGCLEV,"  ","**********"
          ENDIF
          GOTO      FILE9999
.
FILE9810  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          MATCH     SP70,FMNGSAFR
          IF        @EQUAL
            PRINT     "**********  HIGHEST SUBJECTIVE ":
                      " HAS LOWER LEVEL THAN ",FMNGSLEV,"  ","**********"
          ELSE
            PRINT     "**********  SUBJECTIVE ",FMNGSAFR:
                      " HAS LOWER LEVEL THAN ",FMNGSLEV,"  ","**********"
          ENDIF
          GOTO      FILE9999
.
FILE9820  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT    "**********  COST CENTRE ",FMNGCCFR," NOT ON TEMPLATE ":
                    FMNGCCCD,"  ": 
                    "**********"
          GOTO      FILE9999
.
FILE9830  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  SUBJECTIVE ",FMNGSAFR," NOT ON TEMPLATE ":
                    FMNGSACD,"  ": 
                    "**********"
          GOTO      FILE9999
.
FILE9900  MOVE      ZERO,EXIT
.
FILE9999  RETURN
.************************************************************************
.* ACT - Set up actual values                                           *
.************************************************************************
ACT0000   
          MATCH   "7",FMNHTYPE
          GOTO    ACT9999 IF EQUAL
.
          CALL    ZACT0000
          BRANCH  MOVEFLAG,ACT0200,ACT1000            * current or last year?
.
ACT0200   
          PACK    KEY16,FMNGCODE,FMNHACCT,ZERO,SP70
          CALL    RDFMNI1
          GOTO    ACT2000
.
ACT1000   
          PACK    KEY16,FMNGCODE,FMNHACCT,ONE,SP70
          CALL    RDFMNI1
.
ACT2000   
.
. Using acrual values
. -------------------
.
.--- Dollars and cents
.
          STORE   FMNIPEBR,MOVEFLAG,ACTABFC,ACTBBFC
          STORE   FMNIPECE,MOVEFLAG,ACTACMC,ACTBCMC
          STORE   FMNIPE01,MOVEFLAG,ACTA01C,ACTB01C
          STORE   FMNIPE02,MOVEFLAG,ACTA02C,ACTB02C
          STORE   FMNIPE03,MOVEFLAG,ACTA03C,ACTB03C
          STORE   FMNIPE04,MOVEFLAG,ACTA04C,ACTB04C
          STORE   FMNIPE05,MOVEFLAG,ACTA05C,ACTB05C
          STORE   FMNIPE06,MOVEFLAG,ACTA06C,ACTB06C
          STORE   FMNIPE07,MOVEFLAG,ACTA07C,ACTB07C
          STORE   FMNIPE08,MOVEFLAG,ACTA08C,ACTB08C
          STORE   FMNIPE09,MOVEFLAG,ACTA09C,ACTB09C
          STORE   FMNIPE10,MOVEFLAG,ACTA10C,ACTB10C
          STORE   FMNIPE11,MOVEFLAG,ACTA11C,ACTB11C
          STORE   FMNIPE12,MOVEFLAG,ACTA12C,ACTB12C
          STORE   FMNIPE13,MOVEFLAG,ACTA13C,ACTB13C
.
ACT9999   RETURN 
.
ZACT0000  
          MOVE     ZERO,FMNIPEBR
          MOVE     ZERO,FMNIPECE
          MOVE     ZERO,FMNIPE01
          MOVE     ZERO,FMNIPE01
          MOVE     ZERO,FMNIPE02
          MOVE     ZERO,FMNIPE03
          MOVE     ZERO,FMNIPE04
          MOVE     ZERO,FMNIPE05
          MOVE     ZERO,FMNIPE06
          MOVE     ZERO,FMNIPE07
          MOVE     ZERO,FMNIPE08
          MOVE     ZERO,FMNIPE09
          MOVE     ZERO,FMNIPE10
          MOVE     ZERO,FMNIPE11
          MOVE     ZERO,FMNIPE12
          MOVE     ZERO,FMNIPE13
.
          RETURN
.************************************************************************
.* BUD - Set up Budget values                                           *
.************************************************************************
BUD0000   MATCH     "7",FMNHTYPE
          GOTO      BUD9999 IF NOT LESS
.
          CALL      ZACT0000
          BRANCH    MOVEFLAG,BUD0100,BUD1000           * current or last year?
.
BUD0100   
          PACK      KEY16,FMNGCODE,FMNHACCT,TWO,SP70
          CALL      RDFMNI1
          GOTO      BUD2000
.
BUD1000   
          PACK    KEY16,FMNGCODE,FMNHACCT,THREE,SP70
          CALL    RDFMNI1
.
.--- Dollars and cents
.
BUD2000   STORE   FMNIPE01,MOVEFLAG,BUDA01C,BUDB01C
          STORE   FMNIPE02,MOVEFLAG,BUDA02C,BUDB02C
          STORE   FMNIPE03,MOVEFLAG,BUDA03C,BUDB03C
          STORE   FMNIPE04,MOVEFLAG,BUDA04C,BUDB04C
          STORE   FMNIPE05,MOVEFLAG,BUDA05C,BUDB05C
          STORE   FMNIPE06,MOVEFLAG,BUDA06C,BUDB06C
          STORE   FMNIPE07,MOVEFLAG,BUDA07C,BUDB07C
          STORE   FMNIPE08,MOVEFLAG,BUDA08C,BUDB08C
          STORE   FMNIPE09,MOVEFLAG,BUDA09C,BUDB09C
          STORE   FMNIPE10,MOVEFLAG,BUDA10C,BUDB10C
          STORE   FMNIPE11,MOVEFLAG,BUDA11C,BUDB11C
          STORE   FMNIPE12,MOVEFLAG,BUDA12C,BUDB12C
          STORE   FMNIPE13,MOVEFLAG,BUDA13C,BUDB13C
.
BUD9999   RETURN 
.
.**********************************************************************
. BANR - Print Banner Page and Setup Printer          Called By FILE
.        Setup Strings - S1 - Set laser printer to 132 Landscape
.                             This Sends all print types starting with "s1"
.                        S2 - Set laser printer to 80 Column Print
.                             This Sends all print types starting with "s2"
.                        S3 - Set printer to 160 Column Print
.                             This Sends all print types starting with "s3"
.                        S4 - Set printer to 210 Column Print
.                             This Sends all print types starting with "s4"
.                        S5 - Return Printer to Normal
.                             This Sends all print types starting with "s5"
.**********************************************************************
BANR0000  BRANCH  FMUDWID,BANR1000,BANR2000,BANR3000,BANR4000
.
. Report Width 132 char
.
BANR1000  BRANCH  LASER,BANR1500        * Is it a Laser Printer ?
          GOTO    BANR5000              * No so Setup Not Required
.
BANR1500  PACK    KEY5,FMNGPT,S1,SP70
          CALL    RSIBES1
BANR1600  CALL    RKIBES1
          BRANCH  OVRCD,BANR5000
          MATCH   S1,IBESPT
          GOTO    BANR5000 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    BANR1600
.
. Report Width 80  char 
.
BANR2000  BRANCH  LASER,BANR2500
          GOTO    BANR5000              * No so Setup Not Required
.
BANR2500  PACK    KEY5,FMNGPT,S2,SP70
          CALL    RSIBES1
BANR2600  CALL    RKIBES1
          BRANCH  OVRCD,BANR5000
          MATCH   S2,IBESPT
          GOTO    BANR5000 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    BANR2600
.
. Report Width 160 char (Send Printer Codes to Set Printer to Pitch 12)
.
BANR3000  PACK    KEY5,FMNGPT,S3,SP70
          CALL    RSIBES1
BANR3600  CALL    RKIBES1
          BRANCH  OVRCD,BANR5000
          MATCH   S3,IBESPT
          GOTO    BANR5000 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    BANR3600
.
. Report Width 210 char (Send Printer Codes to Set Printer to Pitch 16)
.
BANR4000  PACK    KEY5,FMNGPT,S4,SP70
          CALL    RSIBES1
.
BANR4600  CALL    RKIBES1
          BRANCH  OVRCD,BANR5000
          MATCH   S3,IBESPT
          GOTO    BANR5000 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    BANR4600
. 
. Printer Setup Complete so Print Banner Page (Always 80 Char Print)
.
BANR5000  MOVE      PASSCODE,KEY4
          MOVE      SP70,SECUSER
          OPEN      IHAPASS1,"ihapassf"
          CALL      RDPASS1
          CLOSE     IHAPASS1
          PACK      KEY6,FMLALEDG,CURYEAR
          MOVE      PERDTO,PERCNT
          CALL      RDFMLC1
.
          LOAD      PERSDAT,PERCNT,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR,FMLC05FR:
                                  FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR,FMLC10FR:
                                  FMLC11FR,FMLC12FR,FMLC13FR
.
          LOAD      PERLOCK,PERCNT,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN,FMLC05IN:
                                  FMLC06IN,FMLC07IN,FMLC08IN,FMLC09IN,FMLC10IN:
                                  FMLC11IN,FMLC12IN,FMLC13IN
.
          LOAD      PERDESC1,PERDFROM,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                     FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                     FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                     FMLC13DE
.
          LOAD      PEREDAT1,PERDFROM,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                     FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                     FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                     FMLC13TO
.
          LOAD      PERDESC2,PERDTO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                     FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                     FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                     FMLC13DE
.
          LOAD      PEREDAT2,PERDTO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                     FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                     FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                     FMLC13TO
.
          UNPACK    PERSDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,CPCDATE1
.
          UNPACK    PEREDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,CPCDATE2
.
          MOVE      ANSN,ANS
          LOAD      ANS,FMNGCAS,ANSY
          MOVE      FMNGPDES,PRGNAM
.
          PACK      YESNO,NO,SP70
          LOAD      YESNO,FMNGZER,YES
.
          MOVE      ZERO,F1
          MOVE      FMNGSUPP,F1
          PACK      YESNO2,NO,SP70
          LOAD      YESNO2,F1,YES
.
          MOVE      ZERO,F1
          MOVE      FMNGSHED,F1
          PACK      YESNO3,NO,SP70
          LOAD      YESNO3,F1,YES
.
          PACK      NADESC,FMNADESC,SP70
          PACK      NBDESC,FMNBDESC,SP70
          PACK      NDDESC,FMNDDESC,SP70
          PACK      NEDESC,FMNEDESC,SP70
.
          PRINT   *F:
                  *N,"----------------------------------------":
                     "----------------------------------------":
                  *N,"----------------------------------------":
                     "----------------------------------------":
                  *N,"|                                       ":
                     "                                       |":
                  *N,"|                      Report Selection ":
                     "Details                                |":
                  *N,"|                      -----------------":
                     "-------                                |":
                  *N,"|                                       ":
                     "                                       |":
                  *N,"| Printed by User       : ",SECUSER:
                     *80,"|":
                  *N,"| On Port               : ",PORT:
                     *80,"|":
                  *N,"| Ledger                : ",FMLALEDG,SP6,FMLADESC:
                     *80,"|":
                  *N,"| From Period/Fin Year  : ",PERDFROM,"/",CURYEAR:
                     SP1,PERDESC1," Starting ",CPCDATE1:
                     *80,"|":
                  *N,"| To   Period/Fin Year  : ",PERDTO,"/",CURYEAR:
                     SP1,PERDESC2," Ending ",CPCDATE2:
                     *80,"|":
                  *N,"| Report Parameter Code : ",FMNGCODE,SP5,FMNGDESC:
                     *80,"|":
                  *N,"|                                       ":
                     "                                       |":
                  *N,"| Cost Centre Template  : ",FMNGCCCD,SP5,NADESC:
                     *80,"|":
                  *N,"| From Cost Centre      : ",FMNGCCFR,SP1,NBDESC:
                     *80,"|":
                  *N,"| From Cost Centre Level: ",FMNGCLEV,SP5,CCLEVDES:
                     *80,"|":
                  *N,"| Subjective Template   : ",FMNGSACD,SP5,NDDESC:
                     *80,"|":
                  *N,"| From Subjective       : ",FMNGSAFR,SP1,NEDESC:
                     *80,"|":
                  *N,"| From Subjective Level : ",FMNGSLEV,SP5,SALEVDES:
                     *80,"|":
                  *N,"| Report Style          : ",FMNGRS,SP5,FMUDDES:
                     *80,"|":
                  *N,"| Cash/Accrual Report   : ",REPTYPE:
                     *80,"|":
                  *N,"| Budget Code           : ",FMNGCBT,SP4,BUDDESC:
                     *80,"|":
                  *N,"| Alternate Budget Code : ",FMNGPBT,SP4,ALTDESC:
                     *80,"|":
                  *N,"| Posting Ac Name       : ",FMNGDOP,SP7,ADESC:
                     *80,"|":
                  *N,"| Report Sequence       : ",FMNGPSEQ,SP7,REPSEQ:
                     *80,"|":
                  *N,"| Zero Account          : ",YESNO:
                     *80,"|":
                  *N,"| Ignore Suppress Print : ",YESNO2:
                     *80,"|"
.
          MATCH     "1",FMCOHPRT            * is parameter set ?
          GOTO      BANR8000 IF NOT EQUAL
          PRINT      "| Suppress Heading A/Cs : ",YESNO3:
                     *80,"|"
.
BANR8000  
          COMPARE   ONE,PRTWARN
          GOTO      BANR9000 IF EQUAL
          PRINT      "| WARNING - Accounting period has not been locked":
                     *80,"|":
                  *N,"|           This will be an interim report only":
                     *80,"|"
.
BANR9000  PRINT      "----------------------------------------":
                     "----------------------------------------":
                  *N,"----------------------------------------":
                     "----------------------------------------"

BANR9999  RETURN
.**********************************************************************
. Reset Printer
.**********************************************************************
RESP0000  BRANCH  LASER,RESP1000
          BRANCH  FMUDWID,RESP9999,RESP9999
RESP1000  PACK    KEY5,FMNGPT,S5,SP70
          CALL    RSIBES1
RESP2000  CALL    RKIBES1
          BRANCH  OVRCD,RESP9999
          MATCH   S5,IBESPT
          GOTO    RESP9999 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    RESP2000

RESP9999  RETURN
.**********************************************************************
. HEAD - Print Header                                 Called By PRNT
.**********************************************************************
HEAD0000  BRANCH    FMUDWID,HEAD1000,HEAD2000,HEAD3000,HEAD4000
.
HEAD1000  CALL      HEAD132                      * print header
          CALL      PHED0000                     * print user defined header
          CALL      LINE0000                     * print line
          MOVE      FMUDH12,DIM52
          PRINT     FMUDH11,DIM52
          ADD       ONE,CLNO
.
          MATCH     SP80,FMUDH21
          GOTO      HEAD1100 IF NOT EQUAL
          MATCH     SP80,FMUDH22
          GOTO      HEAD1200 IF EQUAL
.
HEAD1100  MOVE      FMUDH22,DIM52
          PRINT     FMUDH21,DIM52
          ADD       ONE,CLNO
.
HEAD1200  CALL      LINE0000                     * print line
          GOTO      HEAD9999
.
HEAD2000  CALL      HEAD80
          CALL      PHED0000                     * print user defined header
          CALL      LINE0000                     * print line
          PRINT     FMUDH11
          ADD       ONE,CLNO
          MATCH     SP80,FMUDH21
          GOTO      HEAD2100 IF EQUAL
.
          PRINT     FMUDH21
          ADD       ONE,CLNO
HEAD2100  CALL      LINE0000                     * print line
          GOTO      HEAD9999
.
HEAD3000  CALL      HEAD160                      * print header
          CALL      PHED0000                     * print user defined header
          CALL      LINE0000                     * print line
          PRINT     FMUDH11,FMUDH12
          ADD       ONE,CLNO
.
          MATCH     SP80,FMUDH21
          GOTO      HEAD3100 IF NOT EQUAL
          MATCH     SP80,FMUDH22
          GOTO      HEAD3200 IF EQUAL
.
HEAD3100  PRINT     FMUDH21,FMUDH22
          ADD       ONE,CLNO
.
HEAD3200  CALL      LINE0000                     * print line
          GOTO      HEAD9999
.
HEAD4000  CALL      HEAD210                      * print header
          CALL      PHED0000                     * print user defined header
          CALL      LINE0000                     * print line
          PRINT     FMUDH11,FMUDH12,FMUDH13
          ADD       ONE,CLNO
.
          MATCH     SP80,FMUDH21
          GOTO      HEAD4100 IF NOT EQUAL
          MATCH     SP80,FMUDH22
          GOTO      HEAD4100 IF NOT EQUAL
          MATCH     SP80,FMUDH23
          GOTO      HEAD4200 IF EQUAL
.
HEAD4100  PRINT     FMUDH21,FMUDH22,FMUDH23
          ADD       ONE,CLNO
.
HEAD4200  CALL      LINE0000                     * print line
          GOTO      HEAD9999
.
HEAD160   BRANCH   CNOUNDLN,HEAD160A         * No underlines
          COMPARE  ZERO,CPAGENO              * First page ?
          GOTO     HEAD160A IF EQUAL         * Yes. Don't print underlines
.
          CALL     UND160                    * Print the last line of prev page
.
HEAD160A  ADD      ONE,CPAGENO
.
          RESET    CPHDROPT                  * Do we have a header option ?
          GOTO     HEAD160B IF EOS           * No.
.
          MATCH    SP20,CPHDROPT             * Do we have a header option ?
          GOTO     HEAD160B IF EQUAL         * No.
.
          PRINT    *F,PRGID,*60,CNAME,*146,"DATE : ",CDATE:
                   *N,VERSION,*60,PRGNAM,SP1,*+,CPHDROPT:
                      *146,"TIME : ",CTIMEIS:
                   *N,*146,"PAGE :      ",CPAGENO
          GOTO     HEAD160Z
.
HEAD160B  PRINT    *F,PRGID,*60,CNAME,*146,"DATE : ",CDATE:
                   *N,VERSION,*60,PRGNAM,*146,"TIME : ",CTIMEIS:
                   *N,*146,"PAGE :      ",CPAGENO
.
HEAD160Z  CALL     IBACLOCK
          MOVE     THREE,CLNO
          GOTO      HEAD9999
.
HEAD210   BRANCH   CNOUNDLN,HEAD210A         * No underlines
          COMPARE  ZERO,CPAGENO              * First page ?
          GOTO     HEAD210A IF EQUAL         * Yes. Don't print underlines
.
          CALL     UND210                    * Print the last line of prev page
.
HEAD210A  ADD      ONE,CPAGENO
.
          RESET    CPHDROPT                  * Do we have a header option ?
          GOTO     HEAD210B IF EOS           * No.
.
          MATCH    SP20,CPHDROPT             * Do we have a header option ?
          GOTO     HEAD210B IF EQUAL         * No.
.
          PRINT    *F,PRGID,*60,CNAME,*146,"DATE : ",CDATE:
                   *N,VERSION,*60,PRGNAM,SP1,*+,CPHDROPT:
                      *146,"TIME : ",CTIMEIS:
                   *N,*146,"PAGE :      ",CPAGENO
          GOTO     HEAD210Z
.
HEAD210B  PRINT    *F,PRGID,*60,CNAME,*146,"DATE : ",CDATE:
                   *N,VERSION,*60,PRGNAM,*146,"TIME : ",CTIMEIS:
                   *N,*146,"PAGE :      ",CPAGENO
.
HEAD210Z  CALL     IBACLOCK
          MOVE     THREE,CLNO
          GOTO     HEAD9999
.
HEAD9999  RETURN
.
UND160    PRINT    *1,"*---------------------------------------":
                      "----------------------------------------":
                      "----------------------------------------":
                      "---------------------------------------*"
          ADD      ONE,CLNO 
          RETURN 
.
UND210    PRINT    *1,"*---------------------------------------":
                      "----------------------------------------":
                      "----------------------------------------":
                      "----------------------------------------":
                      "----------------------------------------":
                      "---------*"
          ADD      ONE,CLNO 
          RETURN 
.
.**********************************************************************
. PHED - Print user defined header
.**********************************************************************
PHED0000  
          UNPACK    SP70,LASTCHAR,CURCHAR
          PACK      KEY4,FMNGCODE,ZERO,SP70
          PACK      KEY7,KEY4,SP70
          CALL      RSFMNL1
.
PHED1000  
          CALL      RKFMNL1
          BRANCH    OVRCD,PHED9000
          PACK      KEY7,FMNLCOD,FMNLTYP,FMNLUNQ,SP70
          MATCH     KEY4,KEY7
          GOTO      PHED9000 IF NOT EQUAL
.
          REPEAT
            CMOVE     FMNLLIN,CURCHAR
            MATCH     "%",LASTCHAR
            IF        @EQUAL
              CALL      PITM0000       * print item
              BRANCH    EXIT,PHED9000,PHED1000
            ELSE
              MATCH     "%",CURCHAR
              IF        !@EQUAL
                PRINT     CURCHAR;
              ENDIF
            ENDIF
            MOVE      CURCHAR,LASTCHAR * save last character
            BUMP      FMNLLIN
          UNTIL     @EOS
.
          COMPARE   "50",CLNO          * make sure page wont fill
          GOTO      PHED1000 IF LESS
.
.---- print end of header ----
.
PHED9000  
          PRINT     *N;
          MOVE      SP70,LASTCHAR
          ADD       ONE,CLNO
.
PHED9999  RETURN
.**********************************************************************
. PITM - Print Item
.**********************************************************************
PITM0000  
          MOVE      ZERO,EXIT
          MATCH     "a",CURCHAR        * New Line
          IF        @EQUAL
            PRINT     *N;
            MOVE      TWO,EXIT
            MOVE      SP70,LASTCHAR
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     "b",CURCHAR        * Report Code
          IF        @EQUAL
            MOVE      FMNGCODE,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "c",CURCHAR        * Report Desc
          IF        @EQUAL
            MOVE      FMNGDESC,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "d",CURCHAR        * CC Template Code
          IF        @EQUAL
            MOVE      FMNGCCCD,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "e",CURCHAR        * CC Template Desc
          IF        @EQUAL
            MOVE      NADESC,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "f",CURCHAR        * From CC Code
          IF        @EQUAL
            MOVE      FMNGCCFR,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "g",CURCHAR        * From CC Desc
          IF        @EQUAL
            MOVE      NBDESC,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "h",CURCHAR        * From CC Level Code
          IF        @EQUAL
            MOVE      FMNGCLEV,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "i",CURCHAR        * From CC Level Desc
          IF        @EQUAL
            MOVE      CCLEVDES,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "j",CURCHAR        * Subj Template Code
          IF        @EQUAL
            MOVE      FMNGSACD,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "k",CURCHAR        * Subj Template Desc
          IF        @EQUAL
            MOVE      NDDESC,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "l",CURCHAR        * From Subj Code
          IF        @EQUAL
            MOVE      FMNGSAFR,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "m",CURCHAR        * From Subj Desc
          IF        @EQUAL
            MOVE      NEDESC,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "n",CURCHAR        * From Subj Level Code
          IF        @EQUAL
            MOVE      FMNGSLEV,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "o",CURCHAR        * From Subj Level Desc
          IF        @EQUAL
            MOVE      SALEVDES,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "p",CURCHAR        * Cash/Accrual Report
          IF        @EQUAL
            MOVE      REPTYPE,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "q",CURCHAR        * Financial Year
          IF        @EQUAL
            MOVE      CURYEAR,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "r",CURCHAR        * From Period
          IF        @EQUAL
            MOVE      PERDFROM,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "s",CURCHAR        * From Period Start Date
          IF        @EQUAL
            MOVE      CPCDATE1,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "t",CURCHAR        * From Period Description
          IF        @EQUAL
            MOVE      PERDESC1,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "u",CURCHAR        * To Period
          IF        @EQUAL
            MOVE      PERDTO,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "v",CURCHAR        * To Period End Date
          IF        @EQUAL
            MOVE      CPCDATE2,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "w",CURCHAR        * To Period Description
          IF        @EQUAL
            MOVE      PERDESC2,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "x",CURCHAR        * Code
          IF        @EQUAL
            MOVE      FMNALEDG,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "y",CURCHAR        * Ledger Description
          IF        @EQUAL
            MOVE      FMLADESC,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "z",CURCHAR        * Continue Line
          IF        @EQUAL
            MOVE      TWO,EXIT
            MOVE      SP70,LASTCHAR
          ENDIF
.
          MATCH     "%",CURCHAR        * Print "%"
          IF        @EQUAL
            PRINT     "%";
            MOVE      SP70,CURCHAR
          ENDIF
.
          MATCH     "+",CURCHAR        * Strip Descriptions
          IF        @EQUAL
            MOVE      ONE,STRIPDES
          ENDIF
.
          MATCH     "-",CURCHAR        * Don't Strip Descriptions
          IF        @EQUAL
            MOVE      ZERO,STRIPDES
          ENDIF
.
          MATCH     "A",CURCHAR        * Calendar Year
          IF        @EQUAL
            UNPACK    CPCDATE2,ANS,ANS,ANS,ANS,ANS,ANS,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "B",CURCHAR        * Current CC Code
          IF        @EQUAL
            MOVE      FMNHACCT,ACCOUNT
            CALL      GCOD0000
            MOVE      COSTCODE,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "C",CURCHAR        * Current CC Desc
          IF        @EQUAL
            MOVE      FMNHACCT,ACCOUNT
            CALL      GCOD0000
            MOVE      SP70,FMCCDESC
            PACK      KEY14,FMNALEDG,COSTCODE,SP70
            CALL      RDFMCC1
            PACK      FMNBDESC,FMCCDESC,SP70
            PACK      KEY15,FMNGCCCD,COSTCODE,SP70
            CALL      RDFMNB1
.
            MOVE      FMNBDESC,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "D",CURCHAR        * Current Subj Code
          IF        @EQUAL
            MOVE      FMNHACCT,ACCOUNT
            CALL      GCOD0000
            MOVE      SUBJCODE,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "E",CURCHAR        * Current Subj Desc
          IF        @EQUAL
            MOVE      FMNHACCT,ACCOUNT
            CALL      GCOD0000
            MOVE      SP70,FMSADESC
            PACK      KEY14,FMNALEDG,SUBJCODE,SP70
            CALL      RDFMSA1
            PACK      FMNEDESC,FMSADESC,SP70
            PACK      KEY15,FMNGSACD,SUBJCODE,SP70
            CALL      RDFMNE1
.
            MOVE      FMNEDESC,VAR
            IF        STRIPDES
              STRIP     VAR
            ENDIF
            PRINT    *+,VAR;
          ENDIF
.
          MATCH     "Z",CURCHAR        * End Header
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
.
PITM9999  RETURN
.**********************************************************************
. Print a line
.**********************************************************************
PROW0000  MOVE      FMPRBOLD,F1             * increment bolding indicator
          ADD       ONE,F1
.
PROW0050  CALL      PRTL0000
.
PROW0900  BRANCH    LASER,PROW1000    * Bolding Draft Printer
          SUB       ONE,F1            * decrement bolding indicator
          BRANCH    F1,PROW0050       * repeat print for bolding ?
.
PROW1000  PRINT     "" 
          ADD       ONE,CLNO
.
PROW9999  RETURN
.
.**********************************************************************
. Print Before Print Code Options
.**********************************************************************
PBEF0000  
          COMPARE   "60",CLNO
          GOTO      PBEF1000 IF NOT LESS    * page full
.
          COMPARE   "0",FMPRBLIN
          GOTO      PBEF2000 IF EQUAL       * No Before Lines
.
          COMPARE   "9",FMPRBLIN
          GOTO      PBEF1000 IF EQUAL       * New Page ?
.
PBEF0500  COMPARE   "1",FMPRBLIN
          GOTO      PBEF2000 IF LESS        * print blank line ?
.
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      PBEF1000 IF NOT LESS    * page full
          PRINT     "" 
          SUB       ONE,FMPRBLIN
          GOTO      PBEF0500
.
PBEF1000  CALL      HEAD0000
.
PBEF2000  COMPARE   ZERO,LASER
          GOTO      PBEF9999 IF EQUAL
.
          MATCH     SP70,FMPRPT1B
          GOTO      PBEF2100 IF EQUAL
          PACK      KEY5,FMNGPT,FMPRPT1B
          CALL      RDIBES1
          BRANCH    OVRCD,PBEF2100
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PBEF2100  MATCH     SP70,FMPRPT2B
          GOTO      PBEF2200 IF EQUAL
          PACK      KEY5,FMNGPT,FMPRPT2B
          CALL      RDIBES1
          BRANCH    OVRCD,PBEF2200
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PBEF2200  MATCH     SP70,FMPRPT3B
          GOTO      PBEF9999 IF EQUAL
          PACK      KEY5,FMNGPT,FMPRPT3B
          CALL      RDIBES1
          BRANCH    OVRCD,PBEF2300
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PBEF2300  
.
PBEF9999  RETURN
.
.**********************************************************************
. Print After Print Code Options
.**********************************************************************
PAFT0000  COMPARE   ZERO,LASER
          GOTO      PAFT0400 IF EQUAL
.
          MATCH     SP70,FMPRPT1A
          GOTO      PAFT0100 IF EQUAL
          PACK      KEY5,FMNGPT,FMPRPT1A
          CALL      RDIBES1
          BRANCH    OVRCD,PAFT0100
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PAFT0100  MATCH     SP70,FMPRPT2A
          GOTO      PAFT0200 IF EQUAL
          PACK      KEY5,FMNGPT,FMPRPT2A
          CALL      RDIBES1
          BRANCH    OVRCD,PAFT0200
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PAFT0200  MATCH     SP70,FMPRPT3A
          GOTO      PAFT0400 IF EQUAL
          PACK      KEY5,FMNGPT,FMPRPT3A
          CALL      RDIBES1
          BRANCH    OVRCD,PAFT0400
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PAFT0400  COMPARE   "1",FMPRUNDL
          CALL      UNDL0000 IF EQUAL       * print underline ?
.
          COMPARE   "0",FMPRALIN
          GOTO      PAFT9999 IF EQUAL       * Print Any After Blank Lines (No)
.
          COMPARE   "9",FMPRALIN
          GOTO      PAFT1000 IF EQUAL       * Print New Page
.
PAFT0500  COMPARE   "1",FMPRALIN
          GOTO      PAFT9999 IF LESS        * print blank line ?
.
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      PAFT1000 IF NOT LESS    * page full
          PRINT     "" 
          SUB       ONE,FMPRALIN
          GOTO      PAFT0500
.
PAFT1000  MOVE      "599",CLNO              * set to page end
.
.
PAFT9999  RETURN
.**********************************************************************
. Print Draft Underline (If Required)
.**********************************************************************
UNDL0000  BRANCH    LASER,UNDL9999
          PACK      LUND50,DASHES
          PACK      LUND52,DASHES
          PACK      LUND80,DASHES
          PACK      REPCHAR,DASH,FMPRUNDC
          REP       REPCHAR,LUND50
          REP       REPCHAR,LUND52
          REP       REPCHAR,LUND80
          MATCH     "7",FMNHTYPE
          GOTO      UNDL1000 IF NOT EQUAL
.
          CALL      UHED0000
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL1000  BRANCH    FMUDWID,UNDL1100,UNDL1200,UNDL1300,UNDL1400
          GOTO      UNDL9999
.
UNDL1100  PRINT     LUND80,LUND52          * 132 char print
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL1200  PRINT     LUND80                 * 80  char print
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL1300  PRINT     LUND80,LUND80          * 160 char print
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL1400  PRINT     LUND80,LUND80,LUND50   * 210 char print
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL9999  RETURN
.----------------------------------------------------------------------
. Check heading account
.----------------------------------------------------------------------
CKHD0000  
          MATCH     "7",FMNHTYPE                 * dont calc for headings
          GOTO      CKHD0050 IF EQUAL
.
          MOVE      ONE,MOVEFLAG
          CALL      ACT0000                      * set up current actual vars
          CALL      BUD0000                      * set up current budget vars
.
          MOVE      TWO,MOVEFLAG
          CALL      ACT0000                      * set up last years actual vars
          CALL      BUD0000                      * set up last years budget vars
.
           BRANCH   FMNGZER,CKHD0050
.
           MOVE     FMNHTYPE,ACTYPE
.
. Commented Out for Zero Account Page Break Problem at STV
.----------------------------------------------------------
.           IF       ACTYPE>7    
.             CALL     ADDTS000                     * calculate check total
.           ELSE
.             CALL     ADDTA000                     * calculate check total
.           ENDIF
.           BRANCH   EXIT,CKHD9999
.
CKHD0050   
          MATCH     "1",FMCOHPRT            * is parameter set ?
          GOTO      CKHD6000 IF NOT EQUAL
          MATCH     "1",FMNGSHED            * is parameter set ?
          GOTO      CKHD6000 IF NOT EQUAL
.
          MATCH     "7",FMNHTYPE            * IF acct to be printed is a heading
          GOTO      CKHD5000 IF NOT EQUAL
.
          MATCH     FMNHCLEV,SAVHLEV        *    IF curr level <> saved level
          GOTO      CKHD4000 IF EQUAL
          MATCH     SP70,SAVHLEV
          GOTO      CKHD4000 IF EQUAL
.                                           *    THEN print data in save vars
          PACK      SAVEACCT,FMNALEDG,FMNHACCT,FMNHCPRT,SP70
          PACK      FMNHCPRT,SAVHPRT,SP70
          PACK      KEY14,SAVHACC,SP70
          CALL      MLPR0000
          UNPACK    SAVEACCT,KEY14,FMNHCPRT
.                                           *    ENDIF
CKHD4000  
.                                           *    move current data to save vars
          PACK      SAVHACC,FMNALEDG,FMNHACCT,SP70
          PACK      SAVHLEV,FMNHCLEV,SP70
          PACK      SAVHPRT,FMNHCPRT,SP70
          GOTO      CKHD9999
.
.
CKHD5000
          MATCH     FMNHCLEV,SAVHLEV        *    IF curr level <= saved level
          GOTO      CKHD6000 IF LESS
.                                           *    THEN print data in save vars
          PACK      SAVEACCT,FMNALEDG,FMNHACCT,FMNHCPRT,SP70
          PACK      FMNHCPRT,SAVHPRT,SP70
          PACK      KEY14,SAVHACC,SP70
          CALL      MLPR0000
          UNPACK    SAVEACCT,KEY14,FMNHCPRT
.                                           *    ENDIF
.
CKHD6000  
.                                           *    clear save vars
          PACK      SAVHACC,SP70
          PACK      SAVHLEV,SP70
          PACK      SAVHPRT,SP70
.
          CALL      MLPR0000                * print current account data
          GOTO      CKHD9999
.
.
CKHD9999  RETURN
.
.----------------------------------------------------------------------
. Main "Print Line" Routine 
.                           - fmsudr record read at start of program
.----------------------------------------------------------------------
MLPR0000   
           MOVE      CLNO,SCLNO                  * check if at end of page
           ADD       FMUDROW,SCLNO
           COMPARE   "60",SCLNO                  * at end of page ?
           CALL      HEAD0000 IF NOT LESS        * start new page
.
           MOVE     FMNGZER,CHKZERO    * reset print for zero accounts
           LOAD     CHKZERO,FMUDROW,CHKZERO,ONE,ONE,ONE,ONE
           MOVE     FMNHTYPE,F1       * always print heading accounts
           LOAD     CHKZERO,F1,CHKZERO,CHKZERO,CHKZERO,CHKZERO,CHKZERO:
                               CHKZERO,ONE,CHKZERO,CHKZERO
           UNPACK   SP70,FMPRCODE,FMPRDESC  * clear print code data
           UNPACK   SP70,FMPRPT1B,FMPRPT2B,FMPRPT3B:
                         FMPRPT1A,FMPRPT2A,FMPRPT3A,FMPRUNDC
           MOVE     ZERO,FMPRUNDL     * check for heading account
           MOVE     ZERO,FMPRBLIN     * if heading account only print the row
           MOVE     ZERO,FMPRALIN     * with the account description so that
           MOVE     ZERO,FMPRBOLD     * only the description is underlined
           MOVE     ZERO,HEADFLAG     * Flag for Print Features    
           MOVE     ZERO,PRINTFL 
.
           IF        FMNGPSEQ=1
             PACK      KEY3,FMNHCPRT,SP70
           ELSE
             PACK      KEY3,FMNHSPRT,SP70
           ENDIF
           MATCH    SP70,KEY3
           IF       !(@EQUAL)
             CALL     RDFMPR1           * get print code data
             IF       OVRCD=0
               MOVE     ONE,PRINTFL      * Flag for Print Features
               IF       (FMPRBLIN=9)|(FMPRALIN=9)
                 MOVE     ONE,CHKZERO
               ENDIF
             ENDIF
           ENDIF
.
           MOVE     ZERO,CURROW       * Row Count 
.
MLPR1000   COMPARE  FMUDROW,CURROW    * Test to see if all rows have been
           GOTO     MLPR9000 IF EQUAL * printed exit if true
           ADD      ONE,CURROW        * Next Row
           MOVE     ZERO,CURCOL       * Column Count
           MOVE     ZERO,COLUMN
           BRANCH   HEADFLAG,MLPR9000
           CALL     CLRR0000          * Clear Row
.
MLPR2000   COMPARE  "20",CURCOL       * Check for last column
           GOTO     MLPR3000 IF EQUAL
           ADD      ONE,CURCOL        * Next Column
           CALL     LCOL0000          * Load Column Parameters
           COMPARE  ZERO,COLTYPE      * Column Type so last column
           GOTO     MLPR3000 IF EQUAL 
.
           CALL     LROW0000          * Load variable into Print Array
           GOTO     MLPR2000
.
MLPR3000   COMPARE  ONE,CHKZERO       * check if ok to print
           GOTO     MLPR9999 IF NOT EQUAL
.
           IF       (PRINTFL=1)&(CURROW=1)
             CALL     PBEF0000        * Print Before on first Line only
           ENDIF
.
           CALL     PROW0000
           GOTO     MLPR1000
.
MLPR9000   COMPARE  ONE,PRINTFL
           CALL     PAFT0000 IF EQUAL  * Print After Routine
.
MLPR9999   RETURN
.
.----------------------------------------------------------------------
. Load Column Parameters
.----------------------------------------------------------------------
LCOL0000   MOVE     CURROW,RCLOAD    * Calculate load number
           SUB      ONE,RCLOAD
           MULT     "20",RCLOAD
           ADD      CURCOL,RCLOAD
.
           LOAD     COLTYPE,RCLOAD,FMUDT101,FMUDT102,FMUDT103,FMUDT104,FMUDT105:
                                   FMUDT106,FMUDT107,FMUDT108,FMUDT109,FMUDT110:
                                   FMUDT111,FMUDT112,FMUDT113,FMUDT114,FMUDT115:
                                   FMUDT116,FMUDT117,FMUDT118,FMUDT119,FMUDT120:
                                   FMUDT201,FMUDT202,FMUDT203,FMUDT204,FMUDT205:
                                   FMUDT206,FMUDT207,FMUDT208,FMUDT209,FMUDT210:
                                   FMUDT211,FMUDT212,FMUDT213,FMUDT214,FMUDT215:
                                   FMUDT216,FMUDT217,FMUDT218,FMUDT219,FMUDT220:
                                   FMUDT301,FMUDT302,FMUDT303,FMUDT304,FMUDT305:
                                   FMUDT306,FMUDT307,FMUDT308,FMUDT309,FMUDT310:
                                   FMUDT311,FMUDT312,FMUDT313,FMUDT314,FMUDT315:
                                   FMUDT316,FMUDT317,FMUDT318,FMUDT319,FMUDT320:
                                   FMUDT401,FMUDT402,FMUDT403,FMUDT404,FMUDT405:
                                   FMUDT406,FMUDT407,FMUDT408,FMUDT409,FMUDT410:
                                   FMUDT411,FMUDT412,FMUDT413,FMUDT414,FMUDT415:
                                   FMUDT416,FMUDT417,FMUDT418,FMUDT419,FMUDT420:
                                   FMUDT501,FMUDT502,FMUDT503,FMUDT504,FMUDT505:
                                   FMUDT506,FMUDT507,FMUDT508,FMUDT509,FMUDT510:
                                   FMUDT511,FMUDT512,FMUDT513,FMUDT514,FMUDT515:
                                   FMUDT516,FMUDT517,FMUDT518,FMUDT519,FMUDT520
.
           LOAD     COLWIDT,RCLOAD,FMUDW101,FMUDW102,FMUDW103,FMUDW104,FMUDW105:
                                   FMUDW106,FMUDW107,FMUDW108,FMUDW109,FMUDW110:
                                   FMUDW111,FMUDW112,FMUDW113,FMUDW114,FMUDW115:
                                   FMUDW116,FMUDW117,FMUDW118,FMUDW119,FMUDW120:
                                   FMUDW201,FMUDW202,FMUDW203,FMUDW204,FMUDW205:
                                   FMUDW206,FMUDW207,FMUDW208,FMUDW209,FMUDW210:
                                   FMUDW211,FMUDW212,FMUDW213,FMUDW214,FMUDW215:
                                   FMUDW216,FMUDW217,FMUDW218,FMUDW219,FMUDW220:
                                   FMUDW301,FMUDW302,FMUDW303,FMUDW304,FMUDW305:
                                   FMUDW306,FMUDW307,FMUDW308,FMUDW309,FMUDW310:
                                   FMUDW311,FMUDW312,FMUDW313,FMUDW314,FMUDW315:
                                   FMUDW316,FMUDW317,FMUDW318,FMUDW319,FMUDW320:
                                   FMUDW401,FMUDW402,FMUDW403,FMUDW404,FMUDW405:
                                   FMUDW406,FMUDW407,FMUDW408,FMUDW409,FMUDW410:
                                   FMUDW411,FMUDW412,FMUDW413,FMUDW414,FMUDW415:
                                   FMUDW416,FMUDW417,FMUDW418,FMUDW419,FMUDW420:
                                   FMUDW501,FMUDW502,FMUDW503,FMUDW504,FMUDW505:
                                   FMUDW506,FMUDW507,FMUDW508,FMUDW509,FMUDW510:
                                   FMUDW511,FMUDW512,FMUDW513,FMUDW514,FMUDW515:
                                   FMUDW516,FMUDW517,FMUDW518,FMUDW519,FMUDW520
.
           LOAD     COLATYP,RCLOAD,FMUDA101,FMUDA102,FMUDA103,FMUDA104,FMUDA105:
                                   FMUDA106,FMUDA107,FMUDA108,FMUDA109,FMUDA110:
                                   FMUDA111,FMUDA112,FMUDA113,FMUDA114,FMUDA115:
                                   FMUDA116,FMUDA117,FMUDA118,FMUDA119,FMUDA120:
                                   FMUDA201,FMUDA202,FMUDA203,FMUDA204,FMUDA205:
                                   FMUDA206,FMUDA207,FMUDA208,FMUDA209,FMUDA210:
                                   FMUDA211,FMUDA212,FMUDA213,FMUDA214,FMUDA215:
                                   FMUDA216,FMUDA217,FMUDA218,FMUDA219,FMUDA220:
                                   FMUDA301,FMUDA302,FMUDA303,FMUDA304,FMUDA305:
                                   FMUDA306,FMUDA307,FMUDA308,FMUDA309,FMUDA310:
                                   FMUDA311,FMUDA312,FMUDA313,FMUDA314,FMUDA315:
                                   FMUDA316,FMUDA317,FMUDA318,FMUDA319,FMUDA320:
                                   FMUDA401,FMUDA402,FMUDA403,FMUDA404,FMUDA405:
                                   FMUDA406,FMUDA407,FMUDA408,FMUDA409,FMUDA410:
                                   FMUDA411,FMUDA412,FMUDA413,FMUDA414,FMUDA415:
                                   FMUDA416,FMUDA417,FMUDA418,FMUDA419,FMUDA420:
                                   FMUDA501,FMUDA502,FMUDA503,FMUDA504,FMUDA505:
                                   FMUDA506,FMUDA507,FMUDA508,FMUDA509,FMUDA510:
                                   FMUDA511,FMUDA512,FMUDA513,FMUDA514,FMUDA515:
                                   FMUDA516,FMUDA517,FMUDA518,FMUDA519,FMUDA520
.
           LOAD     COLSCAL,RCLOAD,FMUDS101,FMUDS102,FMUDS103,FMUDS104,FMUDS105:
                                   FMUDS106,FMUDS107,FMUDS108,FMUDS109,FMUDS110:
                                   FMUDS111,FMUDS112,FMUDS113,FMUDS114,FMUDS115:
                                   FMUDS116,FMUDS117,FMUDS118,FMUDS119,FMUDS120:
                                   FMUDS201,FMUDS202,FMUDS203,FMUDS204,FMUDS205:
                                   FMUDS206,FMUDS207,FMUDS208,FMUDS209,FMUDS210:
                                   FMUDS211,FMUDS212,FMUDS213,FMUDS214,FMUDS215:
                                   FMUDS216,FMUDS217,FMUDS218,FMUDS219,FMUDS220:
                                   FMUDS301,FMUDS302,FMUDS303,FMUDS304,FMUDS305:
                                   FMUDS306,FMUDS307,FMUDS308,FMUDS309,FMUDS310:
                                   FMUDS311,FMUDS312,FMUDS313,FMUDS314,FMUDS315:
                                   FMUDS316,FMUDS317,FMUDS318,FMUDS319,FMUDS320:
                                   FMUDS401,FMUDS402,FMUDS403,FMUDS404,FMUDS405:
                                   FMUDS406,FMUDS407,FMUDS408,FMUDS409,FMUDS410:
                                   FMUDS411,FMUDS412,FMUDS413,FMUDS414,FMUDS415:
                                   FMUDS416,FMUDS417,FMUDS418,FMUDS419,FMUDS420:
                                   FMUDS501,FMUDS502,FMUDS503,FMUDS504,FMUDS505:
                                   FMUDS506,FMUDS507,FMUDS508,FMUDS509,FMUDS510:
                                   FMUDS511,FMUDS512,FMUDS513,FMUDS514,FMUDS515:
                                   FMUDS516,FMUDS517,FMUDS518,FMUDS519,FMUDS520
.
           LOAD     COLPERD,RCLOAD,FMUDP101,FMUDP102,FMUDP103,FMUDP104,FMUDP105:
                                   FMUDP106,FMUDP107,FMUDP108,FMUDP109,FMUDP110:
                                   FMUDP111,FMUDP112,FMUDP113,FMUDP114,FMUDP115:
                                   FMUDP116,FMUDP117,FMUDP118,FMUDP119,FMUDP120:
                                   FMUDP201,FMUDP202,FMUDP203,FMUDP204,FMUDP205:
                                   FMUDP206,FMUDP207,FMUDP208,FMUDP209,FMUDP210:
                                   FMUDP211,FMUDP212,FMUDP213,FMUDP214,FMUDP215:
                                   FMUDP216,FMUDP217,FMUDP218,FMUDP219,FMUDP220:
                                   FMUDP301,FMUDP302,FMUDP303,FMUDP304,FMUDP305:
                                   FMUDP306,FMUDP307,FMUDP308,FMUDP309,FMUDP310:
                                   FMUDP311,FMUDP312,FMUDP313,FMUDP314,FMUDP315:
                                   FMUDP316,FMUDP317,FMUDP318,FMUDP319,FMUDP320:
                                   FMUDP401,FMUDP402,FMUDP403,FMUDP404,FMUDP405:
                                   FMUDP406,FMUDP407,FMUDP408,FMUDP409,FMUDP410:
                                   FMUDP411,FMUDP412,FMUDP413,FMUDP414,FMUDP415:
                                   FMUDP416,FMUDP417,FMUDP418,FMUDP419,FMUDP420:
                                   FMUDP501,FMUDP502,FMUDP503,FMUDP504,FMUDP505:
                                   FMUDP506,FMUDP507,FMUDP508,FMUDP509,FMUDP510:
                                   FMUDP511,FMUDP512,FMUDP513,FMUDP514,FMUDP515:
                                   FMUDP516,FMUDP517,FMUDP518,FMUDP519,FMUDP520
.
           LOAD     COLFORM,RCLOAD,FMUDF101,FMUDF102,FMUDF103,FMUDF104,FMUDF105:
                                   FMUDF106,FMUDF107,FMUDF108,FMUDF109,FMUDF110:
                                   FMUDF111,FMUDF112,FMUDF113,FMUDF114,FMUDF115:
                                   FMUDF116,FMUDF117,FMUDF118,FMUDF119,FMUDF120:
                                   FMUDF201,FMUDF202,FMUDF203,FMUDF204,FMUDF205:
                                   FMUDF206,FMUDF207,FMUDF208,FMUDF209,FMUDF210:
                                   FMUDF211,FMUDF212,FMUDF213,FMUDF214,FMUDF215:
                                   FMUDF216,FMUDF217,FMUDF218,FMUDF219,FMUDF220:
                                   FMUDF301,FMUDF302,FMUDF303,FMUDF304,FMUDF305:
                                   FMUDF306,FMUDF307,FMUDF308,FMUDF309,FMUDF310:
                                   FMUDF311,FMUDF312,FMUDF313,FMUDF314,FMUDF315:
                                   FMUDF316,FMUDF317,FMUDF318,FMUDF319,FMUDF320:
                                   FMUDF401,FMUDF402,FMUDF403,FMUDF404,FMUDF405:
                                   FMUDF406,FMUDF407,FMUDF408,FMUDF409,FMUDF410:
                                   FMUDF411,FMUDF412,FMUDF413,FMUDF414,FMUDF415:
                                   FMUDF416,FMUDF417,FMUDF418,FMUDF419,FMUDF420:
                                   FMUDF501,FMUDF502,FMUDF503,FMUDF504,FMUDF505:
                                   FMUDF506,FMUDF507,FMUDF508,FMUDF509,FMUDF510:
                                   FMUDF511,FMUDF512,FMUDF513,FMUDF514,FMUDF515:
                                   FMUDF516,FMUDF517,FMUDF518,FMUDF519,FMUDF520
.
           RETURN
.**********************************************************************
. Load a variable into the print array
. the following records should have been read before this routine is 
. called   1. Account Master Record
.          2. Period Summary Record
.          3. Budget Summary Record
.          4. Period Summary Record Last Year
.          5. Stats Summary Record
.          6. Stats Budget Summary
.          7. Stats Last Year Summary
.
. Parameters for column - COLTYPE = column type
.**********************************************************************
LROW0000  MOVE      SP70,TEMPVAR
          BRANCH    COLTYPE,LROW1000,LROW2000
.
LROW0100  MATCH     "7",FMNHTYPE
          GOTO      LROW9000 IF EQUAL
.
          BRANCH    COLTYPE,LROW1000,LROW2000,LROW3000,LROW4000,LROW5000:
                            LROW6000
.
. 1 Account Code
.
LROW1000  MOVE      FMNHACCT,TEMPVAR
          IF        FMNGDOP>0
            MOVE      FMNGDOP,FMSADTYP
            MOVE      FMNHACCT,ACCOUNT
            CALL      GCOD0000
            LOAD      TEMPVAR,FMNGDOP,COSTCODE,SUBJCODE
          ENDIF
          GOTO      LROW9000
.         
. 2 Account Description
.
LROW2000  CALL      FDES0000   * Get Required Description
          UNPACK    DESC35,TEMPVAR
          MATCH     "7",FMNHTYPE
          GOTO      LROW9000 IF NOT EQUAL
          MOVE      ONE,HEADFLAG  * Heading Underline has been set
          CALL      STHS0000      * Store Underline for Heading
          GOTO      LROW9000
.
. 3 Amount
.
LROW3000  CALL      FAMT0000    * Determine Formated Amount
          MOVE      FAMOUNT,TEMPVAR
          GOTO      LROW9000
.
. 4 Variance Amount
.
LROW4000  CALL      FVAR0000
          MOVE      FAMOUNT,TEMPVAR
          GOTO      LROW9000
.
. 5 Variance Percentage
.
LROW5000  CALL      FPVA0000
          MOVE      FAMOUNT,TEMPVAR
          GOTO      LROW9000
.         
. 6 Text
.
LROW6000  MOVE      COLFORM,TEMPVAR
          GOTO      LROW9000
.
LROW9000  CALL      STRC0000
.
LROW9999  RETURN
.**********************************************************************
. FDES format Description
.**********************************************************************
FDES0000  MOVE      FMNHDESC,DESC35
          COMPARE   ZERO,FMNGDOP
          GOTO      FDES9999 IF EQUAL
          MATCH     "6",FMNHTYPE
          GOTO      FDES9999 IF NOT LESS
.
          BRANCH    FMNGDOP,FDES1000,FDES2000
          GOTO      FDES9999
.
FDES1000  STORE     FMNHACCT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      ACCOUNT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          PACK      KEY14,FMNALEDG,ACCOUNT
          CALL      RDFMCC1
          BRANCH    OVRCD,FDES9999
          MOVE      FMCCDESC,DESC35
          GOTO      FDES9999
.
FDES2000  MOVE      FMSUUD4A,F2
          ADD       FMSUUD2A,F2
          ADD       ONE,F2
          RESET     FMNHACCT,F2
          MOVE      FMNHACCT,ACCOUNT
          PACK      KEY14,FMNALEDG,ACCOUNT
          CALL      RDFMSA1
          BRANCH    OVRCD,FDES9999
          MOVE      FMSADESC,DESC35
          GOTO      FDES9999
.
FDES9999  RETURN
.**********************************************************************
. Get And Format Amount
.**********************************************************************
FAMT0000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          BRANCH    COLPERD,FAMT1000,FAMT1000,FAMT1000,FAMT1000,FAMT1000:
                            FAMT1000,FAMT1000,FAMT1000,FAMT1000,FAMT1000:
                            FAMT1000,FAMT1000,FAMT1000,FAMT2000,FAMT3000:
                            FAMT4000,FAMT5000,FAMT6000,FAMT7000,FAMT8000:
                            FAMT8500,FAMT8600,FAMT8700
.
. Select Period Amount
.========================================
FAMT1000  BRANCH    COLATYP,FAMT1100,FAMT1200,FAMT1300,FAMT1400
.
FAMT1100  CALL      CAAPR000
          GOTO      FAMT9000
.
FAMT1200  CALL      CBAPR000
          GOTO      FAMT9000
.
FAMT1300  CALL      CBBPR000
          GOTO      FAMT9000
.
FAMT1400  CALL      CABPR000
          GOTO      FAMT9000
.
. Current Period Amount
.========================================
FAMT2000  BRANCH    COLATYP,FAMT2100,FAMT2200,FAMT2300,FAMT2400
.
FAMT2100  CALL      CAACU000
          GOTO      FAMT9000
.
FAMT2200  CALL      CBACU000
          GOTO      FAMT9000
.
FAMT2300  CALL      CBBCU000
          GOTO      FAMT9000
.
FAMT2400  CALL      CABCU000
          GOTO      FAMT9000
.
. Year to Date Amount
.========================================
FAMT3000  BRANCH    COLATYP,FAMT3100,FAMT3200,FAMT3300,FAMT3400
.
FAMT3100  CALL      CAAYR000
          GOTO      FAMT9000
.
FAMT3200  CALL      CBAYR000
          GOTO      FAMT9000
.
FAMT3300  CALL      CBBYR000
          GOTO      FAMT9000
.
FAMT3400  CALL      CABYR000
          GOTO      FAMT9000
.
. Annual Amount
.==============================
FAMT4000  BRANCH    COLATYP,FAMT4100,FAMT4200,FAMT4300,FAMT4400
.
FAMT4100  CALL      CAAAN000 * Annual Amount Current Actuals
          GOTO      FAMT9000
.
FAMT4200  CALL      CBAAN000 * Annual Amount Budget
          GOTO      FAMT9000
.
FAMT4300  CALL      CBBAN000 * Annual Amount Alternative Budget
          GOTO      FAMT9000
.
FAMT4400  CALL      CABAN000 * Annual Amount Last Year Actuals
          GOTO      FAMT9000
.
. Brought Forward
.==============================
FAMT5000  BRANCH    COLATYP,FAMT5100,FAMT9000,FAMT9000,FAMT5200
.
FAMT5100  MOVE      ACTABFC,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9000
.
FAMT5200  MOVE      ACTBBFC,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9000
.
. Projection
.==============================
FAMT6000  BRANCH    COLATYP,FAMT6100,FAMT9000,FAMT9000,FAMT6200
. Current Year Projection
.------------------------
FAMT6100  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CAAYR000
          SUB       AMOUNTS,VAMTS
          SUB       AMOUNTC,VAMTC
          CALL      CBAAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FAMT9000
.
FAMT6200  CALL      CBBYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABYR000
          SUB       AMOUNTS,VAMTS
          SUB       AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FAMT9000
.
. Committed
.==============================
FAMT7000  BRANCH    COLATYP,FAMT7100,FAMT9000,FAMT9000,FAMT7200
.
FAMT7100  MOVE      ACTACMC,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9000
.
FAMT7200  MOVE      ACTBCMC,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9000
.
. Carried Forward From Last Period Amount
.========================================
FAMT8000  BRANCH    COLATYP,FAMT8100,FAMT8200,FAMT8300,FAMT8400
.
FAMT8100  CALL      CAACF000
          GOTO      FAMT9000
.
FAMT8200  CALL      CBACF000
          GOTO      FAMT9000
.
FAMT8300  CALL      CBBCF000
          GOTO      FAMT9000
.
FAMT8400  CALL      CABCF000
          GOTO      FAMT9000
.
. YTD Movement
.=============
FAMT8500  BRANCH    COLATYP,FAMT8510,FAMT8520,FAMT8530,FAMT8540
.
FAMT8510  CALL      CAAYR000
          SUB       ACTABFC,AMOUNTC
          GOTO      FAMT9000
.
FAMT8520  CALL      CBAYR000
          GOTO      FAMT9000
.
FAMT8530  CALL      CBBYR000
          GOTO      FAMT9000
.
FAMT8540  CALL      CABYR000
          SUB       ACTBBFC,AMOUNTC
          GOTO      FAMT9000
.
. Previous Period
.========================================
FAMT8600  BRANCH    COLATYP,FAMT8610,FAMT8620,FAMT8630,FAMT8640
.
FAMT8610  CALL      CAAPP000
          GOTO      FAMT9000
.
FAMT8620  CALL      CBAPP000
          GOTO      FAMT9000
.
FAMT8630  CALL      CBBPP000
          GOTO      FAMT9000
.
FAMT8640  CALL      CABPP000
          GOTO      FAMT9000
.
. Diff between Current and Previous Period
.=========================================
FAMT8700  BRANCH    COLATYP,FAMT8710,FAMT8720,FAMT8730,FAMT8740
.
FAMT8710  CALL      CAAPP000
          MOVE      AMOUNTC,SAMOUNTC
          MOVE      AMOUNTS,SAMOUNTS
          CALL      CAACU000
          SUB       SAMOUNTC,AMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          GOTO      FAMT9000
.
FAMT8720  CALL      CBAPP000
          MOVE      AMOUNTC,SAMOUNTC
          MOVE      AMOUNTS,SAMOUNTS
          CALL      CBACU000
          SUB       SAMOUNTC,AMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          GOTO      FAMT9000
.
FAMT8730  CALL      CBBPP000
          MOVE      AMOUNTC,SAMOUNTC
          MOVE      AMOUNTS,SAMOUNTS
          CALL      CBBCU000
          SUB       SAMOUNTC,AMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          GOTO      FAMT9000
.
FAMT8740  CALL      CABPP000
          MOVE      AMOUNTC,SAMOUNTC
          MOVE      AMOUNTS,SAMOUNTS
          CALL      CABCU000
          SUB       SAMOUNTC,AMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          GOTO      FAMT9000
.
. ---- format amount ----
.
FAMT9000  CALL      FRMA0000           * format account
.
FAMT9999  RETURN
.**********************************************************************
. Store a Variable into the Print Array
. Fields Passed to Routine - TEMPVAR DIM 36
.                          - PRTLIN1 DIM 80
.                          - PRTLIN2 DIM 52
.                          - PRTLIN3 DIM 52
.**********************************************************************
STRC0000  COMPARE   ZERO,COLWIDT
          GOTO      STRC9999 IF EQUAL
.
          RESET     TEMPVAR,COLWIDT
          LENSET    TEMPVAR
          RESET     TEMPVAR
          
STRC1000  BRANCH    FMUDWID,STRC1100,STRC1200,STRC1300,STRC1400
          GOTO      STRC9999
.
. 132 Character Print
.---------------------
STRC1100  IF        COLUMN<132
            IF        COLUMN<81
              RESET     PLIN80A,COLUMN
              APPEND    TEMPVAR,PLIN80A
              ADD       COLWIDT,COLUMN
              IF        COLUMN>80
                CLEAR     PLIN52 
                ASSIGN    (COLWIDT+81-COLUMN),RESETCOL
                RESET     TEMPVAR,RESETCOL
                APPEND    TEMPVAR,PLIN52
              ENDIF
            ELSE
              ASSIGN    (COLUMN-80),RESETCOL
              RESET     PLIN52,RESETCOL
              APPEND    TEMPVAR,PLIN52
              ADD       COLWIDT,COLUMN
            ENDIF
          ENDIF
          GOTO      STRC9000
.
. 80 Character Print
.--------------------
STRC1200  IF        COLUMN<81
            RESET     PLIN80A,COLUMN
            APPEND    TEMPVAR,PLIN80A
            ADD       COLWIDT,COLUMN
          ENDIF
          GOTO      STRC9000
.
. 160 Character Print
.--------------------
STRC1300  IF        COLUMN<161
            IF        COLUMN<81
              RESET     PLIN80A,COLUMN
              APPEND    TEMPVAR,PLIN80A
              ADD       COLWIDT,COLUMN
              IF        COLUMN>80
                CLEAR     PLIN80B
                ASSIGN    (COLWIDT+81-COLUMN),RESETCOL
                RESET     TEMPVAR,RESETCOL
                APPEND    TEMPVAR,PLIN80B
              ENDIF
            ELSE
              ASSIGN    (COLUMN-80),RESETCOL
              RESET     PLIN80B,RESETCOL
              APPEND    TEMPVAR,PLIN80B
              ADD       COLWIDT,COLUMN
            ENDIF
          ENDIF
          GOTO      STRC9000
.
. 210 Character Print
.--------------------
STRC1400  IF        COLUMN<210
            IF        COLUMN<101
              RESET     PLIN100,COLUMN
              APPEND    TEMPVAR,PLIN100
              ADD       COLWIDT,COLUMN
              IF        COLUMN>110
                CLEAR     PLIN110 
                ASSIGN    (COLWIDT+101-COLUMN),RESETCOL
                RESET     TEMPVAR,RESETCOL
                APPEND    TEMPVAR,PLIN110
              ENDIF
            ELSE
              ASSIGN    (COLUMN-100),RESETCOL
              RESET     PLIN110,RESETCOL
              APPEND    TEMPVAR,PLIN110
              ADD       COLWIDT,COLUMN
            ENDIF
          ENDIF
.
STRC9000  RESET     TEMPVAR,36
          RESET     TEMPVAR
STRC9999  RETURN
.**********************************************************************
. Setup Underlines
.**********************************************************************
STHS0000  COMPARE   ZERO,COLWIDT
          GOTO      STHS9999 IF EQUAL
.
          MOVE      SP70,KEY36
          PACK      KEY2,SP1,FMPRUNDC
          REP       KEY2,KEY36
          RESET     KEY36,COLWIDT
          LENSET    KEY36
          RESET     KEY36
          
STHS1000  BRANCH    FMUDWID,STHS1100,STHS1200,STHS1300,STHS1400
          GOTO      STHS9999
.
. 132 Character Print
.---------------------
STHS1100  IF        COLUMN<132
            IF        COLUMN<81
              RESET     HLIN80A,COLUMN
              APPEND    KEY36,HLIN80A
              IF        (COLUMN+COLWIDT)>80
                CLEAR     HLIN52 
                ASSIGN    (81-COLUMN),RESETCOL
                RESET     KEY36,RESETCOL
                APPEND    KEY36,HLIN52
              ENDIF
            ELSE
              ASSIGN    (COLUMN-80),RESETCOL
              RESET     HLIN52,RESETCOL
              APPEND    KEY36,HLIN52
            ENDIF
          ENDIF
          GOTO      STHS9000
.
. 80 Character Print
.--------------------
STHS1200  IF        COLUMN<81
            RESET     HLIN80A,COLUMN
            APPEND    KEY36,HLIN80A
          ENDIF
          GOTO      STHS9000
.
. 160 Character Print
.--------------------
STHS1300  IF        COLUMN<161
            IF        COLUMN<81
              RESET     HLIN80A,COLUMN
              APPEND    KEY36,HLIN80A
              IF        (COLUMN+COLWIDT)>80
                CLEAR     HLIN80B
                ASSIGN    (81-COLUMN),RESETCOL
                RESET     KEY36,RESETCOL
                APPEND    KEY36,HLIN80B
              ENDIF
            ELSE
              ASSIGN    (COLUMN-80),RESETCOL
              RESET     HLIN80B,RESETCOL
              APPEND    KEY36,HLIN80B
            ENDIF
          ENDIF
          GOTO      STHS9000
.
. 210 Character Print
.--------------------
STHS1400  IF        COLUMN<210
            IF        COLUMN<101
              RESET     HLIN100,COLUMN
              APPEND    KEY36,HLIN100
              IF        (COLUMN+COLWIDT)>110
                CLEAR     HLIN110 
                ASSIGN    (101-COLUMN),RESETCOL
                RESET     KEY36,RESETCOL
                APPEND    KEY36,HLIN110
              ENDIF
            ELSE
              ASSIGN    (COLUMN-100),RESETCOL
              RESET     HLIN110,RESETCOL
              APPEND    KEY36,HLIN110
            ENDIF
          ENDIF
.
STHS9000  RESET     KEY36,36
          RESET     KEY36
STHS9999  RETURN
.**********************************************************************
. Print Print Array
.**********************************************************************
PRTL0000  BRANCH    FMUDWID,PRTL1000,PRTL2000,PRTL3000,PRTL40000
.
PRTL1000  PRINT     *1,PLIN80A,PLIN52;
          GOTO      PRTL9999
.
PRTL2000  PRINT     *1,PLIN80A;
          GOTO      PRTL9999
.
PRTL3000  PRINT     *1,PLIN80A,PLIN80B;
          GOTO      PRTL9999
.
PRTL4000  PRINT     *1,PLIN100,PLIN110;
          GOTO      PRTL9999
.
PRTL9999  RETURN
.**********************************************************************
. Print Underline Array
.**********************************************************************
UHED0000  BRANCH    FMUDWID,UHED1000,UHED2000,UHED3000,UHED40000
.
UHED1000  PRINT    *1,HLIN80A,HLIN52
          GOTO      UHED9999
.
UHED2000  PRINT    *1,HLIN80A
          GOTO      UHED9999
.
UHED3000  PRINT    *1,HLIN80A,HLIN80B
          GOTO      UHED9999
.
UHED4000  PRINT    *1,HLIN100,HLIN110
          GOTO      UHED9999
.
UHED9999  RETURN
.------------------------------------------------------------
. Annual Amount for Current Actuals
.------------------------------------------------------------
CAAAN000  MOVE      ACTA01S,AMOUNTS
          ADD       ACTA02S,AMOUNTS
          ADD       ACTA03S,AMOUNTS
          ADD       ACTA04S,AMOUNTS
          ADD       ACTA05S,AMOUNTS
          ADD       ACTA06S,AMOUNTS
          ADD       ACTA07S,AMOUNTS
          ADD       ACTA08S,AMOUNTS
          ADD       ACTA09S,AMOUNTS
          ADD       ACTA10S,AMOUNTS
          ADD       ACTA11S,AMOUNTS
          ADD       ACTA12S,AMOUNTS
          ADD       ACTA13S,AMOUNTS
          COMPARE   ONE,FMNHAYTD
          GOTO      CAAAN100 IF NOT EQUAL
          MOVE      "12",PERS
          ADD       FMLAPERS,PERS
          DIV       PERS,AMOUNTS
.
CAAAN100  MOVE      ACTABFC,AMOUNTC
          ADD       ACTA01C,AMOUNTC
          ADD       ACTA02C,AMOUNTC
          ADD       ACTA03C,AMOUNTC
          ADD       ACTA04C,AMOUNTC
          ADD       ACTA05C,AMOUNTC
          ADD       ACTA06C,AMOUNTC
          ADD       ACTA07C,AMOUNTC
          ADD       ACTA08C,AMOUNTC
          ADD       ACTA09C,AMOUNTC
          ADD       ACTA10C,AMOUNTC
          ADD       ACTA11C,AMOUNTC
          ADD       ACTA12C,AMOUNTC
          ADD       ACTA13C,AMOUNTC
.
          RETURN
.
. Annual Budget
.------------------------------
CBAAN000  MOVE      BUDA01S,AMOUNTS
          ADD       BUDA02S,AMOUNTS
          ADD       BUDA03S,AMOUNTS
          ADD       BUDA04S,AMOUNTS
          ADD       BUDA05S,AMOUNTS
          ADD       BUDA06S,AMOUNTS
          ADD       BUDA07S,AMOUNTS
          ADD       BUDA08S,AMOUNTS
          ADD       BUDA09S,AMOUNTS
          ADD       BUDA10S,AMOUNTS
          ADD       BUDA11S,AMOUNTS
          ADD       BUDA12S,AMOUNTS
          ADD       BUDA13S,AMOUNTS
          COMPARE   ONE,FMNHAYTD
          GOTO      CBAAN100 IF NOT EQUAL
          MOVE      "12",PERS
          ADD       FMLAPERS,PERS
          DIV       PERS,AMOUNTS
.
CBAAN100  MOVE      BUDA01C,AMOUNTC
          ADD       BUDA02C,AMOUNTC
          ADD       BUDA03C,AMOUNTC
          ADD       BUDA04C,AMOUNTC
          ADD       BUDA05C,AMOUNTC
          ADD       BUDA06C,AMOUNTC
          ADD       BUDA07C,AMOUNTC
          ADD       BUDA08C,AMOUNTC
          ADD       BUDA09C,AMOUNTC
          ADD       BUDA10C,AMOUNTC
          ADD       BUDA11C,AMOUNTC
          ADD       BUDA12C,AMOUNTC
          ADD       BUDA13C,AMOUNTC
.
          RETURN
.
. Annual Alternative Budget
.------------------------------
CBBAN000  MOVE      BUDB01S,AMOUNTS
          ADD       BUDB02S,AMOUNTS
          ADD       BUDB03S,AMOUNTS
          ADD       BUDB04S,AMOUNTS
          ADD       BUDB05S,AMOUNTS
          ADD       BUDB06S,AMOUNTS
          ADD       BUDB07S,AMOUNTS
          ADD       BUDB08S,AMOUNTS
          ADD       BUDB09S,AMOUNTS
          ADD       BUDB10S,AMOUNTS
          ADD       BUDB11S,AMOUNTS
          ADD       BUDB12S,AMOUNTS
          ADD       BUDB13S,AMOUNTS
          COMPARE   ONE,FMNHAYTD
          GOTO      CBBAN100 IF NOT EQUAL
          MOVE      "12",PERS
          ADD       FMLAPERS,PERS
          DIV       PERS,AMOUNTS
.
CBBAN100  MOVE      BUDB01C,AMOUNTC
          ADD       BUDB02C,AMOUNTC
          ADD       BUDB03C,AMOUNTC
          ADD       BUDB04C,AMOUNTC
          ADD       BUDB05C,AMOUNTC
          ADD       BUDB06C,AMOUNTC
          ADD       BUDB07C,AMOUNTC
          ADD       BUDB08C,AMOUNTC
          ADD       BUDB09C,AMOUNTC
          ADD       BUDB10C,AMOUNTC
          ADD       BUDB11C,AMOUNTC
          ADD       BUDB12C,AMOUNTC
          ADD       BUDB13C,AMOUNTC
.
          RETURN
.
. Last Years Actuals
.------------------------------
CABAN000  MOVE      ACTB01S,AMOUNTS
          ADD       ACTB02S,AMOUNTS
          ADD       ACTB03S,AMOUNTS
          ADD       ACTB04S,AMOUNTS
          ADD       ACTB05S,AMOUNTS
          ADD       ACTB06S,AMOUNTS
          ADD       ACTB07S,AMOUNTS
          ADD       ACTB08S,AMOUNTS
          ADD       ACTB09S,AMOUNTS
          ADD       ACTB10S,AMOUNTS
          ADD       ACTB11S,AMOUNTS
          ADD       ACTB12S,AMOUNTS
          ADD       ACTB13S,AMOUNTS
          COMPARE   ONE,FMNHAYTD
          GOTO      CABAN100 IF NOT EQUAL
          MOVE      "12",PERS
          ADD       FMLAPERS,PERS
          DIV       PERS,AMOUNTS
.
CABAN100  MOVE      ACTBBFC,AMOUNTC
          ADD       ACTB01C,AMOUNTC
          ADD       ACTB02C,AMOUNTC
          ADD       ACTB03C,AMOUNTC
          ADD       ACTB04C,AMOUNTC
          ADD       ACTB05C,AMOUNTC
          ADD       ACTB06C,AMOUNTC
          ADD       ACTB07C,AMOUNTC
          ADD       ACTB08C,AMOUNTC
          ADD       ACTB09C,AMOUNTC
          ADD       ACTB10C,AMOUNTC
          ADD       ACTB11C,AMOUNTC
          ADD       ACTB12C,AMOUNTC
          ADD       ACTB13C,AMOUNTC
.
          RETURN
.
. Calculate Actuals YTD
.-----------------------
CAAYR000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ACTABFC,AMOUNTC
.
CAAYR100  ADD       ONE,F2
          LOAD      TAMTS,F2,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                             ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                             ACTA11S,ACTA12S,ACTA13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                             ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                             ACTA11C,ACTA12C,ACTA13C
          ADD       TAMTC,AMOUNTC
          COMPARE   PERDTO,F2
          GOTO      CAAYR100 IF NOT EQUAL
          COMPARE   ONE,FMNHAYTD
          GOTO      CAAYR999 IF NOT EQUAL
          DIV       PERDTO,AMOUNTS
.
CAAYR999  RETURN
.
. Calculate Budget YTD
.----------------------
CBAYR000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
.
CBAYR100  ADD       ONE,F2
          LOAD      TAMTS,F2,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                             BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                             BUDA11S,BUDA12S,BUDA13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                             BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                             BUDA11C,BUDA12C,BUDA13C
          ADD       TAMTC,AMOUNTC
          COMPARE   PERDTO,F2
          GOTO      CBAYR100 IF NOT EQUAL
          COMPARE   ONE,FMNHAYTD
          GOTO      CBAYR999 IF NOT EQUAL
          DIV       PERDTO,AMOUNTS
.
CBAYR999  RETURN
.
. Calculate YTD alternative Budget
.----------------------------------
CBBYR000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
.
CBBYR100  ADD       ONE,F2
          LOAD      TAMTS,F2,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                             BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                             BUDB11S,BUDB12S,BUDB13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                             BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                             BUDB11C,BUDB12C,BUDB13C
          ADD       TAMTC,AMOUNTC
          COMPARE   PERDTO,F2
          GOTO      CBBYR100 IF NOT EQUAL
          COMPARE   ONE,FMNHAYTD
          GOTO      CBBYR999 IF NOT EQUAL
          DIV       PERDTO,AMOUNTS
.
CBBYR999  RETURN
.
. Calculate YTD Last Year
.-------------------------
CABYR000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ACTBBFC,AMOUNTC
.
CABYR100  ADD       ONE,F2
          LOAD      TAMTS,F2,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                             ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                             ACTB11S,ACTB12S,ACTB13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                             ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                             ACTB11C,ACTB12C,ACTB13C
          ADD       TAMTC,AMOUNTC
          COMPARE   PERDTO,F2
          GOTO      CABYR100 IF NOT EQUAL
          COMPARE   ONE,FMNHAYTD
          GOTO      CABYR999 IF NOT EQUAL
          DIV       PERDTO,AMOUNTS
.
CABYR999  RETURN
.
. Calculate Actuals Carried Forward
.----------------------------------
CAACF000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ACTABFC,AMOUNTC
.
CAACF100  ADD       ONE,F2
          COMPARE   PERDFROM,F2
          GOTO      CAACF200 IF NOT LESS
          LOAD      TAMTS,F2,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                             ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                             ACTA11S,ACTA12S,ACTA13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                             ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                             ACTA11C,ACTA12C,ACTA13C
          ADD       TAMTC,AMOUNTC
          GOTO      CAACF100
.
CAACF200  COMPARE   ONE,FMNHAYTD
          GOTO      CAACF999 IF NOT EQUAL
          DIV       PERDFROM,AMOUNTS
.
CAACF999  RETURN
.
. Calculate Budget Carried Forward
.---------------------------------
CBACF000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
.
CBACF100  ADD       ONE,F2
          COMPARE   PERDFROM,F2
          GOTO      CBACF200 IF NOT LESS
          LOAD      TAMTS,F2,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                             BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                             BUDA11S,BUDA12S,BUDA13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                             BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                             BUDA11C,BUDA12C,BUDA13C
          ADD       TAMTC,AMOUNTC
          GOTO      CBACF100
.
CBACF200  COMPARE   ONE,FMNHAYTD
          GOTO      CBACF999 IF NOT EQUAL
          DIV       PERDFROM,AMOUNTS
.
CBACF999  RETURN
.
. Calculate Carried Forward Alternative Budget
.---------------------------------------------
CBBCF000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
.
CBBCF100  ADD       ONE,F2
          COMPARE   PERDFROM,F2
          GOTO      CBBCF200 IF NOT LESS
          LOAD      TAMTS,F2,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                             BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                             BUDB11S,BUDB12S,BUDB13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                             BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                             BUDB11C,BUDB12C,BUDB13C
          ADD       TAMTC,AMOUNTC
          GOTO      CBBCF100
.
CBBCF200  COMPARE   ONE,FMNHAYTD
          GOTO      CBBCF999 IF NOT EQUAL
          DIV       PERDFROM,AMOUNTS
.
CBBCF999  RETURN
.
. Calculate Carried Forward Last Year
.------------------------------------
CABCF000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ACTBBFC,AMOUNTC
.
CABCF100  ADD       ONE,F2
          COMPARE   PERDFROM,F2
          GOTO      CABCF200 IF NOT LESS
          LOAD      TAMTS,F2,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                             ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                             ACTB11S,ACTB12S,ACTB13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                             ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                             ACTB11C,ACTB12C,ACTB13C
          ADD       TAMTC,AMOUNTC
          GOTO      CABCF100
.
CABCF200  COMPARE   ONE,FMNHAYTD
          GOTO      CABCF999 IF NOT EQUAL
          DIV       PERDFROM,AMOUNTS
.
CABCF999  RETURN
.
. Actual Current Period
.----------------------------
CAACU000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
.
CAACU100  LOAD      SUBAMTS,CURPERD,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                                   ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                                   ACTA11S,ACTA12S,ACTA13S
.
          LOAD      SUBAMTC,CURPERD,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                                   ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                                   ACTA11C,ACTA12C,ACTA13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          ADD       ONE,CURPERD
          COMPARE   CURPERD,PERDTO
          GOTO      CAACU100 IF NOT LESS
.
          RETURN
.
. Budget Current Period
.----------------------------------------
CBACU000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
.
CBACU100  LOAD      SUBAMTS,CURPERD,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                                   BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                                   BUDA11S,BUDA12S,BUDA13S
.
          LOAD      SUBAMTC,CURPERD,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                                   BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                                   BUDA11C,BUDA12C,BUDA13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          ADD       ONE,CURPERD
          COMPARE   CURPERD,PERDTO
          GOTO      CBACU100 IF NOT LESS
.
          RETURN
.
. Alternative Budget Current Period
.----------------------------------------
CBBCU000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
.
CBBCU100  LOAD      SUBAMTS,CURPERD,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                                   BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                                   BUDB11S,BUDB12S,BUDB13S
.
          LOAD      SUBAMTC,CURPERD,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                                   BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                                   BUDB11C,BUDB12C,BUDB13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          ADD       ONE,CURPERD
          COMPARE   CURPERD,PERDTO
          GOTO      CBBCU100 IF NOT LESS
.
          RETURN
.
. Last Year Actuals Current Period
.----------------------------------------
CABCU000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
.
CABCU100  LOAD      SUBAMTS,CURPERD,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                                   ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                                   ACTB11S,ACTB12S,ACTB13S
.
          LOAD      SUBAMTC,CURPERD,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                                   ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                                   ACTB11C,ACTB12C,ACTB13C
.
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          ADD       ONE,CURPERD
          COMPARE   CURPERD,PERDTO
          GOTO      CABCU100 IF NOT LESS
          RETURN
.
. Actual Previous Period
.----------------------------
CAAPP000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
          SUB       ONE,CURPERD
          MOVE      PERDTO,F2
          SUB       ONE,F2
.
          COMPARE   CURPERD,ZERO
          GOTO      CAAPP100 IF LESS
.
          MOVE      ZERO,F1
          MOVE      FMLAPERS,F1
          MOVE      ACTB12S,AMOUNTS
          MOVE      ACTB12C,AMOUNTC
          LOAD      AMOUNTS,F1,ACTB12S
          LOAD      AMOUNTC,F1,ACTB12C
          GOTO      CAAPP200
.
CAAPP100  LOAD      SUBAMTS,CURPERD,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                                   ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                                   ACTA11S,ACTA12S,ACTA13S
.
          LOAD      SUBAMTC,CURPERD,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                                   ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                                   ACTA11C,ACTA12C,ACTA13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
.
CAAPP200  ADD       ONE,CURPERD
          COMPARE   CURPERD,F2
          GOTO      CAAPP100 IF NOT LESS
.
          RETURN
.
. Budget Previous Period
.----------------------------------------
CBAPP000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
          SUB       ONE,CURPERD
          MOVE      PERDTO,F2
          SUB       ONE,F2
.
          COMPARE   CURPERD,ZERO
          GOTO      CAAPP100 IF LESS
.
          GOTO      CBAPP200
.
CBAPP100  LOAD      SUBAMTS,CURPERD,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                                   BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                                   BUDA11S,BUDA12S,BUDA13S
.
          LOAD      SUBAMTC,CURPERD,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                                   BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                                   BUDA11C,BUDA12C,BUDA13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
.
CBAPP200  ADD       ONE,CURPERD
          COMPARE   CURPERD,F2
          GOTO      CBAPP100 IF NOT LESS
.
          RETURN
.
. Alternative Budget Previous Period
.----------------------------------------
CBBPP000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
          SUB       ONE,CURPERD
          MOVE      PERDTO,F2
          SUB       ONE,F2
.
          COMPARE   CURPERD,ZERO
          GOTO      CAAPP100 IF LESS
.
          GOTO      CBBPP200
.
CBBPP100  LOAD      SUBAMTS,CURPERD,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                                   BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                                   BUDB11S,BUDB12S,BUDB13S
.
          LOAD      SUBAMTC,CURPERD,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                                   BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                                   BUDB11C,BUDB12C,BUDB13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
.
CBBPP200  ADD       ONE,CURPERD
          COMPARE   CURPERD,F2
          GOTO      CBBPP100 IF NOT LESS
.
          RETURN
.
. Last Year Actuals Previous Period
.----------------------------------------
CABPP000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
          SUB       ONE,CURPERD
          MOVE      PERDTO,F2
          SUB       ONE,F2
.
          COMPARE   CURPERD,ZERO
          GOTO      CABPP100 IF LESS   * I cant be bothered to get data before
.                                      * previous year - call me lazy but who
          GOTO      CABPP200           * gives a fuck !!
.
CABPP100  LOAD      SUBAMTS,CURPERD,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                                   ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                                   ACTB11S,ACTB12S,ACTB13S
.
          LOAD      SUBAMTC,CURPERD,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                                   ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                                   ACTB11C,ACTB12C,ACTB13C
.
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
.
CABPP200  ADD       ONE,CURPERD
          COMPARE   CURPERD,F2
          GOTO      CABPP100 IF NOT LESS
          RETURN
.
. Actuals (Selected Period)
.----------------------------------------
CAAPR000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          COMPARE   PERDFROM,COLPERD
          RETURN    IF LESS
          COMPARE   COLPERD,PERDTO
          RETURN    IF LESS
.
          LOAD      SUBAMTC,COLPERD,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                                    ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                                    ACTA11C,ACTA12C,ACTA13C
.
          LOAD      SUBAMTS,COLPERD,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                                    ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                                    ACTA11S,ACTA12S,ACTA13S
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          RETURN
.
. Budgets (Selected Period)
.----------------------------------------
CBAPR000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          COMPARE   PERDFROM,COLPERD
          RETURN    IF LESS
          COMPARE   COLPERD,PERDTO
          RETURN    IF LESS
.
          LOAD      SUBAMTC,COLPERD,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                                    BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                                    BUDA11C,BUDA12C,BUDA13C
.
          LOAD      SUBAMTS,COLPERD,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                                    BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                                    BUDA11S,BUDA12S,BUDA13S
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          RETURN
.
. Alternative Budgets (Selected Period)
.----------------------------------------
CBBPR000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          COMPARE   PERDFROM,COLPERD
          RETURN    IF LESS
          COMPARE   COLPERD,PERDTO
          RETURN    IF LESS
.
          LOAD      SUBAMTC,COLPERD,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                                    BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                                    BUDB11C,BUDB12C,BUDB13C
.
          LOAD      SUBAMTS,COLPERD,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                                    BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                                    BUDB11S,BUDB12S,BUDB13S
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          RETURN
.
. Last Years Actuals (Selected Period)
.----------------------------------------
CABPR000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          COMPARE   PERDFROM,COLPERD
          RETURN    IF LESS
          COMPARE   COLPERD,PERDTO
          RETURN    IF LESS
.
          LOAD      SUBAMTC,COLPERD,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                                    ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                                    ACTB11C,ACTB12C,ACTB13C
.
          LOAD      SUBAMTS,COLPERD,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                                    ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                                    ACTB11S,ACTB12S,ACTB13S
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          RETURN
.**********************************************************************
. Calculate Variance Amount
.**********************************************************************
FVAR0000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          BRANCH    COLPERD,FVAR1000,FVAR1000,FVAR1000,FVAR1000,FVAR1000:
                            FVAR1000,FVAR1000,FVAR1000,FVAR1000,FVAR1000:
                            FVAR1000,FVAR1000,FVAR1000,FVAR2000,FVAR3000:
                            FVAR4000
.
. Select Period Amount
.========================================
FVAR1000  BRANCH    COLATYP,FVAR1100,FVAR1200,FVAR1300,FVAR1400,FVAR1500:
                            FVAR1600
.
FVAR1100  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1200  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1300  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1400  CALL      CBAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1500  CALL      CBAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1600  CALL      CABPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
. Current Period Amount
.========================================
FVAR2000  BRANCH    COLATYP,FVAR2100,FVAR2200,FVAR2300,FVAR2400,FVAR2500:
                            FVAR2600
.
FVAR2100  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBACU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2200  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2300  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2400  CALL      CBACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2500  CALL      CBACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2600  CALL      CABCU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
. Ytd Amount
.========================================
FVAR3000  BRANCH    COLATYP,FVAR3100,FVAR3200,FVAR3300,FVAR3400,FVAR3500:
                            FVAR3600
.
FVAR3100  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3200  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3300  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3400  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3500  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3600  CALL      CABYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
. Annual Amount
.========================================
FVAR4000  BRANCH    COLATYP,FVAR4100,FVAR4200,FVAR4300,FVAR4400,FVAR4500:
                            FVAR4600
.
FVAR4100  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4200  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4300  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4400  CALL      CBAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4500  CALL      CBAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4600  CALL      CABAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
.
FVAR8000  
.                                 * note : variance here is bud-act
.                                 *        in enquiries variance is act-bud
          MATCH     "1",FMCOBVAR
          GOTO      FVAR8500 IF EQUAL
.
          COMPARE   ZERO,AMOUNTS
          GOTO      FVAR8400 IF EQUAL
.
          MULT      SEQ,AMOUNTS
.
FVAR8400  COMPARE   ZERO,AMOUNTC
          GOTO      FVAR8500 IF EQUAL
.
          MULT      SEQ,AMOUNTC
.
FVAR8500  CALL      FRMA0000           * format account
.
FVAR9999  RETURN
.
CLRR0000  PACK       PLIN80A,SP70,SP70
          PACK       PLIN80B,SP70,SP70
          PACK       PLIN52,SP70,SP70
          PACK       PLIN100,SP70,SP70
          PACK       PLIN110,SP70,SP70
          RETURN
.
.**********************************************************************
. Calculate Percentage Variance Amount
.**********************************************************************
FPVA0000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          BRANCH    COLPERD,FPVA1000,FPVA1000,FPVA1000,FPVA1000,FPVA1000:
                            FPVA1000,FPVA1000,FPVA1000,FPVA1000,FPVA1000:
                            FPVA1000,FPVA1000,FPVA1000,FPVA2000,FPVA3000:
                            FPVA4000
.
. Select Period Amount
.========================================
FPVA1000  BRANCH    COLATYP,FPVA1100,FPVA1200,FPVA1300,FPVA1400,FPVA1500:
                            FPVA1600
.
FPVA1100  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1200  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1300  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1400  CALL      CBAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1500  CALL      CBAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1600  CALL      CABPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
. Current Period Amount
.========================================
FPVA2000  BRANCH    COLATYP,FPVA2100,FPVA2200,FPVA2300,FPVA2400,FPVA2500:
                            FPVA2600
.
FPVA2100  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBACU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2200  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2300  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2400  CALL      CBACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2500  CALL      CBACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2600  CALL      CABCU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
. Ytd Amount
.========================================
FPVA3000  BRANCH    COLATYP,FPVA3100,FPVA3200,FPVA3300,FPVA3400,FPVA3500:
                            FPVA3600
.
FPVA3100  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3200  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3300  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3400  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3500  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3600  CALL      CABYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
. Annual Amount
.========================================
FPVA4000  BRANCH    COLATYP,FPVA4100,FPVA4200,FPVA4300,FPVA4400,FPVA4500:
                            FPVA4600
.
FPVA4100  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4200  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4300  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4400  CALL      CBAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4500  CALL      CBAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4600  CALL      CABAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA8000  
.                                 * note : variance here is bud-act
.                                 *        in enquiries variance is act-bud
          MATCH     "1",FMCOBVAR
          GOTO      FPVA8500 IF EQUAL
.
          COMPARE   ZERO,AMOUNTS
          GOTO      FPVA8400 IF EQUAL
.
          MULT      SEQ,AMOUNTS
.
FPVA8400  COMPARE   ZERO,AMOUNTC
          GOTO      FPVA8500 IF EQUAL
.
          MULT      SEQ,AMOUNTC
.
FPVA8500  CALL      FRMA0000           * format account
.
FPVA9999  RETURN
.**********************************************************************
.  FRMA - Format Amount                                Called By lots
.**********************************************************************
FRMA0000  MATCH     "7",FMNHTYPE
          GOTO      FRMA9400 IF NOT LESS
.
          MOVE      AMOUNTC,AMOUNTD     * round for dollars only/thousands
          LOAD      F12P6,COLSCAL,AMOUNTC,AMOUNTD,AMOUNTC
          GOTO      FRMA9900
.
FRMA9400  MOVE      FMNHDPLA,F2
          ADD       ONE,F2              * round to normal dec places
          STORE     AMOUNTS,F2,F12,F12P1,F12P2,F12P3,F12P4,F12P5
          LOAD      AMOUNTS,F2,F12,F12P1,F12P2,F12P3,F12P4,F12P5
          MOVE      AMOUNTS,F12P6
          GOTO      FRMA9900
.
FRMA9900  BRANCH    COLSCAL,FRMA9990,FRMA9990
          DIV       "1000",F12P6        * calculate for thousands
.
FRMA9990  CALL      FEDIT000            * format amount
          COMPARE   ZERO,F12P6
          GOTO      FRMA9999 IF EQUAL
          MOVE      ONE,CHKZERO
FRMA9999  RETURN
.**********************************************************************
.  FEDIT - format amount                               Called By lots
.        Requires - COLFORM   (contains desired format)
.                   F12P2     (contains amount to format)
.                   FMNHTYPE  (account type)
.                   FMNHDPLA  (no. of decimal places)
.         Returns - FAMOUNT   (output string)
.**********************************************************************
.
.---- calc number of decimal places ----
.
FEDIT000  MOVE      COLFORM,FAMOUNT     * Dollars and Cents
.
          MATCH     "8",FMNHTYPE
          GOTO      FEDIT010 IF LESS             * stat type account
.
          MOVE      ZERO,F1
          MOVE      FMCOPSTA,F1
          COMPARE   ONE,F1
          GOTO      FEDIT010 IF NOT EQUAL        * 0=rep style, 1=dec places
.
          MOVE      "2",DECPLA
          MOVE      FMNHDPLA,DECPLA
          CALL      GFRM0000                     * get desired format
          GOTO      FEDIT200
.
FEDIT010  UNPACK    FAMOUNT,ANS1,ANS2,ANS3,ANS4,ANS5,ANS6,ANS7,ANS8,ANS9,ANS10:
                    ANS11,ANS12,ANS13,ANS14,ANS15,ANS16,ANS17,ANS18,ANS19,ANS20
          MOVE      "20",F2                      * at end of string
          MOVE      "0",DECPLA
.
FEDIT100  LOAD      ANS,F2,ANS1,ANS2,ANS3,ANS4,ANS5,ANS6,ANS7,ANS8,ANS9,ANS10:
                    ANS11,ANS12,ANS13,ANS14,ANS15,ANS16,ANS17,ANS18,ANS19,ANS20
          PACK      ANS,ANS,SP70
          MATCH     ".",ANS
          GOTO      FEDIT200 IF EQUAL            * found decimal point ?
.
          MATCH     "9",ANS
          GOTO      FEDIT110 IF NOT EQUAL        * valid number ?
          ADD       ONE,DECPLA
.
FEDIT110  SUB       ONE,F2
          COMPARE   ONE,F2
          GOTO      FEDIT100 IF NOT LESS         * at start of string ?
          MOVE      "0",DECPLA                   * no decimal places
.
.---- format number ----
.
FEDIT200  COMPARE   ZERO,DECPLA
          GOTO      FEDIT205 IF EQUAL
          BRANCH    DECPLA,FEDIT210,FEDIT220,FEDIT230,FEDIT240,FEDIT250
          GOTO      FEDIT260           * anything other than 0-5
.
FEDIT205  MOVE      F12P6,F12
          FEDIT     F12,FAMOUNT
          GOTO      FEDIT999
.
FEDIT210  MOVE      F12P6,F12P1
          FEDIT     F12P1,FAMOUNT
          GOTO      FEDIT999
.
FEDIT220  MOVE      F12P6,F12P2
          FEDIT     F12P2,FAMOUNT
          GOTO      FEDIT999
.
FEDIT230  MOVE      F12P6,F12P3
          FEDIT     F12P3,FAMOUNT
          GOTO      FEDIT999
.
FEDIT240  MOVE      F12P6,F12P4
          FEDIT     F12P4,FAMOUNT
          GOTO      FEDIT999
.
FEDIT250  MOVE      F12P6,F12P5
          FEDIT     F12P5,FAMOUNT
          GOTO      FEDIT999
.
FEDIT260  FEDIT     F12P6,FAMOUNT
          GOTO      FEDIT999
.
FEDIT999  RETURN
.**********************************************************************
.  GFRM - Get format                                   Called By FEDIT
.**********************************************************************
GFRM0000  MOVE      COLWIDT,F2
          SUB       "9",F2
          BRANCH    DECPLA,GFRM0100,GFRM0200,GFRM0300,GFRM0400,GFRM0500,GFRM0600
.
          LOAD      FAMOUNT,F2,FORMAT01,FORMAT02,FORMAT03,FORMAT04,FORMAT05:
                      FORMAT06,FORMAT07,FORMAT08,FORMAT09,FORMAT0A,FORMAT0B
          GOTO      GFRM9999
.
GFRM0100  LOAD      FAMOUNT,F2,FORMAT11,FORMAT12,FORMAT13,FORMAT14,FORMAT15:
                      FORMAT16,FORMAT17,FORMAT18,FORMAT19,FORMAT1A,FORMAT1B
          GOTO      GFRM9999
.
GFRM0200  LOAD      FAMOUNT,F2,XORMAT21,FORMAT22,FORMAT23,FORMAT24,FORMAT25:
                      FORMAT26,FORMAT27,FORMAT28,FORMAT29,FORMAT2A,FORMAT2B
          GOTO      GFRM9999
.
GFRM0300  LOAD      FAMOUNT,F2,FORMAT31,FORMAT32,FORMAT33,FORMAT34,FORMAT35:
                      FORMAT36,FORMAT37,FORMAT38,FORMAT39,FORMAT3A,FORMAT3B
          GOTO      GFRM9999
.
GFRM0400  LOAD      FAMOUNT,F2,FORMAT41,FORMAT42,FORMAT43,FORMAT44,FORMAT45:
                      FORMAT46,FORMAT47,FORMAT48,FORMAT49,FORMAT4A,FORMAT4B
          GOTO      GFRM9999
.
GFRM0500  LOAD      FAMOUNT,F2,FORMAT51,FORMAT52,FORMAT53,FORMAT54,FORMAT55:
                      FORMAT56,FORMAT57,FORMAT58,FORMAT59,FORMAT5A,FORMAT5B
          GOTO      GFRM9999
.
GFRM0600  LOAD      FAMOUNT,F2,FORMAT61,FORMAT62,FORMAT63,FORMAT64,FORMAT65:
                      FORMAT66,FORMAT67,FORMAT68,FORMAT69,FORMAT6A,FORMAT6B
          GOTO      GFRM9999
.
GFRM9999  RETURN
.**********************************************************************
. Calculate Percentage Variance Amount
.**********************************************************************
CPERC000  MOVE      AMOUNTS,SVAMTS
          MOVE      AMOUNTC,SVAMTC
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
.
          MOVE      AMOUNTS,PVAMTS
          MOVE      AMOUNTC,PVAMTC
          DIV       SVAMTS,PVAMTS
          DIV       SVAMTC,PVAMTC
          MULT      "100",PVAMTS
          MULT      "100",PVAMTC
.
          MOVE      PVAMTS,AMOUNTS
          MOVE      PVAMTC,AMOUNTC
          RETURN
.**********************************************************************
. Calculate Check Total for Zero Accounts
.**********************************************************************
ADDTA000  
          COMPARE   ZERO,ACTABFC
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA01C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA02C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA03C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA04C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA05C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA06C
          GOTO      ADDTA950 IF NOT EQUAL

          COMPARE   ZERO,ACTA07C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA08C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA09C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA10C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA11C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA12C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA13C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTACMC
          GOTO      ADDTA950 IF NOT EQUAL
.
.
          COMPARE   ZERO,ACTBBFC
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB01C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB02C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB03C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB04C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB05C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB06C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB07C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB08C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB09C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB10C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB11C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB12C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB13C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTBCMC
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA01C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA02C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA03C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA04C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA05C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA06C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA07C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA08C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA09C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA10C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA11C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA12C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA13C
          GOTO      ADDTA950 IF NOT EQUAL
.
.
          COMPARE   ZERO,BUDB01C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB02C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB03C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB04C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB05C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB06C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB07C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB08C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB09C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB10C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB11C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB12C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB13C
          GOTO      ADDTA950 IF NOT EQUAL
.
ADDTA900  MOVE      ONE,EXIT
          GOTO      ADDTA999
.
ADDTA950  MOVE      ZERO,EXIT
.
ADDTA999  RETURN
.
.
ADDTS000  
          COMPARE   ZERO,ACTA01S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA02S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA03S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA04S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA05S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA06S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA07S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA08S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA09S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA10S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA11S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA12S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA13S
          GOTO      ADDTS950 IF NOT EQUAL
.
.
          COMPARE   ZERO,ACTB01S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB02S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB03S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB04S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB05S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB06S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB07S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB08S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB09S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB10S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB11S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB12S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB13S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA01S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA02S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA03S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA04S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA05S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA06S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA07S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA08S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA09S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA10S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA11S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA12S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA13S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB01S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB02S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB03S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB04S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB05S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB06S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB07S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB08S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB09S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB10S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB11S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB12S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB13S
          GOTO      ADDTS950 IF NOT EQUAL
.
ADDTS900  MOVE      ONE,EXIT
          GOTO      ADDTS999
.
ADDTS950  MOVE      ZERO,EXIT
.
ADDTS999  RETURN
.
          INC     FMSSTDCD
          INC     FMSAMAIO/INC
          INC     FMSBUDIO/INC
          INC     FMSCCAIO/INC
          INC     FMSCONIO/INC
          INC     FMSFPSIO/INC
          INC     FMSNRAIO/INC
          INC     FMSNRBIO/INC
          INC     FMSNRCIO/INC
          INC     FMSNRDIO/INC
          INC     FMSNREIO/INC
          INC     FMSNRFIO/INC
          INC     FMSNRHIO/INC
          INC     FMSNRIIO/INC
          INC     FMSNRKIO/INC
          INC     FMSPRCIO/INC      
          INC     FMSSMAIO/INC 
          INC     FMSSBAIO/INC 
          INC     FMSSBUIO/INC 
          INC     FMSTCFIO/INC
          INC     IBAPASIO/INC
.
FMSTR999 ENDPROC
.
