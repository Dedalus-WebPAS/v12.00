. Modifications:
. 03.03.94   V6.00.01  RKS
.            Modified so that the depreciation would be calculated from the 
.            effective period and not from the start of the period all the time.
.            srf 127612
.------------------------------------------------------------
. Asset System Depreciation Calculation and Update Routine
. Calculation for Current Year
.------------------------------------------------------------
. Pass to Routine : EFFYEAR DIM   4   Financial Year for Calculation
.                   EFFPER  FORM  2   Effective After Period (0 for All)
.
.ANNDEPN  FORM   12.2 Annual Dep'n
.PERDEPN  FORM   12.2 Period Dep'n
.BASDEPN  FORM   12.2 Dep'n Base
.DEPNRATE FORM   12.2 Dep'n Rate
.CYEARF4  FORM   4    Current Financial Year
.PYEARF4  FORM   4    Financial Year Purchased
.ASSETAGE FORM   4    Age of Asset
.PERIODNO FORM   2    Period
.------------------------------------------------------------
ASSDEP00  
          MOVE      "    3",AUDTSECT
          READ      CONTROLF,AUDTSECT;*23,CFAMGL01,CFAMGL02,CFAMGL03,CFAMGL04:
                                          CFAMGL05,CFAMGL06,CFAMGL07,CFAMGL08:
                                          CFAMGL09,CFAMGL10,CFAMGL11,CFAMGL12:
                                          CFAMGL13
.
          MATCH     SP70,AMMADDT           * No Calculation for Disposed Assets
          IF        @EQUAL                 
            CALL      ADEP0000             * Account Depreciation
          ENDIF
.
          CALL      TDEP0000               * Tax Depreciation always
.
ASSDEP99  RETURN
.-------------------------------------
. Modify Depreciation
.-------------------------------------
MODDEP00  
MODDEP10  KEYIN     *P1:24,*EL,"Change to Depreciation Effective ":
                               "After Period (0 for All) : ":
                    *P61:24,*V2LON,EFFPER
.
MODDEP20  KEYIN     *P61:24,*V2LON,*DV,EFFPER,*HOFF,"     Ok (Y/N) ? ":
                    *V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      MODDEP10 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      MODDEP20 IF NOT EQUAL
.
          IF        EFFPER>13
            BEEP
            DISPLAY   *P1:24,"Period must be Less than 13. ";
            CALL      HITENTER
            GOTO      MODDEP10
          ENDIF
.
          IF        EFFPER<0
            BEEP
            DISPLAY   *P1:24,"Period must be Greater than 0. ";
            CALL      HITENTER
            GOTO      MODDEP10
          ENDIF
.
MODDEP80  CALL      ASSDEP00
.
          RETURN
.---------------------------
. Clear Depreciation Totals
.---------------------------
CLRNEW00  MOVE      ZERO,NEWA01 
          MOVE      ZERO,NEWA02 
          MOVE      ZERO,NEWA03 
          MOVE      ZERO,NEWA04 
          MOVE      ZERO,NEWA05 
          MOVE      ZERO,NEWA06 
          MOVE      ZERO,NEWA07 
          MOVE      ZERO,NEWA08 
          MOVE      ZERO,NEWA09 
          MOVE      ZERO,NEWA10 
          MOVE      ZERO,NEWA11 
          MOVE      ZERO,NEWA12 
          MOVE      ZERO,NEWA13 
          MOVE      ZERO,NEWT01 
          MOVE      ZERO,NEWT02 
          MOVE      ZERO,NEWT03 
          MOVE      ZERO,NEWT04 
          MOVE      ZERO,NEWT05 
          MOVE      ZERO,NEWT06 
          MOVE      ZERO,NEWT07 
          MOVE      ZERO,NEWT08 
          MOVE      ZERO,NEWT09 
          MOVE      ZERO,NEWT10 
          MOVE      ZERO,NEWT11 
          MOVE      ZERO,NEWT12 
          MOVE      ZERO,NEWT13 
          RETURN
.
CLRDEP00  MOVE      CFAMGL01,AMDSG01 
          MOVE      CFAMGL02,AMDSG02 
          MOVE      CFAMGL03,AMDSG03 
          MOVE      CFAMGL04,AMDSG04 
          MOVE      CFAMGL05,AMDSG05 
          MOVE      CFAMGL06,AMDSG06 
          MOVE      CFAMGL07,AMDSG07 
          MOVE      CFAMGL08,AMDSG08 
          MOVE      CFAMGL09,AMDSG09 
          MOVE      CFAMGL10,AMDSG10 
          MOVE      CFAMGL11,AMDSG11 
          MOVE      CFAMGL12,AMDSG12 
          MOVE      CFAMGL13,AMDSG13 
          MOVE      ZERO,AMDSA01 
          MOVE      ZERO,AMDSA02 
          MOVE      ZERO,AMDSA03 
          MOVE      ZERO,AMDSA04 
          MOVE      ZERO,AMDSA05 
          MOVE      ZERO,AMDSA06 
          MOVE      ZERO,AMDSA07 
          MOVE      ZERO,AMDSA08 
          MOVE      ZERO,AMDSA09 
          MOVE      ZERO,AMDSA10 
          MOVE      ZERO,AMDSA11 
          MOVE      ZERO,AMDSA12 
          MOVE      ZERO,AMDSA13 
          MOVE      ZERO,AMDST01 
          MOVE      ZERO,AMDST02 
          MOVE      ZERO,AMDST03 
          MOVE      ZERO,AMDST04 
          MOVE      ZERO,AMDST05 
          MOVE      ZERO,AMDST06 
          MOVE      ZERO,AMDST07 
          MOVE      ZERO,AMDST08 
          MOVE      ZERO,AMDST09 
          MOVE      ZERO,AMDST10 
          MOVE      ZERO,AMDST11 
          MOVE      ZERO,AMDST12 
          MOVE      ZERO,AMDST13 
          MOVE      AMMAAAD,AMDSAAD
          MOVE      AMMATAD,AMDSTAD
          MOVE      AMMARVT,AMDSRVT
          MOVE      AMMATDT,AMDSTDT
          MOVE      AMMAADT,AMDSADT
          RETURN
.------------------------------------------------------------
. Account Depreciation
.------------------------------------------------------------
ADEP0000  MATCH     SP70,AMMAADT       * Dep'n Type
          GOTO      ADEP5900 IF EQUAL        
          MOVE      AMMAADT,KEY4
          CALL      RDAMDE1            * Read Dep'n Type Record
          BRANCH    OVRCD,ADEP5900
.                           Prime    Dim.     Orginal.
          BRANCH    AMDEBAS,ADEP0100,ADEP0200,ADEP0300
.
. Prime Cost Including Revaluation
.
ADEP0100  ASSIGN    AMMACST+AMMARVT,BASDEPN 
          GOTO      ADEP1000
.
. Written Down Value Including Revaluation
.
ADEP0200  IF        AMMAAAD>0
            ASSIGN    AMMACST+AMMARVT-AMMAAAD,BASDEPN 
          ELSE
            ASSIGN    AMMACST+AMMARVT,BASDEPN 
          ENDIF
          GOTO      ADEP1000
.
. Prime Cost Exclude Revaluation (ie Original Cost)
.
ADEP0300  MOVE      AMMACST,BASDEPN 
          GOTO      ADEP1000
.
ADEP1000  MOVE      AMMAAYR,PYEARF4
          MOVE      EFFYEAR,CYEARF4
          ASSIGN    CYEARF4-PYEARF4+1,ASSETAGE
          IF        ((ASSETAGE>0)&(ASSETAGE<10))
            LOAD      DEPNRATE,ASSETAGE,AMDERT01,AMDERT02,AMDERT03,AMDERT04:
                                        AMDERT05,AMDERT06,AMDERT07,AMDERT08:
                                        AMDERT09,AMDERT10
            IF        DEPNRATE=0
              MOVE      AMDERAT,DEPNRATE
            ENDIF
          ELSE
            MOVE      AMDERAT,DEPNRATE
          ENDIF
          ASSIGN    (BASDEPN*DEPNRATE)/100.0,ANNDEPN
.
          PACK      KEY18,AMMAREG,AMMAASS,EFFYEAR
          UNPACK    KEY18,AMDSREG,AMDSASS,AMDSYEAR
          CALL      CLRNEW00
.
          BRANCH    AMDEFRQ,ADEP5100,ADEP5200,ADEP5300,ADEP5400,ADEP5500
.
. Monthly Depreciation
.------------------------------
ADEP5100  ASSIGN    ANNDEPN/12.0,PERDEPN
          MOVE      PERDEPN,NEWA01
          MOVE      PERDEPN,NEWA02
          MOVE      PERDEPN,NEWA03
          MOVE      PERDEPN,NEWA04
          MOVE      PERDEPN,NEWA05
          MOVE      PERDEPN,NEWA06
          MOVE      PERDEPN,NEWA07
          MOVE      PERDEPN,NEWA08
          MOVE      PERDEPN,NEWA09
          MOVE      PERDEPN,NEWA10
          MOVE      PERDEPN,NEWA11
          MOVE      ZERO,NEWA12
          MOVE      ZERO,NEWA13
          ASSIGN    NEWA01+NEWA02+NEWA03+NEWA04+NEWA05,PERDEPN
          ASSIGN    PERDEPN+NEWA06+NEWA07+NEWA08+NEWA09,PERDEPN
          ASSIGN    PERDEPN+NEWA10+NEWA11+NEWA12+NEWA13,PERDEPN
          ASSIGN    ANNDEPN-PERDEPN,NEWA12 
          GOTO      ADEP6000
.
. 13 Period Dep'n
.------------------------------
ADEP5200  ASSIGN    ANNDEPN/13.0,PERDEPN
          MOVE      PERDEPN,NEWA01
          MOVE      PERDEPN,NEWA02
          MOVE      PERDEPN,NEWA03
          MOVE      PERDEPN,NEWA04
          MOVE      PERDEPN,NEWA05
          MOVE      PERDEPN,NEWA06
          MOVE      PERDEPN,NEWA07
          MOVE      PERDEPN,NEWA08
          MOVE      PERDEPN,NEWA09
          MOVE      PERDEPN,NEWA10
          MOVE      PERDEPN,NEWA11
          MOVE      PERDEPN,NEWA12
          MOVE      ZERO,NEWA13
          ASSIGN    NEWA01+NEWA02+NEWA03+NEWA04+NEWA05,PERDEPN
          ASSIGN    PERDEPN+NEWA06+NEWA07+NEWA08+NEWA09,PERDEPN
          ASSIGN    PERDEPN+NEWA10+NEWA11+NEWA12+NEWA13,PERDEPN
          ASSIGN    ANNDEPN-PERDEPN,NEWA13 
          GOTO      ADEP6000
.
. Quarterly
.------------------------------
ADEP5300  ASSIGN    ANNDEPN/4.0,PERDEPN
          MOVE      ZERO,NEWA01
          MOVE      ZERO,NEWA02
          MOVE      PERDEPN,NEWA03
          MOVE      ZERO,NEWA04
          MOVE      ZERO,NEWA05
          MOVE      PERDEPN,NEWA06
          MOVE      ZERO,NEWA07
          MOVE      ZERO,NEWA08
          MOVE      PERDEPN,NEWA09
          MOVE      ZERO,NEWA10
          MOVE      ZERO,NEWA11
          MOVE      ZERO,NEWA12
          MOVE      ZERO,NEWA13
          ASSIGN    NEWA01+NEWA02+NEWA03+NEWA04+NEWA05,PERDEPN
          ASSIGN    PERDEPN+NEWA06+NEWA07+NEWA08+NEWA09,PERDEPN
          ASSIGN    PERDEPN+NEWA10+NEWA11+NEWA12+NEWA13,PERDEPN
          ASSIGN    ANNDEPN-PERDEPN,NEWA12 
          GOTO      ADEP6000
.
. Half Yearly
.------------------------------
ADEP5400  ASSIGN    ANNDEPN/2.0,PERDEPN
          MOVE      ZERO,NEWA01
          MOVE      ZERO,NEWA02
          MOVE      ZERO,NEWA03
          MOVE      ZERO,NEWA04
          MOVE      ZERO,NEWA05
          MOVE      PERDEPN,NEWA06
          MOVE      ZERO,NEWA07
          MOVE      ZERO,NEWA08
          MOVE      ZERO,NEWA09
          MOVE      ZERO,NEWA10
          MOVE      ZERO,NEWA11
          ASSIGN    ANNDEPN-PERDEPN,NEWA12 
          MOVE      ZERO,NEWA13
          GOTO      ADEP6000
.
ADEP5500  MOVE      ZERO,NEWA01
          MOVE      ZERO,NEWA02
          MOVE      ZERO,NEWA03
          MOVE      ZERO,NEWA04
          MOVE      ZERO,NEWA05
          MOVE      ZERO,NEWA06
          MOVE      ZERO,NEWA07
          MOVE      ZERO,NEWA08
          MOVE      ZERO,NEWA09
          MOVE      ZERO,NEWA10
          MOVE      ZERO,NEWA11
          ASSIGN    ANNDEPN,NEWA12 
          MOVE      ZERO,NEWA13
          GOTO      ADEP6000
.
. Change all values to Zero
. 
ADEP5900  PACK      KEY18,AMMAREG,AMMAASS,EFFYEAR
          CALL      RDAMDS1
          BRANCH    OVRCD,ADEP9999
          CALL      CLRNEW00
          GOTO      ADEP6000
.
ADEP6000  
          PACK      KEY18,AMMAREG,AMMAASS,EFFYEAR
          UNPACK    KEY18,AMDSREG,AMDSASS,AMDSYEAR
          CALL      RDAMDS1
          COMPARE   ZERO,OVRCD
          CALL      CLRDEP00 IF NOT EQUAL
.
          CALL      AADJ0000     * Adjust Depreciation 
.
..          MATCH     AMDSYEAR,AMMAAYR
..          GOTO      ADEP6050 IF NOT EQUAL
.
..          MOVE      AMMAAPR,F2
..          IF        EFFPER>F2
..            MOVE      EFFPER,SECTOR
..          ELSE
..            MOVE      F2,SECTOR
..          ENDIF
..          GOTO      ADEP6060
.
..ADEP6050  MOVE      EFFPER,SECTOR   * Start at the effective from period.
..
          MOVE      EFFPER,SECTOR   * Start at the effective from period.
..ADEP6060
          IF        SECTOR>13  
            GOTO      ADEP9999
          ENDIF
          MOVE      ZERO,SAVAMT
ADEP6100  ADD       ONE,SECTOR
          LOAD      NEWAMT,SECTOR,NEWA01,NEWA02,NEWA03,NEWA04,NEWA05:
                                  NEWA06,NEWA07,NEWA08,NEWA09,NEWA10:
                                  NEWA11,NEWA12,NEWA13
          LOAD      OLDAMT,SECTOR,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05:
                                  AMDSA06,AMDSA07,AMDSA08,AMDSA09,AMDSA10:
                                  AMDSA11,AMDSA12,AMDSA13
          LOAD      F1,SECTOR,AMDSG01,AMDSG02,AMDSG03,AMDSG04,AMDSG05:
                              AMDSG06,AMDSG07,AMDSG08,AMDSG09,AMDSG10:
                              AMDSG11,AMDSG12,AMDSG13
.
. if Not Transferred then update the amount
. if Transferred then Save Difference
.
          IF        F1=0
            ADD       SAVAMT,NEWAMT
            STORE     NEWAMT,SECTOR,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05:
                                    AMDSA06,AMDSA07,AMDSA08,AMDSA09,AMDSA10:
                                    AMDSA11,AMDSA12,AMDSA13
            MOVE      ZERO,SAVAMT
          ELSE
            ASSIGN    SAVAMT+NEWAMT-OLDAMT,SAVAMT
          ENDIF
          IF        SECTOR<14
            GOTO      ADEP6100
          ENDIF
.
          MOVE      AMMAAYR,PYEARF4   * Check if Asset Purchased After the 
          MOVE      EFFYEAR,CYEARF4   * depreciaton Year. If Yes No Depn
          IF        PYEARF4>CYEARF4
            IF        OVRCD=0
              CALL      DEAMDS1
            ENDIF
            GOTO      ADEP9999
          ENDIF
.
          IF        OVRCD=0
            MOVE      AMMAAAD,AMDSAAD
            MOVE      AMMATAD,AMDSTAD
            MOVE      AMMAADT,AMDSADT
            MOVE      AMMATDT,AMDSTDT
            MOVE      AMMARVT,AMDSRVT
            CALL      UPAMDS1
          ELSE
            MOVE      AMMAAAD,AMDSAAD
            MOVE      AMMATAD,AMDSTAD
            MOVE      AMMAADT,AMDSADT
            MOVE      AMMATDT,AMDSTDT
            MOVE      AMMARVT,AMDSRVT
            CALL      WRAMDS1
          ENDIF
          GOTO      ADEP9999
.
ADEP9999  RETURN
.------------------------------------------------------------
. Tax Depreciation
.------------------------------------------------------------
TDEP0000  MATCH     SP70,AMMATDT
          GOTO      TDEP5900 IF EQUAL
          MOVE      AMMATDT,KEY4
          CALL      RDAMDE1
          BRANCH    OVRCD,TDEP5900
          BRANCH    AMDEBAS,TDEP0100,TDEP0200,TDEP0300
.
. Prime Cost Including Revaluation
.
TDEP0100  ASSIGN    AMMACST+AMMARVT,BASDEPN 
          GOTO      TDEP1000
.
. Written Down Value Including Revaluation
.
TDEP0200  IF        AMMATAD>0
            ASSIGN    AMMACST+AMMARVT-AMMATAD,BASDEPN 
          ELSE
            ASSIGN    AMMACST+AMMARVT,BASDEPN 
          ENDIF
          GOTO      TDEP1000
.
. Prime Cost Exclude Revaluation (ie Original Cost)
.
TDEP0300  MOVE      AMMACST,BASDEPN 
          GOTO      TDEP1000
.
TDEP1000  MOVE      AMMAAYR,PYEARF4
          MOVE      EFFYEAR,CYEARF4
          ASSIGN    CYEARF4-PYEARF4+1,ASSETAGE
          IF        ((ASSETAGE>0)&(ASSETAGE<10))
            LOAD      DEPNRATE,ASSETAGE,AMDERT01,AMDERT02,AMDERT03,AMDERT04:
                                        AMDERT05,AMDERT06,AMDERT07,AMDERT08:
                                        AMDERT09,AMDERT10
            IF        DEPNRATE=0
              MOVE      AMDERAT,DEPNRATE
            ENDIF
          ELSE
            MOVE      AMDERAT,DEPNRATE
          ENDIF
          ASSIGN    (BASDEPN*DEPNRATE)/100.0,ANNDEPN
.
          PACK      KEY18,AMMAREG,AMMAASS,EFFYEAR
          UNPACK    KEY18,AMDSREG,AMDSASS,AMDSYEAR
          CALL      CLRNEW00
.
          BRANCH    AMDEFRQ,TDEP5100,TDEP5200,TDEP5300,TDEP5400,TDEP5500
.
. Monthly Depreciation
.------------------------------
TDEP5100  ASSIGN    ANNDEPN/12.0,PERDEPN
          MOVE      PERDEPN,NEWT01
          MOVE      PERDEPN,NEWT02
          MOVE      PERDEPN,NEWT03
          MOVE      PERDEPN,NEWT04
          MOVE      PERDEPN,NEWT05
          MOVE      PERDEPN,NEWT06
          MOVE      PERDEPN,NEWT07
          MOVE      PERDEPN,NEWT08
          MOVE      PERDEPN,NEWT09
          MOVE      PERDEPN,NEWT10
          MOVE      PERDEPN,NEWT11
          MOVE      ZERO,NEWT12
          MOVE      ZERO,NEWT13
          ASSIGN    NEWT01+NEWT02+NEWT03+NEWT04+NEWT05,PERDEPN
          ASSIGN    PERDEPN+NEWT06+NEWT07+NEWT08+NEWT09,PERDEPN
          ASSIGN    PERDEPN+NEWT10+NEWT11+NEWT12+NEWT13,PERDEPN
          ASSIGN    ANNDEPN-PERDEPN,NEWT12 
          GOTO      TDEP6000
.
. 13 Period Dep'n
.------------------------------
TDEP5200  ASSIGN    ANNDEPN/13.0,PERDEPN
          MOVE      PERDEPN,NEWT01
          MOVE      PERDEPN,NEWT02
          MOVE      PERDEPN,NEWT03
          MOVE      PERDEPN,NEWT04
          MOVE      PERDEPN,NEWT05
          MOVE      PERDEPN,NEWT06
          MOVE      PERDEPN,NEWT07
          MOVE      PERDEPN,NEWT08
          MOVE      PERDEPN,NEWT09
          MOVE      PERDEPN,NEWT10
          MOVE      PERDEPN,NEWT11
          MOVE      PERDEPN,NEWT12
          MOVE      ZERO,NEWT13
          ASSIGN    NEWT01+NEWT02+NEWT03+NEWT04+NEWT05,PERDEPN
          ASSIGN    PERDEPN+NEWT06+NEWT07+NEWT08+NEWT09,PERDEPN
          ASSIGN    PERDEPN+NEWT10+NEWT11+NEWT12+NEWT13,PERDEPN
          ASSIGN    ANNDEPN-PERDEPN,NEWT13 
          GOTO      TDEP6000
.
. Quarterly
.------------------------------
TDEP5300  ASSIGN    ANNDEPN/4.0,PERDEPN
          MOVE      ZERO,NEWT01
          MOVE      ZERO,NEWT02
          MOVE      PERDEPN,NEWT03
          MOVE      ZERO,NEWT04
          MOVE      ZERO,NEWT05
          MOVE      PERDEPN,NEWT06
          MOVE      ZERO,NEWT07
          MOVE      ZERO,NEWT08
          MOVE      PERDEPN,NEWT09
          MOVE      ZERO,NEWT10
          MOVE      ZERO,NEWT11
          MOVE      ZERO,NEWT12
          MOVE      ZERO,NEWT13
          ASSIGN    NEWT01+NEWT02+NEWT03+NEWT04+NEWT05,PERDEPN
          ASSIGN    PERDEPN+NEWT06+NEWT07+NEWT08+NEWT09,PERDEPN
          ASSIGN    PERDEPN+NEWT10+NEWT11+NEWT12+NEWT13,PERDEPN
          ASSIGN    ANNDEPN-PERDEPN,NEWT12 
          GOTO      TDEP6000
.
. Half Yearly
.------------------------------
TDEP5400  ASSIGN    ANNDEPN/2.0,PERDEPN
          MOVE      ZERO,NEWT01
          MOVE      ZERO,NEWT02
          MOVE      ZERO,NEWT03
          MOVE      ZERO,NEWT04
          MOVE      ZERO,NEWT05
          MOVE      PERDEPN,NEWT06
          MOVE      ZERO,NEWT07
          MOVE      ZERO,NEWT08
          MOVE      ZERO,NEWT09
          MOVE      ZERO,NEWT10
          MOVE      ZERO,NEWT11
          ASSIGN    ANNDEPN-PERDEPN,NEWT12 
          MOVE      ZERO,NEWT13
          GOTO      TDEP6000
.
TDEP5500  MOVE      ZERO,NEWT01
          MOVE      ZERO,NEWT02
          MOVE      ZERO,NEWT03
          MOVE      ZERO,NEWT04
          MOVE      ZERO,NEWT05
          MOVE      ZERO,NEWT06
          MOVE      ZERO,NEWT07
          MOVE      ZERO,NEWT08
          MOVE      ZERO,NEWT09
          MOVE      ZERO,NEWT10
          MOVE      ZERO,NEWT11
          ASSIGN    ANNDEPN,NEWT12 
          MOVE      ZERO,NEWT13
          GOTO      TDEP6000
.
. Change all values to Zero
. 
TDEP5900  PACK      KEY18,AMMAREG,AMMAASS,EFFYEAR
          CALL      RDAMDS1
          BRANCH    OVRCD,TDEP9999
          CALL      CLRNEW00
          GOTO      TDEP6000
.
TDEP6000  
          PACK      KEY18,AMMAREG,AMMAASS,EFFYEAR
          UNPACK    KEY18,AMDSREG,AMDSASS,AMDSYEAR
          CALL      RDAMDS1
          COMPARE   ZERO,OVRCD
          CALL      CLRDEP00 IF NOT EQUAL
.
          CALL      TADJ0000
.
          MATCH     AMDSYEAR,AMMAAYR
          GOTO      TDEP6050 IF NOT EQUAL
.
          MOVE      AMMAAPR,F2
          IF        EFFPER>F2
            MOVE      EFFPER,SECTOR
          ELSE
            MOVE      F2,SECTOR
          ENDIF
          GOTO      TDEP6060
.
TDEP6050  MOVE      EFFPER,SECTOR   * Start at the effective from period.
.
TDEP6060  IF        SECTOR>13
            GOTO      TDEP9999
          ENDIF
          MOVE      ZERO,SAVAMT
.
TDEP6100  ADD       ONE,SECTOR
          LOAD      NEWAMT,SECTOR,NEWT01,NEWT02,NEWT03,NEWT04,NEWT05:
                                  NEWT06,NEWT07,NEWT08,NEWT09,NEWT10:
                                  NEWT11,NEWT12,NEWT13
          LOAD      OLDAMT,SECTOR,AMDST01,AMDST02,AMDST03,AMDST04,AMDST05:
                                  AMDST06,AMDST07,AMDST08,AMDST09,AMDST10:
                                  AMDST11,AMDST12,AMDST13
          LOAD      F1,SECTOR,AMDSG01,AMDSG02,AMDSG03,AMDSG04,AMDSG05:
                              AMDSG06,AMDSG07,AMDSG08,AMDSG09,AMDSG10:
                              AMDSG11,AMDSG12,AMDSG13
.
. if Not Transferred then update the amount
. if Transferred then Save Difference
.
. ------- Only Add to Period if the Asset is not disposed already
          MOVE      AMMADPR,F2
          MATCH     AMMADYR,EFFYEAR
          IF        !@EQUAL | (@EQUAL & SECTOR<=F2)
            ADD       SAVAMT,NEWAMT
            STORE     NEWAMT,SECTOR,AMDST01,AMDST02,AMDST03,AMDST04,AMDST05:
                                    AMDST06,AMDST07,AMDST08,AMDST09,AMDST10:
                                    AMDST11,AMDST12,AMDST13
            MOVE      ZERO,SAVAMT
          ELSE 
            STORE     ZERO,SECTOR,AMDST01,AMDST02,AMDST03,AMDST04,AMDST05:
                                  AMDST06,AMDST07,AMDST08,AMDST09,AMDST10:
                                  AMDST11,AMDST12,AMDST13
            MOVE      ZERO,SAVAMT
          ENDIF
.
          IF        SECTOR<14
            GOTO      TDEP6100
          ENDIF
.
          MOVE      AMMAAYR,PYEARF4   * Check if Asset Purchased After the 
          MOVE      EFFYEAR,CYEARF4   * depreciaton Year. If Yes No Depn
          IF        PYEARF4>CYEARF4
            IF        OVRCD=0
              CALL      DEAMDS1
            ENDIF
            GOTO      ADEP9999
          ENDIF
.
          IF        OVRCD=0
            MOVE      AMMAAAD,AMDSAAD
            MOVE      AMMATAD,AMDSTAD
            MOVE      AMMAADT,AMDSADT
            MOVE      AMMATDT,AMDSTDT
            MOVE      AMMARVT,AMDSRVT
            CALL      UPAMDS1
          ELSE
            MOVE      AMMAAAD,AMDSAAD
            MOVE      AMMATAD,AMDSTAD
            MOVE      AMMAADT,AMDSADT
            MOVE      AMMATDT,AMDSTDT
            MOVE      AMMARVT,AMDSRVT
            CALL      WRAMDS1
          ENDIF
          GOTO      TDEP9999
.
TDEP9999  RETURN
.----------------------------------------------------------------------
. Adjust New Dep'n Tax for Start Depreciation, Effective Period & Total
.----------------------------------------------------------------------
AADJ0000  MOVE      ZERO,SECTOR
          MOVE      ZERO,ANNDEPN           * Total of Periods Depreciated
.
AADJ1000  ADD       ONE,SECTOR
          COMPARE   "14",SECTOR
          GOTO      AADJ9999 IF EQUAL
.
          MATCH     AMDSYEAR,AMMAAYR       * Check if Depn Started this Year
          GOTO      AADJ1100 IF NOT EQUAL
          MOVE      AMMAAPR,F2             * Start Depreciation From Period
          IF        F2<SECTOR
            GOTO      AADJ1100
          ENDIF
          STORE     ZERO,SECTOR,NEWA01,NEWA02,NEWA03,NEWA04,NEWA05:
                                NEWA06,NEWA07,NEWA08,NEWA09,NEWA10:
                                NEWA11,NEWA12,NEWA13
          GOTO      AADJ1000    
.
AADJ1100  LOAD      NEWAMT,SECTOR,NEWA01,NEWA02,NEWA03,NEWA04,NEWA05:
                                  NEWA06,NEWA07,NEWA08,NEWA09,NEWA10:
                                  NEWA11,NEWA12,NEWA13
          LOAD      OLDAMT,SECTOR,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05:
                                  AMDSA06,AMDSA07,AMDSA08,AMDSA09,AMDSA10:
                                  AMDSA11,AMDSA12,AMDSA13
          LOAD      F1,SECTOR,AMDSG01,AMDSG02,AMDSG03,AMDSG04,AMDSG05:
                              AMDSG06,AMDSG07,AMDSG08,AMDSG09,AMDSG10:
                              AMDSG11,AMDSG12,AMDSG13
          IF        EFFPER>=SECTOR
            ADD       OLDAMT,ANNDEPN    * No Change by Effective Period
            STORE     OLDAMT,SECTOR,NEWA01,NEWA02,NEWA03,NEWA04,NEWA05:
                                    NEWA06,NEWA07,NEWA08,NEWA09,NEWA10:
                                    NEWA11,NEWA12,NEWA13
            GOTO      AADJ1000
          ENDIF
          IF        F1=1
            ADD       OLDAMT,ANNDEPN    * Can't Change Amount if GL Transfer
            STORE     OLDAMT,SECTOR,NEWA01,NEWA02,NEWA03,NEWA04,NEWA05:
                                    NEWA06,NEWA07,NEWA08,NEWA09,NEWA10:
                                    NEWA11,NEWA12,NEWA13
            MOVE      SECTOR,F2A
            ADD       ONE,F2A
            LOAD      TMPAMT,F2A,NEWA01,NEWA02,NEWA03,NEWA04,NEWA05:
                                 NEWA06,NEWA07,NEWA08,NEWA09,NEWA10:
                                 NEWA11,NEWA12,NEWA13
            ASSIGN    TMPAMT+NEWAMT-OLDAMT,TMPAMT
            STORE     TMPAMT,F2A,NEWA01,NEWA02,NEWA03,NEWA04,NEWA05:
                                 NEWA06,NEWA07,NEWA08,NEWA09,NEWA10:
                                 NEWA11,NEWA12,NEWA13
            GOTO      AADJ1000
          ENDIF
          IF        ((AMMACST+AMMARVT-AMMAAAD-ANNDEPN)>NEWAMT)
            ADD       NEWAMT,ANNDEPN
          ELSE
            ASSIGN    AMMACST+AMMARVT-AMMAAAD-ANNDEPN,NEWAMT
            ADD       NEWAMT,ANNDEPN
            STORE     NEWAMT,SECTOR,NEWA01,NEWA02,NEWA03,NEWA04,NEWA05:
                                    NEWA06,NEWA07,NEWA08,NEWA09,NEWA10:
                                    NEWA11,NEWA12,NEWA13
          ENDIF
          GOTO      AADJ1000
.
AADJ9999  RETURN
.
.----------------------------------------------------------------------
. Adjust New Dep'n Tax for Start Depreciation, Effective Period & Total
.----------------------------------------------------------------------
TADJ0000  MOVE      ZERO,SECTOR
          MOVE      ZERO,ANNDEPN           * Total of Periods Depreciated
.
TADJ1000  ADD       ONE,SECTOR
          COMPARE   "14",SECTOR
          GOTO      TADJ9999 IF EQUAL
.
          MATCH     AMDSYEAR,AMMAAYR       * Check if Depn Started this Year
          GOTO      TADJ1100 IF NOT EQUAL
          MOVE      AMMAAPR,F2             * Start Depreciation From Period
          IF        F2<SECTOR
            GOTO      TADJ1100
          ENDIF
          STORE     ZERO,SECTOR,NEWT01,NEWT02,NEWT03,NEWT04,NEWT05:
                                NEWT06,NEWT07,NEWT08,NEWT09,NEWT10:
                                NEWT11,NEWT12,NEWT13
          GOTO      TADJ1000    
.
TADJ1100  LOAD      NEWAMT,SECTOR,NEWT01,NEWT02,NEWT03,NEWT04,NEWT05:
                                  NEWT06,NEWT07,NEWT08,NEWT09,NEWT10:
                                  NEWT11,NEWT12,NEWT13
          LOAD      OLDAMT,SECTOR,AMDST01,AMDST02,AMDST03,AMDST04,AMDST05:
                                  AMDST06,AMDST07,AMDST08,AMDST09,AMDST10:
                                  AMDST11,AMDST12,AMDST13
          IF        EFFPER>=SECTOR
            ADD       OLDAMT,ANNDEPN    * No Change by Effective Period
            STORE     OLDAMT,SECTOR,NEWT01,NEWT02,NEWT03,NEWT04,NEWT05:
                                    NEWT06,NEWT07,NEWT08,NEWT09,NEWT10:
                                    NEWT11,NEWT12,NEWT13
            GOTO      TADJ1000
          ENDIF
          IF        ((AMMACST+AMMARVT-AMMATAD-ANNDEPN)>NEWAMT)
            ADD       NEWAMT,ANNDEPN
          ELSE
            ASSIGN    AMMACST+AMMARVT-AMMATAD-ANNDEPN,NEWAMT
            ADD       NEWAMT,ANNDEPN
            STORE     NEWAMT,SECTOR,NEWT01,NEWT02,NEWT03,NEWT04,NEWT05:
                                    NEWT06,NEWT07,NEWT08,NEWT09,NEWT10:
                                    NEWT11,NEWT12,NEWT13
          ENDIF
          GOTO      TADJ1000
.
TADJ9999  RETURN
.
