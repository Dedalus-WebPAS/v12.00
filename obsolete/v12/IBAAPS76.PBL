.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.04  11.01.2000 Charles Handaya
.           Recompiled for Audit Files date
. VF.00.03  23.12.1999 Sandra Barcham
.           Recompiled for FMSCCAFD
.           srf 646145
. VF.00.02  02.11.1999 Sandra Barcham
.           Changed ITEMNO to XITEMNO
. VF.00.01  30.06.1999 Sandra Barcham
.           Recompiled for FMSLEVKY
.           srf 632475
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS76
.   Function      :   General User Ledger Template Reporting  
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSTMPDF    
          INC       FMSAMAFD/INC
          INC       FMSBTYFD/INC
          INC       FMSCCAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSLEVFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSNRAFD/INC
          INC       FMSNRBFD/INC
          INC       FMSNRCFD/INC
          INC       FMSNRDFD/INC
          INC       FMSNREFD/INC
          INC       FMSNRFFD/INC
          INC       FMSNRGFD/INC
          INC       FMSNRJFD/INC
          INC       FMSNRLFD/INC
          INC       FMSSBAFD/INC
          INC       FMSUDRFD/INC
          INC       IBAESCFD/INC
.=========================
.Local Variable Definition
.-------------------------
CCLEVDES  DIM      40 * Scr 00 Fld    20
REPTYPE   DIM       7 * Scr 00 Fld    22
BUDDESC   DIM      40 * Scr 00 Fld    24
ALTDESC   DIM      40 * Scr 00 Fld    26
ADESC     DIM      16 * Scr 00 Fld    28
PERDFROM  FORM      2 * Scr 00 Fld    32
PERDFDAT  DIM       8 * Scr 00 Fld    33
PERDTO    FORM      2 * Scr 00 Fld    34
PERDTDAT  DIM       8 * Scr 00 Fld    35
SALEVDES  DIM      40 * Scr 00 Fld    38
REPSEQ    DIM      25 * Scr 00 Fld    40
.
.Word Processor File * Scr 01 Fld     4
.
NAMFMNL1  INIT      "Wfmnl1"
FILFMNL1  DIM       8
.
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS76"
PRGNAM    INIT      "General User Ledger Template Reporting  "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDFMCO00
          CALL      SC00L000
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILFMNL1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 45",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudcc";
            OPEN      FMSAUDCC,"fmsaudcc"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 44",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudsa";
            OPEN      FMSAUDSA,"fmsaudsa"
          ENDIF
          DISPLAY   *P56:24,"Opening fmsbtyaf";
          OPEN      FMSBTYA1,"fmsbtyaf"
          DISPLAY   *P56:24,"Opening  fmsccaaf           ";
          OPEN      FMSCCAA1,"fmsccaaf"          
          DISPLAY   *P56:24,"Opening fmsccaaf";
          OPEN      FMSCCAA2,"fmsccaaf"
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening  fmslevaf           ";
          OPEN      FMSLEVA1,"fmslevaf"          
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening fmsnraaf";
          OPEN      FMSNRAA1,"fmsnraaf"
          DISPLAY   *P56:24,"Opening fmsnrbaf";
          OPEN      FMSNRBA1,"fmsnrbaf"
          DISPLAY   *P56:24,"Opening fmsnrbaf";
          OPEN      FMSNRBA2,"fmsnrbaf"
          DISPLAY   *P56:24,"Opening fmsnrcaf";
          OPEN      FMSNRCA1,"fmsnrcaf"
          DISPLAY   *P56:24,"Opening fmsnrcaf";
          OPEN      FMSNRCA2,"fmsnrcaf"
          DISPLAY   *P56:24,"Opening fmsnrdaf";
          OPEN      FMSNRDA1,"fmsnrdaf"
          DISPLAY   *P56:24,"Opening fmsnreaf";
          OPEN      FMSNREA1,"fmsnreaf"
          DISPLAY   *P56:24,"Opening fmsnreaf";
          OPEN      FMSNREA2,"fmsnreaf"
          DISPLAY   *P56:24,"Opening fmsnrfaf";
          OPEN      FMSNRFA1,"fmsnrfaf"
          DISPLAY   *P56:24,"Opening fmsnrfaf";
          OPEN      FMSNRFA2,"fmsnrfaf"
          DISPLAY   *P56:24,"Opening fmsnrgaf";
          OPEN      FMSNRGA1,"fmsnrgaf"
          DISPLAY   *P56:24,"Opening fmsnrjaf";
          OPEN      FMSNRJA1,"fmsnrjaf"
          DISPLAY   *P56:24,"Opening fmsnrlaf";
          OPEN      FMSNRLA1,"fmsnrlaf"
          DISPLAY   *P56:24,"Opening  fmssbaaf           ";
          OPEN      FMSSBAA1,"fmssbaaf"          
          DISPLAY   *P56:24,"Opening  fmsudraf           ";
          OPEN      FMSUDRA1,"fmsudraf"          
          DISPLAY   *P56:24,"Opening  ibaescaf           ";
          OPEN      IBAESCA1,"ibaescaf"          
          DISPLAY   *P56:24,"Opening  ibaescaf           ";
          OPEN      IBAESCA2,"ibaescaf"          
.--------------------------------------------------------
. Initialise Wp Filename for Word Processor                     
.--------------------------------------------------------
          PACK      FILFMNL1,NAMFMNL1,PORT
          REP       " 0",FILFMNL1
          DISPLAY   *P56:24,"Create & Open ",FILFMNL1;
          PREP      TEMPWORD,FILFMNL1
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Header Screen                      
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,FMNGCODE
          MOVE      SP70,FMNGDESC
          MOVE      SP70,FMNGCCCD
          MOVE      SP70,FMNADESC
          MOVE      SP70,FMNGCCFR
          MOVE      SP70,FMNBDESC
          MOVE      SP70,FMNGSACD
          MOVE      SP70,FMNDDESC
          MOVE      SP70,FMNGSAFR
          MOVE      SP70,FMNEDESC
          MOVE      SP70,FMNGRS  
          MOVE      SP70,FMUDDES 
          MOVE      SP70,FMNGPT  
          MOVE      SP70,IBESSEQ 
          MOVE      SP70,FMNGCLEV
          MOVE      SP70,CCLEVDES
          MOVE      ZERO,FMNGCAS 
          MOVE      SP70,REPTYPE 
          MOVE      SP70,FMNGCBT 
          MOVE      SP70,BUDDESC 
          MOVE      SP70,FMNGPBT 
          MOVE      SP70,ALTDESC 
          MOVE      ZERO,FMNGDOP 
          MOVE      SP70,ADESC   
          MOVE      ZERO,FMNGZER 
          MOVE      SP70,FMNGSUPP
          MOVE      SP70,CURYEAR 
          MOVE      ZERO,PERDFROM
          MOVE      SP70,PERDFDAT
          MOVE      ZERO,PERDTO  
          MOVE      SP70,PERDTDAT
          MOVE      SP70,FMNGSLEV
          MOVE      SP70,SALEVDES
          MOVE      ZERO,FMNGPSEQ
          MOVE      SP70,REPSEQ  
          MOVE      SP70,FMNGPDES
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNGDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KFMNG000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      FMNGCODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNGDESC,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L101,PS00L102,PS00L103:
                            PS00L104,PS00L105,PS00L106,PS00L107:
                            PS00L108,PS00L109,PS00L110,PS00L111:
                            PS00L112,PS00L113,PS00L114,PS00L115:
                            PS00L116,PS00L117,PS00L118,PS00L119:
                            PS00L120,PS00L121,PS00L122,PS00L123:
                            PS00L124,PS00L125,PS00L126,PS00L127:
                            PS00L128,PS00L129,PS00L130,PS00L999:
                            PS00L131,PS00L132,PS00L133,PS00L134:
                            PS00L999,PS00L135
          GOTO     PS00L999
.
PS00L101
          MOVE      FMNGDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      FMNGCCCD,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FMNADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      FMNGCCFR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      FMNBDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      FMNGSACD,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FMNDDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      FMNGSAFR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      FMNEDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      FMNGRS,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      FMUDDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      FMNGPT,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      IBESSEQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      FMNGCLEV,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      CCLEVDES,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      FMNGCAS,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      REPTYPE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      FMNGCBT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      BUDDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      FMNGPBT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      ALTDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L122
          MOVE      FMNGDOP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L123
          MOVE      ADESC,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L124
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      FMNGZER,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L125
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      FMNGSUPP,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L126
          MOVE      CURYEAR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L127
          MOVE      PERDFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L128
          UNPACK    PERDFDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L129
          MOVE      PERDTO,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L130
          UNPACK    PERDTDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L131
          MOVE      FMNGSLEV,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L132
          MOVE      SALEVDES,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L133
          MOVE      FMNGPSEQ,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L134
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L135
          MOVE      FMNGPDES,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L006,SF00L104,SF00L006:
                            SF00L105,SF00L006,SF00L106,SF00L006:
                            SF00L107,SF00L006,SF00L108,SF00L006:
                            SF00L109,SF00L006,SF00L110,SF00L006:
                            SF00L111,SF00L006,SF00L112,SF00L006:
                            SF00L113,SF00L006,SF00L114,SF00L006:
                            SF00L115,SF00L116,SF00L117,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L118:
                            SF00L119,SF00L006,SF00L120,SF00L006:
                            SF00L121,SF00L122
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L104,SF00L020:
                            SF00L105,SF00L020,SF00L106,SF00L020:
                            SF00L107,SF00L020,SF00L108,SF00L020:
                            SF00L109,SF00L020,SF00L110,SF00L020:
                            SF00L111,SF00L020,SF00L112,SF00L020:
                            SF00L113,SF00L020,SF00L114,SF00L020:
                            SF00L115,SF00L116,SF00L117,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L119,SF00L020,SF00L120,SF00L020:
                            SF00L020,SF00L122
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      CANCA000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      POSTA000
          GOTO      SF00L001
.
SF00L103
          CALL      PRTA0000
          GOTO      SF00L001
.
SF00L104
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMNA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGCCCD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNBDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMNB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGCCFR,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNBDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNDDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMND000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGSACD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNDDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMNEDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMNE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGSAFR,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMNEDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMUDDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMUD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGRS,VAR       
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMUDDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L109
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,IBESSEQ 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KIBES000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
            BRANCH    EXIT,SF00L109,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGPT,VAR       
          CALL      DISPITEM
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      IBESSEQ,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L110
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCLEVDES
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KLEVA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
            BRANCH    EXIT,SF00L110,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGCLEV,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCLEVDES,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L111
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,REPTYPE 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCAAC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
            BRANCH    EXIT,SF00L111,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGCAS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      REPTYPE,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L112
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,BUDDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KBUDA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L112
            ENDIF
            BRANCH    EXIT,SF00L112,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGCBT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      BUDDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L113
.
.
          MOVE      "   26",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,ALTDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KBUDB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L113
            ENDIF
            BRANCH    EXIT,SF00L113,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGPBT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   26",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ALTDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L114
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,ADESC   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPSTN000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L114
            ENDIF
            BRANCH    EXIT,SF00L114,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGDOP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ADESC,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L115
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,FMNGZER 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      FMNGZER,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L116
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,FMNGSUPP
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      FMNGSUPP,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L117
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERDFROM
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERDFDAT
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERDTO  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   35",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERDTDAT
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L117
            ENDIF
            BRANCH    EXIT,SF00L117,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CURYEAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PERDFROM,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    PERDFDAT,CCENT,CYEAR,CMON,CDAY          
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PERDTO,VAR       
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   35",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    PERDTDAT,CCENT,CYEAR,CMON,CDAY          
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L118
          CALL      GSTR0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L119
.
.
          MOVE      "   38",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SALEVDES
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KLEVB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L119
            ENDIF
            BRANCH    EXIT,SF00L119,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGSLEV,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   38",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SALEVDES,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L120
.
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,REPSEQ  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KRSEQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L120
            ENDIF
            BRANCH    EXIT,SF00L120,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FMNGPSEQ,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      REPSEQ,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L121
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      SC01L000
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L122
          CALL     SELECTED
          STRIP     FMNGPDES
          SFORMAT   VAR,SCPSLEN
          MOVE      FMNGPDES,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,FMNGPDES
          SFORMAT   VAR,127
          ENDSET    FMNGPDES
          APPEND    SP70,FMNGPDES
          RESET     FMNGPDES
          CMATCH    EXITCHAR,FMNGPDES
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,FMNGPDES
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L122
            ENDIF
          ENDIF
          MOVE      FMNGPDES,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Header Screen                      
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 3",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Header Screen                      
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Header Screen                      
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Header Screen                      
.---------------------------------------------------------
WP01L000
          PREP     TEMPWORD,FILFMNL1
          PACK     KEY7,FMNGCODE,ZERO,SP70
          MOVE     KEY7,SAVKEY80
          SETLPTR  SAVKEY80,4 
          CALL      RDFMNL1 
          IF        OVRCD=0
            CALL      RPFMNL1 
          ENDIF
WP01L100
          CALL     RKFMNL1 
          BRANCH   OVRCD,WP01L105
          PACK     KEY7,FMNLCOD,FMNLTYP,FMNLUNQ
          MATCH    SAVKEY80,KEY7    
          GOTO     WP01L105 IF NOT EQUAL
          PACK     VAR,FMNLLIN,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     FMNLLIN,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP01L100
WP01L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Header Screen                      
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Header Screen                      
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Header Screen                      
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L101
          GOTO     PS01L999
.
PS01L101
          MOVE     FILFMNL1,WORDNAME
          CALL     DISPWORD
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Header Screen                      
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L103
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      POWP0000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L103
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "17",SCPSROW
              MOVE     "  5",SCPSCOL
              MOVE     " 70",SCPSLEN
              MOVE     " 4",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILFMNL1,WORDNAME
              MOVE     "  8",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILFMNL1,WORDNAME
            MOVE     "  8",WORDTYPE
            CALL     EDITWORD
          ENDIF
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Read in FMS parameters
.----------------------------------------------------------------------
RDFMCO00
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CALL      RDFMCO66
.
RDFMCO99  RETURN
.********************************************************************
. CANCA - Post data for FMNG                         Called by ML
.********************************************************************
CANCA000
          PACK      KEY3,FMNGCODE,SP70
          CALL      RAFMNG1
          IF        OVRCD=0
            CALL      UUFMNG1
          ENDIF
.
CANCA999  RETURN
.********************************************************************
. POSTA - Post data for FMNG                         Called by ML
.********************************************************************
POSTA000
          PACK      KEY3,FMNGCODE,SP70
          CALL      RAFMNG1
          IF        OVRCD=1
            CALL      WRFMNG1
          ELSE
            CALL      UPFMNG1
            CALL      CANCA000
          ENDIF
.
POSTA999  RETURN
.**********************************************************************
. PRTA - print report
.**********************************************************************
PRTA0000
          LOAD      F1,PERDTO,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN,FMLC05IN:
                               FMLC06IN,FMLC07IN,FMLC08IN,FMLC09IN,FMLC10IN:
                               FMLC11IN,FMLC12IN,FMLC13IN
          MOVE      ONE,PRTWARN        * clear print warning flag
.
          BRANCH    F1,PRTA0500        * period locked ?
          BRANCH    FMNJSTA,PRTA0400   * status ?
          BRANCH    FMNJTYP,PRTA0500   * internal FMS or external UNIX/SQL ?
          MOVE      ZERO,PRTWARN       * set print warning flag
          GOTO      PRTA0500
.
PRTA0400
          BEEP
          CLEAR     DISPMSG
          APPEND    "ERROR - Accounting Period not Locked - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          GOTO      PRTA9500
.
PRTA0500  BRANCH    FMNJTYP,PRTA5000   * internal FMS or external UNIX/SQL ?
.
.---- internal FMS report ----
.
          PROC      FMSTR000           * run report
          GOTO      PRTA9000
.
.---- external UNIX/SQL report ----
.
PRTA5000  DISPLAY   *P1:21;
          BRANCH    FMNJSTA,PRTA7000   * status ?
          EXECUTE   FMNJCMD,TASKID
          GOTO      PRTA9000
.
PRTA7000  CLEAR     MAKETMP
          PACK      MAKETMP,FMNJCMD,SP1,CURYEAR,SP1,PERDFROM,SP1,PERDTO
          EXECUTE   MAKETMP,TASKID
.
PRTA9000  MOVE      ZERO,EXIT
          GOTO      PRTA9999
.
PRTA9500  MOVE      ONE,EXIT
.
PRTA9999  RETURN
.----------------------------------------------------------------------
. Keyin FMNG
.----------------------------------------------------------------------
KFMNG000
          CALL      KFMNGB00                     * keyin FMNG
          BRANCH    EXIT,KFMNG950,KFMNG950
.
          UNPACK    SP70,FMNGDESC,FMNGCCCD,FMNGCCFR,FMNGSACD
          UNPACK    SP70,FMNGSAFR,FMNGRS,FMNGPT,FMNGCBT,FMNGPBT
          MOVE      ZERO,FMNGCAS
          MOVE      ZERO,FMNGDOP
          MOVE      ZERO,FMNGZER
          MOVE      ZERO,FMNGSUPP
          MOVE      SP70,FMNGSPAR
          MOVE      "000",FMNGCLEV
          MOVE      "000",FMNGSLEV
          PACK      KEY3,FMNGCODE,SP70
          CALL      RDFMNG1
          MOVE      OVRCD,ACCEPT
.
          UNPACK    SP70,FMNADESC,FMNALEDG
          PACK      KEY3,FMNGCCCD,SP70
          CALL      RDFMNA1
.
          UNPACK    SP70,FMNDDESC,FMNDLEDG
          PACK      KEY3,FMNGSACD,SP70
          CALL      RDFMND1
.
          MOVE      SP70,FMCCDESC
          PACK      KEY14,FMNALEDG,FMNGCCFR,SP70
          CALL      RDFMCC1
          PACK      FMNBDESC,FMCCDESC,SP70
          PACK      KEY15,FMNGCCCD,FMNGCCFR,SP70
          CALL      RDFMNB1
.
          MOVE      SP70,FMSADESC
          PACK      KEY14,FMNDLEDG,FMNGSAFR,SP70
          CALL      RDFMSA1
          PACK      FMNEDESC,FMSADESC,SP70
          PACK      KEY15,FMNGSACD,FMNGSAFR,SP70
          CALL      RDFMNE1
.
          MOVE      SP70,FMUDDES
          PACK      KEY3,FMNGRS,SP70
          CALL      RDFMUD1
.
          MOVE      SP70,IBESSEQ
          PACK      KEY5,FMNGPT,SP70
          CALL      RDIBES1
.
          MOVE      SP70,FMLVDESC
          PACK      KEY3,FMNGCLEV,SP70
          CALL      RDFMLV1
          PACK      CCLEVDES,FMLVDESC,SP70
.
          MOVE      SP70,FMLVDESC
          PACK      KEY3,FMNGSLEV,SP70
          CALL      RDFMLV1
          PACK      SALEVDES,FMLVDESC,SP70
.
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMNGCBT,SP70
          CALL      RDFMBT1
          PACK      BUDDESC,FMBTDESC,SP70
.
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMNGPBT,SP70
          CALL      RDFMBT1
          PACK      ALTDESC,FMBTDESC,SP70
.
          MOVE      "Normal A/c Name ",ADESC
          IF        FMNGDOP=1
            MOVE      "Cost Centre Name",ADESC
          ENDIF
          IF        FMNGDOP=2
            MOVE      "Subjective Name ",ADESC
          ENDIF
.
          IF        FMNGCAS=1
            MOVE      "Cash   ",REPTYPE
          ELSE
            MOVE      "Accrual",REPTYPE
          ENDIF
.
          IF        FMNGPSEQ=1
            MOVE      "Subjective Sequence      ",REPSEQ
          ELSE
            MOVE      "Cost Centre Sequence     ",REPSEQ
          ENDIF
.
          UNPACK    SP70,FMLACYRR,FMLAPER        * get defaults
          PACK      FMLCLEDG,FMNALEDG,SP70
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
          PACK      CURYEAR,FMLACYRR,SP70
          UNPACK    SP70,PERDFDAT,PERDTDAT
.
          PACK      KEY6,FMLALEDG,FMLACYRR,SP70
          CALL      RDFMLC1
.
          MOVE      ZERO,PERDFROM
          MOVE      FMLAPER,PERDFROM
          LOAD      PERDFDAT,PERDFROM,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                             FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR:
                             FMLC10FR,FMLC11FR,FMLC12FR,FMLC13FR
.
          MOVE      ZERO,PERDTO
          MOVE      FMLAPER,PERDTO
          LOAD      PERDTDAT,PERDTO,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                             FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR:
                             FMLC10FR,FMLC11FR,FMLC12FR,FMLC13FR
.
KFMNG900  MOVE      ZERO,EXIT
          MOVE      ACCEPT,OVRCD
          GOTO      KFMNG999
.
KFMNG950  MOVE      TWO,EXIT
.
KFMNG999  RETURN
.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSNRGKY
.   Routine   :   HFMNGB00 Template Report Code
.   Return    :
.-------------------------------------------------------------------------------
HFMNGB00
          MOVE      ZERO,CSCRSIZ
          IF        HTOP<3
            MOVE      " 3",HTOP
            MOVE      "24",HBOT
            MOVE      " 1",HLEF
            MOVE      "80",HRIG
          ENDIF
HFMNGB04
          CALL      GSCRN000
          BRANCH    EXIT,HFMNGB99
          MOVE      STDCOL00,STDCOL01
          ADD       " 5",STDCOL01
          DISPLAY   *PSTDCOL01:STDROW,*V2LON,*ULON,"Description"
.
          MOVE      STDCOL01,STDCOL02
          ADD       "35",STDCOL02
          DISPLAY   *PSTDCOL02:STDROW,*V2LON,*ULON,"Template Report Code"
.
          MOVE      STDCOL02,STDCOL03
          ADD       "45",STDCOL03
HFMNGB08
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
.
          MOVE      SP70,FMNGCODE
          PACK      KEY7,PASSCODE,SP70
          PACK      SAVKEY80,PASSCODE,SP70
          SETLPTR   SAVKEY80,4
          CALL      RSFMNJ1
HFMNGB10
          CALL      RKFMNJ1
          BRANCH    OVRCD,HFMNGB15
          PACK      KEY7,FMNJUID,FMNJSEQ,SP70
          MATCH     SAVKEY80,KEY7
          GOTO      HFMNGB15 IF NOT EQUAL
.
          MOVE      SP70,FMNGDESC
          PACK      KEY3,FMNJREP,SP70
          CALL      RDFMNG1
.
          BRANCH    CSEARCH,HFMNGB12
          CALL      HFMNGB60
          BRANCH    OVRCD,HFMNGB10
HFMNGB12
          ADD       ONE,XITEMNO
          ADD       ONE,STDROW
          STORE     KEY7,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          DISPLAY   *PSTDCOL00:STDROW,SP1,*V2LON,XITEMNO,DOT
          DISPLAY   *PSTDCOL01:STDROW,FMNJDES
          DISPLAY   *PSTDCOL02:STDROW,FMNGCODE,SP1,FMNGDESC
          COMPARE   MAXITEM,XITEMNO
          GOTO      HFMNGB10 IF NOT EQUAL
HFMNGB15
          UNPACK    SAVKEY80,FMNJUID,FMNJSEQ
.
          MOVE      ONE,DITEM
          MOVE      MINITEM,DROW
          ADD       ONE,DROW
          DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,DITEM,DOT
          CLIP
          FLUSH     HLEF,HTOP,HRIG,HBOT
.
HFMNGB20
          CALL      HSCRI000
          BRANCH    EXIT,HFMNGB30,HFMNGB35,HFMNGB40,HFMNGB45,HFMNGB04:
                              HFMNGB91,HFMNGB50
          GOTO      HFMNGB92
HFMNGB30
          CALL      RKFMNJ1
          BRANCH    OVRCD,HFMNGB85
          PACK      KEY7,FMNJUID,FMNJSEQ,SP70
.
          MATCH     SAVKEY80,KEY7
          GOTO      HFMNGB85 IF NOT EQUAL
.
          CALL      RPFMNJ1
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HFMNGB10
HFMNGB35
          MOVE      ST1,KEY7
          CALL      RDFMNJ1
          CALL      RPFMNJ1
          BRANCH    OVRCD,HFMNGB85
          PACK      KEY7,FMNJUID,FMNJSEQ,SP70
.
          MATCH     SAVKEY80,KEY7
          GOTO      HFMNBA85 IF NOT EQUAL
.
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,XITEMNO
HFMNGB36
          CALL      RPFMNJ1
          BRANCH    OVRCD,HFMNGB37
          PACK      KEY7,FMNJUID,FMNJSEQ,SP70
.
          MATCH     SAVKEY80,KEY7
          GOTO      HFMNGB37 IF NOT EQUAL
.
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HFMNGB36 IF NOT EQUAL
HFMNGB37
          MOVE      ZERO,XITEMNO
          GOTO      HFMNGB10
HFMNGB40
          MOVE      ST1,KEY7
          CALL      RDFMNJ1
          CALL      RPFMNJ1
          BRANCH    OVRCD,HFMNGB85
          PACK      KEY7,FMNJUID,FMNJSEQ,SP70
.
          MATCH     SAVKEY80,KEY7
          GOTO      HFMNGB85 IF NOT EQUAL
.
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HFMNGB08
HFMNGB45
          CALL      RKFMNJ1
          BRANCH    OVRCD,HFMNGB85
          PACK      KEY7,FMNJUID,FMNJSEQ,SP70
.
          MATCH     SAVKEY80,KEY7
          GOTO      HFMNGB85 IF NOT EQUAL
.
          SUSPEND
          CLIP      1,1,CRIG,24
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      ZERO,XITEMNO
          PACK      KEY7,SAVKEY80,Z70
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,XITEMNO
          CALL      RSFMNJ1
HFMNGB46
          CALL      RPFMNJ1
          BRANCH    OVRCD,HFMNGB47
          PACK      KEY7,FMNJUID,FMNJSEQ,SP70
.
          MATCH     SAVKEY80,KEY7
          GOTO      HFMNGB47 IF NOT EQUAL
.
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HFMNGB46 IF NOT EQUAL
HFMNGB47
          MOVE      ZERO,XITEMNO
          GOTO      HFMNGB10
HFMNGB50  COMPARE   ZERO,CSEARCH
          GOTO      HFMNGB55 IF EQUAL
          MOVE      ZERO,CSEARCH
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          ADD       ONE,STDROW
          UNPACK    SP70,SCHFLD01,SCHFLD02,SCHFLD03,SCHFLD04,SCHFLD05
          UNPACK    SP70,SCHFLD06,SCHFLD07,SCHFLD08,SCHFLD09,SCHFLD10
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          DISPLAY   *PSTDCOL00:STDROW,*V2LON,*HON,"Sch"
          KEYIN     *PSTDCOL01:STDROW,*V2LON,SCHFLD01
          RESET     SCHFLD01
          PACK      KEY8,SP70
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HFMNGB08
HFMNGB55  MOVE      ONE,CSEARCH
          PACK      KEY8,SP70
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HFMNGB08
HFMNGB60  MOVE      ZERO,OVRCD
          MATCH     SP70,SCHFLD01
          GOTO      HFMNGB61 IF EQUAL
          MATCH     SCHFLD01,FMNJDES
          GOTO      HFMNGB72 IF NOT EQUAL
HFMNGB61
HFMNGB62
HFMNGB63
HFMNGB64
HFMNGB65
HFMNGB66
HFMNGB67
HFMNGB68
HFMNGB69
HFMNGB70
          GOTO      HFMNGB75
HFMNGB72  MOVE      ONE,OVRCD
HFMNGB75  RETURN
HFMNGB85
          LOAD      KEY7,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    SP70,FMNJREP,FMNGDESC
          UNPACK    KEY7,FMNJUID,FMNJSEQ
          CALL      RDFMNJ1
          PACK      KEY3,FMNJREP,SP70
          CALL      RDFMNG1
HFMNGB90
.
          BEEP
          GOTO      HFMNGB20
HFMNGB91
          MOVE      SP70,FMNGDESC
          MOVE      SP70,FMNGCCCD
          MOVE      SP70,FMNGCCFR
          MOVE      SP70,FMNGSACD
          MOVE      SP70,FMNGSAFR
          MOVE      SP70,FMNGRS
          MOVE      SP70,FMNGPT
          MOVE      SP70,FMNGCLEV
          MOVE      SP70,FMNGSLEV
          MOVE      ZERO,FMNGCAS
          MOVE      ZERO,FMNGPSEQ
          MOVE      SP70,FMNGCBT
          MOVE      SP70,FMNGPBT
          MOVE      ZERO,FMNGDOP
          MOVE      ZERO,FMNGZER
          MOVE      SP70,FMNGSUPP
          MOVE      SP70,FMNGSPAR
          MOVE      SP70,KEY7
          MOVE      SP70,FMNGCODE
          UNPACK    SP70,FMNJUID,FMNJSEQ
          GOTO      HFMNGB96
HFMNGB92
          MOVE      SP70,KEY7
          MOVE      SP70,FMNGCODE
          LOAD      KEY7,CCITEM,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    SP70,FMNJREP,FMNGDESC
          UNPACK    KEY7,FMNJUID,FMNJSEQ
          CALL      RDFMNJ1
          PACK      KEY3,FMNJREP,SP70
          CALL      RDFMNG1
HFMNGB96
          PUTSCR    CSSCRNUM,HLEF,HTOP,HRIG,HBOT
          CALL      FRESCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
HFMNGB99
          RETURN
.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSNRGKY
.   Routine   :   KFMNGB00 Keyin Template Report Code
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KFMNGB00
          UNPACK    SP70,FMNJUID,FMNJSEQ         * check if any access
          PACK      KEY7,PASSCODE,SP70
          CALL      RSFMNJ1
          CALL      RKFMNJ1
          MATCH     FMNJUID,PASSCODE
          IF        !@EQUAL
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - You do not have access to any reports - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      KFMNGB95
          ENDIF
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMNGB00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMNGCODE
          APPEND    SP70,FMNGCODE
          RESET     FMNGCODE
.
          MATCH     SP70,FMNGCODE
          GOTO      KFMNGB95 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMNGCODE
KFMNGB10
          PACK      KEY3,FMNGCODE
          CALL      RAFMNG1
          BRANCH    OVRCD,KFMNGB80
KFMNGB70
          MOVE      ZERO,EXIT
          GOTO      KFMNGB99
KFMNGB75
          MOVE      "Template Report Code Already Exists - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMNGB00
KFMNGB80
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMNGB99,KFMNGB99
          MOVE      "Template Report Code Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMNGB00
KFMNGB90
          MOVE      ONE,EXIT
          GOTO      KFMNGB99
KFMNGB95
          MOVE      TWO,EXIT
KFMNGB99
          RETURN
.----------------------------------------------------------------------
. Keyin FMNA
.----------------------------------------------------------------------
KFMNA000
          CALL      KFMNAA00                     * keyin FMNA
          BRANCH    EXIT,KFMNA910,KFMNA950
.
          PACK      FMNGCCCD,FMNACODE,SP70
.
KFMNA900  MOVE      ZERO,EXIT
          GOTO      KFMNA999
.
KFMNA910  MOVE      ONE,EXIT
          UNPACK    SP70,FMNGCCCD,FMNADESC
          GOTO      KFMNA999
.
KFMNA950  MOVE      TWO,EXIT
.
KFMNA999  RETURN
.----------------------------------------------------------------------
. Keyin FMNB
.----------------------------------------------------------------------
KFMNB000
          PACK      FMNCCODE,FMNACODE,SP70
          CALL      KFMNCA00                     * keyin FMNB
          BRANCH    EXIT,KFMNB910,KFMNB950
.
          PACK      FMNGCCFR,FMNCSCOD,SP70
.
KFMNB900  MOVE      ZERO,EXIT
          GOTO      KFMNB999
.
KFMNB910  MOVE      ONE,EXIT
          UNPACK    SP70,FMNGCCFR,FMNBDESC
          GOTO      KFMNB999
.
KFMNB950  MOVE      TWO,EXIT
.
KFMNB999  RETURN
.----------------------------------------------------------------------
. Keyin FMND
.----------------------------------------------------------------------
KFMND000
          CALL      KFMNDA00                     * keyin FMND
          BRANCH    EXIT,KFMND910,KFMND950
.
          PACK      FMNGSACD,FMNDCODE,SP70
.
KFMND900  MOVE      ZERO,EXIT
          GOTO      KFMND999
.
KFMND910  MOVE      ONE,EXIT
          UNPACK    SP70,FMNGSACD,FMNDDESC
          GOTO      KFMND999
.
KFMND950  MOVE      TWO,EXIT
.
KFMND999  RETURN
.----------------------------------------------------------------------
. Keyin FMNE
.----------------------------------------------------------------------
KFMNE000
          PACK      FMNFCODE,FMNDCODE,SP70
          CALL      KFMNFA00                     * keyin FMNE
          BRANCH    EXIT,KFMNE910,KFMNE950
.
          PACK      FMNGSAFR,FMNFSCOD,SP70
.
KFMNE900  MOVE      ZERO,EXIT
          GOTO      KFMNE999
.
KFMNE910  MOVE      ONE,EXIT
          UNPACK    SP70,FMNGSAFR,FMNEDESC
          GOTO      KFMNE999
.
KFMNE950  MOVE      TWO,EXIT
.
KFMNE999  RETURN
.----------------------------------------------------------------------
. Keyin FMUD
.----------------------------------------------------------------------
KFMUD000
          CALL      KFMUDA00                     * keyin FMUD
          BRANCH    EXIT,KFMUD910,KFMUD950
.
          PACK      FMNGRS,FMUDSTY,SP70
.
KFMUD900  MOVE      ZERO,EXIT
          GOTO      KFMUD999
.
KFMUD910  MOVE      ONE,EXIT
          UNPACK    SP70,FMNGRS,FMUDDES
          GOTO      KFMUD999
.
KFMUD950  MOVE      TWO,EXIT
.
KFMUD999  RETURN
.----------------------------------------------------------------------
. Keyin IBES
.----------------------------------------------------------------------
KIBES000
          PACK      IBESPT,SP70
          CALL      KIBESA00                     * keyin IBES
          BRANCH    EXIT,KIBES910,KIBES950
.
          PACK      FMNGPT,IBESPR,SP70
.
KIBES900  MOVE      ZERO,EXIT
          GOTO      KIBES999
.
KIBES910  MOVE      ONE,EXIT
          UNPACK    SP70,FMNGPT,IBESSEQ
          GOTO      KIBES999
.
KIBES950  MOVE      TWO,EXIT
.
KIBES999  RETURN
.----------------------------------------------------------------------
. Keyin LEVA
.----------------------------------------------------------------------
KLEVA000
          CALL      KFMLVA00                     * keyin LEVA
          BRANCH    EXIT,KLEVA910,KLEVA950
.
          PACK      FMNGCLEV,FMLVCODE,SP70
          PACK      CCLEVDES,FMLVDESC,SP70
.
KLEVA900  MOVE      ZERO,EXIT
          GOTO      KLEVA999
.
KLEVA910  MOVE      ZERO,EXIT
          MOVE      "00000",FMNGCLEV
          UNPACK    SP70,CCLEVDES
          GOTO      KLEVA999
.
KLEVA950  MOVE      TWO,EXIT
.
KLEVA999  RETURN
.----------------------------------------------------------------------
. Keyin CAAC
.----------------------------------------------------------------------
KCAAC000
          PACK      DISPMSG,DISPMSG,SP70
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EF,*V2LON:
                    "0",*HOFF,"=Accrual, ",*V2LON:
                    "1",*HOFF,"=Cash";
.
          REPEAT
            KEYIN     *PCCOL:CVERT,*V2LON,FMNGCAS
          UNTIL     FMNGCAS=0 | FMNGCAS=1
.
          IF        FMNGCAS=1
            MOVE      "Cash   ",REPTYPE
          ELSE
            MOVE      "Accrual",REPTYPE
          ENDIF
.
          CALL      MESSAGE3
          MOVE      ZERO,EXIT
.
KCAAC999  RETURN
.----------------------------------------------------------------------
. Keyin FMBT
.----------------------------------------------------------------------
KBUDA000
          CALL      KFMBTA00                     * keyin FMBT
          BRANCH    EXIT,KBUDA910,KBUDA950
.
          PACK      FMNGCBT,FMBTCODE,SP70
          PACK      BUDDESC,FMBTDESC,SP70
.
KBUDA900  MOVE      ZERO,EXIT
          GOTO      KBUDA999
.
KBUDA910  MOVE      ONE,EXIT
          UNPACK    SP70,FMNGCBT,BUDDESC
          GOTO      KBUDA999
.
KBUDA950  MOVE      TWO,EXIT
.
KBUDA999  RETURN
.----------------------------------------------------------------------
. Keyin FMBT
.----------------------------------------------------------------------
KBUDB000
          CALL      KFMBTA00                     * keyin FMBT
          BRANCH    EXIT,KBUDB910,KBUDB950
.
          PACK      FMNGPBT,FMBTCODE,SP70
          PACK      ALTDESC,FMBTDESC,SP70
.
KBUDB900  MOVE      ZERO,EXIT
          GOTO      KBUDB999
.
KBUDB910  MOVE      ONE,EXIT
          UNPACK    SP70,FMNGPBT,ALTDESC
          GOTO      KBUDB999
.
KBUDB950  MOVE      TWO,EXIT
.
KBUDB999  RETURN
.----------------------------------------------------------------------
. Keyin PSTN
.----------------------------------------------------------------------
KPSTN000
          PACK      DISPMSG,DISPMSG,SP70
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EF,*V2LON:
                    "0",*HOFF,"=Normal A/c Name, ",*V2LON:
                    "1",*HOFF,"=Cost Centre Name, ",*V2LON:
                    "2",*HOFF,"=Subjective Name";
.
          REPEAT
            KEYIN     *PCCOL:CVERT,*V2LON,FMNGDOP
          UNTIL     FMNGDOP=0 | FMNGDOP=1
.
          MOVE      "Normal A/c Name ",ADESC
          IF        FMNGDOP=1
            MOVE      "Cost Centre Name",ADESC
          ENDIF
          IF        FMNGDOP=2
            MOVE      "Subjective Name ",ADESC
          ENDIF
.
          CALL      MESSAGE3
          MOVE      ZERO,EXIT
.
KPSTN999  RETURN
.----------------------------------------------------------------------
. Keyin FMLC
.----------------------------------------------------------------------
KFMLC000
          UNPACK    SP70,FMLACYRR,FMLAPER        * get defaults
          PACK      FMLCLEDG,FMNALEDG,SP70
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
          PACK      CURYEAR,FMLACYRR,SP70
.
          PACK      UNDLN70,CURYEAR,SP70
          CALL      KFMLCA00                     * keyin FMLC
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          BRANCH    EXIT,KFMLC000,KFMLC950
.
          PACK      CURYEAR,FMLCYEAR,SP70
.
          CALL      KPERD000                     * keyin period range
.
KFMLC900  MOVE      ZERO,EXIT
          GOTO      KFMLC999
.
KFMLC950  MOVE      TWO,EXIT
.
KFMLC999  RETURN
.----------------------------------------------------------------------
. Keyin PERD
.----------------------------------------------------------------------
KPERD000
          UNPACK    SP70,FMLACYRR,FMLAPER        * get defaults
          MOVE      ZERO,FMLAPERS
          PACK      KEY2,FMNALEDG,SP70
          CALL      RDFMLA1
          UNPACK    SP70,PERDFDAT,PERDTDAT
.
          MOVE      ZERO,PERDFROM
          MOVE      FMLAPER,PERDFROM
.
          MOVE      "   32",KEY5       * get screen position for item 32
          PACK      KEY20,PRGID,SCRID,KEY5,SP70
          UNPACK    SP70,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          CALL      RSSCPS2
          CALL      RKSCPS2
          PACK      KEY17,SCPSPID,SCPSSID,SCPSITM,SP70
.
          MATCH     KEY20,KEY17        * keyin next item if on screen
          IF        @EQUAL
            MOVE      SCPSROW,CVERT
            MOVE      SCPSCOL,CCOL
            REPEAT
              KEYIN     *PCCOL:CVERT,*V2LON,*RV,PERDFROM
            UNTIL     PERDFROM>0 & PERDFROM<13+FMLAPERS
          ENDIF
.
          LOAD      PERDFDAT,PERDFROM,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                             FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR:
                             FMLC10FR,FMLC11FR,FMLC12FR,FMLC13FR
.
          MOVE      PERDFROM,PERDTO
          MOVE      "   34",KEY5       * get screen position for item 34
          PACK      KEY20,PRGID,SCRID,KEY5,SP70
          UNPACK    SP70,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          CALL      RSSCPS2
          CALL      RKSCPS2
          PACK      KEY17,SCPSPID,SCPSSID,SCPSITM,SP70
.
          MATCH     KEY20,KEY17        * keyin next item if on screen
          IF        @EQUAL
            MOVE      SCPSROW,CVERT
            MOVE      SCPSCOL,CCOL
            REPEAT
              MOVE      PERDFROM,PERDTO
              KEYIN     *PCCOL:CVERT,*V2LON,*RV,PERDTO
            UNTIL     !(PERDTO<PERDFROM) & (PERDTO<13+FMLAPERS)
          ENDIF
          LOAD      PERDTDAT,PERDTO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                             FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO,FMLC09TO:
                             FMLC10TO,FMLC11TO,FMLC12TO,FMLC13TO
.
          LOAD      PRTWARN,PERDTO,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN,FMLC05IN:
                                  FMLC06IN,FMLC07IN,FMLC08IN,FMLC09IN,FMLC10IN:
                                  FMLC11IN,FMLC12IN,FMLC13IN
.
KPERD900  MOVE      ZERO,EXIT
          GOTO      KPERD999
.
KPERD950  MOVE      TWO,EXIT
.
KPERD999  RETURN
.*****************************************************************************
. GSTR - get a string of a specified length           Called by lots
.    Requires - CCOL, CVERT  (screen address to get input)
.               CSTRLEN      (string length - up to 35 chars)
.    Returns  - CSTRING      (string entered)
.*****************************************************************************
GSTR0000  STORE     UNDLN70,CSTRLEN,KEY1:
                    KEY2,KEY3,KEY4,KEY5,KEY6,KEY7,KEY8,KEY9,KEY10:
                    KEY11,KEY12,KEY13,KEY14,KEY15,KEY16,KEY17,KEY18,KEY19,KEY20:
                    KEY21,KEY22,KEY23,KEY24,KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                    KEY31,KEY32,KEY33,KEY34,KEY35
          BRANCH    CSTRLEN,GSTR0001,GSTR0002,GSTR0003,GSTR0004:
                            GSTR0005,GSTR0006,GSTR0007,GSTR0008:
                            GSTR0009,GSTR0010,GSTR0011,GSTR0012:
                            GSTR0013,GSTR0014,GSTR0015,GSTR0016:
                            GSTR0017,GSTR0018,GSTR0019,GSTR0020:
                            GSTR0021,GSTR0022,GSTR0023,GSTR0024:
                            GSTR0025,GSTR0026,GSTR0027,GSTR0028:
                            GSTR0029,GSTR0030,GSTR0031,GSTR0032:
                            GSTR0033,GSTR0034,GSTR0035
.
GSTR0001  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY1:
                    *PCCOL:CVERT,*V2LON,KEY1;
          GOTO      GSTR0090
.
GSTR0002  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY2:
                    *PCCOL:CVERT,*V2LON,KEY2;
          GOTO      GSTR0090
.
GSTR0003  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY3:
                    *PCCOL:CVERT,*V2LON,KEY3;
          GOTO      GSTR0090
.
GSTR0004  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY4:
                    *PCCOL:CVERT,*V2LON,KEY4;
          GOTO      GSTR0090
.
GSTR0005  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY5:
                    *PCCOL:CVERT,*V2LON,KEY5;
          GOTO      GSTR0090
.
GSTR0006  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY6:
                    *PCCOL:CVERT,*V2LON,KEY6;
          GOTO      GSTR0090
.
GSTR0007  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY7:
                    *PCCOL:CVERT,*V2LON,KEY7;
          GOTO      GSTR0090
.
GSTR0008  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY8:
                    *PCCOL:CVERT,*V2LON,KEY8;
          GOTO      GSTR0090
.
GSTR0009  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY9:
                    *PCCOL:CVERT,*V2LON,KEY9;
          GOTO      GSTR0090
.
GSTR0010  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY10:
                    *PCCOL:CVERT,*V2LON,KEY10;
          GOTO      GSTR0090
.
GSTR0011  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY11:
                    *PCCOL:CVERT,*V2LON,KEY11;
          GOTO      GSTR0090
.
GSTR0012  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY12:
                    *PCCOL:CVERT,*V2LON,KEY12;
          GOTO      GSTR0090
.
GSTR0013  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY13:
                    *PCCOL:CVERT,*V2LON,KEY13;
          GOTO      GSTR0090
.
GSTR0014  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY14:
                    *PCCOL:CVERT,*V2LON,KEY14;
          GOTO      GSTR0090
.
GSTR0015  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY15:
                    *PCCOL:CVERT,*V2LON,KEY15;
          GOTO      GSTR0090
.
GSTR0016  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY16:
                    *PCCOL:CVERT,*V2LON,KEY16;
          GOTO      GSTR0090
.
GSTR0017  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY17:
                    *PCCOL:CVERT,*V2LON,KEY17;
          GOTO      GSTR0090
.
GSTR0018  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY18:
                    *PCCOL:CVERT,*V2LON,KEY18;
          GOTO      GSTR0090
.
GSTR0019  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY19:
                    *PCCOL:CVERT,*V2LON,KEY19;
          GOTO      GSTR0090
.
GSTR0020  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY20:
                    *PCCOL:CVERT,*V2LON,KEY20;
          GOTO      GSTR0090
.
GSTR0021  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY21:
                    *PCCOL:CVERT,*V2LON,KEY21;
          GOTO      GSTR0090
.
GSTR0022  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY22:
                    *PCCOL:CVERT,*V2LON,KEY22;
          GOTO      GSTR0090
.
GSTR0023  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY23:
                    *PCCOL:CVERT,*V2LON,KEY23;
          GOTO      GSTR0090
.
GSTR0024  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY24:
                    *PCCOL:CVERT,*V2LON,KEY24;
          GOTO      GSTR0090
.
GSTR0025  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY25:
                    *PCCOL:CVERT,*V2LON,KEY25;
          GOTO      GSTR0090
.
GSTR0026  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY26:
                    *PCCOL:CVERT,*V2LON,KEY26;
          GOTO      GSTR0090
.
GSTR0027  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY27:
                    *PCCOL:CVERT,*V2LON,KEY27;
          GOTO      GSTR0090
.
GSTR0028  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY28:
                    *PCCOL:CVERT,*V2LON,KEY28;
          GOTO      GSTR0090
.
GSTR0029  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY29:
                    *PCCOL:CVERT,*V2LON,KEY29;
          GOTO      GSTR0090
.
GSTR0030  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY30:
                    *PCCOL:CVERT,*V2LON,KEY30;
          GOTO      GSTR0090
.
GSTR0031  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY31:
                    *PCCOL:CVERT,*V2LON,KEY31;
          GOTO      GSTR0090
.
GSTR0032  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY32:
                    *PCCOL:CVERT,*V2LON,KEY32;
          GOTO      GSTR0090
.
GSTR0033  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY33:
                    *PCCOL:CVERT,*V2LON,KEY33;
          GOTO      GSTR0090
.
GSTR0034  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY34:
                    *PCCOL:CVERT,*V2LON,KEY34;
          GOTO      GSTR0090
.
GSTR0035  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY35:
                    *PCCOL:CVERT,*V2LON,KEY35;
          GOTO      GSTR0090
.
GSTR0090  LOAD      CSTRING,CSTRLEN,KEY1:
                    KEY2,KEY3,KEY4,KEY5,KEY6,KEY7,KEY8,KEY9,KEY10:
                    KEY11,KEY12,KEY13,KEY14,KEY15,KEY16,KEY17,KEY18,KEY19,KEY20:
                    KEY21,KEY22,KEY23,KEY24,KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                    KEY31,KEY32,KEY33,KEY34,KEY35
          DISPLAY   *PCCOL:CVERT,*V2LON,CSTRING;
.
GSTR9999  RETURN
.----------------------------------------------------------------------
. Keyin LEVB
.----------------------------------------------------------------------
KLEVB000
          CALL      KFMLVA00                     * keyin LEVB
          BRANCH    EXIT,KLEVB910,KLEVB950
.
          PACK      FMNGSLEV,FMLVCODE,SP70
          PACK      SALEVDES,FMLVDESC,SP70
.
KLEVB900  MOVE      ZERO,EXIT
          GOTO      KLEVB999
.
KLEVB910  MOVE      ZERO,EXIT
          MOVE      "00000",FMNGSLEV
          UNPACK    SP70,SALEVDES
          GOTO      KLEVB999
.
KLEVB950  MOVE      TWO,EXIT
.
KLEVB999  RETURN
.----------------------------------------------------------------------
. Keyin RSEQ
.----------------------------------------------------------------------
KRSEQ000
          PACK      DISPMSG,DISPMSG,SP70
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EF,*V2LON:
                    "0",*HOFF,"=Cost Centre Sequence, ",*V2LON:
                    "1",*HOFF,"=Subjective Sequence";
.
          REPEAT
            KEYIN     *PCCOL:CVERT,*V2LON,FMNGPSEQ
          UNTIL     FMNGPSEQ=0 | FMNGPSEQ=1
.
          IF        FMNGPSEQ=1
            MOVE      "Subjective Sequence      ",REPSEQ
          ELSE
            MOVE      "Cost Centre Sequence     ",REPSEQ
          ENDIF
.
          CALL      MESSAGE3
          MOVE      ZERO,EXIT
.
KRSEQ999  RETURN
.----------------------------------------------------------------------
. Post WP Data
.----------------------------------------------------------------------
POWP0000
.
.---- open temp file ----
.
          MOVE      ZERO,F3
.
          CLOSE     TEMPWORD
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILFMNL1
          TRAPCLR   IO
          BRANCH    OVRCD,POWP2000               * 1 = file not found
.
.---- add wp data ----
.
POWP1000
          READ      TEMPWORD,SEQ;FMNLLIN         * read through temp file
          GOTO      POWP2000 IF OVER
.
          ADD       ONE,F3                       * get next unique id
          PACK      KEY7,FMNGCODE,ZERO,F3,SP70
          UNPACK    KEY7,FMNLCOD,FMNLTYP,FMNLUNQ
          CALL      DEFMNL1                      * save data
          CALL      WRFMNL1
          GOTO      POWP1000
.
.---- delete extra wp data ----
.
POWP2000
          PREP      TEMPWORD,FILFMNL1            * delete temp file
          CLOSE     TEMPWORD
          PACK      KEY4,FMNGCODE,ZERO,SP70
          PACK      KEY7,KEY4,F3,SP70
          UNPACK    KEY7,FMNLCOD,FMNLTYP,FMNLUNQ
.
POWP3000
          CALL      RSFMNL1                      * get next record
          CALL      RKFMNL1
          BRANCH    OVRCD,POWP9999
          PACK      KEY7,FMNLCOD,FMNLTYP,FMNLUNQ,SP70
          MATCH     KEY7,KEY4
          GOTO      POWP9999 IF NOT EQUAL
          CALL      DEFMNL1                      * delete extra record
          GOTO      POWP3000
.
POWP9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       FMSAMAIO/INC
          INC       FMSBTYIO/INC
          INC       FMSBTYKY    
          INC       FMSCCAIO/INC
          INC       FMSCCAKY    
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSLEVIO/INC
          INC       FMSLEVKY    
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSNRAIO/INC
          INC       FMSNRAKY    
          INC       FMSNRBIO/INC
          INC       FMSNRBKY    
          INC       FMSNRCIO/INC
          INC       FMSNRCKY    
          INC       FMSNRDIO/INC
          INC       FMSNRDKY    
          INC       FMSNREIO/INC
          INC       FMSNREKY    
          INC       FMSNRFIO/INC
          INC       FMSNRFKY    
          INC       FMSNRGIO/INC
          INC       FMSNRGKY    
          INC       FMSNRJIO/INC
          INC       FMSNRLIO/INC
          INC       FMSSBAIO/INC
          INC       FMSSBAKY    
          INC       FMSUDRIO/INC
          INC       FMSUDRKY    
          INC       IBAESCIO/INC
          INC       IBAESCKY    
          INC       PRCFMSTR    
.
          INC       STDGENCD
.
