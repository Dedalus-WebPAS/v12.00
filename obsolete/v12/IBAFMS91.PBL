. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS91                                             *
. * Desc      :   Ledger Opening Balance Maintenance                   *
. **********************************************************************
. * Date      :   22.11.1990                                           *
. * Author    :   Peter Eddey                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
.
          INC       FMSSTDDF 
          INC       FMSAMAFD/INC 
          INC       FMSCSAFD/INC 
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSCONFD/INC
          INC       FMSFPSFD/INC
.
ACCOUNT   DIM       12
ACCRUAL   FORM      12.2
ACCTDESC  DIM       35
AGSTNAME  DIM       35
BANKNAME  DIM       35
CASH      FORM      12.2
CREDNAME  DIM       35
CGSTNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
FINYEAR   DIM       4
FPSFNAME  DIM       8
FPSPREFX  INIT      "fmsp"
LEDGER    DIM       2
LEDGDESC  DIM       35
PAYMNAME  DIM       35
XIM9      DIM       9
.
PRGID     INIT      "IBAFMS91"
PRGNAM    INIT      "Ledger Opening Balance Maintenance" 
VERSION   INIT      "V12.00.00"
.
.**********************************************************************
.*                           ML0000                                   *
.*                       Mainline  Code                               *
.**********************************************************************
.
ML0000    CALL      INIT0000             * initialisation
.
ML1000    CALL      SCRN0000             * display the screen
          CALL      KLED0000             * keyin the ledger
          BRANCH    EXIT,ML9999,ML9999   * null or exitchar entered
.
ML3000    CALL      KFIN0000             * keyin the finacial year
          BRANCH    EXIT,ML1000,ML9999   * null or exitchar entered
.
          CALL      OFIL0000             * open the correct period file
          BRANCH    EXIT,ML1000
.
ML4000    CALL      KACT0000             * keyin the account code
          BRANCH    EXIT,ML3000,ML9999   * null or exitchar entered
.
          CALL      DATA0000             * display the data
.
          CALL      UDAT0000             * update the data displayed
          BRANCH    EXIT,ML4000
.
          CALL      POST0000            * post the data
          CALL      SCRN1000
          GOTO      ML4000
.
ML9999    CHAIN     PGM
.
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmsamaaf"
          OPEN      FMSAMAA1,"fmsamaaf"  * account master file
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmscsaaf"
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmslmaaf"
          OPEN      FMSLMAA1,"fmslmaaf"  * ledger master file
.
          DISPLAY   *P64:24,"fmslmcaf"
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"controlf";  * control file
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO51
          CALL      RDFMCO52
.
INIT9999  RETURN
          
.*********************************************************************
.*                          KLED0000                                 *
.*                Keyin the required ledger                          *
.*********************************************************************
.
KLED0000  MOVE      TWENTY6,CCOL
          MOVE      FOUR,CVERT
          MOVE      ZERO,EXIT
.
          CALL      KLMAFM00             * Keyin the required ledger
.
          BRANCH    EXIT,KLED9999,KLED9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF:
                    *P42:4,FMLADESC
          PACK      LEDGER,FMLALEDG,SP70
          PACK      LEDGDESC,FMLADESC,SP70
.
KLED9999  RETURN
.
RLMAFM00  CALL      SCRN0000
          DISPLAY   *P26:4,*V2LON,FMLALEDG,*HOFF,*P42:4,FMLADESC
          RETURN
.
.********************************************************************
.*                          KFIN0000                                *
.*                     keyin the finacial year                      *
.********************************************************************
.
KFIN0000  PACK      KEY2,LEDGER  
          CALL      RDFMLA1
.
          MOVE      ZERO,EXIT
          MOVE      TWENTY6,CCOL
          MOVE      FIVE,CVERT
.
          CALL      KLMCFM00
. 
          BRANCH    EXIT,KFIN9999,KFIN9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          PACK      FINYEAR,FMLCYEAR,SP70
.
KFIN9999  RETURN
.
RLMCFM00  CALL      SCRN0000
         
          DISPLAY   *P26:4,*V2LON,LEDGER,*HOFF,*P42:4,LEDGDESC
          DISPLAY   *P26:5,*V2LON,FMLCYEAR
          RETURN
.        
.*********************************************************************
.*                          KACT0000                                 *
.*                    keyin an existing account                      *
.*********************************************************************
.
KACT0000  MOVE      TWENTY6,CCOL
          MOVE      SIX,CVERT
          MOVE      ZERO,EXIT
.
          MOVE      "7",CACCTIND
          CALL      KAMAFM00             * Keyin  account       
.
          BRANCH    EXIT,KACT9500,KACT9500
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF:
                    *P42:6,FMAMDESC
          PACK      ACCOUNT,FMAMACCT,SP70
          PACK      ACCTDESC,FMAMDESC,SP70
.
          MOVE      FMAMTYPE,FORM1
          COMPARE   THREE,FORM1
          GOTO      KACT9000 IF LESS
.
          GOTO      KACT9999
.
KACT9000  DISPLAY   *P1:24,*EL,*B,"Account must be an asset, liability ":
                    "or equity account. ";
          CALL      HITENTER
          GOTO      KACT0000
.
KACT9500  CALL      SCRN1000
KACT9999  RETURN
.
RAMAFM00  CALL      SCRN0000
.        
          DISPLAY   *P26:4,*V2LON,LEDGER,*HOFF,*P42:4,LEDGDESC:
                    *P26:5,*V2LON,FMLCYEAR:
                    *P26:6,FMAMACCT,*HOFF,*P42:6,FMAMDESC
          RETURN
.        
.**********************************************************************
.*                         DATA0000                                   *
.*                  display the data                                  *
.**********************************************************************
.   
DATA0000  MOVE      FMAMTYPE,FORM1
          BRANCH    FORM1,DATA9999,DATA9999,DATA1000,DATA2000,DATA3000
.
DATA1000  DISPLAY   *P26:8,*EL,*V2LON,"Asset"        
          GOTO      DATA4000
.
DATA2000  DISPLAY   *P26:8,*EL,*V2LON,"Liability"
          GOTO      DATA4000
.
DATA3000  DISPLAY   *P26:8,*EL,*V2LON,"Equity"
.
.---- display the cash & accrual bought forward ----
.
DATA4000  MOVE      ZERO,FMFPCBF
          MOVE      ZERO,FMFPABF
          PACK      KEY14,LEDGER,ACCOUNT
          CALL      RDFMFP1
          MOVE      FMFPABF,ACCRUAL
          MOVE      FMFPCBF,CASH
.
          DISPLAY   *P26:9,*EL,*V2LON,FMFPCBF:
                    *P26:10,*EL,*V2LON,FMFPABF
.
DATA9999  RETURN
.
.**********************************************************************
.*                          UDAT0000                                  *
.*                Update the data displayed                           *
.**********************************************************************
.
UDAT0000  CALL      UDAT5100
          CALL      UDAT5200
.
UDAT1000  MOVE      ZERO,EXIT
          MOVE      TWO,DECPLACE
          MOVE      TWENTY6,CCOL
.
          CALL      MAINQST              * select item post cancel
.
          COMPARE   "-1",CCITEM          * test for cancel
          GOTO      UDAT9000 IF EQUAL
.
          COMPARE   ZERO,CCITEM          * test for post
          GOTO      UDAT9999 IF EQUAL
.
          COMPARE   THREE,CCITEM         * test if within range
          GOTO      UDAT5000 IF LESS
.
          BEEP
          GOTO      UDAT0000
.
UDAT5000  PERFORM   CCITEM,UDAT5100,UDAT5200
          GOTO      UDAT1000
.
UDAT5100  KEYIN     *P26:9,*DV,CASH,*P26:9,*V2LON,*RV,CASH
          RETURN
.
UDAT5200  KEYIN     *P26:10,*DV,ACCRUAL,*P26:10,*V2LON,*RV,ACCRUAL
          RETURN
.
UDAT9000  MOVE      ONE,EXIT
          CALL      SCRN1000
.
UDAT9999  RETURN
.
.**********************************************************************
.*                         POST0000                                   *
.*                      Post the data                                 *
.**********************************************************************
.
POST0000  PACK      KEY14,LEDGER,ACCOUNT
          CALL      RDFMFP1
          BRANCH    OVRCD,POST5000
.
.-----  set up cash details ----
.
          MOVE      CASH,FMFPCBF
          MOVE      CASH,FMFPCBFD
          MOVE      CASH,XIM9
          MOVE      XIM9,FMFPCBFT
.
.----  set up accrual details  ----
.
          CLEAR     XIM9
          MOVE      ACCRUAL,FMFPABF
          MOVE      ACCRUAL,FMFPABFD
          MOVE      ACCRUAL,XIM9
          MOVE      XIM9,FMFPABFT

          CALL      UPFMFP1
.
          GOTO      POST9999
.
POST5000  MOVE      LEDGER,FMFPCULD
          MOVE      ACCOUNT,FMFPCUAC
.
.-----  set up cash details ----
.
          CALL      MZER0000
          MOVE      CASH,FMFPCBF
          MOVE      CASH,FMFPCBFD
          MOVE      CASH,XIM9
          MOVE      XIM9,FMFPCBFT
.
.----  set up accrual details  ----
.
          CLEAR     XIM9
          MOVE      ACCRUAL,FMFPABF
          MOVE      ACCRUAL,FMFPABFD
          MOVE      ACCRUAL,XIM9
          MOVE      XIM9,FMFPABFT
.
          CALL      WRFMFP1
.
POST9999  RETURN
.
MZER0000  MOVE      ZERO,FMFPCBF 
          MOVE      ZERO,FMFPC01 
          MOVE      ZERO,FMFPC02 
          MOVE      ZERO,FMFPC03 
          MOVE      ZERO,FMFPC04 
          MOVE      ZERO,FMFPC05 
          MOVE      ZERO,FMFPC06 
          MOVE      ZERO,FMFPC07 
          MOVE      ZERO,FMFPC08 
          MOVE      ZERO,FMFPC09 
          MOVE      ZERO,FMFPC10 
          MOVE      ZERO,FMFPC11 
          MOVE      ZERO,FMFPC12 
          MOVE      ZERO,FMFPC13 
.
          MOVE      ZERO,FMFPABF 
          MOVE      ZERO,FMFPA01 
          MOVE      ZERO,FMFPA02 
          MOVE      ZERO,FMFPA03 
          MOVE      ZERO,FMFPA04 
          MOVE      ZERO,FMFPA05 
          MOVE      ZERO,FMFPA06 
          MOVE      ZERO,FMFPA07 
          MOVE      ZERO,FMFPA08 
          MOVE      ZERO,FMFPA09 
          MOVE      ZERO,FMFPA10 
          MOVE      ZERO,FMFPA11 
          MOVE      ZERO,FMFPA12 
          MOVE      ZERO,FMFPA13 
.
          MOVE      ZERO,FMFPCOM 
          MOVE      ZERO,FMFPCOM2
.
. Fields in Dollar only Scale
.
          MOVE      ZERO,FMFPCBFD
          MOVE      ZERO,FMFPC01D
          MOVE      ZERO,FMFPC02D
          MOVE      ZERO,FMFPC03D
          MOVE      ZERO,FMFPC04D
          MOVE      ZERO,FMFPC05D
          MOVE      ZERO,FMFPC06D
          MOVE      ZERO,FMFPC07D
          MOVE      ZERO,FMFPC08D
          MOVE      ZERO,FMFPC09D
          MOVE      ZERO,FMFPC10D
          MOVE      ZERO,FMFPC11D
          MOVE      ZERO,FMFPC12D
          MOVE      ZERO,FMFPC13D
.
          MOVE      ZERO,FMFPABFD
          MOVE      ZERO,FMFPA01D
          MOVE      ZERO,FMFPA02D
          MOVE      ZERO,FMFPA03D
          MOVE      ZERO,FMFPA04D
          MOVE      ZERO,FMFPA05D
          MOVE      ZERO,FMFPA06D
          MOVE      ZERO,FMFPA07D
          MOVE      ZERO,FMFPA08D
          MOVE      ZERO,FMFPA09D
          MOVE      ZERO,FMFPA10D
          MOVE      ZERO,FMFPA11D
          MOVE      ZERO,FMFPA12D
          MOVE      ZERO,FMFPA13D
.
          MOVE      ZERO,FMFPCOMD
.
. Fields in Thousands only Scale
.
          MOVE      ZERO,FMFPCBFT
          MOVE      ZERO,FMFPC01T
          MOVE      ZERO,FMFPC02T
          MOVE      ZERO,FMFPC03T
          MOVE      ZERO,FMFPC04T
          MOVE      ZERO,FMFPC05T
          MOVE      ZERO,FMFPC06T
          MOVE      ZERO,FMFPC07T
          MOVE      ZERO,FMFPC08T
          MOVE      ZERO,FMFPC09T
          MOVE      ZERO,FMFPC10T
          MOVE      ZERO,FMFPC11T
          MOVE      ZERO,FMFPC12T
          MOVE      ZERO,FMFPC13T
.
          MOVE      ZERO,FMFPABFT
          MOVE      ZERO,FMFPA01T
          MOVE      ZERO,FMFPA02T
          MOVE      ZERO,FMFPA03T
          MOVE      ZERO,FMFPA04T
          MOVE      ZERO,FMFPA05T
          MOVE      ZERO,FMFPA06T
          MOVE      ZERO,FMFPA07T
          MOVE      ZERO,FMFPA08T
          MOVE      ZERO,FMFPA09T
          MOVE      ZERO,FMFPA10T
          MOVE      ZERO,FMFPA11T
          MOVE      ZERO,FMFPA12T
          MOVE      ZERO,FMFPA13T
.
          MOVE      ZERO,FMFPCOMT
          RETURN
.
.
.**********************************************************************
.*                         OFIL0000                                   *
.*              Create and/or open FPS files                          *
.**********************************************************************
.
OFIL0000  MOVE      ZERO,EXIT
          PACK      FPSFNAME,FPSPREFX,FMLCYEAR,SP70
.
OFIL1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FPSFNAME    * open FPS file
          TRAPCLR   IO
          BRANCH    OVRCD,OFIL6000       * create if open failed
.
          OPEN      FMSFPSA2,FPSFNAME
          GOTO      OFIL9999
.
.---- ask if they want to create the file ----
.
OFIL6000  KEYIN     *P1:24,*EL,*B,"Actual file NOT available do you want to ":
                    "create it (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ":
                    *DV,UNDLN1,*P60:24,*V2LON,ANS,*P60:24,*DV,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS             * test for yes
          GOTO      OFIL8000 IF EQUAL
.
          MATCH     ANSN,ANS             * test for no
          GOTO      OFIL9000 IF EQUAL
.
          BEEP
          GOTO      OFIL6000

.
.---- Create the FPS file  ------
.
OFIL8000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FPSFNAME,CMDLINE
          APPEND    " 644 U1-2,3-14",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          GOTO      OFIL1000
         
OFIL9000  MOVE      ONE,EXIT
.
OFIL9999  RETURN
.
.*********************************************************************
.*                         SCRN0000                                  *
.*                display the screen                                 *
.*********************************************************************
.
SCRN0000  DISPLAY   *P1:3,*EF:
                    *P5:4,"Ledger             : ":
                    *P5:5,"Financial Year     : ":
                    *P5:6,"Account Code       : "
.
SCRN1000  DISPLAY   *P5:8,*EF,"Account Type       : ":
                    *P2:9,*V2LON,"1.",*HOFF:
                    *P5:9,"B/Forward Cash     : ":
                    *P2:10,*V2LON,"2.",*HOFF:
                    *P5:10,"B/Forward Accrual  : "
.
SCRN9999  RETURN
.
          INC       FMSSTDCD
          INC       FMSAMAIO/INC
          INC       FMSCSAIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSCONIO/INC
          INC       FMSFPSIO/INC
          INC       FMSAMAKY
          INC       FMSLMAKY
          INC       FMSLMCKY
