.*****************************************************************************
.*    Program      : F00PTIN1.PBL                                            *
.*    Description  : Conversion patin1af to new File layout                  *
.*                                                                           *
.*    Author       : Steve Armstrong                                         *
.*    Date         : 10/05/2010                                              *
.*    Modifications:                                                         *
.*        V10.00.00 Steve Armstrong  CAR 169939                              *
.*                  Created program                                          *
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
OLDFILE   IFILE     SQL, FIXED=397, KEY="U1-6"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.ICODE     DIM       6           6         1      INSURANCE NUMBER
.INAME     DIM      30          30         7      INSURANCE NAME
.IADD1     DIM      35          35        37      INSURANCE ADDRESS LINE 1
.IADD2     DIM      35          35        72      INSURANCE ADDRESS LINE 2
.IADD3     DIM      35          35       107      INSURANCE ADDRESS LINE 3
.IADD4     DIM      35          35       142      INSURANCE ADDRESS LINE 3
.IPOST     DIM       8           8       177      INSURANCE POSTCODE
.ICONT     DIM      30          30       185      INSURANCE CONTACT
.ITELEB    DIM      20          20       215      TELEPHONE - BUSINESS
.IBILL     FORM    12.2          8       235      AMOUNT TO BE BILLED
.IAOUT     FORM    12.2          8       243      AMOUNT OUTSTANDING
.ISORT     DIM      6            6       251      SORT KEY
.PTINSCEM  DIM      80          80       257      ECLIPSE SENDER CONTACT EMAIL
.PTINSCPN  DIM      40          40       337      ECLIPSE SENDER CONTACT NAME
.PTINSCPP  DIM      20          20       377      ECLIPSE SENDER CONTACT PHONE
.
.End of Record                           397
.
.
PATIN1A1   IFILE    SQL, FIXED=418, KEY="U1-6"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
ICODE      DIM       6           6         1      INSURANCE NUMBER
INAME      DIM      30          30         7      INSURANCE NAME
IADD1      DIM      35          35        37      INSURANCE ADDRESS LINE 1
IADD2      DIM      35          35        72      INSURANCE ADDRESS LINE 2
IADD3      DIM      35          35       107      INSURANCE ADDRESS LINE 3
IADD4      DIM      35          35       142      INSURANCE ADDRESS LINE 3
IPOST      DIM       8           8       177      INSURANCE POSTCODE
ICONT      DIM      30          30       185      INSURANCE CONTACT
ITELEB     DIM      20          20       215      TELEPHONE - BUSINESS
IBILL      FORM    12.2          8       235      AMOUNT TO BE BILLED
IAOUT      FORM    12.2          8       243      AMOUNT OUTSTANDING
ISORT      DIM      6            6       251      SORT KEY
PTINSCEM   DIM      80          80       257      ECLIPSE SENDER CONTACT EMAIL
PTINSCPN   DIM      40          40       337      ECLIPSE SENDER CONTACT NAME
PTINSCPP   DIM      20          20       377      ECLIPSE SENDER CONTACT PHONE
PTINACTV   DIM       1           1       397      Active Flag
.                                                   0 or Blank = Yes
.                                                   1 = No
PTINSPAR   DIM      20          20       398      Spare Variable
.
.End of Record                           418
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DIM60     DIM       60
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
. 
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PATIN1FD"
PRGID     INIT      "F00PTIN1"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                         MAIN0000                                          *
.*                      Mainline code                                        *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.*****************************************************************************
.*                          INIT0000               Called by: MAIN0000       *
.*  Display heading and check that the files needed exist & open them        *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                          KDIR0000               Called by: MAIN0000       *
.*                       Keyin directories                                   *
.*****************************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9000
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9100 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9100 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9000
.
KDIR9000  MOVE      ZERO,EXIT
          GOTO      KDIR9999
.
KDIR9100  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.*****************************************************************************
.*                          PREP0000               Called by: MAIN0000       *
.*                       Preparing files                                     *
.*****************************************************************************
.
PREP0000  CALL      CHEK0000                     * old file found ok ?
          BRANCH    EXIT,PREP9000                * no - finish
.
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patin1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptin1af.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patin1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptin1af.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patin1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sptin1af",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patin1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 418 UC1-6",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC251-256,1-6",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PATIN1A1,NEWFILE
.
.         Set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.*****************************************************************************
.*                               READ0000          Called by: MAIN0000       *
.*             Loop thru old file and write each record                      *
.*****************************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY6,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.         Load new fields
.
          MOVE      ZERO,PTINACTV
          MOVE      SP70,PTINSPAR
.                                               * Pack key here
          PACK      KEY6,ICODE,SP70
          CALL      WRINSR1                     * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATIN1A1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.*****************************************************************************
.*                               VALD0000          Called by: KDIR0000       *
.*                   Check if it a valid directory                           *
.*****************************************************************************
.
VALD0000  SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9100
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      VALD9999
.
VALD9100  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.*****************************************************************************
.*                               ENDP0000          Called by: MAIN0000       *
.*                    Remove or compress save file                           *
.*****************************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sptin1af*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.*****************************************************************************
.*                               DEFT0000          Called by: KDIR0000       *
.*                      Get the default directory                            *
.*****************************************************************************
.
DEFT0000  EXECUTE   "ldat patin1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding patin1af.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE,"patin1af"
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE
          GOTO      CHEK9000
.
CHEK2000  DISPLAY   *P1:23,*EF,"File 'patin1af' ";
          SCAN      "I * I",DIM60
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed":
                    *P1:24;
          CALL      HITENTER
.
          MOVE      ONE,EXIT
          GOTO      CHEK9999
.
CHEK9000  MOVE      ZERO,EXIT
.
CHEK9999  RETURN
.
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
READSOLD  RESET     KEY6
          READ      OLDFILE,KEY6;;
          RETURN    
.  
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;ICODE,INAME,IADD1,IADD2,IADD3,IADD4,IPOST:
                            ICONT,ITELEB,IBILL,IAOUT,ISORT:
                            PTINSCEM,PTINSCPN,PTINSCPP
          GOTO      OVERCOND IF OVER
          RETURN
.
WRINSR1   RESET     KEY6
          WRITE     PATIN1A1,KEY6;KEY6,INAME,IADD1,IADD2,IADD3,IADD4,IPOST:
                                  ICONT,ITELEB,IBILL,IAOUT,ISORT:
                                  PTINSCEM,PTINSCPN,PTINSCPP
          RETURN
.
          INC       STD001IO
