. **********************************************************************
. * ###################################################################*
. * # Note : any changes to account creation will have to be changed   *
. * #        in FMSACCCD + IBAFMS24 to ensure accounts update correctly*
. * ###################################################################*
. *                                                                    *
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS69                                             *
. * Desc      :   Consolidated Cost Centre                             *
. **********************************************************************
. * Date      :   16.05.1991                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * V10.03.01 25/02/2013 Ania P         CAR 281021                     *
. *           Removed unnecessary modification of constants.           *
. * VF.00.02  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.01  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS69
.             open files and initialise variables
.             WHILE user wants to execute program DO
.                  user inputs key
.                  CASE user option OF
.                       INSERT : key in initial fields
.                                modify as desired
.                                save data if desired
.                       MODIFY : display existing data
.                                modify as desired
.                                save data if desired
.                       DELETE : display existing data
.                                delete data if desired
.                  END
.             END
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * FMS audit update variables
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSBPFFD/INC       * cost centre
          INC       FMSCCAFD/INC       * cost centre
          INC       FMSCCCFD/INC       * consol cost centre
          INC       FMSLEVFD/INC       * level
          INC       FMSPRCFD/INC       * print code
          INC       FMSRSFFD/INC       * report seq
          INC       FMSSBAFD/INC       * subjective
          INC       FMSXCSFD/INC       * xref
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
ISBUILD   INIT      "isbuild "         * define temp file variables
ISERASE   INIT      "iserase "
TMP0ADAT  INIT      " 27 U1-2,3-14,15-26"
NEZTMP0A  IFILE     SQL, FIXED=27, KEY="U1-2,3-14,15-26"
NAMEA     INIT      "neztmA"
FILENAMA  DIM       8
KILLTMPA  DIM       80
MAKETMPA  DIM       80
.                            * temp file definition
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
NEZALEDG  DIM       2      2        1     unique id
NEZACCOS  DIM       12     12       3     ccc
NEZASCOS  DIM       12     12       15    cc
.
.End of file                        27
.
.
END       INIT      "End                                "
START     INIT      "Start                              "
ZERO5     INIT      "00000"
Z5        INIT      "ZZZZZ"
Z12       INIT      "zzzzzzzzzzzz"
.
COSTCODE  DIM       12       * cc code   for BCOD
SUBJCODE  DIM       12       * subj code for BCOD
.
ACCEPT    FORM      1        * accept mode (1=on)
CURLEVEL  DIM       3        * current consol cc level
DELETE    FORM      1
DIMA14    DIM       14       * ledger/account to read
DIMB14    DIM       14       * ledger/account to write
DIMC5     DIM       5        * ledger/account sequence
DIMD35    DIM       35       * ledger/account description
FIRSTLEV  DIM       3        * first level
OLDCCOSD  DIM       35       * consol cc description
OLDPPOS   DIM       5        * print pos
OLDPRT    DIM       5        * print pos
OLDCRP    DIM       1        * credit print
OPTIONA   FORM      2        * screen A selection keyin var
SAVCCOS   DIM       12       * consol cc
SAVCCOSD  DIM       35       * consol cc description
SAVLEDG   DIM       2        * ledger
SAVLEDGD  DIM       35       * ledger description
SAVPPOS   DIM       5        * print pos
SAVPRT    DIM       5        * print pos
SAVCRP    DIM       1        * credit print
SCRNO     FORM      2        * screen number
SKEY26    DIM       26
.
ITEMA     FORM      "4"      * item no. to start on screen A -1
MAXITEMA  FORM      "12"     * maximum no. of items on screen A + 1
STARTA    FORM      "11"     * line to start display on screen A -1
.
CURPAGE   FORM      3        * current page number
ITEMNUM   FORM      2        * item number
MORE      FORM      1        * more data (1=yes)
PAGENO    FORM      3        * current page number
SAVITEM   FORM      2        * item number for Screen A
SKEY      DIM       35       * key save for Screen A
SKIPLINE  FORM      1        * 1=skip line CVERT in redisplay
XFLAG     FORM      1        * update no matter what
.
PRGID     INIT      "IBAFMS69"
PRGNAM    INIT      "Consolidated Cost Centre"
VERSION   INIT      "V12.00.00"

.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      SELOPTN            * select option
          COMPARE   ZERO,COPTION
          GOTO      ML9999 IF EQUAL    * exit ?
.
ML0200    CALL      KLMA0000           * get LMA
          BRANCH    EXIT,ML0100        * exit option
.
ML0300    CALL      KCCC0000           * get CCC
          BRANCH    EXIT,ML0200        * exit option
          BRANCH    COPTION,ML1000,ML1000,ML2000
.
.---- add/modify ----
.
ML1000    CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML0300        * exit option
.
          CALL      POST0000           * save data
          GOTO      ML0300             * get next selection
.
.---- delete ----
.
ML2000    CALL      SCRA0000           * display screen A
          MOVE      ONE,PAGENO
          CALL      DATA0000
          CALL      DELQST             * ok to delete (y/n/c) ?
          SUB       ONE,CEXIT
          BRANCH    CEXIT,ML0300,ML0100 * exit option
.
          CALL      DELT0000           * delete data
          GOTO      ML0300             * get next selection
.
ML9999    CLOSE     NEZTMP0A           * delete temp file
          EXECUTE   KILLTMPA,TASKID
          MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
          CHAIN     PGM                * chain back to menu
.
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD                     * display screen
          CALL      OUPD0000                     * open files for update procs
.
          DISPLAY   *P56:24,"Opening fmsbpfaf";  * cost centre file
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          PACK      FILENAMA,NAMEA,PORT,SP70     * set up and open temp file
          REP       " 0",FILENAMA
          PACK      MAKETMPA,ISBUILD,FILENAMA,TMP0ADAT
          PACK      KILLTMPA,ISERASE,FILENAMA
          EXECUTE   KILLTMPA,TASKID
          EXECUTE   MAKETMPA,TASKID
          OPEN      NEZTMP0A,FILENAMA
.
          DISPLAY   *P64:24,"fmsccaaf";  * cost centre
          OPEN      FMSCCAA1,"fmsccaaf"
          OPEN      FMSCCAA2,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmscccaf";  * consolidated cost centre
          OPEN      FMSCCCA1,"fmscccaf"
.
          DISPLAY   *P64:24,"fmslevaf";  * level
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmsrsfaf";  * report seq
          OPEN      FMSRSFA1,"fmsrsfaf"
          OPEN      FMSRSFA2,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * subjective
          OPEN      FMSSBAA1,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";  * xref
          OPEN      FMSXCSA1,"fmsxcsaf"
          OPEN      FMSXCSA2,"fmsxcsaf"
          OPEN      FMSXCSA3,"fmsxcsaf"
.
          DISPLAY   *P64:24,"fmsprca1";
          OPEN      FMSPRCA1,"fmsprcaf"
.
          MOVE      "999",FMLVCODE
          PACK      KEY3,SP70
          CALL      RSFMLV1
          CALL      RKFMLV1
          PACK      FIRSTLEV,FMLVCODE,SP70
.
INIT9999  DISPLAY   *P1:24,*EF;
          RETURN
.******************************************************************************
.  KLMA - Get ledger                             Called by ML
.         Returns : EXIT     (1=exit)
.******************************************************************************
KLMA0000  UNPACK    SP70,SAVLEDG,SAVLEDGD
          UNPACK    SP70,SAVCCOS,SAVCCOSD
          CALL      DHED0000                * display screen header
          MOVE      "0",SCRNO
.
KLMA0100  MOVE      "28",CCOL               * set up keyin address 
          MOVE      "4",CVERT
          CALL      KLMAFM00
          BRANCH    EXIT,KLMA9500,KLMA9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
          PACK      SAVLEDG,FMLALEDG,SP70
          PACK      SAVLEDGD,FMLADESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,SAVLEDG,*HOFF,SP10,SP2,SAVLEDGD;
.
KLMA9000  MOVE      ZERO,EXIT          * continue
          GOTO      KLMA9999
.
KLMA9500  MOVE      ONE,EXIT           * quit
.
KLMA9999  RETURN
.******************************************************************************
.  KCCC - Get CCC                                Called by ML
.         Returns : EXIT     (1=exit)
.******************************************************************************
KCCC0000  UNPACK    SP70,SAVCCOS,SAVCCOSD
          MOVE      "0",SCRNO
          MOVE      "28",CCOL               * set up keyin address
          MOVE      "5",CVERT
          DISPLAY   *PCCOL:CVERT,*EF;
.
KCCC1100  COMPARE   ONE,COPTION             * insert ?
          CALL      ACCCFM00 IF EQUAL
          COMPARE   ONE,COPTION             * modify/delete ?
          CALL      KCCCFM00 IF NOT EQUAL
.
          BRANCH    EXIT,KCCC9500,KCCC9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
          PACK      SAVCCOS,FMCFCCOS,SP70
          PACK      SAVCCOSD,FMCFDESC,SP70
          PACK      SAVPPOS,FMCFPPOS,SP70
          PACK      SAVPRT,FMCFPRT,SP70
          PACK      SAVCRP,FMCFCRP,SP70
.
          LOAD      SAVCCOSD,COPTION,SP70,SAVCCOSD,SAVCCOSD
          LOAD      SAVPPOS,COPTION,SP70,SAVPPOS,SAVPPOS
          LOAD      SAVPRT,COPTION,SP70,SAVPRT,SAVPRT
          LOAD      SAVCRP,COPTION,SP70,SAVCRP,SAVCRP
.
          PACK      OLDCCOSD,SAVCCOSD,SP70
          PACK      OLDPPOS,SAVPPOS,SP70
          PACK      OLDPRT,SAVPRT,SP70
          PACK      OLDCRP,SAVCRP,SP70
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SAVCCOS;
          LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO
.
KCCC9000  CALL      WTMA0000           * set up temp file
          MOVE      ZERO,EXIT          * continue
          GOTO      KCCC9999
.
KCCC9500  MOVE      ONE,EXIT           * quit
.
KCCC9999  RETURN
.******************************************************************************
.  DHED - Display Screen header                  Called by KLMA, redisps
.******************************************************************************
DHED0000  DISPLAY   *P1:3,*EF:
                    *P1:4,"    Ledger               : ":
                          *V2LON,SAVLEDG,*HOFF,SP10,SP2,SAVLEDGD:
                    *P1:5,"    Consol. Cost Centre  : ":
                          *V2LON,SAVCCOS;
.
DHED9999  RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  MOVE      SP70,FMPRDESC
          PACK      KEY3,SAVPRT,SP70
          CALL      RDFMPR1
          MOVE      ZERO,FYESNO
          MOVE      SAVCRP,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
.
          DISPLAY   *P1:6,*EF,*V2LON:
                    *P1:7," 1",*HOFF,". Description          : ":
                          *V2LON,SAVCCOSD:
                    *P1:8," 2",*HOFF,". Print Position       : ":
                          *V2LON,SAVPPOS:
                    *P1:9," 3",*HOFF,". Print Code           : ":
                          *V2LON,SAVPRT,*HOFF,SP1,SP10,FMPRDESC,*V2LON:
                    *P1:10," 4",*HOFF,". Credit Print (Y/N)   : ":
                          *V2LON,YESNO,*HOFF:
                    *P1:11,*ULON,"Item",*P7:11,"Cost Centre";
.
SCRA9999  RETURN
.******************************************************************************
.  SELA - Perform Screen A                       Called by ML
.         Returns : EXIT     (1=exit)
.******************************************************************************
SELA0000  MOVE      ZERO,OPTIONA       * reset item desired
          CALL      SCRA0000           * display screen A
          MOVE      "1",SCRNO
          MOVE      "1",PAGENO
          MOVE      "1",SKIPLINE 
          MOVE      "0",XFLAG
.
SELA1000  CALL      DATA0000           * display data
.
SELA1100  ADD       ONE,OPTIONA        * get next item
          BRANCH    ACCEPT,SELA2110    * in accept mode ?
          CALL      MQSA0000           * get desired action
          BRANCH    EXIT,SELA9000,SELA9500      * quit screen ?
.
SELA2110  MOVE      "28",CCOL          * get screen address
          MOVE      "6",CVERT
          ADD       OPTIONA,CVERT
          BRANCH    OPTIONA,SELA3100,SELA3200,SELA3300,SELA3400
.
          MOVE      ZERO,ACCEPT
          CALL      SELB0000           * get sub cost centre
          GOTO      SELA1000           * get another option
.
.---- option 1 ----
.
SELA3100  MATCH     SAVCCOSD,SP70
          GOTO      SELA3150 IF NOT EQUAL        * description spaces ?
.
          PACK      SAVCCOSD,UNDLN70
.
SELA3150  KEYIN     *PCCOL:CVERT,*DV,SAVCCOSD:   * read in description
                    *PCCOL:CVERT,*V2LON,*RV,SAVCCOSD;
          PACK      SAVCCOSD,SAVCCOSD,SP70
.
          MATCH     SAVCCOSD,SP70
          GOTO      SELA3100 IF EQUAL            * description spaces ?
          MATCH     SAVCCOSD,UNDLN70
          GOTO      SELA9500 IF EQUAL            * nothing entered ?
          MATCH     SAVCCOSD,EXITCHAR
          GOTO      SELA9500 IF EQUAL            * EXITCHAR entered ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SAVCCOSD;
          GOTO      SELA1100
.
.---- option 2 ----
.
SELA3200  MATCH     SAVPPOS,SP70
          GOTO      SELA3250 IF NOT EQUAL        * print pos spaces ?
.
          PACK      SAVPPOS,ZERO5
.
SELA3250  KEYIN     *PCCOL:CVERT,*DV,SAVPPOS:    * read in print pos
                    *PCCOL:CVERT,*V2LON,*RV,*JR,*ZF,*DE,SAVPPOS:
                    *PCCOL:CVERT,*V2LON,*DV,SAVPPOS;
          GOTO      SELA1100
.
.---- option 3 ----
.
SELA3300  CALL      KPRCFM00                * get data
          BRANCH    EXIT,SELA3350,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
SELA3350  LOAD      FMPRDESC,EXIT,SP70
          PACK      SAVPRT,FMPRCODE,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,SAVPRT,*HOFF,SP1,SP10,FMPRDESC;
          GOTO      SELA1100
.
SELA3400  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,SAVCRP 
          GOTO      SELA1100
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.******************************************************************************
.  ADDA - get first blank position               Called By SELA
.******************************************************************************
ADDA0000  ADD       ONE,PAGENO         * try next page
          CALL      DATA0000           * display next page
.
          ADD       ONE,ITEMNUM        * get next item
          COMPARE   MAXITEMA,ITEMNUM
          GOTO      ADDA0000 IF NOT LESS  * at end of page
.
ADDA9999  RETURN
.******************************************************************************
.  MQSA - Main question for Screen A             Called By SELA
.******************************************************************************
MQSA0000  DISPLAY   *P1:24,"Select Item";        * display prompt
          MOVE      "11",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSA1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQSA1000  COMPARE   PAGENO,ONE
          GOTO      MQSA2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQSA2000  DISPLAY   ", (",*V2LON,"S",*HOFF,")ave, (",*V2LON:
                    "C",*HOFF,")ancel :  ";
          ADD       "22",CCOL
.
MQSA3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQSA4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQSA4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATA0000
          GOTO      MQSA0000
.
MQSA4000  COMPARE   PAGENO,ONE
          GOTO      MQSA5000 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQSA5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATA0000
          GOTO      MQSA0000
.
MQSA5000  MATCH     " S",DIM2
          GOTO      MQSA9500 IF EQUAL
          MATCH     " C",DIM2
          GOTO      MQSA9700 IF EQUAL
.
.         MATCH     "1426",PASSCODE    * force update if iba enter " *"
.         GOTO      MQSA6000 IF NOT EQUAL
.
          MATCH     " *",DIM2
          GOTO      MQSA6000 IF NOT EQUAL
          MOVE      ONE,XFLAG
          GOTO      MQSA0000
.
MQSA6000  MOVE      ZERO,OPTIONA
          MOVE      DIM2,OPTIONA
          COMPARE   OPTIONA,ZERO
          GOTO      MQSA9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQSA3000           * get another option
.
MQSA9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSA9999
.
MQSA9500  MOVE      ONE,EXIT           * save
          GOTO      MQSA9999
.
MQSA9700  MOVE      TWO,EXIT           * cancel
          GOTO      MQSA9999
.
MQSA9999  RETURN
.******************************************************************************
.* SELB - screen B                               Called By SELA               *
.******************************************************************************
SELB0000  MOVE      ZERO,ACCEPT        * clear accept mode
          MOVE      SP70,KEY26
          LOAD      KEY26,OPTIONA,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          CALL      RDNEZA1
          BRANCH    OVRCD,SELB5000
.
.---- modify mode ----
.
          CALL      DENEZA1
.
          MOVE      OPTIONA,ITEMNUM
          MOVE      OPTIONA,SAVITEM
          MOVE      STARTA,LINENO
          ADD       ITEMNUM,LINENO     * get lineno
          SUB       ITEMA,LINENO
          MOVE      "0",SKIPLINE 
          CALL      KDAA0000           * get data
          MOVE      "1",SKIPLINE 
          GOTO      SELA9000
.
.---- insert mode ----
.
SELB5000  ADD       ONE,ITEMNUM
          COMPARE   MAXITEMA,ITEMNUM
          CALL      ADDA0000 IF NOT LESS         * get first free position
          MOVE      STARTA,LINENO
          ADD       ITEMNUM,LINENO               * get lineno
          SUB       ITEMA,LINENO
          MOVE      ITEMNUM,SAVITEM
.
SELB6000  CALL      KDAA0000           * get data
          BRANCH    EXIT,SELA9500
.
          MOVE      SAVITEM,ITEMNUM
          GOTO      SELB5000           * get more entries
.
SELB9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELB9999
.
SELB9500  MOVE      ONE,EXIT           * quit
.
SELB9999  RETURN
.**********************************************************************
.  KDAA - Keyin screen data                            Called By SELA
.        Requires - SAVLEDG  (current ledger)
.                   SAVCCOS  (current subj)
.                   LINENO   (current line)
.        Returns  - EXIT     (1=quit)
.**********************************************************************
KDAA0000  DISPLAY   *P1:LINENO,*V2LON,SAVITEM,DOT,*EL;
          MOVE      SAVLEDG,FMLALEDG
          MOVE      "7",CCOL
          MOVE      LINENO,CVERT
          CALL      KCCAFM00           * get cost centre
          BRANCH    EXIT,KDAA9500,KDAA9500
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCCCOCE,*HOFF,SP2,FMCCDESC
.
          PACK      KEY26,SAVLEDG,SAVCCOS,FMCCCOCE,SP70
          UNPACK    KEY26,NEZALEDG,NEZACCOS,NEZASCOS
          CALL      RANEZA1
          BRANCH    OVRCD,KDAA1000    * record exists ?
          DISPLAY   *P1:24,*B,*EL,"Cost Centre Already Exists - ";
          CALL      HITENTER
          GOTO      KDAA0000
.
KDAA1000  CALL      WRNEZA1
.
.
KDAA9000  MOVE      ZERO,EXIT          * continue
          GOTO      KDAA9999
.
KDAA9500  MOVE      ONE,EXIT           * quit
.
KDAA9999  RETURN
.******************************************************************************
. DATA - display screen A data                  Called By MQSA,SELA
.       Requires - PAGENO   (page to display)
.                  MAXITEMA (maximum no. of items per page + 1)
.                  STARTA   (line to start at)
.                  SKIPLINE (0=dont display data on line cvert (redisplays))
.        Returns - ITEMNUM  (number of data items displayed)
.                  ST1..ST17 (save keys for displayed data)
.        Uses    - CURPAGE  (page counter)
.                  LINENO   (line to display data)
.******************************************************************************
DATA0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17,SKEY
          MOVE      STARTA,LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      ITEMA,ITEMNUM                * start at desired item
          MOVE      STARTA,F2
          ADD       ONE,F2
          DISPLAY   *P1:F2,*EF;                  * clear data area on screen
.
          PACK      KEY26,SAVLEDG,SAVCCOS,SP70
          CALL      RSNEZA1                      * go to start of records
.
DATA1000  CALL      RKNEZA1                      * get next record
          BRANCH    OVRCD,DATA9000               * no more records ?
          MATCH     SAVLEDG,NEZALEDG
          GOTO      DATA9000 IF NOT EQUAL        * not valid record ?
          MATCH     SAVCCOS,NEZACCOS
          GOTO      DATA9000 IF NOT EQUAL        * not valid record ?
.
DATA1500  ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMA,ITEMNUM
          GOTO      DATA2000 IF LESS             * at start of next screen ?
.
          MOVE      ITEMA,ITEMNUM
          ADD       ONE,ITEMNUM
          ADD       ONE,CURPAGE
.
DATA2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATA1000 IF LESS             * not up to current page ?
          GOTO      DATA9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
          BRANCH    SKIPLINE,DATA5000            * display line CVERT ?
          COMPARE   LINENO,CVERT
          GOTO      DATA1500 IF EQUAL            * get next line
.
DATA5000  PACK      FMCCDESC,SP70
          PACK      KEY14,NEZALEDG,NEZASCOS,SP70
          CALL      RDFMCC1
.
          DISPLAY   *P7:LINENO,NEZASCOS,SP2,FMCCDESC
          PACK      KEY26,NEZALEDG,NEZACCOS,NEZASCOS,SP70
          STORE     KEY26,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATA1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATA9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATA9100 IF NOT LESS          * not up to current page ?
          MOVE      ITEMA,ITEMNUM                 * reset pointer
.
DATA9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMA,ITEMNUM
          GOTO      DATA9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATA9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                     * no more data
          GOTO      DATA9999
.
.---- reached EOP before EOF ----
.
DATA9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMA,ITEMNUM
.
DATA9999  RETURN
.**********************************************************************
.  DELT - Delete data                                    Called By ML
.**********************************************************************
DELT0000  PACK      KEY26,SAVLEDG,SAVCCOS,SP70
          UNPACK    KEY26,FMCFLEDG,FMCFCCOS,FMCFSCOS
          CALL      DEFMCF1
.
          PACK      KEY14,SAVLEDG,SAVCCOS,SP70   * account to delete
.
          PACK      FMRFREP,FMSUUD8A,SP70
          REP       " 0",FMRFREP
          PACK      KEY26,FMRFREP,OLDPPOS,Z5,KEY14,SP70
          CALL      DEFMRF1
.
          PACK      KEY28,SP70
          PACK      KEY14,SAVLEDG,SAVCCOS,SP70
          CALL      DEAC0000                     * delete account
.
          PACK      SKEY26,SAVLEDG,SAVCCOS,SP70
.
DELT1000  PACK      KEY26,SKEY26,SP70
          CALL      RSFMCF1
          CALL      RKFMCF1                      * get next record
          BRANCH    OVRCD,DELT1900
          MATCH     SAVLEDG,FMCFLEDG
          GOTO      DELT1900 IF NOT EQUAL
          MATCH     SAVCCOS,FMCFCCOS
          GOTO      DELT1900 IF NOT EQUAL
.
          DISPLAY   *P1:24,"Deleting : ":
                    *V2LON,FMCFLEDG,SLASH,FMCFSCOS,*EF;
.
          PACK      KEY26,FMCFLEDG,FMCFCCOS,FMCFSCOS,SP70
          PACK      SKEY26,FMCFLEDG,FMCFCCOS,FMCFSCOS,SP70
.
          CALL      DEFMCF1                      * delete data from file
          PACK      KEY14,FMCFLEDG,FMCFSCOS,SP70
          CALL      RDFMCC1                      * get cc data
          BRANCH    OVRCD,DELT1000
.
          CALL      DEDT0000                     * delete data
          GOTO      DELT1000
.
DELT1900  
.
DELT9999  RETURN
.**********************************************************************
.  POST - Post data                                    Called By ML
.**********************************************************************
POST0000  PACK      KEY26,SAVLEDG,SAVCCOS,SP70
          UNPACK    KEY26,FMCFLEDG,FMCFCCOS,FMCFSCOS
          PACK      FMCFDESC,SAVCCOSD,SP70
          PACK      FMCFPPOS,SAVPPOS,SP70
          PACK      FMCFPRT,SAVPRT,SP70
          PACK      FMCFCRP,SAVCRP,SP70
          CALL      DEFMCF1
          CALL      WRFMCF1
.
          PACK      KEY14,SAVLEDG,SAVCCOS,SP70   * account to write
          PACK      FMAMDESC,SAVCCOSD,SP70       * account description
          MOVE      FIRSTLEV,FMAMCLEV            * set up default level
          CALL      RDFMAM1                      * keep old level is acct exists
          MOVE      "6",FMAMTYPE
.
          PACK      FMRFREP,FMSUUD8A,SP70
          REP       " 0",FMRFREP
          PACK      KEY26,FMRFREP,OLDPPOS,Z5,KEY14,SP70
          CALL      DEFMRF1
.
          PACK      FMRFREP,FMSUUD8A,SP70
          REP       " 0",FMRFREP
          PACK      KEY26,FMRFREP,SAVPPOS,Z5,KEY14,SP70
.
          PACK      FMRFPRT,SAVPRT,SP70
          PACK      FMRFCRP,SAVCRP,SP70
          CALL      CACC0000                     * create account
          MOVE      FMAMCLEV,CURLEVEL            * save current level
.
          PACK      SKEY26,SAVLEDG,SAVCCOS,SP70
.
POST1000  PACK      KEY26,SKEY26,SP70
          CALL      RSFMCF1
          CALL      RKFMCF1                      * get next record
          BRANCH    OVRCD,POST1900
          MATCH     SAVLEDG,FMCFLEDG
          GOTO      POST1900 IF NOT EQUAL
          MATCH     SAVCCOS,FMCFCCOS
          GOTO      POST1900 IF NOT EQUAL
.
          DISPLAY   *P1:24,"Processing : ":
                    *V2LON,FMCFLEDG,SLASH,FMCFSCOS,*EF;
.
          PACK      KEY26,FMCFLEDG,FMCFCCOS,FMCFSCOS,SP70
          PACK      SKEY26,FMCFLEDG,FMCFCCOS,FMCFSCOS,SP70
          CALL      RDNEZA1
          BRANCH    OVRCD,POST1500          * does cc exist on temp file
          BRANCH    XFLAG,POST1500          * force update of each cc
.
          MATCH     OLDCCOSD,SAVCCOSD       * check if we want to del all crap ?
          GOTO      POST1500 IF NOT EQUAL
          MATCH     OLDPPOS,SAVPPOS
          GOTO      POST1500 IF NOT EQUAL
.
          CALL      DENEZA1
          GOTO      POST1000
.
POST1500  CALL      DEFMCF1                      * delete data from file
          PACK      KEY14,FMCFLEDG,FMCFSCOS,SP70
          CALL      RDFMCC1                      * get cc data
          BRANCH    OVRCD,POST1000
.
          CALL      DEDT0000                     * delete data
          GOTO      POST1000
.
POST1900  PACK      SKEY26,SAVLEDG,SAVCCOS,SP70
.
POST2000  PACK      KEY26,SKEY26,SP70
          CALL      RSNEZA1
          CALL      RKNEZA1                      * get next record
          BRANCH    OVRCD,POST9999
          MATCH     SAVLEDG,NEZALEDG
          GOTO      POST9999 IF NOT EQUAL
          MATCH     SAVCCOS,NEZACCOS
          GOTO      POST9999 IF NOT EQUAL
          DISPLAY   *P1:24,"Processing : ":
                    *V2LON,NEZALEDG,SLASH,NEZASCOS,*EF;
.
          PACK      KEY26,NEZALEDG,NEZACCOS,NEZASCOS,SP70
          PACK      SKEY26,NEZALEDG,NEZACCOS,NEZASCOS,SP70
          UNPACK    KEY26,FMCFLEDG,FMCFCCOS,FMCFSCOS
          UNPACK    SP70,FMCFDESC,FMCFPPOS,FMCFPRT,FMCFCRP
          CALL      DEFMCF1
          CALL      WRFMCF1
.
          PACK      KEY14,NEZALEDG,NEZASCOS,SP70
          CALL      RDFMCC1                      * get cc data
          BRANCH    OVRCD,POST2000
.
          CALL      UPDT0000                     * do update
          GOTO      POST2000
.
POST9999  RETURN
.**********************************************************************
.  UPDT - Post Data                                    Called By POST
.**********************************************************************
UPDT0000  PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
          MOVE      "000",FMAMCLEV
          CALL      RDFMAM1
          MATCH     CURLEVEL,FMAMCLEV
          GOTO      UPDT1100 IF LESS             * check consol cc level ok
.
          PACK      KEY3,FMAMCLEV,SP70           * get next level
          MOVE      "999",FMLVCODE
          CALL      RSFMLV1
          CALL      RKFMLV1
.
          PACK      KEY14,SAVLEDG,SAVCCOS,SP70
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          BRANCH    OVRCD,UPDT9999               * record should be there !!!
          MOVE      FMLVCODE,FMAMCLEV
          MOVE      FMLVCODE,CURLEVEL
          CALL      UPFMAM1
.
UPDT1100  PACK      KEY33,SAVLEDG,SAVCCOS,FMCCPPOS,FMCCLEDG,FMCCCOCE,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          MOVE      ZERO,FMTCADDT
          MOVE      ZERO,FMTCPOST
          CALL      DEFMTC1
          CALL      WRFMTC1
.
          MOVE      FMTCTLED,TOTLEDG
          MOVE      FMTCTACC,TOTACCNT
..          CALL      SETU0000           * write record for total account update
.
.         -----     Xref loop     -----
.
          PACK      KEY31,FMCCLEDG,FMCCCOCE,SP70
          CALL      RSFMXC3
.
UPDT2000  CALL      RKFMXC3
          BRANCH    OVRCD,UPDT9999               * no more records ?
          MATCH     FMXCLED,FMCCLEDG             * out of range ?
          GOTO      UPDT9999 IF NOT EQUAL
          MATCH     FMXCCOS,FMCCCOCE             * out of range ?
          GOTO      UPDT9999 IF NOT EQUAL
          DISPLAY   *P30:24,*V2LON,FMXCSUB,*EL;
.
          PACK      KEY14,FMXCLED,FMXCSUB,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,UPDT2000               * subjective missing ?
.
          PACK      COSTCODE,FMXCCOS,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          CALL      BCOD0000                     * build old code
          PACK      DIMA14,SAVLEDG,ACCOUNT,SP70  * account to get defaults from
.
          PACK      COSTCODE,SAVCCOS,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          CALL      BCOD0000                     * build new code
          PACK      DIMB14,SAVLEDG,ACCOUNT,SP70  * account to write
.
          MOVE      ZERO,F1                      * use subj desc unless typ 1or2
          MOVE      FMSASTYP,F1
          BRANCH    F1,UPDT2100,UPDT2100
          MOVE      "1",FMSADTYP
.
UPDT2100  
          PACK      FMCCADES,SAVCCOSD,SP70       * get description
          PACK      FMCCDESC,SAVCCOSD,SP70
          CALL      BDES0000
.
          PACK      DIMD35,FMAMDESC,SP70         * account description
          PACK      DIMC5,FMSAPPOS,SP70          * account sequence
.
          CALL      CCON0000                     * create account
.
          MATCH     "7",FMAMTYPE
          GOTO      UPDT2000 IF EQUAL            * heading account ?
.
          MOVE      FMAMTYPE,F1                  * write total calc rec
          LOAD      FMTCPOST,F1,ZERO,ZERO,ZERO,ZERO,ZERO,ONE,ZERO,ZERO,ONE
          MOVE      ZERO,FMTCADDT
          PACK      KEY33,DIMB14,DIMC5,DIMA14,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          CALL      DEFMTC1
          CALL      WRFMTC1
.
          MOVE      FMTCTLED,TOTLEDG
          MOVE      FMTCTACC,TOTACCNT
..          CALL      SETU0000           * write record for total account update
          GOTO      UPDT2000
.
UPDT9999  RETURN
.**********************************************************************
.  DEDT - Delete Data                                  Called By POST
.**********************************************************************
DEDT0000  PACK      KEY33,SAVLEDG,SAVCCOS,FMCCPPOS,FMCCLEDG,FMCCCOCE,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          CALL      DEFMTC1
.
          MOVE      FMTCTLED,TOTLEDG
          MOVE      FMTCTACC,TOTACCNT
..          CALL      SETU0000           * write record for total account update
.
.         -----     Xref loop     -----
.
          PACK      KEY31,FMCCLEDG,FMCCCOCE,SP70
          CALL      RSFMXC3
.
DEDT2000  CALL      RKFMXC3
          BRANCH    OVRCD,DEDT9999               * no more records ?
          MATCH     FMXCLED,FMCCLEDG             * out of range ?
          GOTO      DEDT9999 IF NOT EQUAL
          MATCH     FMXCCOS,FMCCCOCE             * out of range ?
          GOTO      DEDT9999 IF NOT EQUAL
          DISPLAY   *P30:24,*V2LON,FMXCSUB,*EL;
.
          PACK      KEY14,FMXCLED,FMXCSUB,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,DEDT2000               * subjective missing ?
.
          PACK      COSTCODE,FMXCCOS,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          CALL      BCOD0000                     * build old code
          PACK      DIMA14,SAVLEDG,ACCOUNT,SP70  * account to get defaults from
.
          PACK      COSTCODE,SAVCCOS,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          CALL      BCOD0000                     * build new code
          PACK      DIMB14,SAVLEDG,ACCOUNT,SP70  * account to write
.
          PACK      KEY28,DIMA14,DIMB14,SP70
          PACK      KEY14,DIMB14,SP70
          CALL      DEAC0000
.
          MOVE      FMTCTLED,TOTLEDG
          MOVE      FMTCTACC,TOTACCNT
..          CALL      SETU0000           * write record for total account update
          GOTO      DEDT2000
.
DEDT9999  RETURN
.**********************************************************************
.  DEAC - delete an account if not required              Called By DEDT
.        Requires - KEY14    (ledger/account)
.                   KEY28    (sub ledger/account/tot ledger/account)
.**********************************************************************
DEAC0000  PACK      KEY33,KEY28,SP70
          CALL      RSFMTC2
          CALL      RPFMTC2
.
DEAC0100  CALL      RKFMTC2
          BRANCH    OVRCD,DEAC0900
          PACK      KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ,SP70
          MATCH     KEY33,KEY28
          GOTO      DEAC0900 IF NOT EQUAL
          CALL      DEFMTC2
          CALL      RSFMTC2
          GOTO      DEAC0100
.
DEAC0900  UNPACK    KEY14,LEDGER,ACCOUNT
          CALL      GCOD0000                * break up account code
          PACK      KEY26,SAVLEDG,SAVCCOS,SP70
          CALL      RSFMCF1
.
DEAC1000  CALL      RKFMCF1                 * look in current ccc for this subj
          BRANCH    OVRCD,DEAC9000          * no more cost centres in ccc ?
          MATCH     SAVLEDG,FMCFLEDG
          GOTO      DEAC9000 IF NOT EQUAL
          MATCH     SAVCCOS,FMCFCCOS
          GOTO      DEAC9000 IF NOT EQUAL
.
          PACK      KEY26,SAVLEDG,FMCFSCOS,SUBJCODE,SP70
          CALL      RDFMXC1
          BRANCH    OVRCD,DEAC1000          * subjective required ? (0=yes) 
.
          GOTO      DEAC9999                * account required
.
DEAC9000  PACK      KEY14,LEDGER,ACCOUNT
          CALL      DEFMAM1                 * delete account
          PACK      KEY26,KEY14,SP70
.
DEAC9100  CALL      RSFMRF2                 * delete from FMSRSFAF
          CALL      RKFMRF2
          BRANCH    OVRCD,DEAC9999
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
.
          MATCH     KEY14,KEY26
          GOTO      DEAC9999 IF NOT EQUAL
.
          CALL      DEFMRF2
          GOTO      DEAC9100
.
DEAC9999  RETURN
.**********************************************************************
.  CCON - Create accounts                              Called By UPDT
.        Requires - DIMA14   (account to get defaults from)
.                   DIMB14   (account to write)
.                   DIMC5    (account sequence)
.                   DIMD35   (account description)
.**********************************************************************
CCON0000  PACK      KEY14,DIMA14,SP70            * get account level
          MOVE      SIX,FMAMTYPE
          MOVE      "000",FMAMCLEV
          CALL      RDFMAM1
          MATCH     "7",FMAMTYPE
          GOTO      CCON1000 IF EQUAL            * keep current level if heading
.
          PACK      KEY3,FMAMCLEV,SP70           * otherwise get next level
          MOVE      "999",FMLVCODE
          CALL      RSFMLV1
          CALL      RKFMLV1
          MOVE      FMLVCODE,FMAMCLEV
.
CCON1000  MOVE      SP70,FMRFPRT                 * get account print code
          PACK      FMRFREP,FMSUUD8A,SP70
          REP       " 0",FMRFREP
....      PACK      KEY26,SAVLEDG,SAVCCOS,FMRFREP,SP70
          PACK      KEY26,DIMA14,FMRFREP,SP70
          CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,CCON1100
.
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          MATCH     KEY14,KEY26
          GOTO      CCON1100 IF EQUAL
.
          MOVE      SP70,FMRFPRT
.
CCON1100  PACK      KEY14,DIMB14,SP70
          PACK      KEY26,FMSUUD8A,SAVPPOS,DIMC5,DIMB14,SP70
          MOVE      DIMD35,FMAMDESC
          MOVE      FMAMTYPE,F1
          LOAD      F1,F1,SIX,SIX,SIX,SIX,SIX,SIX,SEVEN,NINE,NINE
          MOVE      F1,FMAMTYPE
          CALL      CACC0000                     * create account
.
CCON9999  RETURN
.**********************************************************************
.  CACC - Create account                              Called By lots
.        Requires - KEY14         (key for fmsamaaf (ledger/account))
.                   FMAMDESC      (account desc)
.                   FMAMTYPE      (account type)
.                   FMAMCLEV      (account report level)
.               If not a posting account
.                   KEY26         (report seq key for fmsrsfa1)
.                   FMRFPRT       (print code for report seq)
.**********************************************************************
CACC0000  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          PACK      FMAMSEC,SP70
          PACK      FMAMREF1,SP70
          PACK      FMAMREF2,SP70
          PACK      FMAMREF3,SP70
          PACK      FMAMREF4,SP70
          PACK      FMAMDAT1,CCC,SP70
          PACK      FMAMDAT2,CCC,SP70
          PACK      FMAMDAT3,CCC,SP70
          PACK      FMAMDAT4,CCC,SP70
          PACK      FMAMCOD1,SP70
          PACK      FMAMCOD2,SP70
          PACK      FMAMCOD3,SP70
          PACK      FMAMCOD4,SP70
          MOVE      ZERO,FMAMAMT1
          MOVE      ZERO,FMAMAMT2
          MOVE      ZERO,FMAMAMT3
          MOVE      ZERO,FMAMAMT4
          MOVE      ZERO,FMAMSTAT
          MOVE      ZERO,FMAMCTRL
          MOVE      ZERO,FMAMASST
          MOVE      ZERO,FMAMPPT
          MOVE      ZERO,FMAMONC
          PACK      FMAMONCC,SP70
          PACK      FMAMCHEQ,SP70
          MOVE      ZERO,FMAMOBAL
          PACK      FMAMBDAT,SP70
          PACK      FMAMDPLA,TWO,SP70
          PACK      FMAMUNIT,SP70
          MOVE      ZERO,FMAMAYTD
          MOVE      ONE,FMAMMULT
          MOVE      ONE,FMAMDIV
          PACK      FMAMDPRO,SP70
          PACK      FMAMSPAR,SP70
          PACK      FMAMLOCK,SP70
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      DEFMAM1
          CALL      WRFMAM1
.
          MOVE      FMAMTYPE,F1             * check not posting account
          BRANCH    F1,CACC9000,CACC9000,CACC9000,CACC9000,CACC9000:
                       CACC5000,CACC5000,CACC9000,CACC5000
.
CACC5000  UNPACK    KEY26,FMRFREP,FMRFPOS,FMRFSEQ,FMRFLED,FMRFACC
          REP       " 0",FMRFREP
          PACK      KEY26,FMRFREP,FMRFPOS,FMRFSEQ,FMRFLED,FMRFACC,SP70
          CALL      DEFMRF1                 * write to report sequence file
          CALL      WRFMRF1
.
CACC9000  
.
CACC9999  RETURN
.****************************************************************************
.  BCOD - get account code from subjective and cost codes    Called by lots
.        Requires - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD2B  (separater char)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - ACCOUNT   (account code)
.****************************************************************************
BCOD0000  STORE     COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      ACCOUNT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          COMPARE   FMSUUD2A,ONE
          GOTO      BCOD1000 IF NOT EQUAL         * separator char in use ?
.
          PACK      ACCOUNT,ACCOUNT,FMSUUD2B      * include sep. char
.
BCOD1000  PACK      ACCOUNT,ACCOUNT,SUBJCODE,SP70 * add subj code
.
BCOD9999  RETURN
.****************************************************************************
.  BDES - get account desc from subjective and cost codes    Called by lots
.        Requires - FMSADTYP  (subjective desc type)
.                   FMSAADES  (subjective code abbrev desc)
.                   FMSADESC  (subjective code desc)
.                   FMCCADES  (cost centre code abbrev desc)
.                   FMCCDESC  (cost centre code desc)
.                   FMSUUD6A  (subjective code desc length)
.        Returns  - FMAMDESC  (account code desc)
.****************************************************************************
BDES0000  MOVE      ZERO,F1
          MOVE      FMSADTYP,F1
          BRANCH    F1,BDES1000,BDES2000
          STORE     FMCCADES,FMSUUD6A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12:
                                      KEY13,KEY14,KEY15,KEY16,KEY17,KEY18:
                                      KEY19,KEY20,KEY21,KEY22,KEY23,KEY24:
                                      KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                                      KEY31,KEY32,KEY33,KEY34,KEY35
          LOAD      FMAMDESC,FMSUUD6A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12:
                                      KEY13,KEY14,KEY15,KEY16,KEY17,KEY18:
                                      KEY19,KEY20,KEY21,KEY22,KEY23,KEY24:
                                      KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                                      KEY31,KEY32,KEY33,KEY34,KEY35
.
          PACK      FMAMDESC,FMAMDESC,SP1,FMSAADES,SP70 * add cost centre desc
          GOTO      BDES9999
.
BDES1000  PACK      FMAMDESC,FMSADESC,SP70
          GOTO      BDES9999
.
BDES2000  PACK      FMAMDESC,FMCCDESC,SP70
.
BDES9999  RETURN
.******************************************************************************
.* SETU - write record for total account update                               *
.******************************************************************************
SETU0000  COMPARE   ONE,FMCOCALC
          GOTO      SETU9999 IF NOT EQUAL
.
          PACK      KEY14,TOTLEDG,TOTACCNT,SP70
          CALL      RDFMAM1            * account exists ?
          BRANCH    OVRCD,SETU9999
.
          PACK      KEY20,PORT,SP4,TOTLEDG,TOTACCNT
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      SETU9999 IF EQUAL
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
SETU9999  RETURN
.**********************************************************************
.  WTMA - clear temp file                              Called By lots
.**********************************************************************
WTMA0000  CALL      DTMA0000           * clear temp file
.
          PACK      KEY26,SAVLEDG,SAVCCOS,SP70
          PACK      KEY14,SAVLEDG,SAVCCOS,SP70
          CALL      RSFMCF1            * get existing data
.
WTMA0100  CALL      RKFMCF1            * get next record
          BRANCH    OVRCD,WTMA9999     * no more records ?
          PACK      KEY26,FMCFLEDG,FMCFCCOS,FMCFSCOS,SP70
          MATCH     KEY26,KEY14
          GOTO      WTMA9999 IF NOT EQUAL
.
          UNPACK    KEY26,NEZALEDG,NEZACCOS,NEZASCOS
          CALL      DENEZA1
          CALL      WRNEZA1
          GOTO      WTMA0100
.
WTMA9999  RETURN
.**********************************************************************
.  DTMA - clear temp file                              Called By lots
.**********************************************************************
DTMA0000  PACK      KEY26,SP70
.
DTMA0100  CALL      RSNEZA1
          CALL      RKNEZA1            * get next record
          BRANCH    OVRCD,DTMA9999     * no more records ?
.
          PACK      KEY26,NEZALEDG,NEZACCOS,NEZASCOS,SP70
          CALL      DENEZA1
          GOTO      DTMA0100
.
DTMA9999  RETURN
.****************************************************************************
.  GCOD - get subjective and cost codes from account code    Called by lots
.        Requires - ACCOUNT   (account code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.**********************************************************************
. NEZTMP0A IO routines                           Called by Lots
.**********************************************************************
RSNEZA1   RESET     KEY26
          READ      NEZTMP0A,KEY26;;
          RETURN
.
RANEZA1   RESET     KEY26
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY26;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZA1   RESET     KEY26
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY26;NEZALEDG,NEZACCOS,NEZASCOS
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZA1   MOVE      ZERO,OVRCD
          READKS    NEZTMP0A;NEZALEDG,NEZACCOS,NEZASCOS
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZA1   MOVE      ZERO,OVRCD
          READKP    NEZTMP0A;NEZALEDG,NEZACCOS,NEZASCOS
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZA1   UPDATE    NEZTMP0A;NEZALEDG,NEZACCOS,NEZASCOS
          RETURN
.
WRNEZA1   RESET     KEY26
          WRITE     NEZTMP0A,KEY26;NEZALEDG,NEZACCOS,NEZASCOS
          RETURN
.
DENEZA1   RESET     KEY26
          DELETE    NEZTMP0A,KEY26
          RETURN
.
.******************************************************************************
. Redisplays
.******************************************************************************
RCCAFM00
RCCCFM00
RLMAFM00
RPRCFM00
          BRANCH    SCRNO,RDISA000
          CALL      DHED0000
          GOTO      RZZZFM99
.
RDISA000  CALL      DHED0000
          CALL      SCRA0000
          CALL      DATA0000
          GOTO      RZZZFM99
.
RZZZFM99  RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSBPFIO/INC       * Budget Profiles
          INC       FMSCCAIO/INC       * cost centre
          INC       FMSCCCIO/INC       * consol cost centre
          INC       FMSLEVIO/INC       * level
          INC       FMSPRCIO/INC       * print code
          INC       FMSRSFIO/INC       * report seq
          INC       FMSSBAIO/INC       * subjective
          INC       FMSXCSIO/INC       * xref
.
          INC       FMSLMAKY           * ledger
          INC       FMSCCAKY           * cost centre
          INC       FMSCCCKY           * consol cost centre
          INC       FMSPRCKY           * print code
.
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * FMS audit update routines 
