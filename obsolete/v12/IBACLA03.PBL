.******************************************************************************
.* System         : Clinical Audit                                            *
.* Program        : IBACLA03                                                  *
.* Desc           : Input Clinical Audit Details                              *
.******************************************************************************
.* Date           : 12/03/1992                                                *
.* Author         : Justin Coates                                             *
.* Function       : This program allows the input of Clinical Audit Details   *
.* Modifications  :                                                           *
.*        V11.03.01 20.03.2023  DA Sarkies           TSK 0909393              *
.*                  Added hospital name as key to theatre booking             *
.*        V11.00.01 04/03/2020  J.Tan                TSK 0838262              *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.07.01 29/10/2015  Ebon Clements    CAR 268970                   *
.*                  Change to use OUTCLIFD index 1 instead of index 2         *
.*        V10.02.01 07/07/2011  Steve Armstrong  CAR 240722                   *
.*                  Added RDPMPX21 prior to calling PMIHEAD                   *
.******************************************************************************
.*        V10.01.01 03/02/2011  Jill Parkinson CAR 233088                     *
.*                  Added PMSVX1FD                                            *
.******************************************************************************
.*        V9.03.01  29/12/2003  Sylvek Litewka  CAR 20222                     *
.*                  Modified procedures DPROV000 and DCAMBSX0 to read ICD     *
.*                  Disease file using IO routine RDPTICD1 and Discharge Date *
.*                  as ICDRDDTE.                                              *
.******************************************************************************
.*        V9.02.01  03/02/2003  Lina Vo                                       *
.*                  Remove open of outpreaf                                   *
.******************************************************************************
.*        V5.10.B01 26/03/2001  Glenn Saunders                                *
.*                  Remove all references to PATSUR file (old surname file).  *
.******************************************************************************
.*        V5.08.02  21/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.01  27/06/2000  Greg Horvat                                   *
.*                  Recompiled for PATICDKY - Validating ICD10 version 2 codes*
.*        V5.08.B02 16/03/2000  Steve Armstrong    5.08 Mods                  *
.*                  Mods for changes to OUTCLIFD (effective date)             *
.*        V5.08.B01 06/03/2000  Jill Habasque                                 *
.*                  Recompiled for STDKWSDF & STDKWSCD                        *
.******************************************************************************
.*        V5.07.04  06/11/1999  Greg Horvat                                   *
.*                  Recompiled for PATICDKY                                   *
.*        V5.07.03  19/10/1999  Steve Downing  SRF 646137                     *
.*                  Added PTCNDCQS - Single column for doctor code search     *
.*        V5.07.02  08/07/1999  Jill Habasque  SRF 645808                     *
.*                  Fixed to display the clinic if OPCNCLSU=0                 *
.*        V5.07.01  08/03/1999  Steve Armstrong                               *
.*                  Mods for ICD10 keyword search                             *
.*        V5.07.B02 11/12/1998  Glenn Berry      5.07 Changes                 *
.*                  Fixed I * L on pati10df                                   *
.******************************************************************************
.*        V5.07.00  26/10/1998    Jim Stathopoulos                            *
.*                  507 Changes                                               *
.******************************************************************************
.*        V5.03.02  29/11/95 J.Tan    SRF 640864                              *
.*                  Fixed problem when coded fields were not used sequentially*
.*        V5.03.01  13/07/1995    Justin Coates  SRF 640448                   *
.*                  made it use dispitem and scrckfld and removed stdscrio    *
.*                  so that form fields will be formatted correctly           *
.*        V5.03.B2  30/05/1995    Justin Coates  SRF 135603                   *
.*                  re-compile for PATDOCKY and fix display of name on line 2 *
.*        V5.03.B0  16/05/1995  Paul Howells         SRF 134950               *
.*                  Changed Priority Code to a hospital controlled code       *
.******************************************************************************
.*        V5.01.002 14/03/1992    Justin Coates                               *
.*                  Add Visit type and slot number to OP display              *
.*        V5.01.003 23/02/1993    Justin Coates                               *
.*                  add trainee and supervisor anaesthetist for Theatre audit *
.*        V5.01.004 26/02/1993    Justin Coates                               *
.*                  fix trainee and supervisor anaesthetist for Theatre audit *
.*        V5.01.005 02/03/1993    Darren Jones                                *
.*                  access session team if no case team                       *
.*        V5.01.006 22/04/93 DIG                                              *
.*                  Re-Compiled for changes to PATALERT.                      *
.*        V5.01.007 24/08/93  ROD                                             *
.*                  Re-Compiled for changes to NZHIS                          *
.*        V5.01.008 14/01/94 Paul Howells                                     *
.*                  Changes for global recompile.                             *
.*        V5.01.009 26/05/1994 Ian Rutt                                       *
.*                  Fixed Global Recompile Bugs                               * 
.******************************************************************************
.
          INC       STD001FD/PBL
          INC       NZHISIFD/INC                 * Include for NZHIS vars
          INC       PATNHIFD/INC                 * Include for NZHIS vars
          INC       PATNIDFD/INC                 * Include for NZHIS vars
          INC       AAEDE1FD/INC
          INC       BOKRC1FD/INC            * booking file
          INC       CLACATFD/INC
          INC       CLACODFD/INC
          INC       CLASITFD/INC
          INC       CLAVARFD/INC 
          INC       OPRCLIFD/INC
          INC       OPRDEAFD/INC
          INC       OPRDEBFD/INC
          INC       OPROPRFD/INC
          INC       OPRSESFD/INC
          INC       OUTBOAFD/INC
          INC       OUTCLIFD/INC
          INC       OUTCTYFD/INC
          INC       OUTDIAFD/INC
          INC       OUTPREFD/INC            * OP pre-attendance file
          INC       OUTSITFD/INC
          INC       PATALRFD/INC
          INC       PATCALAG/INC
          INC       PATCODFD/INC
          INC       PATCOMM/INC             * variables for surname search
          INC       PATCONFD/INC            * control file
          INC       PATDHEAD/INC
          INC       PATDICVR/INC
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC
          INC       PATGSRFD/INC            * Surname / Given Name File
          INC       PATICDFD/INC
          INC       PATITMFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PATNOBFD/INC
          INC       PATPR1FD/INC            * pre-admission file
          INC       PATTRNFD/INC
          INC       PATVISFD/INC
          INC       PATWR1FD/INC
          INC       SCRPSTFD/INC
          INC       SCRSBGFD/INC
          INC       SCRSLTFD/INC
.
.         program constants
.
ASTAT1    INIT      "Pre-Admission"
ASTAT2    INIT      "Inpatient    "
ASTAT3    INIT      "Discharged   "
ASTAT4    INIT      "On leave     "
ASTAT5    INIT      "Cancelled    "
BJDAY     FORM      3
CJDAY     FORM      3
CATCV     INIT      "CV"
CATEA     INIT      "EA"
CATEW     INIT      "EW"
CLAAUD    INIT      "CLAAUD"
DIM70     DIM       70
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
LASTVIS   FORM      "15"
MODER     INIT      "Moderate  "
NONURG    INIT      "Non-urgent"
PRGIDI    INIT      "IBACLAUD"    * program id for item file
SCNDGNAM  DIM       40
UNDLN50   INIT      "__________________________________________________"
URGENT    INIT      "Urgent    "
Z20       INIT      "zzzzzzzzzzzzzzzzzzzz"
Z30       INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
. for DISPITEM.PBL
.
ATT       DIM       80        * attribute string
AFTDECP   FORM      2  * After Decimal Place
AFTDECPF  FORM      2  * After Decimal Place Format String
BEFDECP   FORM      2  * Before Decimal Place
BEFDECPF  FORM      2  * Before Decimal Place Format String
DECIMALP  INIT      "."
FORM21    FORM      21
FORMAT21  FORM      21
PRINTVAR  DIM       80
LEFTBRAK  INIT      "("
LLCNT     FORM      5
SCRID     DIM       2         * screen id
VAR       DIM       80
.
.         program variables
.
ACCEPT    FORM      1
CALLPOSN  FORM      1
CKVISTYP  FORM      1         * the visit type to check for A&E,OP,IP,Theatre
CNTITEM   FORM      2
CODE      DIM       2             * for patdscod
CODEANAE  DIM       6         * anaesthetist code
CODESUPA  DIM       6         * supervising anae code
CODETRNA  DIM       6         * trainee anae code
DESCANAE  DIM       50        * anaesthetist code
DESCSUPA  DIM       50        * supervising anae code
DESCTRNA  DIM       50        * trainee anae code
DIM1A     DIM       1
DIM20     DIM       20
DIM3      DIM       3
DIM80     DIM       80            * for scrckman
DOCCODE   DIM       6 
DOCTNAM   DIM       41
FORM5     FORM      5
FORM8     FORM      8
HNUMDES   DIM       9
KEYFIELD  DIM       127
MAXRECS   FORM      2             * maximum records to write
NMPNUMB   DIM       20
OPCNCDSC  DIM       15 
OPCNCLSU  FORM      1  
OPCNCODE  FORM      1  
PRGIDB    DIM       8             * program id for background/selections
RANGE     FORM      1
SAVKEY9   DIM       9
SAVKEY13  DIM       13            * save key for insert mode
SCRIDB    DIM       2             * screen  id for backgroud/selections file
SVARCNT   FORM      2[10]         * count of times each audit variable appears
THEATRE   DIM       26[15]        * theatre visits for the UR number
THETUNIQ  DIM       10            * theatre unique id
VARBLENO  FORM      2             * variable number of item (1-20)
VARCNT    FORM      2[10]         * count of times each audit variable appears
VISITS    FORM      8[15]         * visits for the UR number
VISTYPE   DIM       13
.
.         storage arrays for the 20 possible values of each audit variable
.
CHGC      DIM       3[20]         * changeable codes code
CHGD      DIM       20[20]        * changeable codes desc
CODD      DIM       3[20]         * codes file
DATE      DIM       8[20]         * date
DOCT      DIM       6[20]         * doctors
FREE      DIM       50[20]        * free format
MBSI      DIM       9[20]         * MBS/ICD-9
NUMB      FORM      6.2[20]       * numeric
THET      DIM       6[20]         * theatres
TIME      DIM       5[20]         * time
.
PRGID     INIT      "IBACLA03"
PRGNAM    INIT      "Input Clinical Audits"
VERSION   INIT      "V12.00.00"
.
.*********************************************************************
.* ML0000 - Mainline Logic                                           *
.*********************************************************************
ML0000    CALL      INIT0000                * Initialise
.
ML1000    CALL      SITE0000                * Identify the Audit
          BRANCH    EXIT,ML9999             * Exit
.
ML2000    CALL      IPAT0000                * Get Patient
          GOTO      ML1000
.
ML9999    CHAIN     PGM
.
.*********************************************************************
.                   INIT0000
.         Initialize Routine
.*********************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P50:24,"Opening "
          DISPLAY   *P58:24,"clasitaf"
          OPEN      CLASITA1,"clasitaf"
.
          DISPLAY   *P58:24,"scrsbgaf";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P58:24,"scrpstaf";
          OPEN      SCRPSTA1,"scrpstaf"
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P58:24,"scrsltaf";
          OPEN      SCRSLTA1,"scrsltaf"
          OPEN      SCRSLTA2,"scrsltaf"
.
          DISPLAY   *P58:24,"controlf"
          OPEN      CONTROLF,"controlf"          * files to open
          DISPLAY   *P58:24,"aaede1af"
          OPEN      AAEDE1A1,"aaede1af"
          DISPLAY   *P58:24,"bokrc1af"
          OPEN      BOKRC1A1,"bokrc1af"
          OPEN      BOKRC1A6,"bokrc1af"
          DISPLAY   *P58:24,"outsitaf"
          OPEN      OUTSITA1,"outsitaf"
.         DISPLAY   *P58:24,"outpreaf"
.         OPEN      OUTPREA1,"outpreaf"
          DISPLAY   *P58:24,"patdschf"
          OPEN      PATDSCH1,"patdschf"
          DISPLAY   *P58:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          DISPLAY   *P58:24,"patmx1af"
          OPEN      PATMX1A1,"patmx1af"
          DISPLAY   *P58:24,"pmspx2af"
          OPEN      PMSPX2A1,"pmspx2af"
          DISPLAY   *P58:24,"patmi1af"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
          DISPLAY   *P58:24,"patpramf"
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
          DISPLAY   *P58:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
          DISPLAY   *P58:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
          DISPLAY   *P58:24,"patvisaf"
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
          DISPLAY   *P58:24,"pattranf"
          OPEN      PATTRAN1,"pattranf"
          OPEN      PATTRAN2,"pattranf"
          DISPLAY   *P58:24,"patnobef"
          OPEN      PATNOBE1,"patnobef"
          DISPLAY   *P58:24,"patwr1af"
          OPEN      PATWR1A1,"patwr1af"
          DISPLAY   *P58:24,"oprdetaf"
          OPEN      OPRDETA1,"oprdetaf"
          OPEN      OPRDETA2,"oprdetaf"
          DISPLAY   *P58:24,"oprcliaf"
          OPEN      OPRCLIA1,"oprcliaf"
.
          READ      CONTROLF,TEN5;*190,CKMBS
          READ      CONTROLF,TWENTY1;*247,PTCNDCQS
          READ      CONTROLF,THIRTY;*168,HNUMDES
          READ      CONTROLF,FORTY;*96,OPCNCDSC,OPCNCLSU,OPCNCODE
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D
          STRIP     OPCNCDSC
          MOVE      ONE,CNEWDS
          MOVE      ONE,CDEFDTE
          PACK      DSICDDTE,CCC,CYY,CMM,CDD
          REP       " 0",DSICDDTE
.
INIT2000  OPEN      PATGSRN1,"patgsrnf"     * surname & given name
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
.
INIT9999  RETURN
.
.*********************************************************************
.                   SITE0000
.         Get Clinical Audit Site
.*********************************************************************
SITE0000  DISPLAY   *P20:1,*HON,CNAME
          CALL      KYCLASIT                * enter site
          BRANCH    EXIT,SITE9999           * no code entered
.
          DISPLAY   *P20:1,*HON,CASTDESC         * display site name
          MOVE      THREE,CKVISTYP          * default to inpatient
          MOVE      CASTTYPE,FORM1          * get the visit type
          LOAD      CKVISTYP,FORM1,TWO,ONE,FOUR
.
SITE9999  RETURN
.
.*********************************************************************
.                   IPAT0000                    Called by : ML2000
.         identify the patient
.*********************************************************************
IPAT0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF,". Exit":
                    *P1:5,*V2LON,"1",*HOFF,". Visit Number":
                    *P1:6,*V2LON,"2",*HOFF,". U/R Number":
                    *P1:8,"Select option : "
.
IPAT1000  KEYIN     *P17:8,*DV,UNDLN1:
                    *P17:8,*V2LON,MOPTION
          BRANCH    MOPTION,IPAT2000,IPAT5000
          COMPARE   ZERO,MOPTION
          GOTO      IPAT9100 IF EQUAL       * exit
          BEEP
          GOTO      IPAT1000
.
. ******* by visit number *******
.
IPAT2000  CALL      VIST0000                * enter visit number
          BRANCH    EXIT,IPAT0000           * no number entered
.
          CALL      GIAP0000                * get patient information
          BRANCH    EXIT,IPAT2000           * invalid patient
.
          CALL      PROC0000                * enter details
          GOTO      IPAT2000
.
. ******* by U/R Number *******
.
IPAT5000  CALL      GURN0000                * enter UR number
          BRANCH    EXIT,IPAT0000           * no number entered
.
          PERFORM   CKVISTYP,DVIS0000,DVIS0000,DVIS0000,DOPR0000
.                            A&E      OP       IP       Theatre
          GOTO      IPAT5000
          
IPAT9100  MOVE      ONE,EXIT
.
IPAT9999  RETURN
+
.****************************************************************************
.*                                GURN0000                                  *
.*                            Keyin U/R number                              *
.****************************************************************************
GURN0000  MOVE      FALSE,EXIT
          DISPLAY   *P1:3,*EF:
                    *P1:4,"U/R Number   : ":
                    *P16:4,UNDLN8;
          MOVE      TEN6,CCOL
          MOVE      FOUR,CVERT
          MOVE      THREE,SRCHOPT
          MOVE      ZERO,SRCHSYS
          CALL      KURN                          * keyin U/R Number
          BRANCH    EXIT,GURN9000
          BRANCH    OVRCD,GURN8000
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,GURN8000
.
          DISPLAY   *P1:3,*EF:
                    *P1:4,"U/R Number   : ",*V2LON,PURNO;
          OPEN      BOKRC1A6,"bokrc1af"                 * reopen as PATSRCH closed it
          GOTO      GURN9999
.
.------ U/R number not on file ------
.
GURN8000  DISPLAY   *P1:24,*EL,*B,"Invalid UR Number.  ";
          CALL      HITENTER
          GOTO      GURN0000
.
.------ No U/R entered, set EXIT flag ------
.
GURN9000  MOVE      TRUE,EXIT
.
GURN9999  RETURN
+
.*********************************************************************
.*                  DVIS0000                    Called by : GPAT1000 *
.*        Display all the visits for the selected patient            *
.*********************************************************************
DVIS0000  CALL      PMIHEAD                 * Display 2 Line PMI Heading
          CALL      CLRA0000                * clear storage variables
          MOVE      ONE,CPAGENO             * set page
          MOVE      ZERO,CNTITEM            * clear count
.
          MOVE      "7",CVERT               * starting line
          CALL      VSHR0000                * display appropriate header
          PACK      KEY24,PURNO,Z20
          CALL      RDSVISA2
.
. ******* loop over file *******
.
DVIS1000  CALL      RDPVISA2
          BRANCH    OVRCD,DVIS5000          * end of file
.
          MATCH     PURNO,PVIURNO
          GOTO      DVIS5000 IF NOT EQUAL   * diff. pat
.
          COMPARE   PVITYPE,CKVISTYP
          GOTO      DVIS1000 IF NOT EQUAL   * wrong visit type
.
. ******* increment counters *******
.
DVIS2000  ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      DVIS4000 IF NOT LESS    * need a new page
          ADD       ONE,CNTITEM             * add to item counter
.
. ******* display data and store key *******
.
DVIS3000  PERFORM   PVITYPE,DETA0000,DETO0000,DETI0000
          MOVE      PVIBILL,VISITS[CNTITEM]
          GOTO      DVIS1000
.
. ******* new screen needed *******
.
DVIS4000  BRANCH    CPAGENO,DVIS4500
.
.         Middle pages : (N)ext & (P)revious
.
DVIS4100  MOVE      ONE,CALLPOSN            * set position
          CALL      KEYA0000
          BRANCH    EXIT,DVIS7000,DVIS0000,DVIS9100
.                        Next     First    Exit
          GOTO      DVIS6000
.
.         first page : (N)ext
.
DVIS4500  MOVE      TWO,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DVIS7000,DVIS5900,DVIS9100
.                        Next     First    Exit
          GOTO      DVIS6000
.
. ******* no more data to display *******
.
DVIS5000  COMPARE   ZERO,CNTITEM
          GOTO      DVIS8900 IF EQUAL       * no visits displayed
.
          BRANCH    CPAGENO,DVIS5500
.
.         last page : (P)revious
.
DVIS5100  MOVE      THREE,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DVIS5900,DVIS0000,DVIS9100
.                        Next     First    Exit
          GOTO      DVIS6000
.
.         first page :
.
DVIS5500  MOVE      FOUR,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DVIS5900,DVIS5900,DVIS9100
.                        Next     First    Exit
          GOTO      DVIS6000
.
DVIS5900  BEEP   
DVIS5910  BRANCH    CALLPOSN,DVIS4100,DVIS4500,DVIS5100,DVIS5500
.
. ******* item on screen selected *******
.
DVIS6000  MOVE      VISITS[FORM2],KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,DVIS5900          * invalid
.
          CALL      GIAP0000                * get all info about patient
          BRANCH    EXIT,DVIS5910           * invalid patient
.
          CALL      PROC0000                * process the patient selected
          GOTO      DVIS0000
.
. ******* set up for a new page *******
.
DVIS7000  CALL      CLRA0000                * clear storage variables
          ADD       ONE,CPAGENO             * add to page counter
          MOVE      ONE,CNTITEM             * reset item counter
          MOVE      "8",CVERT               * set row
          DISPLAY   *P1:CVERT,*EF           * clear screen
          GOTO      DVIS3000
.
DVIS8900  DISPLAY   *P1:24,*B,"No visits for this patient.  ",*EL;
          CALL      HITENTER
.
. ******* set exit flags *******
.
DVIS9100  MOVE      ONE,EXIT                * exit selected
.
DVIS9999  RETURN
+
.*********************************************************************
.*                  DOPR0000                    Called by : GPAT4000 *
.*        Display all the visits for the selected patient            *
.*********************************************************************
DOPR0000  CALL      PMIHEAD
          CALL      CLRB0000                * clear storage variables
          MOVE      ONE,CPAGENO             * set page
          MOVE      ZERO,CNTITEM            * clear count
          MOVE      "7",CVERT               * starting line
          MOVE      "15",CCOL1              * date display row
          CALL      VSHR0000                * display appropriate header
          PACK      KEY16,PURNO,SP20
          CALL      RSBKREC6
.
. ******* loop over file *******
.
DOPR1000  CALL      RKBKREC6
          BRANCH    OVRCD,DOPR5000          * end of file
.
          MATCH     PURNO,BKREURNO
          GOTO      DOPR5000 IF NOT EQUAL   * diff. pat
.
          PACK      KEY31,BKREBOOK,ZERO,SP30
          CALL      RSOPDEA2
.
DOPR1500  CALL      RKOPDEA2
          BRANCH    OVRCD,DOPR1000          * end of file
. 
          MOVE      OPDAADMN,FORM8
          COMPARE   BKREBOOK,FORM8
          GOTO      DOPR1000 IF NOT EQUAL   * different patient
          COMPARE   THREE,OPDASTAT
          GOTO      DOPR1500 IF EQUAL       * cancelled booking
.
. ******* increment counters *******
.
DOPR2000  ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      DOPR4000 IF NOT LESS    * need a new page
          ADD       ONE,CNTITEM             * add to item counter
.
. ******* display data and store key *******
.
DOPR3000  CALL      DETT0000
          PACK      THEATRE[CNTITEM],OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN:
                                     OPDASTAT,OPDACASE
          GOTO      DOPR1500
.
. ******* new screen needed *******
.
DOPR4000  BRANCH    CPAGENO,DOPR4500
.
.         Middle pages : (N)ext & (P)revious
.
DOPR4100  MOVE      ONE,CALLPOSN            * set position
          CALL      KEYA0000
          BRANCH    EXIT,DOPR7000,DOPR0000,DOPR9100
.                        Next     First    Exit
          GOTO      DOPR6000
.
.         first page : (N)ext
.
DOPR4500  MOVE      TWO,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DOPR7000,DOPR5900,DOPR9100
.                        Next     First    Exit
          GOTO      DOPR6000
.
. ******* no more data to display *******
.
DOPR5000  COMPARE   ZERO,CNTITEM
          GOTO      DOPR8900 IF EQUAL       * no visits displayed
.
          BRANCH    CPAGENO,DOPR5500
.
.         last page : (P)revious
.
DOPR5100  MOVE      THREE,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DOPR5900,DOPR0000,DOPR9100
.                        Next     First    Exit
          GOTO      DOPR6000
.
.         first page :
.
DOPR5500  MOVE      FOUR,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DOPR5900,DOPR5900,DOPR9100
.                        Next     First    Exit
          GOTO      DOPR6000
.
DOPR5900  BEEP   
          BRANCH    CALLPOSN,DOPR4100,DOPR4500,DOPR5100,DOPR5500
.
. ******* visit selected *******
.
DOPR6000  MOVE      THEATRE[FORM2],KEY26
          CALL      RDOPDEA1
          BRANCH    OVRCD,DOPR5900          * invalid
.
          MOVE      OPDAADMN,PVIBILL        * set visit number
          MOVE      OPDAUNIQ,THETUNIQ       * set unique id
          CALL      CLAGTANS                * get anaesthetist
          CALL      THETHEAD                * display header
.
          CALL      PROC0000
          GOTO      DOPR0000
.
. ******* set up for a new page *******
.
DOPR7000  CALL      CLRA0000                * clear storage variables
          ADD       ONE,CPAGENO             * add to page counter
          MOVE      ONE,CNTITEM             * reset item counter
          MOVE      "8",CVERT               * set row
          DISPLAY   *P1:CVERT,*EF           * clear screen
          GOTO      DOPR3000
.
DOPR8900  DISPLAY   *P1:24,*B,"No visits for this patient.  ",*EL;
          CALL      HITENTER
.
. ******* set exit flags *******
.
DOPR9100  MOVE      ONE,EXIT                * exit selected
.
DOPR9999  RETURN
+
.*********************************************************************
.                   PROC0000                    Called by : IPAT2000
.         do the processing for the patient     DOPR6000    DVIS6000
.*********************************************************************
PROC0000  CALL      OPFA0000                * open files
          CALL      CSTO0000                * clear the arrays
          CALL      CCTA0000                * clear count arrays
.
. ------- process for screen one -------
.
          PACK      PRGIDB,CLAAUD,CASTFILE  * Background Program Id
          MOVE      "01",SCRIDB             * Background Screen Id
          MOVE      PRGIDB,PRGID            * set program id
          MOVE      SCRIDB,SCRID            * set screen id
          DISPLAY   *P1:8,*EF;
          CALL      DSPBGRND                * Display Screen background
          BRANCH    EXIT,PROC9100           * no screen set up
.
.         now see if any details are on file and goto insert/change mode
.
          CALL      DDOF0000                * display the disp only fields
          CALL      CHIN0000                * see if change/insert mode
          IF        ACCEPT = 1
            CALL      INSM0000                * insert mode
          ELSE
            CALL      DCAVR000                * display the current data
          ENDIF
          BRANCH    EXIT,PROC9999           * exitchar entered
.
          MOVE      ZERO,MAXRECS            * clear max records displayed
          CALL      CMXR0000                * get the maximum number of records
.
. ******* change mode *******
.
PROC5000  CALL      CHGE0000                * change details for screen 1
          BRANCH    EXIT,PROC9999           * cancel selected
.
          BRANCH    CASTSCRN,PROC8000       * only one screen
.
. ------- process for screen two -------
.
          MOVE      "02",SCRIDB             * set to screen two
          MOVE      SCRIDB,SCRID            * set screen id
          DISPLAY   *P1:8,*EF;
          CALL      DSPBGRND                * Display Screen background
          BRANCH    EXIT,PROC9100           * no screen set up
.
          CALL      RVCT0000                * restore the variable count values
          CALL      DDOF0000                * display the disp only fields
.
          IF        ACCEPT = 1
            CALL      INSM0000                * insert mode
          ELSE
            CALL      DCAVR000                * display the current data
          ENDIF
          BRANCH    EXIT,PROC9999           * exitchar entered
          CALL      CMXR0000                * calculate the max. records
.
          CALL      CHGE0000                * change details for screen 2
          BRANCH    EXIT,PROC9999           * cancel selected
.
.         post the details to CLAVARFD
.
PROC8000  MOVE      CASTFILE,CAVRSITE       * set site
          MOVE      PVIBILL,CAVRVIST        * set visit number
          MOVE      THETUNIQ,CAVRTHEU       * set theatre unique
.
          MOVE      ONE,FORM2               * set counter
          WHILE     FORM2 <= MAXRECS
            MOVE      FORM2,CAVRUNIQ          * set unique counter
            PACK      KEY22,CAVRSITE,CAVRVIST,CAVRUNIQ,CAVRTHEU
            CALL      RDCAVAR1
.
            MOVE      CODD[FORM2],CAVRCODE    * set codes file
            MOVE      FREE[FORM2],CAVRFREE    * set free format
            MOVE      DATE[FORM2],CAVRDATE    * set date
            MOVE      TIME[FORM2],CAVRTIME    * set time
            MOVE      NUMB[FORM2],CAVRNUMB    * set numeric
            MOVE      DOCT[FORM2],CAVRDOCT    * set doctor
            MOVE      THET[FORM2],CAVRTHET    * set theatre
            MOVE      MBSI[FORM2],CAVRCOD9    * set MBS/ICD-9
            MOVE      CHGC[FORM2],CAVRCODC    * set chge code 
            MOVE      CHGD[FORM2],CAVRDESC    * set chge code desc
.
            IF        OVRCD = 1 
              CALL      WRCAVAR1
            ELSE 
              CALL      UPCAVAR1
            ENDIF
            ADD       ONE,FORM2
.
          DO
          GOTO      PROC9999
.
PROC9100  DISPLAY   *P1:24,*B,"Program & Screen Id ",*V2LON,PRGID,"/",SCRID:
                    *HOFF," not set up.  ",*EL;
          CALL      HITENTER
.
PROC9999  RETURN
+
.*********************************************************************
.                   VSHR0000
.         display the appropriate header for the site type
.*********************************************************************
VSHR0000  BRANCH    CKVISTYP,VSHR1000,VSHR2000,VSHR3000,VSHR4000
.                            A&E      OP       IP       Theatre
          GOTO      VSHR9999
.
. ------- A&E -------
.
VSHR1000  DISPLAY   *P1:6,*EF,*V2LON,*ULON:
                    *P5:7,"Visit No":
                    *P15:7,"   Date   ":
                    *P26:7,"Priority     ":
                    *P40:7,"Doctor                     "
          GOTO      VSHR9999
.
. ------- Outpatient -------
.
VSHR2000  DISPLAY   *P1:6,*EF,*V2LON,*ULON:
                    *P5:7,"Visit No":
                    *P15:7,"   Date   ":
                    *P26:7,"OP Site":
                    *P34:7,"Clinic/Doctor              "
          GOTO      VSHR9999
.
. ------- Inpatient -------
.
VSHR3000  DISPLAY   *P1:6,*EF,*V2LON,*ULON:
                    *P5:7,"Visit No":
                    *P15:7,"   Date   ":
                    *P26:7,"Status       ":
                    *P40:7,"Attending Doctor           "
          GOTO      VSHR9999
.
. ------- Theatre -------
.
VSHR4000  DISPLAY   *P1:6,*EF,*V2LON,*ULON:
                    *P5:7,"Visit No":
                    *P15:7,"   Date   ":
                    *P26:7,"Time ":
                    *P32:7,"Case":
                    *P37:7,OPCNCDSC,SP20
VSHR9999  RETURN
+
.*********************************************************************
.*                  DETA0000                                         *
.*        Display visit details summary screen for an A&E visit      *
.*********************************************************************
DETA0000  PACK      DOCTNAM,SP30,SP20
          MATCH     SP6,PVIDOCT
          GOTO      DETA5000 IF EQUAL
.
.------ Read the doctor's file to get the doctor's name ------
.
DETA1500  MOVE      PVIDOCT,KEY6
          CALL      FDOC0000                           * format doctors name
.
.------ Find out the other details to be displayed, and display this visit ----
.
DETA5000  MOVE      PVIBILL,KEY8
          CALL      RDDETA1
          BRANCH    OVRCD OF DETA5100
          MOVE      "No Priority ",VISTYPE
          PACK       KEY5,ANSA,ANSA,ADAPRTY
          CALL       RDCODE1
          IF         OVRCD=0
            MOVE       TDESC,VISTYPE
          ENDIF
...          LOAD      VISTYPE,ADAPRTY,URGENT,MODER,NONURG
.
.------ Display all details ------
.
DETA5100  UNPACK    PVIDATE WITH CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P1:CVERT,*V2LON,CNTITEM,*HOFF,".":
                    *P5:CVERT,PVIBILL:
                    *P15:CVERT,CPCDATE:
                    *P26:CVERT,VISTYPE:
                    *P40:CVERT,DOCTNAM;
.
DETA9999  RETURN
+
.*********************************************************************
.                   DETO0000
.         display visit details for an outpatient
.*********************************************************************
DETO0000  MOVE      "out",OSTFILE           * default to 'out'
          MOVE      PVISITE,KEY6
          CALL      RDSITA1
.
          PACK      DOCTNAM,SP30,SP30,SP20
          CLOSE     OUTCLIA1
          PACK      CFNAME,OSTFILE,FILCLIA1
          OPEN      OUTCLIA1,CFNAME
.
          PACK      KEY20,PVISITE,PVIDOCT,PVIDATE
          CALL      RDCLIA1
          IF        OVRCD = 1
            CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     PVISITE,OCASITE
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ELSE
                MATCH     PVIDOCT,OCACLIN
                IF        !@EQUAL
                  MOVE      ONE,OVRCD
                ENDIF
              ENDIF
            ENDIF
          ENDIF
          IF        OVRCD = 1
            MOVE      "Unknown clinic",OCADESC
            PACK      OCADESC,OCADESC,SP30
          ENDIF
          MOVE      OCADESC,DOCTNAM
          BRANCH    OVRCD,DETO1000
.
          MATCH     SP6,OCADOCT
          GOTO      DETO1000 IF EQUAL       * no doctor code
.
          MOVE      OCADOCT,KEY6
.
DETO0500  CALL      FDOC0000                * format doctor name
.
DETO1000  UNPACK    PVIDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P1:CVERT,*V2LON,CNTITEM,*HOFF,".":
                    *P5:CVERT,PVIBILL:
                    *P15:CVERT,CPCDATE:
                    *P26:CVERT,PVISITE:
                    *P34:CVERT,DOCTNAM;
.
DETO9999  RETURN
+
.*********************************************************************
.*                  DETI0000                                         *
.*        Display visit details summary screen for an Inpatient      *
.*********************************************************************
DETI0000  MOVE      PVIDOCT,KEY6
          CALL      FDOC0000                * format doctors name
.
          MOVE      ASTAT1,VISTYPE          * default to pre-admitted
          MOVE      PVIBILL,AADMNO
          MOVE      AADMNO,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD OF DETI5100
.
          LOAD      VISTYPE,ASTAT,ASTAT1,ASTAT2,ASTAT3,ASTAT4,ASTAT5
.
.------ Display all details ------
.
DETI5100  UNPACK    PVIDATE WITH CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P1:CVERT,*V2LON,CNTITEM,*HOFF,".":
                    *P5:CVERT,PVIBILL:
                    *P15:CVERT,CPCDATE:
                    *P26:CVERT,VISTYPE:
                    *P40:CVERT,DOCTNAM;
.
DETI9999  RETURN
+
.*********************************************************************
.                   DETT0000
.         display visit details for theatre booking
.*********************************************************************
DETT0000  UNPACK    OPDADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          CALL      GCLIN000
.
          DISPLAY   *P1:CVERT,*V2LON,CNTITEM,*HOFF,". ":
                    *P5:CVERT,BKREBOOK:
                    *PCCOL1:CVERT,CPCDATE:
                    SP1,OPDATIME:
                    SP1,OPDACASE:
                    SP2,VAR    
DETT9999  RETURN
+
.*********************************************************************
.*                  CLRA0000                    Called by : DVIS0000 *
.*        Clear the storage variables                                *
.*********************************************************************
CLRA0000  MOVE      LASTVIS,FORM2
          WHILE     FORM2
            MOVE      ZERO,VISITS[FORM2]
            SUB       ONE,FORM2
          DO
+
CLRA9999  RETURN
+
.*********************************************************************
.                   CLRB0000
.         Clear the storage variables
.*********************************************************************
CLRB0000  MOVE      LASTVIS,FORM2
          WHILE     FORM2
            MOVE      SP30,THEATRE[FORM2]
            SUB       ONE,FORM2
          DO
+
CLRB9999  RETURN
+
.*********************************************************************
.                   OPFA0000
.         open the files for the clinical audits
.*********************************************************************
OPFA0000  OPEN      PATDO1A2,"patdo1af"
          OPEN      OPROPRA1,"opropraf"
          OPEN      OPROPRA2,"opropraf"
          OPEN      PATITEM1,"patitemn"
          OPEN      CLACATA1,"clacataf"
          OPEN      CLACODA1,"clacodaf"
          OPEN      CLAVARA1,"clavaraf"
          CALL      OPICD1                  * Open ICD Disease files
OPFA9999  RETURN
+
.*********************************************************************
.                   CSTO0000
.         Clear the storage arrays
.*********************************************************************
CSTO0000  MOVE      "20",FORM2
          WHILE     FORM2
            MOVE      SP3,CODD[FORM2]
            PACK      FREE[FORM2],SP30,SP30
            MOVE      SP8,DATE[FORM2]
            MOVE      SP5,TIME[FORM2]
            MOVE      ZERO,NUMB[FORM2]
            MOVE      SP6,DOCT[FORM2]
            MOVE      SP6,THET[FORM2]
            MOVE      SP9,MBSI[FORM2]
            MOVE      SP3,CHGC[FORM2]
            MOVE      SP20,CHGD[FORM2]
            SUB       ONE,FORM2
          DO
CSTO9999  RETURN
+
.*********************************************************************
.                   CCTA0000
.         clear the audit variable count array
.*********************************************************************
CCTA0000  MOVE      ZERO,MAXRECS
          MOVE      TEN,FORM2
          WHILE     FORM2
            MOVE      ZERO,VARCNT[FORM2]
            MOVE      ZERO,SVARCNT[FORM2]
            SUB       ONE,FORM2
          DO    
CCTA9999  RETURN
+
.*********************************************************************
.*                  KEYA0000                    Called by :          *
.*        Keyin response for line 24 question                        *
.*        Para's  : CALLPOSN      which line 24 prompt               *
.*        Returns : EXIT = 0      item selected (FORM2)              *
.*                  EXIT = 1      Next screen selected               *
.*                  EXIT = 2      Previous screen selected           *
.*                  EXIT = 3      Nothing enterd                     *
.*********************************************************************
KEYA0000  DISPLAY   *P1:24,*EL,"Select Visit";
          MOVE      "12",CCOL
          IF        ((CALLPOSN = ONE) | (CALLPOSN = TWO))
            DISPLAY   ", (",*V2LON,"N",*HOFF,")ext";
            ADD       "8",CCOL
          ENDIF
          IF        ((CALLPOSN = ONE) | (CALLPOSN = THREE))
            DISPLAY   ", (",*V2LON,"F",*HOFF,")irst";
            ADD       "9",CCOL
          ENDIF
          DISPLAY   " ? ",*EL;
          ADD       "4",CCOL
.
KEYA1000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
.
          RESET     DIM2
          GOTO      KEYA4300 IF EOS         * nothing entered
.
          TYPE      DIM2
          GOTO      KEYA5000 IF EQUAL       * number entered
.
.         letter entered
.
          MATCH     SP1,DIM2
          GOTO      KEYA1500 IF NOT EQUAL   * invalid entry
.
          UNPACK    DIM2,ANS,ANS            * get required letter in ANS
          REP       UPPLOW,ANS              * get as uppercase
          REP       "N1F2",ANS              * turn valid letters into number
          MOVE      ZERO,EXIT               * clear exit flag
          MOVE      ANS,EXIT                * set exit flag
          BRANCH    EXIT,KEYA9999,KEYA9999
.
KEYA1500  BEEP
          GOTO      KEYA1000
.
KEYA4300  MOVE      THREE,EXIT              * nothing entered
          GOTO      KEYA9999
.
.         number entered
.
KEYA5000  MOVE      ZERO,EXIT               * set exit flag
          MOVE      DIM2,FORM2              * get as a number
.
          COMPARE   FORM2,ZERO
          GOTO      KEYA1500 IF NOT LESS    * negative entered
.
          COMPARE   FORM2,CNTITEM
          GOTO      KEYA1500 IF LESS        * number too large
.
KEYA9999  RETURN
+
.*********************************************************************
.                   INSM0000
.         handle insert mode for a patient
.*********************************************************************
INSM0000  MOVE      ZERO,EXIT               * set exit flag
          PACK      KEY13,PRGIDB,SCRIDB,SP3
          MOVE      KEY13,SAVKEY13          * save the key
.
INSM1000  CALL      RSSCSL1
          CALL      RKSCSL1
          BRANCH    OVRCD,INSM9999          * finished for the screen
.
          MATCH     PRGIDB,SCSLPID
          GOTO      INSM9999 IF NOT EQUAL   * different program id
.
          MATCH     SCRIDB,SCSLSID
          GOTO      INSM9999 IF NOT EQUAL   * different screen id
.
          PACK      SAVKEY13,PRGIDB,SCRIDB,SCSLSEL
.
.         get correct position of keyin
.
          PACK      KEY15,PRGIDB,SCRIDB,SCSLROW,SCSLCOL
          CALL      RDSCPS1
          BRANCH    OVRCD,INSM1000          * invalid option
.
.         have a valid item so keyin according to Field number - SCSLITM
.
          CALL      KEYN0000                * keyin field
          BRANCH    EXIT,INSM9999           * exitchar entered
.
          MOVE      SAVKEY13,KEY13          * restore the key
          GOTO      INSM1000
.
INSM9999  RETURN
+
.*********************************************************************
.                   KEYN0000
.         Keyin a variable (insert & change mode)
.*********************************************************************
KEYN0000  CALL      CVRB0000                * get variable 1-20 number
          MOVE      ZERO,EXIT               * clear exit flag
          MOVE      SCPSITM,FORM5           * item number
          MOVE      SCPSCOL,ECOL            * column
          MOVE      SCPSROW,EVERT           * row
          PERFORM   FORM5,KCACODD0,KEYN9999,KCACODD0,KEYN9999,KCACODD0:
                          KEYN9999,KCACODD0,KEYN9999,KCACODD0,KEYN9999:
                          KCACODD0,KEYN9999,KCACODD0,KEYN9999,KCACODD0:
                          KEYN9999,KCACODD0,KEYN9999,KCACODD0,KEYN9999:
                          KCACODD0,KEYN9999,KCACODD0,KEYN9999,KCACODD0:
                          KEYN9999,KCACODD0,KEYN9999,KCACODD0,KEYN9999:
                          KCACODD0,KEYN9999,KCACODD0,KEYN9999,KCACODD0:
                          KEYN9999,KCACODD0,KEYN9999,KCACODD0,KEYN9999:
.
                          KCAFREE0,KCAFREE0,KCAFREE0,KCAFREE0,KCAFREE0:
                          KCAFREE0,KCAFREE0,KCAFREE0,KCAFREE0,KCAFREE0:
                          KCAFREE0,KCAFREE0,KCAFREE0,KCAFREE0,KCAFREE0:
                          KCAFREE0,KCAFREE0,KCAFREE0,KCAFREE0,KCAFREE0:
.
                          KCADATE0,KCADATE0,KCADATE0,KCADATE0,KCADATE0:
                          KCADATE0,KCADATE0,KCADATE0,KCADATE0,KCADATE0:
                          KCADATE0,KCADATE0,KCADATE0,KCADATE0,KCADATE0:
                          KCADATE0,KCADATE0,KCADATE0,KCADATE0,KCADATE0:
.
                          KCATIME0,KCATIME0,KCATIME0,KCATIME0,KCATIME0:
                          KCATIME0,KCATIME0,KCATIME0,KCATIME0,KCATIME0:
                          KCATIME0,KCATIME0,KCATIME0,KCATIME0,KCATIME0:
                          KCATIME0,KCATIME0,KCATIME0,KCATIME0,KCATIME0:
.
                          KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0:
                          KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0:
                          KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0:
                          KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0:
.
                          KCADOCT0,KEYN9999,KCADOCT0,KEYN9999,KCADOCT0:
                          KEYN9999,KCADOCT0,KEYN9999,KCADOCT0,KEYN9999:
                          KCADOCT0,KEYN9999,KCADOCT0,KEYN9999,KCADOCT0:
                          KEYN9999,KCADOCT0,KEYN9999,KCADOCT0,KEYN9999:
                          KCADOCT0,KEYN9999,KCADOCT0,KEYN9999,KCADOCT0:
                          KEYN9999,KCADOCT0,KEYN9999,KCADOCT0,KEYN9999:
                          KCADOCT0,KEYN9999,KCADOCT0,KEYN9999,KCADOCT0:
                          KEYN9999,KCADOCT0,KEYN9999,KCADOCT0,KEYN9999:
.
                          KCATHET0,KEYN9999,KCATHET0,KEYN9999,KCATHET0:
                          KEYN9999,KCATHET0,KEYN9999,KCATHET0,KEYN9999:
                          KCATHET0,KEYN9999,KCATHET0,KEYN9999,KCATHET0:
                          KEYN9999,KCATHET0,KEYN9999,KCATHET0,KEYN9999:
                          KCATHET0,KEYN9999,KCATHET0,KEYN9999,KCATHET0:
                          KEYN9999,KCATHET0,KEYN9999,KCATHET0,KEYN9999:
                          KCATHET0,KEYN9999,KCATHET0,KEYN9999,KCATHET0:
                          KEYN9999,KCATHET0,KEYN9999,KCATHET0,KEYN9999:
.
                          KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0:
                          KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999:
                          KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0:
                          KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999:
                          KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0:
                          KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999:
                          KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0:
                          KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999:
.
                          KCACHGC0,KEYN9999,KCACHGC0,KEYN9999,KCACHGC0:
                          KEYN9999,KCACHGC0,KEYN9999,KCACHGC0,KEYN9999:
                          KCACHGC0,KEYN9999,KCACHGC0,KEYN9999,KCACHGC0:
                          KEYN9999,KCACHGC0,KEYN9999,KCACHGC0,KEYN9999:
                          KCACHGC0,KEYN9999,KCACHGC0,KEYN9999,KCACHGC0:
                          KEYN9999,KCACHGC0,KEYN9999,KCACHGC0,KEYN9999:
                          KCACHGC0,KEYN9999,KCACHGC0,KEYN9999,KCACHGC0:
                          KEYN9999,KCACHGC0,KEYN9999,KCACHGC0,KEYN9999
.
          BRANCH    EXIT,KEYN9000,KEYN9100  * nothing/exitchar
.         
KEYN9000  MOVE      ZERO,EXIT               * valid entry
          GOTO      KEYN9999
.
KEYN9100  MOVE      ONE,EXIT                * exitchar entered
.
KEYN9999  RETURN
+
.*********************************************************************
.                   CVRB0000
.         Calculate which variable number (1-20) an item is
.         Para's  : SCPSITM       the field number
.         Returns : VARBLENO      the variable number 1-20
.*********************************************************************
CVRB0000  MOVE      SCPSITM,FORM5           * get as a numeric
          MOVE      ZERO,VARBLENO           * clear variable number
.
          IF        FORM5 >= 41 & FORM5 <= 60
            ASSIGN    (FORM5-40),VARBLENO     * free format field
          ENDIF
.
          IF        FORM5 >= 61 & FORM5 <= 80
            ASSIGN    (FORM5-60),VARBLENO     * date field
          ENDIF
.
          IF        FORM5 >= 81 & FORM5 <= 100
            ASSIGN    (FORM5-80),VARBLENO     * time field
          ENDIF
.
          IF        FORM5 >= 101 & FORM5 <= 120
            ASSIGN    (FORM5-100),VARBLENO    * numeric field
          ENDIF
.
          IF        FORM5 >= 121 & FORM5 <= 160
            SUB       "120",FORM5             * doctors field
          ENDIF
.
          IF        FORM5 >= 161 & FORM5 <= 200
            SUB       "160",FORM5             * theatre field
          ENDIF
.
          IF        FORM5 >= 201 & FORM5 <= 240
            SUB       "200",FORM5             * MBS/ICD field
          ENDIF
.
          IF        FORM5 >= 241 & FORM5 <= 280
            SUB       "240",FORM5             * changeable code field
          ENDIF
.
          LOAD      VARBLENO,FORM5,ONE,ONE,TWO,TWO,THREE:
                                   THREE,FOUR,FOUR,FIVE,FIVE:
                                   SIX,SIX,SEVEN,SEVEN,EIGHT:
                                   EIGHT,NINE,NINE,TEN,TEN:
                                   TEN1,TEN1,TEN2,TEN2,TEN3:
                                   TEN3,TEN4,TEN4,TEN5,TEN5:
                                   TEN6,TEN6,TEN7,TEN7,TEN8:
                                   TEN8,TEN9,TEN9,TWENTY,TWENTY
.
.DISPLAY *P1:3,"SCPSITM=[",SCPSITM,"] VARBLENO=[",VARBLENO,"]",*EL;
.KEYIN ANS
CVRB9999  RETURN
+
.*********************************************************************
.                   CHIN0000
.         see if any details on file to see if insert/change mode
.         and set up default values for change mode
.         Returns : ACCEPT = 0    change mode
.                   ACCEPT = 1    insert mode
.*********************************************************************
CHIN0000  MOVE      ONE,ACCEPT              * default to insert mode
          PACK      KEY22,CASTFILE,PVIBILL,SP20
          CALL      RSCAVAR1
.
CHIN1000  CALL      RKCAVAR1
          BRANCH    OVRCD,CHIN9999          * end of file
.
          MATCH     CAVRSITE,CASTFILE
          GOTO      CHIN9999 IF NOT EQUAL   * different site
.
          MOVE      CAVRVIST,FORM8          * get visit number as a form
          COMPARE   FORM8,PVIBILL
          GOTO      CHIN9999 IF NOT EQUAL   * different patient
.
          MATCH     THETUNIQ,CAVRTHEU
          GOTO      CHIN1000 IF NOT EQUAL   * not same unique id
.
.         set up the default values for change mode
.
          MOVE      CAVRUNIQ,FORM2          * get unique count as a form
          MOVE      CAVRCODE,CODD[FORM2]    * set up coded field
          MOVE      CAVRFREE,FREE[FORM2]    * set up free format field
          MOVE      CAVRDATE,DATE[FORM2]    * set up date field
          MOVE      CAVRTIME,TIME[FORM2]    * set up time field
          MOVE      CAVRNUMB,NUMB[FORM2]    * set up numeric field
          MOVE      CAVRDOCT,DOCT[FORM2]    * set up doctor field
          MOVE      CAVRTHET,THET[FORM2]    * set up theatre field
          MOVE      CAVRCOD9,MBSI[FORM2]    * set up MBS/ICD-9 field
          MOVE      CAVRCODC,CHGC[FORM2]    * set up changeable code field
          MOVE      CAVRDESC,CHGD[FORM2]    * set up changeable code desc field
          MOVE      ZERO,ACCEPT             * set to change mode
          GOTO      CHIN1000
.
CHIN9999  RETURN
+
.*********************************************************************
.                   DCAVR000
.         display the current details for the patient
.*********************************************************************
DCAVR000  MOVE      ZERO,EXIT               * clear exit flag
          PACK      KEY15,PRGIDB,SCRIDB,SP20
          CALL      RSSCPS1
.
DCAVR100  CALL      RKSCPS1                 * next read
          BRANCH    OVRCD,DCAVR999          * end of file
.
          MATCH     PRGIDB,SCPSPID
          GOTO      DCAVR999 IF NOT EQUAL   * different prog
          MATCH     SCRIDB,SCPSSID
          GOTO      DCAVR999 IF NOT EQUAL   * different screen
.
          CALL      CVRB0000                * get the variable number (1-20)
          MOVE      SCPSITM,FORM5           * item number
          MOVE      SCPSCOL,CCOL            * column
          MOVE      SCPSROW,CVERT           * row
          PERFORM   FORM5,DCACODD0,DCACODX0,DCACODD0,DCACODX0,DCACODD0:
                          DCACODX0,DCACODD0,DCACODX0,DCACODD0,DCACODX0:
                          DCACODD0,DCACODX0,DCACODD0,DCACODX0,DCACODD0:
                          DCACODX0,DCACODD0,DCACODX0,DCACODD0,DCACODX0:
                          DCACODD0,DCACODX0,DCACODD0,DCACODX0,DCACODD0:
                          DCACODX0,DCACODD0,DCACODX0,DCACODD0,DCACODX0:
                          DCACODD0,DCACODX0,DCACODD0,DCACODX0,DCACODD0:
                          DCACODX0,DCACODD0,DCACODX0,DCACODD0,DCACODX0:
.
                          DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0:
                          DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0:
                          DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0:
                          DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0:
.
                          DCADATE0,DCADATE0,DCADATE0,DCADATE0,DCADATE0:
                          DCADATE0,DCADATE0,DCADATE0,DCADATE0,DCADATE0:
                          DCADATE0,DCADATE0,DCADATE0,DCADATE0,DCADATE0:
                          DCADATE0,DCADATE0,DCADATE0,DCADATE0,DCADATE0:
.
                          DCATIME0,DCATIME0,DCATIME0,DCATIME0,DCATIME0:
                          DCATIME0,DCATIME0,DCATIME0,DCATIME0,DCATIME0:
                          DCATIME0,DCATIME0,DCATIME0,DCATIME0,DCATIME0:
                          DCATIME0,DCATIME0,DCATIME0,DCATIME0,DCATIME0:
.
                          DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0:
                          DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0:
                          DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0:
                          DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0:
.
                          DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0:
                          DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0:
                          DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0:
                          DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0:
                          DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0:
                          DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0:
                          DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0:
                          DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0:
.
                          DCATHET0,DCATHEX0,DCATHET0,DCATHEX0,DCATHET0:
                          DCATHEX0,DCATHET0,DCATHEX0,DCATHET0,DCATHEX0:
                          DCATHET0,DCATHEX0,DCATHET0,DCATHEX0,DCATHET0:
                          DCATHEX0,DCATHET0,DCATHEX0,DCATHET0,DCATHEX0:
                          DCATHET0,DCATHEX0,DCATHET0,DCATHEX0,DCATHET0:
                          DCATHEX0,DCATHET0,DCATHEX0,DCATHET0,DCATHEX0:
                          DCATHET0,DCATHEX0,DCATHET0,DCATHEX0,DCATHET0:
                          DCATHEX0,DCATHET0,DCATHEX0,DCATHET0,DCATHEX0:
.
                          DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0:
                          DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0:
                          DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0:
                          DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0:
                          DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0:
                          DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0:
                          DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0:
                          DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0:
.
                          DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0:
                          DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0:
                          DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0:
                          DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0:
                          DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0:
                          DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0:
                          DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0:
                          DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0
          GOTO      DCAVR100
.
DCAVR999  RETURN
+
.*********************************************************************
.                   SPCK0000                    Called by : SCRCKMAN
.         set up DIM80 to contain the required variable value
.         to see if it has been entered
.*********************************************************************
SPCK0000  CALL      CVRB0000                * get which variable number (1-20)
          MOVE      SCPSITM,FORM5           * get as a form field
.
          MOVE      CODD[VARBLENO],ACODE
          PACK      PACFNAME,FREE[VARBLENO],SP30,SP30,SP20
          MOVE      DATE[VARBLENO],KEY8
          MOVE      TIME[VARBLENO],KEY5
          MOVE      DOCT[VARBLENO],DCODE
          MOVE      THET[VARBLENO],OPRMROOM
          MOVE      MBSI[VARBLENO],AMBS
          MOVE      CHGC[VARBLENO],KEY3
          MOVE      CHGD[VARBLENO],TDESC
.
          LOAD      DIM80,FORM5,ACODE,ANSA,ACODE,ANSA,ACODE:
                                ANSA,ACODE,ANSA,ACODE,ANSA:
                                ACODE,ANSA,ACODE,ANSA,ACODE:
                                ANSA,ACODE,ANSA,ACODE,ANSA:
                                ACODE,ANSA,ACODE,ANSA,ACODE:
                                ANSA,ACODE,ANSA,ACODE,ANSA:
                                ACODE,ANSA,ACODE,ANSA,ACODE:
                                ANSA,ACODE,ANSA,ACODE,ANSA:
.
                                PACFNAME,PACFNAME,PACFNAME,PACFNAME,PACFNAME:
                                PACFNAME,PACFNAME,PACFNAME,PACFNAME,PACFNAME:
                                PACFNAME,PACFNAME,PACFNAME,PACFNAME,PACFNAME:
                                PACFNAME,PACFNAME,PACFNAME,PACFNAME,PACFNAME:
.
                                KEY8,KEY8,KEY8,KEY8,KEY8:
                                KEY8,KEY8,KEY8,KEY8,KEY8:
                                KEY8,KEY8,KEY8,KEY8,KEY8:
                                KEY8,KEY8,KEY8,KEY8,KEY8:
.
                                KEY5,KEY5,KEY5,KEY5,KEY5:
                                KEY5,KEY5,KEY5,KEY5,KEY5:
                                KEY5,KEY5,KEY5,KEY5,KEY5:
                                KEY5,KEY5,KEY5,KEY5,KEY5:
.
                                ANSA,ANSA,ANSA,ANSA,ANSA:
                                ANSA,ANSA,ANSA,ANSA,ANSA:
                                ANSA,ANSA,ANSA,ANSA,ANSA:
                                ANSA,ANSA,ANSA,ANSA,ANSA:
.
                                DCODE,ANSA,DCODE,ANSA,DCODE:
                                ANSA,DCODE,ANSA,DCODE,ANSA:
                                DCODE,ANSA,DCODE,ANSA,DCODE:
                                ANSA,DCODE,ANSA,DCODE,ANSA:
                                DCODE,ANSA,DCODE,ANSA,DCODE:
                                ANSA,DCODE,ANSA,DCODE,ANSA:
                                DCODE,ANSA,DCODE,ANSA,DCODE:
                                ANSA,DCODE,ANSA,DCODE,ANSA:
.
                                OPRMROOM,ANSA,OPRMROOM,ANSA,OPRMROOM:
                                ANSA,OPRMROOM,ANSA,OPRMROOM,ANSA:
                                OPRMROOM,ANSA,OPRMROOM,ANSA,OPRMROOM:
                                ANSA,OPRMROOM,ANSA,OPRMROOM,ANSA:
                                OPRMROOM,ANSA,OPRMROOM,ANSA,OPRMROOM:
                                ANSA,OPRMROOM,ANSA,OPRMROOM,ANSA:
                                OPRMROOM,ANSA,OPRMROOM,ANSA,OPRMROOM:
                                ANSA,OPRMROOM,ANSA,OPRMROOM,ANSA:
.
                                AMBS,ANSA,AMBS,ANSA,AMBS:
                                ANSA,AMBS,ANSA,AMBS,ANSA:
                                AMBS,ANSA,AMBS,ANSA,AMBS:
                                ANSA,AMBS,ANSA,AMBS,ANSA:
                                AMBS,ANSA,AMBS,ANSA,AMBS:
                                ANSA,AMBS,ANSA,AMBS,ANSA:
                                AMBS,ANSA,AMBS,ANSA,AMBS:
                                ANSA,AMBS,ANSA,AMBS,ANSA:
.
                                KEY3,TDESC,KEY3,TDESC,KEY3:
                                TDESC,KEY3,TDESC,KEY3,TDESC:
                                KEY3,TDESC,KEY3,TDESC,KEY3:
                                TDESC,KEY3,TDESC,KEY3,TDESC:
                                KEY3,TDESC,KEY3,TDESC,KEY3:
                                TDESC,KEY3,TDESC,KEY3,TDESC:
                                KEY3,TDESC,KEY3,TDESC,KEY3:
                                TDESC,KEY3,TDESC,KEY3,TDESC
.
SPCK9999  RETURN
+
.*********************************************************************
.                   CMXR0000
.         calculate the maximum number of fields on screen
.         and save the current values of each variable counter
.*********************************************************************
CMXR0000  MOVE      ONE,FORM2
          WHILE     FORM2 <= 10
            IF        VARCNT[FORM2] > MAXRECS
              MOVE      VARCNT[FORM2],MAXRECS
            ENDIF
            ADD       ONE,FORM2
          DO
.
.         save the current values of each variable count
.
          MOVE      TEN,FORM2
          WHILE     FORM2
            MOVE      VARCNT[FORM2],SVARCNT[FORM2]
            SUB       ONE,FORM2
          DO
.
CMXR9999  RETURN
+
.*********************************************************************
.                   KCACODD0
.         keyin any of the twenty CODES FILE variables 
.*********************************************************************
KCACODD0  MOVE      SCPSMAN,CKYIMAND        * mandatory ??
          MOVE      CODD[VARBLENO],CKYIDEF3 * default value
          MOVE      SP2,CACTCODE            * clear the category
          PACK      KEY8,CASTSITE,VARBLENO
          CALL      RDCACAT1                * get category
          MOVE      CACTCODE,CODE           * set category
          CALL      KYCLACOD
          COMPARE   TWO,EXIT
          GOTO      KCACODD9 IF EQUAL       * exitchar entered
.
          MOVE      CACDCODE,CODD[VARBLENO] * set the value
          CALL      DCACODD0                * redisplay code
          PACK      VAR,CACDDESC,SP30,SP30,SP20
          CALL      CKDISPDX                * check if to display description
.
KCACODD9  RETURN
+
.*********************************************************************
.                   KCAFREE0
.         keyin any of the twenty FREE FORMAT variables 
.*********************************************************************
KCAFREE0  SFORMAT   KEYFIELD,SCPSLEN
          PACK      KEYFIELD,FREE[VARBLENO],SP30,SP30,SP20
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          CALL      SCRKYFRE                * keyin free format field
          MOVE      KEYFIELD,FREE[VARBLENO]
          CALL      DCAFREE0                * redisplay
KCAFREE9  RETURN
+
.*********************************************************************
.                   KCADATE0
.         keyin any of the twenty DATE variables 
.*********************************************************************
KCADATE0  UNPACK    SP6,CYEAR,CMON,CDAY     * no default
          MOVE      CCC,CCENT
          MATCH     SP8,DATE[VARBLENO]
          IF        !@EQUAL
            UNPACK    DATE[VARBLENO],CCENT,CYEAR,CMON,CDAY * set default
          ENDIF
.
KCADATE5  MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          CALL      KEYDATE
          IF        OVRCD = ZERO
            PACK      DATE[VARBLENO],CCENT,CYEAR,CMON,CDAY
            REP       " 0",DATE[VARBLENO]
          ELSE
            IF        SCPSMAN = ZERO
              MOVE      SP8,DATE[VARBLENO]
            ELSE
              DISPLAY   *P1:24,*B,"Field is mandatory.  ",*EL;
              CALL      HITENTER
              GOTO      KCADATE5
            ENDIF
          ENDIF
          CALL      DCADATE0                * redisplay
.
KCADATE9  RETURN
+
.*********************************************************************
.         keyin any of the twenty TIME fields
.*********************************************************************
KCATIME0  MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          MOVE      TIME[VARBLENO],KEY5
          UNPACK    KEY5,CHOUR,ANS,CMIN     * default time
KCATIME5  CALL      KEYTIME
          IF        OVRCD = ZERO
            PACK      TIME[VARBLENO],CHOUR,COLON,CMIN
            REP       " 0",TIME[VARBLENO]
          ELSE
            IF        SCPSMAN = ZERO
              MOVE      SP5,TIME[VARBLENO]
            ELSE
              DISPLAY   *P1:24,*B,"Field is mandatory.  ",*EL;
              CALL      HITENTER
              GOTO      KCATIME5
            ENDIF
          ENDIF
          CALL      DCATIME0                * redisplay
KCATIME9  RETURN
+
.*********************************************************************
.         keyin any of the twenty NUMERIC fields
.*********************************************************************
KCANUMB0  KEYIN     *PECOL:EVERT,"______.__":
                    *PECOL:EVERT,*V2LON,NUMB[VARBLENO]:
                    *PECOL:EVERT,*DV,NUMB[VARBLENO]
          CALL      DCANUMB0                * redisplay
KCANUMB9  RETURN
+
.*********************************************************************
.         keyin any of the twenty DOCTOR fields
.*********************************************************************
KCADOCT0  MOVE      SCPSMAN,CKYIMAND        * mandatory ??
          MOVE      DOCT[VARBLENO],CKYIDEF6 * default value
          CALL      PATDOCKY
          MOVE      DCODE,DOCT[VARBLENO]    * set the code
          COMPARE   TWO,EXIT
          GOTO      KCADOCT9 IF EQUAL       * exitchar entered
.
          CALL      DCADOCT0                * redisplay
          MATCH     SP6,DCODE
          IF        @EQUAL
            PACK      PACFNAME,SP30,SP30,SP20
          ELSE
            MOVE      DSNAME,PACSNAME
            MOVE      DGNAME,PACGNAME
            MOVE      DTITL,PACTITLE
            MOVE      TWO,PACFRMT
            CALL      PACNAME
          ENDIF
          PACK      VAR,PACFNAME,SP30,SP30,SP20
          CALL      CKDISPDX                * check if to display name
.
KCADOCT9  RETURN
+
.*********************************************************************
.                   KCATHET0
.         keyin any of the twenty THEATRE variables
.*********************************************************************
KCATHET0  MOVE      THET[VARBLENO],CKYIDEF6 * default value
          MOVE      SCPSMAN,CKYIMAND        * mandatory ??
          CALL      KYOPROPR                * keyin code
          MOVE      OPRMROOM,THET[VARBLENO] * set code
          COMPARE   TWO,EXIT
          GOTO      KCATHET9 IF EQUAL       * exitchar entered
.
          CALL      DCATHET0                * redisplay
          PACK      VAR,OPRMDESC,SP30,SP30,SP20
          CALL      CKDISPDX                * check if to display desc
.
KCATHET9  RETURN
+
.*********************************************************************
.                   KCAMBSI0
.         keyin any of the twenty MBS/ICD-9 variables
.*********************************************************************
KCAMBSI0  MOVE      MBSI[VARBLENO],CKYIDEF9 * default value
          MOVE      SCPSMAN,CKYIMAND        * mandatory ??
          BRANCH    CKMBS,KCAMBSI2,KCAMBSI4
          GOTO      KCAMBSI9
.
.         keyin MBS code
.
KCAMBSI2  CALL      PATITMKY                * keyin MBS item
          MOVE      AMBS,MBSI[VARBLENO]     * set the value
          COMPARE   TWO,EXIT
          GOTO      KCAMBSI9 IF EQUAL       * exitchar entered
          CALL      DCAMBSI0                * redisplay
          PACK      VAR,IDESC,SP30,SP30,SP20
          CALL      CKDISPDX                * check for display of description
          GOTO      KCAMBSI9
.
.         keyin ICD-9 code
.
KCAMBSI4  CALL      PATICDKY                * keyin ICD-9 code
          MOVE      DPCODE,MBSI[VARBLENO]   * set the value
          COMPARE   TWO,EXIT
          GOTO      KCAMBSI9 IF EQUAL       * exitchar entered
          CALL      DCAMBSI0                * redisplay
          PACK      VAR,DDESC,SP30,SP30,SP20
          CALL      CKDISPDX                * check for display of description
          GOTO      KCAMBSI9
.
KCAMBSI9  RETURN
+
.*********************************************************************
.                   KCACHGC0
.         keyin any of the twenty codes file CHANGEABLE CODES variables
.*********************************************************************
KCACHGC0  MOVE      SCPSMAN,CKYIMAND        * mandatory ??
          MOVE      CHGC[VARBLENO],CKYIDEF3 * default value
          MOVE      SP2,CACTCHGE            * clear the category
          PACK      KEY8,CASTSITE,VARBLENO
          CALL      RDCACAT1                * get category
          MOVE      CACTCHGE,CODE           * set category
          CALL      KYCLACOD
          MOVE      CACDCODE,CHGC[VARBLENO] * set code
          COMPARE   TWO,EXIT
          GOTO      KCACHGC9 IF EQUAL       * exitchar entered
.
          CALL      DCACHGC0                * redisplay
          IF        ACCEPT = 1
            MOVE      CACDDESC,CHGD[VARBLENO] * set desc for insert mode
          ENDIF
.
          MATCH     SP3,CHGC[VARBLENO]
          GOTO      KCACHGC5 IF NOT EQUAL   * have a code so enter desc
.
          BRANCH    ACCEPT,KCACHGC9         * dont keyin desc
.
.         keyin the desc
.
KCACHGC5  MOVE      SCPSITM,FORM5           * get field id
          ADD       ONE,FORM5               * get next id
          MOVE      FORM5,KEY5              * set parameter
          CALL      SCRCKFLD
          BRANCH    EXIT,KCACHGC9           * not on screen
.
          CALL      KCACHGD0                * keyin desc
          CALL      DCACHGD0                * display desc
.
KCACHGC9  RETURN
.
.*********************************************************************
.                   KCACHGD0
.         keyin any of the twenty codes file CHANGEABLE DESCS variables
.*********************************************************************
KCACHGD0  SFORMAT   KEYFIELD,SCPSLEN
          PACK      KEYFIELD,CHGD[VARBLENO],SP30,SP30,SP20
          CALL      SCRKYFRE
          MOVE      KEYFIELD,CHGD[VARBLENO]
.
KCACHGD9  RETURN
.
.         routines to check if the descriptions are to be displayed
.
.*********************************************************************
.                   CKDISPDX
.         see if to display description for a code
.*********************************************************************
CKDISPDX  MOVE      SCPSITM,FORM5           * coded field number
          ADD       ONE,FORM5               * add one for the description
          MOVE      FORM5,KEY5              * set the field number for desc'n
          CALL      SCRCKFLD                * see if desc'n is on screen
          IF        EXIT = 0
            CALL      DISPITEM                * display the description
          ENDIF
          RETURN
+
.*********************************************************************
.         display any of the twenty CODES FILE variables 
.*********************************************************************
DCACODD0  PACK      VAR,CODD[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[1],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[1]      * the maximum code field used
          ENDIF

.         ADD       ONE,VARCNT[1]           * add to number on screen
.
DCACODD9  RETURN
+
.*********************************************************************
.         display any of the twenty CODES FILE variables descriptions
.*********************************************************************
DCACODX0  MOVE      SP20,CACDDESC
          MATCH     SP3,CODD[VARBLENO]
          GOTO      DCACODX5 IF EQUAL       * no code to display
.
          MOVE      SP2,CACTCODE            * clear code
          PACK      KEY8,CASTSITE,VARBLENO
          CALL      RDCACAT1                * get category
          MOVE      "Invalid Code",CACDDESC
          PACK      KEY5,CACTCODE,CODD[VARBLENO]
          CALL      RDCACOD1
.
DCACODX5  PACK      VAR,CACDDESC,SP30,SP30,SP20
          CALL      DISPITEM
.
DCACODX9  RETURN
+
.*********************************************************************
.         display any of the twenty FREE FORMAT variables 
.*********************************************************************
DCAFREE0  PACK      VAR,FREE[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[2],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[2]      * the maximum field used
          ENDIF
.
.         ADD       ONE,VARCNT[2]           * add to number on screen
DCAFREE9  RETURN
+
.*********************************************************************
.         display any of the twenty DATE variables 
.*********************************************************************
DCADATE0  UNPACK    DATE[VARBLENO],CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM 
.
          MOVE      VARCNT[3],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[3]      * the maximum field used
          ENDIF
.
.         ADD       ONE,VARCNT[3]           * add to number on screen
DCADATE9  RETURN
+
.*********************************************************************
.         display any of the twenty TIME fields
.*********************************************************************
DCATIME0  PACK      VAR,TIME[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[4],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[4]      * the maximum code field used
          ENDIF
.
.         ADD       ONE,VARCNT[4]           * add to number on screen
DCATIME9  RETURN
+
.*********************************************************************
.         display any of the twenty NUMERIC fields
.*********************************************************************
DCANUMB0  PACK      VAR,NUMB[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[5],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[5]      * the maximum code field used
          ENDIF
.
.         ADD       ONE,VARCNT[5]           * add to number on screen
DCANUMB9  RETURN
+
.*********************************************************************
.         display any of the twenty DOCTOR fields
.*********************************************************************
DCADOCT0  PACK      VAR,DOCT[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[6],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[6]      * the maximum code field used
          ENDIF
.
.         ADD       ONE,VARCNT[6]           * add to number on screen
DCADOCT9  RETURN
+
.*********************************************************************
.         display any of the twenty DOCTOR fields descriptions
.*********************************************************************
DCADOCX0  PACK      PACFNAME,SP30,SP30,SP20
          MATCH     SP6,DOCT[VARBLENO]
          GOTO      DCADOCX5 IF EQUAL       * no code to display
.
          MOVE      "Invalid Code",PACFNAME
          MOVE      DOCT[VARBLENO],KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,DCADOCX5          * invalid code
.
          MOVE      DSNAME,PACSNAME
          MOVE      DGNAME,PACGNAME
          MOVE      DTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
.
DCADOCX5  PACK      VAR,PACFNAME,SP30,SP30,SP20
          CALL      DISPITEM
.
DCADOCX9  RETURN
+
.*********************************************************************
.         display any of the twenty THEATRE variables
.*********************************************************************
DCATHET0  PACK      VAR,THET[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[7],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[7]      * the maximum code field used
          ENDIF
.
.         ADD       ONE,VARCNT[7]           * add to number on screen
DCATHET9  RETURN
+
.*********************************************************************
.         display any of the twenty THEATRE variables descriptions
.*********************************************************************
DCATHEX0  MOVE      SP30,OPRMDESC
          MATCH     SP6,THET[VARBLENO]
          GOTO      DCATHEX5 IF EQUAL       * no code to display
.
          MOVE      "Invalid Code",OPRMDESC
          MOVE      THET[VARBLENO],KEY6
          CALL      RDOPOPR1
.
DCATHEX5  PACK      VAR,OPRMDESC,SP30,SP30,SP20
          CALL      DISPITEM
.
DCATHEX9  RETURN
+
.*********************************************************************
.         display any of the twenty MBS/ICD-9 variables
.*********************************************************************
DCAMBSI0  PACK      VAR,MBSI[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[8],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[8]      * the maximum code field used
          ENDIF
.
.         ADD       ONE,VARCNT[8]           * add to number on screen
DCAMBSI9  RETURN
+
.*********************************************************************
.         display any of the twenty MBS/ICD-9 variables descriptions
.*********************************************************************
DCAMBSX0  PACK      DDESC,SP30,SP30,SP20
          MATCH     SP9,MBSI[VARBLENO]
          GOTO      DCAMBSX8 IF EQUAL       * no code to display
.
          MOVE      MBSI[VARBLENO],KEY9
          BRANCH    CKMBS,DCAMBSX2,DCAMBSX4
          GOTO      DCAMBSX9
.
.         display MBS code
.
DCAMBSX2  MOVE      "Invalid Code",IDESC
          PACK      KEY17,KEY9,SP70
          CALL      PATITMRD
          PACK      VAR,IDESC,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DCAMBSX9
.
.         display ICD-10 / ICD-9 code
.
DCAMBSX4  MOVE      "Invalid Code",DDESC
          CALL      RDPTICD1
          IF        OVRCD=1 & ICDRDVER>1
            CALL      RD10T9D1
          ENDIF
.
DCAMBSX8  PACK      VAR,DDESC,SP30,SP30,SP20
          CALL      DISPITEM
.
DCAMBSX9  RETURN
+
.*********************************************************************
.                   DCACHGC0
.         display any of the twenty codes file CHANGEABLE CODES variables
.*********************************************************************
DCACHGC0  PACK      VAR,CHGC[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[9],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[9]      * the maximum code field used
          ENDIF
.
.         ADD       ONE,VARCNT[9]           * add to number on screen
DCACHGC9  RETURN
.
.*********************************************************************
.                   DCACHGD0
.         display any of the twenty codes file CHANGEABLE DESCS variables
.*********************************************************************
DCACHGD0  PACK      VAR,CHGD[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
.
          MOVE      VARCNT[10],FORM2
          IF        VARBLENO > FORM2
            MOVE      VARBLENO,VARCNT[10]      * the maximum code field used
          ENDIF
.
.         ADD       ONE,VARCNT[10]          * add to number on screen
DCACHGD9  RETURN
.
.*********************************************************************
.                   DDOF0000
.         display the extra fields for each site
.*********************************************************************
DDOF0000  IF        CKVISTYP = TWO
            PACK      CFNAME,OSTFILE,FILCTYA1
            CLOSE     OUTCTYA1
            OPEN      OUTCTYA1,CFNAME
            PACK      CFNAME,OSTFILE,FILCLIA1
            CLOSE     OUTCLIA1
            OPEN      OUTCLIA1,CFNAME
            PACK      CFNAME,OSTFILE,FILDIAG1
            CLOSE     OUTDIAG1
            OPEN      OUTDIAG1,CFNAME
            PACK      OPDIDESC,SP30,SP30
            MOVE      SP9,OPDICODE
            MOVE      PVIBILL,KEY8
            CALL      RDDIAG1
          ENDIF
.
          IF        PVITYPE = 1
            MOVE      PVIBILL,KEY8
            CALL      RDDETA1
          ENDIF
.
          IF        PVITYPE = 3
            PACK      DDIAG,SP30,SP20
            PACK      DDIAG2,SP30,SP20
            UNPACK    SP30,DSTAT,DDEST,DDATE,DFMBS
            MOVE      PVIBILL,KEY8
            CALL      RDDSCH1
            MOVE      DDATE,ICDRDDTE        * Used for reading ICD Disease file
            MOVE      PVIBILL,KEY8
            CALL      RDMISS1
          ENDIF
.
          PACK      KEY15,PRGID,SCRID,SP10
          CALL      RSSCPS1
.
DDOF1000  CALL      RKSCPS1
          BRANCH    OVRCD,DDOF9999          * end of file
.
          MATCH     PRGID,SCPSPID
          GOTO      DDOF9999 IF NOT EQUAL   * different program id
          MATCH     SCRID,SCPSSID
          GOTO      DDOF9999 IF NOT EQUAL   * different screen id
.
          MOVE      SCPSITM,FORM5           * get as a form
          COMPARE   "281",FORM5
          GOTO      DDOF1000 IF LESS        * not one of the fields
.
          SUB       "280",FORM5             * start at field 1
          BRANCH    CKVISTYP,DDOF1100,DDOF1200,DDOF1300,DDOF1400
          GOTO      DDOF9999
.
. ------- A&E patients -------
.
DDOF1100  PERFORM   FORM5,DDOFA001,DDOFA002,DDOFA003,DDOFA004,DDOFA005:
                          DDOFA006
          GOTO      DDOF1000
.
. ------- Outpatients -------
.
DDOF1200  PERFORM   FORM5,DDOFO001,DDOFO002,DDOFO003,DDOFO004,DDOFO005:
                          DDOFO006,DDOFO007,DDOFO008,DDOFO009,DDOFO010
          GOTO      DDOF1000
.
. ------- Inpatients -------
.
DDOF1300  PERFORM   FORM5,DDOFI001,DDOFI002,DDOFI003,DDOFI004,DDOFI005:
                          DDOFI006,DDOFI007,DDOFI008,DDOFI009,DDOFI010:
                          DDOFI011,DDOFI012,DDOFI013,DDOFI014,DDOFI015:
                          DDOFI016,DDOFI017,DDOFI018,DDOFI019,DDOFI020:
                          DDOFI021,DDOFI022
          GOTO      DDOF1000
.
. ------- Theatre patients -------
.
DDOF1400  PERFORM   FORM5,DDOFT001,DDOFT002,DDOFT003,DDOFT004,DDOFT005:
                          DDOFT006,DDOFT007,DDOFT008,DDOFT009,DDOFT010:
                          DDOFT011,DDOFT012,DDOFT013,DDOFT014,DDOFT015:
                          DDOFT016,DDOFT017,DDOFT018,DDOFT019,DDOFT020:
                          DDOFT021,DDOFT022,DDOFT023,DDOFT024,DDOFT025:
                          DDOFT026,DDOFT027,DDOFT028,DDOFT029,DDOFT030:
                          DDOFT031,DDOFT032,DDOFT033,DDOFT034,DDOFT035:
                          DDOFT036,DDOFT037,DDOFT038,DDOFT039,DDOFT040:
                          DDOFT041,DDOFT042,DDOFT043,DDOFT044,DDOFT045:
                          DDOFT046,DDOFT047,DDOFT048
          GOTO      DDOF1000
.
DDOF9999  RETURN
+
.*********************************************************************
.                   DDOFA000
.         display extra variables for A&E
.*********************************************************************
DDOFA001  UNPACK    ADADATE,CCENT,CYEAR,CMON,CDAY     * attendance date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          RETURN
.
DDOFA002  PACK      VAR,ADAMODE,SP30,SP30,SP20        * mode of arrival code
          CALL      DISPITEM
          RETURN
.
DDOFA003  MOVE      CATEA,TCODE                       * mode of arrival desc
          MOVE      ADAMODE,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFA004  PACK      VAR,ADAWAIT,SP30,SP30,SP20        * completion code
          CALL      DISPITEM
          RETURN
.
DDOFA005  MOVE      CATEW,TCODE                       * completion code desc
          MOVE      ADAWAIT,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFA006  PACK      VAR,ADADIAG,SP30,SP30,SP20        * diagnosis desc
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.                   DDOFO000
.         display extra variables for Outpatients
.*********************************************************************
DDOFO001  UNPACK    OBADATE,CCENT,CYEAR,CMON,CDAY     * visit date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          RETURN
.
DDOFO002  PACK      VAR,OBACTYP,SP30,SP30,SP20        * clinic type
          CALL      DISPITEM
          RETURN
.
DDOFO003  MOVE      "Invalid Code",OCTDESC            * clinic type descriptiom
          PACK      KEY12,OBASITE,OBACTYP
          CALL      RDCTYA1
          PACK      VAR,OCTDESC,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.
DDOFO004  PACK      VAR,OBACLIN,SP30,SP30,SP20        * clinic id
          CALL      DISPITEM
          RETURN
.
DDOFO005  MOVE      SP6,OCADOCT
          PACK      KEY20,OBASITE,OBACLIN,OBADATE
          CALL      RDCLIA1
          IF        OVRCD = 1
            CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     OBASITE,OCASITE
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ELSE
                MATCH     OBACLIN,OCACLIN
                IF        !@EQUAL
                  MOVE      ONE,OVRCD
                ENDIF
              ENDIF
            ENDIF
          ENDIF
          IF        OVRCD = 1
            MOVE      "Unknown clinic",OCADESC
            PACK      OCADESC,OCADESC,SP30
          ELSE
            MATCH     SP6,OCADOCT
            IF        !@EQUAL
              MOVE      OCADOCT,KEY6
              CALL      RDDOCT1
              IF        OVRCD = ZERO
                MOVE      DSNAME,PACSNAME
                MOVE      DGNAME,PACGNAME
                MOVE      DTITL,PACTITLE
                MOVE      TWO,PACFRMT
                CALL      PACNAME
                MOVE      PACFNAME,OCADESC
              ENDIF
            ENDIF
          ENDIF
          PACK      VAR,OCADESC,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.
DDOFO006  PACK      VAR,OPDICODE,SP30,SP30,SP20       * diagnosis code
          CALL      DISPITEM
          RETURN
.
DDOFO007  PACK      VAR,OPDIDESC,SP30,SP30,SP20       * diagnosis desc
          CALL      DISPITEM
          RETURN
.
DDOFO008  PACK      VAR,OBAVISIT,SP30,SP30,SP20       * visit type code
          CALL      DISPITEM
          RETURN
.
DDOFO009  MOVE      CATCV,TCODE                       * visit type desc
          MOVE      OBAVISIT,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFO010  PACK      VAR,OBASLOT,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.                   DDOFI000
.         display extra variables for Inpatients
.*********************************************************************
DDOFI001  UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY             * admission date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI002  PACK      VAR,ASRCE,SP30,SP30,SP20          * source of referral
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI003  MOVE      "S ",TCODE                        * SOR desc
          MOVE      ASRCE,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI004  PACK      VAR,ATYPE,SP30,SP30,SP20          * patient classification
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI005  MOVE      "A ",TCODE                        * PClass desc
          MOVE      ATYPE,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI006  PACK      VAR,ACLSS,SP30,SP30,SP20          * patient category
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI007  MOVE      "P ",TCODE                        * PCat desc
          MOVE      ACLSS,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI008  MOVE      SP30,TDESC                        * admitting ward
          PACK      KEY30,AADMNO,TDESC
          CALL      RDSTRAN2
          CALL      RDKTRAN2
          BRANCH    OVRCD,DDOFI999          * no ward
          COMPARE   AADMNO,TADMN
          GOTO      DDOFI999 IF NOT EQUAL   * no ward
          PACK      VAR,TWARD,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI009  MOVE      SP30,TDESC                        * admitting ward desc
          PACK      KEY30,AADMNO,TDESC
          CALL      RDSTRAN2
          CALL      RDKTRAN2
          BRANCH    OVRCD,DDOFI999          * no ward
          COMPARE   AADMNO,TADMN
          GOTO      DDOFI999 IF NOT EQUAL   * no ward
          PACK      KEY6,TWARD,TBED,SP6
          CALL      RDWARD1
          PACK      VAR,WBDESC,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI010  MOVE      Z30,TDESC                         * current/disch ward
          PACK      KEY30,AADMNO,TDESC
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,DDOFI999          * no ward
          COMPARE   AADMNO,TADMN
          GOTO      DDOFI999 IF NOT EQUAL   * no ward
          PACK      VAR,TWARD,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI011  MOVE      Z30,TDESC                         * current/disch ward desc
          PACK      KEY30,AADMNO,TDESC
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,DDOFI999          * no ward
          COMPARE   AADMNO,TADMN
          GOTO      DDOFI999 IF NOT EQUAL   * no ward
          PACK      KEY6,TWARD,TBED,SP6
          CALL      RDWARD1
          PACK      VAR,WBDESC,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI012  PACK      VAR,AMBS,SP30,SP30,SP20           * admitting MBS code
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI013  PACK      VAR,ADIAG1,SP30,SP30,SP20         * admitting diag 1
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI014  PACK      VAR,ADIAG2,SP30,SP30,SP20         * admitting diag 2
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI015  PACK      VAR,DFMBS,SP30,SP30,SP20          * discharge diag code
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI016  PACK      VAR,DDIAG,SP30,SP30,SP20          * discharge diag 1
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI017  PACK      VAR,DDIAG2,SP30,SP30,SP20         * discharge diag 2
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI018  PACK      VAR,DSTAT,SP30,SP30,SP20          * discharge stat
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI019  MOVE      "D ",TCODE                        * discharge stat desc
          MOVE      DSTAT,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI020  PACK      VAR,DDEST,SP30,SP30,SP20          * discharge destination
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI021  MOVE      "DD",TCODE                        * discharge dest desc
          MOVE      DDEST,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI022  UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY             * discharge date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI999  RETURN
+
.*********************************************************************
.                   DPTCD000
.         display a patients codes file entry
.*********************************************************************
DPTCD000  MOVE      SP20,TDESC              * clear description
          MATCH     SP3,ACODE               * see if have a code
          IF        !@EQUAL
            MOVE      "Invalid Code",TDESC
            PACK      KEY5,TCODE,ACODE,SP10
            CALL      RDCODE1
          ENDIF
          PACK      VAR,TDESC,SP30,SP30,SP30
          CALL      DISPITEM                * display code
          RETURN
+
.*********************************************************************
.                   DDOFT000
.         display extra variables for Theatre patients
.*********************************************************************
DDOFT001  UNPACK    OPDADATE,CCENT,CYEAR,CMON,CDAY    * session date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          RETURN
.
DDOFT002  PACK      VAR,OPDACLIN,SP30,SP30,SP20       * clinic/surgeon code
          CALL      DISPITEM
          RETURN
.
DDOFT003  CALL      GCLIN000                          * get clin/surg desc
          CALL      DISPITEM
          RETURN
.
DDOFT004  PACK      VAR,OPDACASE,SP30,SP30,SP20       * case number
          CALL      DISPITEM
          RETURN
.
DDOFT005  PACK      VAR,OPDAANAE,SP30,SP30,SP20       * anaesthetic code
          CALL      DISPITEM
          RETURN
.
DDOFT006  MOVE      "OA",TCODE                        * AC desc
          MOVE      OPDAANAE,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT007  PACK      VAR,OPDATYPE,SP30,SP30,SP20       * operation type code
          CALL      DISPITEM
          RETURN
.
DDOFT008  MOVE      "OY",TCODE                        * OT desc
          MOVE      OPDATYPE,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT009  PACK      VAR,OPDATRAN,SP30,SP30,SP20       * transport code
          CALL      DISPITEM
          RETURN
.
DDOFT010  MOVE      "OR",TCODE                        * TC desc
          MOVE      OPDATRAN,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT011  PACK      VAR,OPDAUSR1,SP30,SP30,SP20       * UD field 1
          CALL      DISPITEM
          RETURN
.
DDOFT012  MOVE      "Y6",TCODE                        * UD field 1 desc
          MOVE      OPDAUSR1,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT013  PACK      VAR,OPDAUSR2,SP30,SP30,SP20       * UD field 2
          CALL      DISPITEM
          RETURN
.
DDOFT014  MOVE      "Y7",TCODE                        * UD field 2 desc
          MOVE      OPDAUSR2,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT015  PACK      VAR,OPDAUSR3,SP30,SP30,SP20       * UD field 3
          CALL      DISPITEM
          RETURN
.
DDOFT016  MOVE      "Y8",TCODE                        * UD field 3 desc
          MOVE      OPDAUSR3,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT017  PACK      VAR,OPDAUSR2,SP30,SP30,SP20       * UD field 2
          CALL      DISPITEM
          RETURN
.
DDOFT018  MOVE      "Y7",TCODE                        * UD field 2 desc
          MOVE      OPDAUSR2,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT019  PACK      VAR,OPDAPROV,SP30,SP30,SP20       * prov item 1
          CALL      DISPITEM
          RETURN
.
DDOFT020  MOVE      OPDAPROV,KEY9                     * prov item 1 desc
          CALL      DPROV000
          RETURN
.
DDOFT021  PACK      VAR,OPDAPRV2,SP30,SP30,SP20       * prov item 2
          CALL      DISPITEM
          RETURN
.
DDOFT022  MOVE      OPDAPRV2,KEY9                     * prov item 2 desc
          CALL      DPROV000
          RETURN
.
DDOFT023  PACK      VAR,OPDAPRV3,SP30,SP30,SP20       * prov item 3
          CALL      DISPITEM
          RETURN
.
DDOFT024  MOVE      OPDAPRV3,KEY9                     * prov item 3 desc
          CALL      DPROV000
          RETURN
.
DDOFT025  PACK      VAR,OPDADES1,SP30,SP30,SP20       * desc 1
          CALL      DISPITEM
          RETURN
.
DDOFT026  PACK      VAR,OPDADES2,SP30,SP30,SP20       * desc 2
          CALL      DISPITEM
          RETURN
.
DDOFT027  PACK      VAR,OPDADES3,SP30,SP30,SP20       * desc 3
          CALL      DISPITEM
          RETURN
.
DDOFT028  PACK      VAR,OPDACOMM,SP30,SP30,SP20       * comments
          CALL      DISPITEM
          RETURN
.
DDOFT029  PACK      VAR,OPDATHET,SP30,SP30,SP20       * theatre/op room
          CALL      DISPITEM
          RETURN
.
DDOFT030  MOVE      OPDATHET,KEY6                     * theatre/op room desc
          PACK      OPRMDESC,SP30,SP30
          MATCH     SP6,OPDATHET
          IF        !@EQUAL
            MOVE      "Invalid Code",OPRMDESC
            CALL      RDOPOPR1
          ENDIF
          PACK      VAR,OPRMDESC,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.
DDOFT031  PACK      VAR,OPDAPRE1,SP30,SP30,SP20       * pre-op time 1
          CALL      DISPITEM
          RETURN
.
DDOFT032  PACK      VAR,OPDAPRE2,SP30,SP30,SP20       * pre-op time 2
          CALL      DISPITEM
          RETURN
.
DDOFT033  PACK      VAR,OPDAPRE3,SP30,SP30,SP20       * pre-op time 3
          CALL      DISPITEM
          RETURN
.
DDOFT034  PACK      VAR,OPDAPRE4,SP30,SP30,SP20       * pre-op time 4
          CALL      DISPITEM
          RETURN
.
DDOFT035  PACK      VAR,OPDAPRE5,SP30,SP30,SP20       * pre-op time 5
          CALL      DISPITEM
          RETURN
.
DDOFT036  PACK      VAR,OPDAPOS1,SP30,SP30,SP20       * post-op time 1
          CALL      DISPITEM
          RETURN
.
DDOFT037  PACK      VAR,OPDAPOS2,SP30,SP30,SP20       * post-op time 2
          CALL      DISPITEM
          RETURN
.
DDOFT038  PACK      VAR,OPDAPOS3,SP30,SP30,SP20       * post-op time 3
          CALL      DISPITEM
          RETURN
.
DDOFT039  PACK      VAR,OPDAPOS4,SP30,SP30,SP20       * post-op time 4
          CALL      DISPITEM
          RETURN
.
DDOFT040  PACK      VAR,OPDAEXPD,SP30,SP30,SP20       * expected duration
          CALL      DISPITEM
          RETURN
.
DDOFT041  PACK      VAR,OPDAKNOW,SP30,SP30,SP20       * known infection
          CALL      DISPITEM
          RETURN
.
DDOFT042  MOVE      "OK",TCODE                        * known infection desc
          MOVE      OPDAKNOW,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT043  PACK      VAR,CODEANAE,SP30,SP30,SP20       * anaesthetist code
          CALL      DISPITEM
          RETURN
.
DDOFT044  PACK      VAR,DESCANAE,SP30,SP30,SP20       * anaesthetist name
          CALL      DISPITEM
          RETURN
.
DDOFT045  PACK      VAR,CODESUPA,SP30,SP30,SP20       * supervisor anae code
          CALL      DISPITEM
          RETURN
.
DDOFT046  PACK      VAR,DESCSUPA,SP30,SP30,SP20       * supervisor anae name
          CALL      DISPITEM
          RETURN
.
DDOFT047  PACK      VAR,CODETRNA,SP30,SP30,SP20       * trainee anae code
          CALL      DISPITEM
          RETURN
.
DDOFT048  PACK      VAR,DESCTRNA,SP30,SP30,SP20       * trainee anae name
          CALL      DISPITEM
          RETURN
.
.*********************************************************************
.                   GCLIN000
.         Format Clinic/Surgeon name
.*********************************************************************
GCLIN000  MOVE      OPDACLIN,KEY6           * set up the key
          PACK      VAR,SP30,SP30,SP20
          BRANCH    OPCNCLSU,GCLIN500       * using doctor codes
.
.         validate using clinic file
.
          CALL      RDOPCLI1                * read clinic file
          BRANCH    OVRCD,GCLIN500          * invalid code
          PACK      VAR,OPCLDESC,SP30,SP30,SP20
.
          MATCH     SP6,OPCLDOCT
          GOTO      GCLIN999 IF EQUAL       * no docotor code to use
          MOVE      OPCLDOCT,KEY6           * use the doctor code
.
.         validate using doctors file
.
GCLIN500  CALL      RDDOCT1                 * read docs file
          BRANCH    OVRCD,GCLIN999          * invalid code
.
          MOVE      DSNAME,PACSNAME         * surname
          MOVE      DGNAME,PACGNAME         * given name
          MOVE      DTITL,PACTITLE          * title
          MOVE      TWO,PACFRMT             * SURNAME, TITLE GIVEN
          CALL      PACNAME                 * format the name
          IF        OPCNCLSU=1
            PACK      VAR,PACFNAME,SP30,SP30,SP20
          ENDIF
.
GCLIN999  RETURN
+
.*********************************************************************
.                   DPROV000
.         Get desc for a provisional item
.*********************************************************************
DPROV000  BRANCH    OPCNCODE,DPROV500       * MBS code
.
          MOVE      "Invalid Code",DDESC
          CALL      RDPTICD1
          IF        OVRCD=1 & ICDRDVER>1
            CALL      RD10T9D1
          ENDIF
          PACK      VAR,DDESC,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DPROV999
.
.         MBS codes
.
DPROV500  MOVE      "Invalid Code",IDESC
          PACK      KEY17,KEY9,OPDADATE,SP70
          CALL      PATITMRD
          PACK      VAR,IDESC,SP30,SP30,SP20
          CALL      DISPITEM
.
DPROV999  RETURN
+
.*********************************************************************
.                   CHGE0000
.         processing for change mode
.*********************************************************************
CHGE0000  CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      CHGE5000 IF EQUAL       * post selected
          GOTO      CHGE9100 IF LESS        * cancel selected
.
          PACK      KEY13,PRGIDB,SCRIDB,CCITEM
          CALL      RDSCSL1                 * read selections file
          COMPARE   ZERO,OVRCD
          GOTO      CHGE1000 IF EQUAL       * valid selection
.
          BEEP
          GOTO      CHGE0000
.
.         now get position file record
.
CHGE1000  PACK      KEY15,PRGIDB,SCRIDB,SCSLROW,SCSLCOL
          CALL      RDSCPS1                 * read screen position file
          BRANCH    OVRCD,CHGE0000
.
          CALL      KEYN0000                * keyin appropriate item
          BRANCH    EXIT,CHGE9100           * exitchar
          GOTO      CHGE0000
.
. ******* Post selected *******
.
CHGE5000  PROC      SCRCKMAN                * check all mand fields there
          BRANCH    EXIT,CHGE0000           * fields need to be entered
.
.         set exit flags
.
CHGE9000  MOVE      ZERO,EXIT               * valid
          GOTO      CHGE9999
.
CHGE9100  MOVE      ONE,EXIT                * cancel selected
.
CHGE9999  RETURN
+
.*********************************************************************
.                   RVCT0000
.         restore the saved values of each variable count
.*********************************************************************
RVCT0000  MOVE      TEN,FORM2
          WHILE     FORM2
            MOVE      SVARCNT[FORM2],VARCNT[FORM2]
            SUB       ONE,FORM2
          DO
RVCT9999  RETURN
+
REDISPS   DISPLAY   *P1:3,*EF:
                    *P1:4,"U/R Number : "
          RETURN
+
.**********************************************************************
.*                              GETSVAR                               *
.*                 Set up variables for surname searchs               *
.**********************************************************************
GETSVAR   MOVE      SP10,SRCHWBED       * Initialise the ward/bed to blanks
          PACK      SRCHDIAG,SP30,SP30  * Initialise the adm diag. to blanks
          MOVE      SP20,SRCHVAR        * Initialise the status
.
          MOVE      "ZZZZZZZZ",PVIDATE  * Initialise for RDPVISA2
.
          PACK      KEY24,PURNO,PVIDATE,SP20
          CALL      RDSVISA2
GETSV100  CALL      RDPVISA2
          BRANCH    OVRCD,GETSV999
.
          MATCH     PURNO,PVIURNO
          GOTO      GETSV999 IF NOT EQUAL
.
          COMPARE   THREE,PVITYPE
          GOTO      GETSV100 IF NOT EQUAL
.
.         We have an inpatient visit. Check if they are a current patient
.
          MOVE      PVIBILL,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,GETSV100
.
          BRANCH    ASTAT,GETSV100,GETSV200,GETSV200,GETSV200,GETSV100
.
GETSV200  PACK      SRCHDIAG,ADIAG1,ADIAG2
.
.         Find the last ward/bed for this patient
.
          MOVE      "ZZZZZZZZ",TDATE
          PACK      KEY30,AADMNO,TDATE,SP30
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,GETSV500
.
          COMPARE   AADMNO,TADMN
          GOTO      GETSV500 IF NOT EQUAL
.
          MATCH     SP3,TBED
          GOTO      GETSV300 IF EQUAL
.
          PACK      SRCHWBED,TWARD,SLASH,TBED
          GOTO      GETSV500
.
GETSV300  PACK      SRCHWBED,TWARD,SP7
.
.         Set up the coding status
.
GETSV500  MATCH     SP3,AUSR7
          GOTO      GETSV520 IF NOT EQUAL
.
          MATCH     SP8,ACODDTE
          GOTO      GETSV520 IF NOT EQUAL
.
          GOTO      GETSV999
.
GETSV520  UNPACK    ACODDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      SRCHVAR,AUSR7,COLON,CPCDATE
.
GETSV999  RETURN
+
.**************************************************************************
.*                              FDOC0000                                  *
.*                      Format doctors name                               *
.**************************************************************************
FDOC0000  PACK      DOCTNAM,SP30,SP30,SP20
          CALL      RDDOCT1
          BRANCH    OVRCD,FDOC9999
.
          MOVE      DSNAME,PACSNAME
          MOVE      DGNAME,PACGNAME
          MOVE      DTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DOCTNAM
.
FDOC9999  RETURN
+
.*********************************************************************
.                   THETHEAD
.         display theatre patient heading
.*********************************************************************
THETHEAD  UNPACK    OPDADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:5,"Booking No   : ",*V2LON,OPDAADMN,*P1:6,*EF,*HOFF:
                    *P1:6,"Session Date : ",*V2LON,CPCDATE,*HOFF:
                    "  Time : ",*V2LON,OPDATIME,*HOFF:
                    "    Case : ",*V2LON,OPDACASE,*HOFF:
                    "  ",*+,OPCNCDSC," : ",*V2LON,OPDACLIN
          RETURN
.
.*********************************************************************
.                   VIST0000                    Called by : xxxx0000 
.         enter the visit number
.*********************************************************************
VIST0000  DISPLAY   *P1:3,*EF:
                    *P1:4,"Visit Number : ",*EL;
.
VIST1000  KEYIN     *P16:4,*DV,UNDLN8:
                    *P16:4,*V2LON,PVIBILL:
                    *P16:4,*DV,PVIBILL
.
          COMPARE   ZERO,PVIBILL
          GOTO      VIST9100 IF EQUAL       * exit
.
          COMPARE   FOUR,CKVISTYP
          GOTO      VIST5000 IF EQUAL       * theatre patient special
.
.         a&e/outpatient/inpatient
.
          MOVE      PVIBILL,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,VIST7000          * invalid visit number
.
          MOVE      PVIURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,VIST7100          * no PMI details
.
          COMPARE   CKVISTYP,PVITYPE
          GOTO      VIST7200 IF NOT EQUAL   * not correct type
.
          MOVE      ZERO,EXIT
          GOTO      VIST9999
.
.         get theatre visit number
.
VIST5000  MOVE      PVIBILL,KEY8
          CALL      RDBKREC1
          BRANCH    OVRCD,VIST7000          * invalid visit number
.
          MATCH     ZEROUR,BKREURNO
          IF        @EQUAL
            MOVE      BKREBOOK,KEY8           * not in hospital
            CALL      RDPRAM1
            BRANCH    OVRCD,VIST7100
            MOVE      ZEROUR,PURNO
          ELSE
            MOVE      BKREURNO,KEY8           * use UR number
            CALL      RDMAST1
            BRANCH    OVRCD,VIST7100
            CALL      RDPMPX21
            BRANCH    OVRCD,VIST7100
          ENDIF
.
          CALL      PMIHEAD                 * display PMI details
          CALL      CLRB0000                * clear storage variables
          MOVE      ONE,CPAGENO             * set page
          MOVE      ZERO,CNTITEM            * clear count
          MOVE      "7",CVERT               * starting line
          MOVE      "5",CCOL1               * date display column
          DISPLAY   *P1:5,"Booking No   : ",*V2LON,BKREBOOK:
                    *P1:6,*EF,*V2LON,*ULON:
                    *P5:7,"   Date   ":
                    *P16:7,"Time ":
                    *P22:7,"Case":
                    *P27:7,OPCNCDSC,SP20,SP10
.
          CALL      TVFV0000                * display theatre visits
          BRANCH    EXIT,VIST0000           * no visits/exit
.
          MOVE      ZERO,EXIT
          GOTO      VIST9999
.
VIST7000  DISPLAY   *P1:24,*B,"Invalid visit number.  ",*EL;
          CALL      HITENTER
          GOTO      VIST0000
.
VIST7100  DISPLAY   *P1:24,*B,"No PMI details.  ",*EL;
          CALL      HITENTER
          GOTO      VIST0000
.
VIST7200  DISPLAY   *P1:24,*B,"Visit not valid for this site.  ",*EL;
          CALL      HITENTER
          GOTO      VIST0000
.
VIST9100  MOVE      ONE,EXIT
.
VIST9999  RETURN
+
.*********************************************************************
.                   GIAP0000                    Called by : IPAT2000 
.         get information about selected visit              DVIS6000
.*********************************************************************
GIAP0000  COMPARE   FOUR,CKVISTYP
          GOTO      GIAP6000 IF EQUAL       * dont do for theatre patients
.
          IF        PVITYPE = 1
            MOVE      PVIBILL,KEY8
            CALL      RDDETA1
            BRANCH    OVRCD,GIAP6100          * no details
          ENDIF
.
          IF        PVITYPE = 2
            MOVE      "out",OSTFILE           * default to 'out'
            MOVE      PVISITE,KEY6
            CALL      RDSITA1                 * get file prefix
            BRANCH    OVRCD,GIAP6200          * no details
            PACK      CFNAME,OSTFILE,FILCLIA1
            CLOSE     OUTCLIA1
            OPEN      OUTCLIA1,CFNAME
            PACK      CFNAME,OSTFILE,FILBOKA3
            CLOSE     OUTBOKA3
            OPEN      OUTBOKA3,CFNAME
            PACK      KEY36,PVIURNO,PVIDATE,SP30
            CALL      RDSBOKA3
GIAP1000    CALL      RDKBOKA3
            BRANCH    OVRCD,GIAP6400          * no booking details
            MATCH     PVIURNO,OBAURNO
            GOTO      GIAP6400 IF NOT EQUAL   * no booking details
            MATCH     PVIDATE,OBADATE
            GOTO      GIAP6400 IF NOT EQUAL   * no booking details
            MATCH     PVISITE,OBASITE
            GOTO      GIAP1000 IF NOT EQUAL   * not same site
            COMPARE   OBAOUTNO,PVIBILL
            GOTO      GIAP1000 IF NOT EQUAL   * not same visit number
          ENDIF
.
          IF        PVITYPE = 3
            PACK      DDIAG,SP30,SP20
            PACK      DDIAG2,SP30,SP20
            UNPACK    SP30,DSTAT,DDEST,DDATE,DFMBS
            MOVE      PVIBILL,KEY8
            CALL      RDDSCH1
            MOVE      PVIBILL,KEY8
            CALL      RDMISS1
            BRANCH    OVRCD,GIAP6300          * no details
          ENDIF
.
          PERFORM   PVITYPE,AAEHEAD,OUTHEAD,PATHEAD   * Display 3 Line Heading
          MOVE      SP10,THETUNIQ           * no theatre unique id
.
GIAP6000  MOVE      ZERO,EXIT
          GOTO      GIAP9999
.
GIAP6100  DISPLAY   *P1:24,*B,"No A&E details.  ",*EL;
          GOTO      GIAP9100
GIAP6200  DISPLAY   *P1:24,*B,"Invalid Site code.  ",*EL;
          GOTO      GIAP9100
GIAP6300  DISPLAY   *P1:24,*B,"No Admission details.  ",*EL;
          GOTO      GIAP9100
GIAP6400  DISPLAY   *P1:24,*B,"No Booking details.  ",*EL;
          GOTO      GIAP9100
.
GIAP9100  CALL      HITENTER
          MOVE      ONE,EXIT
.
GIAP9999  RETURN
+
.*********************************************************************
.                   TVFV0000
.         display theatre visits for a visit number
.         Para's  : BKREBOOK      visit number
.                   CNTITEM       item counter
.                   CVERT         first display row
.*********************************************************************
TVFV0000  PACK      KEY31,BKREBOOK,ZERO,SP30
          CALL      RSOPDEA2
.
TVFV1000  CALL      RKOPDEA2
          BRANCH    OVRCD,TVFV5000          * end of file
. 
          MOVE      OPDAADMN,FORM8
          COMPARE   BKREBOOK,FORM8
          GOTO      TVFV5000 IF NOT EQUAL   * different patient
          COMPARE   THREE,OPDASTAT
          GOTO      TVFV1000 IF EQUAL       * cancelled booking
.
. ******* increment counters *******
.
TVFV2000  ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      TVFV4000 IF NOT LESS    * need a new page
          ADD       ONE,CNTITEM             * add to item counter
.
. ******* display data and store key *******
.
TVFV3000  CALL      DETT0000
          PACK      THEATRE[CNTITEM],OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN:
                                     OPDASTAT,OPDACASE
          GOTO      TVFV1000
.
. ******* new screen needed *******
.
TVFV4000  BRANCH    CPAGENO,TVFV4500
.
.         Middle pages : (N)ext & (P)revious
.
TVFV4100  MOVE      ONE,CALLPOSN            * set position
          CALL      KEYA0000
          BRANCH    EXIT,TVFV7000,TVFV0000,TVFV9100
.                        Next     First    Exit
          GOTO      TVFV6000
.
.         first page : (N)ext
.
TVFV4500  MOVE      TWO,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,TVFV7000,TVFV5900,TVFV9100
.                        Next     First    Exit
          GOTO      TVFV6000
.
. ******* no more data to display *******
.
TVFV5000  COMPARE   ZERO,CNTITEM
          GOTO      TVFV8900 IF EQUAL       * no visits displayed
.
          BRANCH    CPAGENO,TVFV5500
.
.         last page : (P)revious
.
TVFV5100  MOVE      THREE,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,TVFV5900,TVFV0000,TVFV9100
.                        Next     First    Exit
          GOTO      TVFV6000
.
.         first page :
.
TVFV5500  MOVE      FOUR,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,TVFV5900,TVFV5900,TVFV9100
.                        Next     First    Exit
          GOTO      TVFV6000
.
TVFV5900  BEEP   
          BRANCH    CALLPOSN,TVFV4100,TVFV4500,TVFV5100,TVFV5500
.
. ******* item on screen selected *******
.
TVFV6000  MOVE      THEATRE[FORM2],KEY26
          CALL      RDOPDEA1
          BRANCH    OVRCD,TVFV5900          * invalid
.
          MOVE      OPDAADMN,PVIBILL        * set visit number
          MOVE      OPDAUNIQ,THETUNIQ       * set unique id
          CALL      CLAGTANS                * get anaesthetist
          CALL      THETHEAD                * display header
.
          MOVE      ZERO,EXIT
          GOTO      TVFV9999
.
. ******* set up for a new page *******
.
TVFV7000  CALL      CLRA0000                * clear storage variables
          ADD       ONE,CPAGENO             * add to page counter
          MOVE      ONE,CNTITEM             * reset item counter
          MOVE      "8",CVERT               * set row
          DISPLAY   *P1:CVERT,*EF           * clear screen
          GOTO      TVFV3000
.
TVFV8900  DISPLAY   *P1:24,*B,"No Theatre visits for this patient.  ",*EL;
          CALL      HITENTER
.
. ******* set exit flags *******
.
TVFV9100  MOVE      ONE,EXIT                * no visits displayed
.
TVFV9999  RETURN
+
          INC       STD001IO
          INC       NZCOMPIO/INC                 * IO Include for NZHIS
          INC       AAEHEAD
          INC       AAEDE1IO/INC
          INC       BOKRC1IO/INC            * booking file
          INC       CALCAGE
          INC       PATITMRD
          INC       CLACATIO/INC
          INC       CLACODIO/INC            * codes file
          INC       CLACDBDS/PBL            * ? for clacodfd
          INC       CLASITDS/PBL            * ? for clasitfd
          INC       CLAGTANS/PBL
          INC       CLASITIO/INC
          INC       CLAVARIO/INC 
          INC       DSPBGRND                * display the background
          INC       KYCLACOD/PBL            * keyin for patcodfd
          INC       KYCLASIT/PBL            * keyin for clasitfd
          INC       KYOPROPR/PBL            * keyin for oproprfd
          INC       PATICDKY/PBL            * keyin for paticdfd
          INC       OPRCLIIO/INC
          INC       OPRDEAIO/INC
          INC       OPRDEBIO/INC
          INC       OPROPRDS
          INC       OPROPRIO/INC
          INC       OPRSESIO/INC
          INC       OUTDIAIO/INC
          INC       OUTHEAD
          INC       OUTBOAIO/INC
          INC       OUTCLIIO/INC
          INC       OUTCTYIO/INC
          INC       OUTSITIO/INC
          INC       OUTPREIO/INC            * OP pre-attendance file
          INC       PATALERT
          INC       PATALRIO/INC
          INC       PATCOMN1/PBL            * holds KURN
          INC       PATCODKY
          INC       PATDOCKY
          INC       PATITMKY
          INC       PATHEAD
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATGSRIO/INC            * Patient Surname / Given Name
          INC       PATICDIO/INC
          INC       PATITMIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PATNOBIO/INC
          INC       PATPR1IO/INC            * pre-admission file
          INC       PATTRNIO/INC
          INC       PATVISIO/INC
          INC       PATWR1IO/INC
          INC       PATNIDIO/INC                 * Include for NZHIS vars
          INC       PATSNDX/PBL             * ? for surnames only
          INC       PATSNX2/PBL             * ? for surnames/given names
          INC       PMIHEAD
          INC       SCRCKMAN                * check if mandatory fields entered
          INC       SCRKYFRE                * keyin free format field
          INC       SCRCKFLD                * check if a field on the screen
          INC       SCRPSTIO/INC
          INC       SCRSBGIO/INC
          INC       SCRSLTIO/INC
          INC       DISPITEM
          INC       PATDICIO/INC
          INC       PATOICIO/INC
          INC       ICDHLPSC
AGECHK
CLPATMAS  RETURN
...............................................................................
