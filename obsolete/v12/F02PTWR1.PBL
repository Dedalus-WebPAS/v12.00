.*****************************************************************************
.*    Program      : F02PTWR1                                                *
.*    Description  : Conversion patwr1af to new File layout                  *
.*                                                                           *
.*    Author       :  PMcM                                                   *
.*    Date         :  May 2011                                               *
.*    Modifications:                                                         *
.*                                                                           *
.* V10.03.01 17/05/2013 Steve Armstrong  CAR 285506                          *
.*                     Mods to OFIX0000 to move data from old extension      *
.*                     field (WSPARE4) to the new extension field (WEXTN)    *
.*                     and then clear the WSPARE4 field.                     *
.*****************************************************************************
.* 10.02.04 11.07.2011 Move WEXTN, increase rec length to 300                *
.* 10.02.03 01.07.2011 correct description default                           *
.* 10.02.02 27.06.2011 Add index7                                            *
.* 10.02.01 20.06.2011 Populate short desc for beds from bed number          *
.* 10.02.00 xx.05.2011 Populate new Short description PTWDSDES from WBDESC   *
.*****************************************************************************
.
.  Global change F02PTWR1  eg F57PTDOC
.  Global change PATWR1FD  eg PATDOCFD (new layout)
.  Global change patwr1af  eg patdoctf
.  Global change PATWR1A1  eg PATDOCT1
.  Global change KEY6   eg KEY8
.  Global change KEY6  eg KEY9
.  Global change WRWARD1  eg WRDOCT1
.  Global change sptwr1af  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
OLDFILE1   IFILE SQL, FIXED=250, KEY="U1-3,4-6"
.
.WWARD      DIM       3          3           1      WARD NUMBER
.WBED       DIM       3          3           4      WARD BED NUMBER
.WBDESC     DIM      20         20           7      WARD BED DESCRIPTION
.DWADMNO    DIM       8          8          27      CURRENT PATIENT ADMISSION NO.
OLDWEXTN    DIM       4
.WBLINE     FORM      2          2          39      No LINES B/WN BEDS (WRD ONLY)
.WRTYPE     DIM       3          3          41      ROOM TYPE (BDS ONLY) (CAT RT)
.WEFRBT     DIM       3          3          44      E.F.R. (BEDS ONLY) (CAT BT)
.WNBEDS     FORM      3          3          47      No OF BEDS IN WARD (WRD ONLY)
.WHCSSUB    FORM      3          3          50      HCS WARD SUBSCRIPT (WRD ONLY)
.WSERV      DIM       3          3          53      WARD SERVICE CODE (WARD ONLY)
.WPLUR      FORM      1          2          56      PLURALITY NUMBER
.WINPUT     FORM      1          2          58      WARD ONLY INPUT (WRD INDIC)
.WOCCBED    FORM      3          3          60      NO.OF BEDS IN WARD(OCC STATS)
.WCLASS     DIM       3          3          63      WARD CLASSIFICATION (CAT CG)
.DWSTBY     DIM       8          8          66      CURRENT STBY ADMISS NUMBER
.WACTIVE    FORM      1          2          74      ACTIVE INDICATOR
.PTWDHOSN   DIM       3          3          76      Hospital ID (pathspaf)
.PTWDDNIN   FORM      1          2          79      Day/Night Indicator
.PTWDIAGE   DIM       3          3          81      Intended Age Group Cat IA
.PTWDICRE   DIM       3          3          84          "   Care Intensity Cat IC
.PTWDSEX    DIM       1          1          87          "   Sex of Patient M/F/E
.PTWDLOCN   DIM       4          4          88      Medical Record Location code
.PTWDGLDG   DIM      14         14          92      G/L and Cost Centre code
.PTWDNSTA   DIM       3          3         106      Nursing Station Number
.PTWDDOSA   DIM       1          1         109      DOAS Ward 0=No 1=Yes
.PTWDFVDW   DIM       1          1         110      Five Day Ward
.PTWDBDST   DIM       1          1         111      Bed Status - Open/Closed
.PTWDRBSC   DIM       3          3         112      Reason Bed Stat Changed CatBU
.PTWDHKST   DIM       3          3         115      House Keeping Status (Cat BV)
.PTWDIFST   DIM       3          3         118      Infection Status (Cat BW)
.PTWDCRDT   DIM       8          8         121      Date Record Created CCYYMMDD
.PTWDCRTM   DIM       8          8         129      Time Record Created HH:MM:SS
.PTWDCRID   DIM      10         10         137      WEB User ID - Creator
.PTWDUPDT   DIM       8          8         147      Date Record Updated CCYYMMDD
.PTWDUPTM   DIM       8          8         155      Time Record Updated HH:MM:SS
.PTWDUPID   DIM      10         10         163      WEB User ID - Updated
.PTWDCOMM   DIM      30         30         173      Ward / Bed Comments
.PTWDDFVS   DIM       1          1         203      Default Visitors (1=Yes)
.PTWDDFPH   DIM       1          1         204      Default Phone Calls (1=Yes)
.PTWDCFCD   DIM       6          6         205      Cancer Facility Code
.PTWDNDBD   DIM       2          2         211      Number of dynamic beds
.PTWDDOST   DIM       2          2         213      First Display Time for I/P
.PTWDDOET   DIM       2          2         215      Last Display Time for I/P
.PTWDSDES   DIM      10         10         217      Short ward name/description
.PTWDSPAR   DIM      23         23         227      Spare Variable 
.                                         
.                                          250

PATWR1A1   IFILE SQL, FIXED=300, KEY="U1-3,4-6"
.
WWARD      DIM       3          3           1      WARD NUMBER
WBED       DIM       3          3           4      WARD BED NUMBER
WBDESC     DIM      20         20           7      WARD BED DESCRIPTION
DWADMNO    DIM       8          8          27      CURRENT PATIENT ADMISSION NO.
WSPARE4    DIM       4          4          35      EXTENSION NUMBER
WBLINE     FORM      2          2          39      No LINES B/WN BEDS (WRD ONLY)
WRTYPE     DIM       3          3          41      ROOM TYPE (BDS ONLY) (CAT RT)
WEFRBT     DIM       3          3          44      E.F.R. (BEDS ONLY) (CAT BT)
WNBEDS     FORM      3          3          47      No OF BEDS IN WARD (WRD ONLY)
WHCSSUB    FORM      3          3          50      HCS WARD SUBSCRIPT (WRD ONLY)
WSERV      DIM       3          3          53      WARD SERVICE CODE (WARD ONLY)
WPLUR      FORM      1          2          56      PLURALITY NUMBER
WINPUT     FORM      1          2          58      WARD ONLY INPUT (WRD INDIC)
.                                                  0 = NO, 1 = YES
WOCCBED    FORM      3          3          60      NO.OF BEDS IN WARD(OCC STATS)
WCLASS     DIM       3          3          63      WARD CLASSIFICATION (CAT CG)
DWSTBY     DIM       8          8          66      CURRENT STBY ADMISS NUMBER
WACTIVE    FORM      1          2          74      ACTIVE INDICATOR
.                                                  0 = Active, 1 = Not Active
PTWDHOSN   DIM       3          3          76      Hospital ID (pathspaf)
PTWDDNIN   FORM      1          2          79      Day/Night Indicator
.                                                    0 = Day Only
.                                                    1 = Day & Night
.                                                    2 = Night Only
.
PTWDIAGE   DIM       3          3          81      Intended Age Group Cat IA
PTWDICRE   DIM       3          3          84          "   Care Intensity Cat IC
PTWDSEX    DIM       1          1          87          "   Sex of Patient M/F/E
PTWDLOCN   DIM       4          4          88      Medical Record Location code
PTWDGLDG   DIM      14         14          92      G/L and Cost Centre code
PTWDNSTA   DIM       3          3         106      Nursing Station Number
PTWDDOSA   DIM       1          1         109      DOAS Ward 0=No 1=Yes
PTWDFVDW   DIM       1          1         110      Five Day Ward
.                                                    0 = No
.                                                    1 = Yes
PTWDBDST   DIM       1          1         111      Bed Status - Open/Closed
.                                                    0 = Open
.                                                    1 = Closed
PTWDRBSC   DIM       3          3         112      Reason Bed Stat Changed CatBU
PTWDHKST   DIM       3          3         115      House Keeping Status (Cat BV)
PTWDIFST   DIM       3          3         118      Infection Status (Cat BW)
PTWDCRDT   DIM       8          8         121      Date Record Created CCYYMMDD
PTWDCRTM   DIM       8          8         129      Time Record Created HH:MM:SS
PTWDCRID   DIM      10         10         137      WEB User ID - Creator
PTWDUPDT   DIM       8          8         147      Date Record Updated CCYYMMDD
PTWDUPTM   DIM       8          8         155      Time Record Updated HH:MM:SS
PTWDUPID   DIM      10         10         163      WEB User ID - Updated
PTWDCOMM   DIM      30         30         173      Ward / Bed Comments
PTWDDFVS   DIM       1          1         203      Default Visitors (1=Yes)
PTWDDFPH   DIM       1          1         204      Default Phone Calls (1=Yes)
PTWDCFCD   DIM       6          6         205      Cancer Facility Code
PTWDNDBD   DIM       2          2         211      Number of dynamic beds
PTWDDOST   DIM       2          2         213      First Display Time for I/P
PTWDDOET   DIM       2          2         215      Last Display Time for I/P
PTWDSDES   DIM      10         10         217      Short ward name/description
WEXTN      DIM      20         20         227      Extension/contact number
PTWDSPAR   DIM      53         53         247      Spare Variable 
.
.End of Record                            300


.
.                                     ******** copy the new FD here *******
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DIM60     DIM       60
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PATWR1FD"
PRGID     INIT      "F02PTWR1"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      "patwr1af",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patwr1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptwr1af.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patwr1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptwr1af.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patwr1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sptwr1af",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patwr1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 300 UC1-3,4-6",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
.. index PATWR1A2 
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC27-34,1-3,4-6",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
.. index PATWR1A3 
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC4-6,1-3",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
.. index PATWR1A4 
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC66-73,1-3,4-6",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
.. index PATWR1A5 
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC76-78,1-3,4-6",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
.. index PATWR1A6 
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC76-78,4-6,1-3",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
.. index PATWR1A7 (the new one)
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC4-6,76-78,7-26,1-3",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
.
          OPEN      PATWR1A1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY6,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
.
          IF        (RECNUM%1000) = 0 | RECNUM = 1
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
          MOVE      SP4,WSPARE4
          PACK      WEXTN,OLDWEXTN,SP20
          MATCH     SP3,WBED
          IF        @EQUAL                                                   
            MOVE      WBDESC,PTWDSDES     * use ward name as short desc
          ELSE
            MOVE      WBED,PTWDSDES       * use bed # as short desc
          ENDIF 
.                                               * Pack key here
          PACK      KEY6,WWARD,WBED,SP70
          CALL      WRWARD1                    * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATWR1A1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sptwr1af*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat patwr1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'patwr1af'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*            Oracle fix to.......                                           *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:20,*EL,"Record No. :";
          OPEN      PATWR1A1,"patwr1af"
.
          PACK      KEY6,SP60  
          CALL      RDSWARD1                      * position at start of file
OFIX0010  CALL      RDKWARD1                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
.         
          IF        (RECNUM%1000) = 0 | RECNUM = 1
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          MATCH     SP3,WBED
          IF        @EQUAL                                                   
            MOVE      WBDESC,PTWDSDES     * use ward name as short desc
          ELSE
            MOVE      WBED,PTWDSDES       * use bed # as short desc
          ENDIF 
.
          PACK      WEXTN,WSPARE4,SP20    * load new extension number field
          MOVE      SP4,WSPARE4           * clear spare variable
.
          CALL      UPWARD1 
.
          GOTO      OFIX0010                     * get next record
.         
OFIX9000  CLOSE     PATWR1A1
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:24,*EL,"Update completed.  ";
          CALL      HITENTER
.
OFIX9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      OLDFILE1,KEY6;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;WWARD,WBED,WBDESC,DWADMNO,OLDWEXTN:
                             WBLINE,WRTYPE,WEFRBT,WNBEDS,WHCSSUB,WSERV:
                             WPLUR,WINPUT,WOCCBED,WCLASS,DWSTBY,WACTIVE:
                             PTWDHOSN,PTWDDNIN,PTWDIAGE,PTWDICRE:
                             PTWDSEX,PTWDLOCN,PTWDGLDG,PTWDNSTA,PTWDDOSA:
                             PTWDFVDW,PTWDBDST,PTWDRBSC,PTWDHKST,PTWDIFST:
                             PTWDCRDT,PTWDCRTM,PTWDCRID,PTWDUPDT,PTWDUPTM:
                             PTWDUPID,PTWDCOMM,PTWDDFVS,PTWDDFPH:
                             PTWDCFCD,PTWDNDBD,PTWDDOST,PTWDDOET,PTWDSDES:
                             PTWDSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
RDSWARD1  RESET     KEY6
          READ      PATWR1A1,KEY6;;
          RETURN
.
RDKWARD1  MOVE      ZERO,OVRCD
          READKS    PATWR1A1;WWARD,WBED,WBDESC,DWADMNO,WSPARE4:
                             WBLINE,WRTYPE,WEFRBT,WNBEDS,WHCSSUB,WSERV:
                             WPLUR,WINPUT,WOCCBED,WCLASS,DWSTBY,WACTIVE:
                             PTWDHOSN,PTWDDNIN,PTWDIAGE,PTWDICRE:
                             PTWDSEX,PTWDLOCN,PTWDGLDG,PTWDNSTA,PTWDDOSA:
                             PTWDFVDW,PTWDBDST,PTWDRBSC,PTWDHKST,PTWDIFST:
                             PTWDCRDT,PTWDCRTM,PTWDCRID,PTWDUPDT,PTWDUPTM:
                             PTWDUPID,PTWDCOMM,PTWDDFVS,PTWDDFPH:
                             PTWDCFCD,PTWDNDBD,PTWDDOST,PTWDDOET,PTWDSDES:
                             WEXTN,PTWDSPAR
          GOTO      OVERCOND IF OVER
          RETURN 
.
WRWARD1   MOVE      ZERO,OVRCD
          RESET     KEY6
          TRAP      OVERLOCK IF IO
          WRITE     PATWR1A1,KEY6;WWARD,WBED,WBDESC,DWADMNO,WSPARE4:
                                  WBLINE,WRTYPE,WEFRBT,WNBEDS,WHCSSUB,WSERV:
                                  WPLUR,WINPUT,WOCCBED,WCLASS,DWSTBY,WACTIVE:
                                  PTWDHOSN,PTWDDNIN,PTWDIAGE,PTWDICRE:
                                  PTWDSEX,PTWDLOCN,PTWDGLDG,PTWDNSTA,PTWDDOSA:
                                  PTWDFVDW,PTWDBDST,PTWDRBSC,PTWDHKST,PTWDIFST:
                                  PTWDCRDT,PTWDCRTM,PTWDCRID,PTWDUPDT,PTWDUPTM:
                                  PTWDUPID,PTWDCOMM,PTWDDFVS,PTWDDFPH:
                                  PTWDCFCD,PTWDNDBD,PTWDDOST,PTWDDOET,PTWDSDES:
                                  WEXTN,PTWDSPAR
          TRAPCLR   IO
          RETURN


UPWARD1   UPDATE    PATWR1A1;WWARD,WBED,WBDESC,DWADMNO,WSPARE4:
                             WBLINE,WRTYPE,WEFRBT,WNBEDS,WHCSSUB,WSERV:
                             WPLUR,WINPUT,WOCCBED,WCLASS,DWSTBY,WACTIVE:
                             PTWDHOSN,PTWDDNIN,PTWDIAGE,PTWDICRE:
                             PTWDSEX,PTWDLOCN,PTWDGLDG,PTWDNSTA,PTWDDOSA:
                             PTWDFVDW,PTWDBDST,PTWDRBSC,PTWDHKST,PTWDIFST:
                             PTWDCRDT,PTWDCRTM,PTWDCRID,PTWDUPDT,PTWDUPTM:
                             PTWDUPID,PTWDCOMM,PTWDDFVS,PTWDDFPH:
                             PTWDCFCD,PTWDNDBD,PTWDDOST,PTWDDOET,PTWDSDES:
                             WEXTN,PTWDSPAR
          RETURN

          INC       STD001IO
