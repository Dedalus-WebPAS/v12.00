. ********************************************************************** 
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS70                                             *
. * Desc      :   General Journal Maintenance                          *
. **********************************************************************
. * Date      :   16.10.1990                                           *
. * Author    :   Paul Duncan (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filenames (FILENAM1 & FILENAM2).  *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.01  30.03.2001 Dave Matthews                                 *
. *           Call 8594 - fix out of balance journals, left by system  *
. *           crash, power-out etc. Stop these journals being submitted*
. *           for authorization until balanced.                        *
. * VF.09.B01 29.11.2000 Sandra Barcham                                *
. *           Added BAS Code                                           *
. **********************************************************************
. * VF.01.03  11.09.2000 Sandra Barcham                                *
. *           Allow journal to be changed or deleted if no transactions*
. *           srf 5814                                                 *
. * VF.01.02  01.08.2000 Sandra Barcham                                *
. *           Fix search option of journals awaiting submission        *
. * VF.01.01  28.07.2000 Charles Handaya                               *
. *           Default description from previous line                   *
. **********************************************************************
. * VF.00.05  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.04  09.11.1999 Sandra Barcham                                *
. *           Recompiled for change FMSSBAUT for periodic journals     *
. * VF.00.03  01.09.1999 Sandra Barcham                                *
. *           Recompiled for change to index fix to FMSJPDA2           *
. *           srf 645667                                               *
. * VF.00.02  16.08.1999 Sandra Barcham                                *
. *           Stop submitting for authorisation journals in input      *
. *           srf 645667                                               *
. * VF.00.01  29.04.1999 Sandra Barcham                                *
. *           Recompiled for FMSDISKY & FMSRESKY                       *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS70
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.             delete temporary files
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSBPFFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSDISFD/INC
          INC       FMSJDTFD/INC
          INC       FMSJMAFD/INC
          INC       FMSJPDFD/INC
          INC       FMSJTPFD/INC
          INC       FMSJWPFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSRESFD/INC
          INC       FMSTDSFD/INC
.
          INC       IBABASFD/INC
          INC       IBABATFD/INC
          INC       IBACONFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.==============================================================================
.   CONSTANTS
.==============================================================================
.
BASDESC   DIM       3
.
CP        INIT      "cp "              * word processor variables
.
FORM2A    FORM      2
.
INSRTLNO  FORM      2                  * Line No for insert
.
KEY10SAV  DIM       10
.
NAME1     INIT      "fmstm1"
NAME2     INIT      "fmstm2"
.
SAVJDESC  DIM       40
.
TXT       INIT      ".txt "
.
WP        INIT      "wp "
WPDAT     INIT      ".txt 999 7 -1 70 14"
WPSTAT    FORM      2
.
ZERO20    INIT      "00000000000000000000"
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
DASH      INIT      "-"
LLPOS     FORM      2
BALANCE   FORM      12.2
.
CASHDESC  DIM       3
CPOSDESC  DIM       15
CPOSPDAT  DIM       10
CREDTOT   FORM      12.2
CURDATE   DIM       8
.
AMOUNT    FORM      12.2
DEBTOT    FORM      12.2
DM4       DIM       4
DIM30     DIM       30
DIM40     DIM       40
DIMAMNT   DIM       15
DIMPERD   DIM       6
DIMMON    DIM       2
DIMYEAR   DIM       4
DISPCNT   FORM      2
DOCREF    DIM       7
DRCRDESC  DIM       2
DRCRLDES  DIM       6
.
FMSTMP01  FILE      ASCII,FIXED=70     * WP Holding File Def'n 1
FILENAM1  DIM       8
FMSTMP02  FILE      ASCII,FIXED=70     * WP Holding File Def'n 2
FILENAM2  DIM       8
FILENAM3  DIM       8
FORM3     FORM      3
FORM5     FORM      5
FORM12P2  FORM      12.2
FORMPERD  FORM      6
.
JOURTYPE  DIM       1
.
LEDGDESC  DIM       35
.
NOPERDS   FORM      2
NOTES     FORM      1
.
MAXDISP   FORM      2
MTCHAMNT  DIM       12
.
NEXT      FORM      1
NUMREC    FORM      2
.
PAGENO    FORM      3
PERDNO    FORM      2
PERPERC   FORM      4.2
PPOSDESC  DIM       15
PPOSPDAT  DIM       10
PROCFLAG  FORM      1
.
RECCNT    FORM      2
REVDESC   DIM       3
REVFLAG   FORM      1
RPOSDESC  DIM       15
RPOSPDAT  DIM       10
.
SAVEDRCR  DIM       1
SAVEDESC  DIM       2
SAVLOCKD  DIM       7
SCREEN    FORM      1
SEL01     DIM       10
SEL02     DIM       10
SEL03     DIM       10
SEL04     DIM       10
SEL05     DIM       10
SEL06     DIM       10
SEL07     DIM       10
SEL08     DIM       10
SEL09     DIM       10
SEL10     DIM       10
SEL11     DIM       10
SEL12     DIM       10
SEL13     DIM       10
SEL14     DIM       10
SEL15     DIM       10
STAT0     INIT      "In Input            "
STAT1     INIT      "Balanced            "
STAT2     INIT      "Submitted           "
STAT9     INIT      "Authorised          "
STATE     INIT      "Invalid Status      "
STATDESC  DIM       20
SUBTYPE   FORM      1           * FMSSBAUT
.
VALOPTN   DIM       4 
.
WKDTDESC  DIM       15
WKDTPDAT  DIM       10
WORKPERD  DIM       6 
.
DISPFLAG  FORM      1
ACCEPT    FORM      1
OPTIONP   FORM      2        * screen P selection keyin var
OPTIONX   FORM      2        * screen X selection keyin var
JID1      DIM       6
JID2      DIM       6
ACCYEAR   DIM       4
ANYSUB    FORM      1
.
PRGID     INIT      "IBAFMS70"
PRGNAM    INIT      "General Journal Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      CLOK0000           * clear last locked record
          CALL      OPTN0000           * add change delete submit print
          BRANCH    OPTION,ML1000,ML1000,ML1000,ML3000,ML7000
          GOTO      ML9999
.
ML1000    CALL      CLOK0000           * clear last locked record
          CALL      CLR0000            * clear display variables
          CALL      PROC0000           * get entry
          BRANCH    EXIT,ML0100,ML0100,ML1500,ML3000 * exit program
.
ML1500    COMPARE   "3",OPTION         * deleting?
          GOTO      ML2000 IF EQUAL
          COMPARE   "2",OPTION         * changing?
          GOTO      ML1700 IF EQUAL
.
          CALL      MADT0000           * process master details
          BRANCH    EXIT,ML1000,ML0100
.
          COMPARE   "4",OPTION         * submitting for authorization?
          GOTO      ML3000 IF EQUAL
.
          CALL      TRAN0000 
          GOTO      ML1000             * get next entry
.
.---- change ----
.
ML1700    CALL      MENU0000
          BRANCH    OPTIONX,ML1800,ML1900
          GOTO      ML1000
.
ML1800    CALL      MADT0000           * process master details
          GOTO      ML1700
.
ML1900    MOVE      FMJMDESC,SAVJDESC
          CALL      TRAN0000           * process transaction details
          GOTO      ML1700
.
.---- delete ----
.
ML2000    CALL      DELT0000           * delete?
          BRANCH    EXIT,ML1000,ML0100
          GOTO      ML1000
.
. --- Submit for Authorization  ---
.
ML3000    CALL      SELA0000           * authorize journals
          GOTO      ML0100
.
.---- print listing ----
.
ML7000    CALL      SELP0000           * get parameters
          BRANCH    EXIT,ML0100
.
          CALL      PRNT0000           * print report
          GOTO      ML0100
.
.
ML9999    PREP      FMSTMP01,FILENAM1
          CLOSE     FMSTMP01,DELETE
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
.
          DISPLAY   *P64:24,"fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
.
          DISPLAY   *P64:24,"fmsjmaaf";
          OPEN      FMSJMAA1,"fmsjmaaf"
          OPEN      FMSJMAA2,"fmsjmaaf"
          OPEN      FMSJMAA3,"fmsjmaaf"
.
          DISPLAY   *P64:24,"fmsjwpaf";
          OPEN      FMSJWPA1,"fmsjwpaf"
.
          DISPLAY   *P64:24,"fmsjdtaf";
          OPEN      FMSJDTA1,"fmsjdtaf"
.
          DISPLAY   *P64:24,"fmsjpdaf";
          OPEN      FMSJPDA1,"fmsjpdaf"
          OPEN      FMSJPDA2,"fmsjpdaf"
          OPEN      FMSJPDA3,"fmsjpdaf"
.
          DISPLAY   *P64:24,"fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsresaf";
          OPEN      FMSRESA1,"fmsresaf"
.
          DISPLAY   *P64:24,"fmstdsaf";
          OPEN      FMSTDSA1,"fmstdsaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          CALL      RDFMCO51                     * read control file sector 51
          CALL      RDFMCO52                     * read control file sector 52
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS,IBCNBSFY
          IF        IBCNUBAS=1
            MOVE      "BAS",BASDESC
            DISPLAY   *P64:24,"ibabasaf";
            OPEN      IBABASA1,"ibabasaf"
          ELSE
            MOVE      SP3,BASDESC
          ENDIF
.
INIT0500  
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.
.         PACK      FILENAM2,NAME2,PORT
.         REP       " 0",FILENAM2
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM2
.
          PACK      CURDATE,CCC,CYY,CMM,CDD      * todays date
          REP       " 0",CURDATE
          MOVE      ONE,CCENTRY                  * use centries in keydate
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.* OPTN - Select main option              Called by ML0100               *
.*************************************************************************
OPTN0000  MOVE      ZERO,DISPFLAG
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*P1:5," 1",*P1:6," 2",*P1:7," 3":
                    *P1:8," 4",*P1:9," 5",*HOFF:
                    *P3:4," = Exit":
                    *P3:5," = Insert":
                    *P3:6," = Change":
                    *P3:7," = Delete":
                    *P3:8," = Submit for Authorisation":
                    *P3:9," = Print":
                    *P1:11,"Select Option :"
.
OPTN1000  KEYIN     *P17:11,*DV,UNDLN1,*P17:11,*V2LON,FORM1
          MOVE      FORM1,OPTION
          BRANCH    OPTION,OPTN2000,OPTN3000,OPTN4000,OPTN5000,OPTN6000
          COMPARE   ZERO,OPTION         * exit?
          GOTO      OPTN9000 IF EQUAL
.
          BEEP
          GOTO      OPTN1000
.
OPTN2000  DISPLAY   *P60:3,*V2LON,"Insert"
          GOTO      OPTN8000
.
OPTN3000  DISPLAY   *P60:3,*V2LON,"Change"
          GOTO      OPTN8000
.
OPTN4000  DISPLAY   *P60:3,*V2LON,"Delete"
          GOTO      OPTN8000
.
OPTN5000  DISPLAY   *P60:3,*V2LON,"Submit"
          GOTO      OPTN8000
.
OPTN6000  DISPLAY   *P60:3,*V2LON,"Print "
          GOTO      OPTN8000
.
OPTN8000  MOVE      FALSE,EXIT             * exit
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN 
.**********************************************************************
.  MENU - change sub menu                              Called By ML
.        Returns  - OPTIONX
.**********************************************************************
MENU0000  DISPLAY   *P1:5,*EF:
                    *P1:6,*V2LON,"0",*HOFF," = Exit":
                    *P1:7,*V2LON,"1",*HOFF," = Header Details":
                    *P1:8,*V2LON,"2",*HOFF," = Transactions Details":
                    *P1:10,"Select Option :"
.
MENU1000  KEYIN     *P17:10,*DV,UNDLN1:
                    *P17:10,*V2LON,OPTIONX
          COMPARE   ZERO,OPTIONX        * exit?
          GOTO      MENU9000 IF EQUAL
          BRANCH    OPTIONX,MENU9000,MENU9000
.
          BEEP
          GOTO      MENU1000
.
MENU9000  
.
MENU9999  RETURN
.*************************************************************************
.* CLR - Clear the display variables                                     *
.*************************************************************************
CLR0000   UNPACK    SP70,FMJMJID,FMJMDESC,FMJMDENT,FMJMLEDG,FMJMPPOS
          UNPACK    SP70,FMLADESC,FMJMCPOS,FMJMRPOS
          MOVE      ZERO,FMJMCASH
          MOVE      ZERO,FMJMREV
          UNPACK    SP70,STATDESC,PPOSDESC,PPOSPDAT,CPOSPDAT,CPOSDESC
          UNPACK    SP70,CASHDESC,REVDESC,FMLALEDG,LEDGDESC
          MOVE      ZERO,DEBTOT
          MOVE      ZERO,CREDTOT
          UNPACK    SP70,FMRSCODE,FMDSCODE
          UNPACK    SP70,DIM30
.
CLR1000   MOVE      "  1",FMJDLNO
          UNPACK    SP70,FMJDJID,FMJDDRCR,FMJDDESC,FMJDACC
          UNPACK    SP70,FMJDDIS,FMJDRES,FMJDBASC
          MOVE      ZERO,FMJDTAMT
          MOVE      ZERO,FMJDPERC
          MOVE      ZERO,FMJDPAMT
.
CLR9999   RETURN
.******************************************************************************
.* PROC - Enter Genereal journal code            Called by ML1000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMJWJID  (variable entered)                               *
.******************************************************************************
PROC0000  MOVE      ONE,SCREEN         * screen one
          CALL      RJMAFM00
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          COMPARE   ONE,OPTION        * insert mode ?
          GOTO      PROC1000 IF NOT EQUAL
.
          DISPLAY   *P28:4,*V2LON,ZERO
          MOVE      ZERO,FMJMJID
          MOVE      FALSE,EXIT
          MOVE      ZERO,FMJMSTAT
          GOTO      PROC3000
.
PROC1000  MOVE      FMJOPRE1,FMJMJTY
          MOVE      ZERO,DISPFLAG
          CALL      KJMAFM00            * keyin journal code
          BRANCH    EXIT,PROC9999,PROC9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          PACK      KEY7,FMJMJTY,FMJMJID,SP70
          PACK      SAVLOCKD,KEY7,SP70
          CALL      RLFMJM1
          BRANCH    OVRCD,PROC1000,PROC1100
          GOTO      PROC1200
.
PROC1100  DISPLAY   *P1:24,*B,*EF,"Journal ",*V2LON,FMJMJID,*HOFF:
                    " Locked - Try Again Later - ";
          CALL      HITENTER
          GOTO      PROC1000
.
PROC1200  MATCH     "0",FMJMSTAT    * Awaiting processing?
          GOTO      PROC2000 IF NOT EQUAL
.
....dlm change 29/03/2001 ......................................
          COMPARE   "2",OPTION      * Change Selected for "In Input" Status
          GOTO      PROC3000 IF EQUAL
....end dlm change 29/03/2001 .................................
    
          DISPLAY   *P1:24,*B,*EF:
                    "Invalid - Journal must be Balanced - "; 
          CALL      HITENTER
          GOTO      PROC0000
.
PROC2000  MATCH     "1",FMJMSTAT    * Balanced Journal
          GOTO      PROC3000 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "Invalid - Journal has been Submitted or Authorised - "; 
          CALL      HITENTER
          GOTO      PROC0000
.
PROC3000  MOVE      FMJMSTAT,F1
          MOVE      STAT0,STATDESC
          LOAD      STATDESC,F1,STAT1,STAT2,STATE,STATE,STATE:
                                STATE,STATE,STATE,STAT9
.
          DISPLAY   *P51:4,"Status  : ",*V2LON,STATDESC
          BRANCH    OPTION,PROC9999,PROC9999,PROC4000,PROC9999
.
PROC4000  PACK      KEY10,KEY7,SP10
          CALL      RSFMJD1                 * is there any transaction details
.
PROC5000  CALL      RKFMJD1                 * is there any transaction details
          BRANCH    OVRCD,PROC9999
          PACK      KEY10,FMJOPRE1,FMJDJID,SP10
          MATCH     KEY7,KEY10              * this journal?
          GOTO      PROC9999 IF NOT EQUAL
          COMPARE   FMJDTAMT,ZERO           * transaction zero ?
          GOTO      PROC5000 IF EQUAL
.
.         DISPLAY   *P1:24,*B,*EF:
.                   "Cannot Delete - Journal has non-zero transactions - "; 
.         CALL      HITENTER
.         GOTO      PROC0000
.
.
PROC9999  RETURN
.**********************************************************************
.  CLOK - clear locked record                          Called By ML
.**********************************************************************
CLOK0000  PACK      KEY7,SAVLOCKD,SP70
          CALL      UUFMJM1
.
CLOK9999  RETURN
.*************************************************************************
.* MADT - Process the journal master details        Called by ML1000     *
.*************************************************************************
MADT0000  MOVE      FALSE,EXIT
          MOVE      ONE,SCREEN        * screen one
          CALL      GETW0000          * get notes from file
.
          COMPARE   ONE,OPTION        * insert mode ?
          CALL      IMDT0000 IF EQUAL * input mode if yes
          BRANCH    EXIT,MADT7000,MADT9999
.
          COMPARE   ONE,OPTION        * not insert mode ?
          CALL      DMDT0000 IF NOT EQUAL
.
          BRANCH    PROCFLAG,MADT1000
          CALL      QPRO0000
          GOTO      MADT9000
.
MADT1000  CALL      MQST0000           * select option post cancel notes
          COMPARE   ZERO,CCITEM        * post?
          GOTO      MADT5000 IF EQUAL
.
          COMPARE   "-1",CCITEM        * cancel?
          GOTO      MADT9000 IF EQUAL
.
          COMPARE   "-2",CCITEM        * notes?
          GOTO      MADT6000 IF EQUAL
.
          BRANCH    CCITEM,MADT1100,MADT1200,MADT1300,MADT1400,MADT1500,MADT1600
          BEEP
          GOTO      MADT1000
.
MADT1100  CALL      KBDS0000           * keyin brief description
          BRANCH    EXIT,MADT1100
          GOTO      MADT1000
.
MADT1200  CALL      KDEN0000           * keyin date entered
          GOTO      MADT1000
.
MADT1300  PACK      KEY16,FMJOPRE1,FMJMJID,SP10   * any details on this journal?
          CALL      RSFMJD1
          CALL      RKFMJD1
          BRANCH    OVRCD,MADT1350
          PACK      KEY7,FMJDJTY,FMJDJID,SP70
          MATCH     KEY7,KEY16
          GOTO      MADT1350 IF NOT EQUAL
          DISPLAY   *P1:24,*EL,*B,"This Journal has transaction details - ":
                    " Can't change Ledger. Tap <",*V2LON,"ENTER",*HOFF,">"
          KEYIN     ANS;
          GOTO      MADT1000
.
MADT1350  CALL      KLDG0000         * keyin ledger
          BRANCH    EXIT,MADT1300,MADT9000
          GOTO      MADT1000
.
MADT1400  CALL      KAPD0000         * keyin accrual posting date
          GOTO      MADT1000
.
MADT1500  CALL      KPTC0000         * keyin Post to cash and dates
          GOTO      MADT1000
.
MADT1600  CALL      KPRV0000         * keyin post reversal and dates
          GOTO      MADT1000
.
MADT5000  CALL      CKLK0000         * check if periods are locked
          BRANCH    EXIT,MADT1000
.
          CALL      WJMA0000         * write to journal file
          CALL      WCOM0000
          MOVE      FALSE,EXIT
          GOTO      MADT9999
.
MADT6000  CALL      NOTE0000         * input or change notes
          CALL      RLMAFM00         * redisplay screen
          GOTO      MADT1000
.
MADT7000  COMPARE   "1",OPTION       * inserting?
          GOTO      MADT9999 IF NOT EQUAL
.
          MOVE      TWO,EXIT
          GOTO      MADT9999
.
MADT9000  MOVE      TRUE,EXIT
          PACK      KEY7,FMJMJTY,FMJMJID,SP70
          CALL      RLFMJM1
.
MADT9999  RETURN
.**********************************************************************
.  CKLK - Checks for any locked periods                Called By MADT
.        Requires - FMSJMAAF record
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CKLK0000  MOVE      FMJMPPOS,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,CKLK9700
          BRANCH    PERLOCK,CKLK9500
          MOVE      CURYEAR,ACCYEAR
.
CKLK0100  COMPARE   ONE,FMJMCASH
          GOTO      CKLK0200 IF NOT EQUAL
          MOVE      FMJMCPOS,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,CKLK9700
          BRANCH    PERLOCK,CKLK9500
.
          MATCH     CURYEAR,ACCYEAR    * financial year conflict ?
          GOTO      CKLK9600 IF NOT EQUAL
.
CKLK0200  COMPARE   ONE,FMJMREV
          GOTO      CKLK9000 IF NOT EQUAL
          MOVE      FMJMRPOS,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,CKLK9700
          BRANCH    PERLOCK,CKLK9500
.
CKLK9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKLK9999
.
CKLK9500  UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      "Period Locked For Date ",KEY24
          MOVE      " - ",KEY3
          PACK      ERRMSG,KEY24,CPCDATE,KEY3
          GOTO      CKLK9700
.
CKLK9600  MOVE      "Cash and Financial Year Conflict - ",ERRMSG
          GOTO      CKLK9700
.
CKLK9700  STRIP     ERRMSG
          DISPLAY   *P1:24,*+,*B,*EF,ERRMSG;
          CALL      HITENTER
          MOVE      ONE,EXIT           * quit
.
CKLK9999  RETURN
.**********************************************************************
.  MQST - select, post, exit, run report              Called By SELT
.        Returns  - CCITEM   (0=post, -1=cancel, -2=notes, other=select
.**********************************************************************
MQST0000  MOVE      SP70,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON:
                    "C",*HOFF,")ancel, (",*V2LON:
                    "N",*HOFF,")otes ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQST0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  P",CCITEMD      * post ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  C",CCITEMD      * cancel ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      "-2",CCITEM
          MATCH     "  N",CCITEMD      * notes ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQST9999 IF NOT LESS
.
          BEEP
          GOTO      MQST0000
.
MQST9999  RETURN
.**********************************************************************
.  QPRO - Quesion for processed journals                 Called By MADT
.**********************************************************************
QPRO0000  KEYIN     *P1:24,*EF,"Journal is Processed - (",*V2LON:
                    "N",*HOFF,")otes, e(",*V2LON:
                    "X",*HOFF,")it : _":
                    *P42:24,*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "X",ANS
          GOTO      QPRO9999 IF EQUAL
.
          MATCH     "N",ANS
          GOTO      QPRO1000 IF EQUAL
          BEEP
          GOTO      QPRO0000
.
QPRO1000  CALL      NOTE0000
          CALL      WCOM0000
          CALL      DMDT0000
          CALL      QPRO0000
.
QPRO9999  RETURN
.*************************************************************************
.* DMDT - Set up the variables to display the record on file             *
.*                     called by : MADT0000                              *
.*************************************************************************
DMDT0000  MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1              * get ledger description
          MOVE      FMLADESC,LEDGDESC    * set ledger description
.
          MOVE      FMJMPPOS,WORKDATE   
          CALL      CFPR0000             * get financial period for accrual
                                         * posting date
          MOVE      WKDTDESC,PPOSDESC
          MOVE      WKDTPDAT,PPOSPDAT
.
          MOVE      DNO,CASHDESC
          LOAD      CASHDESC,FMJMCASH,DYES
          COMPARE   "0",FMJMCASH         * posting cash
          GOTO      DMDT1000 IF EQUAL
.
          MOVE      FMJMCPOS,WORKDATE   
          CALL      CFPR0000             * get financial period for accrual
                                         * posting date
          MOVE      WKDTDESC,CPOSDESC
          MOVE      WKDTPDAT,CPOSPDAT
.
DMDT1000  MOVE      DNO,REVDESC
          LOAD      REVDESC,FMJMREV,DYES
          COMPARE   "0",FMJMREV         * posting cash
          GOTO      DMDT2000 IF EQUAL
.
          MOVE      FMJMRPOS,WORKDATE   
          CALL      CFPR0000             * get financial period for accrual
                                         * posting date
          MOVE      WKDTDESC,RPOSDESC
          MOVE      WKDTPDAT,RPOSPDAT
.
DMDT2000  CALL      RLMAFM00             * display screen
.
          PROC      CDEB0000             * calculate debit total
          PROC      CCRE0000             * calculate credit total
.
          DISPLAY   *P5:13,"Debit  Total",*P26:13,": ",*V2LON,DEBTOT:
                    *P5:14,*HOFF,"Credit Total",*P26:14,": ",*V2LON:
                    CREDTOT
          MOVE      ONE,PROCFLAG
.
          MATCH     "2",FMJMSTAT
          GOTO      DMDT3000 IF EQUAL
          MATCH     "9",FMJMSTAT             * is it processed
          GOTO      DMDT9999 IF NOT EQUAL    * if not - dont display
.
DMDT3000  MOVE      ZERO,PROCFLAG
          PACK      KEY12,FMJOPRE1,FMJMJID,SP20
          CALL      RSFMJP2
.
          CALL      RKFMJP2
          BRANCH    OVRCD,DMDT9999
          PACK      KEY7,FMJPJTY,FMJPJID
          MATCH     KEY7,KEY12
          GOTO      DMDT9999 IF NOT EQUAL
          DISPLAY   *P28:16,"Processing Details":
                    *P5:17,"Date Processed",*P26:17,":"
          UNPACK    FMJMPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:17,*V2LON,CPCDATE,*HOFF,*P45:17,"Batch     : ":
                    *V2LON,FMJMPBAT
          COMPARE   ZERO,FMJMREV
          GOTO      DMDT9999 IF EQUAL
          DISPLAY   *P5:18,*HOFF,"Reversal Processed   : "
          UNPACK    FMJMRDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:18,*V2LON,CPCDATE,*HOFF,*P45:18,"Batch     : ":
                    *V2LON,FMJMRBAT
          GOTO      DMDT9999
.
DMDT9999  RETURN
.*************************************************************************
.* IMDT - Input the journal master details      Called by MADT0000       *
.*      - Returns - EXIT = 0 -valid entries 1 -exitchar or enter hit     *
.*************************************************************************
IMDT0000  CALL      RLMAFM00
          CALL      KBDS0000         * keyin brief description
          BRANCH    EXIT,IMDT9000,IMDT9999
IMDT1000  CALL      KDEN0000         * keyin date entered
          BRANCH    EXIT,IMDT0000,IMDT9999
IMDT2000  CALL      KLDG0000         * keyin ledger
          BRANCH    EXIT,IMDT1000,IMDT9999
IMDT3000  CALL      KAPD0000         * keyin accrual posting date
          BRANCH    EXIT,IMDT2000,IMDT9999
IMDT4000  CALL      KPTC0000         * keyin Post to cash and dates
          BRANCH    EXIT,IMDT3000,IMDT9999
IMDT5000  CALL      KPRV0000         * keyin post reversal and dates
          BRANCH    EXIT,IMDT4000,IMDT9999
.
IMDT8000  MOVE      FALSE,EXIT
          MOVE      ONE,PROCFLAG
          GOTO      IMDT9999
.
IMDT9000  MOVE      TRUE,EXIT
.
IMDT9999  RETURN
.*************************************************************************
.* KBDS - Keyin the brief desciption of the journal                      *
.*        Returns - EXIT = 0 - valid description 1 - null                *
.*                     called by :  MADT1100, IMDT0000                   *
.*************************************************************************
KBDS0000  MOVE      FMJMDESC,DIM30
          KEYIN     *P28:6,*DV,UNDLN30,*P28:6,*V2LON,DIM30:
                    *P28:6,*DV,DIM30
.
          PACK      DIM30,DIM30,SP70
.
          MATCH     DIM30,SP70          * nothing entered?
          GOTO      KBDS1000 IF EQUAL
.
          MATCH     EXITCHAR,DIM30          * nothing entered?
          GOTO      KBDS8000 IF NOT EQUAL
.
          MOVE      TWO,EXIT               * exitchar
          PACK      FMJMDESC,DIM30,SP70
          GOTO      KBDS9999
.
KBDS1000  MOVE      TRUE,EXIT
          PACK      FMJMDESC,DIM30,SP70
          GOTO      KBDS9999
.
KBDS8000  MOVE      FALSE,EXIT
          PACK      FMJMDESC,DIM30,SP70
.
KBDS9999  RETURN
.*************************************************************************
.* KDEN - Keyin date entereed                Called by MADT1200 IMDT2000 *
.*      - Returns EXIT = 0 - valid entry 1 - null 2 -exitchar            *
.*************************************************************************
KDEN0000  BRANCH   OPTION,KDEN1000            * which default to set up?
          REP      " 0",FMJMDENT
          UNPACK   FMJMDENT,CCENT,CYEAR,CMON,CDAY
          GOTO     KDEN2000
.
KDEN1000  UNPACK   CURDATE,CCENT,CYEAR,CMON,CDAY
.
KDEN2000  MOVE     "7",CVERT
          MOVE     "28",CCOL
          CALL     KEYDATE            * keyin date
          BRANCH   CQUEST,KDEN2000    * no question mark
          BRANCH   OVRCD,KDEN2000
          MOVE     FALSE,EXIT
          PACK     FMJMDENT,CCENT,CYEAR,CMON,CDAY
.
KDEN9999  RETURN
.*************************************************************************
.* KLDG - Keyin ledger code                 Called by IMDT3000, MADT1300 *
.*        Returns EXIT = 0 - valid entry 1 -null 2 exitchar              *
.*************************************************************************
KLDG0000  MOVE      "8",CVERT           * set up variables for standard keyin
          MOVE      "28",CCOL
          CALL      KLMAFM00            * keyin ledger
          BRANCH    EXIT,KLDG1000,KLDG9999
.
          DISPLAY   *P28:8,*V2LON,FMLALEDG,*HOFF,SP1,FMLADESC
          MOVE      FMLALEDG,FMJMLEDG
          MOVE      FMLADESC,LEDGDESC
          GOTO      KLDG9999
.
KLDG1000  MOVE      SP70,LEDGDESC
.
KLDG9999  RETURN
.*************************************************************************
.* KAPD - Keyin Accrual posting date       Called by MADT1400,IMDT4000   *
.*        Returns EXIT = 0 - valid entry 1 - null                        *
.*************************************************************************
KAPD0000  BRANCH   OPTION,KAPD1000            * which default to set up?
          REP      " 0",FMJMPPOS
          UNPACK   FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          GOTO     KAPD2000
.
KAPD1000  UNPACK   CURDATE,CCENT,CYEAR,CMON,CDAY
          MOVE     CURDATE,FMJMPPOS
.
KAPD2000  MOVE     "9",CVERT
          MOVE     "28",CCOL
          CALL     KEYDATE            * keyin date
          BRANCH   CQUEST,KAPD2000    * no question mark
          BRANCH   OVRCD,KAPD2000
.
          PACK     FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          MOVE     FMJMPPOS,WORKDATE
          CALL     CFPR0000          * calculate financial period that
          BRANCH   EXIT,KAPD1000     * the date falls into
.
          MOVE     WKDTDESC,PPOSDESC * period description
          MOVE     WKDTPDAT,PPOSPDAT * period date
          DISPLAY  *P54:9,PPOSDESC,SP1,PPOSPDAT
          MOVE     FALSE,EXIT
          GOTO     KAPD9999
.
KAPD9000  MOVE     TRUE,EXIT
.
KAPD9999  RETURN
.*************************************************************************
.* KPTC - Keyin post to cash? - y/n      Called by IMDT5000 MADT1500     *
.*************************************************************************
KPTC0000  MOVE      "10",CVERT          * set up screen posy
          MOVE      "28",CCOL
          MOVE      DNO,DEFYESNO
          DISPLAY   *P28:10,*EL
          CALL      YORN0000            * yes or no?
.
          MOVE      FYESNO,FMJMCASH
          MOVE      YESNO,CASHDESC
          BRANCH    FMJMCASH,KPTC1000
          GOTO      KPTC9999
.
KPTC1000  DISPLAY   *P32:10,"Post to : "
          MOVE      "42",CCOL
          MOVE      "10",CVERT
          BRANCH    OPTION,KPTC2000
          MATCH     SP8,FMJMCPOS           * any cash post date
          GOTO      KPTC2000 IF EQUAL
          REP       " 0",FMJMCPOS
          UNPACK    FMJMCPOS,CCENT,CYEAR,CMON,CDAY  * set up correct default
          GOTO      KPTC3000
KPTC2000  UNPACK    CURDATE,CCENT,CYEAR,CMON,CDAY
KPTC3000  CALL      KEYDATE
          BRANCH    CQUEST,KPTC1000
          BRANCH    OVRCD,KPTC1000
.
          PACK      FMJMCPOS,CCENT,CYEAR,CMON,CDAY
          MOVE      FMJMCPOS,WORKDATE
          CALL      CFPR0000          * calculate financial period that
          BRANCH    EXIT,KPTC2000
                                     * the date falls into
          MOVE      WKDTDESC,CPOSDESC * period description
          MOVE      WKDTPDAT,CPOSPDAT * period date
          DISPLAY   *P54:10,CPOSDESC,SP1,CPOSPDAT
          MOVE      FALSE,EXIT
.
KPTC9999  RETURN         
.*************************************************************************
.* KPRV - Keyin post to cash? - y/n      Called by IMDT5000 MADT1500     *
.*************************************************************************
KPRV0000  MOVE      "11",CVERT          * set up screen posy
          MOVE      "28",CCOL
          MOVE      DNO,DEFYESNO
          DISPLAY   *P28:11,*EL
          CALL      YORN0000            * yes or no?
.
          MOVE      FYESNO,FMJMREV
          MOVE      YESNO,REVDESC
          BRANCH    FMJMREV,KPRV1000
          GOTO      KPRV9999
.
KPRV1000  DISPLAY   *P32:11,"Post to : "
          MOVE      "42",CCOL
          MOVE      "11",CVERT
          BRANCH    OPTION,KPRV2000
          MATCH     SP8,FMJMRPOS        * any reversal date?
          GOTO      KPRV2000 IF EQUAL 
          REP       " 0",FMJMRPOS
          UNPACK    FMJMRPOS,CCENT,CYEAR,CMON,CDAY  * set up correct default
          GOTO      KPRV3000
KPRV2000  UNPACK    CURDATE,CCENT,CYEAR,CMON,CDAY
KPRV3000  CALL      KEYDATE
          BRANCH    CQUEST,KPRV1000
          BRANCH    OVRCD,KPRV1000
.
          PACK      FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          MOVE      FMJMRPOS,WORKDATE
          CALL      CFPR0000          * calculate financial period that
          BRANCH    EXIT,KPRV2000
                                     * the date falls into
          MOVE      WKDTDESC,RPOSDESC * period description
          MOVE      WKDTPDAT,RPOSPDAT * period date
          DISPLAY   *P54:11,RPOSDESC,SP1,RPOSPDAT
          MOVE      FALSE,EXIT
.
KPRV9999  RETURN         
.*************************************************************************
.* CFPR - Calculate which period in which financial year that a date     *
.*        falls into.                                                    *
.*        Reguires - WORKDATE - date to find                             *
.*                   FMLALEDG - ledger                                   *
.*                   FMLACYRR - Current financial year for ledger        *
.*        Returns  - WKDTDESC - period description                       *
.*                   WKDTPDAT - period start date                        *
.*                   EXIT     - 0 - period found                         *
.*                              1 - period found but locked              *
.*        called by : KAPD0000                                           *
.*************************************************************************
CFPR0000  MATCH     SP2,FMLALEDG
          GOTO      CFPR1000 IF NOT EQUAL
          MOVE      SP2,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          GOTO      CFPR2000
.
CFPR1000  MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1
.
CFPR2000  CALL      CFYR0000
          BRANCH    EXIT,CFPR9000
          MOVE      PERDESC,WKDTDESC
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,WKDTPDAT
          GOTO      CFPR9999
.
CFPR9000  DISPLAY   *P1:24,*+,*EL,ERRMSG;
          CALL      HITENTER
.
CFPR9999  RETURN
.*************************************************************************
.* WJMA - write to the journal master file                               *
.*************************************************************************
WJMA0000  MATCH     "0",FMJMJID       * is it a newy ?
          GOTO      WJMA1000 IF NOT EQUAL
.
WJMA0100  CALL      RDFMCOJ1         * read last journal id
          MOVE      FMJONEX1,FMJMJID * use next journal id number
          ADD       ONE,FMJONEX1     * increment next journal number
          CALL      WRFMCOJ1         * read next journal id
          PACK      KEY7,FMJOPRE1,FMJMJID
          CALL      RAFMJM1          * is it already there?
          COMPARE   ONE,OVRCD
          GOTO      WJMA0100 IF NOT EQUAL
.
          DISPLAY   *P1:24,"New Journal Id is : ",*V2LON,FMJMJID," - ",*EL; 
          CALL      HITENTER
          DISPLAY   *P28:4,*V2LON,FMJMJID
.
WJMA1000  DISPLAY   *P1:24,*EL,*P50:24,*V2LON,"*** Posting ***"; 
          PACK      KEY7,FMJOPRE1,FMJMJID
          CALL      RAFMJM1           * is it already there?
          BRANCH    OVRCD,WJMA2000
.
          CALL      UPFMJM1           * yes -update it
          GOTO      WJMA9999
.
WJMA2000  MOVE      "0",FMJMSTAT      * new - must not be processed
          UNPACK    SP70,FMJMPDAT,FMJMPBAT,FMJMRDAT,FMJMRBAT
          CALL      WRFMJM1
          PACK      KEY7,FMJMJTY,FMJMJID,SP70
          PACK      SAVLOCKD,KEY7,SP70
          CALL      RLFMJM1
.
WJMA9999  RETURN
.******************************************************************************
.* GETW - read in wp data                        Called by who cares ?        *
.******************************************************************************
GETW0000  MOVE      ZERO,NOTES                   * assume no notes
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          PACK      KEY10,FMJOPRE1,FMJMJID,SP70
          CALL      RSFMJW1                      * go to start of records
.
GETW1000  CALL      RKFMJW1                      * get next record
          BRANCH    OVRCD,GETW2000               * no more records ?
          PACK      KEY14,FMJWJTY,FMJWJID,SP70
          MATCH     KEY10,KEY14
          GOTO      GETW2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMJWLINE
          MOVE      ONE,NOTES                   * we have some notes
          GOTO      GETW1000
.
GETW2000  WEOF      FMSTMP01,SEQ
          CLOSE     FMSTMP01
.
GETW9999  RETURN
.**********************************************************************
.  DISN - Display wp data                              Called By lots
.**********************************************************************
DISN0000  CLOSE     FMSTMP01                     * go to start of records
          OPEN      FMSTMP01,FILENAM1
          MOVE      "16",LINENO
          DISPLAY   *P5:LINENO,*V2LON,*ULON,"Notes                         ":
                    "                                        "
.
DISN1000  READ      FMSTMP01,SEQ;FMJWLINE        * read in wp data
          GOTO      DISN2000 IF OVER
.
          ADD       ONE,LINENO
          DISPLAY   *P5:LINENO,FMJWLINE
          COMPARE   "22",LINENO
          GOTO      DISN1000 IF LESS
.
DISN2000  
.
DISN9999  RETURN
.******************************************************************************
.* NOTE - Execute word processor                 Called by QUES               *
.******************************************************************************
NOTE0000  
.         DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                   *BLINKON,*V2LON,"Please Wait",*EL;
.
.         PREP      FMSTMP02,FILENAM2
.         WRITE     FMSTMP02,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.         WRITE     FMSTMP02,SEQ;VERSION,SP10,SP5,PRGNAM
.         WRITE     FMSTMP02,SEQ;SP1
.         WRITE     FMSTMP02,SEQ;"    Journal ID           : ":
.                   FMJMJID,SP10,SP7,"Status  : ",STATDESC
.         WRITE     FMSTMP02,SEQ;SP1
.         WRITE     FMSTMP02,SEQ;"    Notes"
.         WRITE     FMSTMP02,SEQ;SP1
.         OPEN      FMSTMP01,FILENAM1            * go to start of records
.
.OTE1000  READ      FMSTMP01,SEQ;FMJWLINE        * read in wp data
.         GOTO      NOTE2000 IF OVER
.
.         WRITE     FMSTMP02,SEQ;FMJWLINE
.         GOTO      NOTE1000
.
.OTE2000  CLEAR     CMDLINE
.         PACK      CMDLINE,WP,FILENAM2,WPDAT
.         EXECUTE   CMDLINE,TASKID               * initiate word processor
.
.         CALL      WEOF0000                     * make sure something in file
.         CLOSE     FMSTMP02
          CLOSE     FMSTMP01
.
.         CLEAR     CMDLINE                      * copy file to original
.         PACK      CMDLINE,CP,FILENAM2,TXT,FILENAM1,TXT 
.         EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    FILENAM1,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          MOVE      ONE,WPSTAT
.
          WORD      CMDLINE,999,2,6,79,22,WPSTAT
.
          OPEN      FMSTMP01,FILENAM1            * go to start of records
          READ      FMSTMP01,SEQ;ANS             * any notes entered
          GOTO      NOTE9999 IF OVER
          MOVE      TRUE,NOTES
.
NOTE9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
.WEOF0000  CLOSE     FMSTMP02
.          MOVE      ZERO,OVRCD
.          TRAP      OVERCOND IF IO
.          OPEN      FMSTMP02,FILENAM2
.          TRAPCLR   IO
.          COMPARE   ONE,OVRCD
.          GOTO      WEOF9999 IF NOT EQUAL
..
.          PREP      FMSTMP02,FILENAM2
.          WEOF      FMSTMP02,SEQ
..
.WEOF9999  RETURN
.*************************************************************************
.* WCOM - Write the notes that are in a tempfile to the comments file    *
.*************************************************************************
WCOM0000  PACK      KEY10,FMJOPRE1,FMJMJID,SP10
          CALL      RSFMJW1             * position at start of the comments
.
          CALL      RKFMJW1
          BRANCH    OVRCD,WCOM2000
.
          PACK      KEY14,FMJWJTY,FMJWJID,SP10
          MATCH     KEY10,KEY14         * right comments
          GOTO      WCOM2000 IF NOT EQUAL
.
          PACK      KEY10,FMJWJTY,FMJWJID,FMJWLNO
          CALL      DEFMJW1
          GOTO      WCOM0000
.
WCOM2000  MOVE      ONE,FORM3
          MOVE      FMJOPRE1,FMJWJTY
          MOVE      FMJMJID,FMJWJID
          OPEN      FMSTMP01,FILENAM1            * go to start of records
.
WCOM3000  READ      FMSTMP01,SEQ;FMJWLINE
          GOTO      WCOM9999 IF OVER
.          
          MOVE      FORM3,FMJWLNO               * set up line number
        
          PACK      KEY10,FMJWJTY,FMJWJID,FMJWLNO
          CALL      WRFMJW1
          ADD       ONE,FORM3
          GOTO      WCOM3000
.
WCOM9999  RETURN
.*************************************************************************
.* TRAN - Process all transaction Details                                *
.*        Returns : EXIT = 1 - exit = 0 - valid item chosen              *
.*                     called by : ML2000                                *
.*************************************************************************
TRAN0000  MOVE      ONE,NEXT           *assume no next screen
          MOVE      TWO,SCREEN
          MOVE      EIGHT,CVERT
          MOVE      ONE,DISPCNT
          PROC      CBAL0000           * calculate balance from file
.
          IF        IBCNUBAS=1
            DISPLAY   *P1:5,*EF,*P24:6,*V2LON,"Transaction Details":
                      *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                      *P8:7,"Account    ",*P20:7,BASDESC,*P24:7," Diss":
                      *P30:7,"Resp":
                      *P35:7,"Transaction Description      ":
                      *P65:7,"         Amount"
          ELSE
            DISPLAY   *P1:5,*EF,*P24:6,*V2LON,"Transaction Details":
                      *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                      *P8:7,"Account    ",*P24:7," Diss":
                      *P30:7,"Resp":
                      *P35:7,"Transaction Description      ":
                      *P65:7,"         Amount"
          ENDIF
          PACK      KEY10,FMJOPRE1,FMJMJID,SP10
          CALL      RSFMJD1
.
          MOVE      ONE,POSTFLAG
          MOVE      ONE,PAGENO
.
TRAN1000  MOVE      "15",NUMREC
          CALL      DACN0000            * Display next page of relative accounts
          COMPARE   TWO,EXIT            * none there - straight to insert mode
          GOTO      TRAN6000 IF EQUAL
.
TRAN1500  CLEAR     VALOPTN
....dlm change 29/03/2001 .............................................
          COMPARE   "1",OPTION         * input mode?
          GOTO      TRAN1502 IF EQUAL

          MOVE      "0",FMJMSTAT
          MOVE      STAT0,STATDESC
          DISPLAY   *P51:4,"Status  : ",*V2LON,STATDESC,*HOFF,*EL
          CALL      UPFMJM1            * update actual record
....end dlm change 29/03/2001 .........................................
 
TRAN1502  DISPLAY   *P1:24,*EL,"Select Item, (",*V2LON,"I",*HOFF,")nsert":
                               " before, ";
          APPEND    ANSI,VALOPTN
          MOVE      "40",CCOL
.
          BRANCH    NEXT,TRAN2000       * is there a next page
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
          APPEND    ANSN,VALOPTN
.
TRAN2000  COMPARE   ONE,PAGENO         * no previous page if we are on page one
          GOTO      TRAN3000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious Page, ";
          ADD       "17",CCOL
          APPEND    ANSP,VALOPTN
.
TRAN3000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it ?"
          APPEND    ANSX,VALOPTN
.
TRAN4000  KEYIN     *PCCOL:24,*EL,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,DIM2;
          REP       UPPLOW,DIM2
          TYPE      DIM2
          GOTO      TRAN9000 IF EQUAL
.
          MATCH     SP1,DIM2         * cant enter two letters
          GOTO      TRAN4000 IF NOT EQUAL
          UNPACK    DIM2,ANS,ANS
          RESET     VALOPTN
          SCAN      ANS,VALOPTN            * valid option chosen?
          GOTO      TRAN4000 IF NOT EQUAL
          RESET     VALOPTN
.
          REP       "N1P2X3I4",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,TRAN4500,TRAN5000,TRAN8000,TRAN7000
.
          GOTO      TRAN4000
.
TRAN4500  ADD       ONE,PAGENO
          DISPLAY   *P1:8,*EF;
          GOTO      TRAN1000
.
TRAN5000  COMPARE   "2",PAGENO       * if on second page - go from start
          GOTO      TRAN0000 IF EQUAL
          CALL      PREV0000          * read back a page so we can read 
                                      * forward a page
          GOTO      TRAN1000
.
. ------- New Insert Option
TRAN7000  CALL      INSRT000          * Insert Item
          GOTO      TRAN1500
.
TRAN6000  CALL      ITRN0000          * go back into input mode
          BRANCH    EXIT,TRAN8000
          GOTO      TRAN1500
.
TRAN8000  COMPARE   ZERO,BALANCE      * journal's gotta balance lad
          GOTO      TRAN8500 IF EQUAL
          DISPLAY   *P1:24,*EL,*B,"Journal Must Balance to Zero - ";
          CALL      HITENTER
          GOTO      TRAN1500
.
TRAN8500  MOVE      TRUE,EXIT          
          MOVE      ONE,POSTFLAG
.
          PACK      KEY7,FMJOPRE1,FMJMJID
          CALL      RDFMJM1
          BRANCH    OVRCD,TRAN9999
          MOVE      ONE,FMJMSTAT             * change status to balanced 
          CALL      UPFMJM1
....dlm change 29/03/2001 ..................................................
          MOVE      STAT1,STATDESC
          DISPLAY   *P51:4,"Status  : ",*V2LON,STATDESC,*HOFF,*EL
....end dlm change 29/03/2001 ..............................................
          GOTO      TRAN9999
.
TRAN9000  MATCH     "2",FMJMSTAT
          GOTO      TRAN9050 IF EQUAL
          MATCH     "9",FMJMSTAT
          GOTO      TRAN9100 IF NOT EQUAL   * processed ?
.
TRAN9050  DISPLAY   *P1:24,*B,*EF:
                    "Cannot Modify - Journal has been posted - "; 
          CALL      HITENTER
          GOTO      TRAN1500
.
TRAN9100  MOVE      DIM2,CCITEM
          COMPARE   CCITEM,ZERO    * cant be less than zero
          GOTO      TRAN4000 IF NOT LESS
. 
          COMPARE   CCITEM,TEN5    * a valid selection?
          GOTO      TRAN9600 IF LESS
. 
          COMPARE   CCITEM,MAXDISP    * a valid selection?
          GOTO      TRAN6000 IF LESS
. 
          CALL      PTRN0000        * process a single transaction
          CALL      CURP0000
          GOTO      TRAN1500
.
TRAN9600  MOVE      ZERO,MAXDISP
          MOVE      "8",CVERT
          DISPLAY   *P1:8,*EF;
          ADD       ONE,PAGENO
          GOTO      TRAN6000
.
TRAN9999  RETURN
.*************************************************************************
.* INSRT - Insert Item                                                   *
.*************************************************************************
INSRT000  MOVE      SP70,DIM2
          DISPLAY   *P1:24,*EL,"Insert Before Item, e(":
                    *V2LON,"X",*HOFF,")it ? ";
          KEYIN     *V2LON,*JR,DIM2
.
          MATCH     DIM2,SP70
          GOTO      INSRT999 IF EQUAL
.
          UNPACK    DIM2,ANS,ANS
.
          MATCH     EXITCHAR,ANS
          GOTO      INSRT999 IF EQUAL
.
          TYPE      DIM2
          IF        !@EQUAL
            REP       "xX",ANS
            MATCH     "X",ANS
            GOTO      INSRT999 IF EQUAL
            GOTO      INSRT800
          ENDIF
.
          MOVE      DIM2,INSRTLNO
          IF        INSRTLNO<1 | INSRTLNO>MAXDISP 
            GOTO      INSRT800
          ENDIF
.
. ------- Valid Entry for insert
          CALL      STRN0000                 * Special Insert Input Details
          IF        EXIT=1
            MOVE      ZERO,EXIT
            GOTO      INSRT999
          ENDIF
          GOTO      INSRT000
.
INSRT800  DISPLAY   "Invalid Option.  ";
          CALL      HITENTER
          GOTO      INSRT000
.
INSRT999  RETURN
.*************************************************************************
.* STRN - Input transactions                    Called by TRAN6000       *
.*************************************************************************
STRN0000  MOVE      INSRTLNO,DISPCNT
          MOVE      DISPCNT,CVERT
          MOVE      TWO,SCREEN
          CALL      CLR1000            * clear variables
          ADD       "7",CVERT
STRN1000  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT
.
STRN2000  CALL      KDCR0000               * keyin credit or debit
          BRANCH    EXIT,STRN9000
.         
STRN3000  CALL      KACC0000               * keyin account
          BRANCH    EXIT,STRN2000,STRN2000
.
STRN3500  IF        IBCNUBAS=1
            CALL      KBAS0000               * keyin BAS
            BRANCH    EXIT,STRN4000,STRN2000
          ENDIF
.
STRN4000  CALL      KDIS0000               * keyin dissection
          IF        IBCNUBAS=1
            BRANCH    EXIT,STRN3500,STRN2000
          ELSE
            BRANCH    EXIT,STRN3000,STRN2000
          ENDIF
.
STRN5000  CALL      KRES0000               * keyin responsibility
          BRANCH    EXIT,STRN4000,STRN2000
.
STRN6000  CALL      KDSC0000               * keyin description
          BRANCH    EXIT,STRN2000
.
STRN7000  CALL      KAMT0000              * Keyin amount
          BRANCH    EXIT,STRN6000,STRN2000
.
STRN8000  CALL      SUPD0000
          MATCH     "D",FMJDDRCR           * debit or credit
          IF        @EQUAL
            ADD       FMJDTAMT,BALANCE
          ELSE
            SUB       FMJDTAMT,BALANCE
          ENDIF
          DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE
          MOVE      INSRTLNO,DISPCNT
.
          MOVE      FMJDDESC,DIM30
          MOVE      "Dr",SAVEDESC
          MATCH     "D",FMJDDRCR
          IF        !@EQUAL
            MOVE      "Cr",SAVEDESC
          ENDIF
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,DIM30,FMJDTAMT
.
STRN8700  IF        DISPCNT < MAXDISP
            ADD       ONE,DISPCNT
            ADD       ONE,INSRTLNO
          ELSE
            ADD       ONE,CVERT
            MOVE      DISPCNT,NUMREC
            IF        MAXDISP<15
              ADD       ONE,DISPCNT
              ADD       ONE,INSRTLNO
              ADD       ONE,MAXDISP
              ADD       ONE,RECCNT
            ELSE
              ADD       ONE,PAGENO
              MOVE      ONE,INSRTLNO
              MOVE      ZERO,MAXDISP
              MOVE      ZERO,RECCNT
              CALL      CSEL0000
              CALL      RKFMJD1
              PACK      SEL01,FMJDJTY,FMJDJID,FMJDLNO
              DISPLAY   *P1:8,*EF
            ENDIF
          ENDIF
          GOTO      STRN0000
.
STRN9000  MOVE      ONE,NEXT
          MOVE      INSRTLNO,FORM2
          IF        FORM2>1
            SUB       ONE,FORM2
          ENDIF
          LOAD      KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                SEL06,SEL07,SEL08,SEL09,SEL10:
                                SEL11,SEL12,SEL13,SEL14,SEL15
          CALL      RSFMJD1
          CALL      RPFMJD1
          ASSIGN    FORM2+7,CVERT
          MOVE      "15",MAXDISP
          REPEAT
            CALL      RKFMJD1
            BRANCH    OVRCD,STRN9100
.
            PACK      KEY7,FMJDJTY,FMJDJID,SP70
            MATCH     KEY7,KEY10
            GOTO      STRN9100 IF NOT EQUAL
.
            MOVE      "Dr",SAVEDESC
            MATCH     "D",FMJDDRCR
            IF        !@EQUAL
              MOVE      "Cr",SAVEDESC
            ENDIF
            MOVE      FMJDDESC,DIM30
            DISPLAY   *P1:CVERT,*EL,*V2LON,FORM2,*HOFF,DOT:
                      *P5:CVERT,SAVEDESC,*P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC:
                      *P24:CVERT,FMJDDIS,SP1,FMJDRES,SP1,DIM30,FMJDTAMT
            PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
            STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            ADD       ONE,FORM2
            ADD       ONE,CVERT
          UNTIL     FORM2>MAXDISP
          MOVE      ZERO,NEXT
.
STRN9100  SUB       ONE,FORM2
          MOVE      FORM2,MAXDISP
          MOVE      FORM2,RECCNT
.
          COMPARE   "1",PAGENO             * are we on the first page
          GOTO      STRN9500 IF NOT EQUAL   * no - thats cool - go out
.
          COMPARE   "1",DISPCNT             * yes - first line?
          GOTO      STRN9500 IF NOT EQUAL     * no - thats cool - go out
.
          MOVE      TRUE,EXIT
          GOTO      STRN9999
.
STRN9500  MOVE      FALSE,EXIT
.
STRN9999  RETURN
.*************************************************************************
.* SUPD - Special Update of Journal Details File                         *
.*************************************************************************
SUPD0000  LOAD      KEY10SAV,INSRTLNO,SEL01,SEL02,SEL03,SEL04,SEL05:
                                      SEL06,SEL07,SEL08,SEL09,SEL10:
                                      SEL11,SEL12,SEL13,SEL14,SEL15
          MATCH     KEY10SAV,SP10
          IF        @EQUAL
            MOVE      INSRTLNO,FORM2
            SUB       ONE,FORM2
            LOAD      KEY10SAV,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                     SEL06,SEL07,SEL08,SEL09,SEL10:
                                     SEL11,SEL12,SEL13,SEL14,SEL15
            MATCH     KEY10SAV,SP10
            IF        @EQUAL
              DISPLAY   *P1:24,*EL,"Invalid Selection Condition. ":
                        "Contact System Admin. ";
              CALL      HITENTER
              GOTO      SUPD9999
            ENDIF
            PACK    KEY10,KEY10SAV
            CALL    RSFMJD1
            CALL    RKFMJD1               * Read item inserting before
            PACK    KEY10SAV,FMJDJTY,FMJDJID,FMJDLNO
          ENDIF
.
          PACK      KEY10,FMJOPRE1,FMJMJID,Z20
SUPD1000  CALL      RSFMJD1
          CALL      RPFMJD1
          IF        OVRCD=1        
            MOVE      ONE,FMJDLNO
            GOTO      SUPD2000
          ENDIF
.
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          MATCH     KEY10SAV,KEY10
          IF        !@LESS
            MOVE      FMJDLNO,FORM3
            ADD       ONE,FORM3
            MOVE      FORM3,FMJDLNO
            CALL      UPFMJD1
            GOTO      SUPD1000             * Update Item
          ENDIF
.
SUPD2000  UNPACK    KEY10SAV,FMJDJTY,FMJDJID,FMJDLNO
          MOVE      KEY10SAV,KEY10
          CALL      RAFMJD1
          IF        OVRCD=0
            DISPLAY   *P1:24,*EL,"Position Should exist (line no. = ":
                                 FMJDLNO,"). ";
            CALL      HITENTER
            GOTO      SUPD9999
          ENDIF
          MOVE      FMAMACCT,FMJDACC
          MOVE      FMDSCODE,FMJDDIS
          MOVE      FMRSCODE,FMJDRES
          MOVE      SAVJDESC,FMJDDESC
          MOVE      SAVEDRCR,FMJDDRCR
          MOVE      IBBABASC,FMJDBASC
          MOVE      AMOUNT,FMJDTAMT
          CALL      WRFMJD1
.
. ------- Update Screen Saved Selections
          MATCH     SEL15,SP70
          IF        (!@EQUAL) & (INSRTLNO<15)
            MOVE      ZERO,NEXT             * There is now a next page
          ELSE
            MOVE      ONE,NEXT
          ENDIF
          MOVE      MAXDISP,FORM2
          IF        FORM2=15
            SUB       ONE,FORM2
            GOTO      SUPD3000
          ELSE
            ADD       ONE,MAXDISP
            ADD       ONE,RECCNT 
          ENDIF
          REPEAT
            LOAD      KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            ADD       ONE,FORM2
            UNPACK    KEY10,KEY7,KEY3
            MOVE      KEY3,FORM3
            ADD       ONE,FORM3
            PACK      KEY10,KEY7,FORM3
            STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            SUB       TWO,FORM2
          UNTIL     FORM2<INSRTLNO
.
          STORE     KEY10SAV,INSRTLNO,SEL01,SEL02,SEL03,SEL04,SEL05:
                                      SEL06,SEL07,SEL08,SEL09,SEL10:
                                      SEL11,SEL12,SEL13,SEL14,SEL15
          PACK      KEY10,KEY10SAV
          CALL      RDFMJD1
.
          MOVE      "Dr",SAVEDESC
          MATCH     "D",FMJDDRCR
          IF        !@EQUAL
            MOVE      "Cr",SAVEDESC
          ENDIF
          GOTO      SUPD9999
.
SUPD3000
.
SUPD9999  RETURN
.*************************************************************************
.* DACN - Display the next page of accounts on file  Called by Lots      *
.*        Requires the file pointer to be positioned before the first    *
.*        record that we wish to display                                 *
.*************************************************************************
DACN0000  MOVE      ONE,DISPCNT
          MOVE      ZERO,RECCNT
          MOVE      ONE,NEXT
          MOVE      EIGHT,CVERT
          PACK      KEY10,FMJOPRE1,FMJMJID,FMJDLNO
          DISPLAY   *P1:8,*EF;
.
          PROC      CBAL0000
          CALL      CSEL0000          * clear screen variables(SEL)
.
DACN1000  CALL      RKFMJD1           * read next record
          BRANCH    OVRCD,DACN9000
.
          MATCH     FMJOPRE1,FMJDJTY  * general journal?
          GOTO      DACN9000 IF NOT EQUAL
.
          MATCH     FMJDJID,FMJMJID  * right journal?
          GOTO      DACN9000 IF NOT EQUAL
.
          COMPARE   "23",CVERT        * full page?
          GOTO      DACN8000 IF EQUAL
.
          MOVE      "Dr",DRCRDESC     * set up credit debit description
          MATCH     ANSD,FMJDDRCR     * credit or debit
          GOTO      DACN2000 IF EQUAL
          MOVE      "Cr",DRCRDESC
.
DACN2000  PACK      DIM30,FMJDDESC,SP70
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,DRCRDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,DIM30,FMJDTAMT
          ADD       ONE,RECCNT
          MOVE      CVERT,FORM2
          SUB       "7",FORM2
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07,SEL08:
                                SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          MOVE      DISPCNT,MAXDISP
          ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "15",NUMREC         * do we want to display the whole screen
          GOTO      DACN1000 IF EQUAL
.
          COMPARE   RECCNT,NUMREC       * if not have we displayed enough?
          GOTO      DACN1000 IF NOT EQUAL
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DACN9700
.
DACN8000  MOVE      ZERO,NEXT        * there is a next page
          CALL      RPFMJD1          * read back so when next page only 
.                                    * have to read forward
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DACN9700
.
DACN9000  COMPARE   "8",CVERT
          GOTO      DACN9500 IF NOT EQUAL
          MOVE      ZERO,MAXDISP
.
          MOVE      TWO,EXIT        * straight to insert thanks
          GOTO      DACN9700
.
DACN9500  MOVE      ONE,EXIT         * no next page
.
DACN9700  DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE
.
DACN9999  RETURN
. 
.*************************************************************************
.* CURP - Display current page                 Called by RBPFFM30        *
.*************************************************************************
CURP0000  PACK      KEY10,FMJOPRE1,FMJMJID,FMJDLNO
          MOVE      SEL01,KEY10
          MOVE      MAXDISP,NUMREC
          CALL      RSFMJD1           * read details of first record on screen
          CALL      RPFMJD1
          BRANCH    OVRCD,CURP1000
          GOTO      CURP2000
.
CURP1000  MOVE      SP20,KEY10
          CALL      RSFMJD1    
.
CURP2000  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJMJID,*HOFF:
                    *P51:4,"Status  : ",*V2LON,STATDESC,*HOFF:
                    *P51:5,"Balance : ",*V2LON,BALANCE:
                    *P24:6,*V2LON,"Transaction Details":
                    *P1:7,*V2LON,*ULON,"Item",*P5:7,"DC":
                    *P8:7,"Account    "
          IF        IBCNUBAS=1
            DISPLAY   *P20:7,BASDESC
          ENDIF
          DISPLAY   *P24:7,"Diss ":
                    *P30:7,"Resp":
                    *P35:7,"Transaction Description      ":
                    *P65:7,"         Amount"
          MOVE      MAXDISP,NUMREC
          CALL      DACN0000          * display screen
.
CURP9999  RETURN
.*************************************************************************
.* CSEL - Clear the SEL variables               Called by DACN0000       *
.*************************************************************************
CSEL0000  UNPACK    SP70,SEL01,SEL02,SEL03,SEL04,SEL05
          UNPACK    SP70,SEL06,SEL07,SEL08,SEL09,SEL10
          UNPACK    SP70,SEL11,SEL12,SEL13,SEL14,SEL15
.
CSEL9999  RETURN
.*************************************************************************
.* PREV - read back 15 records from first one on screen for previous     *
.*        page                                                           *
.*                     called by : SACN                                  *
.*************************************************************************
PREV0000  MOVE      SEL01,KEY10
          CALL      RSFMJD1
          MOVE      ONE,FORM2
          SUB       ONE,PAGENO
.
PREV1000  CALL      RPFMJD1         * read back one
          BRANCH    OVRCD,PREV9000
.
          COMPARE   "16",FORM2      * have we read back far enough
          GOTO      PREV9999 IF EQUAL * go out if so
.
          ADD       ONE,FORM2
          GOTO      PREV1000
.
PREV9000  MOVE      SP70,KEY10      * reached eof - posy at start
          CALL      RSFMJD1
.
PREV9999  RETURN
.*************************************************************************
.* ITRN - Input transactions                    Called by TRAN6000       *
.*************************************************************************
ITRN0000  MOVE      MAXDISP,DISPCNT
          CALL      CLR1000            * clear variables
          MOVE      DISPCNT,NUMREC
          ADD       ONE,DISPCNT
          MOVE      DISPCNT,CVERT
          ADD       "7",CVERT
.
          MOVE      FMJMDESC,SAVJDESC
.
ITRN1000  DISPLAY   *P1:CVERT,*EF,*V2LON,DISPCNT,*HOFF,DOT;
.
ITRN2000  CALL      KDCR0000               * keyin credit or debit
          BRANCH    EXIT,ITRN9000
.         
ITRN3000  CALL      KACC0000               * keyin account
          BRANCH    EXIT,ITRN2000,ITRN2000
.
ITRN3500  IF        IBCNUBAS=1
            CALL      KBAS0000               * keyin BAS
            BRANCH    EXIT,ITRN4000,ITRN2000
          ENDIF
.
ITRN4000  CALL      KDIS0000               * keyin dissection
          IF        IBCNUBAS=1
            BRANCH    EXIT,ITRN3500,ITRN2000
          ELSE
            BRANCH    EXIT,ITRN3000,ITRN2000
          ENDIF
.
ITRN5000  CALL      KRES0000               * keyin resp
          BRANCH    EXIT,ITRN4000,ITRN2000
.
ITRN6000  CALL      KDSC0000               * keyin tran desc
          BRANCH    EXIT,ITRN2000
.
ITRN7000  CALL      KAMT0000               * keyin amount
          BRANCH    EXIT,ITRN6000,ITRN2000
.
ITRN8000  MOVE      FMJMJID,FMJDJID        * set up file variables
          MOVE      FMJOPRE1,FMJDJTY
          MOVE      FMAMACCT,FMJDACC
          MOVE      FMDSCODE,FMJDDIS
          MOVE      FMRSCODE,FMJDRES
          MOVE      AMOUNT,FMJDTAMT
          MOVE      SAVEDRCR,FMJDDRCR
          MOVE      IBBABASC,FMJDBASC
.
ITRN8300  PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          CALL      RAFMJD1                 * write to file
          BRANCH    OVRCD,ITRN8500
          MOVE      FMJDLNO,FORM3
          ADD       ONE,FORM3
          MOVE      FORM3,FMJDLNO
          GOTO      ITRN8300
.
ITRN8500  CALL      WRFMJD1                 * write to file
          STORE     KEY10,DISPCNT,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                  SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14:
                                  SEL15
.
          PACK      DIM30,FMJDDESC,SP70
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,DIM30,FMJDTAMT
          MOVE      DISPCNT,MAXDISP
          MATCH     "D",FMJDDRCR           * debit or credit
          GOTO      ITRN8600 IF NOT EQUAL
          ADD       FMJDTAMT,BALANCE
          GOTO      ITRN8700
.
ITRN8600  SUB       FMJDTAMT,BALANCE
.
ITRN8700  DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE
          ADD       ONE,DISPCNT
          ADD       ONE,CVERT
          ADD       ONE,NUMREC
          COMPARE   "23",CVERT              * full page
          GOTO      ITRN1000 IF LESS
          DISPLAY   *P1:8,*EF;
          MOVE      "8",CVERT
          MOVE      "1",DISPCNT
          ADD       ONE,PAGENO
          GOTO      ITRN1000
.
ITRN9000  DISPLAY   *P1:CVERT,*EL;
.
          COMPARE   "1",PAGENO              * are we on the first page
          GOTO      ITRN9500 IF NOT EQUAL   * no - thats cool - go out
.
          COMPARE   "1",DISPCNT             * yes - first line?
          GOTO      ITRN9500 IF NOT EQUAL   * no - thats cool - go out
.
          MOVE      TRUE,EXIT
          GOTO      ITRN9999
.
ITRN9500  MOVE      FALSE,EXIT
.
ITRN9999  RETURN
.*************************************************************************
.* KDCR - Keyin Dr or Cr                      Called by ITRN0000         *
.*************************************************************************
KDCR0000  MOVE      "5",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDCR0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "6",CVERT
.
KDCR0500  PACK      FMJDDRCR,FMJDDRCR,SP1 * first time in might be nothing in it
          DISPLAY   *P1:24,*V2LON:
                    "D",*HOFF," = Debit, ",*V2LON:
                    "C",*HOFF," = Credit, ",*V2LON:
                    "X",*HOFF," = Exit",*EF;
          MOVE      "DCX\*",VALOPTN
          MATCH     SP1,FMJDDRCR          * any default
          GOTO      KDCR1000 IF EQUAL     * no - dont use *rv keyin
          KEYIN     *PCCOL:CVERT,*DV,*EL,FMJDDRCR:
                    *PCCOL:CVERT,*RV,*V2LON,FMJDDRCR
          GOTO      KDCR2000
.
KDCR1000  KEYIN     *PCCOL:CVERT,*DV,*EL,UNDLN1,*PCCOL:CVERT,*V2LON,FMJDDRCR
KDCR2000  PACK      FMJDDRCR,FMJDDRCR,SP1 * first time in might be nothing in it
.
          REP       UPPLOW,FMJDDRCR
          SCAN      FMJDDRCR,VALOPTN      * is it a valid option?
          GOTO      KDCR1000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EF;
          MATCH     SP1,FMJDDRCR          * anything entered?
          GOTO      ITRN9000 IF EQUAL
.
          MATCH     "*",FMJDDRCR          * exit?
          GOTO      KDCR9000 IF EQUAL
          MATCH     "X",FMJDDRCR          * exit?
          GOTO      KDCR9000 IF EQUAL
          MATCH     EXITCHAR,FMJDDRCR     * exit?
          GOTO      KDCR9000 IF EQUAL
.
          MATCH     "D",FMJDDRCR          * debit?
          GOTO      KDCR3000 IF EQUAL
.
          MOVE      "Cr",DRCRDESC
          MOVE      "Credit",DRCRLDES
          GOTO      KDCR4000
KDCR3000  MOVE      "Dr",DRCRDESC
          MOVE      "Debit",DRCRLDES
.
KDCR4000  COMPARE   "3",SCREEN          * which screen
          GOTO       KDCR5000 IF EQUAL
          DISPLAY   *P5:CVERT,*V2LON,DRCRDESC
          GOTO      KDCR6000
.
KDCR5000  DISPLAY   *P28:CVERT,*V2LON,DRCRLDES
.
KDCR6000  MOVE      FMJDDRCR,SAVEDRCR
          MOVE      DRCRDESC,SAVEDESC
          MOVE      FALSE,EXIT
          GOTO      KDCR9999
.
KDCR9000  MOVE      ONE,EXIT
          DISPLAY   *P1:CVERT,*EL
.
KDCR9999  RETURN
.*************************************************************************
.* KACC - Keyin account code             Called by ITRN2000              *
.*************************************************************************
KACC0000  MOVE      "8",CCOL             * posy for screen 2
          DISPLAY   *P1:24,*EL
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KACC0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "7",CVERT
          MOVE      FMJDACC,UNDLN70
          MOVE      FMJDACC,FMAMACCT
.
KACC0500  MOVE      FMJMLEDG,FMLALEDG
          MOVE      "1",CACCTIND
          CALL      KAMAFM00              * account keyin
          BRANCH    EXIT,KACC1000,KACC9999
.
          IF        FMAMSTAT=2
            BEEP
            MOVE      "Account Code Closed or Suspended - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KACC0500
          ENDIF
.
          MOVE      FMAMACCT,FMJDACC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDACC;
          COMPARE   "3",SCREEN
          GOTO      KACC0600 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMAMDESC
          GOTO      KACC9999
.
KACC0600  DISPLAY   *P1:24,"Account Description : ",*V2LON,FMAMDESC
          GOTO      KACC9999
.
KACC1000  DISPLAY   *P1:24,*EL
          MOVE      ONE,EXIT
          COMPARE   "3",SCREEN        * 3rd screen
          GOTO      KACC9999 IF NOT EQUAL
          MOVE      FMJDACC,FMAMACCT
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDACC,*P41:CVERT,*HOFF,FMAMDESC
.
KACC9999  PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KBAS - Keyin BAS Code                      Called by ITRN4000         *
.*        Returns - EXIT = 0 - valid entry 1 - null                      *
.*************************************************************************
KBAS0000  MOVE      "20",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KBAS1000 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "12",CVERT
          MOVE      FMJDBASC,UNDLN70
          MOVE      FMJDBASC,IBBABASC
.
KBAS1000  MOVE      ZERO,CKEYTYP
          CALL      KIBBAA00
          BRANCH    EXIT,KBAS8000,KBAS9000
.
          MOVE      IBBABASC,FMJDBASC
.
KBAS1500  DISPLAY   *PCCOL:CVERT,*V2LON,FMJDBASC;
          MOVE      ZERO,EXIT
          COMPARE   "3",SCREEN
          GOTO      KBAS1600 IF NOT EQUAL
          DISPLAY   *P41:CVERT,IBBADESC
          GOTO      KBAS9999
.
KBAS1600  DISPLAY   *P1:24,*EL,"BAS Description : ",*V2LON,IBBADESC
          GOTO      KBAS9999
.
KBAS2000  DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          COMPARE   "3",SCREEN
          GOTO      KBAS1500 IF NOT EQUAL
          MOVE      FMJDBASC,IBBABASC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDBASC,*HOFF,*P41:CVERT,IBBADESC
          MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS8000  DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          MOVE      SP3,FMJDBASC
          MOVE      SP30,IBBADESC
          COMPARE   "3",SCREEN
          GOTO      KBAS9999 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*EL;
          MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS9000  MOVE      SP70,FMJDBASC
.
KBAS9999  PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KDIS - Keyin dissection                    Called by ITRN4000         *
.*        Returns - EXIT = 0 - valid entry 1 - null                      *
.*************************************************************************
KDIS0000  MOVE      "24",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDIS0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "9",CVERT
.
KDIS0500  PACK      FMDSCODE,FMDSCODE,SP10
.
          MATCH     SP5,FMDSCODE            * is there a default
          GOTO      KDIS1000 IF EQUAL
          MOVE      FMDSCODE,UNDLN70
          MOVE      FMDSCODE,FMJDDIS
.
KDIS1000  MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00
.         CALL      KDISFM00               * keyin dissection
          BRANCH    EXIT,KDIS2000,KDIS9000
.
          MOVE      FMDSCODE,FMJDDIS
KDIS1500 
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDDIS;
          MOVE      ZERO,EXIT
          COMPARE   "3",SCREEN
          GOTO      KDIS1600 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMDSDESC
          GOTO      KDIS9999
.
KDIS1600  DISPLAY   *P1:24,*EL,"Dissection Description : ",*V2LON,FMDSDESC
          GOTO      KDIS9999
.
KDIS2000 
          DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          MATCH     "_",UNDLN70              * did we use the default?
          GOTO      KDIS9999 IF EQUAL
          MOVE      FMJDDIS,FMDSCODE         * move default back in
          COMPARE   "3",SCREEN
          GOTO      KDIS1500 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDDIS,*HOFF,*P41:CVERT,FMDSDESC
          MOVE      ZERO,EXIT
          GOTO      KDIS9999
.
KDIS9000  MOVE      SP70,FMDSCODE
.
KDIS9999   
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.
.*************************************************************************
.* KRES - Keyin responsibility                  Called by ITRN5000       *
.*        Returns EXIT = 0 - valid entry  1 - null                       *
.*************************************************************************
KRES0000  MOVE      "30",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KRES0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "8",CVERT
.
KRES0500  PACK      FMRSCODE,FMRSCODE,SP10
.
          MATCH     SP4,FMRSCODE            * is there a default
          GOTO      KRES1000 IF EQUAL
          MOVE      FMRSCODE,UNDLN70
          MOVE      FMRSCODE,FMJDRES
.
KRES1000  MOVE      ZERO,CKEYTYP
          CALL      KFMRSA00
.         CALL      KRESFM00               * keyin dissection
          BRANCH    EXIT,KRES2000,KRES9500
.
          MOVE      FMRSCODE,FMJDRES
KRES1500  DISPLAY   *PCCOL:CVERT,*V2LON,FMJDRES
          MOVE      FALSE,EXIT
          COMPARE   "3",SCREEN
          GOTO      KRES1600 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMRSDESC
          GOTO      KRES9999
.
KRES1600  DISPLAY   *P1:24,*EL,"Responsibility Description : ",*V2LON,FMRSDESC
          GOTO      KRES9999
.
KRES2000  MOVE      TRUE,EXIT
          DISPLAY   *P1:24,*EL
          MATCH     "_",UNDLN70              * did we use the default?
          GOTO      KRES9999 IF EQUAL
          MOVE      FMJDRES,FMRSCODE       * move default back in
          COMPARE   "3",SCREEN
          GOTO      KRES1500 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDRES,*HOFF,*P41:CVERT,FMRSDESC
          MOVE      FALSE,EXIT
          GOTO      KRES9999
.
KRES9500  MOVE      SP70,FMRSCODE
.
.
KRES9999
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KAMT - keyin amount                      Called by ITRN5000           *
.*        Returns EXIT = 0 - valid    1 - null                           *
.*************************************************************************
KAMT0000  MOVE      "65",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KAMT0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "10",CVERT
          MOVE      FMJDTAMT,DIMAMNT
          KEYIN     *PCCOL:CVERT,*EL,*DV,DIMAMNT:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,DIMAMNT
.
          TYPE      DIMAMNT            * valid amount ?
          GOTO      KAMT0000 IF NOT EQUAL
.
          MOVE      DIMAMNT,FMJDTAMT
          GOTO      KAMT0600
.
KAMT0500  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN12,*DV,DOT,*DV,UNDLN2:
                    *PCCOL:CVERT,*V2LON,*JR,DIMAMNT
.
KAMT0600  PACK      DIMAMNT,DIMAMNT,SP20
          MATCH     DIMAMNT,SP20
          GOTO      KAMT1000 IF EQUAL
.
          MATCH     "              \",DIMAMNT  * exitchar?
          GOTO      KAMT2000 IF EQUAL
.
          MOVE      ZERO,EXIT
          MOVE      DIMAMNT,AMOUNT        * move into file var
          DISPLAY   *PCCOL:CVERT,*V2LON,AMOUNT
          GOTO      KAMT9999
.
KAMT1000  MOVE      "1",EXIT                * nothing entered
          GOTO      KAMT9999 
.
KAMT2000  MOVE      "2",EXIT
.
KAMT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.* KDSC - Keyin Description                Called by ITRN6000            *
.*        Returns EXIT = 0 - valid    1 - exitchar                       *
.*************************************************************************
KDSC0000  MOVE      "35",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDSC0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL          * yes - move in screen three posy
.
          MOVE      "11",CVERT
          GOTO      KDSC0600
.
KDSC0500  MOVE      SAVJDESC,FMJDDESC      * set up default
.
KDSC0600  MOVE      FMJDDESC,DIM30
          KEYIN     *PCCOL:CVERT,*EL,*DV,DIM30:
                    *PCCOL:CVERT,*V2LON,*RV,DIM30:
                    *PCCOL:CVERT,*DV,DIM30
          MOVE      DIM30,FMJDDESC
.       
          PACK      FMJDDESC,FMJDDESC,SP70
.
          MATCH     EXITCHAR,FMJDDESC     * exitchar?
          GOTO      KDSC9000 IF EQUAL
.        
          MATCH     QUEST,FMJDDESC
          GOTO      KDSC6000 IF NOT EQUAL
          CALL      HFMTDA00
          CALL      RTDSFM00
          CLEAR     DM4
          CLEAR     DIM40
          PACK      KEY4,FMTDCODE
          CALL      RDFMTD1
          BRANCH    OVRCD,KDSC0000
          MOVE      FMTDDESC,DIM30    
          MOVE      DIM30,FMJDDESC
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,DIM30
          GOTO      KDSC9999
         
KDSC6000
          CLEAR     DM4
          CLEAR     DIM40
          MOVE      ZERO,EXIT             * vaild entry
          UNPACK    FMJDDESC,DM4,DIM40
          PACK      DIM40,DIM40,SP70
          MATCH     DIM40,SP70
          GOTO      KDSC9999 IF NOT EQUAL
          PACK      KEY4,DM4
          CALL      RDFMTD1
          BRANCH    OVRCD,KDSC9999
          MOVE      FMTDDESC,DIM30    
          MOVE      DIM30,FMJDDESC
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,DIM30
          GOTO      KDSC9999
.
KDSC9000  MOVE      ONE,EXIT              * exitchar entered
.
KDSC9999  MOVE      FMJDDESC,SAVJDESC
          RETURN
.
          DEFPROC   CBAL0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.*************************************************************************
.* CBAL - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: BALANCE                   *
.*************************************************************************
CBAL0000  MOVE      ZERO,BALANCE          * set to zero
.
          PACK      KEY10,FMJOPRE1,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CBAL1000  CALL      RKFMJD1
          BRANCH    OVRCD,CBAL9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CBAL9999 IF NOT EQUAL
.
          MATCH     "D",FMJDDRCR         * debit or credit?
          GOTO      CBAL2000 IF NOT EQUAL
.
          ADD       FMJDTAMT,BALANCE     * add debits
          GOTO      CBAL1000
.
CBAL2000  SUB       FMJDTAMT,BALANCE     * subtract credits
          GOTO      CBAL1000
.
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
CBAL9999  ENDPROC
.*************************************************************************
          DEFPROC   CDEB0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.*************************************************************************
.* CDEB - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: BALANCE                   *
.*************************************************************************
CDEB0000  MOVE      ZERO,DEBTOT           * set to zero
.
          PACK      KEY10,FMJOPRE1,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CDEB1000  CALL      RKFMJD1
          BRANCH    OVRCD,CDEB9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CDEB9999 IF NOT EQUAL
.
          MATCH     "D",FMJDDRCR         * debit or credit?
          GOTO      CDEB1000 IF NOT EQUAL
.
          ADD       FMJDTAMT,DEBTOT     * add debits
          GOTO      CDEB1000
.
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
CDEB9999  ENDPROC
.*************************************************************************
          DEFPROC   CCRE0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.*************************************************************************
.* CCRE - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: BALANCE                   *
.*************************************************************************
CCRE0000  MOVE      ZERO,CREDTOT          * set to zero
.
          PACK      KEY10,FMJOPRE1,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CCRE1000  CALL      RKFMJD1
          BRANCH    OVRCD,CCRE9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CCRE9999 IF NOT EQUAL
.
          MATCH     "C",FMJDDRCR         * debit or credit?
          GOTO      CCRE1000 IF NOT EQUAL
.
          ADD       FMJDTAMT,CREDTOT     * add debits
          GOTO      CCRE1000
.
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
CCRE9999  ENDPROC
.*************************************************************************
.* PTRN - Process a single transaction           Called by TRAN9000      *
.*                                                                       *
.*************************************************************************
PTRN0000  LOAD      KEY10,CCITEM,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                 SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          CALL      RDFMJD1           * read details file
          BRANCH    OVRCD,PTRN9999
.
          MOVE      "3",SCREEN        * doing third screen
.
          CALL      RAMAFM00          * display screen
.
PTRN1000  CALL      MAINQST           * select item post cancel?
          COMPARE   "0",CCITEM        * post?
          GOTO      PTRN8000 IF EQUAL
. 
          COMPARE   "-1",CCITEM        * cancel?
          GOTO      PTRN9999 IF EQUAL
. 
          IF        IBCNUBAS=1
            BRANCH    CCITEM,PTRN1100,PTRN1200,PTRN1300,PTRN1400,PTRN1500:
                             PTRN1600,PTRN1700
          ELSE
            BRANCH    CCITEM,PTRN1100,PTRN1200,PTRN1300,PTRN1400,PTRN1500:
                             PTRN1600
          ENDIF
          BEEP
          GOTO      PTRN1000
.
PTRN1100  CALL      KDCR0000          * keyin debit/credit
          GOTO      PTRN1000
.
PTRN1200  CALL      KACC0000          * keyin account
          GOTO      PTRN1000
.
PTRN1300  MOVE      FMJDRES,FMRSCODE  * dissection code default
          CALL      KRES0000          * keyin responsibility
          GOTO      PTRN1000
.
PTRN1400  MOVE      FMJDDIS,FMDSCODE  * dissection code default
          CALL      KDIS0000          * keyin dissection
          GOTO      PTRN1000
.
PTRN1500  CALL      KAMT0000          * keyin amount
          GOTO      PTRN1000
.
PTRN1600  CALL      KDSC0000          * keyin description
          GOTO      PTRN1000
.
PTRN1700  CALL      KBAS0000          * keyin BAS Code
          GOTO      PTRN1000
.
PTRN8000  CALL      UPFMJD1           * update file
.
PTRN9999  MOVE      "2",SCREEN
          RETURN 
.*************************************************************************
.* DELT - OK to delete a journal            Called by ML2000             *
.*************************************************************************
DELT0000  CALL      GETW0000          * get wp notes
          CALL      DMDT0000          * display screen
          CALL      DELQST            * ok to delete
          BRANCH    CEXIT,DELT1000,DELT2000,DELT3000
.
DELT1000  PACK      KEY7,FMJMJTY,FMJMJID,SP70
          CALL      DEFMJM1
.
          PACK      KEY10,KEY7,SP10
.
DELT1500  CALL      RSFMJD1                 * is there any transaction details
          CALL      RKFMJD1
          BRANCH    OVRCD,DELT1900
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO,SP70
          MATCH     KEY7,KEY10              * this journal?
          GOTO      DELT1900 IF NOT EQUAL
          CALL      DEFMJD1
          GOTO      DELT1500
.
DELT1900  MOVE      FALSE,EXIT
          GOTO      DELT9999
.
DELT2000  MOVE      ONE,EXIT          * no
          GOTO      DELT9999
.
DELT3000  MOVE      TWO,EXIT          * cancel
.
DELT9999  RETURN 
.*************************************************************************
.* KREF - Keyin the reference code for this batch  Called by SUB0000     *
.*************************************************************************
KREF0000  DISPLAY   *P1:5,*EF:
                    *P28:4,*V2LON,FMJMJID,*HOFF:
                    *P5:6,"Document Reference",*P26:6,":";
.
KREF1000  KEYIN     *P28:6,*EF,*DV,UNDLN7,*P28:6,*V2LON,DOCREF:
                    *P28:6,*DV,DOCREF
.
          CALL      GREF0000           * make item reference
.
          DISPLAY   *P5:7,"Item Reference",*P26:7,":":
                    *P28:7,*V2LON,BCREFER
.
          CALL      CONTQST           * ok to continue?
          BRANCH    CEXIT,KREF9000,KREF1000
.
          MOVE      ONE,EXIT          * cancel
          GOTO      KREF9999
.
KREF9000  MOVE      ZERO,EXIT
.
KREF9999  RETURN 
.**********************************************************************
.  GREF - Get item reference                           Called By lots
.         Requires : FMJMJID - journal id
.                    FMJMTYP - journal type
.                    DOCREF  - reference perfix
.         Returms  : BCREFER - item reference
.**********************************************************************
GREF0000  MOVE      ONE,LLPOS
.
GREF2100  RESET     FMJMJID,LLPOS      * Justify Left Journal ID
          CMATCH    SP1,FMJMJID
          GOTO      GREF2200 IF NOT EQUAL
          ADD       ONE,LLPOS
          COMPARE   SEVEN,LLPOS
          GOTO      GREF2200 IF NOT LESS
          GOTO      GREF2100
.
GREF2200  PACK      BCREFER,DOCREF,DASH,FMJMJTY,FMJMJID,SP70
          RESET     FMJMJID
.
GREF9999  RETURN
.*************************************************************************
.* CHST - Change the status of the journal to processed                  *
.*                     called by : SUB0000                               *
.*************************************************************************
CHST0000  PACK      KEY7,FMJMJTY,FMJMJID
          CALL      RDFMJM1
          BRANCH    OVRCD,CHST9999
          MOVE      "2",FMJMSTAT             * change status to processed
          CALL      UPFMJM1
.
CHST9999  RETURN 
.*************************************************************************
.* SCR3 - Display screen 3                 Called by RAMAFM10            *
.*************************************************************************
SCR30000  MOVE      SP70,FMAMDESC
          MOVE      SP70,FMRSDESC
          MOVE      SP70,FMDSDESC
          MOVE      SP70,IBBADESC
          MOVE      SP70,IBBABASC
.
          IF        IBCNUBAS=1
            MOVE      FMJDBASC,KEY3
            MOVE      FMJDBASC,IBBABASC
            CALL      RDIBBA1
          ENDIF
.
          PACK      KEY14,FMJMLEDG,FMJDACC
          MOVE      FMJMLEDG,FMAMLEDG
          MOVE      FMJDBASC,KEY3
          MOVE      FMJDACC,FMAMACCT
          CALL      RDFMAM1                 * get account description
.
          MOVE      FMJDDIS,KEY5
          MOVE      FMJDDIS,FMDSCODE
          CALL      RDFMDS1                 * get dissection description
.
          MOVE      FMJDRES,KEY4
          MOVE      FMJDRES,FMRSCODE
          CALL      RDFMRS1                 * get responsibility
          MOVE      "Debit",DRCRLDES
          MATCH     "D",FMJDDRCR            * debit?
          GOTO      SCR31000 IF EQUAL
          MOVE      "Credit",DRCRLDES
SCR31000  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJDJID:
                    *P51:4,*HOFF,"Status  : ",*V2LON,STATDESC:
                    *P1:6," 1",*HOFF,DOT,*P5:6,"Debit/Credit",*P26:6,": ": 
                    *V2LON,DRCRLDES,*V2LON:
                    *P1:7," 2",*HOFF,DOT,*P5:7,"Account Code",*P26:7,": ": 
                    *V2LON,FMJDACC,*HOFF,*P41:7,FMAMDESC,*V2LON:
                    *P1:8," 3",*HOFF,DOT,*P5:8,"Responsibility",*P26:8,": ": 
                    *V2LON,FMJDRES,*HOFF,*P41:8,FMRSDESC,*V2LON:
                    *P1:9," 4",*HOFF,DOT,*P5:9,"Dissection",*P26:9,": ": 
                    *V2LON,FMJDDIS,*HOFF,*P41:9,FMDSDESC,*V2LON:
                    *P1:10," 5",*HOFF,DOT,*P5:10,"Amount",*P26:10,": ": 
                    *V2LON,FMJDTAMT,*V2LON:
                    *P1:11," 6",*HOFF,DOT,*P5:11,"Brief Description":
                    *P26:11,": ",*V2LON,FMJDDESC
.
          IF        IBCNUBAS=1
            DISPLAY   *P1:12,*V2LON," 7",*HOFF,DOT,*P5:12,"BAS Code":
                      *P26:12,": ",*V2LON,FMJDBASC,*HOFF,*P41:12,IBBADESC
          ENDIF
.                 
SCR39999  RETURN 
.******************************************************************************
.  SCRP - Display Screen P                       Called by SELP, redisps
.******************************************************************************
SCRP0000  DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". From Journal ID      : ":
                          *V2LON,JID1:
                    *P1:5," 2",*HOFF,". To   Journal ID      : ":
                          *V2LON,JID2
.
SCRP9999  RETURN
.******************************************************************************
.  SELP - Perform Screen P                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELP0000  UNPACK    SP70,JID1,JID2
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONP       * reset item desired
          CALL      SCRP0000           * display screen P
.
SELP0100  ADD       ONE,OPTIONP        * get next item
          BRANCH    ACCEPT,SELP0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONP
.
SELP0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONP,CVERT
          MOVE      OPTIONP,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELP9500,SELP9000:                       * quit, continue
                       SELP1100,SELP1200                        * execute option
          BRANCH    ACCEPT,SELP0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELP0100           * get another option
.
SELP0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELP0100
.
.---- option 1 ----
.
SELP1100  MOVE      ONE,DISPFLAG
          MOVE      FMJOPRE1,FMJMJTY
          CALL      KJMAFM00
          BRANCH    EXIT,SELP1190,SELP9500
.
SELP1190  LOAD      FMJMJID,EXIT,ZERO20
          PACK      JID1,FMJMJID,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          GOTO      SELP0100
.
.---- option 2 ----
.
SELP1200  MOVE      ONE,DISPFLAG
          MOVE      FMJOPRE1,FMJMJTY
          CALL      KJMAFM00
          BRANCH    EXIT,SELP1290,SELP9500
.
SELP1290  LOAD      FMJMJID,EXIT,Z20
          MOVE      FMJOPRE1,FMJMJTY
          PACK      JID2,FMJMJID,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          GOTO      SELP0100
.
.
SELP9000  MATCH     JID1,JID2
          GOTO      SELP9100 IF NOT LESS
          DISPLAY   *P1:24,*B,*EF:
                    "From Journal ID Cannot Be Before To Journal ID - ";
          CALL      HITENTER
          GOTO      SELP0100
.
SELP9100  MOVE      ZERO,EXIT          * continue
          GOTO      SELP9999
.
SELP9500  MOVE      ONE,EXIT           * quit
.
SELP9999  RETURN
.**********************************************************************
.  SELA - Authorize journals                           Called By ML
.**********************************************************************
SELA0000  CALL      SELP0000           * get range
          BRANCH    EXIT,SELA9999
.
SELA0100  PACK      DOCREF,SP70
          MOVE      FMJOPRE1,JOURTYPE
          KEYIN     *P5:8,"Document Reference",*P26:8,":":
                    *P28:8,*EF,*DV,UNDLN7,*P28:8,*V2LON,DOCREF,*EF;
          CALL      CONTQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,SELA0100,SELA9999
.
          MOVE      "0",ANYSUB
          CALL      FILE0000           * go to start of records
.
SELA1000  CALL      NREC0000           * go to start of records
          BRANCH    OVRCD,SELA9500
.
          DISPLAY   *P1:24,"Submitting : ",*V2LON,FMJMJID,*EF;
.
          MATCH     "1",FMJMSTAT
          GOTO      SELA1000 IF NOT EQUAL
.
          MOVE      "1",ANYSUB
          PACK      KEY7,FMJMJTY,FMJMJID,SP70
          CALL      RLFMJM1
          BRANCH    OVRCD,SELA1000,SELA2000
.
          READ      CONTROLF,FIFTY;*246,FMCOJAUT
          COMPARE   ONE,FMCOJAUT
          GOTO      SELA3000 IF EQUAL
.
          CALL      GREF0000           * make item reference
          MOVE      "0",SUBTYPE
          CALL      SUB0000            * process submit for auth.
          CALL      CHST0000           * change status to processed
          GOTO      SELA1000
.
SELA2000  DISPLAY   *P1:24,*B,*EF,"Journal ",*V2LON,FMJMJID,*HOFF:
                    " Locked - Try Again Later - ";
          CALL      HITENTER
          GOTO      SELA1000
.
SELA3000  DISPLAY   *P1:24,*B,*EF,"Journal Authorization in Progress":
                    " - Try Again Later - ";
          CALL      HITENTER
          GOTO      SELA9999
.
SELA9500  IF        ANYSUB=0
            DISPLAY   *P1:24,*B,*EF,"No Journals Submitted - ";
            CALL      HITENTER
          ENDIF
.
SELA9999  RETURN
.********************************************************************
. PRNT - print report                               Called by ML
.         Requires : JID1,JID2    (print range)
.********************************************************************
PRNT0000  DISPLAY   *P50:24,"Printing :   ";
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
.
          CALL      FILE0000                    * go to correct position in file
.
PRNT1000  CALL      NREC0000                     * get next record
          BRANCH    OVRCD,PRNT9000               * end of file ?
.
          DISPLAY   *P61:24,*V2LON,FMJMJID,*EL;
.
          CALL      WRIT0000                     * print details
          GOTO      PRNT1000                     * get next record
.
PRNT9000  COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL          * print header if nothing printed
          CALL      UND80                        * print line
          PRINT     "****   End of Report   ****"
.
PRNT9999  RETURN
.**********************************************************************
.  FILE - Set file pointer                             Called By PRNT
.**********************************************************************
FILE0000  
.
.---- print by type 1 ----
.
FILE0100  PACK      KEY7,FMJOPRE1,JID1,SP70
          CALL      RSFMJM1
          CALL      RPFMJM1
          GOTO      FILE9999
.
FILE9999  RETURN
.**********************************************************************
.  NREC - Get next record                              Called By PRNT
.**********************************************************************
NREC0000  
.
.---- print by type 1 ----
.
NREC0100  CALL      RKFMJM1
          BRANCH    OVRCD,NREC9500
.
          MATCH     FMJMJTY,FMJOPRE1
          GOTO      NREC9500 IF NOT EQUAL        * out of range ?
          MATCH     FMJMJID,JID2
          GOTO      NREC9500 IF LESS             * out of range ?
          GOTO      NREC9000
.
NREC9000  MOVE      ZERO,OVRCD         * continue
          GOTO      NREC9999
.
NREC9500  MOVE      ONE,OVRCD          * quit
.
NREC9999  RETURN
.********************************************************************
. HEAD - print heading                              Called by PRNT
.********************************************************************
HEAD0000  CALL      HEAD80                       * print heading
          CALL      THED0000                     * print transaction heading
.
HEAD9999  RETURN
.********************************************************************
. THED - print transaction data heading             Called by PRNT
.********************************************************************
THED0000  CALL      UND80
          ADD       "2",CLNO
          PRINT     *24,"Transaction Details",*N:
                    *2,"D/C":
                    *6,"Account    ",*20,BASDESC,*24,"Diss ",*30,"Resp":
                    *35,"Transaction Description":
                    *75,"Amount"
          CALL      UND80 
.
THED9999  RETURN
.*************************************************************************
.* PMDT - Set up the variables to display the record on file             *
.*************************************************************************
PMDT0000  UNPACK    SP70,PPOSDESC,PPOSPDAT
          UNPACK    SP70,CPOSDESC,CPOSPDAT
          UNPACK    SP70,RPOSDESC,RPOSPDAT
          MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1              * get ledger description
          MOVE      FMLADESC,LEDGDESC    * set ledger description
.
          MOVE      FMJMPPOS,WORKDATE   
          CALL      CFPR0000             * get financial period for accrual
.                                        * posting date
          MOVE      WKDTDESC,PPOSDESC
          MOVE      WKDTPDAT,PPOSPDAT
.
          MOVE      DNO,CASHDESC
          LOAD      CASHDESC,FMJMCASH,DYES
          COMPARE   "0",FMJMCASH         * posting cash
          GOTO      PMDT1000 IF EQUAL
.
          MOVE      FMJMCPOS,WORKDATE   
          CALL      CFPR0000             * get financial period for accrual
.                                        * posting date
          MOVE      WKDTDESC,CPOSDESC
          MOVE      WKDTPDAT,CPOSPDAT
.
PMDT1000  MOVE      DNO,REVDESC
          LOAD      REVDESC,FMJMREV,DYES
          COMPARE   "0",FMJMREV         * posting cash
          GOTO      PMDT2000 IF EQUAL
.
          MOVE      FMJMRPOS,WORKDATE   
          CALL      CFPR0000             * get financial period for accrual
                                         * posting date
          MOVE      WKDTDESC,RPOSDESC
          MOVE      WKDTPDAT,RPOSPDAT
.
PMDT2000  MOVE      FMJMSTAT,F1
          MOVE      STAT0,STATDESC
          LOAD      STATDESC,F1,STAT1,STAT2,STATE,STATE,STATE:
                                STATE,STATE,STATE,STAT9
.
PMDT4000  PRINT     "    Journal ID           : ":
                    FMJMJID,SP10,SP8,"Status  : ",STATDESC,*N:
                    "    Brief Description":
                    SP4,":",SP1,FMJMDESC
          MOVE      SP10,CPCDATE
          MATCH     SP8,FMJMDENT              * any date entered?
          GOTO      PMDT5000 IF EQUAL
.
          UNPACK    FMJMDENT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
PMDT5000  PRINT     "    Date Entered":
                    SP9,": ",CPCDATE,*N:
                    "    Ledger":
                    SP10,SP5,": ",FMLALEDG,SP1,LEDGDESC,*N 
          UNPACK    FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     "    Accrual Posting Date : ",CPCDATE:
                    *54,PPOSDESC,SP1,PPOSPDAT,*N:
                    "    Post to Cash   (Y/N) : ",CASHDESC;
          COMPARE   FMJMCASH,ZERO           * is it postin cash?
          GOTO      PMDT5100 IF EQUAL
          UNPACK    FMJMCPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *32,"Post to : ",CPCDATE,SP2,CPOSDESC,SP1:
                    CPOSPDAT;
.
PMDT5100  PRINT     *N,"    Post Reversal  (Y/N) : ",REVDESC;
          COMPARE   FMJMREV,ZERO           * is it postin cash?
          GOTO      PMDT5200 IF EQUAL
          UNPACK    FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *32,"Post to : ",CPCDATE,SP2,RPOSDESC,SP1:
                    RPOSPDAT;
.
PMDT5200  PRINT     *N
.
          PROC      CDEB0000             * calculate debit total
          PROC      CCRE0000             * calculate credit total
.
          PRINT     *5,"Debit  Total",*26,": ",DEBTOT,*N:
                    *5,"Credit Total",*26,": ",CREDTOT,*N
.
          ADD       "20",CLNO
.
          MATCH     "2",FMJMSTAT
          GOTO      PMDT5250 IF EQUAL
          MATCH     "9",FMJMSTAT             * is it processed
          GOTO      PMDT9999 IF NOT EQUAL    * if not - dont display
.
PMDT5250  PACK      KEY12,FMJOPRE1,FMJMJID,SP20
          CALL      RSFMJP2
.
          CALL      RKFMJP2
          BRANCH    OVRCD,PMDT9999
          PACK      KEY7,FMJPJTY,FMJPJID
          MATCH     KEY7,KEY12
          GOTO      PMDT9999 IF NOT EQUAL
.
          UNPACK    FMJMPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *28,"Processing Details",*N:
                    *28,"------------------",*N:
                    *5,"Date Processed       : ",CPCDATE:
                    *45,"Batch     : ",FMJMPBAT
          COMPARE   ZERO,FMJMREV
          GOTO      PMDT9000 IF EQUAL
          UNPACK    FMJMRDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *5,"Reversal Processed   : ",CPCDATE:
                    *45,"Batch     : ",FMJMRBAT
.
PMDT9000  PRINT     SP1
.
PMDT9999  RETURN
.********************************************************************
. WRIT - print data line                            Called by PRNT
.********************************************************************
WRIT0000  CALL      HEAD80                       * print heading
          CALL      PMDT0000                     * print header details
.
          CALL      THED0000
          PACK      KEY10,FMJMJTY,FMJMJID,SP70
          CALL      RSFMJD1
.
WRIT1000  CALL      RKFMJD1
          BRANCH    OVRCD,WRIT9000
          MATCH     FMJMJTY,FMJDJTY
          GOTO      WRIT9000 IF NOT EQUAL
          MATCH     FMJMJID,FMJDJID
          GOTO      WRIT9000 IF NOT EQUAL
.
          MOVE      "Dr",DRCRDESC     * set up credit debit description
          MATCH     ANSD,FMJDDRCR     * credit or debit
          GOTO      WRIT2000 IF EQUAL
          MOVE      "Cr",DRCRDESC
.
WRIT2000  PRINT     *2,DRCRDESC:
                    *6,FMJDACC,*20,FMJDBASC,*24,FMJDDIS,SP1,FMJDRES,SP1:
                    *35,FMJDDESC,*66,FMJDTAMT
          ADD       ONE,CLNO                     * add one to line number
          COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
          GOTO      WRIT1000
.
WRIT9000  
.
WRIT9999  RETURN
.*************************************************************************
.* REDISPLAY ROUTINES FOR STANDARD KEYINS                                *
.*************************************************************************
RAMAFM00  COMPARE   "3",SCREEN            * which page do we want to redisplay
          GOTO      RAMAFM10 IF EQUAL
.
          BRANCH    DISPCNT,RAMAFM05
          CALL      CURP0000              * display current Page
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P5:CVERT,SAVEDESC;
          UNPACK    SP70,FMJDDIS,FMJDRES
          GOTO      RXXXFM99
.
RAMAFM05  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJMJID,*HOFF:
                    *P51:4,"Status  : ",*V2LON,STATDESC,*HOFF:
                    *P51:5,"Balance : ",*V2LON,BALANCE:
                    *P24:6,*V2LON,"Transaction Details":
                    *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                    *P8:7,"Account    ",*P20:7,BASDESC,*P24:7,"Diss ":
                    *P30:7,"Resp":
                    *P35:7,"Transaction Description      ":
                    *P65:7,"         Amount",*HOFF:
                    *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMAMACCT,*P20:CVERT,IBBABASC,*P24:CVERT,FMDSCODE:
                    *P30:CVERT,FMRSCODE;
          GOTO      RXXXFM99
.
RAMAFM10  CALL      SCR30000              * display screen 3
          GOTO      RXXXFM99
.
RTDSFM00  COMPARE   "3",SCREEN            * which page do we want to redisplay
          GOTO      RAMAFM10 IF EQUAL
          BRANCH    DISPCNT,RAMAFM05
.
          CALL      CURP0000              * display current ledger
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMAMACCT,*P20:CVERT,IBBABASC,*P24:CVERT,FMDSCODE:
                    *P30:CVERT,FMRSCODE;
          GOTO      RXXXFM99
.
RXXXFM99  RETURN
.
RJMAFM00  BRANCH    DISPFLAG,RJMAFM10
          DISPLAY   *P1:4,*EF,*P5:4,"Journal ID",*P26:4,":"
          RETURN
.
RJMAFM10  CALL      SCRP0000
          RETURN
.
.
RLMCFM00  RETURN
.
RLMAFM00  BRANCH    SCREEN,RLMAFM05,RAMAFM00
.
RLMAFM05  DISPLAY   *P1:4,*EF,*P5:4,"Journal ID",*P26:4,":":
                    *P28:4,*V2LON,FMJMJID:
                    *HOFF,*P51:4,"Status  : ",*V2LON,STATDESC:
                    *P1:6,*V2LON," 1",*HOFF,DOT,SP1,"Brief Description":
                    *P26:6,":",SP1,*V2LON,FMJMDESC:
                    *P1:7,*V2LON," 2",*HOFF,DOT,SP1,"Date Entered":
                    *P26:7,":";
          MATCH     SP8,FMJMDENT              * any date entered?
          GOTO      RLMAFM10 IF EQUAL
.
          UNPACK    FMJMDENT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:7,*V2LON,CPCDATE
.
RLMAFM10  DISPLAY   *P1:8,*V2LON," 3",*HOFF,DOT,SP1,"Ledger":
                    *P26:8,": ",*V2LON,FMLALEDG,SP1,*HOFF,LEDGDESC:
                    *P1:9,*V2LON," 4",*HOFF,DOT,SP1,"Accrual Posting Date":
                    *P26:9,": "
          MATCH     SP8,FMJMPPOS              * any date entered?
          GOTO      RLMAFM20 IF EQUAL
.
          UNPACK    FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:9,*V2LON,CPCDATE,*HOFF,*P54:9,PPOSDESC,SP1,PPOSPDAT
.
RLMAFM20  DISPLAY   *P1:10,*V2LON," 5",*HOFF,DOT,SP1,"Post to Cash   (Y/N)":
                    *P26:10,": ",*V2LON,CASHDESC
          COMPARE   FMJMCASH,ZERO           * is it postin cash?
          GOTO      RLMAFM30 IF EQUAL
          UNPACK    FMJMCPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P32:10,"Post to : ",*V2LON,CPCDATE,SP2,*HOFF,CPOSDESC,SP1:
                    CPOSPDAT 
.
RLMAFM30  DISPLAY   *P1:11,*V2LON," 6",*HOFF,DOT,SP1,"Post Reversal  (Y/N)":
                   *P26:11,": ",*V2LON,REVDESC
          COMPARE   FMJMREV,ZERO           * is it postin cash?
          GOTO      RLMAFM90 IF EQUAL
          UNPACK    FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P32:11,"Post to : ",*V2LON,CPCDATE,SP2,*HOFF,RPOSDESC,SP1:
                    RPOSPDAT 
.
RLMAFM90  COMPARE   "1",OPTION       * inserting?
          GOTO      RLMAFM95 IF EQUAL
          DISPLAY   *P5:13,"Debit  Total",*P26:13,": ",*V2LON,DEBTOT:
                    *P5:14,*HOFF,"Credit Total",*P26:14,": ",*V2LON:
                    CREDTOT
.
RLMAFM95  MATCH     "9",FMJMSTAT
          CALL      DISN0000 IF NOT EQUAL    * display notes if not processed
.
RLMAFM99  RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSAMAIO/INC
          INC       FMSBCFIO/INC
          INC       FMSBPFIO/INC
          INC       FMSAMAKY
          INC       FMSCONIO/INC
          INC       FMSDISIO/INC
          INC       FMSDISKY
          INC       FMSJMAIO/INC
          INC       FMSJMAKY
          INC       FMSJPDIO/INC
          INC       FMSJWPIO/INC
          INC       FMSJDTIO/INC
          INC       FMSJTPIO/INC
          INC       FMSLMAIO/INC
          INC       FMSTDSIO/INC
          INC       FMSLMAKY
          INC       FMSLMCKY
          INC       FMSLMCIO/INC
          INC       FMSRESIO/INC
          INC       FMSTDSKY
          INC       FMSRESKY
          INC       FMSSBAUT              * submit for authorization include
.
          INC       IBABASIO/INC
          INC       IBABASKY
          INC       IBABATIO/INC
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
