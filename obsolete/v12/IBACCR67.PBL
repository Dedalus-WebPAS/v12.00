.---------------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  04.07.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from r5.09
.---------------------------------------------------------------------------
. V5.09.01  08/08/2001  Davin
.           Recompiled for change to CCSEPSFD
.---------------------------------------------------------------------------
. V5.07.01  11.09.1999 Steve Downing
.           Recompiled for CCSGETCD
. V5.04.02  28.07.1996 B.G.Ackland
.           New Fields for Southern Health
. V5.04.01  11.02.1996 B.G.Ackland
.           Extend Episode file.
. V6.00.08  08.11.1993 B.G.Ackland
.           Fix Casemix Type 15 to CCEPASER Not CCEPDSER
.           Use Include CCSGETCD
. V6.00.07  08.11.1993 B.G.Ackland
.           Area Analysis Fix to Group Unknown Post Codes
.           into "Other"
. V6.00.06  13.07.1993 B.G.Ackland
.           Change Extract Codes to Quoted Format
. V6.00.05  13.07.1993 B.G.Ackland
.           Extend Episode file.
.---------------------------------------------------------------------------
. Temp Files for Power Play Export
.
CCSTMPA1  IFILE    SQL, FIXED=120, KEY="U1-10,11-20,21-30,31-40,41-50,51-60"
.
CCTPLV1   DIM       10     10        1
CCTPLV2   DIM       10     10       11
CCTPLV3   DIM       10     10       21
CCTPD2    DIM       10     10       31
CCTPD3    DIM       10     10       41
CCTPD4    DIM       10     10       51
CCTPEPS   FORM     10      6        61
CCTPLOS   FORM     10      6        67
CCTPFTC   FORM     12.2    8        73
CCTPTTC   FORM     12.2    8        81
CCTPFDR   FORM     10.2    7        89
CCTPFID   FORM     10.2    7        96
CCTPVDR   FORM     10.2    7       103
CCTPVID   FORM     10.2    7       110
CCTPSPA   DIM      3       3       117
.
.End of Record                     120
.
FLGSPLIT  FORM     1
TOTCOST1  FORM     14
TOTCOST2  FORM     14
TOTCOST3  FORM     14
TOTCOST4  FORM     14
TOTCOST5  FORM     14
AGERANGE  DIM      3
TIMRANGE  DIM      8
NEXTLEV   FORM     1
TIMLV2    DIM      10
TIMLV3    DIM      10
TIMLV4    DIM      10
.
PPDEFFIL  FILE     ASCII, FIXED=300
PPDATFIL  FILE     ASCII, FIXED=300
.
STRLV1   DIM       10
STRLV2   DIM       10
STRLV3   DIM       10
ENDLV1   DIM       10
ENDLV2   DIM       10
ENDLV3   DIM       10
.
LASTLV1  DIM       10
LASTLV2  DIM       10
LASTLV3  DIM       10
.
FLAGOTH   FORM      1
FLAGOTH1  FORM      1
FLAGOTH2  FORM      1
FLAGOTH3  FORM      1
FLAGOTH4  FORM      1
AGEGROUP  FORM      1
SAVKEY5   DIM       5
FILENAME  DIM       8
DESC      DIM       35
MEASURES  DIM       127
QUOTE     INIT      "#""
DIMLEV    FORM      1
DIMCOD2   DIM       10
DIMCOD3   DIM       10
DIMCOD4   DIM       10
EXTRBRAN  FORM      3
COMMAND   DIM       80
F12P4     FORM      12.4
PDIA01    DIM       9
SDIA01    DIM       9
POPP01    DIM       9
SOPP01    DIM       9
EXTRSUMM  FORM      1
TIMHRS    DIM       2
TDPHRS    DIM       2
TIMTEN    DIM       4
TDPTEN    DIM       4
.
THEBAND   DIM       10
.---------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACCR67
.   Function      :   Powerplay Casemix Export                
.   Generated  On :   08/07/2002
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       CCSAADFD/INC
          INC       CCSAGEFD/INC
          INC       CCSCEAFD/INC
          INC       CCSCEBFD/INC
          INC       CCSCECFD/INC
          INC       CCSCEDFD/INC
          INC       CCSCEEFD/INC
          INC       CCSCEFFD/INC
          INC       CCSCEGFD/INC
          INC       CCSCMAFD/INC
          INC       CCSEPSFD/INC
          INC       CCSIADFD/INC
          INC       CCSPPYFD/INC
          INC       CCSRBDFD/INC
          INC       CCSSTADF    
          INC       CCSSTYFD/INC
          INC       CCSTIMFD/INC
          INC       CCSXHDFD/INC
.=========================
.Local Variable Definition
.-------------------------
CT1DESC   DIM      35 * Scr 00 Fld    20
CT2DESC   DIM      35 * Scr 00 Fld    21
CT3DESC   DIM      35 * Scr 00 Fld    22
DIM1DESC  DIM      35 * Scr 00 Fld    24
DIM2DESC  DIM      35 * Scr 00 Fld    25
DIM3DESC  DIM      35 * Scr 00 Fld    26
DIM4DESC  DIM      35 * Scr 00 Fld    27
DIM5DESC  DIM      35 * Scr 00 Fld    28
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACCR67"
PRGNAM    INIT      "Powerplay Casemix Export                "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening ccsaadaf";
          OPEN      CCSAADA1,"ccsaadaf"
          DISPLAY   *P56:24,"Opening ccsaadaf";
          OPEN      CCSAADA2,"ccsaadaf"
          DISPLAY   *P56:24,"Opening ccsageaf";
          OPEN      CCSAGEA1,"ccsageaf"
          DISPLAY   *P56:24,"Opening ccsageaf";
          OPEN      CCSAGEA2,"ccsageaf"
          MOVE      "   64",AUDTSECT
          MOVE      " 37",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening ccsaudep";
            OPEN      CCSAUDEP,"ccsaudep"
          ENDIF
          MOVE      "   64",AUDTSECT
          MOVE      " 38",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening ccsaudia";
            OPEN      CCSAUDIA,"ccsaudia"
          ENDIF
          DISPLAY   *P56:24,"Opening ccsceaaf";
          OPEN      CCSCEAA1,"ccsceaaf"
          DISPLAY   *P56:24,"Opening ccscmaaf";
          OPEN      CCSCMAA1,"ccscmaaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA1,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA2,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA3,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA4,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA5,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsiadaf";
          OPEN      CCSIADA1,"ccsiadaf"
          DISPLAY   *P56:24,"Opening ccsppyaf";
          OPEN      CCSPPYA1,"ccsppyaf"
          DISPLAY   *P56:24,"Opening ccsstyaf";
          OPEN      CCSSTYA1,"ccsstyaf"
          DISPLAY   *P56:24,"Opening ccstimaf";
          OPEN      CCSTIMA1,"ccstimaf"
          DISPLAY   *P56:24,"Opening ccsxhdaf";
          OPEN      CCSXHDA1,"ccsxhdaf"
          DISPLAY   *P56:24,"Opening ccsxhdaf";
          OPEN      CCSXHDA2,"ccsxhdaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
          MOVE      SP70,CCPPPID 
          MOVE      SP70,CCPPDES 
          MOVE      SP70,CCPPEID 
          MOVE      SP70,CCPPTIM 
          MOVE      SP70,CCPPARE 
          MOVE      SP70,CCPPCT1 
          MOVE      SP70,CCPPCT2 
          MOVE      SP70,CCPPCT3 
          MOVE      SP70,CCPPDN1 
          MOVE      SP70,CCPPDN2 
          MOVE      SP70,CCPPDN3 
          MOVE      SP70,CCPPDN4 
          MOVE      SP70,CCPPDN5 
          MOVE      ZERO,CCPPEPS 
          MOVE      SP70,CT1DESC 
          MOVE      SP70,CT2DESC 
          MOVE      SP70,CT3DESC 
          MOVE      SP70,CCEADES 
          MOVE      SP70,DIM1DESC
          MOVE      SP70,DIM2DESC
          MOVE      SP70,DIM3DESC
          MOVE      SP70,DIM4DESC
          MOVE      SP70,DIM5DESC
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
.
KY00L110
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      OVRCD,ACCEPT
          MOVE      CCPPPID,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L101,PS00L102:
                            PS00L103,PS00L104,PS00L105,PS00L106:
                            PS00L107,PS00L108,PS00L109,PS00L110:
                            PS00L111,PS00L112,PS00L113,PS00L114:
                            PS00L115,PS00L116,PS00L117,PS00L118:
                            PS00L119,PS00L120,PS00L121,PS00L122
          GOTO     PS00L999
.
PS00L101
          MOVE      CCPPDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CCPPEID,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CCPPTIM,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      CCPPARE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      CCPPCT1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      CCPPCT2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      CCPPCT3,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      CCPPDN1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      CCPPDN2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      CCPPDN3,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      CCPPDN4,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      CCPPDN5,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPEPS,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      CT1DESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      CT2DESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      CT3DESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      CCEADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      DIM1DESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      DIM2DESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      DIM3DESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      DIM4DESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L122
          MOVE      DIM5DESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L006,SF00L105,SF00L106:
                            SF00L107,SF00L108,SF00L109,SF00L110:
                            SF00L111,SF00L112,SF00L113,SF00L114:
                            SF00L115,SF00L116,SF00L117,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L105,SF00L106:
                            SF00L107,SF00L108,SF00L109,SF00L110:
                            SF00L111,SF00L112,SF00L113,SF00L114:
                            SF00L115,SF00L116,SF00L117,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      CANC0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
          CALL      POST0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L104
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      SC01L000
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L105
          CALL     SELECTED
          STRIP     CCPPDES 
          SFORMAT   VAR,SCPSLEN
          MOVE      CCPPDES,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CCPPDES 
          SFORMAT   VAR,127
          ENDSET    CCPPDES 
          APPEND    SP70,CCPPDES 
          RESET     CCPPDES 
          CMATCH    EXITCHAR,CCPPDES 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CCPPDES 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
          ENDIF
          MOVE      CCPPDES,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCEADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCCEAA00
          MOVE      CCEAEID,CCPPEID
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      CHKDIM00
          MOVE      CCPPEID,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCEADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETGRP000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      CHKDIM00
          MOVE      CCPPTIM,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGRP0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      CHKDIM00
          MOVE      CCPPARE,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CT1DESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECT10000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
            BRANCH    EXIT,SF00L109,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      CHKDIM00
          MOVE      CCPPCT1,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CT1DESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L110
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CT2DESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECT20000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
            BRANCH    EXIT,SF00L110,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      CHKDIM00
          MOVE      CCPPCT2,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CT2DESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L111
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CT3DESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECT30000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
            BRANCH    EXIT,SF00L111,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      CHKDIM00
          MOVE      CCPPCT3,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CT3DESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L112
          CALL     SELECTED
          STRIP     CCPPDN1 
          SFORMAT   VAR,SCPSLEN
          MOVE      CCPPDN1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CCPPDN1 
          SFORMAT   VAR,127
          ENDSET    CCPPDN1 
          APPEND    SP70,CCPPDN1 
          RESET     CCPPDN1 
          CMATCH    EXITCHAR,CCPPDN1 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CCPPDN1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L112
            ENDIF
          ENDIF
          MOVE      CCPPDN1,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L113
          CALL     SELECTED
          STRIP     CCPPDN2 
          SFORMAT   VAR,SCPSLEN
          MOVE      CCPPDN2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CCPPDN2 
          SFORMAT   VAR,127
          ENDSET    CCPPDN2 
          APPEND    SP70,CCPPDN2 
          RESET     CCPPDN2 
          CMATCH    EXITCHAR,CCPPDN2 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CCPPDN2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L113
            ENDIF
          ENDIF
          MOVE      CCPPDN2,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L114
          CALL     SELECTED
          STRIP     CCPPDN3 
          SFORMAT   VAR,SCPSLEN
          MOVE      CCPPDN3,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CCPPDN3 
          SFORMAT   VAR,127
          ENDSET    CCPPDN3 
          APPEND    SP70,CCPPDN3 
          RESET     CCPPDN3 
          CMATCH    EXITCHAR,CCPPDN3 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CCPPDN3 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L114
            ENDIF
          ENDIF
          MOVE      CCPPDN3,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L115
          CALL     SELECTED
          STRIP     CCPPDN4 
          SFORMAT   VAR,SCPSLEN
          MOVE      CCPPDN4,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CCPPDN4 
          SFORMAT   VAR,127
          ENDSET    CCPPDN4 
          APPEND    SP70,CCPPDN4 
          RESET     CCPPDN4 
          CMATCH    EXITCHAR,CCPPDN4 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CCPPDN4 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L115
            ENDIF
          ENDIF
          MOVE      CCPPDN4,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L116
          CALL     SELECTED
          STRIP     CCPPDN5 
          SFORMAT   VAR,SCPSLEN
          MOVE      CCPPDN5,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CCPPDN5 
          SFORMAT   VAR,127
          ENDSET    CCPPDN5 
          APPEND    SP70,CCPPDN5 
          RESET     CCPPDN5 
          CMATCH    EXITCHAR,CCPPDN5 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CCPPDN5 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L116
            ENDIF
          ENDIF
          MOVE      CCPPDN5,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L117
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CCPPEPS 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPEPS,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 6",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L101,PS01L102:
                            PS01L103,PS01L104,PS01L105,PS01L106:
                            PS01L107,PS01L108,PS01L109,PS01L110:
                            PS01L111,PS01L112,PS01L113,PS01L114:
                            PS01L115,PS01L116,PS01L117,PS01L118:
                            PS01L119,PS01L120
          GOTO     PS01L999
.
PS01L101
          MOVE      CCPPPID,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      CCPPDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPNE,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBD,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPC1,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPC2,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPACC,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPTHE,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPOTH,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPALOS,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPAC1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPAC2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPAACC,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPATHE,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPAOTH,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBC1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBC2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBACC,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBTHE,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L120
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBOTH,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L006,SF01L006:
                            SF01L102,SF01L103,SF01L104,SF01L105:
                            SF01L106,SF01L107,SF01L108,SF01L109:
                            SF01L110,SF01L111,SF01L112,SF01L113:
                            SF01L114,SF01L115,SF01L116,SF01L117:
                            SF01L118,SF01L119
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L102,SF01L103,SF01L104,SF01L105:
                            SF01L106,SF01L107,SF01L108,SF01L109:
                            SF01L110,SF01L111,SF01L112,SF01L113:
                            SF01L114,SF01L115,SF01L116,SF01L117:
                            SF01L118,SF01L119
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNNE0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L102
            ENDIF
            BRANCH    EXIT,SF01L102,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPNE,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNBD0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBD,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNPC1000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPC1,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNPC2000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPC2,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNACC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPACC,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNTHE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPTHE,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNOTH000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
            BRANCH    EXIT,SF01L108,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPOTH,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNALOS00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L109
            ENDIF
            BRANCH    EXIT,SF01L109,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPALOS,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L110
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNAC1000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L110
            ENDIF
            BRANCH    EXIT,SF01L110,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPAC1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L111
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNAC2000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L111
            ENDIF
            BRANCH    EXIT,SF01L111,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPAC2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L112
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNAACC00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L112
            ENDIF
            BRANCH    EXIT,SF01L112,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPAACC,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L113
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNATHE00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L113
            ENDIF
            BRANCH    EXIT,SF01L113,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPATHE,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L114
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNAOTH00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L114
            ENDIF
            BRANCH    EXIT,SF01L114,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPAOTH,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L115
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNBC1000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L115
            ENDIF
            BRANCH    EXIT,SF01L115,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBC1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L116
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNBC2000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L116
            ENDIF
            BRANCH    EXIT,SF01L116,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBC2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L117
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNBACC00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L117
            ENDIF
            BRANCH    EXIT,SF01L117,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBACC,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L118
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNBTHE00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L118
            ENDIF
            BRANCH    EXIT,SF01L118,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBTHE,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L119
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      YNBOTH00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L119
            ENDIF
            BRANCH    EXIT,SF01L119,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCPPBOTH,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.@@@@@ Function Restart Point @@@@@
.-------------------------------------------------------------
. Check the Dimensions
.-------------------------------------------------------------
CHKDIM00  MOVE       SP70,DIM1DESC
          MOVE       SP70,DIM2DESC
          MOVE       SP70,DIM3DESC
          MOVE       SP70,DIM4DESC
          MOVE       SP70,DIM5DESC
          IF         ACCEPT=1
            MOVE       SP70,CCPPDN1
            MOVE       SP70,CCPPDN2
            MOVE       SP70,CCPPDN3
            MOVE       SP70,CCPPDN4
            MOVE       SP70,CCPPDN5
          ENDIF
.
          MOVE       ZERO,SECTOR
          MATCH      "0",CCPPTIM
          GOTO       CHKDIM10 IF EQUAL
          ADD        ONE,SECTOR
          MOVE       "Time Period Analysis",DESC
          STORE      DESC,SECTOR,DIM1DESC,DIM2DESC,DIM3DESC,DIM4DESC:
                                 DIM5DESC,DIM5DESC,DIM5DESC,DIM5DESC
          IF         ACCEPT=1
            MOVE       "All Years",DESC
            STORE      DESC,SECTOR,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4:
                                   CCPPDN5,CCPPDN5,CCPPDN5,CCPPDN5
          ENDIF
.
CHKDIM10  ADD        ONE,SECTOR
          STORE      CCEADES,SECTOR,DIM1DESC,DIM2DESC,DIM3DESC,DIM4DESC:
                                 DIM5DESC,DIM5DESC,DIM5DESC,DIM5DESC
.
          MOVE       CCEALV1,KEY3
          CALL       RDCCST1
          IF         ACCEPT=1
            CLEAR      DESC
            APPEND     "All ",DESC
            APPEND     CCSTDES,DESC
            RESET      DESC
            STORE      DESC,SECTOR,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4:
                                   CCPPDN5,CCPPDN5,CCPPDN5,CCPPDN5
          ENDIF
.
          MATCH      "0",CCPPARE
          GOTO       CHKDIM20 IF EQUAL
          ADD        ONE,SECTOR
          MOVE       "Patient Area Analysis",DESC
          STORE      DESC,SECTOR,DIM1DESC,DIM2DESC,DIM3DESC,DIM4DESC:
                                 DIM5DESC,DIM5DESC,DIM5DESC,DIM5DESC
          IF         ACCEPT=1
            MOVE       "All Areas",DESC
            STORE      DESC,SECTOR,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4:
                                   CCPPDN5,CCPPDN5,CCPPDN5,CCPPDN5
          ENDIF
.
CHKDIM20  MATCH      SP70,CCPPCT1
          GOTO       CHKDIM30 IF EQUAL
          ADD        ONE,SECTOR
          MOVE       CCPPCT1,KEY3
          CALL       RDCCST1
          MOVE       CCSTDES,DESC
          STORE      DESC,SECTOR,DIM1DESC,DIM2DESC,DIM3DESC,DIM4DESC:
                                 DIM5DESC,DIM5DESC,DIM5DESC,DIM5DESC
          IF         ACCEPT=1
            CLEAR      DESC
            APPEND     "All ",DESC
            APPEND     CCSTDES,DESC
            RESET      DESC
            STORE      DESC,SECTOR,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4:
                                   CCPPDN5,CCPPDN5,CCPPDN5,CCPPDN5
          ENDIF
.
CHKDIM30  MATCH      SP70,CCPPCT2
          GOTO       CHKDIM40 IF EQUAL
          ADD        ONE,SECTOR
          MOVE       CCPPCT2,KEY3
          CALL       RDCCST1
          MOVE       CCSTDES,DESC
          STORE      DESC,SECTOR,DIM1DESC,DIM2DESC,DIM3DESC,DIM4DESC:
                                 DIM5DESC,DIM5DESC,DIM5DESC,DIM5DESC
          IF         ACCEPT=1
            CLEAR      DESC
            APPEND     "All ",DESC
            APPEND     CCSTDES,DESC
            RESET      DESC
            STORE      DESC,SECTOR,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4:
                                   CCPPDN5,CCPPDN5,CCPPDN5,CCPPDN5
          ENDIF
.
CHKDIM40  MATCH      SP70,CCPPCT3
          GOTO       CHKDIM50 IF EQUAL
          ADD        ONE,SECTOR
          MOVE       CCPPCT3,KEY3
          CALL       RDCCST1
          MOVE       CCSTDES,DESC
          STORE      DESC,SECTOR,DIM1DESC,DIM2DESC,DIM3DESC,DIM4DESC:
                                 DIM5DESC,DIM5DESC,DIM5DESC,DIM5DESC
          IF         ACCEPT=1
            CLEAR      DESC
            APPEND     "All ",DESC
            APPEND     CCSTDES,DESC
            RESET      DESC
            STORE      DESC,SECTOR,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4:
                                   CCPPDN5,CCPPDN5,CCPPDN5,CCPPDN5
          ENDIF
.
CHKDIM50  MOVE      SCPSITM,SAVKEY5
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DIM1DESC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   25",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DIM2DESC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   26",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DIM3DESC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DIM4DESC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DIM5DESC,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      SAVKEY5,FLDID
          CALL      GETPOSIT
          RETURN
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
.
. Audit & Locking Standard Routine to Cancel Changes.
.-------------------------------------------------------------
CANC0000  PACK     KEY8,CCPPPID        * Setup Key for file.
          CALL     RACCPP1             * Check to see if record on file.
          IF       OVRCD=0
            CALL     UUCCPP1           * Unlock.
          ENDIF
          RETURN                       * need to do anything.
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Delete Record.
.-------------------------------------------------------------
DELT0000  MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DELT1000,DELT9000,DELT9100
.
DELT1000  PACK     KEY8,CCPPPID        * Setup Key to File
          CALL     RACCPP1             * Read Record
          IF       OVRCD=0
            CALL     DECCPP1           * Delete Record
          ENDIF
          MOVE     TWO,EXIT            * Restart Screen
          GOTO     DELT9999
DELT9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DELT9999
DELT9100  MOVE     TWO,EXIT            * Restart Screen on "Cancel"
          GOTO     DELT9999
DELT9999  RETURN
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Post Changes.
.-------------------------------------------------------------
POST0000  PACK     CCPPCT1,CCPPCT1,SP70
          PACK     CCPPCT2,CCPPCT2,SP70
          PACK     CCPPCT3,CCPPCT3,SP70
          MOVE     ZERO,FLGSPLIT
          MATCH    "1",CCEAUST
          GOTO     POST1000 IF EQUAL
          MATCH    SP70,CCEASCM1
          GOTO     POST1000 IF EQUAL
          MOVE     ONE,FLGSPLIT
.
POST1000  IF       CCPPEPS=0
            CALL     EXTR0000
          ELSE
            CALL     CRET0000
          ENDIF
          PACK     KEY8,CCPPPID      * Setup Key
          CALL     RACCPP1            * Check for record on file
          IF       OVRCD=0
            CALL     UPCCPP1          * Update Changes
            CALL     UUCCPP1          * Unlock
          ELSE
            CALL     WRCCPP1          * Write New Record
          ENDIF
          RETURN                      * Return to program.
.------------------------------------------------------------
. Extract at Patient Level
.------------------------------------------------------------
CRET0000  DISPLAY  *P1:10,*EF
.
          CALL      OPEN0000
          BRANCH    EXIT,CRET9999
.
          DISPLAY  *P1:10,*EF
          MOVE     ZERO,FLAGOTH2
          MOVE     ZERO,FLAGOTH3
          MOVE     ZERO,FLAGOTH4
.
          CALL      DATC0000       * Create Data File
.
          CALL      DEFC0000       * Create Definitions File
.
          CALL      TRAN0000
.
          CALL      CLSTMP00
.
CRET9999  RETURN
.------------------------------------------------------------
. Create Data
.------------------------------------------------------------
DATC0000  DISPLAY  *P1:14,*EL,"Extracting Casemix Analysis Data File"
          DISPLAY  *P1:15,*EL,*V2LON,CCPPPID,".DAT"
.
          PACK     KEY48,SP70
          CALL     RSCCEC2
DATC1000  CALL     RKCCEC2
          BRANCH   OVRCD,DATC9000
.
          MATCH    "1",CCECEXC
          GOTO     DATC1000 IF EQUAL
.
          PACK     KEY18,CCECHCD,CCECEPS
          CALL     RDCCEP1
.
          MOVE     ONE,DIMLEV
          MATCH    "0",CCPPTIM
          IF       !@EQUAL
            CALL     GETTIM00    * Time Analysis
            PACK     KEY10,TIMRANGE,SP70
            MATCH    SP70,KEY10
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,KEY10
            ENDIF
            STORE    KEY10,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    "0",CCPPARE
          IF       !@EQUAL
            PACK     KEY10,CCEPPCD,SP70
            PACK     KEY11,CCPPARE,CCEPPCD,SP70
            CALL     RDCCAD1
            IF       OVRCD=1
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,KEY10
            ENDIF
            STORE    KEY10,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT1
          IF       !@EQUAL
            MOVE     CCPPCT1,EXTRBRAN
            CALL     GETCD000     * Get Code Level 1
            MATCH    CCXHKEY,KEY10
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT2
          IF       !@EQUAL
            MOVE     CCPPCT2,EXTRBRAN
            CALL     GETCD000     * Get Code Level 2
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT3
          IF       !@EQUAL
            MOVE     CCPPCT3,EXTRBRAN
            CALL     GETCD000     * Get Code Level 3
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          PACK     KEY18,CCECHCD,CCECEPS
          SQUEEZE  KEY18
          MOVE     CCECFTC,TOTCOST1
          MOVE     CCECTTC,TOTCOST2
          CLEAR    MEASURES
          IF       CCPPNE=1
            APPEND   SP1,MEASURES
            APPEND   ONE,MEASURES
          ENDIF
          IF       CCPPBD=1
            APPEND   SP1,MEASURES
            APPEND   CCECLOS,MEASURES
          ENDIF
          IF       CCPPC1=1
            IF       FLGSPLIT=0
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
            ELSE
              MOVE     CCRBFDR,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
              MOVE     CCRBFID,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
              MOVE     CCRBVDR,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
              MOVE     CCRBVID,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
              MOVE     CCECFTC,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
            ENDIF
          ENDIF
          IF       CCPPC2=1
            APPEND   SP1,MEASURES
            APPEND   TOTCOST2,MEASURES
          ENDIF
          APPEND   SP70,MEASURES
          RESET    MEASURES
          STRIP    MEASURES
.
          MATCH    "0",CCPPTIM
          IF       @EQUAL
            WRITE    PPDATFIL,SEQ;KEY18,SP1,DIMCOD2,SP1,DIMCOD3,SP1,DIMCOD4:
                                  MEASURES
          ELSE
            WRITE    PPDATFIL,SEQ;DIMCOD2,SP1,KEY18,SP1,DIMCOD3,SP1,DIMCOD4:
                                  MEASURES
          ENDIF
          GOTO     DATC1000
DATC9000
DATC9999  RETURN
.------------------------------------------------------------
. Create Definitions
.------------------------------------------------------------
DEFC0000  DISPLAY  *P1:11,*EL,"Extracting Casemix Analysis Definition File"
          DISPLAY  *P1:12,*EL,*V2LON,CCPPPID,".DEF"
.
          WRITE    PPDEFFIL,SEQ;"memory ",QUOTE,CCPPDES,QUOTE
          WRITE    PPDEFFIL,SEQ;"; ",QUOTE,CCEAEID,SP1,CCPPDN1,QUOTE
.
          MOVE     ONE,DIMLEV
          MATCH    "0",CCPPTIM
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            CALL     ADTIM000   * Add Time
          ENDIF
.
          LOAD     DESC,DIMLEV,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4
          CALL     ADEPS000   * Add Casemix Analysis
.
          MATCH    "0",CCPPARE
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            CALL     ADARE000   * Add Area
          ENDIF
.
          MATCH    SP70,CCPPCT1
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT1,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
          MATCH    SP70,CCPPCT2
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT2,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
          MATCH    SP70,CCPPCT3
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT3,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
.
          CALL     ADMES000   * Add Measures
.
DEFC9999  RETURN
.------------------------------------------------------------
. Add Casemix Analysis to Definition File
.------------------------------------------------------------
ADEPS000  PACK     KEY3,CCEALV1
          CALL     RDCCST1
          IF       OVRCD=1
            PACK     CCSTDES,CCEALV1,SP70
          ENDIF
          WRITE    PPDEFFIL,SEQ;"1 ",CCEALV1,SP1,QUOTE,DESC,QUOTE
.
          MOVE     Z70,LASTLV1
          MOVE     Z70,LASTLV2
          MOVE     Z70,LASTLV3
          PACK     KEY48,SP70
          CALL     RSCCEC2
ADEPS100  CALL     RKCCEC2
          BRANCH   OVRCD,ADEPS900
.
          MATCH    LASTLV1,CCECLV1
          CALL     LV1AD000 IF NOT EQUAL
.
          MATCH    LASTLV2,CCECLV2
          CALL     LV2AD000 IF NOT EQUAL
.
          MATCH    LASTLV3,CCECLV3
          CALL     LV3AD000 IF NOT EQUAL
.
          PACK     KEY18,CCECHCD,CCECEPS
          CALL     RDCCEP1
          MOVE     "UR : ",KEY5
          MOVE     " Episode : ",KEY11
          PACK     KEY45,KEY5,CCEPURN,KEY11,KEY18,SP70
          SQUEEZE  KEY18
          WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY18,SP1,QUOTE,KEY45,QUOTE
          GOTO     ADEPS100
.
ADEPS900  RETURN
.------------------------------------------------------------
. Add Level 1 to Definition File
.------------------------------------------------------------
LV1AD000  PACK     KEY13,CCEALV1,CCECLV1
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCECLV1,SP70
          ENDIF
.
          MATCH    Z70,CCECLV1
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          PACK     KEY10,CCECLV1,SP70
          WRITE    PPDEFFIL,SEQ;"2 ",QUOTE,KEY10,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
          MOVE     THREE,NEXTLEV
          MOVE     CCECLV1,LASTLV1
          CALL     LV2AD000
          RETURN
.------------------------------------------------------------
. Add Level 2 to Definition File
.------------------------------------------------------------
LV2AD000  MATCH    SP70,CCEALV2
          GOTO     LV2AD900 IF EQUAL
          PACK     KEY13,CCEALV2,CCECLV2
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCECLV2,SP70
          ENDIF
          MATCH    Z70,CCECLV2
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          MOVE     CCECLV2,KEY10
          MATCH    SP70,CCECLV2
          IF       @EQUAL
            MOVE     "N/A      ",KEY10
            PACK     CCXHDES,KEY10,SP70
          ENDIF
          PACK     KEY20,CCECLV1,KEY10,SP70
          WRITE    PPDEFFIL,SEQ;"3 ",QUOTE,KEY20,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
          MOVE     FOUR,NEXTLEV
          MOVE     CCECLV2,LASTLV2
          CALL     LV3AD000
          GOTO     LV2AD999
.
LV2AD900  MOVE     CCECLV2,LASTLV2
LV2AD999  RETURN
.------------------------------------------------------------
. Add Level 3 to Definition File
.------------------------------------------------------------
LV3AD000  MATCH    SP70,CCEALV3
          GOTO     LV3AD900 IF EQUAL
.
          PACK     KEY13,CCEALV3,CCECLV3
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCECLV3,SP70
          ENDIF
          MATCH    Z70,CCECLV3
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          MOVE     CCECLV3,KEY10
          MATCH    SP70,CCECLV3
          IF       @EQUAL
            MOVE     "N/A      ",KEY10
            PACK     CCXHDES,KEY10,SP70
          ENDIF
          PACK     KEY30,CCECLV1,CCECLV2,KEY10,SP70
          WRITE    PPDEFFIL,SEQ;"4 ",QUOTE,KEY30,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
          MOVE     FIVE,NEXTLEV
.
LV3AD900  MOVE     CCECLV3,LASTLV3
LV3AD999  RETURN
.------------------------------------------------------------
. Create Export Files
.------------------------------------------------------------
EXTR0000  DISPLAY  *P1:10,*EF
          CALL      OPEN0000
          BRANCH    EXIT,EXTR9999
.
          CALL      OPNTMP00
.
          DISPLAY  *P1:10,*EF
.
          CALL      SUMM0000       * Summarize Data
.
          CALL      CDAT0000       * Create Data File
.
          CALL      CDEF0000       * Create Definitions File
.
          CALL      TRAN0000
.
          CALL      CLSTMP00
.
EXTR9999  RETURN
.------------------------------------------------------------
. Summarize Data
.------------------------------------------------------------
SUMM0000  DISPLAY  *P1:14,*EL,"Summarizing Casemix Extract for Data File"
          MOVE     ZERO,CCRBFDR
          MOVE     ZERO,CCRBFID
          MOVE     ZERO,CCRBVDR
          MOVE     ZERO,CCRBVID
          MOVE     SP70,DIMCOD2
          MOVE     SP70,DIMCOD3
          MOVE     SP70,DIMCOD4
          PACK     KEY18,SP70
          CALL     RSCCEC1
SUMM1000  CALL     RKCCEC1
          BRANCH   OVRCD,SUMM2000
.
          MATCH    "1",CCECEXC
          GOTO     SUMM1000 IF EQUAL
.
          PACK     KEY18,CCECHCD,CCECEPS
          CALL     RDCCEP1
.
          MOVE     ONE,DIMLEV
          MATCH    "0",CCPPTIM
          IF       !@EQUAL
            CALL     GETTIM00    * Time Analysis
            PACK     KEY10,TIMRANGE,SP70
            MATCH    SP70,KEY10
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,KEY10
            ENDIF
            STORE    KEY10,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    "0",CCPPARE
          IF       !@EQUAL
            PACK     KEY10,CCEPPCD,SP70
            PACK     KEY11,CCPPARE,CCEPPCD,SP70
            CALL     RDCCAD1
            IF       OVRCD=1
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,KEY10
            ENDIF
            STORE    KEY10,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT1
          IF       !@EQUAL
            MOVE     CCPPCT1,EXTRBRAN
            CALL     GETCD000     * Get Code Level 1
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT2
          IF       !@EQUAL
            MOVE     CCPPCT2,EXTRBRAN
            CALL     GETCD000     * Get Code Level 2
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT3
          IF       !@EQUAL
            MOVE     CCPPCT3,EXTRBRAN
            CALL     GETCD000     * Get Code Level 3
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
          IF       FLGSPLIT=1
            PACK     KEY21,CCECHCD,CCECEPS,CCEASCM1
            CALL     RDCCRB1
            IF       OVRCD=1
              MOVE     ZERO,CCRBFDR
              MOVE     ZERO,CCRBFID
              MOVE     ZERO,CCRBVDR
              MOVE     ZERO,CCRBVID
            ENDIF
          ENDIF
.
          PACK     KEY60,CCECLV1,CCECLV2,CCECLV3,DIMCOD2,DIMCOD3,DIMCOD4,SP70
          UNPACK   KEY60,CCTPLV1,CCTPLV2,CCTPLV3,CCTPD2,CCTPD3,CCTPD4
          CALL     RDCCTP1
          IF       OVRCD=0
            ADD      ONE,CCTPEPS
            ADD      CCECLOS,CCTPLOS
            ADD      CCECFTC,CCTPFTC
            ADD      CCECTTC,CCTPTTC
            ADD      CCRBFDR,CCTPFDR
            ADD      CCRBFID,CCTPFID
            ADD      CCRBVDR,CCTPVDR
            ADD      CCRBVID,CCTPVID
            CALL     UPCCTP1
          ELSE
            MOVE     ONE,CCTPEPS
            MOVE     CCECLOS,CCTPLOS
            MOVE     CCECFTC,CCTPFTC
            MOVE     CCECTTC,CCTPTTC
            MOVE     CCRBFDR,CCTPFDR
            MOVE     CCRBFID,CCTPFID
            MOVE     CCRBVDR,CCTPVDR
            MOVE     CCRBVID,CCTPVID
            CALL     WRCCTP1
          ENDIF
          GOTO     SUMM1000
SUMM2000
SUMM9999  RETURN
.--------------------------------------------------
. Determine Time Range Code
.--------------------------------------------------
GETTIM00  MOVE     SP70,TIMRANGE
          MOVE     CCPPTIM,KEY1
          REP      " 0",CCEPDDAT
          PACK     KEY9,KEY1,CCEPDDAT,SP70
          CALL     RDCCTM1
          IF       OVRCD=0
            CALL     RPCCTM1
          ENDIF
          CALL     RKCCTM1
          BRANCH   OVRCD,GETTIM99
          MATCH    KEY1,CCTMDEF
          GOTO     GETTIM99 IF NOT EQUAL
          MOVE     CCTMDAT,TIMRANGE
.
GETTIM99  RETURN
.------------------------------------------------------------
. Create Data
.------------------------------------------------------------
CDAT0000  DISPLAY  *P1:14,*EL,"Extracting Casemix Analysis Data File"
          DISPLAY  *P1:15,*EL,*V2LON,CCPPPID,".DAT"
          PACK     KEY60,SP70
          CALL     RSCCTP1
CDAT1000  CALL     RKCCTP1
          BRANCH   OVRCD,CDAT9000
          PACK     KEY30,CCTPLV1,CCTPLV2,CCTPLV3,SP70
          MOVE     CCTPFTC,TOTCOST1
          MOVE     CCTPTTC,TOTCOST2
          CLEAR    MEASURES
          IF       CCPPNE=1
            APPEND   SP1,MEASURES
            APPEND   CCTPEPS,MEASURES
          ENDIF
          IF       CCPPBD=1
            APPEND   SP1,MEASURES
            APPEND   CCTPLOS,MEASURES
          ENDIF
          IF       CCPPC1=1
            IF       FLGSPLIT=0
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
            ELSE
              MOVE     CCTPFDR,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
              MOVE     CCTPFID,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
              MOVE     CCTPVDR,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
              MOVE     CCTPVID,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
              MOVE     CCTPFTC,TOTCOST1
              APPEND   SP1,MEASURES
              APPEND   TOTCOST1,MEASURES
            ENDIF
          ENDIF
          IF       CCPPC2=1
            APPEND   SP1,MEASURES
            APPEND   TOTCOST2,MEASURES
          ENDIF
          APPEND   SP70,MEASURES
          RESET    MEASURES
          STRIP    MEASURES
.
          MATCH    "0",CCPPTIM
          IF       @EQUAL
            WRITE    PPDATFIL,SEQ;QUOTE,KEY30,QUOTE,SP1,CCTPD2,SP1,CCTPD3:
                                  SP1,CCTPD4,MEASURES
          ELSE
            WRITE    PPDATFIL,SEQ;CCTPD2,SP1,QUOTE,KEY30,QUOTE,SP1,CCTPD3:
                                  SP1,CCTPD4,MEASURES
          ENDIF
          GOTO     CDAT1000
CDAT9000
CDAT9999  RETURN
.------------------------------------------------------------
. Create Definitions
.------------------------------------------------------------
CDEF0000  DISPLAY  *P1:11,*EL,"Extracting Casemix Analysis Definition File"
          DISPLAY  *P1:12,*EL,*V2LON,CCPPPID,".DEF"
          WRITE    PPDEFFIL,SEQ;"memory ",QUOTE,CCPPDES,QUOTE
          WRITE    PPDEFFIL,SEQ;"; ",QUOTE,CCEAEID,SP1,CCEADES,QUOTE
.
          MOVE     ONE,DIMLEV
          MATCH    "0",CCPPTIM
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            CALL     ADTIM000   * Add Time
          ENDIF
.
          LOAD     DESC,DIMLEV,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4
          CALL     ADCAS000   * Add Casemix Analysis
.
          MATCH    "0",CCPPARE
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            CALL     ADARE000   * Add Area
          ENDIF
.
          MATCH    SP70,CCPPCT1
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT1,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
          MATCH    SP70,CCPPCT2
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT2,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
          MATCH    SP70,CCPPCT3
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT3,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
.
          CALL     ADMES000   * Add Measures
.
CDEF9999  RETURN
.--------------------------------------------------------------------------
. Execute Transfer Script eg softerm
.--------------------------------------------------------------------------
TRAN0000  MOVE     YES,DEFYESNO
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
          KEYIN    *P1:24,*EL,"Transfer to Execute : ",KEY40
          ENDSET   KEY40
          APPEND   SP70,KEY40
          RESET    KEY40
          MATCH    SP70,KEY40
          GOTO     TRAN0000 IF EQUAL
          DISPLAY  *P67:24,*EL,"Ok (",*V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "78",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
          STRIP    KEY40
          EXECUTE  KEY40,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "21",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          DISPLAY  *P1:24,*EL,"Delete Files (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "22",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  Not ok
.
          CLOSE    PPDEFFIL,DELETE
          CLOSE    PPDATFIL,DELETE
.
TRAN9999  RETURN
.------------------------------------------------------------
. Open/Create Downlaod File
.------------------------------------------------------------
OPEN0000  CALL      CCSCOPCL         * Close Files
          MOVE      CCPPEID,KEY4
          CALL      RDCCEA1
          CALL      CCSCOPOP         * Open Files
.
          CLEAR     KEY80
          APPEND    CCPPPID,KEY80
          APPEND    "/DEF",KEY80
          RESET     KEY80
.
          RESET     KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PPDEFFIL,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN1000
.
OPEN0100  BEEP
          KEYIN     *P1:24,*EL,"Definitions File Already Exists. Overwrite (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MOVE      ONE,EXIT
          MATCH     "N",ANS
          GOTO      OPEN9999 IF EQUAL
          MATCH     "Y",ANS
          GOTO      OPEN0100 IF NOT EQUAL
          CLOSE     PPDEFFIL,DELETE
.
OPEN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PREP      PPDEFFIL,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
          CLEAR     KEY80
          APPEND    CCPPPID,KEY80
          APPEND    "/DAT",KEY80
          RESET     KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PPDATFIL,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN2000
.
OPEN1100  BEEP
          KEYIN     *P1:24,*EL,"Data File Already Exists. Overwrite (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MOVE      ONE,EXIT
          MATCH     "N",ANS
          GOTO      OPEN9999 IF EQUAL
          MATCH     "Y",ANS
          GOTO      OPEN1100 IF NOT EQUAL
          CLOSE     PPDATFIL,DELETE
.
OPEN2000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PREP      PPDATFIL,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  BEEP
          MOVE      "Unable to Create Export File - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      OPEN9999
.
OPEN9999  RETURN
.
CLSTMP00  DISPLAY  *P1:10;
          CLOSE    CCSTMPA1,DELETE
          RETURN
.
OPNTMP00  DISPLAY  *P1:10;
          CLEAR    FILENAME
          APPEND   "CIA67A",FILENAME
          APPEND   PORT,FILENAME
          RESET    FILENAME
          REP      " 0",FILENAME
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     CCSTMPA1,FILENAME
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    CCSTMPA1,DELETE
          ENDIF
.
          CLEAR    COMMAND
          APPEND   "isbuild ",COMMAND
          APPEND   FILENAME,COMMAND
          APPEND   " 120 U1-10,11-20,21-30,31-40,41-50,51-60",COMMAND
          RESET    COMMAND
          EXECUTE  COMMAND,TASKID
          OPEN     CCSTMPA1,FILENAME
.
          RETURN
.------------------------------------------------------------
. Add Casemix Analysis to Definition File
.------------------------------------------------------------
ADCAS000  PACK     KEY3,CCEALV1
          CALL     RDCCST1
          IF       OVRCD=1
            PACK     CCSTDES,CCEALV1,SP70
          ENDIF
          WRITE    PPDEFFIL,SEQ;"1 ",CCEALV1,SP1,QUOTE,DESC,QUOTE
.
          PACK     KEY10,SP70
          CALL     RSCCEB1
ADCAS100  CALL     RKCCEB1
          BRANCH   OVRCD,ADCAS900
.
          PACK     KEY13,CCEALV1,CCEBLV1
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCEBLV1,SP70
          ENDIF
.
          MATCH    Z70,CCEBLV1
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          PACK     KEY10,CCEBLV1
          WRITE    PPDEFFIL,SEQ;"2 ",QUOTE,KEY10,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
.
          MATCH    SP70,CCEALV2
          GOTO     ADCAS100 IF EQUAL
.
          PACK     KEY20,CCEBLV1,SP70
          CALL     RSCCED1
ADCAS200  CALL     RKCCED1
          BRANCH   OVRCD,ADCAS100
          MATCH    CCEBLV1,CCEDLV1
          GOTO     ADCAS100 IF NOT EQUAL
.
          PACK     KEY13,CCEALV2,CCEDLV2
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCEDLV2,SP70
          ENDIF
.
          MATCH    Z70,CCEDLV2
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          PACK     KEY20,CCEDLV1,CCEDLV2,SP70
          WRITE    PPDEFFIL,SEQ;"3 ",QUOTE,KEY20,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
.
          MATCH    SP70,CCEALV3
          GOTO     ADCAS200 IF EQUAL
.
          PACK     KEY30,CCEBLV1,CCEDLV2,SP70
          CALL     RSCCEE1
ADCAS300  CALL     RKCCEE1
          BRANCH   OVRCD,ADCAS200
          MATCH    CCEDLV1,CCEELV1
          GOTO     ADCAS200 IF NOT EQUAL
          MATCH    CCEDLV2,CCEELV2
          GOTO     ADCAS200 IF NOT EQUAL
.
          PACK     KEY13,CCEALV3,CCEELV3
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCEELV3,SP70
          ENDIF
.
          MATCH    Z70,CCEELV3
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          PACK     KEY30,CCEELV1,CCEELV2,CCEELV3,SP70
          WRITE    PPDEFFIL,SEQ;"4 ",QUOTE,KEY30,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
.
          GOTO     ADCAS300
.
ADCAS900
          RETURN
.------------------------------------------------------------
. Add Time to Definition File.
.------------------------------------------------------------
ADTIM000  WRITE    PPDEFFIL,SEQ;";",DESC
          WRITE    PPDEFFIL,SEQ;"1 TIME",CCPPTIM,SP1:
                                QUOTE,DESC,QUOTE
          MOVE     Z70,TIMLV2
          MOVE     Z70,TIMLV3
          MOVE     Z70,TIMLV4
.
          PACK     KEY9,CCPPTIM,SP70
          CALL     RSCCTM1
ADTIM100  CALL     RKCCTM1
          BRANCH   OVRCD,ADTIM900
          MATCH    CCPPTIM,CCTMDEF
          GOTO     ADTIM900 IF NOT EQUAL
.
          MATCH    CCTMLV2,TIMLV2    * Change in Level 2
          IF       !@EQUAL
            MOVE     CCTMLV2,TIMLV2
            MOVE     CCTMLV3,TIMLV3
            MOVE     CCTMLV4,TIMLV4
            MOVE     "2",NEXTLEV
            MATCH    SP70,CCTMLV2
            IF       !@EQUAL
              MOVE     CCTMLV2,KEY10
              SQUEEZE  KEY10
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY10,SP1,QUOTE,CCTMLV2,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCTMLV3
            IF       !@EQUAL
              PACK     KEY20,CCTMLV2,CCTMLV3
              SQUEEZE  KEY20
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY20,SP1,QUOTE,CCTMLV3,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCTMLV4
            IF       !@EQUAL
              PACK     KEY30,CCTMLV2,CCTMLV3,CCTMLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCTMLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          MATCH    CCTMLV3,TIMLV3    * Change in Level 3
          IF       !@EQUAL
            MOVE     CCTMLV3,TIMLV3
            MOVE     CCTMLV4,TIMLV4
            MOVE     "3",NEXTLEV
            MATCH    SP70,CCTMLV3
            IF       !@EQUAL
              PACK     KEY20,CCTMLV2,CCTMLV3
              SQUEEZE  KEY20
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY20,SP1,QUOTE,CCTMLV3,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCTMLV4
            IF       !@EQUAL
              PACK     KEY30,CCTMLV2,CCTMLV3,CCTMLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCTMLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          MATCH    CCTMLV4,TIMLV4    * Change in Level 4
          IF       !@EQUAL
            MOVE     CCTMLV4,TIMLV4
            MOVE     "4",NEXTLEV
            MATCH    SP70,CCTMLV4
            IF       !@EQUAL
              PACK     KEY30,CCTMLV2,CCTMLV3,CCTMLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCTMLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,CCTMDAT,SP1,QUOTE,CCTMDES,QUOTE
          GOTO     ADTIM100
.
ADTIM900  IF       FLAGOTH=1
             MOVE     Z70,CCXHKEY
             MOVE     "Other (Blank Key)",CCXHDES
             WRITE    PPDEFFIL,SEQ;"2 ",CCXHKEY,SP1,QUOTE,CCXHDES,QUOTE
          ENDIF
          RETURN
.------------------------------------------------------------
. Add Area to Definition File.
.------------------------------------------------------------
ADARE000  WRITE    PPDEFFIL,SEQ;";",DESC
          WRITE    PPDEFFIL,SEQ;"1 AREA",CCPPARE,SP1:
                                QUOTE,DESC,QUOTE
          MOVE     Z70,TIMLV2
          MOVE     Z70,TIMLV3
          MOVE     Z70,TIMLV4
.
          PACK     KEY41,CCPPARE,SP70
          CALL     RSCCAD2
ADARE100  CALL     RKCCAD2
          BRANCH   OVRCD,ADARE900
          MATCH    CCPPARE,CCADDEF
          GOTO     ADARE900 IF NOT EQUAL
.
          MATCH    CCADLV2,TIMLV2    * Change in Level 2
          IF       !@EQUAL
            MOVE     CCADLV2,TIMLV2
            MOVE     CCADLV3,TIMLV3
            MOVE     CCADLV4,TIMLV4
            MOVE     "2",NEXTLEV
            MATCH    SP70,CCADLV2
            IF       !@EQUAL
              MOVE     CCADLV2,KEY10
              SQUEEZE  KEY10
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY10,SP1,QUOTE,CCADLV2,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCADLV3
            IF       !@EQUAL
              PACK     KEY20,CCADLV2,CCADLV3
              SQUEEZE  KEY20
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY20,SP1,QUOTE,CCADLV3,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCADLV4
            IF       !@EQUAL
              PACK     KEY30,CCADLV2,CCADLV3,CCADLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCADLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          MATCH    CCADLV3,TIMLV3    * Change in Level 3
          IF       !@EQUAL
            MOVE     CCADLV3,TIMLV3
            MOVE     CCADLV4,TIMLV4
            MOVE     "3",NEXTLEV
            MATCH    SP70,CCADLV3
            IF       !@EQUAL
              PACK     KEY20,CCADLV2,CCADLV3
              SQUEEZE  KEY20
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY20,SP1,QUOTE,CCADLV3,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCADLV4
            IF       !@EQUAL
              PACK     KEY30,CCADLV2,CCADLV3,CCADLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCADLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          MATCH    CCADLV4,TIMLV4    * Change in Level 4
          IF       !@EQUAL
            MOVE     CCADLV4,TIMLV4
            MOVE     "4",NEXTLEV
            MATCH    SP70,CCADLV4
            IF       !@EQUAL
              PACK     KEY30,CCADLV2,CCADLV3,CCADLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCADLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,CCADPC,SP1,QUOTE,CCADDES,QUOTE
          GOTO     ADARE100
.
ADARE900  IF       FLAGOTH=1
             MOVE     Z70,CCXHKEY
             MOVE     "Other Areas",CCXHDES
             WRITE    PPDEFFIL,SEQ;"2 ",CCXHKEY,SP1,QUOTE,CCXHDES,QUOTE
          ENDIF
          RETURN
.------------------------------------------------------------
. Add Measures
.------------------------------------------------------------
ADMES000  WRITE    PPDEFFIL,SEQ;";Measures "
          WRITE    PPDEFFIL,SEQ;"1 Casemix Analysis Measures"
          IF       CCPPNE=1
            WRITE    PPDEFFIL,SEQ;"2 PAT ",QUOTE,"Number of Patients",QUOTE:
                                  " Storage=INT_32 Scale=0"
          ENDIF
          IF       CCPPBD=1
            WRITE    PPDEFFIL,SEQ;"2 BDS ",QUOTE,"Bed Days",QUOTE:
                                  " Storage=INT_32 Scale=0"
          ENDIF
          IF       CCPPC1=1
            IF       FLGSPLIT=0
              WRITE    PPDEFFIL,SEQ;"2 CST1 ",QUOTE,"Cost (1)",QUOTE:
                                    " Storage=INT_32 Scale=0"
            ELSE
              WRITE    PPDEFFIL,SEQ;"2 C1FDR",QUOTE,"Fix Direct",QUOTE:
                                    " Storage=INT_32 Scale=0"
              WRITE    PPDEFFIL,SEQ;"2 C1FID",QUOTE,"Fix Indirect",QUOTE:
                                    " Storage=INT_32 Scale=0"
              WRITE    PPDEFFIL,SEQ;"2 C1VDR",QUOTE,"Var Direct",QUOTE:
                                    " Storage=INT_32 Scale=0"
              WRITE    PPDEFFIL,SEQ;"2 C1VID",QUOTE,"Var Indirect",QUOTE:
                                    " Storage=INT_32 Scale=0"
              WRITE    PPDEFFIL,SEQ;"2 CST1 ",QUOTE,"Cost",QUOTE:
                                    " Storage=INT_32 Scale=0"
            ENDIF
          ENDIF
          IF       CCPPC2=1
            IF       FLGSPLIT=0
              WRITE    PPDEFFIL,SEQ;"2 CST2 ",QUOTE,"Cost(2)",QUOTE:
                                    " Storage=INT_32 Scale=0"
            ELSE
              WRITE    PPDEFFIL,SEQ;"2 CST2 ",QUOTE,"Income",QUOTE:
                                    " Storage=INT_32 Scale=0"
            ENDIF
          ENDIF
          IF       CCPPALOS=1
            WRITE    PPDEFFIL,SEQ;"2 LOS ",QUOTE,"Av. Length of Stay":
                     QUOTE," & "
            WRITE    PPDEFFIL,SEQ;"          CALC=BDS/PAT "
          ENDIF
          IF       CCPPAC1=1
            IF       FLGSPLIT=0
              WRITE    PPDEFFIL,SEQ;"2 AC1 ",QUOTE,"Av. Patient Cost(1)":
                       QUOTE," & "
              WRITE    PPDEFFIL,SEQ;"          CALC=CST1/PAT "
            ELSE
              WRITE    PPDEFFIL,SEQ;"2 AC1 ",QUOTE,"Av. Patient Cost":
                       QUOTE," & "
              WRITE    PPDEFFIL,SEQ;"          CALC=CST1/PAT "
            ENDIF
          ENDIF
          IF       CCPPAC2=1
            IF       FLGSPLIT=0
              WRITE    PPDEFFIL,SEQ;"2 AC2 ",QUOTE,"Av. Patient Cost(2)":
                       QUOTE," & "
              WRITE    PPDEFFIL,SEQ;"          CALC=CST2/PAT "
            ELSE
              WRITE    PPDEFFIL,SEQ;"2 AC2 ",QUOTE,"Av. Patient Income":
                       QUOTE," & "
              WRITE    PPDEFFIL,SEQ;"          CALC=CST2/PAT "
            ENDIF
          ENDIF
          IF       CCPPBC1=1
            IF       FLGSPLIT=0
              WRITE    PPDEFFIL,SEQ;"2 BC1 ",QUOTE,"Av. Cost(1)/Bed Day":
                       QUOTE," & "
              WRITE    PPDEFFIL,SEQ;"          CALC=CST1/BDS "
            ELSE
              WRITE    PPDEFFIL,SEQ;"2 BC1 ",QUOTE,"Av. Cost/Bed Day":
                       QUOTE," & "
              WRITE    PPDEFFIL,SEQ;"          CALC=CST1/BDS "
            ENDIF
          ENDIF
          IF       CCPPBC2=1
            IF       FLGSPLIT=0
              WRITE    PPDEFFIL,SEQ;"2 BC2 ",QUOTE,"Av. Cost(2)/Bed Day":
                       QUOTE," & "
              WRITE    PPDEFFIL,SEQ;"          CALC=CST2/BDS "
            ELSE
              WRITE    PPDEFFIL,SEQ;"2 BC2 ",QUOTE,"Av. Income/Bed Day":
                       QUOTE," & "
              WRITE    PPDEFFIL,SEQ;"          CALC=CST2/BDS "
            ENDIF
            ELSE
          ENDIF
.
          RETURN
.--------------------------------------------------
. Add Casemix Types Analysis
.--------------------------------------------------
ADCMT000  MOVE     EXTRBRAN,KEY3
          REP      " 0",KEY3
          WRITE    PPDEFFIL,SEQ;";",DESC
          WRITE    PPDEFFIL,SEQ;"1 CMT",KEY3,SP1,QUOTE,DESC,QUOTE
          PACK     KEY13,KEY3,SP70
          CALL     RSCCXH1
ADCMT100  CALL     RKCCXH1
          BRANCH   OVRCD,ADCMT900
          MOVE     EXTRBRAN,KEY3
          REP      " 0",KEY3
          MATCH    KEY3,CCXHSTY
          GOTO     ADCMT900 IF NOT EQUAL
.
          IF       EXTRBRAN>200
            PACK     KEY13,EXTRBRAN,CCXHKEY
          ELSE
            PACK     KEY13,CCXHKEY
          ENDIF
          SQUEEZE  KEY13
          WRITE    PPDEFFIL,SEQ;"2 ",KEY13,SP1,QUOTE,CCXHDES,QUOTE
          IF       EXTRBRAN<200
            GOTO     ADCMT100
          ENDIF
.
          MOVE     EXTRBRAN,F3
          SUB      "200",F3
          MOVE     F3,KEY3
          REP      " 0",KEY3
          PACK     KEY23,KEY3,CCXHKEY,SP70
          PACK     KEY13,KEY3,CCXHKEY,SP70
          CALL     RSCCXH2
ADCMT200  CALL     RKCCXH2
          BRANCH   OVRCD,ADCMT100
          PACK     KEY23,CCXHSTY,CCXHSUM,SP70
          MATCH    KEY13,KEY23
          GOTO     ADCMT100 IF NOT EQUAL
.
          SQUEEZE  CCXHKEY
          WRITE    PPDEFFIL,SEQ;"3 ",CCXHKEY,SP1,QUOTE,CCXHDES,QUOTE
          GOTO     ADCMT200
.
ADCMT900  IF       FLAGOTH=1
             MOVE     Z70,CCXHKEY
             MOVE     "Other (Blank Key)",CCXHDES
             WRITE    PPDEFFIL,SEQ;"2 ",CCXHKEY,SP1,QUOTE,CCXHDES,QUOTE
          ENDIF
          RETURN
.
RSCCTP1   RESET     KEY60
          READ      CCSTMPA1,KEY60;;
          RETURN
.
RACCTP1   RESET     KEY60
          MOVE      ZERO,OVRCD
          READ      CCSTMPA1,KEY60;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDCCTP1   RESET     KEY60
          MOVE      ZERO,OVRCD
          READ      CCSTMPA1,KEY60;CCTPLV1,CCTPLV2,CCTPLV3,CCTPD2:
                                  CCTPD3,CCTPD4,CCTPEPS,CCTPLOS,CCTPFTC:
                                  CCTPTTC,CCTPFDR,CCTPFID,CCTPVDR,CCTPVID
          GOTO      OVERCOND IF OVER
          RETURN
.
RKCCTP1   MOVE      ZERO,OVRCD
          READKS    CCSTMPA1;CCTPLV1,CCTPLV2,CCTPLV3,CCTPD2:
                                  CCTPD3,CCTPD4,CCTPEPS,CCTPLOS,CCTPFTC:
                                  CCTPTTC,CCTPFDR,CCTPFID,CCTPVDR,CCTPVID
          GOTO      OVERCOND IF OVER
          RETURN
.
RPCCTP1   MOVE      ZERO,OVRCD
          READKP    CCSTMPA1;CCTPLV1,CCTPLV2,CCTPLV3,CCTPD2:
                                  CCTPD3,CCTPD4,CCTPEPS,CCTPLOS,CCTPFTC:
                                  CCTPTTC,CCTPFDR,CCTPFID,CCTPVDR,CCTPVID
          GOTO      OVERCOND IF OVER
          RETURN
.
UPCCTP1   UPDATE    CCSTMPA1;CCTPLV1,CCTPLV2,CCTPLV3,CCTPD2:
                                  CCTPD3,CCTPD4,CCTPEPS,CCTPLOS,CCTPFTC:
                                  CCTPTTC,CCTPFDR,CCTPFID,CCTPVDR,CCTPVID
          RETURN
.
WRCCTP1   RESET     KEY60
          WRITE     CCSTMPA1,KEY60;CCTPLV1,CCTPLV2,CCTPLV3,CCTPD2:
                                  CCTPD3,CCTPD4,CCTPEPS,CCTPLOS,CCTPFTC:
                                  CCTPTTC,CCTPFDR,CCTPFID,CCTPVDR,CCTPVID
          RETURN
.
DECCTP1   RESET     KEY60
          DELETE    CCSTMPA1,KEY60
          RETURN
.
.-------------------------------------------------------------
. File : /users/bga/std/auditkey
.
. Audit & Locking Standard Routine to Enter Key Field
.
. where   xx = Key Length
.         ss = System 2 Character Code
.         ff = File 2 Character Code
.       yyyy = Key Field IDs
.-------------------------------------------------------------
EKEYF000  MOVE      TWO,CKEYTYP             * Record Does not have to be on file
.                                           * This allows add and change.
          CALL      KCCPPA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,EKEYF999,EKEYF999  * Exit 1 Null Entry 2 Exitchar
          COMPARE   ONE,OVRCD               * New Record so no Lock
          GOTO      EKEYF900 IF EQUAL       * Return
.
EKEYF100  PACK      KEY8,CCPPPID            * Setup Key to File
          CALL      RLCCPP1                 * Read and Lock Record
          BRANCH    OVRCD,EKEYF900,EKEYF200 * OVRCD=1 Not on File 2 Locked
.
          MOVE      SP70,CT1DESC
          MOVE      SP70,CT2DESC
          MOVE      SP70,CT3DESC
          MOVE      SP70,CCEADES
          MOVE      CCPPEID,KEY4
          CALL      RDCCEA1
.
          MOVE      CCPPCT1,KEY3
          CALL      RDCCST1
          IF        OVRCD=0
            MOVE      CCSTDES,CT1DESC
          ENDIF
          MOVE      CCPPCT2,KEY3
          CALL      RDCCST1
          IF        OVRCD=0
            MOVE      CCSTDES,CT2DESC
          ENDIF
          MOVE      CCPPCT3,KEY3
          CALL      RDCCST1
          IF        OVRCD=0
            MOVE      CCSTDES,CT3DESC
          ENDIF
.
          MOVE      ZERO,ACCEPT
          CALL      CHKDIM00
.
          MOVE      ZERO,EXIT               * Setup Exit Field
          MOVE      ZERO,OVRCD              * Setup Ovrcd Field
          GOTO      EKEYF999
.
EKEYF200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or (":
                    *V2LON,"E",*HOFF,")xit ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EKEYF100 IF EQUAL       * Return to locking
          MATCH     ANSE,ANS                * Exit
          GOTO      EKEYF200 IF NOT EQUAL   * Must be a valid response
          GOTO      EKEYF000                * Return to Keyin
.
EKEYF900  MOVE      SP70,CCPPEID
          MOVE      ZERO,CCPPTIM
          MOVE      ZERO,CCPPARE
          MOVE      SP70,CCPPCT1
          MOVE      SP70,CCPPCT2
          MOVE      SP70,CCPPCT3
          MOVE      SP70,CCPPDN1
          MOVE      SP70,CCPPDN2
          MOVE      SP70,CCPPDN4
          MOVE      SP70,CCPPDN5
          MOVE      ZERO,CCPPEPS
          MOVE      ONE,CCPPNE
          MOVE      ONE,CCPPBD
          MOVE      ONE,CCPPC1
          MOVE      ZERO,CCPPC2
          MOVE      ZERO,CCPPACC
          MOVE      ZERO,CCPPTHE
          MOVE      ZERO,CCPPOTH
          MOVE      ONE,CCPPALOS
          MOVE      ONE,CCPPAC1
          MOVE      ZERO,CCPPAC2
          MOVE      ZERO,CCPPAACC
          MOVE      ZERO,CCPPATHE
          MOVE      ZERO,CCPPAOTH
          MOVE      ONE,CCPPBC1
          MOVE      ZERO,CCPPBC2
          MOVE      ZERO,CCPPBACC
          MOVE      ZERO,CCPPBTHE
          MOVE      ZERO,CCPPBOTH
          MOVE      SP70,CCPPSPA1
          MOVE      SP70,CCPPSPA2
EKEYF999  RETURN                            * End of Routine
.-------------------------------------------------------------
. Enter Time Period Definition
.-------------------------------------------------------------
ETGRP000  KEYIN    *PCCOL:CVERT,*V2LON,F1
          MOVE      F1,CCPPTIM
          RETURN
.-------------------------------------------------------------
. Enter Age Range Group
.-------------------------------------------------------------
EGRP0000  KEYIN     *PCCOL:CVERT,*V2LON,F1
          MOVE      F1,CCPPARE
          RETURN
.
ECT10000  MOVE      ZERO,CKEYTYP
          CALL      KCCSTA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,ECT19000,ECT19999  * Exit 1 Null Entry 2 Exitchar
          MOVE      CCSTSTY,CCPPCT1
          MOVE      CCSTDES,CT1DESC
          GOTO      ECT19999
.
ECT19000  MOVE      SP70,CCPPCT1
          MOVE      SP70,CT1DESC
.
ECT19999  RETURN                            * End of Routine
ECT20000  MOVE      ZERO,CKEYTYP
          CALL      KCCSTA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,ECT29000,ECT29999  * Exit 1 Null Entry 2 Exitchar
          MOVE      CCSTSTY,CCPPCT2
          MOVE      CCSTDES,CT2DESC
          GOTO      ECT29999
.
ECT29000  MOVE      SP70,CCPPCT2
          MOVE      SP70,CT2DESC
.
ECT29999  RETURN                            * End of Routine
ECT30000  MOVE      ZERO,CKEYTYP
          CALL      KCCSTA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,ECT39000,ECT39999  * Exit 1 Null Entry 2 Exitchar
          MOVE      CCSTSTY,CCPPCT3
          MOVE      CCSTDES,CT3DESC
          GOTO      ECT39999
.
ECT39000  MOVE      SP70,CCPPCT3
          MOVE      SP70,CT3DESC
.
ECT39999  RETURN                            * End of Routine
.
.----------------------------------------------------------------------
. Toggle Y/N for Analysis Measures
.----------------------------------------------------------------------
YNNE0000  IF       CCPPNE=1
            MOVE      ZERO,CCPPNE
          ELSE
            MOVE      ONE,CCPPNE
          ENDIF
          RETURN
.
YNBD0000  IF       CCPPBD=1
            MOVE      ZERO,CCPPBD
          ELSE
            MOVE      ONE,CCPPBD
          ENDIF
          RETURN
.
YNPC1000  IF       CCPPC1=1
            MOVE      ZERO,CCPPC1
          ELSE
            MOVE      ONE,CCPPC1
          ENDIF
          RETURN
.
YNPC2000  IF       CCPPC2=1
            MOVE      ZERO,CCPPC2
          ELSE
            MOVE      ONE,CCPPC2
          ENDIF
          RETURN
.
YNACC000  IF       CCPPACC=1
            MOVE      ZERO,CCPPACC
          ELSE
            MOVE      ONE,CCPPACC
          ENDIF
          RETURN
.
YNTHE000  IF       CCPPTHE=1
            MOVE      ZERO,CCPPTHE
          ELSE
            MOVE      ONE,CCPPTHE
          ENDIF
          RETURN
.
YNOTH000  IF       CCPPOTH=1
            MOVE      ZERO,CCPPOTH
          ELSE
            MOVE      ONE,CCPPOTH
          ENDIF
          RETURN
.
YNALOS00  IF       CCPPALOS=1
            MOVE      ZERO,CCPPALOS
          ELSE
            MOVE      ONE,CCPPALOS
          ENDIF
          RETURN
.
YNAC1000  IF       CCPPAC1=1
            MOVE      ZERO,CCPPAC1
          ELSE
            MOVE      ONE,CCPPAC1
          ENDIF
          RETURN
.
YNAC2000  IF       CCPPAC2=1
            MOVE      ZERO,CCPPAC2
          ELSE
            MOVE      ONE,CCPPAC2
          ENDIF
          RETURN
.
YNAACC00  IF       CCPPAACC=1
            MOVE      ZERO,CCPPAACC
          ELSE
            MOVE      ONE,CCPPAACC
          ENDIF
          RETURN
.
YNATHE00  IF       CCPPATHE=1
            MOVE      ZERO,CCPPATHE
          ELSE
            MOVE      ONE,CCPPATHE
          ENDIF
          RETURN
.
YNAOTH00  IF       CCPPAOTH=1
            MOVE      ZERO,CCPPAOTH
          ELSE
            MOVE      ONE,CCPPAOTH
          ENDIF
          RETURN
.
YNBC1000  IF       CCPPBC1=1
            MOVE      ZERO,CCPPBC1
          ELSE
            MOVE      ONE,CCPPBC1
          ENDIF
          RETURN
.
YNBC2000  IF       CCPPBC2=1
            MOVE      ZERO,CCPPBC2
          ELSE
            MOVE      ONE,CCPPBC2
          ENDIF
          RETURN
.
YNBACC00  IF       CCPPBACC=1
            MOVE      ZERO,CCPPBACC
          ELSE
            MOVE      ONE,CCPPBACC
          ENDIF
          RETURN
.
YNBTHE00  IF       CCPPBTHE=1
            MOVE      ZERO,CCPPBTHE
          ELSE
            MOVE      ONE,CCPPBTHE
          ENDIF
          RETURN
.
YNBOTH00  IF       CCPPBOTH=1
            MOVE      ZERO,CCPPBOTH
          ELSE
            MOVE      ONE,CCPPBOTH
          ENDIF
          RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       CCSAADIO/INC
          INC       CCSAGEIO/INC
          INC       CCSCEAIO/INC
          INC       CCSCEAKY    
          INC       CCSCEBIO/INC
          INC       CCSCECIO/INC
          INC       CCSCEDIO/INC
          INC       CCSCEEIO/INC
          INC       CCSCMAIO/INC
          INC       CCSCOPCD    
          INC       CCSEPSIO/INC
          INC       CCSGETCD    
          INC       CCSIADIO/INC
          INC       CCSPPYIO/INC
          INC       CCSPPYKY    
          INC       CCSRBDIO/INC
          INC       CCSSTACD    
          INC       CCSSTYIO/INC
          INC       CCSSTYKY    
          INC       CCSTIMIO/INC
          INC       CCSXHDIO/INC
          INC       CCSXHDKY    
.
          INC       STDGENCD
.
