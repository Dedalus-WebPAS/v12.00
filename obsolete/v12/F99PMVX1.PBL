.*****************************************************************************
.*    Program      : F99PMVX1                                                 *
.*    Description  : Conversion pmsvx1af to new File layout                   *
.*                                                                           *
.*    Author       : Jill Habasque                                           *
.*    Date         : 5/11/2007                                               *
.*    Modifications:                                                         *
.*****************************************************************************
.
          INC       STD001FD
. *----------------------------------------------------------------------
. * Include Name  :   PMSVX1FD.INC
. *
. * Function      :   File Def'n Include for Patient System
. *                   Visit Extension Table
. *
. * File Type     :   SQL
. *
. * File Name     :   pmsvx1af.dat
. *
. *----------------------------------------------------------------------
.
.Data File Definition
.--------------------
PMSVX1A1   IFILE    SQL, FIXED=834, KEY="U1-8"
PMSVX1A2   IFILE    SQL, FIXED=834, KEY="U9-16,1-8"
PMSVX1A3   IFILE    SQL, FIXED=834, KEY="U682-684,1-8"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMVXVISN  DIM       8      8        1     Visit Number
PMVXVSDT  DIM       8      8        9     Visit Date
PMVXDOCA  DIM       10     10       17    Attending Doctor (patdo1af)
PMVXDOCT  DIM       10     10       27    Treating Doctor (patdo1af)
PMVXCSNR  DIM       1      1        37    Consent release info (0=NO,1=YES)
PMVXPOST  DIM       8      8        38    Post Code
PMVXPIND  DIM       3      3        46    Privacy Indicator (Cat PV)
PMVXVLOC  DIM       40     40       49    Valuables Location
PMVXCFSG  DIM       1      1        89    Claim Form Signed (0=NO,1=YES)
PMVXINGP  DIM       1      1        90    Inform Registered GP (0=NO,1=YES)
PMVXCPTH  DIM       3      3        91    Critical Pathway (Cat PW)
PMVXHCP1  DIM       1      1        94    Notify HCP1 (0=NO,1=YES)
PMVXHCP2  DIM       1      1        95    Notify HCP2 (0=NO,1=YES)
PMVXHCP3  DIM       1      1        96    Notify HCP3 (0=NO,1=YES)
PMVXHCP4  DIM       1      1        97    Notify HCP4 (0=NO,1=YES)
PMVXRHC1  DIM       10     10       98    Referring HCP 1 (pmshcpaf)
PMVXRH1G  DIM       10     10       108   Referring HCP 1 Practice (pmshclaf)
PMVXRH1C  DIM       2      2        118   Referring HCP 1 Grp Count (pmshcgaf
PMVXRHC2  DIM       10     10       120   Referring HCP 2 (pmshcpaf)
PMVXRH2G  DIM       10     10       130   Referring HCP 2 Practice (pmshclaf)
PMVXRH2C  DIM       2      2        140   Referring HCP 2 Grp Count (pmshcgaf
PMVXRHC3  DIM       10     10       142   Referring HCP 3 (pmshcpaf)
PMVXRH3G  DIM       10     10       152   Referring HCP 3 Practice (pmshclaf)
PMVXRH3C  DIM       2      2        162   Referring HCP 3 Grp Count (pmshcgaf
PMVXRHC4  DIM       10     10       164   Referring HCP 4 (pmshcpaf)
PMVXRH4G  DIM       10     10       174   Referring HCP 4 Practice (pmshclaf)
PMVXRH4C  DIM       2      2        184   Referring HCP 4 Grp Count (pmshclaf
PMVXABRG  DIM       3      3        186   Aboriginality (PRS/2) (Cat VA)
PMVXCADM  DIM       3      3        189   Admission Criterion (PRS/2) (Cat VB
PMVXIRAD  DIM       3      3        192   Intent to Readmit (PRS/2) (Cat VR)
PMVXIDUS  DIM       3      3        195   Intend Stay Duration (PRS/2) Cat VI
PMVXCRAV  DIM       3      3        198   Carer Availability (PRS/2) (Cat VK)
PMVXRCCT  DIM       3      3        201   Crit. Care Xfer Reason (PRS/2) (VJ)
PMVXAPWD  DIM       3      3        204   Admitting Point Ward (Cat ap)
PMVXAPBD  DIM       3      3        207   No Longer in Use
PMVXPOWD  DIM       3      3        210   Post-Op Ward (patwr1af)
PMVXPOBD  DIM       3      3        213   Post-Op Bed (patwr1af)
PMVXPSTY  DIM       1      1        216   Parent Staying (0=NO,1=YES)
PMVXVALW  DIM       1      1        217   Visitor Allowed (0=NO,1=YES)
PMVXPALW  DIM       1      1        218   Phone Calls Allowed? (0=NO,1=YES)
PMVXINDC  DIM       1      1        219   Intended Day Case (0=NO,1=YES)
PMVXMDAV  DIM       3      3        220   Mode of Arrival (Cat VM)
PMVXFRMS  DIM       3      3        223   Forms (Cat VF)
PMVXCSNG  DIM       3      3        226   Coder Snags (Cat VN)
PMVXPWGT  FORM      6      4        229   Patient Weight(Convert to FORM 4.2)
PMVXPHGT  FORM      6      4        233   Patient Height
PMVXDHWR  DIM       8      8        237   Date Height/Weight Record. ccyymmdd
PMVXEDC1  DIM       10     10       245   Extra Doctor Code 1 (patdo1af)
PMVXEDC2  DIM       10     10       255   Extra Doctor Code 2 (patdo1af)
PMVXEDC3  DIM       10     10       265   Extra Doctor Code 3 (patdo1af)
PMVXHOME  DIM       1      1        275   Homeless Person (0=NO,1=YES)
PMVXUDF1  DIM       50     50       276   User Defined Free Format 1
PMVXUDF2  DIM       50     50       326   User Defined Free Format 2
PMVXUDF3  DIM       50     50       376   User Defined Free Format 3
PMVXUDF4  DIM       50     50       426   User Defined Free Format 4
PMVXUDT1  DIM       13     13       476   User Def. Date/Time 1 ccyymmddhh:mm
PMVXUDT2  DIM       13     13       489   User Def. Date/Time 2 ccyymmddhh:mm
PMVXUDT3  DIM       13     13       502   User Def. Date/Time 3 ccyymmddhh:mm
PMVXUDT4  DIM       13     13       515   User Def. Date/Time 4 ccyymmddhh:mm
PMVXUDT5  DIM       13     13       528   User Def. Date/Time 5 ccyymmddhh:mm
PMVXUDT6  DIM       13     13       541   User Def. Date/time 6 ccyymmddhh:mm
PMVXCDTE  DIM       8      8        554   Date record created (ccyymmdd)
PMVXCTIM  DIM       8      8        562   Time record created (hh:mm:ss)
PMVXWEBC  DIM       10     10       570   WEB User Id rec. creator (websecaf)
PMVXLUPD  DIM       8      8        580   Last Update Date (ccyymmdd)
PMVXLUPT  DIM       8      8        588   Last Update Time (hh:mm:ss)
PMVXWEBU  DIM       10     10       596   WEB User Id rec. update (websecaf)
PMVXMHLS  DIM       3      3        606   Mental Health Legal Status (LS)
PMVXPICD  DIM       9      9        609   Provisional ICD10 Code
PMVXRMOR  DIM       3      3        618   RMO Responsible Cat MO
PMVXASUT  DIM       3      3        621   Admission Service Unit Type Cat KA
PMVXELPS  DIM       3      3        624   Elective Patient Status Cat KC
PMVXEMPL  DIM       3      3        627   Employment Status Cat KD
PMVXFINP  DIM       3      3        630   Which Financial Program Cat KE
PMVXOCCP  DIM       3      3        633   Occupation Cat KF
PMVXPALC  DIM       3      3        636   Involvement in Palliat Care Cat KG
PMVXPPAL  DIM       3      3        639   Prev Non-Admitt Palliat Care Cat KH
PMVXPPPT  DIM       3      3        642   Public/Private Patients Cat KI
PMVXPSOS  DIM       3      3        645   Pension Status on Separation Cat KJ
PMVXPYSP  DIM       3      3        648   Payment Status on Seraration Cat KK
PMVXQLDB  DIM       3      3        651   Banding/Type of Episode for QLDHDP
PMVXREAD  DIM       3      3        654   Re-Admission in 28 Days Cat KM
PMVXUDIN  DIM       3      3        657   Discharge Intention Cat KN
PMVXUREA  DIM       3      3        660   Unplanned Readmission Cat KO
PMVXUSAC  DIM       3      3        663   Usual Accommodation Cat KP
PMVXUVTH  DIM       3      3        666   Unplanned Visit to Theatre Cat KB
PMVXINTR  DIM       1      1        669   Interpreter Required? (0=NO,1=YES)
PMVXLNG1  DIM       3      3        670   Preferred Language 1 (Cat LA)
PMVXASGC  DIM       9      9        673   ABS AGSC
PMVXMHOS  DIM       3      3        682   Multi Hospital ID (pathspaf)
PMVXDSPD  DIM       8      8        685   Disch Summary Produced (ccyymmdd)
PMVXDSIF  DIM       1      1        693   Disch Summary (I)nterim / (F)inal
PMVXPRMI  DIM       1      1        694   Participate/Receive Marketing Info
PMVXPRAI  DIM       1      1        695   Participate/Receive Advertising Inf
PMVXPRES  DIM       1      1        696   Participate in Research Projects
PMVXUITR  DIM       1      1        697   Use Information for Training
PMVXRPOA  DIM       1      1        698   Release to Enduring POA
PMVXRCN1  DIM       1      1        699   Release to Contact 1 ptmxnrnm
PMVXRCN2  DIM       1      1        700   Release to Contact 2 ptmxexnm
PMVXRHFU  DIM       1      1        701   Release to Health Fund
PMVXRDVA  DIM       1      1        702   Release to DVA
PMVXRSLO  DIM       1      1        703   RSL Visit OK
PMVXMLOC  DIM       3      3        704   Medical Record Location (Cat MV)
PMVXPACC  DIM       3      3        707   Preferred Accommodation (Cat BP)
PMVXEDU1  DIM       3      3        710   Extra Doctor Unit 1 (Cat AC)
PMVXEDU2  DIM       3      3        713   Extra Doctor Unit 2 (Cat AC)
PMVXEDU3  DIM       3      3        716   Extra Doctor Unit 3 (Cat AC)
PMVXPRGM  DIM       8      8        719   Program Code
PMVXCONF  DIM       1      1        727   Appointment Confirmed 0=No 1=Yes
PMVXEOCL  DIM       8      8        728   EOC Link admission no.
PMVXSLOC  DIM       3      3        736   Location SOR (Cat SG)
PMVXSCLI  DIM       3      3        739   Clinical SOR (Cat SH)
PMVXSTRA  DIM       3      3        742   Transport SOR (Cat.SI)
PMVXQASN  DIM       12     12       745   QAS Number
PMVXATCP  DIM       1      1        757   All theatre charges posted (1=yes)
PMVXATIM  DIM       8      8        758   Arrival Time (hh:mm:ss)
PMVXITIM  DIM       8      8        766   Interview Time (hh:mm:ss)
PMVXSPAR  DIM       60     60       774   Spare
.
.End of Record                      834
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE
.   
OLDFILE   IFILE     SQL, FIXED=769, KEY="U1-8"
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION PMSVX1FD"
PRGID     INIT      "F99PMVX1"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and WRPMVX11 records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,"pmsvx1af"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsvx1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmvx1af.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsvx1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmvx1af.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmsvx1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmvx1af",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmsvx1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
          APPEND    " 834 U1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " U9-16,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " U682-684,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSVX1A1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and WRPMVX11 each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY8,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
          PACK      PMVXATIM,SP10
          PACK      PMVXITIM,SP10
.                                               * Pack key here
          CALL      WRPMVX11                       * WRPMVX11 to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSVX1A1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmvx1af*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat pmsvx1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding pmsvx1af.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.**********************************************************************
. ---- OLD IO ROUTINES ----
.**********************************************************************
READSOLD  RESET     KEY8
          READ      OLDFILE,KEY8;;
          RETURN
.
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;PMVXVISN,PMVXVSDT,PMVXDOCA,PMVXDOCT,PMVXCSNR:
                        PMVXPOST,PMVXPIND,PMVXVLOC,PMVXCFSG,PMVXINGP,PMVXCPTH:
                        PMVXHCP1,PMVXHCP2,PMVXHCP3,PMVXHCP4,PMVXRHC1,PMVXRH1G:
                        PMVXRH1C,PMVXRHC2,PMVXRH2G,PMVXRH2C,PMVXRHC3,PMVXRH3G:
                        PMVXRH3C,PMVXRHC4,PMVXRH4G,PMVXRH4C,PMVXABRG,PMVXCADM:
                        PMVXIRAD,PMVXIDUS,PMVXCRAV,PMVXRCCT,PMVXAPWD,PMVXAPBD:
                        PMVXPOWD,PMVXPOBD,PMVXPSTY,PMVXVALW,PMVXPALW,PMVXINDC:
                        PMVXMDAV,PMVXFRMS,PMVXCSNG,PMVXPWGT,PMVXPHGT,PMVXDHWR:
                        PMVXEDC1,PMVXEDC2,PMVXEDC3,PMVXHOME,PMVXUDF1,PMVXUDF2:
                        PMVXUDF3,PMVXUDF4,PMVXUDT1,PMVXUDT2,PMVXUDT3,PMVXUDT4:
                        PMVXUDT5,PMVXUDT6,PMVXCDTE,PMVXCTIM,PMVXWEBC,PMVXLUPD:
                        PMVXLUPT,PMVXWEBU,PMVXMHLS,PMVXPICD,PMVXRMOR,PMVXASUT:
                        PMVXELPS,PMVXEMPL,PMVXFINP,PMVXOCCP,PMVXPALC,PMVXPPAL:
                        PMVXPPPT,PMVXPSOS,PMVXPYSP,PMVXQLDB,PMVXREAD,PMVXUDIN:
                        PMVXUREA,PMVXUSAC,PMVXUVTH,PMVXINTR,PMVXLNG1,PMVXASGC:
                        PMVXMHOS,PMVXDSPD,PMVXDSIF,PMVXPRMI,PMVXPRAI,PMVXPRES:
                        PMVXUITR,PMVXRPOA,PMVXRCN1,PMVXRCN2,PMVXRHFU,PMVXRDVA:
                        PMVXRSLO,PMVXMLOC,PMVXPACC,PMVXEDU1,PMVXEDU2,PMVXEDU3:
                        PMVXPRGM,PMVXCONF,PMVXEOCL,PMVXSLOC,PMVXSCLI,PMVXSTRA:
                        PMVXQASN,PMVXSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRPMVX11  RESET     KEY8
          WRITE     PMSVX1A1,KEY8;PMVXVISN,PMVXVSDT,PMVXDOCA,PMVXDOCT,PMVXCSNR:
                        PMVXPOST,PMVXPIND,PMVXVLOC,PMVXCFSG,PMVXINGP,PMVXCPTH:
                        PMVXHCP1,PMVXHCP2,PMVXHCP3,PMVXHCP4,PMVXRHC1,PMVXRH1G:
                        PMVXRH1C,PMVXRHC2,PMVXRH2G,PMVXRH2C,PMVXRHC3,PMVXRH3G:
                        PMVXRH3C,PMVXRHC4,PMVXRH4G,PMVXRH4C,PMVXABRG,PMVXCADM:
                        PMVXIRAD,PMVXIDUS,PMVXCRAV,PMVXRCCT,PMVXAPWD,PMVXAPBD:
                        PMVXPOWD,PMVXPOBD,PMVXPSTY,PMVXVALW,PMVXPALW,PMVXINDC:
                        PMVXMDAV,PMVXFRMS,PMVXCSNG,PMVXPWGT,PMVXPHGT,PMVXDHWR:
                        PMVXEDC1,PMVXEDC2,PMVXEDC3,PMVXHOME,PMVXUDF1,PMVXUDF2:
                        PMVXUDF3,PMVXUDF4,PMVXUDT1,PMVXUDT2,PMVXUDT3,PMVXUDT4:
                        PMVXUDT5,PMVXUDT6,PMVXCDTE,PMVXCTIM,PMVXWEBC,PMVXLUPD:
                        PMVXLUPT,PMVXWEBU,PMVXMHLS,PMVXPICD,PMVXRMOR,PMVXASUT:
                        PMVXELPS,PMVXEMPL,PMVXFINP,PMVXOCCP,PMVXPALC,PMVXPPAL:
                        PMVXPPPT,PMVXPSOS,PMVXPYSP,PMVXQLDB,PMVXREAD,PMVXUDIN:
                        PMVXUREA,PMVXUSAC,PMVXUVTH,PMVXINTR,PMVXLNG1,PMVXASGC:
                        PMVXMHOS,PMVXDSPD,PMVXDSIF,PMVXPRMI,PMVXPRAI,PMVXPRES:
                        PMVXUITR,PMVXRPOA,PMVXRCN1,PMVXRCN2,PMVXRHFU,PMVXRDVA:
                        PMVXRSLO,PMVXMLOC,PMVXPACC,PMVXEDU1,PMVXEDU2,PMVXEDU3:
                        PMVXPRGM,PMVXCONF,PMVXEOCL,PMVXSLOC,PMVXSCLI,PMVXSTRA:
                        PMVXQASN,PMVXATCP,PMVXATIM,PMVXITIM,PMVXSPAR
          RETURN
.
          INC       STD001IO
