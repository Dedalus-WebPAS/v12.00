.-----------------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-----------------------------------------------------------------------------
. VF.09.01  28.02.2002  Glenn Saunders   srf 15126
.           Re-compile for changes in DEBDKIKY
. VF.09.B01 24.01.2001 Charles Handaya
.           Modification of BAS Statement
.-----------------------------------------------------------------------------
. VF.00.01  21.06.1999 Sandra Barcham
.           Display correct total amount on details screen
.           srf 645714
.-----------------------------------------------------------------------------
DEBEXT    FORM      12.2
DEBTAX    FORM      12.2
F12P2     FORM      12.2
FORQTY    DIM       10
FORPRI    DIM       14
FOREXT    DIM       14
FORTAX    DIM       14
FORTOT    DIM       14
TOTEXT    FORM      12.2
TOTTAX    FORM      12.2
Z40       INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
.-----------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBADEB24
.   Function      :   Print/Modify Proposed Invoices          
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       DEBBICFD/INC
          INC       DEBBILFD/INC
          INC       DEBCODFD/INC
          INC       DEBCONFD/INC
          INC       DEBDBTFD/INC
          INC       DEBDCMFD/INC
          INC       DEBDKIFD/INC
          INC       DEBFDTFD/INC
          INC       DEBICMFD/INC
          INC       DEBINVDF    
          INC       DEBITMFD/INC
          INC       DEBLINFD/INC
          INC       DEBOUTDF    
          INC       DEBPTYFD/INC
          INC       DEBSECFD/INC
          INC       DEBTERFD/INC
          INC       IBACONFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
.=========================
.Local Variable Definition
.-------------------------
DBDBUC1D  DIM      35 * Scr 01 Fld    34
DBDBUC2D  DIM      35 * Scr 01 Fld    35
DBDBUC3D  DIM      35 * Scr 01 Fld    36
DBDBUC4D  DIM      35 * Scr 01 Fld    37
DBDBWRND  DIM      35 * Scr 01 Fld    38
.
.    Multi Item Key Fields Scr 01 Fld    41
.-------------------------------------------------------
DBBI2NAM  INIT      "DBBI2"
DBBI2END  FORM      1   * End Display
DBBI2SNO  FORM      5   * Number of Items on the Screen
DBBI2MKY  DIM       127 * Match Key 
DBBI2EKY  DIM       127 * End Key
DBBI2SKY  DIM       127 * Start Key
DBBI2IDX  INIT      " 132 UC1-5"
DBBI2FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
DBBI2FNM  DIM       8  * Filename
DBBI2CNT  FORM      3  * Number of Items on Screen
TOTALCHG  FORM     12.2 * Scr 01 Fld    55
.
.Word Processor File * Scr 01 Fld    67
.
NAMDBDC1  INIT      "Wdbdc1"
FILDBDC1  DIM       8
.
.
.Word Processor File * Scr 02 Fld    41
.
NAMDBBC1  INIT      "Wdbbc1"
FILDBBC1  DIM       8
.
DBBIUC1D  DIM      35 * Scr 02 Fld    45
DBBIUC2D  DIM      35 * Scr 02 Fld    46
DBBIUC3D  DIM      35 * Scr 02 Fld    47
DBBIUC4D  DIM      35 * Scr 02 Fld    48
TOTALAMT  FORM     12.2 * Scr 02 Fld    50
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBADEB24"
PRGNAM    INIT      "Print/Modify Proposed Invoices          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RCON0000
          CALL      SC00L000
          CLOSE     DBBI2FL1,DELETE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBDC1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBBC1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   81",AUDTSECT
          MOVE      "  9",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudcd";
            OPEN      DEBAUDCD,"debaudcd"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 10",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debauddb";
            OPEN      DEBAUDDB,"debauddb"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 12",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudit";
            OPEN      DEBAUDIT,"debaudit"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 13",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudpt";
            OPEN      DEBAUDPT,"debaudpt"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 14",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudse";
            OPEN      DEBAUDSE,"debaudse"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 15",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudte";
            OPEN      DEBAUDTE,"debaudte"
          ENDIF
          DISPLAY   *P56:24,"Opening debbicaf";
          OPEN      DEBBICA1,"debbicaf"
          DISPLAY   *P56:24,"Opening debbilaf";
          OPEN      DEBBILA1,"debbilaf"
          DISPLAY   *P56:24,"Opening debbilaf";
          OPEN      DEBBILA2,"debbilaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA1,"debcodaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA2,"debcodaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA1,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA2,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA3,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA4,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdcmaf";
          OPEN      DEBDCMA1,"debdcmaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA1,"debdkiaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA2,"debdkiaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA2,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA5,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA6,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA7,"debfdtaf"
          DISPLAY   *P56:24,"Opening debfdtaf";
          OPEN      DEBFDTA8,"debfdtaf"
          DISPLAY   *P56:24,"Opening debicmaf";
          OPEN      DEBICMA1,"debicmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA1,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA2,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA3,"debitmaf"
          DISPLAY   *P56:24,"Opening  debdbtaf           ";
          OPEN      DEBLINA1,"debdbtaf"          
          DISPLAY   *P56:24,"Opening  debdbtaf           ";
          OPEN      DEBLINA2,"debdbtaf"          
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA1,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA2,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA3,"debptyaf"
          DISPLAY   *P56:24,"Opening debsecaf";
          OPEN      DEBSECA1,"debsecaf"
          DISPLAY   *P56:24,"Opening debsecaf";
          OPEN      DEBSECA2,"debsecaf"
          DISPLAY   *P56:24,"Opening debteraf";
          OPEN      DEBTERA1,"debteraf"
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
.--------------------------------------------------------
. Initialise Batch Screen Unique ID                          
.--------------------------------------------------------
          MOVE     ZERO,DBBI2SNO
          MOVE     "01   41",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,DBBI2SNO
            ENDIF
          ENDIF
          PACK      DBBI2FNM,ANST,DBBI2NAM,PORT
          REP       " 0",DBBI2FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      DBBI2FL1,DBBI2FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     DBBI2FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,DBBI2FNM,DBBI2IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",DBBI2FNM;
          EXECUTE   KEY80,TASKID
          OPEN      DBBI2FL1,DBBI2FNM
.--------------------------------------------------------
. Initialise Wp Filename for Debtor Notes                       
.--------------------------------------------------------
          PACK      FILDBDC1,NAMDBDC1,PORT
          REP       " 0",FILDBDC1
          DISPLAY   *P56:24,"Create & Open ",FILDBDC1;
          PREP      TEMPWORD,FILDBDC1
.
.--------------------------------------------------------
. Initialise Wp Filename for Billing Invoice Notes              
.--------------------------------------------------------
          PACK      FILDBBC1,NAMDBBC1,PORT
          REP       " 0",FILDBBC1
          DISPLAY   *P56:24,"Create & Open ",FILDBBC1;
          PREP      TEMPWORD,FILDBBC1
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Sub Menu                           
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Modify Proposed Invoice Details    
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Billing Detail                     
          ENDIF
          RETURN
.--------------------------------
. Screen - Sub Menu                           
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Sub Menu                           
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Sub Menu                           
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Sub Menu                           
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Sub Menu                           
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Sub Menu                           
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Sub Menu                           
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Sub Menu                           
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DALL0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L104
          MOVE      ZERO,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Modify Proposed Invoice Details    
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Modify Proposed Invoice Details    
.-------------------------------------------------------
CF01L000
          MOVE      SP70,DBDBDEB 
          MOVE      SP70,NADLINE1
          MOVE      SP70,NADLINE2
          MOVE      SP70,NADLINE3
          MOVE      SP70,NADLINE4
          MOVE      SP70,NADLINE5
          MOVE      SP70,DBDBPH1 
          MOVE      SP70,DBDBPH2 
          MOVE      SP70,DBDBPH3 
          MOVE      SP70,DBDBCON 
          MOVE      ZERO,DBDBACT 
          MOVE      ZERO,DBDBSTA 
          MOVE      ZERO,DBDBTEX 
          MOVE      SP70,DBDBTER 
          MOVE      SP70,DBDBWRN 
          MOVE      SP70,DBDBLIN 
          MOVE      SP70,DBDBPUR 
          MOVE      ZERO,DBDBBAD 
          MOVE      SP70,DBDBSORT
          MOVE      SP70,DBDBUR2 
          MOVE      SP70,DBDBUD1 
          MOVE      SP70,DBDBUD2 
          MOVE      SP70,DBDBUY1 
          MOVE      SP70,DBDBUY2 
          MOVE      SP70,DBDBUC1 
          MOVE      SP70,DBDBUC2 
          MOVE      SP70,DBDBUC3 
          MOVE      SP70,DBDBUC4 
          MOVE      SP70,DBDBUC1D
          MOVE      SP70,DBDBUC2D
          MOVE      SP70,DBDBUC3D
          MOVE      SP70,DBDBUC4D
          MOVE      SP70,DBDBWRND
          MOVE      SP70,DBTEDES 
          MOVE      SP70,DBLNNA1 
          MOVE      SP70,DBBIUNI 
          MOVE      SP70,DBBISTA 
          MOVE      SP70,DBBIDAT 
          MOVE      SP70,DBBITIM 
          MOVE      SP70,DBBIUID 
          MOVE      SP70,DBBIITM 
          MOVE      SP70,DBBISDAT
          MOVE      SP70,DBBIDREF
          MOVE      SP70,DBBIOREF
          MOVE      ZERO,DBBIQTY 
          MOVE      ZERO,DBBIPRI 
          MOVE      ZERO,DBBITOT 
          MOVE      ZERO,DBBITRT 
          MOVE      ZERO,DBBITAX 
          MOVE      ZERO,TOTALCHG
          MOVE      SP70,DBITDES 
          MOVE      SP70,DBBIGST 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Modify Proposed Invoice Details    
.--------------------------------------------------------
KY01L000
.
KY01L110
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      DBDBDEB,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Modify Proposed Invoice Details    
.---------------------------------------------------------
WP01L000
          PREP     TEMPWORD,FILDBDC1
          PACK     KEY11,DBDBDEB,SP70
          MOVE     KEY11,SAVKEY80
          SETLPTR  SAVKEY80,8 
          CALL      RDDBDC1 
          IF        OVRCD=0
            CALL      RPDBDC1 
          ENDIF
WP01L100
          CALL     RKDBDC1 
          BRANCH   OVRCD,WP01L105
          PACK     KEY11,DBDCDEB,DBDCLIN
          MATCH    SAVKEY80,KEY11   
          GOTO     WP01L105 IF NOT EQUAL
          PACK     VAR,DBDCCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBDCCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP01L100
WP01L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Modify Proposed Invoice Details    
.---------------------------------------------------------
LM01L000
.---------------------------------------------------------
. Load for :    41 Unique ID                          
.---------------------------------------------------------
          UNPACK    SP70,DBBIDEB,DBBISTA,DBBIUNI
          PACK      KEY15,DBDBDEB,TWO,SP70
          MOVE      KEY15,DBBI2EKY
          STRIP     DBBI2SKY
          SETLPTR   DBBI2EKY,9
          MOVE      DBBI2EKY,DBBI2SKY
          CALL      RDDBBI2 
          IF        OVRCD=0
            CALL      RPDBBI2 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP01L000
          MOVE     ZERO,DBBI2CNT
          MOVE     ZERO,DBBI2END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP01L600
          MATCH    PRGID,SCPSPID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP01L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L101,DP01L102,DP01L103,DP01L010:
                            DP01L104,DP01L105,DP01L106,DP01L107:
                            DP01L108,DP01L109,DP01L110,DP01L111:
                            DP01L112,DP01L113,DP01L114,DP01L115:
                            DP01L116,DP01L010,DP01L010,DP01L010:
                           DP01L010,DP01L010,DP01L010,DP01L010:
                           DP01L010,DP01L010,DP01L010
          GOTO      DP01L010
.
DP01L101
          PACK      DBBI2MKY,SP70,SP70
          CALL      UPTDBBI2
          IF        DBBI2END=0
            CALL      RKDBBI2 
            IF        OVRCD=0
              PACK      DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
              MATCH     DBBI2EKY,DBBI2MKY
              IF        @EQUAL
                MOVE      ZERO,DBBI2END
                ADD       ONE,DBBI2CNT
                CALL      UPTDBBI2
          CALL      REDITM00
                MOVE      DBBIUNI,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,DBBI2END
              ENDIF
            ELSE
              MOVE      ONE,DBBI2END
            ENDIF
          ENDIF
          IF        DBBI2END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L102
          IF        DBBI2END=0
            MOVE      DBBISTA,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L103
          IF        DBBI2END=0
            UNPACK    DBBIDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L104
          IF        DBBI2END=0
            MOVE      DBBIUID,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L105
          IF        DBBI2END=0
            MOVE      DBBIITM,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L106
          IF        DBBI2END=0
            UNPACK    DBBISDAT,CCENT,CYEAR,CMON,CDAY          
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L107
          IF        DBBI2END=0
            MOVE      DBBIDREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L108
          IF        DBBI2END=0
            MOVE      DBBIOREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L109
          IF        DBBI2END=0
            MOVE      DBBIQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L110
          IF        DBBI2END=0
            MOVE      DBBIPRI,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L111
          IF        DBBI2END=0
            MOVE      DBBITOT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L112
          IF        DBBI2END=0
            MOVE      DBBITRT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L113
          IF        DBBI2END=0
            MOVE      DBBITAX,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L114
          IF        DBBI2END=0
            MOVE      TOTALCHG,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L115
          IF        DBBI2END=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L116
          IF        DBBI2END=0
            MOVE      DBBIGST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
DP01L600
          MATCH    "DBBI2",NAMSSFFI
          GOTO     DP01L605 IF NOT EQUAL
          GOTO     DP01L999
DP01L605
DP01L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP01L000
.
          MATCH    "DBBI2",NAMSSFFI
          GOTO     FP01L105 IF NOT EQUAL
          PACK     KEY15,DBBI2SKY,SP70
          CALL     RDDBBI2  * Start
          IF       OVRCD=0
            CALL     RPDBBI2  * Start
          ENDIF
          CALL     DP01L000
          GOTO     FP01L999
FP01L105
FP01L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP01L000
.
          MATCH    "DBBI2",NAMSSFFI
          GOTO     LP01L105 IF NOT EQUAL
          PACK     KEY15,DBBI2SKY,Z70
          CALL     RSDBBI2  * End
          IF       OVRCD=1
            CALL     RPDBBI2 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBBI2SNO
            CALL     RPDBBI2 
            IF       OVRCD=1
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            PACK     DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
            MATCH    DBBI2EKY,DBBI2MKY
            IF       !@EQUAL
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     LP01L999
LP01L105
LP01L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP01L000
.
          MATCH    "DBBI2",NAMSSFFI
          GOTO     PP01L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP01L105
          CALL      RFTDBBI2
          BRANCH   OVRCD,PP01L115
          MOVE      DBBI2MKY,KEY15 
          CALL      RSDBBI2 
PP01L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=DBBI2SNO
            CALL     RPDBBI2 
            IF       OVRCD=1
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            PACK     DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
            MATCH    DBBI2EKY,DBBI2MKY
            IF       !@EQUAL
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     PP01L999
PP01L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBBI2SNO
            CALL     RKDBBI2 
            IF       OVRCD=1
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            PACK     DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
            MATCH    DBBI2EKY,DBBI2MKY
            IF       !@EQUAL
              MOVE     DBBI2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP01L999
PP01L120
PP01L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP01L000
          MATCH    "DBBI2",NAMSSFFI
          GOTO     NP01L115 IF NOT EQUAL
NP01L105
          CALL     RKDBBI2 
          BRANCH   OVRCD,NP01L110
          PACK     DBBI2MKY,DBBIDEB,DBBISTA,DBBIUNI                                                        
          MATCH    DBBI2EKY,DBBI2MKY
          GOTO     NP01L110 IF NOT EQUAL
          CALL     RPDBBI2 
          CALL     DP01L000
          GOTO     NP01L999
NP01L110
          CALL     RPDBBI2 
          BEEP
          GOTO     NP01L999
NP01L115
NP01L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT01L000
CT01L105
CT01L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Modify Proposed Invoice Details    
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    41 Unique ID                          
.---------------------------------------------------------
UPTDBBI2
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      DBBI2FL1,KEY5;ANS
          IF        @OVER
            WRITE     DBBI2FL1,KEY5;SCPSROW,SCPSCOL,DBBI2MKY
          ELSE
            UPDATE    DBBI2FL1;SCPSROW,SCPSCOL,DBBI2MKY
          ENDIF
          RETURN
RDTDBBI2
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      DBBI2FL1,KEY5;SCPSROW,SCPSCOL,DBBI2MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTDBBI2
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      DBBI2FL1,KEY5;;
          READKS    DBBI2FL1;SCPSROW,SCPSCOL,DBBI2MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,DBBI2MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Modify Proposed Invoice Details    
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      FP01L000
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Modify Proposed Invoice Details    
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L101,PS01L102,PS01L103,PS01L104:
                            PS01L105,PS01L999,PS01L999,PS01L106:
                            PS01L107,PS01L108,PS01L109,PS01L110:
                            PS01L111,PS01L112,PS01L113,PS01L114:
                            PS01L115,PS01L116,PS01L117,PS01L118:
                            PS01L119,PS01L120,PS01L121,PS01L122:
                            PS01L123,PS01L124,PS01L125,PS01L126:
                            PS01L127,PS01L128,PS01L129,PS01L130:
                            PS01L131,PS01L132,PS01L133,PS01L134:
                            PS01L999,PS01L999,PS01L999,PS01L135:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L136
          GOTO     PS01L999
.
PS01L101
          MOVE      NADLINE1,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      NADLINE2,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      NADLINE3,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      NADLINE4,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      NADLINE5,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBACT,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBSTA,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBTEX,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      DBDBTER,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      DBDBWRN,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      DBDBLIN,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      DBDBPUR,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBBAD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      DBDBSORT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      DBDBUR2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L120
          UNPACK    DBDBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L121
          UNPACK    DBDBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L122
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L123
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L124
          MOVE      DBDBUC1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L125
          MOVE      DBDBUC2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L126
          MOVE      DBDBUC3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L127
          MOVE      DBDBUC4,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L128
          MOVE      DBDBUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L129
          MOVE      DBDBUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L130
          MOVE      DBDBUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L131
          MOVE      DBDBUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L132
          MOVE      DBDBWRND,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L133
          MOVE      DBTEDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L134
          MOVE      DBLNNA1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L135
          MOVE      DBBITIM,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L136
          MOVE     FILDBDC1,WORDNAME
          CALL     DISPWORD
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Modify Proposed Invoice Details    
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L103,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L104,SF01L105,SF01L006,SF01L006:
                           SF01L106,SF01L107,SF01L108
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L103,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L108
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L101
          CALL      UUDBDB1 
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      UUDBDB1 
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L103
          CALL      SELECTED
          BRANCH    EXIT,SF01L001
          COMPARE   ONE,ACCEPT
          GOTO      SF01L001 IF EQUAL
          CALL      RDTDBBI2
          IF        OVRCD=1
            BEEP
            GOTO      SF01L001
          ENDIF
          MATCH     SP70,DBBI2MKY
          IF        @EQUAL
            BEEP
            GOTO      SF01L001
          ENDIF
          MOVE      DBBI2MKY,KEY15 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SELT0000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTDBBI2
          IF        OVRCD=1
            CALL      FP01L000
          ELSE
            MOVE      DBBI2MKY,KEY15 
            CALL      RSDBBI2 
            CALL      RPDBBI2 
            CALL      DP01L000
          ENDIF
          GOTO     SF01L001
.
SF01L104
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      NP01L000
          GOTO     SF01L001
.
SF01L105
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      PP01L000
          GOTO     SF01L001
.
SF01L106
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L107
          MOVE      "DBBI2",NAMSSFFI
          MOVE      "   41",ITMSSFFI
          CALL      LP01L000
          GOTO     SF01L001
.
SF01L108
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "10",SCPSROW
              MOVE     "  5",SCPSCOL
              MOVE     " 70",SCPSLEN
              MOVE     "10",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILDBDC1,WORDNAME
              MOVE     " 12",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILDBDC1,WORDNAME
            MOVE     " 12",WORDTYPE
            IF       ACCEPT=0
               CALL     EDITWORD
            ENDIF
          ENDIF
          GOTO     SF01L001
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Billing Detail                     
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 5",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Billing Detail                     
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Billing Detail                     
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Billing Detail                     
.---------------------------------------------------------
WP02L000
          PREP     TEMPWORD,FILDBBC1
          PACK     KEY17,DBBIDEB,DBBIUNI,SP70
          MOVE     KEY17,SAVKEY80
          SETLPTR  SAVKEY80,14
          CALL      RDDBBC1 
          IF        OVRCD=0
            CALL      RPDBBC1 
          ENDIF
WP02L100
          CALL     RKDBBC1 
          BRANCH   OVRCD,WP02L105
          PACK     KEY17,DBBCDEB,DBBCUNI,DBBCLIN
          MATCH    SAVKEY80,KEY17   
          GOTO     WP02L105 IF NOT EQUAL
          PACK     VAR,DBBCCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBBCCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP02L100
WP02L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Billing Detail                     
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Billing Detail                     
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Billing Detail                     
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L101,PS02L102,PS02L103,PS02L104:
                            PS02L105,PS02L106,PS02L107,PS02L108:
                            PS02L109,PS02L110,PS02L111,PS02L112:
                            PS02L113,PS02L114,PS02L115,PS02L116:
                            PS02L117,PS02L118,PS02L119,PS02L120:
                            PS02L121,PS02L122,PS02L123,PS02L124:
                            PS02L125,PS02L126,PS02L127,PS02L128:
                            PS02L129,PS02L130,PS02L131,PS02L132:
                            PS02L133,PS02L134,PS02L135,PS02L136:
                            PS02L137,PS02L138,PS02L139,PS02L140:
                            PS02L141,PS02L142,PS02L143,PS02L144:
                            PS02L999,PS02L145,PS02L146,PS02L147
          GOTO     PS02L999
.
PS02L101
          MOVE      DBBIDEB,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      DBBIUNI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      DBBISTA,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      DBBIDAT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      DBBITIM,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      DBBIUID,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      DBBIITM,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          UNPACK    DBBISDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      DBBIDREF,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          MOVE      DBBIOREF,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      DBBIQTY,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          MOVE      DBBIPRI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          MOVE      DBBITOT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          MOVE      DBBITRT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          MOVE      DBBITAX,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L116
          MOVE      DBBIUR1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L117
          MOVE      DBBIUR2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L118
          UNPACK    DBBIUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L119
          UNPACK    DBBIUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L120
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBBIUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L121
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBBIUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L122
          MOVE      DBBIUC1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L123
          MOVE      DBBIUC2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L124
          MOVE      DBBIUC3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L125
          MOVE      DBBIUC4,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L126
          MOVE      DBDBNA1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L127
          MOVE      DBDBNA2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L128
          MOVE      DBDBAD1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L129
          MOVE      DBDBAD2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L130
          MOVE      DBDBAD3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L131
          MOVE      DBDBAD4,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L132
          MOVE      DBDBPC,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L133
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L134
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L135
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L136
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L137
          MOVE     FILDBBC1,WORDNAME
          CALL     DISPWORD
          GOTO     PS02L999
.
PS02L138
          MOVE      DBITDES,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L139
          MOVE      DBITIDE,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L140
          MOVE      DBITPRI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L141
          MOVE      DBBIUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L142
          MOVE      DBBIUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L143
          MOVE      DBBIUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L144
          MOVE      DBBIUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L145
          MOVE      TOTALAMT,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L146
          MOVE      DBBIGST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L147
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Billing Detail                     
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L104,SF02L105:
                            SF02L106,SF02L107,SF02L108,SF02L109:
                            SF02L110,SF02L111,SF02L112,SF02L113:
                            SF02L114,SF02L115,SF02L116,SF02L117:
                            SF02L118,SF02L119,SF02L120,SF02L121:
                            SF02L122,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L123,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L124,SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L104,SF02L105:
                            SF02L106,SF02L107,SF02L108,SF02L109:
                            SF02L110,SF02L111,SF02L112,SF02L113:
                            SF02L114,SF02L115,SF02L116,SF02L117:
                            SF02L118,SF02L119,SF02L120,SF02L121:
                            SF02L122,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L123,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L124,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          CALL      POST0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      CANC0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L104
.
.
          MOVE      "   42",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   43",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITIDE 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   44",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITPRI 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESALI000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIITM,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   42",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   43",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITIDE,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   44",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITPRI,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
          CALL      DATECURR
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBBISDAT,CCENT,CYEAR,CMON,CDAY          
          UNPACK    DBBISDAT,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L106
          CALL     SELECTED
          STRIP     DBBIDREF
          SFORMAT   VAR,SCPSLEN
          MOVE      DBBIDREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBBIDREF
          SFORMAT   VAR,127
          ENDSET    DBBIDREF
          APPEND    SP70,DBBIDREF
          RESET     DBBIDREF
          CMATCH    EXITCHAR,DBBIDREF
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBBIDREF
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L106
            ENDIF
          ENDIF
          MOVE      DBBIDREF,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L107
          CALL     SELECTED
          STRIP     DBBIOREF
          SFORMAT   VAR,SCPSLEN
          MOVE      DBBIOREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBBIOREF
          SFORMAT   VAR,127
          ENDSET    DBBIOREF
          APPEND    SP70,DBBIOREF
          RESET     DBBIOREF
          CMATCH    EXITCHAR,DBBIOREF
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBBIOREF
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L107
            ENDIF
          ENDIF
          MOVE      DBBIOREF,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EQUTY000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L108
            ENDIF
            BRANCH    EXIT,SF02L108,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIQTY,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPRIC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L109
            ENDIF
            BRANCH    EXIT,SF02L109,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIPRI,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L110
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETOTL000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L110
            ENDIF
            BRANCH    EXIT,SF02L110,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBITOT,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L111
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,DBBITRT 
          IF        SCPSMAN=1
            COMPARE   ZERO,DBBITRT 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L111
            ENDIF
          ENDIF
          MOVE      DBBITRT,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L112
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETAXA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L112
            ENDIF
            BRANCH    EXIT,SF02L112,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBITAX,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L113
          CALL     SELECTED
          STRIP     DBBIUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBBIUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBBIUR1 
          SFORMAT   VAR,127
          ENDSET    DBBIUR1 
          APPEND    SP70,DBBIUR1 
          RESET     DBBIUR1 
          CMATCH    EXITCHAR,DBBIUR1 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBBIUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L113
            ENDIF
          ENDIF
          MOVE      DBBIUR1,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L114
          CALL     SELECTED
          STRIP     DBBIUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBBIUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBBIUR2 
          SFORMAT   VAR,127
          ENDSET    DBBIUR2 
          APPEND    SP70,DBBIUR2 
          RESET     DBBIUR2 
          CMATCH    EXITCHAR,DBBIUR2 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBBIUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L114
            ENDIF
          ENDIF
          MOVE      DBBIUR2,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L115
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBBIUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBBIUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L116
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBBIUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBBIUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L117
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBBIUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBBIUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L118
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBBIUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBBIUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L119
.
.
          MOVE      "   45",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBBIUC1D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L119
            ENDIF
            BRANCH    EXIT,SF02L119,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIUC1,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   45",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIUC1D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L120
.
.
          MOVE      "   46",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBBIUC2D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L120
            ENDIF
            BRANCH    EXIT,SF02L120,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIUC2,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   46",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIUC2D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L121
.
.
          MOVE      "   47",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBBIUC3D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L121
            ENDIF
            BRANCH    EXIT,SF02L121,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIUC3,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   47",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIUC3D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L122
.
.
          MOVE      "   48",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBBIUC4D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L122
            ENDIF
            BRANCH    EXIT,SF02L122,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIUC4,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   48",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIUC4D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L123
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     " 0",SCPSROW
              MOVE     "  0",SCPSCOL
              MOVE     "  0",SCPSLEN
              MOVE     " 0",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILDBBC1,WORDNAME
              MOVE     "  8",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILDBBC1,WORDNAME
            MOVE     "  8",WORDTYPE
            CALL     EDITWORD
          ENDIF
          GOTO     SF02L001
.
SF02L124
.
.
          MOVE      "   52",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,IBGSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGST0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L124
            ENDIF
            BRANCH    EXIT,SF02L124,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBBIGST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   52",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      IBGSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.@@@@@ Function Restart Point @@@@@
.-------------------------------------------------------------
. Read Control File
.-------------------------------------------------------------
RCON0000  READ      CONTROLF,ZERO;*85,IBCNUGST
.
RCON9999  RETURN
.-------------------------------
. Print Proposed Invoice Report
.-------------------------------
REPT0000  READ      CONTROLF,EIGHTY1;*20,CFDBIFL
          IF        CFDBIFL=0
            MOVE      "Invoice Generation NOT in Progress. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      REPT9999
          ENDIF
.
          CLOCK     TIME,CTIMEIS
          MOVE      "999",CLNO
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,TOTEXT    * Report Total
          MOVE      ZERO,TOTTAX
          PACK      KEY8,SP70
          CALL      RSDBDB1
.
REPT1000  CALL      RKDBDB1
          BRANCH    OVRCD,REPT9000
          PACK      KEY15,DBDBDEB,TWO,SP70
          CALL      RSDBBI2
          CALL      RKDBBI2
          BRANCH    OVRCD,REPT1000
          MATCH     DBDBDEB,DBBIDEB
          GOTO      REPT1000 IF NOT EQUAL
          MATCH     "2",DBBISTA
          GOTO      REPT1000 IF NOT EQUAL
.
          MOVE      ZERO,DEBEXT    * Debtors Total
          MOVE      ZERO,DEBTAX
          CALL      PRTDEB00
.
          CALL      PRTLIN00
.
REPT1100  CALL      RKDBBI2
          BRANCH    OVRCD,REPT1900
          MATCH     DBDBDEB,DBBIDEB
          GOTO      REPT1900 IF NOT EQUAL
          MATCH     "2",DBBISTA
          GOTO      REPT1900 IF NOT EQUAL
.
          CALL      PRTLIN00
.
          GOTO      REPT1100
.
REPT1900  CALl      PRTTOT00
          GOTO      REPT1000
.
REPT9000  CALL      REPTOT00
          BEEP
          MOVE      "Report Complete - ",DISPMSG
          CALL      MESSAGE1
.
REPT9999  RETURN
.
PRTDEB00  COMPARE   "50",CLNO
          CALL      PRTHED00 IF NOT LESS
          STRIP     DBDBNA1
          STRIP     DBDBNA2
          STRIP     DBDBAD1
          STRIP     DBDBAD2
          STRIP     DBDBAD3
          STRIP     DBDBAD4
          STRIP     DBDBPC
          PACK      KEY40,DBDBNA1,SP1,DBDBNA2
          PACK      KEY80,DBDBAD1,SP1,DBDBAD2,SP1,DBDBAD3,SP1,DBDBAD4,SP1,DBDBPC
          PRINT     DBDBDEB,SP1,KEY40,KEY80
          ADD       ONE,CLNO
          RETURN
.
PRTLIN00  COMPARE   "55",CLNO
          CALL      PRTHED00 IF NOT LESS
          PACK      KEY8,DBBIITM,SP70
          CALL      RDDBIT1
          IF        OVRCD=1
            MOVE      "ERROR",DBITDES
          ENDIF
          MOVE      "999,999.99",FORQTY
          FEDIT     DBBIQTY,FORQTY
          MOVE      "9,999,999.9999",FORPRI
          FEDIT     DBBIPRI,FORPRI
          MOVE      "999,999,999.99",FOREXT
          FEDIT     DBBITOT,FOREXT
          MOVE      "999,999,999.99",FORTAX
          FEDIT     DBBITAX,FORTAX
          MOVE      "999,999,999.99",FORTOT
          ASSIGN    DBBITOT+DBBITAX,F12P2
          FEDIT     F12P2,FORTOT
          UNPACK    DBBISDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *8,CPCDATE,SP1,DBBIITM,SP1,DBITIDE,SP1,DBBIGST:
                    *66,FORQTY,FORPRI,FOREXT,FORTAX,FORTOT
          ADD       ONE,CLNO
          ADD       DBBITOT,DEBEXT    * Debtors Total
          ADD       DBBITAX,DEBTAX
          ADD       DBBITOT,TOTEXT    * Report Total
          ADD       DBBITAX,TOTTAX
          MATCH     SP70,DBBIDREF
          IF        !@EQUAL
            PRINT      *20,DBBIDREF
            ADD       ONE,CLNO
          ENDIF
          RETURN
.
PRTTOT00  CALL      UND132
          MOVE      "999,999,999.99",FOREXT
          FEDIT     DEBEXT,FOREXT
          MOVE      "999,999,999.99",FORTAX
          FEDIT     DEBTAX,FORTAX
          MOVE      "999,999,999.99",FORTOT
          ASSIGN    DEBEXT+DEBTAX,F12P2
          FEDIT     F12P2,FORTOT
          PRINT     *74,"Invoice Total : ",FOREXT,FORTAX,FORTOT
          ADD       ONE,CLNO
          CALL      UND132
          RETURN
.
REPTOT00  MOVE      "999,999,999.99",FOREXT
          FEDIT     TOTEXT,FOREXT
          MOVE      "999,999,999.99",FORTAX
          FEDIT     TOTTAX,FORTAX
          MOVE      "999,999,999.99",FORTOT
          ASSIGN    TOTEXT+TOTTAX,F12P2
          FEDIT     F12P2,FORTOT
          PRINT     *74,"Report Total  : ",FOREXT,FORTAX,FORTOT
          ADD       ONE,CLNO
          CALL      UND132
          PRINT     *40,"****** End of Report ******"
          RETURN
.
PRTHED00  CALL      HEAD132
          DISPLAY   *P1:24,*EL,"Printing Page : ",CPAGENO
          CALL      UND132
          PRINT     "Debtor   Date     Sales Item                           ":
                    "   GST      Quantity         Price     ":
                    "   Charge      Plus GST         Total"
          CALL      UND132
          ADD       ONE,CLNO
          RETURN
.-------------------------------------------------------------
. Delete Proposed Invoices
.-------------------------------------------------------------
DALL0000  READ      CONTROLF,EIGHTY1;*20,CFDBIFL
          IF        CFDBIFL=0
            MOVE      "ERROR : Invoice Generation NOT in Progress. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      DALL9100
          ENDIF
.
          MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DALL1000,DALL9000,DALL9100
.
DALL1000  PACK      KEY14,SP70
          CALL      RSDBBI1
DALL1100  CALL      RKDBBI1
          BRANCH    OVRCD,DALL1900
          MATCH     "2",DBBISTA
          GOTO      DALL1100 IF NOT EQUAL
          MOVE      "1",DBBISTA
          CALL      UPDBBI1
          GOTO      DALL1100
.
DALL1900  MOVE      ZERO,CFDBIFL
          WRITAB    CONTROLF,EIGHTY1;*20,CFDBIFL
          MOVE     "Deletion Complete - ",DISPMSG
          BEEP
          CALL     MESSAGE1
          MOVE     TWO,EXIT            * Restart Screen
          GOTO     DALL9999
.
DALL9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DALL9999
DALL9100  MOVE     TWO,EXIT            * Restart Screen on "Cancel"
          GOTO     DALL9999
DALL9999  RETURN
.---------------------
. Read Item
.---------------------
REDITM00  MOVE     DBBIITM,KEY8
          CALL     RDDBIT1
          IF       OVRCD=1
            MOVE     "***** ITEM RECORD MISSING *****",DBITDES
          ENDIF
          ASSIGN   DBBITOT+DBBITAX,TOTALCHG
.
REDITM99  RETURN
.-------------------------------------------------------------
. Locking Standard Routine to Enter Key Field
.-------------------------------------------------------------
EKEYF000  MOVE      ZERO,CKEYTYP
          CALL      KDBDBA00                * Call Standard Keyin Routine wDBh ?
          BRANCH    EXIT,EKEYF999,EKEYF999  * EXIT 1 Null Entry 2 EXITchar
.
           MOVE     SP70,DBLNNA1
           MATCH    SP70,DBDBLIN
           IF       !@EQUAL
             PACK     KEY8,DBDBLIN,SP70
             CALL     RDDBDB1
           ENDIF
.
EKEYF100  PACK      KEY8,DBDBDEB,SP70       * Setup Key to File
          CALL      RLDBDB1                 * Read and Lock Record
          BRANCH    OVRCD,EKEYF999,EKEYF200 * OVRCD=1 Not on File 2 Locked
          CALL      GETCDS00                * Get User Def Code Descriptions
          MOVE      ZERO,EXIT               * Setup EXIT Field
          MOVE      ZERO,OVRCD              * Setup Ovrcd Field
          GOTO      EKEYF999
.
EKEYF200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EKEYF100 IF EQUAL       * Return to locking
          MATCH     ANSE,ANS                * EXIT
          GOTO      EKEYF000 IF EQUAL   * Must be a valid response
          MATCH     ANSE,ANS                * EXIT
          GOTO      EKEYF200 IF NOT EQUAL   * Must be a valid response
          GOTO      EKEYF000                * Return to Keyin
.
EKEYF999  RETURN                            * End of Routine
.---------------------------------------------------
. Get User Def Code Descriptions
.---------------------------------------------------
GETCDS00   CALL     FORAD000
.
           MOVE     SP70,DBDBUC1D
           MOVE     SP70,DBDBUC2D
           MOVE     SP70,DBDBUC3D
           MOVE     SP70,DBDBUC4D
           MOVE     SP70,DBDBWRND
.
           MATCH    SP70,DBDBWRN
           IF       !@EQUAL
             MOVE     "DBWR",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBWRN
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBWRND
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC1
           IF       !@EQUAL
             MOVE     "DB01",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC1
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC1D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC2
           IF       !@EQUAL
             MOVE     "DB02",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC2
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC2D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC3
           IF       !@EQUAL
             MOVE     "DB03",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC3
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC3D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC4
           IF       !@EQUAL
             MOVE     "DB04",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC4
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC4D
             ENDIF
           ENDIF
.
           MOVE     SP70,DBTEDES
           PACK     KEY3,DBDBTER,SP70
           CALL     RDDBTE1
.
           RETURN
.
.-------------------------------------------------------------
. Item Selected
.-------------------------------------------------------------
SELT0000  CALL     RDDBBI2
          IF       OVRCD=1
            BEEP
            MOVE     "Can't Read Billing Details - ",DISPMSG
            CALL     MESSAGE1
            GOTO     SELT9999
          ENDIF
.
          MOVE      DBBIITM,KEY8
          CALL      RDDBIT1
          BRANCH    OVRCD,SELT9100
.
          MOVE      DBITPTY,KEY8
          CALL      RDDBPT1
          BRANCH    OVRCD,SELT9200
.
          PACK      KEY12,PASSCODE,DBPTDEP
          CALL      RDDBSE1
          BRANCH    OVRCD,SELT9300
.
          UNPACK    SP70,IBGSDESC
          PACK      KEY6,DBBIGST,SP70
          CALL      RDIBGS1
          IF        OVRCD=0 & IBGSACTV=1
            MOVE      "GST Code is Inactive          ",IBGSDESC
          ENDIF
.
          ASSIGN   DBBITOT+DBBITAX,TOTALCHG
          ASSIGN   DBBITOT+DBBITAX,TOTALAMT
          CALL     GETDES00
.
          CALL     SC02L000
          GOTO     SELT9999
.
SELT9100  BEEP
          MOVE     "Invalid Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9200  BEEP
          MOVE     "Invalid Product Type on Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9300  BEEP
          MOVE     "Inadequate Security for Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9999  RETURN
.---------------------------------------------------
. Get User Def Code Descriptions
.---------------------------------------------------
GETDES00   MOVE     SP70,DBBIUC1D
           MOVE     SP70,DBBIUC2D
           MOVE     SP70,DBBIUC3D
           MOVE     SP70,DBBIUC4D
           MATCH    SP70,DBBIUC1
           IF       !@EQUAL
             MOVE     "FD01",DBCDCAT
             PACK     KEY7,DBCDCAT,DBBIUC1
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBBIUC1D
             ENDIF
           ENDIF
           MATCH    SP70,DBBIUC2
           IF       !@EQUAL
             MOVE     "FD02",DBCDCAT
             PACK     KEY7,DBCDCAT,DBBIUC2
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBBIUC2D
             ENDIF
           ENDIF
           MATCH    SP70,DBBIUC3
           IF       !@EQUAL
             MOVE     "FD03",DBCDCAT
             PACK     KEY7,DBCDCAT,DBBIUC3
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBBIUC3D
             ENDIF
           ENDIF
           MATCH    SP70,DBBIUC4
           IF       !@EQUAL
             MOVE     "FD04",DBCDCAT
             PACK     KEY7,DBCDCAT,DBBIUC4
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBBIUC4D
             ENDIF
           ENDIF
.
GETDES99   RETURN
.
DATECURR  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          REP       " 0",CYEAR
          REP       " 0",CMON
          REP       " 0",CDAY
          RETURN
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Post Changes.
.-------------------------------------------------------------
POST0000  PACK     KEY14,DBBIDEB,DBBIUNI,SP70  * Setup Key
          CALL     RADBBI1            * Check for record on file
          IF       OVRCD=0
            CALL     UPDBBI1          * Update Changes
            CALL     UUDBBI1          * Unloc
          ELSE
            CALL     WRDBBI1          * Write New Record
          ENDIF
.
          CALL      PNOTE000          * Save Notes
          COMPARE   ZERO,DBDBCLM       * Check Credit Limit if Not Zero
          CALL      CRDCHK00 IF NOT EQUAL
.
          RETURN                      * Return to program.
.---------------------------
. Save Notes
.---------------------------
PNOTE000  PACK      KEY17,DBBIDEB,DBBIUNI,SP70
          CALL      RSDBBC1
PNOTE200  CALL      RKDBBC1
          BRANCH    OVRCD,PNOTE250
          MATCH     DBBIDEB,DBBCDEB
          GOTO      PNOTE250 IF NOT EQUAL
          MATCH     DBBIUNI,DBBCUNI
          GOTO      PNOTE250 IF NOT EQUAL
          PACK      KEY17,DBBCDEB,DBBCUNI,DBBCLIN
          CALL      DEDBBC1
          GOTO      PNOTE200
.
PNOTE250  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBBC1
          TRAPCLR   IO
          BRANCH    OVRCD,PNOTE999
          MOVE      ZERO,F3
PNOTE260  READ      TEMPWORD,SEQ;DBBCCOM
          GOTO      PNOTE999 IF OVER
          MOVE      F3,DBBCLIN
          PACK      KEY17,DBBIDEB,DBBIUNI,DBBCLIN
          UNPACK    KEY17,DBBCDEB,DBBCUNI,DBBCLIN
          CALL      WRDBBC1
          ADD       ONE,F3
          GOTO      PNOTE260
.
PNOTE999  RETURN
.
.------------------------------
. Credit Limit Check
.------------------------------
CRDCHK00  CALL      DEBOUT00      * Calculate Total Outstanding
          PACK      KEY14,DBDBDEB,SP70
          CALL      RSDBBI1
CRDCHK10  CALL      RKDBBI1
          BRANCH    OVRCD,CRDCHK20
          MATCH     DBBIDEB,DBDBDEB
          GOTO      CRDCHK20 IF NOT EQUAL
          ASSIGN    TOTALOUT+DBBITOT+DBBITAX,TOTALOUT
          GOTO      CRDCHK10
.
CRDCHK20  IF        TOTALOUT>DBDBCLM
            BEEP
            MOVE      "WARNING : Credit Limit Exceeded - ",DISPMSG
            CALL      MESSAGE1
            CLEAR     DISPMSG
            APPEND    "Limit -",DISPMSG
            MOVE      "9,999,999.99",KEY12
            FEDIT     DBDBCLM,KEY12
            APPEND    KEY12,DISPMSG
            APPEND    "  Total Charges -",DISPMSG
            MOVE      "9,999,999.99",KEY12
            FEDIT     TOTALOUT,KEY12
            APPEND    KEY12,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
          ENDIF
          RETURN
.
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Cancel Changes.
.-------------------------------------------------------------
CANC0000
          RETURN
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Delete Record.
.-------------------------------------------------------------
DELT0000  MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DELT1000,DELT9000,DELT9100
.
DELT1000  PACK     KEY14,DBBIDEB,DBBIUNI,SP70   * Setup Key to File
          CALL     RADBBI1             * Read Record
          IF       OVRCD=0
            CALL     DEDBBI1           * Delete Record
          ENDIF
.
. Delete Invoice Details
.-----------------------------------
          PACK     KEY17,DBBIDEB,DBBIUNI,SP70   * Setup Key to File
          CALL     RSDBBC1
DELT1100  CALL     RKDBBC1
          BRANCH   OVRCD,DELT1190
          MATCH    DBBIDEB,DBBCDEB
          GOTO     DELT1190 IF NOT EQUAL
          MATCH    DBBIUNI,DBBCUNI
          GOTO     DELT1190 IF NOT EQUAL
          PACK     KEY17,DBBCDEB,DBBCUNI,DBBCLIN,SP70   * Setup Key to File
          CALL     DEDBBC1
          GOTO     DELT1100
.
DELT1190  MOVE     ZERO,EXIT           * Exit Screen
          GOTO     DELT9999
.
DELT9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DELT9999
DELT9100  MOVE     ZERO,EXIT           * Exit Screen on "Cancel"
          GOTO     DELT9999
DELT9999  RETURN
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
ESALI000  MOVE      ZERO,CKEYTYP
          CALL      KDBITX00
          BRANCH    EXIT,ESALI800,ESALI999
          IF        DBITACT=0
            MOVE      "Sales Item Not Active. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ESALI000
          ENDIF
          MOVE      DBITITM,DBBIITM
.
          CALL      LODWP000
.
          COMPARE   ONE,ACCEPT
          GOTO      ESALI999 IF EQUAL
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FILDBBC1,WORDNAME
            CALL      DISPWORD
          ENDIF
          MOVE      DBITPRI,DBBIPRI
          ASSIGN    DBBIPRI*DBBIQTY,DBBITOT
          CALL      CALTAX00
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          GOTO      ESALI999
.
ESALI800  BEEP
          GOTO      ESALI000
.
ESALI999  RETURN
.
LODWP000  PREP     TEMPWORD,FILDBBC1
          PACK     KEY11,DBITITM,SP70
          CALL      RDDBIC1
          IF        OVRCD=0
            CALL      RPDBIC1
          ENDIF
LODWP100  CALL     RKDBIC1
          BRANCH   OVRCD,LODWP999
          MATCH    DBITITM,DBICITM
          GOTO     LODWP999 IF NOT EQUAL
          PACK     VAR,DBICCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBICCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     LODWP100
LODWP999  CLOSE    TEMPWORD
          RETURN
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
EQUTY000  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBBIQTY
          COMPARE   ONE,ACCEPT
          GOTO      EQUTY999 IF EQUAL
.
EQUTY100  ASSIGN    DBBIPRI*DBBIQTY,DBBITOT
          CALL      CALTAX00
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00
          MOVE      "   15",FLDID
          CALL      GETPOSIT
.
EQUTY999  RETURN
.
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
EPRIC000  MOVE      DBITPRI,DBBIPRI
          IF        DBITMOD=1
            IF        ACCEPT=0
              BEEP
              MOVE      "Price Fixed for this Sales Item. ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      EPRIC100
          ENDIF
          COMPARE   ZERO,DBBIPRI
          GOTO      EPRIC050 IF EQUAL
          COMPARE   ONE,ACCEPT
          GOTO      EPRIC100 IF EQUAL
.
EPRIC050  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBBIPRI
.
EPRIC100  ASSIGN    DBBIPRI*DBBIQTY,DBBITOT
          CALL      CALTAX00    * Calculate Tax Amount
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00    * Display Fields
          MOVE      "   16",FLDID
          CALL      GETPOSIT
.
EPRIC999  RETURN
.
CALTAX00  MOVE      ZERO,DBBITRT
          MOVE      ZERO,DBBITAX
.
          MATCH     SP6,DBBIGST
          GOTO      CALTAX99 IF EQUAL
.
          COMPARE   ONE,DBDBTEX
          GOTO      CALTAX99 IF EQUAL
.
          PACK      KEY14,DBBIGST,DBBISDAT,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX99
.
          MATCH     DBBIGST,IBGECODE
          GOTO      CALTAX99 IF NOT EQUAL
.
CALTAX10  IF        IBGEAMNT<>0
            ASSIGN    (DBBITOT*IBGEAMNT)/100.0,DBBITAX
          ENDIF
.
CALTAX99  RETURN
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
ETOTL000  IF        DBITMOD=1
            ASSIGN    DBBIQTY*DBBIPRI,DBBITOT
            IF        ACCEPT=0
              BEEP
              MOVE      "Price Fixed for this Sales Item. ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      ETOTL999
          ENDIF
.
          ASSIGN    DBBIQTY*DBBIPRI,DBBITOT
          COMPARE   ONE,ACCEPT
          GOTO      ETOTL500 IF EQUAL
.
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBBITOT
          IF        !(DBBITOT=(DBBIQTY*DBBIPRI))
            ASSIGN    DBBITOT/DBBIQTY,DBBIPRI
          ENDIF
.
ETOTL500  CALL      CALTAX00
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00         * Display Other
          MOVE      "   17",FLDID
          CALL      GETPOSIT
.
ETOTL999  RETURN
.
.
DISPIT00  MOVE      "   16",FLDID   * Price
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBIPRI,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   17",FLDID   * Extended Total
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBITOT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   18",FLDID   * Tax Rate
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBITRT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   19",FLDID   * Tax
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBBITAX,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   50",FLDID   * Total Charge
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          RETURN
.------------------------------------------------------------
. Enter Tax Amount
.------------------------------------------------------------
ETAXA000  COMPARE   ONE,DBDBTEX
          GOTO      ETAXA100 IF NOT EQUAL
          MOVE      ZERO,DBBITAX
          MOVE      ZERO,DBBITRT
          COMPARE   ONE,ACCEPT
          GOTO      ETAXA900 IF EQUAL
          MOVE      "WARNING : Debtor is Flagged as Tax Exempt - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      ETAXA200
.
ETAXA100  CALL      CALTAX00
          COMPARE   ONE,ACCEPT          * Default if in Insert Mode
          GOTO      ETAXA900 IF EQUAL
.
ETAXA200  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBBITAX
.
          ASSIGN    DBBITAX+DBBITOT,TOTALAMT
          MOVE      "   50",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
.
ETAXA900  MOVE      ZERO,EXIT
          MOVE      ZERO,OVRCD
.
ETAXA999  RETURN
.
.---------------------------------------------------------
. Enter User Defined Code 1
.---------------------------------------------------------
EUDCA000  MOVE       "FD01",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCA999,EUDCA999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCA000
          ENDIF
          MOVE       DBCDCOD,DBBIUC1
          MOVE       DBCDDES,DBBIUC1D
EUDCA999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 2
.---------------------------------------------------------
EUDCB000  MOVE       "FD02",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCB999,EUDCB999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCB000
          ENDIF
          MOVE       DBCDCOD,DBBIUC2
          MOVE       DBCDDES,DBBIUC2D
.
EUDCB999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 3
.---------------------------------------------------------
EUDCC000  MOVE       "FD03",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCC999,EUDCC999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCC000
          ENDIF
          MOVE       DBCDCOD,DBBIUC3
          MOVE       DBCDDES,DBBIUC3D
.
EUDCC999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 4
.---------------------------------------------------------
EUDCD000  MOVE       "FD04",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          BRANCH     EXIT,EUDCD999,EUDCD999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCD000
          ENDIF
          MOVE       DBCDCOD,DBBIUC4
          MOVE       DBCDDES,DBBIUC4D
.
EUDCD999  RETURN
.-------------------------------------------------------------
. Enter GST Code
.------------------------------------------------------------
EGST0000  BRANCH    IBCNUGST,EGST0100,EGST0100
          GOTO      EGST9999
.
EGST0100  UNPACK    SP70,IBGSCODE,IBGSDESC
          MOVE      DBITGST,IBGSCODE
          CALL      KIBGSA00
          BRANCH    EXIT,EGST1000,EGST9999
.
          MOVE      IBGSCODE,DBBIGST
          GOTO      EGST1500
.
EGST1000  MOVE      SP70,DBBIGST
          MOVE      SP70,IBGSDESC
.
EGST1500  CALL      CALTAX00
          ASSIGN    DBBITOT+DBBITAX,TOTALAMT
          CALL      DISPIT00         * Display Other
.
          MOVE      "   52",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,IBGSDESC,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
.
          GOTO      EGST9999
.
EGST9999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       DEBBICIO/INC
          INC       DEBBILIO/INC
          INC       DEBCODIO/INC
          INC       DEBCODKY    
          INC       DEBDBTIO/INC
          INC       DEBDBTKY    
          INC       DEBDCMIO/INC
          INC       DEBDKIIO/INC
          INC       DEBDKIKY    
          INC       DEBDKIPR    
          INC       DEBFADCD    
          INC       DEBFDTIO/INC
          INC       DEBICMIO/INC
          INC       DEBITMCD    
          INC       DEBITMIO/INC
          INC       DEBITMKY    
          INC       DEBLINIO/INC
          INC       DEBOUTCD    
          INC       DEBPTYIO/INC
          INC       DEBSECIO/INC
          INC       DEBTERIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGKIKY    
          INC       IBAGSTIO/INC
          INC       IBAGSTKY    
.
          INC       STDGENCD
.
