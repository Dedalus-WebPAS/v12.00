. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS01                                             *
. * Desc      :   Ledger Maintenance                                   *
. **********************************************************************
. * Date      :   13.09.1990                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filename (FILENAM1).              *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.B01 10.11.2000 Sandra Barcham                                *
. *           Create BAS Code Transaction Table                        *
. **********************************************************************
. * VF.00.03  30.12.1999 Charles Handaya                               *
. *           Fixed write to Audit Files                               *
. * VF.00.02  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. * VF.00.01  09.11.1999 Charles Handaya                               *
. *           Fix Y2K of Audit Files Date (CCYYMMDD)                   *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS01
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values for screens A,C
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get used to select screen (A,C,D,E)
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record's screen A
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSAMAFD/INC       * account master file
          INC       FMSCCAFD/INC       * cost center code
          INC       FMSCONFD/INC       * controlf
          INC       FMSLMAFD/INC       * ledger
          INC       FMSLMCFD/INC       * ledger fin. cal. control file
          INC       FMSLMDFD/INC       * ledger wp. file
          INC       FMSSBAFD/INC       * subjective code
          INC       FMSCSAFD/INC
.
          INC       FMSBASFD/INC       * BAS Code Transactions
          INC       FMSCTRFD/INC       * Cash Transactions
          INC       FMSDSFFD/INC       * Dissection Summary 
          INC       FMSFPSFD/INC       * Period Summary
          INC       FMSSMAFD/INC       * Period Summary Statistics
          INC       FMSSTRFD/INC       * Statistical Transactions
          INC       FMSTRNFD/INC       * Accrual Transactions
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
FMSA      INIT      "fmsa"
FMSD      INIT      "fmsd"
FMSG      INIT      "fmsg"
FMSP      INIT      "fmsp"
FMSR      INIT      "fmsr"
FMSS      INIT      "fmss"
FMST      INIT      "fmst"
FMSZ      INIT      "fmsz"
MAKEFILE  DIM       80
MAKE      INIT      "isbuild "
FILENAME  DIM       8
KEYBAS    INIT      " 44 UC1-5,6-10 UC11-12,13-15,16-23,1-5,6-10"
KEYCTR    INIT      " 141 UC1-5,6-10 UC11-12,13-24,30-37,1-5,6-10"
KEYDSF    INIT      " 156 UC1-2,3-14,15-19,20-23 UC1-2,3-14,20-23,15-19"
KEYFPS    INIT      " 644 UC1-2,3-14"
KEYSMA    INIT      " 295 UC1-2,3-14"
KEYSTR    INIT      " 81 UC1-5,6-8 UC9-10,11-22,23-30,1-5,6-8"
KEYTRN    INIT      " 141 UC1-5,6-10 UC11-12,13-24,30-37,1-5,6-10"
.
FMSTMP01  FILE      ASCII,FIXED=70               * WP Holding File Def'n 1
FILENAM1  DIM       8
NAME1     INIT      "fmstm1"
.
WP        INIT      "wp "              * word processor variables
WPDAT     INIT      ".txt 999 7 -1 70 14"
TXT       INIT      ".txt"
.
DISPPERS  INIT      "  "               * display for no. of periods
PERS1     INIT      "12"
PERS2     INIT      "13"
.
MAXITEMS  FORM      "17"               * maximum no. of items on screen A + 1
.
OPT01     INIT      "Basic Details"
OPT02     INIT      "Calendar     "
OPT03     INIT      "Period Notes "
OPT04     INIT      "Copy Calendar"
.
ACCEPT    FORM      1                  * accept mode (1=on)
ACCEPT1   FORM      1                  * accept mode (1=on)
COPY      INIT      "Copy"
DIFFYEAR  FORM      4                  * difference b/n from & to years
XIM4      DIM       4                  * general dim 4
XIM8      DIM       8                  * general dim 8
XF4       FORM      4                  * general form 4
FROMYEAR  DIM       4                  * from year
KDESC     DIM       15                 * description
KFRDAT    DIM       8                  * from date
KLOCK     FORM      1                  * period lock (1=yes)
KPERIOD   DIM       2                  * period
KTODAT    DIM       8                  * to date
KYEAR     DIM       4                  * year
LASDAT    DIM       8                  * end date of last period
LEDGER    DIM       2 
LEDGDESC  DIM       35
FRLAYEAR  DIM       4
FRLAPERS  FORM      1
FROMFLAG  FORM      1
NEXDAT    DIM       8                  * from date of next period
OPTIONA   FORM      1                  * screen selection keyin var
OPTIONB   FORM      2                  * screen selection keyin var
PERIODNO  FORM      2                  * period number
SAVKEY19  DIM       19                 * key save for audits
SCRNO     FORM      1                  * screen number
TOYEAR    DIM       4                  * to year
WAUDTYPE  FORM      1                  * write audit parameter
WPSTAT    FORM      2
.
PRGID     INIT      "IBAFMS01"
PRGNAM    INIT      "Ledger Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      MENU0000           * insert/modify/delete/copy exit ?
          COMPARE   ZERO,COPTION
          GOTO      ML9999 IF EQUAL    * exit program
.
          COMPARE   FOUR,COPTION
          GOTO      ML4000 IF EQUAL
.
ML0200    CALL      PROC0000           * get entry
          BRANCH    EXIT,ML0100,ML0100 * exit option
.
          BRANCH    COPTION,ML1000,ML2000,ML3000
.
.---- add data ----
.
ML1000    CALL      DEFV0000           * set up default values
          MOVE      ONE,ACCEPT         * accept mode
          CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML0200        * don't save data
.
          CALL      POST0000           * post data
          CALL      SELC0000           * modify screen C
          CALL      SELD0000           * modify screen D
.
          GOTO      ML0200             * get next entry
.
.---- modify data ----
.
ML2000    MOVE      ZERO,ACCEPT        * modify mode
          CALL      OPTN0000           * get screen to modify
          BRANCH    OPTIONA,ML2100,ML2300,ML2400,ML2500
          GOTO      ML0200             * exit screen
.
ML2100    MOVE      "2",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML2190        * quit
.
          CALL      POST0000           * post data
          MOVE      "3",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          GOTO      ML2000
.
ML2190    CALL      DAUD0000           * delete before change audit record
          CALL      RDFMLA1            * reread old data
          GOTO      ML2000
.
ML2300    CALL      SELC0000           * modify screen C
          GOTO      ML2000
.
ML2400    CALL      SELD0000           * modify screen D
          GOTO      ML2000
.
ML2500    CALL      SELE0000           * modify screen E
          GOTO      ML2000
.
.---- delete data ----
.
ML3000    MOVE      ZERO,ACCEPT        * modify mode
          CALL      SCRA0000           * display basic details
          CALL      DELQST             * ok to delete (y/n/c) ?
          SUB       ONE,CEXIT
          BRANCH    CEXIT,ML0200,ML0100
.
          CALL      DELT0000           * delete data
          MOVE      "4",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          GOTO      ML0200             * get next entry
.
.----- copy a ledger -----
.
ML4000
          CALL      CSCR0000           * display the copy screen
          CALL      KFLA0000           * keyin from ledger
          BRANCH    EXIT,ML0100,ML0100
          CALL      KTLA0000           * keyin to ledger
          BRANCH    EXIT,ML4000,ML0100
.
          CALL      CONTQST
          BRANCH    CEXIT,ML4500,ML4000,ML0100
ML4500
          CALL      CPLA0000          * copy the ledger
          GOTO      ML0100
.
ML9999    PREP      FMSTMP01,FILENAM1
          CLOSE     FMSTMP01,DELETE
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening controlf";  * control file
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO51
          CALL      RDFMCO52
.
          DISPLAY   *P64:24,"fmslmaaf";  * ledger file
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmsaudla";  * ledger audit file
          OPEN      FMSAUDLA,"fmsaudla"
.
          DISPLAY   *P64:24,"fmslmcaf";  * ledger per. cal. control file
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmslmdaf";  * ledger wp file
          OPEN      FMSLMDA1,"fmslmdaf"
.
          DISPLAY   *P64:24,"fmsamaaf";  * account master file
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsccaaf";  * cost center code
          OPEN      FMSCCAA1,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * subjective code
          OPEN      FMSSBAA1,"fmssbaaf"
.
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.         MOVE      ZERO,FMLCYLC
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.***********************************************************************
.*                          MENU0000                                   *
.*                   handle the main menu                              *
.***********************************************************************
. 
MENU0000  DISPLAY   *P60:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Insert":
                    *P1:6,*V2LON,TWO,*HOFF," = Change":
                    *P1:7,*V2LON,THREE,*HOFF," = Delete":
                    *P1:8,*V2LON,FOUR,*HOFF," = Copy"
.
          KEYIN     *P1:10,*EL,"Select Option : _",*P17:10,*V2LON,COPTION
          COMPARE   ZERO TO COPTION
          GOTO      MENU9999 IF EQUAL
.
          BRANCH    COPTION OF MENU5000,MENU5000,MENU5000,MENU5000
          BEEP
          GOTO      MENU0000
.
MENU5000  LOAD      DISPOPT WITH COPTION OF ADDOPT,CHGOPT,DELOPT,COPY
          DISPLAY   *P60:3,*V2LON,DISPOPT;
.
MENU9999
          MOVE      COPTION,OPTION
          RETURN
.
.**********************************************************************
.*                         CSCR0000                                   *
.*                    Display the copy screen                         *
.**********************************************************************
.
CSCR0000
          DISPLAY   *P1:4,*EF:
                    *P1:4,"Copy From Ledger      :":
                    *P1:6,"     To   Ledger      :":
                    *P1:7,"     Description      :"
CSCR9999  RETURN
.
.***********************************************************************
.*                         KFLA0000                                    *
.*                    keyin the from ledger                            *
.***********************************************************************
.
KFLA0000
          MOVE      FOUR,CVERT
          MOVE      TWENTY5,CCOL 
          MOVE      ZERO,EXIT
          MOVE      ONE,FROMFLAG
.
          CALL      KLMAFM00 
          BRANCH    EXIT,KFLA9999,KFLA9999
.
          DISPLAY   *P25:4,*V2LON,FMLALEDG,*HOFF,*P30:4,FMLADESC
          MOVE      FMLALEDG,LEDGER
          MOVE      FMLADESC,LEDGDESC
          MOVE      FMLACYRR,FRLAYEAR
          MOVE      FMLAPERS,FRLAPERS
          GOTO      KFLA9999
KFLA9000
          BEEP
          GOTO      KFLA0000
.
KFLA9999  MOVE      ZERO,FROMFLAG
          RETURN
.
.***********************************************************************
.*                         KFLA0000                                    *
.*                    keyin the to ledger & description                *
.***********************************************************************
.
KTLA0000
          PACK      SP35,SP70
          MOVE      SIX,CVERT
          MOVE      TWENTY5,CCOL 
          MOVE      ZERO,EXIT
.
          CALL      ALMAFM00 
          BRANCH    EXIT,KTLA9999,KTLA9999
.
          DISPLAY   *P25:6,*V2LON,FMLALEDG
KTLA1000
          KEYIN     *P25:7,*DV,UNDLN:
                    *P25:7,*V2LON,FMLADESC,*EL:
                    *P25:7,*DV,FMLADESC
          PACK      FMLADESC,FMLADESC,SP70
          MATCH     FMLADESC,SP35
          GOTO      KTLA0000 IF EQUAL
          MATCH     FMLADESC,EXITCHAR
          GOTO      KTLA9500 IF EQUAL
          GOTO      KTLA9999
KTLA9000
          BEEP
          GOTO      KTLA0000
.
KTLA9500  MOVE      TWO,EXIT
.
KTLA9999 
          RETURN
.
.**********************************************************************
.*                        CPLA0000                                    *
.*                  Copy ledger details to new ledger                 *
.**********************************************************************
.
CPLA0000
          MOVE      FRLAPERS,FMLAPERS
          MOVE      FRLAYEAR,FMLACYRR
          PACK      KEY2,FMLALEDG
          CALL      WRFMLA1
.
          PACK      KEY6,LEDGER,SP70
.
CPLA1000  CALL      RSFMLC1
          CALL      RKFMLC1
          BRANCH    OVRCD,CPLA1900
.
          MATCH     FMLCLEDG,LEDGER
          GOTO      CPLA1900 IF NOT EQUAL
.
          DISPLAY   *P1:24,"Copying Year         : ",*V2LON,FMLCYEAR,*EF;
          MOVE      FMLALEDG,FMLCLEDG
          CALL      WRFMLC1
          PACK      KEY6,LEDGER,FMLCYEAR,SP70
          GOTO      CPLA1000
.
CPLA1900  PACK      KEY11,LEDGER,SP70
.
CPLA2000  CALL      RSFMLD1
          CALL      RKFMLD1
          BRANCH    OVRCD,CPLA9999
.
          MATCH     FMLDLEDG,LEDGER
          GOTO      CPLA9999 IF NOT EQUAL
.
          DISPLAY   *P1:24,"Copying Period Notes : ":
                    *V2LON,FMLDYEAR,FMLDPERD,FMLDLNO,*EF;
          MOVE      FMLALEDG,FMLDLEDG
          CALL      WRFMLD1
          PACK      KEY11,LEDGER,FMLDYEAR,FMLDPERD,FMLDLNO,SP70
          GOTO      CPLA2000
.
CPLA9999
          RETURN
.
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRA0000  MOVE      "1",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*EF:
                    *P1:6,*V2LON," 1",*HOFF,". Description          : ":
                    *P1:7,*V2LON," 2",*HOFF,". Current Year         : ":
                    *P1:8,*V2LON," 3",*HOFF,". Accounting Periods   : ":
                    *P28:6,*V2LON,FMLADESC;
          BRANCH    ACCEPT,SCRA9999    * accept mode
.
          MOVE      PERS1,DISPPERS
          LOAD      DISPPERS,FMLAPERS,PERS2      * get description
.
          DISPLAY   *P28:7,*V2LON,FMLACYRR:
                    *P28:8,DISPPERS
.
SCRA9999  RETURN
.******************************************************************************
.* SCRC - Display Screen C                       Called by SELC0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRC0000  MOVE      "3",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,SP2,FMLADESC,*EF:
                    *P1:5,"    Financial Year       : ",*V2LON,KYEAR,*HOFF:
                    *P1:6,*V2LON,*ULON,"Period",*P8:6,"Description":
                    *P25:6,"From Date",*P40:6,"To Date":
                    *P55:6,"Period Locked",*HOFF,*V2LON:
                    *P1:7," 01.":
                    *P1:8," 02.":
                    *P1:9," 03.":
                   *P1:10," 04.":
                   *P1:11," 05.":
                   *P1:12," 06.":
                   *P1:13," 07.":
                   *P1:14," 08.":
                   *P1:15," 09.":
                   *P1:16," 10.":
                   *P1:17," 11.":
                   *P1:18," 12."
          COMPARE   ONE,FMLAPERS
          GOTO      SCRC1000 IF NOT EQUAL
          DISPLAY  *P1:19,*V2LON," 13."
.
SCRC1000  UNPACK    FMLC01FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1010 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:7,FMLC01DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC01IN,YES
          UNPACK    FMLC01TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:7,CPCDATE,SP5,YESNO
.
SCRC1010  UNPACK    FMLC02FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1020 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:8,FMLC02DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC02IN,YES
          UNPACK    FMLC02TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:8,CPCDATE,SP5,YESNO
.
SCRC1020  UNPACK    FMLC03FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1030 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:9,FMLC03DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC03IN,YES
          UNPACK    FMLC03TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:9,CPCDATE,SP5,YESNO
.
SCRC1030  UNPACK    FMLC04FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1040 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:10,FMLC04DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC04IN,YES
          UNPACK    FMLC04TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:10,CPCDATE,SP5,YESNO
.
SCRC1040  UNPACK    FMLC05FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1050 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:11,FMLC05DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC05IN,YES
          UNPACK    FMLC05TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:11,CPCDATE,SP5,YESNO
.
SCRC1050  UNPACK    FMLC06FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1060 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:12,FMLC06DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC06IN,YES
          UNPACK    FMLC06TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:12,CPCDATE,SP5,YESNO
.
SCRC1060  UNPACK    FMLC07FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1070 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:13,FMLC07DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC07IN,YES
          UNPACK    FMLC07TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:13,CPCDATE,SP5,YESNO
.
SCRC1070  UNPACK    FMLC08FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1080 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:14,FMLC08DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC08IN,YES
          UNPACK    FMLC08TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:14,CPCDATE,SP5,YESNO
.
SCRC1080  UNPACK    FMLC09FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1090 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:15,FMLC09DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC09IN,YES
          UNPACK    FMLC09TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:15,CPCDATE,SP5,YESNO
.
SCRC1090  UNPACK    FMLC10FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1100 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:16,FMLC10DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC10IN,YES
          UNPACK    FMLC10TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:16,CPCDATE,SP5,YESNO
.
SCRC1100  UNPACK    FMLC11FR,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRC1110 IF EQUAL            * no data ?
          CALL      PACDATE
          DISPLAY   *P8:17,FMLC11DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC11IN,YES
          UNPACK    FMLC11TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:17,CPCDATE,SP5,YESNO
.
SCRC1110  UNPACK    FMLC12FR,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P8:18,FMLC12DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC12IN,YES
          UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:18,CPCDATE,SP5,YESNO
.
SCRC1120  COMPARE   ONE,FMLAPERS
          GOTO      SCRC9999 IF NOT EQUAL
.
          UNPACK    FMLC13FR,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P8:19,FMLC13DE,SP2,CPCDATE;
          MOVE      NO,YESNO
          LOAD      YESNO,FMLC13IN,YES
          UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P40:19,CPCDATE,SP5,YESNO
.
SCRC9999  RETURN
.******************************************************************************
.* SCRE - Display Screen E                       Called by SELE0000, redisps  *
.******************************************************************************
SCRE0000  MOVE      "4",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,SP2,FMLADESC,*EF:
                    *P1:6,*V2LON," 1",*HOFF,". From Financial Year  : ":
                    *P1:7,*V2LON," 2",*HOFF,". To   Financial Year  : ";
.
          DISPLAY   *P28:6,*V2LON,FROMYEAR
          BRANCH    ACCEPT,SCRE9999
          DISPLAY   *P28:7,*V2LON,TOYEAR
.
SCRE9999  RETURN
.******************************************************************************
.* SCRX - Display Sub-screen X                   Called by SELC0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRX0000  MOVE      "5",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,SP2,FMLADESC,*EF:
                    *P1:5,"    Financial Year       : ",*V2LON,KYEAR,*HOFF:
                    *P1:6,"    Period               : ",*V2LON,KPERIOD:
                    *P1:8,*V2LON," 1",*HOFF,". Description          : ":
                    *P1:9,*V2LON," 2",*HOFF,". From Date            : ":
                   *P1:10,*V2LON," 3",*HOFF,". To Date              : ":
                   *P1:11,*V2LON," 4",*HOFF,". Period Locked (Y/N)  : ";
          MATCH     SP70,KDESC
          GOTO      SCRX9999 IF EQUAL
.
          UNPACK    KFRDAT,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRX9999 IF EQUAL
.
          CALL      PACDATE
          DISPLAY   *P28:8,*V2LON,KDESC:
                    *P28:9,CPCDATE
          UNPACK    KTODAT,CCENT,CYEAR,CMON,CDAY
          MATCH     SP70,CDAY
          GOTO      SCRX9999 IF EQUAL
.
          CALL      PACDATE
          MOVE      NO,YESNO
          LOAD      YESNO,KLOCK,YES
          DISPLAY   *P28:10,*V2LON,CPCDATE:
                    *P28:11,YESNO
.
SCRX9999  RETURN
.******************************************************************************
.* SCRY - Display Sub-screen Y                   Called by lots               *
.******************************************************************************
SCRY0000  MOVE      "6",SCRNO          * set screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,SP2,FMLADESC,*EF:
                    *P1:5,"    Financial Year       : ";
.
SCRY9999  RETURN
.******************************************************************************
.* SELX - Sub-screen X                           Called by SELC0000           *
.******************************************************************************
SELX0000  MOVE      ONE,ACCEPT1
          MATCH     SP70,KDESC
          GOTO      SELX1100 IF EQUAL  * accept mode ?
          MOVE      ZERO,ACCEPT1
.
SELX0100  CALL      MAINQST            * select, post or cancel
          COMPARE   SEQ,CCITEM 
          GOTO      SELX9500 IF EQUAL  * cancel ?
.
          COMPARE   ZERO,CCITEM 
          GOTO      SELX9000 IF EQUAL  * post ?
.
          BRANCH    CCITEM,SELX1100,SELX1200,SELX1300,SELX1400
          BEEP                         * illegal option
          GOTO      SELX0100
.
.---- option 1 ----
.
SELX1100  KEYIN     *P28:8,"_______________",*P28:8,*V2LON,KDESC,*EL * get desc
          PACK      KDESC,KDESC,SP70
          MATCH     SP70,KDESC
          GOTO      SELX1100 IF EQUAL
          MATCH     EXITCHAR,KDESC
          GOTO      SELX9500 IF EQUAL
.
          BRANCH    ACCEPT1,SELX1200
          GOTO      SELX0100
.
.---- option 2 ----
.
SELX1200  MOVE      "28",CCOL
          MOVE      "9",CVERT
          UNPACK    KFRDAT,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * get from date
          BRANCH    OVRCD,SELX1200
.
          PACK      KFRDAT,CCENT,CYEAR,CMON,CDAY
          MATCH     KFRDAT,LASDAT
          GOTO      SELX1250 IF LESS        * date in last period ?
.
          DISPLAY   *P1:24,*B,*EL,"From Date Before End Of Previous Period - ";
          CALL      HITENTER
          GOTO      SELX1200
.
SELX1250  MATCH     SP70,KTODAT
          GOTO      SELX1290 IF EQUAL       * to date entered ?
          MATCH     KFRDAT,KTODAT
          GOTO      SELX1290 IF NOT LESS    * from date greater than to date ?
.
          DISPLAY   *P1:24,*B,*EL,"From Date Greater Than To Date - ";
          CALL      HITENTER
          GOTO      SELX1200
.
SELX1290  BRANCH    ACCEPT1,SELX1300
          GOTO      SELX0100
.
.---- option 3 ----
.
SELX1300  MOVE      "28",CCOL
          MOVE      "10",CVERT
          MATCH     SP70,KTODAT
          GOTO      SELX1320 IF NOT EQUAL        * to date not set yet ?
.
          MOVE      KFRDAT,KTODAT                * default to from date
.
SELX1320  UNPACK    KTODAT,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE                      * get to date
          BRANCH    OVRCD,SELX1300
.
          CALL      PACDATE
          DISPLAY   *PCCOL:CVERT,*V2LON,CPCDATE;
.
          PACK      KTODAT,CCENT,CYEAR,CMON,CDAY
          UNPACK    NEXDAT,KEY4,KEY4
          MATCH     SP70,KEY4
          GOTO      SELX1350 IF EQUAL       * next period exists ?
          MATCH     NEXDAT,KTODAT
          GOTO      SELX1350 IF LESS        * date in last period ?
.
          DISPLAY   *P1:24,*B,*EL,"To Date After Start Of Next Period - ";
          CALL      HITENTER
          GOTO      SELX1300
.
SELX1350  MATCH     KFRDAT,KTODAT
          GOTO      SELX1390 IF NOT LESS    * from date greater than to date ?
.
          DISPLAY   *P1:24,*B,*EL,"From Date Greater Than To Date - ";
          CALL      HITENTER
          GOTO      SELX1300
.
SELX1390  BRANCH    ACCEPT1,SELX1400
          GOTO      SELX0100
.
.---- option 4 ----
.
SELX1400  MOVE      "28",CCOL
          MOVE      "11",CVERT
          MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,KLOCK
          MOVE      ZERO,ACCEPT1       * clear accept mode
          GOTO      SELX0100
.
SELX9000  MOVE      ZERO,EXIT          * post
          GOTO      SELX9999
.
SELX9500  MOVE      ONE,EXIT           * cancel
.
SELX9999  RETURN
.******************************************************************************
.* OPTN - Select option to display               Called by ML0000             *
.*        Returns : OPTIONA  (screen no. selected)                            *
.******************************************************************************
OPTN0000  DISPLAY   *P60:3,*V2LON,DISPOPT,*HOFF,*EL:
                    *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,SP2,FMLADESC,*EF:
                    *P1:6,*V2LON," 0",*HOFF,". Exit":
                    *P1:7,*V2LON," 1",*HOFF,". ",OPT01:
                    *P1:8,*V2LON," 2",*HOFF,". ",OPT02:
                    *P1:9,*V2LON," 3",*HOFF,". ",OPT03:
                   *P1:10,*V2LON," 4",*HOFF,". ",OPT04;
.
OPTN1000  KEYIN     *P5:12,"Select Option : _",*P21:12,*V2LON,OPTIONA
          COMPARE   ZERO,OPTIONA
          GOTO      OPTN9999 IF EQUAL            * exit
          BRANCH    OPTIONA,OPTN9000,OPTN9000,OPTN9000,OPTN9000
          BEEP                                   * illegal option
          GOTO      OPTN1000
.
OPTN9000  
.
OPTN9999  RETURN
.******************************************************************************
.* DEFV - set up default variables               Called by SELA0000           *
.******************************************************************************
DEFV0000  MOVE      SP70,FMLADESC                * set description
          PACK      FMLACYRR,CCC,CYY,SP70        * set fin. year
          MOVE      ZERO,FMLAPERS                * set no. of periods
          MOVE      "01",FMLAPER
          MOVE      "0",FMLAPTY
          MOVE      "1",FMLAABP
.
DEFV9999  RETURN
.******************************************************************************
.* CLRV - clear variables for screen C           Called by SELC0000           *
.******************************************************************************
CLRV0000  MOVE      SP70,FMLC01DE
          MOVE      ZERO,FMLC01IN
          PACK      FMLC01FR,KYEAR,SP70
          PACK      FMLC01TO,SP70
.
          MOVE      SP70,FMLC02DE
          MOVE      ZERO,FMLC02IN
          PACK      FMLC02FR,KYEAR,SP70
          PACK      FMLC02TO,SP70
.
          MOVE      SP70,FMLC03DE
          MOVE      ZERO,FMLC03IN
          PACK      FMLC03FR,KYEAR,SP70
          PACK      FMLC03TO,SP70
.
          MOVE      SP70,FMLC04DE
          MOVE      ZERO,FMLC04IN
          PACK      FMLC04FR,KYEAR,SP70
          PACK      FMLC04TO,SP70
.
          MOVE      SP70,FMLC05DE
          MOVE      ZERO,FMLC05IN
          PACK      FMLC05FR,KYEAR,SP70
          PACK      FMLC05TO,SP70
.
          MOVE      SP70,FMLC06DE
          MOVE      ZERO,FMLC06IN
          PACK      FMLC06FR,KYEAR,SP70
          PACK      FMLC06TO,SP70
.
          MOVE      SP70,FMLC07DE
          MOVE      ZERO,FMLC07IN
          PACK      FMLC07FR,KYEAR,SP70
          PACK      FMLC07TO,SP70
.
          MOVE      SP70,FMLC08DE
          MOVE      ZERO,FMLC08IN
          PACK      FMLC08FR,KYEAR,SP70
          PACK      FMLC08TO,SP70
.
          MOVE      SP70,FMLC09DE
          MOVE      ZERO,FMLC09IN
          PACK      FMLC09FR,KYEAR,SP70
          PACK      FMLC09TO,SP70
.
          MOVE      SP70,FMLC10DE
          MOVE      ZERO,FMLC10IN
          PACK      FMLC10FR,KYEAR,SP70
          PACK      FMLC10TO,SP70
.
          MOVE      SP70,FMLC11DE
          MOVE      ZERO,FMLC11IN
          PACK      FMLC11FR,KYEAR,SP70
          PACK      FMLC11TO,SP70
.
          MOVE      SP70,FMLC12DE
          MOVE      ZERO,FMLC12IN
          PACK      FMLC12FR,KYEAR,SP70
          PACK      FMLC12TO,SP70
.
          MOVE      SP70,FMLC13DE
          MOVE      ZERO,FMLC13IN
          PACK      FMLC13FR,KYEAR,SP70
          PACK      FMLC13TO,SP70
.
CLRV9999  RETURN
.******************************************************************************
.* PROC - Enter Ledger Number                    Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMLALEDG (variable entered)                               *
.******************************************************************************
PROC0000  DISPLAY   *P60:3,*V2LON,DISPOPT,*HOFF,*EL:
                    *P1:4,"    Ledger               : ",*EF;
.
          MOVE      "28",CCOL          * set up screen address
          MOVE      "4",CVERT
.
          COMPARE   ONE,COPTION        * insert mode ?
          CALL      ALMAFM00 IF EQUAL
.
          COMPARE   ONE,COPTION        * not insert mode ?
          CALL      KLMAFM00 IF NOT EQUAL
.
PROC9999  RETURN
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (1=quit, 0=post)                                 *
.******************************************************************************
SELA0000  MOVE      ZERO,OPTIONB
          DISPLAY   *P67:3,*V2LON,OPT01,*HOFF,*EL;
          CALL      SCRA0000                     * display screen A
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,OPTIONB                  * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      MAINQST                      * select/post/cancel ?
          MOVE      CCITEM,OPTIONB
.
          COMPARE   ZERO,OPTIONB
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,OPTIONB
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "5",CVERT
          ADD       OPTIONB,CVERT
          BRANCH    OPTIONB,SELA1100,SELA1200,SELA1300 * execute option
.
          BRANCH    ACCEPT,SELA0900              * finished accept mode ?
          BEEP                                   * illegal option
.
SELA0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELA0100                     * get next option
.
.---- option 1 ----
.
SELA1100  MATCH     FMLADESC,SP70
          GOTO      SELA1150 IF NOT EQUAL        * description spaces ?
.
          PACK      FMLADESC,UNDLN70
.
SELA1150  KEYIN     *PCCOL:CVERT,*DV,FMLADESC:   * read in description
                    *PCCOL:CVERT,*V2LON,*RV,FMLADESC;
          PACK      FMLADESC,FMLADESC,SP70
.
          MATCH     FMLADESC,SP70
          GOTO      SELA1100 IF EQUAL            * description spaces ?
          MATCH     FMLADESC,UNDLN70
          GOTO      SELA9500 IF EQUAL            * nothing entered ?
          MATCH     FMLADESC,EXITCHAR
          GOTO      SELA9500 IF EQUAL            * EXITCHAR entered ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLADESC;
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  CALL      ALMCFM00                     * get date
          BRANCH    EXIT,SELA1290,SELA9500       * nothing entered ?
          MOVE      FMLCYEAR,FMLACYRR
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLACYRR;
          GOTO      SELA0100
.
SELA1290  DISPLAY   *P1:24,*EL,*B:               * nothing entered
                    "A Year Must Be Entered - ";
          CALL      HITENTER
          GOTO      SELA1200
.
.---- option 3 ----
.
SELA1300  PACK      KEY6,FMLALEDG,SP70           * check if any cal years set up
          CALL      RSFMLC1
          CALL      RKFMLC1
          BRANCH    OVRCD,SELA1350
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      SELA1350 IF NOT EQUAL
          DISPLAY   *P1:24,*B,*EF:
                    "Calendar Years Are Set Up For This Ledger - ";
          CALL      HITENTER
          GOTO      SELA0100
.
SELA1350  ADD       ONE,FMLAPERS
          KEYIN     *P1:24,*V2LON,"1",*HOFF," = 12, ":
                           *V2LON,"2",*HOFF," = 13",*EL:
                    *PCCOL:CVERT,*DV,FMLAPERS,*EL:    * read in no of periods
                    *PCCOL:CVERT,*V2LON,*RV,FMLAPERS;
          MOVE      SP70,DISPPERS
          LOAD      DISPPERS,FMLAPERS,PERS1,PERS2     * get description
          MATCH     SP70,DISPPERS
          GOTO      SELA1390 IF NOT EQUAL             * legal option ?
.
          MOVE      ZERO,FMLAPERS                     * reset option
          BEEP
          GOTO      SELA1350
.
SELA1390  SUB       ONE,FMLAPERS
          DISPLAY   *PCCOL:CVERT,*V2LON,DISPPERS:
                    *P1:24,*EL;
          GOTO      SELA0100
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT                     * cancel
.
SELA9999  RETURN
.******************************************************************************
.* SELC - Modify screen C data                   Called by ML0000             *
.******************************************************************************
SELC0000  CALL      SCRY0000                     * display screen Y
          DISPLAY   *P67:3,*V2LON,OPT02,*HOFF,*EL;
.
          MOVE      "28",CCOL                    * get screen address
          MOVE      "5",CVERT
          CALL      ALMCFM00                     * get year
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          BRANCH    EXIT,SELC9999,SELC9999       * exit screen ?
.
          MOVE      FMLCYEAR,KYEAR
          CALL      CLRV0000                     * clear variables
          PACK      KEY6,FMLALEDG,KYEAR,SP70
          CALL      RDFMLC1                      * read in data (if possible)
          MOVE      OVRCD,ACCEPT                 * set accept mode
          COMPARE   "1",ACCEPT
          CALL      SCRC0000 IF NOT EQUAL   * display screen if in modify mode
          MOVE      ZERO,CCITEM
.
.---- determine option to execute ----
.
SELC0100  ADD       ONE,CCITEM
          BRANCH    ACCEPT,SELC0500              * in accept mode ?
          CALL      MAINQST                      * select/post/cancel ?
.
          COMPARE   ZERO,CCITEM
          GOTO      SELC9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,CCITEM
          GOTO      SELC0000 IF EQUAL            * cancel ?
.
SELC0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "7",CVERT
          ADD       CCITEM,CVERT
          MOVE      CCITEM,PERIODNO
          PACK      KPERIOD,PERIODNO,SP70
          REP       " 0",KPERIOD
.
          BRANCH    CCITEM,SELC1100,SELC1100,SELC1100,SELC1100,SELC1100:
                           SELC1100,SELC1100,SELC1100,SELC1100,SELC1100:
                           SELC1100,SELC1100
          COMPARE   ONE,FMLAPERS
          GOTO      SELC0700 IF NOT EQUAL        * 12 or 13 periods ?
.
          COMPARE   "13",CCITEM
          GOTO      SELC1100 IF EQUAL
.
SELC0700  BRANCH    ACCEPT,SELC0800              * in accept mode ?
          BEEP                                   * illegal option
          GOTO      SELC0100                     * get next option
.
SELC0800  MOVE      ZERO,ACCEPT                  * clear accept mode
          CALL      SCRC0000                     * display screen
          GOTO      SELC0100                     * get next option
.
.---- option 1..13 ----
.
SELC1100  LOAD      KDESC,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                             FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                             FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
          LOAD      KFRDAT,PERIODNO,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                             FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR:
                             FMLC09FR,FMLC10FR,FMLC11FR,FMLC12FR,FMLC13FR
          LOAD      KTODAT,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                             FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                             FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO,FMLC13TO
          LOAD      KLOCK,PERIODNO,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN:
                             FMLC05IN,FMLC06IN,FMLC07IN,FMLC08IN:
                             FMLC09IN,FMLC10IN,FMLC11IN,FMLC12IN,FMLC13IN
          LOAD      LASDAT,PERIODNO,SP70,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                             FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                             FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO
          LOAD      NEXDAT,PERIODNO,FMLC02FR,FMLC03FR,FMLC04FR:
                             FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR:
                             FMLC09FR,FMLC10FR,FMLC11FR,FMLC12FR,FMLC13FR,SP70
          CALL      SCRX0000           * display subscreen
          CALL      SELX0000           * activate subscreen
          BRANCH    EXIT,SELC1200      * data not posted
.
          STORE     KDESC,PERIODNO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                             FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                             FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE,FMLC13DE
          STORE     KFRDAT,PERIODNO,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR:
                             FMLC05FR,FMLC06FR,FMLC07FR,FMLC08FR:
                             FMLC09FR,FMLC10FR,FMLC11FR,FMLC12FR,FMLC13FR
          STORE     KTODAT,PERIODNO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                             FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                             FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO,FMLC13TO
          STORE     KLOCK,PERIODNO,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN:
                             FMLC05IN,FMLC06IN,FMLC07IN,FMLC08IN:
                             FMLC09IN,FMLC10IN,FMLC11IN,FMLC12IN,FMLC13IN
.
SELC1200  ADD       ACCEPT,EXIT
          MOVE      PERIODNO,CCITEM
          COMPARE   "2",EXIT
          GOTO      SELC0000 IF EQUAL       * quit entered in accept mode ?
.
          COMPARE   "1",ACCEPT
          CALL      SCRC0000 IF NOT EQUAL   * display screen if in modify mode
          GOTO      SELC0100
.
.---- post ----
.
SELC9000  PACK      KEY6,FMLALEDG,KYEAR,SP70
          UNPACK    KEY6,FMLCLEDG,FMLCYEAR
          CALL      DEFMLC1                      * delete old data (if possible)
          CALL      WRFMLC1                      * write data
          CALL      CFIL0000                     * Create Summary Files
.
          GOTO      SELC0000
.
SELC9999  RETURN
.******************************************************************************
.* SELD - Modify screen D data                   Called by ML0000             *
.******************************************************************************
SELD0000  CALL      SCRY0000                     * display screen Y
          DISPLAY   *P67:3,*V2LON,OPT03,*HOFF,*EL;
.
          MOVE      "28",CCOL                    * get screen address
          MOVE      "5",CVERT
          CALL      KLMCFM00                     * get year
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          BRANCH    EXIT,SELD9999,SELC9999       * exit screen ?
          MOVE      FMLCYEAR,KYEAR
.
SELD0100  DISPLAY   *P67:3,*V2LON,OPT03,*HOFF,*EL;
          CALL      PERD0000                     * get period
          BRANCH    EXIT,SELD0000                * exit screen ?
.
.         DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                   *BLINKON,*V2LON,"Please Wait",*EL;
.
          PREP      FMSTMP01,FILENAM1
.         WRITE     FMSTMP01,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.         WRITE     FMSTMP01,SEQ;VERSION,SP10,SP5,PRGNAM
.         WRITE     FMSTMP01,SEQ;SP1
.         WRITE     FMSTMP01,SEQ;"    Ledger               : ":
.                                FMLALEDG,SP2,FMLADESC 
.         WRITE     FMSTMP01,SEQ;"    Financial Year       : ",KYEAR
.         WRITE     FMSTMP01,SEQ;"    Period               : ",KPERIOD
.         WRITE     FMSTMP01,SEQ;SP1
.
          PACK      KEY11,FMLALEDG,KYEAR,KPERIOD,SP70
          CALL      RSFMLD1                      * go to start of records
.
SELD1000  CALL      RKFMLD1                      * get next record
          BRANCH    OVRCD,SELD2000               * no more records ?
          PACK      KEY8,FMLDLEDG,FMLDYEAR,FMLDPERD,SP70
          MATCH     KEY8,KEY11
          GOTO      SELD2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMLDLINE
          GOTO      SELD1000
.
SELD2000   CLOSE     FMSTMP01
           CLEAR     CMDLINE
           APPEND    FILENAM1,CMDLINE
           APPEND    TXT,CMDLINE
           RESET     CMDLINE
           MOVE      ONE,WPSTAT
           WORD      CMDLINE,999,5,8,76,22,WPSTAT
.          PACK      CMDLINE,WP,FILENAM1,WPDAT
.          EXECUTE   CMDLINE,TASKID               * initiate word processor
..
.          CALL      WEOF0000                     * make sure something in file
.         CLOSE     FMSTMP01
.
          OPEN      FMSTMP01,FILENAM1
          PACK      KEY11,FMLALEDG,KYEAR,KPERIOD,SP70
          PACK      KEY8,FMLALEDG,KYEAR,KPERIOD,SP70
          MOVE      ZERO,F3
.
SELD3000  READ      FMSTMP01,SEQ;FMLDLINE        * save wp data
          GOTO      SELD4000 IF OVER
.
          ADD       ONE,F3
          PACK      KEY11,FMLALEDG,KYEAR,KPERIOD,F3,SP70
          UNPACK    KEY11,FMLDLEDG,FMLDYEAR,FMLDPERD,FMLDLNO
          CALL      DEFMLD1                      * delete old record
          CALL      WRFMLD1                      * write new record
          GOTO      SELD3000
.                                                * delete excess records
SELD4000  CALL      RSFMLD1                      * position file pointer
          CALL      RKFMLD1                      * get next record
.
          BRANCH    OVRCD,SELD0100               * no more records ?
          PACK      KEY11,FMLDLEDG,FMLDYEAR,FMLDPERD,FMLDLNO,SP70
          MATCH     KEY8,KEY11
          GOTO      SELD0100 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMLD1                      * delete old record
          GOTO      SELD4000
.
SELD9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
WEOF0000  CLOSE     FMSTMP01
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTMP01,FILENAM1
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      WEOF9999 IF NOT EQUAL
.
          PREP      FMSTMP01,FILENAM1
          WEOF      FMSTMP01,SEQ
.
WEOF9999  RETURN
.******************************************************************************
.* SELE - Modify screen E data                   Called by ML0000             *
.******************************************************************************
SELE0000  UNPACK    SP70,FROMYEAR,TOYEAR
          MOVE      ONE,ACCEPT
          CALL      SCRE0000                     * display screen E
          DISPLAY   *P67:3,*V2LON,OPT04,*HOFF,*EL;
          GOTO      SELE1100
.
SELE0100  CALL      MQSE0000
          COMPARE   SEQ,CCITEM
          GOTO      SELE9999 IF EQUAL            * exit
.
          COMPARE   ZERO,CCITEM
          GOTO      SELE9000 IF EQUAL            * copy
.
          BRANCH    CCITEM,SELE1100,SELE1200
          BEEP                                   * illegal option
          GOTO      SELE0100
.
.---- option 1 ----
.
SELE1100  MOVE      "28",CCOL                    * get screen address
          MOVE      "6",CVERT
          CALL      KLMCFM00                     * get year
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          BRANCH    EXIT,SELE1190,SELE9999       * nothing entered ?
.
          MOVE      FMLCYEAR,FROMYEAR
          MATCH     FROMYEAR,TOYEAR
          GOTO      SELE1195 IF EQUAL
.
          BRANCH    ACCEPT,SELE1200              * accept mode ?
          GOTO      SELE0100
.
SELE1190  BRANCH    ACCEPT,SELE9999              * in accept mode ?
          GOTO      SELE1100
.
SELE1195  DISPLAY   *P1:24,*EL,*B,"From Year Identical to To Year - ";
          CALL      HITENTER
          GOTO      SELE1100
.
.---- option 2 ----
.
SELE1200  MOVE      "28",CCOL                    * get screen address
          MOVE      "7",CVERT
          UNPACK    SP70,TOYEAR
          CALL      ALMCFM00                     * get year
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          BRANCH    EXIT,SELE1290,SELE9999       * nothing entered ?
.
          MOVE      FMLCYEAR,TOYEAR
          MATCH     FROMYEAR,TOYEAR
          GOTO      SELE1295 IF EQUAL
.
          MOVE      ZERO,ACCEPT
          GOTO      SELE0100
.
SELE1290  BRANCH    ACCEPT,SELE1100              * in accept mode ?
          GOTO      SELE1200
.
SELE1295  DISPLAY   *P1:24,*EL,*B,"From Year Identical to To Year - ";
          CALL      HITENTER
          GOTO      SELE1200
.
.---- copy ----
.
SELE9000  PACK      KEY6,FMLALEDG,TOYEAR,SP70
          CALL      RDFMLC1
          BRANCH    OVRCD,SELE9500               * existing data ?
.
SELE9300  KEYIN     *P1:24,*EL,"Overwrite Existing Data (Y/N) : _":
                    *P33:24,*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "Y",ANS
          GOTO      SELE9500 IF EQUAL
          MATCH     "N",ANS
          GOTO      SELE0100 IF EQUAL
.
          BEEP                         * illegal option
          GOTO      SELE9300
.
SELE9500  PACK      KEY6,FMLALEDG,TOYEAR,SP70
          CALL      DEFMLC1            * delete old data (if possible)
          PACK      KEY6,FMLALEDG,FROMYEAR,SP70
          CALL      RDFMLC1            * read in new data
          BRANCH    OVRCD,SELE9999     * cant find data ?
.
          MOVE      ONE,FMLC01IN      * clear all lock variables
          MOVE      ONE,FMLC02IN
          MOVE      ONE,FMLC03IN
          MOVE      ONE,FMLC04IN
          MOVE      ONE,FMLC05IN
          MOVE      ONE,FMLC06IN
          MOVE      ONE,FMLC07IN
          MOVE      ONE,FMLC08IN
          MOVE      ONE,FMLC09IN
          MOVE      ONE,FMLC10IN
          MOVE      ONE,FMLC11IN
          MOVE      ONE,FMLC12IN
          MOVE      ONE,FMLC13IN
.
          MOVE      TOYEAR,DIFFYEAR
          MOVE      FROMYEAR,XF4
          SUB       XF4,DIFFYEAR
.
          MOVE      ZERO,PERIODNO
.
SELE9600  ADD       ONE,PERIODNO
          COMPARE   "27",PERIODNO
          GOTO      SELE9700 IF NOT LESS
.
          LOAD      XIM8,PERIODNO,FMLC01FR,FMLC01TO,FMLC02FR,FMLC02TO:
                               FMLC03FR,FMLC03TO,FMLC04FR,FMLC04TO:
                               FMLC05FR,FMLC05TO,FMLC06FR,FMLC06TO:
                               FMLC07FR,FMLC07TO,FMLC08FR,FMLC08TO:
                               FMLC09FR,FMLC09TO,FMLC10FR,FMLC10TO:
                               FMLC11FR,FMLC11TO,FMLC12FR,FMLC12TO:
                               FMLC13FR,FMLC13TO
          UNPACK    XIM8,KYEAR,XIM4
          MOVE      KYEAR,XF4
          ADD       DIFFYEAR,XF4
          PACK      XIM8,XF4,XIM4
          STORE     XIM8,PERIODNO,FMLC01FR,FMLC01TO,FMLC02FR,FMLC02TO:
                               FMLC03FR,FMLC03TO,FMLC04FR,FMLC04TO:
                               FMLC05FR,FMLC05TO,FMLC06FR,FMLC06TO:
                               FMLC07FR,FMLC07TO,FMLC08FR,FMLC08TO:
                               FMLC09FR,FMLC09TO,FMLC10FR,FMLC10TO:
                               FMLC11FR,FMLC11TO,FMLC12FR,FMLC12TO:
                               FMLC13FR,FMLC13TO
          GOTO      SELE9600
.
SELE9700  PACK      KEY6,FMLALEDG,TOYEAR,SP70
          UNPACK    KEY6,FMLCLEDG,FMLCYEAR
          MOVE      ZERO,FMLCYLC
          MOVE      SP70,FMLCBUDG
          CALL      WRFMLC1            * save new data
          CALL      CFIL0000           * create summary files
          DISPLAY   *P59:7,*V2LON,"Copy Complete"
          GOTO      SELE0100
.
SELE9999  RETURN
.**********************************************************************
.  MQSE - select, copy, exit, run report              Called By SELE
.        Returns  - CCITEM   (0=copy, -1=exit, other=select
.**********************************************************************
MQSE0000  MOVE      SP70,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "C",*HOFF,")opy, e(",*V2LON:
                    "X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQSE0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  C",CCITEMD      * copy ?
          GOTO      MQSE9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  X",CCITEMD      * exit ?
          GOTO      MQSE9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQSE9999 IF NOT LESS
.
          BEEP
          GOTO      MQSE0000
.
MQSE9999  RETURN
.******************************************************************************
.* PERD - get year/period                        Called by lots               *
.*        Returns  : KPERIOD     (period entered)                             *
.*                   EXIT        (1=quit)                                     *
.******************************************************************************
PERD0000  UNPACK    SP70,KPERIOD
          DISPLAY   *P28:4,*V2LON,FMLALEDG,*HOFF,SP2,FMLADESC:
                    *P28:5,*V2LON,KYEAR;
.
          KEYIN     *P1:6,"    Period               : ":
                    *P28:6,*EF,"__",*P28:6,*V2LON,*ZF,*JR,*DE,KPERIOD;
.
          PACK      KPERIOD,KPERIOD,SP70
          MATCH     SP70,KPERIOD
          GOTO      PERD9500 IF EQUAL            * quit ?
.
PERD1000  DISPLAY   *P28:6,*V2LON,KPERIOD;
          MOVE      ZERO,F2
          MOVE      KPERIOD,F2
          COMPARE   ONE,F2
          GOTO      PERD8000 IF LESS
          SUB       FMLAPERS,F2
          COMPARE   "13",F2
          GOTO      PERD9000 IF LESS
.
PERD8000  DISPLAY   *P1:24,*B,*EF,"Illegal Period Entered - ";
          CALL      HITENTER
          GOTO      PERD0000
.
PERD9000  MOVE      ZERO,EXIT                    * continue
          GOTO      PERD9999
.
PERD9500  MOVE      ONE,EXIT                     * quit
.
PERD9999  RETURN
.******************************************************************************
.  POST - Post data                              Called by ML
.******************************************************************************
POST0000  PACK      KEY5,FMLALEDG,SP70
          COMPARE   ONE,COPTION
          GOTO      POST1000 IF NOT EQUAL
          CALL      RAFMLA1                 * record exists ?
          BRANCH    OVRCD,POST1000
          DISPLAY   *P1:24,*B,*EF,"Ledger Code Has Just Been Entered - ";
          CALL      HITENTER
          GOTO      POST9999
.
POST1000  CALL      DEFMLA1                 * delete old record (if possible)
          CALL      WRFMLA1                 * write new record
.
          IF        COPTION=1
            MOVE      "1",WAUDTYPE
            CALL      WAUD0000         * write audit record data
          ENDIF
.
POST9999  RETURN
.******************************************************************************
.* DELT - Delete data                            Called by ML0000             *
.******************************************************************************
DELT0000  PACK      KEY14,FMLALEDG,SP70
          CALL      RSFMAM1                 * make sure ledger not in use
          CALL      RKFMAM1
          BRANCH    OVRCD,DELT1000
          MATCH     FMLALEDG,FMAMLEDG
          GOTO      DELT1000 IF NOT EQUAL   * in use ?
.
          DISPLAY   *P1:23,*B,*EL,"Ledger Still In Use - ";
          CALL      HITENTER
          GOTO      DELT9999
.
DELT1000  PACK      KEY6,FMLALEDG,SP70
.
DELT1300  CALL      RSFMLC1                 * delete records
          CALL      RKFMLC1
          BRANCH    OVRCD,DELT1400
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      DELT1400 IF NOT EQUAL   * no more records ?
.
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          CALL      DEFMLC1
          GOTO      DELT1300
.
DELT1400  PACK      KEY11,FMLALEDG,SP70
.
DELT1500  CALL      RSFMLD1                 * delete records
          CALL      RKFMLD1
          BRANCH    OVRCD,DELT1600
          MATCH     FMLALEDG,FMLDLEDG
          GOTO      DELT1600 IF NOT EQUAL   * no more records ?
.
          PACK      KEY11,FMLDLEDG,FMLDYEAR,FMLDPERD,FMLDLNO,SP70
          CALL      DEFMLD1
          GOTO      DELT1500
.
DELT1600  PACK      KEY14,FMLALEDG,SP70
.
DELT1700  CALL      RSFMCC1                 * delete records
          CALL      RKFMCC1
          BRANCH    OVRCD,DELT1800
          MATCH     FMLALEDG,FMCCLEDG
          GOTO      DELT1800 IF NOT EQUAL   * no more records ?
.
          PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
          CALL      DEFMCC1
          GOTO      DELT1700
.
DELT1800  PACK      KEY14,FMLALEDG,SP70
.
DELT1900  CALL      RSFMSA1                 * delete records
          CALL      RKFMSA1
          BRANCH    OVRCD,DELT2000
          MATCH     FMLALEDG,FMSALEDG
          GOTO      DELT2000 IF NOT EQUAL   * no more records ?
.
          PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          CALL      DEFMSA1
          GOTO      DELT1900
.
DELT2000  PACK      KEY5,FMLALEDG,SP70
          CALL      DEFMLA1                 * delete old record (if possible)
.
.
DELT9999  RETURN
.*****************************************************************************
. WAUD - Write Audit Record                           Called by ML0000
.    Requires - WAUDTYPE (1=write, 2=before change, 3=after change, 4=delete)
.*****************************************************************************
WAUD0000  COMPARE   ONE,FMSAUDD
          GOTO      WAUD9999 IF NOT EQUAL
          PACK      FMLAAUDD,CCC,CYY,CMM,CDD
          REP       " 0",FMLAAUDD
          CLOCK     TIME,FMLAAUDT
          MOVE      PORT,FMLAAUDP
          LOAD      FMLAAUDR,WAUDTYPE,ANSA,ANSB,ANSC,ANSD
          MOVE      ONE,FMLAAUDS
          MOVE      PASSCODE,FMLAAUDO
          PACK      KEY19,FMLAAUDD,FMLAAUDT,FMLAAUDP,FMLAAUDR
          MOVE      KEY19,SAVKEY19
          CALL      AWFMLA                       * write audit file record
WAUD9999  RETURN
.*****************************************************************************
. DAUD - Delete Before Change Audit                    Called by ML0000
.*****************************************************************************
DAUD0000  COMPARE   ONE,FMSAUDD
          GOTO      DAUD9999 IF NOT EQUAL
          MOVE      SAVKEY19,KEY19
          CALL      ADFMLA                       * write audit file record
DAUD9999  RETURN
.**********************************************************************
. Create Summary Files
.         Requires : FMLCYEAR     (year)
.**********************************************************************
CFIL0000  PACK      FILENAME,FMSA,FMLCYEAR
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CFIL0400 IF EQUAL
          PACK      MAKEFILE,MAKE,FILENAME,KEYSTR
          EXECUTE   MAKEFILE,TASKID
.
CFIL0400  PACK      FILENAME,FMSG,FMLCYEAR
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBASA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CFIL0500 IF EQUAL
          PACK      MAKEFILE,MAKE,FILENAME,KEYBAS
          EXECUTE   MAKEFILE,TASKID
.
CFIL0500  PACK      FILENAME,FMSZ,FMLCYEAR
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CFIL1000 IF EQUAL
          PACK      MAKEFILE,MAKE,FILENAME,KEYSTR
          EXECUTE   MAKEFILE,TASKID
.
CFIL1000  PACK      FILENAME,FMSD,FMLCYEAR
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSDSFA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CFIL2000 IF EQUAL
          PACK      MAKEFILE,MAKE,FILENAME,KEYDSF
          EXECUTE   MAKEFILE,TASKID
.
CFIL2000  PACK      FILENAME,FMSP,FMLCYEAR
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CFIL3000 IF EQUAL
          PACK      MAKEFILE,MAKE,FILENAME,KEYFPS
          EXECUTE   MAKEFILE,TASKID
.
CFIL3000  PACK      FILENAME,FMSR,FMLCYEAR
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CFIL4000 IF EQUAL
          PACK      MAKEFILE,MAKE,FILENAME,KEYCTR
          EXECUTE   MAKEFILE,TASKID
.
CFIL4000  PACK      FILENAME,FMSS,FMLCYEAR
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CFIL5000 IF EQUAL
          PACK      MAKEFILE,MAKE,FILENAME,KEYSMA
          EXECUTE   MAKEFILE,TASKID
.
CFIL5000  PACK      FILENAME,FMST,FMLCYEAR
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CFIL6000 IF EQUAL
          PACK      MAKEFILE,MAKE,FILENAME,KEYTRN
          EXECUTE   MAKEFILE,TASKID
.
CFIL6000  CLOSE     FMSTRNA1
          CLOSE     FMSSMAA1
          CLOSE     FMSCTRA1
          CLOSE     FMSFPSA1
          CLOSE     FMSDSFA1
          CLOSE     FMSSTRA1
          CLOSE     FMSBASA1
.
CFIL9999  RETURN

.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
RLMAFM00  
          COMPARE   FOUR,COPTION
          GOTO      RLMAFM10 IF EQUAL
.
          DISPLAY   *P1:4,"    Ledger               : ",*EF;
          RETURN
RLMAFM10
          CALL      CSCR0000             * display the copy screen
          BRANCH    FROMFLAG,RLMAFM20
          DISPLAY   *P25:4,*V2LON,LEDGER,*HOFF,*P30:4,LEDGDESC
          RETURN
RLMAFM20
          DISPLAY   *P25:4,*V2LON,FMLALEDG,*HOFF,*P30:4,FMLADESC
          RETURN
.
RLMCFM00  
RLMBFM00  
          BRANCH    SCRNO,RLMCFM10,RLMCFM20,RLMCFM30,RLMCFM40,RLMCFM50,RLMCFM60
.
RLMCFM10  CALL      SCRA0000
          GOTO      RLMCFM99
.
RLMCFM20                               * note screen B does not exist
          GOTO      RLMCFM99
.
RLMCFM30  CALL      SCRC0000
          GOTO      RLMCFM99
.
RLMCFM40  CALL      SCRE0000
          GOTO      RLMCFM99
.
RLMCFM50  CALL      SCRX0000
          GOTO      RLMCFM99
.
RLMCFM60  CALL      SCRY0000
          GOTO      RLMCFM99
.
RLMCFM99  RETURN
.
          INC       FMSAMAIO/INC       * account master file
          INC       FMSCCAIO/INC       * cost center code
          INC       FMSCONIO/INC       * controlf
          INC       FMSLMAIO/INC       * ledger
          INC       FMSLMCIO/INC       * ledger fin. cal. control file
          INC       FMSLMDIO/INC       * ledger wp. file
          INC       FMSSBAIO/INC       * subjective code
.
          INC       FMSLMAKY           * ledger
          INC       FMSLMCKY           * financial calendar
          INC       FMSSTDCD           * FMS Acc. standard routines
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
