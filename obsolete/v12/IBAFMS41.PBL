. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS41                                             *
. * Desc      :   Chart of Accounts                                    *
. **********************************************************************
. * Date      :   15.10.1990                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.03  12.08.1999 Sandra Barcham                                *
. *           Added export function                                    *
. *           srf 633651                                               *
. * VF.00.02  30.06.1999 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. *           srf 632475                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS41
.             open files and initialise variables
.             WHILE user wants to print reports DO
.                  get desired parameters
.                  print report
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSAMAFD/INC       * account
          INC       FMSLMAFD/INC       * ledger
          INC       FMSLMBFD/INC       * report
          INC       FMSLEVFD/INC       * level
          INC       FMSPRCFD/INC       * print code
          INC       FMSRSFFD/INC       * report seq file
          INC       FMSTCFFD/INC       * total calc file
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
EXFLAG    DIM       3
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
EXPORTYN  FORM      1                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.
.
ACCEPT    FORM      1        * accept mode (1=on)
ACCSEQ    DIM       5        * printed account seq
.
DIM25     DIM       25
DRAFT     FORM      2
.
FROMLEV   DIM       3        * report level
FROMPPOS  DIM       5        * from print position
.
LASTACCT  DIM       14
LEDGER    DIM       2        * Ledger
.
PAGBRK    FORM      1
PAGBRKYN  DIM       3
PRNTCODE  DIM       5        * print code
.
REPORT    DIM       2        * report
.
SAVEDATA  DIM       50       * data save for fmsrsfaf
SDESC     INIT      "                                              "
SDESC0    INIT      "Accept Suppression of Posting Account Printing"
SDESC1    INIT      "Ignore Suppression of Posting Account Printing"
SELECT    FORM      2        * selection on screen A
SKEY33    DIM       33
STATDESC  DIM       5
STATDES0  INIT      "Open "
STATDES1  INIT      "Journ"
STATDES2  INIT      "Close"
SUPFLGYN  DIM       3
SUPPFLAG  FORM      1
.
TOPPOS    DIM       5        * to print position
.
PRGID     INIT      "IBAFMS41"
PRGNAM    INIT      "Chart of Accounts"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      SELA0000           * get entry
          BRANCH    EXIT,ML9999        * exit program
.
          CALL      PRNT0000           * print report
          CALL      TRAN0000
          GOTO      ML0100             * get next entry
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmsamaaf";  * account
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsrsfaf";  * report seq
          OPEN      FMSRSFA1,"fmsrsfaf"
          OPEN      FMSRSFA2,"fmsrsfaf"
          OPEN      FMSRSFA3,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmstcfaf";  * total calc
          OPEN      FMSTCFA1,"fmstcfaf"
          OPEN      FMSTCFA2,"fmstcfaf"
.
          DISPLAY   *P64:24,"fmsprcaf";  * print code
          OPEN      FMSPRCA1,"fmsprcaf"
.
          DISPLAY   *P64:24,"fmslmaaf";  * ledger
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmbaf";  * report
          OPEN      FMSLMBA1,"fmslmbaf"
.
          DISPLAY   *P64:24,"fmslevaf";  * report level
          OPEN      FMSLEVA1,"fmslevaf"
.
          UNPACK    SP70,REPORT,FROMLEV,FROMPPOS,TOPPOS   * clear vars
          UNPACK    SP70,PAGBRKYN
          UNPACK    SP70,SUPFLGYN
          UNPACK    SP70,EXFLAG
          MOVE      ZERO,EXPORTYN
          MOVE      ONE,ACCEPT         * set accept mode
          MOVE      ONE,CNOUNDLN
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.* SCRA - Display Screen A                       Called by ML0000             *
.******************************************************************************
SCRA0000  PACK      FMLBDESC,SP70
          PACK      KEY2,REPORT,SP70             * get report description
          CALL      RDFMLB1
.
          PACK      FMLVDESC,SP70
          PACK      KEY3,FROMLEV,SP70            * get level description
          CALL      RDFMLV1
.
          PACK      KEY2,LEDGER
          CALL      RDFMLA1                       * get ledger description
.
          DISPLAY   *P1:4,*EF,*V2LON," 1",*HOFF,". Ledger               :":
                    *P1:5,*V2LON," 2",*HOFF,". Report Number        :":
                    *P1:6,*V2LON," 3",*HOFF,". From Report Level    :":
                    *P1:7,*V2LON," 4",*HOFF,". First Print Position :":
                    *P1:8,*V2LON," 5",*HOFF,". Last  Print Position :":
                    *P1:9,*V2LON," 6",*HOFF,". Ignore Suppress Print:":
                    *P1:10,*V2LON," 7",*HOFF,". Suppress Breaks     :":
                    *P1:11,*V2LON," 8",*HOFF,". Export              :":
                    *P28:4,*V2LON,LEDGER,SP3,*HOFF,FMLADESC:
                    *P28:5,*V2LON,REPORT,SP3,*HOFF,FMLBDESC:
                    *P28:6,*V2LON,FROMLEV,SP2,*HOFF,FMLVDESC:
                    *P28:7,*V2LON,FROMPPOS:
                    *P28:8,TOPPOS:
                    *P28:9,SUPFLGYN:
                    *P28:10,PAGBRKYN:
                    *P28:11,EXFLAG;
.
SCRA9999  RETURN
.**********************************************************************
. SELA - Perform screen A                             Called By ML
.     Requires - ACCEPT   (1=accept mode)
.                LEDGER,REPORT, FROMLEV, FROMPPOS, TOPPOS  (screen data)
.     Returns  - LEDGET,REPORT, FROMLEV, FROMPPOS, TOPPOS  (screen data)
.                   EXIT     (1=exit program)
.**********************************************************************
SELA0000  CALL      SCRA0000           * display screen A
          MOVE      ZERO,SELECT   
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,SELECT                   * get next option[
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      MQST0000                     * select/run report/exit ?
          MOVE      CCITEM,SELECT
.
          COMPARE   ZERO,SELECT
          GOTO      SELA9000 IF EQUAL            * run report
.
          COMPARE   SEQ,SELECT
          GOTO      SELA9500 IF EQUAL            * exit        
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "3",CVERT
          ADD       SELECT,CVERT
          BRANCH    SELECT,SELA1000,SELA1200,SELA1300,SELA1400,SELA1500:
                           SELA1600,SELA1700,SELA1800
          BRANCH    ACCEPT,SELA0900              * in accept mode ?
          BEEP                                   * illegal option
          GOTO      SELA0100
.
SELA0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELA0100
.
.---- option 1 ----
.
SELA1000  CALL      KLMAFM00           * get report
          BRANCH    EXIT,SELA9500,SELA9500
.
          MOVE      FMLALEDG,LEDGER        
          DISPLAY   *PCCOL:CVERT,*V2LON,LEDGER,*HOFF,SP3,FMLADESC;
          GOTO      SELA0100           * get next option
.
.---- option 2 ----
.
SELA1200  CALL      KLMBFM00           * get report
          BRANCH    EXIT,SELA1290,SELA9500
.
          PACK      REPORT,FMLBRPNO,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,REPORT,*HOFF,SP3,FMLBDESC;
          GOTO      SELA0100           * get next option
.
SELA1290  COMPARE   ONE,ACCEPT
          GOTO      SELA1200 IF NOT EQUAL
          SUB       "2",SELECT
          GOTO      SELA0100           * get next option
.
.---- option 3 ----
.
SELA1300  MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00           * get level
          BRANCH    EXIT,SELA1390,SELA9500
.
SELA1390  PACK      FROMLEV,FMLVCODE,SP70
          PACK      FMLVDESC,SP70
          PACK      KEY2,FROMLEV,SP70
          CALL      RDFMLV1
          DISPLAY   *PCCOL:CVERT,*V2LON,FROMLEV,*HOFF,SP2,FMLVDESC;
          GOTO      SELA0100           * get next option
.
.---- option 4 ----
.
SELA1400  MOVE      "0000000000",FROMPPOS
          KEYIN     *PCCOL:CVERT,*DV,FROMPPOS:
                    *PCCOL:CVERT,*V2LON,*DE,*JR,*ZF,*RV,FROMPPOS:
                    *PCCOL:CVERT,*DV,FROMPPOS;
          GOTO      SELA0100           * get next option
.
.---- option 5 ----
.
SELA1500  MOVE      "9999999999",TOPPOS
          KEYIN     *PCCOL:CVERT,*DV,TOPPOS:
                    *PCCOL:CVERT,*V2LON,*DE,*JR,*ZF,*RV,TOPPOS:
                    *PCCOL:CVERT,*DV,TOPPOS;
          GOTO      SELA0100           * get next option
.
.---- option 6 ----
.
SELA1600  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,SUPPFLAG
          MOVE      YESNO,SUPFLGYN
          GOTO      SELA0100           * get next option
.
.---- option 7 ----
.
SELA1700  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,PAGBRK
          MOVE      YESNO,PAGBRKYN
          GOTO      SELA0100           * get next option
.
.---- option 8 ----
.
SELA1800  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,EXPORTYN
          MOVE      YESNO,EXFLAG
          GOTO      SELA0100
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.**********************************************************************
. PRNT - Print Report                                 Called By ML
.        Requires - LEDGER, REPORT, FROMLEV, FROMPPOS, TOPPOS  (screen data)
.**********************************************************************
PRNT0000  DISPLAY   *P50:24,"Printing :   ";
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * set line number
.
          CALL      MAKEXP00
.
          CALL      FILE0000                    * go to correct position in file
.
PRNT1000  CALL      NREC0000                     * get next record
          BRANCH    OVRCD,PRNT9000               * end of file ?
.
          CALL      REPT0000                     * print details
          GOTO      PRNT1000                     * get next record
.
PRNT9000  COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL            * print head if nothing printed
          CALL      LINE0000                     * print line
          PRINT     *N,"****   End of Report   ****"
.
PRNT9999  RETURN
.**********************************************************************
. HEAD - Print Header                                 Called By PRNT
.**********************************************************************
HEAD0000  COMPARE   ZERO,CPAGENO
          CALL      LINE0000 IF NOT EQUAL        * first page ?
.
          CALL      HEAD132                      * print header
          MOVE      SP70,FMLVDESC
          PACK      KEY3,FROMLEV,SP70
          CALL      RDFMLV1                      * get level description
          MOVE      SDESC0,SDESC
          LOAD      SDESC,SUPPFLAG,SDESC1
          PRINT     "Report ",REPORT,SP1,FMLBDESC," From Position ":
                    FROMPPOS," to ",TOPPOS," for Report Level Greater Than ":
                    FROMLEV,SP1,FMLVDESC,*N:
                    *47,"Ledger ",LEDGER,SP2,FMLADESC,*N:
                    *47,SDESC,*N
          ADD       "4",CLNO
          CALL      LINE0000                     * print line
          PRINT     "Account                                           ":
                    "   Print Pos/  Account    Print               ":
                    "    Report           Add to      Cr",*N:
                    "                                                  ":
                    "    Acct Seq    Type      Code                ":
                    "     Level Stat. Ledger/Account  Ind"
          ADD       TWO,CLNO
          CALL      LINE0000                     * print line
.
HEAD9999  RETURN
.**********************************************************************
. LINE - Print Header                                 Called By PRNT
.**********************************************************************
LINE0000  PRINT     "--------------------------------------------":
                    "--------------------------------------------":
                    "--------------------------------------------"
          ADD       ONE,CLNO
.
LINE9999  RETURN
.**********************************************************************
. FILE - Go to starting position on file              Called By PRNT
.**********************************************************************
FILE0000  PACK      KEY26,LEDGER,REPORT,FROMPPOS,SP70
          CALL      RSFMRF3
.
FILE9999  RETURN
.**********************************************************************
. NREC - Get next record                              Called By PRNT
.        Returns  : OVRCD    (1=no more records)
.**********************************************************************
NREC0000  CALL      RKFMRF3                 * get next record
          BRANCH    OVRCD,NREC9500          * no more records ?
.
          MATCH     LEDGER,FMRFLED          * correct ledger
          GOTO      NREC9500 IF NOT EQUAL
.
          MATCH     FMRFREP,REPORT
          GOTO      NREC9500 IF NOT EQUAL   * correct report ?
.
          MATCH     FMRFPOS,TOPPOS
          GOTO      NREC9500 IF LESS        * in print range ?
.
NREC9000  MOVE      ZERO,OVRCD              * continue
          GOTO      NREC9999
.
NREC9500  MOVE      ONE,OVRCD               * quit
.
NREC9999  RETURN
.**********************************************************************
. REPT -  Print sub and total accounts                Called By PRNT
.**********************************************************************
REPT0000  MATCH     "00000",FROMLEV
          GOTO      REPT1000 IF NOT EQUAL   * posting accounts to be printed ?
.
          BRANCH    SUPPFLAG,REPT0010       * print details of tot accts ?
          MOVE      "0",FMPRSUPP
          PACK      KEY3,FMRFPRT,SP70
          CALL      RDFMPR1
          MATCH     "1",FMPRSUPP
          GOTO      REPT1000 IF EQUAL
.
REPT0010  PACK      KEY33,FMRFLED,FMRFACC,SP70
          CALL      RSFMTC1
          MOVE      SP70,PRNTCODE
.
.---- print sub accounts ----
.
REPT0100  CALL      RKFMTC1                 * get next sub account
          BRANCH    OVRCD,REPT1000
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     KEY33,KEY14
          GOTO      REPT1000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          CALL      RDFMAM1                 * get account info
          BRANCH    OVRCD,REPT0100
          MATCH     "6",FMAMTYPE
          GOTO      REPT0100 IF EQUAL
....      MATCH     "7",FMAMTYPE
....      GOTO      REPT0100 IF EQUAL
          MATCH     "9",FMAMTYPE
          GOTO      REPT0100 IF EQUAL
.
          MOVE      FMTCASEQ,ACCSEQ
          MOVE      FMTCPRT,PRNTCODE
.
          CALL      WRIT0000
          GOTO      REPT0100
.
.---- print total account ----
.
REPT1000  MOVE      FMRFPRT,PRNTCODE
          MOVE      FMRFSEQ,ACCSEQ
          MOVE      SP70,FMTCASEQ
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,REPT9999
.
          MATCH     FROMLEV,FMAMCLEV
          GOTO      REPT9999 IF LESS   * desired level
.
          PACK      SAVEDATA,FMRFLED,FMRFACC,FMRFREP,FMRFPOS:
                             FMRFSEQ,FMRFPRT,SP70
          MOVE      SP70,LASTACCT
          PACK      KEY33,KEY14,SP70   * get first add to account
          PACK      SKEY33,KEY33,SP70
          CALL      RSFMTC2
.
REPT1500  CALL      CPRT0000
          BRANCH    EXIT,REPT2000           * any add to accounts ?
          GOTO      REPT3000                * print account
.
REPT2000  UNPACK    SP70,FMTCTLED,FMTCTACC
.
REPT3000  UNPACK    SAVEDATA,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,FMRFPRT
          CALL      WRIT0000
.
          MATCH     SP70,FMTCTLED
          GOTO      REPT9999 IF EQUAL       * printed an add to account ?
.
REPT5600  CALL      CPRT0000
          BRANCH    EXIT,REPT9999           * any more add to accounts ?
          COMPARE   "60",CLNO                    * end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
          PRINT     *1,SP2,SP1,SP10,SP2,SP1,SP30,SP5:
                    SP2,SP5,SP1,SP5,SP1,SP10,SP1,SP1:
                    SP5,SP1,SP20,SP1,SP3,SP6:
                    FMTCTLED,ANS,FMTCTACC
          ADD       ONE,CLNO
          GOTO      REPT5600                * print account
.
REPT9999  RETURN
.**********************************************************************
.  CPRT - check if account is to be printed on rep     Called By REPT
.        Requires - FMTCTLED, FMTCTACC (account)
.        Returns  - EXIT     (1=no more accpunts)
.**********************************************************************
CPRT0000  CALL      RKFMTC2
          BRANCH    OVRCD,CPRT9500
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          MATCH     KEY14,SKEY33
          GOTO      CPRT9500 IF NOT EQUAL   * add to account found ?
.
          PACK      KEY14,FMTCTLED,FMTCTACC,SP70
          MATCH     LASTACCT,KEY14
          GOTO      CPRT0000 IF EQUAL       * check if account already printed
          PACK      LASTACCT,KEY14,SP70
.
          PACK      KEY26,FMTCTLED,FMTCTACC,REPORT,FROMPPOS,SP70
          CALL      RSFMRF2                 * check if printed on this report
          CALL      RKFMRF2
          BRANCH    OVRCD,CPRT0000
.
          PACK      KEY16,FMRFLED,FMRFACC,FMRFREP,SP70
          MATCH     KEY16,KEY26             * in report ?
          GOTO      CPRT0000 IF NOT EQUAL
.
          MATCH     FROMPPOS,FMRFPOS        * in range ?
          GOTO      CPRT0000 IF LESS
          MATCH     FMRFPOS,TOPPOS
          GOTO      CPRT0000 IF LESS
.
CPRT9000  MOVE      ZERO,EXIT          * continue
          GOTO      CPRT9999
.
CPRT9500  MOVE      ONE,EXIT           * quit
.
CPRT9999  RETURN
.**********************************************************************
. WRIT - Write Record                                 Called By REPT
.**********************************************************************
.---- get print info and do before print options ----
.
WRIT0000  DISPLAY   *P61:24,*V2LON,FMAMACCT,*EL;
          COMPARE   "60",CLNO                    * end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
.
          UNPACK    SP70,FMPRCODE,FMPRDESC  * clear print code data
          UNPACK    SP70,FMPRPT1B,FMPRPT2B,FMPRPT3B:
                         FMPRPT1A,FMPRPT2A,FMPRPT3A,FMPRUNDC
          MOVE      ZERO,FMPRUNDL
          MOVE      ZERO,FMPRBLIN
          MOVE      ZERO,FMPRALIN
          MOVE      ZERO,FMPRBOLD
          PACK      KEY3,PRNTCODE,SP70
          CALL      RDFMPR1                 * get print code data
          ADD       ONE,FMPRBOLD            * increment bolding indicator
.
          BRANCH    PAGBRK,WRIT5000
          COMPARE   "9",FMPRBLIN
          GOTO      WRIT4000 IF EQUAL       * start on new page ?
.
WRIT3000  COMPARE   "1",FMPRBLIN
          GOTO      WRIT5000 IF LESS        * print blank line ?
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      WRIT4000 IF NOT LESS    * page full
          PRINT     SP1
          SUB       ONE,FMPRBLIN
          GOTO      WRIT3000
.
WRIT4000  CALL      HEAD0000
.
.---- print record ----
.
WRIT5000  UNPACK    SP70,FMLVDESC,FMLVCODE
          PACK      KEY3,FMAMCLEV,SP70
          CALL      RDFMLV1            * get level code data
.
          MOVE      FMAMTYPE,F1
          MOVE      SP70,ACCTYPE
          LOAD      ACCTYPE,F1,ACCTYPE1,ACCTYPE2,ACCTYPE3: * get account type
                               ACCTYPE4,ACCTYPE5,ACCTYPE6,ACCTYPE7:
                               ACCTYPE8,ACCTYPE9
.
          MOVE      STATDES0,STATDESC
          LOAD      STATDESC,FMAMSTAT,STATDES1,STATDES2
.
          MOVE      SLASH,ANS
          MATCH     SP70,FMTCTLED
          GOTO      WRIT5500 IF NOT EQUAL
.
          MOVE      SP70,ANS
.
WRIT5500  MATCH     "00000",FROMLEV
          CALL      PPCD0000 IF NOT EQUAL  * print printcode & desc ?
.
          MOVE      ANSN,DIM1
          MATCH     "1",FMRFCRP
          IF        @EQUAL
            MOVE      ANSY,DIM1
          ENDIF
.
          PRINT     *1,FMAMLEDG,SLASH,FMAMACCT,SP1,FMAMDESC:
                    SP1,FMRFPOS,SLASH,ACCSEQ,SP1,ACCTYPE,SP1:
                    PRNTCODE,SP1,FMPRDESC,SP1,FMLVCODE,SP1:
                    STATDESC,SP1,FMTCTLED,ANS,FMTCTACC,SP2,DIM1;
.
          SUB       ONE,FMPRBOLD            * decrement bolding indicator
          BRANCH    FMPRBOLD,WRIT5500       * repeat print for bolding ?
          PRINT     *132,SP1
          ADD       ONE,CLNO
.
          CALL      WRTEXP00
.
.---- do after print options ----
.
          COMPARE   "1",FMPRUNDL
          GOTO      WRIT6000 IF NOT EQUAL   * print underline ?
          MOVE      SP70,FMAMDESC
          PACK      DIM2,SP1,FMPRUNDC
          REP       DIM2,FMAMDESC
          PRINT     *17,FMAMDESC
          ADD       ONE,CLNO
.
WRIT6000  BRANCH    PAGBRK,WRIT9999
.
          COMPARE   "9",FMPRALIN
          GOTO      WRIT8000 IF EQUAL       * go to new page ?
.
WRIT7000  COMPARE   "1",FMPRALIN
          GOTO      WRIT9999 IF LESS        * print blank line ?
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      WRIT8000 IF NOT LESS    * page full
          PRINT     SP1
          SUB       ONE,FMPRALIN
          GOTO      WRIT7000
.
WRIT8000  CALL      HEAD0000
.
WRIT9999  RETURN

.**********************************************************************
.*                        PPCD0000                                    *
.*               Print print code & description ?                     *
.**********************************************************************
.
PPCD0000
          PACK      SP25,SP70
          CLEAR     DIM25
          PACK      DIM25,FMPRPT1B,FMPRPT2B,FMPRPT3B,FMPRPT1A,FMPRPT2A:
                          FMPRPT3A,FMPRUNDC
          PACK      DIM25,DIM25,SP70 
          MOVE      ZERO,DRAFT
          ADD       FMPRUNDL,DRAFT
          ADD       FMPRBOLD,DRAFT
.
          COMPARE   TWO,DRAFT 
          GOTO      PPCD9999 IF EQUAL      
.
          MATCH     SP25,DIM25
          GOTO      PPCD9999 IF NOT EQUAL
.
          UNPACK    SP70,PRNTCODE,FMPRDESC
.
PPCD9999  RETURN
          
+
.***********************************************************************
.         Subroutine to SELECT ITEM, RUN REPORT, EXIT
.-----------------------------------------------------------------------
.
MQST0000  MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"R",*HOFF,")un ":
                    "Report, e(":
                    *V2LON,"X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQST0000 IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  X",CCITEMD
          GOTO      MQST1000 IF EQUAL
.
          MATCH     "  E",CCITEMD
          GOTO      MQST1000 IF EQUAL
.
          MATCH     "  R",CCITEMD
          GOTO      MQST2000 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      MQST0500 IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      MQST0500 IF LESS
.
          RETURN
.
MQST0500  BEEP
          GOTO      MQST0000
.
MQST1000  MOVE      "-1",CCITEM
          RETURN
.
MQST2000  MOVE      "0",CCITEM
          RETURN
+
.******************************************************************************
.* Redisplays                                                                 *
.******************************************************************************
RLMAFM00
RLMBFM00
RLEVFM00
          CALL      SCRA0000           * display screen A
          RETURN
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
          MOVE     "EXPORT",KEY6
          PACK     EXPORTFN,KEY6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
          WRITE    EXPORTFL,SEQ;"Ledger",TABDELM:
                                "Account Code",TABDELM:
                                "Description",TABDELM:
                                "Print Position",TABDELM:
                                "Account Sequence",TABDELM:
                                "Account Type",TABDELM:
                                "Print Code",TABDELM:
                                "Print Description",TABDELM:
                                "Report Level",TABDELM:
                                "Status",TABDELM:
                                "Add to Ledger",TABDELM:
                                "Add to Account",TABDELM:
                                "Credit Indicator"
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXP99 IF NOT EQUAL
          WRITE    EXPORTFL,SEQ;FMAMLEDG,TABDELM:
                                FMAMACCT,TABDELM:
                                FMAMDESC,TABDELM:
                                FMRFPOS,TABDELM:
                                ACCSEQ,TABDELM:
                                ACCTYPE,TABDELM:
                                PRNTCODE,TABDELM:
                                FMPRDESC,TABDELM:
                                FMLVCODE,TABDELM:
                                STATDESC,TABDELM:
                                FMTCTLED,TABDELM:
                                FMTCTACC,TABDELM:
                                DIM1
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9999 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSAMAIO/INC       * account
          INC       FMSLMAIO/INC       * ledger
          INC       FMSLMBIO/INC       * report
          INC       FMSLEVIO/INC       * level
          INC       FMSPRCIO/INC       * print code
          INC       FMSRSFIO/INC       * report seq file
          INC       FMSTCFIO/INC       * total calc file
          INC       FMSLMAKY           * ledger
          INC       FMSLMBKY           * report
          INC       FMSLEVKY           * level
          INC       FMSSTDCD           * FMS Acc. standard routines
.
