.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.01  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.-------------------------------------------------------
KEYDES60  DIM       60
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
KEYWRDNO  FORM      2
NUMCAT7   FORM      7
SAVKEY7   DIM       7
SAVKEY22  DIM       22
UPDTYPE   FORM      2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACSM04
.   Function      :   Create Corporate Database               
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSMASFD/INC
          INC       CSMCIAFD/INC
          INC       CSMCICFD/INC
          INC       CSMCIFFD/INC
          INC       CSMCKYFD/INC
          INC       CSMCREFD/INC
          INC       CSMSKYFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIFFD/INC
.=========================
.Local Variable Definition
.-------------------------
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACSM04"
PRGNAM    INIT      "Create Corporate Database               "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          MOVE      "   63",AUDTSECT
          MOVE      "158",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening csmaudcr";
            OPEN      CSMAUDCR,"csmaudcr"
          ENDIF
          MOVE      "   63",AUDTSECT
          MOVE      "159",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening csmaudia";
            OPEN      CSMAUDIA,"csmaudia"
          ENDIF
          MOVE      "   63",AUDTSECT
          MOVE      "160",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening csmaudic";
            OPEN      CSMAUDIC,"csmaudic"
          ENDIF
          DISPLAY   *P56:24,"Opening csmciaaf";
          OPEN      CSMCIAA1,"csmciaaf"
          DISPLAY   *P56:24,"Opening csmcicaf";
          OPEN      CSMCICA1,"csmcicaf"
          DISPLAY   *P56:24,"Opening csmcicaf";
          OPEN      CSMCICA2,"csmcicaf"
          DISPLAY   *P56:24,"Opening csmcicaf";
          OPEN      CSMCICA3,"csmcicaf"
          DISPLAY   *P56:24,"Opening csmcifaf";
          OPEN      CSMCIFA1,"csmcifaf"
          DISPLAY   *P56:24,"Opening csmckyaf";
          OPEN      CSMCKYA1,"csmckyaf"
          DISPLAY   *P56:24,"Opening csmckyaf";
          OPEN      CSMCKYA2,"csmckyaf"
          DISPLAY   *P56:24,"Opening csmcreaf";
          OPEN      CSMCREA1,"csmcreaf"
          DISPLAY   *P56:24,"Opening csmskyaf";
          OPEN      CSMSKYA1,"csmskyaf"
          DISPLAY   *P56:24,"Opening csmskyaf";
          OPEN      CSMSKYA2,"csmskyaf"
          MOVE      "   24",AUDTSECT
          MOVE      "203",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudia";
            OPEN      SINAUDIA,"sinaudia"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "207",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudic";
            OPEN      SINAUDIC,"sinaudic"
          ENDIF
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA2,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA3,"sincicaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SUPP0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      CATA0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL      NUMCAT00
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.--------------------------------------------------
. Create Corporate Creditors/Suppliers
.--------------------------------------------------
SUPP0000  MOVE      SP70,KEY5
          DISPLAY   *P1:24,*EL,"Processing ..."
          MOVE      ZERO,SECTOR
          CALL      RSAPMA1
SUPP1000  CALL      RKAPMA1
          BRANCH    OVRCD,SUPP9000
          ADD       ONE,SECTOR
          IF        SECTOR%100=0
            DISPLAY   *P40:24,SECTOR
          ENDIF
          CALL      UPSUP000
          GOTO      SUPP1000
SUPP9000  MOVE      "Complete - ",DISPMSG
          CALL      MESSAGE1
.
SUPP9999  RETURN
.-------------------------------------------------------------
. Write Record to Corporate Database
.-------------------------------------------------------------
UPSUP000  MOVE     APMACRD,CSCRCRD
          MOVE     APMATYP,CSCRTYP
          MOVE     APMASKY,CSCRSKY
          MOVE     APMASN1,CSCRCN1
          MOVE     APMASN2,CSCRCN2
          MOVE     APMASA1,CSCRCA1
          MOVE     APMASA2,CSCRCA2
          MOVE     APMASA3,CSCRCA3
          MOVE     APMASPC,CSCRCPC
          MOVE     APMASTEL,CSCRCTEL
          MOVE     APMASFAX,CSCRCFAX
          MOVE     APMASCON,CSCRCON
          MOVE     APMAHOR,CSCRHOR
          MOVE     APMAHIN,CSCRHIN
          MOVE     APMAHCR,CSCRHCR
          MOVE     APMAHPY,CSCRHPY
          MOVE     SP70,CSCRUR1
          MOVE     SP70,CSCRUR2
          MOVE     SP70,CSCRUD1
          MOVE     SP70,CSCRUD2
          MOVE     ZERO,CSCRUY1
          MOVE     ZERO,CSCRUY2
          MOVE     SP70,CSCRSPA
.
          PACK     KEY5,CSCRCRD,SP70  * Setup Key
          CALL     RACSCR1            * Check for record on file
          IF       OVRCD=0
            CALL     UPCSCR1          * Update Changes
          ELSE
            CALL     WRCSCR1          * Write New Record
          ENDIF
          CALL     GENR0000           * Update Keyword Index
          RETURN                      * Return to program.
.------------------------------------------------------------
.  Function   :  Update Keyword Index File
.------------------------------------------------------------
GENR0000  CALL     CLEAR000
          BRANCH   EXIT,GENR9999
.
          PACK     KEYDES60,CSCRCN1,CSCRCN2
          CALL     BWORD000
.
GENR9999  RETURN
.------------------------------------------------------------
. Recreate File
.------------------------------------------------------------
CLEAR000  PACK     KEY20,CSCRCRD,SP70
          CALL     RSCSSK2
          CALL     RKCSSK2
          BRANCH   OVRCD,CLEAR999
          MATCH    CSCRCRD,CSSKCRD
          GOTO     CLEAR999 IF NOT EQUAL
.
          PACK     KEY20,CSSKCRD,CSSKKWD,SP70
          CALL     DECSSK2
          GOTO     CLEAR000
.
CLEAR999  RETURN
.
BWORD000  CMATCH    SP1,KEYDES60             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYDES60
            GOTO      BWORD000 IF NOT EOS
            GOTO      BWORD999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYDES60,SP30        * reset form pointer
          MOVE      KEY60,KEYDES60
.
          SCAN      SP1,KEYDES60               * Locate the first blank
          GOTO      BWORD100 IF NOT EQUAL
          BUMP      KEYDES60,-1              * go back 1 to end of name
          MOVEFPTR  KEYDES60,CCITEM          * another handly form field
          RESET     KEYDES60                 * reset the form pointer
          SETLPTR   KEYDES60,CCITEM          * set logical length to end of name
.
.         Save this Word
.
BWORD100  MOVE      KEYDES60,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15
          PACK      KEY20,KEY15,CSCRCRD
          UNPACK    KEY20,CSSKKWD,CSSKCRD
          CALL      RDCSSK1
          IF        OVRCD=1
            CALL      WRCSSK1
          ENDIF
          GOTO      BWORD190
.
.         Check for any more words
.
BWORD190  SETLPTR   KEYDES60,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYDES60,CCITEM        * reset to this point
          PACK      KEY60,KEYDES60,SP30    * reset form pointer
          MOVE      KEY60,KEYDES60
.
          GOTO      BWORD000
.
BWORD999  RETURN
.
.--------------------------------------------------
. Create Corporate Creditors/Suppliers
.--------------------------------------------------
CATA0000  MOVE      SP70,KEY7
          DISPLAY   *P1:24,*EL,"Processing ..."
          MOVE      ZERO,SECTOR
          CALL      RSSIIA1
CATA1000  CALL      RKSIIA1
          BRANCH    OVRCD,CATA9000
          ADD       ONE,SECTOR
          IF        SECTOR%100=0
            DISPLAY   *P40:24,SECTOR
          ENDIF
          CALL      UPCIA000
.
          PACK      KEY27,SIIACAT,SP70
          CALL      RSSIIC1
CATA2000  CALL      RKSIIC1
          BRANCH    OVRCD,CATA3000
          MATCH     SIICCAT,SIIACAT
          GOTO      CATA3000 IF NOT EQUAL
          CALL      UPCIC000
          GOTO      CATA2000
.
CATA3000  MOVE      ZERO,SECTOR
          MOVE      SP70,CSIFDE01
          MOVE      SP70,CSIFDE02
          MOVE      SP70,CSIFDE03
          MOVE      SP70,CSIFDE04
          MOVE      SP70,CSIFDE05
          MOVE      SP70,CSIFDE06
          MOVE      SP70,CSIFDE07
          MOVE      SP70,CSIFDE08
          MOVE      SP70,CSIFSPA
          PACK      KEY67,SIIACAT,SP70
          CALL      RSSIIF2
CATA4000  CALL      RKSIIF2
          BRANCH    OVRCD,CATA5000
          MATCH     SIIFCAT,SIIACAT
          GOTO      CATA5000 IF NOT EQUAL
          COMPARE   ZERO,SIIFATY
          GOTO      CATA4000 IF NOT EQUAL
          ADD       ONE,SECTOR
          STORE     SIIFALI,SECTOR,CSIFDE01,CSIFDE02,CSIFDE03,CSIFDE04:
                                   CSIFDE05,CSIFDE06,CSIFDE07,CSIFDE08
          COMPARE   EIGHT,SECTOR
          GOTO      CATA4000 IF NOT EQUAL
.
CATA5000  MOVE      SIIACAT,KEY7
          MOVE      SIIACAT,CSIFCAT
          CALL      RACSIF1
          IF        OVRCD=0
            CALL      UPCSIF1
          ELSE
            CALL      WRCSIF1
          ENDIF
          CALL      UPKEY000
          GOTO      CATA1000
.
CATA9000  MOVE      "Complete - ",DISPMSG
          CALL      MESSAGE1
.
CATA9999  RETURN
.------------------------------------------------------------
. Update Catalog Master Record
.------------------------------------------------------------
UPCIA000  MOVE      SIIACAT,CSIACAT
          MOVE      SIIADES,CSIADES
          MOVE      SIIASUB,CSIASUB
          MOVE      SIIAISS,CSIAISS
          MOVE      SIIASTI,CSIASTI
          MOVE      SIIAAVC,CSIAAVC
          MOVE      SIIANAT,CSIANAT
          MOVE      SIIAABC,CSIAABC
          MOVE      SIIAPSC,CSIAPSC
          MOVE      SIIAREX,CSIAREX
          MOVE      SIIANON,CSIANON
          MOVE      SIIASAB,CSIASAB
          MOVE      SIIASUS,CSIASUS
          MOVE      SIIADTC,CSIADTC
          MOVE      SIIATMC,CSIATMC
          MOVE      SIIAUSC,CSIAUSC
          MOVE      SP70,CSIAUR1
          MOVE      SP70,CSIAUR2
          MOVE      SP70,CSIAUD1
          MOVE      SP70,CSIAUD2
          MOVE      ZERO,CSIAUY1
          MOVE      ZERO,CSIAUY2
          MOVE      SP70,CSIASPA
.
          MOVE      CSIACAT,KEY7
          CALL      RACSIA1
          IF        OVRCD=0
            CALL      UPCSIA1
          ELSE
            CALL      WRCSIA1
          ENDIF
UPCIA999  RETURN
.------------------------------------------------------------
. Update Key Word Index File
.------------------------------------------------------------
UPKEY000  CALL     CLRCAT00
          PACK     KEYDES60,CSIADES
          CALL     BCATA000
.
          MATCH    SP70,CSIFDE01
          IF       !@EQUAL
            PACK     KEYDES60,CSIFDE01
            CALL     BWORD000
          ENDIF
.
          MATCH    SP70,CSIFDE02
          IF       !@EQUAL
            PACK     KEYDES60,CSIFDE02
            CALL     BWORD000
          ENDIF
.
          MATCH    SP70,CSIFDE03
          IF       !@EQUAL
            PACK     KEYDES60,CSIFDE03
            CALL     BWORD000
          ENDIF
.
          MATCH    SP70,CSIFDE04
          IF       !@EQUAL
            PACK     KEYDES60,CSIFDE04
            CALL     BWORD000
          ENDIF
.
          MATCH    SP70,CSIFDE05
          IF       !@EQUAL
            PACK     KEYDES60,CSIFDE05
            CALL     BWORD000
          ENDIF
.
          MATCH    SP70,CSIFDE06
          IF       !@EQUAL
            PACK     KEYDES60,CSIFDE06
            CALL     BWORD000
          ENDIF
.
          MATCH    SP70,CSIFDE07
          IF       !@EQUAL
            PACK     KEYDES60,CSIFDE07
            CALL     BWORD000
          ENDIF
.
          MATCH    SP70,CSIFDE08
          IF       !@EQUAL
            PACK     KEYDES60,CSIFDE08
            CALL     BWORD000
          ENDIF
.
          PACK     KEY27,CSIACAT,SP70
          CALL     RSCSIC1
UPKEY100  CALL     RKCSIC1            * loop through all linked supply units
          BRANCH   OVRCD,UPKEY999
          MATCH    CSIACAT,CSICCAT
          GOTO     UPKEY999 IF NOT EQUAL
.
          PACK     KEYDES60,CSICPD1
          CALL     BCATA000
.
          PACK     KEYDES60,CSICPD2
          CALL     BCATA000
.
          PACK     KEYDES60,CSICPNO,SP70
          CALL     BCATA000
          GOTO     UPKEY100
.
UPKEY999  RETURN
.------------------------------------------------------------
. Recreate File
.------------------------------------------------------------
CLRCAT00  PACK     KEY22,CSIACAT,SP70
          CALL     RSCSCK2
          CALL     RKCSCK2
          BRANCH   OVRCD,CLRCAT99
          MATCH    CSIACAT,CSCKCAT
          GOTO     CLRCAT99 IF NOT EQUAL
.
          PACK     KEY22,CSCKCAT,CSCKKWD,SP70
          CALL     DECSCK2
          GOTO     CLRCAT00
.
CLRCAT99  RETURN
.-------------------------------------------------
. Format Words for Index
.-------------------------------------------------
BCATA000  CMATCH    SP1,KEYDES60             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYDES60
            GOTO      BCATA000 IF NOT EOS
            GOTO      BCATA999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYDES60,SP30        * reset form pointer
          MOVE      KEY60,KEYDES60
.
          SCAN      SP1,KEYDES60               * Locate the first blank
          GOTO      BCATA100 IF NOT EQUAL
          BUMP      KEYDES60,-1              * go back 1 to end of name
          MOVEFPTR  KEYDES60,CCITEM          * another handly form field
          RESET     KEYDES60                 * reset the form pointer
          SETLPTR   KEYDES60,CCITEM          * set logical length to end of name
.
.         Save this Word
.
BCATA100  MOVE      KEYDES60,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15
          PACK      KEY22,KEY15,CSIACAT
          UNPACK    KEY22,CSCKKWD,CSCKCAT
          CALL      RDCSCK1
          IF        OVRCD=1
            CALL      WRCSCK1
          ENDIF
          GOTO      BCATA190
.
.         Check for any more words
.
BCATA190  SETLPTR   KEYDES60,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYDES60,CCITEM        * reset to this point
          PACK      KEY60,KEYDES60,SP30    * reset form pointer
          MOVE      KEY60,KEYDES60
.
          GOTO      BCATA000
.
BCATA999  RETURN
.------------------------------------------------------------
. Update Supplier/Catalog Records
.------------------------------------------------------------
UPCIC000  MOVE      SIICCAT,CSICCAT
          MOVE      SIICSUP,CSICSUP
          MOVE      SIICSUT,CSICSUT
          MOVE      SIICCCT,CSICCCT
          MOVE      SIICLCT,CSICLCT
          MOVE      SIICLTM,CSICLTM
          MOVE      SIICPNO,CSICPNO
          MOVE      SIICPD1,CSICPD1
          MOVE      SIICPD2,CSICPD2
          MOVE      SIICMAN,CSICMAN
          MOVE      SIICAPO,CSICAPO
          MOVE      SP70,CSICUR1
          MOVE      SP70,CSICUR2
          MOVE      SP70,CSICUD1
          MOVE      SP70,CSICUD2
          MOVE      ZERO,CSICUY1
          MOVE      ZERO,CSICUY2
          MOVE      SP70,CSICSPA
          PACK     KEY27,CSICCAT,CSICSUP,CSICSUT,SP70
          CALL     RACSIC1
          IF       OVRCD=0
            CALL     UPCSIC1
          ELSE
            CALL     WRCSIC1
          ENDIF
.
          RETURN
.
.------------------------------------------------------------
. Convert to Numeric Catalogs
.------------------------------------------------------------
NUMCAT00  DISPLAY  *P1:24,"Convert to Numeric Catalog Numbers. ";
          CALL     CONTQST
          BRANCH   CEXIT,NUMCAT05,NUMCAT99,NUMCAT99
.
NUMCAT05  PACK     KEY7,SP70
          MOVE     ZERO,SECTOR
          CALL     RSCSIA1
NUMCAT10  CALL     RKCSIA1
          BRANCH   OVRCD,NUMCAT99
          MOVE     CSIACAT,SAVKEY7
          MOVE     CSIACAT,KEY7
          SQUEEZE  KEY7
          MOVE     KEY7,NUMCAT7
          MOVE     NUMCAT7,KEY7
          MATCH    KEY7,CSIACAT
          GOTO     NUMCAT10 IF EQUAL
          CALL     RACSIA1
          COMPARE  ZERO,OVRCD
          GOTO     NUMCAT95 IF EQUAL
          ADD      ONE,SECTOR
          IF       SECTOR%100=0
            DISPLAY   *P1:24,"Catalog/Record    : ",KEY7,"/",SECTOR
          ENDIF
.
NUMCAT30  PACK     KEY27,CSIACAT,SP70
          CALL     RSCSIC1
          CALL     RKCSIC1
          BRANCH   OVRCD,NUMCAT40
          MATCH    CSICCAT,CSIACAT
          GOTO     NUMCAT40 IF NOT EQUAL
          MOVE     NUMCAT7,CSICCAT
          CALL     UPCSIC1
          GOTO     NUMCAT30
.
NUMCAT40  PACK     KEY22,CSIACAT,SP70
          CALL     RSCSCK2
          CALL     RKCSCK2
          BRANCH   OVRCD,NUMCAT50
          MATCH    CSCKCAT,CSIACAT
          GOTO     NUMCAT50 IF NOT EQUAL
          MOVE     NUMCAT7,CSCKCAT
          CALL     UPCSCK2
          GOTO     NUMCAT40
.
NUMCAT50  PACK     KEY7,CSIACAT,SP70
          CALL     RDCSIF1
          BRANCH   OVRCD,NUMCAT90
          MOVE     NUMCAT7,CSIFCAT
          CALL     UPCSIF1
.
NUMCAT90  MOVE     CSIACAT,KEY7
          CALL     RDCSIA1
          IF       OVRCD=0
            MOVE     NUMCAT7,CSIACAT
            CALL     UPCSIA1
          ENDIF
          MOVE     SAVKEY7,KEY7
          CALL     RDCSIA1
          GOTO     NUMCAT10
.
NUMCAT95  CLEAR    DISPMSG
          APPEND   "Duplicate Found : ",DISPMSG
          APPEND   KEY7,DISPMSG
          APPEND   " - ",DISPMSG
          RESET    DISPMSG
          CALL     MESSAGE1
          MOVE     SAVKEY7,KEY7
          CALL     RDCSIA1
          GOTO     NUMCAT10
.
NUMCAT99  MOVE      "Complete - ",DISPMSG
          CALL      MESSAGE1
          RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSMASIO/INC
          INC       CSMCIAIO/INC
          INC       CSMCICIO/INC
          INC       CSMCIFIO/INC
          INC       CSMCKYIO/INC
          INC       CSMCREIO/INC
          INC       CSMSKYIO/INC
          INC       SINCIAIO/INC
          INC       SINCICIO/INC
          INC       SINCIFIO/INC
.
          INC       STDGENCD
.
