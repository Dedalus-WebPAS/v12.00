.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.03.01  24.11.2003 David Bell, CAR45397
.           Stopped BAS Code (IBGIBASC) writing to Batch
.           Control entires
.-------------------------------------------------------
. V9.02.01  14.09.2002 Raghunandan Srve, HPS  SRF1839
.           Changed WTMP0000 to fix summarize imported entries
.           Renamed options 6 and 7
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B05 09.02.2001 Sandra Barcham
.           Allow for Fees invoiced transfer
. VF.09.B04 01.02.2001 Sandra Barcham
.           Fix I * D error
. VF.09.B03 01.02.2001 Sandra Barcham
.           Fix temp file length
. VF.09.B02 18.12.2000 Sandra Barcham
.           Write BAS Code (IBGIBASC) to batch file (BCBASC)
. VF.09.B01 17.11.2000 Sandra Barcham
.           Changed FMSGINFD & IO to IBAGINFD & IO
.-------------------------------------------------------
. VF.00.03  01.09.1999 Sandra Barcham
.           Recompiled for change to index fix to FMSJPDA2
.           srf 645667
. VF.00.03  01.09.1999 Sandra Barcham
.           Don't allow posting to locked periods
.           srf 630635
. VF.00.02  11.08.1999 Sandra Barcham
.           Don't allow posting to locked periods
.           srf 630635
. VF.00.01  13.05.1999 Sandra Barcham
.           CCYY must be less than or equal to 3000
.-------------------------------------------------------
ACCOUNT   DIM       12
CONTTYPE  DIM       2
COSTCODE  DIM       12
D2A       DIM       2
DOINGREV  FORM      1                        * 1-Doing the Reversal at present
MAINTYPE  DIM       2
POSTREVF  FORM      1
PREVDATE  DIM       8
STATCNT   FORM      10
SUBJCODE  DIM       12
TEMPUNIQ  FORM      10                       * SRF1839
TEMPDESC  DIM       35                       * SRF1839
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS54
.   Function      :   Load Interface File                     
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APS54DF     
          INC       FMSAMADF    
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSICTFD/INC
          INC       FMSINTFD/INC
          INC       FMSJMAFD/INC
          INC       FMSJPDFD/INC
          INC       FMSLIPFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSSIBFD/INC
          INC       IBABATFD/INC
          INC       IBAGINFD/INC
.=========================
.Local Variable Definition
.-------------------------
GINFILE   DIM      40 * Scr 00 Fld     4
USETRAN   FORM      1 * Scr 00 Fld     6
POSTREVD  DIM       1 * Scr 00 Fld     9
SCONTROL  FORM      1 * Scr 00 Fld    11
DCONTROL  FORM      1 * Scr 00 Fld    12
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS54"
PRGNAM    INIT      "Load Interface File                     "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      INITD000
          CALL      SC00L000
          CALL      DELTM000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA2,"fmsbcfaf"
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmsictaf";
          OPEN      FMSICTA1,"fmsictaf"
          DISPLAY   *P56:24,"Opening fmsintaf";
          OPEN      FMSINTA1,"fmsintaf"
          DISPLAY   *P56:24,"Opening  fmsjmaaf           ";
          OPEN      FMSJMAA1,"fmsjmaaf"          
          DISPLAY   *P56:24,"Opening  fmsjpdaf           ";
          OPEN      FMSJPDA1,"fmsjpdaf"          
          DISPLAY   *P56:24,"Opening fmslipaf";
          OPEN      FMSLIPA1,"fmslipaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,GINFILE 
          MOVE      SP70,FMINCODE
          MOVE      ZERO,USETRAN 
          MOVE      SP70,CPCDATE 
          MOVE      SP70,FMINDESC
          MOVE      SP70,POSTREVD
          MOVE      SP70,CPCDATE 
          MOVE      ZERO,SCONTROL
          MOVE      ZERO,DCONTROL
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMINDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          CALL      SETA0000
          MOVE      FMINCODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMINDESC,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L999,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108
          GOTO     PS00L999
.
PS00L101
          MOVE      GINFILE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      USETRAN,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      FMINDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      POSTREVD,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SCONTROL,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DCONTROL,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L105,SF00L006:
                            SF00L106,SF00L107,SF00L108,SF00L109
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L104,SF00L105,SF00L020:
                            SF00L106,SF00L107,SF00L108,SF00L109
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      RUNINT00
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
          CALL     SELECTED
          MOVE      "2",CKEYTYP
          CALL      KFILE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      GINFILE,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,USETRAN 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      USETRAN,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPERA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          MOVE      "2",CKEYTYP
          CALL      EPREV000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      POSTREVD,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          MOVE      "2",CKEYTYP
          CALL      ERDAT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,SCONTROL
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SCONTROL,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DCONTROL
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DCONTROL,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Init Junk
.----------------------------------------------------------------------
INITD000  CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          MOVE      ZERO,POSTREVF
.
INITD999  RETURN
.----------------------------------------------------------------------
. Delete temp file
.----------------------------------------------------------------------
DELTM000  CALL      DELTEMP
.
DELTM999  RETURN
.----------------------------------------------------------------------
. Set Accept Mode
.----------------------------------------------------------------------
SETA0000
          MOVE      "1",ACCEPT
.
SETA9999  RETURN
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
.----------------------------------------------------------------------
. Run Interface
.----------------------------------------------------------------------
RUNINT00  MOVE      FALSE,EXIT
          MOVE      ZERO,DOINGREV      * Not initially - Srf:125213
.
          MOVE      "90",CLNO          * Setup Report Parameters
          MOVE      "0",CPAGENO
          CLOCK     TIME,CTIMEIS
.
          MATCH     SP8,PREVDATE       * Check Reversal Date Set if Required
          IF        @EQUAL & POSTREVF=1
            MOVE     "Must Set Reversal Date.  ",DISPMSG
            BEEP
            CALL     MESSAGE1
            MOVE     ONE,EXIT          * Return to Prompt
            GOTO     RUNINT99
          ENDIF
.
          MOVE      ZERO,ERRFLAG       * 0=ok, 1=err+print, 2=quit
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2           * save & clear line 24
.
          CALL      CRTTEMP            * create temp file
          UNPACK    SP70,BCHFILE,SIBFILE
.
          CLOSE     IBAGINA1
          STRIP     GINFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      IBAGINA1,GINFILE
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      RUNINT90 IF EQUAL
          MOVE      ZERO,SECTOR
.
RUNINT10  ADD       ONE,SECTOR
          IF        SECTOR%100=0
            DISPLAY   *P1:24,"Verifying : ",*V2LON,SECTOR,*EL;
          ENDIF
          MOVE      ZERO,EXIT
          TRAP      RUNINTEX IF FORMAT
          CALL      RKIBGI1
          TRAPCLR   FORMAT
          BRANCH    EXIT,RUNINT91      * format error ?
          BRANCH    OVRCD,RUNINT30     * end of file ?
.
RUNINT15  MATCH     SP70,IBGILEDG
          IF        @EQUAL
            MOVE      FMINLEDG,IBGILEDG
          ENDIF
          PACK      KEY2,IBGILEDG,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,RUNINT92     * ledger does not exist ?
.
          UNPACK    SP70,FMLIDESC,FMLIREF
          UNPACK    SP70,FMLIDISS,FMLIRESP,FMLICRAC,FMLICRAA
          PACK      KEY5,FMINCODE,IBGILEDG,SP70
          CALL      RDFMLI1
.
          IF        USETRAN=1
            CALL      TRNACC00
          ENDIF
.
          MOVE      "10",CACCTIND
          MOVE      "1",ACCRESET
          PACK      KEY14,IBGILEDG,IBGIACCT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,RUNINT93     * account does not exist ?
.
          COMPARE   TWO,FMAMSTAT
          GOTO      RUNINT96 IF EQUAL
.
          CALL      CKAMA000
          BRANCH    OVRCD,RUNINT94     * valid type ?
          MOVE      FMAMTYPE,SAVTYPE
.
          MOVE      IBGIVALU,TEMPAMT
          MOVE      JA,MAINTYPE
          MOVE      JC,CONTTYPE
          MATCH     "-",IBGISIGN
          IF        @EQUAL
            MOVE      JC,MAINTYPE
            MOVE      JA,CONTTYPE
            MATCH     "8",FMAMTYPE
            IF        @EQUAL
              MULT      SEQ,TEMPAMT
            ENDIF
          ENDIF
.
          MATCH     IBGIREF,SP70       * get REF
          IF        @EQUAL
            MATCH     FMLIREF,SP70
            IF        @EQUAL
              MOVE      FMINREF,IBGIREF
            ELSE
              MOVE      FMLIREF,IBGIREF
            ENDIF
          ENDIF
.
          MATCH     IBGIDESC,SP70      * get DESC
          IF        @EQUAL
            MATCH     FMLIDESC,SP70
            IF        @EQUAL
              MOVE      FMINTDES,IBGIDESC
            ELSE
              MOVE      FMLIDESC,IBGIDESC
            ENDIF
          ENDIF
.
          MATCH     IBGIDISS,SP70      * get DISS
          IF        @EQUAL
            MATCH     FMLIDISS,SP70
            IF        @EQUAL
              MOVE      FMINDISS,IBGIDISS
            ELSE
              MOVE      FMLIDISS,IBGIDISS
            ENDIF
          ENDIF
.
          MATCH     IBGIRESP,SP70      * get RESP
          IF        @EQUAL
            MATCH     FMLIRESP,SP70
            IF        @EQUAL
              MOVE      FMINRESP,IBGIRESP
            ELSE
              MOVE      FMLIRESP,IBGIRESP
            ENDIF
          ENDIF
.
          REP       " 0",IBGIDATE           * get date
          MATCH     "00000000",IBGIDATE
          IF        @EQUAL
            IF        DOINGREV=0
              MOVE      ACCRDATE,TEMPDATE
            ELSE
              MOVE      PREVDATE,TEMPDATE
            ENDIF
          ELSE
            UNPACK    IBGIDATE,D4,D2,D2A
            MATCH     "1900",D4
            GOTO      RUNINT89 IF LESS
            MATCH     "3000",D4
            GOTO      RUNINT89 IF NOT LESS
            MATCH     "01",D2
            GOTO      RUNINT89 IF LESS
            MATCH     "13",D2
            GOTO      RUNINT89 IF NOT LESS
            MATCH     "01",D2A
            GOTO      RUNINT89 IF LESS
            MATCH     "32",D2A
            GOTO      RUNINT89 IF NOT LESS
            MOVE      IBGIDATE,TEMPDATE
          ENDIF
.
          MATCH     IBGICRAC,SP70      * get account code
          IF        @EQUAL
            MATCH     FMLICRAC,SP70
            IF        @EQUAL
              MOVE      FMINCRAC,IBGICRAC
            ELSE
              MOVE      FMLICRAC,IBGICRAC
            ENDIF
          ENDIF
.
          MATCH     IBGICRAA,SP70      * get account code
          IF        @EQUAL
            MATCH     FMLICRAA,SP70
            IF        @EQUAL
              MOVE      FMINCRAA,IBGICRAA
            ELSE
              MOVE      FMLICRAA,IBGICRAA
            ENDIF
          ENDIF
.
.---- check if credit accounts valid ----
.
          UNPACK    SP70,ACCTACCR,ACCTCASH
          MATCH     "8",SAVTYPE        * skip ckeck if stat batch item
          GOTO      RUNINT20 IF EQUAL
.
          MOVE      IBGICRAA,ACCTACCR
          MATCH     SP70,IBGICRAA
          GOTO      RUNINT95 IF EQUAL
.
          MOVE      "1",CACCTIND
          MOVE      "3",ACCRESET
          PACK      KEY14,IBGILEDG,IBGICRAA,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,RUNINT93     * account does not exist ?
.
          CALL      CKAMA000
          BRANCH    OVRCD,RUNINT94     * valid type ?
.
          MATCH     "1",FMINCASH       * check cash acc if required
          GOTO      RUNINT20 IF NOT EQUAL
.
          MOVE      IBGICRAC,ACCTCASH
          MATCH     SP70,IBGICRAC
          GOTO      RUNINT95 IF EQUAL
.
          MOVE      "1",CACCTIND
          MOVE      "2",ACCRESET
          PACK      KEY14,IBGILEDG,IBGICRAC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,RUNINT93     * account does not exist ?
.
          CALL      CKAMA000
          BRANCH    OVRCD,RUNINT94     * valid type ?
.
.---- write to temp file ----
.
RUNINT20
          CALL      WTMP0000
.
          GOTO      RUNINT10
.
.---- create batches ----
.
RUNINT30  BRANCH    ERRFLAG,RUNINT98   * errors found ?
.
          CALL      RDFMCOCJ           * get next batch code
          MATCH     "00000",FMBCJBAT
          GOTO      RUNINT30 IF EQUAL
          PACK      BATCHNO,FMBCJBAT,SP70
          PACK      KEY5,FMBCJBAT,SP70
          CALL      RDFMBC1
          COMPARE   ONE,OVRCD
          GOTO      RUNINT30 IF NOT EQUAL
.
          CALL      CBCH0000           * create accrual or reversal batch
.
. ------- Start> Post Reversal Code - Srf:125213  Quote:7965
          IF        POSTREVF=0 | DOINGREV=1
            GOTO      RUNINT97         * No Reversals or already done it
          ELSE
            MOVE      ONE,DOINGREV   * Doing Reversal at present
            MOVE      PREVDATE,TEMPDATE
          ENDIF
          GOTO      RUNINT30
. ------- End  > Post Reversal Code - Srf:125213  Quote:7965
.
.---- errors ----
.
RUNINT89
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"Invalid Date ",IBGIDATE," on line ",SECTOR:
                    " of file ",GINFILE
          MOVE      "1",ERRFLAG
          GOTO      RUNINT10
.
.
RUNINT90
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"File ",GINFILE," Missing"
          MOVE      "1",ERRFLAG
          GOTO      RUNINT98
.
RUNINT91
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"Format Error on line ",SECTOR," of file ",GINFILE
          MOVE      "1",ERRFLAG
          GOTO      RUNINT98
.
RUNINT92
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"Error on line ",SECTOR," of file ",GINFILE:
                    " - Ledger ",IBGILEDG," Does Not Exist"
          MOVE      "1",ERRFLAG
          GOTO      RUNINT10
.
RUNINT93
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    GINFILE,ERRLINE
          APPEND    " - Account ",ERRLINE
          APPEND    FMAMLEDG,ERRLINE
          APPEND    SLASH,ERRLINE
          APPEND    FMAMACCT,ERRLINE
          APPEND    " Does Not Exist",ERRLINE
.
          MOVE      ZERO,EXIT
          COMPARE   "1",ERRFLAG
          CALL      CACCT000 IF NOT EQUAL        * change account
          BRANCH    EXIT,RUNINT15,RUNINT97       * 0=continue, 1=retry, 2=quit
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      RUNINT10
.
RUNINT94
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    GINFILE,ERRLINE
          APPEND    " - Account ",ERRLINE
          APPEND    FMAMLEDG,ERRLINE
          APPEND    SLASH,ERRLINE
          APPEND    FMAMACCT,ERRLINE
          APPEND    " Has Account Type ",ERRLINE
          APPEND    FMAMTYPE,ERRLINE
.
          MOVE      ZERO,EXIT
          COMPARE   "1",ERRFLAG
          CALL      CACCT000 IF NOT EQUAL        * change account
          BRANCH    EXIT,RUNINT15,RUNINT97       * 0=continue, 1=retry, 2=quit
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      RUNINT10
.
RUNINT95
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *1,"Blank Default Credit Account found for line ":
                    SECTOR," of file ",GINFILE
          MOVE      "1",ERRFLAG
          GOTO      RUNINT98
.
RUNINT96
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CLEAR     ERRLINE
          APPEND    "Error on line ",ERRLINE
          APPEND    SECTOR,ERRLINE
          APPEND    " of file ",ERRLINE
          APPEND    GINFILE,ERRLINE
          APPEND    " - Account ",ERRLINE
          APPEND    FMAMLEDG,ERRLINE
          APPEND    SLASH,ERRLINE
          APPEND    FMAMACCT,ERRLINE
          APPEND    " Account Suspended",ERRLINE
.
          MOVE      ZERO,EXIT
          COMPARE   "1",ERRFLAG
          CALL      CACCT000 IF NOT EQUAL        * change account
          BRANCH    EXIT,RUNINT15,RUNINT97       * 0=continue, 1=retry, 2=quit
.
          MOVE      "1",ERRFLAG
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     *+,ERRLINE
          GOTO      RUNINT10
.
RUNINT97  MOVE      ZERO,EXIT
          BEEP
          KEYIN     *P1:24,*EL,"Interface Complete. Delete Interface File":
                               " (Y/N) ? ",ANS
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      RUNINT99 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      RUNINT97 IF NOT EQUAL
          CLOSE     IBAGINA1,DELETE
          GOTO      RUNINT99
.
RUNINT98  DISPLAY   *P1:24,"Errors Found. Error Report Has Been Created - ";
          CALL      HITENTER
          CALL      UND132
          PRINT     *50,"**** End of Report. NO Batch Created ****"
          MOVE      ZERO,EXIT
.
RUNINT99  RETURN
.**********************************************************************
. Set exit
.**********************************************************************
RUNINTEX
          MOVE      "1",EXIT
          RETURN
.**********************************************************************
.  WTMP - write to temp file                           Called By POST
.**********************************************************************
.
.---- write main (debit for expense/credit for income) entry ----
.
WTMP0000  MATCH     "1",FMINFEEI
          IF        @EQUAL
            MOVE      SP3,IBGIBASC
          ENDIF
          PACK      TEMPDESC,IBGIDESC,SP5
.
.         write imported entries         * SRF1839 begin
.
          IF        DCONTROL=0
            ADD       ONE,TEMPUNIQ
            PACK      KEY97,FMINCASH,MAINTYPE,IBGILEDG,IBGIACCT:
                            IBGIREF,TEMPDATE,IBGIDISS:
                            IBGIRESP,IBGIBASC,TEMPDESC,TEMPUNIQ
            UNPACK    KEY97,NEZACASH,NEZATYPE,NEZALEDG,NEZAACCT:
                            NEZAREF,NEZADATE,NEZADISS:
                            NEZARESP,NEZABASC,NEZADESC,DIM10
            CALL      RDNEZA1
            COMPARE   ONE,OVRCD
            GOTO      WTMP9999 IF NOT EQUAL
.
            MOVE      TEMPAMT,NEZAAMT
            MOVE      IBGIACCT,NEZACACC
            MOVE      DIM10,NEZAUNIQ
            CALL      WRNEZA1
          ELSE
            PACK      KEY97,FMINCASH,MAINTYPE,IBGILEDG,IBGIACCT:
                            IBGIREF,TEMPDATE,IBGIDISS:
                            IBGIRESP,IBGIBASC,TEMPDESC,SP70
            UNPACK    KEY97,NEZACASH,NEZATYPE,NEZALEDG,NEZAACCT:
                            NEZAREF,NEZADATE,NEZADISS:
                            NEZARESP,NEZABASC,NEZADESC,NEZAUNIQ
            CALL      RDNEZA1
            IF        OVRCD=1
              MOVE      TEMPAMT,NEZAAMT
              MOVE      IBGIACCT,NEZACACC
              CALL      WRNEZA1
            ELSE
              ADD       TEMPAMT,NEZAAMT
              CALL      UPNEZA1
            ENDIF
          ENDIF
.
.--------- write system generated entries
.
          IF        SCONTROL=1
            MOVE      "Batch Control    ",IBGIREF
            MOVE      ACCRDATE,TEMPDATE
            MOVE      FMINDESC,IBGIDESC
	    MOVE      SP3,IBGIBASC
            PACK      TEMPDESC,IBGIDESC,SP5
            IF        DCONTROL=1
              MATCH     "JA",CONTTYPE
              IF        @EQUAL
                MOVE      "JC",CONTTYPE
                MULT      SEQ,TEMPAMT
              ENDIF
            ELSE
              MATCH     "JC",CONTTYPE
              IF        @EQUAL
                MOVE      "JA",CONTTYPE
                MULT      SEQ,TEMPAMT
              ENDIF
            ENDIF
            PACK      KEY97,FMINCASH,CONTTYPE,IBGILEDG,ACCTACCR:
                            IBGIREF,TEMPDATE,IBGIDISS,IBGIRESP:
                            IBGIBASC,TEMPDESC,SP70
            UNPACK    KEY97,NEZACASH,NEZATYPE,NEZALEDG,NEZAACCT:
                            NEZAREF,NEZADATE,NEZADISS,NEZARESP:
                            NEZABASC,NEZADESC,NEZAUNIQ
          ELSE
            ADD       ONE,TEMPUNIQ
	    MOVE      SP3,IBGIBASC
            PACK      KEY97,FMINCASH,CONTTYPE,IBGILEDG,ACCTACCR:
                            IBGIREF,TEMPDATE,IBGIDISS,IBGIRESP:
                            IBGIBASC,TEMPDESC,TEMPUNIQ,SP70
            UNPACK    KEY97,NEZACASH,NEZATYPE,NEZALEDG,NEZAACCT:
                            NEZAREF,NEZADATE,NEZADISS,NEZARESP:
                            NEZABASC,NEZADESC,DIM10
            MOVE      DIM10,NEZAUNIQ
          ENDIF
.
          CALL      RDNEZA1
          IF        OVRCD=1
            MOVE      TEMPAMT,NEZAAMT
            MOVE      IBGIACCT,NEZACACC
            MOVE      TEMPDESC,NEZADESC
            CALL      WRNEZA1
          ELSE
            ADD       TEMPAMT,NEZAAMT
            CALL      UPNEZA1
          ENDIF                                 * SRF1839 end
.
WTMP9999  RETURN
.**********************************************************************
.  CBCH - create batches                               Called By POST
.        Requires : BATCHNO  (batch number)
.                   FMINCASH (batch type)
.**********************************************************************
CBCH0000
.
. --- Create the files ---
.
          CLEAR     BCHFILE
          APPEND    "bch",BCHFILE
          APPEND    BATCHNO,BCHFILE
          APPEND    SP10,BCHFILE
          RESET     BCHFILE
          REP       " 0",BCHFILE
          PREP      BATFILE,BCHFILE
.
          CLEAR     SIBFILE
          APPEND    "sib",SIBFILE
          APPEND    BATCHNO,SIBFILE
          APPEND    SP10,SIBFILE
          RESET     SIBFILE
          REP       " 0",SIBFILE
          PREP      FMSSIBA1,SIBFILE
          MOVE      ZERO,STATCNT
.
. --- Do Header Sectors first ---
.
. --- Set up null feilds
.
          UNPACK    SP70,BC0DIM2,BC0DIM6,BC1PAYT
          MOVE      ZERO,BC0NXTSW
          MOVE      ZERO,BC0BTCHT
          MOVE      ZERO,BC0SUPBC
          MOVE      ZERO,BC0SPLTK
          MOVE      ZERO,BC0SPLTP
          MOVE      ZERO,BC0SPSEC
          MOVE      ZERO,BC0DISC
.
. --- Set up header values ---
.
          IF        DOINGREV=0
            UNPACK    ACCRDATE,CCENT,CYEAR,CMON,CDAY
          ELSE
            UNPACK    PREVDATE,CCENT,CYEAR,CMON,CDAY
          ENDIF
          PACK      BC1BDATE,CDAY,CMON,CCENT,CYEAR,SP70
          REP       " 0",BC1BDATE
.
          MOVE      ONE,BC0ONE
          MOVE      TWO,BC0NXTSC
          MOVE      FIVE,BC1STAT
          MOVE      "HD",BC1HEAD
          MOVE      BATCHNO,BC1BATCH
          MOVE      ZERO,BC1KEYT
          MOVE      ZERO,BC1ACCT
          MOVE      ONE,BC1NOTR
          PACK      BC1DATE,CDD,CMM,CCC,CYY
          REP       " 0",BC1DATE
          MOVE      PASSCODE,BC1OPER
          MOVE      NEZALEDG,BC1LEDG
.
          MATCH     "1",FMINCASH
          IF        @EQUAL
            MOVE      CJ,BC1TRAN
          ELSE
            MOVE      JA,BC1TRAN
          ENDIF
.
          MOVE      NEZARESP,BC1RESP
          MOVE      NEZADISS,BC1DISS
.
          MOVE      ZERO,BC1REORG
          MOVE      ZERO,BC1REST
          MOVE      ZERO,BC1UTYPE
.
          CALL      WRBAT0                 * write sector 0
          CALL      WRBAT1                 * write sector 1
.
          CALL      PDTL0000               * process data for details sectors
          CLOSE     BATFILE
.
CBCH9999  RETURN
.*************************************************************************
.* PDTL - Process the detail sectors of the batch file   Called by CBCH  *
.*************************************************************************
PDTL0000  PACK      KEY97,FMINCASH,SP70    * SRF 1839 changed key
          MOVE      ZERO,DEBTOT
          MOVE      ZERO,F8
          DISPLAY   *P1:24,"Creating Batch ",*V2LON,BATCHNO
          CALL      RSNEZA1
.
PDTL1000  CALL      RKNEZA1               * read next transaction detail record
          BRANCH    OVRCD,PDTL9000
.
          MATCH     FMINCASH,NEZACASH     * still on the right batch type ?
          GOTO      PDTL9000 IF NOT EQUAL
          ADD       ONE,F8
          IF        F8%100=0
            DISPLAY   *P1:24,"Creating Batch ",*V2LON,BATCHNO,"/",F8:
                      *HOFF," : ",*V2LON,NEZALEDG,SLASH,NEZAACCT,*EL;
          ENDIF
.
          PACK      KEY14,NEZALEDG,NEZAACCT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,PDTL1000        * should not happen !!
.
          MATCH     "8",FMAMTYPE
          GOTO      PDTL3000 IF EQUAL
.
. --- set up sector variables
. This section is rubbish the sign in the interface determines if the
. transaction is a debit or a credit. The amount should not vary.
.
.          IF        NEZAAMT<0
.            MULT      SEQ,NEZAAMT
.            MATCH     JC,NEZATYPE
.            IF        @EQUAL
.              MOVE      JA,NEZATYPE
.            ELSE
.              MOVE      JC,NEZATYPE
.            ENDIF
.          ENDIF
.
. ------- Start> Post Reversal Code SRF:125213 QUOTE:7965
          IF        DOINGREV=1
            MATCH     JA,NEZATYPE
            IF        @EQUAL
              MOVE      JC,NEZATYPE
            ELSE
              MOVE      JA,NEZATYPE
            ENDIF
          ENDIF
. ------- End> Post Reversal Code SRF:125213 QUOTE:7965
.
          MOVE      FIVE,BCSTAT
          MOVE      ZERO,BCINVT
          MOVE      ZERO,BCDISC
          MOVE      ZERO,BCCOMXA
          UNPACK    SP70,BCCHEQ,BCCOMX,BCCONT,BCDISCC
          MOVE      NEZATYPE,BCTRAN
          MOVE      NEZALEDG,BCLEDG
          MOVE      NEZAACCT,BCACCT
          MOVE      NEZACACC,BCACCTP
          MOVE      NEZADISS,BCDISS
          MOVE      NEZAREF,BCREFER
          MOVE      "00000",BCRED
          MOVE      "00000000",BCDATCX
          MOVE      BC1BATCH,BCBATCH
          MOVE      NEZARESP,BCRESP
          MOVE      NEZADESC,BCTRAND
          MOVE      BC1BDATE,BCDATEE
          UNPACK    NEZADATE,CCENT,CYEAR,CMON,CDAY
          PACK      BCDATED,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BCDATED
          UNPACK    SP70,BCCEORD,BCCELNE,BCCATA,BCCHQAC,BCCDESC,BCCSPAR
          MOVE      NEZAAMT,BCAMT
.
          COMPARE   ZERO,BCAMT          * dont post a batch with zero amount
          GOTO      PDTL1000 IF EQUAL
.
          MOVE      NEZABASC,BCBASC
          CALL      WRBATC
          ADD       ONE,BC0NXTSC
          MATCH     JC,NEZATYPE
          GOTO      PDTL1000 IF NOT EQUAL
.
          ADD       BCAMT,DEBTOT
          GOTO      PDTL1000
.
.---- stat batch ----
.
PDTL3000  MOVE      NEZALEDG,FMSBLEDG
          MOVE      NEZAACCT,FMSBACCT
          MOVE      NEZADESC,FMSBDESC
          MOVE      NEZAREF,FMSBREF
          MOVE      NEZAAMT,FMSBUNIT
          IF        DOINGREV=1
            MULT      SEQ,FMSBUNIT
          ENDIF
          CALL      WRFMSB1
          ADD       ONE,STATCNT
          GOTO      PDTL1000
.
.---- no more data to add ----
.
PDTL9000  CLOSE     FMSSIBA1            * delete if stat file empty
          COMPARE   ZERO,STATCNT
          GOTO      PDTL9500 IF NOT EQUAL * update file if there is some Stats
          COMPARE   TWO,BC0NXTSC        * no details sectors?
          GOTO      PDTL9500 IF NOT EQUAL * update file if there is some
          CLOSE     BATFILE             * delete file if none
          CLEAR     CMDLINE
          APPEND    "rm ",CMDLINE
          APPEND    BCHFILE,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          GOTO      PDTL9999
.
PDTL9500  CALL      WRBATS0              * update next available sector variable
          CALL      RDBAT1
          MOVE      BC0NXTSC,BC1NOTR
          SUB       TWO,BC1NOTR
          MOVE      DEBTOT,BC1KEYT
          MOVE      DEBTOT,BC1ACCT
          CALL      WRBAT1
.
          IF        DOINGREV=0
            MOVE      ACCRDATE,TEMPDATE
          ELSE
            MOVE      PREVDATE,TEMPDATE
          ENDIF
.
          MATCH     "1",FMINAUTH       * auth required ?
          IF        @EQUAL
            CALL      RDFMCOJ5         * read last journal id
            MOVE      FMJONEX5,FMJMJID * use next journal id number
            ADD       ONE,FMJONEX5     * increment next journal number
            CALL      WRFMCOJ5         * read next journal id
.
            MOVE      FMJOPRE5,FMJMJTY
            PACK      FMJMDESC,FMINDESC,SP70
            PACK      FMJMDENT,CCC,CYY,CMM,CDD,SP70
            REP       " 0",FMJMDENT
            MOVE      BC1LEDG,FMJMLEDG
            MOVE      "9",FMJMSTAT
            MOVE      FMINCASH,FMJMCASH
            MOVE      "0",FMJMREV
            MOVE      TEMPDATE,FMJMPPOS
            PACK      FMJMPDAT,CCC,CYY,CMM,CDD,SP70
            MOVE      BC1BATCH,FMJMPBAT
            PACK      KEY7,FMJMJTY,FMJMJID,SP70
            CALL      DEFMJM1
            CALL      WRFMJM1
.
            MOVE      BC1BATCH,FMJPBAT
            MOVE      FMJMJTY,FMJPJTY
            MOVE      FMJMJID,FMJPJID
            MOVE      TEMPDATE,FMJPPDAT
            MOVE      TEMPDATE,FMJPCDAT
            MOVE      FMINCASH,FMJPTYP
            MOVE      ZERO,FMJPREV
            MOVE      BC1ACCT,FMJPDTOT
            MOVE      ZERO,FMJPAUTH
            PACK      KEY5,FMJPBAT,SP70
            CALL      DEFMJP1
            CALL      WRFMJP1
          ELSE
            PACK      KEY5,BC1BATCH,SP70
            UNPACK    KEY5,FMBCBAT
            MOVE      "2",FMBCSTA
            MOVE      BC0NXTSC,FMBCSEC
            MOVE      BC1ACCT,FMBCTOT
            MOVE      ZERO,FMBCDIS
            MOVE      BC1OPER,FMBCUID
            MOVE      BC1LEDG,FMBCLED
            MOVE      BC1TRAN,FMBCTRT
            MOVE      BC0SUPBC,FMBCINV
            UNPACK    BC1DATE,CDAY,CMON,CCENT,CYEAR
            PACK      FMBCDAT,CCENT,CYEAR,CMON,CDAY
            UNPACK    BC1BDATE,CDAY,CMON,CCENT,CYEAR
            PACK      FMBCPDAT,CCENT,CYEAR,CMON,CDAY
            PACK      FMBCCDAT,CCENT,CYEAR,CMON,CDAY
            MOVE      SP70,FMBCSPAR
            CALL      DEFMBC1
            CALL      WRFMBC1
          ENDIF
.
PDTL9999  RETURN
.**********************************************************************
.  CACCT - Handle invalid accounts                    Called By RUNINT
.        Requires - ERRLINE  (problem with current account)
.                   ACCRESET (account to reset 1=main acct, 2=cash, 3=accrual)
.        Returns  - EXIT     (0=cont, 1=retry, 2=quit)
.**********************************************************************
CACCT000  DISPLAY   *P1:23,*B,*+,ERRLINE,*EL:
                    *P1:24,"(",*V2LON:
                    "C",*HOFF,")ontinue & Create Error Report, (",*V2LON:
                    "M",*HOFF,")odify Account, (",*V2LON:
                    "Q",*HOFF,")uit ? ",*EL;
          KEYIN     *V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "C",ANS
          GOTO      CACCT900 IF EQUAL
          MATCH     "M",ANS
          GOTO      CACCT100 IF EQUAL
          MATCH     "Q",ANS
          GOTO      CACCT970 IF EQUAL
          BEEP
          GOTO      CACCT000
.
.----- modify ----
.
CACCT100  DISPLAY   *P1:24,"Ledger/Account : ",*EL;
          MOVE      "18",CCOL
          MOVE      "24",CVERT
          CALL      KFMLAA00
          BRANCH    EXIT,CACCT000,CACCT000
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,SLASH;
          MOVE      FMLALEDG,FMAMLEDG
.
          MOVE      "21",CCOL
          MOVE      "24",CVERT
          CALL      KFMAMA00
          BRANCH    EXIT,CACCT100,CACCT000
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT:
                    *HOFF,"     OK ",*V2LON:
                    "Y",*HOFF,"/",*V2LON,"N",*HOFF," ? ";
.
          MOVE      "47",CCOL
          MOVE      "24",CVERT
          CALL      YORN0000
          COMPARE   "1",FYESNO
          GOTO      CACCT100 IF NOT EQUAL
.
          MOVE      FMAMLEDG,IBGILEDG
          STORE     FMAMACCT,ACCRESET,IBGIACCT,IBGICRAC,IBGICRAA
          GOTO      CACCT950
.
.
CACCT900  MOVE      ZERO,EXIT          * continue
          GOTO      CACCT999
.
CACCT950  MOVE      ONE,EXIT           * retry
          GOTO      CACCT999
.
CACCT970  MOVE      TWO,EXIT           * quit
          GOTO      CACCT999
.
CACCT999  DISPLAY   *P1:23,*EL;
          RETURN
.---------------------------------------------------------------------
. Check Translation Table for Account, Cost Centre, and Subjective
.---------------------------------------------------------------------
TRNACC00  PACK      KEY18,FMINCODE,ONE,IBGILEDG,IBGIACCT
          CALL      RDFMIC1
          BRANCH    OVRCD,TRNACC20
.
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          PRINT     "Line ",SECTOR,"  Account ",IBGILEDG,"/",IBGIACCT:
                    "  Translated to Account ",FMICTTL,"/",FMICTTA
          ADD       ONE,CLNO
          MOVE      FMICTTL,IBGILEDG
          MOVE      FMICTTA,IBGIACCT
          GOTO      TRNACC99
.
TRNACC20  MOVE      IBGIACCT,ACCOUNT
          CALL      GCOD0000
          PACK      KEY18,FMINCODE,TWO,IBGILEDG,COSTCODE
          CALL      RDFMIC1
          BRANCH    OVRCD,TRNACC40
.
          MOVE      FMICTTA,COSTCODE
          CALL      BCOD0000
.
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          PRINT     "Line ",SECTOR,"  Account ",IBGILEDG,"/",IBGIACCT:
                    "  Cost Centre Translated New Account ",FMICTTL,"/",ACCOUNT
          ADD       ONE,CLNO
          MOVE      FMICTTL,IBGILEDG
          MOVE      ACCOUNT,IBGIACCT
.
TRNACC40  PACK      KEY18,FMINCODE,THREE,IBGILEDG,SUBJCODE
          CALL      RDFMIC1
          BRANCH    OVRCD,TRNACC99
.
          MOVE      FMICTTA,SUBJCODE
          CALL      BCOD0000
.
          COMPARE   "55",CLNO
          CALL      HEAD132 IF NOT LESS
          PRINT     "Line ",SECTOR,"  Account ",IBGILEDG,"/",IBGIACCT:
                    "  Subjective Translated New Account ",FMICTTL,"/",ACCOUNT
          ADD       ONE,CLNO
          MOVE      FMICTTL,IBGILEDG
          MOVE      ACCOUNT,IBGIACCT
.
TRNACC99  RETURN
.****************************************************************************
.  GCOD - get subjective and cost codes from ACCOUNT code    Called by lots
.        Requires - ACCOUNT   (ACCOUNT code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.****************************************************************************
.  BCOD - get account code from subjective and cost codes    Called by lots
.        Requires - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD2B  (separater char)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - ACCOUNT   (account code)
.****************************************************************************
BCOD0000  STORE     COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      ACCOUNT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          COMPARE   FMSUUD2A,ONE
          GOTO      BCOD1000 IF NOT EQUAL         * separator char in use ?
.
          PACK      ACCOUNT,ACCOUNT,FMSUUD2B      * include sep. char
.
BCOD1000  PACK      ACCOUNT,ACCOUNT,SUBJCODE,SP70 * add subj code
.
BCOD9999  RETURN
.
.----------------------------------------------------------------------
. Keyin File Name
. Note : EXIT (0=Ok, 2=Exitchar)
.----------------------------------------------------------------------
KFILE000
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,GINFILE
          PACK      GINFILE,GINFILE,SP70
          MATCH     SP70,GINFILE
          GOTO      KFILE9500 IF EQUAL
          MATCH     EXITCHAR,GINFILE
          GOTO      KFILE9500 IF EQUAL
.
          STRIP     GINFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      IBAGINA1,GINFILE
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
          REP       "./",GINFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      IBAGINA1,GINFILE
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
          MOVE      "File Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFILE0000
.
KFILE900  MOVE      ZERO,EXIT          * return to prompt
          GOTO      KFILE9999
.
KFILE950  MOVE      TWO,EXIT           * exit
.
KFILE999  RETURN
.-------------------------------------------------------------
. Locking Standard Routine to Enter Key Field
.-------------------------------------------------------------
EKEYF000  MOVE      ZERO,CKEYTYP
          CALL      UUFMIN1                 * Unlock Previous Locks
          CALL      KFMINA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,EKEYF999,EKEYF999  * Exit 1 Null Entry 2 Exitchar
.
EKEYF100  PACK      KEY3,FMINCODE           * Setup Key to File
          CALL      RLFMIN1                 * Read and Lock Record
          BRANCH    OVRCD,EKEYF000,EKEYF200 * OVRCD=1 Not on File 2 Locked
          MOVE      ZERO,EXIT               * Setup Exit Field
          MOVE      ZERO,OVRCD              * Setup Ovrcd Field
          GOTO      EKEYF999
.
EKEYF200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EKEYF100 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * Exit
          GOTO      EKEYF200 IF NOT EQUAL   * Must be a valid response
          GOTO      EKEYF000                * Return to Keyin
.
EKEYF999  RETURN                            * End of Routine
.----------------------------------------------------------------------
. Keyin Accrual Period
.----------------------------------------------------------------------
KPERA000  PACK      ACCRDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",ACCRDATE
          UNPACK    ACCRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,KPERA000
          PACK      ACCRDATE,CCENT,CYEAR,CMON,CDAY
.
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          PACK      KEY2,SP70
          CALL      RSFMLA1
          CALL      RKFMLA1
          CALL      CFYR0000           * get period data
.
          IF        EXIT=1
            MOVE      "Invalid Date - ",DISPMSG
            GOTO      KPERA950
          ENDIF
.
          IF        PERLOCK<>0
            MOVE      "Period Locked - ",DISPMSG
            GOTO      KPERA950
          ENDIF
.
          UNPACK    ACCRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCCOL:CVERT,*V2LON,CPCDATE,SP1,*HOFF,PERDESC;
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   " Ending ",CPCDATE
.
          UNPACK    ACCRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      ZERO,EXIT
          GOTO      KPERA999
.
KPERA950  CALL      MESSAGE1
          MOVE      TWO,EXIT
          MOVE      SP70,CPCDATE
          GOTO      KPERA999
.
KPERA999  RETURN
.-----------------------------------------------------------------------
. Enter Post Reversal Flag (Y/N)
. Returns: POSTREVF  (1=Yes  0=No)
.-----------------------------------------------------------------------
EPREV000  MOVE      FALSE,EXIT
          MOVE      ANSN,POSTREVD
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,*RV,POSTREVD
.
          PACK      POSTREVD,POSTREVD,SP10
          REP       UPPLOW,POSTREVD
          MATCH     SP1,POSTREVD
          IF        @EQUAL
            MOVE      ONE,EXIT
            GOTO      EPREV999
          ENDIF
.
          MATCH     EXITCHAR,POSTREVD
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      EPREV999
          ENDIF
.
          TYPE      POSTREVD
          GOTO      EPREV900 IF EQUAL
.
          MOVE      POSTREVD,ANS
          REP       "Y1y1N0n0",ANS
          TYPE      ANS
          GOTO      EPREV900 IF NOT EQUAL
.
          MOVE      ANS,POSTREVF
          IF        POSTREVF=0
            MOVE      SP8,PREVDATE
          ENDIF
          GOTO      EPREV999
.
EPREV900  DISPLAY   *P1:24,*EL,*B,"Invalid Option.  ";
          CALL      HITENTER
          GOTO      EPREV000
.
EPREV999  RETURN
.-----------------------------------------------------------------------
. Enter Post Reversal to Date
.-----------------------------------------------------------------------
ERDAT000  MOVE      FALSE,EXIT
          IF        POSTREVF=0
            MOVE      SP10,PREVDATE
            MOVE      "NOT NEEDED",CPCDATE
            GOTO      ERDAT999
          ENDIF
.
          PACK      PREVDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",PREVDATE
          UNPACK    PREVDATE,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,ERDAT000
          PACK      PREVDATE,CCENT,CYEAR,CMON,CDAY
.
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          PACK      KEY2,SP70
          CALL      RSFMLA1
          CALL      RKFMLA1
          CALL      CFYR0000           * get period data
.
          IF        EXIT=1
            MOVE      "Invalid Date - ",DISPMSG
            GOTO      ERDAT950
          ENDIF
.
          IF        PERLOCK<>0
            MOVE      "Locked Period - ",DISPMSG
            GOTO      ERDAT950
          ENDIF
.
          UNPACK    PREVDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCCOL:CVERT,*V2LON,CPCDATE,SP1,*HOFF,PERDESC;
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   " Ending ",CPCDATE
.
          UNPACK    PREVDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      ZERO,EXIT
          GOTO      ERDAT999
.
ERDAT950  CALL      MESSAGE1
          MOVE      TWO,EXIT
          MOVE      SP70,CPCDATE
          GOTO      ERDAT999
.
ERDAT999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APS54CD     
          INC       FMSAMAIO/INC
          INC       FMSAMAKY    
          INC       FMSBCFIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSICTIO/INC
          INC       FMSINTIO/INC
          INC       FMSINTKY    
          INC       FMSJMAIO/INC
          INC       FMSJPDIO/INC
          INC       FMSLIPIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSSIBIO/INC
          INC       IBABATIO/INC
          INC       IBAGINIO/INC
.
          INC       STDGENCD
.
