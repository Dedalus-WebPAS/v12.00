. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS29                                             *
. * Desc      :   Delete a Ledger                                      *
. **********************************************************************
. * Date      :   03.09.1991                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.02  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.01  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS29
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUDADF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSAMAFD/INC
          INC       FMSBPFFD/INC
          INC       FMSBTYFD/INC
          INC       FMSBUDFD/INC
          INC       FMSSBUFD/INC
          INC       FMSCAFFD/INC
          INC       FMSCCAFD/INC
          INC       FMSCSAFD/INC
          INC       FMSCTRFD/INC
          INC       FMSDSFFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLBUFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSLMDFD/INC
          INC       FMSRSFFD/INC
          INC       FMSSBAFD/INC
          INC       FMSSCZFD/INC
          INC       FMSSLBFD/INC
          INC       FMSSMAFD/INC
          INC       FMSSSCFD/INC
          INC       FMSTCFFD/INC
          INC       FMSSTRFD/INC
          INC       FMSTRNFD/INC
          INC       FMSUWPFD/INC
          INC       FMSXCSFD/INC
          INC       FMSCONFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
.
FILENAME  DIM       8
FMSA      INIT      "fmsa"
FMSB      INIT      "fmsb"
FMSC      INIT      "fmsc"
FMSD      INIT      "fmsd"
FMSL      INIT      "fmsl"
FMSO      INIT      "fmso"
FMSP      INIT      "fmsp"
FMSR      INIT      "fmsr"
FMSS      INIT      "fmss"
FMST      INIT      "fmst"
FMSZ      INIT      "fmsz"
.
KOPT      INIT      "               "   * vars for KOPT
KOPT1     INIT      "Delete a Ledger"
KOPT2     INIT      "               "
KOPT3     INIT      "               "
KOPT4     INIT      "               "
.
ACCEPT    FORM      1        * accept mode (1=on)
OPTIONA   FORM      2        * screen A selection keyin var
SCRNO     FORM      2        * screen number
.
PRGID     INIT      "IBAFMS29"
PRGNAM    INIT      "Delete a Ledger"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      KOPT0000           * get option
          BRANCH    COPTION,ML1000
          GOTO      ML9999             * exit
.
.---- option 1 ----
.
ML1000    CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML0100        * exit screen
.
          CALL      POST0000           * post data
          GOTO      ML0100             * get next selection
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD
          CALL      OUDA0000           * Open update audit files
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsbtyaf";
          OPEN      FMSBTYA1,"fmsbtyaf"
.
          DISPLAY   *P64:24,"fmsbpfaf";
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmscafaf";
          OPEN      FMSCAFA1,"fmscafaf"
.
          DISPLAY   *P64:24,"fmsccaaf";
          OPEN      FMSCCAA1,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmslmdaf";
          OPEN      FMSLMDA1,"fmslmdaf"
.
          DISPLAY   *P64:24,"fmsrsfaf";
          OPEN      FMSRSFA1,"fmsrsfaf"
          OPEN      FMSRSFA2,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmssbaaf";
          OPEN      FMSSBAA1,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmssscaf";
          OPEN      FMSSSCA1,"fmssscaf"
.
          DISPLAY   *P64:24,"fmstcfaf";
          OPEN      FMSTCFA1,"fmstcfaf"
          OPEN      FMSTCFA2,"fmstcfaf"
.
          DISPLAY   *P64:24,"fmsuwpaf";
          OPEN      FMSUWPA1,"fmsuwpaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";
          OPEN      FMSXCSA1,"fmsxcsaf"
.
INIT9999  DISPLAY   *P1:24,*EF;
          RETURN
.******************************************************************************
.  KOPT - Get desired function                    Called by ML                 
.        Displays option at *P50:2                                             
.        Requires : KOPT1, KOPT2, KOPT3, etc  (descriptions of options)        
.        Returns  : COPTION  (desired option)                                  
.******************************************************************************
KOPT0000  DISPLAY   *P50:2,*EF:             * display screen
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = ",KOPT1;
.
KOPT1000  KEYIN     *P1:7,"Select Option : _",*EL:
                    *P17:7,*V2LON,COPTION
          COMPARE   ZERO TO COPTION
          GOTO      KOPT9999 IF EQUAL       * exit ?
.
          MOVE      SP70,KOPT
          LOAD      KOPT,COPTION,KOPT1,KOPT2,KOPT3,KOPT4
          MATCH     SP70,KOPT
          GOTO      KOPT9000 IF NOT EQUAL   * valid option entered ?
          BEEP                              * illegal option, get another
          GOTO      KOPT1000
.
KOPT9000  DISPLAY   *P50:2,*V2LON,KOPT;     * display option
.
KOPT9999  RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  DISPLAY   *P1:3,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". Ledger to Delete     : ":
                          *V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
.
SCRA9999  RETURN
.******************************************************************************
.  SELA - Perform Screen A                       Called by ML
.         Returns : EXIT     (1=exit)
.******************************************************************************
SELA0000  UNPACK    SP70,FMLALEDG,FMLADESC
          MOVE      ONE,ACCEPT         * go into accept mode
          MOVE      ZERO,OPTIONA       * reset item desired
          CALL      SCRA0000           * display screen A
          MOVE      "1",SCRNO
.
SELA0100  ADD       ONE,OPTIONA        * get next item
          BRANCH    ACCEPT,SELA0110    * in accept mode ?
          CALL      MQSA0000           * get option if not in accept mode
          MOVE      CCITEM,OPTIONA
.
SELA0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONA,CVERT
          MOVE      OPTIONA,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELA9500,SELA9000:                       * quit, continue
                       SELA1100                                 * execute option
          BRANCH    ACCEPT,SELA0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELA0100           * get another option
.
SELA0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELA0100
.
.---- option 1 ----
.
SELA1100  CALL      KLMAFM00                * get data
          BRANCH    EXIT,SELA1190,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP2,FMLADESC;
          GOTO      SELA0100
.
SELA1190  BRANCH    EXIT,SELA9500
          GOTO      SELA1100
.
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.**********************************************************************
.  MQSA - select, post, cancel, run report              Called By SELA
.        Returns  - CCITEM   (0=delete ledger, -1=exit, other=select
.**********************************************************************
MQSA0000  MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "D",*HOFF,")elete, e(",*V2LON:
                    "X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQSA0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  D",CCITEMD      * delete ledger ?
          GOTO      MQSA9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  X",CCITEMD      * exit ?
          GOTO      MQSA9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQSA9999 IF NOT LESS
.
          BEEP
          GOTO      MQSA0000
.
MQSA9999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.**********************************************************************
.
.---- check if data exists for ledger ----
.
POST0000  PACK      KEY6,FMLALEDG,SP70
          CALL      RSFMLC1
.
POST1000  CALL      RKFMLC1
          BRANCH    OVRCD,POST2000     * no more years ?
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      POST2000 IF NOT EQUAL
.
          DISPLAY   *P1:24,"Deleting Summary Data     : ",*V2LON,FMLCYEAR,*EF;
.
          CALL      CSUM0000           * check summary data
....      BRANCH    EXIT,POST9999      * data found ?
.....
          GOTO      POST1000
.
.
POST2000  DISPLAY   *P1:24,"Delete Budget Data   ",*EF;
          CALL      CBUD0000           * check budget files
....      BRANCH    EXIT,POST9999      * data found ?
.
          CALL      DELT0000           * delete ledger
.
POST9999  RETURN
.**********************************************************************
.  DELT - Delete ledger data                           Called By POST
.        Requires - FMSLMAAF record read
.**********************************************************************
DELT0000  PACK      KEY14,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmsamaaf",*EF;
.
DELT0100  CALL      RSFMAM1
          CALL      RKFMAM1
          BRANCH    OVRCD,DELT0190
          MATCH     FMLALEDG,FMAMLEDG
          GOTO      DELT0190 IF NOT EQUAL
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          DISPLAY   *P20:24,*V2LON,KEY14,*EF;
          CALL      DEFMAM1
          GOTO      DELT0100
.
DELT0190  PACK      KEY9,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmsbpfaf",*EF;
.
DELT0200  CALL      RSFMBP1
          CALL      RKFMBP1
          BRANCH    OVRCD,DELT0290
          MATCH     FMLALEDG,FMBPLEDG
          GOTO      DELT0290 IF NOT EQUAL
          PACK      KEY9,FMBPLEDG,FMBPYEAR,FMBPCODE,SP70
          DISPLAY   *P20:24,*V2LON,KEY9,*EF;
          MOVE      FOUR,AUDTTYPE
          CALL      WAFMBP00
          CALL      DEFMBP1
          GOTO      DELT0200
.
DELT0290  PACK      KEY14,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmscafaf",*EF;
.
DELT0300  CALL      RSFMCA1
          CALL      RKFMCA1
          BRANCH    OVRCD,DELT0390
          MATCH     FMLALEDG,FMCALED
          GOTO      DELT0390 IF NOT EQUAL
          PACK      KEY14,FMCALED,FMCAACC,SP70
          DISPLAY   *P20:24,*V2LON,KEY14,*EF;
          CALL      DEFMCA1
          GOTO      DELT0300
.
DELT0390  PACK      KEY14,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmsccaaf",*EF;
.
DELT0400  CALL      RSFMCC1
          CALL      RKFMCC1
          BRANCH    OVRCD,DELT0490
          MATCH     FMLALEDG,FMCCLEDG
          GOTO      DELT0490 IF NOT EQUAL
          PACK      KEY14,FMCCLEDG,FMCCCOCE,SP70
          DISPLAY   *P20:24,*V2LON,KEY14,*EF;
          CALL      DEFMCC1
          GOTO      DELT0400
.
DELT0490  PACK      KEY14,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmscsaaf",*EF;
.
DELT0500  CALL      RSFMCS1
          CALL      RKFMCS1
          BRANCH    OVRCD,DELT0590
          MATCH     FMLALEDG,FMCSLED
          GOTO      DELT0590 IF NOT EQUAL
          PACK      KEY14,FMCSLED,FMCSACC,SP70
          DISPLAY   *P20:24,*V2LON,KEY14,*EF;
          CALL      DEFMCS1
          GOTO      DELT0500
.
DELT0590  PACK      KEY6,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmslmcaf",*EF;
.
DELT0600  CALL      RSFMLC1
          CALL      RKFMLC1
          BRANCH    OVRCD,DELT0690
          MATCH     FMLALEDG,FMLCLEDG
          GOTO      DELT0690 IF NOT EQUAL
          PACK      KEY6,FMLCLEDG,FMLCYEAR,SP70
          DISPLAY   *P20:24,*V2LON,KEY6,*EF;
          CALL      DEFMLC1
          GOTO      DELT0600
.
DELT0690  PACK      KEY11,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmslmdaf",*EF;
.
DELT0700  CALL      RSFMLD1
          CALL      RKFMLD1
          BRANCH    OVRCD,DELT0790
          MATCH     FMLALEDG,FMLDLEDG
          GOTO      DELT0790 IF NOT EQUAL
          PACK      KEY11,FMLDLEDG,FMLDYEAR,FMLDPERD,FMLDLNO,SP70
          DISPLAY   *P20:24,*V2LON,KEY11,*EF;
          CALL      DEFMLD1
          GOTO      DELT0700
.
DELT0790  PACK      KEY26,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmsrsfaf",*EF;
.
DELT0800  CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,DELT0890
          MATCH     FMLALEDG,FMRFLED
          GOTO      DELT0890 IF NOT EQUAL
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          DISPLAY   *P20:24,*V2LON,KEY26,*EF;
          CALL      DEFMRF2
          GOTO      DELT0800
.
DELT0890  PACK      KEY14,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmssbaaf",*EF;
.
DELT0900  CALL      RSFMSA1
          CALL      RKFMSA1
          BRANCH    OVRCD,DELT0990
          MATCH     FMLALEDG,FMSALEDG
          GOTO      DELT0990 IF NOT EQUAL
          PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          DISPLAY   *P20:24,*V2LON,KEY14,*EF;
          CALL      DEFMSA1
          GOTO      DELT0900
.
DELT0990  
.
DELT1090  PACK      KEY31,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmssscaf",*EF;
.
DELT1100  CALL      RSFMTS1
          CALL      RKFMTS1
          BRANCH    OVRCD,DELT1190
          MATCH     FMLALEDG,FMTSTLED
          GOTO      DELT1190 IF NOT EQUAL
          PACK      KEY31,FMTSTLED,FMTSTACC,FMTSASEQ,FMTSSACC,SP70
          DISPLAY   *P20:24,*V2LON,KEY31,*EF;
          CALL      DEFMTS1
          GOTO      DELT1100
.
DELT1190  PACK      KEY33,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmstcfaf",*EF;
.
DELT1200  CALL      RSFMTC1
          CALL      RKFMTC1
          BRANCH    OVRCD,DELT1290
          MATCH     FMLALEDG,FMTCTLED
          GOTO      DELT1290 IF NOT EQUAL
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          DISPLAY   *P20:24,*V2LON,KEY33,*EF;
          CALL      DEFMTC1
          GOTO      DELT1200
.
DELT1290  PACK      KEY17,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmsuwpaf",*EF;
.
DELT1300  CALL      RSFMUW1
          CALL      RKFMUW1
          BRANCH    OVRCD,DELT1390
          MATCH     FMLALEDG,FMUWLEDG
          GOTO      DELT1390 IF NOT EQUAL
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          DISPLAY   *P20:24,*V2LON,KEY17,*EF;
          CALL      DEFMUW1
          GOTO      DELT1300
.
DELT1390  PACK      KEY26,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmsxcsaf",*EF;
.
DELT1400  CALL      RSFMXC1
          CALL      RKFMXC1
          BRANCH    OVRCD,DELT1490
          MATCH     FMLALEDG,FMXCLED
          GOTO      DELT1490 IF NOT EQUAL
          PACK      KEY26,FMXCLED,FMXCSUB,FMXCCOS,SP70
          DISPLAY   *P20:24,*V2LON,KEY26,*EF;
          CALL      DEFMXC1
          GOTO      DELT1400
.
DELT1490  
.
DELT1590  PACK      KEY33,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmstcfaf",*EF;
.
DELT1600  CALL      RSFMTC2
          CALL      RKFMTC2
          BRANCH    OVRCD,DELT1690
          MATCH     FMLALEDG,FMTCSLED
          GOTO      DELT1690 IF NOT EQUAL
          PACK      KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ,SP70
          DISPLAY   *P20:24,*V2LON,KEY33,*EF;
          CALL      DEFMTC2
          GOTO      DELT1600
.
.---- delete for budget links ----
.
DELT1690  PACK      KEY4,SP70
          CALL      RSFMBT1
.
DELT2000  CALL      RKFMBT1
          BRANCH    OVRCD,DELT9000
.
          PACK      FILENAME,FMSL,FMBTCODE,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Deleting ",*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSLBUA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,DELT2290               * file not found ?
          OPEN      FMSLBUA2,FILENAME            * open file
          PACK      KEY14,FMLALEDG,SP70
.
DELT2100  CALL      RSFMBL1
          CALL      RKFMBL1
          BRANCH    OVRCD,DELT2190
          MATCH     FMLALEDG,FMBLTLED
          GOTO      DELT2190 IF NOT EQUAL
          PACK      KEY14,FMBLTLED,FMBLTACC,SP70
          DISPLAY   *P20:24,*V2LON,KEY14,*EF;
          CALL      DEFMBL1
          GOTO      DELT2100
.
DELT2190  PACK      KEY28,FMLALEDG,SP70
.
DELT2200  CALL      RSFMBL2
          CALL      RKFMBL2
          BRANCH    OVRCD,DELT2290
          MATCH     FMLALEDG,FMBLFLED
          GOTO      DELT2290 IF NOT EQUAL
          PACK      KEY28,FMBLFLED,FMBLFACC,FMBLTLED,FMBLTACC,SP70
          DISPLAY   *P20:24,*V2LON,KEY28,*EF;
          CALL      DEFMBL2
          GOTO      DELT2200
.
DELT2290  PACK      FILENAME,FMSO,FMBTCODE,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Deleting ",*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSSLBA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,DELT2490               * file not found ?
          OPEN      FMSSLBA2,FILENAME            * open file
          PACK      KEY14,FMLALEDG,SP70
.
DELT2300  CALL      RSFMSL1
          CALL      RKFMSL1
          BRANCH    OVRCD,DELT2390
          MATCH     FMLALEDG,FMSLTLED
          GOTO      DELT2390 IF NOT EQUAL
          PACK      KEY14,FMSLTLED,FMSLTSUB,SP70
          DISPLAY   *P20:24,*V2LON,KEY14,*EF;
          CALL      DEFMSL1
          GOTO      DELT2300
.
DELT2390  PACK      KEY26,FMLALEDG,SP70
.
DELT2400  CALL      RSFMSL2
          CALL      RKFMSL2
          BRANCH    OVRCD,DELT2490
          MATCH     FMLALEDG,FMSLTLED
          GOTO      DELT2490 IF NOT EQUAL
          PACK      KEY26,FMSLTLED,FMSLFSUB,FMSLTSUB,SP70
          DISPLAY   *P20:24,*V2LON,KEY26,*EF;
          CALL      DEFMSL2
          GOTO      DELT2400
.
DELT2490  
          GOTO      DELT2000
.
DELT9000  PACK      KEY2,FMLALEDG,SP70
          DISPLAY   *P1:24,"Deleting ",*V2LON,"fmslmaaf",*EF;
          CALL      DEFMLA1
.
DELT9999  RETURN
.**********************************************************************
.  CSUM - check summary files                          Called By POST
.        Requires - FMLCYEAR (year)
.**********************************************************************
CSUM0000  
.
CSUM0100  PACK      FILENAME,FMSA,FMLCYEAR,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSSTRA2,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CSUM0200               * file exists ?
.
          PACK      KEY30,FMLALEDG,SP70
.
CSUM0190  CALL      RSFMSR2
          CALL      RKFMSR2
          BRANCH    OVRCD,CSUM0200               * no records found for ledger ?
          MATCH     FMLALEDG,FMSRLEDG
          GOTO      CSUM0200 IF NOT EQUAL
.
          PACK      KEY30,FMSRLEDG,FMSRACCT,FMSRDATE,FMSRBAT,FMSRUNIQ,SP70
          DISPLAY   *P45:24,*V2LON,KEY30,*EF;
          CALL      DEFMSR2
          GOTO      CSUM0190
.
CSUM0200  PACK      FILENAME,FMSD,FMLCYEAR,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSDSFA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CSUM0300               * file exists ?
.
          PACK      KEY23,FMLALEDG,SP70
.
CSUM0290  CALL      RSFMDF1
          CALL      RKFMDF1
          BRANCH    OVRCD,CSUM0300               * no records found for ledger ?
          MATCH     FMLALEDG,FMDFLEDG
          GOTO      CSUM0300 IF NOT EQUAL
.
          PACK      KEY23,FMDFLEDG,FMDFACCT,FMDFDISS,FMDFRESP,SP70
          DISPLAY   *P45:24,*V2LON,KEY23,*EF;
          CALL      DEFMDF1
          GOTO      CSUM0290                     * data found
.
CSUM0300  PACK      FILENAME,FMSP,FMLCYEAR,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSFPSA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CSUM0400               * file exists ?
.
          PACK      KEY14,FMLALEDG,SP70
.
CSUM0350  CALL      RSFMFP1
          CALL      RKFMFP1
          BRANCH    OVRCD,CSUM0400               * no records found for ledger ?
          MATCH     FMLALEDG,FMFPCULD
          GOTO      CSUM0400 IF NOT EQUAL
.
          PACK      KEY14,FMFPCULD,FMFPCUAC,SP70
          DISPLAY   *P45:24,*V2LON,KEY14,*EF;
          CALL      DEFMFP1
          GOTO      CSUM0350
.
CSUM0400  PACK      FILENAME,FMSR,FMLCYEAR,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSTRNA2,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CSUM0500               * file exists ?
.
          PACK      KEY32,FMLALEDG,SP70
.
CSUM0450  CALL      RSFMTR2
          CALL      RKFMTR2
          BRANCH    OVRCD,CSUM0500               * no records found for ledger ?
          MATCH     FMLALEDG,FMTRLEDG
          GOTO      CSUM0500 IF NOT EQUAL
.
          PACK      KEY32,FMTRLEDG,FMTRACCT,FMTRPDAT,FMTRBAT,FMTRUNIQ,SP70
          DISPLAY   *P45:24,*V2LON,KEY32,*EF;
          CALL      DEFMTR2
          GOTO      CSUM0450
.
CSUM0500  PACK      FILENAME,FMSS,FMLCYEAR,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSSMAA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CSUM0600               * file exists ?
.
          PACK      KEY14,FMLALEDG,SP70
.
CSUM0550  CALL      RSFMSS1
          CALL      RKFMSS1
          BRANCH    OVRCD,CSUM0600               * no records found for ledger ?
          MATCH     FMLALEDG,FMSSLEDG
          GOTO      CSUM0600 IF NOT EQUAL
.
          PACK      KEY14,FMSSLEDG,FMSSACCT,SP70
          DISPLAY   *P45:24,*V2LON,KEY14,*EF;
          CALL      DEFMSS1
          GOTO      CSUM0550                     * data found
.
CSUM0600  PACK      FILENAME,FMST,FMLCYEAR,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSTRNA2,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CSUM0700               * file exists ?
.
          PACK      KEY32,FMLALEDG,SP70
.
CSUM0650  CALL      RSFMTR2
          CALL      RKFMTR2
          BRANCH    OVRCD,CSUM0700               * no records found for ledger ?
          MATCH     FMLALEDG,FMTRLEDG
          GOTO      CSUM0700 IF NOT EQUAL
.
          PACK      KEY32,FMTRLEDG,FMTRACCT,FMTRPDAT,FMTRBAT,FMTRUNIQ,SP70
          DISPLAY   *P45:24,*V2LON,KEY32,*EF;
          CALL      DEFMTR2
          GOTO      CSUM0650                     * data found
.
CSUM0700  PACK      FILENAME,FMSZ,FMLCYEAR,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSSCZA2,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CSUM0800               * file exists ?
.
          PACK      KEY30,FMLALEDG,SP70
.
CSUM0750  CALL      RSFMSZ2
          CALL      RKFMSZ2
          BRANCH    OVRCD,CSUM0800               * no records found for ledger ?
          MATCH     FMLALEDG,FMSZLEDG
          GOTO      CSUM0800 IF NOT EQUAL
.
          PACK      KEY30,FMSZLEDG,FMSZACCT,FMSZDATE,FMSZBAT,FMSZUNIQ,SP70
          DISPLAY   *P45:24,*V2LON,KEY30,*EF;
          CALL      DEFMSZ2
          GOTO      CSUM0750                     * data found
.
CSUM0800  
.
CSUM9999  RETURN
.**********************************************************************
.  CBUD - check budget files                          Called By POST
.        Returns  - EXIT     (1=data found)
.**********************************************************************
CBUD0000  PACK      KEY4,SP70
          CALL      RSFMBT1
.
CBUD2000  CALL      RKFMBT1
          BRANCH    OVRCD,CBUD9999
.
          PACK      FILENAME,FMSB,FMBTCODE,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSBUDA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CBUD2290               * file not found ?
.
          PACK      KEY14,FMLALEDG,SP70
.
CBUD2050  CALL      RSFMBU1
          CALL      RKFMBU1
          BRANCH    OVRCD,CBUD2290
          MATCH     FMLALEDG,FMBUCULD
          GOTO      CBUD2290 IF NOT EQUAL
.
          PACK      KEY14,FMBUCULD,FMBUCUAC,SP70
          DISPLAY   *P45:24,*V2LON,KEY14,*EF;
          MOVE      FOUR,AUDTTYPE
          CALL      WAFMBU00
          CALL      DEFMBU1
          GOTO      CBUD2050                     * data found
.
CBUD2290  PACK      FILENAME,FMSC,FMBTCODE,SP70  * get desired filename
          REP       " 0",FILENAME
          DISPLAY   *P35:24,*V2LON,FILENAME,*EF;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSSBUA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CBUD2390               * file not found ?
.
          PACK      KEY14,FMLALEDG,SP70
.
CBUD2300  CALL      RSFMST1
          CALL      RKFMST1
          BRANCH    OVRCD,CBUD2390
          MATCH     FMLALEDG,FMSTCULD
          GOTO      CBUD2390 IF NOT EQUAL
.
          PACK      KEY14,FMSTCULD,FMSTCUAC,SP70
          DISPLAY   *P45:24,*V2LON,KEY14,*EF;
          MOVE      FOUR,AUDTTYPE
          CALL      WAFMST00
          CALL      DEFMST1
          GOTO      CBUD2300                     * data found
.
CBUD2390  
          GOTO      CBUD2000
.
CBUD9999  RETURN
.******************************************************************************
.  Redisplays
.******************************************************************************
RLMAFM00  
          BRANCH    SCRNO,RDISA000
          GOTO      RZZZFM99
.
RDISA000  
          CALL      SCRA0000
          GOTO      RZZZFM99
.
RZZZFM99  RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD
          INC       FMSAMAIO/INC
          INC       FMSBPFIO/INC
          INC       FMSBTYIO/INC
          INC       FMSBUDIO/INC
          INC       FMSCAFIO/INC
          INC       FMSCCAIO/INC
          INC       FMSCSAIO/INC
          INC       FMSCTRIO/INC
          INC       FMSDSFIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLBUIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMDIO/INC
          INC       FMSRSFIO/INC
          INC       FMSSBAIO/INC
          INC       FMSSBUIO/INC
          INC       FMSSCZIO/INC
          INC       FMSSLBIO/INC
          INC       FMSSMAIO/INC
          INC       FMSSSCIO/INC
          INC       FMSTCFIO/INC
          INC       FMSSTRIO/INC
          INC       FMSTRNIO/INC
          INC       FMSUWPIO/INC
          INC       FMSXCSIO/INC
.
          INC       FMSLMAKY
.
