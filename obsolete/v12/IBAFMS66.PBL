. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS66                                             *
. * Desc      :   Subjective Budget Link Maintenance                   *
. **********************************************************************
. * Date      :   06.06.1991                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.02  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.01  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS66
.             open files and initialise variables
.             WHILE user wants to change data DO
.                  get desired option
.                  allow user to modify option
.             END WHILE
.             IF user wants to post data
.                  THEN write data
.             END IF
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * FMS audit update variables
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSBPFFD/INC
          INC       FMSCCAFD/INC
          INC       FMSSBAFD/INC
          INC       FMSSLBFD/INC
          INC       FMSXCSFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
FMSBFILE  INIT      "        "
FMSCFILE  INIT      "        "
FMSLFILE  INIT      "        "
FMSOFILE  INIT      "        "
FILENAME  INIT      "        "
FMSO      INIT      "fmso"
FMSLDAT   INIT      " 50 U1-2,3-14 U15-16,17-28,1-2,3-14"
FMSODAT   INIT      " 50 U1-2,3-14 U1-2,15-26,3-14"
ISBUILD   INIT      "isbuild "
.
ACCEPT    FORM      1        * accept mode (1=on)
ACCT1     DIM       12       * account
ACCT1D    DIM       35       * account desc
ACCT2     DIM       12       * account
ACCT2D    DIM       35       * account desc
BUDG1     DIM       4        * budget
BUDG1D    DIM       35       * budget desc
COSTCODE  DIM       12
LEDG1     DIM       2        * ledger
LEDG1D    DIM       35       * ledger desc
OPTIONA   FORM      2        * screen A selection keyin var
SCRNO     FORM      1        * current screen number
SUBJCODE  DIM       12
.
PRGID     INIT      "IBAFMS66"
PRGNAM    INIT      "Subjective Budget Link Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      SELOPTN            * get desired entry mode
          COMPARE   ZERO,COPTION       * exit program ?
          GOTO      ML9999 IF EQUAL
.
ML0200    CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML0100        * exit screen
.
          COMPARE   THREE,COPTION      * delete ?
          GOTO      ML1000 IF EQUAL
.
          CALL      SELB0000           * perform screen B
          BRANCH    EXIT,ML0200        * exit screen
.
          CALL      POST0000           * save data
          GOTO      ML0200             * get next selection
.
ML1000    CALL      DELT0000           * delete data
          BRANCH    EXIT,ML0100        * quit screen ?
          GOTO      ML0200             * get next selection
.
ML9999    MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD                     * display screen
          CALL      OUPD0000                     * open files for update procs
          CALL      OUDA0000                 * Open budget audit files
.
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening fmsbpfaf";  * subjective
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * subjective
          OPEN      FMSSBAA1,"fmssbaaf"
          OPEN      FMSSBAA2,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmsccaaf";  * cc
          OPEN      FMSCCAA1,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";  * cc/subj xref file
          OPEN      FMSXCSA1,"fmsxcsaf"
.
          PACK      FMSBFILE,SP70
          PACK      FMSCFILE,SP70
          PACK      FMSLFILE,SP70
.
INIT9999  DISPLAY   *P1:24,*EF;
          RETURN
.**********************************************************************
.  CLRV - Clear Variables                              Called By PROC
.**********************************************************************
CLRV0000  UNPACK    SP70,BUDG1,BUDG1D
          UNPACK    SP70,LEDG1,LEDG1D
          UNPACK    SP70,ACCT1,ACCT1D
          UNPACK    SP70,ACCT2,ACCT2D
.
CLRV9999  RETURN
.**********************************************************************
.  SELA - get key                                      Called By ML
.        Returns  - EXIT     (1=quit)
.**********************************************************************
SELA0000  CALL      CLRV0000           * clear variables
          CALL      SCRA0000
          MOVE      "1",SCRNO
.
SELA0500  UNPACK    SP70,LEDG1,LEDG1D
          UNPACK    SP70,ACCT1,ACCT1D
          MOVE      "4",CVERT
          MOVE      "28",CCOL
          CALL      KBTYFM00
          BRANCH    EXIT,SELA9500,SELA9500  * exit program ?
          PACK      BUDG1,FMBTCODE,SP70
          PACK      BUDG1D,FMBTDESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,BUDG1,*HOFF,SP10,BUDG1D;
.
SELA1000  UNPACK    SP70,ACCT1,ACCT1D
          MOVE      "5",CVERT
          MOVE      "28",CCOL
          CALL      KLMAFM00
          BRANCH    EXIT,SELA0500,SELA9500       * no entry ?
          PACK      LEDG1,FMLALEDG,SP70
          PACK      LEDG1D,FMLADESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,LEDG1,*HOFF,SP2,SP10,LEDG1D;
.
SELA2000  MOVE      "6",CVERT
          MOVE      "28",CCOL
          MOVE      "5",CSUBJIND
          CALL      KSBAFM00
          BRANCH    EXIT,SELA1000,SELA9500       * no entry ?
          PACK      ACCT1,FMSASUBJ,SP70
          PACK      ACCT1D,FMSADESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,ACCT1,*HOFF,SP2,ACCT1D;
.
          PACK      FILENAME,FMSL,BUDG1,SP70
          REP       " 0",FILENAME
          MATCH     FILENAME,FMSLFILE
          GOTO      SELA3000 IF EQUAL            * file already open ?
.
          PACK      FMSLFILE,FILENAME,SP70       * save filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSLBUA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          COMPARE   ONE,OVRCD                    * any problem with file ?
          GOTO      SELA3000 IF NOT EQUAL
.
          CLEAR     CMDLINE                      * create new file
          PACK      CMDLINE,ISBUILD,FILENAME,FMSLDAT
          EXECUTE   CMDLINE,TASKID
          OPEN      FMSLBUA1,FILENAME            * open file
          OPEN      FMSLBUA2,FILENAME
.
SELA3000  PACK      FILENAME,FMSO,BUDG1,SP70
          REP       " 0",FILENAME
          MATCH     FILENAME,FMSOFILE
          GOTO      SELA4000 IF EQUAL            * file already open ?
.
          PACK      FMSOFILE,FILENAME,SP70       * save filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSSLBA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          COMPARE   ONE,OVRCD                    * any problem with file ?
          GOTO      SELA4000 IF NOT EQUAL
.
          CLEAR     CMDLINE                      * create new file
          PACK      CMDLINE,ISBUILD,FILENAME,FMSODAT
          EXECUTE   CMDLINE,TASKID
          OPEN      FMSSLBA1,FILENAME            * open file
.
SELA4000  PACK      KEY14,LEDG1,ACCT1,SP70
          CALL      RDFMSL1
          MOVE      OVRCD,ACCEPT                 * determine accept mode
          BRANCH    ACCEPT,SELA4500
.
          PACK      ACCT2,FMSLFSUB,SP70          * load up vars
.
          PACK      FMSADESC,SP70
          PACK      KEY14,LEDG1,ACCT2,SP70
          CALL      RDFMSA1
          PACK      ACCT2D,FMSADESC,SP70
.
SELA4500  LOAD      F1,COPTION,ONE,ZERO,ZERO     * get valid value of OVRCD
          COMPARE   F1,ACCEPT
          GOTO      SELA9000 IF EQUAL
          BRANCH    ACCEPT,SELA5000              * display desired error message
.
          DISPLAY   *P1:24,*B,*EF,"Budget Link Already Exists - ";
          CALL      HITENTER
          GOTO      SELA2000
.
SELA5000  DISPLAY   *P1:24,*B,*EF,"Budget Link Not On File - ";
          CALL      HITENTER
          GOTO      SELA2000
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  DISPLAY   *P1:4,"    Budget Type          : ":
                          *V2LON,BUDG1,*HOFF,SP10,BUDG1D,*EL:
                    *P1:5,"    Ledger               : ":
                          *V2LON,LEDG1,*HOFF,SP10,SP2,LEDG1D,*EL:
                    *P1:6,"    Subjective           : ":
                          *V2LON,ACCT1,*HOFF,SP2,ACCT1D,*EF;
.
SCRA9999  RETURN
.******************************************************************************
.  SCRB - Display Screen B                       Called by SELB, redisps
.******************************************************************************
SCRB0000  DISPLAY   *P5:8,"Will Receive its Budget from",*V2LON:
                    *P1:9," 1",*HOFF,". Stat-Tot Subjective  : ":
                          *V2LON,ACCT2,*HOFF,SP2,ACCT2D,*EF;
.
SCRB9999  RETURN
.******************************************************************************
.  SELB - Perform Screen B                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELB0000  MOVE      "2",SCRNO
          MOVE      ZERO,OPTIONA       * reset item desired
          CALL      SCRB0000           * display screen A
.
SELB0100  ADD       ONE,OPTIONA        * get next item
          BRANCH    ACCEPT,SELB0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONA
.
SELB0110  MOVE      "28",CCOL          * get screen address
          MOVE      "8",CVERT
          ADD       OPTIONA,CVERT
          MOVE      OPTIONA,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELB9500,SELB9000:                       * quit, continue
                       SELB1100                                 * execute option
          BRANCH    ACCEPT,SELB0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELB0100           * get another option
.
SELB0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELB0100
.
.---- option 1 ----
.
SELB1100  MOVE      "4",CSUBJIND
          CALL      KSBAFM00
          BRANCH    EXIT,SELB1190,SELB9500       * no entry ?
          PACK      ACCT2,FMSASUBJ,SP70
          PACK      ACCT2D,FMSADESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,ACCT2,*HOFF,SP2,ACCT2D;
          GOTO      SELB0100
.
SELB1190  BRANCH    ACCEPT,SELB9500
          GOTO      SELB1100
.
.
SELB9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELB9999
.
SELB9500  MOVE      ONE,EXIT           * quit
.
SELB9999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.**********************************************************************
POST0000  PACK      KEY14,LEDG1,ACCT1,SP70
          UNPACK    KEY14,FMSLTLED,FMSLTSUB
          PACK      FMSLFSUB,ACCT2,SP70
          CALL      DEFMSL1
          CALL      WRFMSL1
          CALL      OBUD0000                     * open budget files
          BRANCH    OVRCD,POST9999
.
          PACK      KEY26,LEDG1,ACCT1,SP70
          CALL      RSFMXC1
.
POST1000  CALL      RKFMXC1
          BRANCH    OVRCD,POST9999
          MATCH     LEDG1,FMXCLED
          GOTO      POST9999 IF NOT EQUAL
          MATCH     ACCT1,FMXCSUB
          GOTO      POST9999 IF NOT EQUAL
          DISPLAY   *P1:24,"Linking for : ",*V2LON,FMXCCOS,*EL;
.
          PACK      SUBJCODE,ACCT2,SP70
          PACK      COSTCODE,FMXCCOS,SP70
          CALL      BCOD0000
          PACK      KEY14,LEDG1,ACCOUNT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,POST1000
          UNPACK    KEY14,FMBLFLED,FMBLFACC
.
          PACK      SUBJCODE,ACCT1,SP70
          PACK      COSTCODE,FMXCCOS,SP70
          CALL      BCOD0000
          PACK      KEY14,LEDG1,ACCOUNT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,POST1000
          UNPACK    KEY14,FMBLTLED,FMBLTACC
.
          CALL      DEFMBL1
          CALL      WRFMBL1
.
          CALL      CBUD0000                     * clear budget file variables
          PACK      KEY14,LEDG1,FMBLFACC,SP70
          CALL      RDFMST1                      * read data
.
          PACK      KEY14,LEDG1,FMBLTACC,SP70    * write data for new account
          CALL      WRBU0000                     * write budget data
.
          COMPARE   ONE,FMCOCALC
          GOTO      POST1000 IF NOT EQUAL
.
          MOVE      LEDG1,LEDGER
          MOVE      FMBLTACC,ACCOUNT
          PACK      UTYPE,BUDTYPE,SP70
          PROC      FMSUA000           * set for update
          GOTO      POST1000
.
POST9999  RETURN
.**********************************************************************
.  DELT - Delete Data                                    Called By ML
.**********************************************************************
DELT0000  CALL      SCRB0000
          CALL      DELQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,DELT9000,DELT9500
.
          PACK      KEY14,LEDG1,ACCT1,SP70
          UNPACK    KEY14,FMSLTLED,FMSLTSUB
          CALL      DEFMSL1
          PACK      KEY26,LEDG1,ACCT1,SP70
          CALL      RSFMXC1
.
DELT1000  CALL      RKFMXC1
          BRANCH    OVRCD,DELT9000
          MATCH     LEDG1,FMXCLED
          GOTO      DELT9000 IF NOT EQUAL
          MATCH     ACCT1,FMXCSUB
          GOTO      DELT9000 IF NOT EQUAL
          DISPLAY   *P1:24,"Deleting Link for : ",*V2LON,FMXCCOS,*EL;
.
          PACK      SUBJCODE,ACCT1,SP70
          PACK      COSTCODE,FMXCCOS,SP70
          CALL      BCOD0000
          PACK      KEY14,LEDG1,ACCOUNT,SP70
          UNPACK    KEY14,FMBLTLED,FMBLTACC
          CALL      DEFMBL1
          GOTO      DELT1000
.
.
DELT9000  MOVE      ZERO,EXIT
          GOTO      DELT9999
.
DELT9500  MOVE      ONE,EXIT
.
DELT9999  RETURN
.****************************************************************************
.  BCOD - get account code from subjective and cost codes    Called by lots
.        Requires - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD2B  (separater char)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - ACCOUNT   (account code)
.****************************************************************************
BCOD0000  STORE     COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      ACCOUNT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          COMPARE   FMSUUD2A,ONE
          GOTO      BCOD1000 IF NOT EQUAL         * separator char in use ?
.
          PACK      ACCOUNT,ACCOUNT,FMSUUD2B      * include sep. char
.
BCOD1000  PACK      ACCOUNT,ACCOUNT,SUBJCODE,SP70 * add subj code
.
BCOD9999  RETURN
.**********************************************************************
.  WRBU - write budget data                            Called By POST
.        Requires - KEY14    (account to post)
.                   FMSSBUAF (record)
.**********************************************************************
WRBU0000  CALL      RDFMAM1
          BRANCH    OVRCD,WRBU9999
.
.---- stat type ----
.
          MATCH     "8",FMAMTYPE
          GOTO      WRBU5000 IF NOT EQUAL
.
          UNPACK    KEY14,FMSTCULD,FMSTCUAC
          UNPACK    SP70,FMSTCUPR
          CALL      RAFMST1
          IF        OVRCD=1
            MOVE      ONE,AUDTTYPE
            CALL      WAFMST00
            CALL      WRFMST1
          ELSE
            CALL      UPSBU000               * Update file and audit
          ENDIF
          GOTO      WRBU9999
.
.---- norm post type ----
.
WRBU5000  MATCH     "6",FMAMTYPE
          GOTO      WRBU5000 IF NOT LESS
.
          UNPACK    KEY14,FMBUCULD,FMBUCUAC
          UNPACK    SP70,FMBUCUPR
.
          MOVE      FMSTCA01,FMBUCA01
          MOVE      FMSTCA02,FMBUCA02
          MOVE      FMSTCA03,FMBUCA03
          MOVE      FMSTCA04,FMBUCA04
          MOVE      FMSTCA05,FMBUCA05
          MOVE      FMSTCA06,FMBUCA06
          MOVE      FMSTCA07,FMBUCA07
          MOVE      FMSTCA08,FMBUCA08
          MOVE      FMSTCA09,FMBUCA09
          MOVE      FMSTCA10,FMBUCA10
          MOVE      FMSTCA11,FMBUCA11
          MOVE      FMSTCA12,FMBUCA12
          MOVE      FMSTCA13,FMBUCA13
.
          MOVE      FMSTCA01,FMBUCB01
          MOVE      FMSTCA02,FMBUCB02
          MOVE      FMSTCA03,FMBUCB03
          MOVE      FMSTCA04,FMBUCB04
          MOVE      FMSTCA05,FMBUCB05
          MOVE      FMSTCA06,FMBUCB06
          MOVE      FMSTCA07,FMBUCB07
          MOVE      FMSTCA08,FMBUCB08
          MOVE      FMSTCA09,FMBUCB09
          MOVE      FMSTCA10,FMBUCB10
          MOVE      FMSTCA11,FMBUCB11
          MOVE      FMSTCA12,FMBUCB12
          MOVE      FMSTCA13,FMBUCB13
.
          DIV       "1000",FMSTCA01
          DIV       "1000",FMSTCA02
          DIV       "1000",FMSTCA03
          DIV       "1000",FMSTCA04
          DIV       "1000",FMSTCA05
          DIV       "1000",FMSTCA06
          DIV       "1000",FMSTCA07
          DIV       "1000",FMSTCA08
          DIV       "1000",FMSTCA09
          DIV       "1000",FMSTCA10
          DIV       "1000",FMSTCA11
          DIV       "1000",FMSTCA12
          DIV       "1000",FMSTCA13
          MOVE      FMSTCA01,FMBUCC01
          MOVE      FMSTCA02,FMBUCC02
          MOVE      FMSTCA03,FMBUCC03
          MOVE      FMSTCA04,FMBUCC04
          MOVE      FMSTCA05,FMBUCC05
          MOVE      FMSTCA06,FMBUCC06
          MOVE      FMSTCA07,FMBUCC07
          MOVE      FMSTCA08,FMBUCC08
          MOVE      FMSTCA09,FMBUCC09
          MOVE      FMSTCA10,FMBUCC10
          MOVE      FMSTCA11,FMBUCC11
          MOVE      FMSTCA12,FMBUCC12
          MOVE      FMSTCA13,FMBUCC13
          CALL      RAFMBU1
          IF        OVRCD=1
            MOVE      ONE,AUDTTYPE
            CALL      WAFMBU00
            CALL      WRFMBU1
          ELSE
            CALL      UPBUD000
          ENDIF
          GOTO      WRBU9999
.
WRBU9999  RETURN
.**********************************************************************
.  OBUD - open desired budget file                     Called By POST
.        Returns  - EXIT     (1=quit)
.**********************************************************************
OBUD0000  PACK      FILENAME,FMSB,FMBTCODE,SP70  * get desired filename
          PACK      BUDTYPE,FMBTCODE,SP70
          REP       " 0",FILENAME
          MATCH     FILENAME,FMSBFILE
          GOTO      OBUD1000 IF EQUAL            * file already open ?
.
          PACK      FMSBFILE,FILENAME,SP70       * save filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSBUDA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
.
          COMPARE   ONE,OVRCD
          GOTO      OBUD1000 IF NOT EQUAL        * file found ?
          PACK      FMSBFILE,SP70
          DISPLAY   *P1:24,*B,*EF,"ERROR - Budget Type File ",FILENAME:
                    " Missing - ";
          CALL      HITENTER
          GOTO      OBUD9500
.
OBUD1000  PACK      FILENAME,FMSC,FMBTCODE,SP70  * get desired filename
          REP       " 0",FILENAME
          MATCH     FILENAME,FMSCFILE
          GOTO      OBUD9000 IF EQUAL            * file already open ?
.
          PACK      FMSCFILE,FILENAME,SP70       * save filename
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSSBUA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
.
          COMPARE   ONE,OVRCD
          GOTO      OBUD9000 IF NOT EQUAL        * file found ?
          PACK      FMSCFILE,SP70
          DISPLAY   *P1:24,*B,*EF,"ERROR - Budget Type File ",FILENAME:
                    " Missing - ";
          CALL      HITENTER
          GOTO      OBUD9500
.
.
OBUD9000  MOVE      ZERO,EXIT          * continue
          GOTO      OBUD9999
.
OBUD9500  MOVE      ONE,EXIT           * quit
.
OBUD9999  RETURN
.**********************************************************************
.  CBUD - Clear budget file variables                  Called By CBUD
.**********************************************************************
CBUD0000  MOVE      ZERO,FMSTCA01
          MOVE      ZERO,FMSTCA02
          MOVE      ZERO,FMSTCA03
          MOVE      ZERO,FMSTCA04
          MOVE      ZERO,FMSTCA05
          MOVE      ZERO,FMSTCA06
          MOVE      ZERO,FMSTCA07
          MOVE      ZERO,FMSTCA08
          MOVE      ZERO,FMSTCA09
          MOVE      ZERO,FMSTCA10
          MOVE      ZERO,FMSTCA11
          MOVE      ZERO,FMSTCA12
          MOVE      ZERO,FMSTCA13
.
CBUD9999  RETURN
.******************************************************************************
.  Redisplays
.******************************************************************************
RSBAFM00
RBTYFM00
RLMAFM00
          CALL      SCRA0000
          BRANCH    SCRNO,RZZZFM00
          CALL      SCRB0000
.
RZZZFM00  RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
          INC       FMSBPFIO/INC
          INC       FMSCCAIO/INC
          INC       FMSSBAIO/INC
          INC       FMSSLBIO/INC
          INC       FMSXCSIO/INC
.
          INC       FMSBTYKY
          INC       FMSLMAKY
          INC       FMSSBAKY
.
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * FMS audit update routines 
