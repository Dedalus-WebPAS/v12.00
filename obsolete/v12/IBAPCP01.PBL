.******************************************************************************
.* System         : Patient Care Plans                                        *
.* Program        : IBAPCP01                                                  *
.* Name           : Database Maintenance                                      *
.******************************************************************************
.* Date           : 01/10/90                                                  *
.* Programmer     : Glen Hobby                                                *
.* Modifications  :                                                           *
.*       V10.11.01  23/11/2017  Ania P          TSK 0261630                   *
.*                  Removed PORT                                              *
.*        V9.03.01  20/11/2003  Steve Armstrong CAR 44631                     *
.*                  Removed PI command                                        *
.******************************************************************************
.*        V9.02.00  30/12/2002 Tracey Nguyen srf 23497                        *
.*                  r5.10 Care Plans Port to V9                               *
.******************************************************************************
.*        V5.01.02  16/08/90 Graeme Williams                                  *
.*                  Corrected bug when posting first type                     *
.*        V5.01.03  23/05/91  Steve O'Gorman                                  *
.*                  Fixed Errors found by the New Compiler                    *
.*        V5.01.04  20/11/1991    Justin Coates                               *
.*                  Changed for Care Plans/Dependency interface.              *
.*        V5.01.05  13/04/1992    Justin Coates                               *
.*                  Check for Dep. interface when ask for time/staff class.   *
.*        V5.01.06  21/04/1992    Justin Coates                               *
.*                  New format for inputting time/staff classifications       *
.*        V5.01.07  21/08/1992    Justin Coates                               *
.*                  Fix the problem of it posting new codes when change       *
.*                  descriptions via the word processor                       *
.*        V5.01.08  30/11/1992    Justin Coates  SRF 118824                   *
.*                  Fix the problem of I*D occuring when users add desc'ns    *
.*                  and post away at the same time                            *
.*                  Unfortunately had to add PI commands so don't remove them *
.*        V5.01.09  04/12/1992    Justin Coates                               *
.*                  Dont post to pcpidpaf if no code or zero time             *
.*        V5.01.10  15/11/1993    Justin Coates  Quote 7840 SRF 123722        *
.*                  when deleting interventions etc try to stay on same page  *
.*                  routines ETSC0000 and DELC0000                            *
.*        V5.01.11  16/03/1994    Robert Leonard  SRF 128405                  *
.*                  Fixed I*D on pcpdscaf                                     *
.*        V5.02.01  19/04/1995   Whirlpool        hawkes bay bug fixes        *
.*                  Fixed ? in PCPDSCDS routine                               *
.*                  As well as various other bugs that the spastic hobby made *
.*        V5.04.01  27/09/1996  Steve Armstrong                               *
.*                  Recompiled for PCPDSCDS                                   *
.******************************************************************************
.
          INC       STD001FD
          INC       PATCODFD/INC             * codes file
          INC       PCPCRLFD/INC             * related factors file
          INC       PCPDBSFD/INC             * database file
          INC       PCPDSCFD/INC             * descriptions file
          INC       PCPIDPFD/INC             * int depend. file 
          INC       TFILEVAR/INC
          INC       IBASEQFD/INC
          INC       WEBERRFD/INC
.
.***************************************************************************
.*                              CONSTANTS                                  *
.***************************************************************************
.
REL       INIT    "related factor"
DEF       INIT    "defining characteristic"
DIF       INIT    "differential diagnosis"
PAT       INIT    "patient outcome"
NUR       INIT    "nursing intervention"
RELA      INIT    "Related Factors"
DEFA      INIT    "Defining Characteristics"
DIFA      INIT    "Differential Diagnoses"
PATA      INIT    "Patient Outcomes"
NURA      INIT    "Nursing Interventions"
CATSD     INIT    "SD"
NUQST     INIT    "        ?"
SP19      INIT    "                   "
SP59      INIT    "                                                           "
SP60      INIT    "                                                            "
PRFIXB    INIT      "pcp01b"
PRFIXIF   INIT      "pcp01f"
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
KEYIF     INIT      " 78 U1-9,10-11"
TEMPIF    IFILE     SQL, FIXED=78, KEY="U1-9,10-11"
.name     type      length  phys  start  desc
.-------  ----      ------  ----  -----  ---------------------
XIFCODE   DIM       9          9      1  Code for intervention
XIFLINE   DIM       2          2     10  Line number
XIFDESC   DIM       60        60     12  Desc line
XIFTIME   FORM      4          3     72  Time
XIFSTAF   DIM       3          3     75  Staff classification
.End of record                       78
.
Z20       INIT      "zzzzzzzzzzzzzzzzzzzz"
.
PRGID     INIT      "IBAPCP01"
PRGNAM    INIT      "Database Maintenance"
VERSION   INIT      "V12.00.00"
.
.***************************************************************************
.*                            GLOBAL VARIABLES                             *
.***************************************************************************
.
AUDIFLAG  FORM      1
CALLPOSN  FORM      1
CFNAMEB   DIM       8         * file name for WORDTEMP
CFNAMEIF  DIM       8         * file name for TEMPIF
CHOOZ     FORM      1
CHOOZC    FORM      1
CMDLINE   DIM       50        * commands for operating system
CNTINT    FORM      2         * intervention count
CURRINT   FORM      2         * current intervention number
DISPINT   DIM       11[15]    * displayed interventions
DBSTYPE   FORM      2         * type of codes for PCPDBSFD
DSCTYPE   FORM      2         * type of codes for PCPDSCFD
CODE      DIM       2         * patdscod
CODEA     DIM       9         * FIRST code in pair
CODEAA    DIM       9  
CODEB     DIM       9
CODED     DIM       9
CODEE     DIM       9
CODEF     DIM       9
CODEG     DIM       9
CODEZ     DIM       9
CODE1     DIM       9
CODE2     DIM       9
CODE3     DIM       9
CODE4     DIM       9
CODE5     DIM       9
CODE6     DIM       9
CODE7     DIM       9
CODE8     DIM       9
CODE9     DIM       9
CODE10    DIM       9
CODE11    DIM       9
CODE12    DIM       9
CODE13    DIM       9
CODE14    DIM       9
COUNTER   FORM      2
COUNTER1  FORM      2
COUNTER2  FORM      2
COUNTER9  FORM      2
DESC1     DIM       60                       * nursing diag. description 2
DESC2     DIM       60
DESC3     DIM       60
DESC4     DIM       60
DESC5     DIM       60
DESC6     DIM       60
DESC7     DIM       60
DESC8     DIM       60
DESC9     DIM       60
DESC10    DIM       60
DESC11    DIM       60
DESC12    DIM       60
DESC13    DIM       60
DESC14A   DIM       60
DIM9      DIM       9
DIM50     DIM       50
DIMA50    DIM       50
DIMB50    DIM       50
DESCA     DIM       50
DESCB     DIM       50
DESCC     DIM       50
DIMA60    DIM       60
DPCNCARE  FORM      1             * using care plans/dependancy interface ??
FLAGA     FORM      1
FLAGB     FORM      1
FLAGC     FORM      1
FLAGD     FORM      1
FLAGE     FORM      1
FLAGZ     FORM      2
FORM9     FORM      9
LASTKEYF  DIM       11            * last key displayed
LINE60    DIM       60
MODE      FORM      1         * 0=insert 1=change (for MTDB0000)
NUMB      FORM      2
PACODE    DIM       9
PCCNAUDA  FORM      1                        * Audit file variables
PCCNAUDB  FORM      1
PCCNAUDC  FORM      1
POSTDSC   FORM      1         * 1= post to dsc, 0=post to dsc,idp,dbs
PTCNAWRN  FORM      1
RFDESC    DIM       60
SAVINTV   FORM      9
SAVOVRCD  FORM      1
SCREENNO  FORM      4
SCLSS     DIM       9
SCLSS2    DIM       9
SCLSS3    DIM       9
SCODE     DIM       9
TMP       DIM       9
TMP2      FORM      2
TMP4      FORM      2
TEMP5     DIM       9
TPCLSS    DIM       9
WPFLAG    FORM      2
YVAL      FORM      2
YVALA     FORM      2
.
WORDTEMP  FILE      ASCII,FIXED=256          * (256=Sector size) temp. wp file
.
.***************************************************************************
.*                              MAINLINE                                   *
.*                            Controlling Logic                            *
.***************************************************************************
ML0000    CALL      INIT0000                 * display header and open files
.
ML1000    CALL      CLR0000                  * clear variables 
          CALL      OPT0000                  * Exit or produce report 
          BRANCH    OPTION,ML2000,ML3000,ML4000,ML5000,ML6000,ML7000,ML8000
          GOTO      ML9000                   * exit out 
.
. ------ Nursing Diagnoses ------
.
ML2000    CALL      AAAA0000
          GOTO      ML1000 
.
. ------ Diagnosis Details ------
.
ML3000    CALL      BBBB0000
          GOTO      ML1000
.
. ------ Health Patterns ------
.
ML4000    CALL      CCCC0000
          GOTO      ML1000
.
. ------ Type of Conditions ------
.
ML5000    CALL      DDDD0000
          GOTO      ML1000
.
. ------ Clinic Conditions ------
.
ML6000    CALL      EEEE0000
          GOTO      ML1000
.
. ------ Response Patterns ------
.
ML7000    CALL      FFFF0000
          GOTO      ML1000
.
. ------ ABC PRN REST ------
.
ML8000    CALL      GGGG0000
          GOTO      ML1000
.
ML9000    CALL      KILL0000                 * Delete wp temp file
.
ML9999    CHAIN     PGM                      * chain back to program
.
.*************************************************************************
.*                                  INIT0000                             *
.*                 Display screen headings and open files                *
.*************************************************************************
INIT0000  CALL      DISPHEAD                 * display screen headings
          MOVE      ONE,CNEWDS
.
          DISPLAY   *P60:24,"pcpdscaf";
          OPEN      PCPDSCA1,"pcpdscaf";
.
          DISPLAY   *P60:24,"pcpdbsaf";
          OPEN      PCPDBSA1,"pcpdbsaf";
.
          DISPLAY   *P60:24,"pcpcrlaf";
          OPEN      PCPCRLA1,"pcpcrlaf";
.
          DISPLAY   *P60:24,"pcpidpaf";
          OPEN      PCPIDPA1,"pcpidpaf";
.
          DISPLAY   *P60:24,"patcodes";
          OPEN      PATCODE1,"patcodes";
.
          DISPLAY   *P60:24,"controlf";
          OPEN      CONTROLF,"controlf";
          READ      CONTROLF,FORTY1;*51,PCCNAUDB,*52,PCCNAUDA,*53,PCCNAUDC
          READ      CONTROLF,SIXTY3;*86,DPCNCARE
.
          CALL      TFILENAM
          MOVE      TFILNAME,CFNAMEB
          CALL      TFILENAM
          MOVE      TFILNAME,CFNAMEIF
.
.         Don't open audit files if they are not switched on
.
          BRANCH    PCCNAUDB,INIT1000
.
          DISPLAY   *P60:24,"pcpaudds";
          OPEN      PCPAUDDS,"pcpaudds";
.
INIT1000  BRANCH    PCCNAUDA,INIT2000
.
          DISPLAY   *P60:24,"pcpauddb";
          OPEN      PCPAUDDB,"pcpauddb";
.
INIT2000  BRANCH    PCCNAUDC,INIT9999
.
          DISPLAY   *P60:24,"pcpaudcr";
          OPEN      PCPAUDCR,"pcpaudcr";
.
INIT9999  RETURN
.
.**************************************************************************
.*                                  CLR0000                               *
.*                             Clear variables                            *
.**************************************************************************
CLR0000   
          HLINE     *G37,2,50,80
          MOVE      ONE,COUNTER
.
CLR1000   STORE     SP9,COUNTER,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                CODE14
          STORE     SP59,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                 DESC8,DESC9,DESC10,DESC11,DESC12,DESC13:
                                 DESC14A
          ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER
          GOTO      CLR1000 IF NOT EQUAL
.
          MOVE      SP59,LINE60
          MOVE      ZERO,FLAGC
          MOVE      ZERO,FLAGE
          MOVE      ZERO,FLAGZ
          MOVE      ZERO,WPFLAG
.
CLR9999  RETURN
.
.*************************************************************************
.*                                  OPT0000                              *
.*  Called by : - ML0000     Get main options                            *
.*************************************************************************
OPT0000   
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = Nursing Diagnoses":
                    *P2:6,*V2LON,TWO,*HOFF," = Diagnosis Details":
                    *P2:7,*V2LON,THREE,*HOFF," = Health Patterns":
                    *P2:8,*V2LON,FOUR,*HOFF," = Type of Clinic Conditions":
                    *P2:9,*V2LON,FIVE,*HOFF," = Clinic Conditions":
                    *P2:10,*V2LON,SIX,*HOFF," = Response Patterns":
                    *P2:11,*V2LON,SEVEN,*HOFF," = ABC PRN REST"
.
OPT1000   KEYIN     *P2:13,*EL,"Select Option : _",*P18:13,*V2LON,OPTION  
.
          COMPARE   ZERO,OPTION
          GOTO      OPT9999 IF EQUAL  
          BRANCH    OPTION,OPT9999,OPT9999,OPT9999,OPT9999,OPT9999:
                           OPT9999,OPT9999
          BEEP
          GOTO      OPT1000
.
OPT9999   RETURN
.
.************************************************************************
.*                                 SCR0000                              *
.*                               Display screen layout                  *
.************************************************************************
SCR0000   BRANCH    OPTION,SCR1000,SCR2000,SCR3000,SCR4000,SCR5000,SCR6000:
                           SCR7000
.
SCR1000   DISPLAY   *P50:2,*V2LON,"- Nursing Diagnoses ",*P1:3,*EF
          GOTO      SCR8000 
.
SCR2000   DISPLAY   *P50:2,*V2LON,"- Diagnosis Details ",*P1:3,*EF
          GOTO      SCR8000 
.
SCR3000   DISPLAY   *P50:2,*V2LON,"- Health Patterns ",*P1:3,*EF
          GOTO      SCR9000 
.
SCR4000   DISPLAY   *P50:2,*V2LON,"- Type of Clinic Condition ",*P1:3,*EF
          GOTO      SCR9000 
.
SCR5000   DISPLAY   *P50:2,*V2LON,"- Clinic Conditions ",*P1:3,*EF
          GOTO      SCR8000 
.
SCR6000   DISPLAY   *P50:2,*V2LON,"- Response Patterns ",*P1:3,*EF
          GOTO      SCR9000 
.
SCR7000   DISPLAY   *P50:2,*V2LON,"- ABC PRN REST ",*P1:3,*EF
          GOTO      SCR9000 
.
SCR8000   DISPLAY   *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = Insert":
                    *P2:6,*V2LON,TWO,*HOFF," = Change":
                    *P2:7,*V2LON,THREE,*HOFF," = Delete"
.
          DISPLAY   *P2:9,"Select Option :"
.
SCR8100   KEYIN     *P18:9,*EL,*DV,UNDLN1,*P18:9,*V2LON,CHOOZ
.
          COMPARE   ZERO,CHOOZ
          GOTO      SCR9999 IF EQUAL
          BRANCH    CHOOZ,SCR9210,SCR9220,SCR9230
          BEEP     
          GOTO      SCR8100                  * incorrect keyin 
.
SCR9000   HLINE     *G37,2,70,80
          DISPLAY   *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = Insert":
                    *P2:6,*V2LON,TWO,*HOFF," = Delete"
.
          DISPLAY   *P2:8,"Select Option :"
.
SCR9100   KEYIN     *P18:8,*EL,*DV,UNDLN1,*P18:8,*V2LON,CHOOZ
.
          COMPARE   ZERO,CHOOZ
          GOTO      SCR9999 IF EQUAL
          BRANCH    CHOOZ,SCR9210,SCR9230
          BEEP     
          GOTO      SCR9100                  * incorrect keyin 
.
SCR9210   DISPLAY   *P70:2,*V2LON," Insert ";
          GOTO      SCR9999
.
SCR9220   DISPLAY   *P70:2,*V2LON," Change ";
          GOTO      SCR9999
.
SCR9230   DISPLAY   *P70:2,*V2LON," Delete ";
.
SCR9999   RETURN
.
.*****************************************************************************
.*                               AAAA0000                                    *
.* Called by : ML2000        Nursing Diagnosis                               *
.*****************************************************************************
AAAA0000  CALL      CLR0000
          MOVE      SIX,PCDSTYPE             * Needed for ? routine 
          CALL      SCR0000                  * display screen layout 
          BRANCH    CHOOZ,AAAA1000,AAAA4000,AAAA7000 * Insert, Change, Delete
          GOTO      AAAA9999                   * user pressed return
.
. ------ N.D. - Insert ------
.
AAAA1000  CALL      NSCR0000                 * display screen layout
.
AAAA1100  MOVE      FOUR,YVAL
          MOVE      SIX,PCDSTYPE
          CALL      NCODE000                 * get diagnosis code
          BRANCH    EXIT,AAAA0000,AAAA1200,AAAA1300
.
AAAA1200  DISPLAY   *P1:24,*B,"Diagnosis is already on file.  ";
          CALL      HITENTER
          GOTO      AAAA1100
.
AAAA1300  CALL      NDES0000                 * enter descriptions
AAAA1400  CALL      MAINQST
          BRANCH    CCITEM,AAAA1300         * change
          COMPARE   ZERO,CCITEM
          GOTO      AAAA1500 IF EQUAL       * post
          GOTO      AAAA1000 IF LESS        * cancel
          BEEP
          GOTO      AAAA1400
.
AAAA1500  CALL      NPST0000                 * post data
          GOTO      AAAA1000
.
. ******* change Nursing Diagnosis ******
.
AAAA4000  CALL      NSCR0000                * Display screen layout
          CALL      NDCH0000                * Get code
          BRANCH    EXIT,AAAA0000,AAAA0000
          CALL      NDIS0000                * display descriptions
.
AAAA4100  CALL      MAINQST
          BRANCH    CCITEM,AAAA4200         * change
          COMPARE   ZERO,CCITEM
          GOTO      AAAA4300 IF EQUAL       * post
          GOTO      AAAA4000 IF LESS        * cancel
          BEEP
          GOTO      AAAA4100
.
AAAA4200  CALL      NDES0000                * enter descriptions
          GOTO      AAAA4100
.
AAAA4300  CALL      NPST0000                * post data
          GOTO      AAAA4000
.
. ******* delete Nursing Diagnosis *******
.
AAAA7000  CALL      NSCR0000                * Display screen
          CALL      NDCH0000                * Get code
          BRANCH    EXIT,AAAA0000,AAAA0000
.
          CALL      NDIS0000                * Display description
          CALL      DELQST
          BRANCH    CEXIT,AAAA7100,AAAA7000,AAAA0000
.
AAAA7100  CALL      NDEL0000
          GOTO      AAAA7000
.
AAAA9999  RETURN
.
.*********************************************************************
.*                  BBBB0000                    Called by : ML2000   *
.*        Diagnosis details                                          *
.*********************************************************************
BBBB0000  CALL      CLR0000
          DISPLAY   *P50:2,*V2LON,"- Diagnosis Details ",*P1:3,*EF
          DISPLAY   *P3:4,"Diagnosis Code :"
          MOVE      FIVE,FLAGZ
          MOVE      SIX,PCDSTYPE            * set type of code to enter
          MOVE      FOUR,EVERT
          MOVE      "20",ECOL
          MOVE      ZERO,CKYIMAND           * not mandatory
          MOVE      SP9,CKYIDEF9            * no default
          CALL      KYPCPDSC                * keyin code
          BRANCH    EXIT,BBBB9999,BBBB9999
.
          MOVE      PCDSCODE,CODEA          * Save code
          CALL      DDDS0000                * display description 
.
          CALL      DDCH0000                * Get choices
          GOTO      BBBB0000                * Get next code 
.  
BBBB9999  RETURN
.
.**************************************************************************
.*                               CCCC0000                                 *
.*  Called by : ML4000         Health Patterns                            *
.**************************************************************************
.
CCCC0000  CALL      CLR0000
          CALL      SCR0000                  * display screen layout 
          BRANCH    CHOOZ,CCCC4100,CCCC4150
          GOTO      CCCC9999
.
. ------ H.P. - Insert ------
.
CCCC4100  CALL      HPIS0000                 * display screen layout
.
CCCC4101  MOVE      FOUR,YVAL
          MOVE      THREE,PCDSTYPE
          CALL      NCODE000                 * get health pattern code
          MOVE      PCDSCODE,CODED            * Needed for screen redisplay
          BRANCH    EXIT,CCCC0000,CCCC4107,CCCC4105,CCCC4106
.
CCCC4105  DISPLAY   *P1:24,*EL,*B,"Health Pattern is not on file.  ";
          CALL      HITENTER
          GOTO      CCCC4101
.
.         Redisplay screen after ? routine
.
CCCC4106  CALL      HPIS0000
          DISPLAY   *P20:4,*V2LON,PCDSCODE    * Display code
.
CCCC4107  MOVE      FOUR,YVAL
          CALL      HPDS0000                  * display description
          MOVE      DIM50,DIMB50
          MOVE      PCDSCODE,PCDBCLSS         * save for posting
.
CCCC4108  MOVE      SIX,YVAL
          MOVE      SIX,PCDSTYPE
          CALL      NCODE000                  * get diagnosis code
          BRANCH    EXIT,CCCC4101,CCCC4117,CCCC4110,CCCC4115,CCCC4115
.
CCCC4110  DISPLAY   *P1:24,*B,"Diagnosis code is not on file.  ";
          CALL      HITENTER
          GOTO      CCCC4108 
.
.         Redisplay screen after ? routine
.
CCCC4115  CALL      HPIS0000                 * Display screen layout
          DISPLAY   *P20:4,*V2LON,CODED:     * Health pattern code
                    *P30:4,*HOFF,DIMB50:     * Health pattern description
                    *P20:6,*V2LON,PCDSCODE   * Display diagnosis code
.
.         If the user pressed return whilst in the ? routine then after
.         redisplaying the screen we want to go back and get another
.         health pattern.
.
          COMPARE   FIVE,EXIT                * This is set in NODB0000
          GOTO      CCCC4101 IF EQUAL
.
CCCC4117  MOVE      SIX,YVAL
          CALL      HPDS0000                 * display description
          CALL      POSTQST                  * Post data away
          BRANCH    CEXIT,CCCC4120,CCCC4108,CCCC0000 * Yes, No, Cancel    
.
CCCC4120  MOVE      THREE,PCDBTYPE 
          MOVE      CODED,PCDBCLSS
.
          CALL      HPAA0000                 * Now post
          GOTO      CCCC4100
.
. ------ H.P. - Delete ------
.
CCCC4150  MOVE      ZERO,FLAGB               * Initialize
          MOVE      ZERO,FLAGZ
          CALL      HPIS0000                 * Display screen layout
.
.         Get health pattern
.
CCCC4155  MOVE      FOUR,YVAL
          MOVE      THREE,PCDSTYPE
          MOVE      ZERO,FLAGD
. 
.         Keyin health pattern
.
          KEYIN     *P20:4,*EL,*DV,UNDLN9,*P20:4,*V2LON,PCDSCODE:
                    *P20:4,*DV,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP20,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEE          * Save
.
          MATCH     SP9,PCDSCODE
          GOTO      CCCC0000 IF EQUAL        * User pressed return
.
          CMATCH    QUEST,PCDSCODE
          GOTO      CCCC4160 IF NOT EQUAL
.
CCCC4156  MOVE      ONE,FLAGD
          MOVE      FOUR,FLAGZ
          CALL      PCPDSCDS                 * Display available codes
.
CCCC4157  DISPLAY   *P1:24,*EL,"Health pattern: "
          KEYIN     *P17:24,*DV,UNDLN9,*P17:24,*V2LON,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP20,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEE
.
          MATCH     SP9,PCDSCODE
          GOTO      CCCC0000 IF EQUAL        * User pressed return
.
          CMATCH    QUEST,PCDSCODE
          GOTO      CCCC4156 IF EQUAL
.
.         Validate  health patatern
.
CCCC4160  MOVE      THREE,PCDBTYPE
          MOVE      PCDSCODE,PCDBCLSS           * Clinic condition
          PACK      KEY20,PCDBTYPE,PCDBCLSS,SP20
          CALL      RSPCDBS1
.
CCCC4161  CALL      RKPCDBS1
          BRANCH    OVRCD,CCCC4162
.
          COMPARE   THREE,PCDBTYPE
          GOTO      CCCC4164 IF NOT EQUAL
.
          MATCH     PCDBCLSS,PCDSCODE
          GOTO      CCCC4161 IF NOT EQUAL
.
.         Now get description
.
CCCC4162  MOVE      THREE,PCDSTYPE
          MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          BRANCH    OVRCD,CCCC4164
          GOTO      CCCC4209
.
CCCC4164  DISPLAY   *P1:24,*B,"Health Pattern is not on file.  ";
          CALL      HITENTER
          BRANCH    FLAGD,CCCC4157
          GOTO      CCCC4155
.
.         Redisplay screen after ? routine
.
CCCC4209  CALL      HPIS0000                 * Redisplay screen
          DISPLAY   *P20:4,*V2LON,PCDSCODE
.
CCCC4211  MOVE      FOUR,YVAL
          CALL      HPDS0000                 * display description 
          MOVE      PCDSCODE,PCDBCLSS        * needed for delete
.
.         Get diagnosis code
.
CCCC4213  MOVE      SIX,YVAL
          MOVE      ONE,FLAGZ                * Need for ? display
          MOVE      THREE,PCDSTYPE             * get diagnosis code
          MOVE      ZERO,EXIT                * initialize 
          KEYIN     *P1:24,*EL,*P20:YVAL,*EL,*DV,UNDLN9:
                    *P20:YVAL,*V2LON,PCDSCODE,*P20:YVAL,*DV,PCDSCODE
.
CCCC4214  ENDSET    PCDSCODE
          APPEND    SP9,PCDSCODE
          RESET     PCDSCODE
.
          MATCH     SP9,PCDSCODE             * Check for return
          GOTO      CCCC4215 IF EQUAL
          GOTO      CCCC4216
.
.         Exit out but first check if we are in ? routine.  If we are then
.         first redisplay screen
.
CCCC4215  COMPARE   ONE,FLAGB
          GOTO      CCCC4155 IF NOT EQUAL
.
          CALL      HPIS0000                 * Redisplay screen
          GOTO      CCCC4155
.
CCCC4216  CMATCH    QUEST,PCDSCODE           * Check for ?
          GOTO      CCCC4217 IF EQUAL
          GOTO      CCCC4219
.
CCCC4217  MOVE      ONE,FLAGB 
          MOVE      SIX,PCDSTYPE             * Needed for PCPDSCDS
          CALL      PCPDSCDS                 * Display codes
          MOVE      THREE,PCDSTYPE
.
CCCC4218  KEYIN     *P1:24,*EL,*P1:24,"Diagnosis Code: ",*DV,UNDLN9:
                    *P17:24,*V2LON,PCDSCODE
          GOTO      CCCC4214 
.
CCCC4219  MOVE      PCDSCODE,CODEA           * Diagnosis code
          MOVE      ONE,FLAGC
          MOVE      CODEE,PCDSCODE           * Health pattern
.
.         Validate diagnosis code
.
          MOVE      THREE,PCDBTYPE
          MOVE      CODEE,PCDBCLSS
          MOVE      CODEA,PCDBCODE
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE         
          CALL      RDPCDBS1
          BRANCH    OVRCD,CCCC4220
          MOVE      TWO,EXIT
.
          BRANCH    FLAGB,CCCC4221
          BRANCH    EXIT,CCCC4155,CCCC4222,CCCC4220,CCCC4221,CCCC4221
.
CCCC4220  DISPLAY   *P1:24,*B,"Diagnosis code is not on file.  ";
          CALL      HITENTER
          BRANCH    FLAGB,CCCC4218           * ? routine in process
          GOTO      CCCC4213
.
.         Redisplay screen after ? routine
.
CCCC4221  COMPARE   THREE,EXIT               * Code not on file
          GOTO      CCCC4220 IF EQUAL        * Display error 
.
          CALL      HPIS0000                 * Display screen layout
          DISPLAY   *P20:4,*V2LON,CODEE:     * Health pattern code
                    *P30:4,*HOFF,DIM50:      * Health pattern description
                    *P20:6,*V2LON,CODEA      * Display diagnosis code
          COMPARE   FIVE,EXIT
          GOTO      CCCC4155 IF EQUAL
.
CCCC4222  MOVE      SIX,YVAL                 * display description
          MOVE      ONE,PCDSLINE
          MOVE      SIX,PCDSTYPE
          PACK      KEY13,PCDSTYPE,CODEA,PCDSLINE
.
          CALL      RDPCDSC1                 * OVRCD will not occur
          MOVE      PCDSDESC,DIM50           * Only room for 50
          DISPLAY   *P30:6,DIM50
.
          CALL      DELQST                   * Ok to delete?
          BRANCH    CEXIT,CCCC4230,CCCC4213,CCCC0000
.
CCCC4230  MOVE      THREE,PCDBTYPE
          MOVE      CODEE,PCDBCLSS
          CALL      HDEL0000                 * Now delete it
          GOTO      CCCC4150
.
CCCC9999  RETURN
.
.*****************************************************************************
.*                                   DDDD0000                                *
.*  Called by : ML5000      Type of condition                                *
.*****************************************************************************
.
DDDD0000  CALL      CLR0000
          CALL      SCR0000                  * display screen layout 
          BRANCH    CHOOZ,DDDD5100,DDDD5200
          GOTO      DDDD9999
.
. ------ T.C.C. - Insert ------
.
DDDD5100  CALL      TCIS0000                 * display screen layout
.
DDDD5101  MOVE      FOUR,YVAL
          MOVE      ONE,PCDSTYPE
          CALL      NCODE000                 * get type of condition
          BRANCH    EXIT,DDDD0000,DDDD5105,DDDD5102,DDDD5103
.
DDDD5102  DISPLAY   *P1:24,*B,"Type of Condition is not on file.  ";
          CALL      HITENTER
          GOTO      DDDD5101
.
.         Redisplay screen after ? routine
.
DDDD5103  CALL      TCIS0000
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
DDDD5105  MOVE      CODEA,CODEE              * Save
          CALL      HPDS0000                 * show description
          MOVE      PCDSCODE,PCDBCLSS        * needed for post
.
DDDD5110  MOVE      SIX,YVAL
          MOVE      TWO,PCDSTYPE
          CALL      NCODE000                 * get clinic condition
          BRANCH    EXIT,DDDD5100,DDDD5115,DDDD5113,DDDD5114
.
DDDD5113  DISPLAY   *P1:24,*B,"Clinic Condition is not on file.  ";
          CALL      HITENTER
          GOTO      DDDD5110
.
.         Redisplay screen after ? routine
.
DDDD5114  CALL      TCIS0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DIM50:      * Type of Condition description 
                    *P20:6,*V2LON,CODEA      * Clinic Condition code
.
DDDD5115  CALL      HPDS0000                 * display description
          CALL      POSTQST                  * Ok to post?
          BRANCH    CEXIT,DDDD5120,DDDD5110,DDDD0000 * Yes, No, Cancel
.
DDDD5120  MOVE      ONE,PCDBTYPE 
          CALL      HPAA0000                 * Post away
          GOTO      DDDD5100
.
. ------ T.C.C. - Delete ------
.
DDDD5200  CALL      TCIS0000 
.
DDDD5210  MOVE      FOUR,YVAL
          MOVE      EIGHT,FLAGZ              * Needed by ? routine
          MOVE      ONE,PCDSTYPE
          CALL      NCODE000 
          BRANCH    EXIT,DDDD0000,DDDD5220,DDDD5215,DDDD5216
.
DDDD5215  DISPLAY   *P1:24,*B,"Type of Condition is not on file.  ";
          CALL      HITENTER
          GOTO      DDDD5210
.
.         Redisplay screen after ? routine
.
DDDD5216  CALL      TCIS0000
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
DDDD5220  MOVE      CODEA,CODEE 
          CALL      HPDS0000                 * show description
          MOVE      PCDSCODE,PCDBCLSS
.
DDDD5230  MOVE      SIX,YVAL
          MOVE      SIX,FLAGZ                * Needed by ? routine
          MOVE      TWO,PCDSTYPE
          CALL      NCODE000                 * clinic condition
          BRANCH    EXIT,DDDD5200,DDDD5240,DDDD5235,DDDD5236
.
DDDD5235  DISPLAY   *P1:24,*B,"Clinic Condition is not on file.  ";
          CALL      HITENTER
          GOTO      DDDD5230
.
.         Redisplay screen after ? routine
.
DDDD5236  CALL      TCIS0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DIM50:      * Type of Condition description 
                    *P20:6,*V2LON,CODEA      * Clinic Condition code
.
DDDD5240  CALL      HPDS0000                 * show description
          CALL      DELQST                   * ok to delete?
          BRANCH    CEXIT,DDDD5250,DDDD5230,DDDD0000 * Yes, No, Cancel
.
DDDD5250  MOVE      ONE,PCDBTYPE
          CALL      HDEL0000                 * Now delete it
          GOTO      DDDD5200
.
DDDD9999  RETURN
.
.**************************************************************************
.*                                EEEE0000                                *
.*  Called by : ML6000        Clinic Condition                            *
.**************************************************************************
.
EEEE0000  CALL      CLR0000
          CALL      SCR0000                  * display screen layout 
          BRANCH    CHOOZ,EEEE6100,EEEE6200,EEEE6300
          GOTO      EEEE9999
.
. ------ C.C. - Insert ------
.
.         Get type of condition
.
EEEE6100  CALL      CLR0000
          CALL      CCSC0000                 * show screen
          MOVE      FOUR,YVAL
          MOVE      ONE,PCDSTYPE
          CALL      NCODE000 
          BRANCH    EXIT,EEEE0000,EEEE6110,EEEE6105,EEEE6106
.
EEEE6105  DISPLAY   *P1:24,*B,"Type of Condition is not on file.  ";
          CALL      HITENTER
          GOTO      EEEE6100
.
.         Redisplay screen after ? routine
.
EEEE6106  CALL      CCSC0000
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
EEEE6110  MOVE      CODEA,CODEE              * Save
          CALL      HPDS0000                 * display description
          MOVE      PCDSDESC,DESCA           * Save description
          MOVE      PCDSCODE,PCDBCLSS  
          MOVE      PCDSCODE,SCLSS           * save for later
.
.         Get clinic condition
.
EEEE6120  MOVE      FIVE,YVAL
          MOVE      SIX,FLAGZ
          MOVE      TWO,PCDSTYPE
          CALL      NCODE000 
          MOVE      CODEA,CODED
          BRANCH    EXIT,EEEE6100,EEEE6130,EEEE6125,EEEE6126
.
EEEE6125  DISPLAY   *P1:24,*B,"Clinic Condition is not on file.  ";
          CALL      HITENTER
          GOTO      EEEE6120
.
.         Redisplay screen after ? routine
.
EEEE6126  CALL      CCSC0000                 * Display screen layout
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA:      * Type of Condtion description
                    *P20:5,*V2LON,CODED      * Clinic Condition
.
.         The combination of type of condition & clinic condition needs to be
.         validated against the PCPDBSFD file.
.
EEEE6130  MOVE      CODEE,PCDBCLSS           * Needed by CCVL0000
          CALL      CCVL0000 
          BRANCH    EXIT,EEEE6120            * invalid combination
          CALL      HPDS0000                 * display description
          MOVE      DIM50,DESCB              * Save description
          MOVE      PCDSCODE,SCLSS2
.
.         Get diagnosis code
.
EEEE6131  MOVE      SIX,YVAL
          MOVE      SIX,PCDSTYPE
          MOVE      ZERO,FLAGD
. 
.         Keyin diagnosis code
.
          KEYIN     *P20:6,*EL,*DV,UNDLN9,*P20:6,*V2LON,PCDSCODE:
                    *P20:6,*DV,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP20,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEAA          * Save
.
          MATCH     SP9,PCDSCODE
          GOTO      EEEE6141 IF EQUAL        * User pressed return
.
          CMATCH    QUEST,PCDSCODE
          GOTO      EEEE6134 IF NOT EQUAL
.
EEEE6132  MOVE      ONE,FLAGD
          CALL      PCPDSCDS                 * Display available codes
.
EEEE6133  DISPLAY   *P1:24,*EL,"Diagnosis code: "
          KEYIN     *P17:24,*DV,UNDLN9,*P17:24,*V2LON,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP20,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEAA
.
          MATCH     SP9,PCDSCODE
          GOTO      EEEE6141 IF EQUAL        * User pressed return
.
          CMATCH    QUEST,PCDSCODE
          GOTO      EEEE6132 IF EQUAL
.
.         Validate  diagnosis code
.
EEEE6134  MOVE      SIX,PCDSTYPE
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
.
EEEE6135  CALL      RKPCDSC1
          BRANCH    OVRCD,EEEE6137
.
          COMPARE   SIX,PCDSTYPE
          GOTO      EEEE6137 IF NOT EQUAL
.
          MATCH     PCDSCODE,CODEAA
          GOTO      EEEE6135 IF NOT EQUAL
.         
          GOTO      EEEE6147
.
EEEE6137  DISPLAY   *P1:24,*B,"Diagnosis Code is not on file.  ";
          CALL      HITENTER
          BRANCH    FLAGD,EEEE6133
          GOTO      EEEE6131
.
.         User pressed return.  First redisplay screen then go back to clinic
.         condition
.
EEEE6141  CALL      CCSC0000                 * Redisplay screen
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA       * Type of Condition description
          GOTO      EEEE6120                 * Go back to clinic condition
.
EEEE6145  DISPLAY   *P1:24,*B,"Diagnosis Code is not on file.  "; 
          CALL      HITENTER
          GOTO      EEEE6131
.
EEEE6146  DISPLAY   *P1:24,*B,"Diagnosis Code already exists on database.  ";
          CALL      HITENTER
          GOTO      EEEE6131
.
.         Redisplay screen after ? routine
.
EEEE6147  CALL      CCSC0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA:      * Type of Condition description
                    *P20:5,*V2LON,CODED:     * Clinic Condition code
                    *P30:5,*HOFF,DESCB:      * Clinic Condition description
                    *P20:6,*V2LON,CODEAA     * Diagnosis Code
.
EEEE6150  MOVE      PCDSCODE,SCLSS3
          MOVE      PCDSCODE,PCDBCODE
          CALL      VALE0000                 * validate against PCPDBSFD 
          BRANCH    EXIT,EEEE6146            * invalid diagnosis code
          CALL      HPDS0000                 * show description
          MOVE      DIM50,DESCC              * Save description
          MOVE      PCDSCODE,PCDBCLSS
.
.         Get related factors
.
EEEE6160  CALL      RF0000
.
EEEE6165  CALL      CCPT0000                 * Post it        
          BRANCH    EXIT,EEEE6170,EEEE6100
          GOTO      EEEE6100
.
EEEE6170  CALL      CCSE0000                 * Select item
          GOTO      EEEE6165
.
. ------ C.C. - Change ------
.
EEEE6200  CALL      CLR0000
          MOVE      ZERO,FLAGE
          MOVE      SEVEN,FLAGZ
          CALL      CCSC0000                 * show screen
          MOVE      FOUR,YVAL                * Get type of condition
          MOVE      ONE,PCDSTYPE
          CALL      NCODE000 
          BRANCH    EXIT,EEEE0000,EEEE6210,EEEE6205,EEEE6206
.
EEEE6205  DISPLAY   *P1:24,*B,"Type of Condition is not on file.  ";
          CALL      HITENTER
          GOTO      EEEE6200
.
.         Redisplay screen after ? routine
.
EEEE6206  CALL      CCSC0000                 * Display screen layout
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
EEEE6210  MOVE      CODEA,CODEE              * Save it
          CALL      HPDS0000                 * display description
          MOVE      PCDSDESC,DESCA
          MOVE      PCDSCODE,PCDBCLSS  
          MOVE      PCDSCODE,SCLSS           * save for later
.
.         Get clinic condition
.
EEEE6220  MOVE      FIVE,YVAL
          MOVE      SIX,FLAGZ
          MOVE      TWO,PCDSTYPE
          CALL      NCODE000 
          MOVE      CODEA,CODED
          BRANCH    EXIT,EEEE6200,EEEE6230,EEEE6225,EEEE62226
.
EEEE6225  DISPLAY   *P1:24,*B,"Clinic Condition is not on file.  ";
          CALL      HITENTER
          GOTO      EEEE6220
.
.         Redisplay screen after ? routine
.
EEEE6226  CALL      CCSC0000                 * Display screen layout
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA:      * Type of Condtion description
                    *P20:5,*V2LON,CODED      * Clinic Condition code
.
.         The combination of type of condition & clinic condition needs to be
.         validated against the PCPDBSFD file.
.
EEEE6230  MOVE      CODEE,PCDBCLSS
          CALL      CCVL0000 
          BRANCH    EXIT,EEEE6220            * invalid combination
          CALL      HPDS0000                 * display description
          MOVE      PCDSDESC,DESCB
          MOVE      PCDSCODE,SCLSS2
.
.         Get diagnosis code
.
EEEE6240  MOVE      SIX,YVAL
          MOVE      ONE,FLAGE
          MOVE      NINE,FLAGZ              * Needed by ? routine
          MOVE      SIX,PCDSTYPE
          MOVE      PCDBCODE,PCDBCLSS
          CALL      NCODE000                 * validate against PCPDSCFD
          MOVE      CODEG,CODEAA
          BRANCH    EXIT,EEEE6241,EEEE6260,EEEE6245,EEEE6246
.
.         User pressed return
.
EEEE6241  CALL      CCSC0000                 * Redisplay screen
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA       * Type of Condition description
          GOTO      EEEE6220                 * Get clinic condition
.
EEEE6245  DISPLAY   *P1:24,*B,"Diagnosis Code is not on file.  "; 
          CALL      HITENTER
          GOTO      EEEE6240
.
.         Redisplay screen after ? routine
.
EEEE6246  CALL      CCSC0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA:      * Type of Condition description
                    *P20:5,*V2LON,CODED:     * Clinic Condition code
                    *P30:5,*HOFF,DESCB:      * Clinic Condition description
                    *P20:6,*V2LON,CODEG      * Diagnosis Code
.
EEEE6260  CALL      HPDS0000                 * show description
          MOVE      PCDSDESC,DESCC
          MOVE      PCDSCODE,PCDBCLSS
          MOVE      CODEG,SCLSS3
.
.         Get related factors
.
          CALL      RFCH0000                 * get and display related factors
.
EEEE6265  CALL      CCCH0000                 * select item, post or cancel
          BRANCH    EXIT,EEEE6270,EEEE6200
          GOTO      EEEE6200                 * have finished posting
.
EEEE6270  CALL      CCSE0000
          GOTO      EEEE6265
.
. ------ C.C. - Delete ------
.
EEEE6300  CALL      CLR0000
          MOVE      ZERO,FLAGE               * Needed by ? routine
          MOVE      SEVEN,FLAGZ              * Needed by ? routine
          CALL      CCSC0000                 * show screen
          MOVE      FOUR,YVAL                * Get type of condition
          MOVE      ONE,PCDSTYPE
          CALL      NCODE000 
          BRANCH    EXIT,EEEE0000,EEEE6310,EEEE6305,EEEE6306
.
EEEE6305  DISPLAY   *P1:24,*B,"Type of Condition is not on file.  ";
          CALL      HITENTER
          GOTO      EEEE6300
.
.         Redisplay screen after ? routine
.
EEEE6306  CALL      CCSC0000
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
EEEE6310  MOVE      CODEA,CODEE              * Save it
          CALL      HPDS0000                 * display description
          MOVE      PCDSDESC,DESCA           * Save description
          MOVE      PCDSCODE,PCDBCLSS  
          MOVE      PCDSCODE,SCLSS           * save for later
.
.         Get clinic condition
.
EEEE6320  MOVE      FIVE,YVAL
          MOVE      SIX,FLAGZ
          MOVE      TWO,PCDSTYPE
          CALL      NCODE000 
          MOVE      CODEA,CODED              * Save code
          BRANCH    EXIT,EEEE6300,EEEE6330,EEEE6325,EEEE6326
.
EEEE6325  DISPLAY   *P1:24,*B,"Clinic Condition is not on file.  ";
          CALL      HITENTER
          GOTO      EEEE6320
.
.         Redisplay screen after ? routine
.
EEEE6326  CALL      CCSC0000                 * Display screen layout
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA:      * Type of Condtion description
                    *P20:5,*V2LON,CODED      * Clinic Condition
.
.         The combination of type of condition & clinic condition needs to be
.         validated against the PCPDBSFD file.
.
EEEE6330  MOVE      CODEE,PCDBCLSS
          CALL      CCVL0000 
          BRANCH    EXIT,EEEE6320            * invalid combination
          CALL      HPDS0000                 * display description
          MOVE      PCDSDESC,DESCB           * Save description
          MOVE      PCDSCODE,SCLSS2
.
.         Get diagnosis code
.
EEEE6340  MOVE      SIX,YVAL
          MOVE      ONE,FLAGE               * Needed by ? routine
          MOVE      NINE,FLAGZ
          MOVE      SIX,PCDSTYPE
          CALL      NCODE000                 * validate against PCPDSCFD
          MOVE      CODEA,CODEAA
          BRANCH    EXIT,EEEE6346,EEEE6360,EEEE6345,EEEE6346
.
EEEE6345  DISPLAY   *P1:24,*B,"Diagnosis Code is not on file.  "; 
          CALL      HITENTER
          GOTO      EEEE6340
.
.         Redisplay screen after ? routine
.
EEEE6346  CALL      CCSC0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA       * Type of Condition description
          BRANCH    EXIT,EEEE6320            * Return in ? routine
          DISPLAY   *P20:5,*V2LON,CODED:     * Clinic Condition code
                    *P30:5,*HOFF,DESCB:      * Clinic Condition description
                    *P20:6,*V2LON,CODEG      * Diagnosis Code
.
EEEE6360  MOVE      PCDSDESC,DESCC 
          CALL      HPDS0000                 * show description
          MOVE      PCDSCODE,PCDBCLSS
          MOVE      CODEG,SCLSS3
.
.         Get related factors
.
          CALL      RFCH0000                 * get and display related factors
.
EEEE6365  CALL      DELQST                   * Ok to delete? 
          BRANCH    CEXIT,EEEE6370,EEEE6300,EEEE0000 * Yes, No, Cancel
.
EEEE6370  CALL      CDEL0000                 * Delete it.
          GOTO      EEEE6300                 * Have finished posting
.
EEEE9999  RETURN
.
.****************************************************************************
.*                                FFFF0000                                  *
.*  Called by : ML7000       Response Patterns                              *
.****************************************************************************
FFFF0000  CALL      CLR0000
          CALL      SCR0000                  * display screen layout 
          BRANCH    CHOOZ,FFFF7100,FFFF7200
          GOTO      FFFF9999
.
. ------ R.P. - Insert ------
.
FFFF7100  CALL      RPSC0000                 * Display screen layout
.
FFFF7102  MOVE      FOUR,YVAL
          MOVE      FOUR,PCDSTYPE
          CALL      NCODE000                 * get response pattern
          BRANCH    EXIT,FFFF0000,FFFF7110,FFFF7105,FFFF7106
.
FFFF7105  DISPLAY   *P1:24,*B,"Response Pattern is not on file.  ";
          CALL      HITENTER
          GOTO      FFFF7102
.
.         Redisplay screen after ? routine
.
FFFF7106  CALL      RPSC0000
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
FFFF7110  MOVE      CODEA,CODEE              * Save
          CALL      HPDS0000                 * get description
          MOVE      DIM50,DIMA50             * Save description
          MOVE      PCDSCODE,PCDBCLSS
.
.         Get diagnosis code
.
FFFF7120  MOVE      SIX,YVAL
          MOVE      SIX,PCDSTYPE
          MOVE      ZERO,FLAGD
. 
.         Keyin diagnosis code
.
          KEYIN     *P20:6,*EL,*DV,UNDLN9,*P20:6,*V2LON,PCDSCODE:
                    *P20:6,*DV,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP20,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEA           * Save
.
          MATCH     SP9,PCDSCODE
          GOTO      FFFF7100 IF EQUAL        * User pressed return
.
          CMATCH    QUEST,PCDSCODE
          GOTO      FFFF7123 IF NOT EQUAL
.
FFFF7121  MOVE      ONE,FLAGD
          CALL      PCPDSCDS                 * Display available codes
.
FFFF7122  DISPLAY   *P1:24,*EL,"Diagnosis code: "
          KEYIN     *P17:24,*DV,UNDLN9,*P17:24,*V2LON,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP20,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEA
.
          MATCH     SP9,PCDSCODE
          GOTO      FFFF7100 IF EQUAL        * User pressed return
.
          CMATCH    QUEST,PCDSCODE
          GOTO      FFFF7121 IF EQUAL
.
.         Validate  diagnosis code
.
FFFF7123  MOVE      FOUR,PCDBTYPE
          MOVE      CODEE,PCDBCLSS           * Response pattern
          MOVE      PCDSCODE,PCDBCODE        * Diagnosis code
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      RDPCDBS1
          BRANCH    OVRCD,FFFF7124
          GOTO      FFFF7126
.
.         Now get description
.
FFFF7124  MOVE      SIX,PCDSTYPE
          MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          BRANCH    OVRCD,FFFF7125
          GOTO      FFFF7127
.
FFFF7125  DISPLAY   *P1:24,*B,"Diagnosis Code is not on file.  ";
          CALL      HITENTER
          BRANCH    FLAGD,FFFF7122
          GOTO      FFFF7120
.
FFFF7126  DISPLAY   *P1:24,*B,"Code and Pattern is already in database.  ";
          CALL      HITENTER
          BRANCH    FLAGD,FFFF7122
          GOTO      FFFF7120
.
.         Redisplay screen after ? routine
.
FFFF7127  CALL      RPSC0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DIMA50:     * Type of Condition description 
                    *P20:6,*V2LON,CODEA      * Clinic Condition code
.
FFFF7128  CALL      HPDS0000                 * display description
          CALL      POSTQST                  * Ok to Post?
          BRANCH    CEXIT,FFFF7130,FFFF7120,FFFF0000
.
FFFF7130  MOVE      FOUR,PCDBTYPE
          CALL      HPAA0000                 * Post data away
          GOTO      FFFF7100
.
. ------ R.P. - Delete ------
.
FFFF7200  CALL      RPSC0000
.
FFFF7202  MOVE      FOUR,YVAL
          MOVE      TEN,FLAGZ
          MOVE      FOUR,PCDSTYPE
          CALL      NCODE000                 * get response pattern
          BRANCH    EXIT,FFFF0000,FFFF7210,FFFF7205,FFFF7206
.
FFFF7205  DISPLAY   *P1:24,*B,"Response Pattern is not on file.  ";
          CALL      HITENTER
          GOTO      FFFF7202
.
.         Redisplay screen after ? routine
.
FFFF7206  CALL      RPSC0000
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
FFFF7210  MOVE      CODEA,CODEE              * Save
          CALL      HPDS0000                 * get description
          MOVE      PCDSCODE,PCDBCLSS
.
FFFF7220  MOVE      SIX,YVAL
          MOVE      ZERO,FLAGD
          MOVE      TWO,FLAGZ
.
.         Keyin diagnosis code
.
          KEYIN     *P20:6,*EL,*DV,UNDLN9,*P20:6,*V2LON,PCDSCODE:
                    *P20:6,*DV,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP20,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEA           * Save
.
          MATCH     SP9,PCDSCODE
          GOTO      FFFF7200 IF EQUAL        * User pressed return
.
          CMATCH    QUEST,PCDSCODE
          GOTO      FFFF7223 IF NOT EQUAL
.
FFFF7221  MOVE      ONE,FLAGD
          CALL      PCPDSCDS                 * Display available codes
.
FFFF7222  DISPLAY   *P1:24,*EL,"Diagnosis code: "
          KEYIN     *P17:24,*DV,UNDLN9,*P17:24,*V2LON,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP20,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEA
.
          MATCH     SP9,PCDSCODE
          GOTO      FFFF7200 IF EQUAL        * User pressed return
.
          CMATCH    QUEST,PCDSCODE
          GOTO      FFFF7221 IF EQUAL
.
.         Validate code
.
FFFF7223  MOVE      FOUR,PCDBTYPE
          MOVE      CODEE,PCDBCLSS           * Response pattern
          MOVE      PCDSCODE,PCDBCODE        * Diagnosis code
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      RDPCDBS1
          BRANCH    OVRCD,FFFF7225
.
.         Now get description
.
          MOVE      SIX,PCDSTYPE
          MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          BRANCH    FLAGD,FFFF7226
          BRANCH    OVRCD,FFFF7225
          GOTO      FFFF7230                 * Display description
.
FFFF7225  DISPLAY   *P1:24,*B,"Diagnosis Code is not on file.  ";
          CALL      HITENTER
          BRANCH    FLAGD,FFFF7222
          GOTO      FFFF7220
.
.         Redisplay screen after ? routine
.
FFFF7226  CALL      RPSC0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DIM50:      * Type of Condition description 
                    *P20:6,*V2LON,CODEA      * Clinic Condition code
.
FFFF7230  CALL      HPDS0000                 * display description
          CALL      DELQST                   * ok to delete?
          BRANCH    CEXIT,FFFF7240,FFFF7220,FFFF0000
.
FFFF7240  MOVE      FOUR,PCDBTYPE
          CALL      HDEL0000                 * Delete it
          GOTO      FFFF7200
.
FFFF9999  RETURN
.
.**************************************************************************
.*                                  GGGG0000                              *
.*  Called by : ML8000          ABC PRN REST                              *
.**************************************************************************
GGGG0000  CALL      CLR0000
          CALL      SCR0000                  * display screen layout 
          BRANCH    CHOOZ,GGGG8100,GGGG8200
          GOTO      GGGG9999
.
. ------ A.P.R. - Insert ------
.
GGGG8100  CALL      APSC0000                 * Display screen layout
.
GGGG8102  MOVE      FOUR,YVAL
          MOVE      FIVE,PCDSTYPE
          CALL      NCODE000                 * get response pattern
          BRANCH    EXIT,GGGG0000,GGGG8110,GGGG8105,GGGG8106
.
GGGG8105  DISPLAY   *P1:24,*B,"ABC PRN REST Code is not on file.  ";
          CALL      HITENTER
          GOTO      GGGG8102
.
.         Redisplay screen after ? routine
.
GGGG8106  CALL      APSC0000
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
GGGG8110  MOVE      CODEA,CODEE              * Save 
          CALL      HPDS0000                 * get description
          MOVE      PCDSCODE,PCDBCLSS
.
GGGG8120  MOVE      SIX,YVAL
          MOVE      SIX,PCDSTYPE
          CALL      NCODE000                 * get diagnosis code
          BRANCH    EXIT,GGGG8100,GGGG8127,GGGG8125,GGGG8126
.
GGGG8125  DISPLAY   *P1:24,*B,"Diagnosis Code is not on file.  ";
          CALL      HITENTER
          GOTO      GGGG8120
.
.         Redisplay screen after ? routine
.
GGGG8126  CALL      APSC0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DIM50:      * Type of Condition description 
                    *P20:6,*V2LON,CODEA      * Clinic Condition code
.
GGGG8127  CALL      HPDS0000                 * display description
          CALL      POSTQST                  * Ok to Post?
          BRANCH    CEXIT,GGGG8130,GGGG8120,GGGG0000
.
GGGG8130  MOVE      FIVE,PCDBTYPE
          CALL      HPAA0000                 * Post data away
          GOTO      GGGG8100
.
. ------ A.P.R. - Delete ------
.
GGGG8200  CALL      APSC0000
.
GGGG8202  MOVE      FOUR,YVAL
          MOVE      TEN1,FLAGZ
          MOVE      FIVE,PCDSTYPE
          CALL      NCODE000                 * get response pattern
          BRANCH    EXIT,GGGG0000,GGGG8210,GGGG8205,GGGG8206
.
GGGG8205  DISPLAY   *P1:24,*B,"ABC PRN REST Code is not on file.  ";
          CALL      HITENTER
          GOTO      GGGG8202
.
.         Redisplay screen after ? routine
.
GGGG8206  CALL      APSC0000
          DISPLAY   *P20:4,*V2LON,CODEA      * Type of Condition code
.
GGGG8210  MOVE      CODEA,CODEE 
          CALL      HPDS0000                 * get description
          MOVE      PCDSCODE,PCDBCLSS
.
GGGG8220  MOVE      SIX,YVAL
          MOVE      SIX,PCDSTYPE
          MOVE      THREE,FLAGZ              * Needed for ? routine
          CALL      NCODE000                 * get diagnosis code
          BRANCH    EXIT,GGGG8200,GGGG8230,GGGG8225,GGGG8226
.
GGGG8225  DISPLAY   *P1:24,*B,"Diagnosis Code is not on file.  ";
          CALL      HITENTER
          GOTO      GGGG8120
.
.         Redisplay screen after ? routine
.
GGGG8226  CALL      APSC0000
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DIM50:      * Type of Condition description 
                    *P20:6,*V2LON,CODEG      * Diagnosis code
.
GGGG8230  CALL      HPDS0000                 * display description
          CALL      DELQST                   * ok to delete?
          BRANCH    CEXIT,GGGG8240,GGGG8220,GGGG0000
.
GGGG8240  MOVE      FIVE,PCDBTYPE
          MOVE      CODEE,PCDBCLSS
          MOVE      CODEG,PCDSCODE
          CALL      HDEL0000                 * Delete it
          GOTO      GGGG8200
.
GGGG9999  RETURN
.
.*****************************************************************************
.*                                   NSCR0000                                *
.*  Called by - ML2100      Nursing diagnosis - display screen layout        *
.*****************************************************************************
NSCR0000  DISPLAY   *P1:4,*EF,*P4:4,*HOFF,"Diagnosis Code:":
                    *P1:6,*V2LON,ONE,*HOFF,DOT," Description   :":
                    *P18:7,":"
.
NSCR9999  RETURN
.
.******************************************************************************
.*                                  NCODE000                                  *
.*  Called by - ML2100    Nursing diagnosis - get diagnostic code             *
.*              ML4101                                                        *
.*  Note: Set up PCDSTYPE before calling this routine                         *
.******************************************************************************
NCODE000  MOVE      ZERO,EXIT                * initialize 
          KEYIN     *P1:24,*EL,*P20:YVAL,*EL,*DV,UNDLN9:
                    *P20:YVAL,*V2LON,PCDSCODE,*P20:YVAL,*DV,PCDSCODE
          CALL      NODA0000                  * Validate code
          MOVE      PCDSCODE,CODEA           * Save code
.
NCODE999  RETURN
.
.****************************************************************************
.*                                 NODA0000                                 *
.*  Called by : NCODE0000     Validate diagnosis code                       *
.*                            Note: NODA0000 was originally written as      *
.*  NOD0000 and incorporated NODB0000.  However, a problem was encountered  *
.*  which required the subroutine to be split in two.  The problem is that  *
.*  the routine validates the code in PCPDSCFD and PCPDBCFD with the same   *
.*  value of PCDSTYPE in both validations.  In the delete mode in health    *
.*  patterns, we require PCDSTYPE=3 for the validation in PCPDSCFD (health  *
.*  pattern) and PCDBTYPE=6 for the validation in PCPDBCFD (diagnosis code).*
.*  For this reason, the subroutine has been split in two so that NODA0000  *
.*  validates PCPDSCFD and NODB0000 validates PCPDBCFD.  Appologies for the *
.*  multiple entry points into NODB0000.  Feel free to clean this code up.  *
.****************************************************************************
.
.         In insert mode in nursing diagnosis, a ? is not a valid entry for
.         a diagnosis code.  We are inserting new codes so what is the point
.         of seeing what is on file already.
.
NODA0000  COMPARE   ONE,OPTION
          GOTO      NODA0001 IF EQUAL
.
          CMATCH    QUEST,PCDSCODE           * Check for ?
          GOTO      NODB7000 IF EQUAL
.
NODA0001  ENDSET    PCDSCODE
          APPEND    SP9,PCDSCODE            * pad out with spaces
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEG
.
          MATCH     SP9,PCDSCODE            * check for return
          GOTO      NODB9000 IF EQUAL
.
.         Validate code against PCPDSCFD file
.
          MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE 
.
          CALL      RDPCDSC1
          BRANCH    OVRCD,NODB9100            * Error - not on file.
.
.         The nursing diagnosis code is only written to the DSC file so we
.         don't need to do NODB0000
.
          BRANCH    OPTION,NODA9000,NODA9200,NODA9200,NODA9000,NODA9000:
                           NODA9000,NODA9000
          GOTO      NODA9200
.
NODA9000  BRANCH    CHOOZ,NODB8000 
.
NODA9200  CALL      NODB0000
.
NODA9999  RETURN
.
.*************************************************************************
.*                               NODB9999                                *
.*  Called by : NODA0000  Validate code in PCPDBSFD and set exit flag as *
.*                        appropriate.                                   *
.*************************************************************************
.
.         Validate code against PCPDBSFD file
.
.         Special case here.  If we are in the delete option in ABC PRN CODE 
.         and are entering the code for the diagnosis code, then we want 
.         PCDSTYPE=5 for NODA0000 and PCDSTYPE=6 for NODB0000.
.
NODB0000  COMPARE   SEVEN,OPTION             * ABC PRN REST
          GOTO      NODB0001 IF NOT EQUAL
          BRANCH    CHOOZ,NODB0001           * Insert - we want delete
          COMPARE   SIX,PCDSTYPE             * Diagnosis code
          GOTO      NODB0001 IF NOT EQUAL
.
          MOVE      FIVE,PCDSTYPE 
          MOVE      CODEE,PCDSCODE
. 
NODB0001  COMPARE   FIVE,OPTION              * Clinic condition
          GOTO      NODB0002 IF NOT EQUAL
          BRANCH    CHOOZ,NODB0002           * We want change/delete
          COMPARE   SIX,PCDSTYPE             * Diagnosis code
          GOTO      NODB0002 IF NOT EQUAL
.
          MOVE      TWO,PCDSTYPE
          MOVE      CODED,PCDSCODE
          MOVE      CODEG,CODEA
.
NODB0002  MOVE      PCDSTYPE,PCDBTYPE
          MOVE      PCDBCLSS,TPCLSS
          MOVE      PCDSCODE,PCDBCLSS
.
.         The following will be true if we are in Type of condition and are
.         keying in the Clinic Condition in delete mode
.
          COMPARE   FOUR,OPTION
          GOTO      NODB0003 IF NOT EQUAL
          COMPARE   TWO,PCDSTYPE
          GOTO      NODB0003 IF NOT EQUAL
          COMPARE   TWO,CHOOZ
          GOTO      NODB0003 IF NOT EQUAL
.
          MOVE      ONE,PCDBTYPE
          MOVE      CODEE,PCDBCLSS
.
NODB0003  COMPARE   ONE,FLAGC
          GOTO      NODB0005 IF NOT EQUAL
          MOVE      CODEA,PCDBCLSS          * Diagnosis code
.
NODB0005  PACK      KEY20,PCDBTYPE,PCDBCLSS,SP20
          CALL      RSPCDBS1
.
NODB0010  CALL      RKPCDBS1
          BRANCH    OVRCD,NODB6000            * Not on file
.
.         The following will be true if we are in Type of condition and are
.         keying in the Clinic Condition
.
          COMPARE   FOUR,OPTION
          GOTO      NODB0019 IF NOT EQUAL
          COMPARE   TWO,PCDSTYPE
          GOTO      NODB0019 IF NOT EQUAL
          COMPARE   TWO,CHOOZ
          GOTO      NODB0019 IF NOT EQUAL
.  
          COMPARE   ONE,PCDBTYPE
          GOTO      NODB6000 IF NOT EQUAL
.
          MATCH     CODEE,PCDBCLSS
          GOTO      NODB6000 IF NOT EQUAL
.
          MATCH     PCDSCODE,PCDBCODE
          GOTO      NODB0010 IF NOT EQUAL
          GOTO      NODB1000
.
NODB0019  COMPARE   PCDSTYPE,PCDBTYPE             * Have we read too far?
          GOTO      NODB6000 IF NOT EQUAL
.
NODB0020  MATCH     PCDSCODE,PCDBCLSS
          GOTO      NODB6000 IF NOT EQUAL
.
NODB0030  COMPARE   ONE,FLAGC
          GOTO      NODB1000 IF NOT EQUAL
.
NODB0031  MATCH     PCDBCODE,CODEA
          GOTO      NODB0010 IF NOT EQUAL
          GOTO      NODB1001 IF EQUAL
.
NODB1000  BRANCH    FLAGE,NODB0031           * Clinic cond. - change/del diag.
. 
NODB1001  COMPARE   ONE,PCDBTYPE
          GOTO      NODB8000 IF EQUAL
.
          MOVE      TPCLSS,PCDBCLSS
          GOTO      NODB8000                  * Valid entry
.
.         In insert mode for diagnosis details and health patterns, we don't 
.         want the code to be
.         in PCPDBSFD for a valid entry.  Thus check if we are in the insert
.         mode and if so change the exit flag.
.
NODB6000  BRANCH    OPTION,NODB9100,NODB6010,NODB6010,NODB9100,NODB9100:
                            NODB9100,NODB9100
.
NODB6010  COMPARE   ONE,CHOOZ                * Insert mode          
          GOTO      NODB8000 IF EQUAL
.
          GOTO      NODB9100
.
.         If EXIT=1, ie. they pressed return whilst in the ? routine, then leave
.         EXIT=1.  This means that when we return to the calling routine we 
.         won't redisplay the screen.  We will go back to the previous screen
.         as per normal when return is pressed.  However, if they have entered a
.         valid code, then set EXIT=4 so that when we return to the calling
.         routine, on the BRANCH we will redisplay the screen.
.
NODB7000  CALL      QEST0000                 * ? routine
          COMPARE   ONE,EXIT
          GOTO      NODB9999 IF EQUAL        * User pressed return in ? routine
          COMPARE   FIVE,EXIT
          GOTO      NODB9999 IF EQUAL
          MOVE      FOUR,EXIT                * Set flag for redisplay routine
          GOTO      NODB9999
.
NODB8000  MOVE      TWO,EXIT                 * Valid code entry
          GOTO      NODB9999
. 
.         If we are in Health Patterns and in insert mode, we need to redisplay
.         the screen if they press return whilst in the ? routine for 
.         diagnosis code.  So do some tests and set the exit flag.
.
NODB9000  COMPARE   THREE,OPTION             * Health pattern
          GOTO      NODB9005 IF NOT EQUAL 
          COMPARE   ONE,CHOOZ                * Insert mode
          GOTO      NODB9005 IF NOT EQUAL
          COMPARE   SIX,PCDSTYPE             * Diagnosis code
          GOTO      NODB9005 IF NOT EQUAL
          MOVE      FIVE,EXIT                * Set EXIT flag
          GOTO      NODB9999
.
NODB9005  MOVE      ONE,EXIT                 * Return was pressed
          GOTO      NODB9999
.
NODB9100  MOVE      THREE,EXIT               * Code not on file.
.
NODB9999  RETURN
.
.**************************************************************************
.*                                QEST0000                                *
.*  Called by : NCODE0000  Question mark handling routine                 *
.**************************************************************************
QEST0000  CALL      PCPDSCDS                 * Call up codes
.
QEST0500  BRANCH    PCDSTYPE,QEST0510,QEST0520,QEST0530,QEST0540,QEST0550:
                             QEST0560
.
QEST0510  DISPLAY   *P1:24,*EL,"Type of Condition:"; 
          KEYIN     *P20:24,*DV,UNDLN9,*V2LON,*P20:24,PCDSCODE,*P20:24,*DV:
                       PCDSCODE
          GOTO      QEST0570
.
QEST0520  DISPLAY   *P1:24,*EL,"Clinic Condition:"; 
          KEYIN     *P19:24,*DV,UNDLN9,*V2LON,*P19:24,PCDSCODE,*P19:24,*DV:
                       PCDSCODE
          GOTO      QEST0570
.
QEST0530  DISPLAY   *P1:24,*EL,"Health Pattern:"; 
          KEYIN     *P17:24,*DV,UNDLN9,*V2LON,*P17:24,PCDSCODE,*P17:24,*DV:
                       PCDSCODE
          GOTO      QEST0570
.
QEST0540  DISPLAY   *P1:24,*EL,"Response Pattern:"; 
          KEYIN     *P19:24,*DV,UNDLN9,*V2LON,*P19:24,PCDSCODE,*P19:24,*DV:
                       PCDSCODE
          GOTO      QEST0570
.
QEST0550  DISPLAY   *P1:24,*EL,"ABC PRN REST Code:"; 
          KEYIN     *P20:24,*DV,UNDLN9,*V2LON,*P20:24,PCDSCODE,*P20:24,*DV:
                       PCDSCODE
          GOTO      QEST0570
.
QEST0560  DISPLAY   *P1:24,*EL,"Diagnosis Code:"; 
          KEYIN     *P17:24,*DV,UNDLN9,*V2LON,*P17:24,PCDSCODE,*P17:24,*DV:
                       PCDSCODE
.
QEST0570  CMATCH    QUEST,PCDSCODE           * Check for another ?
          GOTO      QEST0000 IF EQUAL
.
          CALL      NODA0000                  * Validate code
.
          BRANCH    EXIT,QEST9999,QEST9999,QEST1000
          COMPARE   FIVE,EXIT
          GOTO      QEST9999 IF EQUAL
.
QEST1000  BRANCH    PCDSTYPE,QEST1510,QEST1520,QEST1530,QEST1540,QEST1550:
                             QEST1560
.
QEST1510  DISPLAY   *P1:24,*EL,*B,"Type of Condition is not on file.  "; 
          GOTO      QEST1570
.
QEST1520  DISPLAY   *P1:24,*EL,*B,"Clinic Condition is not on file.  "; 
          GOTO      QEST1570
.
QEST1530  DISPLAY   *P1:24,*EL,*B,"Health Pattern is not on file.  "; 
          GOTO      QEST1570
.
QEST1540  DISPLAY   *P1:24,*EL,*B,"Response Pattern is not on file.  "; 
          GOTO      QEST1570
.
QEST1550  DISPLAY   *P1:24,*EL,*B,"ABC PRN REST Code is not on file.  "; 
          GOTO      QEST1570
.
QEST1560  DISPLAY   *P1:24,*EL,*B,"Diagnosis Code is not on file.  "; 
.
QEST1570  CALL      HITENTER
          GOTO      QEST0500
.
QEST9999  RETURN
.
.*************************************************************************
.*                  NDES0000
.*        Nursing diagnosis - get description
.*************************************************************************
NDES0000  DISPLAY   *P1:24,*EL: 
                    *P20:6,UNDLN,UNDLN20,UNDLN5:
                    *P20:7,UNDLN,UNDLN20,UNDLN5
.
          KEYIN     *P20:6,*V2LON,DESC1:
                    *P20:6,*DV,DESC1
.
          KEYIN     *P20:7,*V2LON,DESC2:
                    *P20:7,*DV,DESC2
.
.         Check for an entry as this is a mandatory field
.
          ENDSET    DESC1
          APPEND    SP60,DESC1            * pad out with spaces
          RESET     DESC1
.
          ENDSET    DESC2
          APPEND    SP60,DESC2            * pad out with spaces
          RESET     DESC2
.
          MATCH     SP60,DESC1
          GOTO      NDES9999 IF NOT EQUAL    * something was entered
.
          MATCH     SP60,DESC2
          GOTO      NDES9999 IF NOT EQUAL    * something was entered
.
          DISPLAY   *P1:24,*B,"A description must be entered.  ";
          CALL      HITENTER
          GOTO      NDES0000          
.
NDES9999  RETURN
.
.****************************************************************************
.*                  NDIS0000
.*        Display Nursing diagnosis description
.****************************************************************************
NDIS0000  MOVE      SP60,DESC1
          MOVE      SP60,DESC2
          MOVE      ONE,PCDSLINE
          MOVE      SIX,PCDSTYPE 
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          BRANCH    OVRCD,NDIS9999
          DISPLAY   *P20:6,PCDSDESC          * display 1 st description
          MOVE      PCDSDESC,DESC1
.
          MOVE      TWO,PCDSLINE  
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE  * display 2nd description
          CALL      RDPCDSC1
          BRANCH    OVRCD,NDIS9999
.
          DISPLAY   *P20:7,PCDSDESC
          MOVE      PCDSDESC,DESC2
.
NDIS9999  RETURN
.
.*********************************************************************
.*                  NPST0000
.*        Nursing Diagnosis 
.*********************************************************************
NPST0000  DISPLAY   *P60:24,"*** Posting ***";
          MOVE      SIX,PCDSTYPE             * record type
.
          MATCH     SP60,DESC1
          GOTO      NPST1000 IF EQUAL       * blank first line
.
.         Write away first description line
.
          MOVE      ONE,PCDSLINE             * line number
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          IF        OVRCD = ONE
            MOVE      DESC1,PCDSDESC
            CALL      WRPD0000
            MOVE      ONE,AUDIFLAG            * add
            CALL      DSCA0000
          ELSE
            MOVE      TWO,AUDIFLAG            * before change
            CALL      DSCA0000
            MOVE      DESC1,PCDSDESC
            CALL      UPPCDSC1
            MOVE      THREE,AUDIFLAG          * after change
            CALL      DSCA0000
          ENDIF
.
          MATCH     SP60,DESC2
          GOTO      NPST8000 IF EQUAL       * delete second line
.
.         Write away second description line
.
          MOVE      TWO,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          IF        OVRCD = ONE
            MOVE      DESC2,PCDSDESC
            CALL      WRPD0000
            MOVE      ONE,AUDIFLAG            * add
            CALL      DSCA0000
          ELSE
            MOVE      TWO,AUDIFLAG            * before change
            CALL      DSCA0000
            MOVE      DESC2,PCDSDESC
            CALL      UPPCDSC1
            MOVE      THREE,AUDIFLAG          * after change
            CALL      DSCA0000
          ENDIF
          GOTO      NPST9000
.
.         the first line entered was blank so make the second line entered 
.         the first line
.
NPST1000  MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          IF        OVRCD = ONE
            MOVE      DESC2,PCDSDESC
            CALL      WRPD0000
            MOVE      ONE,AUDIFLAG            * add
            CALL      DSCA0000
          ELSE
            MOVE      TWO,AUDIFLAG            * before change
            CALL      DSCA0000
            MOVE      DESC2,PCDSDESC
            CALL      UPPCDSC1
            MOVE      THREE,AUDIFLAG          * after change
            CALL      DSCA0000
          ENDIF
.
.         delete second line
.
NPST8000  MOVE      TWO,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      DEPCDSC1
          MOVE      FOUR,AUDIFLAG           * delete
          CALL      DSCA0000
.
NPST9000  DISPLAY   *P60:24,*EL;             * Remove Posting display
.
NPST9999  RETURN
.
.**************************************************************************
.*                  NDCH0000
.*        Nursing Diagnosis - get code
.**************************************************************************
NDCH0000  MOVE      SIX,PCDSTYPE            * set type of code to enter
          MOVE      FIVE,FLAGZ              * spastic ? routine needs this
          MOVE      FOUR,EVERT
          MOVE      "20",ECOL
          MOVE      ZERO,CKYIMAND           * not mandatory
          MOVE      SP9,CKYIDEF9            * no default
          CALL      KYPCPDSC                * keyin code
NDCH9999  RETURN
.
.****************************************************************************
.*                  NDEL0000
.*        Nursing diag. - delete
.****************************************************************************
NDEL0000  DISPLAY   *P60:24,"*** Deleting ***";
          MOVE      ONE,PCDSLINE
          MOVE      SIX,PCDSTYPE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      DEPCDSC1
          MOVE      FOUR,AUDIFLAG
          CALL      DSCA0000
          MOVE      TWO,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      DEPCDSC1
          MOVE      FOUR,AUDIFLAG
          CALL      DSCA0000
          DISPLAY   *P60:24,*EL;
.
NDEL9999  RETURN
.
.**************************************************************************
.*                               HPIS0000                                 *
.*  Called by - ML4100  Health pattern screen layout                      *
.*              ML4200                                                    *
.**************************************************************************
HPIS0000  DISPLAY   *P1:4,*EF,*P4:4,"Health Pattern:":
                    *P4:6,"Diagnosis Code:"
HPIS9999  RETURN
.
.****************************************************************************
.*                            HPDS0000                                      *
.*  Called by : ML4108     Display health pattern description               *
.****************************************************************************
HPDS0000  MOVE      PCDSDESC,DIM50              * only room for 50 spaces
          DISPLAY   *P30:YVAL,DIM50             * display description
HPDS9999  RETURN
.
.**********************************************************************
.*                               HPAA0000                             *
.*  Called by : ML4120          Post data away now                    *
.**********************************************************************
HPAA0000  DISPLAY   *P60:24,"*** Posting ***";
          MOVE      PCDSCODE,PCDBCODE
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE 
          CALL      RAPCDBS1
          BRANCH    OVRCD,HPAA1000           * No entry
.
          DISPLAY   *P1:24,*B,*EL,"Entry already exists in database.  ";
          CALL      HITENTER
          GOTO      HPAA2000
.
HPAA1000  CALL      WRPCDBS1
          MOVE      ONE,AUDIFLAG            * add
          CALL      DBSA0000                * Write to audit file
.
HPAA2000  DISPLAY   *P1:24,*EL;
.
HPAA9999  RETURN
.
.**************************************************************************
.*                                   HDEL0000                             *
.*                                  Delete entry                          *
.**************************************************************************
HDEL0000  DISPLAY   *P60:24,"*** Deleting ***";
          MOVE      PCDSCODE,PCDBCODE
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      DEPCDBS1
          MOVE      FOUR,AUDIFLAG            * Write to audit file
          CALL      DBSA0000
          DISPLAY   *P60:24,*EL; 
HDEL9999  RETURN
.
.*************************************************************************
.*                                  TCIS0000                             *
.*                  Type of condiiton - display screen layout            *
.*************************************************************************
TCIS0000  DISPLAY   *P1:4,*EF,"Type of Condition:":
                    *P1:6,"Clinic Condition :"
TCIS9999  RETURN
.
.**************************************************************************
.*                              RPSC0000                                  *
.*                            Display screen layout                       *
.**************************************************************************
RPSC0000  BRANCH    CHOOZ,RPSC1000,RPSC2000
.
RPSC1000  DISPLAY   *P70:2,*V2LON," Insert ";
          GOTO      RPSC3000
.
RPSC2000  DISPLAY   *P70:2,*V2LON," Delete ";
.
RPSC3000  DISPLAY   *P1:3,*EF,*P1:4,"Response Pattern :":
                    *P1:6,"Diagnosis Code   :"
.
RPSC9999  RETURN
.
.**************************************************************************
.*                               APSC0000                                 *
.*                            Display screen layout                       *
.**************************************************************************
APSC0000  DISPLAY   *P1:4,*EF,"ABC PRN REST Code:":
                    *P1:6,"Diagnosis Code   :"
APSC9999  RETURN
.
.***************************************************************************
.*                               CCSC0000                                  *
.*                            Show screen layout for clinic condition      *
.***************************************************************************
CCSC0000  DISPLAY   *P1:4,*EF,"Type of Condit'n :":
                    *P1:5,"Clinic Condition :":
                    *P1:6,"Diagnosis Code   :":
                    *P4:8,"Related Factors":
                    *P2:9,*V2LON,ONE,*HOFF,DOT 
CCSC9999  RETURN
.
.****************************************************************************
.*                               CCVL0000                                   *
.*          Validate type of cond. & clinic cond. in database file          *
.****************************************************************************
CCVL0000  MOVE      ZERO,EXIT
          MOVE      ONE,PCDBTYPE
          MOVE      PCDSCODE,PCDBCODE
.
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      RAPCDBS1
          BRANCH    OVRCD,CCVL1000
          GOTO      CCVL9999
.
CCVL1000  DISPLAY   *P1:24,*B,"Combination doesn't exist on database.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT 
.
CCVL9999  RETURN
.
.****************************************************************************
.*                                  RF0000                                  *
.*                             Get related factors                          *
.****************************************************************************
RF0000    MOVE      ZERO,EXIT
          MOVE      NINE,YVAL
          MOVE      TWO,NUMB
          MOVE      ONE,COUNTER
. 
RF0500    KEYIN     *P1:24,*EL,*P5:YVAL,*DV,UNDLN9,*V2LON,*P5:YVAL,*JR,PCDSCODE:
                    *P5:YVAL,*DV,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP9,PCDSCODE
          RESET     PCDSCODE
.
          MATCH     NUQST,PCDSCODE           * Check for ?
          CALL      QERF0000 IF EQUAL
.
          STORE     PCDSCODE,COUNTER,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                     CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                     CODE14
          MATCH     SP9,PCDSCODE
          GOTO      RF9999 IF EQUAL
.
.         Validate code against PCPDSCFD, PCPCRLFD and PCPDBSFD files
.
RF0600    MOVE      EIGHT,PCDSTYPE
          MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
.
          CALL      RDPCDSC1
          BRANCH    OVRCD,RF1010             * not on file
.
          MOVE      PCDSDESC,RFDESC          * Save description
.
.         Check for duplicate entries
.
RF1002    MOVE      ONE,COUNTER1
.
RF1003    LOAD      TMP,COUNTER1,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                 CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                 CODE14 
          COMPARE   COUNTER1,COUNTER
          GOTO      RF2000 IF EQUAL
.
          MATCH     TMP,PCDSCODE
          GOTO      RF1004 IF EQUAL
          ADD       ONE,COUNTER1
          COMPARE   TEN5,COUNTER1
          GOTO      RF1003 IF NOT EQUAL
          GOTO      RF2000
.
RF1004    DISPLAY   *P1:24,*B,"Duplicate entries are not permitted.  ";
          CALL      HITENTER
          GOTO      RF0500
.
RF1010    DISPLAY   *P1:24,*B,"Related factor is not on file.  ";
          CALL      HITENTER
          GOTO      RF0500
.
RF2000    DISPLAY   *P16:YVAL,RFDESC       * show description
.
          STORE     RFDESC,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13:
                                     DESC14A
          ADD       ONE,COUNTER
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      RF9999 IF EQUAL
          DISPLAY   *P1:YVAL,*V2LON,NUMB,*HOFF,DOT
          ADD       ONE,NUMB
          GOTO      RF0500 
.
RF9999    RETURN
.
.****************************************************************************
.*                                 QERF0000                                 *
.*  Called by : RF1000      Related Factors - ? handling routine            *
.****************************************************************************
QERF0000  MOVE      EIGHT,PCDSTYPE           * Needed by PCPDSCDS 
          CALL      PCPDSCDS                 * Call ? routine
.
QERF0500  DISPLAY   *P1:24,*EL,"Related Factor: ";
          KEYIN     *P17:24,*DV,UNDLN9,*V2LON,*P17:24,*JR,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP9,PCDSCODE
          RESET     PCDSCODE
.
          MOVE      PCDSCODE,CODEF           * Save
.
          MATCH     NUQST,PCDSCODE           * Check for ?
          GOTO      QERF0000 IF EQUAL
.
          MATCH     SP9,PCDSCODE             * Check for return
          GOTO      QERF9000 IF EQUAL 
.
.         Validate code against PCPDSCFD
.
          MOVE      EIGHT,PCDSTYPE
          MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          BRANCH    OVRCD,QERF1010             * not on file
.
.         Check for duplicate entries
.
QERF1001  MOVE      ONE,COUNTER1
.
QERF1002  LOAD      TMP,COUNTER1,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                 CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                 CODE14 
          COMPARE   COUNTER1,COUNTER
          GOTO      QERF9000 IF EQUAL
.
          MATCH     TMP,PCDSCODE
          GOTO      QERF1004 IF EQUAL
          ADD       ONE,COUNTER1
          COMPARE   TEN5,COUNTER1
          GOTO      QERF1002 IF NOT EQUAL
          GOTO      QERF9000
.
QERF1004  DISPLAY   *P1:24,*B,"Duplicate entries are not permitted.  ";
          CALL      HITENTER
          GOTO      QERF0500
.
QERF1010  DISPLAY   *P1:24,*B,"Related factor is not on file.  ";
          CALL      HITENTER
          GOTO      QERF0500
.
.         Redisplay screen
.
QERF9000  CALL      CCSC0000                 * Display screen layout
          DISPLAY   *P20:4,*V2LON,CODEE:     * Type of Condition code
                    *P30:4,*HOFF,DESCA:      * Type of Condition description
                    *P20:5,*V2LON,CODED:     * Clinic Condition code
                    *P30:5,*HOFF,DESCB:      * Clinic Condition description
                    *P20:6,*V2LON,CODEAA:    * Diagnosis Code
                    *P30:6,*HOFF,DESCC       * Diagnosis Code description
.
.         Now display the related factors that were keyed in and their 
.         descriptions
.
          MOVE      ONE,COUNTER2             * Set loop counter
          MOVE      NINE,YVALA               * Set initial y co-ord
          SUB       ONE,NUMB
          MOVE      ONE,TMP2                * Save it
.
QERF9100  LOAD      CODEA,COUNTER2,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                   CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                   CODE14
          LOAD      DIMA60,COUNTER2,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                   DESC8,DESC9,DESC10,DESC11,DESC12,DESC13:
                                   DESC14A
          MATCH     SP9,CODEA                * No need to display blanks
          GOTO      QERF9200 IF EQUAL
.
          DISPLAY   *P1:YVALA,*V2LON,TMP2,*HOFF,DOT: * Line number 
                    *P5:YVALA,*V2LON,CODEA: * Code
                    *P16:YVALA,*HOFF,DIMA60   * Description
          ADD       ONE,TMP2                 * Increment line number
          ADD       ONE,YVALA
.
QERF9200  ADD       ONE,COUNTER2
          COMPARE   TEN5,COUNTER2            * Only 14 lines per screen
          GOTO      QERF9100 IF LESS
.
          ADD       ONE,NUMB                * Go down to next line
          DISPLAY   *P1:YVALA,*V2LON,TMP2,*HOFF,DOT * Line number 
          MOVE      CCITEM,TMP2             * restore value
          DISPLAY   *P1:YVAL,*V2LON,TMP2,*HOFF,DOT: 
                    *P5:YVAL,*V2LON,CODEF   * Code entered in
.
QERF9999  RETURN
.
.****************************************************************************
.*                                 CCPT0000                                 *
.*  Called by : EEEE6160    Clinic Condition - Post question                *
.****************************************************************************
CCPT0000  MOVE      ZERO,EXIT 
          CALL      MAINQST
.
          COMPARE   "-1",CCITEM
          GOTO      CCPT9100 IF EQUAL        * Cancel
.
          COMPARE   ZERO,CCITEM            
          GOTO      CCPT1000 IF EQUAL        * Post
.
          COMPARE   CCITEM,COUNTER
          GOTO      CCPT9000 IF NOT LESS
.
          BEEP
          GOTO      CCPT0000                 * incorrect keyin
.
CCPT1000  DISPLAY   *P60:24,"*** Posting ***";
.
.         Post the diagnosis code to the PCPDBSFD file
.
          MOVE      TWO,PCDBTYPE
          MOVE      SCLSS2,PCDBCLSS
          MOVE      SCLSS3,PCDBCODE
.
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE 
.
          CALL      WRPCDBS1
          MOVE      ONE,AUDIFLAG            * add
          CALL      DBSA0000                * Write to audit file
.
.         Post the related factors to the PCPCRLFD file
.
          MOVE      SCLSS,PCCRCTYP
          MOVE      CODED,PCCRCLIN
          MOVE      CODEAA,PCCRDIAG
          MOVE      ONE,COUNTER
.
CCPT1100  LOAD      PCCRRELT,COUNTER,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6:
                                     CODE7,CODE8,CODE9,CODE10,CODE11,CODE12:
                                     CODE13,CODE14 
.
          MATCH     SP9,PCCRRELT             * don't write blank records
          GOTO      CCPT1200 IF EQUAL
.
          PACK      KEY36,PCCRCTYP,PCCRCLIN,PCCRDIAG,PCCRRELT
          CALL      WRPCCRL1
          MOVE      ONE,AUDIFLAG            * add
          CALL      CRLA0000                * Write to audit file
.
CCPT1200  ADD       ONE,COUNTER
.
          COMPARE   TEN5,COUNTER
          GOTO      CCPT1100 IF LESS
.
          GOTO      CCPT9999
.
CCPT9000  MOVE      ONE,EXIT
          GOTO      CCPT9999
.
CCPT9100  MOVE      TWO,EXIT
.
CCPT9999  RETURN
.
.****************************************************************************
.*                                 CCSE0000                                 *
.*  Called by : EEEE6160        Selected Item                               *
.****************************************************************************
CCSE0000  MOVE      CCITEM,YVAL
          ADD       EIGHT,YVAL 
.
CCSE0002  KEYIN     *P1:24,*EL,*P5:YVAL,*EL,*DV,UNDLN9,*V2LON,*JR:
                    *P5:YVAL,PCDSCODE,*P5:YVAL,*DV,PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP9,PCDSCODE
          RESET     PCDSCODE
.
          CMATCH    QUEST,PCDSCODE           * Check for ?
          CALL      QERF0000 IF EQUAL
.
          MATCH     NUQST,PCDSCODE           * Check for ?
          CALL      QERF0000 IF EQUAL
.
          MATCH     SP9,PCDSCODE
          GOTO      CCSE0020 IF NOT EQUAL
.
.         Code is blank so clear description
.
CCSE0010  MOVE      SP60,PCDSDESC
          GOTO      CCSE1003
.
.         Validate code against PCPDSCFD
.
CCSE0020  MOVE      EIGHT,PCDSTYPE
          MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
.
          CALL      RDPCDSC1
          BRANCH    OVRCD,CCSE1010             * not on file
.
.         Check for duplicate entries
.
CCSE0030  MOVE      ONE,COUNTER1
.
CCSE1000  LOAD      TMP,COUNTER1,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                 CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                 CODE14 
.
.         The next 2 lines are subtle but important.  They prevent an error
.         being flagged if the same code is entered on the same line.
.
          COMPARE   COUNTER1,CCITEM
          GOTO      CCSE1002 IF EQUAL
.
          MATCH     TMP,PCDSCODE
          GOTO      CCSE1004 IF EQUAL
.
CCSE1002  ADD       ONE,COUNTER1
          COMPARE   TEN5,COUNTER1
          GOTO      CCSE1000 IF NOT EQUAL
.
          DISPLAY   *P16:YVAL,PCDSDESC;  * show description
.
CCSE1003  STORE     PCDSDESC,CCITEM,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13:
                                     DESC14A
.
          STORE     PCDSCODE,CCITEM,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                    CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                    CODE14
          IF        CCITEM = COUNTER
            MATCH     SP60,PCDSDESC
            IF        !@EQUAL
              ADD       ONE,COUNTER              * used by calling subroutine
.                                                only increment if adding
            ENDIF
          ENDIF 
.
.         Don't add a line number if they press return
.
          MATCH     SP9,PCDSCODE            
          GOTO      CCSE9999 IF EQUAL
          GOTO      CCSE9000
.
CCSE1004  DISPLAY   *P1:24,*B,"Duplicate entries are not permitted.  ";
          CALL      HITENTER
          GOTO      CCSE0000
.
CCSE1010  DISPLAY   *P1:24,*B,"Related factor is not on file.  ";
          CALL      HITENTER
          GOTO      CCSE0000
.
CCSE9000  ADD       ONE,CCITEM                 * add an extra line number
          COMPARE   TEN5,CCITEM
          GOTO      CCSE9999 IF EQUAL
          ADD       ONE,YVAL        
.
          MOVE      CCITEM,TMP2
.
          DISPLAY   *P1:YVAL,*V2LON,TMP2,*HOFF,DOT;
.
CCSE9999  RETURN
.
.****************************************************************************
.*                                 VALE0000                                 *
.*  Called by : EEEE6150   Validate diagnosis code in PCPDBSFD              *
.****************************************************************************
VALE0000  MOVE      ZERO,EXIT
          MOVE      TWO,PCDBTYPE
          MOVE      SCLSS2,PCDBCLSS
.
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
.
          CALL      RDPCDBS1
          BRANCH    OVRCD,VALE9999
.
          MOVE      ONE,EXIT   
.
VALE9999  RETURN
. 
.****************************************************************************
.*                                  RFCH0000                                *
.*                      Get related factors and display them                *
.****************************************************************************
RFCH0000  MOVE      NINE,YVAL
          MOVE      TWO,NUMB
          MOVE      ONE,COUNTER
.
.         Get code for related factor
.
          MOVE      SCLSS,PCCRCTYP
          MOVE      SCLSS2,PCCRCLIN
          MOVE      SCLSS3,PCCRDIAG
          PACK      KEY36,PCCRCTYP,PCCRCLIN,PCCRDIAG,SP9
          CALL      RSPCCRL1
.
RFCH1000  CALL      RKPCCRL1
          BRANCH    OVRCD,RFCH9999           * eof
.
          MATCH     SCLSS,PCCRCTYP           * Same type of clinic condition?
          GOTO      RFCH9999 IF NOT EQUAL
.
          MATCH     SCLSS2,PCCRCLIN          * Same clinic condition?
          GOTO      RFCH9999 IF NOT EQUAL 
.
          MATCH     SCLSS3,PCCRDIAG          * Same nursing diagnosis?
          GOTO      RFCH9999 IF NOT EQUAL
.
          STORE     PCCRRELT,COUNTER,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                     CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                     CODE14
          DISPLAY   *P5:YVAL,*V2LON,PCCRRELT        * show code
.
          MOVE      TWO,AUDIFLAG
          CALL      CRLA0000                 * Write to audit file
.
.         Get description for code
.
          MOVE      ONE,PCDSLINE
          MOVE      PCCRRELT,PCDSCODE
          MOVE      EIGHT,PCDSTYPE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          BRANCH    OVRCD,RFCH2000           * should not occur
.
          DISPLAY   *P16:YVAL,PCDSDESC       * show description
          STORE     PCDSDESC,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13:
                                     DESC14A
.
RFCH2000  ADD       ONE,COUNTER
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL             * bottom of screen
          GOTO      RFCH9999 IF EQUAL
          DISPLAY   *P1:YVAL,*V2LON,NUMB,*HOFF,DOT
          ADD       ONE,NUMB
          GOTO      RFCH1000
.
RFCH9999  RETURN
.
.****************************************************************************
.*                                 CCCH0000                                 *
.* Select item or Post or Cancel when Change or Delete in Clinic Condition  *
.****************************************************************************
CCCH0000  MOVE      ZERO,EXIT 
          CALL      MAINQST
.
          COMPARE   ZERO,CCITEM            
          GOTO      CCCH1000 IF EQUAL        * Post
          GOTO      CCCH9100 IF LESS         * Cancel
.
          COMPARE   CCITEM,COUNTER
          GOTO      CCCH9000 IF NOT LESS
.
          BEEP
          GOTO      CCCH0000                 * incorrect keyin
.
CCCH1000  DISPLAY   *P60:24,"*** Posting ***";
.
.         Post the diagnosis code to the PCPDBSFD file
.
          MOVE      TWO,PCDBTYPE
          MOVE      SCLSS2,PCDBCLSS
          MOVE      SCODE,PCDSCODE
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE 
.
          CALL      UPPCDBS1
          MOVE      THREE,AUDIFLAG           * after change
          CALL      DBSA0000                 * Write to audit file
.
.         Post the related factors to the PCPCRLFD file.  
.         First delete all related factors with the same type of clinic
.         condition, clinic condition and nursing diagnosis then write the new
.         ones.  This will handle blank records.
.
          MOVE      SCLSS,PCCRCTYP
          MOVE      SCLSS2,PCCRCLIN
          MOVE      SCLSS3,PCCRDIAG
          MOVE      ONE,COUNTER
          PACK      KEY36,PCCRCTYP,PCCRCLIN,PCCRDIAG,SP9
.
CCCH1098  CALL      RSPCCRL1
          CALL      RKPCCRL1
          BRANCH    OVRCD,CCCH1099           * eof
.
          MATCH     SCLSS,PCCRCTYP           * Same type of clinic condition?
          GOTO      CCCH1099 IF NOT EQUAL
.
          MATCH     SCLSS2,PCCRCLIN           * Same clinic condition?
          GOTO      CCCH1099 IF NOT EQUAL
.
          MATCH     SCLSS3,PCCRDIAG           * Same nursing diagnosis?
          GOTO      CCCH1099 IF NOT EQUAL
.
          PACK      KEY36,PCCRCTYP,PCCRCLIN,PCCRDIAG,PCCRRELT
.
          CALL      DEPCCRL1
          GOTO      CCCH1098
. 
CCCH1099  MOVE      SCLSS,PCCRCTYP
          MOVE      SCLSS2,PCCRCLIN
          MOVE      SCLSS3,PCCRDIAG
          MOVE      SP9,DIM9
.
CCCH1100  LOAD      PCCRRELT,COUNTER,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6:
                                     CODE7,CODE8,CODE9,CODE10,CODE11,CODE12:
                                     CODE13,CODE14 
.
          MATCH     SP9,PCCRRELT             * don't write blank records
          GOTO      CCCH1200 IF EQUAL
.
          MATCH     PCCRRELT,DIM9
          GOTO      CCCH9999 IF EQUAL        * prevents I*D
          MOVE      PCCRRELT,DIM9
.
          PACK      KEY36,PCCRCTYP,PCCRCLIN,PCCRDIAG,PCCRRELT
          CALL      WRPCCRL1
          MOVE      ONE,AUDIFLAG
          CALL      CRLA0000                 * Write to audit file
.
CCCH1200  ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER
          GOTO      CCCH1100 IF LESS
.
          GOTO      CCCH9999
.
CCCH9000  MOVE      ONE,EXIT
          GOTO      CCCH9999
.
CCCH9100  MOVE      TWO,EXIT
.
.         Delete the entry from the audit file for the related factors as 
.         cancel was chosen
.
          MOVE      ONE,COUNTER9             * Set loop counter
.
CCCH9105  MOVE      FIVE,AUDIFLAG
          CALL      CRLA0000
          ADD       ONE,COUNTER9             * Increment loop counter
          COMPARE   TEN5,COUNTER9            * Possibly 14 to delete
          GOTO      CCCH9105 IF LESS
.
CCCH9999  RETURN
.
.****************************************************************************
.*                                 CDEL0000                                 *
.*  Called by : EEEE6370     Clinic condition - now delete entries          *
.****************************************************************************
CDEL0000  DISPLAY   *P60:24,"*** Deleting ***";
.
.         Delete the diagnosis code from the PCPDBSFD file
.
          MOVE      TWO,PCDBTYPE
          MOVE      CODED,PCDBCLSS
          MOVE      CODEG,PCDBCODE
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      DEPCDBS1
          MOVE      FOUR,AUDIFLAG
          CALL      DBSA0000                 * Write to audit file 
.
.         Delete the related factors from the PCPCRLFD file
.
          MOVE      SCLSS,PCCRCTYP
          MOVE      SCLSS2,PCCRCLIN
          MOVE      SCLSS3,PCCRDIAG
          PACK      KEY36,PCCRCTYP,PCCRCLIN,PCCRDIAG,SP9
.
CDEL1000  CALL      RSPCCRL1
          CALL      RKPCCRL1
          BRANCH    OVRCD,CDEL9000           * eof
. 
          MATCH     SCLSS,PCCRCTYP           * Same type of clinic condition?
          GOTO      CDEL9000 IF NOT EQUAL
.
          MATCH     SCLSS2,PCCRCLIN           * Same clinic condition?
          GOTO      CDEL9000 IF NOT EQUAL
.
          MATCH     SCLSS3,PCCRDIAG           * Same nursing diagnosis?
          GOTO      CDEL9000 IF NOT EQUAL
.
          PACK      KEY36,PCCRCTYP,PCCRCLIN,PCCRDIAG,PCCRRELT
          CALL      DEPCCRL1
          MOVE      FOUR,AUDIFLAG
          CALL      CRLA0000                  * Write to audit file
          GOTO      CDEL1000
.
.         Now delete from the db file
.
CDEL9000  DISPLAY   *P60:24,*EL;
.
CDEL9999  RETURN
.
.***************************************************************************
.*                                 DDDS0000                                *
.*  Called by : BBBB1100      Display description                          *
.***************************************************************************
DDDS0000  DISPLAY   *P20:5,PCDSDESC          * 1st line of description
          MOVE      PCDSDESC,DESCA
          MOVE      PCDSCODE,PACODE
          MOVE      PCDSTYPE,TMP4
.
          MOVE      TWO,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          BRANCH    OVRCD,DDDS9999           * No second description
.
          DISPLAY   *P20:6,PCDSDESC
          MOVE      PCDSDESC,DIMA60
.
DDDS9999  RETURN
.
.*********************************************************************
.                   DDCH0000                    Called by : BBBB0000
.         Diagnosis Details - enter which type of code
.*********************************************************************
DDCH0000  CALL      CLR0000
          CALL      DBSM0000                 * Get menu choice
          COMPARE   ZERO,COPTION
          GOTO      DDCH9999 IF EQUAL
          BRANCH    COPTION,DDCH2000,DDCH3000,DDCH4000,DDCH5000,DDCH6000
.
.         Related factors
.
DDCH2000  CALL      DDRF0000
          GOTO      DDCH0000 
.
.         Defining characteristics
.
DDCH3000  CALL      DDBB0000
          GOTO      DDCH0000
.
.         Differential diagnoses
.
DDCH4000  CALL      DDFD0000
          GOTO      DDCH0000
.
.         Patient outcomes
.
DDCH5000  CALL      DDPO0000
          GOTO      DDCH0000
.
.         Nursing Interventions
.
DDCH6000  CALL      DDNI0000
          GOTO      DDCH0000
.
DDCH9999  RETURN
.
.*****************************************************************************
.*                  DBSM0000
.*        Display menu options
.*****************************************************************************
DBSM0000  HLINE     *G37,2,50,80
          DISPLAY   *P1:7,*EF:
                    *P1:08,*V2LON,"0",*HOFF," = Exit":
                    *P1:09,*V2LON,"1",*HOFF," = Related Factors":
                    *P1:10,*V2LON,"2",*HOFF," = Defining Characteristics":
                    *P1:11,*V2LON,"3",*HOFF," = Differential Diagnoses":
                    *P1:12,*V2LON,"4",*HOFF," = Patient Outcomes":
                    *P1:13,*V2LON,"5",*HOFF," = Nursing Interventions":
                    *P1:15,"Select Option :"
.
DBSM1000  KEYIN     *P17:15,*EL,*DV,UNDLN1:
                    *P17:15,*V2LON,COPTION
          BRANCH    COPTION,DBSM9999,DBSM9999,DBSM9999,DBSM9999,DBSM9999
          COMPARE   ZERO,COPTION
          GOTO      DBSM9999 IF EQUAL
.
          BEEP
          GOTO      DBSM1000
.
DBSM9999  RETURN
.
.*********************************************************************
.                   DDRF0000
.         maintain Related Factors
.*********************************************************************
DDRF0000  DISPLAY   *P50:2,*V2LON," Related Factors ";
          MOVE      EIGHT,DBSTYPE
          MOVE      EIGHT,DSCTYPE
          CALL      CRMD0000
DDRF9999  RETURN
.
.*********************************************************************
.                   DDBB0000 
.         maintain Defining Characteristics
.*********************************************************************
DDBB0000  DISPLAY   *P50:2,*V2LON," Defining Chars. ";
          MOVE      TEN,DBSTYPE             * Set up variables
          MOVE      TEN,DSCTYPE 
          CALL      CRMD0000
DDBB9999  RETURN
.
.*************************************************************************
.                   DDPO0000
.         Maintain Patient Outcomes
.*************************************************************************
DDPO0000  DISPLAY   *P50:2,*V2LON," Patient Outcome ";
          MOVE      SEVEN,DBSTYPE           * Set up variables
          MOVE      SEVEN,DSCTYPE 
          CALL      CRMD0000
DDPO9999  RETURN
.
.************************************************************************
.                   DDNI0000
.         Maintain Nursing Interventions
.************************************************************************
DDNI0000  DISPLAY   *P50:2,*V2LON," Interventions ";
          MOVE      NINE,DBSTYPE            * Set up variables
          MOVE      NINE,DSCTYPE
          CALL      CRMD0000
DDNI9999  RETURN
.
.**************************************************************************
.*                                 KILL0000                               *
.*                             Delete tmp file                            *
.*  Called by : ML0000                                                    *
.**************************************************************************
KILL0000  CLOSE     WORDTEMP,DELETE 
.
KILL9999  RETURN
.
.**************************************************************************
.*                                DDZZ0000                                *
.*  Called by : DDIF0000   Diff. diagnosis - Select item, Cancel or Post  *
.**************************************************************************
DDZZ0000  CALL      MAINQST
.
          COMPARE   "-1",CCITEM              * Cancel
          GOTO      DDZZ9000 IF EQUAL
.
          COMPARE   ZERO,CCITEM              * Post
          GOTO      DDZZ2000 IF EQUAL
.
          BRANCH    CCITEM,DDZZ3000,DDZZ3000,DDZZ3000,DDZZ3000,DDZZ3000:
                           DDZZ3000,DDZZ3000,DDZZ3000,DDZZ3000,DDZZ3000:
                           DDZZ3000,DDZZ3000,DDZZ3000,DDZZ3000 
.
          BEEP                               * Incorrect keyin
          GOTO      DDZZ0000
.
DDZZ2000  DISPLAY   *P60:24,"*** Posting ***";
.
.         When in change mode, before posting delete all the current entries
.         on record.  However, don't do this when in insert mode.
.
          COMPARE   TWO,CHOOZC
          GOTO      DDZZ2009 IF EQUAL
          BRANCH    CHOOZ,DDZZ2020
.
.         Delete all entries in PCPDBSFD with PCDBTYPE=6
.
DDZZ2009  MOVE      SIX,PCDBTYPE
.
DDZZ2010  PACK      KEY20,PCDBTYPE,SP20
          CALL      RSPCDBS1
          CALL      RKPCDBS1
          BRANCH    OVRCD,DDZZ2020           * Have we read too far?
. 
          COMPARE   SIX,PCDBTYPE             * Same diagnosis code?
          GOTO      DDZZ2020 IF NOT EQUAL
.
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      DEPCDBS1
          GOTO      DDZZ2010
.
.         For each non blank code keyed in, write it to the PCPDBSFD
.
DDZZ2020  MOVE      ONE,COUNTER
          MOVE      CODEA,PCDBCLSS
          MOVE      SIX,PCDBTYPE
.
DDZZ2030  LOAD      PCDBCODE,COUNTER,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                     CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                     CODE14
          ENDSET    PCDBCODE
          APPEND    SP9,PCDBCODE
          RESET     PCDBCODE
.
          MATCH     SP9,PCDBCODE
          GOTO      DDZZ2040 IF EQUAL        * Don't write blank records
.
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      WRPCDBS1
          COMPARE   ONE,CHOOZ                * Insert mode
          GOTO      DDZZ2031 IF NOT EQUAL
          MOVE      ONE,AUDIFLAG            * add
          CALL      DBSA0000                * Write to audit file
.
DDZZ2031  COMPARE   TWO,CHOOZ                * Change mode
          GOTO      DDZZ2040 IF NOT EQUAL
          MOVE      THREE,AUDIFLAG           * after change
          CALL      DBSA0000                 * Write to audit file
.
DDZZ2040  ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER
          GOTO      DDZZ2030 IF LESS
          GOTO      DDZZ9999                 * Have finished posting
.
DDZZ3000  MOVE      CCITEM,COUNTER           * Select item
          ADD       EIGHT,CCITEM
          MOVE      CCITEM,YVAL
          CALL      GETD0000
          GOTO      DDZZ0000 
.
DDZZ9000  COMPARE   TWO,CHOOZ
          GOTO      DDZZ9999 IF NOT EQUAL
.
.         User chose CANCEL after going into CHANGE mode.  We need to delete
.         the entry in the audit file.
.
          MOVE      ONE,COUNTER9
.
DDZZ9001  MOVE      FIVE,AUDIFLAG
          CALL      DBSA0000
          ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER9
          GOTO      DDZZ9001 IF LESS         * Possibly 14 deletes to do
.
DDZZ9999  RETURN
.
.**************************************************************************
.*                               SCDD0000                                 *
.*  Called by: DDZZ0000    Display screen layout                          *
.**************************************************************************
SCDD0000  MOVE      ONE,NUMB
          MOVE      NINE,YVAL
          DISPLAY   *P1:7,*EF:
                    *P5:8,*V2LON,*ULON,"Differential Diagnoses                 "
.
SCDD1000  DISPLAY   *P1:YVAL,*V2LON,NUMB,*HOFF,DOT
          ADD       ONE,NUMB
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      SCDD1000 IF LESS
.
SCDD9999  RETURN 
.
.**************************************************************************
.*                                 DIFD0000                               *
.*  Called by : DDZZF0000   Differential diagnoses - insert               *
.**************************************************************************
DIFD0000  PACK      KEY20,DBSTYPE,CODEA,SP20
          CALL      RSPCDBS1
          CALL      RKPCDBS1
          BRANCH    OVRCD,DIFD1000
.
          COMPARE   DBSTYPE,PCDBTYPE
          GOTO      DIFD1000 IF NOT EQUAL
.
          MATCH     CODEA,PCDBCLSS
          GOTO      DIFD1000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,"Diagnoses already exist.  Use change mode.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      DIFD9999
.
DIFD1000  CALL      CLR0000
          MOVE      NINE,YVAL
          MOVE      ONE,COUNTER              * Set up parameters
.
DIFD5000  CALL      GETD0000                 * Keyin diagnosis code
          BRANCH    EXIT,DIFD9995            * User pressed return
          ADD       ONE,YVAL
          ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER
          GOTO      DIFD5000 IF LESS
.
DIFD9995  MOVE      ZERO,EXIT
DIFD9999  RETURN
.
.***************************************************************************
.*                                 GETD0000                                *
.*  Called by : DIFD0000  Get the differential diagnoses                   *
.***************************************************************************
GETD0000  MOVE      ZERO,EXIT 
.
GETD0010  KEYIN     *P1:24,*EL,*P5:YVAL,*EL,*DV,UNDLN9,*P5:YVAL,*V2LON,PCDSCODE:
                    *P5:YVAL,*DV,PCDSCODE
.         
          ENDSET    PCDSCODE
          APPEND    SP9,PCDSCODE
          RESET     PCDSCODE
.
          CMATCH    QUEST,PCDSCODE           * Check for ?
          CALL      GETQ0000 IF EQUAL
.
          STORE     PCDSCODE,COUNTER,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                     CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                     CODE14
.
          MATCH     SP9,PCDSCODE
          GOTO      GETD0020 IF NOT EQUAL
.
.         If they select an item and return on it, we need to erase the 
.         description.
.
GETD0015  MOVE      SP60,PCDSDESC
          MOVE      ONE,EXIT                 * Exit flag
          GOTO      GETD0200
.
.         Validate code against PCPDSCFD file
.
GETD0020  MOVE      ONE,PCDSLINE
          MOVE      SIX,PCDSTYPE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
.
          CALL      RDPCDSC1
          BRANCH    OVRCD,GETD1000           * Not on file
.
.         Check for duplicate entries
.
GETD0100  CALL      CHDU0000
          BRANCH    EXIT,GETD0010            * Is duplicated, Is not
.
.         Store description
.
GETD0200  STORE     PCDSDESC,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13:
                                     DESC14A
.
.         Display   description
.
          DISPLAY   *P20:YVAL,PCDSDESC
          GOTO      GETD9999
.
GETD1000  DISPLAY   *P1:24,*EL,*B,"Diagnosis code is not on file.  ";
          CALL      HITENTER
          GOTO      GETD0010
.
GETD9999  RETURN
.
.****************************************************************************
.*                                 CHDU0000                                 *
.*  Called by : GETD0100 Check for duplicate entries                        *
.****************************************************************************
CHDU0000  MOVE      ONE,COUNTER1
.
CHDU1000  LOAD      TMP,COUNTER1,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                 CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                 CODE14
.
.         This line is important because it prevents a COMPARE on the same
.         line which we entered the code. Without it we will get a duplicate
.         entry error message every time we enter a code
.
          COMPARE   COUNTER1,COUNTER
          GOTO      CHDU1050 IF EQUAL
.
          MATCH     TMP,PCDSCODE             * Check for duplicate entry
          GOTO      CHDU9000 IF EQUAL
.
CHDU1050  ADD       ONE,COUNTER1
          COMPARE   TEN5,COUNTER1
          GOTO      CHDU1000 IF LESS
.
CHDU1100  MOVE      TWO,EXIT                 * Set exit flag
          GOTO      CHDU9999                 * Not a duplicate entry
.
CHDU9000  DISPLAY   *P1:24,*EL,*B,"Duplicate entries are not permitted.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT                 * Set exit flag
.
CHDU9999  RETURN
.
.**************************************************************************
.*                               GETQ0000                                 *
.*                       Question mark handling routine                   *
.**************************************************************************
GETQ0000  MOVE      SIX,PCDSTYPE             * Needed by PCPDSCDS 
          CALL      PCPDSCDS                 * Call up codes
.
GETQ0500  DISPLAY   *P1:24,*EL,"Diagnosis Code:";
          KEYIN     *P17:24,*DV,UNDLN9,*V2LON,*P17:24,PCDSCODE,*P17:24,*DV:
                       PCDSCODE
.
          ENDSET    PCDSCODE
          APPEND    SP9,PCDSCODE
          RESET     PCDSCODE
.
          MATCH     SP9,PCDSCODE             * Check for return
          GOTO      GETQ9100 IF EQUAL
.
          CMATCH    QUEST,PCDSCODE           * Check for another ?
          GOTO      GETQ0000 IF EQUAL
.
.         Validate code against PCDSCFD file
.
          MOVE      ONE,PCDSLINE
          MOVE      SIX,PCDSTYPE
          MOVE      PCDSCODE,CODEZ
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
.
          CALL      RDPCDSC1                 * Full read
          BRANCH    OVRCD,GETQ1000
          GOTO      GETQ9000
.
GETQ1000  DISPLAY   *P1:24,*EL,*B,"Diagnosis code is not on file.  ";
          CALL      HITENTER
          GOTO      GETQ0500
.
GETQ9000  CALL      CHDU0000                 * Check for duplicate entry
          BRANCH    EXIT,GETQ0500            * Duplicate entry
.
GETQ9100  CALL      GTDS0000                 * Redisplay screen
.
GETQ9999  RETURN
.
.***************************************************************************
.*                                  GTDS0000                               *
.*                        Redisplay screen after ? option                  *
.***************************************************************************
GTDS0000  DISPLAY   *P4:4,*EF,"Diagnosis Code: ",*V2LON,CODEA:
                    *P20:5,*HOFF,DESCA:
                    *P20:6,DIMA60
.
.         Save the value of YVAL as this variable is used in SCDDOOOO
.
          MOVE      YVAL,TMP4
          CALL      SCDD0000                 * Display screen layout
.
.         Now restore YVAL
.
          MOVE      TMP4,YVAL
          DISPLAY   *P20:4,*V2LON,CODEA:     * Diagnosis code
                    *P20:5,*HOFF,DESCA:      * Description 1
                    *P20:6,DIMA60            * Description 2
.
.         Now display differential diagnoses that were keyed in and there 
.         descriptions
.
          MOVE      ONE,COUNTER2
          MOVE      NINE,YVALA
.
GTDS1000  LOAD      CODEB,COUNTER2,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                   CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                   CODE14
          LOAD      DESCC,COUNTER2,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                   DESC8,DESC9,DESC10,DESC11,DESC12,DESC13:
                                   DESC14A
          DISPLAY   *P5:YVALA,*V2LON,CODEB:
                    *P20:YVALA,*HOFF,DESCC 
.
          ADD       ONE,YVALA
          ADD       ONE,COUNTER2
          COMPARE   COUNTER2,TEN5            * 14 lines on the screen
          GOTO      GTDS1000 IF NOT EQUAL
.
.         Now display the code that was just keyed in
.
GTDS2000  DISPLAY   *P5:YVAL,*V2LON,PCDSCODE
.
GTDS9999  RETURN
.
.*********************************************************************
.                   DDIF0000
.         Differential Diagnosis - insert mode
.*********************************************************************
DDIF0000  CALL      SCDD0000                * Display screen layout
          CALL      DIFD0000                * Get the diff. diagnoses
          BRANCH    EXIT,DDIF9999           * items on file already
          CALL      DDZZ0000                * Select item, Cancel or Post
DDIF9999  RETURN
.
.*********************************************************************
.*                  DDCM0000
.*        Differential Diagnosis - change mode
.*********************************************************************
DDCM0000  CALL      DCHE0000                 * Check if there are any entries
          BRANCH    EXIT,DDCM9999            * None to display
          CALL      DDZZ0000                 * Select item, Cancel or Post
DDCM9999  RETURN
.
.*********************************************************************
.*                  DIDE0000
.*        Differential diagnoses - delete option
.*********************************************************************
DIDE0000  PACK      KEY20,DBSTYPE,CODEA,SP20
          CALL      RSPCDBS1
          CALL      RKPCDBS1
          BRANCH    OVRCD,DIDE1000
.
          COMPARE   DBSTYPE,PCDBTYPE
          GOTO      DIDE1000 IF NOT EQUAL
.
          MATCH     CODEA,PCDBCLSS
          GOTO      DIDE1000 IF NOT EQUAL
.
          CALL      DELQST
          COMPARE   ONE,CEXIT
          GOTO      DIDE9999 IF NOT EQUAL   * dont delete
          DISPLAY   *P60:24,"*** Deleting ***";
.
DIDE0500  PACK      KEY20,DBSTYPE,CODEA,PCDBCODE
          CALL      DEPCDBS1
          MOVE      FOUR,AUDIFLAG
          CALL      DBSA0000                 * Write to audit file 
.
          PACK      KEY20,DBSTYPE,CODEA,SP20
          CALL      RSPCDBS1
          CALL      RKPCDBS1
          BRANCH    OVRCD,DIDE9999           * Have we read too far?
.
          COMPARE   DBSTYPE,PCDBTYPE
          GOTO      DIDE9999 IF NOT EQUAL
.
          MATCH     CODEA,PCDBCLSS
          GOTO      DIDE9999 IF NOT EQUAL
          GOTO      DIDE0500
.
DIDE1000  DISPLAY   *P1:24,*EL,*B,"There are no differential diagnoses on ":
                       "file.  ";
          CALL      HITENTER
. 
DIDE9999  RETURN
.
.***************************************************************************
.*                                DCHE0000                                 *
.*  Called by : DDCM0000 Check if there are any differential diagnoses to  *
.*                       display and if there are display them             *
.***************************************************************************
DCHE0000  CALL      CLR0000                  * Clear variables
          MOVE      ZERO,EXIT                * Set exit flag
          MOVE      SIX,PCDBTYPE
          MOVE      SIX,PCDSTYPE
          MOVE      ONE,PCDSLINE
          MOVE      CODEA,PCDBCLSS
.
          CALL      SCDD0000                 * Display screen layout
          MOVE      NINE,YVAL
          MOVE      ONE,COUNTER
          PACK      KEY20,PCDBTYPE,PCDBCLSS,SP20
          CALL      RSPCDBS1
          CALL      RKPCDBS1
          BRANCH    OVRCD,DCHE9000
.
          COMPARE   SIX,PCDBTYPE             * Have we read too far?
          GOTO      DCHE9000 IF NOT EQUAL
.
          MATCH     CODEA,PCDBCLSS
          GOTO      DCHE9000 IF NOT EQUAL
.
DCHE1000  STORE     PCDBCODE,COUNTER,CODE1,CODE2,CODE3,CODE4,CODE5,CODE6,CODE7:
                                     CODE8,CODE9,CODE10,CODE11,CODE12,CODE13:
                                     CODE14       
          COMPARE   TWO,CHOOZ                * Change mode
          GOTO      DCHE1001 IF NOT EQUAL
          MOVE      TWO,AUDIFLAG            * before change
          CALL      DBSA0000                * Write to audit file
.
.         Get discription from PCPDSCODE file
.
DCHE1001  MOVE      PCDBCODE,PCDSCODE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
.
.         OVRCD should not occur as there should always be a description for
.         each code but we will include it anyway just to make the code more
.         roboust.
.
          CALL      RDPCDSC1
          BRANCH    OVRCD,DCHE8999           * Should never occur
.
          STORE     PCDSDESC,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13:
                                     DESC14A
.
.         Display codes and descriptions
.
          DISPLAY   *P5:YVAL,*V2LON,PCDBCODE,*HOFF,*P20:YVAL,PCDSDESC
.
          CALL      RKPCDBS1                 * Get next code
          BRANCH    OVRCD,DCHE9999           * Legitamate condition
.
          COMPARE   SIX,PCDBTYPE             * Have we read far enough?
          GOTO      DCHE9999 IF NOT EQUAL    * Yes
.
          MATCH     CODEA,PCDBCLSS
          GOTO      DCHE9999 IF NOT EQUAL
.
          ADD       ONE,YVAL
          ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER
          GOTO      DCHE1000 IF LESS
          GOTO      DCHE9999                 * Have displayed 14 codes
.
DCHE8999  DISPLAY   *P1:24,*EL,*B,"Cannot find description for this code.  ";
          GOTO      DCHE9100
.
DCHE9000  DISPLAY   *P1:24,*EL,*B,"There are no differential diagnoses on ":
                      "file.  ";
.
DCHE9100  CALL      HITENTER
          MOVE      ONE,EXIT
.
DCHE9999  RETURN
.
.*********************************************************************
.                   ETSC0000                    Called by : CRMD0000 
.         allow modification of the interventions
.*********************************************************************
ETSC0000  DISPLAY   *P1:7,*EF,*P10:7,"Patient specific details to be entered ":
                    "as '______' or (specify)",*V2LON,*ULON:
                    *P5:8,"Description                   ":
                    "                              "
          IF        DPCNCARE = 1 & DBSTYPE = 9
            DISPLAY   *P66:8,*V2LON,*ULON,"Time":
                      *P71:8,"Stf Cls"
          ENDIF
          MOVE      ONE,CURRINT             * set current intervention
.
ETSC0500  MOVE      "15",FORM2
          WHILE     FORM2
            MOVE      SP20,DISPINT[FORM2]
            SUB       ONE,FORM2
          DO
          MOVE      ZERO,CNTINT             * clear count
          MOVE      ZERO,SAVINTV            * clear save code
          MOVE      "8",CVERT
          MOVE      SP20,KEY11
          CALL      RSTEMPF
.
. ------- loop over the temp file -------
.
ETSC1000  CALL      RKTEMPF
          BRANCH    OVRCD,ETSC5000          * end of file
.
          MATCH     SP60,XIFDESC
          GOTO      ETSC1000 IF EQUAL       * no description to display
.
          ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      ETSC4000 IF NOT LESS    * need new page
.
. ------- display the current item -------
.
ETSC3000  MOVE      XIFCODE,FORM9
          IF        SAVINTV <> FORM9
            ADD       ONE,CNTINT
            DISPLAY   *P1:CVERT,*V2LON,CNTINT,*HOFF,"."
            IF        DPCNCARE = 1 & DBSTYPE = 9
              DISPLAY   *V2LON,*P66:CVERT,XIFTIME,*P73:CVERT,XIFSTAF
            ENDIF
            MOVE      XIFCODE,SAVINTV
            PACK      DISPINT[CNTINT],SAVINTV,CVERT   * save first line details
          ENDIF
          DISPLAY   *P5:CVERT,XIFDESC
          PACK      LASTKEYF,XIFCODE,XIFLINE
          GOTO      ETSC1000
.
. ------- need a new screen -------
.
ETSC4000  MOVE      ONE,CALLPOSN
          CALL      KEYF0000                * keyin response
.                        Post     Cancel   First    Next     Description
          BRANCH    EXIT,ETSC9000,ETSC9995,ETSC0000,ETSC7000,ETSC8000:
                         ETSC8100,ETSC8200
.                        Add      Delete
          GOTO      ETSC6000                * change item
.
. ------- end of data --------
.
ETSC5000  MOVE      TWO,CALLPOSN
          CALL      KEYF0000                * keyin response
.                        Post     Cancel   First    Next     Description
          BRANCH    EXIT,ETSC9000,ETSC9995,ETSC0000,ETSC5900,ETSC8000:
                         ETSC8100,ETSC8200
.                        Add      Delete
          GOTO      ETSC6000                * change item
.
ETSC5900  BEEP
ETSC5910  BRANCH    CALLPOSN,ETSC4000,ETSC5000
          GOTO      ETSC0000
.
. ******* change either time or staff classification *******
.
ETSC6000  UNPACK    DISPINT[CURRINT],KEY9,KEY2
          PACK      KEY11,KEY9,SP1,ONE
          CALL      RDTEMPF
          BRANCH    OVRCD,ETSC5900
.
          PERFORM   CEXIT,KTIM0000,KSTF0000
          COMPARE   TWO,EXIT
          GOTO      ETSC9995 IF EQUAL       * exitchar entered
          GOTO      ETSC5910
. 
. ******* next screen *******
.
ETSC7000  MOVE      LASTKEYF,KEY11          * last line displayed
          CALL      RDTEMPF
ETSC7100  CALL      RKTEMPF
          BRANCH    OVRCD,ETSC5900          * no next screen
.
          MOVE      "15",FORM2              * clear screen storage array
          WHILE     FORM2
            MOVE      SP20,DISPINT[FORM2]
            SUB       ONE,FORM2
          DO
          MOVE      "9",CVERT
          DISPLAY   *P1:CVERT,*EF;
          MOVE      ONE,CURRINT             * set current int
          MOVE      ZERO,CNTINT             * clear counter
          GOTO      ETSC3000
.
ETSC8000  CALL      KDSC0000                * change description
          GOTO      ETSC0500                * keep current item highlighted
.
ETSC8100  CALL      ADDC0000                * add code
          GOTO      ETSC0000
.
ETSC8200  CALL      DELC0000                * delete the current description
          BRANCH    EXIT,ETSC0000,ETSC5910  * redisplay from first screen
          GOTO      ETSC7100                * redisplay current screen
.
.         post changes
.
ETSC9000  CALL      MTDB0000                * post to PCPDSCFD/PCPDBSFD
.
ETSC9995  CALL      DTPF0000                * delete temp file f
          CLOSE     WORDTEMP,DELETE         * delete temp file b
.
ETSC9999  RETURN
+
.*********************************************************************
.                   KEYF0000                    Called by : ETSC4000 
.         Para's  : CURRINT       current intervention code on screen
.                   CNTINT        the number of interventions on scrn
.         Returns : EXIT = 0      change item 
.                     CEXIT = 1     change time
.                     CEXIT = 2     change staff classification
.                   EXIT = 1      post
.                   EXIT = 2      cancel
.                   EXIT = 3      first
.                   EXIT = 4      next
.                   EXIT = 5      description
.                   EXIT = 6      add description
.                   EXIT = 7      delete all details
.*********************************************************************
KEYF0000  DISPLAY   *P1:24,*EL,*V2LON,"P",*HOFF,"ost":
                    ", ",*V2LON,"C",*HOFF,"ancel":
                    ", ",*V2LON,"F",*HOFF,"irst":
                    ", ",*V2LON,"A",*HOFF,"dd":
                    ", de",*V2LON,"L",*HOFF,"ete":
                    ", ",*V2LON,"D",*HOFF,"escription";
          IF        DPCNCARE = 1 & DBSTYPE = 9
            DISPLAY   ", ",*V2LON,"T",*HOFF,"ime":
                      ", ",*V2LON,"S",*HOFF,"taff. Class";
          ENDIF
          IF        CALLPOSN = ONE
            DISPLAY   ", ",*V2LON,"N",*HOFF,"ext";
          ENDIF
.
KEYF1000  IF        CNTINT <> 0
            UNPACK    DISPINT[CURRINT],KEY9,KEY2
            MOVE      KEY2,CVERT              * get row on
            DISPLAY   *P1:CVERT,*HON,*V2LON,CURRINT  * highlight current code
          ENDIF
.
          KEYIN     *P1:24,*EOFF,*NOEDIT,*+,ANS
          GOTO      KEYF6000 IF UP          * up arrow
          GOTO      KEYF7000 IF DOWN        * down arrow
          GOTO      KEYF1500 IF RIGHT       * right arrow
          GOTO      KEYF1500 IF LEFT        * left arrow
.
          RESET     ANS
          GOTO      KEYF1500 IF EOS         * return entered
.
          TYPE      ANS
          GOTO      KEYF1500 IF EQUAL       * number entered
.
          REP       UPPLOW,ANS
          REP       "P1C2F3N4D5A6L7T8S9",ANS
          MOVE      ZERO,EXIT
          MOVE      ANS,EXIT
          BRANCH    EXIT,KEYF9999,KEYF9999,KEYF9999,KEYF9999,KEYF7500:
                         KEYF9999,KEYF9999,KEYF8000,KEYF8000
.
KEYF1500  BEEP
          GOTO      KEYF1000
.
.         UP arrow
.
KEYF6000  ASSIGN    (CURRINT-1),FORM2
          COMPARE   ZERO,FORM2
          GOTO      KEYF1500 IF EQUAL       * cant go up
          UNPACK    DISPINT[CURRINT],KEY9,KEY2
          MOVE      KEY2,CVERT              * get row on
          DISPLAY   *P1:CVERT,*V2LON,CURRINT     * de-reverse current code
          MOVE      FORM2,CURRINT           * set new current code
          GOTO      KEYF1000
.
.         DOWN arrow
.
KEYF7000  ASSIGN    (CURRINT+1),FORM2
          COMPARE   FORM2,CNTINT
          GOTO      KEYF1500 IF LESS        * cant go down
          UNPACK    DISPINT[CURRINT],KEY9,KEY2
          MOVE      KEY2,CVERT              * get row on
          DISPLAY   *P1:CVERT,*V2LON,CURRINT     * de-reverse current code
          MOVE      FORM2,CURRINT           * set new current code
          GOTO      KEYF1000
.
.         check if the first line of the code is on screen
.
KEYF7500  COMPARE   ZERO,CNTINT
          GOTO      KEYF1500 IF EQUAL       * cant change desc'n
          GOTO      KEYF9999
.
.         want to change the details on the line
.
KEYF8000  MOVE      ONE,FLAGA
          IF        DPCNCARE = 1 & DBSTYPE = 9 & CNTINT <> 0
            SUB       SEVEN,EXIT
            MOVE      EXIT,CEXIT              * set cexit to 1 or 2 
            MOVE      ZERO,EXIT
            MOVE      ZERO,FLAGA
          ENDIF
          BRANCH    FLAGA,KEYF1500          * option not allowed
.
KEYF9999  RETURN
+
.*********************************************************************
.*                  CTPF0000                    Called by : DDAA0000 *
.*        Create a temp file                                         *
.*********************************************************************
CTPF0000  CALL      DTPF0000                * delete temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISBUILD,CFNAMEIF,KEYIF,SP30
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * build the temp file
          OPEN      TEMPIF,CFNAMEIF         * open the temp file
.
CTPF9999  RETURN
+
.*********************************************************************
.*                  DTPF0000                    Called by : CTPF0000 *
.*        Delete temp file F                                         *
.*********************************************************************
DTPF0000  CLOSE     TEMPIF                  * close temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISERASE,CFNAMEIF
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * delete the temp file
.
DTPF9999  RETURN
+
.*********************************************************************
.                   KDSC0000                    Called by : ETSC8000 
.         change the description for the item code
.         pop up a small wp window to change the one item's descr'ns
.*********************************************************************
KDSC0000  CLOSE     WORDTEMP
          PREP      WORDTEMP,CFNAMEB        * create temp file
          MOVE      DISPINT[CURRINT],SCODE
          PACK      KEY11,SCODE,SP2
          CALL      RSTEMPF
.
. ******* copy current details to temp file *******
.
KDSC1000  CALL      RKTEMPF
          BRANCH    OVRCD,KDSC2000
          MATCH     XIFCODE,SCODE
          GOTO      KDSC2000 IF NOT EQUAL   * different code
.
          MOVE      XIFTIME,PCPITIME        * save time  value
          MOVE      XIFSTAF,PCPISTAF        * save staff value
          WRITE     WORDTEMP,SEQ;XIFDESC
          GOTO      KDSC1000
.
. ******* enter wordprocessor to change details *******
.
KDSC2000  CLOSE     WORDTEMP
          MOVE      EIGHT,WPFLAG            * show more
          WORD      CFNAMEB,99,10,12,71,19,WPFLAG
          COMPARE   ZERO,WPFLAG
          GOTO      KDSC9995 IF EQUAL       * aborted wp
.
.         see if any lines left in wp
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      WORDTEMP,CFNAMEB
          TRAPCLR   IO
          BRANCH    OVRCD,KDSC8000          * clear all descriptions
.
. ******* update the current descriptions *******
.         delete existing descriptions
.
KDSC3500  PACK      KEY11,SCODE,SP2
          CALL      RSTEMPF
          CALL      RKTEMPF
          BRANCH    OVRCD,KDSC5000          * end of file
          MATCH     XIFCODE,SCODE
          GOTO      KDSC5000 IF NOT EQUAL   * different code
.
          PACK      KEY11,XIFCODE,XIFLINE
          CALL      DETEMPF
          GOTO      KDSC3500
.
.         repost to temp file from wordprocessor
.
KDSC5000  MOVE      ZERO,FORM2              * line count
          MOVE      SCODE,XIFCODE
          MOVE      PCPITIME,XIFTIME        * set time  value
          MOVE      PCPISTAF,XIFSTAF        * set staff value
.
KDSC5500  READ      WORDTEMP,SEQ;LINE60
          GOTO      KDSC9995 IF OVER        * end of file
          ADD       ONE,FORM2
          MOVE      FORM2,XIFLINE
          MOVE      LINE60,XIFDESC
          PACK      KEY11,XIFCODE,XIFLINE
          CALL      WRTEMPF
          GOTO      KDSC5500
.
. ******* want to delete this intervention code so only keep first record
. ******* with a blank desc'n and delete the rest
.
KDSC8000  PACK      KEY11,SCODE,SP2
          CALL      RDTEMPF
          CALL      RKTEMPF
          BRANCH    OVRCD,KDSC8500          * end of file
          MATCH     XIFCODE,SCODE
          GOTO      KDSC8500 IF NOT EQUAL   * different code
.
          PACK      KEY11,XIFCODE,XIFLINE
          CALL      DETEMPF
          GOTO      KDSC8000
.
KDSC8500  MOVE      SCODE,XIFCODE
          MOVE      " 1",XIFLINE
          MOVE      SP60,XIFDESC
          MOVE      ZERO,XIFTIME
          MOVE      SP3,XIFSTAF
          CALL      WRTEMPF
.
KDSC9995  DISPLAY   *P1:9,*EF;
.
KDSC9999  RETURN
+ 
.*********************************************************************
.*                  KTIM0000                    Called by : ETSC6000 *
.*        Enter the Time for the intervention                        *
.*********************************************************************
KTIM0000  KEYIN     *P66:CVERT,*DV,SP4:
                    *P66:CVERT,*V2LON,*RV,XIFTIME:
                    *P66:CVERT,*DV,XIFTIME
.
          COMPARE   ZERO,XIFTIME
          GOTO      KTIM0000 IF LESS        * negative entered
.
          CALL      UPTEMPF
          MOVE      ZERO,EXIT
.
KTIM9999  RETURN
+
.*********************************************************************
.*                  KSTF0000                    Called by : ETSC6000 *
.*        Enter the staff code                                       *
.*********************************************************************
KSTF0000  MOVE      CATSD,CODE
          MOVE      XIFSTAF,CKYIDEF3        * default staff code
          MOVE      CVERT,EVERT             * set row
          MOVE      "73",ECOL               * set col
          MOVE      ZERO,CKYIMAND           * code not mandatory
          CALL      PATCODKY                * keyin code
          COMPARE   TWO,EXIT
          GOTO      KSTF9999 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,XIFSTAF           * set code
          CALL      UPTEMPF
.
KSTF9999  RETURN
+
. ******* temp file F i/o *******
.
RSTEMPF   READ      TEMPIF,KEY11;;
          RETURN
+
RATEMPF   MOVE      ZERO,OVRCD
          READ      TEMPIF,KEY11;ANS
          GOTO      OVERCOND IF OVER
          RETURN
+
RDTEMPF   MOVE      ZERO,OVRCD
          READ      TEMPIF,KEY11;XIFCODE,XIFLINE,XIFDESC,XIFTIME,XIFSTAF
          GOTO      OVERCOND IF OVER
          RETURN
+
RKTEMPF   MOVE      ZERO,OVRCD
          READKS    TEMPIF;XIFCODE,XIFLINE,XIFDESC,XIFTIME,XIFSTAF
          GOTO      OVERCOND IF OVER
          RETURN
+
RPTEMPF   MOVE      ZERO,OVRCD
          READKP    TEMPIF;XIFCODE,XIFLINE,XIFDESC,XIFTIME,XIFSTAF
          GOTO      OVERCOND IF OVER
          RETURN
+
WRTEMPF   WRITE     TEMPIF,KEY11;XIFCODE,XIFLINE,XIFDESC,XIFTIME,XIFSTAF
          RETURN
+
UPTEMPF   UPDATE    TEMPIF;XIFCODE,XIFLINE,XIFDESC,XIFTIME,XIFSTAF
          RETURN
+
DETEMPF   DELETE    TEMPIF,KEY11;
          RETURN
+
.*********************************************************************
.                   CRMD0000                    Called by : DDCH0000 
.         maintain the database for the supplied codes
.         Para's  : DBSTYPE       type of code for PCPDBSFD
.                   DSCTYPE       type of code for PCPDSCFD
.                   CODEA         the first code of the pair (for dbs)
.*********************************************************************
CRMD0000  PACK      KEY20,DBSTYPE,CODEA,SP9
          CALL      RSPCDBS1
          CALL      RKPCDBS1
          BRANCH    OVRCD,CRMD1000          * insert mode
          COMPARE   DBSTYPE,PCDBTYPE
          GOTO      CRMD1000 IF NOT EQUAL   * insert mode
          MATCH     CODEA,PCDBCLSS
          GOTO      CRMD5000 IF EQUAL       * change mode
.
. ******* insert mode *******
.
CRMD1000  DISPLAY   *P1:7,*EF:
                    *P10:8,"Separate each nursing intervention with a blank ":
                           "line.":
                    *P10:9,"Patient specific details to be entered as '______'":
                           " or (specify)"
          PREP      WORDTEMP,CFNAMEB        * create temp file
          CLOSE     WORDTEMP
          MOVE      ZERO,WPFLAG
          WORD      CFNAMEB,99,10,10,71,23,WPFLAG
          COMPARE   ZERO,WPFLAG
          GOTO      CRMD9999 IF EQUAL       * abort
.
          MOVE      ZERO,MODE               * set to insert mode
          CALL      MTDB0000                * maintain the database
          COMPARE   ONE,DPCNCARE
          GOTO      CRMD9999 IF NOT EQUAL   * interface not on so finished
          COMPARE   NINE,DBSTYPE
          GOTO      CRMD9999 IF NOT EQUAL   * not using interventions
.
. ******* change mode *******
.
CRMD5000  CALL      CRIF0000                * create temp file IF
          CALL      ETSC0000                * do all the processing
.
CRMD9999  RETURN
+
.*********************************************************************
.                   CRIF0000                    Called by : CRMD5000 
.         create the temp file and copy all descriptions into it
.*********************************************************************
CRIF0000  CALL      CTPF0000                * create temp file
          MOVE      ONE,MODE                * set to change mode
          PACK      KEY20,DBSTYPE,CODEA,SP9
          CALL      RSPCDBS1
.
.         get all the pairs of codes from PCPDBSFD
.
CRIF1000  CALL      RKPCDBS1
          BRANCH    OVRCD,CRIF9999          * no more codes
          COMPARE   DBSTYPE,PCDBTYPE
          GOTO      CRIF9999 IF NOT EQUAL   * no more codes
          MATCH     CODEA,PCDBCLSS
          GOTO      CRIF9999 IF NOT EQUAL   * no more codes
.
.         if the Dependancy i/f is on, get the time & staff class. for interv.
.
          MOVE      ZERO,PCPITIME           * default to nothing
          MOVE      SP3,PCPISTAF
          IF        DPCNCARE = 1 & DBSTYPE = 9
            MOVE      PCDBCODE,KEY9
            CALL      RDPCIDP1
          ENDIF
.
.         get the descriptions for the code from PCPDSCFD
.
          MOVE      PCDBCODE,XIFCODE        * set code
          PACK      KEY13,DSCTYPE,PCDBCODE,SP2
          CALL      RSPCDSC1
.
CRIF2000  CALL      RKPCDSC1
          BRANCH    OVRCD,CRIF1000          * no more descriptions
          COMPARE   DSCTYPE,PCDSTYPE
          GOTO      CRIF1000 IF NOT EQUAL   * no more desc
          MATCH     PCDBCODE,PCDSCODE
          GOTO      CRIF1000 IF NOT EQUAL   * no more desc
.          
          MOVE      PCDSLINE,XIFLINE
          PACK      KEY11,XIFCODE,XIFLINE
          CALL      RDTEMPF
.
          MOVE      PCDSDESC,XIFDESC        * set description
          MOVE      PCPITIME,XIFTIME        * set time
          MOVE      PCPISTAF,XIFSTAF        * set staff class
.
          IF        OVRCD = ONE
            CALL      WRTEMPF
          ELSE
            CALL      UPTEMPF
          ENDIF
          GOTO      CRIF2000
.
CRIF9999  RETURN
+
.*********************************************************************
.                   MTDB0000
.         maintain the database files - PCPDSCFD/PCPDBSFD
.*********************************************************************
MTDB0000  BRANCH    MODE,MTDB5000           * in change mode
.
.         post the new data
.         loop over the word processor temp file and write to dcs and dbs files
.
          CLOSE     WORDTEMP
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      WORDTEMP,CFNAMEB
          TRAPCLR   IO
          BRANCH    OVRCD,MTDB9999          * nothing on file
.
          CALL      GLCU0000                * get latest code
          MOVE      ZERO,FORM2              * clear line counter
.
MTDB2500  MOVE      ZERO,OVRCD
          READ      WORDTEMP,SEQ;LINE60
          CALL      OVERCOND IF OVER        * end of file
          MOVE      OVRCD,SAVOVRCD          * 1 = exit after posting to dbs
          BRANCH    OVRCD,MTDB3000          * end of file
.
          PACK      LINE60,LINE60,SP60
          MATCH     SP60,LINE60
          GOTO      MTDB3000 IF EQUAL       * have new intervention
.
          ADD       ONE,FORM2               * set new line number
.
MTDB2600  MOVE      DSCTYPE,PCDSTYPE        * set type of code
          MOVE      FORM9,PCDSCODE          * set code
          MOVE      FORM2,PCDSLINE          * set line count
.
          MOVE      "PDS",PRXCODE           * set file for locking to PCPDSCFD
          CALL      GETSLK00                * lock file
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1
          IF        OVRCD = ONE
            MOVE      LINE60,PCDSDESC       * set description
            CALL      WRPD0000
            MOVE      ONE,AUDIFLAG          * add
            CALL      DSCA0000              * audits
            MOVE      ZERO,EXIT             * valid write
          ELSE
            CALL      GLCU0000              * get a new code
            MOVE      ONE,EXIT              * invalid write
          ENDIF
          CALL      RELSLK00                * release lock
          BRANCH    EXIT,MTDB2600           * try again !
          GOTO      MTDB2500
.
.         have a blank line so they want a new intervention code
.
MTDB3000  MOVE      DBSTYPE,PCDBTYPE        * set type
          MOVE      CODEA,PCDBCLSS          * set code 1
          MOVE      FORM9,PCDBCODE          * set code 2
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      RDPCDBS1
          IF        OVRCD = ONE
            CALL      WRPCDBS1                * write new record
            MOVE      ONE,AUDIFLAG            * add audit
            CALL      DBSA0000
          ENDIF
.
          BRANCH    SAVOVRCD,MTDB9999       * finished temp file
.
          CALL      GLCU0000                * get a new code and write
          MOVE      ZERO,FORM2              * clear counter
          GOTO      MTDB2500
.
. ***************************
. ******* CHANGE MODE *******
. ***************************
.
MTDB5000  DISPLAY   *P1:24,*EL,"Posting..."
          CALL      DAID0000                * delete all data from database
          MOVE      SP9,SCODE               * write to all files
          MOVE      ZERO,POSTDSC            * write to all files
          MOVE      SP20,KEY11
          CALL      RSTEMPF
.
MTDB5100  CALL      RKTEMPF
          BRANCH    OVRCD,MTDB9999
.
          MATCH     SP60,XIFDESC
          GOTO      MTDB5100 IF EQUAL       * no description so dont post
.
          MATCH     SP9,SCODE
          GOTO      MTDB5200 IF EQUAL       * write to all files
.
          MOVE      ONE,POSTDSC             * only posting to DSC
          MATCH     XIFCODE,SCODE
          GOTO      MTDB6000 IF EQUAL       * only write to pcpdscaf
.
.         check if the temp file code is already on file
.         (this can occur when two people are in change mode and both select
.          the Add option simultaneously, resulting in both receiving the same
.          value from the GLCU0000 routine)
.
MTDB5200  MOVE      ZERO,POSTDSC            * posting to all
          MOVE      ONE,PCDSLINE            * set line count
          MOVE      "PDS",PRXCODE           * set file for locking to PCPPDSFD
          CALL      GETSLK00                * lock file
          PACK      KEY13,DSCTYPE,XIFCODE,PCDSLINE
          CALL      RDPCDSC1                * this has 7 lines of code
          BRANCH    OVRCD,MTDB6000          * nothing on file so OK
.
          CALL      GLCU0000                * get latest code
          MOVE      FORM9,XIFCODE           * set the temp file code
          CALL      RELSLK00                * release lock
          GOTO      MTDB5200
.
.         write record to PCPDSCFD file
.
MTDB6000  MOVE      DSCTYPE,PCDSTYPE        * set type of code
          MOVE      XIFCODE,PCDSCODE        * set code
          MOVE      XIFLINE,PCDSLINE        * set line
          MOVE      XIFDESC,PCDSDESC        * set desc
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      WRPD0000
          MOVE      ONE,AUDIFLAG            * add audit
          CALL      DSCA0000
          MOVE      XIFCODE,SCODE           * save the code
          CALL      RELSLK00                * release lock
.
          BRANCH    POSTDSC,MTDB5100        * only post to DSC
.
.         write to PCPDBSFD
.
          MOVE      DBSTYPE,PCDBTYPE        * set type
          MOVE      CODEA,PCDBCLSS          * set code 1
          MOVE      XIFCODE,PCDBCODE        * set code 2
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      WRPCDBS1
          MOVE      ONE,AUDIFLAG            * add audit
          CALL      DBSA0000
.
.         write to PCPIDPFD
.
          IF        DPCNCARE = 1 & DBSTYPE = 9
            MATCH     SP3,XIFSTAF
            IF        !@EQUAL | (XIFTIME <> ZERO)
              MOVE      XIFCODE,PCPICODE        * set code
              MOVE      XIFTIME,PCPITIME        * set time
              MOVE      XIFSTAF,PCPISTAF        * set staff classification
              MOVE      SP30,PCPISPAR
              CALL      WRPCIDP1
            ENDIF
          ENDIF
.
          MOVE      ONE,POSTDSC             * only post to DSC
          GOTO      MTDB5100
.
MTDB9999  RETURN
+
.*********************************************************************
.                   GLCU0000                    Called by : MTDB0000 
.         get the latest code used
.         Para's  : DSCTYPE       the type of code
.         Returns : FORM9         the latest code
.*********************************************************************
GLCU0000  MOVE      ONE,FORM9               * default to one
          PACK      KEY13,DSCTYPE,Z20
          CALL      RSPCDSC1                * 3 lines
          CALL      RPPCDSC1                * 6 lines
          BRANCH    OVRCD,GLCU1000          * no codes on file
          COMPARE   DSCTYPE,PCDSTYPE
          GOTO      GLCU1000 IF NOT EQUAL   * no codes on file
          MOVE      PCDSCODE,FORM9
.
GLCU0500  ADD       ONE,FORM9               * get one after last used code
.
GLCU1000  COMPARE   NINE,DSCTYPE
          GOTO      GLCU9999 IF NOT EQUAL   * not entering interventions
          COMPARE   ONE,DPCNCARE
          GOTO      GLCU9999 IF NOT EQUAL   * not using interface
          MOVE      FORM9,KEY9
.
.         check that code is not on this file also
.
          CALL      RDPCIDP1
          COMPARE   ZERO,OVRCD
          GOTO      GLCU0500 IF EQUAL       * code already exists
.
GLCU9999  RETURN
+
.*********************************************************************
.                   DAID0000                    Called by : MTDB5000 
.         delete all information from the database for entered code
.*********************************************************************
DAID0000  PACK      KEY20,DBSTYPE,CODEA,SP9
          CALL      RSPCDBS1
          CALL      RKPCDBS1
          BRANCH    OVRCD,DAID9999          * finished
          COMPARE   DBSTYPE,PCDBTYPE
          GOTO      DAID9999 IF NOT EQUAL
          MATCH     CODEA,PCDBCLSS
          GOTO      DAID9999 IF NOT EQUAL
.
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          CALL      DEPCDBS1                * delete entry from PCPDBSFD
          MOVE      FOUR,AUDIFLAG           * delete audit
          CALL      DBSA0000
.
          IF        DPCNCARE = 1 & DBSTYPE = 9
            MOVE      PCDBCODE,KEY9
            CALL      DEPCIDP1
          ENDIF
.
.         Now delete the descriptions for this code from the PCPDSCFD
.
DAID2000  PACK      KEY13,DSCTYPE,PCDBCODE,SP2
          CALL      RSPCDSC1
          CALL      RKPCDSC1
          BRANCH    OVRCD,DAID0000           * Check if we have read too far
          COMPARE   DSCTYPE,PCDSTYPE
          GOTO      DAID0000 IF NOT EQUAL
          MATCH     PCDBCODE,PCDSCODE
          GOTO      DAID0000 IF NOT EQUAL
.
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      DEPCDSC1
          MOVE      FOUR,AUDIFLAG           * delete audit
          CALL      DSCA0000
          GOTO      DAID2000
.
DAID9999  RETURN
+
.*********************************************************************
.                   ADDC0000                    Called by : ETSC8100 
.         add a description when in change mode
.*********************************************************************
ADDC0000  CLOSE     WORDTEMP
          PREP      WORDTEMP,CFNAMEB        * create temp file
          CLOSE     WORDTEMP
          MOVE      EIGHT,WPFLAG            * show more
          WORD      CFNAMEB,99,10,12,71,19,WPFLAG
          COMPARE   ZERO,WPFLAG
          GOTO      ADDC9999 IF EQUAL       * aborted wp
.
.         see if any lines left in wp
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      WORDTEMP,CFNAMEB
          TRAPCLR   IO
          BRANCH    OVRCD,ADDC9999          * nothing entered
.
.         post the details to temp file
.
          CALL      GLCU0000                * get latest code - FORM9
ADDC1000  PACK      KEY11,FORM9,SP1,ONE
          CALL      RATEMPF
          BRANCH    OVRCD,ADDC3000          * code is OK
          ADD       ONE,FORM9               * try next code
          GOTO      ADDC1000
.
.         check temp file for code to avoid I*D
.
ADDC3000  MOVE      FORM9,XIFCODE           * set code
          MOVE      ZERO,FORM2
.
ADDC5000  READ      WORDTEMP,SEQ;LINE60
          GOTO      ADDC9999 IF OVER
.
          ADD       ONE,FORM2
          MOVE      FORM2,XIFLINE
.
          MOVE      ZERO,XIFTIME            * clear time
          MOVE      SP3,XIFSTAF             * clear staff class.
          PACK      KEY11,XIFCODE,XIFLINE
          CALL      RDTEMPF
.
          MOVE      LINE60,XIFDESC          * set description
.
          IF        OVRCD = ONE
            CALL      WRTEMPF
          ELSE
            CALL      UPTEMPF
          ENDIF
          GOTO      ADDC5000
.
ADDC9999  RETURN
+
.*********************************************************************
.                   DELC0000                    Called by : ETSC8200 
.         delete the current description
.         Returns : EXIT = ONE    redisplay from first screen
.                   EXIT = ZERO   redisplay current screen
.*********************************************************************
DELC0000  UNPACK    DISPINT[CURRINT],KEY9,KEY2
          PACK      KEY11,KEY9,SP1,ONE
          CALL      RDTEMPF
          BRANCH    OVRCD,DELC9999
.
          DISPLAY   *P1:24,*EL,"Are you sure you want to Delete ":
                    "(",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? "
.
DELC0500  KEYIN     *P41:24,*V2LON,ANS 
          REP       UPPLOW,ANS
          MOVE      TWO,EXIT                * nothing done
          MATCH     ANSN,ANS
          GOTO      DELC9999 IF EQUAL       * dont delete
          MATCH     ANSY,ANS
          GOTO      DELC1000 IF EQUAL       * delete
          BEEP
          GOTO      DELC0500
.
DELC1000  DISPLAY   *P1:24,*EL,"Deleting descriptions..."
          MOVE      ZERO,CALLPOSN           * set to redisplay details
          MOVE      XIFCODE,SCODE           * save the code
.
DELC2000  PACK      KEY11,SCODE,SP2
          CALL      RSTEMPF 
          CALL      RKTEMPF
          BRANCH    OVRCD,DELC3000           * Check if we have read too far
          MATCH     SCODE,XIFCODE
          GOTO      DELC3000 IF NOT EQUAL
.
          PACK      KEY11,XIFCODE,XIFLINE
          CALL      DETEMPF
          GOTO      DELC2000
.
.         either reposition on first or current screen
.
DELC3000  MOVE      ONE,EXIT
          UNPACK    DISPINT[ONE],KEY9,KEY2
          PACK      KEY11,KEY9,SP2
          CALL      RSTEMPF
          CALL      RKTEMPF
          BRANCH    OVRCD,DELC9999          * no more items - redisp first scrn
.
.         redisplay current screen
.
DELC3100  UNPACK    DISPINT[ONE],KEY9,KEY2
          PACK      KEY11,KEY9,SP2
          CALL      RSTEMPF
          MOVE      ZERO,SAVINTV            * clear save intervention
          MOVE      ZERO,EXIT               * redisplay current screen
.
DELC9999  RETURN
+
.*********************************************************************
.                   DDFD0000                    Called by : xxxx0000 
.         get the mode for Differential Diagnosis
.*********************************************************************
DDFD0000  MOVE      SIX,DBSTYPE
          DISPLAY   *P50:2,*V2LON," Diff. Diagnosis ":
                    *P1:7,*EF:
                    *P2:8,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:9,*V2LON,ONE,*HOFF," = Insert":
                    *P2:10,*V2LON,TWO,*HOFF," = Change":
                    *P2:11,*V2LON,THREE,*HOFF," = Delete"
.
          DISPLAY   *P1:13,"Select Option : "
.
DDFD1000  KEYIN     *P17:13,*DV,UNDLN1:
                    *P17:13,*V2LON,MOPTION
.
          COMPARE   ZERO,MOPTION
          GOTO      DDFD9999 IF EQUAL       * exit
          BRANCH    MOPTION,DDFD5000,DDFD5000,DDFD5000
          BEEP     
          GOTO      DDFD1000
.
DDFD5000  PERFORM   MOPTION,DDIF0000,DDCM0000,DIDE0000
.                           insert   change   delete
          GOTO      DDFD0000
.
DDFD9999  RETURN
+
.*********************************************************************
.                   WRPD0000                    Called by : xxxx0000 
.         Write Patient Care Plan Description record
.*********************************************************************
WRPD0000  CALL      RAPCDSC1               * check if already exists
          BRANCH    OVRCD,WRPD1000
.
          CALL      UPPCDSC1               * update record
          GOTO      WRPD9999
.
WRPD1000  CALL      WRPCDSC1               * write record
.
WRPD9999  RETURN
+
.*********************************************************************
.                   DSCA0000
.         Maintain audits for PCPDSCFD
.*********************************************************************
DSCA0000  BRANCH    PCCNAUDB,DSCA9999
.
          COMPARE   FIVE,AUDIFLAG
          GOTO      DSCA5000 IF EQUAL       * delete before change audit
          COMPARE   THREE,AUDIFLAG
          GOTO      DSCA1000 IF EQUAL       * after change audit
.
          CALL      IBACLOCK
          PACK      PCDSAUDD,CCC,CYY,CMM,CDD
          REP       " 0",PCDSAUDD
          MOVE      CTIMEIS,PCDSAUDT        * time of change
.
DSCA1000  MOVE      PORT,PCDSAUDP           * port doing change
          MOVE      PASSCODE,PCDSAUDO       * operator id that did the change
          MOVE      ONE,PCDSAUDS            * status
          MOVE      AUDIFLAG,PCDSAUDR       * set record type
          REP       "1A2B3C4D",PCDSAUDR
.
          PACK      KEY19,PCDSAUDD,PCDSAUDT,PCDSAUDP,PCDSAUDR
          CALL      AWPCDSC
          GOTO      DSCA9999
.
DSCA5000  CALL      ADPCDSC
.
DSCA9999  RETURN
+
.*********************************************************************
.                   DBSA0000
.         Maintain audits for PCPDBSFD
.*********************************************************************
DBSA0000  BRANCH    PCCNAUDA,DBSA9999
.
          COMPARE   FIVE,AUDIFLAG
          GOTO      DBSA5000 IF EQUAL       * delete before change audit
          COMPARE   THREE,AUDIFLAG
          GOTO      DBSA1000 IF EQUAL       * after change audit
.
          CALL      IBACLOCK
          PACK      PCDBAUDD,CCC,CYY,CMM,CDD
          REP       " 0",PCDBAUDD
          CLOCK     TIME,PCDBAUDT           * time of change
.
DBSA1000  MOVE      PORT,PCDBAUDP           * port doing change
          MOVE      AUDIFLAG,PCDBAUDR       * set record type
          REP       "1A2B3C4D",PCDBAUDR
          MOVE      ONE,PCDBAUDS            * status
          MOVE      PASSCODE,PCDBAUDO       * operator id that did the change
.
          PACK      KEY19,PCDBAUDD,PCDBAUDT,PCDBAUDP,PCDBAUDR
          CALL      AWPCDBS
          GOTO      DBSA9999
.
DBSA5000  CALL      ADPCDBS
.
DBSA9999  RETURN
+
.*********************************************************************
.                   CRLA0000
.         Maintain audits for PCPCRLFD
.*********************************************************************
CRLA0000  BRANCH    PCCNAUDC,CRLA9999
.
          COMPARE   FIVE,AUDIFLAG
          GOTO      CRLA5000 IF EQUAL       * delete before change audit
          COMPARE   THREE,AUDIFLAG
          GOTO      CRLA1000 IF EQUAL       * after change audit
.
          CALL      IBACLOCK
          PACK      PCCRAUDD,CCC,CYY,CMM,CDD
          REP       " 0",PCCRAUDD
          MOVE      CTIMEIS,PCCRAUDT        * time of change
.
CRLA1000  MOVE      PORT,PCCRAUDP           * port doing change
          MOVE      PASSCODE,PCCRAUDO       * operator id that did the change
          MOVE      ONE,PCCRAUDS            * status
          MOVE      AUDIFLAG,PCCRAUDR       * set record type
          REP       "1A2B3C4D",PCCRAUDR
.
          PACK      KEY19,PCCRAUDD,PCCRAUDT,PCCRAUDP,PCCRAUDR
          CALL      AWPCCRL
          GOTO      CRLA9999
.
CRLA5000  CALL      ADPCCRL
.
CRLA9999  RETURN
+
.
.         I/O includes
.
          INC       STD001IO
          INC       PATCODKY/PBL            * ? for codes file
          INC       PATCODIO/INC            * codes file
          INC       PCPCRLIO/INC
          INC       PCPDBSIO/INC
          INC       PCPDSCDS                 * ? routine
          INC       PCPDSCIO/INC
          INC       PCPIDPIO/INC            * int. dep file
          INC       KYPCPDSC
          INC       TFILENAM
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
