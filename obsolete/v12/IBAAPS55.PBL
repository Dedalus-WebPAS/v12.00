.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
. V9.04.01  22.11.2005  Ebon Clements
.           Regenerated code
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 22.11.2000 Sandra Barcham
.           Print BAS Code
.-------------------------------------------------------
. VF.01.01  30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
.-------------------------------------------------------
. VF.00.01  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           17.11.1999 Sandra Barcham
.           Change Heading from Cheque Number to Payment Number
.           srf 635048
.-------------------------------------------------------
CURRDATE  DIM       8
FROMDATE  DIM       8
GRANDTOT  FORM      12.2
TODATE    DIM       8
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS55
.   Function      :   Creditor Batch Listing                  
.   Generated  On :   07/04/2011
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSBCHDF    
          INC       APSBMFFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSISLFD/INC
          INC       APSMASFD/INC
          INC       APSNSCFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCSAFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       IBACONFD/INC
          INC       IBAPRNFD/INC
          INC       SINCONFD/INC
          INC       SINPOCFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMBAT   DIM       5 * Scr 02 Fld     2
TOBAT     DIM       5 * Scr 02 Fld     3
.
.    Multi Item Key Fields Scr 03 Fld     2
.-------------------------------------------------------
APBM3NAM  INIT      "APBM3"
APBM3END  FORM      1   * End Display
APBM3SNO  FORM      5   * Number of Items on the Screen
APBM3MKY  DIM       127 * Match Key 
APBM3EKY  DIM       127 * End Key
APBM3SKY  DIM       127 * Start Key
APBM3IDX  INIT      " 132 UC1-5"
APBM3FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
APBM3FNM  DIM       8  * Filename
APBM3CNT  FORM      3  * Number of Items on Screen
BATCHTYP  DIM      15 * Scr 03 Fld     8
FDATE     DIM      10 * Scr 04 Fld     2
TDATE     DIM      10 * Scr 04 Fld     3
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS55"
PRGNAM    INIT      "Creditor Batch Listing                  "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      NOPRINT 
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA4,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsislaf";
          OPEN      APSISLA1,"apsislaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA1,"apsnscaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA2,"apsnscaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening  ihapassf           ";
          OPEN      IHAPASS1,"ihapassf"          
.--------------------------------------------------------
. Initialise Batch Screen Batch Number                       
.--------------------------------------------------------
          MOVE     ZERO,APBM3SNO
          MOVE     "03    2",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,APBM3SNO
            ENDIF
          ENDIF
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Selected Batch                     
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Print Range of Batches             
          ENDIF
          MATCH     "03",SCRID
          IF         @EQUAL
            CALL       PS03L000   * Display Batches Not Updated        
          ENDIF
          MATCH     "04",SCRID
          IF         @EQUAL
            CALL       PS04L000   * Range of Batches by Date Range     
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L105
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL      SC04L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L105
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      SC03L000
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Selected Batch                     
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Selected Batch                     
.-------------------------------------------------------
CF01L000  COMPARE   ZERO,ACCEPT
              GOTO      CF01L999 IF EQUAL
          MOVE      SP70,APBMBCH 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Selected Batch                     
.--------------------------------------------------------
KY01L000
.
KY01L110
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAPBMA00
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          CALL      APSBCHDS
          MOVE      APBMBCH,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Selected Batch                     
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Selected Batch                     
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Selected Batch                     
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Selected Batch                     
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Selected Batch                     
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L006,SF01L101,SF01L102
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      APSBCHPR
          MOVE      ZERO,EXIT
          GOTO      SF01L999
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Print Range of Batches             
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print Range of Batches             
.-------------------------------------------------------
CF02L000  COMPARE   ZERO,ACCEPT
              GOTO      CF02L999 IF EQUAL
          MOVE      SP70,FROMBAT 
          MOVE      SP70,TOBAT   
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print Range of Batches             
.--------------------------------------------------------
KY02L000
.
KY02L110
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAPBMA00
          MOVE      APBMBCH,FROMBAT
          BRANCH    EXIT,KY02L900,KY02L900
          MOVE      ZERO,ACCEPT
          MOVE      FROMBAT,VAR      
          CALL      DISPITEM
.
KY02L120
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAPBMA00
          MOVE      APBMBCH,TOBAT
          BRANCH    EXIT,KY02L110,KY02L900
          MOVE      ZERO,ACCEPT
          MOVE      TOBAT,VAR        
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print Range of Batches             
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print Range of Batches             
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print Range of Batches             
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print Range of Batches             
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Print Range of Batches             
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L006,SF02L006,SF02L101:
                            SF02L102,SF02L103
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      RANG0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L102
          MOVE      ONE,EXIT
          GOTO      SF02L999
.
SF02L103
          MOVE      ZERO,EXIT
          GOTO      SF02L999
SF02L990  MOVE      ONE,EXIT * Exit Char Restart
SF02L999  RETURN
.--------------------------------
. Screen - Display Batches Not Updated        
.--------------------------------
SC03L000
SC03L100
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC03L200
          CALL      CF03L000 * Clear Fields
SC03L300
          CALL      KY03L000 * Enter Key Fields
          BRANCH    EXIT,SC03L999,SC03L999
SC03L400
          CALL      WP03L000 * Load any WP Details
SC03L500
          CALL      LM03L000 * Load any Batch Details
SC03L600
          CALL      DF03L000 * Display Fields
SC03L700
          CALL      SF03L000 * Select Fields
          BRANCH    EXIT,SC03L100,SC03L100,SC03L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC03L800
SC03L900
SC03L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Display Batches Not Updated        
.-------------------------------------------------------
CF03L000
          MOVE      SP70,APBMBCH 
CF03L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Display Batches Not Updated        
.--------------------------------------------------------
KY03L000
          MOVE      ZERO,EXIT
          GOTO      KY03L999
.
KY03L900  MOVE      ONE,EXIT
KY03L999  RETURN
.---------------------------------------------------------
. Load WP files for : Display Batches Not Updated        
.---------------------------------------------------------
WP03L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Display Batches Not Updated        
.---------------------------------------------------------
LM03L000
.---------------------------------------------------------
. Load for :     2 Batch Number                       
.---------------------------------------------------------
          UNPACK    SP70,APBMUDT,APBMBCH
          PACK      KEY13,SP70
          MOVE      KEY13,APBM3EKY
          STRIP     APBM3SKY
          SETLPTR   APBM3EKY,8
          MOVE      APBM3EKY,APBM3SKY
          CALL      RDAPBM3 
          IF        OVRCD=0
            CALL      RPAPBM3 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP03L000
          MOVE     ZERO,APBM3CNT
          MOVE     ZERO,APBM3END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP03L600
          MATCH    PRGID,SCPSPID
          GOTO     DP03L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP03L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP03L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP03L010,DP03L101,DP03L102,DP03L103:
                            DP03L104,DP03L105,DP03L106,DP03L107:
                            DP03L108,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010
          GOTO      DP03L010
.
DP03L101
          IF        APBM3END=0
            CALL      RPAPBM3 
            IF        OVRCD=0
              PACK      APBM3MKY,APBMUDT,APBMBCH                                                                
              MATCH     APBM3EKY,APBM3MKY
              IF        @EQUAL
                MOVE      ZERO,APBM3END
                ADD       ONE,APBM3CNT
                MOVE      APBMBCH,VAR      
                CALL      DISPITEM
          CALL      APBMD000
              ELSE
                MOVE      ONE,APBM3END
              ENDIF
            ELSE
              MOVE      ONE,APBM3END
            ENDIF
          ENDIF
          IF        APBM3END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L102
          IF        APBM3END=0
            MOVE      APBMTOT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L103
          IF        APBM3END=0
            MOVE      APBMTYP,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L104
          IF        APBM3END=0
            MOVE      APBMOPR,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L105
          IF        APBM3END=0
            UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L106
          IF        APBM3END=0
            UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L107
          IF        APBM3END=0
            MOVE      BATCHTYP,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L108
          IF        APBM3END=0
            MOVE      SECUSER,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
DP03L600
          MATCH    "APBM3",NAMSSFFI
          GOTO     DP03L605 IF NOT EQUAL
          GOTO     DP03L999
DP03L605
DP03L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP03L000
.
          MATCH    "APBM3",NAMSSFFI
          GOTO     FP03L105 IF NOT EQUAL
          PACK     KEY13,APBM3SKY,Z70
          CALL     RDAPBM3  * Start
          IF       OVRCD=0
            CALL     RPAPBM3  * Start
          ENDIF
          CALL     DP03L000
          GOTO     FP03L999
FP03L105
FP03L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP03L000
.
          MATCH    "APBM3",NAMSSFFI
          GOTO     LP03L105 IF NOT EQUAL
          PACK     KEY13,APBM3SKY,SP70
          CALL     RSAPBM3  * End
          IF       OVRCD=1
            CALL     RKAPBM3 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APBM3SNO
            CALL     RKAPBM3 
            IF       OVRCD=1
              MOVE     APBM3SNO,SECTOR
            ENDIF
            PACK     APBM3MKY,APBMUDT,APBMBCH                                                                
            MATCH    APBM3EKY,APBM3MKY
            IF       !@EQUAL
              MOVE     APBM3SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP03L000
          GOTO     LP03L999
LP03L105
LP03L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP03L000
.
          MATCH    "APBM3",NAMSSFFI
          GOTO     PP03L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP03L105
          COMPARE  SECTOR,APBM3SNO
          GOTO     PP03L110 IF EQUAL
          CALL     RKAPBM3 
          BRANCH   OVRCD,PP03L115
          PACK     APBM3MKY,APBMUDT,APBMBCH                                                                
          MATCH    APBM3EKY,APBM3MKY
          GOTO     PP03L115 IF NOT EQUAL
          ADD      ONE,SECTOR
          GOTO     PP03L105
PP03L110
          MOVE     ZERO,SECTOR
          IF       APBM3CNT=APBM3SNO
            SUB      ONE,APBM3CNT
          ENDIF
          WHILE    SECTOR<=APBM3CNT
            CALL     RKAPBM3 
            IF       OVRCD=1
              MOVE     APBM3SNO,SECTOR
            ENDIF
            PACK     APBM3MKY,APBMUDT,APBMBCH                                                                
            MATCH    APBM3EKY,APBM3MKY
            IF       !@EQUAL
              MOVE     APBM3SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP03L000
          GOTO     PP03L999
PP03L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APBM3SNO
            CALL     RPAPBM3 
            IF       OVRCD=1
              MOVE     APBM3SNO,SECTOR
            ENDIF
            PACK     APBM3MKY,APBMUDT,APBMBCH                                                                
            MATCH    APBM3EKY,APBM3MKY
            IF       !@EQUAL
              MOVE     APBM3SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP03L999
PP03L120
PP03L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP03L000
          MATCH    "APBM3",NAMSSFFI
          GOTO     NP03L115 IF NOT EQUAL
NP03L105
          CALL     RPAPBM3 
          BRANCH   OVRCD,NP03L110
          PACK     APBM3MKY,APBMUDT,APBMBCH                                                                
          MATCH    APBM3EKY,APBM3MKY
          GOTO     NP03L110 IF NOT EQUAL
          CALL     RKAPBM3 
          CALL     DP03L000
          GOTO     NP03L999
NP03L110
          CALL     RKAPBM3 
          BEEP
          GOTO     NP03L999
NP03L115
NP03L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT03L000
CT03L105
CT03L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Display Batches Not Updated        
.---------------------------------------------------------
.---------------------------------------------------------
. Display Fields for : Display Batches Not Updated        
.---------------------------------------------------------
DF03L000
          BRANCH   ACCEPT,DF03L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF03L900
          MATCH    PRGID,SCPSPID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF03L010 IF NOT EQUAL
.
          CALL     PS03L000 * Display Field
          GOTO     DF03L010
DF03L900
          MOVE      "APBM3",NAMSSFFI
          MOVE      "    2",ITMSSFFI
          CALL      FP03L000
DF03L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Display Batches Not Updated        
.---------------------------------------------------------
PS03L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999
          GOTO     PS03L999
PS03L999
          RETURN
.---------------------------------------------------------
. Selections for : Display Batches Not Updated        
.---------------------------------------------------------
SF03L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF03L001  BRANCH   ACCEPT,SF03L020
.
SF03L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L101,SF03L102,SF03L103:
                            SF03L104,SF03L105,SF03L106
SF03L006  BEEP
          GOTO     SF03L005
SF03L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF03L090
          MATCH    PRGID,SCSLPID
          GOTO     SF03L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF03L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020
          GOTO     SF03L020
SF03L090  MOVE     ZERO,ACCEPT
          MOVE      "APBM3",NAMSSFFI
          MOVE      "    2",ITMSSFFI
          CALL      FP03L000
          GOTO     SF03L001
.
SF03L101
          MOVE      ZERO,EXIT
          GOTO      SF03L999
.
SF03L102
          MOVE      "APBM3",NAMSSFFI
          MOVE      "    2",ITMSSFFI
          CALL      NP03L000
          GOTO     SF03L001
.
SF03L103
          MOVE      "APBM3",NAMSSFFI
          MOVE      "    2",ITMSSFFI
          CALL      PP03L000
          GOTO     SF03L001
.
SF03L104
          MOVE      "APBM3",NAMSSFFI
          MOVE      "    2",ITMSSFFI
          CALL      FP03L000
          GOTO     SF03L001
.
SF03L105
          MOVE      "APBM3",NAMSSFFI
          MOVE      "    2",ITMSSFFI
          CALL      LP03L000
          GOTO     SF03L001
.
SF03L106
          CALL      DELBCH00
          MOVE      ONE,EXIT
          GOTO      SF03L999
SF03L990  MOVE      FOUR,EXIT * Exit Char Exit
SF03L999  RETURN
.--------------------------------
. Screen - Range of Batches by Date Range     
.--------------------------------
SC04L000
SC04L100
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC04L200
          CALL      CF04L000 * Clear Fields
SC04L300
          CALL      KY04L000 * Enter Key Fields
          BRANCH    EXIT,SC04L999,SC04L999
SC04L400
          CALL      WP04L000 * Load any WP Details
SC04L500
          CALL      LM04L000 * Load any Batch Details
SC04L600
          CALL      DF04L000 * Display Fields
SC04L700
          CALL      SF04L000 * Select Fields
          BRANCH    EXIT,SC04L100,SC04L100,SC04L200
SC04L800
SC04L900
SC04L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Range of Batches by Date Range     
.-------------------------------------------------------
CF04L000  COMPARE   ZERO,ACCEPT
              GOTO      CF04L999 IF EQUAL
          MOVE      SP70,FDATE   
          MOVE      SP70,TDATE   
CF04L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Range of Batches by Date Range     
.--------------------------------------------------------
KY04L000
.
KY04L110
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TDATE   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      FRDAT000
          BRANCH    EXIT,KY04L900,KY04L900
          MOVE      ZERO,ACCEPT
          MOVE      FDATE,VAR        
          CALL      DISPITEM
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TDATE,VAR        
            CALL      DISPITEM
          ENDIF
.
KY04L120
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      TODAT000
          BRANCH    EXIT,KY04L110,KY04L900
          MOVE      ZERO,ACCEPT
          MOVE      TDATE,VAR        
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY04L999
.
KY04L900  MOVE      ONE,EXIT
KY04L999  RETURN
.---------------------------------------------------------
. Load WP files for : Range of Batches by Date Range     
.---------------------------------------------------------
WP04L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Range of Batches by Date Range     
.---------------------------------------------------------
LM04L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Range of Batches by Date Range     
.---------------------------------------------------------
DF04L000
          BRANCH   ACCEPT,DF04L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF04L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF04L900
          MATCH    PRGID,SCPSPID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF04L010 IF NOT EQUAL
.
          CALL     PS04L000 * Display Field
          GOTO     DF04L010
DF04L900
DF04L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Range of Batches by Date Range     
.---------------------------------------------------------
PS04L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS04L999,PS04L999,PS04L999,PS04L999:
                            PS04L999,PS04L999
          GOTO     PS04L999
PS04L999
          RETURN
.---------------------------------------------------------
. Selections for : Range of Batches by Date Range     
.---------------------------------------------------------
SF04L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF04L001  BRANCH   ACCEPT,SF04L020
.
SF04L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L006,SF04L006,SF04L006,SF04L101:
                            SF04L102,SF04L103
SF04L006  BEEP
          GOTO     SF04L005
SF04L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF04L090
          MATCH    PRGID,SCSLPID
          GOTO     SF04L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF04L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L020,SF04L020,SF04L020,SF04L020:
                            SF04L020,SF04L020
          GOTO     SF04L020
SF04L090  MOVE     ZERO,ACCEPT
          GOTO     SF04L001
.
SF04L101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PBDAT000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF04L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF04L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF04L999
          ENDIF
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF04L000
          ENDIF
          GOTO      SF04L001
.
SF04L102
          MOVE      ONE,EXIT
          GOTO      SF04L999
.
SF04L103
          MOVE      ZERO,EXIT
          GOTO      SF04L999
SF04L990  MOVE      ONE,EXIT * Exit Char Restart
SF04L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Set NORPINT
.----------------------------------------------------------------------
NOPRINT  MOVE      "1",NOPRINT
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS
          MOVE      IBCNUBAS,BASFLAG
          IF        BASFLAG=1
            MOVE      "BAS",BASDESC
          ENDIF
          READ      CONTROLF,SIXTY3;*85,INCOSTYP
.
          RETURN
.**********************************************************************
. Display the batch data
.**********************************************************************
APSBCHDS  CALL      APBF0000      * format data (in function APSBCHPR)
.
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APBMTOT,OUTFORM2
          DISPLAY   *P27:6,*V2LON,STATDESC:
                    *P27:7,*V2LON,APBMLED,*HOFF,*P34:7,FMLADESC:
                    *P27:8,*V2LON,APBMTYP,*HOFF,*P34:8,BATDESC:
                    *P27:9,*V2LON,OUTFORM2:
                    *P27:10,SECUSER:
                    *P27:11,ENTRDATE:
                    *P27:12,POSTDATE,*HOFF,SP2,PERDESC:
                    *P54:12,"Ending ":
                    *V2LON,ENDDATE
.
          RETURN
.**********************************************************************
. Batch print routine
.   Requires : APSBCHDF
.              IBACRAFD & IO and CREDMAST open
.              IHAPASSF open
.              IBACODFD & IO
.              IBAPRNFD & IO and IBAPRINT
.**********************************************************************
APSBCHPR  BRANCH    NOPRINT,APBCPR10   * no printer selection ?
          OPEN      IBACODE1,"ibacodef"
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
          CALL      OPNPRINT
.
APBCPR10  MOVE      ZERO,CPAGENO
          CALL      APBF0000           * format batch
          CALL      APBP0000           * print batch
          BRANCH    NOPRINT,APBCPR99   * no printer selection ?
.
          IF        CPAGENO>0
            CALL      SELPRINT
            CALL      CLSPRINT
          ELSE
            MOVE      "Nothing to Print !! - ",DISPMSG
            CALL      MESSAGE1
            CALL      CLSPRINT
          ENDIF
          CLOSE     IBACODE1
...       CLOSE     IBAPRNT1                                          *D-239574
.
          MOVE      ZERO,CPRTFLG    * Make Sure a New Spool File is
          MOVE      SP8,SPLFILE     * Allocated for the Next Print
APBCPR99  RETURN
.
.*********************************************************************
.*                         APBF0000                                  *
.*                  Format the batch data                            *
.*********************************************************************
.
APBF0000  CLEAR     BATDESC
          MATCH      "CR",APBMTYP
          GOTO       APBF1200 IF NOT EQUAL
          MOVE       "Credit Notes      ",BATDESC
          GOTO        APBF2000
.
APBF1200  MATCH      "IN",APBMTYP
          GOTO       APBF1300 IF NOT EQUAL
          MOVE       "Invoices          ",BATDESC
          GOTO        APBF2000
.
APBF1300  MATCH      "PY",APBMTYP
          GOTO       APBF1400 IF NOT EQUAL
          MOVE       "Payments          ",BATDESC
          GOTO        APBF2000
.
APBF1400  MATCH      "CC",APBMTYP
          GOTO       APBF1500 IF NOT EQUAL
          MOVE       "Cancelled Payments",BATDESC
          GOTO       APBF2000
.
APBF1500  MATCH      "PP",APBMTYP
          GOTO       APBF2000 IF NOT EQUAL
          MOVE       "Prompt Payments   ",BATDESC
          GOTO       APBF2000
.
APBF2000  CLEAR      DIM28
.
.----- Format the post date ----
.
          UNPACK     APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK       POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP        " 0",POSTDATE
.
.----- get the financial period description and end date ----
.
          MOVE      APBMADT,WORKDATE
          PACK      KEY2,APBMLED
          CALL      RDFMLA1
          CALL      CFYR0000
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMDAT
          UNPACK     APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       ENTRDATE,CPCDATE,SP70
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMUDT
          MOVE       "Batch Awaiting Update",STATDESC
.
          MATCH      "0000000000",APBMUDT
          GOTO       APBF5000 IF EQUAL
.
          MOVE       "Batch Updated ",STATDESC
          UNPACK     APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       STATDESC,STATDESC,CPCDATE,SP70
.
.----- get user description -----
.
APBF5000  CLEAR      SECUSER
          PACK       KEY4,APBMOPR
          CALL       RDPASS1
.
APBF9999  RETURN
.
.*********************************************************************
.*                          APBP0000                                 *
.*                     Print a single batch                          *
.*********************************************************************
APBP0000  CALL      IBACLOCK
.
          DISPLAY   *P1:24,*EL,"Printing Batch : ",*V2LON,APBMBCH;
.
          MOVE      ZERO,TOTDEBS       * initialise total debits
          MOVE      SP70,LASTCRD
          MOVE      SP70,LASTDOC
          MOVE      Z70,LASTREF
          CALL      HEAD0000           * print header
.
APBP3000  PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1            * go to start of records
.
APBP3100  CALL      RKAPIN1            * go to start of records
          BRANCH    OVRCD,APBP7000     * no more records ?
          MATCH     APINBCH,APBMBCH
          GOTO      APBP7000 IF NOT EQUAL
.
          CALL      PGST0000
.
          MOVE      SP70,APIMTER
          MOVE      ZERO,APIMTOT
          MOVE      ZERO,APIMDIS
          MOVE      ZERO,APIMGST
          PACK      KEY40,APINBCH,APINCRD,APINREF,APINDOC,SP70
          CALL      RDAPIM1
.
          MOVE      APINCRD,LASTCRD
          MOVE      APINDOC,LASTDOC
          MOVE      APINREF,LASTREF
.
          CALL      PLIN0000             * print the report line
          GOTO      APBP3100
.
.---- print totals ----
.
APBP7000  MOVE      "~~~~~~~~~~~~~~~~~~~~",APINREF
          MOVE      "~~~~~~~~~~~~~~~~~~~~",APINDOC
          CALL      PGST0000
          MOVE      FORMAT2,OUTFORM2
          FEDIT     TOTDEBS,OUTFORM2
          PRINT     SP1
          CALL      UND132
          PRINT     *100,"Total : ",*113,OUTFORM2
          CALL      UND132
.
APBP9999  RETURN
.
.**********************************************************************
.  PGST - Print Gst Data                               Called By APBP
.**********************************************************************
PGST0000  MATCH     APINCRD,LASTCRD
          GOTO      PGST1000 IF NOT EQUAL
          MATCH     APINREF,LASTREF
          GOTO      PGST1000 IF NOT EQUAL
          MATCH     APINDOC,LASTDOC
          GOTO      PGST9999 IF EQUAL
.
PGST1000  MATCH     Z70,LASTREF
          GOTO      PGST9999 IF EQUAL
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          MATCH     ANSP,APIMPAYG
          IF        @EQUAL
            ASSIGN    APIMTOT-APIMDIS,APIMTOT
          ELSE
            ASSIGN    APIMTOT-APIMDIS+APIMGST,APIMTOT
          ENDIF
          ADD       APIMTOT,TOTDEBS        * add to debits
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APIMTOT,OUTFORM2
          PRINT     *113,OUTFORM2
.
PGST9999  RETURN
.**********************************************************************
.*                         HEAD0000                                   *
.*                  display the page heading                          *
.**********************************************************************
.
HEAD0000  MOVE      ONE,CNOUNDLN
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          PACK      CPHDROPT,SP70
          CALL      HEAD132
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APBMTOT,OUTFORM2
.
          PRINT        "Batch Number : ",APBMBCH:
                   *60,"Post to Date : ",POSTDATE,SP1,PERDESC,"Ending ",ENDDATE:
                    *N,"Batch Type   : ",APBMTYP,SP1,BATDESC:
                   *60,"Entered      : ",ENTRDATE," by ",SECUSER:
                    *N,"Batch Total  : ",OUTFORM2:
                   *60,"Status       : ",STATDESC
          CALL      UND132
.
          MOVE      "Document Ref   ",REFDESC1
          MOVE      "Invoice Number ",REFDESC2
          MATCH     "IN",APBMTYP
          IF        @EQUAL
            MOVE      "Invoice Number ",REFDESC1
            MOVE      "               ",REFDESC2
          ENDIF
          MATCH     "CR",APBMTYP
          IF        @EQUAL
            MOVE      "Credit Note    ",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
          MATCH     "PY",APBMTYP
          IF        @EQUAL
            MOVE      "Payment  Number",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
          MATCH     "CC",APBMTYP
          IF        @EQUAL
            MOVE      "Payment  Number",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
.
          PRINT     *1,"Creditor Code",*17,"Creditor Name",*50,REFDESC1:
                    *67,REFDESC2,*97,"        Posting":
                    *117,"    Transaction":
                    *N,*1,"Ledger/Account",*16,"Order No",*26,"Catalog":
                    *34,"Quantity":
                    *43," Diss",*49,"Resp",*54,BASDESC:
                    *65,"Transaction Description":
                    *97,"         Amount",*117,"         Amount"
.
          CALL      UND132
.
          ADD       FIVE,CLNO
.
HEAD9999  RETURN
.
.**********************************************************************
.*                         PLIN0000                                   *
.*                 Print the report lines                             *
.**********************************************************************
.
PLIN0000  COMPARE   "55",CLNO            * test for a full page
          CALL      UND132 IF NOT LESS
          COMPARE   "55",CLNO            * test for a full page
          CALL      HEAD0000 IF NOT LESS
.
.----- format the amount for printing ----
.
          CLEAR     DIM28
          PACK      KEY14,APINLED,APINACC
          UNPACK    SP70,FMAMDESC
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          MOVE      FMAMDESC,DIM28
.
          MOVE      APINQTY,IQUANT
.
.---- print supplier if desired ----
.
PLIN9100  PACK      APMACN1,SP70
          PACK      KEY5,APINCRD,SP70
          MATCH     "~~",KEY5
          GOTO      PLIN9150 IF NOT EQUAL
.
          CALL      GETBAT00            * Get Batch# for Non-Spec Cred Ret KEY8
          CALL      RDAPNS1
          MOVE      APNSNA1,APMACN1
          GOTO      PLIN9160
.
PLIN9150  CALL      RDAPMA1
.
PLIN9160  MATCH     APMACN1,LASTNAME
          GOTO      PLIN9200 IF EQUAL       * same as last creditor ?
.
          PACK      LASTNAME,APMACN1,SP70
          ADD       TWO,CLNO
          MATCH     SP70,REFDESC2           * print invoice ref ?
          IF        @EQUAL
            MOVE      SP70,INVREF
          ELSE
            MOVE      APINREF,INVREF
          ENDIF
          PRINT     *N,APINCRD,*17,APMACN1,*50,APINDOC,*67,INVREF;
          COMPARE   ZERO,APIMGST
          GOTO      PLIN9200 IF EQUAL
.
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APIMGST,OUTFORM2
          MATCH     ANSP,APIMPAYG
          IF        @EQUAL
            PRINT     *83,"P.A.Y.G. :",*93,OUTFORM2;
          ELSE
            PRINT     *83,"G.S.T.   :",*93,OUTFORM2;
          ENDIF
.
PLIN9200  MOVE      FORMAT2,OUTFORM2
          FEDIT     APINAMT,OUTFORM2
.
          MATCH     "~~",KEY5
          GOTO      PLIN9210 IF EQUAL
.
          MATCH     "Cheque Print",APIMDOC
          GOTO      PLIN9250 IF EQUAL
.
PLIN9210  CALL      GETSIN00
          IF        BASFLAG=1
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*54,APINBASC,*58,APINDES:
                      *93,OUTFORM2;
          ELSE
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*58,APINDES:
                      *93,OUTFORM2;
          ENDIF
          ADD       ONE,CLNO             * increment the row
          GOTO      PLIN9999
.
PLIN9250  CALL      GETSIN00
          UNPACK    APINDES,KEY5,KEY15,KEY8,KEY3,KEY1
          MOVE      KEY1,F1
          CLEAR     KEY34
          IF        F1=0
            APPEND    "IN Batch ",KEY34
          ELSE
            APPEND    "CR Batch ",KEY34
          ENDIF
          APPEND    KEY5,KEY34
          APPEND    " Ref ",KEY34
          STRIP     KEY15
          APPEND    KEY15,KEY34
          RESET     KEY34
          IF        BASFLAG=1
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*54,APINBASC,*58,KEY34:
                      *93,OUTFORM2;
          ELSE
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*58,KEY34:
                      *93,OUTFORM2;
          ENDIF
          ADD       ONE,CLNO             * increment the row
.
PLIN9999  RETURN
.
.----------------------------------------------------------------------
. Get Sin Catalog Code
.----------------------------------------------------------------------
GETSIN00  COMPARE   ONE,INCOSTYP
          GOTO      GETSIN99 IF NOT EQUAL
.
          MATCH     SP70,APINORD
          GOTO      GETSIN99 IF EQUAL
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1          * Read Inventory Directory
          BRANCH    OVRCD,GETSIN99
.
          MOVE      "sinpocaf",KEY8
          PACK      KEY80,APISDIR,KEY8
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SINPOCA1,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,GETSIN99
.
          MOVE      APINCAT,KEY3
          PACK      KEY10,KEY7,KEY3,SP70
          CALL      RDSIPC1
          BRANCH    OVRCD,GETSIN99
          MATCH     SP70,SIPCCAT
          IF        !@EQUAL
            MOVE      SIPCCAT,APINCAT
          ENDIF
.         CLOSE     SINPOCA1           srf 616745 & 641977
.
GETSIN99  RETURN
.----------------------------------------------------------------------
. Get the Payments Batch Number for Cancelled Cheques and Reinstatements
.----------------------------------------------------------------------
GETBAT00  UNPACK    KEY5,KEY2,KEY3
          PACK      KEY8,APINBCH,KEY3
.
          MATCH     "3",APIMTYP           * Cancelled Cheque
          CALL      IMSBCH00 IF EQUAL
.
          MATCH     "4",APIMTYP           * Reinstated Cheque
          CALL      IMSBCH00 IF EQUAL
.
GETBAT99  RETURN
.----------------------------------------------------------------------
. Get the Payments Batch Number from the apsimsaf file
. RETURNS   KEY8 set for reading non-spec. cred. apsnscaf file
.----------------------------------------------------------------------
. ------- Save Current Record Positions
IMSBCH00  PACK      KEY41,APINBCH,APINCRD,APINREF,APINDOC,SP70
          PACK      KEY52,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
.
. ------- Get Matching Payments Batch Number
          PACK      KEY40,APINCRD,APINDOC,APINREF,SP70
          CALL      RSAPIM4
.
IMSBCH10  CALL      RKAPIM4
          BRANCH    OVRCD,IMSBCH90
.
          PACK      KEY35,APINCRD,APINDOC,APINREF,SP70
          MATCH     KEY35,KEY40
          GOTO      IMSBCH90 IF NOT EQUAL
.
          MATCH     "2",APIMTYP
          GOTO      IMSBCH10 IF NOT EQUAL
.
          MOVE      APIMBCH,APINBCH         * Move in the payments batch number
          UNPACK    KEY5,KEY2,KEY3
          PACK      KEY8,APIMBCH,KEY3
.
. ------- Reset original position in the invoice files.
IMSBCH90  PACK      KEY40,KEY41
          CALL      RDAPIM1
.
          PACK      KEY51,KEY52
          CALL      RDAPIN1
.
IMSBCH99  RETURN
RANG0000  MATCH     FROMBAT,TOBAT
          GOTO      RANG3000 IF NOT LESS
.
          MOVE      "Invalid Range - ",DISPMSG
          CALL      MESSAGE1
          MOVE      "2",EXIT
          GOTO      RANG9999
.
RANG3000  PACK      KEY5,FROMBAT
          CALL      RSAPBM1
          CALL      RPAPBM1
          MOVE      ZERO,CPAGENO
.
RANG3100  CALL      RKAPBM1
          BRANCH    OVRCD,RANG9999
          MATCH     APBMBCH,TOBAT
          GOTO      RANG9999 IF LESS     * out of range ?
.
          CALL      APSBCHPR             * print a selected batch
          GOTO      RANG3100             * get next batch
.
RANG9999  RETURN
APBMD000  MOVE      "Unknown        ",BATCHTYP
          MATCH     "IN",APBMTYP
          GOTO      APBMD010 IF NOT EQUAL
          MOVE      "Invoices       ",BATCHTYP
          GOTO      APBMD100
.
APBMD010  MATCH     "CR",APBMTYP
          GOTO      APBMD020 IF NOT EQUAL
          MOVE      "Credit Notes   ",BATCHTYP
          GOTO      APBMD100
.
APBMD020  MATCH     "PY",APBMTYP
          GOTO      APBMD030 IF NOT EQUAL
          MOVE      "Payments       ",BATCHTYP
          GOTO      APBMD100
.
APBMD030  MATCH     "CC",APBMTYP
          GOTO      APBMD100 IF NOT EQUAL
          MOVE      "Cancel Payments",BATCHTYP
          GOTO      APBMD100
.
APBMD100  MOVE      APBMOPR,KEY4
          MOVE      SP70,SECUSER
          CALL      RDPASS1
          RETURN
.----------------------------------------------------------------------
. Delete Batch
.----------------------------------------------------------------------
DELBCH00
          DISPLAY   *P1:23,*EF,"Enter Batch Number : "
          MOVE      "22",CCOL
          MOVE      "23",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KAPBMA00
          BRANCH    EXIT,DELBCH99,DELBCH99  * Exit 1=null 2=exitchar
.
DELBCH05  PACK      KEY5,APBMBCH            * Pack Key for Read Lock
          CALL      RLAPBM1                 * Lock Record if On File
          BRANCH    OVRCD,DELBCH00,DELBCH10 * OVRCD 1=Not on File 2=Locked
.                                           * Record Now Lock
          MATCH     SP8,APBMUDT
          GOTO      DELBCH20 IF EQUAL
          MATCH     "00000000",APBMUDT
          GOTO      DELBCH20 IF EQUAL
.
          MOVE      SP70,DISPMSG
          UNPACK    APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:24,*EL,"Batch Updated on the ",*V2LON,CPCDATE,*HOFF:
                    " Delete NOT Possible - ";
          CALL      HITENTER
          GOTO      DELBCH00                * Return to Keyin
.
DELBCH10  KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      DELBCH05 IF EQUAL       * Retry Read with Lock
          MATCH     ANSX,ANS
          GOTO      DELBCH10 IF NOT EQUAL   * Invalid Entry
.
          GOTO      DELBCH00                * Return to Keyin
.
.------------------------
. Batch ok to Delete
.------------------------
DELBCH20  CALL      DELQST
          COMPARE   ONE,CEXIT
          GOTO      DELBCH99 IF NOT EQUAL
.
          MOVE      APBMBCH,KEY5
          CALL      RDAPBM1
          IF        OVRCD=0
            CALL      DEAPBM1
          ENDIF
.
DELBCH25
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
          CALL      RKAPIM1
          BRANCH    OVRCD,DELBCH35
          MATCH     APIMBCH,APBMBCH
          GOTO      DELBCH35 IF NOT EQUAL
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      DEAPIM1
          GOTO      DELBCH25
DELBCH35
          PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1
          CALL      RKAPIN1
          BRANCH    OVRCD,DELBCH99
          MATCH     APINBCH,APBMBCH
          GOTO      DELBCH99 IF NOT EQUAL
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL      DEAPIN1
          GOTO      DELBCH35
.
DELBCH99  RETURN
FRDAT000  IF        ACCEPT=1
            MOVE      SP70,FDATE
            MOVE      "Start",FROMDATE
            GOTO      FRDAT999
          ENDIF
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      SP70,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,FRDAT100
.
          PACK      FROMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMDATE
          UNPACK    FROMDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,FDATE
          GOTO      FRDAT999
.
FRDAT100  MOVE      SP70,FROMDATE
          MOVE      "Start     ",FDATE
.
FRDAT999  RETURN
TODAT000  IF        ACCEPT=1
            MOVE      Z70,TDATE
            MOVE      "End  ",TODATE
            GOTO      TODAT999
          ENDIF
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      SP70,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,TODAT100
.
          PACK      TODATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",TODATE
          UNPACK    TODATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,TDATE
          GOTO      TODAT999
.
TODAT100  MOVE      SP70,TODATE
          MOVE      "End       ",TDATE
.
TODAT999  RETURN
.---------------------------------------------------------------------
. Print PBDAT000 Batches by Date Range
.---------------------------------------------------------------------
PBDAT000  MATCH     FROMDATE,TODATE
          GOTO      PBDAT200 IF NOT LESS
.
          MOVE      "Invalid Date Range",DISPMSG
          CALL      MESSAGE1
          MOVE      "2",EXIT
          GOTO      PBDAT999
.
PBDAT200  PACK      KEY13,FROMDATE,SP70
          CALL      RSAPBM3
          CALL      RPAPBM3
          DISPLAY   *P1:24,*EL,"Processing Batch: "
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
.
PBDAT300  CALL      RKAPBM3
          BRANCH    OVRCD,PBDAT900
          MATCH     APBMUDT,TODATE
          GOTO      PBDAT900 IF LESS     * out of range ?
.
          DISPLAY   *P19:24,*EL,APBMBCH
          CALL      FBAT0000             * print header batch
          CALL      PBAT0000             * print batch
          GOTO      PBDAT300             * get next batch
.
PBDAT900  CALL      UND132
          MOVE      "(999,999,999,999.99 ",KEY20
          FEDIT     GRANDTOT,KEY20
          PRINT     *80,"Grand Total":
                    *93,KEY20
          CALL      UND132
          PRINT     *N,"*** End of Report ***"
.
PBDAT999  RETURN
.---------------------------------------------------------------------
. Print Batch Header
.---------------------------------------------------------------------
PBHD0000  MOVE      ONE,CNOUNDLN
          MOVE      "- by Date Updated",CPHDROPT
          CALL      HEAD132
          PRINT     *01,"Batch No.  ":
                    *12,"Date        ":
                    *24,"Type  ":
                    *48,"Status                          ":
                    *80,"Post to Date  ":
                    *93,"         Batch Total",*N:
                    *01,"---------  ":
                    *12,"----------  ":
                    *24,"---------------------":
                    *48,"------------------------------  ":
                    *80,"------------  ":
                    *93,"--------------------"
.
PBHD9999  RETURN
.---------------------------------------------------------------------
. Print Batch Detail Line
.---------------------------------------------------------------------
PBAT0000  IF        CLNO>55 | CPAGENO=0
            CALL      PBHD0000
          ENDIF
          MOVE      "(999,999,999,999.99 ",KEY20
          FEDIT     APBMTOT,KEY20
          PRINT     *01,APBMBCH:
                    *12,ENTRDATE:
                    *24,APBMTYP," ",BATDESC:
                    *48,STATDESC:
                    *80,POSTDATE:
                    *93,KEY20
          ADD       ONE,CLNO
          ADD       APBMTOT,GRANDTOT
.
PBAT9999  RETURN
.---------------------------------------------------------------------
. Format the batch data
.---------------------------------------------------------------------
FBAT0000  CLEAR     BATDESC
          MATCH     "CR",APBMTYP
          GOTO      FBAT1200 IF NOT EQUAL
          MOVE      "Credit Notes     ",BATDESC
          GOTO      FBAT2000
.
FBAT1200  MATCH     "IN",APBMTYP
          GOTO      FBAT1300 IF NOT EQUAL
          MOVE      "Invoices         ",BATDESC
          GOTO      FBAT2000
.
FBAT1300  MATCH     "PY",APBMTYP
          GOTO      FBAT1400 IF NOT EQUAL
          MOVE      "Payments         ",BATDESC
          GOTO      FBAT2000
.
FBAT1400  MATCH     "CC",APBMTYP
          GOTO      FBAT1500 IF NOT EQUAL
          MOVE      "Cancelled Payments",BATDESC
          GOTO      FBAT2000
.
FBAT1500  MATCH     "PP",APBMTYP
          GOTO      FBAT2000 IF NOT EQUAL
          MOVE      "Prompt Payments  ",BATDESC
          GOTO      FBAT2000
.
FBAT2000  CLEAR     DIM28
.
.----- Format the post date ----
.
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",POSTDATE
.
.----- get the financial period description and end date ----
.
          MOVE      APBMADT,WORKDATE
          PACK      KEY2,APBMLED
          CALL      RDFMLA1
          CALL      CFYR0000
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMDAT
          UNPACK     APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       ENTRDATE,CPCDATE,SP70
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMUDT
          MOVE       "Batch Awaiting Update",STATDESC
.
          MATCH      "0000000000",APBMUDT
          GOTO       FBAT5000 IF EQUAL
.
          MOVE       "Batch Updated ",STATDESC
          UNPACK     APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       STATDESC,STATDESC,CPCDATE,SP70
.
.----- get user description -----
.
FBAT5000  CLEAR      SECUSER
          PACK       KEY4,APBMOPR
          CALL       RDPASS1
.
FBAT9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSBMFIO/INC
          INC       APSBMFKY    
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSISLIO/INC
          INC       APSMASIO/INC
          INC       APSNSCIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCSAIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
          INC       SINPOCIO/INC
.
          INC       STDGENCD
.
