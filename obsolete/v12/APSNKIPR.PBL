.------------------------------------------------------------
.  File          :  apsnkiaf
.
.  Function      :  Update Keyword Index File for 
.
.  Parameters    : 
.
.  Modifications :
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  APNKBATC    DIM        5    * Code Field Segment 1
.  APNKUNIQ    DIM        3    * Code Field Segment n
.  APNKKWD     DIM       15    * Key Word
.  APNKSPA     DIM       10    * Spare
.
.  Index 1   APNKBATC, APNKUNIQ, APNKKWD
.  Index 2   APNKKWD, APNKBATC, APNKUNIQ
.
.  To convert this Procedure the following should be performed
.    Global Change APS to the System ID eg :%s/APS/PAT/g
.    Global Change NKI to the File   ID eg :%s/NKI/DKI/g
.    Global Change APNK to the IO Call ID eg :%s/APNK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEYyy to the Key for the Master File Table eg KEY6 
.    Global Change KEYxx to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the GENR0000 routine to call the BWORD000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    DGNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    TDESC,KEYWORDS
.       CALL    BWORD000
.------------------------------------------------------------
          DEFPROC   APSNKIUP
.
          INC       APSNKIFD/INC
.
KEYINDEX  DIM       8         * Code Index in Table
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
GENR0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     APSNKIA1,"apsnkiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,GENR9999
.
          PACK     KEYINDEX,APNSBCH,APNSUNI
          CALL     CLEAR000           * Remove Current Key Word Index
          BRANCH   EXIT,GENR9999
.
          PACK     KEY8,APNSBCH,APNSUNI  * Validate Record on file
          CALL     RDAPNS1
          BRANCH   OVRCD,GENR1900     * If Not then it Must be a Delete/Clear
.
          PACK     KEYINDEX,APNSBCH,APNSUNI,SP70
          MOVE     APNSNA1,KEYWORDS
          CALL     BWORD000
          MOVE     APNSNA2,KEYWORDS
          CALL     BWORD000
.
          CLEAR    KEY5
          APPEND   "~~",KEY5
          APPEND   APNSUNI,KEY5
          RESET    KEY5
          PACK     KEY40,APNSBCH,KEY5,SP70
          CALL     RSAPIM1
.
GENR1000  CALL     RKAPIM1
          BRANCH   OVRCD,GENR1900
.
          MATCH    APNSBCH,APIMBCH
          GOTO     GENR1900 IF NOT EQUAL
          MATCH    KEY5,APIMCRD
          GOTO     GENR1900 IF NOT EQUAL
.
          MOVE     APIMREF,KEYWORDS
          CALL     BWORD000
          GOTO     GENR1000
.
GENR1900  CLOSE    APSNKIA1
.
GENR9999  GOTO     APSNKIEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
CLEAR000  PACK     KEY23,KEYINDEX,SP70
          CALL     RSAPNK1
          CALL     RKAPNK1
          BRANCH   OVRCD,CLEAR999
.
          PACK     KEY8,APNKBATC,APNKUNIQ
          MATCH    KEYINDEX,KEY8
          GOTO     CLEAR999 IF NOT EQUAL
.
          PACK     KEY23,APNKBATC,APNKUNIQ,APNKKWD,SP70
          CALL     DEAPNK1
          GOTO     CLEAR000
.
CLEAR999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
BWORD000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      BWORD000 IF NOT EOS
            GOTO      BWORD999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      BWORD100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
BWORD100  MOVE      KEYWORDS,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15             * Always Upper Case
          PACK      KEY23,KEYINDEX,KEY15
          UNPACK    KEY23,APNKBATC,APNKUNIQ,APNKKWD
          CALL      RDAPNK1
          IF        OVRCD=1
            CALL      WRAPNK1
          ENDIF
          GOTO      BWORD190
.
.         Check for any more words
.
BWORD190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      BWORD000
.
BWORD999  RETURN
.
          INC       APSNKIIO/INC
          INC       IBAOVRIO/INC
.
APSNKIEP  ENDPROC                          * End of Procedure
.
