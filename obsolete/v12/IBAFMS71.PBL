. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS71                                             *
. * Desc      :   Standing Journal Maintenance                         *
. **********************************************************************
. * Date      :   16.10.1990                                           *
. * Author    :   Paul Duncan                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filenames (FILENAM1 & FILENAM2).  *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.B01 29.11.2000 Sandra Barcham                                *
. *           Added BAS Code                                           *
. **********************************************************************
. * VF.01.01  01.08.2000 Sandra Barcham                                *
. *           Fix ? option for journal submission                      *
. * VF.01.00  24.02.2000 Charles Handaya                               *
. *           Allow Delete a line journal from Change Mode             *
. *           srf 635751                                               *
. **********************************************************************
. * VF.00.05  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.04  09.11.1999 Sandra Barcham                                *
. *           Recompiled for change FMSSBAUT for periodic journals     *
. * VF.00.03  01.09.1999 Sandra Barcham                                *
. *           Recompiled for index fix to FMSJPDA2                     *
. *           srf 645667                                               *
. * VF.00.02  16.08.1999 Sandra Barcham                                *
. *           Stop submitting for authorisation journals in input      *
. *           srf 645667                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSDISKY & FMSRESKY                       *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS71
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.             delete temporary files
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSBPFFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSDISFD/INC
          INC       FMSJDTFD/INC
          INC       FMSJMAFD/INC
          INC       FMSJPDFD/INC
          INC       FMSJTPFD/INC
          INC       FMSJWPFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSRESFD/INC
          INC       FMSTDSFD/INC
.
          INC       IBABASFD/INC
          INC       IBABATFD/INC
          INC       IBACONFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.==============================================================================
.   CONSTANTS
.==============================================================================
INSERT    INIT      "Insert"
CHANGE    INIT      "Change"
DELETE    INIT      "Delete"
PRINT     INIT      "Print "
OPTNDESC  INIT      "      "
.
ZERO20    INIT      "00000000000000000000"
Z20       INIT      "zzzzzzzzzzzzzzzzzzzz"
.
ACCEPT    FORM      1        * accept mode (1=on)
AMOUNT    INIT      "Amount"
CP        INIT      "cp "              * word processor variables
DASH      INIT      "-"
DISPFLAG  FORM      1
FORM2A    FORM      2
INSRTLNO  FORM      2
KEY10SAV  DIM       10
LLPOS     FORM      2
NAME1     INIT      "fmstm1"
NAME2     INIT      "fmstm2"
NORMAL    INIT      "Normal"
OPTIONP   FORM      2        * screen P selection keyin var
PAGENO    FORM      3
PERCENT   INIT      "Percentage"
SAVJDESC  DIM       40
TXT       INIT      ".txt "
WP        INIT      "wp "
WPDAT     INIT      ".txt 999 7 -1 70 14"
WPSTAT    FORM      2
ZED10     INIT      "ZZZZZZZZZZ"
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
BALANCE   FORM      12.2
BALAN13   FORM      13.2
BASDESC   DIM       3
.
CASHDESC  DIM       3
CFPOSTFG  FORM      1
CPOSDESC  DIM       15
CPOSPDAT  DIM       10
CREDBALC  FORM      4.2
CREDTOT   FORM      12.2
CURDATE   DIM       8
.
DACNFLAG  FORM      1
DEBTBALC  FORM      4.2
DEBTOT    FORM      12.2
DEFAULT   FORM      12.2
DM4      DIM       4
DIM30     DIM       30
DIM40     DIM       40
DIMAMNT   DIM       15
DIMJTOT   DIM       15
DIMPERC   DIM       7 
DIMMON    DIM       2
DIMPERD   DIM       6
DIMYEAR   DIM       4
DISPCNT   FORM      2
DOCREF    DIM       7
DRCRDESC  DIM       2
DRCRLDES  DIM       6
.
FMSTMP01  FILE      ASCII,FIXED=70     * WP Holding File Def'n 1
FILENAM1  DIM       8
FMSTMP02  FILE      ASCII,FIXED=70     * WP Holding File Def'n 2
FILENAM2  DIM       8
FILENAM3  DIM       8
FORMJTOT  FORM      12.2
FORM3     FORM      3
FORM5     FORM      5
FORM12P2  FORM      12.2
FORM15P2  FORM      15.2
F15       FORM      15
FORMPERD  FORM      6
.
LEDGDESC  DIM       35
.
JOURTYPE  DIM       1
JID1      DIM       6
JID2      DIM       6
.
KAMTFLAG  FORM      1
.
MAXDISP   FORM      2
MODE      FORM      1
MTCHAMNT  DIM       12
.
NEXT      FORM      1
NOPERDS   FORM      2
NOTES     FORM      1
NUMREC    FORM      2
.
PERCBALC  FORM      4.2
PERCDESC  DIM       3
PERDNO    FORM      2
PERPERC   FORM      2
POSTDATE  DIM       10
PPOSDESC  DIM       15
PPOSPDAT  DIM       10
.
RECCNT    FORM      2
REVDESC   DIM       3
REVFLAG   FORM      1
ROUNDDAT  FORM      1
RPOSDESC  DIM       15
RPOSPDAT  DIM       10
.
SAVE12P2  FORM      12.2
SAVEDRCR  DIM       1
SAVEDESC  DIM       2
SAVLOCKD  DIM       7
SCREEN    FORM      1
SEL01     DIM       12
SEL02     DIM       12
SEL03     DIM       12
SEL04     DIM       12
SEL05     DIM       12
SEL06     DIM       12
SEL07     DIM       12
SEL08     DIM       12
SEL09     DIM       12
SEL10     DIM       12
SEL11     DIM       12
SEL12     DIM       12
SEL13     DIM       12
SEL14     DIM       12
SEL15     DIM       12
SEL16     DIM       12
SKEY10    DIM       10
SKEYDEB   DIM       10
SKEYCRED  DIM       10
STAT0     INIT      "In Input            "
STAT1     INIT      "Balanced            "
STAT2     INIT      "Submitted           "
STAT9     INIT      "Authorised          "
STATE     INIT      "Invalid Status      "
STATDESC  DIM       20
SUBTYPE   FORM      1
.
TOTDEB    FORM      15.2
TOTCRED   FORM      15.2
.
VALOPTN   DIM       4 
.
UPCDESC   DIM       20
.
WKDTDESC  DIM       15
WKDTPDAT  DIM       10
WORKJTOT  FORM      12.2
WORKPERD  DIM       6 
ACCYEAR   DIM       4
.
.
PRGID     INIT      "IBAFMS71"
PRGNAM    INIT      "Standing Journal Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      CLOK0000           * clear last locked record
          CALL      OPTN0000           * add change delete print
          BRANCH    OPTION,ML1000,ML1000,ML1000,ML7000
          GOTO      ML9999
.
ML1000    CALL      CLOK0000           * clear last locked record
          CALL      CLR0000            * clear display variables
          CALL      PROC0000           * get entry
          BRANCH    EXIT,ML0100,ML0100 * exit program
          BRANCH    OPTION,ML2000,ML1500,ML2000
.
ML1500    CALL      CHNG0000           * change mode options
          BRANCH    EXIT,ML2000,ML3000,ML4000,ML5000
          GOTO      ML1000
.
ML2000    CALL      MADT0000           * process master details
          BRANCH    EXIT,ML6000,ML0100
          BRANCH    OPTION,ML3000,ML1500,ML1000
          GOTO      ML1500
.
ML3000    BRANCH    FMJMSPER,ML3100,ML3200
          MOVE      THREE,DACNFLAG     * dont input anything
          GOTO      ML3300
.
ML3100    MOVE      ZERO,DACNFLAG      * keyin %
          GOTO      ML3300
.
ML3200    MOVE      TWO,DACNFLAG       * keyin Amount
.
ML3300    CALL      TRAN0000           * process transaction details
          BRANCH    OPTION,ML1000      * get next entry
          GOTO      ML1500
.
ML4000    CALL      POST0000           * process posting details
          GOTO      ML1500
.
ML5000    CALL      DPST0000           * display posting data
          GOTO      ML1500
.
ML6000    BRANCH    OPTION,ML1000,ML1500
          GOTO      ML1500
.
.---- print listing ----
.
ML7000    CALL      SELP0000           * get parameters
          BRANCH    EXIT,ML0100
.
          CALL      PRNT0000           * print report
          GOTO      ML0100
.
ML9999    PREP      FMSTMP01,FILENAM1  * get rid of tempfiles
          CLOSE     FMSTMP01,DELETE
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmsamaaf";  
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
.
          DISPLAY   *P64:24,"fmsdisaf";  
          OPEN      FMSDISA1,"fmsdisaf"
.
          DISPLAY   *P64:24,"fmsjdtaf";  
          OPEN      FMSJDTA1,"fmsjdtaf"
.
          DISPLAY   *P64:24,"fmsjmaaf";  
          OPEN      FMSJMAA1,"fmsjmaaf"
          OPEN      FMSJMAA2,"fmsjmaaf"
          OPEN      FMSJMAA3,"fmsjmaaf"
.
          DISPLAY   *P64:24,"fmsjpdaf";  
          OPEN      FMSJPDA1,"fmsjpdaf"
          OPEN      FMSJPDA2,"fmsjpdaf"
          OPEN      FMSJPDA3,"fmsjpdaf"
.
          DISPLAY   *P64:24,"fmsjwpaf";  
          OPEN      FMSJWPA1,"fmsjwpaf"
.
          DISPLAY   *P64:24,"fmslmaaf";  
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";  
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsresaf";  
          OPEN      FMSRESA1,"fmsresaf"
.
          DISPLAY   *P64:24,"fmstdsaf";  
          OPEN      FMSTDSA1,"fmstdsaf"
.
          DISPLAY   *P64:24,"controlf";  
          OPEN      CONTROLF,"controlf"
.
          CALL      RDFMCO51                     * read control file sector 51
          CALL      RDFMCO52                     * read control file sector 52
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS,IBCNBSFY
.
          IF        IBCNUBAS=1
            MOVE      "BAS",BASDESC
            DISPLAY   *P64:24,"ibabasaf";
            OPEN      IBABASA1,"ibabasaf"
          ELSE
            MOVE      SP3,BASDESC
          ENDIF
.
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
.         PACK      FILENAM2,NAME2,PORT
.         REP       " 0",FILENAM2
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM2
.
          PACK      CURDATE,CCC,CYY,CMM,CDD      * todays date
          REP       " 0",CURDATE
          MOVE      ONE,CCENTRY                  * use centries in keydate
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.* OPTN - Main options                          Called by ML1000         *
.*        Returns : OPTION                                               *
.*************************************************************************
OPTN0000  MOVE      ZERO,DISPFLAG
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,"0",*HOFF,DOT,SP1,"Exit":
                    *P1:5,*V2LON,"1",*HOFF,DOT,SP1,INSERT:
                    *P1:6,*V2LON,"2",*HOFF,DOT,SP1,CHANGE:
                    *P1:7,*V2LON,"3",*HOFF,DOT,SP1,DELETE:
                    *P1:8,*V2LON,"4",*HOFF,DOT,SP1,PRINT:
                    *P1:10,"Select Option : "
.
OPTN1000  KEYIN     *P17:10,*DV,UNDLN1,*P17:10,*V2LON,FORM1
          MOVE      FORM1,OPTION
          COMPARE   "0",FORM1            
          GOTO      OPTN2000 IF LESS      * invalid option
          GOTO      OPTN9999 IF EQUAL     * exit chosen
. 
          BRANCH    OPTION,OPTN3000,OPTN3000,OPTN3000,OPTN3000
OPTN2000  BEEP
          GOTO      OPTN1000
.
OPTN3000  LOAD      OPTNDESC,OPTION,INSERT,CHANGE,DELETE,PRINT
          DISPLAY   *P60:3,*V2LON,*+,OPTNDESC
.
OPTN9999  RETURN
.*************************************************************************
.* CLR - Clear the display variables                                     *
.*************************************************************************
CLR0000   UNPACK    SP70,FMJMJID,FMJMDESC,FMJMDENT,FMJMLEDG,FMJMPPOS
          MOVE      "1",CFPOSTFG
          UNPACK    SP70,FMLADESC,FMJMCPOS,FMJMRPOS,UPCDESC
          MOVE      ZERO,FMJMSPER
          MOVE      ZERO,FMJMCASH
          MOVE      ZERO,FMJMREV
          UNPACK    SP70,STATDESC,PPOSDESC,PPOSPDAT,CPOSPDAT,CPOSDESC
          UNPACK    SP70,CASHDESC,REVDESC,FMLALEDG,LEDGDESC
          MOVE      ZERO,DEBTOT
          MOVE      ZERO,CREDTOT
          UNPACK    SP70,FMRSCODE,FMDSCODE
CLR1000   MOVE      "  1",FMJDLNO
          UNPACK    SP70,FMJDJID,FMJDDRCR,FMJDDESC,FMJDACC
          UNPACK    SP70,FMJDDIS,FMJDRES,DIMPERC,DIMAMNT,FMJDBASC
          MOVE      ZERO,FMJDTAMT
          MOVE      ZERO,FMJDPERC
          MOVE      ZERO,FMJDPAMT
           
CLR9999   RETURN
.******************************************************************************
.* PROC - Enter Genereal journal code            Called by ML1000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMJWJID  (variable entered)                               *
.******************************************************************************
PROC0000  MOVE      ONE,SCREEN         * screen one
          CALL      RJMAFM00
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          COMPARE   ONE,OPTION        * insert mode ?
          GOTO      PROC1000 IF NOT EQUAL
.
          MOVE      ZERO,FMJMJID
          MOVE      FALSE,EXIT
          GOTO      PROC1200
.
PROC1000  MOVE      FMJOPRE2,FMJMJTY
          MOVE      ZERO,DISPFLAG
          CALL      KJMAFM00            * keyin journal code
          BRANCH    EXIT,PROC9999,PROC9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          PACK      KEY7,FMJMJTY,FMJMJID,SP70
          PACK      SAVLOCKD,KEY7,SP70
          CALL      RLFMJM1
          BRANCH    OVRCD,PROC1000,PROC1100
          GOTO      PROC1200
.
PROC1100  DISPLAY   *P1:24,*B,*EF,"Journal ",*V2LON,FMJMJID,*HOFF:
                    " Locked - Try Again Later - ";
          CALL      HITENTER
          GOTO      PROC1000
.
PROC1200  MOVE      "Awaiting Processing",STATDESC * yes - display it
.
PROC4000  DISPLAY   *P51:4,"Status  : ",*V2LON,STATDESC
          GOTO      PROC9999
.
PROC9999  RETURN
.**********************************************************************
.  CLOK - clear locked record                          Called By ML
.**********************************************************************
CLOK0000  PACK      KEY7,SAVLOCKD,SP70
          CALL      UUFMJM1
.
CLOK9999  RETURN
.*************************************************************************
.* MADT - Process the journal master details        Called by ML1000     *
.*************************************************************************
MADT0000  MOVE      FALSE,EXIT
          DISPLAY   *P60:3,*V2LON,*+,OPTNDESC," Header",*EL
          MOVE      ONE,SCREEN
          MOVE      ZERO,MODE         * initialize to add mode
          CALL      GETW0000          * get notes from file
          COMPARE   ONE,OPTION        * insert mode ?
          CALL      IMDT0000 IF EQUAL * input mode if yes
          BRANCH    EXIT,MADT7000,MADT9999
.
          COMPARE   ONE,OPTION        * not insert mode ?
          CALL      DMDT0000 IF NOT EQUAL * display details on file if not
          COMPARE   THREE,OPTION      * delete mode?
          GOTO      MADT1000 IF NOT EQUAL * if not dont delete
.
          CALL      DELT0000          * ok to delete and delete
          GOTO      MADT9999
.
MADT1000  CALL      MQST0000          * select option post cancel notes
          MOVE      "1",MODE
          COMPARE   ZERO,CCITEM       * post?
          GOTO      MADT5000 IF EQUAL
.
          COMPARE   "-1",CCITEM       * cancel?
          GOTO      MADT9000 IF EQUAL
.
          COMPARE   "-2",CCITEM       * notes?
          GOTO      MADT4000 IF EQUAL
.
          BRANCH    CCITEM,MADT1100,MADT1200,MADT1300,MADT1380:
                           MADT1400,MADT1500
          BEEP
          GOTO      MADT1000
.
MADT1100  CALL      KBDS0000         * keyin brief description
          BRANCH    EXIT,MADT1100
          GOTO      MADT1000
.
MADT1200  CALL      KDEN0000         * keyin date entered
          GOTO      MADT1000
.
MADT1300  PACK      KEY16,FMJOPRE2,FMJMJID,SP10   * any details on this journal?
          CALL      RSFMJD1
          CALL      RKFMJD1
          BRANCH    OVRCD,MADT1350
          PACK      KEY7,FMJDJTY,FMJDJID,SP70
          MATCH     KEY7,KEY16
          GOTO      MADT1350 IF NOT EQUAL
          DISPLAY   *P1:24,*EL,*B,"This Journal has transaction details - ":
                    " Can't change Ledger. Tap <",*V2LON,"ENTER",*HOFF,">"
          KEYIN     ANS;
          GOTO      MADT1000
.
MADT1350  CALL      KLDG0000         * keyin ledger
          BRANCH    EXIT,MADT1300,MADT9000
          GOTO      MADT1000
.
MADT1380  CALL      KCPD0000         * keyin cash posting date
          GOTO      MADT1000
.
MADT1400  CALL      KPRV0000         * keyin post reversal
          GOTO      MADT1000
.
MADT1500  CALL      KUPC0000         * keyin use percentages
          GOTO      MADT1000
.
MADT4000  CALL      KNTE0000         * Keyin notes?
          GOTO      MADT1000
.
MADT5000  MOVE      "0",FMJMSTAT     * set status to 1 - awaiting processing
          CALL      WJMA0000         * write to journal file
          CALL      WCOM0000
          MOVE      FALSE,EXIT
          GOTO      MADT9999
.
MADT6000  CALL      NOTE0000         * input or change notes
          CALL      RLMAFM00         * redisplay screen
          GOTO      MADT1000
.
MADT7000  COMPARE   "1",OPTION       * inserting?
          GOTO      MADT9999 IF NOT EQUAL
.
          MOVE      TWO,EXIT
          GOTO      MADT9999
.
MADT9000  MOVE      TRUE,EXIT;
          PREP      FMSTMP01,FILENAM1            * get rid of tempfiles
          CLOSE     FMSTMP01,DELETE
          PACK      KEY7,FMJOPRE2,FMJMJID
          CALL      RDFMJM1           * reread record
.
MADT9999  RETURN
.
.*************************************************************************
.* DMDT - Set up the variables to display the record on file             *
.*                     called by : MADT0000                              *
.*************************************************************************[
DMDT0000  MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1              * get ledger description
          MOVE      FMLADESC,LEDGDESC    * set ledger description
.
          MOVE      DNO,CASHDESC
          LOAD      CASHDESC,FMJMCASH,DYES
.
          MOVE      DNO,REVDESC
          LOAD      REVDESC,FMJMREV,DYES
.
          MOVE      NORMAL,UPCDESC
          LOAD      UPCDESC,FMJMSPER,PERCENT,AMOUNT
.
          CALL      RLMAFM00             * display screen
.
DMDT9999  RETURN
.*************************************************************************
.* IMDT - Input the journal master details      Called by MADT0000       *
.*      - Returns - EXIT = 0 -valid entries 1 -exitchar or enter hit     *
.*************************************************************************
IMDT0000  CALL      RLMAFM00
          CALL      KBDS0000         * keyin brief description
          BRANCH    EXIT,IMDT9000,IMDT9999
IMDT1000  CALL      KDEN0000         * keyin date entered
          BRANCH    EXIT,IMDT0000,IMDT9999
IMDT2000  CALL      KLDG0000         * keyin ledger
          BRANCH    EXIT,IMDT1000,IMDT9999
IMDT2500  CALL      KCPD0000         * keyin post cash      
          BRANCH    EXIT,IMDT2000,IMDT9999
IMDT3000  CALL      KPRV0000         * keyin post reversal
          BRANCH    EXIT,IMDT2000,IMDT9999
IMDT4000  CALL      KUPC0000         * keyin use percantages?"
          BRANCH    EXIT,IMDT3000,IMDT9999
.
IMDT8000  MOVE      FALSE,EXIT
          GOTO      IMDT9999
.
IMDT9000  MOVE      TRUE,EXIT
.
IMDT9999  RETURN
.*************************************************************************
.* KBDS - Keyin the brief desciption of the journal                      *
.*        Returns - EXIT = 0 - valid description 1 - null                *
.*                     called by :  MADT1100, IMDT0000                   *
.*************************************************************************
KBDS0000  MOVE      FMJMDESC,DIM30
          KEYIN     *P28:6,*DV,UNDLN30,*P28:6,*V2LON,DIM30:
                    *P28:6,*DV,DIM30
.
          PACK      DIM30,DIM30,SP70
.
          MATCH     DIM30,SP70          * nothing entered?
          GOTO      KBDS1000 IF EQUAL
.
          MATCH     EXITCHAR,DIM30          * nothing entered?
          GOTO      KBDS8000 IF NOT EQUAL
.
          MOVE      TWO,EXIT               * exitchar
          PACK      FMJMDESC,DIM30,SP70
          GOTO      KBDS9999
.
KBDS1000  MOVE      TRUE,EXIT
          PACK      FMJMDESC,DIM30,SP70
          GOTO      KBDS9999
.
KBDS8000  MOVE      FALSE,EXIT
          PACK      FMJMDESC,DIM30,SP70
.
KBDS9999  RETURN
.*************************************************************************
.* KDEN - Keyin date entereed                Called by MADT1200 IMDT2000 *
.*      - Returns EXIT = 0 - valid entry 1 - null 2 -exitchar            *
.*************************************************************************
KDEN0000  BRANCH   OPTION,KDEN1000            * which default to set up?
          REP       " 0",FMJMDENT
          UNPACK   FMJMDENT,CCENT,CYEAR,CMON,CDAY
          GOTO     KDEN2000
KDEN1000  UNPACK   CURDATE,CCENT,CYEAR,CMON,CDAY
KDEN2000  MOVE     "7",CVERT
          MOVE     "28",CCOL
          CALL     KEYDATE            * keyin date
          BRANCH   CQUEST,KDEN2000    * no question mark
          BRANCH   OVRCD,KDEN2000
          MOVE     FALSE,EXIT
          PACK     FMJMDENT,CCENT,CYEAR,CMON,CDAY
.
KDEN9999  RETURN
.*************************************************************************
.* KLDG - Keyin ledger code                 Called by IMDT3000, MADT1300 *
.*        Returns EXIT = 0 - valid entry 1 -null 2 exitchar              *
.*************************************************************************
KLDG0000  MOVE      "8",CVERT           * set up variables for standard keyin
          MOVE      "28",CCOL
          CALL      KLMAFM00            * keyin ledger
          BRANCH    EXIT,KLDG1000,KLDG9999
.
          DISPLAY   *P28:8,*V2LON,FMLALEDG,*HOFF,SP1,FMLADESC
          MOVE      FMLALEDG,FMJMLEDG
          MOVE      FMLADESC,LEDGDESC
          GOTO      KLDG9999
.
KLDG1000  MOVE      SP70,LEDGDESC
.
KLDG9999  RETURN
.*************************************************************************
.* KCPD - Keyin post to cash? - y/n      Called by IMDT5000 MADT1500     *
.*************************************************************************
KCPD0000  MOVE      "9",CVERT          * set up screen posy
          MOVE      "28",CCOL
          MOVE      "N",DEFYESNO
          DISPLAY   *P28:9,*EL
          CALL      YORN0000            * yes or no?
.
          MOVE      FYESNO,FMJMCASH
          MOVE      YESNO,CASHDESC
.
KCPD9999  RETURN         
.*************************************************************************
.* KPRV - Keyin reversing?    - y/n      Called by IMDT5000 MADT1500     *
.*************************************************************************
KPRV0000  MOVE      "10",CVERT          * set up screen posy
          MOVE      "28",CCOL
          MOVE      "N",DEFYESNO
          DISPLAY   *P28:10,*EL
          CALL      YORN0000            * yes or no?
.
          MOVE      FYESNO,FMJMREV
          MOVE      YESNO,REVDESC
.
KPRV9999  RETURN         
.*************************************************************************
.* KUPC - Keyin Using percentage all?    Called by IMDT5000 MADT1500     *
.*************************************************************************
KUPC0000  MOVE      "11",CVERT          * set up screen posy
          MOVE      "28",CCOL
          MOVE      "N",DIM1
          KEYIN     *P28:11,*EL,*DV,DIM1:
                    *P28:11,*RV,*V2LON,DIM1:
                    *P28:11,*DV,DIM1
          REP       UPPLOW,DIM1
          MATCH     "P",DIM1
          GOTO      KUPC1000 IF NOT EQUAL
          MOVE      "Percentage",UPCDESC
          GOTO      KUPC3000
.
KUPC1000  MATCH     "A",DIM1
          GOTO      KUPC2000 IF NOT EQUAL
          MOVE      "Amount",UPCDESC
          GOTO      KUPC3000
.
KUPC2000 
          MATCH     "N",DIM1
          GOTO      KUPC0000 IF NOT EQUAL
          MOVE      "Normal",UPCDESC
.
KUPC3000  REP       "N0P1A2",DIM1
          MOVE      DIM1,FMJMSPER
          DISPLAY   *P28:11,*V2LON,UPCDESC
.
KUPC9999  RETURN         
.*************************************************************************
.* KNTE - Keyin Notes?                   Called by IMDT5000 MADT1500     *
.*************************************************************************
KNTE0000  CALL      NOTE0000                     * initialize wp
.
KNTE3000  CALL      RLMAFM00            * redisplay screen
.         
KNTE9999  RETURN         
.*************************************************************************
.* CFPR - Calculate which period in which finsancial year that a date    *
.*        falls into.                                                    *
.*        Reguires - WORKDATE - date to find                             *
.*                   FMLALEDG - ledger                                   *
.*                   FMLACYRR - Current financial year for ledger        *
.*        Returns  - WKDTDESC - period description                       *
.*                   WKDTPDAT - period start date                        *
.*                   EXIT     - 0 - period found                         *
.*                              1 - period found but locked              *
.*        called by : KAPD0000                                           *
.*************************************************************************
CFPR0000  MATCH     SP2,FMLALEDG
          GOTO      CFPR1000 IF NOT EQUAL
          MOVE      SP2,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          GOTO      CFPR2000
CFPR1000  MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1
CFPR2000  CALL      CFYR0000
          BRANCH    EXIT,CFPR9000
          MOVE      PERDESC,WKDTDESC
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,WKDTPDAT
          GOTO      CFPR9999
CFPR9000  DISPLAY   *P1:24,*EL,ERRMSG;
          CALL      HITENTER
CFPR9999  RETURN
.*************************************************************************
.* WJMA - write to the journal master file                               *
.*************************************************************************
WJMA0000  
          MATCH     "0",FMJMJID       * is it a newy
          GOTO      WJMA1000 IF NOT EQUAL
.
WJMA0100  CALL      RDFMCOJ2         * read last journal id
          MOVE      FMJONEX2,FMJMJID * use next journal id number
          ADD       ONE,FMJONEX2     * increment next journal number
          CALL      WRFMCOJ2         * read next journal id
          PACK      KEY7,FMJOPRE2,FMJMJID
          CALL      RAFMJM1          * is it already there?
          COMPARE   ONE,OVRCD
          GOTO      WJMA0100 IF NOT EQUAL
.
          DISPLAY   *P1:24,"New Journal Id is : ",*V2LON,FMJMJID," - ",*EL; 
          CALL      HITENTER
          DISPLAY   *P28:4,*V2LON,FMJMJID
.
WJMA1000  DISPLAY   *P1:24,*EL,*P50:24,*V2LON,"*** Posting ***"; 
          PACK      KEY7,FMJOPRE2,FMJMJID
          CALL      RAFMJM1           * is it already there?
          BRANCH    OVRCD,WJMA2000
.
          CALL      UPFMJM1           * yes -update it
          GOTO      WJMA9999
.
WJMA2000  UNPACK    SP70,FMJMPDAT,FMJMPBAT,FMJMRDAT,FMJMRBAT
          CALL      WRFMJM1
          PACK      KEY7,FMJMJTY,FMJMJID,SP70
          PACK      SAVLOCKD,KEY7,SP70
          CALL      RLFMJM1
.
WJMA9999  RETURN
.******************************************************************************
.         Subroutine to SELECT ITEM, POST,CANCEL or NOTES
.------------------------------------------------------------------------------
.
SPCN0000  MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          BRANCH    NOTES,SPCN0600
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel, ( )otes ? ",*V2LON:
                    *P33:24,"N",*HOFF,*P42:24,*V2LON,*JR,CCITEMD;
          GOTO      SPCN0700
.
SPCN0600  KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel, ( )otes ? ",*V2LON,*BLINKON:
                    *P33:24,"N",*HOFF,*P42:24,*V2LON,*JR,CCITEMD;
.
SPCN0700  RESET     CCITEMD
          GOTO      SPCN0000 IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  C",CCITEMD
          GOTO      SPCN2000 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      SPCN3000 IF EQUAL
.
          MATCH     "  N",CCITEMD
          GOTO      SPCN4000 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      SPCN1000 IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      SPCN1000 IF LESS
.
          RETURN
.
SPCN1000  BEEP
          GOTO      SPCN0000
.
SPCN2000  MOVE      "-1",CCITEM
          RETURN
.
SPCN3000  MOVE      "0",CCITEM
          RETURN
.
SPCN4000  MOVE      "-2",CCITEM
          RETURN
+
.******************************************************************************
.* GETW - read in wp data                        Called by who cares ?        *
.******************************************************************************
GETW0000  MOVE      ZERO,NOTES                   * assume no notes
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          PACK      KEY10,FMJOPRE2,FMJMJID,SP70
          CALL      RSFMJW1                      * go to start of records
.
GETW1000  CALL      RKFMJW1                      * get next record
          BRANCH    OVRCD,GETW2000               * no more records ?
          PACK      KEY14,FMJWJTY,FMJWJID,SP70
          MATCH     KEY10,KEY14
          GOTO      GETW2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMJWLINE
          MOVE      ONE,NOTES                   * we have some notes
          GOTO      GETW1000
.
GETW2000  WEOF      FMSTMP01,SEQ
          CLOSE     FMSTMP01
.
GETW9999  RETURN
.**********************************************************************
.  MQST - select, post, exit, run report              Called By SELT
.        Returns  - CCITEM   (0=post, -1=cancel, -2=notes, other=select
.**********************************************************************
MQST0000  MOVE      SP70,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON:
                    "C",*HOFF,")ancel, (",*V2LON:
                    "N",*HOFF,")otes ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQST0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  P",CCITEMD      * post ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  C",CCITEMD      * cancel ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      "-2",CCITEM
          MATCH     "  N",CCITEMD      * notes ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQST9999 IF NOT LESS
.
          BEEP
          GOTO      MQST0000
.
MQST9999  RETURN
.******************************************************************************
.* NOTE - Execute word processor                 Called by QUES               *
.******************************************************************************
NOTE0000  
.          DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                    *BLINKON,*V2LON,"Please Wait",*EL;
..
.          PREP      FMSTMP02,FILENAM2
.          WRITE     FMSTMP02,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.          WRITE     FMSTMP02,SEQ;VERSION,SP10,SP5,PRGNAM
.          WRITE     FMSTMP02,SEQ;SP1
.          WRITE     FMSTMP02,SEQ;"    Journal ID           : ":
.                    FMJMJID,SP10,SP7,"Status  : ",STATDESC
.          WRITE     FMSTMP02,SEQ;SP1
.          WRITE     FMSTMP02,SEQ;"    Notes"
.          WRITE     FMSTMP02,SEQ;SP1
.          OPEN      FMSTMP01,FILENAM1            * go to start of records
..
.NOTE1000  READ      FMSTMP01,SEQ;FMJWLINE        * read in wp data
.          GOTO      NOTE2000 IF OVER
..
.          WRITE     FMSTMP02,SEQ;FMJWLINE
.          GOTO      NOTE1000
.
.NOTE2000  CLEAR     CMDLINE
.          PACK      CMDLINE,WP,FILENAM2,WPDAT
.          EXECUTE   CMDLINE,TASKID               * initiate word processor
..
.          CALL      WEOF0000                     * make sure something in file
.          CLOSE     FMSTMP02
          CLOSE     FMSTMP01
.
.          CLEAR     CMDLINE                      * copy file to original
.          PACK      CMDLINE,CP,FILENAM2,TXT,FILENAM1,TXT 
.          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    FILENAM1,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          MOVE      ONE,WPSTAT
.
          WORD      CMDLINE,999,2,6,79,22,WPSTAT
.
          OPEN      FMSTMP01,FILENAM1            * go to start of records
          READ      FMSTMP01,SEQ;ANS             * any notes entered
          GOTO      NOTE9999 IF OVER
          MOVE      TRUE,NOTES
.
NOTE9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
.WEOF0000  CLOSE     FMSTMP02
.          MOVE      ZERO,OVRCD
.          TRAP      OVERCOND IF IO
.          OPEN      FMSTMP02,FILENAM2
.          TRAPCLR   IO
.          COMPARE   ONE,OVRCD
.          GOTO      WEOF9999 IF NOT EQUAL
..
.          PREP      FMSTMP02,FILENAM2
.          WEOF      FMSTMP02,SEQ
..
.WEOF9999  RETURN
.*************************************************************************
.* WCOM - Write the notes that are in a tempfile to the comments file    *
.*************************************************************************
WCOM0000  PACK      KEY10,FMJOPRE2,FMJMJID,SP10
          CALL      RSFMJW1             * position at start of the comments
.
          CALL      RKFMJW1
          BRANCH    OVRCD,WCOM2000
.
          PACK      KEY14,FMJWJTY,FMJWJID,SP10
          MATCH     KEY10,KEY14         * right comments
          GOTO      WCOM2000 IF NOT EQUAL
.
          PACK      KEY10,FMJWJTY,FMJWJID,FMJWLNO
          CALL      DEFMJW1
          GOTO      WCOM0000
.
WCOM2000  MOVE      ONE,FORM3
          MOVE      FMJOPRE2,FMJWJTY
          MOVE      FMJMJID,FMJWJID
          OPEN      FMSTMP01,FILENAM1            * go to start of records
.
WCOM3000  READ      FMSTMP01,SEQ;FMJWLINE
          GOTO      WCOM9999 IF OVER
.          
          MOVE      FORM3,FMJWLNO               * set up line number
        
          PACK      KEY10,FMJWJTY,FMJWJID,FMJWLNO
          CALL      WRFMJW1
          ADD       ONE,FORM3
          GOTO      WCOM3000
.
WCOM9999  RETURN
.*************************************************************************
.* TRAN - Process all transaction Details                                *
.*        Returns : EXIT = 1 - exit = 0 - valid item chosen              *
.*                     called by : ML2000                                *
.*************************************************************************
TRAN0000  MOVE      ONE,NEXT           *assume no next screen
          MOVE      ONE,MODE
          MOVE      TWO,SCREEN
          MOVE      EIGHT,CVERT
          MOVE      ONE,DISPCNT
          PROC      CBAL0000           * calulate balance from file
          IF        IBCNUBAS=1
            DISPLAY   *P60:3,*V2LON,*+,OPTNDESC," Trans Details",*EL:
                      *P1:5,*EF,*P24:6,*V2LON,"Transaction Details":
                      *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                      *P8:7,"Account    ",*P20:7,BASDESC,*P24:7,"Diss ":
                      *P30:7,"Resp":
                      *P35:7,"Transaction Description",SP6
          ELSE
            DISPLAY   *P60:3,*V2LON,*+,OPTNDESC," Trans Details",*EL:
                      *P1:5,*EF,*P24:6,*V2LON,"Transaction Details":
                      *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                      *P8:7,"Account    ",*P24:7,"Diss ",*P30:7,"Resp":
                      *P35:7,"Transaction Description",SP6
          ENDIF
          BRANCH    DACNFLAG,TRAN0005,TRAN0005,TRAN0010
. 
          DISPLAY   *P66:7,*V2LON,*ULON,"Percentage"
          GOTO      TRAN0010
.
TRAN0005  DISPLAY   *P75:7,*V2LON,*ULON,"Amount"
          GOTO      TRAN0010
.
TRAN0008  MOVE      ZERO,BALANCE
          MOVE      "100",DEBTBALC
          MOVE      "100",CREDBALC
.
TRAN0010  PACK      KEY10,FMJOPRE2,FMJMJID,SP10
          CALL      RSFMJD1
.
          MOVE      ONE,POSTFLAG
          MOVE      ONE,PAGENO
.
TRAN1000  MOVE      "15",NUMREC
          CALL      DACN0000            * Display next page of relative accounts
          COMPARE   TWO,EXIT            * none there - straight to insert mode
          GOTO      TRAN6000 IF EQUAL
.
TRAN1500  MOVE      ONE,MODE
          CLEAR     VALOPTN
          DISPLAY   *P1:24,*EL,"Select Item, (",*V2LON,"I",*HOFF,")nsert":
                               " before, ";
          APPEND    ANSI,VALOPTN
          MOVE      "40",CCOL
.
          BRANCH    NEXT,TRAN2000       * is there a next page
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
          APPEND    ANSN,VALOPTN
.
TRAN2000  
          COMPARE   PAGENO,ONE         * no previous page if we are on page one
          GOTO      TRAN3000 IF NOT LESS
.
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious Page, ";
          ADD       "17",CCOL
          APPEND    ANSP,VALOPTN
.
TRAN3000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it ?"
          APPEND    ANSX,VALOPTN
.
TRAN4000  KEYIN     *PCCOL:24,*EL,*DV,UNDLN2,*JR,*PCCOL:24,*V2LON,DIM2
          REP       UPPLOW,DIM2
          TYPE      DIM2
          GOTO      TRAN9000 IF EQUAL
.
          MATCH     SP1,DIM2         * cant enter two letters
          GOTO      TRAN4000 IF NOT EQUAL
          UNPACK    DIM2,ANS,ANS
          RESET     VALOPTN
          SCAN      ANS,VALOPTN            * valid option chosen?
          GOTO      TRAN4000 IF NOT EQUAL
          RESET     VALOPTN
.
          REP       "N1P2X3I4",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,TRAN4500,TRAN5000,TRAN8000,TRAN7000
.
          GOTO      TRAN4000
.
TRAN4500  ADD       ONE,PAGENO
          DISPLAY   *P1:8,*EF;
          GOTO      TRAN1000
.
TRAN5000  COMPARE   "2",PAGENO       * if on second page - go from start
          GOTO      TRAN0000 IF EQUAL
          CALL      PREV0000          * read back a page so we can read 
.                                     * forward a page
          GOTO      TRAN1000
.
TRAN6000  CALL      ITRN0000          * go back into input mode
          BRANCH    EXIT,TRAN9999
          GOTO      TRAN1500
.
. ------- New Insert Option
TRAN7000  CALL      INSRT000          * Insert Item
          GOTO      TRAN1500
.
TRAN8000  MOVE      TRUE,EXIT          
          MOVE      ONE,POSTFLAG
          COMPARE   ZERO,BALANCE      * must have a balance of zero
          GOTO      TRAN8500 IF NOT EQUAL
          BRANCH    DACNFLAG,TRAN9999,TRAN9999,TRAN9999
          COMPARE   "100",DEBTBALC    * each side (debit and credit) must
          GOTO      TRAN8600 IF NOT EQUAL * equal 100%
          GOTO      TRAN9999
.
TRAN8500  COMPARE   "0",DACNFLAG      * using amounts?
          GOTO      TRAN8550 IF EQUAL * no
.
          COMPARE   "3",DACNFLAG      * using nothing?
          GOTO      TRAN9999 IF EQUAL * no
.
          DISPLAY   *P1:24,*B,"Amounts Must Balance to Zero - ",*EL; 
          CALL      HITENTER
          GOTO      TRAN1500
.
TRAN8550  DISPLAY   *P1:24,*B,"Percentages Must Balance to Zero - ",*EL; 
          CALL      HITENTER
          GOTO      TRAN1500
.
TRAN8600  DISPLAY   *P1:24,*B,"Debits and Credits Must Each Balance to 100% - ":
                    *EL; 
          CALL      HITENTER
          GOTO      TRAN1500
.
TRAN9000  MOVE      DIM2,CCITEM
          BRANCH    CFPOSTFG,TRAN9100
.
          DISPLAY   *P1:24,*EL,"Cannot select an item as it is percentage ":
                    "allocated. ";
          CALL      HITENTER
          GOTO      TRAN1500
.
TRAN9100  COMPARE   CCITEM,ZERO    * cant be less than zero
          GOTO      TRAN4000 IF NOT LESS
. 
          COMPARE   CCITEM,TEN5    * a valid selection?
          GOTO      TRAN9600 IF LESS
. 
          ASSIGN    MAXDISP+ONE,FORM3
          COMPARE   CCITEM,FORM3      * a valid selection?
          GOTO      TRAN6000 IF EQUAL
. 
          CALL      PTRN0000        * process a single transaction
          CALL      CURP0000        * display current page
          GOTO      TRAN1500
.
TRAN9600  DISPLAY   *P1:8,*EF;
          MOVE      "8",CVERT
          MOVE      "0",MAXDISP
          ADD       "1",PAGENO
          GOTO      TRAN6000
.
TRAN9999  RETURN
.*************************************************************************
.* INSRT - Insert Item                                                   *
.*************************************************************************
INSRT000  MOVE      SP70,DIM2
          DISPLAY   *P1:24,*EL,"Insert Before Item, e(":
                    *V2LON,"X",*HOFF,")it ? ";
          KEYIN     *V2LON,*JR,DIM2
.
          MATCH     DIM2,SP70
          GOTO      INSRT999 IF EQUAL
.
          UNPACK    DIM2,ANS,ANS
.
          MATCH     EXITCHAR,ANS
          GOTO      INSRT999 IF EQUAL
.
          TYPE      DIM2
          IF        !@EQUAL
            REP       "xX",ANS
            MATCH     "X",ANS
            GOTO      INSRT999 IF EQUAL
            GOTO      INSRT800
          ENDIF
.
          MOVE      DIM2,INSRTLNO
          IF        INSRTLNO<1 | INSRTLNO>MAXDISP 
            GOTO      INSRT800
          ENDIF
.
. ------- Valid Entry for insert
          CALL      STRN0000                 * Special Insert Input Details
          IF        EXIT=1
            MOVE      ZERO,EXIT
            GOTO      INSRT999
          ENDIF
          GOTO      INSRT000
.
INSRT800  DISPLAY   "Invalid Option.  ";
          CALL      HITENTER
          GOTO      INSRT000
.
INSRT999  RETURN
.*************************************************************************
.* STRN - Input transactions                    Called by TRAN6000       *
.*************************************************************************
STRN0000  MOVE      INSRTLNO,DISPCNT
          MOVE      DISPCNT,CVERT
          MOVE      TWO,SCREEN
          CALL      CLR1000            * clear variables
          MOVE      ZERO,MODE
          ADD       "7",CVERT
STRN1000  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT
.
STRN2000  CALL      KDCR0000               * keyin credit or debit
          BRANCH    EXIT,STRN9000
.         
STRN3000  CALL      KACC0000               * keyin account
          BRANCH    EXIT,STRN2000,STRN2000
.
STRN3500  IF        IBCNUBAS=1
            CALL      KBAS0000
            BRANCH    EXIT,STRN4000,STRN2000
          ENDIF
.
STRN4000  CALL      KDIS0000               * keyin dissection
          IF        IBCNUBAS=1
            BRANCH    EXIT,STRN3500,STRN2000
          ELSE
            BRANCH    EXIT,STRN3000,STRN2000
          ENDIF
.
STRN5000  CALL      KRES0000               * keyin responsibility
          BRANCH    EXIT,STRN4000,STRN2000
.
STRN6000  CALL      KDSC0000               * keyin description
          BRANCH    EXIT,STRN2000
.
STRN7000  COMPARE   "1",FMJMSPER           * percentage allocated?
          GOTO      STRN7500 IF NOT EQUAL
.
          CALL      KPRC0000               * keyin percentage
          BRANCH    EXIT,STRN6000,STRN2000
          GOTO      STRN8000
.
STRN7500  COMPARE   "0",DACNFLAG
          GOTO      STRN8000 IF EQUAL
.
          COMPARE   "3",DACNFLAG
          GOTO      STRN8000 IF EQUAL
.
          CALL      KAMT0000              * Keyin amount
          BRANCH    EXIT,STRN6000,STRN2000
.
STRN8000  CALL      SUPD0000
          MOVE      INSRTLNO,DISPCNT
.
STRN8500  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,FMJDDESC
          BRANCH    DACNFLAG,STRN8505,STRN8505,STRN8800
          DISPLAY   *P68:CVERT,FMJDPERC
          GOTO      STRN8510
.
STRN8505 DISPLAY   *P66:CVERT,FMJDTAMT
.
STRN8510  
          MOVE      DISPCNT,MAXDISP
          MATCH     "D",FMJDDRCR           * debit or credit
          GOTO      STRN8600 IF NOT EQUAL
          COMPARE   "0",DACNFLAG           * doing amounts?
          GOTO      STRN8550 IF EQUAL      * go out if no
          ADD       FMJDTAMT,BALANCE
          GOTO      STRN8700
.
STRN8550  ADD       FMJDPERC,BALANCE
          ADD       FMJDPERC,DEBTBALC
          GOTO      STRN8700
.
STRN8600  COMPARE   "0",DACNFLAG           * doing amounts?
          GOTO      STRN8650 IF EQUAL      * go out if no
          SUB       FMJDTAMT,BALANCE
          GOTO      STRN8700
.
STRN8650  SUB       FMJDPERC,BALANCE
.
STRN8700  COMPARE   "0",DACNFLAG           * doing amounts?
          GOTO      STRN8750 IF EQUAL      * go out if no
          DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE,*HOFF
          GOTO      STRN8800
STRN8750  MOVE      DEBTBALC,CREDBALC
          SUB       BALANCE,CREDBALC
          MOVE      BALANCE,PERCBALC
          DISPLAY   *P5:5,"Balance : ",*V2LON,PERCBALC,*HOFF:
                    *P26:5,"Debit : ",*V2LON,DEBTBALC,*HOFF:
                    *P51:5,"Credit  : ",*V2LON,CREDBALC,*HOFF
.
STRN8800  IF        DISPCNT < MAXDISP
            ADD       ONE,DISPCNT
            ADD       ONE,INSRTLNO
          ELSE
            ADD       ONE,CVERT
            MOVE      DISPCNT,NUMREC
            IF        MAXDISP<15
              ADD       ONE,DISPCNT
              ADD       ONE,INSRTLNO
              ADD       ONE,MAXDISP
              ADD       ONE,RECCNT
            ELSE
              ADD       ONE,PAGENO
              MOVE      ONE,INSRTLNO
              MOVE      ZERO,MAXDISP
              MOVE      ZERO,RECCNT
              CALL      CSEL0000
              CALL      RKFMJD1
              PACK      SEL01,FMJDJTY,FMJDJID,FMJDLNO
              DISPLAY   *P1:8,*EF
            ENDIF
          ENDIF
          GOTO      STRN0000
.
STRN9000  MOVE      ONE,NEXT
          MOVE      INSRTLNO,FORM2
          IF        FORM2>1
            SUB       ONE,FORM2
          ENDIF
          LOAD      KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                SEL06,SEL07,SEL08,SEL09,SEL10:
                                SEL11,SEL12,SEL13,SEL14,SEL15
          CALL      RSFMJD1
          CALL      RPFMJD1
          ASSIGN    FORM2+7,CVERT
          MOVE      "15",MAXDISP
          REPEAT
            CALL      RKFMJD1
            BRANCH    OVRCD,STRN9100
.
            PACK      KEY7,FMJDJTY,FMJDJID,SP70
            MATCH     KEY7,KEY10
            GOTO      STRN9100 IF NOT EQUAL
.
            MOVE      "Dr",SAVEDESC
            MATCH     "D",FMJDDRCR
            IF        !@EQUAL
              MOVE      "Cr",SAVEDESC
            ENDIF
            DISPLAY   *P1:CVERT,*EL,*V2LON,FORM2,*HOFF,DOT:
                      *P5:CVERT,SAVEDESC,*P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC:
                      *P24:CVERT,FMJDDIS,SP1,FMJDRES,SP1,FMJDDESC
            PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
            STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            IF      DACNFLAG=1 | DACNFLAG=2
              DISPLAY   *P66:CVERT,FMJDTAMT
            ENDIF
            IF      DACNFLAG=0
              DISPLAY   *P68:CVERT,FMJDPERC
            ENDIF
            ADD       ONE,FORM2
            ADD       ONE,CVERT
          UNTIL     FORM2>MAXDISP
          MOVE      ZERO,NEXT
.
STRN9100  SUB       ONE,FORM2
          MOVE      FORM2,MAXDISP
          MOVE      FORM2,RECCNT
.
          COMPARE   "1",PAGENO             * are we on the first page
          GOTO      STRN9500 IF NOT EQUAL   * no - thats cool - go out
.
          COMPARE   "1",DISPCNT             * yes - first line?
          GOTO      STRN9500 IF NOT EQUAL     * no - thats cool - go out
.
          MOVE      TRUE,EXIT
          GOTO      STRN9999
.
STRN9500  MOVE      FALSE,EXIT
.
STRN9999  RETURN
.*************************************************************************
.* SUPD - Special Update of Journal Details File                         *
.*************************************************************************
SUPD0000  LOAD      KEY10SAV,INSRTLNO,SEL01,SEL02,SEL03,SEL04,SEL05:
                                      SEL06,SEL07,SEL08,SEL09,SEL10:
                                      SEL11,SEL12,SEL13,SEL14,SEL15
          MATCH     KEY10SAV,SP10
          IF        @EQUAL
            MOVE      INSRTLNO,FORM2
            SUB       ONE,FORM2
            LOAD      KEY10SAV,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                     SEL06,SEL07,SEL08,SEL09,SEL10:
                                     SEL11,SEL12,SEL13,SEL14,SEL15
            MATCH     KEY10SAV,SP10
            IF        @EQUAL
              DISPLAY   *P1:24,*EL,"Invalid Selection Condition. ":
                        "Contact System Admin. ";
              CALL      HITENTER
              GOTO      SUPD9999
            ENDIF
            PACK    KEY10,KEY10SAV
            CALL    RSFMJD1
            CALL    RKFMJD1               * Read item inserting before
            PACK    KEY10SAV,FMJDJTY,FMJDJID,FMJDLNO
          ENDIF
.
          PACK      KEY10,FMJOPRE2,FMJMJID,Z20
SUPD1000  CALL      RSFMJD1
          CALL      RPFMJD1
          IF        OVRCD=1        
            MOVE      ONE,FMJDLNO
            GOTO      SUPD2000
          ENDIF
.
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          MATCH     KEY10SAV,KEY10
          IF        !@LESS
            MOVE      FMJDLNO,FORM3
            ADD       ONE,FORM3
            MOVE      FORM3,FMJDLNO
            CALL      UPFMJD1
            GOTO      SUPD1000             * Update Item
          ENDIF
.
SUPD2000  UNPACK    KEY10SAV,FMJDJTY,FMJDJID,FMJDLNO 
          MOVE      KEY10SAV,KEY10 
          CALL      RAFMJD1 
          IF        OVRCD=0
            DISPLAY   *P1:24,*EL,"Position Should exist (line no. = ":
                                 FMJDLNO,"). ";
            CALL      HITENTER
            GOTO      SUPD9999
          ENDIF
          MOVE      FMAMACCT,FMJDACC
          MOVE      FMDSCODE,FMJDDIS
          MOVE      FMRSCODE,FMJDRES
          MOVE      SAVJDESC,FMJDDESC
          MOVE      SAVEDRCR,FMJDDRCR
          MOVE      DIMPERC,FMJDPERC
          MOVE      IBBABASC,FMJDBASC
          MOVE      DIMAMNT,FMJDTAMT
          CALL      WRFMJD1
.
. ------- Update Screen Saved Selections
          MATCH     SEL15,SP70
          IF        (!@EQUAL) & (INSRTLNO<15)
            MOVE      ZERO,NEXT             * There is now a next page
          ELSE
            MOVE      ONE,NEXT
          ENDIF
          MOVE      MAXDISP,FORM2
          IF        FORM2=15
            SUB       ONE,FORM2
            GOTO      SUPD3000
          ELSE
            ADD       ONE,MAXDISP
            ADD       ONE,RECCNT 
          ENDIF
          REPEAT
            LOAD      KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            ADD       ONE,FORM2
            UNPACK    KEY10,KEY7,KEY3
            MOVE      KEY3,FORM3
            ADD       ONE,FORM3
            PACK      KEY10,KEY7,FORM3
            STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05:
                                  SEL06,SEL07,SEL08,SEL09,SEL10:
                                  SEL11,SEL12,SEL13,SEL14,SEL15
            SUB       TWO,FORM2
          UNTIL     FORM2<INSRTLNO
.
          STORE     KEY10SAV,INSRTLNO,SEL01,SEL02,SEL03,SEL04,SEL05:
                                      SEL06,SEL07,SEL08,SEL09,SEL10:
                                      SEL11,SEL12,SEL13,SEL14,SEL15
          PACK      KEY10,KEY10SAV
          CALL      RDFMJD1
.
          MOVE      "Dr",SAVEDESC
          MATCH     "D",FMJDDRCR
          IF        !@EQUAL
            MOVE      "Cr",SAVEDESC
          ENDIF
          GOTO      SUPD9999
.
SUPD3000
.
SUPD9999  RETURN
.*************************************************************************
.* DACN - Display the next page of accounts on file  Called by Lots      *
.*        Requires the file pointer to be positioned before the first    *
.*        record that we wish to display                                 *
.*************************************************************************
DACN0000  MOVE      ONE,DISPCNT
          MOVE      ONE,NEXT
          MOVE      EIGHT,CVERT
          MOVE      ZERO,RECCNT
          DISPLAY   *P1:8,*EF;
.
          PROC      CBAL0000          * recalculate balance
          PROC      CDEB0000          * recalculate balance
          PROC      CCRE0000          * recalculate balance
          CALL      CSEL0000          * clear screen variables(SEL)
.
DACN1000  CALL      RKFMJD1           * read next record
          BRANCH    OVRCD,DACN8900
.
          MATCH     FMJOPRE2,FMJDJTY  * general journal?
          GOTO      DACN8900 IF NOT EQUAL
.
          MATCH     FMJDJID,FMJMJID   * right journal?
          GOTO      DACN8900 IF NOT EQUAL
.
          COMPARE   "23",CVERT        * full page?
          GOTO      DACN8000 IF EQUAL
.
          MOVE      "Dr",DRCRDESC     * set up credit debit description
          MATCH     ANSD,FMJDDRCR     * credit or debit
          GOTO      DACN2000 IF EQUAL
          MOVE      "Cr",DRCRDESC
.
DACN2000  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,DRCRDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,*P35:CVERT,FMJDDESC
          BRANCH    DACNFLAG,DACN2005,DACN2008,DACN2010
          DISPLAY   *P68:CVERT,FMJDPERC
          GOTO      DACN2010
.
DACN2005  MOVE      "1",DACNFLAG          * set to display as they've already 
                                          * been entered
          DISPLAY   *P66:CVERT,FMJDTAMT
          GOTO      DACN2010
.
DACN2008  COMPARE   ZERO,FMJDTAMT         * changing or inserting postng details
          GOTO      DACN2005 IF NOT EQUAL
          MOVE      ONE,KAMTFLAG
          CALL      KAMT0000
          BRANCH    EXIT,DACN2008,DACN2009
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          CALL      UPFMJD1
          PROC      CBAL0000
          DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE,*HOFF
          GOTO      DACN2010
.
DACN2009  CALL      SETA0000             * set amounts
          GOTO      DACN9700
.
DACN2010  ADD       ONE,RECCNT
          MOVE      CVERT,FORM2
          SUB       "7",FORM2
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          STORE     KEY10,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07,SEL08:
                                SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          MOVE      DISPCNT,MAXDISP
          ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "15",NUMREC         * do we want to display the whole screen
          GOTO      DACN1000 IF EQUAL
.
          COMPARE   RECCNT,NUMREC       * if not have we displayed enough?
          GOTO      DACN1000 IF NOT EQUAL
          MOVE      ZERO,EXIT    
          GOTO      DACN9700
.
DACN8000  
          CALL      RPFMJD1          * read back so when next page only 
.                                    * have to read forward
          MOVE      ZERO,NEXT        * there is a next page
          COMPARE   "2",DACNFLAG
          GOTO      DACN8500 IF EQUAL
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DACN9700
.
DACN8500  ADD       ONE,PAGENO
          GOTO      DACN0000
.
DACN8900  COMPARE   "0",DACNFLAG    * if its percentage
          GOTO      DACN9000 IF EQUAL
          COMPARE   "3",DACNFLAG    * or nothing dont change it
          GOTO      DACN9000 IF EQUAL
          MOVE      "1",DACNFLAG    * entered all the amounts so set to display
DACN9000  MOVE      ZERO,EXIT
          COMPARE   "8",CVERT
          GOTO      DACN9700 IF NOT EQUAL
          MOVE      ZERO,MAXDISP
          BRANCH    PAGENO,DACN9100
          GOTO      DACN9700
.
DACN9100  MOVE      TWO,EXIT        * straight to insert thanks
          GOTO      DACN9700
.
DACN9500  MOVE      ONE,NEXT        * no next page
          MOVE      ONE,EXIT        * no next page
          GOTO      DACN9700
.
DACN9650  MOVE      ONE,DACNFLAG
DACN9700  BRANCH    DACNFLAG,DACN9800,DACN9800,DACN9999
          MOVE      DEBTBALC,CREDBALC
          SUB       BALANCE,CREDBALC
          MOVE      BALANCE,PERCBALC
          DISPLAY   *P5:5,"Balance : ",*V2LON,PERCBALC,*HOFF:
                    *P26:5,"Debit : ",*V2LON,DEBTBALC,*HOFF:
                    *P51:5,"Credit  : ",*V2LON,CREDBALC,*HOFF
          GOTO      DACN9999
.
DACN9800  
          DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE,*HOFF
DACN9999  RETURN
.************************************************************************
.* SETA - Set amounts to default or to zero depending on FMJMCASH       *
.************************************************************************
SETA0000  BRANCH    FMJMCASH,SETA1000         * cash ?
          GOTO      SETA2000
.
SETA1000  MOVE      ZERO,DEFAULT              * default to zero then
.
SETA2000  CALL      UPFMJD1
          COMPARE   "22",CVERT                * displayed the lot?
          GOTO      SETA3000 IF NOT LESS
.
          DISPLAY   *P66:CVERT,*V2LON,DEFAULT
. 
SETA3000  CALL      RKFMJD1
          BRANCH    OVRCD,SETA9999
.
          PACK      KEY7,FMJMJTY,FMJMJID
          PACK      KEY8,FMJDJTY,FMJDJID
          MATCH     KEY7,KEY8                  * right journal
          GOTO      SETA0000 IF EQUAL
.
SETA9999  RETURN 
.*************************************************************************
.* CURP - Display current page                 Called by RBPFFM30        *
.*************************************************************************
CURP0000  PACK      KEY10,FMJOPRE2,FMJMJID,FMJDLNO
          MOVE      SEL01,KEY10
          MOVE      MAXDISP,NUMREC
          CALL      RSFMJD1           * read details of first record on screen
          CALL      RPFMJD1
          BRANCH    OVRCD,CURP1000
          GOTO      CURP2000
.
CURP1000  MOVE      SP20,KEY10
          CALL      RSFMJD1
.
CURP2000  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJMJID,*HOFF:
                    *P51:4,"Status  : ",*V2LON,STATDESC,*HOFF:
                    *P24:6,*V2LON,"Transaction Details":
                    *P1:7,*V2LON,*ULON,"Itm",*P5:7,"DC":
                    *P8:7,"Account    "
          IF        IBCNUBAS=1
            DISPLAY   *P20:7,*V2LON,*ULON,BASDESC
          ENDIF
          DISPLAY   *P24:7,*V2LON,*ULON,"Diss ",*P30:7,"Resp":
                    *P35:7,"Transaction Description",SP6
          BRANCH    DACNFLAG,CURP3000,CURP3000,CURP4000
          DISPLAY   *P66:7,*V2LON,*ULON,"Percentage"
          GOTO      CURP4000
.
CURP3000
.
          DISPLAY   *P75:7,*V2LON,*ULON,"Amount"
.
CURP4000  MOVE      MAXDISP,NUMREC
          CALL      DACN0000          * display screen
.
CURP9999  RETURN
.*************************************************************************
.* CSEL - Clear the SEL variables               Called by DACN0000       *
.*************************************************************************
CSEL0000  UNPACK    SP70,SEL01,SEL02,SEL03,SEL04,SEL05
          UNPACK    SP70,SEL06,SEL07,SEL08,SEL09,SEL10
          UNPACK    SP70,SEL11,SEL12,SEL13,SEL14,SEL15
.
CSEL9999  RETURN
.*************************************************************************
.* PREV - read back 15 records from first one on screen for previous     *
.*        page                                                           *
.*                     called by : SACN                                  *
.*************************************************************************
PREV0000  MOVE      SEL01,KEY10
          CALL      RSFMJD1
          MOVE      ONE,FORM2
          SUB       ONE,PAGENO
.
PREV1000  CALL      RPFMJD1         * read back one
          BRANCH    OVRCD,PREV9000
.
          COMPARE   "16",FORM2      * have we read back far enough
          GOTO      PREV9999 IF EQUAL * go out if so
.
          ADD       ONE,FORM2
          GOTO      PREV1000
.
PREV9000  MOVE      SP70,KEY10      * reached eof - posy at start
          CALL      RSFMJD1
.
PREV9999  RETURN
.*************************************************************************
.* ITRN - Input transactions                    Called by TRAN6000       *
.*************************************************************************
ITRN0000  MOVE      MAXDISP,DISPCNT
          MOVE      TWO,SCREEN
          CALL      CLR1000            * clear variables
          MOVE      ZERO,MODE
          ADD       ONE,DISPCNT
          MOVE      DISPCNT,CVERT
          ADD       "7",CVERT
ITRN1000  DISPLAY   *P1:CVERT,*EF,*V2LON,DISPCNT,*HOFF,DOT
.
ITRN2000  CALL      KDCR0000               * keyin credit or debit
          BRANCH    EXIT,ITRN9000
.         
ITRN3000  CALL      KACC0000               * keyin account
          BRANCH    EXIT,ITRN2000,ITRN2000
.
ITRN3500  IF        IBCNUBAS=1
            CALL      KBAS0000
            BRANCH    EXIT,ITRN4000,ITRN2000
          ENDIF
.
ITRN4000  CALL      KDIS0000               * keyin dissection
          IF        IBCNUBAS=1
            BRANCH    EXIT,ITRN3500,ITRN2000
          ELSE
            BRANCH    EXIT,ITRN3000,ITRN2000
          ENDIF
.
ITRN5000  CALL      KRES0000               * keyin responsibility
          BRANCH    EXIT,ITRN4000,ITRN2000
.
ITRN6000  CALL      KDSC0000               * keyin description
          BRANCH    EXIT,ITRN2000
.
ITRN7000  COMPARE   "1",FMJMSPER           * percentage allocated?
          GOTO      ITRN7500 IF NOT EQUAL
.
          CALL      KPRC0000               * keyin percentage
          BRANCH    EXIT,ITRN6000,ITRN2000
          GOTO      ITRN8000
.
ITRN7500  COMPARE   "0",DACNFLAG
          GOTO      ITRN8000 IF EQUAL
.
          COMPARE   "3",DACNFLAG
          GOTO      ITRN8000 IF EQUAL
.
          CALL      KAMT0000              * Keyin amount
          BRANCH    EXIT,ITRN6000,ITRN2000
.
ITRN8000  MOVE      FMJMJID,FMJDJID        * set up file variables
          MOVE      FMJOPRE2,FMJDJTY
          MOVE      FMAMACCT,FMJDACC
          MOVE      FMDSCODE,FMJDDIS
          MOVE      FMRSCODE,FMJDRES
          MOVE      SAVEDRCR,FMJDDRCR
          MOVE      IBBABASC,FMJDBASC
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO
          CALL      RAFMJD1                 * write to file
          BRANCH    OVRCD,ITRN8500
          MOVE      FMJDLNO,FORM3
          ADD       ONE,FORM3
          MOVE      FORM3,FMJDLNO
          GOTO      ITRN8000
ITRN8500  CALL      WRFMJD1                 * write to file
          STORE     KEY10,DISPCNT,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                  SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14:
                                  SEL15
.                             
          MOVE      "Dr",SAVEDESC
          MATCH     "D",FMJDDRCR
          IF        !@EQUAL
            MOVE      "Cr",SAVEDESC
          ENDIF
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMJDACC,*P20:CVERT,FMJDBASC,*P24:CVERT,FMJDDIS:
                    SP1,FMJDRES,SP1,FMJDDESC
          BRANCH    DACNFLAG,ITRN8505,ITRN8505,ITRN8800
          DISPLAY   *P68:CVERT,FMJDPERC
          GOTO      ITRN8510
.
ITRN8505 
          DISPLAY   *P66:CVERT,FMJDTAMT
.
ITRN8510  MOVE      DISPCNT,MAXDISP
          MATCH     "D",FMJDDRCR           * debit or credit
          GOTO      ITRN8600 IF NOT EQUAL
          COMPARE   "0",DACNFLAG           * doing amounts?
          GOTO      ITRN8550 IF EQUAL      * go out if no
          ADD       FMJDTAMT,BALANCE
          GOTO      ITRN8700
ITRN8550  ADD       FMJDPERC,BALANCE
          ADD       FMJDPERC,DEBTBALC
          GOTO      ITRN8700
.
ITRN8600  
          COMPARE   "0",DACNFLAG           * doing amounts?
          GOTO      ITRN8650 IF EQUAL      * go out if no
          SUB       FMJDTAMT,BALANCE
          GOTO      ITRN8700
ITRN8650  SUB       FMJDPERC,BALANCE
.
ITRN8700  
          COMPARE   "0",DACNFLAG           * doing amounts?
          GOTO      ITRN8750 IF EQUAL      * go out if no
          DISPLAY   *P51:5,"Balance : ",*V2LON,BALANCE,*HOFF
          GOTO      ITRN8800
ITRN8750  MOVE      DEBTBALC,CREDBALC
          SUB       BALANCE,CREDBALC
          MOVE      BALANCE,PERCBALC
          DISPLAY   *P5:5,"Balance : ",*V2LON,PERCBALC,*HOFF:
                    *P26:5,"Debit : ",*V2LON,DEBTBALC,*HOFF:
                    *P51:5,"Credit  : ",*V2LON,CREDBALC,*HOFF
.
ITRN8800  ADD       ONE,DISPCNT
          ADD       ONE,CVERT
          ADD       ONE,MAXDISP
          MOVE      DISPCNT,NUMREC
          COMPARE   "23",CVERT              * full page
          GOTO      ITRN1000 IF LESS
          DISPLAY   *P1:8,*EF;
          MOVE      "8",CVERT
          MOVE      "1",DISPCNT
          ADD       ONE,PAGENO
          GOTO      ITRN1000
.
ITRN9000  DISPLAY   *P1:CVERT,*EL;
.
.          IF        DISPCNT>1
.            SUB       ONE,MAXDISP
.          ENDIF
.
          COMPARE   "1",PAGENO             * are we on the first page
          GOTO      ITRN9500 IF NOT EQUAL   * no - thats cool - go out
.
          COMPARE   "1",DISPCNT             * yes - first line?
          GOTO      ITRN9500 IF NOT EQUAL     * no - thats cool - go out
.
          MOVE      TRUE,EXIT
          GOTO      ITRN9999
.
ITRN9500  MOVE      FALSE,EXIT
.
ITRN9999  RETURN
.*************************************************************************
.* KDCR - Keyin Dr or Cr                      Called by ITRN0000         *
.*************************************************************************
KDCR0000  MOVE      "5",CCOL             * posy for screen 2
          DISPLAY   *P1:24,*EL
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDCR0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "6",CVERT
.
KDCR0500  PACK      FMJDDRCR,FMJDDRCR,SP1 * first time in might be nothing in it
          DISPLAY   *P1:24,*V2LON:
                    "D",*HOFF," = Debit, ",*V2LON:
                    "C",*HOFF," = Credit, ",*V2LON:
                    "X",*HOFF," = Exit",*EF;
          MOVE      "DCX\*",VALOPTN
          MATCH     SP1,FMJDDRCR          * any default
          GOTO      KDCR1000 IF EQUAL     * no - dont use *rv keyin
          KEYIN     *PCCOL:CVERT,*DV,*EL,FMJDDRCR:
                    *PCCOL:CVERT,*RV,*V2LON,FMJDDRCR
          GOTO      KDCR2000
.
KDCR1000  KEYIN     *PCCOL:CVERT,*DV,*EL,UNDLN1,*PCCOL:CVERT,*V2LON,FMJDDRCR
KDCR2000  PACK      FMJDDRCR,FMJDDRCR,SP1 * first time in might be nothing in it
.
          REP       UPPLOW,FMJDDRCR
          SCAN      FMJDDRCR,VALOPTN      * is it a valid option?
          GOTO      KDCR1000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EF;
          MATCH     SP1,FMJDDRCR          * anything entered?
          GOTO      ITRN9000 IF EQUAL
.
          MATCH     "*",FMJDDRCR          * exit?
          GOTO      KDCR9000 IF EQUAL
          MATCH     "X",FMJDDRCR          * exit?
          GOTO      KDCR9000 IF EQUAL
          MATCH     EXITCHAR,FMJDDRCR     * exitchar?
          GOTO      KDCR9000 IF EQUAL
.
          MATCH     "D",FMJDDRCR          * debit?
          GOTO      KDCR3000 IF EQUAL
.
          MOVE      "Cr",DRCRDESC
          MOVE      "Credit",DRCRLDES
          GOTO      KDCR4000
KDCR3000  MOVE      "Dr",DRCRDESC
          MOVE      "Debit",DRCRLDES
.
KDCR4000  COMPARE   "3",SCREEN          * which screen
          GOTO       KDCR5000 IF EQUAL
          DISPLAY   *P5:CVERT,*V2LON,DRCRDESC,*HOFF:
                    *P1:24,"Account Type : ",*V2LON,DRCRLDES
          GOTO      KDCR6000
.
KDCR5000  DISPLAY   *P28:CVERT,*V2LON,DRCRLDES
.
KDCR6000  MOVE      FMJDDRCR,SAVEDRCR
          MOVE      DRCRDESC,SAVJDESC
          MOVE      FALSE,EXIT
          GOTO      KDCR9999
.
KDCR9000  MOVE      ONE,EXIT
.
KDCR9999  RETURN
.*************************************************************************
.* KACC - Keyin account code             Called by ITRN2000              *
.*************************************************************************
KACC0000  MOVE      "8",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KACC0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "7",CVERT
          MOVE      FMJDACC,UNDLN70
          MOVE      FMJDACC,FMAMACCT
.
KACC0500  MOVE      FMJMLEDG,FMLALEDG
          MOVE      "1",CACCTIND
          CALL      KAMAFM00              * account keyin
          BRANCH    EXIT,KACC1000,KACC9999
.
          IF        FMAMSTAT=2
            BEEP
            MOVE      "Account Code Closed or Suspended - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KACC0500
          ENDIF
.
          MOVE      FMAMACCT,FMJDACC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDACC 
          COMPARE   "3",SCREEN
          GOTO      KACC9000 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMAMDESC
          GOTO      KACC9999
.
KACC1000 
          MOVE      ONE,EXIT
          COMPARE   "3",SCREEN        * 3rd screen
          GOTO      KACC9000 IF NOT EQUAL
          MOVE      FMJDACC,FMAMACCT
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDACC,*P41:CVERT,*HOFF,FMAMDESC
          GOTO      KACC9999
.
KACC9000  DISPLAY   *P1:24,"Account Description : ",*V2LON,FMAMDESC
.
KACC9999  PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KBAS - Keyin BAS Code                      Called by ITRN4000         *
.*        Returns - EXIT = 0 - valid entry 1 - null                      *
.*************************************************************************
KBAS0000  MOVE      "20",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KBAS1000 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          IF        DACNFLAG=3
            MOVE      "11",CVERT
          ELSE
            MOVE      "12",CVERT
          ENDIF
          MOVE      FMJDBASC,UNDLN70
          MOVE      FMJDBASC,IBBABASC
.
KBAS1000  MOVE      ZERO,CKEYTYP
          CALL      KIBBAA00
          BRANCH    EXIT,KBAS8000,KBAS9000
.
          MOVE      IBBABASC,FMJDBASC
.
KBAS1500  DISPLAY   *PCCOL:CVERT,*V2LON,FMJDBASC;
          MOVE      ZERO,EXIT
          COMPARE   "3",SCREEN
          GOTO      KBAS1600 IF NOT EQUAL
          DISPLAY   *P41:CVERT,IBBADESC
          GOTO      KBAS9999
.
KBAS1600  DISPLAY   *P1:24,*EL,"BAS Description : ",*V2LON,IBBADESC
          GOTO      KBAS9999
.
KBAS2000  DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          COMPARE   "3",SCREEN
          GOTO      KBAS1500 IF NOT EQUAL
          MOVE      FMJDBASC,IBBABASC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDBASC,*HOFF,*P41:CVERT,IBBADESC
          MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS8000  DISPLAY   *P1:24,*EL
          MOVE      TRUE,EXIT
          MOVE      SP3,FMJDBASC
          MOVE      SP30,IBBADESC
          COMPARE   "3",SCREEN
          GOTO      KBAS9999 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*EL;
          MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS9000  MOVE      SP70,FMJDBASC
.
KBAS9999  PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KDIS - Keyin dissection                    Called by ITRN4000         *
.*        Returns - EXIT = 0 - valid entry 1 - null                      *
.*************************************************************************
KDIS0000  MOVE      "24",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDIS0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "9",CVERT
.
KDIS0500  PACK      FMDSCODE,FMDSCODE,SP10
.
          MATCH     SP5,FMDSCODE            * is there a default
          GOTO      KDIS1000 IF EQUAL
          MOVE      FMDSCODE,UNDLN70
          MOVE      FMDSCODE,FMJDDIS
.
KDIS1000  MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00
.         CALL      KDISFM00               * keyin dissection
          BRANCH    EXIT,KDIS2000,KDIS9500
.
          MOVE      FMDSCODE,FMJDDIS
KDIS1500 
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDDIS
          MOVE      ZERO,EXIT
          COMPARE   "3",SCREEN
          GOTO      KDIS9000 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMDSDESC
          GOTO      KDIS9999
.
KDIS2000 
          MOVE      TRUE,EXIT
          MATCH     "_",UNDLN70              * did we use the default?
          GOTO      KDIS9999 IF EQUAL
          MOVE      FMJDDIS,FMDSCODE         * move default back in
          COMPARE   "3",SCREEN
          GOTO      KDIS1500 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDDIS,*HOFF,*P41:CVERT,FMDSDESC
          MOVE      ZERO,EXIT
          GOTO      KDIS9999
.
KDIS9000  DISPLAY   *P1:24,*EL,"Dissection Description : ",*V2LON,FMDSDESC
          GOTO      KDIS9999
.
KDIS9500  MOVE      SP70,FMDSCODE
.
.
KDIS9999   
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.
.*************************************************************************
.* KRES - Keyin responsibility                  Called by ITRN5000       *
.*        Returns EXIT = 0 - valid entry  1 - null                       *
.*************************************************************************
KRES0000  MOVE      "30",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KRES0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "8",CVERT
.
KRES0500  PACK      FMRSCODE,FMRSCODE,SP10
.
          MATCH     SP4,FMRSCODE            * is there a default
          GOTO      KRES1000 IF EQUAL
          MOVE      FMRSCODE,UNDLN70
          MOVE      FMRSCODE,FMJDRES
.
KRES1000  MOVE      ZERO,CKEYTYP
          CALL      KFMRSA00
.         CALL      KRESFM00               * keyin dissection
          BRANCH    EXIT,KRES2000,KRES9500
.
          MOVE      FMRSCODE,FMJDRES
KRES1500  DISPLAY   *PCCOL:CVERT,*V2LON,FMJDRES
          MOVE      FALSE,EXIT
          COMPARE   "3",SCREEN
          GOTO      KRES9000 IF NOT EQUAL
          DISPLAY   *P41:CVERT,FMRSDESC
          GOTO      KRES9999
.
KRES2000  MOVE      TRUE,EXIT
          MATCH     "_",UNDLN70              * did we use the default?
          GOTO      KRES9999 IF EQUAL
          MOVE      FMJDRES,FMRSCODE       * move default back in
          COMPARE   "3",SCREEN
          GOTO      KRES1500 IF NOT EQUAL
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDRES,*HOFF,*P41:CVERT,FMRSDESC
          MOVE      FALSE,EXIT
          GOTO      KRES9999
.
KRES9000  DISPLAY   *P1:24,*EL,"Responsibility Description : ",*V2LON,FMRSDESC
          GOTO      KRES9999
.
KRES9500  MOVE      SP70,FMRSCODE
.
.
KRES9999
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN
.*************************************************************************
.* KAMT - keyin amount                      Called by ITRN5000           *
.*        Returns EXIT = 0 - valid    1 - null                           *
.*************************************************************************
KAMT0000  MOVE      "66",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KAMT0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "11",CVERT
          MOVE      FMJDTAMT,DIMAMNT
          KEYIN     *PCCOL:CVERT,*EL,*DV,FMJDTAMT:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,DIMAMNT
.
          TYPE      DIMAMNT            * valid amount 3 ?
          GOTO      KAMT0000 IF NOT EQUAL
          MOVE      DIMAMNT,FMJDTAMT
          GOTO      KAMT0600
.
KAMT0500  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN12,*DV,DOT,*DV,UNDLN2:
                    *PCCOL:CVERT,*V2LON,*JR,DIMAMNT
.
KAMT0600  PACK      DIMAMNT,DIMAMNT,SP20
          MATCH     DIMAMNT,SP20
          GOTO      KAMT1000 IF EQUAL
.
          MATCH     "              \",DIMAMNT  * exitchar?
          GOTO      KAMT2000 IF EQUAL
.
          MOVE      ZERO,EXIT
          MOVE      DIMAMNT,FMJDTAMT        * move into file var
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJDTAMT
          GOTO      KAMT9999
.
KAMT1000  MOVE      "1",EXIT                * nothing entered
          GOTO      KAMT9999 
.
KAMT2000  MOVE      "2",EXIT
          MOVE      ZERO,KAMTFLAG
.
KAMT9999  RETURN
.
.*************************************************************************
.* KPRC - keyin percentage allocation       Called by ITRN5000           *
.*        Returns EXIT = 0 - valid    1 - null                           *
.*************************************************************************
KPRC0000  MOVE      "68",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KPRC0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "11",CVERT
          MOVE      FMJDTAMT,DIMAMNT
          KEYIN     *PCCOL:CVERT,*EL,*DV,FMJDPERC:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,DIMPERC
          GOTO      KPRC0600
.
KPRC0500  KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN4,*DV,DOT,*DV,UNDLN2:
                    *PCCOL:CVERT,*V2LON,*JR,DIMPERC
.
KPRC0600  PACK      DIMPERC,DIMPERC,SP20
          MATCH     SP70,DIMPERC  * null?
          GOTO      KPRC1000 IF EQUAL
.
          MATCH     "      \",DIMPERC       * exitchar?
          GOTO      KPRC2000 IF EQUAL
          MOVE      DIMPERC,FMJDPERC
.
          MOVE      ZERO,EXIT
          MOVE      DIMPERC,FMJDPERC        * move into file var
          COMPARE   "101",FMJDPERC
          GOTO      KPRC0700 IF LESS
.
          DISPLAY   *P1:24,*B,"Percentage must be less than 100 - ",*EL; 
          CALL      HITENTER
          GOTO      KPRC0000
.
KPRC0700  DISPLAY   *PCCOL:CVERT,*V2LON,FMJDPERC;
          GOTO      KPRC9999
.
KPRC1000  COMPARE   "3",SCREEN
          GOTO      KPRC0700 IF EQUAL
          MOVE      "1",EXIT                * nothing entered
          GOTO      KPRC9999 
.
KPRC2000  MOVE      "2",EXIT
.
KPRC9999  RETURN
.*************************************************************************
.* KDSC - Keyin Description                Called by ITRN6000            *
.*        Returns EXIT = 0 - valid    1 - exitchar                       *
.*************************************************************************
KDSC0000 
          MOVE      "35",CCOL             * posy for screen 2
          COMPARE   "3",SCREEN            * are we on screen 3?
          GOTO      KDSC0500 IF NOT EQUAL * no thats cool go ahead
          MOVE      "28",CCOL             * yes - move in screen three posy
          MOVE      "10",CVERT
          GOTO      KDSC0600
.
KDSC0500  MOVE      FMJMDESC,FMJDDESC      * set up default
.
KDSC0600  MOVE      FMJDDESC,DIM30
          KEYIN     *PCCOL:CVERT,*EL,*DV,DIM30:
                    *PCCOL:CVERT,*V2LON,*RV,DIM30:
                    *PCCOL:CVERT,*DV,DIM30
          MOVE      DIM30,FMJDDESC
.       
          PACK      FMJDDESC,FMJDDESC,SP70
          MOVE      FMJDDESC,SAVJDESC
.
          MATCH     EXITCHAR,FMJDDESC     * exitchar?
          GOTO      KDSC9000 IF EQUAL
.        
          MATCH     QUEST,FMJDDESC
          GOTO      KDSC6000 IF NOT EQUAL
          CALL      HFMTDA00
          CALL      RTDSFM00
          CLEAR     DM4
          CLEAR     DIM40
          PACK      KEY4,FMTDCODE
          CALL      RDFMTD1
          BRANCH    OVRCD,KDSC0000
          MOVE      FMTDDESC,DIM30    
          MOVE      DIM30,FMJDDESC
          MOVE      DIM30,SAVJDESC
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,DIM30
          GOTO      KDSC9999
         
KDSC6000
          CLEAR     DM4
          CLEAR     DIM40
          MOVE      ZERO,EXIT             * vaild entry
          UNPACK    FMJDDESC,DM4,DIM40
          PACK      DIM40,DIM40,SP70
          MATCH     DIM40,SP70
          GOTO      KDSC9999 IF NOT EQUAL
          PACK      KEY4,DM4
          CALL      RDFMTD1
          BRANCH    OVRCD,KDSC9999
          MOVE      FMTDDESC,DIM30    
          MOVE      DIM30,FMJDDESC
          MOVE      DIM30,SAVJDESC
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,DIM30
          GOTO      KDSC9999
.
KDSC9000  MOVE      ONE,EXIT              * exitchar entered
.
KDSC9999  DISPLAY   *P1:24,*EL
          RETURN 
.*************************************************************************
.* CBAL - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: BALANCE                   *
.*************************************************************************
          DEFPROC   CBAL0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.
CBAL0000  MOVE      ZERO,BALANCE          * set to zero
          MOVE      ZERO,BALAN13          * set to zero
          MOVE      ZERO,DEBTBALC
          MOVE      ZERO,CREDBALC
.
          PACK      KEY10,FMJOPRE2,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CBAL1000  CALL      RKFMJD1
          BRANCH    OVRCD,CBAL9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CBAL9999 IF NOT EQUAL
.
          MATCH     "D",FMJDDRCR         * debit or credit?
          GOTO      CBAL2000 IF NOT EQUAL
.
          BRANCH    DACNFLAG,CBAL1500,CBAL1500,CBAL9999
.
CBAL1100  
          ADD       FMJDPERC,BALAN13     * add percentages
          ADD       FMJDPERC,DEBTBALC    * add percentages
          GOTO      CBAL1000
.
CBAL1500 
          ADD       FMJDTAMT,BALAN13     * add debits
          GOTO      CBAL1000
.
CBAL2000 
          BRANCH    DACNFLAG,CBAL2500,CBAL2500,CBAL9999
.
CBAL2200  
          SUB       FMJDPERC,BALAN13     * subtract credits
          ADD       FMJDPERC,CREDBALC    * subtract credits
          GOTO      CBAL1000
.
CBAL2500 
          SUB       FMJDTAMT,BALAN13     * subtract credits
          GOTO      CBAL1000
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
CBAL9999  MOVE      BALAN13,BALANCE
          ENDPROC
.*************************************************************************
.* CDEB - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: BALANCE                   *
.*************************************************************************
          DEFPROC   CDEB0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.
CDEB0000  MOVE      ZERO,DEBTOT           * set to zero
.
          PACK      KEY10,FMJOPRE2,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CDEB1000  CALL      RKFMJD1
          BRANCH    OVRCD,CDEB9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CDEB9999 IF NOT EQUAL
.
          MATCH     "D",FMJDDRCR         * debit or credit?
          GOTO      CDEB1000 IF NOT EQUAL
.
          ADD       FMJDTAMT,DEBTOT     * add debits
          GOTO      CDEB1000
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
.
CDEB9999  ENDPROC
.*************************************************************************
.* CCRE - Read thru the details file adding up all the amounts to get    *
.*        a balance for the journal                                      *
.*        called by : DACN0000        Returns: BALANCE                   *
.*************************************************************************
          DEFPROC   CCRE0000
          INC       FMSJDTFD/INC
          OPEN      FMSJDTA1,"fmsjdtaf"
.
CCRE0000  MOVE      ZERO,CREDTOT          * set to zero
.
          PACK      KEY10,FMJOPRE2,FMJMJID,SP10
          CALL      RSFMJD1               * set to start of this journal
.
CCRE1000  CALL      RKFMJD1
          BRANCH    OVRCD,CCRE9999
.
          PACK      KEY14,FMJDJTY,FMJDJID,SP10
          MATCH     KEY10,KEY14          * is it the right journal?
          GOTO      CCRE9999 IF NOT EQUAL
.
          MATCH     "C",FMJDDRCR         * debit or credit?
          GOTO      CCRE1000 IF NOT EQUAL
.
          ADD       FMJDTAMT,CREDTOT     * add debits
          GOTO      CCRE1000
.
.
          INC       FMSJDTIO/INC
          INC       IBAOVRIO/INC
.
CCRE9999  ENDPROC
.*************************************************************************
.* PTRN - Process a single transaction           Called by TRAN9000      *
.*                                                                       *
.*************************************************************************
PTRN0000  LOAD      KEY10,CCITEM,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                 SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          CALL      RDFMJD1           * read details file
          BRANCH    OVRCD,PTRN9999
.
          MOVE      "3",SCREEN        * doing third screen
          CALL      RAMAFM00          * display screen
.
PTRN1000  CALL      SPDC0000          * select item post delete cancel?
          COMPARE   "0",CCITEM        * post?
          GOTO      PTRN8000 IF EQUAL
. 
          COMPARE   "-1",CCITEM        * cancel?
          GOTO      PTRN9999 IF EQUAL
. 
          COMPARE   "-2",CCITEM        * delete?
          GOTO      PTRN1800 IF EQUAL
. 
          IF        IBCNUBAS=1
            BRANCH    CCITEM,PTRN1100,PTRN1200,PTRN1300,PTRN1400,PTRN1500:
                             PTRN1600,PTRN1700
          ELSE
            BRANCH    CCITEM,PTRN1100,PTRN1200,PTRN1300,PTRN1400,PTRN1500:
                             PTRN1600
          ENDIF
          BEEP
          GOTO      PTRN1000
.
PTRN1100  CALL      KDCR0000          * keyin debit/credit
          GOTO      PTRN1000
.
PTRN1200  CALL      KACC0000          * keyin account
          GOTO      PTRN1000
.
PTRN1300  MOVE      FMJDRES,FMRSCODE  * dissection code default
          CALL      KRES0000          * keyin responsibility
          GOTO      PTRN1000
.
PTRN1400  MOVE      FMJDDIS,FMDSCODE  * responsible
          CALL      KDIS0000          * keyin dissection
          GOTO      PTRN1000
.
PTRN1500  CALL      KDSC0000          * keyin description
          GOTO      PTRN1000
.
PTRN1600  BRANCH    DACNFLAG,PTRN1650,PTRN1650,PTRN1750
          CALL      KPRC0000          * keyin percentage
          GOTO      PTRN1000
.
PTRN1650  CALL      KAMT0000          * keyin amount
          GOTO      PTRN1000
.
PTRN1700  COMPARE   THREE,DACNFLAG
          GOTO      PTRN1000 IF EQUAL
.
PTRN1750  IF        IBCNUBAS=1
            CALL      KBAS0000          * keyin BAS Code
          ENDIF
          GOTO      PTRN1000
.
PTRN1800  CALL      JDEL0000          * Delete a line
          GOTO      PTRN9999
.
PTRN8000  CALL      UPFMJD1           * update file
.
PTRN9999  MOVE      "2",SCREEN
          RETURN 
.*************************************************************************
.* JDEL - Delete Journal Line          Called by PTRN0000                *
.*************************************************************************
JDEL0000  CALL      DEFMJD1           * Delete a line
.
          MOVE      FMJDLNO,FORM3      * sort line number in order
          ADD       ONE,FORM3
.
JDEL0100  PACK      KEY10,FMJDJTY,FMJDJID,FORM3,SP70
          CALL      RDFMJD1
          BRANCH    OVRCD,JDEL9999
.
          SUB       ONE,FORM3
          MOVE      FORM3,FMJDLNO
          CALL      UPFMJD1
          ADD       TWO,FORM3         * next line No.
          GOTO      JDEL0100
.
JDEL9999  RETURN
.*************************************************************************
.* CHNG - Change mode options          Called by ML1500                  *
.*        Returns : EXIT = 0 - exit  1 - header det.  2 - trans. det.    *
.*                         3 - posting details  4 - display postings     *
.*************************************************************************
CHNG0000  MOVE      "1",CFPOSTFG        * clear called from flag
          DISPLAY   *P60:3,*EL,*V2LON,"Change",*P1:5,*EF:
                    *P1:6,*V2LON,"0",*HOFF,DOT,SP1,"Exit":
                    *P1:7,*V2LON,"1",*HOFF,DOT,SP1,"Header Details":
                    *P1:8,*V2LON,"2",*HOFF,DOT,SP1,"Transaction Details":
                    *P1:9,*V2LON,"3",*HOFF,DOT,SP1,"Posting Details":
                    *P1:10,*V2LON,"4",*HOFF,DOT,SP1,"Display Postings":
                    *P1:12,"Select Option :"
.
CHNG1000  KEYIN     *P17:12,*DV,UNDLN1,*P17:12,*V2LON,FORM1
          COMPARE   "0",FORM1       
          GOTO      CHNG2000 IF LESS          * invalid selection
.
          COMPARE   FORM1,FOUR                * number too big?
          GOTO      CHNG2000 IF LESS
.
          MOVE      FORM1,EXIT                * set exit
          GOTO      CHNG9999
.
CHNG2000  BEEP
          GOTO      CHNG1000
.
CHNG9999  
          RETURN 
.*************************************************************************
.* POST - Process the posting details       Called by ML3000             *
.*************************************************************************
POST0000  DISPLAY   *P60:3,*EL,*V2LON,*+,OPTNDESC," Postings"
          MOVE      ONE,CCANLDTE
          MOVE      TWO,DACNFLAG
          MOVE      SEQ,FORMJTOT            * make it not zero
          MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMJMLEDG,KEY2
          CALL      RDFMLA1
          CALL      PSCR0000                * display posting screen
          MOVE      ZERO,MODE
          MOVE      "5",CVERT
.
          PACK      FMJMPPOS,FMJMPPOS,SP10
          MATCH     SP8,FMJMPPOS            * any date entered yet
          GOTO      POST4000 IF NOT EQUAL
          UNPACK    CURDATE,CCENT,CYEAR,CMON,CDAY * default to todays date
          GOTO      POST0500
.
POST0100  REP       " 0",FMJMPPOS
          UNPACK    FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          MATCH     SP2,CCENT               * any default
          GOTO      POST0500 IF NOT EQUAL
          MOVE      CCC,CCENT               * set up century if not
.
POST0500  MOVE      "28",CCOL
          MOVE      "13",CVERT
          CALL      KEYDATE                 * keyin posting date
          PACK      CDAY,CDAY,SP2
          MATCH     SP2,CDAY                * nothing entered
          GOTO      POST9999 IF EQUAL
          BRANCH    OVRCD,POST0100
          BRANCH    CQUEST,POST0100
.
          PACK      FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          MOVE      FMJMPPOS,WORKDATE
          CALL      CFPR0000                * calculate financial period
          BRANCH    EXIT,POST0100
          DISPLAY   *P42:CVERT,WKDTDESC,SP1,"Ending ",WKDTPDAT
          ADD       ONE,CVERT
          BRANCH    MODE,POST4000           * insert or change?
.
POST1000  PACK      FMJMCPOS,FMJMCPOS,SP10
          COMPARE   "0",FMJMCASH            * are we cashing it?
          GOTO      POST2000 IF EQUAL
.
          REP       " 0",FMJMPPOS
          UNPACK    FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          MATCH     SP2,CCENT               * any default
          GOTO      POST1500 IF NOT EQUAL
          MOVE      CCC,CCENT               * set up century if not
.
POST1500  MOVE      "28",CCOL
          CALL      KEYDATE                 * keyin posting date
          BRANCH    OVRCD,POST1000
          BRANCH    CQUEST,POST1000
.
          PACK      FMJMCPOS,CCENT,CYEAR,CMON,CDAY
          MOVE      FMJMCPOS,WORKDATE
          CALL      CFPR0000                * calculate financial period
          BRANCH    EXIT,POST1000
          DISPLAY   *P42:CVERT,WKDTDESC,SP1,"Ending ",WKDTPDAT
          ADD       ONE,CVERT
          BRANCH    MODE,POST4000           * insert or change?
.
POST2000  COMPARE   "0",FMJMREV             * are we reversing it?
          GOTO      POST3000 IF EQUAL
.
          REP       " 0",FMJMPPOS
          UNPACK    FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          MATCH     SP2,CCENT               * any default
          GOTO      POST2500 IF NOT EQUAL
          MOVE      CCC,CCENT               * set up century if not
.
POST2500  MOVE      "28",CCOL
          CALL      KEYDATE                 * keying reverse date
.
          MATCH     EXITCHAR,CDAY           * exitchar hit?
          GOTO      POST9999 IF EQUAL
.
          BRANCH    CQUEST,POST2000
          BRANCH    OVRCD,POST2000
.
          PACK      FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          MOVE      FMJMRPOS,WORKDATE
          CALL      CFPR0000                * calculate financial period
          BRANCH    EXIT,POST2000
          DISPLAY   *P42:CVERT,WKDTDESC,SP1,"Ending ",WKDTPDAT
          ADD       ONE,CVERT              
          BRANCH    MODE,POST4000
.
POST3000  COMPARE   "1",FMJMSPER            * percentage allocated?
          GOTO      POST4000 IF NOT EQUAL
.
POST3500  KEYIN     *P28:CVERT,*EL,*DV,UNDLN15:
                    *P28:CVERT,*V2LON,*JR,DIMJTOT:
                    *P28:CVERT,*DV,DIMJTOT
.
          MATCH     "              /",DIMJTOT         * exitchar?
          GOTO      POST9999 IF EQUAL
.
          MATCH     "               ",DIMJTOT         * nothing?
          GOTO      POST3500 IF EQUAL
.
          TYPE      DIMJTOT                 * valid entry?
          GOTO      POST3500 IF NOT EQUAL
.
          MOVE      DIMJTOT,FORMJTOT
.
POST4000  CALL      MAINQST
          COMPARE   "0",CCITEM              * post?
          GOTO      POST8000 IF EQUAL
.
          COMPARE   "-1",CCITEM             * cancel?
          GOTO      POST9000 IF EQUAL
.
          MOVE      ONE,MODE                * set to change mode
          MOVE      CCITEM,CVERT
          ADD       "12",CVERT
          MOVE      "1",FORM1
          BRANCH    CCITEM,POST0100,POST5000,POST5000,POST5000
.
          BEEP
          GOTO      POST4000
.
POST5000  COMPARE   "0",FMJMCASH            * post to cash?
          GOTO      POST5300 IF EQUAL
          ADD       ONE,FORM1
.
          COMPARE   FORM1,CCITEM            * right field
          GOTO      POST1000 IF EQUAL
.
POST5300  COMPARE   "0",FMJMREV             * reversing?
          GOTO      POST5500 IF EQUAL
          ADD       ONE,FORM1
.
          COMPARE   FORM1,CCITEM            * right field
          GOTO      POST2000 IF EQUAL
.
POST5500  COMPARE   "0",FMJMSPER            * percentage allocated?
          GOTO      POST5700 IF EQUAL
          ADD       ONE,FORM1
.
          COMPARE   FORM1,CCITEM              * right field
          GOTO      POST3500 IF EQUAL
.
POST5700  BEEP
          GOTO      POST4000
.
POST6000  ADD       FOUR,CCITEM
          MOVE      ZERO,CVERT
          ADD       CCITEM,CVERT
          GOTO      POST3000
.
POST7000  ADD       THREE,CCITEM
          MOVE      ZERO,CVERT
          ADD       CCITEM,CVERT
          GOTO      POST2000
.
POST8000  COMPARE   ZERO,FORMJTOT        * is there a journal total
          GOTO      POST8500 IF NOT EQUAL
          DISPLAY   *P1:24,*B,"Journal Must Not Have a Total of Zero - ",*EL;
          CALL      HITENTER
          GOTO      POST4000
.
POST8500  CALL      CKLK0000
          BRANCH    EXIT,POST4000
.
          CALL      WJDT0000         * write to journal details file
          GOTO      POST9999
.
POST9000  UNPACK    SP70,FMJMPPOS,FMJMCPOS,FMJMRPOS
          MOVE      ZERO,FORMJTOT
.
POST9999  RETURN 
.**********************************************************************
.  CKLK - Checks for any locked periods                Called By MADT
.        Requires - FMSJMAAF record
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CKLK0000  MOVE      FMJMPPOS,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,CKLK9700
          BRANCH    PERLOCK,CKLK9500
          MOVE      CURYEAR,ACCYEAR
.
CKLK0100  COMPARE   ONE,FMJMCASH
          GOTO      CKLK0200 IF NOT EQUAL
          MOVE      FMJMCPOS,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,CKLK9700
          BRANCH    PERLOCK,CKLK9500
.
          MATCH     CURYEAR,ACCYEAR    * financial year conflict ?
          GOTO      CKLK9600 IF NOT EQUAL
.
CKLK0200  COMPARE   ONE,FMJMREV
          GOTO      CKLK9000 IF NOT EQUAL
          MOVE      FMJMRPOS,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,CKLK9700
          BRANCH    PERLOCK,CKLK9500
.
CKLK9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKLK9999
.
CKLK9500  UNPACK    WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      "Period Locked For Date ",KEY24
          MOVE      " - ",KEY3
          PACK      ERRMSG,KEY24,CPCDATE,KEY3
          GOTO      CKLK9700
.
CKLK9600  MOVE      "Cash and Financial Year Conflict - ",ERRMSG
          GOTO      CKLK9700
.
CKLK9700  STRIP     ERRMSG
          DISPLAY   *P1:24,*+,*B,*EF,ERRMSG;
          CALL      HITENTER
          MOVE      ONE,EXIT           * quit
.
CKLK9999  RETURN
.*************************************************************************
.* WJDT - Write to or update the FMSJDT file with correct amounts for    *
.*        each account in the journal. Update the JMA file with the      *
.*        posting and reversal dates if we have any.                     *
.*************************************************************************
WJDT0000  COMPARE   "1",FMJMSPER      * is it percentage allocated?
          CALL      ALFD0000 IF EQUAL * allocate funds according to there
                                      * percentage
.
          PACK      KEY7,FMJMJTY,FMJMJID
          CALL      RAFMJM1          * read first just in case
          MOVE      "1",FMJMSTAT
          CALL      UPFMJM1          * update details file with dates
.
          COMPARE   "1",FMJMSPER     * enter amounts if not percentage allocated
          CALL      TRAN0000 IF NOT EQUAL
.
WJDT1000  KEYIN     *P1:24,*EL,"Submit for Authorization ( / ) : _":
                    *P27:24,*V2LON,"Y",*P29:24,"N",*P34:24,ANS
          REP       UPPLOW,ANS
.
          PACK      ANS,ANS,SP1
          MOVE      "YN",VALOPTN     * set up valid options
          SCAN      ANS,VALOPTN      * valid entry
          GOTO      WJDT1000 IF NOT EQUAL
.
          MATCH     ANSN,ANS         * no?
          GOTO      WJDT9999 IF EQUAL
.
          READ      CONTROLF,FIFTY;*246,FMCOJAUT
          COMPARE   ONE,FMCOJAUT
          GOTO      WJDT2000 IF EQUAL
.
          MOVE      FMJOPRE2,JOURTYPE
          CALL      KREF0000         * keyin document ref.
          BRANCH    EXIT,WJDT1000
          MOVE      "0",SUBTYPE
          CALL      SUB0000          * submit for authorization
          PACK      KEY7,FMJMJTY,FMJMJID
          CALL      RDFMJM1          * read first just in case
          MOVE      ZERO,FMJMSTAT
          UNPACK    SP70,FMJMPPOS,FMJMCPOS,FMJMRPOS * clear dates for reuse
          CALL      UPFMJM1          * update details file
          COMPARE   "2",FMJMSPER     * dont clear if using default amounts
          GOTO      WJDT9999 IF EQUAL
          CALL      CJDT0000         * clear amounts for this journal
          GOTO      WJDT9999
.
WJDT2000  DISPLAY   *P1:24,*B,*EF,"Journal Authorization in Progress":
                    " - Try Again Later - ";
          CALL      HITENTER
.
WJDT9999  RETURN 
.************************************************************************
.* CJDT - Clear all the transaction amounts so this journal can be used *
.*        again.                                                        *
.************************************************************************
CJDT0000  PACK      KEY10,KEY7,SP10
          CALL      RSFMJD1          * position in details file
.
CJDT1000  CALL      RKFMJD1
          BRANCH    OVRCD,CJDT9999
.
          PACK      KEY10,FMJDJTY,FMJDJID,SP10
          MATCH     KEY7,KEY10        * right journal still?
          GOTO      CJDT9999 IF NOT EQUAL
.
          MOVE      ZERO,FMJDTAMT    * zero amount
          CALL      UPFMJD1
          GOTO      CJDT1000
.
CJDT9999  RETURN
.*************************************************************************
.* ALFD - Allocate the funds where the percentages say.                  *
.*************************************************************************
ALFD0000  MOVE      ZERO,ROUNDDAT      * default to no rounding
          MOVE      FORMJTOT,F15
          COMPARE   FORMJTOT,F15
          GOTO      ALFD0100 IF NOT EQUAL   * total has cents ?
.
          DISPLAY   *P1:24,*EL,"Round to Dollars Only (",*V2LON,"Y":
                    *HOFF,"/",*V2LON,"N",*HOFF,") ?";
          MOVE      "24",CVERT
          MOVE      "31",CCOL
          CALL      YORN0000           * get yes or no
          MOVE      FYESNO,ROUNDDAT
.
ALFD0100  MOVE      ZERO,FORM15P2
          UNPACK    SP70,SKEYDEB,SKEYCRED
          MOVE      FORMJTOT,TOTDEB
          MOVE      FORMJTOT,TOTCRED
          PACK      KEY10,FMJMJTY,FMJMJID,SP10
          CALL      RSFMJD1         * position at start of the journal
.
ALFD1000  CALL      RKFMJD1         * read next record
          BRANCH    OVRCD,ALFD2000
.
          PACK      KEY7,FMJDJTY,FMJDJID
          MATCH     KEY7,KEY10      * right journal?
          GOTO      ALFD2000 IF NOT EQUAL
.
          PACK      SKEY10,KEY7,FMJDLNO,SP70
          MOVE      FORMJTOT,FMJDTAMT
          DIV       "100",FMJDTAMT
          MULT      FMJDPERC,FMJDTAMT
          MOVE      FMJDTAMT,F15    * round value if required
          STORE     F15,ROUNDDAT,FMJDTAMT
.
          CALL      UPFMJD1         * update file with amount
          MATCH     "D",FMJDDRCR    * debit or credit?
          GOTO      ALFD1500 IF NOT EQUAL
.
          PACK      SKEYDEB,SKEY10,SP70
          SUB       FMJDTAMT,TOTDEB    * work out how much money
.                                      * we have allocated
          GOTO      ALFD1000
.
ALFD1500  PACK      SKEYCRED,SKEY10,SP70
          SUB       FMJDTAMT,TOTCRED   * work out how much money
.                                      * we have allocated
          GOTO      ALFD1000
.
ALFD2000  PACK      KEY10,SKEYCRED,SP70
          CALL      RDFMJD1
          BRANCH    OVRCD,ALFD2500     * record missing ? (should not happen)
          ADD       TOTCRED,FMJDTAMT   * make totals balance
          CALL      UPFMJD1
.
ALFD2500  PACK      KEY10,SKEYDEB,SP70
          CALL      RDFMJD1
          BRANCH    OVRCD,ALFD3000     * record missing ? (should not happen)
          ADD       TOTDEB,FMJDTAMT    * make totals balance
          CALL      UPFMJD1
.
ALFD3000  MOVE      "0",CFPOSTFG
          MOVE      "0",FMJMSPER
          MOVE      "1",DACNFLAG
          CALL      TRAN0000         * display entries
          MOVE      "1",FMJMSPER
.
ALFD9999  RETURN 
.*************************************************************************
.* DPST - Process all Posting Details                                    *
.*        Returns : EXIT = 1 - exit = 0 - valid item chosen              *
.*                     called by : ML2000                                *
.*************************************************************************
DPST0000  MOVE      ONE,NEXT           *assume no next screen
          DISPLAY   *P60:3,*EL,*V2LON,"Display Postings"
          MOVE      ONE,MODE
          MOVE      SEVEN,CVERT
          MOVE      ONE,DISPCNT
          DISPLAY   *P1:5,*EF:
                    *P1:6,*V2LON,*ULON,"Date      ":
                    *P12:6,"Period        ",*P27:6,"Ending    ":
                    *P39:6,"Batch":
                    *P46:6,SP10,"Total",*P64:6,"Updated   "
          PACK      KEY12,FMJOPRE2,FMJMJID,SP10
          CALL      RSFMJP2
.
          MOVE      ONE,POSTFLAG
          MOVE      ONE,PAGENO
.
          MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1
.
DPST1000  MOVE      "16",NUMREC
          CALL      DPPS0000            * Display next page of relative accounts
          COMPARE   TWO,EXIT            * none there - straight to insert mode
          GOTO      DPST9000 IF EQUAL
.
DPST1500  MOVE      ONE,MODE
          CLEAR     VALOPTN
          MOVE      ZERO,CCOL
.
          DISPLAY   *P1:24,*EL
          BRANCH    NEXT,DPST2000       * is there a next page
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
          APPEND    ANSN,VALOPTN
.
DPST2000  COMPARE   ONE,PAGENO         * no previous page if we are on page one
          GOTO      DPST3000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious Page, ";
          ADD       "18",CCOL
          APPEND    ANSP,VALOPTN
.
DPST3000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it ?"
          ADD       TEN,CCOL
          APPEND    ANSX,VALOPTN
.
DPST4000  KEYIN     *PCCOL:24,*EL,*DV,UNDLN1,*JR,*PCCOL:24,*V2LON,ANS
          REP       UPPLOW,ANS
          TYPE      ANS
          GOTO      DPST4000 IF EQUAL
.
          RESET     VALOPTN
          SCAN      ANS,VALOPTN            * valid option chosen?
          GOTO      DPST4000 IF NOT EQUAL
.
          REP       "N1P2X3",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,DPST4500,DPST5000,DPST8000
          GOTO      DPST4000
.
DPST4500  ADD       ONE,PAGENO
          DISPLAY   *P1:7,*EF
          GOTO      DPST1000
.
DPST5000  COMPARE   "2",PAGENO       * if on second page - go from start
          GOTO      DPST0000 IF EQUAL
          CALL      PRPS0000          * read back a page so we can read 
.                                     * forward a page
          GOTO      DPST1000
.
DPST8000  MOVE      TRUE,EXIT          
          MOVE      ONE,POSTFLAG
          GOTO      DPST9999
.
DPST9000  DISPLAY   *P1:24,*B,*EL,"No Posting Data on File for This Journal - ";
          CALL      HITENTER
.
DPST9999  RETURN
.*************************************************************************
.* DPPS - Display the next page of postings on file  Called by Lots      *
.*        Requires the file pointer to be positioned before the first    *
.*        record that we wish to display                                 *
.*************************************************************************
DPPS0000  MOVE      ONE,DISPCNT
          MOVE      ONE,NEXT
          MOVE      SEVEN,CVERT
          MOVE      ZERO,RECCNT
          DISPLAY   *P1:7,*EF
          CALL      CSEL0000          * clear screen variables(SEL)
.
DPPS1000  CALL      RKFMJP2           * read next record
          BRANCH    OVRCD,DPPS9000
.
          MATCH     FMJOPRE2,FMJPJTY  * general journal?
          GOTO      DPPS9000 IF NOT EQUAL
.
          MATCH     FMJPJID,FMJMJID  * right journal?
          GOTO      DPPS9000 IF NOT EQUAL
.
          COMPARE   "23",CVERT        * full page?
          GOTO      DPPS8000 IF EQUAL
.
          MOVE      FMJPPDAT,WORKDATE
          CALL      CFPR0000          * get financial period
          UNPACK    FMJPPDAT,CCENT,CYEAR,CMON,CDAY 
          CALL      PACDATE             * format posting date
          MOVE      CPCDATE,POSTDATE
          UNPACK    FMJPUDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE             * format updating date
          BRANCH    FMJPREV,DPPS1900    * is it a reversal batch
          GOTO      DPPS2000            * no - go and display then
.
DPPS1900  MULT      SEQ,FMJPDTOT        * yes - then make value negative
.
DPPS2000  DISPLAY   *P1:CVERT,*EL,POSTDATE:
                    *P12:CVERT,WKDTDESC,*P27:CVERT,WKDTPDAT:
                    *P39:CVERT,FMJPBAT,*P46:CVERT,FMJPDTOT
          PACK      FMJPUDAT,FMJPUDAT,SP10
          MATCH     SP8,FMJPUDAT        * updated
          GOTO      DPPS3000 IF EQUAL
          UNPACK    FMJPUDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE             * format updating date
          DISPLAY   *P64:CVERT,CPCDATE
          GOTO      DPPS5000
.
DPPS3000  MOVE      ONE,DIM1
          MATCH     FMJPAUTH,DIM1
          GOTO      DPPS4000 IF EQUAL
          DISPLAY   *P64:CVERT,"Unauthorized"
          GOTO      DPPS5000
.
DPPS4000  DISPLAY   *P64:CVERT,"Authorized"
.
DPPS5000  ADD       ONE,RECCNT
          MOVE      CVERT,FORM2
          SUB       "6",FORM2
          PACK      KEY12,FMJPJTY,FMJPJID,FMJPBAT
          STORE     KEY12,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07,SEL08:
                                SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15
          MOVE      DISPCNT,MAXDISP
          ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "16",NUMREC         * do we want to display the whole screen
          GOTO      DPPS1000 IF EQUAL
.
          COMPARE   RECCNT,NUMREC       * if not have we displayed enough?
          GOTO      DPPS1000 IF NOT EQUAL
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DPPS9999
.
DPPS8000  MOVE      ZERO,NEXT        * there is a next page
          CALL      RPFMJP2          * read back so when next page only 
.                                    * have to read forward
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DPPS9999
.
DPPS9000  COMPARE   ONE,PAGENO      * first page?
          GOTO      DPPS9500 IF NOT EQUAL
          COMPARE   "7",CVERT        * first line of first page?
          GOTO      DPPS9500 IF NOT EQUAL  
          MOVE      TWO,EXIT        * straight to insert thanks
          GOTO      DPPS9999
.
DPPS9500  MOVE      ONE,EXIT         * no next page
.
DPPS9999  RETURN
. 
.*************************************************************************
.* PRPS - read back 15 records from first one on screen for previous     *
.*        page                                                           *
.*                     called by : SACN                                  *
.*************************************************************************
PRPS0000  MOVE      SEL01,KEY12
          CALL      RSFMJP2
          MOVE      ONE,FORM2
          SUB       ONE,PAGENO
.
PRPS1000  CALL      RPFMJP2         * read back one
          BRANCH    OVRCD,PRPS9000
.
          COMPARE   "17",FORM2      * have we read back far enough
          GOTO      PRPS9999 IF EQUAL * go out if so
.
          ADD       ONE,FORM2
          GOTO      PRPS1000
.
PRPS9000  MOVE      SP70,KEY10      * reached eof - posy at start
          CALL      RSFMJP2
.
PRPS9999  RETURN
.*************************************************************************
.* DELT - Ok to delete and delete if yes         Called by MADT2000      *
.*************************************************************************
DELT0000  CALL      GETW0000          * get wp notes
          PACK      KEY7,FMJMJTY,FMJMJID,SP10
          PACK      KEY10,KEY7,SP10
          CALL      RSFMJD1                 * is there any transaction details
.
DELT0500  CALL      RKFMJD1
          BRANCH    OVRCD,DELT0600
          PACK      KEY10,FMJDJTY,FMJDJID,SP10
          MATCH     KEY7,KEY10              * this journal?
          GOTO      DELT0600 IF NOT EQUAL
          COMPARE   FMJDTAMT,ZERO           * transaction zero ?
          GOTO      DELT0500 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "Cannot Delete - Journal has non-zero transactions - "; 
          CALL      HITENTER
          GOTO      DELT9999
.
DELT0600  PACK      KEY7,FMJMJTY,FMJMJID,SP10
          PACK      KEY12,KEY7,SP10
          CALL      RSFMJP2                 * is there any posting details
.
          CALL      RKFMJP2
          BRANCH    OVRCD,DELT1000
          PACK      KEY12,FMJPJTY,FMJPJID,SP10
          MATCH     KEY7,KEY12              * this journal?
          GOTO      DELT1000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "Cannot Delete - Journal has posting details - "; 
          CALL      HITENTER
          GOTO      DELT9999
.
DELT1000  CALL      DELQST          * ok to delete ?
          BRANCH    CEXIT,DELT2000,DELT3000,DELT4000
.
DELT2000  PACK      KEY7,FMJMJTY,FMJMJID,SP70
          CALL      DEFMJM1         * delete it 
          PACK      KEY10,KEY7,SP10
.
DELT2500  CALL      RSFMJD1                 * is there any transaction details
          CALL      RKFMJD1
          BRANCH    OVRCD,DELT2900
          PACK      KEY10,FMJDJTY,FMJDJID,FMJDLNO,SP70
          MATCH     KEY7,KEY10              * this journal?
          GOTO      DELT2900 IF NOT EQUAL
          CALL      DEFMJD1
          GOTO      DELT2500
.
DELT2900  MOVE      FALSE,EXIT
          GOTO      DELT9999
.
DELT3000  MOVE      ZERO,EXIT        * no
          GOTO      DELT9999
.         
DELT4000  MOVE      TWO,EXIT        * cancel
.         
DELT9999  RETURN 
.*************************************************************************
.* KREF - Keyin the reference code for this batch  Called by SUB0000     *
.*************************************************************************
KREF0000  DISPLAY   *P1:5,*EF:
                    *P28:4,*V2LON,FMJMJID,*HOFF:
                    *P5:6,"Document Reference",*P26:6,":";
.
KREF1000  KEYIN     *P28:6,*EF,*DV,UNDLN7,*P28:6,*V2LON,DOCREF:
                    *P28:6,*DV,DOCREF
.
KREF2000  MOVE      ONE,LLPOS
.
KREF2100  RESET     FMJMJID,LLPOS      * Justify Left Journal ID
          CMATCH    SP1,FMJMJID
          GOTO      KREF2200 IF NOT EQUAL
          ADD       ONE,LLPOS
          COMPARE   SEVEN,LLPOS
          GOTO      KREF2200 IF NOT LESS
          GOTO      KREF2100
.
KREF2200  PACK      BCREFER,DOCREF,DASH,FMJMJTY,FMJMJID,SP70
          RESET     FMJMJID
.
          DISPLAY   *P5:7,"Item Reference",*P26:7,":":
                    *P28:7,*V2LON,BCREFER
          CALL      CONTQST           * ok to continue?
          BRANCH    CEXIT,KREF9000,KREF1000
.
          MOVE      ONE,EXIT          * cancel
          GOTO      KREF9999
.
KREF9000  MOVE      ZERO,EXIT
.
KREF9999  RETURN 
.*************************************************************************
.* SCR3 - Display screen 3                 Called by RAMAFM10            *
.*************************************************************************
SCR30000  MOVE      SP70,FMAMDESC
          MOVE      SP70,FMRSDESC
          MOVE      SP70,FMDSDESC
          MOVE      SP70,IBBADESC
          MOVE      SP70,IBBABASC
.
          IF        IBCNUBAS=1
            MOVE      FMJDBASC,KEY3
            MOVE      FMJDBASC,IBBABASC
            CALL      RDIBBA1
          ENDIF
.
          PACK      KEY14,FMJMLEDG,FMJDACC
          MOVE      FMJMLEDG,FMAMLEDG
          MOVE      FMJDBASC,KEY3
          MOVE      FMJDACC,FMAMACCT
          CALL      RDFMAM1                 * get account description
.
          MOVE      FMJDDIS,KEY5
          MOVE      FMJDDIS,FMDSCODE
          CALL      RDFMDS1                 * get dissection description
.
          MOVE      FMJDRES,KEY4
          MOVE      FMJDRES,FMRSCODE
          CALL      RDFMRS1                 * get responsibility
          MOVE      "Debit",DRCRLDES
          MATCH     "D",FMJDDRCR            * debit?
          GOTO      SCR31000 IF EQUAL
          MOVE      "Credit",DRCRLDES
.
SCR31000  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJDJID:
                    *P51:4,*HOFF,"Status  : ",*V2LON,STATDESC:
                    *P1:6," 1",*HOFF,DOT,*P5:6,"Debit/Credit",*P26:6,": ": 
                    *V2LON,DRCRLDES,*V2LON:
                    *P1:7," 2",*HOFF,DOT,*P5:7,"Account Code",*P26:7,": ": 
                    *V2LON,FMJDACC,*HOFF,*P41:7,FMAMDESC,*V2LON:
                    *P1:8," 3",*HOFF,DOT,*P5:8,"Responsibility",*P26:8,": ": 
                    *V2LON,FMJDRES,*HOFF,*P41:8,FMRSDESC,*V2LON:
                    *P1:9," 4",*HOFF,DOT,*P5:9,"Dissection",*P26:9,": ": 
                    *V2LON,FMJDDIS,*HOFF,*P41:9,FMDSDESC,*V2LON:
                    *P1:10," 5",*HOFF,DOT,*P5:10,"Brief Description":
                    *P26:10,": ",*V2LON,FMJDDESC 
          BRANCH    DACNFLAG,SCR32000,SCR32000,SCR33000
.
          DISPLAY   *P1:11,*V2LON," 6",*HOFF,DOT,*P5:11,"Percentage":
                    *P26:11,": ",*V2LON,FMJDPERC
          GOTO      SCR33000
.                 
SCR32000  DISPLAY   *P1:11,*V2LON," 6",*HOFF,DOT,*P5:11,"Amount":
                    *P26:11,": ",*V2LON,FMJDTAMT
.
SCR33000  IF        IBCNUBAS=1
            IF        DACNFLAG=3
              DISPLAY   *P1:11,*V2LON," 6",*HOFF,DOT,*P5:11,"BAS Code":
                        *P26:11,": ",*V2LON,FMJDBASC,*HOFF,*P41:11,IBBADESC
            ELSE
              DISPLAY   *P1:12,*V2LON," 7",*HOFF,DOT,*P5:12,"BAS Code":
                        *P26:12,": ",*V2LON,FMJDBASC,*HOFF,*P41:12,IBBADESC
            ENDIF
          ENDIF
.                 
SCR39999  RETURN 
.*************************************************************************
.* SCRX - Display screen X                 Called by lots                *
.*************************************************************************
SCRX0000  MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1              * get ledger description
          MOVE      FMLADESC,LEDGDESC    * set ledger description
.
          MOVE      DNO,CASHDESC
          LOAD      CASHDESC,FMJMCASH,DYES
.
          MOVE      DNO,REVDESC
          LOAD      REVDESC,FMJMREV,DYES
.
          MOVE      NORMAL,UPCDESC
          LOAD      UPCDESC,FMJMSPER,PERCENT,AMOUNT
.
          DISPLAY   *P1:6,*EF:
                    *P5:6,"Brief Description":
                    *P26:6,":",SP1,*V2LON,FMJMDESC,*HOFF:
                    *P5:7,"Date Entered":
                    *P26:7,":"
          MATCH     SP8,FMJMDENT              * any date entered?
          GOTO      SCRX0100 IF EQUAL
.
          UNPACK    FMJMDENT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:7,*V2LON,CPCDATE
.
SCRX0100  DISPLAY   *P5:8,"Ledger":
                    *P26:8,": ",*V2LON,FMLALEDG,SP1,*HOFF,LEDGDESC:
                    *P5:9,"Post to Cash   (Y/N)":
                    *P26:9,": ",*V2LON,CASHDESC,*HOFF:
                    *P5:10,"Post Reversal  (Y/N)":
                    *P26:10,": ",*V2LON,REVDESC,*HOFF:
                    *P5:11,"( )erc ( )mt ( )orm":
                    *P6:11,*V2LON,"P",*P13:11,"A",*P19:11,"N",*HOFF:
                    *P26:11,": ",*V2LON,UPCDESC
SCRX9999  RETURN 
.*************************************************************************
.* PSCR - Display posting screen           Called by CPDT0000            *
.*************************************************************************
PSCR0000  CALL      SCRX0000                * display header details
          DISPLAY   *P1:13,*V2LON," 1",*HOFF,". Posting Date":
                    *P26:13,":"
          MOVE      "13",CVERT
          MOVE      ONE,FORM2
          PACK      FMJMPPOS,FMJMPPOS,SP10
          MATCH     SP8,FMJMPPOS            * is there a date yet?
          GOTO      PSCR0100 IF EQUAL
          UNPACK    FMJMPPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:13,*V2LON,CPCDATE
          MOVE      FMJMPPOS,WORKDATE
          CALL      CFPR0000                * calculate financial period
          DISPLAY   *P42:13,WKDTDESC,SP1,"Ending ",WKDTPDAT
.
PSCR0100  COMPARE   "0",FMJMCASH       * is it posting cash?
          GOTO      PSCR0500 IF EQUAL
.
PSCR0200  ADD       ONE,CVERT
          ADD       ONE,FORM2
          DISPLAY   *P1:CVERT,*V2LON,FORM2,*HOFF,". Cash Posting Date":
                    *P26:CVERT,":"
          PACK      FMJMCPOS,FMJMCPOS,SP10
          MATCH     SP8,FMJMCPOS            * is there a date yet?
          GOTO      PSCR0500 IF EQUAL
          UNPACK    FMJMCPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:CVERT,*V2LON,CPCDATE
          MOVE      FMJMCPOS,WORKDATE
          CALL      CFPR0000                * calculate financial period
          DISPLAY   *P42:CVERT,WKDTDESC,SP1,"Ending ",WKDTPDAT
.
PSCR0500  COMPARE   "0",FMJMREV        * are we reversing?
          GOTO      PSCR1500 IF EQUAL
.
PSCR1000  ADD       ONE,CVERT
          ADD       ONE,FORM2
          DISPLAY   *P1:CVERT,*V2LON,FORM2,*HOFF,". Reversal Date":
                    *P26:CVERT,":"
          PACK      FMJMRPOS,FMJMRPOS,SP10
          MATCH     SP8,FMJMRPOS            * is there a date yet?
          GOTO      PSCR1500 IF EQUAL
          UNPACK    FMJMRPOS,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:CVERT,*V2LON,CPCDATE
          MOVE      FMJMRPOS,WORKDATE
          CALL      CFPR0000                * calculate financial period
          DISPLAY   *P42:CVERT,WKDTDESC,SP1,"Ending ",WKDTPDAT
.
PSCR1500  COMPARE   "1",FMJMSPER       * percentage allocated
          GOTO      PSCR9999 IF NOT EQUAL
.
          ADD       ONE,CVERT
          ADD       ONE,FORM2
          PROC      CDEB0000           * get balance
          DISPLAY   *P1:CVERT,*V2LON,FORM2,*HOFF,". Journal Total":
                    *P26:CVERT,":"
          MOVE      DEBTOT,FORMJTOT
          COMPARE   ZERO,DEBTOT        * dont display if zero
          GOTO      PSCR9999 IF EQUAL
          DISPLAY   *P28:CVERT,*V2LON,DEBTOT
.       
PSCR9999  RETURN
.*************************************************************************
.* DCOM - display comments - first from tempfile and if none - from      *
.*        comments file                                                  *
.*************************************************************************
DCOM0000  MOVE      ZERO,NOTES                   * assume none in tempfile
          OPEN      FMSTMP01,FILENAM1            * go to start of records
          MOVE      "13",CVERT
.
DCOM1000  READ      FMSTMP01,SEQ;FMJWLINE        * read in wp data
          GOTO      DCOM2000 IF OVER
.
          DISPLAY   *P5:CVERT,FMJWLINE           * display data fromtempfile
          MOVE      TRUE,NOTES                   * set flag to got  comments
          COMPARE   "22",CVERT                   * full page?
          GOTO      DCOM9999 IF EQUAL            * YEP - get out of here
          ADD       ONE,CVERT                    * NOPE - add to line number   
          GOTO      DCOM1000                     * and go back
.
DCOM2000  BRANCH    NOTES,DCOM9999               * did we have any comments?
          PACK      KEY10,FMJOPRE2,FMJMJID,SP10  * no then get them from file
          CALL      RSFMJW1
DCOM3000  CALL      RKFMJW1
          BRANCH    OVRCD,DCOM9999
          PACK      KEY7,FMJWJTY,FMJWJID
          MATCH     KEY7,KEY10                   * right journal?
          GOTO      DCOM9999 IF NOT EQUAL
.
          DISPLAY   *P5:CVERT,FMJWLINE
.
          COMPARE   "22",CVERT                   * full page?
          GOTO      DCOM9999 IF EQUAL
          ADD       ONE,CVERT
          GOTO      DCOM3000
.
DCOM9999  RETURN 
.******************************************************************************
.  SCRP - Display Screen P                       Called by SELP, redisps
.******************************************************************************
SCRP0000  DISPLAY   *P1:4,*EF,*V2LON:
                    *P1:4," 1",*HOFF,". From Journal ID      : ":
                          *V2LON,JID1:
                    *P1:5," 2",*HOFF,". To   Journal ID      : ":
                          *V2LON,JID2
.
SCRP9999  RETURN
.******************************************************************************
.  SELP - Perform Screen P                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELP0000  UNPACK    SP70,JID1,JID2
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,OPTIONP       * reset item desired
          CALL      SCRP0000           * display screen P
.
SELP0100  ADD       ONE,OPTIONP        * get next item
          BRANCH    ACCEPT,SELP0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONP
.
SELP0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONP,CVERT
          MOVE      OPTIONP,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELP9500,SELP9000:                       * quit, continue
                       SELP1100,SELP1200                        * execute option
          BRANCH    ACCEPT,SELP0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELP0100           * get another option
.
SELP0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELP0100
.
.---- option 1 ----
.
SELP1100  MOVE      ONE,DISPFLAG
          MOVE      FMJOPRE2,FMJMJTY
          CALL      KJMAFM00
          BRANCH    EXIT,SELP1190,SELP9500
.
SELP1190  LOAD      FMJMJID,EXIT,ZERO20
          PACK      JID1,FMJMJID,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          GOTO      SELP0100
.
.---- option 2 ----
.
SELP1200  MOVE      ONE,DISPFLAG
          MOVE      FMJOPRE2,FMJMJTY
          CALL      KJMAFM00
          BRANCH    EXIT,SELP1290,SELP9500
.
SELP1290  LOAD      FMJMJID,EXIT,Z20
          MOVE      FMJOPRE2,FMJMJTY
          PACK      JID2,FMJMJID,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,FMJMJID;
          GOTO      SELP0100
.
.
SELP9000  MATCH     JID1,JID2
          GOTO      SELP9100 IF NOT LESS
          DISPLAY   *P1:24,*B,*EF:
                    "From Journal ID Cannot Be Before To Journal ID - ";
          CALL      HITENTER
          GOTO      SELP0100
.
SELP9100  MOVE      ZERO,EXIT          * continue
          GOTO      SELP9999
.
SELP9500  MOVE      ONE,EXIT           * quit
.
SELP9999  RETURN
.********************************************************************
. PRNT - print report                               Called by ML
.         Requires : JID1,JID2    (print range)
.********************************************************************
PRNT0000  DISPLAY   *P50:24,"Printing :   ";
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
.
          CALL      FILE0000                    * go to correct position in file
.
PRNT1000  CALL      NREC0000                     * get next record
          BRANCH    OVRCD,PRNT9000               * end of file ?
.
          DISPLAY   *P61:24,*V2LON,FMJMJID,*EL;
.
          CALL      WRIT0000                     * print details
          GOTO      PRNT1000                     * get next record
.
PRNT9000  COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL          * print header if nothing printed
          CALL      UND80                        * print line
          PRINT     "****   End of Report   ****"
.
PRNT9999  RETURN
.**********************************************************************
.  FILE - Set file pointer                             Called By PRNT
.**********************************************************************
FILE0000  
.
.---- print by type 1 ----
.
FILE0100  PACK      KEY7,FMJOPRE2,JID1,SP70
          CALL      RSFMJM1
          CALL      RPFMJM1
          GOTO      FILE9999
.
FILE9999  RETURN
.**********************************************************************
.  NREC - Get next record                              Called By PRNT
.**********************************************************************
NREC0000  
.
.---- print by type 1 ----
.
NREC0100  CALL      RKFMJM1
          BRANCH    OVRCD,NREC9500
.
          MATCH     FMJMJTY,FMJOPRE2
          GOTO      NREC9500 IF NOT EQUAL        * out of range ?
          MATCH     FMJMJID,JID2
          GOTO      NREC9500 IF LESS             * out of range ?
          GOTO      NREC9000
.
NREC9000  MOVE      ZERO,OVRCD         * continue
          GOTO      NREC9999
.
NREC9500  MOVE      ONE,OVRCD          * quit
.
NREC9999  RETURN
.********************************************************************
. HEAD - print heading                              Called by PRNT
.********************************************************************
HEAD0000  CALL      HEAD80                       * print heading
          CALL      THED0000                     * print transaction heading
.
HEAD9999  RETURN
.********************************************************************
. THED - print transaction data heading             Called by PRNT
.********************************************************************
THED0000  CALL      UND80
          ADD       "2",CLNO
          PRINT     *24,"Transaction Details",*N:
                    *2,"D/C":
                    *6,"Account    ",*20,BASDESC,*24,"Diss ",*30,"Resp":
                    *35,"Transaction Description";
          BRANCH    FMJMSPER,THED1000,THED2000
          GOTO      THED5000
. 
THED1000  PRINT     *66,"Percentage";
          GOTO      THED5000
.
THED2000  PRINT     *75,"Amount";
.
THED5000  PRINT     SP1
          CALL      UND80 
.
THED9999  RETURN
.********************************************************************
. WRIT - print data line                            Called by PRNT
.********************************************************************
WRIT0000  CALL      HEAD80                       * print heading
.
          MOVE      FMJMLEDG,FMLALEDG
          MOVE      FMLALEDG,KEY2
          CALL      RDFMLA1              * get ledger description
          MOVE      FMLADESC,LEDGDESC    * set ledger description
.
          MOVE      DNO,CASHDESC
          LOAD      CASHDESC,FMJMCASH,DYES
.
          MOVE      DNO,REVDESC
          LOAD      REVDESC,FMJMREV,DYES
.
          MOVE      NORMAL,UPCDESC
          LOAD      UPCDESC,FMJMSPER,PERCENT,AMOUNT
.
          PRINT     "    Journal ID           : ":
                    FMJMJID,*N:       **** ,SP10,SP8,"Status  : ",STATDESC,*N:
                    "    Brief Description":
                    SP4,":",SP1,FMJMDESC
          MOVE      SP10,CPCDATE
          MATCH     SP8,FMJMDENT              * any date entered?
          GOTO      WRIT0010 IF EQUAL
.
          UNPACK    FMJMDENT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
WRIT0010  PRINT     "    Date Entered":
                    SP9,": ",CPCDATE,*N:
                    "    Ledger":
                    SP10,SP5,": ",FMLALEDG,SP1,LEDGDESC,*N:
                    "    Post to Cash   (Y/N)":
                    " : ",CASHDESC,*N:
                    "    Post Reversal  (Y/N)":
                    " : ",REVDESC,*N:
                    "    (P)erc (A)mt (N)orm ":
                    " : ",UPCDESC,*N
.
          CALL      THED0000
          PACK      KEY10,FMJMJTY,FMJMJID,SP70
          CALL      RSFMJD1
.
WRIT1000  CALL      RKFMJD1
          BRANCH    OVRCD,WRIT9000
          MATCH     FMJMJTY,FMJDJTY
          GOTO      WRIT9000 IF NOT EQUAL
          MATCH     FMJMJID,FMJDJID
          GOTO      WRIT9000 IF NOT EQUAL
.
          MOVE      "Dr",DRCRDESC     * set up credit debit description
          MATCH     ANSD,FMJDDRCR     * credit or debit
          GOTO      WRIT2000 IF EQUAL
          MOVE      "Cr",DRCRDESC
.
WRIT2000  PRINT     *2,DRCRDESC:
                    *6,FMJDACC,*20,FMJDBASC,*24,FMJDDIS,SP1,FMJDRES,SP1:
                    *35,FMJDDESC;
          BRANCH    FMJMSPER,WRIT2005,WRIT2008
          GOTO      WRIT2010
.
WRIT2005  PRINT     *68,FMJDPERC;
          GOTO      WRIT2010
.
WRIT2008  PRINT     *66,FMJDTAMT;
          GOTO      WRIT2010
.
WRIT2010  PRINT     SP1
          ADD       ONE,CLNO                     * add one to line number
          COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
          GOTO      WRIT1000
.
WRIT9000  
.
WRIT9999  RETURN
.*************************************************************************
.* REDISPLAY ROUTINES FOR STANDARD KEYINS                                *
.*************************************************************************
RAMAFM00  COMPARE   "3",SCREEN            * whisch page do we want to redisplay
          GOTO      RAMAFM10 IF EQUAL
.
          BRANCH    DISPCNT,RAMAFM05
          CALL      CURP0000              * display current ledge
          UNPACK    SP70,FMJDDIS,FMJDRES
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P5:CVERT,SAVEDESC
          GOTO      RZZZFM99
.
RAMAFM05  DISPLAY   *P5:4,*EF,"Journal ID",*P26:4,": ",*V2LON,FMJMJID,*HOFF:
                    *P51:4,"Status  : ",*V2LON,STATDESC,*HOFF:
                    *P24:6,*V2LON,"Transaction Details":
                    *P1:7,*V2LON,*ULON,"Itm",*P5:7,"D/C":
                    *P8:7,"Account    ";
          IF        IBCNUBAS=1
            DISPLAY *P20:7,*V2LON,*ULON,BASDESC
          ENDIF
          DISPLAY   *P24:7,*V2LON,*ULON,"Diss ":
                    *P30:7,"Resp":
                    *P35:7,"Transaction Description",SP6
          BRANCH    DACNFLAG,RAMAFM06,RAMAFM06,RAMAFM07 
. 
          DISPLAY   *P66:7,*V2LON,*ULON,"Percentage"
          GOTO      RAMAFM07
.
RAMAFM06  DISPLAY   *P75:7,*V2LON,*ULON,"Amount"
          GOTO      RAMAFM07
.
RAMAFM07  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMAMACCT,*P20:CVERT,IBBABASC,*P24:CVERT,FMDSCODE:
                    *P30:CVERT,FMRSCODE;
          GOTO      RZZZFM99
.
RAMAFM10  CALL      SCR30000              * display screen 3
          GOTO      RZZZFM99
      
.
RTDSFM00  COMPARE   "3",SCREEN            * which page do we want to redisplay
          GOTO      RAMAFM10 IF EQUAL
.
          BRANCH    DISPCNT,RAMAFM05
          CALL      CURP0000              * display current ledger
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,DOT,*P5:CVERT,SAVEDESC:
                    *P8:CVERT,FMAMACCT,*P20:CVERT,IBBABASC,*P24:CVERT,FMDSCODE:
                    *P30:CVERT,FMRSCODE;
          GOTO      RZZZFM99
.
RZZZFM99  RETURN
.
RJMAFM00  BRANCH    DISPFLAG,RJMAFM10
          DISPLAY   *P1:4,*EF,*P5:4,"Journal ID",*P26:4,":"
          RETURN
.
RJMAFM10  CALL      SCRP0000
          RETURN
.
RLMAFM00  BRANCH    SCREEN,RLMAFM05,RAMAFM00
RLMAFM05  DISPLAY   *P1:4,*EF,*P5:4,"Journal ID",*P26:4,":":
                    *P28:4,*V2LON,FMJMJID:
                    *HOFF,*P51:4,"Status  : ",*V2LON,STATDESC:
                    *P1:6,*V2LON," 1",*HOFF,DOT,SP1,"Brief Description":
                    *P26:6,":",SP1,*V2LON,FMJMDESC:
                    *P1:7,*V2LON," 2",*HOFF,DOT,SP1,"Date Entered":
                    *P26:7,":"
          MATCH     SP8,FMJMDENT              * any date entered?
          GOTO      RLMAFM10 IF EQUAL
.
          UNPACK    FMJMDENT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P28:7,*V2LON,CPCDATE
RLMAFM10  DISPLAY   *P1:8,*V2LON," 3",*HOFF,DOT,SP1,"Ledger":
                    *P26:8,": ",*V2LON,FMLALEDG,SP1,*HOFF,LEDGDESC:
                    *P1:9,*V2LON," 4",*HOFF,DOT,SP1,"Post to Cash   (Y/N)":
                    *P26:9,": ",*V2LON,CASHDESC:
                    *P1:10,*V2LON," 5",*HOFF,DOT,SP1,"Post Reversal  (Y/N)":
                    *P26:10,": ",*V2LON,REVDESC:
                    *P1:11,*V2LON," 6",*HOFF,DOT,SP1,"( )erc ( )mt ( )orm":
                    *P6:11,*V2LON,"P",*P13:11,"A",*P19:11,"N",*HOFF:
                    *P26:11,": ",*V2LON,UPCDESC:
                    *P5:12,*V2LON,*ULON,"Notes                         ":
                    "                                        "
.
          CALL      DCOM0000            * display comments
.
RLMAFM99  RETURN
.
RLMCFM00  RETURN
.*************************************************************************
.*        Subroutine to SELECT ITEM, POST, DELETE or CANCEL              *
.*************************************************************************
SPDC0000  MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"D",*HOFF,")elete, (":
                    *V2LON,"C",*HOFF,")ancel ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      SPDC0000 IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  C",CCITEMD
          GOTO      SPDC0200 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      SPDC0300 IF EQUAL
.
          MATCH     "  D",CCITEMD
          GOTO      SPDC0400 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      SPDC0100 IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      SPDC0100 IF LESS
.
          GOTO      SPDC9999
.
SPDC0100  BEEP
          GOTO      SPDC0000
.
SPDC0200  MOVE      "-1",CCITEM
          GOTO      SPDC9999
.
SPDC0300  MOVE      "0",CCITEM
          GOTO      SPDC9999
.
SPDC0400  MOVE      "-2",CCITEM
          GOTO      SPDC9999
.
SPDC9999  RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSAMAIO/INC
          INC       FMSBCFIO/INC
          INC       FMSAMAKY
          INC       FMSBPFIO/INC
          INC       FMSCONIO/INC
          INC       FMSDISIO/INC
          INC       FMSDISKY
          INC       FMSJDTIO/INC
          INC       FMSJMAIO/INC
          INC       FMSJMAKY
          INC       FMSJPDIO/INC
          INC       FMSJTPIO/INC
          INC       FMSJWPIO/INC
          INC       FMSLMAIO/INC
          INC       FMSTDSIO/INC
          INC       FMSLMAKY
          INC       FMSLMCKY
          INC       FMSTDSKY
          INC       FMSLMCIO/INC
          INC       FMSRESIO/INC
          INC       FMSRESKY
          INC       FMSSBAUT          * submit for authorization include
.
          INC       IBABASIO/INC
          INC       IBABASKY
          INC       IBABATIO/INC
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
