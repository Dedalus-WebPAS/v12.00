.-------------------------------------------------------
          INC       FMSSTDDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.03  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.02  23.12.1999 Sandra Barcham
.           Recompiled for change to FMSCCAFD
.           srf 646145
. VF.00.01  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
.-------------------------------------------------------
LASTSEQ   DIM       30
SUBTOTAL  FORM      12.2
REPTOTAL  FORM      12.2
COMMAND   DIM       80
ISBUILD   INIT      "isbuild "
TMPFILE   DIM       8
TMPKEY    INIT      " 47 U1-46"
INVDATE   DIM       10
RECDATE   DIM       10
PRCDATE   DIM       10
.
LEDGCOST  DIM       14
SCANCNT   FORM      8
EXTRCNT   FORM      8
STRLCC    DIM       14
ENDLCC    DIM       14
STRCRD    DIM       5
ENDCRD    DIM       5
STRDEP    DIM       30
ENDDEP    DIM       30
STRRDT    DIM       8
ENDRDT    DIM       8
STRIDT    DIM       8
ENDIDT    DIM       8
STRPDT    DIM       8
ENDPDT    DIM       8
.
EXTRTEMP  IFILE     SQL, FIXED=47, KEY="U1-46"
.
TEMPSEQ   DIM       30
TEMPDTRC  DIM       8
TEMPCRD   DIM       5
TEMPUNIQ  DIM       3
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS67
.   Function      :   Invoice Tracking Reports                
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSTRKFD/INC
          INC       FMSCCAFD/INC
          INC       FMSCONFD/INC
          INC       FMSLMAFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMPDT   DIM      10 * Scr 00 Fld     8
TOPDT     DIM      10 * Scr 00 Fld     9
FROMRDT   DIM      10 * Scr 00 Fld    10
TORDT     DIM      10 * Scr 00 Fld    11
FROMIDT   DIM      10 * Scr 00 Fld    12
TOIDT     DIM      10 * Scr 00 Fld    13
INCPROC   FORM      1 * Scr 00 Fld    14
REPTSEQ   FORM      1 * Scr 00 Fld    15
RSEQDESC  DIM      15 * Scr 00 Fld    16
FROMDEP   DIM      30 * Scr 00 Fld    17
TODEP     DIM      30 * Scr 00 Fld    18
REPTSUB   FORM      1 * Scr 00 Fld    19
FROMCRD   DIM      40 * Scr 00 Fld    20
TOCRD     DIM      40 * Scr 00 Fld    21
FROMLCC   DIM      40 * Scr 00 Fld    22
TOLCC     DIM      40 * Scr 00 Fld    23
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS67"
PRGNAM    INIT      "Invoice Tracking Reports                "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      REDCON00
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening apstrkaf";
          OPEN      APSTRKA1,"apstrkaf"
          DISPLAY   *P56:24,"Opening apstrkaf";
          OPEN      APSTRKA2,"apstrkaf"
          DISPLAY   *P56:24,"Opening apstrkaf";
          OPEN      APSTRKA3,"apstrkaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 45",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudcc";
            OPEN      FMSAUDCC,"fmsaudcc"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmsccaaf";
          OPEN      FMSCCAA1,"fmsccaaf"
          DISPLAY   *P56:24,"Opening fmsccaaf";
          OPEN      FMSCCAA2,"fmsccaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
          MOVE      SP70,FROMPDT 
          MOVE      SP70,TOPDT   
          MOVE      SP70,FROMRDT 
          MOVE      SP70,TORDT   
          MOVE      SP70,FROMIDT 
          MOVE      SP70,TOIDT   
          MOVE      ZERO,INCPROC 
          MOVE      ZERO,REPTSEQ 
          MOVE      SP70,RSEQDESC
          MOVE      SP70,FROMDEP 
          MOVE      SP70,TODEP   
          MOVE      ZERO,REPTSUB 
          MOVE      SP70,FROMCRD 
          MOVE      SP70,TOCRD   
          MOVE      SP70,FROMLCC 
          MOVE      SP70,TOLCC   
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                           PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106,PS00L107,PS00L108,PS00L109:
                            PS00L110,PS00L111,PS00L112,PS00L113:
                            PS00L114,PS00L115,PS00L116
          GOTO     PS00L999
.
PS00L101
          MOVE      FROMPDT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TOPDT,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FROMRDT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      TORDT,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      FROMIDT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      TOIDT,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCPROC,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      RSEQDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      FROMDEP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      TODEP,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      REPTSUB,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      FROMCRD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      TOCRD,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      FROMLCC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      TOLCC,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                           SF00L006,SF00L006,SF00L006,SF00L103:
                            SF00L006,SF00L104,SF00L006,SF00L105:
                            SF00L006,SF00L106,SF00L107,SF00L006:
                            SF00L108,SF00L006,SF00L109,SF00L110:
                            SF00L006,SF00L111,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                           SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L104,SF00L020,SF00L105:
                            SF00L020,SF00L106,SF00L107,SF00L020:
                            SF00L108,SF00L020,SF00L109,SF00L110:
                            SF00L020,SF00L111,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPDT   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RPDAT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMPDT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPDT,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TORDT   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RRDAT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMRDT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TORDT,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOIDT   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RIDAT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMIDT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOIDT,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,INCPROC 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCPROC,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,RSEQDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KRSEQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      RSEQDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODEP   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RDEPT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMDEP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODEP,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L109
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,REPTSUB 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      REPTSUB,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCRD   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RCRED000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
            BRANCH    EXIT,SF00L110,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCRD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCRD,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L111
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOLCC   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RLCST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
            BRANCH    EXIT,SF00L111,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMLCC,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOLCC,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Read Control File
.----------------------------------------------------------------------
REDCON00  CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          RETURN
.
.----------------------------------------------------------------------
. Read Control File
.----------------------------------------------------------------------
SETSCR00  MOVE     SP70,STRLCC
          MOVE     "~~~~~~~~~~~~~~~",ENDLCC
          MOVE     "Start ",FROMLCC
          MOVE     "Finish",TOLCC
.
          MOVE     SP70,STRCRD
          MOVE     "~~~~~",ENDCRD
          MOVE     "Start ",FROMCRD
          MOVE     "Finish",TOCRD
.
          MOVE     SP70,STRDEP
          MOVE     "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",ENDDEP
          MOVE     "Start ",FROMDEP
          MOVE     "Finish",TODEP
.
          MOVE     SP70,STRPDT
          MOVE     "99999999",ENDPDT
          MOVE     "Start ",FROMPDT
          MOVE     "Finish",TOPDT
.
          MOVE     SP70,STRRDT
          MOVE     "99999999",ENDRDT
          MOVE     "Start ",FROMRDT
          MOVE     "Finish",TORDT
.
          MOVE     SP70,STRIDT
          MOVE     "99999999",ENDIDT
          MOVE     "Start ",FROMIDT
          MOVE     "Finish",TOIDT
.
          MOVE     ZERO,INCPROC
          MOVE     ONE,REPTSEQ
          MOVE     "Date Received    ",RSEQDESC
          RETURN
.
.------------------------------------------------------------
. Print Invoice Tracking Report
.------------------------------------------------------------
REPT0000  CALL     EXTR0000
          IF       EXTRCNT=0
            BEEP
            MOVE     "No Records Extracted - ",DISPMSG
            CALL     MESSAGE1
            GOTO     REPT9999
          ENDIF
          CLOCK    TIME,CTIMEIS
          MOVE     ZERO,CPAGENO
          MOVE     ZERO,SUBTOTAL
          MOVE     ZERO,REPTOTAL
          DISPLAY  *P1:24,*EL,"Printing Page ..."
          MOVE     "99",CLNO
          PACK     KEY46,SP70
          MOVE     SP70,LASTSEQ
          READ     EXTRTEMP,KEY46;;
REPT1000  READKS   EXTRTEMP;TEMPSEQ,TEMPDTRC,TEMPCRD,TEMPUNIQ
          GOTO     REPT9000 IF OVER
.
          PACK     KEY16,TEMPDTRC,TEMPCRD,TEMPUNIQ,SP70
          CALL     RDAPTK2
          BRANCH   OVRCD,REPT1000
.
          COMPARE  ZERO,REPTSUB
          GOTO     REPT1100 IF EQUAL
          MATCH    LASTSEQ,TEMPSEQ
          IF       !@EQUAL
            IF       CPAGENO<>0
              CALL     UND132
              PRINT    "Sub Total : ",LASTSEQ,*116,SUBTOTAL
              CALL     UND132
              ADD      ONE,CLNO
            ENDIF
            MOVE     ZERO,SUBTOTAL
            MOVE     TEMPSEQ,LASTSEQ
          ENDIF
.
REPT1100  COMPARE  "55",CLNO
          CALL     HEAD0000 IF NOT LESS
.
          MOVE     "/",KEY1
          PACK     LEDGCOST,APTKLED,KEY1,APTKCCEN,SP70
          PACK     KEY14,APTKLED,APTKCCEN,SP70
          CALL     RDFMCC1
          PACK     KEY5,APTKCRD,SP70
          CALL     RDAPMA1
          UNPACK   APTKDTRC,CCENT,CYEAR,CMON,CDAY
          CALL     PACDATE
          MOVE     CPCDATE,RECDATE
          UNPACK   APTKDTIN,CCENT,CYEAR,CMON,CDAY
          CALL     PACDATE
          MOVE     CPCDATE,INVDATE
          UNPACK   APTKDTPR,CCENT,CYEAR,CMON,CDAY
          CALL     PACDATE
          MOVE     CPCDATE,PRCDATE
.
          PRINT    RECDATE,SP1,INVDATE,SP1,APTKCRD,SP1,APMACN1,SP1:
                   LEDGCOST,SP1,FMCCDESC
          PRINT    *44,APTKREF,SP1,APTKDEPT,SP1,APTKORD,SP1,PRCDATE,SP1,APTKBAT:
                       APTKAMT
          ADD      "2",CLNO
          ADD      APTKAMT,SUBTOTAL
          ADD      APTKAMT,REPTOTAL
.
          GOTO     REPT1000
.
REPT9000  CALL     UND132
          IF       REPTSUB=1
            PRINT    "Sub Total : ",LASTSEQ,*116,SUBTOTAL
            CALL     UND132
          ENDIF
          PRINT    "Report Total",*116,REPTOTAL
          CALL     UND132
          PRINT    *40,"****** End of Report ******"
.
REPT9999  CALL     KILTMP00
          RETURN
.------------------------------------------------------------
. Print Heading
.------------------------------------------------------------
HEAD0000  CALL     HEAD132
          CALL     UND132
          PRINT    "Date Rec.  Inv. Date  Creditor             ":
                   "                Ledger/Cost Centre"
          PRINT    "                                           ":
                   "Inv. Reference  Department                 ":
                   "      Order  Processed  Batch          Amount"
          CALL     UND132
          DISPLAY  *P30:24,CPAGENO
          MOVE     "6",CLNO
          RETURN
.------------------------------------------------------------
. Extract & Sort Invoice Tracking Details
.------------------------------------------------------------
EXTR0000  CALL     MAKTMP00
          MOVE     ZERO,EXTRCNT
          MOVE     ZERO,SCANCNT
          DISPLAY  *P1:24,*EL,"Extracting Details ..."
          PACK     KEY16,STRRDT,SP70
          CALL     RSAPTK2
EXTR1000  CALL     RKAPTK2
          BRANCH   OVRCD,EXTR9999
          MATCH    APTKDTRC,ENDRDT
          GOTO     EXTR9999 IF LESS
          ADD      ONE,SCANCNT
          IF       SCANCNT%1000=0
            DISPLAY  *P40:24,SCANCNT
          ENDIF
          CALL     RANGE000
          BRANCH   EXIT,EXTR1000
.
          CALL     WRTMP000
          GOTO     EXTR1000
.
EXTR9999  RETURN
.------------------------------------------------------------
. Check Record in Range to be Printed
.------------------------------------------------------------
RANGE000  MATCH    STRIDT,APTKDTIN
          GOTO     RANGE900 IF LESS
          MATCH    APTKDTIN,ENDIDT
          GOTO     RANGE900 IF LESS
.
          IF       INCPROC=0
            MATCH    SP70,APTKBAT
            GOTO     RANGE900 IF NOT EQUAL
          ENDIF
.
          MATCH    STRPDT,APTKDTPR
          GOTO     RANGE900 IF LESS
          MATCH    APTKDTPR,ENDPDT
          GOTO     RANGE900 IF LESS
.
          MATCH    STRCRD,APTKCRD
          GOTO     RANGE900 IF LESS
          MATCH    APTKCRD,ENDCRD
          GOTO     RANGE900 IF LESS
.
          MATCH    STRDEP,APTKDEPT
          GOTO     RANGE900 IF LESS
          MATCH    APTKDEPT,ENDDEP
          GOTO     RANGE900 IF LESS
.
          PACK     LEDGCOST,APTKLED,APTKCCEN,SP70
          MATCH    STRLCC,LEDGCOST
          GOTO     RANGE900 IF LESS
          MATCH    LEDGCOST,ENDLCC
          GOTO     RANGE900 IF LESS
.
          MOVE     ZERO,EXIT
          GOTO     RANGE999
.
RANGE900  MOVE     ONE,EXIT
RANGE999  RETURN
.------------------------------------------------------------
. Write to Extract Temp File
.------------------------------------------------------------
WRTMP000  PACK     LEDGCOST,APTKLED,APTKCCEN,SP70
          MOVE     SP70,TEMPSEQ
          LOAD     TEMPSEQ,REPTSEQ,APTKDTRC,APTKDTIN,APTKORD,APTKCRD:
                                   LEDGCOST,APTKDEPT
          PACK     TEMPSEQ,TEMPSEQ,SP70
          PACK     KEY46,TEMPSEQ,APTKDTRC,APTKCRD,APTKUNIQ,SP70
          UNPACK   KEY46,TEMPSEQ,TEMPDTRC,TEMPCRD,TEMPUNIQ
          READ     EXTRTEMP,KEY46;ANS
          GOTO     WRTMP999 IF NOT OVER
          WRITE    EXTRTEMP,KEY46;TEMPSEQ,TEMPDTRC,TEMPCRD,TEMPUNIQ
          ADD      ONE,EXTRCNT
WRTMP999  RETURN
.
MAKTMP00  MOVE     "APS67T",KEY6
          PACK     TMPFILE,KEY6,PORT
          REP      " 0",TMPFILE
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     EXTRTEMP,TMPFILE
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE     EXTRTEMP,DELETE
          ENDIF
          PACK     COMMAND,ISBUILD,TMPFILE,TMPKEY,SP70
          EXECUTE  COMMAND,TASKID
          OPEN     EXTRTEMP,TMPFILE
          RETURN
.
KILTMP00  CLOSE     EXTRTEMP,DELETE
          RETURN
.----------------------------------------
. Enter Date Range
.----------------------------------------
RPDAT000   MOVE     "    8",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RPDAT100
           MATCH    SP2,CDAY
           GOTO     RPDAT100 IF EQUAL
           PACK     STRPDT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",STRPDT
           CALL     PACDATE
           MOVE     CPCDATE,FROMPDT
           GOTO     RPDAT140
RPDAT100   MOVE     "Start             ",FROMPDT
           MOVE     SP70,STRPDT
.
RPDAT140   MOVE     FROMPDT,VAR
           CALL     DISPITEM
.
RPDAT150   MOVE     "    9",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RPDAT200
           MATCH    SP2,CDAY
           GOTO     RPDAT200 IF EQUAL
           PACK     ENDPDT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",ENDPDT
           CALL     PACDATE
           MOVE     CPCDATE,TOPDT
           MATCH    STRPDT,ENDPDT
           GOTO     RPDAT999 IF EQUAL
           GOTO     RPDAT999 IF NOT LESS
           BEEP
           MOVE     "To Date Must Be > From Date - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RPDAT000
.
RPDAT200   MOVE     "Finish             ",TOPDT
           MOVE     "99999999",ENDPDT
.
RPDAT999   MOVE     "    8",FLDID
           CALL     GETPOSIT
           RETURN
.
.----------------------------------------
. Enter Date Range
.----------------------------------------
RRDAT000   MOVE     "   10",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RRDAT100
           MATCH    SP2,CDAY
           GOTO     RRDAT100 IF EQUAL
           PACK     STRRDT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",STRRDT
           CALL     PACDATE
           MOVE     CPCDATE,FROMRDT
           GOTO     RRDAT140
RRDAT100   MOVE     "Start             ",FROMRDT
           MOVE     SP70,STRRDT
.
RRDAT140   MOVE     FROMRDT,VAR
           CALL     DISPITEM
.
RRDAT150   MOVE     "   11",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RRDAT200
           MATCH    SP2,CDAY
           GOTO     RRDAT200 IF EQUAL
           PACK     ENDRDT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",ENDRDT
           CALL     PACDATE
           MOVE     CPCDATE,TORDT
           MATCH    STRRDT,ENDRDT
           GOTO     RRDAT999 IF EQUAL
           GOTO     RRDAT999 IF NOT LESS
           BEEP
           MOVE     "To Date Must Be > From Date - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RRDAT000
.
RRDAT200   MOVE     "Finish             ",TORDT
           MOVE     "99999999",ENDRDT
.
RRDAT999   MOVE     "   10",FLDID
           CALL     GETPOSIT
           RETURN
.
.----------------------------------------
. Enter Date Range
.----------------------------------------
RIDAT000   MOVE     "   12",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RIDAT100
           MATCH    SP2,CDAY
           GOTO     RIDAT100 IF EQUAL
           PACK     STRIDT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",STRIDT
           CALL     PACDATE
           MOVE     CPCDATE,FROMIDT
           GOTO     RIDAT140
RIDAT100   MOVE     "Start             ",FROMIDT
           MOVE     SP70,STRIDT
.
RIDAT140   MOVE     FROMIDT,VAR
           CALL     DISPITEM
.
RIDAT150   MOVE     "   13",FLDID
           CALL     GETPOSIT
           MOVE     SP70,CDAY
           MOVE     CMM,CMON
           MOVE     CYY,CYEAR
           MOVE     CCC,CCENT
           CALL     KEYDATE
           BRANCH   OVRCD,RIDAT200
           MATCH    SP2,CDAY
           GOTO     RIDAT200 IF EQUAL
           PACK     ENDIDT,CCENT,CYEAR,CMON,CDAY
           REP      " 0",ENDIDT
           CALL     PACDATE
           MOVE     CPCDATE,TOIDT
           MATCH    STRIDT,ENDIDT
           GOTO     RIDAT999 IF EQUAL
           GOTO     RIDAT999 IF NOT LESS
           BEEP
           MOVE     "To Date Must Be > From Date - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RIDAT000
.
RIDAT200   MOVE     "Finish             ",TOIDT
           MOVE     "99999999",ENDIDT
.
RIDAT999   MOVE     "   12",FLDID
           CALL     GETPOSIT
           RETURN
.
.------------------------------------------------------------
. Enter Report Sequence
.------------------------------------------------------------
KRSEQ000   CALL      DRSEQ000
           MOVE      ZERO,REPTSEQ
KRSEQ001   KEYIN     *PCCOL:CVERT,*V2LON,*RV,REPTSEQ
           BRANCH    REPTSEQ,KRSEQ010,KRSEQ020,KRSEQ030,KRSEQ040,KRSEQ050:
                             KRSEQ060
           BEEP
           GOTO      KRSEQ001
.
KRSEQ010   MOVE      "Date Received ",RSEQDESC
           GOTO      KRSEQ999
.
KRSEQ020   MOVE      "Invoice Date",RSEQDESC
           GOTO      KRSEQ999
.
KRSEQ030   MOVE      "Order Number",RSEQDESC
           GOTO      KRSEQ999
.
KRSEQ040   MOVE      "Creditor Code",RSEQDESC
           GOTO      KRSEQ999
.
KRSEQ050   MOVE      "Ledger/Cost Centre",RSEQDESC
           GOTO      KRSEQ999
.
KRSEQ060   MOVE      "Department",RSEQDESC
           GOTO      KRSEQ999
.
KRSEQ999   CALL      PUTSCR00
           RETURN
.
DRSEQ000  MOVE      "13",HTOP
          MOVE      "55",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
.
          BOXCLR    HLEF,HTOP,HRIG,HBOT
          BOX       16,HLEF,HTOP,HRIG,HBOT
          DISPLAY   *P60:14,*V2LON,*ULON,"Report Sequence",*HOFF:
                    *P57:15,*V2LON,"1. ",*HOFF,"Date Received":
                    *P57:16,*V2LON,"2. ",*HOFF,"Invoice Date":
                    *P57:17,*V2LON,"3. ",*HOFF,"Order No.":
                    *P57:18,*V2LON,"4. ",*HOFF,"Creditor Code":
                    *P57:19,*V2LON,"5. ",*HOFF,"Ledger/Cost Centre":
                    *P57:20,*V2LON,"6. ",*HOFF,"Department"
          RETURN
.
.--------------------------------------------------
. Enter Range
.--------------------------------------------------
RDEPT000   MOVE     "   17",FLDID
           CALL     GETPOSIT
           MOVE     SP70,FROMDEP
           KEYIN    *PCCOL:CVERT,*V2LON,*RV,FROMDEP
           ENDSET   FROMDEP
           APPEND   SP70,FROMDEP
           RESET    FROMDEP
           MATCH    SP70,FROMDEP
           GOTO     RDEPT100 IF EQUAL
           MOVE     FROMDEP,STRDEP
           GOTO     RDEPT140
.
RDEPT100   MOVE     "Start             ",FROMDEP
           MOVE     SP70,STRDEP
.
RDEPT140   MOVE     FROMDEP,VAR
           CALL     DISPITEM
.
RDEPT150   MOVE     "   18",FLDID
           CALL     GETPOSIT
           MOVE     SP70,TODEP
           KEYIN    *PCCOL:CVERT,*V2LON,*RV,TODEP
           ENDSET   TODEP
           APPEND   SP70,TODEP
           RESET    TODEP
           MATCH    SP70,TODEP
           GOTO     RDEPT200 IF EQUAL
           MOVE     TODEP,ENDDEP
           MATCH    STRDEP,ENDDEP
           GOTO     RDEPT999 IF EQUAL
           GOTO     RDEPT999 IF NOT LESS
           BEEP
           MOVE     "To Department Must Be > From Department - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RDEPT000
.
RDEPT200   MOVE     "Finish             ",TODEP
           MOVE     Z70,ENDDEP
.
RDEPT999   MOVE     "   17",FLDID
           CALL     GETPOSIT
           RETURN
.
.--------------------------------------------------
. Enter Range
.--------------------------------------------------
RCRED000   MOVE     "   20",FLDID
           CALL     GETPOSIT
           CALL     KAPMAA00
           BRANCH   EXIT,RCRED100,RCRED999
           MOVE     APMACRD,STRCRD
           PACK     FROMCRD,APMACRD,SP1,APMACN1
           GOTO     RCRED140
RCRED100   MOVE     "Start             ",FROMCRD
           MOVE     SP70,STRCRD
.
RCRED140   MOVE     FROMCRD,VAR
           CALL     DISPITEM
.
RCRED150   MOVE     "   21",FLDID
           CALL     GETPOSIT
           CALL     KAPMAA00
           BRANCH   EXIT,RCRED200,RCRED999
           MOVE     APMACRD,ENDCRD
           PACK     TOCRD,APMACRD,SP1,APMACN1
           MATCH    STRCRD,ENDCRD
           GOTO     RCRED999 IF EQUAL
           GOTO     RCRED999 IF NOT LESS
           BEEP
           MOVE     "To Creditor Must Be > From Creditor - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RCRED000
.
RCRED200   MOVE     "Finish             ",TOCRD
           MOVE     Z70,ENDCRD
.
RCRED999   MOVE     "   20",FLDID
           CALL     GETPOSIT
           RETURN
.
.--------------------------------------------------
. Enter Range
.--------------------------------------------------
RLCST000   MOVE     "   22",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
           CALL     ECOST000
           BRANCH   EXIT,RLCST100,RLCST999
.
           PACK     STRLCC,FMCCLEDG,FMCCCOCE,SP70
           STRIP    LEDGCOST
           PACK     FROMLCC,LEDGCOST,SP1,FMCCDESC,SP70
.
           GOTO     RLCST140
RLCST100   MOVE     "Start             ",FROMLCC
           MOVE     SP70,STRLCC
.
RLCST140   MOVE     FROMLCC,VAR
           CALL     DISPITEM
.
RLCST150   MOVE     "   23",FLDID
           CALL     GETPOSIT
           MOVE     SP70,VAR
           CALL     DISPITEM
           CALL     ECOST000
           BRANCH   EXIT,RLCST200,RLCST999
.
           PACK     ENDLCC,FMCCLEDG,FMCCCOCE,SP70
           STRIP    LEDGCOST
           PACK     TOLCC,LEDGCOST,SP1,FMCCDESC,SP70
.
           MATCH    STRLCC,ENDLCC
           GOTO     RLCST999 IF EQUAL
           GOTO     RLCST999 IF NOT LESS
           BEEP
           MOVE     "To Ledger/CC Must Be > From Ledger/CC - ",DISPMSG
           CALL     MESSAGE1
           GOTO     RLCST000
.
RLCST200   MOVE     "Finish             ",TOLCC
           MOVE     Z70,ENDLCC
.
RLCST999   MOVE     "   22",FLDID
           CALL     GETPOSIT
           RETURN
.------------------------------------------------------------
. Enter Ledger & Cost Centre
.------------------------------------------------------------
ECOST000  MOVE     ZERO,CKEYTYP
          CALL     KFMLAA00
          BRANCH   EXIT,ECOST999,ECOST999
          MOVE     "/",KEY1
          PACK     VAR,FMLALEDG,KEY1,SP70
          CALL     DISPITEM
          ADD      "3",CCOL
          MOVE     FMLALEDG,FMCCLEDG
          CALL     KFMCCA00
          SUB      "3",CCOL
          BRANCH   EXIT,ECOST999,ECOST999
          MOVE     "/",KEY1
          PACK     LEDGCOST,FMLALEDG,KEY1,FMCCCOCE,SP70
ECOST999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCKIKY    
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       APSTRKIO/INC
          INC       FMSCCAIO/INC
          INC       FMSCCAKY    
          INC       FMSCODCD    
          INC       FMSCONIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
.
          INC       STDGENCD
.
