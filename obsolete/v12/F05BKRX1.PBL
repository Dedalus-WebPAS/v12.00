.*****************************************************************************
.*    Program      : F05BKRX1                                                *
.*    Description  : Conversion bokrx1af to new File layout                  *
.*                                                                           *
.*    Author       : Peter Vela                                              *
.*    Date         : 30/07/2014                                              *
.*    Modifications: V10.05.01 Peter Vela     CAR 299131/283332              *
.*                 :           Created program                               *
.*****************************************************************************
.
.  Global change F11BKRX1  eg F57PTDOC
.  Global change BOKRX1FD  eg PATDOCFD (new layout)
.  Global change bokrx1af  eg patdoctf
.  Global change BOKRX1A1  eg PATDOCT1
.  Global change KEY8     eg KEY8
.  Global change WRBKRX11  eg WRDOCT1
.  Global change sbkrx1af  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE
.   
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
OLDFILE    IFILE    SQL, FIXED=588, KEY="U1-8"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.BKRXBNUM  DIM       8      8        1     Booking Number
.BKRXPOWD  DIM       3      3        9     Post-Op Ward (patwr1af)
.BKRXADWD  DIM       3      3        12    Admitting Ward (Cat ap)
.BKRXCDTE  DIM       8      8        15    Contact Date (ccyymmdd)
.BKRXPSTY  DIM       1      1        23    Parent Staying (0=NO,1=YES)
.BKRXCNDT  DIM       8      8        24    Confirmation Date (ccyymmdd)
.BKRXUDF1  DIM       3      3        32    Canc Booking Reason W/L (Cat BE)
.BKRXUDF2  DIM       3      3        35    Model of Care (Medical book Cat BF)
.BKRXUDF3  DIM       3      3        38    User Defined Field 3 (Cat BG)
.BKRXUDF4  DIM       3      3        41    User Defined Field 4 (Cat BH)
.BKRXUDF5  DIM       3      3        44    Intended Stay (Cat VI)
.BKRXUDD1  DIM       8      8        47    User Defined Date 1 (ccyymmdd)
.BKRXUDD2  DIM       8      8        55    User Defined Date 2 (ccyymmdd)
.BKRXUDD3  DIM       8      8        63    User Defined Date 3 (ccyymmdd)
.BKRXUDD4  DIM       8      8        71    User Defined Date 4 (ccyymmdd)
.BKRXUFF1  DIM       80     80       79    Procedure Description 1
.BKRXUFF2  DIM       80     80       159   Procedure Description 2
.BKRXUFF3  DIM       80     80       239   Procedure Description 3
.BKRXUFF4  DIM       80     80       319   User Defined Free Format 4
.BKRXEDC1  DIM       10     10       399   Extra Doctor Code 1 (pmshcpaf)
.BKRXEDC2  DIM       10     10       409   Extra Doctor Code 2 (pmshcpaf)
.BKRXEDC3  DIM       10     10       419   Extra Doctor Code 3 (pmshcpaf)
.BKRXODTE  DIM       8      8        429   Operation Date (ccyymmdd)
.BKRXOPRD  DIM       3      3        437   Operation Period (Cat SP)
.BKRXCRDT  DIM       8      8        440   Date record created (ccyymmdd)
.BKRXCRTM  DIM       8      8        448   Time record created (hh:mm:ss)
.BKRXWEBC  DIM       10     10       456   WEB User Id rec. creator (websecaf)
.BKRXLUPD  DIM       8      8        466   Last Update Date (ccyymmdd)
.BKRXLUPT  DIM       8      8        474   Last Update Time (hh:mm:ss)
.BKRXWEBU  DIM       10     10       482   WEB User Id rec. updater (websecaf)
.BKRXASRC  DIM       3      3        492   Admission Source (Category S)
.BKRXBLDT  DIM       3      3        495   Blood Type (category BO)
.BKRXCTTY  DIM       3      3        498   Contact Type (Letter No.-watletaf)
.BKRXSGBK  DIM       1      1        501   Surgical Booking (0=No 1=Yes)
.BKRXFORM  DIM       3      3        502   Forms (Cat VF)
.BKRXCNTM  DIM       8      8        505   Confirmation Time (hh:mm:ss)
.BKRXUDT1  DIM       8      8        513   User defined time 1 (hh:mm:ss)
.BKRXUDT2  DIM       8      8        521   User defined time 2 (hh:mm:ss)
.BKRXPOBD  DIM       3      3        529   Post-Op Bed (patwr1af)
.BKRXPOEC  DIM       1      1        532   Patient Online Eligibility Consent
.BKRXDIET  DIM       3      3        533   Diet (Cat DC)
.BKRXTRAN  DIM       3      3        536   Transport (Cat OB)
.BKRXATRN  DIM       3      3        539   Arrival Transport (Cat SI)
.BKRXANTY  DIM       3      3        542   Anaesthetic Type (Cat OA)
.BKRXESOP  DIM       5      5        545   Estimated Op Time
OLDXSPAR  DIM       38     38       550   Spare
.
.End of Record                      588
.
. The following fields are stored in the spare variable
.
.BKRXEABR  DIM       3      3        550   Early Booking Reason (CAT b1)
.BKRXAUBY  DIM       3      3        553   Authorised By (CAT b2)
.BKRXEAID  DIM       10     10       556   Web User ID that added the Early
.                                          Booking Reason
.
.                                     ******** copy the new FD here *******
.
BOKRX1A1   IFILE    SQL, FIXED=626, KEY="U1-8"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
BKRXBNUM  DIM       8      8        1     Booking Number
BKRXPOWD  DIM       3      3        9     Post-Op Ward (patwr1af)
BKRXADWD  DIM       3      3        12    Admitting Ward (Cat ap)
BKRXCDTE  DIM       8      8        15    Contact Date (ccyymmdd)
BKRXPSTY  DIM       1      1        23    Parent Staying (0=NO,1=YES)
BKRXCNDT  DIM       8      8        24    Confirmation Date (ccyymmdd)
BKRXUDF1  DIM       3      3        32    Canc Booking Reason W/L (Cat BE)
BKRXUDF2  DIM       3      3        35    Model of Care (Medical book Cat BF)
BKRXUDF3  DIM       3      3        38    User Defined Field 3 (Cat BG)
BKRXUDF4  DIM       3      3        41    User Defined Field 4 (Cat BH)
BKRXUDF5  DIM       3      3        44    Intended Stay (Cat VI)
BKRXUDD1  DIM       8      8        47    User Defined Date 1 (ccyymmdd)
BKRXUDD2  DIM       8      8        55    User Defined Date 2 (ccyymmdd)
BKRXUDD3  DIM       8      8        63    User Defined Date 3 (ccyymmdd)
BKRXUDD4  DIM       8      8        71    User Defined Date 4 (ccyymmdd)
BKRXUFF1  DIM       80     80       79    Procedure Description 1
BKRXUFF2  DIM       80     80       159   Procedure Description 2
BKRXUFF3  DIM       80     80       239   Procedure Description 3
BKRXUFF4  DIM       80     80       319   User Defined Free Format 4
BKRXEDC1  DIM       10     10       399   Extra Doctor Code 1 (pmshcpaf)
BKRXEDC2  DIM       10     10       409   Extra Doctor Code 2 (pmshcpaf)
BKRXEDC3  DIM       10     10       419   Extra Doctor Code 3 (pmshcpaf)
BKRXODTE  DIM       8      8        429   Operation Date (ccyymmdd)
BKRXOPRD  DIM       3      3        437   Operation Period (Cat SP)
BKRXCRDT  DIM       8      8        440   Date record created (ccyymmdd)
BKRXCRTM  DIM       8      8        448   Time record created (hh:mm:ss)
BKRXWEBC  DIM       10     10       456   WEB User Id rec. creator (websecaf)
BKRXLUPD  DIM       8      8        466   Last Update Date (ccyymmdd)
BKRXLUPT  DIM       8      8        474   Last Update Time (hh:mm:ss)
BKRXWEBU  DIM       10     10       482   WEB User Id rec. updater (websecaf)
BKRXASRC  DIM       3      3        492   Admission Source (Category S)
BKRXBLDT  DIM       3      3        495   Blood Type (category BO)
BKRXCTTY  DIM       3      3        498   Contact Type (Letter No.-watletaf)
BKRXSGBK  DIM       1      1        501   Surgical Booking (0=No 1=Yes)
BKRXFORM  DIM       3      3        502   Forms (Cat VF)
BKRXCNTM  DIM       8      8        505   Confirmation Time (hh:mm:ss)
BKRXUDT1  DIM       8      8        513   User defined time 1 (hh:mm:ss)
BKRXUDT2  DIM       8      8        521   User defined time 2 (hh:mm:ss)
BKRXPOBD  DIM       3      3        529   Post-Op Bed (patwr1af)
BKRXPOEC  DIM       1      1        532   Patient Online Eligibility Consent
BKRXDIET  DIM       3      3        533   Diet (Cat DC)
BKRXTRAN  DIM       3      3        536   Transport (Cat OB)
BKRXATRN  DIM       3      3        539   Arrival Transport (Cat SI)
BKRXANTY  DIM       3      3        542   Anaesthetic Type (Cat OA)
BKRXESOP  DIM       5      5        545   Estimated Op Time
BKRXEABR  DIM       3      3        550   Early Booking Reason (Cat b1)
BKRXAUBY  DIM       3      3        553   Authorised By (Cat b2)
BKRXEAID  DIM       10     10       556   Web User ID Early Booking Reason
BKRXDROR  DIM       3      3        566   Drug Order (Cat Ba)
BKRXUDF6  DIM       3      3        569   User Defined Field 6 (Cat Bb)
BKRXUDF7  DIM       3      3        572   User Defined Field 7 (Cat Bc)
BKRXPACA  DIM       1      1        575   PAC Attended 1 = Yes 0 = No
BKRXSPAR  DIM       50     50       576   Spare
.
.End of Record                      626
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
DISNUM    FORM      4
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION BOKRX1FD"
PRGID     INIT      "F05BKRX1"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000              * run c-isam fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN2000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN2000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
.
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,"bokrx1af"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat bokrx1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sbkrx1af.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat bokrx1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sbkrx1af.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "bokrx1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sbkrx1af",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "bokrx1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 626 UC1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
.          PACK      CMDLINE,SP60,SP60
.          CLEAR     CMDLINE
.          APPEND    "isadd ",CMDLINE
.          APPEND    NEWFILE,CMDLINE
.          APPEND    " UCxx-xx,x-xx",CMDLINE
.          APPEND    SP60,CMDLINE
.          RESET     CMDLINE
.          EXECUTE   CMDLINE,TASKID
.
          OPEN      BOKRX1A1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY8,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000 | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      SP70,BKRXDROR
          MOVE      SP70,BKRXUDF6
          MOVE      SP70,BKRXUDF7
          MOVE      SP70,BKRXPACA
          MOVE      SP70,BKRXSPAR
.                                               * Pack key here
          PACK      KEY8,BKRXBNUM,SP70
          CALL      WRBKRX11                    * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     BOKRX1A1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sbkrx1af*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat bokrx1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding bokrx1af.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE
.
READSOLD  RESET     KEY8
          READ      OLDFILE,KEY8;;
          RETURN
.
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;BKRXBNUM,BKRXPOWD,BKRXADWD,BKRXCDTE,BKRXPSTY:
                        BKRXCNDT,BKRXUDF1,BKRXUDF2,BKRXUDF3,BKRXUDF4,BKRXUDF5:
                        BKRXUDD1,BKRXUDD2,BKRXUDD3,BKRXUDD4,BKRXUFF1,BKRXUFF2:
                        BKRXUFF3,BKRXUFF4,BKRXEDC1,BKRXEDC2,BKRXEDC3,BKRXODTE:
                        BKRXOPRD,BKRXCRDT,BKRXCRTM,BKRXWEBC,BKRXLUPD,BKRXLUPT:
                        BKRXWEBU,BKRXASRC,BKRXBLDT,BKRXCTTY,BKRXSGBK,BKRXFORM:
                        BKRXCNTM,BKRXUDT1,BKRXUDT2,BKRXPOBD,BKRXPOEC,BKRXDIET:
                        BKRXTRAN,BKRXATRN,BKRXANTY,BKRXESOP,OLDXSPAR
          GOTO      OVERCOND IF OVER
          UNPACK    OLDXSPAR,BKRXEABR,BKRXAUBY,BKRXEAID
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRBKRX11  RESET     KEY8
          WRITE     BOKRX1A1,KEY8;BKRXBNUM,BKRXPOWD,BKRXADWD,BKRXCDTE,BKRXPSTY:
                        BKRXCNDT,BKRXUDF1,BKRXUDF2,BKRXUDF3,BKRXUDF4,BKRXUDF5:
                        BKRXUDD1,BKRXUDD2,BKRXUDD3,BKRXUDD4,BKRXUFF1,BKRXUFF2:
                        BKRXUFF3,BKRXUFF4,BKRXEDC1,BKRXEDC2,BKRXEDC3,BKRXODTE:
                        BKRXOPRD,BKRXCRDT,BKRXCRTM,BKRXWEBC,BKRXLUPD,BKRXLUPT:
                        BKRXWEBU,BKRXASRC,BKRXBLDT,BKRXCTTY,BKRXSGBK,BKRXFORM:
                        BKRXCNTM,BKRXUDT1,BKRXUDT2,BKRXPOBD,BKRXPOEC,BKRXDIET:
                        BKRXTRAN,BKRXATRN,BKRXANTY,BKRXESOP,BKRXEABR,BKRXAUBY:
                        BKRXEAID,BKRXDROR,BKRXUDF6,BKRXUDF7,BKRXPACA,BKRXSPAR
          RETURN
.
          INC       STD001IO
