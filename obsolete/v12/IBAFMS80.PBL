. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS80                                             *
. * Desc      :   Budget Profile Maintenance                           *
. **********************************************************************
. * Date      :   17.09.1990                                           *
. * Author    :   B.G.Ackland (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.01  05.01.2000 Charles Handaya                               *
. *           Recompiled for Audit Files Date change                   *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS80
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                       COPY    : WHILE user wants to copy records DO
.                                      get copy to and from parametres
.                                      IF user wants to copy data
.                                           THEN copy desired records
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * FMS Acc. update variables
          INC       FMSUDADF           * FMS Budget Audit update variables
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSBPFFD/INC   * Budget Profile
          INC       FMSCSAFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
DONE      INIT      "1"
DZERO     INIT      "0"
CHANGE    INIT      "Change"
COPY      INIT      "Copy"
DELETE    INIT      "Delete"
INSERT    INIT      "Insert"
Z30       INIT      "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
.
ACCEPT    FORM      1                  * accept mode (1=on)
.
ALLLEDG   FORM      1                  * for copy mode
ALLYEAR   FORM      1                  * for copy mode
.
BALANCE   FORM      3.2
.
DIM40     DIM       40
.
FROMLEDG  DIM       2                  * from ledger for copy
FROMFYER  DIM       4                  * from financial year for copy
FROMBPRF  DIM       3                  * from budget profile
.
FLDESC    DIM       35
FFDESC    DIM       35
FPDESC    DIM       35
TLDESC    DIM       35
TFDESC    DIM       35
TPDESC    DIM       35
.
MODE      FORM      1
.
OPTNDESC  DIM       10
.
SKEY9     DIM       9
.
TOLEDG    DIM       2                  * To ledger for copy
TOFYER    DIM       4                  * To financial year for copy
TOBPRF    DIM       3                  * To budget profile
TOTAL     FORM      10.2               * to Check Percentages total 100
.
PRGID     INIT      "IBAFMS80"
PRGNAM    INIT      "Budget Profile Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      OPTN0000           * insert/modify/delete/copy/exit ?
          BRANCH    EXIT,ML9999
.
          COMPARE   FOUR,COPTION       * copy mode?
          GOTO      ML0200 IF NOT EQUAL
.
          CALL      COPY0000           * prccess copies
          GOTO      ML0100
.
ML0200    CALL      KLED0000
          BRANCH    EXIT,ML0100,ML0100
.
ML0210    CALL      KFYR0000
          BRANCH    EXIT,ML0200,ML0100
.
ML0220    CALL      PROC0000           * get entry
          BRANCH    EXIT,ML0210,ML0100 * exit option
.
          LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO * set up mode
          CALL      SCRA0000           * display screen A
.
          BRANCH    COPTION,ML1000,ML1000,ML2000
.
.---- add/modify data ----
.
ML1000    CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML0220        * don't save data
.
          CALL      POST0000           * post screen A data
          GOTO      ML0220             * get next entry
.
.---- delete data ----
.
ML2000    CALL      DELQST             * ok to delete (y/n/c) ?
          BRANCH    CEXIT,ML2100,ML0200,ML0100
.
ML2100    CALL      DELT0000           * delete screen A data
          GOTO      ML0220             * get next entry
.
ML9999    CHAIN     PGM                * chain back to menu
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
          CALL      OUDA0000                     * Open audit Files
.
          DISPLAY   *P56:24,"Opening fmsbpfaf";  * Budget Profile file
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsamaaf";          * Ledger file
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmslmaaf";          * Ledger file
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";          * Ledger Calendar
          OPEN      FMSLMCA1,"fmslmcaf"
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.* OPTN - Select option                          Called by ML0100        *
.*       Returns COPTION - 1 = insert 2 = change 3 = delete 4 = copy     *
.*************************************************************************
OPTN0000  DISPLAY  *P1:3,*EF:
                   *P1:4,*V2LON,"0",*P1:5,"1",*P1:6,"2",*P1:7,"3",*P1:8,"4":
                   *HOFF:
                   *P3:4,"= Exit":
                   *P3:5,"= Insert":
                   *P3:6,"= Change":
                   *P3:7,"= Delete":
                   *P3:8,"= Copy":
                   *P1:10,"Select Option :"
.
OPTN1000  KEYIN    *P17:10,*DV,UNDLN1,*P17:10,*V2LON,COPTION
.
          COMPARE  ZERO,COPTION    * Exit
          GOTO     OPTN9000 IF EQUAL
.
          COMPARE  "5",COPTION
          GOTO     OPTN1000 IF NOT LESS
.
          MOVE     FALSE,EXIT
          LOAD     OPTNDESC,COPTION,INSERT,CHANGE,DELETE,COPY
          DISPLAY  *P70:3,*V2LON,OPTNDESC
          GOTO     OPTN9999
.
OPTN9000  MOVE     TRUE,EXIT
.
OPTN9999  RETURN
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRA0000  DISPLAY   *P1:4,"    Ledger               : ",*V2LON,FMLALEDG:
                    *HOFF,SP4,FMLADESC,*EL;
          COMPARE   ZERO,FMLAPERS
          GOTO      SCRA0050 IF EQUAL
          UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:5,"    Financial Year       : ",*V2LON,FMLCYEAR:
                    *HOFF,SP1," Year Ending ",FMLC13DE,SP1,CPCDATE,*EL;
          GOTO      SCRA0090
.
SCRA0050  UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:5,"    Financial Year       : ",*V2LON,FMLCYEAR:
                    *HOFF,SP1," Year Ending ",FMLC12DE,SP1,CPCDATE,*EL;
.
SCRA0090  DISPLAY   *P1:6,"    Budget Profile Code  : ",*V2LON,FMBPCODE,*EF:
                    *P1:8," 1",*HOFF,". Description          : ",*V2LON:
                    *P1:9," 2",*HOFF,". ",FMLC01DE," %    : ",*V2LON:
                    *P1:10," 3",*HOFF,". ",FMLC02DE," %    : ",*V2LON:
                    *P1:11," 4",*HOFF,". ",FMLC03DE," %    : ",*V2LON:
                    *P1:12," 5",*HOFF,". ",FMLC04DE," %    : ",*V2LON:
                    *P1:13," 6",*HOFF,". ",FMLC05DE," %    : ",*V2LON:
                    *P1:14," 7",*HOFF,". ",FMLC06DE," %    : ",*V2LON:
                    *P1:15," 8",*HOFF,". ",FMLC07DE," %    : ",*V2LON:
                    *P1:16," 9",*HOFF,". ",FMLC08DE," %    : ",*V2LON:
                    *P1:17,"10",*HOFF,". ",FMLC09DE," %    : ",*V2LON:
                    *P1:18,"11",*HOFF,". ",FMLC10DE," %    : ",*V2LON:
                    *P1:19,"12",*HOFF,". ",FMLC11DE," %    : ",*V2LON:
                    *P1:20,"13",*HOFF,". ",FMLC12DE," %    : " 
          COMPARE   ZERO,FMLAPERS
          GOTO      SCRA0100 IF EQUAL
          DISPLAY   *P1:21,*V2LON,"14",*HOFF,". ",FMLC13DE," %    : ";
.         
SCRA0100  BRANCH    ACCEPT,SCRA9999    * accept mode
          DISPLAY   *P28:8,*V2LON,FMBPDESC:
                    *P28:9,*V2LON,FMBPPC1:
                    *P28:10,*V2LON,FMBPPC2:
                    *P28:11,*V2LON,FMBPPC3:
                    *P28:12,*V2LON,FMBPPC4:
                    *P28:13,*V2LON,FMBPPC5:
                    *P28:14,*V2LON,FMBPPC6:
                    *P28:15,*V2LON,FMBPPC7:
                    *P28:16,*V2LON,FMBPPC8:
                    *P28:17,*V2LON,FMBPPC9:
                    *P28:18,*V2LON,FMBPPC10:
                    *P28:19,*V2LON,FMBPPC11:
                    *P28:20,*V2LON,FMBPPC12
          COMPARE   ZERO,FMLAPERS
          GOTO      SCRA9000 IF EQUAL
          DISPLAY   *P28:21,*V2LON,FMBPPC13
SCRA9000  MOVE      "100.00",BALANCE
          DISPLAY   *P50:7,"Balance : ",*V2LON,BALANCE;
SCRA9999  RETURN
.******************************************************************************
.* DEFV - set up default variables               Called by SELA0000           *
.******************************************************************************
DEFV0000  MOVE      SP70,FMBPDESC      * clear description
          MOVE      ZERO,BALANCE
          MOVE      ZERO,FMBPPC1
          MOVE      ZERO,FMBPPC2
          MOVE      ZERO,FMBPPC3
          MOVE      ZERO,FMBPPC4
          MOVE      ZERO,FMBPPC5
          MOVE      ZERO,FMBPPC6
          MOVE      ZERO,FMBPPC7
          MOVE      ZERO,FMBPPC8
          MOVE      ZERO,FMBPPC9
          MOVE      ZERO,FMBPPC10
          MOVE      ZERO,FMBPPC11
          MOVE      ZERO,FMBPPC12
          MOVE      ZERO,FMBPPC13
.
DEFV9999  RETURN
.*************************************************************************
.* COPY - Copy a budget profile to another       Called by ML0200        *
.*        RETURNS : nothing 
.*************************************************************************
COPY0000  UNPACK    SP70,FROMLEDG,TOLEDG,FROMFYER,TOFYER,FROMBPRF,TOBPRF
          UNPACK    SP70,FLDESC,TLDESC
          UNPACK    SP70,FPDESC,TPDESC
          UNPACK    SP70,FFDESC,TFDESC
          MOVE      ZERO,ALLLEDG
          MOVE      ZERO,ALLYEAR
          MOVE      ZERO,MODE
          CALL      SCRB0000            * display screen
.
COPY0050  MOVE      "5",CVERT
          MOVE      "28",CCOL
          CALL      KLMAFM00            * keyin from ledger
          BRANCH    EXIT,COPY0500,COPY9999
.
          MOVE      FMLALEDG,FROMLEDG
          MOVE      FMLADESC,FLDESC
          DISPLAY   *P28:5,*V2LON,FROMLEDG,*HOFF,SP3,FLDESC
.
          COMPARE   ZERO,MODE               * Insert
          GOTO      COPY1000 IF EQUAL
.                                           * Modify So Check to Parameters
          COMPARE   ZERO,ALLLEDG
          GOTO      COPY0100 IF EQUAL
          MOVE      ZERO,ALLLEDG
          MOVE      ZERO,MODE
          GOTO      COPY4000
.
COPY0100  MATCH     FROMLEDG,TOLEDG         * same as toledg?
          GOTO      COPY7000 IF NOT EQUAL 
          MATCH     FROMFYER,TOFYER         * same as toledg?
          GOTO      COPY7000 IF NOT EQUAL
          DISPLAY   *P1:24,*B:
                    *EL,"Copy to and from details cannot be the same. ";
          CALL      HITENTER
          GOTO      COPY0050
.
COPY0500  COMPARE   ZERO,MODE               * Insert
          GOTO      COPY0600 IF EQUAL
          COMPARE   ONE,ALLYEAR
          GOTO      COPY0600 IF NOT EQUAL
          DISPLAY   *P1:24,*B:
                    *EL,"INVALID - Copy All Ledgers and All Years. ";
          CALL      HITENTER
          GOTO      COPY0050
.
COPY0600  MOVE      SP2,FROMLEDG
          MOVE      "All Ledgers",FLDESC
          MOVE      FROMLEDG,TOLEDG
          MOVE      FLDESC,TLDESC
          MOVE      SP10,TOBPRF
          MOVE      SP10,FROMBPRF 
          UNPACK    SP70,FPDESC,TPDESC
          MOVE      ONE,ALLLEDG
          DISPLAY   *P28:5,*V2LON,FROMLEDG,*HOFF,SP3,FLDESC:
                    *P28:7,*EL,*P28:8,*EL:
                    *P28:11,*V2LON,TOLEDG,*HOFF,SP3,TLDESC
.
          MATCH     FROMFYER,TOFYER         * years equal?
          GOTO      COPY1000 IF EQUAL
          BRANCH    MODE,COPY7000
.
COPY1000  MOVE      "6",CVERT
          MOVE      FROMLEDG,KEY2
          CALL      GLED0000
          CALL      KLMCFM00              * keyin fin. year
          BRANCH    EXIT,COPY1500,COPY9999
          MOVE      FMLCYEAR,FROMFYER
          UNPACK    SP70,FFDESC,TFDESC
          DISPLAY   *P28:6,*V2LON,FROMFYER,*HOFF,SP1,FFDESC
.
          COMPARE   ZERO,MODE               * Insert
          GOTO      COPY2000 IF EQUAL
.
          COMPARE   ZERO,ALLYEAR
          GOTO      COPY1100 IF EQUAL
          MOVE      ZERO,ALLYEAR
          MOVE      ZERO,MODE
          GOTO      COPY5000
.
COPY1100  MATCH     FROMLEDG,TOLEDG         * same as toledg?
          GOTO      COPY7000 IF NOT EQUAL 
          MATCH     FROMFYER,TOFYER         * same as toledg?
          GOTO      COPY7000 IF NOT EQUAL
          DISPLAY   *P1:24,*B:
                    *EL,"Copy from and to details cannot be the same. ";
          CALL      HITENTER
          GOTO      COPY1000
.
COPY1500  COMPARE   ZERO,ALLLEDG
          GOTO      COPY1600 IF EQUAL
          DISPLAY   *P1:24,*B:
                    *EL,"Cannot specify All Ledgers and All Years. ";
          CALL      HITENTER
          GOTO      COPY1000
.
COPY1600  MOVE      "All Years",FFDESC
          MOVE      "All Years",TFDESC
          MOVE      SP10,FROMFYER
          MOVE      SP10,TOFYER
          DISPLAY   *P28:6,*V2LON,FROMFYER,*HOFF,SP1,FFDESC:
                    *P28:7,*EL:
                    *P28:8,*EL:
                    *P28:12,*V2LON,TOFYER,*HOFF,SP1,TFDESC
          MOVE      SP10,TOBPRF
          MOVE      SP10,FROMBPRF 
          UNPACK    SP70,FPDESC,TPDESC
          MOVE      ONE,ALLYEAR
          BRANCH    MODE,COPY7000
.
COPY2000  BRANCH   ALLLEDG,COPY4000
          BRANCH   ALLYEAR,COPY4000
.
          MOVE     "7",CVERT
          MOVE     FROMLEDG,KEY2
          CALL     GLED0000
          PACK     KEY6,FMLALEDG,FROMFYER
          CALL     RDFMLC1
          CALL     KBPFFM00           * keyin budget profile
          BRANCH   EXIT,COPY2500,COPY9999
.
          MOVE     FMBPCODE,FROMBPRF
          MOVE     FMBPDESC,FPDESC
          DISPLAY  *P28:7,*V2LON,FROMBPRF,*HOFF,SP2,FPDESC
          BRANCH   MODE,COPY7000
          GOTO     COPY3000
.
COPY2500  MOVE     SP10,FROMBPRF
          MOVE     "Start",FPDESC
          DISPLAY  *P28:7,*V2LON,FROMBPRF,*HOFF,SP2,FPDESC
          BRANCH   MODE,COPY7000
.
COPY3000  MOVE     "8",CVERT
          MOVE     FROMLEDG,KEY2
          CALL     GLED0000
          PACK     KEY6,FMLALEDG,FROMFYER
          CALL     RDFMLC1
          CALL     KBPFFM00           * keyin budget profile
          BRANCH   EXIT,COPY3500,COPY9999
.
          MOVE     FMBPCODE,TOBPRF
          MOVE     FMBPDESC,TPDESC
          DISPLAY  *P28:8,*V2LON,TOBPRF,*HOFF,SP2,TPDESC
          BRANCH   MODE,COPY7000
          GOTO     COPY4000
.
COPY3500  MOVE     "Finish",TPDESC
          MOVE     SP10,TOBPRF
          DISPLAY  *P28:8,*V2LON,TOBPRF,*HOFF,SP2,TPDESC
          BRANCH   MODE,COPY7000
.
COPY4000  BRANCH   ALLLEDG,COPY4900               * All Ledgers
          MOVE     "11",CVERT
          MOVE     ZERO,ALLLEDG
.
          CALL     KLMAFM00            * keyin to ledger
          BRANCH   EXIT,COPY4000,COPY9999
          MOVE     FMLALEDG,TOLEDG
          MOVE     FMLADESC,TLDESC
          DISPLAY  *P28:11,*V2LON,TOLEDG,*HOFF,SP3,TLDESC
.
          MATCH    FROMLEDG,TOLEDG
          GOTO     COPY5000 IF NOT EQUAL
          MATCH    FROMFYER,TOFYER        * same as toledg?
          GOTO     COPY5000 IF NOT EQUAL
          DISPLAY  *P1:24,*B:
                    *EL,"Copy from and to details cannot be the same. ";
          CALL     HITENTER
          GOTO     COPY4000
.
COPY4900  BRANCH   MODE,COPY6000
.
COPY5000  BRANCH   ALLYEAR,COPY6000
          MOVE     "12",CVERT
          MOVE     TOLEDG,KEY2
          CALL     GLED0000
          CALL     KLMCFM00              * keyin fin. year
          BRANCH   EXIT,COPY5000,COPY9999
.
          MOVE      FMLCYEAR,TOFYER
          DISPLAY   *P28:12,*V2LON,TOFYER,*HOFF
.
          MATCH     FMLCYEAR,FROMFYER       * can't be the same years
          GOTO      COPY6000 IF NOT EQUAL
          MATCH     TOLEDG,FROMLEDG         * can't be the same years
          GOTO      COPY6000 IF NOT EQUAL
          DISPLAY   *P1:24,*B:
                    *EL,"Copy from and to details cannot ":
                               "be the same. ";
          CALL      HITENTER
          GOTO      COPY5000
.
COPY6000  BRANCH   ALLLEDG,COPY7000
          BRANCH   ALLYEAR,COPY7000
          MATCH    SP70,FPDESC
          GOTO     COPY7000 IF NOT EQUAL    * check profile desc's set up
          MOVE     "Start",FPDESC
          MATCH    SP70,TPDESC
          GOTO     COPY7000 IF NOT EQUAL    * check profile desc's set up
          MOVE     "Finish",TPDESC
          DISPLAY  *P28:7,*V2LON,FROMBPRF,*HOFF,SP2,FPDESC:
                   *P28:8,*V2LON,TOBPRF,*HOFF,SP2,TPDESC;
.
COPY7000  CALL     MAINQST                  * select item post cancel
          COMPARE  "-1",CCITEM
          GOTO     COPY9999 IF EQUAL
          COMPARE  ZERO,CCITEM
          GOTO     COPY9000 IF EQUAL
          COMPARE  "7",CCITEM
          GOTO     COPY7000 IF NOT LESS
          MOVE     ONE,MODE
.
          BRANCH   CCITEM,COPY0050,COPY1000,COPY7500,COPY7500,COPY4000,COPY5000
.
COPY7500  BRANCH   ALLYEAR,COPY8000
          BRANCH   ALLLEDG,COPY8000
.
          SUB      TWO,CCITEM
          BRANCH   CCITEM,COPY2000,COPY3000
.
COPY8000  DISPLAY  *P1:24,*B:
                    *EL,"No Profile range allowed if 'All' chosen in (1)":
                              " or (2). ";
          CALL     HITENTER
          GOTO     COPY7000
.
COPY9000  CALL     WBPR0000          * loop thru file and write budget prof.
          GOTO     COPY9999
.
COPY9800  DISPLAY  *P1:24,*B:
                    *EL,"No Ledgers on file. ";
          CALL     HITENTER
.
COPY9999  RETURN
.**********************************************************************
.  GLED - Get desired ledger                           Called By COPY
.         Requires : KEY2    (ledger)
.**********************************************************************
GLED0000  CALL      RDFMLA1
          COMPARE   ONE,OVRCD          * ledger exists ?
          GOTO      GLED9999 IF NOT EQUAL
.
          PACK      KEY2,SP70          * get first ledger
          CALL      RSFMLA1
          CALL      RKFMLA1
.
GLED9999  RETURN
.*************************************************************************
.* WBPR - Loop thru Profile file and write new entries                   *
.*                     called by : COPY9000                              *
.*************************************************************************
WBPR0000  DISPLAY   *P1:24,*EL,"Posting  - "
          BRANCH    ALLLEDG,WBPR3000
          BRANCH    ALLYEAR,WBPR5000
.
          PACK      KEY9,FROMLEDG,FROMFYER,FROMBPRF
          CALL      RSFMBP1
.
          CALL      RPFMBP1
WBPR1000  CALL      RKFMBP1
          BRANCH    OVRCD,WBPR9999
          MATCH     FROMLEDG,FMBPLEDG
          GOTO      WBPR9999 IF NOT EQUAL
          MATCH     FROMFYER,FMBPYEAR
          GOTO      WBPR9999 IF NOT EQUAL
          MATCH     SP3,TOBPRF             * Is it in the profile range?
          GOTO      WBPR1050 IF EQUAL
          MATCH     FMBPCODE,TOBPRF        * Is it in the profile range?
          GOTO      WBPR9999 IF LESS
.
WBPR1050  PACK      SKEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          DISPLAY   *P12:24,*EL,SKEY9
          MOVE      TOLEDG,FMBPLEDG
          MOVE      TOFYER,FMBPYEAR
          PACK      KEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          CALL      RAFMBP1
          BRANCH    OVRCD,WBPR1100
.
          CALL      UPBPF000                * Update FMSBPF file
          GOTO      WBPR1200
.
WBPR1100  MOVE      ONE,AUDTTYPE            * insert
          CALL      WAFMBP00                * write audit
          CALL      WRFMBP1
.
WBPR1200  MOVE      SKEY9,KEY9
          CALL      RAFMBP1
          GOTO      WBPR1000
.
. All Ledgers
.
WBPR3000  PACK      KEY9,SP70
          CALL      RSFMBP1
.
WBPR4000  CALL      RKFMBP1
          BRANCH    OVRCD,WBPR9999
          MATCH     FROMFYER,FMBPYEAR
          GOTO      WBPR4000 IF NOT EQUAL
          PACK      SKEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          DISPLAY   *P12:24,*EL,SKEY9
          MOVE      TOFYER,FMBPYEAR
          PACK      KEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          CALL      RAFMBP1
          BRANCH    OVRCD,WBPR4100
.
          CALL      UPBPF000                * Update FMSBPF file
          GOTO      WBPR4200
.
WBPR4100  MOVE      ONE,AUDTTYPE
          CALL      WAFMBP00
          CALL      WRFMBP1
.
WBPR4200  MOVE      SKEY9,KEY9
          CALL      RDFMBP1
          GOTO      WBPR4000
.
. All financial Years
.
WBPR5000  PACK      KEY9,FROMLEDG,SP70
          CALL      RSFMBP1
.
WBPR6000  CALL      RKFMBP1
          BRANCH    OVRCD,WBPR9999
          MATCH     FROMLEDG,FMBPLEDG
          GOTO      WBPR9999 IF NOT EQUAL
          PACK      SKEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          DISPLAY   *P12:24,*EL,SKEY9
          MOVE      TOLEDG,FMBPLEDG
          PACK      KEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          CALL      RAFMBP1
          BRANCH    OVRCD,WBPR6100
.
          CALL      UPBPF000
          GOTO      WBPR6200
.
WBPR6100  MOVE      ONE,AUDTTYPE
          CALL      WAFMBP00
          CALL      WRFMBP1
.
WBPR6200  MOVE      SKEY9,KEY9
          CALL      RDFMBP1
          GOTO      WBPR6000
.
WBPR9999  DISPLAY   *P50:24,*EL
          RETURN
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMBPCODE (variable entered)                               *
.******************************************************************************
SELA0000  MOVE      ZERO,CCITEM
.
          COMPARE   ONE,ACCEPT
          CALL      DEFV0000 IF EQUAL            * set up default values
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,CCITEM                   * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      MAINQST                      * select/post/cancel ?
.
          COMPARE   ZERO,CCITEM
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,CCITEM
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "7",CVERT
          ADD       CCITEM,CVERT
          BRANCH    CCITEM,SELA1100,SELA1200,SELA1300,SELA1400,SELA1500:
                           SELA1600,SELA1700,SELA1800,SELA1900,SELA2000:
                           SELA2100,SELA2200,SELA2300,SELA2400
          BRANCH    ACCEPT,SELA0900              * finished accept mode ?
          BEEP                                   * illegal option
.
SELA0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELA0100                     * get next option
.
.---- option 1 ----
.
SELA1100  MATCH     FMBPDESC,SP70
          GOTO      SELA1150 IF NOT EQUAL        * description spaces ?
.
          PACK      FMBPDESC,UNDLN70
.
SELA1150  KEYIN     *PCCOL:CVERT,*DV,FMBPDESC:   * read in description
                    *PCCOL:CVERT,*V2LON,*RV,FMBPDESC;
          PACK      FMBPDESC,FMBPDESC,SP70
.
          MATCH     FMBPDESC,SP70
          GOTO      SELA1100 IF EQUAL            * description spaces ?
          MATCH     FMBPDESC,UNDLN70
          GOTO      SELA9500 IF EQUAL            * nothing entered ?
          MATCH     FMBPDESC,EXITCHAR
          GOTO      SELA9500 IF EQUAL            * EXITCHAR entered ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBPDESC;
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  SUB       FMBPPC1,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC1:
                    *PCCOL:CVERT,*DV,FMBPPC1;
          ADD       FMBPPC1,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 3 ----
.
SELA1300  SUB       FMBPPC2,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC2:
                    *PCCOL:CVERT,*DV,FMBPPC2;
          ADD       FMBPPC2,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 4 ----
.
SELA1400  SUB       FMBPPC3,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC3:
                    *PCCOL:CVERT,*DV,FMBPPC3;
          ADD       FMBPPC3,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 5 ----
.
SELA1500  SUB       FMBPPC4,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC4:
                    *PCCOL:CVERT,*DV,FMBPPC4;
          ADD       FMBPPC4,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 6 ----
.
SELA1600 SUB       FMBPPC5,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
           KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC5:
                    *PCCOL:CVERT,*DV,FMBPPC5;
          ADD       FMBPPC5,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 7 ----
.
SELA1700  SUB       FMBPPC6,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC6:
                    *PCCOL:CVERT,*DV,FMBPPC6;
          ADD       FMBPPC6,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 8 ----
.
SELA1800  SUB       FMBPPC7,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC7:
                    *PCCOL:CVERT,*DV,FMBPPC7;
          ADD       FMBPPC7,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 9 ----
.
SELA1900  SUB       FMBPPC8,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC8:
                    *PCCOL:CVERT,*DV,FMBPPC8;
          ADD       FMBPPC8,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 10 ----
.
SELA2000  SUB       FMBPPC9,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC9:
                    *PCCOL:CVERT,*DV,FMBPPC9;
          ADD       FMBPPC9,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 11 ----
.
SELA2100  SUB       FMBPPC10,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC10:
                    *PCCOL:CVERT,*DV,FMBPPC10;
          ADD       FMBPPC10,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 12 ----
.
SELA2200  SUB       FMBPPC11,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC11:
                    *PCCOL:CVERT,*DV,FMBPPC11;
          ADD       FMBPPC11,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 13 ----
.
SELA2300  SUB       FMBPPC12,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC12:
                    *PCCOL:CVERT,*DV,FMBPPC12;
          ADD       FMBPPC12,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- option 14 ----
.
SELA2400  SUB       FMBPPC13,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          COMPARE   ZERO,FMLAPERS
          GOTO      SELA0100 IF EQUAL
          KEYIN     *PCCOL:CVERT,*DV,UNDLN7:  
                    *PCCOL:CVERT,*V2LON,FMBPPC13:
                    *PCCOL:CVERT,*DV,FMBPPC13;
          ADD       FMBPPC13,BALANCE
          DISPLAY   *P60:7,*V2LON,BALANCE
          GOTO      SELA0100
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT                    * post
          COMPARE   ZERO,FMLAPERS
          GOTO      SELA9100 IF NOT EQUAL
          MOVE      ZERO,FMBPPC13
.
SELA9100  MOVE      FMBPPC1,TOTAL
          ADD       FMBPPC2,TOTAL
          ADD       FMBPPC3,TOTAL
          ADD       FMBPPC4,TOTAL
          ADD       FMBPPC5,TOTAL
          ADD       FMBPPC6,TOTAL
          ADD       FMBPPC7,TOTAL
          ADD       FMBPPC8,TOTAL
          ADD       FMBPPC9,TOTAL
          ADD       FMBPPC10,TOTAL
          ADD       FMBPPC11,TOTAL
          ADD       FMBPPC12,TOTAL
          ADD       FMBPPC13,TOTAL
          COMPARE   "100",TOTAL
          GOTO      SELA9999 IF EQUAL
          DISPLAY   *P1:24,*B:
                    *EL,"Total of Percentages must = 100 - ";
          CALL      HITENTER
          GOTO      SELA0100
.
SELA9500  MOVE      ONE,EXIT                     * cancel
.
SELA9999  RETURN
.******************************************************************************
.* POST - Post data                              Called by ML0000             *
.******************************************************************************
POST0000  PACK      KEY5,FMBPLEDG,FMBPCODE,SP70
          CALL      RAFMBP1
          IF        OVRCD=0
            CALL      UPBPF000                * update with new data
          ELSE
            MOVE      ONE,AUDTTYPE            * insert
            CALL      WAFMBP00                * write audit
            CALL      WRFMBP1                 * write new record
          ENDIF
.
POST9999  RETURN
.******************************************************************************
.* DELT - Delete data                            Called by ML0000             *
.******************************************************************************
DELT0000  PACK      KEY5,FMBPLEDG,FMBPCODE,SP70
          MOVE      FOUR,AUDTTYPE
          CALL      WAFMBP00                * Write Audit for Delete
          CALL      DEFMBP1                 * delete old record (if possible)
.
DELT9999  RETURN
.******************************************************************************
.* COPY - Enter Budget Profile Code For copy optn Called by ML0200            *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMBPCODE (variable entered)                               *
.******************************************************************************
KLED0000  DISPLAY   *P1:4,"    Ledger               : ",*EL:
                    *P1:5,"    Financial Year       : ",*EL:
                    *P1:6,"    Budget Profile Code  : ",*EF;
          MOVE      "28",CCOL          * set up screen address
          MOVE      "4",CVERT
          CALL      KLMAFM00
          BRANCH    EXIT,KLED9999,KLED9999
          MOVE      FMLALEDG,FMBPLEDG
          DISPLAY   *P28:4,*V2LON,FMLALEDG,*HOFF,SP4,FMLADESC;
.
KLED9999  RETURN
.
KFYR0000  MOVE      "28",CCOL          * set up screen address
          MOVE      "5",CVERT
          CALL      KLMCFM00
          BRANCH    EXIT,KFYR9999,KFYR9999
          MOVE      FMLCYEAR,FMBPYEAR
          MOVE      FMLC12TO,CPCDATE
          LOAD      CPCDATE,FMLAPERS,FMLC13TO
          UNPACK    CPCDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      FMLC12DE,KEY15
          LOAD      KEY15,FMLAPERS,FMLC13DE
          DISPLAY   *P28:5,*V2LON,FMLCYEAR:
                    *HOFF,SP1," Year Ending ",KEY15,SP1,CPCDATE;
KFYR9999  RETURN
.
PROC0000  DISPLAY   *P1:7,*EF
          MOVE      "28",CCOL          * set up screen address
          MOVE      "6",CVERT
.
          COMPARE   ONE,COPTION        * insert mode ?
          CALL      ABPFFM00 IF EQUAL
.
          COMPARE   ONE,COPTION        * not insert mode ?
          CALL      KBPFFM00 IF NOT EQUAL
.
PROC9999  RETURN
.**********************************************************************
. SCRB - Screen Display for Copy Option
.**********************************************************************
SCRB0000  DISPLAY   *P1:4,*EF:
                    *P5:4,*V2LON,*ULON,"Copy From Details (Tap Enter For All)":
                    *P5:10,"Copy To Details",*HOFF,*V2LON:
                     *P1:5," 1":
                     *P1:6," 2":
                     *P1:7," 3":
                     *P1:8," 4":
                    *P1:11," 5":
                    *P1:12," 6":
                    *HOFF:
                     *P3:5,". Ledger               : ":
                     *V2LON,FROMLEDG,*HOFF,SP3,FLDESC:
                     *P3:6,". Financial Year       : ":
                     *P28:6,*V2LON,FROMFYER,*HOFF,SP1,FFDESC:
                     *P3:7,". First Profile        : ":
                     *V2LON,FROMBPRF,*HOFF,SP2,FPDESC:
                     *P3:8,". Last Profile         : ":
                     *V2LON,TOBPRF,*HOFF,SP2,TPDESC:
                    *P3:11,".  Ledger              : ":
                    *V2LON,TOLEDG,*HOFF,SP3,TLDESC:
                    *P3:12,".  Financial Year      : ":
                    *P28:12,*V2LON,TOFYER,*HOFF,SP1,TFDESC;
          RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
RLMAFM00  COMPARE   FOUR,COPTION
          GOTO      RLMAFM10 IF EQUAL
          DISPLAY   *P1:4,*EF,"    Ledger               : ":
                    *P1:5,"    Financial Year       : ":
                    *P1:6,"    Budget Profile Code  : "
          GOTO      RLMAFM99
RLMAFM10  CALL      SCRB0000
.
RLMAFM99  RETURN              
.
RLMCFM00  COMPARE   FOUR,COPTION
          GOTO      RLMCFM10 IF EQUAL
          DISPLAY   *P1:4,*EF,"    Ledger               : ",*V2LON,FMLALEDG:
                    *HOFF,SP4,FMLADESC:
                    *P1:5,"    Financial Year       : ":
                    *P1:6,"    Budget Profile Code  : "
          GOTO      RLMCFM99
RLMCFM10  CALL      SCRB0000
.
RLMCFM99  RETURN
.
RBPFFM00  COMPARE   FOUR,COPTION        * copy option?
          GOTO      RBPFFM10 IF EQUAL   * yes jump to other code
.
          DISPLAY   *P1:4,*EF,"    Ledger               : ",*V2LON,FMLALEDG:
                    *HOFF,SP4,FMLADESC
          PACK      KEY6,FMLALEDG,FMLCYEAR
          CALL      RDFMLC1
          MOVE      FMLC12TO,CPCDATE
          LOAD      CPCDATE,FMLAPERS,FMLC13TO
          UNPACK    CPCDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      FMLC12DE,KEY15
          LOAD      KEY15,FMLAPERS,FMLC13DE
          DISPLAY   *P1:5,"    Financial Year       : ",*V2LON,FMLCYEAR:
                    *HOFF,SP1," Year Ending ",KEY15,SP1,CPCDATE
          DISPLAY   *P1:6,"    Budget Profile Code  : "
          GOTO      RBPFFM99
.
RBPFFM10  CALL      SCRB0000
.
RBPFFM99  RETURN              
.
          INC       FMSBPFIO/INC       * Budget Profile
.
          INC       FMSBPFKY           * Budget Profile
          INC       FMSLMAKY           * Ledger
          INC       FMSLMCKY           * Ledger
          INC       FMSUPDCD           * FMS Acc. update routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * FMS Budget Audit update routines
