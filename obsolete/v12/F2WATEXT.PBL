.*****************************************************************************
.*    Program      : F2WATEXT                                                *
.*    Description  : Conversion watextaf to new File layout                  *
.*                                                                           *
.*    Author       :                                                         *
.*    Date         :                                                         *
.*    Modifications:                                                         *
.*****************************************************************************
.
.  Global change F2WATEXT  eg F57PTDOC
.  Global change WATEXTFD  eg PATDOCFD (new layout)
.  Global change watextaf  eg patdoctf
.  Global change WATEXTA1  eg PATDOCT1
.  Global change KEY4   eg KEY8
.  Global change KEY4  eg KEY9
.  Global change WRWTEXT1  eg WRDOCT1
.  Global change swtextaf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
.Data File Definition
.--------------------
OLDFILE1   IFILE    SQL, FIXED=269, KEY="U1-4"
.WATEXTA2   IFILE    SQL, FIXED=269, KEY="U5-39,1-4"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.WTEXCODE  DIM       4      4        1     Code
.WTEXDESC  DIM       35     35       5     Description
.WTEXFLDT  DIM       8      8        40    From List Date
.WTEXTLDT  DIM       8      8        48    To List Date
.WTEXFVDT  DIM       8      8        56    From Review Date
.WTEXTVDT  DIM       8      8        64    To Review Date
.WTEXFSDT  DIM       8      8        72    From Sch Date
.WTEXTSDT  DIM       8      8        80    To Sch Date
.WTEXFRDT  DIM       8      8        88    From Removal Date
.WTEXTRDT  DIM       8      8        96    To Removal Date
.WTEXUNT   DIM       3      3        104   Unit (WU)
.WTEXPRI   DIM       3      3        107   Priority (TP)
.WTEXNOT   DIM       3      3        110   Short Notice (WS)
.WTEXPGP   DIM       3      3        113   Procedure Group (WG)
.WTEXRMR   DIM       3      3        116   Removal Reason (WR/BC)
.WTEXRGP   DIM       8      8        119   Referring GP
.WTEXCON   DIM       6      6        127   Consultant
.WTEXPRO   DIM       9      9        133   Procedure
.WTEXSRC   DIM       3      3        142   Source of Referral
.WTEXUD1   DIM       3      3        145   User Def 1 (W1)
.WTEXUD2   DIM       3      3        148   User Def 2 (W2)
.WTEXUD3   DIM       3      3        151   User Def 3 (W3)
.WTEXUD4   DIM       3      3        154   User Def 4 (W4)
.WTEXUD5   DIM       3      3        157   User Def 5 (X5)
.WTEXUD6   DIM       3      3        160   User Def 6 (X6)
.WTEXUD7   DIM       3      3        163   User Def 7 (X7)
.WTEXUD8   DIM       3      3        166   User Def 8 (X8)
.WTEXSTA   DIM       1      1        169   Waiting List Status 0=All
.WTEXANL1  DIM       3      3        170   Analysis Level 1
.WTEXANL2  DIM       3      3        173   Analysis Level 2
.WTEXANL3  DIM       3      3        176   Analysis Level 3
.WTEXANL4  DIM       3      3        179   Analysis Level 4
.WTEXANM1  DIM       3      3        182   Analysis Measures 1
.WTEXANM2  DIM       3      3        185   Analysis Measures 2
.WTEXANM3  DIM       3      3        188   Analysis Measures 3
.WTEXPOWD  DIM       3      3        191   Expected Post Op Ward (patwr1af)
.WTEXIDYC  DIM       3      3        194   Intended Day Case (Cat XB)
.WTEXLLSC  DIM       3      3        197   Last Letter Sent Code
.WTEXCRTL  DIM       1      1        200   Check Response to letter 0=No 1=Yes
.WTEXADMW  DIM       3      3        201   Admitting Point (patwr1af)
.WTEXINCD  DIM       1      1        204   Include Deceased 0=No 1=Yes
.WTEXOVON  DIM       1      1        205   Overdue Patients Only 0=No 1=Yes
.WTEXCTYP  DIM       3      3        206   Claim Code Cat CL
.WTEXLIST  DIM       3      3        209   Listing Status (Cat VL)
OLDEXSPA   DIM       57     57       212   Spare
.
.End of Record                      269

.
.
.
.                                     ******** copy the new FD here *******
.
.
.Data File Definition
.--------------------
WATEXTA1   IFILE    SQL, FIXED=409, KEY="U1-4"
WATEXTA2   IFILE    SQL, FIXED=409, KEY="U5-39,1-4"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.
WTEXCODE  DIM       4      4        1     Code
WTEXDESC  DIM       35     35       5     Description
WTEXFLDT  DIM       8      8        40    From List Date
WTEXTLDT  DIM       8      8        48    To List Date
WTEXFVDT  DIM       8      8        56    From Review Date
WTEXTVDT  DIM       8      8        64    To Review Date
WTEXFSDT  DIM       8      8        72    From Sch Date
WTEXTSDT  DIM       8      8        80    To Sch Date
WTEXFRDT  DIM       8      8        88    From Removal Date
WTEXTRDT  DIM       8      8        96    To Removal Date
WTEXUNT   DIM       3      3        104   Unit (WU)
WTEXPRI   DIM       3      3        107   Priority (TP)
WTEXNOT   DIM       3      3        110   Short Notice (WS)
WTEXPGP   DIM       3      3        113   Procedure Group (WG)
WTEXRMR   DIM       3      3        116   Removal Reason (WR/BC)
WTEXRGP   DIM       8      8        119   Referring GP
WTEXCON   DIM       6      6        127   Consultant
WTEXPRO   DIM       9      9        133   Procedure
WTEXSRC   DIM       3      3        142   Source of Referral
WTEXUD1   DIM       3      3        145   User Def 1 (W1)
WTEXUD2   DIM       3      3        148   User Def 2 (W2)
WTEXUD3   DIM       3      3        151   User Def 3 (W3)
WTEXUD4   DIM       3      3        154   User Def 4 (W4)
WTEXUD5   DIM       3      3        157   User Def 5 (X5)
WTEXUD6   DIM       3      3        160   User Def 6 (X6)
WTEXUD7   DIM       3      3        163   User Def 7 (X7)
WTEXUD8   DIM       3      3        166   User Def 8 (X8)
WTEXSTA   DIM       1      1        169   Waiting List Status 0=All
WTEXANL1  DIM       3      3        170   Analysis Level 1
WTEXANL2  DIM       3      3        173   Analysis Level 2
WTEXANL3  DIM       3      3        176   Analysis Level 3
WTEXANL4  DIM       3      3        179   Analysis Level 4
WTEXANM1  DIM       3      3        182   Analysis Measures 1
WTEXANM2  DIM       3      3        185   Analysis Measures 2
WTEXANM3  DIM       3      3        188   Analysis Measures 3
WTEXPOWD  DIM       3      3        191   Expected Post Op Ward (patwr1af)
WTEXIDYC  DIM       3      3        194   Intended Day Case (Cat XB)
WTEXLLSC  DIM       3      3        197   Last Letter Sent Code
WTEXCRTL  DIM       1      1        200   Check Response to letter 0=No 1=Yes
WTEXADMW  DIM       3      3        201   Admitting Point (patwr1af)
WTEXINCD  DIM       1      1        204   Include Deceased 0=No 1=Yes
WTEXOVON  DIM       1      1        205   Overdue Patients Only 0=No 1=Yes
WTEXCTYP  DIM       3      3        206   Claim Code Cat CL
WTEXLIST  DIM       3      3        209   Listing Status (Cat VL)
WTEXFURN  DIM       8      8        212   U/R Number From
WTEXTURN  DIM       8      8        220   U/R Number To
WTEXFPRO  DIM       9      9        228   Procedure From
WTEXTPRO  DIM       9      9        237   Procedure To
WTEXFPRS  DIM       1      1        246   Procedure Status From
WTEXTPRS  DIM       1      1        247   Procedure Status To
WTEXFUNI  DIM       3      3        248   Unit From (Cat WU)
WTEXTUNI  DIM       3      3        251   Unit To (Cat WU)
WTEXFCON  DIM       10     10       254   Consultant From
WTEXTCON  DIM       10     10       264   Consultant To
WTEXFSES  FORM      5      4        274   Estimated Stay From
WTEXTSES  FORM      5      4        278   Estimated Stay To
WTEXADTY  DIM       3      3        282   Admission Type (Cat A)
WTEXRSTA  DIM       3      3        285   Resident Status (Cat T)
WTEXFPAD  DIM       8      8        288   Pre-assessment Date From
WTEXTPAD  DIM       8      8        296   Pre-assessment Date To
WTEXFSYD  DIM       8      8        304   Date on System From
WTEXTSYD  DIM       8      8        312   Date on System To
WTEXFSUD  DIM       8      8        320   Date on Suspension From
WTEXTSUD  DIM       8      8        328   Date on Suspension To
WTEXFOSD  DIM       8      8        336   Date off Suspension From
WTEXTOSD  DIM       8      8        344   Date off Suspension To
WTEXSPA   DIM       57     57       352   Spare
.
.End of Record                      409
.


CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION WATEXTFD"
PRGID     INIT      "F2WATEXT"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,"watextaf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat watextaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "swtextaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat watextaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "swtextaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "watextaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "swtextaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "watextaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 409 UC1-4",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC5-39,1-4",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      WATEXTA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY4,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
          UNPACK    SP70,WTEXFURN,WTEXTURN,WTEXTPRO,WTEXTPRS:
                         WTEXTUNI,WTEXFCON,WTEXTCON,WTEXADTY
.
          UNPACK    SP70,WTEXRSTA,WTEXFPAD,WTEXTPAD,WTEXFSYD:
                         WTEXTSYD,WTEXFSUD,WTEXTSUD,WTEXFOSD
.
          UNPACK    SP70,WTEXTOSD,WTEXSPA
.
          UNPACK    SP70,WTEXFURN,WTEXFPRO,WTEXFPRS,WTEXFUNI
.
          MOVE      ZERO,WTEXFSES
          MOVE      ZERO,WTEXTSES
.                                               * Pack key here
          PACK      KEY4,WTEXCODE,SP70
          CALL      WRWTEXT1                    * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     WATEXTA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "swtextaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat watextaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'watextaf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
.
READSOLD  RESET     KEY4
          READ      OLDFILE1,KEY4;;
          RETURN

.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
READKOLD
          MOVE      ZERO,OVRCD
          READKS    OLDFILE1;WTEXCODE,WTEXDESC,WTEXFLDT,WTEXTLDT,WTEXFVDT:
                        WTEXTVDT,WTEXFSDT,WTEXTSDT,WTEXFRDT,WTEXTRDT,WTEXUNT:
                        WTEXPRI,WTEXNOT,WTEXPGP,WTEXRMR,WTEXRGP,WTEXCON:
                        WTEXPRO,WTEXSRC,WTEXUD1,WTEXUD2,WTEXUD3,WTEXUD4:
                        WTEXUD5,WTEXUD6,WTEXUD7,WTEXUD8,WTEXSTA,WTEXANL1:
                        WTEXANL2,WTEXANL3,WTEXANL4,WTEXANM1,WTEXANM2,WTEXANM3:
                        WTEXPOWD,WTEXIDYC,WTEXLLSC,WTEXCRTL,WTEXADMW,WTEXINCD:
                        WTEXOVON,WTEXCTYP,WTEXLIST,OLDEXSPA
          GOTO      OVERCOND IF OVER
          RETURN

.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRWTEXT1  RESET     KEY4
          WRITE     WATEXTA1,KEY4;WTEXCODE,WTEXDESC,WTEXFLDT,WTEXTLDT,WTEXFVDT:
                        WTEXTVDT,WTEXFSDT,WTEXTSDT,WTEXFRDT,WTEXTRDT,WTEXUNT:
                        WTEXPRI,WTEXNOT,WTEXPGP,WTEXRMR,WTEXRGP,WTEXCON:
                        WTEXPRO,WTEXSRC,WTEXUD1,WTEXUD2,WTEXUD3,WTEXUD4:
                        WTEXUD5,WTEXUD6,WTEXUD7,WTEXUD8,WTEXSTA,WTEXANL1:
                        WTEXANL2,WTEXANL3,WTEXANL4,WTEXANM1,WTEXANM2,WTEXANM3:
                        WTEXPOWD,WTEXIDYC,WTEXLLSC,WTEXCRTL,WTEXADMW,WTEXINCD:
                        WTEXOVON,WTEXCTYP,WTEXLIST,WTEXFURN,WTEXTURN,WTEXFPRO:
                        WTEXTPRO,WTEXFPRS,WTEXTPRS,WTEXFUNI,WTEXTUNI,WTEXFCON:
                        WTEXTCON,WTEXFSES,WTEXTSES,WTEXADTY,WTEXRSTA,WTEXFPAD:
                        WTEXTPAD,WTEXFSYD,WTEXTSYD,WTEXFSUD,WTEXTSUD,WTEXFOSD:
                        WTEXTOSD,WTEXSPA
          RETURN

          INC       STD001IO
