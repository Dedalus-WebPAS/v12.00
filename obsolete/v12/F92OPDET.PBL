.*******************************************************************************
.* System    :   Inpatient                                                     *
.* Program   :   F92OPDET                                                      *
.*******************************************************************************
.* Date      :   21/01/2003                                                    *
.* Author    :   Tonii Tang (SRS No: 36667)                                    *
.* Function  :   Program will convert the "Count Correct" data from OPRDETCF   *
.*               to OPRSRGAF table                                             *
.* Mods      :                                                                 *
.*                                                                             *
.*        V9.09.01  01/02/2008  Jill Habasque  CAR  160362                     *
.*                  Fixed length of oprsrgaf (oldfile)                         *
.*        V9.02.05  07/03/2003  Tonii  CAR 37140                               *
.*                  Change on business logic for collection of Theartre times. *
.*                  For records in oprsrgaf with multiple teams, if data is    *
.*                  obtained from the oprdetaf table, then records for each    *
.*                  team must also be updated.                                 *
.*        V9.02.04  06/03/2003  Tonii CAR 37065                                *
.*                  Fixed missing 'End Date' and 'Supervisor level' details    *
.*                  05/03/2003  Tonii CAR 37009                                *
.*                  Mods to the following:                                     *
.*                  - OPTION 1                                                 *
.*                    Removed any reference to saving the table etc, fixit will*
.*                    run automatically once the user selects Y on the prompt. *
.*                    A copy of the old table will no longer be made.          *
.*                    Cleared record counter (RECNUM). Mods to only display    *
.*                    every 1000 record.                                       *
.*                  - OPTION 2, 3, 4 & 5                                       *
.*                    Changed the point where the variables for the tables     *
.*                    concerned gets initialised. Routines now only call       *
.*                    CLRVAR00 when doing a write not update, previously when  *
.*                    updating some fields were being blanked out              *
.*                  - OPTION 6                                                 *
.*                    When using data from oprdetaf, write only one record to  *
.*                    oprsrgaf regardless of multiple teams. If using oprdetcf *
.*                    data then write multiple records for each corresponding  *
.*                    team                                                     *
.*        V9.02.03  03/03/2003  Tonii  CAR 36912                               *
.*                  -  Rearrange Option layout. Placed option to run the fixit *
.*                     for oprsrgaf first                                      *
.*                  -  Mods to not write a record to oprpmbaf table if the mbs *
.*                     item code is blank                                      *
.*                  -  Mods to not write a record to oprpeiaf table if the     *
.*                     expensive item code is blank                            *
.*        V9.02.02  28/02/2003  Tonii  CAR 36855                               *
.*                  Fixed missing endtime and enddate in TEAM2000              *
.*                  Fixed ghost record in TEAM2000                             *
.*                  Fixed missing seconds ":00" in endtime                     *
.*        V9.02.01  27/02/2003  Tonii  CAR 36818                               *
.*                  Fixed I*U in TEAM2000                                      *
.*******************************************************************************
.
          INC       STD001FD
          INC       PATCONFD/INC
          INC       OPRCONFD/INC
.
          INC       OPRARDFD/INC
          INC       OPRDEAFD/INC
          INC       OPRDEBFD/INC
          INC       OPRDECFD/INC
          INC       OPRPEIFD/INC
          INC       OPRPMBFD/INC
          INC       OPRSRGFD/INC
          INC       OPRTSMFD/INC
          INC       PATCODFD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
.
OLDFILE    IFILE    SQL, FIXED=783, KEY="U1-10,11-11"
.
. LOCAL VARIABLE DEFINITION
. -------------------------
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
.
COUNTER   FORM      2
CMDLINE   DIM       100
RECCOUNT  FORM      8
TOTALREC  FORM      2
.
CMBSITEM  DIM       9
DIM1A     DIM       1
DIM2A     DIM       2 
DIM8      DIM       8 
DIM28     DIM       28
DIM60     DIM       60
DOCTTYPE  DIM       3
DOCTCODE  DIM       6
ENDDATE   DIM       8
ENDTIME   DIM       5
IMPLNTCD  DIM       6     * Implant code
IMPLTQTY  DIM       3     * Implant quantity
NURSECDE  DIM       6
NURSETYP  DIM       3
OPTNFLAG  FORM      1
.
SKEY10    DIM       10
SKEY11    DIM       11
.
SCC       DIM       2     * century
SDD       DIM       2     * day
SMM       DIM       2     * month
SYY       DIM       2     * year
STRTDATE  DIM       8
STRTTIME  DIM       5
SUPRLEVL  DIM       3     * Supervisor level
TEAMETIM  DIM       8     * operation endtime
TMPSTIME  DIM       4
TMPETIME  DIM       4
.
. Variables for Theatre Time, option 5
.
TIMECALL  DIM       2     * Time Called For (Pre-Op 1-5)
TIMEARRV  DIM       2     * Time Arrived (Pre-Op 1-5)
ANTHPREP  DIM       2     * Anaesthetic Prep (Pre-Op 1-5, Operation 1-4)
ANTHCOMM  DIM       2     * Anaesthetic Commenced (Pre-Op 1-5, Operation 1-4)
PREPSTTM  DIM       2     * Prep Start Time (Pre-Op 1-5, Operation 1-4)
SURGSTTM  DIM       2     * Surgery Start Time (Operation 1-4)
SURGEDTM  DIM       2     * Surgery End Time (Operation 1-4)
ANTHSEND  DIM       2     * Anaesthetic End (Operation 1-4, Post-op 1-4)
DRSSTIME  DIM       2     * Time of Dressing (Operation 1-4, Post-op 1-4)
RECOVRYF  DIM       2     * Recovery Front (Operation 1-4, Post-op 1-4)
RECOVRYB  DIM       2     * Recovery Back (Operation 1-4, Post-op 1-4)
RECVRYDY  DIM       2     * Recovery Day Procedure (Post-op 1-4)
RDEPART   DIM       2     * Ready to Depart (Post-op 1-4)
EXITTHTR  DIM       2     * Exit Theatre Complex (Post-op 1-4)
.
. Save Variables
.
STMECALL  DIM       8     * Time Called For (Pre-Op 1-5)
STMEARRV  DIM       8     * Time Arrived (Pre-Op 1-5)
SANTHPRP  DIM       8     * Anaesthetic Prep (Pre-Op 1-5, Operation 1-4)
SANTHCOM  DIM       8     * Anaesthetic Commenced (Pre-Op 1-5, Operation 1-4)
SPRPSTTM  DIM       8     * Prep Start Time (Pre-Op 1-5, Operation 1-4)
SSRGSTTM  DIM       8     * Surgery Start Time (Operation 1-4)
SSRGEDTM  DIM       8     * Surgery End Time (Operation 1-4)
SANTHEND  DIM       8     * Anaesthetic End (Operation 1-4, Post-op 1-4)
SDRSSTME  DIM       8     * Time of Dressing (Operation 1-4, Post-op 1-4)
SRECVRYF  DIM       8     * Recovery Front (Operation 1-4, Post-op 1-4)
SRECVRYB  DIM       8     * Recovery Back (Operation 1-4, Post-op 1-4)
SRCVRYDY  DIM       8     * Recovery Day Procedure (Post-op 1-4)
SRDEPART  DIM       8     * Ready to Depart (Post-op 1-4)
SEXTTHTR  DIM       8     * Exit Theatre Complex (Post-op 1-4)
.
SP28      INIT      "                            "
SEC       INIT      ":00"
CATOP     INIT      "OP"
.
PRGID     INIT      "F92OPDET"
PRGNAM    INIT      "Update Patient Surgical Details"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      DISPHEAD
          CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          COMPARE   SIX,COPTION            * Dont ask ok to continue for
          GOTO      ML1000 IF EQUAL        * option 5
.
ML0500    CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML1000:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML1000    BRANCH    COPTION,ML2000:        * Fixit for oprsrgaf
                            ML3000:        * Misc. Data
                            ML4000:        * Teams
                            ML5000:        * Procedures
                            ML6000:        * Expensive Items Codes
                            ML7000         * Theatre Times
          GOTO      ML0100
.
ML2000    CALL      READ0000               * Fixit for oprsrgaf
          GOTO      ML0100
.
ML3000    CALL      MISC0000               * process Misc. Data
          GOTO      ML0100
.
ML4000    CALL      TEAM0000               * Theatre Staff Member Table
          GOTO      ML0100
.
ML5000    CALL      PROC0000               * Procedures tables (MBS) 
          GOTO      ML0100
.
ML6000    CALL      EXPN0000               * Expensive Items Code
          GOTO      ML0100 
.
ML7000    CALL      TTIM0000               * Theatre Time
          BRANCH    EXIT,ML0100            * Cancel, no updates
.
          CALL      WTTM0000               * Write Theatre Times
          GOTO      ML0100 
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  OPEN      CONTROLF,"controlf"
.
          OPEN      PATCODE1,"patcodes"
          OPEN      OPRARDA1,"oprardaf"
          OPEN      OPRDETA3,"oprdetaf"
          OPEN      OPRDETB1,"oprdetbf"
          OPEN      OPRDETC1,"oprdetcf"
          OPEN      OPRPEIA2,"oprpeiaf"
          OPEN      OPRPMBA1,"oprpmbaf"
          OPEN      OPRPMBA2,"oprpmbaf"
          OPEN      OPRSRGA1,"oprsrgaf"
          OPEN      OPRTSMA1,"oprtsmaf"
.
          READ      CONTROLF,FORTY2;*19,OPCNFOTM,*20,OPCNTOTM
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run fixit for new field ":
                                            "in OPRSRGAF table": 
                    *P1:6,*V2LON,TWO,*HOFF,". Run fixit for Misc. Data":
                    *P1:7,*V2LON,THREE,*HOFF,". Run fixit for Team Table":
                    *P1:8,*V2LON,FOUR,*HOFF,". Run fixit for Procedures":
                    *P1:9,*V2LON,FIVE,*HOFF,". Run fixit for Expensive ":
                                            "Items Code":
                    *P1:10,*V2LON,SIX,*HOFF,". Run fixit for Theatre Times " 
.
OPTN0500  KEYIN     *P1:12,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:12,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN1000:            * fixit for oprsrgaf
                            OPTN2000:            * Misc. Data  
                            OPTN3000:            * Team
                            OPTN4000:            * Procedure
                            OPTN5000:            * Expensive Items Code
                            OPTN6000             * Theatre Times
.
          BEEP
          GOTO      OPTN0500
.
OPTN1000  DISPLAY   *P55:2,*V2LON," - Fixit for new field in OPRSRGFD "
          GOTO      OPTN9000
.
OPTN2000  DISPLAY   *P55:2,*V2LON," - Miscellaneous Data "
          GOTO      OPTN9000
.
OPTN3000  DISPLAY   *P55:2,*V2LON," - Theatre Staff Member Table "
          GOTO      OPTN9000
.
OPTN4000  DISPLAY   *P55:2,*V2LON," - Procedure table "
          GOTO      OPTN9000
.
OPTN5000  DISPLAY   *P55:2,*V2LON," - Expensive Items Code "
          GOTO      OPTN9000
.
OPTN6000  DISPLAY   *P55:2,*V2LON," - Theatre Times "
          GOTO      OPTN9000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               MISC0000              Called by: ML2000  *
.*  Misc. Data: Convert the 'Count Correct' data from the 'Operating Usage*
.*              Table' (oprdetcf) to the 'Patient Surgical Details Table' *
.*              (oprsrgaf)                                                *
.*              Populate new form field OPSCNOOP with OPDCNOOP            *
.**************************************************************************
MISC0000  MOVE      ZERO,RECCOUNT
.
          PACK      KEY11,SP70
          CALL      RSOPDEC1                         * Positional read
MISC1000  CALL      RKOPDEC1                         * Read next record	
          BRANCH    OVRCD,MISC8000
.
          ADD       ONE,RECCOUNT
          IF        (RECCOUNT%1000) = 0
            CLOCK     TIME,CTIMEIS
            DISPLAY   *P10:23,"Records Read ",*V2LON,RECCOUNT:
                      *P50:23,*V2LON,CTIMEIS
          ENDIF
.
          PACK      KEY11,OPDCUNIQ,OPDCTEAM,SP70
          CALL      RAOPSRG1
          IF        OVRCD = 1
            CALL      CLRVAR00
            MOVE      OPDCUNIQ,OPSGUNID
            MOVE      OPDCTEAM,OPSGTMNO
            MOVE      OPDCCONT,OPSGCCNT
            MOVE      OPDCNOOP,OPSGNOOP
            CALL      WROPSRG1
          ELSE
            MOVE      OPDCUNIQ,OPSGUNID
            MOVE      OPDCTEAM,OPSGTMNO
            MOVE      OPDCCONT,OPSGCCNT
            MOVE      OPDCNOOP,OPSGNOOP
            CALL      UPOPSRG1
          ENDIF
.
          GOTO      MISC1000                         * Read next record
.
MISC8000  DISPLAY   *P1:24,*EL,"Total Records read : ",*V2LON,RECCOUNT,*HOFF;
          CALL      HITENTER
.
MISC9999  RETURN
+
.**************************************************************************
.*                               TEAM0000              Called by: ML3000  *
.*  Teams: Convert data from the 'Operating Team Table' (oprdetbf) to the *
.*         'Theatre Staff Member Table' (oprtsmaf)                        *
.*                                                                        *
.*  Parameters : OPCNFOTM - From time for operation duration              *
.*               OPCNTOTM - To time for operation duration                *
.*                                                                        *
.**************************************************************************
TEAM0000  MOVE      ZERO,RECCOUNT
          MOVE      ZERO,COUNTER
          UNPACK    SP70,STRTDATE,ENDDATE,STRTTIME,ENDTIME
          PACK      KEY11,SP70
          CALL      RSOPDEB1
TEAM0500  CALL      RKOPDEB1
          BRANCH    OVRCD,TEAM8000
.
          PACK      KEY10,OPDBUNIQ,SP10
          CALL      RDOPDEA3
          IF        OVRCD = 1
            MOVE      SP8,STRTDATE
          ELSE
            MOVE      OPDADATE,STRTDATE
          ENDIF
.
          PACK      KEY11,OPDBUNIQ,OPDBTEAM
          CALL      RDOPDEC1
          IF        OVRCD = 1
            MOVE      SP5,STRTTIME
            MOVE      SP5,ENDTIME
          ELSE
            LOAD      STRTTIME,OPCNFOTM,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
            LOAD      ENDTIME,OPCNTOTM,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
.
            UNPACK    STRTTIME,DIM2,KEY1,DIM2A
            PACK      TMPSTIME,DIM2,DIM2A
            REP       " 0",TMPSTIME
            UNPACK    ENDTIME,DIM2,KEY1,DIM2A
            PACK      TMPETIME,DIM2,DIM2A
            REP       " 0",TMPETIME
.
.  If end time is less than start time, then assume operation has carried over
.  to the next day, else set enddate=startdate
.
            MATCH     TMPSTIME,TMPETIME        
            IF        @LESS
              CALL      NDAT0000
            ELSE
              MOVE      STRTDATE,ENDDATE
            ENDIF
          ENDIF
.
          ADD       ONE,RECCOUNT
          IF        (RECCOUNT%1000) = 0
            CLOCK     TIME,CTIMEIS
            DISPLAY   *P10:23,"Records Read ",*V2LON,RECCOUNT:
                      *P50:23,*V2LON,CTIMEIS
          ENDIF
.
TEAM1000  COMPARE   EIGHT,COUNTER
          IF        !@LESS
            ADD       COUNTER,TOTALREC
            MOVE      ZERO,COUNTER
            GOTO      TEAM2000
          ENDIF
.
. Clear variables in OPRTSMAF for use
.
          UNPACK    SP70,DOCTCODE,DOCTTYPE,SUPRLEVL,TEAMETIM
.
          ADD       ONE,COUNTER
.
          LOAD      DOCTTYPE,COUNTER,OPDBTYD1,OPDBTYD2,OPDBTYD3,OPDBTYD4:
                                     OPDBTYD5,OPDBTYD6,OPDBTYD7,OPDBTYD8
.
          LOAD      DOCTCODE,COUNTER,OPDBDCC1,OPDBDCC2,OPDBDCC3,OPDBDCC4:
                                     OPDBDCC5,OPDBDCC6,OPDBDCC7,OPDBDCC8
.
          LOAD      SUPRLEVL,COUNTER,OPDBLVD1,OPDBLVD2,OPDBLVD3,OPDBLVD4:
                                     OPDBLVD5,OPDBLVD6,OPDBLVD7,OPDBLVD8
.
          MATCH     SP3,DOCTTYPE
          GOTO      TEAM1000 IF EQUAL
.
          PACK      KEY5,CATOP,DOCTTYPE
          CALL      RDCODE1
          BRANCH    OVRCD,TEAM1000
.
          MATCH     TCINDC1,ANSS      * check indicator 1 for 'S' value
          IF        @EQUAL 
            MOVE      ZERO,FORM2
          ELSE
            MOVE      ONE,FORM2
          ENDIF
.
          MATCH     SP5,STRTTIME
          IF        @EQUAL
            PACK      DIM8,SP10          
          ELSE
            PACK      DIM8,STRTTIME,SEC    
          ENDIF
.
          MATCH     SP5,ENDTIME
          IF        @EQUAL
            PACK      TEAMETIM,SP10
          ELSE
            PACK      TEAMETIM,ENDTIME,SEC
          ENDIF
.
          PACK      KEY35,OPDBUNIQ,OPDBTEAM,FORM2,DOCTCODE,STRTDATE,DIM8
          CALL      RAOPTSM1
          IF        OVRCD = 1
            CALL      CLRVAR00
            MOVE      OPDBUNIQ,OPTSUNID
            MOVE      OPDBTEAM,OPTSTMNO
            MOVE      DOCTCODE,OPTSSCDE
            MOVE      FORM2,OPTSSIND
            MOVE      STRTDATE,OPTSSDAT
            PACK      OPTSSTIM,DIM8
            MOVE      DOCTTYPE,OPTSSTYP
            PACK      OPTSETIM,TEAMETIM
            MOVE      SUPRLEVL,OPTSSLEV
            MOVE      ENDDATE,OPTSEDAT
            CALL      WROPTSM1
          ELSE
            MOVE      OPDBUNIQ,OPTSUNID
            MOVE      OPDBTEAM,OPTSTMNO
            MOVE      DOCTCODE,OPTSSCDE
            MOVE      FORM2,OPTSSIND
            MOVE      STRTDATE,OPTSSDAT
            PACK      OPTSSTIM,DIM8
            MOVE      DOCTTYPE,OPTSSTYP
            PACK      OPTSETIM,TEAMETIM
            MOVE      SUPRLEVL,OPTSSLEV
            MOVE      ENDDATE,OPTSEDAT
            CALL      UPOPTSM1
          ENDIF 
.
          GOTO      TEAM1000
.
TEAM2000  COMPARE   SIX,COUNTER
          IF        !@LESS
            ADD       COUNTER,TOTALREC
            MOVE      ZERO,COUNTER
            GOTO      TEAM0500
          ENDIF
.
. Clear variables in OPRTSMAF for use
.
          UNPACK    SP70,NURSECDE,NURSETYP,SUPRLEVL,TEAMETIM
.
          ADD       ONE,COUNTER
.
          LOAD      NURSETYP,COUNTER,OPDBTYN1,OPDBTYN2,OPDBTYN3:
                                     OPDBTYN4,OPDBTYN5,OPDBTYN6
.
          LOAD      NURSECDE,COUNTER,OPDBNUC1,OPDBNUC2,OPDBNUC3:
                                     OPDBNUC4,OPDBNUC5,OPDBNUC6
.
          MATCH     SP3,NURSETYP
          GOTO      TEAM2000 IF EQUAL
.
          MATCH     SP5,ENDTIME
          IF        @EQUAL
            PACK      TEAMETIM,SP10
          ELSE
            PACK      TEAMETIM,ENDTIME,SEC
          ENDIF
          MATCH     SP5,STRTTIME
          IF        @EQUAL
            PACK      DIM8,SP10          
          ELSE
            PACK      DIM8,STRTTIME,SEC    
          ENDIF
.
          PACK      KEY35,OPDBUNIQ,OPDBTEAM,SP1,TWO,NURSECDE,STRTDATE,DIM8
          CALL      RAOPTSM1
          IF        OVRCD = 1
            CALL      CLRVAR00
            MOVE      TWO,OPTSSIND
            MOVE      OPDBUNIQ,OPTSUNID
            MOVE      OPDBTEAM,OPTSTMNO
            MOVE      STRTDATE,OPTSSDAT
            PACK      OPTSSTIM,DIM8
            MOVE      NURSECDE,OPTSSCDE
            MOVE      NURSETYP,OPTSSTYP
            MOVE      SUPRLEVL,OPTSSLEV
            MOVE      ENDDATE,OPTSEDAT
            PACK      OPTSETIM,TEAMETIM
            CALL      WROPTSM1
          ELSE
            MOVE      TWO,OPTSSIND
            MOVE      OPDBUNIQ,OPTSUNID
            MOVE      OPDBTEAM,OPTSTMNO
            MOVE      STRTDATE,OPTSSDAT
            PACK      OPTSSTIM,DIM8
            MOVE      NURSECDE,OPTSSCDE
            MOVE      NURSETYP,OPTSSTYP
            MOVE      SUPRLEVL,OPTSSLEV
            MOVE      ENDDATE,OPTSEDAT
            PACK      OPTSETIM,TEAMETIM
            CALL      UPOPTSM1
          ENDIF
.
          GOTO      TEAM2000
.
TEAM8000  DISPLAY   *P1:24,*EL,"Total Records read : ",*V2LON,RECCOUNT,*HOFF;
          CALL      HITENTER
.
TEAM9999  RETURN
+
.***************************************************************************
.*                               PROC0000               Called by: ML4000  *
.*   Procedures : Convert data from the 'Operating Usage Table' (oprdetcf) *
.*                to the 'Patient MBS Table' (oprpmbaf)                    *
.***************************************************************************
PROC0000  MOVE      ZERO,RECCOUNT
          MOVE      ZERO,COUNTER
.
          PACK      KEY11,SP70
          CALL      RSOPDEC1
PROC1000  CALL      RKOPDEC1
          BRANCH    OVRCD,PROC8000
.
          ADD       ONE,RECCOUNT
          IF        (RECCOUNT%1000) = 0
            CLOCK     TIME,CTIMEIS
            DISPLAY   *P10:23,"Records Read ",*V2LON,RECCOUNT:
                      *P50:23,*V2LON,CTIMEIS
          ENDIF
.
PROC2000  COMPARE   SIX,COUNTER
          IF        !@LESS
            ADD       COUNTER,TOTALREC
            MOVE      ZERO,COUNTER
            GOTO      PROC1000
          ENDIF
.
          UNPACK    SP70,CMBSITEM
          ADD       ONE,COUNTER
.
          LOAD      CMBSITEM,COUNTER,OPDCICD1,OPDCICD2,OPDCICD3,OPDCICD4:
                                     OPDCICD5,OPDCICD6
.
          MATCH     SP9,CMBSITEM         * dont write record to oprpmbaf
          GOTO      PROC2000 IF EQUAL    * if mbs code is blank
.
          PACK      KEY13,OPDCUNIQ,OPDCTEAM,COUNTER,SP70
          CALL      RAOPPMB1
          IF        OVRCD = 1
            CALL      CLRVAR00
            MOVE      OPDCUNIQ,OPPMUNID
            MOVE      OPDCTEAM,OPPMTMNO
            MOVE      CMBSITEM,OPPMCMBS
            MOVE      COUNTER,OPPMCNTR
            CALL      WROPPMB1
          ELSE
            MOVE      OPDCUNIQ,OPPMUNID
            MOVE      OPDCTEAM,OPPMTMNO
            MOVE      CMBSITEM,OPPMCMBS
            MOVE      COUNTER,OPPMCNTR
            CALL      UPOPPMB1 
          ENDIF
.
          GOTO      PROC2000
.
PROC8000  DISPLAY   *P1:24,*EL,"Total Records read : ",*V2LON,RECCOUNT,*HOFF;
          CALL      HITENTER 
            
PROC9999  RETURN
+
.**************************************************************************
.*                               EXPN0000              Called by: ML5000  *
.*  Expensive Items Code: Convert data from the 'Operating Usage Table'   *
.*   (Implant Code)       (oprdetcf) to the 'Patient Expensive Item Table'*
.*                        (oprpeiaf)                                      *
.**************************************************************************
EXPN0000  MOVE      ZERO,RECCOUNT
          MOVE      ZERO,COUNTER
          MOVE      ZERO,TOTALREC
.
          PACK      KEY11,SP70
          CALL      RSOPDEC1
EXPN0500  CALL      RKOPDEC1
          BRANCH    OVRCD,EXPN8000
.
          ADD       ONE,RECCOUNT
          IF        (RECCOUNT%1000) = 0
            CLOCK     TIME,CTIMEIS
            DISPLAY   *P10:23,"Records Read ",*V2LON,RECCOUNT:
                      *P50:23,*V2LON,CTIMEIS
          ENDIF
.
EXPN1000  COMPARE   TEN,COUNTER
          IF        !@LESS
            ADD       COUNTER,TOTALREC
            MOVE      ZERO,COUNTER
            GOTO      EXPN0500
          ENDIF
. 
          UNPACK    SP70,IMPLNTCD,IMPLTQTY
          MOVE      ZERO,FORM2    
.
          ADD       ONE,COUNTER
.
          LOAD      IMPLNTCD,COUNTER,OPDCIMC1,OPDCIMC2,OPDCIMC3,OPDCIMC4:
                                     OPDCIMC5,OPDCIMC6,OPDCIMC7,OPDCIMC8:
                                     OPDCIMC9,OPDCIM10
.
          MATCH     SP6,IMPLNTCD              * Dont write record to oprpeiaf
          GOTO      EXPN1000 IF EQUAL         * if Item Code is blank
. 
          LOAD      IMPLTQTY,COUNTER,OPDCIMQ1,OPDCIMQ2,OPDCIMQ3,OPDCIMQ4:
                                     OPDCIMQ5,OPDCIMQ6,OPDCIMQ7,OPDCIMQ8:
                                     OPDCIMQ9,OPDCIQ10
.
          PACK      KEY19,IMPLNTCD,OPDCUNIQ,OPDCTEAM,COUNTER,SP20
          CALL      RAOPPEI2
          IF        OVRCD = 1
            CALL      CLRVAR00
            MOVE      IMPLNTCD,OPPECODE
            MOVE      OPDCUNIQ,OPPEUNID
            MOVE      OPDCTEAM,OPPETMNO
            MOVE      COUNTER,OPPECNTR
            MOVE      IMPLTQTY,OPPEQUAN
            CALL      WROPPEI2
          ELSE
            MOVE      IMPLNTCD,OPPECODE
            MOVE      OPDCUNIQ,OPPEUNID
            MOVE      OPDCTEAM,OPPETMNO
            MOVE      COUNTER,OPPECNTR
            MOVE      IMPLTQTY,OPPEQUAN
            CALL      UPOPPEI2
          ENDIF
.
          GOTO      EXPN1000
.
EXPN8000  DISPLAY   *P1:24,*EL,"Total Records read : ",*V2LON,RECCOUNT,*HOFF;
          CALL      HITENTER 
.
EXPN9999  RETURN
+
.**************************************************************************
.*                     TTIM0000                 Called by : ML6000        *
.*  Convert 'time fields' from the 'old' fields to the 'new' fields. User *
.*  will keyin their field preference for each time field                 *
.**************************************************************************
TTIM0000  UNPACK    SP70,TIMECALL,TIMEARRV,ANTHPREP,ANTHCOMM,PREPSTTM,SURGSTTM:
                         SURGEDTM,ANTHSEND,DRSSTIME,RECOVRYF,RECOVRYB,RECVRYDY:
                         RDEPART,EXITTHTR
.
          DISPLAY   *P1:3,*EF;
.
          DISPLAY   *P1:5,*V2LON,ONE,*HOFF:
                          " . Time called for        : ":
                    *P1:6,*V2LON,TWO,*HOFF:
                          " . Time Arrived           : ":
                    *P1:7,*V2LON,THREE,*HOFF:
                          " . Anaesthetic Prep       : ":
                    *P1:8,*V2LON,FOUR,*HOFF:
                          " . Anaesthetic Commenced  : ":
                    *P1:9,*V2LON,FIVE,*HOFF:
                          " . Prep Start Time        : ":
                    *P1:10,*V2LON,SIX,*HOFF:
                          " . Surgery Start Time     : ":
                    *P1:11,*V2LON,SEVEN,*HOFF:
                          " . Surgery End Time       : ":
                    *P1:12,*V2LON,EIGHT,*HOFF:
                          " . Anaesthetic End        : ":
                    *P1:13,*V2LON,NINE,*HOFF:
                          " . Time of Dressing       : ":
                    *P1:14,*V2LON,TEN,*HOFF:
                          ". Recovery Front         : ":
                    *P1:15,*V2LON,TEN1,*HOFF:
                          ". Recovery Back          : ":
                    *P1:16,*V2LON,TEN2,*HOFF:
                          ". Recovery Day Procedure : ":
                    *P1:17,*V2LON,TEN3,*HOFF:
                          ". Ready to Depart        : ":
                    *P1:18,*V2LON,TEN4,*HOFF:
                          ". Exit Theatre Complex   : " 
.
TTIM1000  DISPLAY   *P1:23,*EL
          MOVE      ZERO,EXIT
          CALL      MAINQST
          COMPARE   ZERO,CCITEM 	
          GOTO      TTIM9500 IF EQUAL
          COMPARE   "-1",CCITEM
          GOTO      TTIM9000 IF EQUAL
.
          BRANCH    CCITEM,TTIM1010,TTIM1020,TTIM1030,TTIM1040,TTIM1050:
                           TTIM1060,TTIM1070,TTIM1080,TTIM1090,TTIM1100:
                           TTIM1110,TTIM1120,TTIM1130,TTIM1140
.
          BEEP      
          GOTO      TTIM1000
.
. Time called for, Options : Pre-op 1-5 (oprdetaf)
.
TTIM1010  DISPLAY   *P1:23,*EL,"Valid Options: ",*V2LON,"Pre-Op - P1, P2, P3":
                               " P4, P5 ",*HOFF
          MOVE      FIVE,CVERT
          MOVE      ONE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,TIMECALL
          RESET     TIMECALL
.
          GOTO      TTIM1000
.
. Time Arrived   , Options : Pre-op 1-5 (oprdetaf)
.
TTIM1020  DISPLAY   *P1:23,*EL,"Valid Options: ",*V2LON,"Pre-Op - P1, P2, P3":
                               " P4, P5 ",*HOFF
          MOVE      SIX,CVERT
          MOVE      ONE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,TIMEARRV
          RESET     TIMEARRV
.
          GOTO      TTIM1000
.
. Anaesthetic Prep, Options : Pre-op 1-5 (oprdetaf)
.
TTIM1030  DISPLAY   *P1:23,*EL,"Valid Options: ",*V2LON,"Pre-Op - P1, P2, P3":
                               " P4, P5 ",*HOFF
          MOVE      SEVEN,CVERT
          MOVE      ONE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,ANTHPREP
          RESET     ANTHPREP
.
          GOTO      TTIM1000
.
. Anaesthetic Commenced, Options : Pre-op 1-5 (oprdetaf), Operation 1-4
.
TTIM1040  DISPLAY   *P1:23,*EL,"Valid Options: ":
                           *V2LON,"Pre-Op - P1, P2, P3, P4, P5 / ":
                                  "Operation - O1, O2, O3, O4 ",*HOFF
          MOVE      EIGHT,CVERT
          MOVE      TWO,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,ANTHCOMM
          RESET     ANTHCOMM
.
          GOTO      TTIM1000
.
. Prep Start Time, Options: Pre-op 1-5 (oprdetaf) ,Operation 1-4 (oprdetcf)
.
TTIM1050  DISPLAY   *P1:23,*EL,"Valid Options: ":
                           *V2LON,"Pre-Op - P1, P2, P3, P4, P5 / ":
                                  "Operation - O1, O2, O3, O4 ",*HOFF
          MOVE      NINE,CVERT
          MOVE      TWO,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,PREPSTTM
          RESET     PREPSTTM
.
          GOTO      TTIM1000
.
. Surgery Start Time, Options: Operation 1-4 (oprdetcf)
.
TTIM1060  DISPLAY   *P1:23,*EL,"Valid Options: ":
                           *V2LON,"Operation - O1, O2, O3, O4 ",*HOFF
          MOVE      TEN,CVERT
          MOVE      THREE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,SURGSTTM
          RESET     SURGSTTM
          GOTO      TTIM1000
.
. Surgery End Time, Options: Operation 1-4 (oprdetcf)
.
TTIM1070  DISPLAY   *P1:23,*EL,"Valid Options: ":
                           *V2LON,"Operation - O1, O2, O3, O4 ",*HOFF
          MOVE      TEN1,CVERT
          MOVE      THREE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,SURGEDTM
          RESET     SURGEDTM
          GOTO      TTIM1000
.
. Anaesthestic End, Options: Operation 1-4 (oprdetcf), Post-Op (oprdeaf)
.
TTIM1080  DISPLAY   *P1:23,*EL,"Valid Options: ",*V2LON,"Operation - O1, O2":
                               " O3, O4 / Post-Op - P1, P2, P3, P4 ",*HOFF
          MOVE      TEN2,CVERT
.
          MOVE      FOUR,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,ANTHSEND
          RESET     ANTHSEND
.
          GOTO      TTIM1000
.
. Time of Dressing, Options: Operation 1-4 (oprdetcf), Post-op 1-4 (oprdetaf)
.
TTIM1090  DISPLAY   *P1:23,*EL,"Valid Options: ",*V2LON,"Operation - O1, O2":
                               " O3, O4 / Post-Op - P1, P2, P3, P4 ",*HOFF
          MOVE      TEN3,CVERT
          MOVE      FOUR,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,DRSSTIME
          RESET     DRSSTIME
.
          GOTO      TTIM1000
.
. Recovery Front , Options: Operation 1-4 (oprdetcf), Post-op 1-4 (oprdetaf)
.
TTIM1100  DISPLAY   *P1:23,*EL,"Valid Options: ",*V2LON,"Operations - O1, O2":
                               " O3, O4 / Post-Op - P1, P2, P3, P4 ",*HOFF
          MOVE      TEN4,CVERT
          MOVE      FOUR,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,RECOVRYF
          RESET     RECOVRYF
          GOTO      TTIM1000
.
. Recovery Back, Options: Post-op 1-4 (oprdetaf) 
.
TTIM1110  DISPLAY   *P1:23,*EL,"Valid Options: ":
                           *V2LON,"Post-Op - P1, P2, P3, P4 ",*HOFF
          MOVE      TEN5,CVERT
          MOVE      FIVE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,RECOVRYB
          RESET     RECOVRYB
          GOTO      TTIM1000
.
. Recovery Day Procedure, Options: Post-op 1-4 (oprdetaf) 
.
TTIM1120  DISPLAY   *P1:23,*EL,"Valid Options: ":
                           *V2LON,"Post-Op - P1, P2, P3, P4 ",*HOFF
          MOVE      TEN6,CVERT
          MOVE      FIVE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,RECVRYDY
          RESET     RECVRYDY
          GOTO      TTIM1000
.
. Recovery to Depart, Options: Post-op 1-4 (oprdetaf) 
.
TTIM1130  DISPLAY   *P1:23,*EL,"Valid Options: ":
                           *V2LON,"Post-Op - P1, P2, P3, P4 ",*HOFF
          MOVE      TEN7,CVERT
          MOVE      FIVE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,RDEPART 
          RESET     RDEPART
          GOTO      TTIM1000
.
. Exit Theatre Complex, Options: Post-op 1-4 (oprdetaf) 
.
TTIM1140  DISPLAY   *P1:23,*EL,"Valid Options: ":
                           *V2LON,"Post-Op - P1, P2, P3, P4 ",*HOFF
          MOVE      TEN8,CVERT
          MOVE      FIVE,OPTNFLAG
          CALL      KEYN0000
.
          MOVE      KEY2,EXITTHTR
          RESET     EXITTHTR
          GOTO      TTIM1000
.
TTIM9000  MOVE      ONE,EXIT 
          GOTO      TTIM9999
.
. Post selected, check if there's anything to post
.
TTIM9500  PACK      DIM28,TIMECALL,TIMEARRV,ANTHPREP,ANTHCOMM,PREPSTTM:
                          SURGSTTM,SURGEDTM,ANTHSEND,DRSSTIME,RECOVRYF:
                          RECOVRYB,RECVRYDY,RDEPART,EXITTHTR
.
          MATCH     SP28,DIM28
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"No fields to Post. Select ":
                      *V2LON,"Cancel",*HOFF," to exit. ";
            CALL      HITENTER
            GOTO      TTIM1000
          ENDIF 
.
TTIM9999  RETURN
+
.**************************************************************************
.*                     WTTM0000                  Called by : ML6000       *
.**************************************************************************
WTTM0000  PACK      KEY10,SP70
          CALL      RSOPDEA3
WTTM1000  CALL      RKOPDEA3
          BRANCH    OVRCD,WTTM9999
.
          PACK      SKEY10,OPDAUNIQ        * save key10, it gets used again
.
WTTM1100  PACK      KEY11,OPDAUNIQ,SP1 
          CALL      RSOPDEC1
WTTM1200  CALL      RKOPDEC1
          BRANCH    OVRCD,WTTM1000
.
          MATCH     OPDAUNIQ,OPDCUNIQ
          GOTO      WTTM1000 IF NOT EQUAL
.
          UNPACK    SP70,STMECALL,STMEARRV,SANTHPRP,SANTHCOM,SPRPSTTM
          UNPACK    SP70,SSRGSTTM,SSRGEDTM,SANTHEND,SDRSSTME,SRECVRYF
          UNPACK    SP70,SRECVRYB,SRCVRYDY,SRDEPART,SEXTTHTR
.
WTTM2000  MATCH     "1",OPDCTEAM
          GOTO      WTTM2010 IF NOT EQUAL
.
          UNPACK    TIMECALL,DIM1,DIM1A
          RESET     DIM1    
          MATCH     SP1,DIM1
          GOTO      WTTM2010 IF EQUAL
.
          MOVE      DIM1A,FORM1
          LOAD      STMECALL,FORM1,OPDAPRE1,OPDAPRE2,OPDAPRE3:
                             OPDAPRE4,OPDAPRE5
.
          MATCH     SP8,STMECALL
          IF        @EQUAL
            PACK      STMECALL,SP10
            GOTO      WTTM2010 
          ENDIF
.
          PACK      STMECALL,STMECALL,SEC 
.
WTTM2010  MATCH     "1",OPDCTEAM
          GOTO      WTTM2020 IF NOT EQUAL
.
          UNPACK    TIMEARRV,DIM1,DIM1A
          RESET     DIM1    
          MATCH     SP1,DIM1
          GOTO      WTTM2020 IF EQUAL
.
          MOVE      DIM1A,FORM1
          LOAD      STMEARRV,FORM1,OPDAPRE1,OPDAPRE2,OPDAPRE3:
                                   OPDAPRE4,OPDAPRE5
.
          MATCH     SP8,STMEARRV
          IF        @EQUAL
            PACK      STMEARRV,SP10
            GOTO      WTTM2020 
          ENDIF
.
          PACK      STMEARRV,STMEARRV,SEC 
.
WTTM2020  MATCH     "1",OPDCTEAM
          GOTO      WTTM2030 IF NOT EQUAL
.
          UNPACK    ANTHPREP,DIM1,DIM1A
          RESET     DIM1       
          MATCH     SP1,DIM1
          GOTO      WTTM2030 IF EQUAL
.
          MOVE      DIM1A,FORM1
          LOAD      SANTHPRP,FORM1,OPDAPRE1,OPDAPRE2,OPDAPRE3:
                                   OPDAPRE4,OPDAPRE5
.
          MATCH     SP8,SANTHPRP
          IF        @EQUAL
            PACK      SANTHPRP,SP10
            GOTO      WTTM2030
          ENDIF
.
          PACK      SANTHPRP,SANTHPRP,SEC 
.
WTTM2030  UNPACK    ANTHCOMM,DIM1,DIM1A
          RESET     DIM1       
          MATCH     SP1,DIM1
          GOTO      WTTM2040 IF EQUAL
.
          MOVE      DIM1A,FORM1
          MATCH     ANSP,DIM1
          IF        @EQUAL
            MATCH     "1",OPDCTEAM
            GOTO      WTTM2040 IF NOT EQUAL
.
            LOAD      SANTHCOM,FORM1,OPDAPRE1,OPDAPRE2,OPDAPRE3:
                                     OPDAPRE4,OPDAPRE5
          ELSE
            LOAD      SANTHCOM,FORM1,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
          ENDIF
.
          MATCH     SP8,SANTHCOM
          IF        @EQUAL
            PACK      SANTHCOM,SP10
            GOTO      WTTM2040
          ENDIF
.
          PACK      SANTHCOM,SANTHCOM,SEC 
.
WTTM2040  UNPACK    PREPSTTM,DIM1,DIM1A
          RESET     DIM1       
          MATCH     SP1,DIM1
          GOTO      WTTM2050 IF EQUAL
.
          MOVE      DIM1A,FORM1
          MATCH     ANSP,DIM1
          IF        @EQUAL
            LOAD      SPRPSTTM,FORM1,OPDAPRE1,OPDAPRE2,OPDAPRE3:
                                     OPDAPRE4,OPDAPRE5
          ELSE
            LOAD      SPRPSTTM,FORM1,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
          ENDIF
.
          MATCH     SP8,SPRPSTTM
          IF        @EQUAL
            PACK      SPRPSTTM,SP10
            GOTO      WTTM2050
          ENDIF
.
          PACK      SPRPSTTM,SPRPSTTM,SEC 
.
WTTM2050  UNPACK    SURGSTTM,DIM1,DIM1A
          RESET     DIM1
          MATCH     SP1,DIM1
          GOTO      WTTM2060 IF EQUAL
.
          MOVE      DIM1A,FORM1
          LOAD      SSRGSTTM,FORM1,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
.
          MATCH     SP8,SSRGSTTM
          IF        @EQUAL
            PACK      SSRGSTTM,SP10
            GOTO      WTTM2060
          ENDIF
.
          PACK      SSRGSTTM,SSRGSTTM,SEC 
.
WTTM2060  UNPACK    SURGEDTM,DIM1,DIM1A
          RESET     DIM1
          MATCH     SP1,DIM1
          GOTO      WTTM2070 IF EQUAL
.
          MOVE      DIM1A,FORM1
          LOAD      SSRGEDTM,FORM1,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
.
          MATCH     SP8,SSRGEDTM
          IF        @EQUAL
            PACK      SSRGEDTM,SP10
            GOTO      WTTM2070
          ENDIF
.
          PACK      SSRGEDTM,SSRGEDTM,SEC 
.
WTTM2070  UNPACK    ANTHSEND,DIM1,DIM1A
          RESET     DIM1
          MATCH     SP1,DIM1
          GOTO      WTTM2080 IF EQUAL
.
          MOVE      DIM1A,FORM1
          MATCH     ANSO,DIM1
          IF        @EQUAL
            LOAD      SANTHEND,FORM1,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
          ELSE
            MATCH     "1",OPDCTEAM
            GOTO      WTTM2080 IF NOT EQUAL
.
            LOAD      SANTHEND,FORM1,OPDAPOS1,OPDAPOS2,OPDAPOS3,OPDAPOS4
          ENDIF
.
          MATCH     SP8,SANTHEND
          IF        @EQUAL
            PACK      SANTHEND,SP10
            GOTO      WTTM2080
          ENDIF
.
          PACK      SANTHEND,SANTHEND,SEC 
.
WTTM2080  UNPACK     DRSSTIME,DIM1,DIM1A
          RESET      DIM1
          MATCH      SP1,DIM1
          GOTO       WTTM2090 IF EQUAL
.
          MOVE       DIM1A,FORM1
          MATCH      ANSO,DIM1
          IF         @EQUAL
            LOAD       SDRSSTME,FORM1,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
          ELSE
.
            LOAD       SDRSSTME,FORM1,OPDAPOS1,OPDAPOS2,OPDAPOS3,OPDAPOS4
          ENDIF
.
          MATCH      SP8,SDRSSTME
          IF         @EQUAL
            PACK       SDRSSTME,SP10
            GOTO       WTTM2090
          ENDIF
.
          PACK       SDRSSTME,SDRSSTME,SEC 
.
WTTM2090  UNPACK     RECOVRYF,DIM1,DIM1A
          RESET      DIM1
          MATCH      SP1,DIM1
          GOTO       WTTM2100 IF EQUAL
.
          MOVE       DIM1A,FORM1
          MATCH      ANSO,DIM1
          IF         @EQUAL
            LOAD       SRECVRYF,FORM1,OPDCOTM1,OPDCOTM2,OPDCOTM3,OPDCOTM4
          ELSE
            MATCH      "1",OPDCTEAM
            GOTO       WTTM2100 IF NOT EQUAL
.
            LOAD       SRECVRYF,FORM1,OPDAPOS1,OPDAPOS2,OPDAPOS3,OPDAPOS4
          ENDIF
.
          MATCH      SP8,SRECVRYF
          IF         @EQUAL
            PACK       SRECVRYF,SP10
            GOTO       WTTM2100
          ENDIF
.
          PACK       SRECVRYF,SRECVRYF,SEC 
.
WTTM2100  MATCH      "1",OPDCTEAM
          GOTO       WTTM2110 IF NOT EQUAL
.
          UNPACK     RECOVRYB,DIM1,DIM1A
          RESET      DIM1
          MATCH      SP1,DIM1
          GOTO       WTTM2110 IF EQUAL
.
          MOVE       DIM1A,FORM1
          LOAD       SRECVRYB,FORM1,OPDAPOS1,OPDAPOS2,OPDAPOS3,OPDAPOS4
.
          MATCH      SP8,SRECVRYB
          IF         @EQUAL
            PACK       SRECVRYB,SP10
            GOTO       WTTM2110
          ENDIF
.
          PACK       SRECVRYB,SRECVRYB,SEC 
.
WTTM2110  MATCH      "1",OPDCTEAM
          GOTO       WTTM2120 IF NOT EQUAL
.
          UNPACK     RECVRYDY,DIM1,DIM1A
          RESET      DIM1
          MATCH      SP1,DIM1
          GOTO       WTTM2120 IF EQUAL
.
          MOVE       DIM1A,FORM1
          LOAD       SRCVRYDY,FORM1,OPDAPOS1,OPDAPOS2,OPDAPOS3,OPDAPOS4
.
          MATCH      SP8,SRCVRYDY
          IF         @EQUAL
            PACK       SRCVRYDY,SP10
            GOTO       WTTM2120
          ENDIF
.
          PACK       SRCVRYDY,SRCVRYDY,SEC 
.
WTTM2120  MATCH      "1",OPDCTEAM
          GOTO       WTTM2130 IF NOT EQUAL
. 
          UNPACK     RDEPART,DIM1,DIM1A
          RESET      DIM1
          MATCH      SP1,DIM1 
          GOTO       WTTM2130 IF EQUAL
.
          MOVE       DIM1A,FORM1
          LOAD       SRDEPART,FORM1,OPDAPOS1,OPDAPOS2,OPDAPOS3,OPDAPOS4
.
          MATCH      SP8,SRDEPART
          IF         @EQUAL
            PACK       SRDEPART,SP10
            GOTO       WTTM2130
          ENDIF
.
          PACK       SRDEPART,SRDEPART,SEC 
.
WTTM2130  MATCH     "1",OPDCTEAM
          GOTO      WTTM2140 IF NOT EQUAL
. 
          UNPACK    EXITTHTR,DIM1,DIM1A
          RESET     DIM1
          MATCH     SP1,DIM1 
          GOTO      WTTM2140 IF EQUAL
.
          MOVE      DIM1A,FORM1
          LOAD      SEXTTHTR,FORM1,OPDAPOS1,OPDAPOS2,OPDAPOS3,OPDAPOS4
.
          MATCH     SP8,SEXTTHTR
          IF        @EQUAL
            PACK      SEXTTHTR,SP10
            GOTO      WTTM2140
          ENDIF
.
          PACK      SEXTTHTR,SEXTTHTR,SEC 
.
WTTM2140  MATCH      "1",OPDCTEAM
          GOTO       WTTM2200 IF NOT EQUAL
. 
          PACK       KEY10,OPDAUNIQ
          CALL       RDOPARD1
          IF         OVRCD = 1
            CALL       CLRVAR15
            CALL       LDAR0000
            MOVE       OPDCUNIQ,OPARUNID
            CALL       WROPARD1
          ELSE
            CALL       LDAR0000
            MOVE       OPDCUNIQ,OPARUNID
            CALL       UPOPARD1
          ENDIF
.
WTTM2200  PACK       KEY11,OPDCUNIQ,OPDCTEAM
          CALL       RDOPSRG1
          IF         OVRCD = 1
            CALL       CLRVAR10
            CALL       LDSG0000                   * load save variables
            MOVE       OPDCUNIQ,OPSGUNID
            MOVE       OPDCTEAM,OPSGTMNO
            CALL       WROPSRG1
          ELSE
            CALL       LDSG0000
            MOVE       OPDCUNIQ,OPSGUNID
            MOVE       OPDCTEAM,OPSGTMNO
            CALL       UPOPSRG1
          ENDIF
.
          GOTO      WTTM1200
.
WTTM9999  RETURN
.
LDAR0000  MATCH     SP8,STMECALL
          IF        @EQUAL
            MATCH     SP2,TIMECALL
            IF        !@EQUAL
              MOVE      STMECALL,OPARTCAL
            ENDIF
          ELSE
            MOVE      STMECALL,OPARTCAL
          ENDIF
.
          MATCH     SP8,STMEARRV
          IF        @EQUAL
            MATCH     SP2,TIMEARRV
            IF        !@EQUAL
              MOVE      STMEARRV,OPARATIM
            ENDIF
          ELSE
            MOVE      STMEARRV,OPARATIM
          ENDIF
.
          MATCH     SP8,SANTHPRP
          IF        @EQUAL
            MATCH     SP2,ANTHPREP
            IF        !@EQUAL
              MOVE      SANTHPRP,OPARANAP
            ENDIF
          ELSE
            MOVE      SANTHPRP,OPARANAP
          ENDIF
.
          MATCH     SP8,SANTHCOM
          IF        @EQUAL
            MATCH     SP2,ANTHCOMM
            IF        !@EQUAL
              MOVE      SANTHCOM,OPARANAS
            ENDIF
          ELSE
            MOVE      SANTHCOM,OPARANAS
          ENDIF
.
          MATCH     SP8,SANTHEND
          IF        @EQUAL
            MATCH     SP2,ANTHSEND
            IF        !@EQUAL
              MOVE      SANTHEND,OPARANAE
            ENDIF
          ELSE
            MOVE      SANTHEND,OPARANAE
          ENDIF
.
          MATCH     SP8,SRECVRYF
          IF        @EQUAL
            MATCH     SP2,RECOVRYF
            IF        !@EQUAL
              MOVE      SRECVRYF,OPARTIRF
            ENDIF
          ELSE
            MOVE      SRECVRYF,OPARTIRF
          ENDIF
.
          MATCH     SP8,SRECVRYB
          IF        @EQUAL
            MATCH     SP2,RECOVRYB
            IF        !@EQUAL
              MOVE      SRECVRYB,OPARTIRB
            ENDIF
          ELSE
            MOVE      SRECVRYB,OPARTIRB
          ENDIF
.
          MATCH     SP8,SRCVRYDY
          IF        @EQUAL
            MATCH     SP2,RECVRYDY
            IF        !@EQUAL
              MOVE      SRCVRYDY,OPARTIRD
            ENDIF
          ELSE
            MOVE      SRCVRYDY,OPARTIRD
          ENDIF
.
          MATCH     SP8,SRDEPART
          IF        @EQUAL
            MATCH     SP2,RDEPART
            IF        !@EQUAL
              MOVE      SRDEPART,OPARTIDP
            ENDIF
          ELSE
            MOVE      SRDEPART,OPARTIDP
          ENDIF
.
          MATCH     SP8,SEXTTHTR
          IF        @EQUAL
            MATCH     SP2,EXITTHTR
            IF        !@EQUAL
              MOVE      SEXTTHTR,OPARTETC
            ENDIF
          ELSE
            MOVE      SEXTTHTR,OPARTETC
          ENDIF
.
          RETURN
.
LDSG0000  MATCH     SP8,SPRPSTTM
          IF        @EQUAL
            MATCH     SP2,PREPSTTM
            IF        !@EQUAL
              MOVE      SPRPSTTM,OPSGTIPS
            ENDIF
          ELSE
            MOVE      SPRPSTTM,OPSGTIPS
          ENDIF
.
          MATCH     SP8,SSRGSTTM
          IF        @EQUAL
            MATCH     SP2,SURGSTTM
            IF        !@EQUAL
              MOVE      SSRGSTTM,OPSGTISS 
            ENDIF
          ELSE
            MOVE      SSRGSTTM,OPSGTISS 
          ENDIF
.
          MATCH     SP8,SSRGEDTM
          IF        @EQUAL
            MATCH     SP2,SURGEDTM
            IF        !@EQUAL
              MOVE      SSRGEDTM,OPSGTISE
            ENDIF
          ELSE
            MOVE      SSRGEDTM,OPSGTISE
          ENDIF
.
          MATCH     SP8,SDRSSTME
          IF        @EQUAL
            MATCH     SP2,DRSSTIME
            IF        !@EQUAL
              MOVE      SDRSSTME,OPSGTIDR
            ENDIF
          ELSE
            MOVE      SDRSSTME,OPSGTIDR
          ENDIF
          RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file update each record with default     *
.**********************************************************************
READ0000  MOVE      ZERO,RECNUM
          DISPLAY   *P1:22,*EL,"Total Rec  : ";
          OPEN      OLDFILE,"oprsrgaf"
          PACK      KEY11,SP70
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
          MOVE      ZERO,OPSGNOOP
          PACK      OPSGSPAR,SP70
.
          PACK      KEY11,OPSGUNID,OPSGTMNO
          CALL      RAOPSRG1
          IF        OVRCD = 1
            CALL      WROPSRG1
          ELSE
            CALL      UPOPSRG1
          ENDIF
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:22,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     OLDFILE                       * close old file
.
          DISPLAY   *P1:24,*V2LON,"oprsrgaf table updated. ",*HOFF;
          CALL      HITENTER
.
READ9999  CLOSE     OLDFILE
          RETURN
+
.**************************************************************************
.*                     KEYN0000                  Called by : TTIM0000     *
.**************************************************************************
KEYN0000  UNPACK    SP10,KEY2
          KEYIN     *P30:CVERT,*EL,*V2LON,KEY2    
          RESET     KEY2
.
          MATCH     SP2,KEY2
          GOTO      KEYN9999 IF EQUAL
.
          UNPACK    KEY2,DIM1,DIM1A
          RESET     DIM1A
          MATCH     SP1,DIM1A
          IF        @EQUAL
            BEEP  
            GOTO    KEYN0000
          ENDIF
.
          MOVE      DIM1A,FORM1
.
          BRANCH    OPTNFLAG,KEYN1000:    * Pre-Op 1-5
                             KEYN1000:    * Pre-Op 1-5, Operation 1-4
                             KEYN2000:    * Operation 1-4
                             KEYN2000:    * Operation 1-4, Post-op 1-4
                             KEYN3000     * Post-op 1-4
.
KEYN1000  MATCH     ANSP,DIM1
          IF        @EQUAL
            IF        FORM1<1|FORM1>5
              BEEP    
              GOTO      KEYN0000
            ENDIF
.
            GOTO      KEYN9999
          ELSE
            COMPARE   TWO,OPTNFLAG        * Check for Operations as well
            GOTO      KEYN2000 IF EQUAL
          ENDIF
.
          BEEP
          GOTO      KEYN0000
.
KEYN2000  MATCH     ANSO,DIM1
          IF        @EQUAL
            IF        FORM1<1|FORM1>4
              BEEP
              GOTO      KEYN0000
            ENDIF
.
            GOTO      KEYN9999
          ELSE
            COMPARE   FOUR,OPTNFLAG         * Check for Post-Op as well
            GOTO      KEYN3000 IF EQUAL
          ENDIF
.
          BEEP
          GOTO      KEYN0000
.
KEYN3000  MATCH     ANSP,DIM1
          IF        @EQUAL
            IF        FORM1<1|FORM1>4
              BEEP 
              GOTO      KEYN0000
            ENDIF
            GOTO      KEYN9999
          ENDIF
.
          BEEP
          GOTO      KEYN0000            
.
KEYN9999  RETURN
+
.**************************************************************************
.*                     NDAT0000                  Called by : TEAM0000     *
.*   PARAMETERS REQURIED - SCC, SYY, SMM, SDD  - which is start date      *
.*   add 1 to start date to calculate the next day's date                 *
***************************************************************************
NDAT0000  UNPACK    STRTDATE,SCC,SYY,SMM,SDD
          MOVE      SMM,MM                        * move month
          MOVE      SYY,YY                        * move year
          MOVE      SDD,DD                        * move day
          MOVE      SCC,CC
.
          CALL      DMYCON
.
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
.
          CALL      JULCON
          MOVE      YY,CYEAR
          MOVE      MM,CMON
          MOVE      DD,CDAY
          MOVE      CC,CCENT
.
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDATE
.
NDAT9999  RETURN
.
CLRVAR00  BRANCH    COPTION,CLRVAR10,CLRVAR10,CLRVAR20,CLRVAR30,CLRVAR40:
                            CLRVAR10
          GOTO      CLRVAR99
.
.  Clear oprsrgaf and oprardaf variables
.
CLRVAR10  UNPACK    SP70,OPSGUNID,OPSGTMNO,OPSGTIPS
          UNPACK    SP70,OPSGTIDR,OPSGTISS,OPSGTISE
          UNPACK    SP70,OPSGSGDL,OPSGCCNT,OPSGCNTO
          UNPACK    SP70,OPSGBLOS,OPSGWCON,OPSGWCM1
          UNPACK    SP70,OPSGWCM2,OPSGWCM3,OPSGICD1
          UNPACK    SP70,OPSGICD2,OPSGICD3,OPSGDST1
          UNPACK    SP70,OPSGDCD1,OPSGDNM1,OPSGDPS1
          UNPACK    SP70,OPSGDCK1,OPSGDPR1,OPSGDST2
          UNPACK    SP70,OPSGDCD2,OPSGDNM2,OPSGDPS2
          UNPACK    SP70,OPSGDCK2,OPSGDPR2,OPSGCAT1
          UNPACK    SP70,OPSGCAT2,OPSGDRT1,OPSGDRT2
          UNPACK    SP70,OPSGPACK,OPSGDRS1,OPSGDRS2
          UNPACK    SP70,OPSGDRS3,OPSGWDV1,OPSGWDV2
          UNPACK    SP70,OPSGWDV3,OPSGIRIG,OPSGIRGS
.
          MOVE      ZERO,OPSGIRAI
          MOVE      ZERO,OPSGIRAO
.
          UNPACK    SP70,OPSGCLFS,OPSGINFC,OPSGSPMI
          UNPACK    SP70,OPSGSPAP,OPSGOTHR,OPSGUC01
          UNPACK    SP70,OPSGUC02,OPSGUC03,OPSGUC04
.       
          UNPACK    SP70,OPSGUC05,OPSGUC06,OPSGUC07
          UNPACK    SP70,OPSGUC08,OPSGUC09,OPSGUC10
          UNPACK    SP70,OPSGUC11,OPSGUC12,OPSGUC13
          UNPACK    SP70,OPSGUC14,OPSGUC15,OPSGUC16
          UNPACK    SP70,OPSGUC17,OPSGUC18,OPSGUC19
          UNPACK    SP70,OPSGUC20,OPSGUY01,OPSGUY02
          UNPACK    SP70,OPSGUY03,OPSGUY04,OPSGUY05
          UNPACK    SP70,OPSGUY06,OPSGUY07,OPSGUY08
          UNPACK    SP70,OPSGUY09,OPSGUY10,OPSGUT01
          UNPACK    SP70,OPSGUT02,OPSGUT03,OPSGUT04
          UNPACK    SP70,OPSGUT05,OPSGUT06,OPSGUT07
          UNPACK    SP70,OPSGUT08,OPSGUT09,OPSGUT10
.
          MOVE      ZERO,OPSGUF01
          MOVE      ZERO,OPSGUF02
          MOVE      ZERO,OPSGUF03
          MOVE      ZERO,OPSGUF04
          MOVE      ZERO,OPSGUF05
          MOVE      ZERO,OPSGUF06
          MOVE      ZERO,OPSGUF07
          MOVE      ZERO,OPSGUF08
          MOVE      ZERO,OPSGUF09
          MOVE      ZERO,OPSGUF10
.
          UNPACK    SP70,OPSGUTHR
          UNPACK    SP70,OPSGIDES
.
          MOVE      ZERO,OPSGNOOP 
.
          UNPACK    SP70,OPSGUNID,OPSGTMNO,OPSGCCNT
          GOTO      CLRVAR99
.
CLRVAR15  UNPACK    SP70,OPARUNID,OPARATIM,OPARANUR
          UNPACK    SP70,OPARRLAT,OPARPCLC,OPARCSFS,OPARMDRE,OPARXRAY,OPARBLEM
          UNPACK    SP70,OPARMUPJ,OPARPMED,OPARALCK
          UNPACK    SP70,OPARPROT
          UNPACK    SP70,OPARUC01,OPARUC02,OPARUC03,OPARUC04,OPARUC05
          UNPACK    SP70,OPARUC06,OPARUC07,OPARUC08,OPARUC09,OPARUC10
          UNPACK    SP70,OPARUY01,OPARUY02,OPARUY03,OPARUY04,OPARUY05
          UNPACK    SP70,OPARUT01,OPARUT02,OPARUT03,OPARUT04,OPARUT05
.
          MOVE      ZERO,OPARUF01
          MOVE      ZERO,OPARUF02
          MOVE      ZERO,OPARUF03
          MOVE      ZERO,OPARUF04
          MOVE      ZERO,OPARUF05
.
          UNPACK    SP70,OPARTCAL,OPARUIAR,OPARANAP,OPARANAS,OPARANAE,OPARITYP
          UNPACK    SP70,OPARUC11,OPARUC12,OPARUC13,OPARUC14,OPARUC15
          UNPACK    SP70,OPARUC16,OPARUC17,OPARUC18,OPARUC19,OPARUC20
          UNPACK    SP70,OPARUY06,OPARUY07,OPARUY08,OPARUY09,OPARUY10
          UNPACK    SP70,OPARUT06,OPARUT07,OPARUT08,OPARUT09,OPARUT10
.
          MOVE      ZERO,OPARUF06
          MOVE      ZERO,OPARUF07
          MOVE      ZERO,OPARUF08
          MOVE      ZERO,OPARUF09
          MOVE      ZERO,OPARUF10
.
          UNPACK    SP70,OPARUANA,OPARTIRF,OPARNUF1,OPARNUF2,OPARTIRB
          UNPACK    SP70,OPARNUB1,OPARNUB2,OPARTIRD,OPARNUD1,OPARNUD2
          UNPACK    SP70,OPARTETC,OPARUREC,OPARTEXP,OPARTICU,OPARRDCD OPARTIDP
          UNPACK    SP70,OPARUC21,OPARUC22,OPARUC23,OPARUC24,OPARUC25
          UNPACK    SP70,OPARUC26,OPARUC27,OPARUC28,OPARUC29,OPARUC30
          UNPACK    SP70,OPARUY11,OPARUY12,OPARUY13,OPARUY14,OPARUY15
          UNPACK    SP70,OPARUT11,OPARUT12,OPARUT13,OPARUT14,OPARUT15
.
          MOVE      ZERO,OPARUF11
          MOVE      ZERO,OPARUF12
          MOVE      ZERO,OPARUF13
          MOVE      ZERO,OPARUF14
          MOVE      ZERO,OPARUF15
          GOTO      CLRVAR99
.
. clear oprtsmaf variables
.
CLRVAR20  UNPACK    SP70,OPTSUNID,OPTSTMNO,OPTSSCDE,OPTSSDAT,OPTSSTIM
          UNPACK    SP70,OPTSEDAT,OPTSETIM,OPTSSLEV,OPTSSTYP,OPTSINST
          MOVE      ZERO,OPTSSIND
          GOTO      CLRVAR99
.
.  Clear oprpmbaf
.
CLRVAR30  UNPACK    SP70,OPPMUNID,OPPMTMNO,OPPMCMBS
          MOVE      ZERO,OPPMCNTR
          GOTO      CLRVAR99
.
.  Clear oprpeiaf
.
CLRVAR40  UNPACK    SP70,OPPEUNID,OPPETMNO,OPPECODE
          MOVE      ZERO,OPPEQUAN
          MOVE      ZERO,OPPECNTR
          GOTO      CLRVAR99
.
CLRVAR99  RETURN
+
.**********************************************************************
. ---- OLD IO ROUTINES ----
.**********************************************************************
READSOLD  RESET     KEY11                                  
          READ      OLDFILE,KEY11;;            
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;OPSGUNID,OPSGTMNO,OPSGTIPS,OPSGTIDR,OPSGTISS:
                        OPSGTISE,OPSGSGDL,OPSGCCNT,OPSGCNTO,OPSGBLOS,OPSGWCON:
                        OPSGWCM1,OPSGWCM2,OPSGWCM3,OPSGICD1,OPSGICD2,OPSGICD3:
                        OPSGDST1,OPSGDCD1,OPSGDNM1,OPSGDPS1,OPSGDCK1,OPSGDPR1:
                        OPSGDST2,OPSGDCD2,OPSGDNM2,OPSGDPS2,OPSGDCK2,OPSGDPR2:
                        OPSGCAT1,OPSGCAT2,OPSGDRT1,OPSGDRT2,OPSGPACK,OPSGDRS1:
                        OPSGDRS2,OPSGDRS3,OPSGWDV1,OPSGWDV2,OPSGWDV3,OPSGIRIG:
                        OPSGIRGS,OPSGIRAI,OPSGIRAO,OPSGCLFS,OPSGINFC,OPSGSPMI:
                        OPSGSPAP,OPSGOTHR,OPSGUC01,OPSGUC02,OPSGUC03,OPSGUC04:
                        OPSGUC05,OPSGUC06,OPSGUC07,OPSGUC08,OPSGUC09,OPSGUC10:
                        OPSGUC11,OPSGUC12,OPSGUC13,OPSGUC14,OPSGUC15,OPSGUC16:
                        OPSGUC17,OPSGUC18,OPSGUC19,OPSGUC20,OPSGUY01,OPSGUY02:
                        OPSGUY03,OPSGUY04,OPSGUY05,OPSGUY06,OPSGUY07,OPSGUY08:
                        OPSGUY09,OPSGUY10,OPSGUT01,OPSGUT02,OPSGUT03,OPSGUT04:
                        OPSGUT05,OPSGUT06,OPSGUT07,OPSGUT08,OPSGUT09,OPSGUT10:
                        OPSGUF01,OPSGUF02,OPSGUF03,OPSGUF04,OPSGUF05,OPSGUF06:
                        OPSGUF07,OPSGUF08,OPSGUF09,OPSGUF10,OPSGUTHR,OPSGIDES:
                        OPSGSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       OPRARDIO/INC
          INC       OPRDEAIO/INC
          INC       OPRDEBIO/INC
          INC       OPRDECIO/INC
          INC       OPRPEIIO/INC
          INC       OPRPMBIO/INC
          INC       OPRSRGIO/INC
          INC       OPRTSMIO/INC
          INC       PATCODIO/INC
