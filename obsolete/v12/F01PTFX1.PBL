.*****************************************************************************
.*    Program      : F01PTFX1.PBL                                            *
.*    Description  : Conversion patfx1af to new File layout                  *
.*                                                                           *
.*    Author       : Peter Vela                                              *
.*    Date         : 01/11/2010                                              *
.*    Modifications:                                                         *
.*        V10.01.01 J.Tan            CAR 233037                              *
.*                  Fixed iserase for ORACLE                                 *
.*        V10.01.00 Peter Vela       CAR 233037                              *
.*                  Created program                                          *
.*****************************************************************************
.
          INC       STD001FD
.         INC       PATCMXFD/INC
.
PATCMXA1   IFILE SQL, FIXED=50, KEY="U1-3,4-9,10-18,19-19,33-40,41-46"
PATCMXA2   IFILE SQL, FIXED=50, KEY="U41-46,1-3,4-9,10-18,19-19,33-40"
.
.NAME       TYPE   LENGTH  PHYSICAL   START     DESCRIPTION
.----       ----   ------  --------   -----     -----------
PTCMCLMN    DIM      3        3         1       Claim code (Cat CL)
PTCMHFND    DIM      6        6         4       Health Fund
PTCMCASM    DIM      9        9        10       DRG/MBS Code
PTCMSTRT    DIM      1        1        19       Start type
.                                               1 = Admission from
.                                               2 = Discharged from
PTCMSTRD    DIM      8        8        20       Start date
PTCMXLOS    FORM     4        3        28       Expected Length of Stay
PTCMDIFG    FORM     1        2        31       Detailed invoice flag
PTCMEDAY    DIM      8        8        33       End Date (ccyymmdd)
PTCMCNID    DIM      6        6        41       Contract ID
PTCMSPAR    DIM      3        3        47       Spare
.
.End of Record                         50
.
FINDFILE  FILE      ASCII, FIXED=256
.
TMPCMXA1   IFILE SQL, FIXED=50, KEY="U4-9,33-40,1-3,10-18,19-19,41-46"
.
.NAME       TYPE   LENGTH  PHYSICAL   START     DESCRIPTION
.----       ----   ------  --------   -----     -----------
.PTCMCLMN    DIM      3        3         1       Claim code (Cat CL)
.PTCMHFND    DIM      6        6         4       Health Fund
.PTCMCASM    DIM      9        9        10       DRG/MBS Code
.PTCMSTRT    DIM      1        1        19       Start type
.                                               1 = Admission from
.                                               2 = Discharged from
.PTCMSTRD    DIM      8        8        20       Start date
.PTCMXLOS    FORM     4        3        28       Expected Length of Stay
.PTCMDIFG    FORM     1        2        31       Detailed invoice flag
.PTCMEDAY    DIM      8        8        33       End Date (ccyymmdd)
.PTCMCNID    DIM      6        6        41       Contract ID
.PTCMSPAR    DIM      3        3        47       Spare
.
.End of Record                         50
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.   
OLDFILE    IFILE    SQL, FIXED=418, KEY="U1-6"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.PTFXHFND   DIM       6           6         1      Health Fund Code
.PTFXEXTR   FORM      2           2         7      EDI Extract Flag
.                                                 0 = Not running EDI extract
.                                                 1 = Run HOSClaims EDI extract
.                                                   or Singapore MediSave H/Fund
.                                                 2 = Sing. MediShield InsurCoy
.                                                 3 = Eclipse Gateway Claiming
.PTFXTFLG   DIM       1           1         9      EDI Test Flag
.                                                 Blank = Not using EDI
.                                                 "T" = Test
.                                                 "P" = Production
.PTFXADDR   DIM      60          60        10      EDI Address
.PTFXSUBJ   DIM      30          30        70      EDI Subject
.PTFXADD1   DIM      35          35       100      Foreign Address Line 1
.PTFXADD2   DIM      35          35       135      Foreign Address Line 2
.PTFXADD3   DIM      35          35       170      Foreign Address Line 3
.PTFXADD4   DIM      35          35       205      Foreign Address Line 4
.PTFXPOST   DIM       8           8       240      Foreign Postcode
.PTFXZINV   DIM       1           1       248      EDI Zero Invoice Flag
.                                                 0 = Don't send zero invoices
.                                                 1 = Send zero invoices
.PTFXSCEM   DIM      80          80       249      Eclipse Sender Contact Email
.PTFXSCPN   DIM      40          40       329      Eclipse Sender Contact Name
.PTFXSCPP   DIM      20          20       369      Eclipse Sender Contact Phone
.PTFXECLP   DIM       3           3       389      Eclipse Participant
.PTFXSPAR   DIM      26          26       392      Spare Variable
.
.End of Record                           418
.
.                                     ******** copy the new FD here *******
.
PATFX1A1   IFILE    SQL, FIXED=576, KEY="U1-6"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PTFXHFND   DIM       6           6         1      Health Fund Code
PTFXEXTR   FORM      2           2         7      EDI Extract Flag
.                                                 0 = Not running EDI extract
.                                                 1 = Run HOSClaims EDI extract
.                                                   or Singapore MediSave H/Fund
.                                                 2 = Sing. MediShield InsurCoy
.                                                 3 = Eclipse Gateway Claiming
PTFXTFLG   DIM       1           1         9      EDI Test Flag
.                                                 Blank = Not using EDI
.                                                 "T" = Test
.                                                 "P" = Production
PTFXADDR   DIM      60          60        10      EDI Address
PTFXSUBJ   DIM      30          30        70      EDI Subject
PTFXADD1   DIM      35          35       100      Foreign Address Line 1
PTFXADD2   DIM      35          35       135      Foreign Address Line 2
PTFXADD3   DIM      35          35       170      Foreign Address Line 3
PTFXADD4   DIM      35          35       205      Foreign Address Line 4
PTFXPOST   DIM       8           8       240      Foreign Postcode
PTFXZINV   DIM       1           1       248      EDI Zero Invoice Flag
.                                                 0 = Don't send zero invoices
.                                                 1 = Send zero invoices
PTFXSCEM   DIM      80          80       249      Eclipse Sender Contact Email
PTFXSCPN   DIM      40          40       329      Eclipse Sender Contact Name
PTFXSCPP   DIM      20          20       369      Eclipse Sender Contact Phone
PTFXECLP   DIM       3           3       389      Eclipse Participant
PTFXCEFR   DIM       1           1       392      Contracts Effective From
.                                                 (valid options are)
.                                                 0 - As at the effective date
.                                                 1 - For Admissions From
.                                                 2 - For Discharges From
PTFXRHCD   DIM       3           3       393      Reason for Hold Code
PTFXRHFT   DIM      80          80       396      Reason for Hold Free Text
PTFXSPAR   DIM     100         100       476      Spare Variable
.
.End of Record                           576
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DIM60     DIM       60
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
. 
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PATFX1FD"
PRGID     INIT      "F01PTFX1"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                         MAIN0000                                          *
.*                      Mainline code                                        *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * Choose main option
          BRANCH    EXIT,MAIN9999                 * EXIT
          BRANCH    OPTION,MAIN0500:
                           MAIN4000
.
MAIN0500  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
MAIN4000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN6000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN6000  OPEN      PATCMXA1,"patcmxaf"
          OPEN      PATFX1A1,"patfx1af"
.
          CALL      CREA0000                      * Create temp file
          CALL      CLER0000                      * empty it
          CALL      LCON0000                      * Load contract details
          CALL      KILL0000                      * Delete temp file
.
MAIN9999  CHAIN     PGM
+
.*****************************************************************************
.*                          INIT0000               Called by: MAIN0000       *
.*  Display heading and check that the files needed exist & open them        *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: MAIN0000 *
.*                                Select Option                               *
.******************************************************************************
.
OPTN0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTION
          HLINE     *G37,2,57,80
          DISPLAY   *P40:4,*EF:
                    *P1:3,*V2LON,"0",*HOFF," = Exit":
               *P1:4,*V2LON,"1",*HOFF," = Convert patfx1af to new file format (CISAM only)":
               *P1:5,*V2LON,"2",*HOFF," = Load 'Contract Effective From' from":
                                      " the Casemix Funding file - patcmxaf" :
                    *P1:7,"Select Option : ";
.
OPTN1000  KEYIN     *P17:7,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN9000:
                           OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                          KDIR0000               Called by: MAIN0000       *
.*                       Keyin directories                                   *
.*****************************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9000
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9100 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9100 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9000
.
KDIR9000  MOVE      ZERO,EXIT
          GOTO      KDIR9999
.
KDIR9100  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.*****************************************************************************
.*                          PREP0000               Called by: MAIN0000       *
.*                       Preparing files                                     *
.*****************************************************************************
.
PREP0000  CALL      CHEK0000             * old file found ok ?
          BRANCH    EXIT,PREP9000        * no - finish
.
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patfx1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptfx1af.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patfx1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptfx1af.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patfx1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sptfx1af",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patfx1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 576 UC1-6",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
.          PACK      CMDLINE,SP60,SP60
.          CLEAR     CMDLINE
.          APPEND    "isadd ",CMDLINE
.          APPEND    NEWFILE,CMDLINE
.          APPEND    " UCxx-xx,x-xx",CMDLINE
.          APPEND    SP60,CMDLINE
.          RESET     CMDLINE
.          EXECUTE   CMDLINE,TASKID
.
          OPEN      PATFX1A1,NEWFILE
.
.         Set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.*****************************************************************************
.*                          CREA0000               Called by: MAIN0000       *
.*     Creating tempfile                                                     *
.*****************************************************************************
CREA0000  CALL      KILL0000                      * Delete temp file
.
.         Build temporary tmpcmxaf file
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    "tmpcmxaf ",CMDLINE
          APPEND    " 50 UC4-9,33-40,1-3,10-18,19-19,41-46",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      TMPCMXA1,"tmpcmxaf"
.
CREA9999  RETURN
+
.******************************************************************************
.*                             CLER0000                 Called by:            *
.*               close and erase the temporary file                           *
.******************************************************************************
CLER0000  PACK      KEY33,SP70
          CALL      RSTMCMX1
          CALL      RKTMCMX1
          BRANCH    OVRCD,CLER9999
.
      PACK      KEY33,PTCMHFND,PTCMEDAY,PTCMCLMN,PTCMCASM,PTCMSTRT,PTCMCNID,SP70
          CALL      DETMCMX1
.
          GOTO      CLER0000
.
CLER9999  RETURN
+
.*****************************************************************************
.*        Erase temporary file if already existing
.*****************************************************************************
KILL0000  CLOSE     TMPCMXA1
          CLEAR     KEY60
          APPEND    "iserase tmpcmxaf",KEY60
          RESET     KEY60
          EXECUTE   KEY60,TASKID
KILL9999  RETURN
+
.*****************************************************************************
.*                               READ0000          Called by: MAIN0000       *
.*             Loop thru old file and write each record                      *
.*****************************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY6,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
          MOVE      SP70,PTFXCEFR
          MOVE      SP70,PTFXRHCD
          PACK      PTFXRHFT,SP70,SP70
          PACK      PTFXSPAR,SP70,SP70
.                                               * Pack key here
          PACK      KEY6,PTFXHFND,SP70
          CALL      WRPTFX11                    * write to new file
.
          IF        (RECNUM%100) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATFX1A1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.*****************************************************************************
.*                               LCON0000                                    *
.*****************************************************************************
LCON0000  MOVE      ZERO,RECNUM
          DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY33,SP70
          CALL      RSPTCMX1                      * position at start
LCON1000  CALL      RKPTCMX1                      * read next record
          BRANCH    OVRCD,LCON2000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.         Write to tempfile for the latest end date of each health fund
.
      PACK      KEY33,PTCMHFND,PTCMEDAY,PTCMCLMN,PTCMCASM,PTCMSTRT,PTCMCNID,SP70
      CALL      WRTMCMX1                          * write to temp file
.
          IF        (RECNUM%100) = 0
            DISPLAY   *P15:20,"patcmxaf: ",*V2LON,RECNUM
          ENDIF
.
          GOTO      LCON1000                      * get next record
.
LCON2000  CALL      PHED0000
          DISPLAY   *P1:20,"Health fund: ";
          MOVE      SP70,KEY6
          CALL      RSPTFX11
LCON3000  CALL      RKPTFX11
          BRANCH    OVRCD,LCON8000
.
          DISPLAY   *P15:20,*V2LON,PTFXHFND
          PACK      KEY33,PTFXHFND,Z70
          CALL      RSTMCMX1
          CALL      RPTMCMX1
          BRANCH    OVRCD,LCON4000
          MATCH     PTFXHFND,PTCMHFND
          GOTO      LCON4000 IF NOT EQUAL         * no health fund details
.
          MOVE      PTCMSTRT,PTFXCEFR             * Contract Effective From
          CALL      UPPTFX11
          GOTO      LCON3000                      * get next record
.
LCON4000  PRINT     *1,"| ",PTFXHFND,*80,"|"
          GOTO      LCON3000
.
LCON8000  CLOSE     PATCMXA1
          CLOSE     PATFX1A1
          CLOSE     TMPCMXA1
.
          CALL      UND80
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
LCON9999  RETURN
+
.*****************************************************************************
.         Print heading
.*****************************************************************************
PHED0000  
          CALL      IBACLOCK
          CALL       HEAD80
          PRINT      *10,"Missing Contract Effective From Details for ":
                     *N,*10,"the following Health Fund."
          CALL       UND80
          PRINT      *1,"| Health Fund ",*80,"|"
          CALL       UND80
PHED9999  RETURN
+
.*****************************************************************************
.*                               VALD0000          Called by: KDIR0000       *
.*                   Check if it a valid directory                           *
.*****************************************************************************
.
VALD0000  SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9100
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      VALD9999
.
VALD9100  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.*****************************************************************************
.*                               ENDP0000          Called by: MAIN0000       *
.*                    Remove or compress save file                           *
.*****************************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sptfx1af*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.*****************************************************************************
.*                               DEFT0000          Called by: KDIR0000       *
.*                      Get the default directory                            *
.*****************************************************************************
.
DEFT0000  EXECUTE   "ldat patfx1af.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding patfx1af.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE,"patfx1af"
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE
          GOTO      CHEK9000
.
CHEK2000  DISPLAY   *P1:23,*EF,"File 'patfx1af' ";
          SCAN      "I * I",DIM60
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed":
                    *P1:24;
          CALL      HITENTER
.
          MOVE      ONE,EXIT
          GOTO      CHEK9999
.
CHEK9000  MOVE      ZERO,EXIT
.
CHEK9999  RETURN
.
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE
.
READSOLD  RESET     KEY6
          READ      OLDFILE,KEY6;;
          RETURN

.  
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD
          MOVE      ZERO,OVRCD
          READKS    OLDFILE;PTFXHFND,PTFXEXTR,PTFXTFLG,PTFXADDR:
                                  PTFXSUBJ,PTFXADD1,PTFXADD2,PTFXADD3:
                                  PTFXADD4,PTFXPOST,PTFXZINV,PTFXSCEM:
                                  PTFXSCPN,PTFXSCPP,PTFXECLP,PTFXSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRPTFX11  RESET     KEY6
          WRITE     PATFX1A1,KEY6;PTFXHFND,PTFXEXTR,PTFXTFLG,PTFXADDR:
                                  PTFXSUBJ,PTFXADD1,PTFXADD2,PTFXADD3:
                                  PTFXADD4,PTFXPOST,PTFXZINV,PTFXSCEM:
                                  PTFXSCPN,PTFXSCPP,PTFXECLP,PTFXCEFR:
                                  PTFXRHCD,PTFXRHFT,PTFXSPAR
          RETURN
.
UPPTFX11  UPDATE    PATFX1A1;PTFXHFND,PTFXEXTR,PTFXTFLG,PTFXADDR:
                                  PTFXSUBJ,PTFXADD1,PTFXADD2,PTFXADD3:
                                  PTFXADD4,PTFXPOST,PTFXZINV,PTFXSCEM:
                                  PTFXSCPN,PTFXSCPP,PTFXECLP,PTFXCEFR:
                                  PTFXRHCD,PTFXRHFT,PTFXSPAR
          RETURN
.
RSPTFX11  RESET     KEY6
          READ      PATFX1A1,KEY6;;
          RETURN
.
RKPTFX11  MOVE      ZERO,OVRCD
          READKS    PATFX1A1;PTFXHFND,PTFXEXTR,PTFXTFLG,PTFXADDR:
                                  PTFXSUBJ,PTFXADD1,PTFXADD2,PTFXADD3:
                                  PTFXADD4,PTFXPOST,PTFXZINV,PTFXSCEM:
                                  PTFXSCPN,PTFXSCPP,PTFXECLP,PTFXCEFR:
                                  PTFXRHCD,PTFXRHFT,PTFXSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RAPTCMX1  MOVE      ZERO,OVRCD
          RESET     KEY33
          READ      PATCMXA1,KEY33;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSPTCMX1  RESET     KEY33
          READ      PATCMXA1,KEY33;;
          RETURN
.
RDPTCMX1  MOVE      ZERO,OVRCD
          RESET     KEY33
          READ      PATCMXA1,KEY33;PTCMCLMN,PTCMHFND,PTCMCASM:
                                   PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                                   PTCMEDAY,PTCMCNID,PTCMSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RKPTCMX1  MOVE      ZERO,OVRCD
          READKS    PATCMXA1;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPPTCMX1  MOVE      ZERO,OVRCD
          READKP    PATCMXA1;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRPTCMX1  RESET     KEY33
          WRITE     PATCMXA1,KEY33;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          RETURN
.
UPPTCMX1  UPDATE    PATCMXA1;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          RETURN
.
DEPTCMX1  RESET     KEY33
          DELETE    PATCMXA1,KEY33
          RETURN
.
RAPTCMX2  MOVE      ZERO,OVRCD
          RESET     KEY33
          READ      PATCMXA2,KEY33;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSPTCMX2  RESET     KEY33
          READ      PATCMXA2,KEY33;;
          RETURN
.
RDPTCMX2  MOVE      ZERO,OVRCD
          RESET     KEY33
          READ      PATCMXA2,KEY33;PTCMCLMN,PTCMHFND,PTCMCASM:
                                   PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                                   PTCMEDAY,PTCMCNID,PTCMSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RKPTCMX2  MOVE      ZERO,OVRCD
          READKS    PATCMXA2;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPPTCMX2  MOVE      ZERO,OVRCD
          READKP    PATCMXA2;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRPTCMX2  RESET     KEY33
          WRITE     PATCMXA2,KEY33;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          RETURN
.
UPPTCMX2  UPDATE    PATCMXA2;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          RETURN
.
DEPTCMX2  RESET     KEY33
          DELETE    PATCMXA2,KEY33
          RETURN
.
RSTMCMX1  RESET     KEY33
          READ      TMPCMXA1,KEY33;;
          RETURN
.
RKTMCMX1  MOVE      ZERO,OVRCD
          READKS    TMPCMXA1;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMCMX1  MOVE      ZERO,OVRCD
          READKP    TMPCMXA1;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMCMX1  RESET     KEY33
          WRITE     TMPCMXA1,KEY33;PTCMCLMN,PTCMHFND,PTCMCASM:
                             PTCMSTRT,PTCMSTRD,PTCMXLOS,PTCMDIFG:
                             PTCMEDAY,PTCMCNID,PTCMSPAR
          RETURN
.
DETMCMX1  RESET     KEY33
          DELETE    TMPCMXA1,KEY33
          RETURN
.
.
.         INC       PATCMXIO/INC
          INC       STD001IO
