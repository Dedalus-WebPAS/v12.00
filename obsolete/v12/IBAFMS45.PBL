.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.03.02  05.11.2003  Henry Son  CAR 37464
.           Include missed Changes for F.09
. V9.03.01  09.10.2003  Henry Son  CAR 42789
.           Do not exit to Main screen after report run.
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.04  11.02.2002 Tonii Tang
.           SRF 13205, 13741, 13884, 13201
.           - Enable user to enter and run numerous accounts analysis
.             requests without having to exit and reenter all fields
.           - Allow exitchar "\" to be used to exit screen
.           SRF 13804
.           - Allow user to enter financial year prior to BAS Financial Yr
. VF.09.03  06.02.2002 Tonii Tang
.           Recompiled for changes to program generator
. VF.09.02  12.11.2001 Steve Downing  SRF 13388
.           Fixed I*C error during cash print
. VF.09.01  14.08.2001 Dave Matthews SRF11979
.           Creditor description being lost. Reinstated
. VF.09.B01 04.12.2000 Charles Handaya
.           BAS Statement Modification
.-------------------------------------------------------
. VF.01.01  29.05.2000 Charles Handaya
.           Rewrite Program in Program Generator
.-------------------------------------------------------
. Start Copying from FMSSTDDF
.
ACCTYPE   INIT      "           "      * account type
ACCTYPE1  INIT      "Income"
ACCTYPE2  INIT      "Expenditure"
ACCTYPE3  INIT      "Asset"
ACCTYPE4  INIT      "Liability"
ACCTYPE5  INIT      "Equity"
ACCTYPE6  INIT      "Total"
ACCTYPE7  INIT      "Heading"
ACCTYPE8  INIT      "Stat -Post"
ACCTYPE9  INIT      "Stat -Total"
.
CACCTIND  FORM      " 0"     * FMSAMAKY ind.
.                 CACCTIND 0=all acc, 1=posting, 2=total/head, 3=stat, 4=total,
.                          5=post/total, 6=stats post, 7=asset,liab,equity
.                          8=all but heading, 9=stat total, 10=stat&norm post
.                          11=Equity Only
CACCOP1   DIM       1                           * valid option vars for FMSAMAKY
CACCOP2   DIM       1
CACCOP3   DIM       1
CACCOP4   DIM       1
CACCOP5   DIM       1
CACCOP6   DIM       1
CACCOP7   DIM       1
CACCOP8   DIM       1
CACCOP9   DIM       1
CATEGORY  DIM       2        * category for FMSCODKY
CCONTIND  FORM      "0"      * FMSCAFKY ind.
.                 CCONTIND 0=all accounts, 1=bank, 2=creditor, 3=discount
.                          4=debtors, 5=other
CDATASAV  DIM       20       * save var for keyins
CDIM4     DIM       4        * dim 4 for FMSLMCKY
CDIV1     FORM      12.5     * param for CDIV0000
CDIV2     FORM      12.5     * param for CDIV0000
CMDLINE   DIM       80       * Command Line
CODE      DIM       3        * code for FMSCODKY
COLNO     FORM      2        * collumn number
CSTRING   DIM       35       * keyed in string (routine GSTR)
CSTRLEN   FORM      2        * string length   (routine GSTR)
CSUBJIND  FORM      "0"      * FMSSBAKY ind.
.                 CSUBJIND 0=all subj, 1=total, 2=non total, 3=non head
.                          4=stat-tot subj, 5=posting subj
CTYPE     DIM       1        * account type
.
DECPLACE  FORM      1        * decimal places
DEBCRED   DIM       2
.
FMLCF4    FORM      4        * form 4 for FMSLMCKY
F12       FORM      12
F12P1     FORM      12.1
F12P2     FORM      12.2
F12P3     FORM      12.3
F12P4     FORM      12.4
F12P5     FORM      12.5
F12P6     FORM      12.6
.
HELPOPTN  FORM      1        * help search option
HELPSRCH  DIM       35       * help search string
.
KAMOUNT   FORM      12.6     * keyin amount
KYINLEDG  DIM       2
.
LINENO    FORM      2        * line number
.
TSTCCYY1  FORM      4        * Date Test Fields
TSTCCYY2  FORM      4
TSTMM1    FORM      2
TSTMM2    FORM      2
TSTDD1    FORM      2
TSTDD2    FORM      2
.--------------------------------------
. Variables for Period Validation
.--------------------------------------
CURYEAR   DIM       4
PERDESC   DIM       15
PEREDAT   DIM       8
PERSDAT   DIM       8
PERLOCK   FORM      1
ERRMSG    DIM       40
MAXPER    FORM      2
PERCNT    FORM      2
WORKDATE  DIM       8
.
. End Copying from FMSSTDDF
.
ACCTPRIN  FORM      1     * Flag Account Name Print 0 = No 1 = Yes
AGSTNAME  DIM       35
BALCFFLG  FORM      1     * Range of Dissection is selected, 0=No 1=Yes
BANKNAME  DIM       35
BASFILE   DIM       8
CASHFLAG  FORM      1
CGSTNAME  DIM       35
CHQNO     DIM       8
COUNT     FORM      2
CREDNAME  DIM       35
CTRFILE   DIM       8
DEBTNAME  DIM       35
DISCNAME  DIM       35
EFINDATE  DIM       10
ENDACCT   DIM       12
ENDDISS   DIM       5
ENDDATE   DIM       8
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
EXITANS   INIT      "  X"
FMSP      INIT      "fmsp"
FMSR      INIT      "fmsr"
FMST      INIT      "fmst"
FMSG      INIT      "fmsg"
FORM12P2  FORM      12.2
FORMAT    INIT      "(999,999,999,999.99 "
FORMATT   INIT      "(99,999,999,999,999.99 "
FPERIOD1  DIM       2
FPERIOD2  DIM       2
FPSFILE   DIM       8
FROMDATE  DIM       8
HEADING   DIM       20
LASTYEAR  FORM      1
ORDNO     DIM       8
OUTAMT    DIM       20
OUTAMTT   DIM       23
OUTENDB   DIM       23
OUTFORB   DIM       23
PAYMNAME  DIM       35
PERIDESC  DIM       15
SCRNO     FORM      1
STARTDTE  DIM       8
STRACCT   DIM       12
STRDISS   DIM       5
TABDELM   EQU       0x09                 * Tab Delimiter
TODATE    DIM       8
TOTAL     FORM      14.2
TOTMONTH  FORM      14.2
TOTENDB   FORM      14.2
TOTFORB   FORM      14.2
TRNFILE   DIM       8
XCHARD2   DIM       2
XCHARD5   DIM       5
YEAREND   DIM       4
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAFMS45
.   Function      :   Transaction Analysis Report             
.   Generated  On :   05/11/2003
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSMASFD/INC
          INC       FMSAMAFD/INC
          INC       FMSBASFD/INC
          INC       FMSCSAFD/INC
          INC       FMSCTRFD/INC
          INC       FMSDISFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMBFD/INC
          INC       FMSLMCFD/INC
          INC       FMSRSFFD/INC
          INC       FMSTCFFD/INC
          INC       FMSTRNFD/INC
          INC       IBABASFD/INC
          INC       IBACONFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMPOS   DIM       5 * Scr 01 Fld     8
TOPOS     DIM       5 * Scr 01 Fld     9
FYEADESC  DIM      18 * Scr 01 Fld    11
FROMPER   DIM       2 * Scr 01 Fld    12
FPERDESC  DIM      35 * Scr 01 Fld    13
TOPER     DIM       2 * Scr 01 Fld    14
TPERDESC  DIM      35 * Scr 01 Fld    15
CASHACCR  DIM       7 * Scr 01 Fld    16
ZEROBAL   FORM      1 * Scr 01 Fld    17
EXPORTYN  FORM      1 * Scr 01 Fld    18
FROMACC   DIM      50 * Scr 02 Fld     6
TOACC     DIM      50 * Scr 02 Fld     7
FROMDIS   DIM      27 * Scr 02 Fld     8
TODIS     DIM      27 * Scr 02 Fld     9
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAFMS45"
PRGNAM    INIT      "Transaction Analysis Report             "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RCON0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening  fmslmbaf           ";
          OPEN      FMSLMBA1,"fmslmbaf"          
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening  fmsrsfaf           ";
          OPEN      FMSRSFA3,"fmsrsfaf"          
          DISPLAY   *P56:24,"Opening  fmstcfaf           ";
          OPEN      FMSTCFA1,"fmstcfaf"          
          DISPLAY   *P56:24,"Opening ibabasaf";
          OPEN      IBABASA1,"ibabasaf"
          DISPLAY   *P56:24,"Opening ibabasaf";
          OPEN      IBABASA2,"ibabasaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Menu                          
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Print by Report                    
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Print by Account                   
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Menu                          
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Menu                          
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Menu                          
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Menu                          
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Menu                          
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Menu                          
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Menu                          
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Menu                          
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Print by Report                    
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
          CALL      MVACCEPT
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print by Report                    
.-------------------------------------------------------
CF01L000
          MOVE      SP70,FMLALEDG
          MOVE      SP70,FMLBRPNO
          MOVE      SP70,FROMPOS 
          MOVE      SP70,FMLCYEAR
          MOVE      SP70,FROMPER 
          MOVE      SP70,CASHACCR
          MOVE      ZERO,ZEROBAL 
          MOVE      ZERO,EXPORTYN
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print by Report                    
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print by Report                    
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print by Report                    
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print by Report                    
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print by Report                    
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L101:
                            PS01L102,PS01L103,PS01L104,PS01L105:
                            PS01L106,PS01L107,PS01L108,PS01L109:
                            PS01L110,PS01L111,PS01L112,PS01L113:
                            PS01L114,PS01L115
          GOTO     PS01L999
.
PS01L101
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      FMLBRPNO,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      FMLBDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      FROMPOS,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      TOPOS,VAR        
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      FMLCYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      FYEADESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      FPERDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      TOPER,VAR        
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      TPERDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      CASHACCR,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      ZEROBAL,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Print by Report                    
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L006,SF01L104,SF01L006,SF01L105:
                            SF01L006,SF01L106,SF01L006,SF01L107:
                            SF01L006,SF01L006,SF01L006,SF01L108:
                            SF01L109,SF01L110
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L103:
                            SF01L020,SF01L104,SF01L020,SF01L105:
                            SF01L020,SF01L106,SF01L020,SF01L107:
                            SF01L020,SF01L020,SF01L020,SF01L108:
                            SF01L109,SF01L110
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PRNR0000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF01L001
.
SF01L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ELED0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLBDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EREP0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      FMLBRPNO,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLBDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPOS   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPOS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      FROMPOS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPOS,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L106
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FYEADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EFYE0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      FMLCYEAR,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FYEADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L107
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FPERDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPER   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPER0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FPERDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPER,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECAC0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
            BRANCH    EXIT,SF01L108,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CASHACCR,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L109
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,ZEROBAL 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      ZEROBAL,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L110
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Print by Account                   
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
          CALL      MVACCEPT
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print by Account                   
.-------------------------------------------------------
CF02L000
          MOVE      SP70,FMLALEDG
          MOVE      SP70,FROMACC 
          MOVE      SP70,FROMDIS 
          MOVE      SP70,FMLCYEAR
          MOVE      SP70,FROMPER 
          MOVE      SP70,CASHACCR
          MOVE      ZERO,ZEROBAL 
          MOVE      ZERO,EXPORTYN
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print by Account                   
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print by Account                   
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print by Account                   
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print by Account                   
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print by Account                   
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L103,PS02L104,PS02L105:
                            PS02L106,PS02L107,PS02L108,PS02L109:
                            PS02L110,PS02L111,PS02L112,PS02L113:
                            PS02L114,PS02L115
          GOTO     PS02L999
.
PS02L101
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      FROMACC,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      TOACC,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      FROMDIS,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      TODIS,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      FMLCYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      FYEADESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          MOVE      FPERDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      TOPER,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          MOVE      TPERDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          MOVE      CASHACCR,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      ZEROBAL,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Print by Account                   
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L104,SF02L006,SF02L105:
                            SF02L006,SF02L106,SF02L006,SF02L107:
                            SF02L006,SF02L006,SF02L006,SF02L108:
                            SF02L109,SF02L110
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L103:
                            SF02L020,SF02L104,SF02L020,SF02L105:
                            SF02L020,SF02L106,SF02L020,SF02L107:
                            SF02L020,SF02L020,SF02L020,SF02L108:
                            SF02L109,SF02L110
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PRNA0000
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF02L000
          GOTO      SF02L001
.
SF02L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ELED0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L103
            ENDIF
            BRANCH    EXIT,SF02L103,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FMLALEDG,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOACC   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EACC0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMACC,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOACC,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODIS   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDIS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L105
            ENDIF
            BRANCH    EXIT,SF02L105,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMDIS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODIS,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L106
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FYEADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EFYE0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L106
            ENDIF
            BRANCH    EXIT,SF02L106,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FMLCYEAR,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FYEADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L107
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FPERDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPER   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPER0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L107
            ENDIF
            BRANCH    EXIT,SF02L107,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FPERDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPER,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECAC0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L108
            ENDIF
            BRANCH    EXIT,SF02L108,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      CASHACCR,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L109
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,ZEROBAL 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      ZEROBAL,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L110
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Read Control File
.----------------------------------------------------------------------
RCON0000  READ      CONTROLF,ZERO;*107,IBCNUBAS,IBCNBSFY
.
RCON9999  RETURN
.
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.----------------------------------------------------------------------
. Print by Report
.----------------------------------------------------------------------
PRNR0000  CALL      OPEN0000
          BRANCH    EXIT,PRNR9999
.
          MOVE      ZERO,SCRNO
          MOVE      ZERO,TOTMONTH
          MOVE      ZERO,TOTAL
.
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
.
          MOVE      ZERO,CPAGENO                 * reset page no.
          DISPLAY   *P1:24,*EL,"Printing   : "
          CALL      MAKEXP00             * Create Export File
.
.---- read the report sequence file ----
.
          PACK      KEY26,FMLALEDG,FMLBRPNO,FROMPOS,SP70
          CALL      RSFMRF3
.
PRNR1000  CALL      RKFMRF3              * read next
          BRANCH    OVRCD,PRNR9500       * end of report if over
.
          MATCH     FMLALEDG,FMRFLED     * test if same ledger
          GOTO      PRNR9500 IF NOT EQUAL
.
          MATCH     FMLBRPNO,FMRFREP     * test same report number
          GOTO      PRNR9500 IF NOT EQUAL
.
          MATCH     FMRFPOS,TOPOS        * test within range
          GOTO      PRNR9500 IF LESS
.
.----  loop through the total calculations file ----
.
          PACK      KEY33,FMRFLED,FMRFACC,SP20
          CALL      RSFMTC1
.
PRNR1200  CALL      RKFMTC1
          BRANCH    OVRCD,PRNR1000
.
          MATCH     FMRFLED,FMTCTLED     * test if correct ledger
          GOTO      PRNR1000 IF NOT EQUAL
.
          MATCH     FMRFACC,FMTCTACC     * test if same total account
          GOTO      PRNR1000 IF NOT EQUAL
.
.-----  read through the cash or accrual transaction file ----
.
PRNR1600  PACK      KEY14,FMTCSLED,FMTCSACC
          MOVE      ZERO,TOTMONTH
.
.---- display the account being processed ---
.
          DISPLAY   *P14:24,*V2LON,FMTCSLED,SLASH,FMTCSACC
          CALL      RDFMAM1
          MATCH     "6",FMAMTYPE
          GOTO      PRNR1200 IF EQUAL
          MATCH     "7",FMAMTYPE
          GOTO      PRNR1200 IF EQUAL
          MATCH     "8",FMAMTYPE
          GOTO      PRNR1200 IF EQUAL
          MATCH     "9",FMAMTYPE
          GOTO      PRNR1200 IF EQUAL
.
          MOVE      ZERO,ACCTPRIN        * Account Code Not Printed
          PACK      KEY32,FMTCSLED,FMTCSACC,FROMDATE,SP20
          CALL      RSFMTR2
.
PRNR1700  CALL      RKFMTR2
          BRANCH    OVRCD,PRNR2000
.
          MATCH     FMTCSLED,FMTRLEDG    * test for same ledger
          GOTO      PRNR2000 IF NOT EQUAL
.
          MATCH     FMTCSACC,FMTRACCT    * test if same account
          GOTO      PRNR2000 IF NOT EQUAL
.
          MATCH     FMTRPDAT,TODATE      * test if in date range
          GOTO      PRNR2000 IF LESS
.
          BRANCH    ACCTPRIN,PRNR1800
          MOVE      ONE,ACCTPRIN        * Account Code Not Printed
          COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
          ADD       TWO,CLNO
          PRINT     *1,FMAMACCT,*14,FMAMDESC,*N
.
PRNR1800  COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
.
          CALL      PLIN0000             * print the report line
          GOTO      PRNR1700
.
PRNR2000  CALL      FORB0000
          MOVE      ZERO,BALCFFLG
          CALL      PRPT0000
          GOTO      PRNR1200
.                                        * have we printed anything
PRNR9500  IF        CPAGENO=0
            MOVE      SP70,FMAMACCT
            CALL      HEAD0000
          ENDIF
.
          MOVE      FORMATT,OUTAMTT
          FEDIT     TOTAL,OUTAMTT
          PRINT     *26,"Net Movement For Accounts Printed ",*67,OUTAMTT
          CALL      UND132
          BRANCH    FMLCYLC,PRNR9900
.
          COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
          PRINT     *N,*20,"N.B.    Surplus/Deficit has NOT been transferred":
                           " from previous Financial Year",*N:
                    *29,"as the Closing Balance Transfer has NOT been Run."
          CALL      UND132
.
PRNR9900  MOVE      ZERO,CPAGENO
          DISPLAY   *P1:24,*EL
          CALL      TRAN0000
          GOTO      PRNR9999
.
PRNR9999  RETURN
.----------------------------------------------------------------------
. Print a line on the report
.----------------------------------------------------------------------
PLIN0000  CALL      FAMT0000
          UNPACK    FMTRPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      FORMAT,OUTAMT
          FEDIT     FMTRAMT,OUTAMT
          ADD       FMTRAMT,TOTMONTH
          ADD       FMTRAMT,TOTAL
.
          MOVE      SP8,CHQNO
          MOVE      FMTRORD,ORDNO
          MATCH     "PY",FMTRTYPE
          GOTO      PLIN0500 IF NOT EQUAL
          MOVE      SP8,ORDNO
          MOVE      FMTRORD,CHQNO
.
PLIN0500  PRINT     *1,FMTRBAT,*8,CPCDATE,*19,FMTRDOCR,*35,FMTRTYPE:
                    *40,ORDNO,*49,CHQNO,*58,FMTRDISS,*65,FMTRRESP,*70,OUTAMT;
.
          MOVE      SP70,APMACRD
          MOVE      SP70,APMACN1
          MATCH     SP70,FMTRDESC
          GOTO      PLIN1000 IF EQUAL
          PRINT     *91,FMTRDESC;
          ADD       ONE,CLNO
.
PLIN1000  MATCH     "00000",FMTRCRED
          GOTO      PLIN8000 IF EQUAL
          MATCH     SP5,FMTRCRED
          GOTO      PLIN8000 IF EQUAL
          PACK      KEY5,FMTRCRED,SP70
          CALL      RDAPMA1
          BRANCH    OVRCD,PLIN8000
.
          MATCH     SP70,FMTRDESC
          GOTO      PLIN1001 IF EQUAL
          GOTO      PLIN1002 IF NOT EQUAL

PLIN1001  PRINT     *91,FMTRCRED,SP1,APMACN1;
          GOTO      PLIN1003

PLIN1002  PRINT     *N,*91,FMTRCRED,SP1,APMACN1;
          ADD       ONE,CLNO
PLIN1003  ADD       ONE,CLNO
          GOTO      PLIN9000
.
PLIN8000  MATCH     SP70,FMTRDESC
          GOTO      PLIN9000 IF NOT EQUAL
          PRINT     *91,FMTRDESC;
          ADD       ONE,CLNO
          GOTO      PLIN9000
.
PLIN9000  IF        IBCNUBAS=1
            UNPACK    SP70,FMBSBASC
            PACK      KEY10,FMTRBAT,FMTRUNIQ,SP70
            CALL      RDFMBS1
            PRINT     *130,FMBSBASC;
          ENDIF
          PRINT     *N;
          CALL      WRTEXP00
.
PLIN9999  RETURN
.----------------------------------------------------------------------
. Print Page heading
.----------------------------------------------------------------------
HEAD0000  BRANCH    CASHFLAG,HEAD1000
          MOVE      "Accrual Report ",HEADING
          GOTO      HEAD2000
.
HEAD1000  MOVE      "Cash Report    ",HEADING
.
HEAD2000  CALL      HEAD132
          BRANCH    SCRNO,HEAD3000
.
          PRINT      *1,"Ledger         : ",FMLALEDG,SP1,FMLADESC:
                       *93,HEADING,*N:
                     *1,"Report         : ",FMLBRPNO,SP1,FMLBDESC:
                       *93,"Year Ending : ",YEAREND,*N:
                     *1,"Position Range : ",FROMPOS," to ",TOPOS,*N:
                     *1,"Period Range   : ",FPERIOD1,SP1,FPERDESC:
                       " to ",FPERIOD2,SP1,TPERDESC:
                     *111,"Account : ",FMAMACCT
          ADD       FOUR,CLNO
          GOTO      HEAD4000
.
HEAD3000  PRINT      *1,"Ledger           : ",FMLALEDG,SP1,FMLADESC:
                       *93,HEADING,*N:
                     *1,"Account Range    : ",FROMACC," to ",TOACC,*N:
                     *1,"Dissection Range : ",FROMDIS," to ",TODIS:
                       *107,"Year Ending : ",YEAREND,*N:
                     *1,"Period Range     : ",FPERIOD1,SP1,FPERDESC:
                       " to ",FPERIOD2,SP1,TPERDESC:
                     *111,"Account : ",FMAMACCT
          ADD       FOUR,CLNO
          GOTO      HEAD4000
.
HEAD4000  CALL      UND132
.
          IF        IBCNUBAS=0
            PRINT     *1,"Batch",*8,"Posting",*19,"Reference",*34,"Type":
                      *43,"Order",*51,"Cheque",*59,"Diss",*65,"Resp":
                      *83,"Amount",*91,"Description  / Creditor"
          ELSE
            PRINT     *1,"Batch",*8,"Posting",*19,"Reference",*34,"Type":
                      *43,"Order",*51,"Cheque",*59,"Diss",*65,"Resp":
                      *83,"Amount",*91,"Description  / Creditor":
                      *130,"BAS"
          ENDIF
.
          CALL      UND132
          ADD       ONE,CLNO
.
HEAD9999  RETURN
.----------------------------------------------------------------------
. Format the balance brought forward
.----------------------------------------------------------------------
FORB0000  MOVE      ZERO,TOTFORB
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMFP1
          BRANCH    OVRCD,FORB8000
.
          MOVE      FPERIOD1,FORM2
          SUB       ONE,FORM2
          MOVE      ZERO,COUNT
.
          BRANCH    CASHFLAG,FORB5000
          MOVE      FMFPABF,TOTFORB
          COMPARE   ZERO,FORM2
          GOTO      FORB8000 IF EQUAL
.
FORB1000  ADD       ONE,COUNT
.
          LOAD      FORM12P2,COUNT,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                             FMFPA05,FMFPA06,FMFPA07,FMFPA08,FMFPA09:
                             FMFPA10,FMFPA11,FMFPA12,FMFPA13
.
          ADD       FORM12P2,TOTFORB
          COMPARE   FORM2,COUNT
          GOTO      FORB1000 IF LESS
          GOTO      FORB8000
.
FORB5000  MOVE      FMFPCBF,TOTFORB
          COMPARE   ZERO,FORM2
          GOTO      FORB8000 IF EQUAL
.
FORB5100  ADD       ONE,COUNT
.
          LOAD      FORM12P2,COUNT,FMFPC01,FMFPC02,FMFPC03,FMFPC04:
                             FMFPC05,FMFPC06,FMFPC07,FMFPC08,FMFPC09:
                             FMFPC10,FMFPC11,FMFPC12,FMFPC13
.
          ADD       FORM12P2,TOTFORB
          COMPARE   FORM2,COUNT
          GOTO      FORB5100 IF LESS
.
. Check for balance sheet item and end of year B/F indicator
.
FORB8000  BRANCH    FMLCYLC,FORB9999
          MOVE      FMAMTYPE,F1
          BRANCH    F1,FORB9999,FORB9999,FORB8100,FORB8100,FORB8100
          GOTO      FORB9999
.
FORB8100  BRANCH    LASTYEAR,FORB9999    * Is Last Year Open. 0=Yes 1=No
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMFP2
          BRANCH    OVRCD,FORB9999
          BRANCH    CASHFLAG,FORB8500
          ADD       FMFPABF,TOTFORB
          ADD       FMFPA01,TOTFORB
          ADD       FMFPA02,TOTFORB
          ADD       FMFPA03,TOTFORB
          ADD       FMFPA04,TOTFORB
          ADD       FMFPA05,TOTFORB
          ADD       FMFPA06,TOTFORB
          ADD       FMFPA07,TOTFORB
          ADD       FMFPA08,TOTFORB
          ADD       FMFPA09,TOTFORB
          ADD       FMFPA10,TOTFORB
          ADD       FMFPA11,TOTFORB
          ADD       FMFPA12,TOTFORB
          ADD       FMFPA13,TOTFORB
          GOTO      FORB9999
.
FORB8500  ADD       FMFPCBF,TOTFORB
          ADD       FMFPC01,TOTFORB
          ADD       FMFPC02,TOTFORB
          ADD       FMFPC03,TOTFORB
          ADD       FMFPC04,TOTFORB
          ADD       FMFPC05,TOTFORB
          ADD       FMFPC06,TOTFORB
          ADD       FMFPC07,TOTFORB
          ADD       FMFPC08,TOTFORB
          ADD       FMFPC09,TOTFORB
          ADD       FMFPC10,TOTFORB
          ADD       FMFPC11,TOTFORB
          ADD       FMFPC12,TOTFORB
          ADD       FMFPC13,TOTFORB
.
FORB9999  RETURN
.----------------------------------------------------------------------
. Fix BCAMT as Debit/Credit
.----------------------------------------------------------------------
FAMT0000  MATCH     "JC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CS",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CR",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RF",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RI",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MOVE      "Dr",DEBCRED
          GOTO      FAMT9999
.
FAMT1000  MULT      SEQ,FMTRAMT
          MOVE      "Cr",DEBCRED
.
FAMT9999  RETURN
.----------------------------------------------------------------------
. Print the report ledger totals
.----------------------------------------------------------------------
PRPT0000  MOVE      TOTMONTH,TOTENDB
          ADD       TOTFORB,TOTENDB
.
.----- format the numeric totals ----
.
          MOVE      FORMATT,OUTFORB
          FEDIT     TOTFORB,OUTFORB      * format balance B/F
          MOVE      FORMATT,OUTAMTT
          FEDIT     TOTMONTH,OUTAMTT     * format total
          MOVE      FORMATT,OUTENDB
          FEDIT     TOTENDB,OUTENDB      * format end balance
.
          BRANCH    ACCTPRIN,PRPT1000
          BRANCH    ZEROBAL,PRPT0500
          COMPARE   ZERO,TOTFORB
          GOTO      PRPT0500 IF NOT EQUAL
          COMPARE   ZERO,TOTMONTH
          GOTO      PRPT0500 IF NOT EQUAL
          COMPARE   ZERO,TOTENDB
          GOTO      PRPT9999 IF EQUAL
.
PRPT0500  MOVE      ONE,ACCTPRIN        * Account Code Not Printed
          COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
          ADD       TWO,CLNO
          PRINT     *1,FMAMACCT,*14,FMAMDESC,*N
.
PRPT1000  PRINT     *70,UNDLN30,UNDLN30,UNDLN2:
                    *N,*2,"Balance B/F ",OUTFORB,*53,"     Total ":
                    *67,OUTAMTT;
.
          IF        BALCFFLG=0
            PRINT     *97,"Balance C/F ",OUTENDB
          ELSE
.                             * Don't print Balance C/F for selected Dissection
            PRINT     *N;
          ENDIF
.
          ADD       TWO,CLNO
          COMPARE   FIFTY9,CLNO
          CALL      UND132 IF LESS
.
PRPT9999  RETURN
.----------------------------------------------------------------------
. Open fps, trn and dsf Files
.----------------------------------------------------------------------
OPEN0000  PACK      FPSFILE,SP70
          PACK      CTRFILE,SP70
          PACK      TRNFILE,SP70
          IF        IBCNUBAS=1
            PACK      BASFILE,SP70
          ENDIF
.
.----  set up the filenames ----
.
          PACK      FPSFILE,FMSP,FMLCYEAR
          PACK      CTRFILE,FMSR,FMLCYEAR
          PACK      TRNFILE,FMST,FMLCYEAR
          IF        IBCNUBAS=1
            PACK      BASFILE,FMSG,FMLCYEAR
          ENDIF
.
OPEN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FPSFILE    * open FPS file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN6000       * if no file then no records
.
          MOVE      FMLCYEAR,F4
          SUB       ONE,F4
          PACK      FPSFILE,FMSP,F4
          REP       " 0",FPSFILE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA2,FPSFILE    * open last years fps file
          TRAPCLR   IO
          MOVE      OVRCD,LASTYEAR      * LASTYEAR Flag = 0 if open
.
          BRANCH    CASHFLAG,OPEN4000
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,TRNFILE    * open TRN file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN7000       * if no file then no records
.
          IF        IBCNUBAS=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      FMSBASA1,BASFILE   * open BAS file
            TRAPCLR   IO
            BRANCH    OVRCD,OPEN7000     * if no file then no records
          ENDIF
.
          GOTO      OPEN9999
.
OPEN4000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,CTRFILE    * open CTR file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN7000       * if no file then no records
.
          IF        IBCNUBAS=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      FMSBASA1,BASFILE   * open BAS file
            TRAPCLR   IO
            BRANCH    OVRCD,OPEN7000     * if no file then no records
          ENDIF
.
          GOTO      OPEN9999
.
OPEN6000  MOVE      ONE,EXIT
          BEEP
          CLEAR     DISPMSG
          APPEND    "No financial period summaries exist ",DISPMSG
          APPEND    "for this year - ",DISPMSG
          CALL      MESSAGE1
          GOTO      OPEN9999
.
OPEN7000  MOVE      ONE,EXIT
          BEEP
          MOVE      "No transactions exist for this year - ",DISPMSG
          CALL      MESSAGE1
          GOTO      OPEN9999
.
OPEN9999  RETURN
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE   ONE,EXPORTYN
          GOTO      MAKEXP99 IF NOT EQUAL
          MOVE      "EXPORT",KEY6
          PACK      EXPORTFN,KEY6,PORT
          REP       " 0",EXPORTFN
          PREP      EXPORTFL,EXPORTFN
          IF        IBCNUBAS=0
            WRITE     EXPORTFL,SEQ;"Ledger",TABDELM:
                                   "Account",TABDELM:
                                   "Batch",TABDELM:
                                   "Posting Date",TABDELM:
                                   "Document Reference",TABDELM:
                                   "Type",TABDELM:
                                   "Order No.",TABDELM:
                                   "Cheque No.",TABDELM:
                                   "Dissection",TABDELM:
                                   "Responsibility",TABDELM:
                                   "Amount",TABDELM:
                                   "Comment",TABDELM:
                                   "Creditor Code",TABDELM:
                                   "Creditor Name"
          ELSE
            WRITE     EXPORTFL,SEQ;"Ledger",TABDELM:
                                   "Account",TABDELM:
                                   "Batch",TABDELM:
                                   "Posting Date",TABDELM:
                                   "Document Reference",TABDELM:
                                   "Type",TABDELM:
                                   "Order No.",TABDELM:
                                   "Cheque No.",TABDELM:
                                   "Dissection",TABDELM:
                                   "Responsibility",TABDELM:
                                   "Amount",TABDELM:
                                   "Comment",TABDELM:
                                   "Creditor Code",TABDELM:
                                   "Creditor Name",TABDELM:
                                   "BAS Code",TABDELM:
                                   "BAS Description"
          ENDIF
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE   ONE,EXPORTYN
          GOTO      WRTEXP99 IF NOT EQUAL
          IF        IBCNUBAS=0
            WRITE     EXPORTFL,SEQ;FMTRLEDG,TABDELM:
                                   FMTRACCT,TABDELM:
                                   FMTRBAT,TABDELM:
                                   CPCDATE,TABDELM:
                                   FMTRDOCR,TABDELM:
                                   FMTRTYPE,TABDELM:
                                   ORDNO,TABDELM:
                                   CHQNO,TABDELM:
                                   FMTRDISS,TABDELM:
                                   FMTRRESP,TABDELM:
                                   OUTAMT,TABDELM:
                                   FMTRDESC,TABDELM:
                                   APMACRD,TABDELM:
                                   APMACN1
          ELSE
            MATCH     SP70,FMBSBASC
            IF        @EQUAL
              MOVE      "Blank BAS Code",IBBADESC
            ELSE
              MOVE      "Invalid BAS Code",IBBADESC
              PACK      KEY3,FMBSBASC,SP70
              CALL      RDIBBA1
              IF        OVRCD=0 & IBBAACTV=1
                MOVE      "BAS Code is Inactive",IBBADESC
              ENDIF
            ENDIF
            WRITE     EXPORTFL,SEQ;FMTRLEDG,TABDELM:
                                   FMTRACCT,TABDELM:
                                   FMTRBAT,TABDELM:
                                   CPCDATE,TABDELM:
                                   FMTRDOCR,TABDELM:
                                   FMTRTYPE,TABDELM:
                                   ORDNO,TABDELM:
                                   CHQNO,TABDELM:
                                   FMTRDISS,TABDELM:
                                   FMTRRESP,TABDELM:
                                   OUTAMT,TABDELM:
                                   FMTRDESC,TABDELM:
                                   APMACRD,TABDELM:
                                   APMACN1,TABDELM:
                                   FMBSBASC,TABDELM:
                                   IBBADESC
          ENDIF
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE   ONE,EXPORTYN
          GOTO      TRAN9999 IF NOT EQUAL
          MOVE      YES,DEFYESNO
          CLOSE     EXPORTFL
          DISPLAY   *P1:24,*EL,"Execute Transfer Now (":
                               *V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
          MOVE      "24",CVERT
          MOVE      "30",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          CLEAR     KEY80
          APPEND    "keatran ",KEY80
          APPEND    EXPORTFN,KEY80
          APPEND    ".txt",KEY80
          RESET     KEY80
          EXECUTE   KEY80,TASKID
.
          CALL      PUTSCR00
.
          DISPLAY   *P1:24,*EL,"Transfer Completed Ok (":
                               *V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
          MOVE      "24",CVERT
          MOVE      "31",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO,
          GOTO      TRAN0000 IF EQUAL   *  Not ok
.
          PREP      EXPORTFL,EXPORTFN
          CLOSE     EXPORTFL
.
TRAN9999  RETURN
.
.----------------------------------------------------------------------
. Enter Ledger Code
.----------------------------------------------------------------------
ELED0000  UNPACK    SP70,FMLALEDG,FMLADESC,KYINLEDG
          MOVE      ZERO,CKEYTYP
          CALL      KFMLAA00
          BRANCH    EXIT,ELED9900,ELED9900
.
          PACK      KYINLEDG,FMLALEDG
          GOTO      ELED9999
.
ELED9900  MOVE      TWO,EXIT
          GOTO      ELED9999
.
ELED9999  RETURN
.
.----------------------------------------------------------------------
. Enter Report Code
.----------------------------------------------------------------------
EREP0000  UNPACK    SP70,FMLBRPNO,FMLBDESC
          CALL      KLMBFM00
          BRANCH    EXIT,EREP9900,EREP9900
          GOTO      EREP9999
.
EREP9900  MOVE      TWO,EXIT
.
EREP9999  RETURN
.
RLMBFM00  RETURN
.
.----------------------------------------------------------------------
. Enter Range of Print Position
.----------------------------------------------------------------------
EPOS0000  MOVE      "    9",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          PACK      DIM5,SP70
          CALL      KPOS0000
          BRANCH    EXIT,EPOS0100,EPOS9999
.
          MOVE      DIM5,FROMPOS
          GOTO      EPOS0150
.
EPOS0100  MOVE      "00000",FROMPOS
EPOS0150  MOVE      FROMPOS,VAR
          CALL      DISPITEM
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
.
          PACK      DIM5,SP70
          CALL      KPOS0000
          BRANCH    EXIT,EPOS0200,EPOS9999
.
          MOVE      DIM5,TOPOS
          MOVE      TOPOS,VAR
          CALL      DISPITEM
.
          MATCH     FROMPOS,TOPOS
          GOTO      EPOS9990 IF EQUAL
          GOTO      EPOS9990 IF NOT LESS
          BEEP
          MOVE      "To Print Position Must Be > From Print Position - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EPOS0000
.
EPOS0200  MOVE      "99999",TOPOS
          GOTO      EPOS9990
.
EPOS9990  MOVE      "    8",FLDID
          CALL      GETPOSIT
          GOTO      EPOS9999
.
EPOS9999  RETURN
.----------------------------------------------------------------------
. Keyin Print Position
. Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.----------------------------------------------------------------------
KPOS0000  KEYIN     *PCCOL:CVERT,*DV,DIM5:
                    *PCCOL:CVERT,*V2LON,*JR,*RV,DIM5
.
          ENDSET    DIM5
          APPEND    SP70,DIM5
          RESET     DIM5
.
          MATCH     SP70,DIM5
          GOTO      KPOS9900 IF EQUAL
.
          PACK      XCHARD5,SP4,EXITCHAR,SP70
          MATCH     XCHARD5,DIM5
          GOTO      KPOS9950 IF EQUAL
.
          TYPE      DIM5
          GOTO      KPOS0000 IF NOT EQUAL
.
          REP       " 0",DIM5
          MOVE      ZERO,EXIT
          GOTO      KPOS9999
.
KPOS9900  MOVE      ONE,EXIT
          GOTO      KPOS9999
.
KPOS9950  MOVE      TWO,EXIT
          GOTO      KPOS9999
.
KPOS9999  RETURN
.
.----------------------------------------------------------------------
. Enter Financial Year
.----------------------------------------------------------------------
EFYE0000  IF        ACCEPT=0
            MOVE      FMLCYEAR,DIM4
          ENDIF
.
          PACK      FMLCYEAR,SP70
          PACK      FYEADESC,SP70
.
          MOVE      ZERO,CKEYTYP
          PACK      FMLCLEDG,FMLALEDG,SP70
          CALL      KFMLCA00
          BRANCH    EXIT,EFYE0900,EFYE9999
.
EFYE0100
.          IF        IBCNUBAS=1                       * SRF 13804
.            MATCH     IBCNBSFY,FMLCYEAR
.            GOTO      EFYE9000 IF LESS
.          ENDIF
          CALL      DFYE0000
          BRANCH    EXIT,EFYE0000
.
          CLEAR     FYEADESC
          APPEND    "Ending  ",FYEADESC
          APPEND    EFINDATE,FYEADESC
          RESET     FYEADESC
.
          IF        ACCEPT=0
            MATCH     FMLCYEAR,DIM4
            GOTO      EFYE9999 IF EQUAL
.
            MOVE      "   10",FLDID
            CALL      GETPOSIT
            PACK      VAR,FMLCYEAR,SP70
            CALL      DISPITEM
.
            MOVE      "   11",FLDID
            CALL      GETPOSIT
            PACK      VAR,FYEADESC,SP70
            CALL      DISPITEM
.
            CALL      EPER0000
            BRANCH    EXIT,EFYE9800,EFYE9900
.
            MOVE      "   14",FLDID
            CALL      GETPOSIT
            PACK      VAR,TOPER,SP70
            CALL      DISPITEM
.
            MOVE      "   10",FLDID
            CALL      GETPOSIT
          ENDIF
.
          GOTO      EFYE9999
.
.EFYE0900  PACK      FMLCYEAR,CCC,CYY,SP70  * srf 23486 - CYY has prev fin yr
EFYE0900  PACK      FMLCYEAR,FMLACYRR,SP70  * srf 23486 - curr fin year
          REP       " 0",FMLCYEAR
          GOTO      EFYE0100
.
EFYE9000  CLEAR     DISPMSG
          APPEND    "BAS Financial Year must not < ",DISPMSG
          APPEND    IBCNBSFY,DISPMSG
          APPEND    " - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EFYE0000
.
EFYE9800  MOVE      ONE,EXIT
          GOTO      EFYE9999
.
EFYE9900  MOVE      TWO,EXIT
          GOTO      EFYE9999
.
EFYE9999  RETURN
.----------------------------------------------------------------------
. Display Financial Year Description
. Return  :  EFINDATE - end of Financial Date (99/99/9999)
.            EXIT : 0 - found, 1 - Not found
.----------------------------------------------------------------------
DFYE0000  MOVE      ZERO,EXIT
          PACK      KEY6,FMLALEDG,FMLCYEAR
          CALL      RDFMLC1
          BRANCH    OVRCD,DFYE9000
.
          BRANCH    FMLAPERS,DFYE3000    * branch if thirteen periods
.
. 12 periods
.
          UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          PACK      EFINDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      YEAREND,CCENT,CYEAR
          GOTO      DFYE9999
.
. 13 periods
.
DFYE3000  UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          PACK      EFINDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      YEAREND,CCENT,CYEAR
          GOTO      DFYE9999
.
DFYE9000  MOVE      ONE,EXIT
.
DFYE9999  RETURN
.
.----------------------------------------------------------------------
. Enter Range of Financial Period
.----------------------------------------------------------------------
EPER0000  UNPACK    SP70,FPERDESC,TPERDESC
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          CALL      KPER0000
          BRANCH    EXIT,EPER0100,EPER9999
.
          MOVE      DIM2,FROMPER
          GOTO      EPER0150
.
EPER0100  MOVE      "01",FROMPER
          MOVE      ONE,FORM2
          CALL      VPER0000
          BRANCH    EXIT,EPER0000
.
EPER0150  MOVE      FROMPER,VAR
          CALL      DISPITEM
.
          MOVE      STARTDTE,FROMDATE
          UNPACK    STARTDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      FROMPER,FPERIOD1
          CLEAR     FPERDESC
          APPEND    PERIDESC,FPERDESC
          APPEND    " Starting ",FPERDESC
          APPEND    CPCDATE,FPERDESC
          RESET     FPERDESC
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          MOVE      FPERDESC,VAR
          CALL      DISPITEM
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
.
          CALL      KPER0000
          BRANCH    EXIT,EPER0200,EPER9999
.
          MOVE      DIM2,TOPER
          MOVE      TOPER,VAR
          CALL      DISPITEM
.
          MATCH     FROMPER,TOPER
          GOTO      EPER9900 IF EQUAL
          GOTO      EPER9900 IF NOT LESS
          BEEP
          MOVE      "To Period Must Be > From Period - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EPER0000
.
EPER0200  MOVE      "12",F2
          ADD       FMLAPERS,F2
          MOVE      F2,TOPER
          MOVE      F2,FORM2
          CALL      VPER0000
          BRANCH    EXIT,EPER0000
.
EPER9900  MOVE      ENDDATE,TODATE
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      TOPER,FPERIOD2
          CLEAR     TPERDESC
          APPEND    PERIDESC,TPERDESC
          APPEND    " Ending   ",TPERDESC
          APPEND    CPCDATE,TPERDESC
          RESET     TPERDESC
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          MOVE      TPERDESC,VAR
          CALL      DISPITEM
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          GOTO      EPER9999
.
EPER9999  RETURN
.----------------------------------------------------------------------
. Validate Financial Period
.----------------------------------------------------------------------
VPER0000  MOVE      ZERO,EXIT
          MOVE      "12",F2
          ADD       FMLAPERS,F2
          COMPARE   FORM2,ZERO
          GOTO      VPER9900 IF NOT LESS
          COMPARE   FORM2,F2
          GOTO      VPER9900 IF LESS
.
          LOAD      ENDDATE,FORM2,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO,FMLC05TO:
                               FMLC06TO,FMLC07TO,FMLC08TO,FMLC09TO,FMLC10TO:
                               FMLC11TO,FMLC12TO,FMLC13TO
          LOAD      STARTDTE,FORM2,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR,FMLC05FR:
                               FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR,FMLC10FR:
                               FMLC11FR,FMLC12FR,FMLC13FR
          LOAD      PERIDESC,FORM2,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE,FMLC05DE:
                               FMLC06DE,FMLC07DE,FMLC08DE,FMLC09DE,FMLC10DE:
                               FMLC11DE,FMLC12DE,FMLC13DE
          GOTO      VPER9999
.
VPER9900  MOVE      ONE,EXIT
          GOTO      VPER9999
.
VPER9999  RETURN
.----------------------------------------------------------------------
. Keyin Financial Period
. Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.----------------------------------------------------------------------
KPER0000  MOVE      SP70,DIM2
          KEYIN     *PCCOL:CVERT,*DV,DIM2:
                    *PCCOL:CVERT,*V2LON,*JR,*RV,DIM2
.
          ENDSET    DIM2
          APPEND    SP70,DIM2
          RESET     DIM2
.
          MATCH     SP70,DIM2
          GOTO      KPER9900 IF EQUAL
.
          PACK      XCHARD2,SP1,EXITCHAR,SP70
          MATCH     XCHARD2,DIM2
          GOTO      KPER9950 IF EQUAL
.
          TYPE      DIM2
          GOTO      KPER0000 IF NOT EQUAL
.
          MOVE      DIM2,FORM2
          CALL      VPER0000
          BRANCH    EXIT,KPER0000
.
          MOVE      FORM2,DIM2
          REP       " 0",DIM2
.
          MOVE      ZERO,EXIT
          GOTO      KPER9999
.
KPER9900  MOVE      ONE,EXIT
          GOTO      KPER9999
.
KPER9950  MOVE      TWO,EXIT
          GOTO      KPER9999
.
KPER9999  RETURN
.
.----------------------------------------------------------------------
. Enter Cash or Accrual
. RETURN  :  CASHFLAG : 0 - Accrual, 1 - Cash
.----------------------------------------------------------------------
ECAC0000  MOVE      ZERO,CASHFLAG
.
          MOVE      "A",ANS
          KEYIN     *PCCOL:CVERT,*DV,ANS,*EL:
                    *PCCOL:CVERT,*V2LON,*RV,ANS:
                    *PCCOL:CVERT,*DV,ANS
.
          REP       UPPLOW,ANS
.
          PACK      ANS,ANS,SP1
          MATCH     SP1,ANS
          GOTO      ECAC0000 IF EQUAL
.
          MATCH     EXITCHAR,ANS
          GOTO      ECAC9000 IF EQUAL
.
          MATCH     ANSC,ANS
          GOTO      ECAC3000 IF NOT EQUAL
          MOVE      "Cash   ",CASHACCR
          MOVE      ONE,CASHFLAG
          GOTO      ECAC9999
.
ECAC3000  MATCH     ANSA,ANS
          GOTO      ECAC4000 IF NOT EQUAL
          MOVE      "Accrual",CASHACCR
          MOVE      ZERO,CASHFLAG
          GOTO      ECAC9999
.
ECAC4000  BEEP
          GOTO      ECAC0000
.
ECAC9000  MOVE      TWO,EXIT
          GOTO      ECAC9999
.
ECAC9999  RETURN
.
.----------------------------------------------------------------------
. Print by Account
.----------------------------------------------------------------------
PRNA0000  CALL      OPEN0000
          BRANCH    EXIT,PRNA9999
.
          MOVE      ONE,SCRNO
          MOVE      ZERO,TOTMONTH
          MOVE      ZERO,TOTAL
          MOVE      ZERO,BALCFFLG
.
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
.
          DISPLAY   *P1:24,*EL,"Printing   : "
          CALL      MAKEXP00             * Create Export File
.
.---- read the report sequence file ----
.
          PACK      KEY14,KYINLEDG,STRACCT,SP70
          CALL      RSFMAM1
          CALL      RPFMAM1
.
PRNA1000  CALL      RKFMAM1              * read next
          BRANCH    OVRCD,PRNA9500       * end of report if over
.
          MATCH     FMAMLEDG,KYINLEDG       * test if same ledger
          GOTO      PRNA9500 IF NOT EQUAL
.
          MATCH     FMAMACCT,ENDACCT     * test if in account range
          GOTO      PRNA9500 IF LESS
.
          MATCH     "6",FMAMTYPE         * test if posting account type
          GOTO      PRNA1000 IF NOT LESS
.
.-----  read through the cash or accrual transaction file ----
.
          MOVE      ZERO,TOTMONTH
.
.---- display the account being processed ---
.
          DISPLAY   *P14:24,*V2LON,FMAMLEDG,SLASH,FMAMACCT;
.
          MOVE      ZERO,ACCTPRIN        * Account Code Not Printed
          PACK      KEY32,FMAMLEDG,FMAMACCT,FROMDATE,SP20
          CALL      RSFMTR2
.
PRNA1700  CALL      RKFMTR2
          BRANCH    OVRCD,PRNA2000
.
          MATCH     FMAMLEDG,FMTRLEDG    * test for same ledger
          GOTO      PRNA2000 IF NOT EQUAL
.
          MATCH     FMAMACCT,FMTRACCT    * test if same account
          GOTO      PRNA2000 IF NOT EQUAL
.
          MATCH     FMTRPDAT,TODATE      * test if in date range
          GOTO      PRNA2000 IF LESS
.
. test if in dissection range
.
          MATCH     SP70,STRDISS
          IF        !@EQUAL
            MOVE      ONE,BALCFFLG
            MATCH     STRDISS,FMTRDISS
            GOTO      PRNA1700 IF LESS
          ENDIF
.
          MATCH     Z70,ENDDISS
          IF        !@EQUAL
            MOVE      ONE,BALCFFLG
            MATCH     FMTRDISS,ENDDISS
            GOTO      PRNA1700 IF LESS
          ENDIF
.
          BRANCH    ACCTPRIN,PRNA1800
          MOVE      ONE,ACCTPRIN        * Account Code Not Printed
          COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
          ADD       TWO,CLNO
          PRINT     *1,FMAMACCT,*14,FMAMDESC,*N
.
PRNA1800  COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
.
          CALL      PLIN0000             * print the report line
          GOTO      PRNA1700
.
PRNA2000  CALL      FORB0000
          CALL      PRPT0000
          GOTO      PRNA1000
.                                            * have we printed anything?
PRNA9500  IF        CPAGENO=0
            MOVE      SP70,FMAMACCT
            CALL      HEAD0000
          ENDIF
.
          MOVE      FORMATT,OUTAMTT
          FEDIT     TOTAL,OUTAMTT
          PRINT     *26,"Net Movement For Accounts Printed ",*67,OUTAMTT
          CALL      UND132
          BRANCH    FMLCYLC,PRNA9900
.
          COMPARE   SIXTY,CLNO
          CALL      HEAD0000 IF NOT LESS
          PRINT     *N,*20,"N.B.    Surplus/Deficit has NOT been transferred":
                           " from previous Financial Year",*N:
                    *29,"as the Closing Balance Transfer has NOT been Run."
          CALL      UND132
.
PRNA9900  MOVE      ZERO,CPAGENO
          DISPLAY   *P1:24,*EL
          CALL      TRAN0000
          GOTO      PRNA9999
.
PRNA9999  RETURN
.
.----------------------------------------------------------------------
. Enter Range of Account Number
.----------------------------------------------------------------------
EACC0000  MOVE      "    7",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "1",CACCTIND
          CALL      KAMAFM00                * get data
          BRANCH    EXIT,EACC0100,EACC9999
.
          PACK      FROMACC,FMAMACCT,SP3,FMAMDESC,SP70
          PACK      STRACCT,FMAMACCT,SP70
          GOTO      EACC0150
.
EACC0100  MOVE      "Start                                             ",FROMACC
          PACK      STRACCT,SP70
.
EACC0150  MOVE      FROMACC,VAR
          CALL      DISPITEM
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
.
          MOVE      "1",CACCTIND
          CALL      KAMAFM00                * get data
          BRANCH    EXIT,EACC0200,EACC9999
.
          PACK      TOACC,FMAMACCT,SP3,FMAMDESC,SP70
          PACK      ENDACCT,FMAMACCT,SP70
.
          MATCH     FROMACC,TOACC
          GOTO      EACC9990 IF EQUAL
          GOTO      EACC9990 IF NOT LESS
          BEEP
          MOVE      "To Account Must Be > From Account - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EACC0000
.
EACC0200  MOVE      "Finish                                            ",TOACC
          PACK      ENDACCT,Z70
          GOTO      EACC9990
.
EACC9990  MOVE      "    6",FLDID
          CALL      GETPOSIT
          GOTO      EACC9999
.
EACC9999  RETURN
.
.----------------------------------------------------------------------
. Enter Range of Account Number
.----------------------------------------------------------------------
EDIS0000  MOVE      "    9",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          PACK      VAR,SP70,SP70
          CALL      DISPITEM
.
          MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00                * get data
          BRANCH    EXIT,EDIS0100,EDIS9999
.
          PACK      STRDISS,FMDSCODE,SP70
          PACK      FROMDIS,FMDSCODE,SP3,FMDSDESC,SP70
          GOTO      EDIS0150
.
EDIS0100  MOVE      "Start                      ",FROMDIS
          PACK      STRDISS,SP70
.
EDIS0150  MOVE      FROMDIS,VAR
          CALL      DISPITEM
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
.
          MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00                * get data
          BRANCH    EXIT,EDIS0200,EDIS9999
.
          PACK      ENDDISS,FMDSCODE,SP70
          PACK      TODIS,FMDSCODE,SP3,FMDSDESC,SP70
.
          MATCH     FROMDIS,TODIS
          GOTO      EDIS9990 IF EQUAL
          GOTO      EDIS9990 IF NOT LESS
          BEEP
          MOVE      "To Dissection Must Be > From Dissection - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EDIS0000
.
EDIS0200  MOVE      "Finish                     ",TODIS
          PACK      ENDDISS,Z70
          GOTO      EDIS9990
.
EDIS9990  MOVE      "    8",FLDID
          CALL      GETPOSIT
          GOTO      EDIS9999
.
EDIS9999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSMASIO/INC
          INC       FMSAMAIO/INC
          INC       FMSAMAKY    
          INC       FMSBASIO/INC
          INC       FMSCODCD    
          INC       FMSCSAIO/INC
          INC       FMSCTRIO/INC
          INC       FMSDISIO/INC
          INC       FMSDISKY    
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSLMBIO/INC
          INC       FMSLMBKY    
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSRSFIO/INC
          INC       FMSTCFIO/INC
          INC       FMSTRNIO/INC
          INC       IBABASIO/INC
.
          INC       STDGENCD
.
