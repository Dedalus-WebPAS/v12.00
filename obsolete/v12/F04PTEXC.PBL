.*****************************************************************************
.*    Program      : F04PTEXC                                                *
.*    Description  : Conversion patexcNN to new File layout                  *
.*                                                                           *
.*    Author       : Steve Armstrong  CAR 294994                             *
.*    Date         : 17/03/2014                                              *
.*    Modifications:                                                         *
.*                                                                           *
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
.
.  Old File definition
.
OLDFILE1  IFILE     SQL, FIXED=69, KEY="U1-8,9-9,10-11"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
.DPTXCADM  DIM       8        8           1       Admission number
.PTXCTYPE  DIM       1        1           9       Record type
.                                                   - "D" = Diseases (ICD9CM)
.                                                   - "O" = Operations (ICD9CM)
.                                                   - "M" = MBS codes
OLDCOUNT   DIM       2        2          10       Unique counter
.PTXCCTYP  DIM       1        1          12       Code type
.                                                   - Disease type for diseases
.                                                   - "O" for operations
.                                                   - "M" for MBS codes
.PTXCCODE  DIM       9        9          13       Disease/Operation/MBS code
.PTXCDATE  DIM       8        8          22       Operation/MBS date (CCYYMMDD)
.                                                   - Blank for diseases
.PTXCOPCO  FORM     12.2      8          30       Operation cost
.                                                   - Zero for diseases
.                                                   - From ICD9CM record for
.                                                     Operations
.                                                   - MBS fee for MBS codes.
.PTXCMADC  DIM       6        6          38       Attending doctor code
.PTXCMADT  DIM       3        3          44       Attending doctor type
.                                                   -(Cat DT)
.PTXCMWRD  DIM       3        3          47       Ward of operation
.PTXCMBED  DIM       3        3          50       Bed of operation
.PTXCSPAR  DIM       16      16          53       Spare variable
.
.End of Record                           69
.
.
.  New File definition
.
PATEXTC1  IFILE     SQL, FIXED=70, KEY="U1-8,9-9,10-12"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
DPTXCADM   DIM       8        8           1       Admission number
PTXCTYPE   DIM       1        1           9       Record type
.                                                   - "D" = Diseases (ICD9CM)
.                                                   - "O" = Operations (ICD9CM)
.                                                   - "M" = MBS codes
DPTXCUNQ   DIM       3        3          10       Unique counter
PTXCCTYP   DIM       1        1          13       Code type
.                                                   - Disease type for diseases
.                                                   - "O" for operations
.                                                   - "M" for MBS codes
PTXCCODE   DIM       9        9          14       Disease/Operation/MBS code
PTXCDATE   DIM       8        8          23       Operation/MBS date (CCYYMM
.                                                   - Blank for diseases
PTXCOPCO   FORM     12.2      8          31       Operation cost
.                                                   - Zero for diseases
.                                                   - From ICD9CM record for
.                                                     Operations
.                                                   - MBS fee for MBS codes.
PTXCMADC   DIM       6        6          39       Attending doctor code
PTXCMADT   DIM       3        3          45       Attending doctor type
.                                                   -(Cat DT)
PTXCMWRD   DIM       3        3          48       Ward of operation
PTXCMBED   DIM       3        3          51       Bed of operation
PTXCSPAR   DIM       16      16          54       Spare variable
.
.End of Record                           70
.
.  Redefine FORM fields from key
.  -----------------------------
PTXCADMN    FORM       8
PTXCUNIQ    FORM       3
PTXCCOST    FORM       5
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM3      DIM       3
DIM60     DIM       60
DISNUM    FORM      4
.
FILARRAY  DIM       8[16]
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVARRAY  DIM       8[16]
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PATEXCFD"
PRGID     INIT      "F04PTEXC"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit patexc01
                            MAIN1000:             * run c-isam fixit patexc02
                            MAIN1000:             * run c-isam fixit patexc03
                            MAIN1000:             * run c-isam fixit patexc04
                            MAIN1000:             * run c-isam fixit patexc05
                            MAIN1000:             * run c-isam fixit patexc06
                            MAIN1000:             * run c-isam fixit patexc07
                            MAIN1000:             * run c-isam fixit patexc08
                            MAIN1000:             * run c-isam fixit patexc09
                            MAIN1000:             * run c-isam fixit patexc10
                            MAIN1000:             * run c-isam fixit patexc11
                            MAIN1000:             * run c-isam fixit patexc12
                            MAIN1000:             * run c-isam fixit patexc13
                            MAIN1000:             * run c-isam fixit patexc14
                            MAIN1000:             * run c-isam fixit patexc15
                            MAIN1000              * run c-isam fixit patexc16
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN0500
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN0500                * cancel
.
.         Running c-isam fix
.
MAIN5000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN0500
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN0500
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
.
.         Load file name array
.
          MOVE      "patexc01",FILARRAY[1]
          MOVE      "patexc02",FILARRAY[2]
          MOVE      "patexc03",FILARRAY[3]
          MOVE      "patexc04",FILARRAY[4]
          MOVE      "patexc05",FILARRAY[5]
          MOVE      "patexc06",FILARRAY[6]
          MOVE      "patexc07",FILARRAY[7]
          MOVE      "patexc08",FILARRAY[8]
          MOVE      "patexc09",FILARRAY[9]
          MOVE      "patexc10",FILARRAY[10]
          MOVE      "patexc11",FILARRAY[11]
          MOVE      "patexc12",FILARRAY[12]
          MOVE      "patexc13",FILARRAY[13]
          MOVE      "patexc14",FILARRAY[14]
          MOVE      "patexc15",FILARRAY[15]
          MOVE      "patexc16",FILARRAY[16]
.
.         Load saved file name array
.
          MOVE      "sptexc01",SAVARRAY[1]
          MOVE      "sptexc02",SAVARRAY[2]
          MOVE      "sptexc03",SAVARRAY[3]
          MOVE      "sptexc04",SAVARRAY[4]
          MOVE      "sptexc05",SAVARRAY[5]
          MOVE      "sptexc06",SAVARRAY[6]
          MOVE      "sptexc07",SAVARRAY[7]
          MOVE      "sptexc08",SAVARRAY[8]
          MOVE      "sptexc09",SAVARRAY[9]
          MOVE      "sptexc10",SAVARRAY[10]
          MOVE      "sptexc11",SAVARRAY[11]
          MOVE      "sptexc12",SAVARRAY[12]
          MOVE      "sptexc13",SAVARRAY[13]
          MOVE      "sptexc14",SAVARRAY[14]
          MOVE      "sptexc15",SAVARRAY[15]
          MOVE      "sptexc16",SAVARRAY[16]
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  HLINE     *G37,2,53,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,".  Exit":
                    *P1:5,*V2LON,ONE,*HOFF:
                          ".  Run Fixit patexc01 (c-isam only)":
                    *P1:6,*V2LON,TWO,*HOFF:
                          ".  Run Fixit patexc02 (c-isam only)":
                    *P1:7,*V2LON,THREE,*HOFF:
                          ".  Run Fixit patexc03 (c-isam only)":
                    *P1:8,*V2LON,FOUR,*HOFF:
                          ".  Run Fixit patexc04 (c-isam only)":
                    *P1:9,*V2LON,FIVE,*HOFF:
                          ".  Run Fixit patexc05 (c-isam only)":
                    *P1:10,*V2LON,SIX,*HOFF:
                          ".  Run Fixit patexc06 (c-isam only)":
                    *P1:11,*V2LON,SEVEN,*HOFF:
                          ".  Run Fixit patexc07 (c-isam only)":
                    *P1:12,*V2LON,EIGHT,*HOFF:
                          ".  Run Fixit patexc08 (c-isam only)":
                    *P1:13,*V2LON,NINE,*HOFF:
                          ".  Run Fixit patexc09 (c-isam only)":
                    *P1:14,*V2LON,TEN,*HOFF:
                          ". Run Fixit patexc10 (c-isam only)":
                    *P1:15,*V2LON,TEN1,*HOFF:
                          ". Run Fixit patexc11 (c-isam only)":
                    *P1:16,*V2LON,TEN2,*HOFF:
                          ". Run Fixit patexc12 (c-isam only)":
                    *P1:17,*V2LON,TEN3,*HOFF:
                          ". Run Fixit patexc13 (c-isam only)":
                    *P1:18,*V2LON,TEN4,*HOFF:
                          ". Run Fixit patexc14 (c-isam only)":
                    *P1:19,*V2LON,TEN5,*HOFF:
                          ". Run Fixit patexc15 (c-isam only)":
                    *P1:20,*V2LON,TEN6,*HOFF:
                          ". Run Fixit patexc16 (c-isam only)"
.
OPTN0500  KEYIN     *P1:22,*EL,"Select Option : ":
                    *P17:22,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam patexc01 fixit
                            OPTN9000:            * run c-isam patexc02 fixit
                            OPTN9000:            * run c-isam patexc03 fixit
                            OPTN9000:            * run c-isam patexc04 fixit
                            OPTN9000:            * run c-isam patexc05 fixit
                            OPTN9000:            * run c-isam patexc06 fixit
                            OPTN9000:            * run c-isam patexc07 fixit
                            OPTN9000:            * run c-isam patexc08 fixit
                            OPTN9000:            * run c-isam patexc09 fixit
                            OPTN9000:            * run c-isam patexc10 fixit
                            OPTN9000:            * run c-isam patexc11 fixit
                            OPTN9000:            * run c-isam patexc12 fixit
                            OPTN9000:            * run c-isam patexc13 fixit
                            OPTN9000:            * run c-isam patexc14 fixit
                            OPTN9000:            * run c-isam patexc15 fixit
                            OPTN9000             * run c-isam patexc16 fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  DISPLAY   *P53:2,*V2LON,SP1,FILARRAY[COPTION],SP1:
                    *P1:3,*EF;
.
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      FILARRAY[COPTION],INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP70,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "cp `ldat ",CMDLINE
          APPEND    FILARRAY[COPTION],CMDLINE
          APPEND    ".dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    SAVARRAY[COPTION],CMDLINE
          APPEND    ".dat",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP70,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "cp `ldat ",CMDLINE
          APPEND    FILARRAY[COPTION],CMDLINE
          APPEND    ".idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    SAVARRAY[COPTION],CMDLINE
          APPEND    ".idx",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    FILARRAY[COPTION],CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    SAVARRAY[COPTION],DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    FILARRAY[COPTION],NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
          APPEND    " 70 UC1-8,9-9,10-12",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PATEXTC1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             Loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
.
          PACK      KEY11,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      ZERO,PTXCUNIQ
          PACK      DIM3,SP1,OLDCOUNT
          MOVE      DIM3,PTXCUNIQ
          PACK      KEY12,PTXCADMN,PTXCTYPE,PTXCUNIQ
          CALL      RAPTEXC1
          IF        OVRCD = 1
            CALL      WRPTEXC1                    * write to new file
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATEXTC1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    SAVARRAY[COPTION],DIM60
          APPEND    "*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not zipped or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  PACK      CMDLINE,SP70,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "ldat ",CMDLINE
          APPEND    FILARRAY[COPTION],CMDLINE
          APPEND    ".dat > temp.txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding '",FILARRAY[COPTION],"'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.  Old I/O Routines
.
READSOLD  MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      OLDFILE1,KEY11;;
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          RESET     KEY11
          READKS    OLDFILE1;DPTXCADM,PTXCTYPE,OLDCOUNT,PTXCCTYP,PTXCCODE:
                             PTXCDATE,PTXCOPCO,PTXCMADC,PTXCMADT,PTXCMWRD:
                             PTXCMBED,PTXCSPAR
          GOTO      OVERCOND IF OVER
          MOVE      PTXCOPCO,PTXCCOST
          MOVE      DPTXCADM,PTXCADMN
          RETURN
.
.  New I/O Routines
.
RAPTEXC1  MOVE      ZERO,OVRCD
          RESET     KEY12
          READ      PATEXTC1,KEY12;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
WRPTEXC1  MOVE      ZERO,OVRCD
          MOVE      PTXCCOST,PTXCOPCO
          RESET     KEY12
          WRITE     PATEXTC1,KEY12;KEY12,PTXCCTYP,PTXCCODE,PTXCDATE,PTXCOPCO:
                                   PTXCMADC,PTXCMADT,PTXCMWRD,PTXCMBED:
                                   PTXCSPAR
          RETURN
.
          INC       STD001IO
