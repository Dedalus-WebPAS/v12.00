.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.01  02.11.1999 Sandra Barcham
.           Change locked message to use X for exit
.-------------------------------------------------------
ENDFLAG   FORM      1
ERRCOUNT  FORM      8
KEYDES60  DIM       60
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
SAVKEY22  DIM       22
TRANDATE  DIM       8
TRANDESC  DIM       60
UPDTYPE   FORM      2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACSM01
.   Function      :   Corp Creditor/Supplier Maintenance      
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSCTSFD/INC
          INC       APSMASFD/INC
          INC       CSMCREFD/INC
          INC       CSMCUCFD/INC
          INC       CSMSKYFD/INC
          INC       IBADBSFD/INC
          INC       SINPOAFD/INC
.=========================
.Local Variable Definition
.-------------------------
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACSM01"
PRGNAM    INIT      "Corp Creditor/Supplier Maintenance      "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsctsaf";
          OPEN      APSCTSA1,"apsctsaf"
          MOVE      "   63",AUDTSECT
          MOVE      "158",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening csmaudcr";
            OPEN      CSMAUDCR,"csmaudcr"
          ENDIF
          DISPLAY   *P56:24,"Opening csmcreaf";
          OPEN      CSMCREA1,"csmcreaf"
          DISPLAY   *P56:24,"Opening csmcucaf";
          OPEN      CSMCUCA1,"csmcucaf"
          DISPLAY   *P56:24,"Opening csmskyaf";
          OPEN      CSMSKYA1,"csmskyaf"
          DISPLAY   *P56:24,"Opening csmskyaf";
          OPEN      CSMSKYA2,"csmskyaf"
          DISPLAY   *P56:24,"Opening ibadbsaf";
          OPEN      IBADBSA1,"ibadbsaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Corporate Creditor/Supplier Mainten
          ENDIF
          RETURN
.--------------------------------
. Screen - Corporate Creditor/Supplier Mainten
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Corporate Creditor/Supplier Mainten
.-------------------------------------------------------
CF00L000
          MOVE      SP70,CSCRCRD 
          MOVE      SP70,CSCRTYP 
          MOVE      SP70,CSCRSKY 
          MOVE      SP70,CSCRCN1 
          MOVE      SP70,CSCRCN2 
          MOVE      SP70,CSCRCA1 
          MOVE      SP70,CSCRCA2 
          MOVE      SP70,CSCRCA3 
          MOVE      SP70,CSCRCPC 
          MOVE      SP70,CSCRCTEL
          MOVE      SP70,CSCRCFAX
          MOVE      SP70,CSCRCON 
          MOVE      ZERO,CSCRHOR 
          MOVE      ZERO,CSCRHIN 
          MOVE      ZERO,CSCRHCR 
          MOVE      ZERO,CSCRHPY 
          MOVE      SP70,CSCRUR1 
          MOVE      SP70,CSCRUR2 
          MOVE      SP70,CSCRUD1 
          MOVE      SP70,CSCRUD2 
          MOVE      SP70,CSCRUY1 
          MOVE      SP70,CSCRUY2 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Corporate Creditor/Supplier Mainten
.--------------------------------------------------------
KY00L000
.
KY00L110
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      OVRCD,ACCEPT
          MOVE      CSCRCRD,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Corporate Creditor/Supplier Mainten
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Corporate Creditor/Supplier Mainten
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Corporate Creditor/Supplier Mainten
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Corporate Creditor/Supplier Mainten
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                           PS00L999,PS00L999,PS00L101,PS00L102:
                            PS00L103,PS00L104,PS00L105,PS00L106:
                            PS00L107,PS00L108,PS00L109,PS00L110:
                            PS00L111,PS00L112,PS00L113,PS00L114:
                            PS00L115,PS00L116,PS00L117,PS00L118:
                            PS00L119,PS00L120,PS00L121,PS00L122
          GOTO     PS00L999
.
PS00L101
          MOVE      CSCRTYP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CSCRSKY,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CSCRCN1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      CSCRCN2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      CSCRCA1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      CSCRCA2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      CSCRCA3,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      CSCRCPC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      CSCRCTEL,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      CSCRCFAX,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      CSCRCON,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRHOR,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRHIN,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRHCR,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRHPY,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      CSCRUR1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      CSCRUR2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          UNPACK    CSCRUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          UNPACK    CSCRUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L122
          MOVE      APCTDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Corporate Creditor/Supplier Mainten
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L006,SF00L006:
                           SF00L006,SF00L006,SF00L105,SF00L106:
                            SF00L107,SF00L108,SF00L109,SF00L110:
                            SF00L111,SF00L112,SF00L113,SF00L114:
                            SF00L115,SF00L116,SF00L117,SF00L118:
                            SF00L119,SF00L120,SF00L121,SF00L122:
                            SF00L123,SF00L124,SF00L125,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                           SF00L020,SF00L020,SF00L105,SF00L106:
                            SF00L107,SF00L108,SF00L109,SF00L110:
                            SF00L111,SF00L112,SF00L113,SF00L114:
                            SF00L115,SF00L116,SF00L117,SF00L118:
                            SF00L119,SF00L120,SF00L121,SF00L122:
                            SF00L123,SF00L124,SF00L125,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      CANC0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      POST0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L104
          CALL      UPDT0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L105
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APCTDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPCTA00
          MOVE      APCTCODE,CSCRTYP
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CSCRTYP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APCTDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPSKA00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CSCRSKY,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          STRIP     CSCRCN1 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCN1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCN1 
          SFORMAT   VAR,127
          ENDSET    CSCRCN1 
          APPEND    SP70,CSCRCN1 
          RESET     CSCRCN1 
          CMATCH    EXITCHAR,CSCRCN1 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCN1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
          ENDIF
          MOVE      CSCRCN1,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          STRIP     CSCRCN2 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCN2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCN2 
          SFORMAT   VAR,127
          ENDSET    CSCRCN2 
          APPEND    SP70,CSCRCN2 
          RESET     CSCRCN2 
          CMATCH    EXITCHAR,CSCRCN2 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCN2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
          ENDIF
          MOVE      CSCRCN2,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
          CALL     SELECTED
          STRIP     CSCRCA1 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCA1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCA1 
          SFORMAT   VAR,127
          ENDSET    CSCRCA1 
          APPEND    SP70,CSCRCA1 
          RESET     CSCRCA1 
          CMATCH    EXITCHAR,CSCRCA1 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCA1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
          ENDIF
          MOVE      CSCRCA1,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
          CALL     SELECTED
          STRIP     CSCRCA2 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCA2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCA2 
          SFORMAT   VAR,127
          ENDSET    CSCRCA2 
          APPEND    SP70,CSCRCA2 
          RESET     CSCRCA2 
          CMATCH    EXITCHAR,CSCRCA2 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCA2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
          ENDIF
          MOVE      CSCRCA2,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L111
          CALL     SELECTED
          STRIP     CSCRCA3 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCA3,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCA3 
          SFORMAT   VAR,127
          ENDSET    CSCRCA3 
          APPEND    SP70,CSCRCA3 
          RESET     CSCRCA3 
          CMATCH    EXITCHAR,CSCRCA3 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCA3 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
          ENDIF
          MOVE      CSCRCA3,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L112
          CALL     SELECTED
          STRIP     CSCRCPC 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCPC,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCPC 
          SFORMAT   VAR,127
          ENDSET    CSCRCPC 
          APPEND    SP70,CSCRCPC 
          RESET     CSCRCPC 
          CMATCH    EXITCHAR,CSCRCPC 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCPC 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L112
            ENDIF
          ENDIF
          MOVE      CSCRCPC,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L113
          CALL     SELECTED
          STRIP     CSCRCTEL
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCTEL,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCTEL
          SFORMAT   VAR,127
          ENDSET    CSCRCTEL
          APPEND    SP70,CSCRCTEL
          RESET     CSCRCTEL
          CMATCH    EXITCHAR,CSCRCTEL
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCTEL
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L113
            ENDIF
          ENDIF
          MOVE      CSCRCTEL,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L114
          CALL     SELECTED
          STRIP     CSCRCFAX
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCFAX,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCFAX
          SFORMAT   VAR,127
          ENDSET    CSCRCFAX
          APPEND    SP70,CSCRCFAX
          RESET     CSCRCFAX
          CMATCH    EXITCHAR,CSCRCFAX
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCFAX
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L114
            ENDIF
          ENDIF
          MOVE      CSCRCFAX,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L115
          CALL     SELECTED
          STRIP     CSCRCON 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRCON,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRCON 
          SFORMAT   VAR,127
          ENDSET    CSCRCON 
          APPEND    SP70,CSCRCON 
          RESET     CSCRCON 
          CMATCH    EXITCHAR,CSCRCON 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRCON 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L115
            ENDIF
          ENDIF
          MOVE      CSCRCON,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L116
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CSCRHOR 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRHOR,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L117
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CSCRHIN 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRHIN,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L118
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CSCRHCR 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRHCR,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L119
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CSCRHPY 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRHPY,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L120
          CALL     SELECTED
          STRIP     CSCRUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRUR1 
          SFORMAT   VAR,127
          ENDSET    CSCRUR1 
          APPEND    SP70,CSCRUR1 
          RESET     CSCRUR1 
          CMATCH    EXITCHAR,CSCRUR1 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L120
            ENDIF
          ENDIF
          MOVE      CSCRUR1,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L121
          CALL     SELECTED
          STRIP     CSCRUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      CSCRUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,CSCRUR2 
          SFORMAT   VAR,127
          ENDSET    CSCRUR2 
          APPEND    SP70,CSCRUR2 
          RESET     CSCRUR2 
          CMATCH    EXITCHAR,CSCRUR2 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,CSCRUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L121
            ENDIF
          ENDIF
          MOVE      CSCRUR2,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L122
          CALL     SELECTED
          CALL      KEYDATE
          PACK      CSCRUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    CSCRUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L123
          CALL     SELECTED
          CALL      KEYDATE
          PACK      CSCRUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    CSCRUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L124
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CSCRUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L125
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CSCRUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CSCRUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
.-------------------------------------------------------------
. File : /users/bga/std/auditcan
.
. Audit & Locking Standard Routine to Cancel Changes.
.
. where   xx = Key Length
.         ss = System 2 Character Code
.         ff = File 2 Character Code
.       yyyy = Key Field IDs
.-------------------------------------------------------------
CANC0000  PACK     KEY5,CSCRCRD,SP70   * Setup Key for file.
          CALL     RACSCR1             * Check to see if record on file.
          IF       OVRCD=0
            CALL     DACSCR00          * Delete Before Audit.
            CALL     UUCSCR1           * Unlock.
          ENDIF
          RETURN
.
.-------------------------------------------------------------
. File : /users/bga/std/auditpost
.
. Audit & Locking Standard Routine to Post Changes.
.
. where   xx = Key Length
.         ss = System 2 Character Code
.         ff = File 2 Character Code
.       yyyy = Key Field IDs
.-------------------------------------------------------------
POST0000  PACK     KEY5,CSCRCRD,SP70  * Setup Key
          CALL     RACSCR1            * Check for record on file
          IF       OVRCD=0
            MOVE     ONE,UPDTYPE      * Update
            CALL     WRDBS000         * Write to DBS files for Update
            CALL     UPCSCR1          * Update Changes
            MOVE     THREE,AUDTTYPE   * After Change Type
            CALL     WACSCR00         * Write Audit Record
            CALL     UUCSCR1          * Unloc
          ELSE
            MOVE     ZERO,UPDTYPE     * Add
            CALL     WRDBS000         * Write to DBS files for Update
            CALL     WRCSCR1          * Write New Record
            MOVE     ONE,AUDTTYPE     * New Record Audit Type
            CALL     WACSCR00         * Write Audit Record
          ENDIF
          CALL     GENR0000           * Update Keyword Index
          RETURN                      * Return to program.
.------------------------------------------------------------
.  Function   :  Update Keyword Index File
.------------------------------------------------------------
GENR0000  CALL     CLEAR000
          BRANCH   EXIT,GENR9999
.
          PACK     KEYDES60,CSCRCN1,CSCRCN2
          CALL     BWORD000
.
GENR9999  RETURN
.------------------------------------------------------------
. Recreate File
.------------------------------------------------------------
CLEAR000  PACK     KEY20,CSCRCRD,SP70
          CALL     RSCSSK2
          CALL     RKCSSK2
          BRANCH   OVRCD,CLEAR999
          MATCH    CSCRCRD,CSSKCRD
          GOTO     CLEAR999 IF NOT EQUAL
.
          PACK     KEY20,CSSKCRD,CSSKKWD,SP70
          CALL     DECSSK2
          GOTO     CLEAR000
.
CLEAR999  RETURN
.-------------------------------------------------
. Format Words for Index
.-------------------------------------------------
BWORD000  CMATCH    SP1,KEYDES60             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYDES60
            GOTO      BWORD000 IF NOT EOS
            GOTO      BWORD999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYDES60,SP30        * reset form pointer
          MOVE      KEY60,KEYDES60
.
          SCAN      SP1,KEYDES60               * Locate the first blank
          GOTO      BWORD100 IF NOT EQUAL
          BUMP      KEYDES60,-1              * go back 1 to end of name
          MOVEFPTR  KEYDES60,CCITEM          * another handly form field
          RESET     KEYDES60                 * reset the form pointer
          SETLPTR   KEYDES60,CCITEM          * set logical length to end of name
.
.         Save this Word
.
BWORD100  MOVE      KEYDES60,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15
          PACK      KEY20,KEY15,CSCRCRD
          UNPACK    KEY20,CSSKKWD,CSSKCRD
          CALL      RDCSSK1
          IF        OVRCD=1
            CALL      WRCSSK1
          ENDIF
          GOTO      BWORD190
.
.         Check for any more words
.
BWORD190  SETLPTR   KEYDES60,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYDES60,CCITEM        * reset to this point
          PACK      KEY60,KEYDES60,SP30    * reset form pointer
          MOVE      KEY60,KEYDES60
.
          GOTO      BWORD000
.
BWORD999  RETURN
.------------------------------------------------------------
. Write to Database Update Control File
.------------------------------------------------------------
WRDBS000  PACK      KEY3,SP70
          CALL      RSIBDB1
WRDBS100  CALL      RKIBDB1
          BRANCH    OVRCD,WRDBS999
          PACK      KEY8,IBDBDBS,CSCRCRD
          UNPACK    KEY8,CSCUDBS,CSCUCRD
          CALL      RACSCU1
          IF        OVRCD=1
            MOVE      UPDTYPE,CSCUTYP
            MOVE      SP70,CSCUSPA
            CALL      WRCSCU1
          ENDIF
          GOTO       WRDBS100
WRDBS999  RETURN
.
.-------------------------------------------------------------
. File : /users/bga/std/auditdel
.
. Audit & Locking Standard Routine to Delete Record.
.
. where   xx = Key Length
.         ss = System 2 Character Code
.         ff = File 2 Character Code
.       yyyy = Key Field IDs
.-------------------------------------------------------------
DELT0000  MOVE     ZERO,HLEF
          CALL     GETSCR00
          CALL     CHALL000                * Check All Databases
          IF       ERRCOUNT<>0
            BEEP
            MOVE      "Deletion Aborted - ",DISPMSG
            CALL      MESSAGE1
            CALL      PUTSCR00
            GOTO      DELT9000
          ENDIF
          CALL     PUTSCR00
.
          MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DELT1000,DELT9000,DELT9100
.
DELT1000  PACK     KEY5,CSCRCRD,SP70  * Setup Key to File
          CALL     RACSCR1             * Read Record
          IF       OVRCD=0
            MOVE     "2",UPDTYPE
            CALL     WRDBS000
            CALL     DACSCR00          * Delete Before Audit
            MOVE     FOUR,AUDTTYPE     * Delete Audit Type
            CALL     WACSCR00          * Write Delete Audit
            CALL     DECSCR1           * Delete Record
          ENDIF
          MOVE     TWO,EXIT            * Restart Screen
          GOTO     DELT9999
DELT9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DELT9999
DELT9100  MOVE     TWO,EXIT            * Restart Screen on "Cancel"
          GOTO     DELT9999
DELT9999  RETURN
.------------------------------------------------------------
. Check All Databases
.------------------------------------------------------------
CHALL000  MOVE     "5",CVERT
          DISPLAY  *P1:5,*EF,*V2LON,*ULON,"Database            ",*HOFF,SP1:
                         *V2LON,*ULON,"   Date   ",*HOFF,SP1:
                         *V2LON,*ULON,"Transaction Details                   "
.
          MOVE     ZERO,ERRCOUNT
          MOVE     ZERO,ENDFLAG
          PACK     KEY3,SP70
          CALL     RSIBDB1
CHALL100  CALL     RKIBDB1                * Update Each Database
          BRANCH   OVRCD,CHALL900
          DISPLAY  *P1:23,*EL,"Database ",IBDBDBS,SP1,IBDBDES
.
          CALL     OPNFIL00               * Open Database Files
          BRANCH   EXIT,CHALL990
.
          MOVE     CSCRCRD,KEY5
          CALL     RDAPMA1                * Check on Database
          BRANCH   OVRCD,CHALL100
.
          PACK     KEY20,CSCRCRD,Z70
          CALL     RSSIPA2
CHALL110  CALL     RPSIPA2
          BRANCH   OVRCD,CHALL120
          MATCH    CSCRCRD,SIPASUP
          GOTO     CHALL120 IF NOT EQUAL
          MOVE     SIPADIN,TRANDATE
          CLEAR    TRANDESC
          APPEND   "Purchase Order ",TRANDESC
          APPEND   SIPAPON,TRANDESC
          RESET    TRANDESC
          CALL     ERRLIN00
          BRANCH   ENDFLAG,CHALL000,CHALL900
.
CHALL120  CALL     CLSFIL00
          GOTO     CHALL100
.
CHALL900  MOVE     ZERO,EXIT
          GOTO     CHALL999
CHALL990  MOVE     ONE,EXIT
CHALL999  DISPLAY  *P1:23,*EL
          RETURN
.------------------------------------------------------------
. Display Error
.------------------------------------------------------------
ERRLIN00  ADD       ONE,ERRCOUNT
          BRANCH    ENDFLAG,ERRLIN99,ERRLIN99
          ADD       ONE,CVERT
          UNPACK    TRANDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      IBDBDES,KEY20
          DISPLAY   *P1:CVERT,KEY20,SP1,CPCDATE,SP1,TRANDESC
          COMPARE   "22",CVERT
          GOTO      ERRLIN99 IF NOT EQUAL
ERRLIN40  KEYIN     *P1:24,*EL,*V2LON,"N",*HOFF,"ext, ":
                               *V2LON,"S",*HOFF,"tart, e":
                               *V2LON,"X",*HOFF,"it : ",*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     "N",ANS
          GOTO      ERRLIN50 IF EQUAL
          MATCH     "X",ANS
          GOTO      ERRLIN60 IF EQUAL
          MATCH     "S",ANS
          GOTO      ERRLIN70 IF EQUAL
          BEEP
          GOTO      ERRLIN40
.
ERRLIN50  MOVE      "5",CVERT
          DISPLAY   *P1:6,*EF
          MOVE      ZERO,ENDFLAG
          GOTO      ERRLIN99
.
ERRLIN60  MOVE      "5",CVERT
          DISPLAY   *P1:6,*EF
          MOVE      ONE,ENDFLAG
          GOTO      ERRLIN99
.
ERRLIN70  MOVE      "5",CVERT
          DISPLAY   *P1:6,*EF
          MOVE      TWO,ENDFLAG
          GOTO      ERRLIN99
.
ERRLIN99  RETURN
.------------------------------------------------------------
. Open Files for Check
.------------------------------------------------------------
OPNFIL00  MOVE     "apsmasaf",KEY8
          STRIP    IBDBDB01
          PACK     KEY50,IBDBDB01,KEY8,SP70
          STRIP    KEY50
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     APSMASA1,KEY50
          TRAPCLR  IO
          BRANCH   OVRCD,OPNFIL90
.
          MOVE     "sinpoaaf",KEY8
          STRIP    IBDBDB01
          PACK     KEY50,IBDBDB01,KEY8,SP70
          STRIP    KEY50
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     SINPOAA2,KEY50
          TRAPCLR  IO
          BRANCH   OVRCD,OPNFIL90
.
          MOVE     ZERO,EXIT
          GOTO     OPNFIL99
.
OPNFIL90  MOVE     "Can't Open Database Tables - ",DISPMSG
          BEEP
          MOVE     "99",ERRCOUNT
          CALL     MESSAGE1
          MOVE     ONE,EXIT
.
OPNFIL99  RETURN
.
CLSFIL00  CLOSE    APSMASA1
          CLOSE    SINPOAA2
CLSFIL99  RETURN
.
.-------------------------------------------------------------
. Update Databases
.-------------------------------------------------------------
UPDT0000  CALL    POST0000
.
          PROC    UPAPS000
.
UPDT9999  RETURN
.----------------------------------------------------------------------
. Procedure to Update Hospital Databases from Corporate System
.----------------------------------------------------------------------
          DEFPROC  UPAPS000
.
          INC      APSMASFD/INC
          INC      APSMXRFD/INC
          INC      SINCUAFD/INC
.
LOCKCNT   FORM     2
.
UPAPS000  PACK     KEY3,SP70
          CALL     RSIBDB1
UPAPS100  CALL     RKIBDB1                * Update Each Database
          BRANCH   OVRCD,UPAPS900
          PACK     KEY8,IBDBDBS,CSCRCRD
          CALL     RDCSCU1                * Check Creditor Requires Update
          BRANCH   OVRCD,UPAPS100
.
          CALL     OPENAP00
          BRANCH   EXIT,UPAPS100
.
          MOVE     CSCRCRD,KEY5
UPAPS140  MOVE     ZERO,LOCKCNT
UPAPS150  CALL     RLAPMA1
          BRANCH   OVRCD,UPAPS300,UPAPS200
          CALL     APSUPD00
          GOTO     UPAPS400
.
UPAPS200  ADD      ONE,LOCKCNT
          COMPARE  TEN,LOCKCNT
          GOTO     UPAPS150 IF NOT EQUAL
          CALL     RECLOC00
          BRANCH   EXIT,UPAPS140,UPAPS100
.
UPAPS300  CALL     APSWRT00               * Write New Masterfile Record
UPAPS400  CALL     UPMXR000               * Update Cross Reference Files
.
          PACK     KEY8,IBDBDBS,CSCRCRD
          CALL     DECSCU1                * Delete Update Record
          CLOSE    APSMASA1
          CLOSE    APSMXRA2
          CLOSE    SINCUAA1
          GOTO     UPAPS100               * Next Database
.
UPAPS900
UPAPS999  GOTO     UPAPSZZZ
.------------------------------------------------------------
. Record Locked in Database
.------------------------------------------------------------
RECLOC00  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked in Database ",IBDBDBS," - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      RECLOC90 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * Exit
          GOTO      RECLOC10 IF EQUAL       * Must be a valid response
          MATCH     ANSE,ANS                * Exit
          GOTO      RECLOC00 IF NOT EQUAL   * Must be a valid response
.
RECLOC10  MOVE      TWO,EXIT
          GOTO      RECLOC99
.
RECLOC90  MOVE      ONE,EXIT
RECLOC99  RETURN
.------------------------------------------------------------
. Open Accounts Payable Creditors Masterfile for Update
.------------------------------------------------------------
OPENAP00  MOVE     "apsmasaf",KEY8
          STRIP    IBDBDB01
          PACK     KEY50,IBDBDB01,KEY8,SP70
          STRIP    KEY50
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     APSMASA1,KEY50
          TRAPCLR  IO
          BRANCH   OVRCD,OPENAP90
.
          MOVE     "apsmxraf",KEY8
          STRIP    IBDBDB01
          PACK     KEY50,IBDBDB01,KEY8,SP70
          STRIP    KEY50
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     APSMXRA2,KEY50
          TRAPCLR  IO
          BRANCH   OVRCD,OPENAP90
.
          MOVE     "sincuaaf",KEY8
          STRIP    IBDBDB01
          PACK     KEY50,IBDBDB01,KEY8,SP70
          STRIP    KEY50
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     SINCUAA1,KEY50
          TRAPCLR  IO
          BRANCH   OVRCD,OPENAP90
          MOVE     ZERO,EXIT
          GOTO     OPENAP99
.
OPENAP90  MOVE     ONE,EXIT
.
OPENAP99  RETURN
.------------------------------------------------------------
. Move in Fields ans Write New Creditor Record
.------------------------------------------------------------
APSWRT00  MOVE      CSCRCRD,APMACRD
          MOVE      CSCRTYP,APMATYP
          MOVE      CSCRSKY,APMASKY
          MOVE      CSCRCN1,APMACN1
          MOVE      CSCRCN2,APMACN2
          MOVE      CSCRCA1,APMACA1
          MOVE      CSCRCA2,APMACA2
          MOVE      CSCRCA3,APMACA3
          MOVE      CSCRCPC,APMACPC
          MOVE      CSCRCTEL,APMACTEL
          MOVE      CSCRCFAX,APMACFAX
          MOVE      CSCRCON,APMACON
.
          MOVE      CSCRCN1,APMASN1
          MOVE      CSCRCN2,APMASN2
          MOVE      CSCRCA1,APMASA1
          MOVE      CSCRCA2,APMASA2
          MOVE      CSCRCA3,APMASA3
          MOVE      CSCRCPC,APMASPC
          MOVE      CSCRCTEL,APMASTEL
          MOVE      CSCRCFAX,APMASFAX
          MOVE      CSCRCON,APMASCON
.
          MOVE      CSCRHOR,APMAHOR
          MOVE      CSCRHIN,APMAHIN
          MOVE      CSCRHCR,APMAHCR
          MOVE      CSCRHPY,APMAHPY
.
          MOVE      SP70,APMACMOD
          MOVE      SP70,APMACEDI
          MOVE      SP70,APMASMOD
          MOVE      SP70,APMASEDI
          MOVE      SP70,APMABSB
          MOVE      SP70,APMABAC
          MOVE      SP70,APMAPNM
          MOVE      ZERO,APMAPPT
          MOVE      ZERO,APMAPOT
          MOVE      ZERO,APMAPMT
          MOVE      ZERO,APMAGMT
          MOVE      SP70,APMAPPD
          MOVE      SP70,APMADTM
          MOVE      SP70,APMAUR1
          MOVE      SP70,APMAUR2
          MOVE      SP70,APMAUD1
          MOVE      SP70,APMAUD2
          MOVE      SP70,APMAUC1
          MOVE      SP70,APMAUC2
          MOVE      ZERO,APMAGREG
          MOVE      ZERO,APMAUY2
          MOVE      ZERO,APMADIS
          MOVE      SP70,APMATSE
          MOVE      SP70,APMASPA
.
          CALL      WRAPMA1
.
          CLEAR     SICUDES1
          APPEND    "New Creditor/Supplier - ",SICUDES1
          APPEND    APMACRD,SICUDES1
          APPEND    SP1,SICUDES1
          APPEND    APMACN1,SICUDES1
          RESET     SICUDES1
          MOVE      SP70,SICUDES2
          MOVE      ONE,SICUTYP
          CALL      SETCU000
.
          RETURN
.------------------------------------------------------------
. Update Masterfile
.------------------------------------------------------------
APSUPD00  ASSIGN    CSCRHOR+CSCRHIN+CSCRHCR+CSCRHPY,F1
          IF        F1<>0
            CLEAR     SICUDES1
            APPEND    "Creditor/Supplier Suspended - ",SICUDES1
            APPEND    APMACRD,SICUDES1
            APPEND    SP1,SICUDES1
            APPEND    APMACN1,SICUDES1
            RESET     SICUDES1
            MOVE      SP70,SICUDES2
            MOVE      EIGHT,SICUTYP
            CALL      SETCU000
          ENDIF
          MATCH     CSCRCN1,APMACN1
          GOTO      APSUPD10 IF NOT EQUAL
          MATCH     CSCRCN2,APMACN2
          GOTO      APSUPD20 IF EQUAL
APSUPD10  CLEAR     SICUDES1
          APPEND    "Creditor Name Changed ",SICUDES1
          RESET     SICUDES1
          PACK      SICUDES2,APMACN1,APMACN2
          MOVE      "16",SICUTYP
          CALL      SETCU000
.
APSUPD20  MATCH     CSCRCN1,APMASN1
          GOTO      APSUPD30 IF NOT EQUAL
          MATCH     CSCRCN2,APMASN2
          GOTO      APSUPD40 IF EQUAL
APSUPD30  CLEAR     SICUDES1
          APPEND    "Supplier Name Changed ",SICUDES1
          RESET     SICUDES1
          PACK      SICUDES2,APMASN1,APMASN2
          MOVE      "17",SICUTYP
          CALL      SETCU000
.
APSUPD40  MOVE      CSCRCN1,APMACN1
          MOVE      CSCRCN2,APMACN2
          MOVE      CSCRCN1,APMASN1
          MOVE      CSCRCN2,APMASN2
          MOVE      CSCRHOR,APMAHOR
          MOVE      CSCRHIN,APMAHIN
          MOVE      CSCRHCR,APMAHCR
          MOVE      CSCRHPY,APMAHPY
          CALL      UPAPMA1             * Update Masterfile
          RETURN
.------------------------------------------------------------
. Setup & Write Audit
.------------------------------------------------------------
SETCU000  PACK      SICUDAT,CCC,CYY,CMM,CDD
          REP       " 0",SICUDAT
          CLOCK     TIME,SICUTIM
          MOVE      "1",F2
.
SETCU100  MOVE      F2,SICUUNI
          PACK      KEY18,SICUDAT,SICUTIM,SICUUNI
          CALL      RASICU1
          BRANCH    OVRCD,SETCU200
          ADD       ONE,F2
          GOTO      SETCU100
.
SETCU200  MOVE      CSCRCRD,SICUSUP
          MOVE      SP70,SICUCAT
          MOVE      SP70,SICUSUT
          MOVE      SP70,SICUSPA
          CALL      WRSICU1
.
SETCU999  RETURN
.------------------------------------------------------------
. Update Cross Reference Table
.------------------------------------------------------------
UPMXR000  PACK     KEY35,APMACRD,SP70
          CALL     RSAPMX2
UPMXR100  CALL     RKAPMX2
          BRANCH   OVRCD,UPMXR200
          MATCH    APMXCRD,APMACRD
          GOTO     UPMXR200 IF NOT EQUAL
          MATCH    "1",APMXTYP
          IF       @EQUAL
            PACK     KEY35,APMXCRD,APMXREF
            CALL     DEAPMX2
          ENDIF
          MATCH    "2",APMXTYP
          IF       @EQUAL
            PACK     KEY35,APMXCRD,APMXREF
            CALL     DEAPMX2
          ENDIF
          GOTO     UPMXR100
.
UPMXR200  MOVE     APMACRD,APMXCRD
          MOVE     APMACN1,APMXREF
          MOVE     ONE,APMXTYP
          MOVE     SP70,APMXSPA
          PACK     KEY35,APMXCRD,APMXREF
          MATCH    SP70,APMXREF
          GOTO     UPMXR300 IF EQUAL
          CALL     RAAPMX2
          IF       OVRCD=1
            CALL     WRAPMX2
          ENDIF
.
UPMXR300  MOVE     APMACRD,APMXCRD
          MOVE     APMASN1,APMXREF
          MOVE     TWO,APMXTYP
          MOVE     SP70,APMXSPA
          PACK     KEY35,APMXCRD,APMXREF
          MATCH    SP70,APMXREF
          GOTO     UPMXR999 IF EQUAL
          CALL     RAAPMX2
          IF       OVRCD=1
            CALL     WRAPMX2
          ENDIF
.
UPMXR999  RETURN
.
          INC      APSMASIO/INC
          INC      APSMXRIO/INC
          INC      SINCUAIO/INC
          INC      IBAOVRIO/INC
.
UPAPSZZZ  ENDPROC
.
.-------------------------------------------------------------
. File : /users/bga/std/auditkey
.
. Audit & Locking Standard Routine to Enter Key Field
.
. where   xx = Key Length
.         ss = System 2 Character Code
.         ff = File 2 Character Code
.       yyyy = Key Field IDs
.-------------------------------------------------------------
EKEYF000  MOVE      TWO,CKEYTYP             * Record Does not have to be on file
.                                           * This allows add and change.
          CALL      KCSCRA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,EKEYF999,EKEYF999  * Exit 1 Null Entry 2 Exitchar
          COMPARE   ONE,OVRCD               * New Record so no Lock
          GOTO      EKEYF999 IF EQUAL       * Return
.
EKEYF100  PACK      KEY5,CSCRCRD,SP70       * Setup Key to File
          CALL      RLCSCR1                 * Read and Lock Record
          BRANCH    OVRCD,EKEYF999,EKEYF200 * OVRCD=1 Not on File 2 Locked
          MOVE      TWO,AUDTTYPE            * Type 2 Before Change Audit
          CALL      WACSCR00                * Write Before Audit
.
          MOVE      CSCRTYP,KEY3
          CALL      RDAPCT1
.
          MOVE      ZERO,EXIT               * Setup Exit Field
          MOVE      ZERO,OVRCD              * Setup Ovrcd Field
          GOTO      EKEYF999
.
EKEYF200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EKEYF100 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * Exit
          GOTO      EKEYF000 IF EQUAL       * Must be a valid response
          MATCH     ANSE,ANS                * Exit
          GOTO      EKEYF200 IF NOT EQUAL   * Must be a valid response
          GOTO      EKEYF000                * Return to Keyin
.
EKEYF999  RETURN                            * End of Routine
.
.----------------------------------------------------------------------
. Sort Key Keyin Default to Creditor Name if Blank
.----------------------------------------------------------------------
KAPSKA00   MATCH    SP70,CSCRSKY
           IF       @EQUAL
             MOVE     CSCRCN1,CSCRSKY
           ENDIF
           KEYIN    *PCCOL:CVERT,*V2LON,*RV,CSCRSKY
           RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCTSIO/INC
          INC       APSCTSKY    
          INC       APSMASIO/INC
          INC       CSMCREIO/INC
          INC       CSMCREKY    
          INC       CSMCUCIO/INC
          INC       CSMSKYIO/INC
          INC       IBADBSIO/INC
          INC       SINPOAIO/INC
.
          INC       STDGENCD
.
