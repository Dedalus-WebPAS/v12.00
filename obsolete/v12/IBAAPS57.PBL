.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.03.01  30.09.2003 Mike Laming  CAR 43750
.           Add "second Account" facility to Extract Data routine EXTRA200
.-------------------------------------------------------
. V9.02.01  27.03.2003 Davin Sloan CAR 18326
.           Changes to proposed payments (new parameter added)
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.01  12.04.2000 Sandra Barcham
.           Add in Pay as you go payments
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.01  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS57
.   Function      :   Create Proposed Payments                
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSAPYDF    
          INC       APSAPYFD/INC
          INC       APSBMFFD/INC
          INC       APSCAFFD/INC
          INC       APSCTSFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSPPDFD/INC
          INC       APSTMPDF    
          INC       FMSCAFFD/INC
          INC       FMSCHQFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSLMAFD/INC
.=========================
.Local Variable Definition
.-------------------------
TYPEFROM  DIM       3 * Scr 01 Fld     4
TYPETO    DIM       3 * Scr 01 Fld     5
TERMFROM  DIM       2 * Scr 01 Fld     8
TERMTO    DIM       2 * Scr 01 Fld     9
CHEQACCT  DIM      15 * Scr 01 Fld    15
CREDFROM  DIM       5 * Scr 01 Fld    17
CREDTO    DIM       5 * Scr 01 Fld    18
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS57"
PRGNAM    INIT      "Create Proposed Payments                "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      OPEN0000
          CALL      SC01L000
          CALL      CLOSAPAP
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsctsaf";
          OPEN      APSCTSA1,"apsctsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsppdaf";
          OPEN      APSPPDA1,"apsppdaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscafaf";
          OPEN      FMSCAFA1,"fmscafaf"
          DISPLAY   *P56:24,"Opening fmscafaf";
          OPEN      FMSCAFA2,"fmscafaf"
          DISPLAY   *P56:24,"Opening fmschqaf";
          OPEN      FMSCHQA1,"fmschqaf"
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Process All                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Process All                        
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
          CALL      INMODE00
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Process All                        
.-------------------------------------------------------
CF01L000  COMPARE   ZERO,ACCEPT
              GOTO      CF01L999 IF EQUAL
          MOVE      SP70,TYPEFROM
          MOVE      SP70,TYPETO  
          MOVE      SP70,CPCDATE 
          MOVE      SP70,CPCDATE 
          MOVE      SP70,TERMFROM
          MOVE      SP70,TERMTO  
          MOVE      SP70,APCTDESC
          MOVE      SP70,APCTDESC
          MOVE      SP70,APPPDES 
          MOVE      SP70,APPPDES 
          MOVE      SP70,CHEQACCT
          MOVE      SP70,CREDFROM
          MOVE      SP70,CREDTO  
          MOVE      SP70,FMCHDES 
          MOVE      SP70,APMACN1 
          MOVE      SP70,APMACN1 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Process All                        
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Process All                        
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Process All                        
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Process All                        
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Process All                        
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L101:
                            PS01L102,PS01L103,PS01L104,PS01L105:
                            PS01L106,PS01L999,PS01L107,PS01L108:
                            PS01L109,PS01L110,PS01L111,PS01L999:
                           PS01L112,PS01L113,PS01L114,PS01L115:
                            PS01L116
          GOTO     PS01L999
.
PS01L101
          MOVE      TYPEFROM,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      TYPETO,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      TERMFROM,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      TERMTO,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      APCTDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      APCTDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      APPPDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      APPPDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      CHEQACCT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      CREDTO,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      FMCHDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Process All                        
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L104,SF01L105,SF01L106,SF01L107:
                            SF01L108,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L109,SF01L006:
                           SF01L110,SF01L111,SF01L006,SF01L006:
                            SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L103:
                            SF01L104,SF01L105,SF01L106,SF01L107:
                            SF01L108,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L109,SF01L020:
                           SF01L110,SF01L111,SF01L020,SF01L020:
                            SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      LOOPA000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L103
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APCTDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      SETFROM 
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPCTA00
          MOVE      APCTCODE,TYPEFROM
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          CALL      CAPCTDES
          MOVE      TYPEFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APCTDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L104
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APCTDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      CLRFROM 
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPCTA00
          MOVE      APCTCODE,TYPETO
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          CALL      CAPCTDES
          MOVE      TYPETO,VAR       
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APCTDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L105
          CALL      SETFROM 
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      DATF0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
          CALL      CLRFROM 
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      DATT0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L107
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APPPDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      SETFROM 
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPPPA00
          MOVE      APPPTER,TERMFROM
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          CALL      CAPPPDES
          MOVE      TERMFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APPPDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L108
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APPPDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      CLRFROM 
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPPPA00
          MOVE      APPPTER,TERMTO
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
            BRANCH    EXIT,SF01L108,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          CALL      CAPPPDES
          MOVE      TERMTO,VAR       
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APPPDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L109
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCHDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMCHA00
          MOVE      FMCHCHQ,CHEQACCT
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L109
            ENDIF
            BRANCH    EXIT,SF01L109,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CHEQACCT,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCHDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L110
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      SETFROM 
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPMAA00
          MOVE      APMACRD,CREDFROM
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L110
            ENDIF
            BRANCH    EXIT,SF01L110,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          CALL      CAPMACN1
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   20",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN1,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L111
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      CLRFROM 
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KAPMAA00
          MOVE      APMACRD,CREDTO
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L111
            ENDIF
            BRANCH    EXIT,SF01L111,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          CALL      CAPMACN1
          MOVE      CREDTO,VAR       
          CALL      DISPITEM
.
.
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN1,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.@@@@@ Function Restart Point @@@@@
.**********************************************************************
. Open Payments File - Exit program if already exists or cant create
.**********************************************************************
OPEN0000  READ      CONTROLF,SIXTY6;*92,FMCOUBPP
          PACK      KEY5,SP70          * loop through all batches to see if
          CALL      RSAPBM1            * any are awaiting
.
OPEN0100  CALL      RKAPBM1
          BRANCH    OVRCD,OPEN0500
          REP       " 0",APBMUDT
          MATCH     "00000000",APBMUDT
          GOTO      OPEN3000 IF EQUAL  * not updated ?
          GOTO      OPEN0100
.
.
OPEN0500  MOVE      ZERO,TOTEXTRA
.
          CALL      MAKAP000           * create file if possible
          BRANCH    EXIT,OPEN1000,OPEN2000
          GOTO      OPEN9999
.
.---- proposed payments already exist ----
.
OPEN1000
          MOVE      "ERROR - Payments File Already Exists - ",DISPMSG
          CALL      MESSAGE1
.
          MATCH     "1426",PASSCODE    * sneaky delete of payments file
          GOTO      OPEN9000 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      OPEN9000 IF NOT EQUAL
.
          CALL      DELAP000           * delete file if possible
          GOTO      OPEN0000
.
.---- proposed payments already cant be created ----
.
OPEN2000
          MOVE      "ERROR - Cannot Create Payments File - ",DISPMSG
          CALL      MESSAGE1
          GOTO      OPEN9000
.
.---- batches awaiting update ----
.
OPEN3000  MATCH     "1",FMCOUBPP
          GOTO      OPEN4000 IF EQUAL       * 0 = ask continue Y/N question
.
          MOVE      "ERROR - Batches Awaiting Update - ",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,OPEN9000
          GOTO      OPEN0500
.
OPEN4000  MOVE      "ERROR - Batches Awaiting Update - ",DISPMSG
          CALL      MESSAGE1
.
          MATCH     "1426",PASSCODE    * sneaky skip of batches awaiting update
          GOTO      OPEN9000 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      OPEN9000 IF NOT EQUAL
          GOTO      OPEN0500
.
OPEN9000
          CLOCK      FORK,KEY2         * exit program
          MATCH      " 0",KEY2
          IF         @EQUAL
            CHAIN       PGM
          ELSE
            STOP
          ENDIF
.
OPEN9999  RETURN
.
.**********************************************************************
. Close Payments File - delete file if empty
.**********************************************************************
CLOSAPAP
          CALL      CHKAP000           * check if file exists
          BRANCH    OVRCD,CLOS9999
.
          PACK      KEY52,SP70
          CALL      RSAPAP1            * check if file empty
          CALL      RKAPAP1
.
          IF        1=OVRCD
            CALL      DELAP000         * delete file
          ENDIF
.
CLOS9999  RETURN
.
.----------------------------------------------------------------------
. Set Insert Mode
.----------------------------------------------------------------------
INMODE00
          MOVE      ONE,ACCEPT
          RETURN
.**********************************************************************
. Set From Flag
.**********************************************************************
SETFROM
          MOVE      ONE,FROMFLAG
          RETURN
.----------------------------------------------------------------------
. Clear Cred Type Desc
.----------------------------------------------------------------------
CAPCTDES
          MOVE      SP70,APCTDESC
          PACK      KEY3,APCTCODE,SP70
          CALL      RDAPCT1
          IF        FROMFLAG=1
            LOAD      APCTDESC,OVRCD,START
          ELSE
            LOAD      APCTDESC,OVRCD,END
          ENDIF
          RETURN
.**********************************************************************
. Clear From Flag
.**********************************************************************
CLRFROM
          MOVE      ZERO,FROMFLAG
          RETURN
.----------------------------------------------------------------------
. Clear Term Code Desc
.----------------------------------------------------------------------
CAPPPDES
          MOVE      SP70,APPPDES
          PACK      KEY2,APPPTER,SP70
          CALL      RDAPPP1
          IF        FROMFLAG=1
            LOAD      APPPDES,OVRCD,START
          ELSE
            LOAD      APPPDES,OVRCD,END
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Clear Cred Name
.----------------------------------------------------------------------
CAPMACN1
          MOVE      SP70,APMACN1
          PACK      KEY5,APMACRD,SP70
          CALL      RDAPMA1
          IF        FROMFLAG=1
            LOAD      APMACN1,OVRCD,START
          ELSE
            LOAD      APMACN1,OVRCD,END
          ENDIF
          RETURN
.**********************************************************************
. Loop for screen 1
.         Returns EXIT - 0=exit, 1=continue
.**********************************************************************
LOOPA000  MATCH     CREDTO,SP70        * check ranges
          IF        !@EQUAL
            MATCH     CREDFROM,CREDTO
            GOTO      LOOPA941 IF LESS
          ENDIF
          MATCH     TYPETO,SP70
          IF        !@EQUAL
            MATCH     TYPEFROM,TYPETO
            GOTO      LOOPA942 IF LESS
          ENDIF
          MATCH     DATETO,SP70
          IF        !@EQUAL
            MATCH     DATEFROM,DATETO
            GOTO      LOOPA943 IF LESS
          ENDIF
          MATCH     TERMTO,SP70
          IF        !@EQUAL
            MATCH     TERMFROM,TERMTO
            GOTO      LOOPA944 IF LESS
          ENDIF
.
          CALL      WPAR0000
.
          MOVE      SP70,CURRREF
          MOVE      SP70,CURRCRD
          MOVE      ONE,CURROUT
          MOVE      ZERO,SECTOR
          DISPLAY   *P1:24,*EL,"Extracting : "
          PACK      KEY41,CURROUT,CREDFROM,SP70
          CALL      RSAPIM6
.
LOOPA100  CALL      RKAPIM6            * loop through inv/credit header file
          BRANCH    OVRCD,LOOPA900
.
          MATCH     CURROUT,APIMOUT
          GOTO      LOOPA900 IF NOT EQUAL   * check if outstanding
.
          MOVE      APIMREF,CURRREF         * set up current cred/invoice
          MOVE      APIMCRD,CURRCRD
          MOVE      APIMOUT,CURROUT
.
          MATCH     CREDTO,SP70             * check creditor range
          IF        !@EQUAL
            MATCH     CURRCRD,CREDTO
            GOTO      LOOPA900 IF LESS
          ENDIF
.
          MATCH     DATEFROM,APIMPDT
          GOTO      LOOPA100 IF LESS   * check date range
          MATCH     DATETO,SP70
          IF        !@EQUAL
            MATCH     APIMPDT,DATETO
            GOTO      LOOPA100 IF LESS
          ENDIF
.
          MATCH     TERMFROM,APIMTER
          GOTO      LOOPA100 IF LESS   * check term range
          MATCH     TERMTO,SP70
          IF        !@EQUAL
            MATCH     APIMTER,TERMTO
            GOTO      LOOPA100 IF LESS
          ENDIF
.
          PACK      KEY5,CURRCRD,SP70
          CALL      RDAPMA1
          BRANCH    OVRCD,LOOPA100     * creditor exists ?
.
          BRANCH    APMAHPY,LOOPA100   * hold payments ?
.
          MATCH     TYPEFROM,APMATYP
          GOTO      LOOPA100 IF LESS   * check creditor type range
          MATCH     TYPETO,SP70
          IF        !@EQUAL
            MATCH     APMATYP,TYPETO
            GOTO      LOOPA100 IF LESS
          ENDIF
.
          ADD       ONE,SECTOR
          IF        (SECTOR%50=0)
            DISPLAY   *P14:24,*EL,SECTOR,"/",CURRCRD,"/",CURRREF
          ENDIF
.
          CALL      EXTRA000           * extract data
.
          PACK      KEY41,CURROUT,CURRCRD,CURRREF,Z70
          CALL      RSAPIM6            * go to next invoice
          GOTO      LOOPA100
.
LOOPA900  CALL      CONS0000           * delete zero records
.
          MOVE      ZERO,EXIT
          BEEP
          CLEAR     DISPMSG
          APPEND    TOTEXTRA,DISPMSG
          APPEND    " items extracted - ",DISPMSG
          CALL      MESSAGE1
          GOTO      LOOPA999
.
LOOPA941  MOVE      "Illegal Creditor Code Range - ",DISPMSG
          CALL      MESSAGE1
          GOTO      LOOPA950
.
LOOPA942  MOVE      "Illegal Creditor Type Range - ",DISPMSG
          CALL      MESSAGE1
          GOTO      LOOPA950
.
LOOPA943  MOVE      "Illegal Payable Date Range - ",DISPMSG
          CALL      MESSAGE1
          GOTO      LOOPA950
.
LOOPA944  MOVE      "Illegal Term Code Range - ",DISPMSG
          CALL      MESSAGE1
          GOTO      LOOPA950
.
LOOPA950  MOVE      ONE,EXIT
.
LOOPA999  RETURN
.----------------------------------------------------------------------
. Write Selection Parameters
.----------------------------------------------------------------------
WPAR0000  MATCH     CREDFROM,SP70
          IF        @EQUAL
            MOVE      "Start          ",CREDF
          ELSE
            PACK      CREDF,CREDFROM,SP70
          ENDIF
          MATCH     CREDTO,SP70
          IF        @EQUAL
            MOVE      "End            ",CREDT
          ELSE
            PACK      CREDT,CREDTO,SP70
          ENDIF
.
          MATCH     TERMFROM,SP70
          IF        @EQUAL
            MOVE      "Start          ",TERMF
          ELSE
            PACK      TERMF,TERMFROM,SP70
          ENDIF
          MATCH     TERMTO,SP70
          IF        @EQUAL
            MOVE      "End            ",TERMT
          ELSE
            PACK      TERMT,TERMTO,SP70
          ENDIF
.
          MATCH     DATEFROM,SP70
          IF        @EQUAL
            MOVE      "Start          ",DATEF
          ELSE
            PACK      DATEF,DATEFROM,SP70
          ENDIF
          MATCH     DATETO,SP70
          IF        @EQUAL
            MOVE      "End            ",DATET
          ELSE
            PACK      DATET,DATETO,SP70
          ENDIF
.
          MATCH     TYPEFROM,SP70
          IF        @EQUAL
            MOVE      "Start          ",TYPEF
          ELSE
            PACK      TYPEF,TYPEFROM,SP70
          ENDIF
          MATCH     TYPETO,SP70
          IF        @EQUAL
            MOVE      "End            ",TYPET
          ELSE
            PACK      TYPET,TYPETO,SP70
          ENDIF
.
          CLOSE     APSPYDAF
          PREP      APSPYDAF,"apspydaf"
          WRITE     APSPYDAF,SEQ;CREDF,CREDT,TYPEF,TYPET:
                                 DATEF,DATET,TERMF,TERMT,SP70
          CLOSE     APSPYDAF
.
WPAR9999  RETURN
.----------------------------------------------------------------------
. Extract data
.         Requires - APSMASAF read for creditor
.                    APSIMFAF read for batch/cred/inv/doc
.                    CHEQACCT cheque account
.----------------------------------------------------------------------
EXTRA000  MOVE      ZERO,TOTAL               * clear running total
          MOVE      ZERO,CHEQFLAG            * clear cheque acc flag
.
          PACK      KEY40,CURRCRD,CURRREF,SP70
          PACK      KEY20,CURRCRD,CURRREF,SP70
          CALL      RSAPIM3
.
.---- APSIMSAF loop ----
.
EXTRA100  CALL      RKAPIM3
          BRANCH    OVRCD,EXTRA900
          PACK      KEY40,APIMCRD,APIMREF,APIMDOC,APIMBCH,SP70
          MATCH     KEY20,KEY40
          GOTO      EXTRA900 IF NOT EQUAL
.
          MATCH     "0",APIMUPD        * check if data updated
          GOTO      EXTRA800 IF EQUAL
.
          MOVE      APIMTYP,F1
          IF        3=F1
            GOTO      EXTRA100
          ENDIF
.
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RSAPIN1
.
.---- APSINPAF loop ----
.
EXTRA200  CALL      RKAPIN1
          BRANCH    OVRCD,EXTRA100
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH     KEY51,KEY40
          GOTO      EXTRA100 IF NOT EQUAL
.
          IF        (APINAMT+APINGST) = APINPAY
            GOTO      EXTRA200         * Full Payment already made
          ENDIF
.
          PACK      KEY2,APINLED,SP70  * get default control acct
          CALL      RDFMLA1
          BRANCH    OVRCD,EXTRA200
.
          UNPACK    SP70,FMCSBNK,FMCSCRD,FMCSDIS,FMCSDEB
          PACK      KEY14,APINLED,APINACC,SP70
          CALL      RDFMCS1            * get selected control acct (if pos)
          MATCH     SP70,FMCSBNK
          IF        !@EQUAL
            MOVE      FMCSBNK,FMLABNK
          ENDIF
.
          PACK      KEY14,APINLED,FMLABNK,SP70
          CALL      RDFMCA1
          BRANCH    OVRCD,EXTRA200
          COMPARE   "1",FMCATYP        * check this is a bank control acct
          GOTO      EXTRA200 IF NOT EQUAL
.
          MATCH     FMCACHQ,CHEQACCT   * check correct cheq acct
          IF        !@EQUAL
            MOVE      ONE,CHEQFLAG          * set different cheque acc flag
            PACK      KEY14,APINLED,FMLABNK2,SP70                      *I-90301
            CALL      RDFMCA1                                          *I-90301
            BRANCH    OVRCD,EXTRA200                                   *I-90301
            MATCH     FMCACHQ,CHEQACCT                                 *I-90301
            GOTO      EXTRA200 IF NOT EQUAL                            *C-90301
          ENDIF
.
          MATCH     "0",APINUPD        * check if data updated
          GOTO      EXTRA800 IF EQUAL
.
          MOVE      APINAMT,APAPPAY
          MOVE      APINPAYG,APAPPAYG
          SUB       APINPAY,APAPPAY    * srf 614720
          MOVE      APINGST,APAPGST
          PACK      APAPCHQ,CHEQACCT,SP70
          PACK      APAPDAT,CCC,CYY,CMM,CDD
          REP       " 0",APAPDAT
          MOVE      SP70,APAPPYD
          MOVE      SP70,APAPPYC
          MOVE      SP70,APAPPYB
.
          MOVE      APIMTYP,SKEY1
          MOVE      SKEY1,F1           * 0=inv, 1=crd, 2=pay, 3=cc, 4=ri
          IF        1=F1
            MULT      SEQ,APAPPAY
            MULT      SEQ,APAPGST
          ENDIF
.
          IF        2=F1
            MULT      SEQ,APAPPAY
            MULT      SEQ,APAPGST
            UNPACK    APINDES,APINBCH,APINDOC,APINORD,APINLIN,SKEY1
          ENDIF
.
          IF        4=F1
            UNPACK    APINDES,APINBCH,APINDOC,APINORD,APINLIN,SKEY1
          ENDIF
.
          ASSIGN    APAPPAY+APAPGST,APAPTPY * calc total amount to pay
          PACK      KEY52,APINCRD,APINREF,SKEY1,APINDOC:
                          APINORD,APINLIN,APINBCH,SP70
          UNPACK    KEY52,APAPCRD,APAPREF,APAPTYP,APAPDOC:
                          APAPORD,APAPLIN,APAPBCH
.
          MOVE      "1",APPPPIN
          MOVE      "COL",APPPMDI
          PACK      KEY2,APIMTER,SP70
          CALL      RDAPPP1
          PACK      APAPPIN,APPPPIN,SP70
          PACK      APAPMDI,APPPMDI,SP70
.
          PACK      APAPDUE,APIMPDT,SP70
          PACK      APAPDOF,SP70
.
          PACK      APAPSKY,APMASKY         * Store the Sort Key
          PACK      APAPGMT,APMAGMT         * Store the Payment Method
          MOVE      "1",APAPPOR             * Default to Creditor Code Order
.
          CALL      RAAPAP1                 * check if already be there !!
          IF        OVRCD=0
            MOVE      APAPPAY,TEMPAMT
            MOVE      APAPGST,TEMPGST
            ASSIGN    APAPPAY+APAPGST+TOTAL,TOTAL
.
            CALL      RDAPAP1
            ADD       TEMPAMT,APAPPAY
            ADD       TEMPGST,APAPGST
            ASSIGN    APAPPAY+APAPGST,APAPTPY
            CALL      UPAPAP1
          ELSE
            ADD       ONE,TOTEXTRA          * add to total items extracted
            ADD       APAPPAY,TOTAL
            ADD       APAPGST,TOTAL
            CALL      WRAPAP1
          ENDIF
.
          GOTO      EXTRA200
.
.---- transactions for this invoice have not been updated, so skip it ----
.
EXTRA800  CALL      DTRN0000           * delete transaction records
          GOTO      EXTRA999
EXTRA900
EXTRA999  RETURN
.**********************************************************************
.  CONS - Delete zero transactions                 Called By lots
.**********************************************************************
CONS0000  PACK      KEY52,SP70
CONS1000  CALL      RSAPAP1
          CALL      RKAPAP1
          BRANCH    OVRCD,CONS9000
          PACK      KEY52,APAPCRD,APAPREF,APAPTYP,APAPDOC:
                          APAPORD,APAPLIN,APAPBCH,SP70
          IF        APAPTPY=0
            SUB       ONE,TOTEXTRA          * sub from total items extracted
            CALL      DEAPAP1
          ENDIF
          GOTO      CONS1000
CONS9000
CONS9999  RETURN
.**********************************************************************
.  DTRN - Delete unwanted transactions                 Called By lots
.         Requires - CURRCRD, CURRREF (current cred and invoice)
.**********************************************************************
DTRN0000  PACK      KEY52,CURRCRD,CURRREF,SP70
          PACK      KEY20,CURRCRD,CURRREF,SP70
DTRN1000  CALL      RSAPAP1
          CALL      RKAPAP1
          BRANCH    OVRCD,DTRN9000
          PACK      KEY52,APAPCRD,APAPREF,APAPTYP,APAPDOC:
                          APAPORD,APAPLIN,APAPBCH,SP70
          MATCH     KEY20,KEY52
          GOTO      DTRN9000 IF NOT EQUAL
          SUB       ONE,TOTEXTRA          * sub from total items extracted
          CALL      DEAPAP1
          GOTO      DTRN1000
DTRN9000
DTRN9999  RETURN
.----------------------------------------------------------------------
. Keyin Date From
.----------------------------------------------------------------------
DATF0000
          UNPACK    SP70,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          MATCH     SP70,CDAY
          IF        @EQUAL
            MOVE      SP70,DATEFROM
            PACK      CPCDATE,START,SP70
          ELSE
            PACK      DATEFROM,CCENT,CYEAR,CMON,CDAY,SP70
            CALL      PACDATE
          ENDIF
.
DATF9999  RETURN
.----------------------------------------------------------------------
. Keyin Date To
.----------------------------------------------------------------------
DATT0000
          UNPACK    SP70,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          MATCH     SP70,CDAY
          IF        @EQUAL
            MOVE      SP70,DATETO
            PACK      CPCDATE,END,SP70
          ELSE
            PACK      DATETO,CCENT,CYEAR,CMON,CDAY,SP70
            CALL      PACDATE
          ENDIF
.
DATT9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSAPYCD    
          INC       APSAPYIO/INC
          INC       APSBMFIO/INC
          INC       APSCAFIO/INC
          INC       APSCKIKY    
          INC       APSCTSIO/INC
          INC       APSCTSKY    
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       APSPPDIO/INC
          INC       APSPPDKY    
          INC       FMSCAFIO/INC
          INC       FMSCHQIO/INC
          INC       FMSCHQKY    
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSLMAIO/INC
.
          INC       STDGENCD
.
