. ********************************************************************** 
. * System    :   Accounting System                                    *
. * Program   :   IBAAPS71                                             *
. * Desc      :   Debtors Cash Receipts                                *
. **********************************************************************
. * Date      :                                                        *
. * Author    :                                                        *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.01.01  31.07.2000 Charles Handaya                               *
. *           Fix Accouting Period Date displayed on the screen        *
. *           srf 4505                                                 *
. **********************************************************************
. * VF.00.02  05.01.2000 Charles Handaya                               *
. *           Recompiled for APSMASIO change                           *
. * VF.00.01  30.07.1999 Sandra Barcham                                *
. *           Read FMCORDIS from correct position                      *
. * VF.00.00  01.03.1999 Sandra Barcham                                *
. *           Ensure batch numbers have no spaces                      *
. **********************************************************************
+
          INC       STDGENDF
.
          INC       IBABATFD/INC                    * BATCH TRANSACTION FILE
.
          INC       APSSTDDF           * vars for keyins
          INC       APSMASFD/INC       * Creditor master
          INC       FMSAMAFD/INC       * account master
          INC       FMSBCFFD/INC       * control file
          INC       FMSCONFD/INC       * control file
          INC       FMSCAFFD/INC       * account master
          INC       FMSCSAFD/INC       * account master
          INC       FMSDISFD/INC       * dissection
          INC       FMSLMAFD/INC       * ledger master
          INC       FMSRESFD/INC       * responsibility
          INC       FMSTDSFD/INC       * transaction description
.
SAVETYPE  DIM       2
MTDAY     DIM       2
MTMTH     DIM       2
MTYEAR    DIM       2
MTCCC     DIM       2
.                                        * V6.28 Next Field Changed to DIM
ZENDFLAG  FORM      1
DOLLARS   FORM      10.2
.
ACCFLAG   FORM      1
ACHECK    DIM       3                           * ALPHA CHECK FROM FILE
AKEY5     DIM       3                           * ALPHA CHECK KEYED IN
ADDITION  FORM      1                           0 = NEW BATCH 1 = OLD BATCH
AFLAG     INIT      "Z"                         * UNBALANCED AMOUNT
.
BCAMTA    DIM       11
BATLEDG   DIM       2
BFILE     DIM       8                           * BATCH FILE NAME
BNKACCT   DIM       12                          * DEFAULT BANK ACCOUNT
.
CBCONT    DIM       12                          * CASH AT BANK CONTROL A/C
CCF       DIM       2
CREDFLG   DIM       1                           * CRED ENTERED & BATCH NO
.
DASH1     INIT      "_"
DASH2     INIT      "__"
DASH3     INIT      "___"
DASH5     INIT      "_____"
DASH8     INIT      "________"
DASH11    INIT      "___________"
DASH15    INIT      "_______________"
DASH35    INIT      "___________________________________"
DATE1     DIM       8
DATE2     DIM       8
DATEF1    FORM      8
DATEF2    FORM      8
DAYCMP    FORM      2
DDF       DIM       2
DESCFLG   DIM       1
....DIM2      DIM       2
DIM2A     DIM       2
DIM2RED   DIM       2
....DIM5      DIM       5
....DIM9      DIM       9
....DIM14     DIM       14
DISCFLG   DIM       1
DISFLG    DIM       1                           * DIS ENTERED & HASH OF AMTS
DTEFLG    DIM       1                           * DATE ENTERED
.
ENDFLAG   DIM       1
ERRFLAG   DIM       1                           * INVALID PASSWORD
.
F8P2      FORM      8.2
F8P2A     FORM      8.2
FILENAME  DIM       8
FLAG      FORM      1
FLEFLAG   DIM       1                           * USED TO CHECK DUP BATCH
FNA       DIM       5                           * ENTRY OPTION
FORM5     FORM      5
.
GRTOTFLG  DIM       1
.
HACC      DIM       12
HAMT      DIM       11
HCRCOD    DIM       5
HDATE     DIM       8                           * HOLDS DATE
HDESC     DIM       35
HDISS     DIM       5
HDTOT     DIM       11                          *Holds Discount value.
HGTOT     DIM       13
HLEDG     DIM       2
HNAREC    FORM      5
HORD      DIM       8
HPP       DIM       2
HREF      DIM       15
HWORK     DIM       4
.
IBDAY     FORM      2                           * BATCH DATE - DAY
IBMTH     FORM      2                           *            - MONTH (POST)
IBYRR     FORM      2                           *            - YEAR
IBCCC     FORM      2                           *            - YEAR
.
LASUSP    DIM       1
LCODEFLG  DIM       1                           * ACCOUNT CODE ENTERED
LEDGERNM  DIM       35
LEDGFLG   DIM       1                           * LEDGER ENTERED
LPFLAG    DIM       1                           * RET TO LPO ON SPLITS
LPOFLG    DIM       1                           * LPO ENTERED
LYEAR     FORM      4
.
MLRECFLG  DIM       1
MMF       DIM       2
MULFLG    DIM       1
.
NFLAG     DIM       1                           * UNBALANCED DOCUMENTS
.
ONEX      INIT      "1"
OPMS2FLG  FORM      1
.
PASSWORD  DIM       8
PAYFLG    DIM       1
POSTF     FORM      6
PYFLG     FORM      1
.
QP        DIM       1                           * QUICK PAYMENT IND.
QPN       DIM       1
.
REFFLG    DIM       1                           * REF ENTERED & OPERATOR ID
RESFLG    FORM      1
.
SAVECRED  DIM       5
SAVREC    FORM      1
SAVSEC    FORM      4
SAVBCAMT  FORM      8.2
SAVTRCDE  DIM       5
SAVTRCOD  DIM       12
SECT      FORM      4                           * SECTOR ADDRESS
SP11      INIT      "           "
SP37      INIT      "                                     "
SPLTOT    FORM      8.2
.
T         INIT      "T"
THIRTEEN  FORM      "13"
TRCONST1  DIM       10
TRCONSTA  DIM       12
TRCONSTB  DIM       16
TRCONSTC  DIM       12
TRCONSTD  DIM       12
TRCONSTE  DIM       12
TRCONSTF  DIM       12
TRCONSTG  DIM       10
TRCONSTH  DIM       10
TRCONSTI  DIM       12
TWELVE    FORM      "12"
TMPAMT    FORM      8.2
.
VDD       FORM      2                           * VALIDATE DATE
VMM       FORM      2                           * VALIDATE MONTH
VCC       FORM      2                           * VALIDATE YEAR
VYY       FORM      2                           * VALIDATE YEAR
.
WF8P2     FORM      8.2                         *Temp. work variable.
WRKFLG    DIM       1
.
X1        FORM      "31"
X2        FORM      "28"
X3        FORM      "31"
X4        FORM      "30"
X5        FORM      "31"
X6        FORM      "30"
X7        FORM      "31"
X8        FORM      "31"
X9        FORM      "30"
X10       FORM      "31"
X11       FORM      "30"
X12       FORM      "31"
.
YYF       DIM       2
.
. Temp file to accumulate control totals by receipt
.--------------------------------------------------
APSTMPA1  IFILE     SQL, FIXED=38, KEY="U1-2,3-14,15-29"
.
APTMLED   DIM       2       2      1
APTMACC   DIM       12      12     3
APTMREC   DIM       15      15     15
APTMAMT   FORM      12.2    8      30
.
.End of Record                     38
.
MAKE      INIT      "isbuild "
KILL      INIT      "iserase "
INDEX     INIT      " 38 U1-2,3-14,15-29"
MAKETMP   DIM       80
KILLTMP   DIM       80
TMPFILE   DIM       8
APSTMP    INIT      "apstmp"
....TASKID    DIM       8
.
PRGID     INIT      "IBAAPS71"
PRGNAM    INIT      "Debtors Cash Receipts" 
VERSION   INIT      "V12.00.00"
+
          CALL      DISPHEAD
          MOVE      FNM,FNA
.
          PACK      TMPFILE,APSTMP,PORT
          REP       " 0",TMPFILE
          PACK      MAKETMP,MAKE,TMPFILE,INDEX
          PACK      KILLTMP,KILL,TMPFILE
          CLOSE     APSTMPA1
          EXECUTE   KILLTMP,TASKID
          EXECUTE   MAKETMP,TASKID
          OPEN      APSTMPA1,TMPFILE
.
          CALL      DISPHEAD
.
          CALL      CLRFLGS                 * Clear flags
.
          CALL      OPFIL                   * Open data files
.
STREF1    CALL      IDENTRN                 * Set up for input
.
          CALL      GETBATCH                * Enter data for batch
.
          MATCH     "Y",ENDFLAG
          GOTO      ENDNOW IF EQUAL
.
ADDTOBCH  CALL      GETINV                  * Enter data for invoice
.
          CALL      BALBATCH                * Balance batch
          BRANCH    ZENDFLAG,START,START,ADDTOBCH
.
START     MOVE      ZERO,ACCFLAG
          MOVE      ANSN,ERRFLAG
          MOVE      ZERO,BC1ACCT
          MOVE      ZERO,BC1KEYT
.
          GOTO      STREF1
.
ENDNOW    CLOSE     APSTMPA1
          EXECUTE   KILLTMP,TASKID
          CHAIN     PGM
.
NOFIL     MOVE      ZERO,FORM1
          RETURN
+
.------------------------------------------------------------------------------
.         Enter batch data
.------------------------------------------------------------------------------
.
GETBATCH  CALL      DISPBTCH
.
BTCH2     MOVE      ZERO TO ADDITION
          MOVE      "            ",BCCONT
          MOVE      BCCONT,CBCONT
.
          KEYIN     *P30:24,"( Enter ",*V2LON,"X",*HOFF," to Exit )":
                    *P39:4,"__":
                    *P39:4,*JR,*ZF,*V2LON,BC1LEDG,*P1:24,*EL;
.
          REP       UPPLOW,BC1LEDG
..........                                  * srf 115086 (new "?" option)
          MATCH     "0?",BC1LEDG
          GOTO      BTCH2B IF NOT EQUAL
.
          CALL      HFMLAA00
.
          PACK      FMLALEDG,FMLALEDG,SP70
          MATCH     SP70,FMLALEDG
          GOTO      BTCH2 IF EQUAL
.
          DISPLAY   *P39:4,*V2LON,FMLALEDG;
          PACK      BC1LEDG,FMLALEDG
.
BTCH2B
..........
          MATCH     "0X",BC1LEDG
          GOTO      BTCH2B1A IF NOT EQUAL
.
          MOVE      "Y",ENDFLAG
          GOTO      BATCHOUT
.
BTCH2B1A  MATCH     "0A",BC1LEDG
          GOTO      BTCH2A IF NOT EQUAL
.
.------------------------------------------------------------------------------
.     IF ADDING TO EXISTING BATCHES
.------------------------------------------------------------------------------
.
          MOVE      ONE,ADDITION
          CALL      ADDBATCH
.
          MATCH     "X",ERRFLAG
          GOTO      GETBATCH IF EQUAL
.
          RETURN
. .........................................................................
.
BTCH2A    
.          MATCH     "00" TO BC1LEDG
.          GOTO      BTCH3 IF EQUAL
..
.          MATCH     "50" TO BC1LEDG
.          GOTO      BTCH3 IF EQUAL
.
          DISPLAY   *P39:4,*V2LON,BC1LEDG
          GOTO      BTCH1
.
.          TYPE      BC1LEDG
.          GOTO      BTCH1 IF EQUAL
.
BTCH3     DISPLAY   *P1:24,*EL,*B,"Invalid Ledger Number - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
.
BTCH3AA   DISPLAY   *P39:4,"__",*P1:24,*EL;
          GOTO      BTCH2
.
BTCH1     MOVE      BC1LEDG TO BCLEDG
          CALL      READLEDG
          BRANCH    OVRCD TO BTCH3
.
          MOVE      FMLADESC TO LEDGERNM
          MOVE      SP35 TO FMLADESC
          DISPLAY   *P44:4,*V2LON,LEDGERNM
.
BTCH5     KEYIN     *P39:5,*V2LON,DIM2A;
.
          REP       UPPLOW,DIM2A
          PACK      DIM2A,DIM2A,SP70
          DISPLAY   *P39:5,*V2LON,DIM2A
          MATCH     SP70 TO DIM2A
          GOTO      GETBATCH IF EQUAL
.
          MATCH     "<" TO DIM2A
          GOTO      GETBATCH IF EQUAL
.
          MATCH     DIM2A,BC1TRAN
          GOTO      BTCH4 IF EQUAL     * incorrect batch type ?
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Selection - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BTCH5
.
BTCH4     
          GOTO      BTCH4A1
.--------------------------------------------------------------------
. BTCH - get next batch number
.--------------------------------------------------------------------
BTCH0000  MATCH     "IN",DIM2A
          GOTO      BTCH0100 IF NOT EQUAL
          CALL      RDFMCOCC
          MOVE      FMBCCBAT,DIM5
          GOTO      BTCH1000
.
BTCH0100  MATCH     "CR",DIM2A
          GOTO      BTCH0200 IF NOT EQUAL
          CALL      RDFMCOCR
          MOVE      FMBCRBAT,DIM5
          GOTO      BTCH1000
.
BTCH0200  MATCH     "PY",DIM2A
          GOTO      BTCH0300 IF NOT EQUAL
          CALL      RDFMCOPA
          MOVE      FMBPABAT,DIM5
          GOTO      BTCH1000
.
BTCH0300  MATCH     "CC",DIM2A
          GOTO      BTCH0400 IF NOT EQUAL
          CALL      RDFMCOCH
          MOVE      FMBCHBAT,DIM5
          GOTO      BTCH1000
.
BTCH0400  CALL      RDFMCOCO
          MOVE      FMBCOBAT,DIM5
          GOTO      BTCH1000
.
BTCH1000  MOVE      DIM5,BC1BATCH
          REP       " 0",BC1BATCH
          MOVE      BC1BATCH,BCBATCH
.
          PACK      KEY5,BC1BATCH,SP70
          CALL      RDFMBC1
          BRANCH    OVRCD TO BTCH2000
          GOTO      BTCH0000
.
BTCH2000  CLEAR     BFILE
          APPEND    "bch",BFILE
          APPEND    BC1BATCH,BFILE
          RESET     BFILE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      BATFILE,BFILE
          TRAPCLR   IO
.
          BRANCH    OVRCD,BTCH3000
          CLOSE     BATFILE
          GOTO      BTCH0000
.
BTCH3000  MATCH     DIM2A,BC1TRAN
          GOTO      BTCH9500 IF EQUAL
.
BTCH9000  MOVE      ZERO,EXIT
          GOTO      BTCH9999
.
BTCH9500  MOVE      ONE,EXIT
.
BTCH9999  RETURN
.------------------------------------------------------------------------------
. BATCH DATE
.------------------------------------------------------------------------------
.
BTCH4A1   MOVE      "39",CCOL
          MOVE      "6",CVERT
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          MOVE      ONE,CDEFDTE
          CALL      KEYDATE
          BRANCH    OVRCD,BTCH4A1
          MOVE      CDAY,IBDAY
          MOVE      CMON,IBMTH
          MOVE      CYEAR,IBYRR
          MOVE      CCENT,IBCCC
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
          BRANCH    PERLOCK,BDAT1000
          BRANCH    EXIT,BDAT1100
          GOTO      BDATEOK
. 
BDAT1000  MOVE      "Period ",KEY10
          MOVE      " Locked - ",KEY11
          PACK      ERRMSG,KEY10,PERCNT,KEY11
.
BDAT1100  DISPLAY   *P1:24,*EL,*+,ERRMSG;
          CALL      HITENTER
          DISPLAY   *P1:24,*EL; 
          GOTO      BTCH4A1
.
.------------------------------------------------------------------------------
. CONVERT MONTHS TO PERIODS
.------------------------------------------------------------------------------
.
BDATEOK   COMPARE   IBMTH TO CMM
          GOTO      BTCH4A21 IF NOT EQUAL
.
          COMPARE   IBYRR TO CYY
          GOTO      BTCHDIS IF EQUAL
.
BTCH4A21  KEYIN     *P10:24,*EL,*B,"Are you sure the Accounting Period date ":
                    "is Correct (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS,*P1:24,*EL;
.
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          CMATCH    "Y" TO ANS
          GOTO      BTCH4A1 IF NOT EQUAL
.
.------------------------------------------------------------------------------
. BATCH DISSECTION CODE
.------------------------------------------------------------------------------
.
BTCHDIS   KEYIN     *P39:7,*V2LON,*JR,FMDSCODE:
                    *P39:7,*DV,FMDSCODE,*P1:24,*EL;
.
          MOVE      FMDSCODE,BC1DISS
          MATCH     "    ?",FMDSCODE
          GOTO      BDIS2B IF NOT EQUAL
.
          CALL      HFMDSA00
.
          PACK      FMDSCODE,FMDSCODE,SP70
          MATCH     SP70,FMDSCODE
          GOTO      BTCHDIS IF EQUAL
          MOVE      FMDSCODE,BC1DISS
.
BDIS2B    DISPLAY   *P39:7,*V2LON,BC1DISS;
          PACK      KEY5,BC1DISS,SP70
          MOVE      SP70,FMDSDESC
          CALL      RDFMDS1
          DISPLAY   *V2LON,*P45:7,FMDSDESC;
          COMPARE   ONE TO OVRCD
          GOTO      BTCHRESP IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Dissection Code - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BTCHDIS
.
.------------------------------------------------------------------------------
. BATCH RESPONSIBILITY
.------------------------------------------------------------------------------
.
BTCHRESP  MOVE      "    " TO BC1RESP
.
          KEYIN     *P39:8,*V2LON,BC1RESP,*EL,*P1:24,*EL
.
          MATCH     "?",BC1RESP
          GOTO      BDES2B IF NOT EQUAL
.
          CALL      HFMRSA00
.
          PACK      FMRSCODE,FMRSCODE,SP70
          MATCH     SP70,FMRSCODE
          GOTO      BTCHRESP IF EQUAL
.
          DISPLAY   *P39:8,*V2LON,FMRSCODE;
          PACK      BC1RESP,FMRSCODE
.
BDES2B
..........
          RESET     BC1RESP
          GOTO      BTCHRESP IF EOS
.
          MOVE      BC1RESP TO KEY4
          CALL      RDFMRS1
.
          BRANCH    OVRCD TO BRESER
.
          DISPLAY   *P45:8,*EL,*V2LON,FMRSDESC
          GOTO      BTCH9B
.
BRESER    DISPLAY   *P1:24,*EL,*B,"Invalid Responsibility Code - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BTCHRESP
.
.------------------------------------------------------------------------------
. LEDGER BATCH TOTAL
.------------------------------------------------------------------------------
.
BTCH9B    KEYIN     *P39:9,*V2LON,BC1KEYT,*P1:24,*EL;
.
          COMPARE   ZERO,BC1KEYT
          GOTO      BTCH10 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Hash Total - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BTCH9B
.
BTCH10    DISPLAY   *P39:9,*V2LON,BC1KEYT
.
.------------------------------------------------------------------------------
.      FOR PAYMENTS & CASH RECEIPTS GET DEFAULT BANK ACCOUNT CODE
.------------------------------------------------------------------------------
.
BTCH4B    MOVE      SP70,BCCHQAC
.
BTCH4BD   KEYIN     *P11:13,"Ok to continue (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*EL,*V2LON,ANS,*P1:24,*EL;
.
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      BTCH6 IF EQUAL
.
          MATCH     "N",ANS
          GOTO      GETBATCH IF EQUAL
.
          BEEP
          GOTO      BTCH4BD
.
BTCH6     CALL      BTCH0000           * get next batch number
          COMPARE   ONE,EXIT
          GOTO      GETBATCH IF NOT EQUAL   * (should not happen !!)
.
          MOVE      ZERO,BC0BTCHT
          MOVE      ZERO,ERRFLAG
          MOVE      ZERO,NFLAG
          MOVE      "Z",AFLAG
          MOVE      SP2 TO BC0DIM2
          MOVE      TWO TO BC0NXTSC
          MOVE      ZERO TO BC0NXTSW
          MOVE      ZERO TO BC0BTCHT
          MOVE      ZERO TO BC0SUPBC
          MOVE      SP6 TO BC0DIM6
          MOVE      ZERO TO BC0SPLTK
          MOVE      ZERO TO BC0SPLTP
          MOVE      ONE TO BC0ONE
          MOVE      ZERO TO BC0SPSEC
          MOVE      ZERO TO BC0DISC
.
          PREP      BATFILE,BFILE
          CALL      WRBAT0
.
          MOVE      ONE TO BC1STAT
          MOVE      "HD" TO BC1HEAD
          MOVE      BCBATCH TO BC1BATCH
          MOVE      ZERO TO BC1ACCT
          MOVE      ZERO TO BC1NOTR
          PACK      BC1DATE WITH CDD,CMM,CCC,CYY
          REP       " 0" IN BC1DATE
          MOVE      PASSCODE TO BC1OPER
          PACK      BC1BDATE WITH IBDAY,IBMTH,IBCCC,IBYRR
          REP       " 0" IN BC1BDATE
          MOVE      ZERO TO BC1REORG
          MOVE      SP2 TO BC1PAYT
          MOVE      ZERO TO BC1REST
          MOVE      ZERO TO BC1UTYPE
.
          CALL      WRBAT1
.
BATCHOUT  RETURN
.
NOFILE    MOVE      "Y",FLEFLAG
          RETURN
.
NAFILE    TRAPCLR   IO
          TRAPCLR   RANGE
          TRAPCLR   FORMAT
          MOVE      "Y",FLEFLAG
.
          RETURN
.
.------------------------------------------------------------------------------
.         Data entry screen for invoice details
.------------------------------------------------------------------------------
.
DISPINV   DISPLAY   *P1:3,*EF:
                    *P1:4,TRCONSTG,SP1,DASH5:
                    *P50:4,TRCONSTA,*P63:4,DASH15:
                    *P50:5,TRCONSTC:
                    *P63:5,"______":
                    *P50:6,TRCONSTD,*P63:6,DASH11
.
          MATCH     "CR" TO BC1TRAN
          GOTO      MOVESP IF EQUAL
.
          MATCH     "CS" TO BC1TRAN
          GOTO      MOVESP IF EQUAL
.
          MATCH     "RF" TO BC1TRAN
          GOTO      MOVESP IF EQUAL
.
          MATCH     "CE" TO BC1TRAN
          GOTO      DISPINV1 IF NOT EQUAL
.
MOVESP    MOVE      "           " TO DASH11
.
DISPINV1  DISPLAY   *P50:7,TRCONSTF,*P63:7,DASH11:
                    *P1:8,TRCONSTB,*P18:8,DASH8:
                    *P50:8,TRCONSTE,*P63:8,DASH2:
                    *P1:9,TRCONSTI,*P16:9,": ",DASH35:
                    *P1:10,"Responsibility",*P16:10,": ____":
                    *P1:11,"Dissection",*P16:11,": _____":
                    *P1:12,"Ledger",*P16:12,": __":
                    *P1:13,"Account Code",*P16:13,": ____________":
                    *P1:14,"Amount",*P16:14,": ___________":
                    *P61:18,"+------------------":
                    *P61:19,"|Last  Transaction":
                    *P61:20,"|Ref:",BCREFER:               
                    *P61:21,"|Amt:",BCAMT:
                    *P61:22,"|Tot:",*V2LON,BC0BTCHT
.
          MOVE      BCRED TO SAVTRCDE
          MOVE      BCACCTP TO SAVTRCOD
          MOVE      BCAMT TO SAVBCAMT
.
          MATCH     "CR" TO BC1TRAN
          GOTO      MOVEDS IF EQUAL
.
          MATCH     "CS" TO BC1TRAN
          GOTO      MOVEDS IF EQUAL
.
          MATCH     "RF" TO BC1TRAN
          GOTO      MOVEDS IF EQUAL
.
          MATCH     "CE" TO BC1TRAN
          RETURN    IF NOT EQUAL
.
MOVEDS    MOVE      "___________" TO DASH11
          RETURN
.
.------------------------------------------------------------------------------
.         Data entry screen for batch details
.------------------------------------------------------------------------------
.
DISPBTCH  DISPLAY   *P1:3,*EF,*P1:4,"Default Ledger Number of this Batch":
                    " : __":
                    *P1:5,"Batch Type       ",*P37:5,": __":
                    *P1:6,"Accounting Period Date",*P37:6,": __/__/__":
                    *P1:7,"Default Dissection Code",*P37:7,": _____":
                    *P1:8,"Default Responsibility Code",*P37:8,": ____":
                    *P1:9,"Batch Total                ",*P37:9,": _______":
                    "______"
          RETURN
+
.------------------------------------------------------------------------------
.         Date validation
.------------------------------------------------------------------------------
.
DATEVAL   MOVE      ZERO,ERRFLAG
.
VAL1      MOVE      "28",X2
          ASSIGN    (VCC*100)+VYY,LYEAR
          MOVE      LYEAR,FORM4
          DIVIDE    FOUR,LYEAR
          MULT      FOUR,LYEAR
.
          COMPARE   FORM4,LYEAR
          GOTO      VAL2 IF NOT EQUAL
.
          MOVE      "29",X2
.
VAL2      COMPARE   ONE,VMM
          GOTO      VAL3 IF NOT LESS
.
VAL2A     MOVE      "Y",ERRFLAG
          GOTO      VALOUT1
.
VAL3      COMPARE   THIRTEEN,VMM
          GOTO      VAL2A IF NOT LESS
.
          LOAD      DAYCMP FROM VMM OF X1,X2,X3,X4,X5,X6,X7,X8,X9,X10:
                    X11,X12
.
          COMPARE   ONE,VDD
          GOTO      VAL2A IF LESS
.
          COMPARE   DAYCMP,VDD
          GOTO      VALOUT IF LESS
          GOTO      VALOUT IF EQUAL
.
          GOTO      VAL2A
.
VALOUT    CLEAR     DATE1
          APPEND    VCC,DATE1
          APPEND    VYY,DATE1
          APPEND    VMM,DATE1
          APPEND    VDD,DATE1
          RESET     DATE1
          REP       " 0" IN DATE1
.
          CLEAR     DATE2
          APPEND    IBCCC,DATE2
          APPEND    IBYRR,DATE2
          APPEND    IBMTH,DATE2
          APPEND    IBDAY,DATE2
          RESET     DATE2
          REP       " 0" IN DATE2
.
          MOVE      DATE1 TO DATEF1
          MOVE      DATE2 TO DATEF2
.
          MATCH     "X",NFLAG
          GOTO      VAL20 IF NOT EQUAL
.
          MOVE      DATE2 TO DATEF1
          MOVE      DATE1 TO DATEF2
.
VAL20     COMPARE   DATEF1,DATEF2
          GOTO      VAL2A IF LESS
.
VALOUT1   MOVE      ZERO,DATEF1
          MOVE      ZERO,DATEF2
          RETURN
+
.------------------------------------------------------------------------------
.         Get invoice details
.------------------------------------------------------------------------------
.
GETINV    CALL      DISPINV
.
          COMPARE   ZERO TO RESFLG
          GOTO      GETINVA IF EQUAL
.
          DISPLAY   *P12:4,*V2LON,BCRED
.
          MATCH     "CS" TO BC1TRAN
          GOTO      GETINV0 IF EQUAL
.
          CALL      READCRED
.
          DISPLAY   *P18:4,*V2LON,APMACN1,*P18:5,APMACN2,*P18:6,APMACA1:
                    *P18:7,APMACA2,*P43:7,APMACPC
.
GETINV0   MATCH     "CE" TO BC1TRAN
          GOTO      GETINV01 IF EQUAL
.
          DISPLAY   *P63:4,*V2LON,BCREFER
.
GETINV01  MOVE      IBDAY,CDAY
          MOVE      IBMTH,CMON
          MOVE      IBCCC,CCENT
          MOVE      IBYRR,CYEAR
          CALL      PACDATE
          DISPLAY   *P63:5,*V2LON,CPCDATE:
                    *P63:6,BC0SPLTK
.
          MATCH     "IN" TO BC1TRAN
          GOTO      GETINV02 IF NOT EQUAL
.
          DISPLAY   *P63:7,*V2LON,BC0DISC,*P63:8,QP,QPN
.
GETINV02  MOVE      ZERO TO RESFLG
          GOTO      TRCONT4B
.
GETINVA   MATCH     "CS" TO BC1TRAN
          GOTO      GETINV1 IF NOT EQUAL
.
          MOVE      "00000",BCRED
          GOTO      INVNO1
.
GETINV1   MATCH     "CE",BC1TRAN
          GOTO      KEYCRD1 IF EQUAL
.
          MOVE      SP1,AFLAG
KEYCRD1   MOVE      SP1,ANS
.
          DISPLAY   *P18:4,"                              ":
                    *P18:5,"                              ":
                    *P18:6,"                              ":
                    *P18:7,"                                "
.
          KEYIN     *P12:4,*JR,*ZF,*V2LON,BCRED:
                    *P1:24,*EL;
.
          RESET     BCRED
          GOTO      KEYCRD21 IF EOS
          MOVE      SP70,BCCDESC
.
          MATCH     "0000<" TO BCRED
          GOTO      KEYCRD1 IF EQUAL
.
          MATCH     "00000",BCRED
          GOTO      KEYCRD7 IF EQUAL
.
          MATCH     "0000*",BCRED
          GOTO      KEYCRD3 IF NOT EQUAL
.
KEYCRD2   MATCH     "Y",MULFLG
          GOTO      BCAMT2 IF EQUAL
.
          GOTO      ENDINV
.
KEYCRD3   MATCH     "0000L",BCRED
          GOTO      KEYCRD4 IF NOT EQUAL
.
          CALL      GETLAST
          MOVE      "Z",AFLAG
          GOTO      GETINV
.
KEYCRD4   MATCH     "0000>",BCRED
          GOTO      KEYCRD10 IF NOT EQUAL
.
          MATCH     "Y",CREDFLG
          GOTO      KEYCRD5 IF EQUAL
.
          DISPLAY   *P12:4,"_____"
          GOTO      KEYCRD1
.
KEYCRD5   MATCH     "CE" TO BC1TRAN
          GOTO      KEYCRD5A IF NOT EQUAL
.
          CALL      MCRDDAT
          GOTO      TRDAT2
.
KEYCRD5A  CALL      MCREDD
          GOTO      INVNO1
.
KEYCRD7   MATCH     "CE",BC1TRAN
          GOTO      KEYCRD8 IF EQUAL
.
          MATCH     "PY",BC1TRAN
          GOTO      KEYCRD9 IF NOT EQUAL
.
KEYCRD8   KEYIN     *P18:4,*V2LON,APMACN1
          ENDSET    APMACN1
          APPEND    SP70,APMACN1
          RESET     APMACN1
          MOVE      APMACN1,BCCDESC
          MOVE      "                         ",APMACN2
          MOVE      "                         ",APMACA1
          MOVE      APMACA1,APMACA2
          MOVE      "      ",APMACPC
.
          PACK      AKEY5,SP5
.
          GOTO      KEYCRD23
.
KEYCRD9   DISPLAY   *P1:24,*EL,*B,"Invalid Creditors Code - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      KEYCRD1
.
KEYCRD10  DISPLAY   *P12:4,*V2LON,BCRED
.
          CALL      READCRED                    * Read creditor details
.
          MATCH     "Z",ANS
          GOTO      KEYCRD12 IF NOT EQUAL
.
          MOVE      SP1,CREDFLG
          GOTO      KEYCRD1
.
KEYCRD12  RESET     ACHECK
          MOVE      "   ",ACHECK
          GOTO      KEYCRD14
.
KEYCRD13  BUMP      APMACN1 BY 1
          GOTO      KEYCRD17 IF EOS
.
KEYCRD14  CMATCH    "&",APMACN1
          GOTO      KEYCRD16 IF EQUAL
.
          CMATCH    "A",APMACN1
          GOTO      KEYCRD15 IF LESS
.
          CMATCH    "Z",APMACN1
          GOTO      KEYCRD16 IF EQUAL
          GOTO      KEYCRD16 IF LESS
.
          GOTO      KEYCRD13
.
KEYCRD15  CMATCH    "0",APMACN1
          GOTO      KEYCRD13 IF LESS
.
          CMATCH    "9",APMACN1
          GOTO      KEYCRD16 IF LESS
          GOTO      KEYCRD16 IF EQUAL
.
          GOTO      KEYCRD13
.
KEYCRD16  CMOVE     APMACN1,ACHECK
          BUMP      ACHECK BY 1
          GOTO      KEYCRD17 IF EOS
          GOTO      KEYCRD13
.
KEYCRD17  RESET     APMACN1
          RESET     ACHECK TO 3
          LENSET    ACHECK
          RESET     ACHECK
.
.------------------------------------------------------------------------------
.         Enter alpha code for creditor
.------------------------------------------------------------------------------
.
          DISPLAY   *P18:4,*V2LON,APMACN1;
          GOTO      KEYCRD23 
.
KEYCRD19  DISPLAY   *P18:4,*V2LON,APMACN1
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Alpha Code - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
.
KEYCRD20  DISPLAY   *P12:5,"___"
          MOVE      BCRED TO SAVECRED
          GOTO      KEYCRD1
.
KEYCRD21  MOVE      SAVECRED TO BCRED
          DISPLAY   *P12:4,*V2LON,BCRED
.
          MATCH     SP70,BCCDESC
          GOTO      KEYCRD7 IF EQUAL
.
.------------------------------------------------------------------------------
.         Display creditor details & prompt user for confirmation
.------------------------------------------------------------------------------
.
KEYCRD23  DISPLAY   *P12:4,*V2LON,BCRED:
                    *P18:4,APMACN1,*P18:5,APMACN2,*P18:6,APMACA1,*P18:7,APMACA2:
                    *P43:7,APMACPC
.
          KEYIN     *P1:7,"Ok (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*V2LON,ANS,*P1:7,"              ";
.
          REP       UPPLOW,ANS
          MATCH     "N",ANS
          GOTO      KEYCRD20 IF EQUAL
          MATCH     "Y",ANS
          GOTO      KEYCRD23 IF NOT EQUAL
.
          MOVE      "Y",CREDFLG
          MOVE      BCRED TO SAVECRED                         *
          MOVE      BCRED TO HCRCOD
.
INVNO1    MATCH     "CE",BC1TRAN
          GOTO      TRDAT2 IF EQUAL
.
.------------------------------------------------------------------------------
.         Enter Invoice No.
.------------------------------------------------------------------------------
.
INVNO5    KEYIN     *P63:4,*V2LON,BCREFER,*EL;
.
          ENDSET    BCREFER
          APPEND    SP15 TO BCREFER
          RESET     BCREFER
.
          MATCH     SP15 TO BCREFER
          GOTO      INVNO5B IF NOT EQUAL
.
INVNO5A   BEEP
          MOVE      "_______________" TO BCREFER
          GOTO      INVNO5
.
INVNO5B   MATCH     "CS" TO BC1TRAN
          GOTO      INVNO6 IF NOT EQUAL
.
          CMATCH    "*" TO BCREFER
          GOTO      INVNO6 IF NOT EQUAL
.
          MATCH     "Y" TO MULFLG
          GOTO      BCAMT2 IF EQUAL
.
          GOTO      ENDINV
.
INVNO6    CMATCH    "<",BCREFER
          GOTO      INVNO8 IF NOT EQUAL
.
          MATCH     "CS" TO BC1TRAN
          GOTO      INVNO5A IF EQUAL
.
          CALL      MREFUP
          GOTO      KEYCRD1
.
INVNO8    CMATCH    ">",BCREFER
          GOTO      INVNO11 IF NOT EQUAL
.
          MATCH     "Y",REFFLG
          GOTO      INVNO5A IF NOT EQUAL
.
INVNO10   CALL      MREFD
          GOTO      TRDAT2
.
INVNO11   
INVNO14   DISPLAY   *P63:4,*V2LON,BCREFER
          REPLACE   " 0",BCRED
.
INVNOE1   MOVE      "Y",REFFLG
          MOVE      BCREFER TO HREF
.
.------------------------------------------------------------------------------
.         Enter date
.------------------------------------------------------------------------------
.
TRDAT2    
          KEYIN     *P63:5,*EL,*V2LON,BCDATED,*P1:24,*EL;
.
          RESET     BCDATED
          GOTO      TRDAT2A IF NOT EOS
.
          MOVE      IBDAY TO VDD
          MOVE      IBMTH TO VMM
          MOVE      IBCCC TO VCC
          MOVE      IBYRR TO VYY
          MOVE      IBDAY,CDAY
          MOVE      IBMTH,CMON
          MOVE      IBCCC,CCENT
          MOVE      IBYRR,CYEAR
          CALL      PACDATE
          DISPLAY   *P63:5,*V2LON,CPCDATE
          GOTO      TRDAT10
.
TRDAT2A   MOVE      SP1,ERRFLAG
.
          CMATCH    "<",BCDATED
          GOTO      TRDAT3 IF NOT EQUAL
.
          MATCH     "CE" TO BC1TRAN
          GOTO      TRDAT2B IF NOT EQUAL
.
          CALL      MDATCR
          GOTO      KEYCRD1
.
TRDAT2B   CALL      MDTEUP
          GOTO      INVNO1
.
TRDAT3    CMATCH    ">",BCDATED
          GOTO      TRDAT5 IF NOT EQUAL
.
          MATCH     "Y",DTEFLG
          GOTO      TRDAT2 IF NOT EQUAL
.
TRDAT4    CALL      MDTED
          GOTO      TRGRS2
.
TRDAT5    RESET     BCDATED
          GOTO      TRDAT2 IF EOS
.
          REP       " 0",BCDATED
          TYPE      BCDATED
          GOTO      TRDAT8 IF EQUAL
.
TRDAT7    DISPLAY   *P1:24,*EL,*B,"Invalid Date - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRDAT2
.
TRDAT8    CALL      DATEMOVE
.
          MATCH     "Y",ERRFLAG
          GOTO      TRDAT7 IF EQUAL
.
TRDAT9    MOVE      VDD,CDAY
          MOVE      VMM,CMON
          MOVE      VCC,CCENT
          MOVE      VYY,CYEAR
          CALL      PACDATE
          DISPLAY   *P63:5,*V2LON,CPCDATE
          CALL      BTCHDATE
.
          COMPARE   ONE TO FLAG
          GOTO      TRDAT2 IF EQUAL
.
TRDAT10   MOVE      "Y" TO DTEFLG
          PACK      BCDATED WITH VDD,VMM,VCC,VYY
          CLEAR     HDATE
          APPEND    VDD TO HDATE
          APPEND    VMM TO HDATE
          APPEND    VCC TO HDATE
          APPEND    VYY TO HDATE
          RESET     HDATE
.
.------------------------------------------------------------------------------
.         Enter pay total
.------------------------------------------------------------------------------
.
TRGRS2    MOVE      ZERO,BCAMTA
          KEYIN     *P63:6,*EL,*V2LON,BCAMTA,*EL
          RESET     BCAMTA
.
TRGRS3    CMATCH    "<",BCAMTA
          GOTO      TRGRS3A IF NOT EQUAL
.
          CALL      MGRUP
          GOTO      TRDAT2
.
TRGRS3A   CMATCH    ">" TO BCAMTA
          GOTO      TRGRS4 IF NOT EQUAL
.
          CMATCH    "Y" TO GRTOTFLG
          GOTO      TRGRS2 IF NOT EQUAL
.
TRGRS3B   MATCH     "CE" TO BC1TRAN
          GOTO      TRGRS2 IF EQUAL
.
          MATCH     "RF" TO BC1TRAN
          GOTO      TRGRS2 IF EQUAL
.
          MATCH     "CS" TO BC1TRAN
          GOTO      TRGRS2 IF EQUAL
.
          CALL      MGRED
.
          MATCH     "PY" TO BC1TRAN
          GOTO      TRDIS1 IF EQUAL
.
          MATCH     "IN" TO BC1TRAN
          GOTO      TRPAY1 IF NOT EQUAL
.
          GOTO      TRDIS1
.
TRGRS4    TYPE      BCAMTA
          GOTO      TRGRS5 IF EQUAL
.
TRGRS44   DISPLAY   *P1:24,*EL,*B,"Invalid Amount - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRGRS2
.
TRGRS4A   DISPLAY   *P1:24,*EL,*B,"Payment Amount exceeds Invoice Amount - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRGRS2
.
TRGRS5    MOVE      BCAMTA TO BC0SPLTK
.
          COMPARE   ZERO TO BC0SPLTK
          GOTO      TRGRS44 IF EQUAL
.
          MATCH     "CS" TO BC1TRAN                 * INSERTED BY R.R. FOR W1.02
          GOTO      TRGRS6 IF EQUAL               *  ALLOWS FOR NEGATIVE CS
.
          MATCH     "PY" TO BC1TRAN
          GOTO      TRGRSB6 IF EQUAL
.
          MATCH     "IN" TO BC1TRAN
          GOTO      TRGRS55 IF EQUAL
.
          MATCH     "RF" TO BC1TRAN
          GOTO      TRGRSA6 IF NOT EQUAL
.
TRGRS55   COMPARE   ZERO TO BC0SPLTK
          GOTO      TRGRSB6 IF NOT LESS
.
          KEYIN     *P18:24,*V2LON,"Negative Gross Total",*HOFF:
                    " - Are you sure (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*V2LON,ANS,*P1:24,*EL;
.
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          CMATCH    "Y" TO ANS
          GOTO      TRGRS44 IF NOT EQUAL
.
          GOTO      TRGRSB6
.
TRGRSA6   COMPARE   ZERO TO BC0SPLTK             *Cant enter < $0.00
          GOTO      TRGRS44 IF LESS
.
TRGRSB6   MATCH     "PY" TO BC1TRAN
          GOTO      TRGRS6 IF NOT EQUAL
.
          MATCH     "00000" TO BCRED
          GOTO      TRGRS6 IF EQUAL
.
          COMPARE   BC0SPLTK TO F8P2             *Specific Creditor Payments
          GOTO      TRGRS4A IF LESS             *cant pay > Invoice amount
.
TRGRS6    DISPLAY   *P63:6,*V2LON,BC0SPLTK
          MOVE      BC0SPLTK,BCINVT
          MOVE      "Y" TO GRTOTFLG
          MOVE      BCINVT TO HGTOT
.
TRDIS1    MOVE      ZERO TO LPFLAG
          MOVE      "  " TO BCPAYT
.
          MATCH     "CS" TO BC1TRAN
          GOTO      MOVEQPN IF EQUAL
.
          MATCH     "CE" TO BC1TRAN
          GOTO      MOVEQPN IF EQUAL
.
          MATCH     "RF" TO BC1TRAN
          GOTO      MOVEQPN IF EQUAL
.
          MATCH     "PY" TO BC1TRAN               *Payments may also
          GOTO      TRDIS1A IF EQUAL            *have a discount
.
          MATCH     "CR" TO BC1TRAN
          GOTO      TRPAY1 IF EQUAL
.
          MATCH     "IN" TO BC1TRAN               *Invoices may have a discount
          GOTO      TRPAY1 IF NOT EQUAL
.
.------------------------------------------------------------------------------
.           ENTER IN A DISCOUNT VALUE
.------------------------------------------------------------------------------
.
TRDIS1A   KEYIN     *P63:7,*EL,*V2LON,BCAMTA
          RESET     BCAMTA
          GOTO      TRDIS2A IF NOT EOS
.
          MOVE      "        .00" TO BCAMTA
          GOTO      OKCONT1                    * Goto next field if discount=0
.
TRDIS2A   CMATCH    "<" TO BCAMTA
          GOTO      TRDIS2B IF NOT EQUAL
.
          CALL      MDISUP
          GOTO      TRGRS2
.
TRDIS2B   CMATCH    ">" TO BCAMTA
          GOTO      TRDIS3 IF NOT EQUAL
.
          MATCH     "Y" TO DISCFLG
          GOTO      TRDIS2C IF EQUAL
.
          BEEP
          GOTO      TRDIS1
.
TRDIS2C   CALL      MDISED
          GOTO      TRPAY1
.
TRDIS3    TYPE      BCAMTA
          GOTO      OKCONT1 IF EQUAL
.
TRDIS4    DISPLAY   *P1:24,*EL,*B,"Invalid Amount - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRDIS1
.
OKCONT1   MOVE      BCAMTA,BCDISC               *Save Discount value.
.
          MATCH     "PY",BC1TRAN                  *Payments ?
          GOTO      OKCONTA1 IF NOT EQUAL       *No, so go to Invoice test
.
          MATCH     "00000",BCRED              *Is this a specific creditor ?
          GOTO      OKCONTA2 IF EQUAL           *Skip next bit if it is.
.
          SUB       WF8P2 FROM WF8P2            *Initialise
          ADD       BC0SPLTK,WF8P2               *Ensure that
          ADD       BCDISC,WF8P2                *Payment + Discount <= Invoice.
.
          COMPARE   F8P2,WF8P2
          GOTO      OKCONTA2 IF EQUAL           *Both = so OK.
          GOTO      TRGRS4A IF NOT LESS         *Pay. + Disc. must be less.
.
          GOTO      OKCONTA2                    *All OK.
.
OKCONTA1  COMPARE   ZERO TO BCDISC               *If reverse invoices (-ve $)
          GOTO      OKCONTA2 IF EQUAL           *then a 0 value for discount
.                                               *is valid.
          COMPARE   BC0SPLTK,BCDISC
          GOTO      OKCONTA2 IF EQUAL          *Redundant due to next cmd
          GOTO      TRDIS1 IF NOT LESS          *Discount cannot be > invoice
.
OKCONTA2  DISPLAY   *P63:7,*EL,*P65:7,*V2LON,BCDISC
          MOVE      "Y" TO DISCFLG              *aint allowed to be zero !!
          MOVE      BCDISC TO HDTOT
          MOVE      BCDISC TO BC0DISC
          CALL      WRBATR0
.
          MATCH     "PY" TO BC1TRAN               *Payments go straight to
          GOTO      MOVEQPN IF EQUAL              *ORDER input.
.
.------------------------------------------------------------------------------
.         Enter pay period
.------------------------------------------------------------------------------
.
TRPAY1    KEYIN     *P63:8,*EL,*+,*V2LON,QP,*-,QPN
.
          RESET     QP
          GOTO      TRPAY1 IF EOS
.
          CMATCH    "<" TO QP
          GOTO      TRPAY1A IF NOT EQUAL
.
          CALL      MPAYUP
.
          MATCH     "CR" TO BC1TRAN
          GOTO      TRGRS2 IF EQUAL
.
          GOTO      TRDIS1
.
TRPAY1A   CMATCH    ">" TO QP
          GOTO      TRPAY2 IF NOT EQUAL
.
          MATCH     "IN" TO BC1TRAN               *Only invoices can go down
          GOTO      TRPAY1AA IF NOT EQUAL
.
          MATCH     "Y" TO PAYFLG               *Something must be entered
          GOTO      TRPAY1AA IF NOT EQUAL       *before you can go down
.
          MOVE      HPP TO QP
          BUMP      HPP
          MOVE      HPP TO QPN
          DISPLAY   *P63:8,*V2LON,QP,QPN
          GOTO      MOVEQPN
.
TRPAY1AA  BEEP
          GOTO      TRPAY1
.
TRPAY2    MATCH     "M",QP
          GOTO      TRPAY3 IF EQUAL
.
          MATCH     "W" TO QP
          GOTO      TRPAY3 IF EQUAL
.
          MATCH     "D" TO QP
          GOTO      TRPAY3 IF EQUAL
.
          GOTO      TRPAY4
.
TRPAY3    CMATCH    ONEX TO QPN
          GOTO      TRPAYE IF EQUAL
.
          CMATCH    "2" TO QPN
          GOTO      TRPAYE IF EQUAL
.
TRPAY4    DISPLAY   *P1:24,*EL,*B,"Invalid Pay Period - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRPAY1
.
TRPAYE    MOVE      "Y",PAYFLG
          CLEAR     HPP
          APPEND    QP TO HPP
          APPEND    QPN TO HPP
          RESET     HPP
.
MOVEQPN   PACK      BCPAYT WITH QP,QPN
          DISPLAY   *P1:24,*EL
.
BCTRAND1  KEYIN     *P18:9,*V2LON,BCTRAND:       *Accept the description
                    *P18:9,*DV,BCTRAND           *redisplay it to clear
          ENDSET    BCTRAND
          APPEND    SP35 TO BCTRAND
          RESET     BCTRAND
.
          CMATCH    "*" TO BCTRAND
          GOTO      BCAMT2 IF EQUAL
.
          CMATCH    "<" TO BCTRAND            *Some people want to go back
          GOTO      BCTRAND2 IF NOT EQUAL
.
          GOTO      BCTRAND1
.
BCTRAND2  CMATCH    ">" TO BCTRAND
          GOTO      BCTRAND3 IF NOT EQUAL     *Its a legal description
.
          MATCH     "Y" TO DESCFLG
          GOTO      BCTRAND1 IF NOT EQUAL
.
          CALL      MLDES
          GOTO      TRWRK1
.
BCTRAND3  MOVE      BCTRAND TO KEY4           *Set up key to DSMASTE1 file
          CALL      RDFMTD1
          BRANCH    OVRCD TO BCTRAND4
.
          MOVE      FMTDDESC TO BCTRAND
.
BCTRAND4  MOVE      "Y" TO DESCFLG
          MOVE      BCTRAND TO HDESC
          DISPLAY   *P18:9,*V2LON,BCTRAND            *display desc from file
.
.------------------------------------------------------------------------------
.         Enter responsibility code
.------------------------------------------------------------------------------
.
TRWRK1    MOVE      BC1RESP,BCRESP
          KEYIN     *P18:10,*RV,*V2LON,BCRESP
.
..........                                  * srf 115086 (new "?" option)
          MATCH     "?",BCRESP
          GOTO      BDES2C IF NOT EQUAL
.
          CALL      HFMRSA00
.
          PACK      FMRSCODE,FMRSCODE,SP70
          MATCH     SP70,FMRSCODE
          GOTO      TRWRK1 IF EQUAL
.
          DISPLAY   *P18:10,*V2LON,FMRSCODE;
          PACK      BCRESP,FMRSCODE
.
BDES2C
..........
          RESET     BCRESP
          GOTO      TRWRK1A IF NOT EOS
.
          MOVE      BC1RESP TO BCRESP
          DISPLAY   *P18:10,*V2LON,BCRESP,*EL
          GOTO      TRWRK4
.
TRWRK1A   CMATCH    "*" TO BCRESP
          GOTO      BCAMT2 IF EQUAL
.
          CMATCH    "<" TO BCRESP
          GOTO      TRWRK2 IF NOT EQUAL
.
          MATCH     "CS" TO BC1TRAN
          GOTO      BCTRAND1 IF EQUAL
.
          CALL      MWRKUP
          GOTO      BCTRAND1
.
TRWRK2    CMATCH    ">" TO BCRESP
          GOTO      TRWRK4 IF NOT EQUAL
          CMATCH    "Y" TO WRKFLG
          GOTO      TRWRK3 IF EQUAL
          GOTO      TRWRK1
.
TRWRK3    CALL      MWRKED
          GOTO      BCDISS1
.
TRWRK4    MOVE      BCRESP TO KEY4
          CALL      RDFMRS1
          BRANCH    OVRCD TO TRWRKE
.
          DISPLAY   *P36:10,*V2LON,FMRSDESC,*EL
          MOVE      "Y" TO WRKFLG
          MOVE      BCRESP TO HWORK
          GOTO      BCDISS1
.
TRWRKE    DISPLAY   *P1:24,*EL,*B,"Invalid Responsibility - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRWRK1
.
.------------------------------------------------------------------------------
.         Enter Dissection Code.
.------------------------------------------------------------------------------
BCDISS1   MOVE      BC1DISS,DIM5
          KEYIN     *P18:11,*V2LON,*RV,*JR,DIM5
.
          MATCH     "    ?",DIM5
          GOTO      BDIS2C IF NOT EQUAL
.
          CALL      HFMDSA00
.
          PACK      FMDSCODE,FMDSCODE,SP70
          MATCH     SP70,FMDSCODE
          GOTO      BCDISS1 IF EQUAL
.
          DISPLAY   *P18:11,*V2LON,FMDSCODE;
          MOVE      FMDSCODE,DIM5
.
BDIS2C
..........
          RESET     DIM5
          GOTO      BCDISS3 IF EOS
.
          MATCH     "    *" TO DIM5
          GOTO      BCAMT2 IF EQUAL
.
BCDISSA   MATCH     "    <" TO DIM5
          GOTO      BCDISS1A IF NOT EQUAL
          CALL      MDISSUP
          GOTO      TRWRK1
.
BCDISS1A  MATCH     "    >" TO DIM5
          GOTO      BCDISS1C IF NOT EQUAL
          CMATCH    "Y" TO DISFLG
          GOTO      BCDISS1B IF EQUAL
          GOTO      BCDISS1
.
BCDISS1B  CALL      MDISSED
          GOTO      TRLED1
.
BCDISS1C  MOVE      DIM5 TO BCDISS
          PACK      KEY5,BCDISS
          CALL      RDFMDS1
          COMPARE   ONE TO OVRCD
          GOTO      BCDISS4 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Dissection must be > ZERO - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BCDISS1
.
BCDISS3   MOVE      BC1DISS TO BCDISS
          PACK      KEY5,BCDISS
          CALL      RDFMDS1
.
BCDISS4   DISPLAY   *P18:11,*V2LON,BCDISS,*P36:11,FMDSDESC
.
BCDISSE   MOVE      "Y" TO DISFLG
          MOVE      BCDISS TO HDISS
.
.------------------------------------------------------------------------------
.         Enter ledger number
.------------------------------------------------------------------------------
TRLED1    MOVE      BC1LEDG,BCLEDG
          KEYIN     *P18:12,*V2LON,*EL,*RV,*JR,*ZF,BCLEDG
.
          MATCH     "0?",BCLEDG
          GOTO      BTCH2C IF NOT EQUAL
.
          CALL      HFMLAA00
.
          PACK      FMLALEDG,FMLALEDG,SP70
          MATCH     SP70,FMLALEDG
          GOTO      TRLED1 IF EQUAL
.
          DISPLAY   *P18:12,*V2LON,FMLALEDG;
          PACK      BCLEDG,FMLALEDG
.
BTCH2C    ENDSET    BCLEDG
          APPEND    SP70,BCLEDG
          RESET     BCLEDG
.
TRLED2    MATCH     "0<" TO BCLEDG
          GOTO      TRLED3 IF NOT EQUAL
          CALL      MLEDUP
          GOTO      BCDISS1
.
TRLED3    MATCH     "0>" TO BCLEDG
          GOTO      TRLED4 IF NOT EQUAL
          CMATCH    "Y" TO LEDGFLG
          GOTO      TRLED1 IF NOT EQUAL
          CALL      MLEDED
          GOTO      TRACC1
.
TRLED4    MATCH     "0*" TO BCLEDG
          GOTO      BCAMT2 IF EQUAL
.
          CALL      READLEDG
          BRANCH    OVRCD,TRLEDE
.
          DISPLAY   *P18:12,*V2LON,BCLEDG,*P36:12,FMLADESC
          GOTO      TRACC1
.
TRLEDE    DISPLAY   *P1:24,*EL,*B,"Invalid Ledger Number - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRLED1
.------------------------------------------------------------------------------
.         Enter Account Code.
.------------------------------------------------------------------------------
.
TRACC1    MOVE      SP1,ANS
          MOVE      SP12 TO BCACCTP
          KEYIN     *P18:13,*V2LON,BCACCTP,*EL:
                    *P1:24,*EL;
.
..........                                  * srf 115086 (new "?" option)
          MATCH     "?",BCACCTP
          GOTO      BACC2C IF NOT EQUAL
.
          MOVE      BCLEDG,FMAMLEDG
          CALL      QFMAMA00
.
          PACK      FMAMACCT,FMAMACCT,SP70
          MATCH     SP70,FMAMACCT
          GOTO      TRACC1 IF EQUAL
.
          DISPLAY   *P18:13,*V2LON,FMAMACCT;
          PACK      BCACCTP,FMAMACCT
.
BACC2C
..........
.
          ENDSET    BCACCTP
          APPEND    SP12 TO BCACCTP
          RESET     BCACCTP
          MATCH     SP12 TO BCACCTP
          GOTO      TRACC3 IF NOT EQUAL
.
TRACC2    BEEP
          MOVE      "____________" TO BCACCTP
          GOTO      TRACC1
.
TRACC3    CMATCH    "<",BCACCTP
          GOTO      TRACC4 IF NOT EQUAL
          CALL      MLCODEU
          GOTO      TRLED1
.
TRACC4    CMATCH    ">",BCACCTP
          GOTO      TRACC6 IF NOT EQUAL
          MATCH     "Y",LCODEFLG
          GOTO      TRACC2 IF NOT EQUAL
.
TRACC5    CALL      MLCODED
.
TRACC6    DISPLAY   *P18:13,*V2LON,BCACCTP
          CALL      RDLEDG
          MATCH     "Z",ANS
          GOTO      TRACC8 IF NOT EQUAL
          MOVE      SP1,ANS
          MOVE      SP1,LCODEFLG
          GOTO      TRACC2
.
TRACC8    DISPLAY   *P18:13,*V2LON,BCACCTP,*P36:13,FMAMDESC,*EL
.
TRACC10   MOVE      "Y" TO LCODEFLG
          MOVE      BCACCTP TO HACC
.
.------------------------------------------------------------------------------
.         Enter Amount.
.------------------------------------------------------------------------------
.
BCAMT1    KEYIN     *P18:14,"___________",*P18:14,*V2LON,*RV,BCAMTA:
                    *P1:24,*EL;
          RESET     BCAMTA
          GOTO      BCAMT5
.
BCAMT2    MOVE      ZERO,HNAREC
.
BCAMT3    CALL      BALMULT
          MATCH     "A",ANS
          GOTO      TRCONT7 IF EQUAL
BCAMT4    CALL      CLRFLGS
          CALL      WRBATR0
          GOTO      GETINV
.
BCAMT5    CMATCH    "<",BCAMTA
          GOTO      BCAMT7 IF NOT EQUAL
          RESET     FNA
          CALL      MAMTU
          GOTO      TRACC1
.
BCAMT7    CMATCH    ">",BCAMTA
          GOTO      BCAMT1 IF EQUAL
.
BCAMT9    TYPE      BCAMTA
          GOTO      BCAMT12 IF EQUAL
.
BCAMT10   DISPLAY   *P1:24,*EL,*B,"Invalid Amount - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BCAMT1
.
BCAMT12   MOVE      BCAMTA,BCAMT
          COMPARE   ZERO,BCAMT
          GOTO      BCAMT10 IF EQUAL
          GOTO      BCAMT14 IF NOT LESS
.
BCAMT13   BEEP
          KEYIN     *P10:24,*V2LON,"Negative amount",*HOFF:
                    " - Are you sure (",*V2LON,"Y":
                    *HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS,*P1:24,*EL;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          CMATCH    "Y",ANS
          GOTO      BCAMT14 IF EQUAL
          CMATCH    "N",ANS
          GOTO      BCAMT1 IF EQUAL
          GOTO      BCAMT13
.
BCAMT14   DISPLAY   *P18:14,*V2LON,BCAMT
.
BCAMT14A  MOVE      BCAMT TO HAMT
          MATCH     "CS" TO BC1TRAN
          GOTO      TRCONT0 IF EQUAL
          MATCH     "PY",BC1TRAN
          GOTO      TRCONT2A IF NOT EQUAL
          MATCH     "00000" TO BCRED
          GOTO      TRCONT0 IF EQUAL
.
          MOVE      "IN",BC1TRAN
          CALL      GETC0000
          MOVE      "PY",BC1TRAN
          MOVE      BCCONT,BCACCTP
          GOTO      TRCONT0
.
.------------------------------------------------------------------------------
. FOR CASH RECEIPTS AND MANUAL PAYMENTS
. ENTER THE BANK CONTROL ACCOUNT
.------------------------------------------------------------------------------
TRCONT0   CALL      GETC0000
.
          KEYIN     *P1:16,*EL,"Cash at Bank Control A/C :":
                    *P28:16,*DV,BCCONT:
                    *P28:16,*V2LON,*RV,BCCONT:
                    *P28:16,*DV,BCCONT;
          PACK      KEY14,BCLEDG,BCCONT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,TRCONT0A
          DISPLAY   *P28:16,*V2LON,BCCONT,*HOFF:
                    *P40:16,FMAMDESC;
          CALL      RDFMCA1
          BRANCH    OVRCD,TRCONT0A
          COMPARE   "1",FMCATYP
          GOTO      TRCONT0A IF NOT EQUAL
          MOVE      FMCACHQ TO BCCHQAC
          GOTO      TRCONT0B
.
TRCONT0A  DISPLAY   *P1:24,*B,*EL,"Invalid Control Account - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRCONT0
.
TRCONT0B  PACK      KEY12,BCACCT,SP70
          KEYIN     *P1:17,*EL,"Debtors Control Account  :":
                    *P28:17,*DV,KEY12:
                    *P28:17,*V2LON,*RV,KEY12:
                    *P28:17,*DV,KEY12;
          PACK      KEY14,BCLEDG,KEY12,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,TRCONT0C
          DISPLAY   *P28:17,*V2LON,KEY12,*HOFF:
                    *P40:17,FMAMDESC;
          CALL      RDFMCA1
          BRANCH    OVRCD,TRCONT0C
          COMPARE   "4",FMCATYP
          GOTO      TRCONT0C IF NOT EQUAL
          PACK      BCACCT,KEY12,SP70
          MOVE      FMCACHQ TO BCCHQAC
          GOTO      TRCONT2B
.
TRCONT0C  DISPLAY   *P1:24,*B,*EL,"Invalid Control Account - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRCONT0B
.
TRCONT2A  CALL      GETC0000
          KEYIN     *P1:16,*EL,"Control Account      :":
                    *P28:16,*DV,BCCONT:
                    *P28:16,*V2LON,*RV,BCCONT:
                    *P28:16,*DV,BCCONT;
          PACK      KEY14,BCLEDG,BCCONT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,TRCONT0D
          DISPLAY   *P28:16,*V2LON,BCACCT,*HOFF:
                    *P40:16,FMAMDESC;
          CALL      RDFMCA1
          BRANCH    OVRCD,TRCONT0D
          COMPARE   "1",FMCATYP
          GOTO      TRCONT0D IF NOT EQUAL
          MOVE      FMCACHQ TO BCCHQAC
          GOTO      TRCONT2B
.
TRCONT0D  DISPLAY   *P1:24,*B,*EL,"Invalid Control Account - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      TRCONT2A
.
TRCONT2B  MOVE      "Y",LCODEFLG
.
TRCONT2C  MOVE      ZERO TO BCCOMXA
.
TRCONT3   MOVE      SP1,ANS
          KEYIN     *P1:24,*EL:
                    *P30:24,"Ok to post (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*V2LON,ANS,*P1:24,*EL;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      TRCONT4 IF EQUAL
          MATCH     "N",ANS
          GOTO      TRCONT3 IF NOT EQUAL
          MATCH     "0" TO LPFLAG
          GOTO      BCAMT4 IF EQUAL
          CALL      CLRFLGA
          GOTO      TRCONT7
.
TRCONT4   ADD       BCAMT,BC0BTCHT
          ADD       BCAMT,BC0SPLTP
          MOVE      BC1TRAN,BCTRAN
          CALL      WRITEREC
          DISPLAY   *P1:15,*EL,*P1:16,*EL,*P1:17,*EL;
.
TRCONT4A  CALL      CLRFLGA
          MOVE      "ORDER NO" TO DIM9
.
          MATCH     "PY" TO BC1TRAN               *Payment Transaction ??
          GOTO      TRCONTA IF NOT EQUAL        *Skip off if NO.
          MOVE      "CHEQUE NO" TO DIM9
          MOVE      HDTOT,BCDISC                *Set value from save field.
          COMPARE   ZERO TO BCDISC              *Payment Discount ?
          GOTO      TRCONTA IF EQUAL            *Skip off, if NO.
.
          SUB       WF8P2,WF8P2                 *Initialise
          ADD       BC0SPLTK,WF8P2
          ADD       BCDISC,WF8P2                *Add Payment to Discount
          SUB       BCDISC,BCDISC               *Empty out after use
          COMPARE   BCAMT,WF8P2                 *Split Payment transaction ?
          GOTO      BCAMT4 IF EQUAL             *Skip off if YES.
          GOTO      TRCONTB
.
TRCONTA   COMPARE   BCAMT,BC0SPLTK               *Split Transaction ??
          GOTO      TRCONTB IF NOT EQUAL
.
          MATCH     "0" TO LPFLAG
          GOTO      BCAMT4 IF EQUAL             *Skip off if YES.
.
TRCONTB   MATCH     "0",LPFLAG
          GOTO      TRCONT7 IF NOT EQUAL
.
.------------------------------------------------------------------------------
.    SAVE THE POINTER TO THE FIRST TRANSACTION OF THIS INVOICE
.------------------------------------------------------------------------------
.
          CALL      RDBATS0
          SUB       ONE FROM BC0NXTSC
          MOVE      BC0NXTSC TO BC0SPSEC
.
          MATCH     "CS" TO BC1TRAN
          GOTO      TRCONT5 IF EQUAL
.
          MATCH     "CE",BC1TRAN
          GOTO      TRCONT5 IF EQUAL
.
TRCONT4B  KEYIN     *P1:24,"This is a ",*V2LON,"Split Transaction ",*HOFF:
                    "- Return to Transaction Description (",*V2LON,"Y",*HOFF:
                    "/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      TRCONT6 IF EQUAL
.
TRCONT5   MOVE      "2",LPFLAG
          GOTO      TRCONT7
.
TRCONT6   MOVE      ONE,LPFLAG
.
TRCONT7   DISPLAY   *P18:11,"_____",*EL,*P18:12,"__":
                    *EL,*P18:13,"____________",*EL,*P18:14,"___________":
                    *EL
.
          MATCH     "CS",BC1TRAN
          CALL      DISPLAST IF EQUAL
.
          MATCH     "PY",BC1TRAN
          CALL      DISPLAST IF EQUAL
.
          MATCH     "IN",BC1TRAN
          CALL      DISPLAST IF EQUAL
.
          MATCH     ONEX,LPFLAG
          GOTO      BCDISS1 IF NOT EQUAL
.
          DISPLAY   *P18:9,"___________________________________",*EL:
                    *P18:10,"____",*EL
          MOVE      SP1,DESCFLG
          GOTO      BCTRAND1
.
ENDINV    RETURN
+
.------------------------------------------------------------------------------
.     DISPLAY THE LAST SPLIT ITEM WHEN DOING A CASH RECEIPT JOURNAL
.------------------------------------------------------------------------------
.
DISPLAST  DISPLAY   *P1:20,*ULON,"LAST SPLIT ENTERED",*HOFF:
                    *P1:21,"Ledger A/c   : ",*V2LON,BCLEDG,"/",BCACCTP,*HOFF:
                    *P1:22,"Split Amount :   ",*V2LON,BCAMT,*HOFF:
                    *P1:23,"Split  Total : ",*V2LON,BC0SPLTP
          RETURN
+
. +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.         WRITE OUT A BATCH RECORD
. +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.
WRITEREC  MOVE      " " TO BCCOMX
.
REC2A     MATCH     "000000000000" TO BCACCTP
          GOTO      REC3A IF EQUAL
          PACK      KEY14 WITH BCLEDG,BCACCTP,SP70
.
REC3A     PACK      BCDATEE WITH CDD,CMM,CCC,CYY
          REP       " 0",BCDATEE
.
          MATCH     "000000000000000",BCREFER
          GOTO      REC3 IF NOT EQUAL
          MOVE      BCORD,BCREFER
          MOVE      "00000000",BCORD
.
REC3      MOVE      ZERO,BCCOMX
          MOVE      BCLEDG TO BATLEDG
          REP       " 0" IN BATLEDG
.
REC30     CALL      RDBATS0
          ADD       ONE,BC0NXTSC
          CALL      WRBATS0
          SUBTRACT  ONE,BC0NXTSC
.
          MOVE      ZERO TO BCSTAT
          MOVE      SP70 TO BCCSPAR
          REP       " 0" IN BCDATEE
          REP       " 0" IN BCDATED
          REP       " 0" IN BCDATCX
.
          CALL      WRBATC
.
REC31     ADD       ONE,BC0NXTSC
          WEOF      BATFILE,BC0NXTSC
          CLOSE     BATFILE
          OPEN      BATFILE,BFILE
          SUBTRACT  ONE,BC0NXTSC
.
          MOVE      ZERO,ANS
          MOVE      ZERO,BCINVT
          MOVE      ZERO,BCDISC
.
WRECOUT   RESET     FNA
.
          ADD       ONE TO BC0NXTSC
          WEOF      BATFILE,BC0NXTSC
          CLOSE     BATFILE
.
          OPEN      BATFILE,BFILE
.
          CALL      WRBATR0
          RETURN
+
.------------------------------------------------------------------------------
.         MOVE DOWN SCREEN FROM CREDITORS CODE TO CREDITORS
.         REFERENCE FIELD (INVOICE NUMBER)
.------------------------------------------------------------------------------
.
MCREDD    MOVE      HCRCOD TO BCRED
          DISPLAY   *P12:4,*V2LON,BCRED,*P18:4,APMACN1:
                    *P18:5,APMACN2,*P18:6,APMACA1,*P18:7,APMACA2,*P43:7,APMACPC
.
          CMATCH    DASH1 TO HREF
          GOTO      MCREDD1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MCREDD1   DISPLAY   *P1:24,*V2LON,HREF,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN SCREEN FROM CREDITORS CODE TO DATE
.------------------------------------------------------------------------------
.
MCRDDAT   MOVE      HCRCOD TO BCRED
          DISPLAY   *P12:4,*V2LON,BCRED,*P18:4,APMACN1:
                    *P18:5,APMACN2,*P18:6,APMACA1,*P18:7,APMACA2,*P43:7,APMACPC
.
          MATCH     DASH1 TO HDATE
          GOTO      MCRDDAT1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MCRDDAT1  MOVE      HDATE TO BCDATED
          CALL      DATEMOVE
          DISPLAY   *P1:24,*V2LON,VDD,"/",VMM,"/",VCC,VYY,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE UP SCREEN FROM CREDITORS REFERENCE FIELD
.         (INVOICE NUMBER) TO CREDITORS CODE
.------------------------------------------------------------------------------
.
MREFUP    MOVE      HREF TO BCREFER
          DISPLAY   *P63:4,BCREFER
.
          CMATCH    DASH1 TO HCRCOD
          GOTO      MREFUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MREFUP1   DISPLAY   *P1:24,*V2LON,HCRCOD,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN SCREEN FROM CREDITORS REFERENCE TO DATE
.------------------------------------------------------------------------------
.
MREFD     MOVE      HREF,BCREFER
          DISPLAY   *P63:4,*V2LON,BCREFER
.
          CMATCH    DASH1 TO HDATE
          GOTO      MREFD1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MREFD1    MOVE      HDATE TO BCDATED
          CALL      DATEMOVE
          DISPLAY   *P1:24,*V2LON,VDD,"/",VMM,"/",VCC,VYY,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         Move up from date field to reference number
.------------------------------------------------------------------------------
.
MDTEUP    MOVE      HDATE TO BCDATED
          CMATCH    DASH1 TO HDATE
          GOTO      MDTEUPA IF EQUAL
.
          CALL      DATEMOVE
          DISPLAY   *P63:5,VDD,"/",VMM,"/",VCC,VYY
          GOTO      MDTEUPB
.
MDTEUPA   DISPLAY   *P63:5,DASH1
MDTEUPB   CMATCH    DASH1 TO HREF
          GOTO      MDTEUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MDTEUP1   DISPLAY   *P1:24,*V2LON,HREF,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE UP FROM DATE FIELD TO CREDITORS CODE
.------------------------------------------------------------------------------
.
MDATCR    MOVE      HDATE TO BCDATED
          CMATCH    DASH1 TO HDATE
          GOTO      MDATCRA IF EQUAL
.
          CALL      DATEMOVE
          DISPLAY   *P63:5,VDD,"/",VMM,"/",VCC,VYY
          GOTO      MDATCRB
.
MDATCRA   DISPLAY   *P63:5,DASH1
MDATCRB   CMATCH    DASH1 TO HCRCOD
          GOTO      MDATCR1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MDATCR1   DISPLAY   *P1:24,*V2LON,HCRCOD,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN FROM DATE FIELD TO GROSS TOTAL
.------------------------------------------------------------------------------
.
MDTED     MOVE      HDATE TO BCDATED
          CMATCH    DASH1 TO HDATE
          GOTO      MDTEDA IF EQUAL
.
          CALL      DATEMOVE
          DISPLAY   *P63:5,*V2LON,VDD,"/",VMM,"/",VCC,VYY
          GOTO      MDTEDB
.
MDTEDA    DISPLAY   *P63:5,DASH1
MDTEDB    CMATCH    DASH1 TO HGTOT
          GOTO      MDTED1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MDTED1    DISPLAY   *P1:24,*V2LON,HGTOT,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE UP SCREEN FROM GROSS TOTAL TO DATE
.------------------------------------------------------------------------------
.
MGRUP     MOVE      HGTOT TO BCAMTA
          DISPLAY   *P63:6,BCAMTA
.
          CMATCH    DASH1 TO HDATE
          GOTO      MGRUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MGRUP1    MOVE      HDATE TO BCDATED
          CALL      DATEMOVE
          DISPLAY   *P1:24,*V2LON,VDD,"/",VMM,"/",VCC,VYY,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN SCREEN FROM GROSS TOTAL TO DISCOUNT/PAY PERIOD
.------------------------------------------------------------------------------
.
MGRED     MOVE      HGTOT TO BCINVT
          DISPLAY   *P63:6,*V2LON,BCINVT
.
          MATCH     "PY" TO BC1TRAN
          GOTO      MGREDD IF EQUAL
.
          MATCH     "IN" TO BC1TRAN
          GOTO      MGREDD IF EQUAL
.
          CMATCH    DASH1 TO HPP
          GOTO      MGRED1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MGRED1    DISPLAY   *P1:24,*V2LON,HPP,*EL;
          RETURN
.
MGREDD    CMATCH    DASH1 TO HDTOT
          GOTO      MGRED2 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MGRED2    DISPLAY   *P1:24,*V2LON,HDTOT,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE UP SCREEN FROM DISCOUNT TO GROSS TOTAL
.------------------------------------------------------------------------------
.
MDISUP    MOVE      HDTOT TO BCAMTA
          DISPLAY   *P63:7,BCAMTA
.
          CMATCH    DASH1 TO HGTOT
          GOTO      MDISUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MDISUP1   DISPLAY   *P1:24,*V2LON,HGTOT,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN SCREEN FROM DISCOUNT TO PAY PERIOD
.------------------------------------------------------------------------------
.
MDISED    MOVE      HDTOT TO BCDISC
          DISPLAY   *P63:7,*V2LON,BCDISC
.
          CMATCH    DASH1 TO HPP
          GOTO      MDISED1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MDISED1   DISPLAY   *P1:24,*V2LON,HPP,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE UP FROM PAY PERIOD TO DISCOUNT/GROSS TOTAL
.------------------------------------------------------------------------------
.
MPAYUP    RESET     HPP
          MOVE      HPP TO QP
          BUMP      HPP
          MOVE      HPP TO QPN
          RESET     HPP
          DISPLAY   *P63:8,QP,QPN
.
          MATCH     "PY" TO BC1TRAN
          GOTO      MPAYUP2 IF EQUAL
          MATCH     "IN" TO BC1TRAN
          GOTO      MPAYUP2 IF EQUAL
.
          CMATCH    DASH1 TO HGTOT
          GOTO      MPAYUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MPAYUP1   DISPLAY   *P1:24,*V2LON,HGTOT,*EL;
          RETURN
.
MPAYUP2   CMATCH    DASH1 TO HDTOT
          GOTO      MPAYUP3 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MPAYUP3   DISPLAY   *P1:24,*V2LON,HDTOT,*EL;
          RETURN
+
*
.------------------------------------------------------------------------------
.         MOVE UP FROM PAY PERIOD TO GROSS TOTAL
.------------------------------------------------------------------------------
.
MAGEUP    RESET     HPP
          CMOVE     HPP TO QP
          RESET     HPP
          DISPLAY   *P63:8,QP
.
          CMATCH    DASH1 TO HGTOT
          GOTO      MAGEUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MAGEUP1   DISPLAY   *P1:24,*V2LON,HGTOT,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN FROM ORDER NUMBER TO TRANSACTION DESCRIPTION
.------------------------------------------------------------------------------
.
MLPOD     MOVE      HORD,BCORD
          DISPLAY   *P18:8,*V2LON,BCORD
.
          CMATCH    DASH1 TO HDESC
          GOTO      MLPOD1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MLPOD1    DISPLAY   *P1:24,*V2LON,HDESC,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         Move DOWN from Transaction Description TO Work Group
.------------------------------------------------------------------------------
.
MLDES     MOVE      HDESC,BCTRAND
          DISPLAY   *P18:9,*V2LON,BCTRAND
.
          CMATCH    DASH1 TO HWORK
          GOTO      MLDES1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MLDES1    DISPLAY   *P1:24,*V2LON,HWORK,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         Move up screen from Transaction Description to Order Number
.------------------------------------------------------------------------------
.
MDESUP    MOVE      HDESC TO BCTRAND
          DISPLAY   *P18:9,BCTRAND
.
          CMATCH    DASH1 TO HORD
          GOTO      MDESUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MDESUP1   DISPLAY   *P1:24,*V2LON,HORD,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         Move up screen from work group to Transaction Description
.------------------------------------------------------------------------------
.
MWRKUP    MOVE      HWORK TO BCRESP
          DISPLAY   *P18:10,BCRESP,*P36:10,FMRSDESC
.
          CMATCH    DASH1 TO HDESC
          GOTO      MWRKUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MWRKUP1   DISPLAY   *P1:24,*V2LON,HDESC,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         Move down screen from work group to dissection
.------------------------------------------------------------------------------
.
MWRKED    MOVE      HWORK TO BCRESP
          DISPLAY   *P18:10,*V2LON,BCRESP,*P36:10,FMRSDESC
.
          CMATCH    DASH1 TO HDISS
          GOTO      MWRKED1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MWRKED1   DISPLAY   *P1:24,*V2LON,HDISS,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE  UP SCREEN FROM DISSECTION TO WORK GROUP
.------------------------------------------------------------------------------
.
MDISSUP   MOVE      HDISS TO BCDISS
          DISPLAY   *P18:11,BCDISS
.
          CMATCH    DASH1 TO HWORK
          GOTO      MDISSUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MDISSUP1  DISPLAY   *P1:24,*V2LON,HWORK,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN SCREEN FROM DISSECTION TO LEDGER
.------------------------------------------------------------------------------
.
MDISSED   MOVE      HDISS TO BCDISS
          DISPLAY   *P18:11,*V2LON,BCDISS
.
          CMATCH    DASH1 TO HLEDG
          GOTO      MDISSED1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MDISSED1  DISPLAY   *P1:24,*V2LON,HLEDG,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE UP SCREEN FROM LEDGER TO DISSECTION CODE
.------------------------------------------------------------------------------
.
MLEDUP    MOVE      HLEDG TO BCLEDG
          DISPLAY   *P18:12,BCLEDG
.
          CMATCH    DASH1 TO HLEDG
          GOTO      MLEDUPA IF EQUAL
.
          DISPLAY   *P36:12,LEDGERNM
.
MLEDUPA   CMATCH    DASH1 TO HDISS
          GOTO      MLEDUP1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MLEDUP1   DISPLAY   *P1:24,*V2LON,HDISS,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN SCREEN FROM LEDGER TO ACCOUNT CODE
.------------------------------------------------------------------------------
.
MLEDED    MOVE      HLEDG TO BCLEDG
          DISPLAY   *P18:12,*V2LON,BCLEDG
.
          CMATCH    DASH1 TO HLEDG
          GOTO      MLEDEDA IF EQUAL
.
          DISPLAY   *P36:12,*V2LON,LEDGERNM
.
MLEDEDA   CMATCH    DASH1 TO HACC
          GOTO      MLEDED1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MLEDED1   DISPLAY   *P1:24,*V2LON,HACC,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE UP FROM A/C CODE TO LEDGER NUMBER
.------------------------------------------------------------------------------
.
MLCODEU   MOVE      HACC TO BCACCTP
          DISPLAY   *P18:13,BCACCTP,*P36:13,FMAMDESC
.
          CMATCH    DASH1 TO HLEDG
          GOTO      MLCODEU1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MLCODEU1  DISPLAY   *P1:24,*V2LON,HLEDG,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE DOWN FROM A/C CODE TO AMOUNT
.------------------------------------------------------------------------------
.
MLCODED   MOVE      HACC TO BCACCTP
          DISPLAY   *P18:13,*V2LON,BCACCTP,*P36:13,FMAMDESC
.
          CMATCH    DASH1  TO HAMT
          GOTO      MLCODED1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MLCODED1  DISPLAY   *P1:24,*V2LON,HAMT,*EL;
          RETURN
*
.------------------------------------------------------------------------------
.         MOVE UP FROM AMOUNT TO ACCOUNT CODE
.------------------------------------------------------------------------------
.
MAMTU     MOVE      HAMT TO BCAMTA
          DISPLAY   *P18:14,BCAMTA
.
          MATCH     "PY" TO BC1TRAN
          GOTO      MAMTUA IF EQUAL
.
          CMATCH    DASH1 TO HACC
          GOTO      MAMTU1 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MAMTU1    DISPLAY   *P1:24,*V2LON,HACC,*EL;
          RETURN
.
MAMTUA    CMATCH    DASH1 TO HLEDG
          GOTO      MAMTU2 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL;
          RETURN
.
MAMTU2    DISPLAY   *P1:24,*V2LON,HLEDG,*EL;
          RETURN
+
*
.------------------------------------------------------------------------------
.         CLEAR UP AND DOWN FLAGS
.------------------------------------------------------------------------------
.
CLRFLGS   MOVE      SP1,LEDGFLG
          MOVE      SP1,MLRECFLG
          MOVE      ZERO,BC0SPSEC
          SUBTRACT  BC0SPLTP,BC0SPLTP
          SUBTRACT  BC0SPLTK,BC0SPLTK
          MOVE      SP1,CREDFLG
          MOVE      SP1,REFFLG
          MOVE      SP1,DTEFLG
          MOVE      SP1,GRTOTFLG
          MOVE      SP1,PAYFLG
          MOVE      SP1,DISCFLG
          MOVE      "_____" TO HCRCOD
          MOVE      "________" TO HDATE
          MOVE      "_______________" TO HREF
          MOVE      "___________" TO HGTOT
          MOVE      "___________" TO HDTOT
          MOVE      "__" TO HPP
CLRFLGA   MOVE      SP1,DISFLG
          MOVE      SP1,LPOFLG
          MOVE      SP1,DESCFLG
          MOVE      SP1,WRKFLG
          MOVE      SP1,LEDGFLG
          MOVE      SP1,LCODEFLG
.
          MOVE      "_____" TO HDISS
          MOVE      "____" TO HWORK
          MOVE      "________" TO HORD
          MOVE      "__" TO HLEDG
          MOVE      "____________" TO HACC
          MOVE      "___________" TO HAMT
          MOVE      "___________________________________" TO HDESC
          RETURN
+
DATEMOVE  UNPACK    BCDATED INTO DDF,MMF,CCF,YYF
          MOVE      DDF TO VDD
          MOVE      MMF TO VMM
          MOVE      CCF TO VCC
          MOVE      YYF TO VYY
          CALL      DATEVAL
          RETURN
+
.------------------------------------------------------------------------------
.         RECALL THE LAST RECORD ENTERED
.------------------------------------------------------------------------------
.
GETLAST   CALL      RDBATS0
          SUBTRACT  ONE,BC0NXTSC
.
LAST2     COMPARE   TWO,BC0NXTSC
          GOTO      LAST1 IF LESS
.
          CALL      RDBATC
.
          UNPACK    BCPAYT INTO QP,QPN
          UNPACK    BCDATEE INTO DDF,MMF,CCF,YYF
          MOVE      DDF TO VDD
          MOVE      MMF TO VMM
          MOVE      CCF TO VCC
          MOVE      YYF TO VYY
.
          MATCH     "XX",BCTRAN
          GOTO      LAST2B IF NOT EQUAL
          SUBTRACT  ONE,BC0NXTSC
          GOTO      LAST2
.
LAST2B    CALL      DINVDET
.
          SUBTRACT  ONE,BC0NXTSC
          DISPLAY   *P5:24,"* Above is Record ",*V2LON,BC0NXTSC,*HOFF:
                    " in Batch - Enter L for more else ENTER *";
          KEYIN     *P75:24,*V2LON,ANS,*P1:24,*EL;
          MATCH     "L",ANS
          GOTO      LAST2 IF EQUAL
          GOTO      LASTOUT
.
LAST1     DISPLAY   *P1:24,*EL,*B,"There are no more Records in that":
                    " Batch - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
.
LASTOUT   RETURN
+
*
.------------------------------------------------------------------------------
.         * GET THE CREDITORS CONTROL RECORD
.------------------------------------------------------------------------------
GETC0000  MOVE      FMLABNK,FMCSBNK
          MOVE      FMLACRD,FMCSCRD
          MOVE      FMLADIS,FMCSDIS
          MOVE      FMLADEB,FMCSDEB
          PACK      KEY14,BCLEDG,BCACCTP,SP70
          CALL      RDFMCS1
.
          MATCH     SP70,FMCSBNK
          GOTO      GETC0010 IF NOT EQUAL
          MOVE      FMLABNK,FMCSBNK
GETC0010
          MATCH     SP70,FMCSCRD
          GOTO      GETC0020 IF NOT EQUAL
          MOVE      FMLACRD,FMCSCRD
GETC0020
          MATCH     SP70,FMCSDIS
          GOTO      GETC0030 IF NOT EQUAL
          MOVE      FMLADIS,FMCSDIS
GETC0030
          MATCH     SP70,FMCSDEB
          GOTO      GETC0040 IF NOT EQUAL
          MOVE      FMLADEB,FMCSDEB
GETC0040
          MOVE      "          " TO BCCHEQ
          MOVE      "            " TO BCCONT
          MOVE      "            " TO BCDISCC
.
GETC0300  MOVE      FMCSBNK,BCCONT
          MOVE      FMCSDEB,BCACCT
.
GETC0400  MATCH     "000000000000" TO BCCONT
          GOTO      GETC0500 IF EQUAL
.
          MATCH     "            " TO BCCONT
          GOTO      GETC0500 IF EQUAL
          MATCH     "            " TO BCACCT
          GOTO      GETC0500 IF EQUAL
.
          PACK      KEY14 WITH BCLEDG,BCCONT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,GETC0500
.
          PACK      KEY14 WITH BCLEDG,BCACCT,SP70
          CALL      RDFMAM1
          COMPARE   ZERO TO OVRCD
          GOTO      GETC9999 IF EQUAL
.
GETC0500  KEYIN     *P1:24,"Control Account Missing - ",*V2LON:
                    *BLINKON,"SERIOUS SYSTEM ERROR",*HOFF," - Suspend all":
                    " further input ... ",ANS;
          GOTO      ENDNOW
.
GETC9999  RETURN
.------------------------------------------------------------------------------
.         * DISPLAY RECALLED  DETAILS
.------------------------------------------------------------------------------
.
DINVDET   CALL      DATEMOVE
          CALL      DISPINV
.
          DISPLAY   *P21:3,"** Recalled Record  - ",*V2LON,BCTRAN,*HOFF," **":
                    *P16:4,*V2LON,BCRED,*P63:4,BCREFER,*P63:5,VDD,"/",VMM:
                    "/",VYY,*P63:6,BCINVT,*P63:7,BCDISC,*P18:8,BCORD:
                    *P63:8,QP,QPN,*P18:9,BCTRAND,*P18:10,BCRESP,*P18:11,BCDISS:
                    *P18:12,BCLEDG,*P18:13,BCACCTP,*P22:14,BCAMT,*EL
          RETURN
+
.------------------------------------------------------------------------------
.
.------------------------------------------------------------------------------
.
READLEDG  MOVE      SP70,FMLADESC
          PACK      KEY2,BCLEDG,SP70
          CALL      RDFMLA1
          RETURN
+
.------------------------------------------------------------------------------
.         * PROVIDES THE FACILITY TO ADD TO AN EXISTING BATCH
.------------------------------------------------------------------------------
.
ADDBATCH  MOVE      ZERO TO FLEFLAG
          KEYIN     *P39:4,"__",*P39:5,"_____",*P39:5,*JR,*ZF,*V2LON,BCBATCH
          MATCH     "0000*",BCBATCH
          GOTO      ADD2A IF NOT EQUAL
.
ADDB10    MOVE      "X",ERRFLAG
          GOTO      ADDOUT1
.
ADD2A     TYPE      BCBATCH
          GOTO      ADD1 IF EQUAL
.
ADD2      DISPLAY   *P1:24,*EL,*B,"Invalid Batch Number - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      ADDBATCH
.
ADD1      MATCH     "00000",BCBATCH
          GOTO      ADD2 IF EQUAL
.
          CLEAR     BFILE
          APPEND    "bch",BFILE
          APPEND    BCBATCH,BFILE
          RESET     BFILE
          TRAP      NAFILE IF IO
          OPEN      BATFILE,BFILE
          MATCH     "Y",FLEFLAG
          GOTO      ADD2 IF EQUAL
.
ADD3      MOVE      BC1TRAN TO BCTRAN
          TRAP      NAFILE IF RANGE
          TRAP      NAFILE IF FORMAT
          CALL      RDBAT1
          MATCH     "Y",FLEFLAG
          GOTO      ADD30 IF NOT EQUAL
          MOVE      ZERO,FLEFLAG
          BEEP
          KEYIN     *P10:24,*V2LON,"*** No Header written to that File -":
                    " Press ENTER to delete *** ",ANS,*P1:24,*EL;
.
          CLOSE     BATFILE
          PREP      BATFILE,BFILE
          CLOSE     BATFILE
          GOTO      ADDB10
.
ADD30     COMPARE   ONE,BC1STAT
          GOTO      ADD6 IF NOT EQUAL
          KEYIN     *P18:24,*V2LON,"*** Someone else is using that Batch *** ":
                    ANS,*P1:24,*EL;
          MATCH     "R",ANS
          GOTO      ADDBATCH IF NOT EQUAL
          MOVE      BC1TRAN,DIM2
          MOVE      "RS",DIM2RED
          MOVE      ONE,BC1REST
          CALL      WRBATR1
          GOTO      ADD8
.
ADD6      COMPARE   TWO,BC1STAT
          GOTO      ADD8 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"You can only add to Unbalanced Batches":
                    " - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      ADDBATCH
.
ADD8      MOVE      BC1LEDG TO BCLEDG
          CALL      READLEDG
          GOTO      ADD4 IF NOT OVER
.
          DISPLAY   *P1:24,*EL,*B,"System Error on adding Batch - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      ENDNOW
.
ADD4      UNPACK    BC1BDATE INTO DDF,MMF,CCF,YYF
          MOVE      DDF TO IBDAY
          MOVE      MMF TO IBMTH
          MOVE      CCF TO IBCCC
          MOVE      YYF TO IBYRR
.
          MOVE      IBDAY,CDAY
          MOVE      IBMTH,CMON
          MOVE      IBCCC,CCENT
          MOVE      IBYRR,CYEAR
          CALL      PACDATE
          DISPLAY   *P39:4,*V2LON,BC1LEDG:
                    *P39:6,CPCDATE:
                    *P39:7,BC1DISS,*P39:8,BC1RESP:
                    *P39:9,BC1KEYT
.
          MATCH     BCTRAN,BC1TRAN
          GOTO      ADD5 IF EQUAL
.
          DISPLAY   *P1:24,*V2LON,"Existing Record type does not match ":
                    "new selection - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      ADD5A
.
ADD5      DISPLAY   *P39:5,*V2LON,BCBATCH,"/",BC1TRAN
.
          KEYIN     *P10:13,"Ok to continue (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*V2LON,ANS
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      ADDOUT IF EQUAL
.
          MATCH     "N",ANS
          GOTO      ADD5 IF NOT EQUAL
.
ADD5A     MOVE      "X",ERRFLAG
          GOTO      ADDOUT1
.
ADDOUT    MATCH     "PY" TO BC1TRAN
          GOTO      ADDOUT0 IF EQUAL
.
          MATCH     "CS" TO BC1TRAN
          GOTO      ADDOUT0A IF NOT EQUAL
.
ADDOUT0   CALL      RDBATE
          MOVE      BCCONT TO BNKACCT
.
ADDOUT0A  MOVE      ONE,BC1STAT
          CALL      WRBATS1
          MOVE      BC1ACCT TO BC0BTCHT
          MOVE      SP1,ERRFLAG
.
          MATCH     "RS",DIM2RED
          GOTO      ADDA IF NOT EQUAL
.
          CALL      RSTART
.
          MATCH     "E",ANS
          GOTO      ADD5A IF EQUAL
.
          MATCH     "H",ANS
          GOTO      ADDA10 IF NOT EQUAL
.
          MOVE      "  ",DIM2
          GOTO      ADDA
.
ADDA10    COMPARE   ZERO,SECT
          GOTO      ADDOUT1 IF EQUAL
.
ADDA      MOVE      "Y",LASUSP
.
          PACK      KEY7 WITH BC1LEDG,BCBATCH
.
ADDOUT1   MOVE      "Z",FLEFLAG
          MOVE      "Z",AFLAG
.
          RETURN
+
.------------------------------------------------------------------------------
.         Read a creditor's record given the creditor code.
.------------------------------------------------------------------------------
.
READCRED  REPLACE   " 0",BCRED
          MOVE      BCRED,KEY5
          MOVE      SP1,ANS
.
          CALL      RDAPMA1
          BRANCH    OVRCD TO INVCRDS
.
          MOVE      APMACPC TO POSTF
          MOVE      POSTF TO APMACPC
          RETURN
.
INVCRDS   DISPLAY   *P1:24,*EL,*B,"Invalid Creditors Code - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          MOVE      "Z",ANS
          RETURN
+
.------------------------------------------------------------------------------
.         Read a ledger record.
.------------------------------------------------------------------------------
.
RDLEDG    PACK      KEY14 WITH BCLEDG,BCACCTP,SP70
          PACK      FMAMDESC,SP70
.
          CALL      RDFMAM1
.
          COMPARE   ZERO TO OVRCD
          GOTO      LD2 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Account Code - ";
          CALL      HITENTER
.
LD3       DISPLAY   *P1:24,*EL;
          MOVE      "Z",ANS
          GOTO      RDLDOUT
.
LD2       MOVE      FMAMTYPE,F2
          COMPARE   SIX TO F2
          GOTO      LD4 IF LESS
.
          MOVE      FMAMTYPE,F2
          COMPARE   FOUR TO F2                   x!
          GOTO      LD20 IF NOT EQUAL
.
          MATCH     "PY" TO BC1TRAN
          GOTO      LD4 IF EQUAL
          GOTO      LD2A
.
LD20      COMPARE   ONE TO FMAMCTRL
          GOTO      LD2A IF NOT EQUAL
.
          MATCH     "PY" TO BC1TRAN
          GOTO      LD2A IF NOT EQUAL
.
          MATCH     "00000" TO BCRED
          GOTO      LD4 IF EQUAL
.
LD2A      DISPLAY   *P1:24,*EL,*B,"Invalid Account Type - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      LD3
.
LD4       COMPARE   ZERO,FMAMSTAT
          GOTO      RDLDOUT IF EQUAL
.
          RESET     FNA
.
          KEYIN     *V2LON,*P11:17,"*** Transactions not authorised ***":
                    *P11:18,"***           on this           ***":
                    *P11:19,"***      Suspended Account      ***":
                    *EOFF,PASSWORD:
                    *P11:17,"                                   ":
                    *P11:18,"                                   ":
                    *P11:19,"                                   "
.
          MOVE      "Z",ANS
          GOTO      RDLDOUT
.
RDLDOUT   RETURN
+
*
.------------------------------------------------------------------------------
.         Prepare program for correct input transactions
.------------------------------------------------------------------------------
.
IDENTRN   RESET     FNA
.
          MATCH     "INVM " TO FNA
          GOTO      IDEN3 IF NOT EQUAL
.
          MOVE      "IN" TO BC1TRAN
          MOVE      "__" TO DASH2
          MOVE      "___" TO DASH3
          MOVE      "_____" TO DASH5
          MOVE      "_______________" TO DASH15
          MOVE      "________" TO DASH8
          MOVE      "___________" TO DASH11
          MOVE      "___________________________________" TO DASH35
          MOVE      "Invoice No.:" TO TRCONSTA
          MOVE      "Order Number   :" TO TRCONSTB
          MOVE      "Date       :" TO TRCONSTC
          MOVE      "Gross Total:" TO TRCONSTD
          MOVE      "Pay Period :" TO TRCONSTE
          MOVE      "Discount   :" TO TRCONSTF
          MOVE      "Creditor :" TO TRCONSTG
          MOVE      "Description " TO TRCONSTI
          MOVE      "INVOICE    " TO TRCONST1
          GOTO      IDENOUT
.
IDEN4     BEEP
.
          KEYIN     *P18:24,*V2LON,"*** ",*BLINKON,"SYSTEM ERROR",*HOFF:
                    *V2LON," - Invalid entry to program *** ",ANS;
          GOTO      ENDNOW
.
IDEN3     MATCH     "PREM ",FNA
          GOTO      IDEN6 IF NOT EQUAL
.
          MOVE      "PY",BC1TRAN
          MOVE      "  " TO DASH2
          MOVE      "___" TO DASH3
          MOVE      "_____" TO DASH5
          MOVE      "_______________" TO DASH15
          MOVE      "________" TO DASH8
          MOVE      "___________" TO DASH11
          MOVE      "___________________________________" TO DASH35
          MOVE      "Invoice No.:" TO TRCONSTA
          MOVE      "Cheque Number  :" TO TRCONSTB
          MOVE      "Pay Date   :" TO TRCONSTC
          MOVE      "Pay Total  :" TO TRCONSTD
          MOVE      "            " TO TRCONSTE
          MOVE      "Discount   :" TO TRCONSTF
          MOVE      "Creditor :" TO TRCONSTG
          MOVE      "Description " TO TRCONSTI
          MOVE      "PAYMENT    " TO TRCONST1
          GOTO      IDENOUT
.
IDEN6     MATCH     "CREM " TO FNA
          GOTO      IDEN8 IF NOT EQUAL
.
          MOVE      "CR" TO BC1TRAN
.         MOVE      "_ " TO DASH2
          MOVE      "__" TO DASH2
          MOVE      "___" TO DASH3
          MOVE      "_____" TO DASH5
          MOVE      "_______________" TO DASH15
          MOVE      "________" TO DASH8
          MOVE      "___________" TO DASH11
          MOVE      "___________________________________" TO DASH35
          MOVE      "Credit No. :" TO TRCONSTA
          MOVE      "Order Number   :" TO TRCONSTB
          MOVE      "Date       :" TO TRCONSTC
          MOVE      "Cred. Total:" TO TRCONSTD
          MOVE      "Pay Period :" TO TRCONSTE
          MOVE      "            " TO TRCONSTF
          MOVE      "Creditor :" TO TRCONSTG
          MOVE      "Description " TO TRCONSTI
          MOVE      "CREDIT     " TO TRCONST1
          GOTO      IDENOUT
.
IDEN8     MATCH     "CSHM " TO FNA
          GOTO      IDEN10 IF NOT EQUAL
.
          MOVE      "CS" TO BC1TRAN
          MOVE      "  " TO DASH2
          MOVE      "   " TO DASH3
          MOVE      "     " TO DASH5
          MOVE      "_______________" TO DASH15
          MOVE      "        " TO DASH8
          MOVE      "___________" TO DASH11
          MOVE      "___________________________________" TO DASH35
          MOVE      "Receipt Ref:" TO TRCONSTA
          MOVE      "                " TO TRCONSTB
          MOVE      "Date       :" TO TRCONSTC
          MOVE      "Rec. Total :" TO TRCONSTD
          MOVE      "            " TO TRCONSTE
          MOVE      "            " TO TRCONSTF
          MOVE      SP10 TO TRCONSTG
          MOVE      SP10 TO TRCONSTH
          MOVE      "Description " TO TRCONSTI
          MOVE      "RECEIPT    " TO TRCONST1
          GOTO      IDENOUT
.
IDEN10    MATCH     "REFM " TO FNA
          GOTO      IDEN15 IF NOT EQUAL
.
          MOVE      "RF" TO BC1TRAN
          MOVE      "  " TO DASH2
          MOVE      "___" TO DASH3
          MOVE      "_____" TO DASH5
          MOVE      "_______________" TO DASH15
          MOVE      "________" TO DASH8
          MOVE      "____________" TO DASH11
          MOVE      "___________________________________" TO DASH35
          MOVE      "Invoice No.:" TO TRCONSTA
          MOVE      "Order Number   :" TO TRCONSTB
          MOVE      "Date       :" TO TRCONSTC
          MOVE      "Ref. Total :" TO TRCONSTD
          MOVE      "             " TO TRCONSTE
          MOVE      "             " TO TRCONSTF
          MOVE      "Creditor :" TO TRCONSTG
          MOVE      "Description " TO TRCONSTI
          MOVE      "REFUND      " TO TRCONST1
          GOTO      IDENOUT
.
IDEN15    MATCH     "COMM " TO FNA
          GOTO      IDEN4 IF NOT EQUAL
.
          MOVE      "CE" TO BC1TRAN
          MOVE      "  " TO DASH2
          MOVE      "___" TO DASH3
          MOVE      "_____" TO DASH5
          MOVE      "               " TO DASH15
          MOVE      "________" TO DASH8
          MOVE      "___________________________________" TO DASH35
          MOVE      "___________" TO DASH11
          MOVE      "COMMITTED  " TO TRCONST1
          MOVE      "            " TO TRCONSTA
          MOVE      "Order Number   :" TO TRCONSTB
          MOVE      "Date       :" TO TRCONSTC
          MOVE      "Comm. Total:" TO TRCONSTD
          MOVE      "            " TO TRCONSTE
          MOVE      "            " TO TRCONSTF
          MOVE      "Creditor :" TO TRCONSTG
          MOVE      "Description " TO TRCONSTI
.
IDENOUT   RETURN
+
.------------------------------------------------------------------------------
.         Balance entries from multiple postings
.------------------------------------------------------------------------------
.
BALMULT   MOVE      SP1,MULFLG
.
          MATCH     "PY",BC1TRAN
          GOTO      BALM1 IF NOT EQUAL
.
          MOVE      HDTOT,BCDISC                *Reset BCDISC with Discount
.
          COMPARE   ZERO,BCDISC                 *Was a discount value
          GOTO      BALM1 IF EQUAL              *entered for this payment
.
          SUB       WF8P2,WF8P2                 *Initialise.
          ADD       BC0SPLTK,WF8P2               *Ensure that,
          ADD       BCDISC,WF8P2                *Payment + Discount = Invoice
.
          COMPARE   WF8P2,BC0SPLTP
          GOTO      BALMOUT IF EQUAL            *Both = so EXIT.
.
          GOTO      BALM1A                      *Pay. + Disc. must equal.
.
BALM1     COMPARE   BC0SPLTP,BC0SPLTK
          GOTO      BALMOUT IF EQUAL
.
BALM1A    COMPARE   ZERO,BC0SPSEC
          GOTO      BALM2A IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"There are no Transactions to that":
                    " Invoice - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
.
          MOVE      "            " TO BCACCTP
          GOTO      BALMOUT
.
BALM2A    MOVE      BC0SPSEC,HNREC
.
BALM2     KEYIN     *P1:24,*EL,*V2LON,"*** UNBALANCED !!! *** ",*HOFF:
                    "Options available are (",*V2LON,"D",*HOFF,",",*V2LON,"R":
                    *HOFF,",",*V2LON,"C",*HOFF,",",*V2LON,"A",*HOFF,",",*V2LON:
                    "N",*HOFF,",",*V2LON,"?",*HOFF,") : ",*V2LON,ANS,*P1:24,*EL;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
BALM2AA   MATCH     "A",ANS
          GOTO      BALM2A1 IF NOT EQUAL
.
          GOTO      BALMOUT
.
BALM2A1   MATCH     "N",ANS
          GOTO      BALM2C IF NOT EQUAL
.
          COMPARE   ZERO,HNAREC
          GOTO      BALM2 IF EQUAL
.
          MOVE      HNAREC,HNREC
          GOTO      BALM3A
.
BALM2C    MATCH     "?",ANS
          GOTO      BALM2B IF NOT EQUAL
.
          DISPLAY   *P50:24,"* I got : ",*V2LON,BC0SPLTP;
.
          KEYIN     *P75:24,ANS,*C,*EL;
          GOTO      BALM2
.
BALM2B    MATCH     "D",ANS
          GOTO      BALM4D IF NOT EQUAL
.
          KEYIN     *P30:24,"Are you sure (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*V2LON,ANS,*P11:24,*EL;
.
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      BALM4 IF EQUAL
.
          GOTO      BALM2
.
BALM4     CALL      RDBATS0
.
BALM4B    COMPARE   HNREC,BC0NXTSC
          GOTO      BALM4C IF EQUAL
.
          CALL      RDBATO
.
          MATCH     "XX",BCTRAN
          GOTO      BALM4BX IF NOT EQUAL
.
          ADD       ONE,HNREC
          GOTO      BALM4B
.
BALM4BX   SUBTRACT  BCAMT,BC0SPLTP
          SUBTRACT  BCAMT,BC0BTCHT
          ADD       ONE,HNREC
          GOTO      BALM4B
.
BALM4C    MOVE      BC0SPSEC TO BC0NXTSC
          CALL      WRBATS0
.
          DISPLAY   *P1:24,*EL,*B,"The above complete Invoice has been ":
                    "Deleted - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BALMOUT
.
BALM4D    MATCH     "R",ANS
          GOTO      BALM6 IF NOT EQUAL
.
          CALL      RDBATS0
.
BALM5     COMPARE   BC0NXTSC,HNREC
          GOTO      BALM3 IF LESS
.
          DISPLAY   *P1:24,*EL,*B,"There are no more breakups to that ":
                    "Invoice - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
.
          COMPARE   BC0SPLTP,BC0SPLTK
          GOTO      BALMOUT IF EQUAL
.
          GOTO      BALM2A
.
BALM6     MATCH     "C",ANS
          GOTO      BALM2 IF NOT EQUAL
.
          MOVE      ZERO,BCINVT
          KEYIN     *P63:6,*EL,"___________",*P63:6,*V2LON,BCINVT
          DISPLAY   *P63:6,*EL,*P65:6,*V2LON,BCINVT
          MOVE      BCINVT TO BC0SPLTK
          CALL      WRBATT
          GOTO      BALMULT
.
BALM3     CALL      MODBRK
.
          MATCH     "E",ANS
          GOTO      BALM3B IF NOT EQUAL
.
          MOVE      SP1,ANS
          GOTO      BALM3A
.
BALM3B    KEYIN     *P1:24,"Enter = Next record (No more, Skip, ":
                    "Change amount, Delete entry) : ":
                    *V2LON,*P1:24,"Enter",*P22:24,"N",*P31:24,"S":
                    *P37:24,"C",*P52:24,"D",*P69:24,ANS,*P1:24,*EL;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "S",ANS
          GOTO      BALM3B1 IF NOT EQUAL
.
          KEYIN     *P30:24,"How many ? : ____",*P43:24,*V2LON,FORM4,*P1:24,*EL;
          MOVE      HNREC,FORM5
          ADD       FORM4,FORM5
.
          COMPARE   BC0NXTSC,FORM5
          GOTO      SKIP1 IF LESS
.
SKIP1A    DISPLAY   *P1:24,*EL,*B,"Invalid Selection - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      BALM3B
.
SKIP1     COMPARE   FORM5,BC0NXTSC
          GOTO      SKIP1A IF EQUAL
          GOTO      SKIP2 IF NOT LESS
.
          GOTO      SKIP1A
.
SKIP2     MOVE      FORM5,HNREC
          GOTO      BALM3
.
BALM3B1   MATCH     ANS,ANS
          GOTO      BALM3A IF EOS
.
          MATCH     "C",ANS
          GOTO      BALM3 IF EQUAL
.
          MATCH     "D",ANS
          GOTO      BALM3 IF EQUAL
.
          MATCH     "N",ANS
          GOTO      BALM3B IF NOT EQUAL
.
          MOVE      HNREC,HNAREC
          GOTO      BALMULT
.
BALM3A    ADD       ONE,HNREC
          GOTO      BALM5
.
BALMOUT   SUB       BCDISC,BCDISC               *Must leave BCDISC empty.
          RETURN
+
.------------------------------------------------------------------------------
.         Modify invoice breakups
.------------------------------------------------------------------------------
.
MODBRK    CALL      RDBATO
.
          MATCH     "XX",BCTRAN
          GOTO      MMBXX IF NOT EQUAL
.
          MOVE      "E",ANS
          GOTO      MODBRK2
.
MMBXX     DISPLAY   *P18:8,*V2LON,BCORD,*P18:9,BCTRAND,*P18:10,*EL,BCRESP:
                    *P18:11,BCDISS,*P18:12,BCLEDG,*EL:
                    *P18:13,BCACCTP,*EL,*P18:14,BCAMT
.
MODBRK1A  MATCH     "D",ANS
          GOTO      MODBRK1B IF NOT EQUAL
.
          KEYIN     *P30:24,"Are you sure (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*V2LON,ANS,*P1:24,*EL;
.
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      MODBRK1A IF NOT EQUAL
.
          SUBTRACT  BCAMT,BC0SPLTP
          SUBTRACT  BCAMT,BC0BTCHT
.
          MOVE      "XX" TO BCTRAN
          CALL      WRBATX
.
          DISPLAY   *P1:24,*EL,*B,"The above Transaction has been ":
                    "Deleted - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      MODBRK2
.
MODBRK1B  MATCH     "C",ANS
          GOTO      MODBRK2 IF NOT EQUAL
.
MODBRK1C  SUBTRACT  BCAMT,BC0SPLTP
          SUBTRACT  BCAMT,BC0BTCHT
.
MODBRK4   KEYIN     *P30:24,"Enter new amount : ___________":
                    *P49:24,*V2LON,BCAMT,*EL;
.
          COMPARE   ZERO,BCAMT
          GOTO      MODBRK4A IF LESS
          GOTO      MODBRK4A IF EQUAL
.
          GOTO      MODBRK4B
.
MODBRK4A  DISPLAY   *P1:24,*EL,*B,"Invalid Amount - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      MODBRK4
.
MODBRK4B  DISPLAY   *P49:24,*V2LON,BCAMT;
.
          KEYIN     *P62:24,"Ok (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*V2LON,ANS,*P1:24,*EL;
.
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      MODBRK3 IF EQUAL
.
          GOTO      MODBRK4
.
MODBRK3   DISPLAY   *P11:24,*EL,*P18:14,*V2LON,BCAMT;
          CALL      WRBATA
.
          ADD       BCAMT,BC0SPLTP
          ADD       BCAMT,BC0BTCHT
.
MODBRK2   RETURN
+
.------------------------------------------------------------------------------
.         Update number of transactions
.------------------------------------------------------------------------------
.
TRNCNT    CALL      RDBATS0
.
          MATCH     "Z",AFLAG
          GOTO      TRNOUT IF EQUAL
.
          SUBTRACT  TWO,BC0NXTSC
          MOVE      BC0NXTSC,BC1NOTR
.
TRNOUT    MOVE      SP1,AFLAG
          RETURN
+
.------------------------------------------------------------------------------
.        * RSTART  * This Routine Is Used to Restart After System Failures
.------------------------------------------------------------------------------
.
RSTART    DISPLAY   *P11:24,"* Recovery of Batch ",*V2LON,BCBATCH,*HOFF:
                    " Ok (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ";
.
          KEYIN     *V2LON,ANS,*P1:24,*EL;
.
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      RS20 IF EQUAL
.
RS10      MOVE      "E",ANS
          MOVE      "  ",DIM2
          GOTO      RSOUT
.
RS20      MOVE      ZERO TO BC1REST
          TRAP      RST IF FORMAT
          TRAP      RST IF RANGE
          CALL      RDBAT0
.
          BRANCH    BC1REST TO RS30
.
RS205     COMPARE   THREE TO BC0NXTSC
          GOTO      RS40 IF LESS
.
          SUBTRACT  ONE,BC0NXTSC
.
          COMPARE   ZERO TO BC0SPSEC
          GOTO      RS206 IF EQUAL
.
          MOVE      ZERO TO BC1REST
          TRAP      RST IF FORMAT
          TRAP      RST IF RANGE
.
RS205A    CALL      RDBATP
          UNPACK    BCPAYT INTO QP,QPN
.
          BRANCH    BC1REST TO RS205A0
          GOTO      RS205AA
.
RS205A0   SUB       ONE FROM BC0SPSEC
          GOTO      RS205A
.
RS205AA   MOVE      ZERO TO BC1REST
          TRAP      RST IF FORMAT
          TRAP      RST IF RANGE
          CALL      RDBATD
.
          BRANCH    BC1REST OF RS205B
.
          MATCH     "CRD" TO BCORD
          GOTO      RS206 IF NOT EQUAL
.
RS205B    SUB       TWO FROM BC0NXTSC
          GOTO      RS205AA
.
RS206     MOVE      ZERO TO BC1REST
          TRAP      RST IF FORMAT
          TRAP      RST IF RANGE
          CALL      RDBATC
          UNPACK    BCPAYT INTO QP,QPN
          BRANCH    BC1REST TO RS206A
          GOTO      RS208
.
RS206A    SUB       ONE FROM BC0NXTSC
          GOTO      RS206
.
RS208     CALL      RDBATRS0
          MOVE      IBDAY TO VDD
          MOVE      IBMTH TO VMM
          MOVE      IBCCC TO VCC
          MOVE      IBYRR TO VYY
.
          BRANCH    BC1REST OF RS205
.
RS25      DISPLAY   *P2:24,"Last Record accepted : Reference = ":
                    *V2LON,BCREFER,*HOFF,"  ":
                    "Amount = ",*V2LON,BCAMT,SP1,BCTRAN;
.
          KEYIN     *P75:24,"Ok (",*V2LON,"Y",*HOFF,"/",*V2LON:
                    "N",*HOFF,") ? ",*V2LON,ANS,*P1:24,*EL;
.
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      RSOUT IF EQUAL
.
          MATCH     "N",ANS
          GOTO      RS10 IF EQUAL
.
          GOTO      RS25
.
RS30      DISPLAY   *P1:24,*EL,*B,"Corrupted Header Record - File will be":
                    " Deleted - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
.
          CLOSE     BATFILE
          PREP      BATFILE,BFILE
          CLOSE     BATFILE
.
          MOVE      "E",ANS
          MOVE      "  ",DIM2
          GOTO      RSOUTA
.
RS40      MOVE      "H",ANS
          GOTO      RSOUTA
.
RSOUT     MOVE      BCRED,BCRED
          REPLACE   " 0",BCRED
          MOVE      "ORDER NO " TO DIM9
.
          MATCH     "PY" TO BCTRAN
          GOTO      RSOUT1 IF NOT EQUAL
.
          MOVE      "CHEQUE NO" TO DIM9
.
RSOUT1    MOVE      ZERO TO RESFLG
.
          COMPARE   BC0SPLTP TO BC0SPLTK
          RETURN    IF EQUAL
.
          MOVE      ONE TO RESFLG
.
RSOUTA    RETURN
.
RST       TRAPCLR   FORMAT
          TRAPCLR   RANGE
          MOVE      ONE,BC1REST
          RETURN
+
BTCHDATE  MOVE      ZERO TO FLAG
          MOVE      VMM TO FORM2
.
          ASSIGN    (IBCCC*100)+IBYRR,FORM4
          ASSIGN    (VCC*100)+VYY,LYEAR
          COMPARE   FORM4,LYEAR
          GOTO      BTCHDT2 IF EQUAL
          RETURN    IF LESS
.
          ADD       TWELVE TO FORM2
.
BTCHDT2   COMPARE   IBMTH TO FORM2
          RETURN    IF EQUAL
          RETURN    IF LESS
.
          MOVE      ONE TO FLAG
          BEEP
          KEYIN     *P1:24,*V2LON,"Transaction Month/Year must be equal to ":
                    "or less than Batch Month/Year !!! ",ANS,*P1:24,*EL;
.
          RETURN
.
.------------------------------------------------------------------------------
.         Subroutine to open all relevant data files
.------------------------------------------------------------------------------
.
OPFIL     DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
.
          DISPLAY   *P64:24,"fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
          OPEN      FMSAMAA4,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
.
          DISPLAY   *P64:24,"fmsresaf";
          OPEN      FMSRESA1,"fmsresaf"
.
          DISPLAY   *P64:24,"fmscafa1";
          OPEN      FMSCAFA1,"fmscafaf"
.
          DISPLAY   *P64:24,"apsmasa1";
          OPEN      APSMASA1,"apsmasaf"
.
          DISPLAY   *P64:24,"fmstdsaf";
          OPEN      FMSTDSA1,"fmstdsaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,SIXTY6;*67,FMCORDIS
.
          DISPLAY   *P1:24,*EL;
          MOVE      "00000",SAVECRED
          MOVE      SP1,FLEFLAG
.
          RETURN
.**********************************************************************
. Temp file IO routines
.**********************************************************************
RSAPTM1   RESET     KEY29
          READ      APSTMPA1,KEY29;;
          RETURN
.
RAAPTM1   RESET     KEY29
          MOVE      ZERO,OVRCD
          READ      APSTMPA1,KEY29;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDAPTM1   RESET     KEY29
          MOVE      ZERO,OVRCD
          READ      APSTMPA1,KEY29;APTMLED,APTMACC,APTMREC,APTMAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKAPTM1   MOVE      ZERO,OVRCD
          READKS    APSTMPA1;APTMLED,APTMACC,APTMREC,APTMAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPAPTM1   MOVE      ZERO,OVRCD
          READKP    APSTMPA1;APTMLED,APTMACC,APTMREC,APTMAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPAPTM1   UPDATE    APSTMPA1;APTMLED,APTMACC,APTMREC,APTMAMT
          RETURN
.
WRAPTM1   RESET     KEY29
          WRITE     APSTMPA1,KEY29;APTMLED,APTMACC,APTMREC,APTMAMT
          RETURN
.
DEAPTM1   RESET     KEY29
          DELETE    APSTMPA1,KEY29
          RETURN
.
.******************************************************************************
. Post Control Account Transactions
.******************************************************************************
CCTR0000  CALL      CALC0000
.
          MOVE      "00000",BCRED
          PACK      BCDATEE WITH CDD,CMM,CCC,CYY
          REP       " 0" IN BCDATEE
          PACK      BCDATED WITH IBDAY,IBMTH,IBCCC,IBYRR
          REP       " 0" IN BCDATED
          MOVE      ZERO,BCINVT
          MOVE      ZERO,BCDISC
          MOVE      BC1RESP TO BCRESP
          MOVE      SP35 TO BCTRAND
          MOVE      BC1TRAN,SAVETYPE

          MOVE      "CASH    ",BCORD
          MOVE      "CASH           ",BCREFER
          MOVE      FMCORDIS TO BCDISS
.
          MOVE      SP70,KEY29
          CALL      RSAPTM1
.
CCTR8000  CALL      RKAPTM1
          BRANCH    OVRCD,CCTR9999
          MOVE      APTMAMT,BCAMT
.
          CALL      CTYP0000
.
          PACK      KEY14,APTMLED,APTMACC,SP70
          CALL      RDFMCA1
.
          MOVE      FMCACHQ,BCCHEQ
          MOVE      APTMLED,BCLEDG
          MOVE      APTMACC,BCACCT
          MOVE      APTMREC,BCREFER
.
          CALL      WBCH0000                * Write Record Back to Batch file
.
          GOTO      CCTR8000                * for General Ledger
.
CCTR9999  MOVE      SAVETYPE,BCTRAN
          CALL      UPGL0000
          RETURN
. ******************************************************************************
.   Check on Control Account Type
. ******************************************************************************
CTYP0000  PACK      KEY14,APTMLED,APTMACC
          CALL      RDFMCA1
          MOVE      "JA",BCTRAN
.
CTYP9999  RETURN
.**********************************************************************
. Add Control Account Transactions to Batch
.**********************************************************************
WBCH0000  MOVE      "5",BCSTAT
          UNPACK    BCDATED INTO MTDAY,MTMTH,MTCCC,MTYEAR
          MOVE      SP70,BCDATCX
          MOVE      SP70,BCACCTP
          MOVE      BCACCT,BCACCTP
....      MOVE      SP70,BCCHEQ
          MOVE      "N",BCCOMX
          MOVE      ZERO,BCCOMXA
          MOVE      SP70,BCCONT
          MOVE      SP70,BCDISCC
          MOVE      SP70,BCCEORD
          MOVE      SP70,BCCELNE
          MOVE      SP70,BCCATA
          CALL      RDBATS0
          ADD       ONE,BC0NXTSC
          CALL      WRBATS0
          SUB       ONE,BC0NXTSC
          CALL      WRBATC
.
          CALL      RDBAT1
          ADD       ONE,BC1NOTR
          MOVE      "5",BC1STAT
          CALL      WRBAT1
.
          RETURN
.**********************************************************************
. Calculate the control totals
.**********************************************************************
CALC0000  CLOSE     APSTMPA1
          EXECUTE   KILLTMP,TASKID
          EXECUTE   MAKETMP,TASKID
          OPEN      APSTMPA1,TMPFILE
          MOVE      ONE TO HNREC
.
CALC1000  ADD       ONE,HNREC
          COMPARE   HNREC,BC0NXTSC
          GOTO      CALC9999 IF EQUAL
          CALL      RDBATO
.
          MATCH     "XX",BCTRAN
          GOTO      CALC1000 IF EQUAL
.
          CALL      UPTM0000
          MOVE      FIVE TO BCSTAT
          CALL      WRBATS
          GOTO      CALC1000
.
CALC9999  RETURN
. ******************************************************************************
.  Accumulate Control Totals
. ******************************************************************************
UPTM0000  PACK      KEY29,BCLEDG,BCCONT,BCREFER,SP70
          CALL      RDAPTM1
          BRANCH    OVRCD,UPTM1000
          ADD       BCAMT,APTMAMT
          CALL      UPAPTM1
          GOTO      UPTM9999
.
UPTM1000  UNPACK    KEY29,APTMLED,APTMACC,APTMREC
          MOVE      BCAMT,APTMAMT
          CALL      WRAPTM1
.
UPTM9999  RETURN
.******************************************************************************
. Update General Ledger Batch Queue
.******************************************************************************
UPGL0000  
          CALL      RDBATS0
          MOVE      BC1BATCH,F5
          MOVE      F5,FMBCBAT
          REP       " 0",FMBCBAT
          MOVE      "2",FMBCSTA
          MOVE      BC0NXTSC,FMBCSEC
          MOVE      BC1ACCT,FMBCTOT
          MOVE      ZERO,FMBCDIS
          MOVE      BC1OPER,FMBCUID
          MOVE      BC1LEDG,FMBCLED 
          MOVE      BC1TRAN,FMBCTRT 
          MOVE      BC0SUPBC,FMBCINV 
.
          UNPACK    BC1DATE,CDAY,CMON,CCENT,CYEAR
          PACK      FMBCDAT,CCENT,CYEAR,CMON,CDAY
          UNPACK    BC1BDATE,CDAY,CMON,CCENT,CYEAR
          PACK      FMBCPDAT,CCENT,CYEAR,CMON,CDAY
          PACK      FMBCCDAT,CCENT,CYEAR,CMON,CDAY
.
          MOVE      SP70,FMBCSPAR
          PACK      KEY5,FMBCBAT
          CALL      RAFMBC1
          COMPARE   ZERO,OVRCD
          GOTO      UPGL1000 IF EQUAL
          CALL      WRFMBC1
          GOTO      UPGL9999
UPGL1000  CALL      UPFMBC1
UPGL9999  RETURN
.------------------------------------------------------------------------------
. end of batch input routine
.      check,see if batch balances
.         if it does write it as a balanced batch
.         if not write as an unbalanced batch
.------------------------------------------------------------------------------
. zendflag    0 - balanced
.             1 - unbalanced hold
.             2 - deleted
.             3 - add to batch
.
BALBATCH  MOVE      ZERO,ZENDFLAG
          CALL      RDBAT0
          COMPARE   THREE,BC0NXTSC
          GOTO      NOTRANS IF LESS
.
          CALL      RDBAT1
.
          SUBTRACT  TWO,BC0NXTSC
          MOVE      BC0NXTSC,BC1NOTR      * number of transactions
          MOVE      BC0BTCHT,BC1ACCT   * accumulated total
          COMPARE   ZERO,BC1REST          * check if batch was restarted
          CALL      CHREST IF NOT EQUAL   * if it was check batch totals.
.
          COMPARE   BC1ACCT,BC1KEYT       * compare accumlated amount
          GOTO      FIXBATCH IF NOT EQUAL
.
          CALL      WRBAT1
          MOVE      ZERO,BC0NXTSW      * reset all work variables
          MOVE      ZERO,BC0BTCHT      * ,sector zero
          MOVE      ZERO,BC0SUPBC
          MOVE      SP6,BC0DIM6
          MOVE      SP2,BC0DIM2
          MOVE      ZERO,BC0SPLTK
          MOVE      ZERO,BC0SPLTP
          MOVE      ONE,BC0ONE
          MOVE      ZERO,BC0SPSEC
          MOVE      ZERO,BC0DISC
          CALL      WRBATR0
.-------------------------------------
. batch balanced so submit for update
.-------------------------------------
BALANCED  MOVE      THREE,BC1STAT
          CALL      WRBATS1
          DISPLAY   *P1:3,*EF,*P11:10,"Batch Number ":
                    *V2LON,BCBATCH,*HOFF," has balanced ":
                    *P11:11,"and now submitted for update ";
          CALL      WENDFILE
          CALL      CCTR0000
          CLOSE     BATFILE
          KEYIN     *P11:13,"Hit ENTER to continue ... ",ANS
          RETURN
.
.------------------------------------------------------------------------------
.         * CHREST       * CHECKS THE VALUES,A BATCH AFTER A RESTART
.------------------------------------------------------------------------------
.
CHREST    DISPLAY   *P1:3,*EF:
                    *P5:6,"This Batch was restarted - Re-checking values ...":
                    *P18:8,*V2LON,*BLINKON,"*** Please wait ***"
          MOVE      ZERO,BC0SPLTK
          CALL      RDBATS0
          CALL      RDBAT1
          MOVE      ONE,HNREC
CHK10     ADD       ONE,HNREC
          COMPARE   BC0NXTSC,HNREC
          GOTO      CHK30 IF EQUAL
          CALL      RDBATO
          MATCH     "XX",BCTRAN
          GOTO      CHK10 IF EQUAL
          MATCH     BC1TRAN,BCTRAN
          GOTO      CHK20 IF NOT EQUAL
CHK15     ADD       BCAMT,BC0SPLTK
          GOTO      CHK10
.
CHK20     MATCH     "CR",BCTRAN
          GOTO      CHK15 IF NOT EQUAL
          SUB       BCAMT FROM BC0SPLTK
          GOTO      CHK10
.
CHK30     MOVE      BC0SPLTK,BC1ACCT
          CALL      WRBAT1
          RETURN
.
.------------------------------------------------------------------------------
.         * WENDFILE      * WRITE EOF
.------------------------------------------------------------------------------
.
WENDFILE  CALL      RDBATS0
          WEOF      BATFILE,BC0NXTSC
          RETURN
.
.-------------------------------------------------------------------
. no transaction,batch file delete
.-------------------------------------------------------------------
NOTRANS   BEEP
          DISPLAY   *P1:24,"No in Transactions in that Batch. Batch Deleted - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
.
          PACK      FILENAME,BCHPRE,BCBATCH
          CLOSE     BATFILE
          PREP      BATFILE,FILENAME
          CLOSE     BATFILE
          RETURN
.
.------------------------
. batch does not balance
.------------------------
FIXBATCH  DISPLAY   *P1:3,*EF:
                    *P25:7,*V2LON,*ULON,"Batch does not balance.",*HOFF:
                    *P20:9,"Batch Number        : ",*V2LON,BC1BATCH,*HOFF:
                    *P20:10,"Batch Total Entered :   ",*V2LON,BC1KEYT,*HOFF:
                    *P20:11,"Calculated Total    :   ",*V2LON,BC1ACCT
          KEYIN     *P1:24,*EL,"[",*V2LON,"C",*HOFF,"]hange Total , ":
                    "[",*V2LON,"H",*HOFF,"]old , ":
                    "[",*V2LON,"D",*HOFF,"]elete , ":
                    "[",*V2LON,"V",*HOFF,"]iew , ":
                    "[",*V2LON,"A",*HOFF,"]dd to Batch : ":
                    *V2LON,ANS:
                    *P1:24,*EL
          REP       UPPLOW,ANS
          MATCH     "A",ANS
          GOTO      ADDMORE IF EQUAL
          MATCH     "C",ANS
          GOTO      CHTOTAL IF EQUAL
          MATCH     "V",ANS
          GOTO      VEWBATCH IF EQUAL
          MATCH     "D",ANS
          GOTO      KBDEL IF EQUAL
          MATCH     "H",ANS
          GOTO      FIXBATCH IF NOT EQUAL
.
          CALL      WRBAT1
          MOVE      ZERO,BC0NXTSW      * reset all work variables
          MOVE      ZERO,BC0BTCHT      * ,sector zero
          MOVE      ZERO,BC0SUPBC
          MOVE      SP6,BC0DIM6
          MOVE      SP2,BC0DIM2
          MOVE      ZERO,BC0SPLTK
          MOVE      ZERO,BC0SPLTP
          MOVE      ONE,BC0ONE
          MOVE      ZERO,BC0SPSEC
          MOVE      ZERO,BC0DISC
          MOVE      ONE,ZENDFLAG                 * ZENDFLAG = unbalanced
          MOVE      TWO,BC1STAT
          CALL      WRBATS1
          CALL      WENDFILE
.
. Write Batch Held for Modification Here
.---------------------------------------
          CALL      RDBATS0
          MOVE      BC1BATCH,F5
          MOVE      F5,FMBCBAT
          REP       " 0",FMBCBAT
          MOVE      "1",FMBCSTA
          MOVE      BC0NXTSC,FMBCSEC
          MOVE      BC1ACCT,FMBCTOT
          MOVE      ZERO,FMBCDIS
          MOVE      BC1OPER,FMBCUID
          MOVE      BC1LEDG,FMBCLED 
          MOVE      BC1TRAN,FMBCTRT 
          MOVE      BC0SUPBC,FMBCINV 
.
          UNPACK    BC1DATE,CDAY,CMON,CCENT,CYEAR
          PACK      FMBCDAT,CCENT,CYEAR,CMON,CDAY
          UNPACK    BC1BDATE,CDAY,CMON,CCENT,CYEAR
          PACK      FMBCPDAT,CCENT,CYEAR,CMON,CDAY
          PACK      FMBCCDAT,CCENT,CYEAR,CMON,CDAY
.
          MOVE      SP70,FMBCSPAR
          PACK      KEY5,FMBCBAT
          CALL      RAFMBC1
          COMPARE   ZERO,OVRCD
          GOTO      FIXB1000 IF EQUAL
          CALL      WRFMBC1
          GOTO      FIXB9999
FIXB1000  DISPLAY   *P1:24,*EL,"Batch on General Ledger Control File - ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
FIXB9999  RETURN
.---------------
.batch deletion
.---------------
KBDEL     KEYIN     *P1:24,"Do You Really Want to Delete This Batch [":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,"] ? ",*V2LON,ANS:
                    *P1:24,*EL
          MATCH     NO,ANS
          GOTO      FIXBATCH IF EQUAL
          MATCH     YES,ANS
          GOTO      KBDEL IF NOT EQUAL
          CALL      DELBTCH
          MOVE      TWO,ZENDFLAG                * ZENDFLAG = deleted
          RETURN
.--------------------------
.add more payments to batch
.--------------------------
ADDMORE   MOVE      THREE,ZENDFLAG                 * ZENDFLAG = add more
          CALL      RDBAT1                        * reset sector 0 totals
          CALL      RDBAT0                        * and next sector
          RETURN
.-------------------
.change batch total
.-------------------
CHTOTAL   MOVE      "44",COL
          MOVE      "10",ROW
          MOVE      ONE,MODE
          KEYIN     *PCOL:ROW,*EL,*V2LON,AMOUNT:
                    *PCOL:ROW,*EL,*DV,AMOUNT
          MOVE      AMOUNT,BC1KEYT
          CALL      WRBAT1
          GOTO      BALBATCH
.------------------------------------------
. delete batch file batch number - BCBATCH
.------------------------------------------
DELBTCH   MOVE      BCBATCH TO KEY5               * delete from btchindx
          CLOSE     BATFILE                       * delete batch file
          PACK      FILENAME,BCHPRE,BCBATCH
          PREPARE   BATFILE,FILENAME
          CLOSE     BATFILE
          RETURN
.--------------------
. display batch
.--------------------
VEWBATCH  ADD       TWO,BC0NXTSC
          MATCH     "CC",BC1TRAN
          GOTO      CCVBTCH IF EQUAL
          MATCH     "PY",BC1TRAN
          GOTO      PYVBTCH IF EQUAL
          GOTO      VEWBTCH
VEWEND    SUB       TWO,BC0NXTSC
          GOTO      FIXBATCH
.------------------------
. general batch display
.-----------------------
VEWBTCH   MOVE      "6",ROW
          MOVE      TWO,HNREC
          DISPLAY   *P1:4,*EF,*ULON,*V2LON:
                    *P1:5,"Reference",*P16:5,"Ledger":
                    *P25:5,"Debit Account":
                    *P40:5,"Credit Account":
                    *P60:5,"Amount Cancelled"
          MOVE      ZERO,DOLLARS
          MOVE      ZERO,AMOUNT
          CALL      RDBATO
          MOVE      BCREFER,LASTREF
VEWLOOP   CALL      RDBATO
          MATCH     "XX",BCTRAN
          GOTO      VEWDEL IF EQUAL
          MATCH     LASTREF,BCREFER
          GOTO      VEWOK IF EQUAL
          DISPLAY   *P35:ROW,"Reference Total :",*P58:ROW,*V2LON,DOLLARS
          MOVE      BCREFER,LASTREF
          ADD       ONE,ROW
          MOVE      ZERO,DOLLARS
.
VEWOK     ADD       BCAMT,DOLLARS
          COMPARE   "21",ROW
          GOTO      VEWDISP IF NOT EQUAL
VEWMORE   KEYIN     *P30:24,"More [",*V2LON,"Y",*HOFF,"/",*V2LON,"N":
                    *HOFF,"] ? ",ANS,*P1:24,*EL
          MATCH     NO,ANS
          GOTO      FIXBATCH IF EQUAL
          MATCH     YES,ANS
          GOTO      VEWMORE IF NOT EQUAL
          DISPLAY   *P1:6,*EF
          MOVE      "6",ROW
.
VEWDISP   DISPLAY   *P1:ROW,BCREFER,*P16:ROW,BCLEDG,*P25:ROW,BCCONT:
                    *P40:ROW,BCACCTP,*P60:ROW,BCAMT
          ADD       ONE,ROW
.
VEWDEL    ADD       ONE,HNREC
          COMPARE   BC0NXTSC,HNREC
          GOTO      VEWEXIT IF NOT LESS
          GOTO      VEWLOOP
.
VEWEXIT   DISPLAY   *P40:ROW,"Reference Total ",*P58:ROW,*V2LON,DOLLARS
          KEYIN     *P20:24,*V2LON,"** Tap any Key to Continue **",*+,ANS:
                    *P1:24,*EL
          GOTO      VEWEND
.----------------------------
. cancelled cheque display
.----------------------------
CCVBTCH   MOVE      "6",ROW
          MOVE      TWO,HNREC
          DISPLAY   *P1:4,*EF,*ULON,*V2LON:
                    *P1:5,"Cheque Number",*P15:5,"Ledger":
                    *P25:5,"Debit Account":
                    *P40:5,"Credit Account":
                    *P60:5,"Amount Cancelled"
          MOVE      ZERO,DOLLARS
          MOVE      ZERO,AMOUNT
          CALL      RDBATO
          MOVE      BCORD,LASTCHEQ
CCVLOOP   CALL      RDBATO
          MATCH     "XX",BCTRAN
          GOTO      CCVDEL IF EQUAL
          MATCH     LASTCHEQ,BCORD
          GOTO      CCVOK IF EQUAL
          DISPLAY   *P40:ROW,"Cheque Total :",*P58:ROW,*V2LON,DOLLARS
          MOVE      BCORD,LASTCHEQ
          ADD       ONE,ROW
          MOVE      ZERO,DOLLARS
.
CCVOK     ADD       BCAMT,DOLLARS
          COMPARE   "21",ROW
          GOTO      CCVDISP IF NOT EQUAL
CCVMORE   KEYIN     *P30:24,"More [",*V2LON,"Y",*HOFF,"/",*V2LON,"N":
                    *HOFF,"] ? ",ANS,*P1:24,*EL
          MATCH     NO,ANS
          GOTO      VEWEND IF EQUAL
          MATCH     YES,ANS
          GOTO      CCVMORE IF NOT EQUAL
          DISPLAY   *P1:6,*EF
          MOVE      "6",ROW
.
CCVDISP   DISPLAY   *P1:ROW,BCORD,*P15:ROW,BCLEDG,*P25:ROW,BCCONT:
                    *P40:ROW,BCACCTP,*P60:ROW,BCAMT
          ADD       ONE,ROW
.
CCVDEL    ADD       ONE,HNREC
          COMPARE   BC0NXTSC,HNREC
          GOTO      CCVEXIT IF NOT LESS
          GOTO      CCVLOOP
.
CCVEXIT   DISPLAY   *P40:ROW,"Cheque Total ",*P58:ROW,*V2LON,DOLLARS
          KEYIN     *P20:24,*V2LON,"** Tap any Key to Continue **",*+,ANS:
                    *P1:24,*EL
          GOTO      VEWEND
.--------------------
. display payments
.--------------------
PYVBTCH   MOVE      PAYSEC,LASTSEC
          MOVE      ZERO,PAYSEC
          MOVE      "6",ROW
          DISPLAY   *P1:4,*EF,*ULON,*V2LON:
                    *P10:5,"Creditor Name",*P40:5,"Payment Total":
                    *P59:5,"Discount Total"
PYVLOOPA  COMPARE   PAYSEC,LASTSEC
          GOTO      PYVEXIT IF EQUAL
          CALL      RDPDT
          ADD       ONE,PAYSEC
          MOVE      PDFIRST,HNREC
          CALL      RDBATO
.
          MOVE      ZERO,DOLLARS
          MOVE      ZERO,AMOUNT
PYVLOOPB  MATCH     "XX",BCTRAN
          GOTO      PYVDEL IF EQUAL
          ADD       BCINVT,DOLLARS
          ADD       BCDISC,AMOUNT
PYVDEL    ADD       ONE,HNREC
          COMPARE   HNREC,PDLAST
          GOTO      PYVEND IF LESS
          CALL      RDBATO
          GOTO      PYVLOOPB
.
PYVEND    COMPARE   "23",ROW
          GOTO      PYVDISP IF NOT EQUAL
PYVMORE   KEYIN     *P30:24,"More [",*V2LON,"Y",*HOFF,"/",*V2LON,"N":
                    *HOFF,"] ? ",ANS,*P1:24,*EL
          MATCH     NO,ANS
          GOTO      PYVEXIT1 IF EQUAL
          MATCH     YES,ANS
          GOTO      PYVMORE IF NOT EQUAL
          DISPLAY   *P1:5,*EF
          MOVE      "6",ROW
.
PYVDISP   DISPLAY   *P1:ROW,PDNAME1,*P40:ROW,DOLLARS,*P60:ROW,AMOUNT
          ADD       ONE,ROW
          GOTO      PYVLOOPA
.
PYVEXIT   DISPLAY   *P1:24;
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
PYVEXIT1  MOVE      LASTSEC,PAYSEC
          GOTO      VEWEND
.
RDPDT     READ      PAYDETXX,PAYSEC;PDNAME1,PDNAME2,PDADD1,PDADD2,PDPOST:
                    PDFIRST,PDLAST
          RETURN
.
WRPDT     WRITE     PAYDETXX,PAYSEC;PDNAME1,PDNAME2,PDADD1,PDADD2,PDPOST:
                    PDFIRST,PDLAST
          RETURN
.
          INC       IBABATIO/INC
.
          INC       APSSTDCD
          INC       APSMASIO/INC       * creditor master
          INC       FMSAMAIO/INC       * account master
          INC       FMSBCFIO/INC       * control file
          INC       FMSCONIO/INC       * control file
          INC       FMSCAFIO/INC       * account master
          INC       FMSCSAIO/INC       * account master
          INC       FMSDISIO/INC       * dissection
          INC       FMSLMAIO/INC       * ledger master
          INC       FMSRESIO/INC       * responsibility
          INC       FMSTDSIO/INC       * transaction description
          INC       FMSAMAKY
          INC       FMSLMAKY
          INC       FMSDISKY
          INC       FMSRESKY
.
          INC       STDGENCD
.
