.******************************************************************************
.* System         : Accident and Emergency                                    *
.* Program        : IBAAAE69.PBL                                              *
.* Name           : Diagnosis coding maintenance                              *
.******************************************************************************
.* Date           : 04/08/1993                                                *
.* Author         : Justin 'The Pom' Coates                                   *
.* Function       : To maintain the diagnosis/investigation/treatment codes   *
.* Modifications  :                                                           *
.*        V5.05.01  17/12/1997    Steve Armstrong           EMR mods          *
.*                  Mods for new field AERCFLAG.                              *
.******************************************************************************
.*        V5.03.B1  23/06/1995    Justin Coates  SRF 133250                   *
.*                  only allow 2 characters to be entered for Inv & Trt codes *
.******************************************************************************
.
          INC       STD001FD
          INC       AAEGDCFD/INC            * diagnosis main codes
          INC       AAEGDLFD/INC            * diagnosis sub-analysis
          INC       AAEGICFD/INC            * investigation 
          INC       AAEGILFD/INC            * investigation sub-analysis
          INC       AAEGTCFD/INC            * treatment
          INC       AAEGTLFD/INC            * treatment sub-analysis
          INC       AAEGRCFD/INC            * diagnosis regions
.
.         program variables
.
ENCODE2   DIM       2         * entered code - diagnosis and region
ENCODE    DIM       4         * entered code
ENDESC    DIM       20        * entered description
ENLINK    DIM       1         * entered link codes
ENLINKC   DIM       2[10]     * sub-analysis codes
ENLINKD   DIM       20[10]    * sub-analysis descn
ENSUBANL  DIM       1         * entered sub-analysis Y/N
ENTYPE    FORM      1         * type of code
.                               1=diagnosis,2=region,3=investigation,4=treatment
ENFORGN   DIM       1         * foreign body flag
DXSUBANL  DIM       3         * description sub-analysis Y/N
DXTYPE    DIM       13        * description of type
.
.         program constants
.
DDIAG     INIT      "Diagnosis    "
DREGN     INIT      "Region       "
DINVS     INIT      "Investigation"
DTRMT     INIT      "Treatment    "
KCOL      FORM      "25"
OPTCOL    FORM      "55"
.
PRGID     INIT      "IBAAAE69"
PRGNAM    INIT      "Diagnosis Coding Maintenance"
VERSION   INIT      "V12.00.00"
.
.*********************************************************************
.         mainline
.*********************************************************************
ML0000    CALL      INIT0000
.
ML1000    CALL      OPTN0000
          BRANCH    EXIT,ML9999
.
          PERFORM   MOPTION,ADDI0000,MODI0000,DELI0000
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.*********************************************************************
.         Initialization and open files
.*********************************************************************
INIT0000  CALL      DISPHEAD                * display heading
          DISPLAY   *P50:24,"Opening ",*EL;
          DISPLAY   *P58:24,"aaegdcaf"
          OPEN      AAEGDCA1,"aaegdcaf"
          DISPLAY   *P58:24,"aaegdlaf"
          OPEN      AAEGDLA1,"aaegdlaf"
          DISPLAY   *P58:24,"aaegicaf"
          OPEN      AAEGICA1,"aaegicaf"
          DISPLAY   *P58:24,"aaegilaf"
          OPEN      AAEGILA1,"aaegilaf"
          DISPLAY   *P58:24,"aaegtcaf"
          OPEN      AAEGTCA1,"aaegtcaf"
          DISPLAY   *P58:24,"aaegtlaf"
          OPEN      AAEGTLA1,"aaegtlaf"
          DISPLAY   *P58:24,"aaegrcaf"
          OPEN      AAEGRCA1,"aaegrcaf"
.
INIT9999  RETURN
+
.*********************************************************************
.         Enter the option to perform
.*********************************************************************
OPTN0000  HLINE     *G37,2,54,80
          DISPLAY   *P1:3,*EF,*V2LON:
                    *P1:4,"0",*P1:5,"1",*P1:6,"2",*P1:7,"3",*HOFF:
                    *P2:4," = Exit":
                    *P2:5," = Insert":
                    *P2:6," = Change":
                    *P2:7," = Delete":
                    *P1:9,"Select option : "
.
OPTN1000  KEYIN     *P17:9,*DV,UNDLN1:
                    *P17:9,*V2LON,MOPTION
.
          MOVE      ZERO,EXIT
          BRANCH    MOPTION,OPTN9999,OPTN9999,OPTN9999
.
          MOVE      ONE,EXIT
          COMPARE   ZERO,MOPTION
          GOTO      OPTN9999 IF EQUAL
.
          BEEP
          GOTO      OPTN1000
.
OPTN9999  RETURN
+
.*********************************************************************
.         Add a code
.*********************************************************************
ADDI0000  DISPLAY   *P54:2,*V2LON,"- Insert ",*P1:3,*EF
          CALL      CLRV0000                * clear variables
          CALL      SCRA0000                * display the screen
.
ADDI1000  CALL      KTYP0000                * enter type of code
          BRANCH    EXIT,ADDI9999           * exit
.
ADDI2000  CALL      KCOD0000                * enter the code
          BRANCH    EXIT,ADDI1000
.
          CALL      SCRB0000                * display rest of screen
          CALL      KDSC0000                * enter description
          CALL      KSUB0000                * enter sub-analisis code
          IF        ENTYPE = 2
            CALL      KFGN0000              * keyin foreign flag (for EMR)
          ENDIF
.
ADDI5000  CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      ADDI8000 IF EQUAL       * Post
          GOTO      ADDI0000 IF LESS        * Cancel
.
          BRANCH    CCITEM,ADDI5100,ADDI5200,ADDI5300
ADDI5050  BEEP
          GOTO      ADDI5000
.
ADDI5100  CALL      KDSC0000
          GOTO      ADDI5000
ADDI5200  CALL      KSUB0000
          GOTO      ADDI5000
ADDI5300  COMPARE   TWO,ENTYPE
          GOTO      ADDI5050 IF NOT EQUAL
          CALL      KFGN0000
          GOTO      ADDI5000
.
.         (P)ost selected
.
ADDI8000  CALL      WRIT0000                * write a new record
          CALL      LINK0000                * enter link codes
          GOTO      ADDI2000
.
ADDI9999  RETURN
+
.*********************************************************************
.         Modify a code
.*********************************************************************
MODI0000  DISPLAY   *P54:2,*V2LON,"- Modify ",*P1:3,*EF
          CALL      CLRV0000                * clear variables
          CALL      SCRA0000                * display the screen
.
MODI1000  CALL      KTYP0000                * enter type of code
          BRANCH    EXIT,MODI9999           * exit
.
MODI2000  CALL      KCOD0000                * enter the code
          BRANCH    EXIT,MODI1000
.
          CALL      FIWK0000                * copy from file to work vars
          CALL      SCRB0000                * display rest of screen
.
MODI5000  CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      MODI8000 IF EQUAL       * Post
          GOTO      MODI0000 IF LESS        * Cancel
.
          BRANCH    CCITEM,MODI5100,MODI5200,MODI5300
MODI5050  BEEP
          GOTO      MODI5000
.
MODI5100  CALL      KDSC0000
          GOTO      MODI5000
MODI5200  CALL      KSUB0000
          GOTO      MODI5000
MODI5300  COMPARE   TWO,ENTYPE
          GOTO      MODI5050 IF NOT EQUAL
          CALL      KFGN0000
          GOTO      MODI5000
.
.         (P)ost selected
.
MODI8000  CALL      UPDT0000                * update record
          CALL      LINK0000                * enter link codes
          GOTO      MODI2000
.
MODI9999  RETURN
+
.*********************************************************************
.         delete a code
.*********************************************************************
DELI0000  DISPLAY   *P54:2,*V2LON,"- Delete ",*P1:3,*EF
          CALL      CLRV0000                * clear variables
          CALL      SCRA0000                * display the screen
.
DELI1000  CALL      KTYP0000                * enter type of code
          BRANCH    EXIT,DELI9999           * exit
.
DELI2000  CALL      KCOD0000                * enter the code
          BRANCH    EXIT,DELI1000
.
          CALL      FIWK0000                * copy from file to work vars
          CALL      SCRB0000                * display rest of screen
.
DELI5000  CALL      DELQST 
          BRANCH    CEXIT,DELI8000,DELI0000,DELI9999
.
.         (D)elete selected
.
DELI8000  CALL      DELT0000                * delete record
          GOTO      DELI2000
.
DELI9999  RETURN
+
.*********************************************************************
.         keyin the type of code
.*********************************************************************
KTYP0000  DISPLAY   *P1:24,*EL:
                    *V2LON,ONE,*HOFF," = Diagnosis, ":
                    *V2LON,TWO,*HOFF," = Region, ":
                    *V2LON,THREE,*HOFF," = Investigation, ":
                    *V2LON,FOUR,*HOFF," = Treatment"
.
          KEYIN     *PKCOL:4,*EL,*V2LON,ENTYPE
          MOVE      ONE,EXIT
          COMPARE   ZERO,ENTYPE
          GOTO      KTYP9999 IF EQUAL
          MOVE      ZERO,EXIT
          BRANCH    ENTYPE,KTYP5000,KTYP5000,KTYP5000,KTYP5000
          BEEP
          GOTO      KTYP0000
.
KTYP5000  LOAD      DXTYPE,ENTYPE,DDIAG,DREGN,DINVS,DTRMT
          DISPLAY   *PKCOL:4,*V2LON,DXTYPE:
                    *P1:24,*EL
KTYP9999  RETURN
+
.*********************************************************************
.         enter the code
.         23/6/95 - all codes are only 2 characters now
.*********************************************************************
KCOD0000  DISPLAY   *PKCOL:5,*EF
          CALL      CLRL0000                * clear link codes
          KEYIN     *PKCOL:5,*V2LON,ENCODE2
          PACK      ENCODE2,ENCODE2,SP2
          PACK      ENCODE,ENCODE2,SP4
.
          PACK      ENCODE,ENCODE,SP4
          MOVE      ONE,EXIT
          MATCH     SP4,ENCODE
          GOTO      KCOD9999 IF EQUAL
.
.         validate the code for which mode we are in
.
          MOVE      ZERO,EXIT
          MOVE      ENCODE,KEY2
          MOVE      ENCODE,KEY4
.
          PERFORM   ENTYPE,RDAEGDC1,RDAEGRC1,RDAEGIC1,RDAEGTC1
          BRANCH    OVRCD,KCOD8000          * not on file
.
.         codes are on file, see if this is OK for the option
.
          COMPARE   ONE,MOPTION
          GOTO      KCOD9999 IF NOT EQUAL   * not in insert so OK
.
          DISPLAY   *P1:24,*B,"Code is already on file.  ",*EL;
          CALL      HITENTER
          GOTO      KCOD0000
.
.         code is not on file, see if this is OK for the option
.
KCOD8000  BRANCH    MOPTION,KCOD9999        * insert so OK
.
          DISPLAY   *P1:24,*B,"Code is not on file.  ",*EL;
          CALL      HITENTER
          GOTO      KCOD0000
.
KCOD9999  RETURN
+
.*********************************************************************
.         enter description
.*********************************************************************
KDSC0000  KEYIN     *PKCOL:7,*V2LON,*RV,ENDESC
          PACK      ENDESC,ENDESC,SP20
KDSC9999  RETURN
+
.*********************************************************************
.         enter sub-analysis code
.*********************************************************************
KSUB0000  DISPLAY   *PKCOL:8,*EL
          MOVE      ANSN,ENSUBANL           * default to no
          COMPARE   TWO,ENTYPE
          GOTO      KSUB5000 IF EQUAL       * dont allow keyin for region
.
          KEYIN     *PKCOL:8,*V2LON,*RV,ENSUBANL
          PACK      ENSUBANL,ENSUBANL,SP1
          REP       UPPLOW,ENSUBANL
.
          MOVE      DYES,DXSUBANL
          MATCH     ANSY,ENSUBANL
          GOTO      KSUB9000 IF EQUAL       * have a sub-analysis code
.
KSUB5000  MOVE      DNO,DXSUBANL
          MATCH     ANSN,ENSUBANL
          GOTO      KSUB9000 IF EQUAL       * no sub-analysis code
          BEEP
          GOTO      KSUB0000
KSUB9000  DISPLAY   *PKCOL:8,*V2LON,DXSUBANL
KSUB9999  RETURN
+
.*********************************************************************
.         enter foreign body flag
.*********************************************************************
.
KFGN0000  KEYIN     *PKCOL:9,*EL:
                    *PKCOL:9,*V2LON,ENFORGN:
                    *PKCOL:9,*DV,ENFORGN
.
          PACK      ENFORGN,ENFORGN,SP1
          REP       UPPLOW,ENFORGN
.
          MATCH     SP1,ENFORGN                  * foreign body blank ?
          GOTO      KFGN9999 IF EQUAL            * yes - finished
.
          MATCH     ANSY,ENFORGN                 * Yes input ?
          IF        @EQUAL
            MOVE      ANSF,ENFORGN
            DISPLAY   *PKCOL:9,*V2LON,"Yes"
            GOTO      KFGN9999
          ENDIF
.
          MATCH     ANSN,ENFORGN                 * No input ?
          IF        @EQUAL
            DISPLAY   *PKCOL:9,*V2LON,"No "
            GOTO      KFGN9999
          ENDIF
.
          BEEP                                   * invalid
          GOTO      KFGN0000
.
KFGN9999  RETURN
+
.*********************************************************************
.         enter the link codes
.*********************************************************************
LINK0000  MATCH     ANSN,ENSUBANL
          GOTO      LINK9000 IF EQUAL       * no link codes
.
          DISPLAY   *P1:9,*EF,*V2LON,*ULON:
                    *P1:10,"Item",*P6:10,"Code",*P11:10,"Description        ":
                    *P41:10,"Item",*P46:10,"Code",*P51:10,"Description        ":
                    *HOFF,*V2LON,*P3:11,"1",*P3:12,"2",*P3:13,"3":
                    *P3:14,"4",*P3:15,"5",*P43:11,"6",*P43:12,"7",*P43:13,"8":
                    *P43:14,"9",*P42:15,"10":
                    *HOFF,*P4:11,".",*P4:12,".",*P4:13,".":
                    *P4:14,".",*P4:15,".",*P44:11,".",*P44:12,".",*P44:13,".":
                    *P44:14,".",*P44:15,"."
.
          CALL      DSDL0000                * display default links
          BRANCH    EXIT,LINK3000           * have defaults
          MOVE      ONE,CCITEM
.
LINK1000  CALL      KLNK0000                * enter the link code
          BRANCH    EXIT,LINK3000           * nothing entered
.
          ADD       ONE,CCITEM
          COMPARE   TEN1,CCITEM
          GOTO      LINK1000 IF LESS        * more codes to enter
.
LINK3000  CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      LINK5000 IF EQUAL       * post
          GOTO      LINK9999 IF LESS        * cancel
.
          COMPARE   TEN1,CCITEM
          GOTO      LINK3100 IF NOT LESS    * too high
.
          CALL      KLNK0000                * enter the link code
          GOTO      LINK3000
.
LINK3100  BEEP
          GOTO      LINK3000
.
.         (P)ost the links
.
LINK5000  PERFORM   ENTYPE,DDLK0000,LINK9999,DILK0000,DTLK0000
          PERFORM   ENTYPE,PDLK0000,LINK9999,PILK0000,PTLK0000
          GOTO      LINK9999
.
.         there should be no link codes on file
.
LINK9000  PERFORM   ENTYPE,DDLK0000,LINK9999,DILK0000,DTLK0000
LINK9999  RETURN
+
.*********************************************************************
.         delete all codes off aaegdlfd for a diagnosis code
.*********************************************************************
DDLK0000  PACK      KEY3,ENCODE2,SP1
          CALL      RSAEGDL1
          CALL      RKAEGDL1
          BRANCH    OVRCD,DDLK9999
          MATCH     AEDLMAIN,ENCODE2
          GOTO      DDLK9999 IF NOT EQUAL
.
          PACK      KEY3,AEDLMAIN,AEDLCODE
          CALL      DEAEGDL1
          GOTO      DDLK0000
.
DDLK9999  RETURN
+
.*********************************************************************
.         delete all codes off aaegilfd for an investigation code
.*********************************************************************
DILK0000  PACK      KEY6,ENCODE,SP2
          CALL      RSAEGIL1
          CALL      RKAEGIL1
          BRANCH    OVRCD,DILK9999
          MATCH     AEILMAIN,ENCODE
          GOTO      DILK9999 IF NOT EQUAL
.
          PACK      KEY6,AEILMAIN,AEILCODE
          CALL      DEAEGIL1
          GOTO      DILK0000
.
DILK9999  RETURN
+
.*********************************************************************
.         delete all codes off aaegtlfd for an treatment code
.*********************************************************************
DTLK0000  PACK      KEY6,ENCODE,SP2
          CALL      RSAEGTL1
          CALL      RKAEGTL1
          BRANCH    OVRCD,DTLK9999
          MATCH     AETLMAIN,ENCODE
          GOTO      DTLK9999 IF NOT EQUAL
.
          PACK      KEY6,AETLMAIN,AETLCODE
          CALL      DEAEGTL1
          GOTO      DTLK0000
.
DTLK9999  RETURN
+
.*********************************************************************
.         post links to aaedglfd
.*********************************************************************
PDLK0000  MOVE      ZERO,FORM2              * loop counter
.
PDLK1000  ADD       ONE,FORM2
          COMPARE   TEN1,FORM2
          GOTO      PDLK9999 IF NOT LESS    * finished
.
          MATCH     SP2,ENLINKC[FORM2]
          GOTO      PDLK1000 IF EQUAL       * no code entered
.
          PACK      KEY3,ENCODE2,ENLINKC[FORM2]
          UNPACK    KEY3,AEDLMAIN,AEDLCODE
          MOVE      ENLINKD[FORM2],AEDLDESC
          MOVE      SP30,AEDLSPAR
          CALL      WRAEGDL1
          GOTO      PDLK1000
.
PDLK9999  RETURN
+
.*********************************************************************
.         post links to aaedilfd
.*********************************************************************
PILK0000  MOVE      ZERO,FORM2              * loop counter
.
PILK1000  ADD       ONE,FORM2
          COMPARE   TEN1,FORM2
          GOTO      PILK9999 IF NOT LESS    * finished
.
          MATCH     SP2,ENLINKC[FORM2]
          GOTO      PILK1000 IF EQUAL       * no code entered
.
          PACK      KEY6,ENCODE,ENLINKC[FORM2]
          UNPACK    KEY6,AEILMAIN,AEILCODE
          MOVE      ENLINKD[FORM2],AEILDESC
          MOVE      SP30,AEILSPAR
          CALL      WRAEGIL1
          GOTO      PILK1000
.
PILK9999  RETURN
+
.*********************************************************************
.         post links to aaedtlfd
.*********************************************************************
PTLK0000  MOVE      ZERO,FORM2              * loop counter
.
PTLK1000  ADD       ONE,FORM2
          COMPARE   TEN1,FORM2
          GOTO      PTLK9999 IF NOT LESS    * finished
.
          MATCH     SP2,ENLINKC[FORM2]
          GOTO      PTLK1000 IF EQUAL       * no code entered
.
          PACK      KEY6,ENCODE,ENLINKC[FORM2]
          UNPACK    KEY6,AETLMAIN,AETLCODE
          MOVE      ENLINKD[FORM2],AETLDESC
          MOVE      SP30,AETLSPAR
          CALL      WRAEGTL1
          GOTO      PTLK1000
.
PTLK9999  RETURN
+
.*********************************************************************
.         load all codes off aaegdlfd 
.*********************************************************************
LDLK0000  MOVE      ZERO,FORM2
          PACK      KEY3,ENCODE2,SP1
          CALL      RSAEGDL1
.
LDLK1000  CALL      RKAEGDL1
          BRANCH    OVRCD,LDLK9999
          MATCH     AEDLMAIN,ENCODE2
          GOTO      LDLK9999 IF NOT EQUAL
.
          MATCH     SP2,AEDLCODE
          GOTO      LDLK1000 IF EQUAL       * no code to add
. 
          ADD       ONE,FORM2
          PACK      ENLINKC[FORM2],AEDLCODE,SP2
          MOVE      AEDLDESC,ENLINKD[FORM2]
          GOTO      LDLK1000
.
LDLK9999  RETURN
+
.*********************************************************************
.         load all codes off aaegilfd 
.*********************************************************************
LILK0000  MOVE      ZERO,FORM2
          PACK      KEY6,ENCODE,SP1
          CALL      RSAEGIL1
.
LILK1000  CALL      RKAEGIL1
          BRANCH    OVRCD,LILK9999
          MATCH     AEILMAIN,ENCODE
          GOTO      LILK9999 IF NOT EQUAL
.
          MATCH     SP2,AEILCODE
          GOTO      LILK1000 IF EQUAL       * no code to add
. 
          ADD       ONE,FORM2
          MOVE      AEILCODE,ENLINKC[FORM2]
          MOVE      AEILDESC,ENLINKD[FORM2]
          GOTO      LILK1000
.
LILK9999  RETURN
+
.*********************************************************************
.         laod all codes off aaegtlfd 
.*********************************************************************
LTLK0000  MOVE      ZERO,FORM2
          PACK      KEY6,ENCODE,SP1
          CALL      RSAEGTL1
.
LTLK1000  CALL      RKAEGTL1
          BRANCH    OVRCD,LTLK9999
          MATCH     AETLMAIN,ENCODE
          GOTO      LTLK9999 IF NOT EQUAL
.
          MATCH     SP2,AETLCODE
          GOTO      LTLK1000 IF EQUAL       * no code to add
. 
          ADD       ONE,FORM2
          MOVE      AETLCODE,ENLINKC[FORM2]
          MOVE      AETLDESC,ENLINKD[FORM2]
          GOTO      LTLK1000
.
LTLK9999  RETURN
+
.*********************************************************************
.         copy from WK vars to FIle vars
.*********************************************************************
WKFI0000  STORE     ENDESC,ENTYPE,AEDCDESC,AERCDESC,AEICDESC,AETCDESC
          STORE     ENSUBANL,ENTYPE,AEDCSUBA,ANS,AEICSUBA,AETCSUBA
          STORE     SP30,ENTYPE,AEDCSPAR,AERCSPAR,AEICSPAR,AETCSPAR
          STORE     ENFORGN,ENTYPE,ANS,AERCFLAG,ANS,ANS
WKFI9999  RETURN
+
.*********************************************************************
.         Copy FIle variables to WorK variables
.*********************************************************************
FIWK0000  LOAD      ENDESC,ENTYPE,AEDCDESC,AERCDESC,AEICDESC,AETCDESC
          LOAD      ENSUBANL,ENTYPE,AEDCSUBA,ANSN,AEICSUBA,AETCSUBA
          LOAD      ENFORGN,ENTYPE,SP1,AERCFLAG,SP1,SP1
          PERFORM   ENTYPE,LDLK0000,FIWK9999,LILK0000,LTLK0000
FIWK9999  RETURN
+
.*********************************************************************
.         Write a new record to the file
.*********************************************************************
WRIT0000  DISPLAY   *P50:24,*V2LON,"*** POSTING ***"
          STORE     ENCODE,ENTYPE,AEDCCODE,AERCCODE,AEICCODE,AETCCODE
          CALL      WKFI0000
          PERFORM   ENTYPE,WRAEGDC1,WRAEGRC1,WRAEGIC1,WRAEGTC1
          DISPLAY   *P50:24,*EL;
WRIT9999  RETURN
+
.*********************************************************************
.*                  UPDT0000                    Called by : MODI0000 *
.*        Change an existing record                                  *
.*********************************************************************
UPDT0000  DISPLAY   *P50:24,*V2LON,"*** UPDATING ***"
          STORE     ENCODE,ENTYPE,AEDCCODE,AERCCODE,AEICCODE,AETCCODE
          CALL      WKFI0000
          PERFORM   ENTYPE,UPAEGDC1,UPAEGRC1,UPAEGIC1,UPAEGTC1
          DISPLAY   *P50:24,*EL;
UPDT9999  RETURN
+
.*********************************************************************
.*                  DELT0000                    Called by : DELI0000 *
.*        Delete a record                                            *
.*********************************************************************
DELT0000  DISPLAY   *P50:24,*V2LON,"*** DELETING ***"
          MOVE      ENCODE,KEY2
          MOVE      ENCODE,KEY4
          PERFORM   ENTYPE,DEAEGDC1,DEAEGRC1,DEAEGIC1,DEAEGTC1
          PERFORM   ENTYPE,DDLK0000,DELT9999,DILK0000,DTLK0000
          DISPLAY   *P50:24,*EL;
DELT9999  RETURN
+
.*********************************************************************
.         Clear all the input variables
.*********************************************************************
CLRV0000  MOVE      SP4,ENCODE
          MOVE      ZERO,ENTYPE
          MOVE      SP20,ENDESC
          MOVE      SP1,ENSUBANL
          MOVE      SP1,ENFORGN
          CALL      CLRL0000
CLRV9999  RETURN
+
.*********************************************************************
.         keyin the link code
.*********************************************************************
KLNK0000  CALL      GKRW0000                * get keyin row
          MOVE      ENLINKC[CCITEM],ENLINK * get default code
          MOVE      SP2,ENLINKC[CCITEM]    * clear the original code
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,ENLINK
          PACK      ENLINK,ENLINK,SP1
          MATCH     SP1,ENLINK
          GOTO      KLNK9900 IF EQUAL       * nothing entered
.
.         see if code already entered
.
          MOVE      ONE,FORM2
          WHILE     FORM2 <= 10
            MATCH     ENLINK,ENLINKC[FORM2]
            IF        @EQUAL
              DISPLAY   *P1:24,*B,"Code has already been entered.  ",*EL;
              CALL      HITENTER
              GOTO      KLNK0000
            ENDIF
            ADD     ONE,FORM2
          DO
.
.         store the code and enter the description
.
          PACK      ENLINKC[CCITEM],ENLINK,SP2
          ADD       THREE,CCOL
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,ENLINKD[CCITEM]
          PACK      ENLINKD[CCITEM],ENLINKD[CCITEM],SP20
          MOVE      ZERO,EXIT
          GOTO      KLNK9999
.
.         nothing entered
.
KLNK9900  DISPLAY   *PCCOL:CVERT,SP20,SP5
          MOVE      SP2,ENLINKC[CCITEM]
          MOVE      SP20,ENLINKD[CCITEM]
          MOVE      ONE,EXIT
.
KLNK9999  RETURN
+
.*********************************************************************
.         display the default links
.*********************************************************************
DSDL0000  MOVE      ZERO,EXIT
          MOVE      ZERO,CCITEM             * set count
.
DSDL1000  ADD       ONE,CCITEM
          COMPARE   TEN1,CCITEM
          GOTO      DSDL9999 IF NOT LESS
.
          MATCH     SP2,ENLINKC[CCITEM]
          GOTO      DSDL1000 IF EQUAL       * no code to display
.
          CALL      GKRW0000                * get the keyin row
          DISPLAY   *PCCOL:CVERT,*V2LON,ENLINKC[CCITEM],*HOFF:
                    SP1,ENLINKD[CCITEM]
          MOVE      ONE,EXIT                * have a code
          GOTO      DSDL1000
.
DSDL9999  RETURN
+
.*********************************************************************
.         get the keyin/display row for link codes
.*********************************************************************
GKRW0000  IF        CCITEM >= SIX
            MOVE      "48",CCOL
            ASSIGN    CCITEM+5,CVERT
          ELSE
            MOVE      "8",CCOL
            ASSIGN    CCITEM+10,CVERT
          ENDIF
GKRW9999  RETURN
+
.*********************************************************************
.         clear link codes
.*********************************************************************
CLRL0000  MOVE      ONE,FORM2
          WHILE     FORM2 <= 10
            MOVE      SP2,ENLINKC[FORM2]
            MOVE      SP20,ENLINKD[FORM2]
            ADD       ONE,FORM2
          DO
          MOVE      SP20,ENDESC
          MOVE      SP1,ENSUBANL
          MOVE      SP1,ENFORGN
CLRL9999  RETURN
+
.*********************************************************************
.*                  SCRA0000                    Called by : ADDI0000 *
.*        Display the screen for the key variables                   *
.*********************************************************************
SCRA0000  DISPLAY   *P1:3,*EF:
                    *P5:4,"Type of Code      : ":
                    *P5:5,"Code              : "
SCRA9999  RETURN
+
.*********************************************************************
.         Display the screen for non-key information
.*********************************************************************
SCRB0000  DISPLAY   *P1:6,*EF,*V2LON:
                    *P2:7,"1",*P2:8,"2",*HOFF:
                    *P3:7,". Description       : ":
                    *P3:8,". Sub-Analysis Code : "
.
          IF        ENTYPE = 2
            DISPLAY   *P2:9,*V2LON,THREE,*HOFF,". Foreign Body (",*V2LON,ANSY:
                      *HOFF,SLASH,*V2LON,ANSN,*HOFF,"):"
          ENDIF
.
          BRANCH    MOPTION,SCRB9999        * dont display for insert mode
.
          MOVE      DNO,DXSUBANL
          MATCH     ANSY,ENSUBANL
          IF        @EQUAL
            MOVE      DYES,DXSUBANL
          ENDIF
          DISPLAY   *PKCOL:7,*V2LON,ENDESC,*HOFF:
                    *PKCOL:8,*V2LON,DXSUBANL
.
          IF        ENTYPE = 2
            MATCH     ANSN,ENFORGN
            IF        @EQUAL
              DISPLAY   *PKCOL:9,*V2LON,"No "
            ENDIF
            MATCH     ANSF,ENFORGN
            IF        @EQUAL
              DISPLAY   *PKCOL:9,*V2LON,"Yes"
            ENDIF
          ENDIF
.
SCRB9999  RETURN
+
          INC       STD001IO
          INC       AAEGDCIO/INC            * diagnosis main codes
          INC       AAEGDLIO/INC            * diagnosis sub-analysis
          INC       AAEGICIO/INC            * investigation 
          INC       AAEGILIO/INC            * investigation sub-analysis
          INC       AAEGTCIO/INC            * treatment
          INC       AAEGTLIO/INC            * treatment sub-analysis
          INC       AAEGRCIO/INC            * diagnosis regions
...............................................................................
