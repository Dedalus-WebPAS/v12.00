.***************************************************************************
.* System    :   Inpatients                                                *
.* Program   :   F93PMAID                                                  *
.* Desc      :   This program will write a new record to pmsaidaf for      *
.*               all patients that currently have a value in               *
.*               pmspx2af.pmpxcser                                         *
.***************************************************************************
.* Date      :   10/06/2004                                                *
.* Author    :   Jill Habasque                                             *
.*                                                                         *
.* Modifications :                                                         *
.*        V9.03.02   21/07/2004  Jill Habasque CAR 51927                   *
.*                   Mods to replace C in id field                         *
.*        V9.03.01   21/07/2004  Jill Habasque CAR 51927                   *
.*                   Changed to pack pmaialid with rjuscode and spaces     *
.***************************************************************************
.
          INC       STD001FD
          INC       PATCODFD/INC
          INC       PMSAIDFD/INC
          INC       PMSPX2FD/INC
          INC       PATMA1FD/INC
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CHRCOUNT  FORM      2
CODE      DIM       2
DIM20     DIM       20
JUSTNO    FORM      2
LJUSCODE  DIM       80
RJUSCODE  DIM       80
SAVDIM20  DIM       20
TYPE      DIM       3
TYPEDESC  DIM       25
.
PRGID     INIT      "F93PMAID"
PRGNAM    INIT      "Copy pmpxcser to Alternate ID table"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000         * proceed with clean up
.
ML1000    CALL      KEYTYP00
          BRANCH    EXIT,ML1000,ML0100
.
ML1500    CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML2000:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML2000    CALL      PROC0000               * process pmspx2af
          CALL      PROM0000               * process patma1af
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                KEYTYP00             Called by: ML0000    *
.*                             Key in the type to default                   *
.****************************************************************************
KEYTYP00  MOVE      ZERO,EXIT
          DISPLAY   *P1:22,"Type of Alternate ID"
          MOVE      "30",ECOL
          MOVE      "22",EVERT
          PACK      CODE,ANSA,ANSI,SP70
          MOVE      ONE,CKYIMAND
          CALL      PATCODKY                * Keyin the ID type
          BRANCH    EXIT,KEYTYP95,KEYTYP99
.
          MOVE      ACODE,TYPE
          MOVE      TDESC,TYPEDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,TYPE:
                    *PECOL:EVERT,*HOFF,TYPEDESC;
          GOTO      KEYTYP99
.
KEYTYP95  UNPACK    SP70,TYPE,TYPEDESC
          DISPLAY   *PECOL:EVERT,*EL;
          MOVE      ONE,EXIT
          GOTO      KEYTYP99
.
KEYTYP97  MOVE      TWO,EXIT
KEYTYP99  RETURN
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          OPEN      PATCODE1,"patcodes"
.
          OPEN      PMSAIDA1,"pmsaidaf"
.
          OPEN      PMSPX2A1,"pmspx2af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
.
PROC0000  PACK      KEY8,SP70
          CALL      RSPMPX21
PROC1000  CALL      RKPMPX21
          BRANCH    OVRCD,PROC9999
.
          MATCH     SP70,PMPXCSER
          GOTO      PROC1000 IF EQUAL
.
          MOVE      SP70,SAVDIM20
          UNPACK    PMPXCSER,DIM1,SAVDIM20
          TYPE      DIM1
          IF        @EQUAL
            PACK      DIM20,TCINDC1,PMPXCSER,SP70
          ELSE
            PACK      DIM20,TCINDC1,SAVDIM20,SP70
          ENDIF
.
          REP       "- ",DIM20
          SQUEEZE   DIM20
          PACK      LJUSCODE,DIM20,SP70
          MOVE      "20",JUSTNO
          CALL      RJUS0000
          PACK      PMAIALID,RJUSCODE,SP70
.
          PACK      PMAIURNO,PMPXURNO,SP70
          PACK      PMAITYPE,TYPE,SP70
.
          PACK      KEY31,PMAIURNO,PMAITYPE,PMAIALID,SP70
          CALL      RAPMAID1
          IF        OVRCD=1
            CALL      WRPMAID1
          ENDIF
.
          GOTO      PROC1000
.
PROC9999  RETURN
+
.**************************************************************************
.*                               PROM0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
.
PROM0000  PACK      KEY8,ANSC,SP70
          CALL      RDSMAST1
PROM1000  CALL      RDKMAST1
          BRANCH    OVRCD,PROM9999
.
          CMATCH    ANSC,PURNO
          GOTO      PROM9999 IF NOT EQUAL
.
          MATCH     SP70,PPSNAME
          GOTO      PROM1000 IF NOT EQUAL
.
          MOVE      SP70,SAVDIM20
          UNPACK    PURNO,DIM1,SAVDIM20
          PACK      DIM20,TCINDC1,SAVDIM20,SP70
.
          REP       "- ",DIM20
          SQUEEZE   DIM20
          MOVE      DIM20,LJUSCODE
          MOVE      "20",JUSTNO
          CALL      RJUS0000
          MOVE      RJUSCODE,PMAIALID
.
          PACK      PMAIURNO,PURNO,SP70
          PACK      PMAITYPE,TYPE,SP70
.
          PACK      KEY31,PMAIURNO,PMAITYPE,PMAIALID,SP70
          CALL      RAPMAID1
          IF        OVRCD=1
            CALL      WRPMAID1
          ENDIF
.
          GOTO      PROM1000
.
PROM9999  RETURN
+
.******************************************************************************
.*                                  RJUS0000              Called by: GDAT0000 *
.*                            Right Justify The Code                          *
.******************************************************************************
RJUS0000  PACK      RJUSCODE,SP70,SP70
          RESET     LJUSCODE,JUSTNO
          MOVE      ZERO,CHRCOUNT
RJUS1000  CMATCH    SP1,LJUSCODE
          GOTO      RJUS2000 IF NOT EQUAL
.
          ADD       ONE,CHRCOUNT
          BUMP      LJUSCODE,-1
          GOTO      RJUS2000 IF EOS
.
          COMPARE   JUSTNO,CHRCOUNT
          GOTO      RJUS1000 IF LESS
.
RJUS2000  RESET     LJUSCODE
          CLEAR     RJUSCODE
          RESET     RJUSCODE,CHRCOUNT
          APPEND    LJUSCODE,RJUSCODE
          RESET     RJUSCODE
.
RJUS9000  MOVE      ZERO,EXIT
RJUS9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       PATCODKY
          INC       PATCODIO/INC
          INC       PMSAIDIO/INC
          INC       PMSPX2IO/INC
          INC       PATMA1IO/INC
