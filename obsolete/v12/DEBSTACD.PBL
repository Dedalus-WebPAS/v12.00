.----------------------------------------------------------------------
.    File          : DEBSTACD.PBL
.    
.    Function      : Include to Print Debtors Statements
.
.    Modifications : 
.
.         V9.05.01  24/03/2006  Peter Vela   CAR 61299
.                   Increased field no size from DIM3 to DIM5  
.         V9.04.01  21/04/2005  Mike Laming  CAR 59741
.                   Add CFDBSLAY=13 for Mercy Health & Aged Care
.----------------------------------------------------------------------
.VF.01.B01 05.03.2001  Sandra Barcham 
.          Add in standard 132 columns
.----------------------------------------------------------------------
.VF.01.B00 13.04.2000  Charles Handaya                                         
.          Add in Print GST Stationery Template feature
.----------------------------------------------------------------------
.V6.00.00  25.04.95 B.G.Ackland
.----------------------------------------------------------------------
.
.    Operation     : The calling program should have already performed a
.                    SELPRINT to select the printer being used. 
.
.                    For the Statement  Print Routines the following files
.                    should have been read 
.                                 DBDB - Debtors Masterfile
.                    The following files need to be open
.                                 debdbtaf
.                                 debfthaf
.                                 debfdtaf
.                                 debfnoaf
.                                 debitmaf
.
.                    The following includes are required
.                          DEBINVDF.PBL
.                          DEBCONFD.INC
.                          DEBDBTFD.INC
.                          DEBFTHFD.INC
.                          DEBFDTFD.INC
.                          DEBFNOFD.INC
.
.                          DEBFADCD.PBL
.                          DEBDBTIO.INC
.                          DEBFTHIO.INC
.----------------------------------------------------------------------
. Print Statement Linup
.----------------------------------------------------------------------
STAPL000  CALL      OPNPRINT
          MOVE      STAMESS1,SVSTAMS1
          MOVE      STAMESS2,SVSTAMS2
          READ      CONTROLF,EIGHTY1;*43,CFDBBLIN,CFDBBLST:
                                      CFDBETEL,*243,CFDBILAY,CFDBSLAY
          LOAD      MAXCLNO,CFDBSLAY,TWENTY7,TWENTY7,TWENTY8,TWENTY4,TWENTY7:
                                     TWENTY7,TWENTY5,TEN9,TWENTY2,TWENTY7:
                                     THIRTY3,TWENTY1,TWENTY5           *C-59741
.
          MOVE       " 66",MAXLENGT
          IF         CFDBSLAY=2
            MOVE       " 70",MAXLENGT
          ENDIF
.
          BRANCH    CFDBSLAY,STAPL110,STAPL120,STAPL130,STAPL140,STAPL150:
                             STAPL160,STAPL170,STAPL180,STAPL190,STAPL200:
                             STAPL210,STAPL220,STAPL230                *C-59741
.
STAPL110  CALL      LNSTD000     * Standard
          GOTO      STAPL999
.
STAPL120  CALL      LNEPW000     * Epworth
          GOTO      STAPL999
.
STAPL130  CALL      LNMOD000     * Modbury
          GOTO      STAPL999
.
STAPL140  CALL      LNSTH000     * Southland
          GOTO      STAPL999
.
STAPL150  CALL      LNCHC000     * Coast Health
          GOTO      STAPL999
.
STAPL160  CALL      LNHWK000     * Hawkes Bay
          GOTO      STAPL999
.
STAPL170  CALL      LNHSH000     * Holy Spirit
          GOTO      STAPL999
.
STAPL180  CALL      LNWGH000     * West Gippsland
          GOTO      STAPL999
.
STAPL190  CALL      LNWWH000     * West Wimmera
          GOTO      STAPL999
.
STAPL200  CALL      LNHUT000     * Hutt Valley
          GOTO      STAPL999
.
STAPL210  CALL      LNBHS000     * Ballarat Health Services
          GOTO      STAPL999
.
STAPL220  CALL      LN132000     * Standard 132 Columns
          GOTO      STAPL999
.
STAPL230  CALL      LNHSH000     * MHAC uses Holy Spirit format        *I-59741
          GOTO      STAPL999
.
STAPL999  MOVE      SVSTAMS1,STAMESS1
          MOVE      SVSTAMS2,STAMESS2
          CALL      CLSPRINT
          RETURN
.------------------------------------------------------------------------------
. Lineup print for statements 
.------------------------------------------------------------------------------
LNSTD000  CALL      STMPL000        * Set up for Templating
          IF        TMPLTFLG=0
            CALL      XSET0000      * Set Variables value for lineup
            MOVE      ZERO,HEADTAIL * Flagged to Header
            CALL      XSTA0000      * Print Tax Statement Header
            PRINT     *N;
.
            PRINT     *2,CPCDATE,*13,"XXXXXXX",*21,DBFHUR1:
                      *47,DBFHDOC,*67,PRBALANC
            MOVE      ONE,CURRROW
            MOVE      MAXCLNO,F3
            CALL      XPOS0000
.
            IF        TMPLTFLG=0
              MOVE      ONE,HEADTAIL  * Flagged to Tail
              CALL      XSTA0000    * Print Tax Statement Tail
              PRINT     " "
            ENDIF
            GOTO      LNSTD999
          ENDIF
.
          PRINT     *N,*N,*N,*N,*N,*N,*N:
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*2,"000000",*71,"000000":
                    *N,*N,*N,*71,"00/00/00":
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *45,"REFERENCE",*N:
                    *N,*2,"XXXXXXXXXX":
                    *12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *42,"00000.00",*51,"XXXX":
                    *59,"0000000.00",*71,"0000000.00":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*71,"0000000.00":
                    *N,*N,*71,"0000000.00":
                    *N,*N,*N,*N:
                    *N,*71,"0000000.00":
                    *N,*N,*2,"00/00/00",*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*13,"000000",*25,"000000":
                    *N,*N,*N,*N,*N
LNSTD999  RETURN
.------------------------------------------------------------------------------
. Lineup print for statements (EPWORTH)
.------------------------------------------------------------------------------
LNEPW000  CALL      STMPL000        * Set up for Templating
          IF        TMPLTFLG=0
            CALL      XSET0000      * Set Variables value for lineup
            MOVE      ZERO,HEADTAIL * Flagged to Header
            CALL      XSTA0000      * Print Tax Statement Header
            PRINT     *N;
.
            PRINT     *1,CPCDATE,*12,"XXX",*16,"XXXXXXXXXXXXXXXXXXXXXXXX":
                      *41,"999999999999",*54,"999999999999",*67,PRBALANC
            MOVE      ONE,CURRROW
            MOVE      MAXCLNO,F3
            CALL      XPOS0000
.
            IF        TMPLTFLG=0
              MOVE      ONE,HEADTAIL  * Flagged to Tail
              CALL      XSTA0000    * Print Tax Statement Tail
              PRINT     " "
            ENDIF
            GOTO      LNEPW999
          ENDIF
.
          PRINT     *N,*N,*N,*N:
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXX",*36,"0000":
                    *N,*N,*N,*2,"000000",*71,"000000":
                    *N,*N,*N,*71,"99/99/99":
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *35,"REFERENCE",*55,"INVOICE",*N:
                    *N,*2,"99/99/99":
                    *11,"XXXXXXX",*35,"XXXXXXXXXXXXXXX",*55,"XXXXXXXXXXXXXXX":
                    *71,"9999999.99":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*71,"0000000.00":
                    *N,*N,*71,"0000000.00":
                    *N,*N,*N,*N:
                    *N,*71,"0000000.00":
                    *N,*N,*2,"00/00/00",*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*13,"000000",*25,"000000":
                    *N,*N,*N,*N,*N,*N
.
LNEPW999  RETURN
.------------------------------------------------------------------------------
. Lineup print for statements (MODBURY)
.------------------------------------------------------------------------------
LNMOD000  CALL      STMPL000        * Set up for Templating
          IF        TMPLTFLG=0
            CALL      XSET0000      * Set Variables value for lineup
            MOVE      ZERO,HEADTAIL * Flagged to Header
            CALL      XSTA0000      * Print Tax Statement Header
            PRINT     *N;
.
            PRINT     *1,CPCDATE,*12,"XXX":
                      *35,"999999999999",*52,"999999999999",*68,PRBALANC
            MOVE      ONE,CURRROW
            MOVE      MAXCLNO,F3
            CALL      XPOS0000
.
            IF        TMPLTFLG=0
              MOVE      ONE,HEADTAIL  * Flagged to Tail
              CALL      XSTA0000    * Print Tax Statement Tail
              PRINT     " "
            ENDIF
            GOTO      LNMOD999
          ENDIF
.
         PRINT      *N,*N,*N,*N,*N,*N,*N:
                    *N,*3,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*3,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*3,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*3,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*3,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*N:
                    *2,"XXXXXXXX":
                    *N,*N,*N,*2,"STATEMENT",*72,"99/99/9999":
                    *N,*N,*N,*N,*N:
                    *1,"XX/XX/XXXX":
                    *12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *47,"00000000 0000000000.00 000000000.00":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*71,"00000000.00":
                    *N,*N,*N,*N,*N,*N,*N,*1,"99/99/9999":
                    *13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*71,"00000000.00":
                    *N,*13,"9999999999"
.
LNMOD999  RETURN
.------------------------------------------------------------------------------
. Lineup print for statements (STH)
.------------------------------------------------------------------------------
LNSTH000  PRINT     *N,*N,*N,*N,*N,*N,*N:
                    *N,*5,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*5,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*5,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*5,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*5,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*2,"000000",*71,"000000":
                    *N,*N,*N,*71,"00/00/00":
                    *N,*N,*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *45,"REFERENCE":
                    *N,*2,"XXXXXXXXXX":
                    *12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *42,"00000.00",*51,"XXXX":
                    *59,"0000000.00",*71,"0000000.00":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*71,"0000000.00":
                    *N,*N,*71,"0000000.00":
                    *N,*N,*N,*N:
                    *N,*71,"0000000.00":
                    *N,*N,*2,"00/00/00",*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*13,"000000",*25,"000000":
                    *N,*N,*N,*N,*N
          RETURN
.------------------------------------------------------------------------------
. Lineup print for statements (CHC)
.------------------------------------------------------------------------------
LNCHC000  PRINT     *N,*N,*N,*N,*N:
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXX",*36,"0000":
                    *N,*N,*N,*2,"000000",*71,"000000":
                    *N,*N,*N,*71,"99/99/99":
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *35,"REFERENCE",*55,"INVOICE",*N:
                    *N,*2,"99/99/99":
                    *11,"XXXXXXX",*35,"XXXXXXXXXXXXXXX",*55,"XXXXXXXXXXXXXXX":
                    *71,"9999999.99":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*71,"0000000.00":
                    *N,*N,*71,"0000000.00":
                    *N,*N,*N,*N:
                    *N,*71,"0000000.00":
                    *N,*N,*2,"00/00/00",*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*13,"000000",*25,"000000":
                    *N,*N,*N,*N,*N,*N,*N
          RETURN
.------------------------------------------------------------------------------
. Lineup print for statements (HWK)
.------------------------------------------------------------------------------
LNHWK000  PRINT     *N,*N,*N,*N,*N,*N,*N:
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*2,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*2,"000000",*71,"000000":
                    *N,*N,*N,*71,"00/00/00":
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *45,"REFERENCE",*N:
                    *N,*2,"XXXXXXXXXX":
                    *12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *42,"00000.00",*51,"XXXX":
                    *59,"0000000.00",*71,"0000000.00":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*71,"0000000.00":
                    *N,*N,*71,"0000000.00":
                    *N,*N,*N,*N:
                    *N,*71,"0000000.00":
                    *N,*N,*2,"00/00/00",*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*13,"000000",*25,"000000":
                    *N,*N,*N,*N,*N
          RETURN
.------------------------------------------------------------------------------
. Lineup print for statements (HSH)
.------------------------------------------------------------------------------
LNHSH000  CALL      STMPL000        * Set up for Templating
          IF        TMPLTFLG=0
            CALL      XSET0000      * Set Variables value for lineup
            MOVE      ZERO,HEADTAIL * Flagged to Header
            CALL      XSTA0000      * Print Tax Statement Header
            PRINT     *N;
.
            IF        CFDBSLAY = 13
              PRINT     *1,CPCDATE,*12,DBITDES:                        *I-59741
                        *53,DIM12A,*66,PRBALANC                        *I-59741
            ELSE                                                       *I-59741
              PRINT     *1,CPCDATE,*12,DBITDES:
                        *49,"XXX",*53,DIM12A,*66,PRBALANC
            ENDIF
.
            MOVE      ONE,CURRROW
            MOVE      MAXCLNO,F3
            CALL      XPOS0000
.
            IF        TMPLTFLG=0
              MOVE      ONE,HEADTAIL  * Flagged to Tail
              CALL      XSTA0000    * Print Tax Statement Tail
              PRINT     " "
            ENDIF
            GOTO      LNHSH999
          ENDIF
.
         PRINT      *N,*N,*N,*N,*N,*N,*N,*54,"Debtor No. : ","XXXXXXXX",*N,*N:
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*38,"XXXX":
                    *N,*N,*N,*N,*N,*N,*N:
                    *1,"PAGE ","XXX",*12,"XXXXXXXXXX",*65,"99/99/9999":
                    *N,*N,*N,*N:
                    *1,"99/99/99",*22,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *67,"9999999999.99":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*67,"9999999999.99"
.
LNHSH999 RETURN
.------------------------------------------------------------------------------
. Lineup print for Statements (WGH)
.------------------------------------------------------------------------------
LNWGH000  CALL      STMPL000        * Set up for Templating
          IF        TMPLTFLG=0
            CALL      XSET0000      * Set Variables value for lineup
            MOVE      ZERO,HEADTAIL * Flagged to Header
            CALL      XSTA0000      * Print Tax Statement Header
            PRINT     *N;
.
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *35,DIM12,*52,DIM12A,*68,PRBALANC
            MOVE      ONE,CURRROW
            MOVE      MAXCLNO,F3
            CALL      XPOS0000
.
            IF        TMPLTFLG=0
              MOVE      ONE,HEADTAIL  * Flagged to Tail
              CALL      XSTA0000    * Print Tax Statement Tail
              PRINT     " "
            ENDIF
            GOTO      LNWGH999
          ENDIF
.
         PRINT      *N,*N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N
         PRINT      *2,"XXXXXXXX",*20,"STATEMENT",*54,"99/99/9999":
                    *71,"9999999999":
                    *N,*N,*N,*N,*N,*N,*N:
                    *1,"XX/XX/XX":
                    *10,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *44,"00000000  0000000000.00   000000000.00":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N:
                    *71,"00000000.00":
                    *N,*N,*N,*N,*N,*N:
                    *N,*N,"99/99/9999",*15,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*N,*71,"00000000.00":
                    *N,*N,*N,*N,*3,"XXXXXXXX",*33,"9999999999"
.
LNWGH999 RETURN
.------------------------------------------------------------------------------
. Lineup print for  West Wimmera
.------------------------------------------------------------------------------
LNWWH000  CALL      STMPL000        * Set up for Templating
          IF        TMPLTFLG=0
            CALL      XSET0000      * Set Variables value for lineup
            MOVE      ZERO,HEADTAIL * Flagged to Header
            CALL      XSTA0000      * Print Tax Statement Header
            PRINT     *N;
.
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *20,DIM12,*33,DIM12A,*65,PRBALANC
            MOVE      ONE,CURRROW
            MOVE      MAXCLNO,F3
            CALL      XPOS0000
.
            IF        TMPLTFLG=0
              MOVE      ONE,HEADTAIL  * Flagged to Tail
              CALL      XSTA0000    * Print Tax Statement Tail
              PRINT     " "
            ENDIF
            GOTO      LNWWH999
          ENDIF
.
         PRINT      *N,*N,*60,"STATEMENT":
                    *N,*N,*N,*N,*51,"9999999999",*71,"99/99/99":
                    *N,*N,*N,*N:
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*N,*N,*2,"99999999":
                    *N,*N,*N:
                    *N,*1,"99/99/9999":
                    *12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *42,"00000.00",*54,"XXXX":
                    *60,"0000.00 00000000.00":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N:
                    *N,*67,"000000000.00":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*12,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *53,"99999999",*70,"9999999999":
                    *N,*N,*N,*N,*N,*67,"000000000.00"
.
LNWWH999 RETURN
.------------------------------------------------------------------------------
. Lineup print for statements (HUT)
.------------------------------------------------------------------------------
LNHUT000  PRINT     *N,*N,*N,*N,*N:
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*4,"XXXXXXXXXXXXXXXXXXXXXXXXX",*36,"0000":
                    *N,*N,*N,*2,"000000",*71,"000000":
                    *N,*N,*N,*71,"99/99/99":
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *35,"REFERENCE",*55,"INVOICE",*N:
                    *N,*2,"99/99/99":
                    *11,"XXXXXXX",*35,"XXXXXXXXXXXXXXX",*55,"XXXXXXXXXXXXXXX":
                    *71,"9999999.99":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*71,"0000000.00":
                    *N,*N,*71,"0000000.00":
                    *N,*N,*N,*N:
                    *N,*71,"0000000.00":
                    *N,*N,*2,"00/00/00",*13,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*13,"000000",*25,"000000":
                    *N,*N,*N,*N,*N,*N,*N
          RETURN
.------------------------------------------------------------------------------
. Lineup print for Ballarat Health Services
.------------------------------------------------------------------------------
LNBHS000  CALL      STMPL000        * Set up for Templating
          IF        TMPLTFLG=0
            CALL      XSET0000      * Set Variables value for lineup
            MOVE      ZERO,HEADTAIL * Flagged to Header
            CALL      XSTA0000      * Print Tax Statement Header
            PRINT     *N;
.
            MOVE      "99999999999.99",PRBALANC
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *20,DIM12,*33,DIM12A,*90,PRBALANC;
.
            PACK      DBDBDEB,X70
            MOVE      ONE,OVRCD
            CALL      RSBHS000      * print on the right side
.
            IF        TMPLTFLG=0
              MOVE      "999999999.99",PRTOTBAL
              MOVE      "999999999.99",BAL1
              MOVE      "999999999.99",BAL2
              MOVE      "999999999.99",BAL3
              MOVE      "999999999.99",CURR
              MOVE      ONE,HEADTAIL  * Flagged to Tail
              CALL      XSTA0000    * Print Tax Statement Tail
              PRINT     " "
            ENDIF
            GOTO      LNBHS999
          ENDIF
.
          PRINT     *82,"STATEMENT",*N,*N,*N,*N:
                    *N,*93,"99/99/9999":
                    *N,*N,*N,*N,*N:
                    *N,*15,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*15,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*15,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*15,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*15,"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX":
                    *N,*N,*N,*N,*N:
                    *N,*N,*N,*N:
                    *2,"99999999":
                    *N,*N,*N,*N,*N:
                    *1,"99/99/9999",*12,"XXXXXXX":
                    *20,"XXXXXXXXXXXX",*33,"XXXXXXXXXXXX",*90,"99999999999.99":
                    *N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N:
                    *114,"99999999":
                    *N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N:
                    *118,"999,999,999.99":
                    *N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*92,"999999999.99":
                    *3,"999999999.99","  999999999.99","  999999999.99":
                    "  999999999.99":
                    *N,*N
.
LNBHS999 RETURN
.------------------------------------------------------------------------------
. Lineup print for  Standard 132 Column
.------------------------------------------------------------------------------
LN132000  CALL      STMPL000        * Set up for Templating
          CALL      XSET0000      * Set Variables value for lineup
          MOVE      ZERO,HEADTAIL * Flagged to Header
          CALL      XSTA0000      * Print Tax Statement Header
          PRINT     *N;
.
          PRINT     *1,CPCDATE,*27,TRANDESC:
                    *35,DIM12,*48,DIM12A,*119,PRBALANC
.
.
          PRINT     *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N
.
          PRINT     *1,CPCDATE,*27,TRANDESC:
                    *35,DIM12,*48,DIM12A,*119,PRBALANC:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N
.
          MOVE      ONE,HEADTAIL  * Flagged to Tail
          CALL      XSTA0000    * Print Tax Statement Tail
          PRINT     " "
          GOTO      LN132999
.
LN132999 RETURN
.------------------------------------------------------------------------------
. Print Statement for a Debtor
.------------------------------------------------------------------------------
PRSTA000  READ       CONTROLF,EIGHTY1;*43,CFDBBLIN,CFDBBLST:
                                           CFDBETEL,CFDBECON,CFDBSQLA,CFDBSQLB:
                                           CFDBFDAT,CFDBTDAT,CFDBSTYR:
                                           CFDBCNAM,CFDBCAD1,CFDBCAD2,CFDBCPOS:
                                      *243,CFDBILAY,CFDBSLAY
          LOAD       MAXCLNO,CFDBSLAY,TWENTY7,TWENTY7,TWENTY8,TWENTY4,TWENTY7:
                                      TWENTY7,TWENTY5,TEN9,TWENTY2,TWENTY7:
                                      THIRTY3,TWENTY2,TWENTY5          *C-59741
.
          CALL       EXSTAT00            * Extract Statement Details
          BRANCH     NOSTATE,PRSTA999
.
          PACK       DBTEDES,SP70
          MOVE       ZERO,CLNO
          MOVE       ZERO,CPAGENO
.
          MOVE       ONE,TMPLTFLG
          CALL       FORAD000            * Format Name & Address
          BRANCH     CFDBSLAY,PRSTA060,PRSTA060,PRSTA060,PRSTA080,PRSTA080:
                             PRSTA080,PRSTA060,PRSTA060,PRSTA060,PRSTA080:
                             PRSTA060,PRSTA060,PRSTA060                *C-59741
.
PRSTA060  MOVE       " 66",MAXLENGT
          IF         CFDBSLAY=2
            MOVE       " 70",MAXLENGT
          ENDIF
          CALL       STMPL000            * Set up for Templating
.
PRSTA080  CALL       STHED000            * Print Statement Header
.
          PACK       KEY29,DBDBDEB,SP70
          CALL       RSDBTS2
PRSTA100  CALL       RKDBTS2             * Loop Through the Documents for this
          BRANCH     OVRCD,PRSTA900      * Debtor 
          MATCH      DBTSDEB,DBDBDEB
          GOTO       PRSTA890 IF NOT EQUAL
.
          PACK       KEY21,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL       RDDBFH1
          BRANCH     OVRCD,PRSTA100
.
          ASSIGN     DBFHTOT+DBFHTAX,AMT
          MATCH      "1",DBFHDTY        * If Invoice then Calculate Outstanding
          CALL       CPAID000 IF EQUAL  * From Detail Lines
.
          MOVE       DBFHDTY,F1
          BRANCH     F1,PRSTA160,PRSTA170,PRSTA180,PRSTA190,PRSTA200
.
PRSTA160  MOVE       ZERO,CREAMT       * Invoice
          MOVE       AMT,DEBAMT
          MOVE       AMT,BALANCE
          ADD        AMT,DEBTOT
          MOVE       "Invoice",TRANDESC
          MOVE       "Inv",DIM3
          GOTO       PRSTA210
.
PRSTA170  MOVE       ZERO,DEBAMT       * Credit Note
          MOVE       AMT,CREAMT
          MOVE       AMT,BALANCE
          MULT       SEQ,BALANCE
          ADD        AMT,CRETOT
          MOVE       "Credit ",TRANDESC
          MOVE       "Crd",DIM3
          GOTO       PRSTA210
.
PRSTA180  MOVE       ZERO,DEBAMT       * Cash
          MOVE       AMT,CREAMT
          MOVE       AMT,BALANCE
          MULT       SEQ,BALANCE
          ADD        AMT,CRETOT
          MOVE       "Cash   ",TRANDESC
          MOVE       "Csh",DIM3
          GOTO       PRSTA210
.
PRSTA190  MOVE       ZERO,CREAMT       * Debit Adjustment
          MOVE       AMT,DEBAMT
          MOVE       AMT,BALANCE
          ADD        AMT,DEBTOT
          MOVE       "Dr Adj.",TRANDESC
          MOVE       "Adj",DIM3
          GOTO       PRSTA210
.
PRSTA200  MOVE       ZERO,DEBAMT       * Credit Adjustment
          MOVE       AMT,CREAMT
          MOVE       AMT,BALANCE
          MULT       SEQ,BALANCE
          ADD        AMT,CRETOT
          MOVE       "Cr Adj.",TRANDESC
          MOVE       "Adj",DIM3
          GOTO       PRSTA210
.
PRSTA210  CALL      STLIN000
          GOTO      PRSTA100
.
PRSTA890  IF        CFDBSLAY=11
            MOVE      ONE,OVRCD
          ENDIF
.
PRSTA900  IF        CFDBSLAY=11
            ADD       ONE,CLNO
            CALL      RSBHS000           * print on the right side
            GOTO      PRSTA910
          ENDIF
.
          COMPARE   MAXCLNO,CLNO
          GOTO      PRSTA910 IF EQUAL
          PRINT     *N;
          ADD       ONE,CLNO
          GOTO      PRSTA900
.
PRSTA910  CALL      STEND000
.
PRSTA999  RETURN
.
CPAID000  MOVE      ZERO,AMT
          PACK      KEY44,DBTSDEB,DBTSDDAT,DBTSDOC,SP70
          PACK      KEY28,DBTSDEB,DBTSDDAT,DBTSDOC,SP70
          CALL      RSDBFD3
CPAID100  CALL      RKDBFD3
          BRANCH    OVRCD,CPAID900
          PACK      KEY44,DBFDDEB,DBFDIDAT,DBFDINV,SP70
          MATCH     KEY28,KEY44
          GOTO      CPAID900 IF NOT EQUAL
          MATCH     "1",DBFDDTY
          GOTO      CPAID190 IF EQUAL
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC
          CALL      RDDBFH1
          BRANCH    OVRCD,CPAID100
          MATCH     SP70,DBFHDSTA      * Must be printed on this statement 
          GOTO      CPAID100 IF EQUAL  * so don't adjust invoice outstanding
          MATCH     "4",DBFDDTY        * Check for Debit Adj
          GOTO      CPAID190 IF EQUAL
          SUB       DBFDTOT,AMT
          SUB       DBFDTAX,AMT
          GOTO      CPAID100
.
CPAID190  ADD       DBFDTOT,AMT
          ADD       DBFDTAX,AMT
          GOTO      CPAID100

CPAID900  PACK      KEY21,DBTSDEB,DBTSDTY,DBTSDOC
          CALL      RDDBFH1
          RETURN
.
CPHSH000  MOVE      ZERO,BALANCE
          PACK      KEY44,DBTSDEB,DBTSDDAT,DBTSDOC,SP70
          PACK      KEY28,DBTSDEB,DBTSDDAT,DBTSDOC,SP70
          CALL      RSDBFD3
CPHSH100  CALL      RKDBFD3
          BRANCH    OVRCD,CPHSH900
          PACK      KEY44,DBFDDEB,DBFDIDAT,DBFDINV,SP70
          MATCH     KEY28,KEY44
          GOTO      CPHSH900 IF NOT EQUAL
          MATCH     DIM8,DBFDITM
          GOTO      CPHSH100 IF NOT EQUAL
          MATCH     DIM3,DBFDILN
          GOTO      CPHSH100 IF NOT EQUAL
          MATCH     "1",DBFDDTY
          GOTO      CPHSH190 IF EQUAL
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC
          CALL      RDDBFH1
          BRANCH    OVRCD,CPHSH100
          MATCH     SP70,DBFHDSTA      * Must be printed on this statement 
          GOTO      CPHSH100 IF EQUAL  * so don't adjust invoice outstanding
          MATCH     "4",DBFDDTY        * Check for Debit Adj
          GOTO      CPHSH190 IF EQUAL
          SUB       DBFDTOT,BALANCE
          SUB       DBFDTAX,BALANCE
          SUB       DBFDQTY,F8
          GOTO      CPHSH100
.
CPHSH190  ADD       DBFDTOT,BALANCE
          ADD       DBFDTAX,BALANCE
          ADD       DBFDQTY,F8
          GOTO      CPHSH100

CPHSH900  PACK      KEY21,DBTSDEB,DBTSDTY,DBTSDOC
          CALL      RDDBFH1
          RETURN
.------------------------------------------------------------------------------
. Detail Line of Statements
.      1 Standard
.      2 Epworth   
.      3 Modbury    
.      4 Southland
.      5 Coast Healthcare
.      6 Hawkes Bay
.      7 Holy Spirit
.      8 West Gippsland
.      9 West Wimmera
.     10 Hutt Valley 
.     11 Ballarat Health Services
.     12 Standard 132 Columns
.     13 Mercy Health & Aged Care                                      *I-59741
.------------------------------------------------------------------------------
STLIN000  UNPACK    DBFHDDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          COMPARE   "11",CFDBSLAY
          GOTO      STLIN010 IF EQUAL
.
          MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
STLIN010  BRANCH    CFDBSLAY,STLIN110,STLIN120,STLIN130,STLIN140,STLIN150:
                             STLIN160,STLIN170,STLIN180,STLIN190,STLIN200:
                             STLIN210,STLIN220,STLIN230                *C-59741
.
STLIN110  PRINT     *2,CPCDATE,*13,TRANDESC,*21,DBFHUR1:
                    *47,DBFHDOC,*67,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN120  MATCH     "1",DBTSDTY
          GOTO      STLIN125 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            MOVE      DBFHUR1,D24
            CALL      FDTD0000
            PRINT     *1,CPCDATE,*12,DIM3,*16,D24:
                      *41,DIM12,*54,DIM12A,*67,PRBALANC
            ADD       ONE,CLNO
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN122  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN     DBFDTOT+DBFDTAX,BALANCE
.
          MATCH      "1",DBFDDTY
          GOTO       STLIN124 IF EQUAL
          MATCH      "4",DBFDDTY
          GOTO       STLIN124 IF EQUAL
.
          MULT       SEQ,BALANCE
.
STLIN124  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PACK      DBFHUR1,SP70
          PACK      KEY21,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RDDBFH1
          MOVE      DBFHUR1,D24
.
          PRINT     *1,CPCDATE,*12,DIM3,*16,D24:
                    *41,DIM12,*54,DIM12A,*67,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN122
.
STLIN125  MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PACK      DBFHUR1,SP70
          PACK      KEY21,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RDDBFH1
          MOVE      DBFHUR1,D24
.
          PRINT     *1,CPCDATE,*12,DIM3,*16,D24:
                    *41,DIM12,*67,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN130  MATCH     "1",DBTSDTY
          GOTO      STLIN135 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            CALL      FDTD0000
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *35,DIM12,*52,DIM12A,*68,PRBALANC
            ADD       ONE,CLNO
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN132  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN     DBFDTOT+DBFDTAX,BALANCE
.
          MATCH      "1",DBFDDTY
          GOTO       STLIN134 IF EQUAL
          MATCH      "4",DBFDDTY
          GOTO       STLIN134 IF EQUAL
.
          MULT       SEQ,BALANCE
.
STLIN134  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *35,DIM12,*52,DIM12A,*68,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN132
.
STLIN135  MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *35,DIM12,*68,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN140  PRINT     *1,CPCDATE,*12,TRANDESC,*20,DBFHUR1:
                    *46,DBFHDOC,*66,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN150  MATCH     "1",DBTSDTY
          GOTO      STLIN155 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            CALL      FDTD0000
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *35,DIM12,*54,DIM12A,*67,PRBALANC
            ADD       ONE,CLNO
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN152  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN     DBFDTOT+DBFDTAX,BALANCE
.
          MATCH      "1",DBFDDTY
          GOTO       STLIN154 IF EQUAL
          MATCH      "4",DBFDDTY
          GOTO       STLIN154 IF EQUAL
.
          MULT       SEQ,BALANCE
.
STLIN154  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *35,DIM12,*54,DIM12A,*67,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN152
.
STLIN155  MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *35,DIM12,*67,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN160  MATCH     "1",DBTSDTY
          GOTO      STLIN165 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            CALL      FDTD0000
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *35,DIM12,*54,DIM12A,*67,PRBALANC
            ADD       ONE,CLNO
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN162  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN     DBFDTOT+DBFDTAX,BALANCE
.
          MATCH      "1",DBFDDTY
          GOTO       STLIN164 IF EQUAL
          MATCH      "4",DBFDDTY
          GOTO       STLIN164 IF EQUAL
.
          MULT       SEQ,BALANCE
.
STLIN164  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *35,DIM12,*54,DIM12A,*67,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN162
.
STLIN165  MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *35,DIM12,*67,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN170  MATCH     "3",DBTSDTY
          GOTO      STLIN177 IF EQUAL
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          PACK      SAVKEY21,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN172  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,SAVKEY21
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          MOVE      ZERO,F8
          UNPACK    DBFDSDAT,CCENT,CYEAR,CMON,CDAY
          ASSIGN    DBFDTOT+DBFDTAX,BALANCE
.
          MATCH     "1",DBFDDTY
          IF        @EQUAL
            PACK      SAVKEY24,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
            MOVE      DBFDITM,DIM8
            MOVE      DBFDILN,DIM3
            CALL      CPHSH000
            MOVE      DIM8,DBFDITM
            MOVE      DIM3,DBFDILN
            MOVE      SAVKEY24,KEY24
            CALL      RDDBFD1
            GOTO      STLIN173
          ENDIF
          MATCH     "4",DBFDDTY
          GOTO      STLIN173 IF EQUAL
.
          MULT      SEQ,BALANCE
.
STLIN173  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PACK      DBITDES,SP70
          PACK      KEY8,DBFDITM,SP70
          CALL      RDDBIT1
.
          MATCH     SP70,DBITDES
          IF        @EQUAL
            MATCH     SP70,DBFDDREF
            IF        @EQUAL
              MATCH     SP70,DBFDOREF 
              IF        @EQUAL
                PACK      KEY27,DBFDDEB,DBFDDTY,DBFDDOC,DBFDDLN,SP70
                CALL      RSDBFN1
                CALL      RKDBFN1
                BRANCH    OVRCD,STLIN174
                MATCH     DBFDDEB,DBFNDEB
                GOTO      STLIN174 IF NOT EQUAL
                MATCH     DBFDDTY,DBFNDTY
                GOTO      STLIN174 IF NOT EQUAL
                MATCH     DBFDDOC,DBFNDOC
                GOTO      STLIN174 IF NOT EQUAL
                MATCH     DBFDDLN,DBFNDLN
                GOTO      STLIN174 IF NOT EQUAL
                MOVE      DBFNCOM,DBITDES
              ELSE      
                MOVE      DBFDOREF,DBITDES
              ENDIF
            ELSE
              MOVE      DBFDDREF,DBITDES
            ENDIF
          ENDIF
.
STLIN174  MATCH     "2",DBFDDTY                  * Print credit notes
          GOTO      STLIN175 IF NOT EQUAL
.
          MOVE      DBFDDREF,DBITDES
.                                                     * mods for MHAC  *I-59741
          IF        CFDBSLAY = 13
            PRINT     *1,CPCDATE,*12,DBITDES:                          *I-59741
                      *53,DIM12A,*66,PRBALANC                          *I-59741
          ELSE                                                         *I-59741
            PRINT     *1,CPCDATE,*12,DBITDES:
                      *49,DIM3,*53,DIM12A,*66,PRBALANC
          ENDIF 
          GOTO      STLIN179
.
STLIN175  MATCH     "1",DBFDDTY                  * Print Invoices
          GOTO      STLIN178 IF NOT EQUAL
.
          MOVE      DBITDES,DIM28
          MOVE      SP6,DIM6
          PACK      KEY8,DBITPTY,SP70
          CALL      RDDBPT1
          BRANCH    OVRCD,STLIN176
          PACK      KEY8,DBPTDEP,SP70
          CALL      RDDBDE1
          BRANCH    OVRCD,STLIN176
          MOVE      DBDEDES,DIM6
          MOVE      F8,F3
.
          MOVE      CPCDATE,SVDATE
          UNPACK    DBFDSDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,SERVDATE
          MOVE      SVDATE,CPCDATE
.
STLIN176  MOVE      SP1,ANS
.                                                     * mods for MHAC  *I-59741
          IF        CFDBSLAY = 13
            PRINT     *1,SERVDATE,*12,DBITDES:                         *I-59741
                      *53,DIM12A,*66,PRBALANC                          *I-59741
          ELSE                                                         *I-59741
            PRINT     *1,SERVDATE,*12,DIM28,*38,F3:
                      *42,DIM6,*49,DIM3,*53,DIM12A,*66,PRBALANC
          ENDIF                                                        *I-59741
          GOTO      STLIN179
.
STLIN177  CLEAR     DBITDES                       * Print receipt details
          APPEND    "RECEIPT",DBITDES
          APPEND    SP70,DBITDES
          RESET     DBITDES
          MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
          MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
.                                                     * mods for MHAC  *I-59741
          IF        CFDBSLAY = 13
            PRINT     *1,CPCDATE,*12,DBITDES:                          *I-59741
                      *53,DIM12,*66,PRBALANC                           *I-59741
          ELSE                                                         *I-59741
            PRINT     *1,CPCDATE,*12,DBITDES:
                      *49,DIM3,*53,DIM12,*66,PRBALANC
          ENDIF                                                        *I-59741
.
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN178  MOVE      SP1,ANS
.                                                     * mods for MHAC  *I-59741
          IF        CFDBSLAY = 13
            PRINT     *1,CPCDATE,*12,DBITDES:                          *I-59741
                      *53,DIM12A,*66,PRBALANC                          *I-59741
          ELSE                                                         *I-59741
            PRINT     *1,CPCDATE,*12,DBITDES:  *Prt adjust.
                      *49,DIM3,*53,DIM12A,*66,PRBALANC
          ENDIF                                                        *I-59741
.
          GOTO      STLIN179
.
STLIN179  ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN172
.
STLIN180  MATCH     "1",DBTSDTY
          GOTO      STLIN185 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            CALL      FDTD0000
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *35,DIM12,*52,DIM12A,*68,PRBALANC
            ADD       ONE,CLNO
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN182  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN     DBFDTOT+DBFDTAX,BALANCE
.
          MATCH      "1",DBFDDTY
          GOTO       STLIN184 IF EQUAL
          MATCH      "4",DBFDDTY
          GOTO       STLIN184 IF EQUAL
.
          MULT       SEQ,BALANCE
.
STLIN184  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *35,DIM12,*52,DIM12A,*68,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN182
.
STLIN185  MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *35,DIM12,*68,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN190  MATCH     "1",DBTSDTY
          GOTO      STLIN195 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            CALL      FDTD0000
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *20,DIM12,*33,DIM12A,*65,PRBALANC
            ADD       ONE,CLNO
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN192  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN     DBFDTOT+DBFDTAX,BALANCE
.
          MATCH      "1",DBFDDTY
          GOTO       STLIN194 IF EQUAL
          MATCH      "4",DBFDDTY
          GOTO       STLIN194 IF EQUAL
.
          MULT       SEQ,BALANCE
.
STLIN194  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *20,DIM12,*33,DIM12A,*65,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN192
.
STLIN195  MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *20,DIM12,*65,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN200  MATCH     "1",DBTSDTY
          GOTO      STLIN205 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            MOVE      DBFHUR1,D22
            CALL      FDTD0000
            PRINT     *1,CPCDATE,*12,DIM3,*16,D22:
                      *39,DIM12,*52,DIM12A,*65,PRBALANC
            ADD       ONE,CLNO
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN202  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN     DBFDTOT+DBFDTAX,BALANCE
.
          MATCH      "1",DBFDDTY
          GOTO       STLIN204 IF EQUAL
          MATCH      "4",DBFDDTY
          GOTO       STLIN204 IF EQUAL
.
          MULT       SEQ,BALANCE
.
STLIN204  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PACK      DBFHUR1,SP70
          PACK      KEY21,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RDDBFH1
          MOVE      DBFHUR1,D22
.
          PRINT     *1,CPCDATE,*12,DIM3,*16,D22:
                    *39,DIM12,*52,DIM12A,*65,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN202
.
STLIN205  MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PACK      DBFHUR1,SP70
          PACK      KEY21,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RDDBFH1
          MOVE      DBFHUR1,D22
.
          PRINT     *1,CPCDATE,*12,DIM3,*16,D22:
                    *39,DIM12,*65,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN210  MATCH     "1",DBTSDTY
          GOTO      STLIN215 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            CALL      FDTD0000
            MOVE      "99999999999.99",PRBALANC
            FEDIT     BALANCE,PRBALANC
.
            PRINT     *1,CPCDATE,*12,TRANDESC:
                      *20,DIM12,*33,DIM12A,*90,PRBALANC;
            ADD       ONE,CLNO
.
            CALL      RSBHS000             * print on the right side
.
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN212  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN    DBFDTOT+DBFDTAX,BALANCE
.
          MATCH     "1",DBFDDTY
          GOTO      STLIN214 IF EQUAL
          MATCH     "4",DBFDDTY
          GOTO      STLIN214 IF EQUAL
.
          MULT      SEQ,BALANCE
.
STLIN214  MOVE      "99999999999.99",PRBALANC    * SRF 4570
          FEDIT     BALANCE,PRBALANC
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *20,DIM12,*33,DIM12A,*90,PRBALANC;
          ADD       ONE,CLNO
.
          CALL      RSBHS000             * print on the right side
.
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN212
.
STLIN215  MOVE      "99999999999.99",PRBALANC    * SRF 4570
          FEDIT     BALANCE,PRBALANC
.
          MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PRINT     *1,CPCDATE,*12,TRANDESC:
                    *20,DIM12,*90,PRBALANC;
          ADD       ONE,CLNO
.
          CALL      RSBHS000             * print on the right side
.
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN220  MATCH     "1",DBTSDTY
          GOTO      STLIN225 IF EQUAL
.
          MATCH     "3",DBTSDTY             * SRF 5136
          IF        @EQUAL
            CALL      FDTD0000
            PRINT     *1,CPCDATE,*27,TRANDESC:
                      *35,DIM12,*48,DIM12A,*119,PRBALANC
            ADD       ONE,CLNO
            COMPARE   CLNO,MAXCLNO
            CALL      STCFW000 IF EQUAL
            GOTO      STLIN999
          ENDIF
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
.
STLIN222  CALL      RKDBFD1
          BRANCH    OVRCD,STLIN999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      STLIN999 IF NOT EQUAL
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          ASSIGN     DBFDTOT+DBFDTAX,BALANCE
.
          MATCH      "1",DBFDDTY
          GOTO       STLIN224 IF EQUAL
          MATCH      "4",DBFDDTY
          GOTO       STLIN224 IF EQUAL
.
          MULT       SEQ,BALANCE
.
STLIN224  MOVE      "999,999,999.99",PRBALANC
          FEDIT     BALANCE,PRBALANC
.
          PRINT     *1,CPCDATE,*27,TRANDESC:
                    *35,DIM12,*48,DIM12A,*119,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN222
.
STLIN225  MOVE      DBTSDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          PRINT     *1,CPCDATE,*27,TRANDESC:
                    *35,DIM12,*119,PRBALANC
          ADD       ONE,CLNO
          COMPARE   CLNO,MAXCLNO
          CALL      STCFW000 IF EQUAL
          GOTO      STLIN999
.
STLIN230  GOTO      STLIN170                * MHAC uses Holy Spirit    *I-59741
.
STLIN999  RETURN
.------------------------------------------------------------------------------
. Find Debtor Transaction Details - SRF 5136
.------------------------------------------------------------------------------
FDTD0000  UNPACK    SP70,DIM12,DIM12A
.
          PACK      KEY24,DBTSDEB,DBTSDTY,DBTSDOC,SP70
          CALL      RSDBFD1
FDTD0100  CALL      RKDBFD1
          BRANCH    OVRCD,FDTD9999
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      FDTD0100 IF NOT EQUAL
.
          MOVE      DBFDDOC,F12
          MOVE      F12,DIM12
          SQUEEZE   DIM12
.
          MOVE      DBFDINV,F12
          MOVE      F12,DIM12A
          SQUEEZE   DIM12A
.
FDTD9999  RETURN
.------------------------------------------------------------------------------
. Print something on the right hand side of Stationery
. Requires : OVERCD = 1 - loop thru until MAXCLNO reach
.                     0 - just find the appropriate position to print
.------------------------------------------------------------------------------
RSBHS000  COMPARE   ZERO,CLNO
          GOTO      RSBHS020 IF EQUAL
.
          COMPARE   THREE,CLNO
          GOTO      RSBHS040 IF EQUAL
.
          COMPARE   TEN3,CLNO
          GOTO      RSBHS060 IF EQUAL
.
          COMPARE   TWENTY3,CLNO
          GOTO      RSBHS080 IF EQUAL
.
          COMPARE   MAXCLNO,CLNO
          GOTO      RSBHS010 IF NOT LESS
.
          PRINT     *112," "
RSBHS010  BRANCH    OVRCD,RSBHS990
          GOTO      RSBHS999
.
RSBHS020  PRINT     *114," ":
                    *N
          ADD       TWO,CLNO
          BRANCH    OVRCD,RSBHS000
          GOTO      RSBHS999
.
RSBHS040  PRINT     *114,DBDBDEB
          BRANCH    OVRCD,RSBHS990
          GOTO      RSBHS999
.
RSBHS060  PRINT     *114," "
          BRANCH    OVRCD,RSBHS990
          GOTO      RSBHS999
.
RSBHS080  MOVE      "999,999,999.99",PRBALANC
          FEDIT     TOTALOUT,PRBALANC
.
          PRINT     *118,PRBALANC
          BRANCH    OVRCD,RSBHS990
          GOTO      RSBHS999
.
RSBHS990  ADD       ONE,CLNO
.
          COMPARE   MAXCLNO,CLNO
          GOTO      RSBHS999 IF NOT LESS
          GOTO      RSBHS000
.
RSBHS999  RETURN
.------------------------------------------------------------------------------
. Print Header for Statements   1. Standard
.                               2. Epworth   
.                               3. Modbury    
.                               4. Southland
.                               5. Coast Health   
.                               6. Hawkes Bay     
.                               7. Holy Spirit     
.                               8. West Gippsland  
.                               9. West Wimmera  
.                              10. Hutt Valley  
.                              11. Ballarat Health Services
.                              12. Standard 132 Columns
.                              13. Mercy Health & Aged Care            *I-59741
.------------------------------------------------------------------------------
STHED000  MOVE      ZERO,CLNO
          BRANCH    CFDBSLAY,STHED100,STHED100,STHED100,STHED140,STHED150:
                             STHED160,STHED090,STHED100,STHED100,STHED200:
                             STHED100,STHED100,STHED090                *C-59741
.
STHED090  ADD       ONE,CPAGENO
.
STHED100  IF        TMPLTFLG=0
            MOVE      ZERO,HEADTAIL   * Flagged to Header
            CALL      XSTA0000        * Print Tax Statement Header
            IF        CFDBSLAY=11
              CALL      RSBHS000           * print on the right side
            ENDIF
            GOTO      STHED999
          ENDIF
.
          BRANCH    CFDBSLAY,STHED110,STHED120,STHED130,STHED140,STHED150:
                             STHED160,STHED170,STHED180,STHED190,STHED200:
                             STHED210,STHED110,STHED170                *C-59741
.
STHED110  PRINT     *N,*N,*N,*N,*N,*N,*N:
                    *N,*4,NADLINE1:
                    *N,*4,NADLINE2:
                    *N,*4,NADLINE3:
                    *N,*4,NADLINE4:
                    *N,*4,NADLINE5:
                    *N,*N:
                    *N,*2,DBDBDEB:
                    *N,*N,*N,*71,DATOFSTA:
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *45,"REFERENCE",*N
          GOTO      STHED999
.
STHED120  PRINT     *N,*N,*N,*N:
                    *N,*2,NADLINE1:
                    *N,*2,NADLINE2:
                    *N,*2,NADLINE3:
                    *N,*2,NADLINE4:
                    *N,*2,NADLINE5:
                    *N,*N:
                    *N,*2,DBDBDEB:
                    *N,*N,*N,*71,DATOFSTA:
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *45,"REFERENCE",*N
          GOTO      STHED999
.
STHED130  PRINT     *F,*N,*N,*N,*N,*N,*N,*N:
                    *N,*3,NADLINE1:
                    *N,*3,NADLINE2:
                    *N,*3,NADLINE3:
                    *N,*3,NADLINE4:
                    *N,*3,NADLINE5:
                    *N,*N,*N
          PRINT     *2,DBDBDEB:
                    *N,*N,*N,*2,"STATEMENT":
                    *72,DATOFSTA:
                    *N,*N,*N,*N
          GOTO      STHED999
.
STHED140  PRINT     *N,*N,*N,*N,*N,*N,*N:
                    *N,*5,NADLINE1:
                    *N,*5,NADLINE2:
                    *N,*5,NADLINE3:
                    *N,*5,NADLINE4:
                    *N,*5,NADLINE5:
                    *N,*N:
                    *N,*2,DBDBDEB:
                    *N,*N,*N,*70,DATOFSTA:
                    *N,*N,*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *45,"REFERENCE",*N
          GOTO      STHED999
.
STHED150  PRINT     *N,*N,*N,*N,*N:
                    *N,*4,NADLINE1:
                    *N,*4,NADLINE2:
                    *N,*4,NADLINE3:
                    *N,*4,NADLINE4:
                    *N,*4,NADLINE5:
                    *N,*N:
                    *N,*2,DBDBDEB:
                    *N,*N,*N,*71,DATOFSTA:
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*12,"DESCRIPTION":
                    *35,"REFERENCE",*54,"INVOICE",*N
          GOTO      STHED999
.
STHED160  PRINT     *N,*N,*N,*N,*N,*51,CFDBETEL,*N,*N:
                    *N,*4,NADLINE1:
                    *N,*4,NADLINE2:
                    *N,*4,NADLINE3:
                    *N,*4,NADLINE4:
                    *N,*4,NADLINE5:
                    *N,*N:
                    *N,*2,DBDBDEB:
                    *N,*N,*N,*71,DATOFSTA:
                    *N,*35,"STATEMENT",*N,*N,*2,"DATE",*11,"DESCRIPTION":
                    *35,"REFERENCE",*55,"INVOICE",*N
          GOTO      STHED999
.
STHED170  PRINT      *F,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                     *N,*12,DBDBNA1:
                     *N,*12,DBDBNA2:
                     *N,*12,DBDBAD1:
                     *N,*12,DBDBAD2:
                     *N,*12,DBDBAD3:
                     *N,*38,DBDBPC:
                     *N,*N,*N,*N,*N,*N
          PRINT      *1,"PAGE ",CPAGENO,*12,DBDBDEB:
                     *65,DATOFSTA:
                     *N,*N,*N
          GOTO      STHED999
.
STHED180  PRINT     *F,*N,*N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*13,NADLINE1:
                    *N,*13,NADLINE2:
                    *N,*13,NADLINE3:
                    *N,*13,NADLINE4:
                    *N,*13,NADLINE5:
                    *N,*N
          PRINT     *2,DBDBDEB,*20,"STATEMENT",*54,DATOFSTA:
                    *N,*N,*N,*N,*N,*N
          GOTO      STHED999
.
STHED190  PRINT     *N,*N,*60,"STATEMENT",*N,*N,*N:
                    *N,*71,DATOFSTA:
                    *N,*N,*N,*N:
                    *N,*12,NADLINE1:
                    *N,*12,NADLINE2:
                    *N,*12,NADLINE3:
                    *N,*12,NADLINE4:
                    *N,*12,NADLINE5:
                    *N:
                    *N,*N,*N,*N,*2,DBDBDEB:
                    *N,*N,*N
          GOTO      STHED999
.
STHED200  PRINT     *N,*N,*N,*N,*N:
                    *N,*2,NADLINE1:
                    *N,*2,NADLINE2:
                    *N,*2,NADLINE3:
                    *N,*2,NADLINE4:
                    *N,*2,NADLINE5:
                    *N,*N:
                    *N,*2,DBDBDEB:
                    *N,*N,*N,*69,DATOFSTA:
                    *N,*35,"STATEMENT",*N,*N,*N
          GOTO      STHED999
.
STHED210  PRINT     *82,"STATEMENT",*N,*N,*N,*N:
                    *N,*93,DATOFSTA:
                    *N,*N,*N,*N,*N:
                    *N,*15,NADLINE1:
                    *N,*15,NADLINE2:
                    *N,*15,NADLINE3:
                    *N,*15,NADLINE4:
                    *N,*15,NADLINE5:
                    *N:
                    *N,*N,*N,*N,*N,*N,*N,*N,*2,DBDBDEB:
                    *N,*N
.
          GOTO      STHED999
.
STHED999  RETURN
.------------------------------------------------------------------------------
. Carried forward
.      1 Standard
.      2 Epworth   
.      3 Modbury    
.      4 Southland
.      5 Coast Health
.      6 Hawkes Bay  
.      7 Holy Spirit 
.      8 West Gippsland
.      9 West Wimmera
.     10 Hutt Valley 
.     11 Ballarat Health Services
.     12 Standard 132 Columns     
.     13 Mercy Health & Aged Care                                      *I-59741
.------------------------------------------------------------------------------
STCFW000  BRANCH    TMPLTFLG,STCFW100
.
          IF        CFDBSLAY=12
            PRINT     *N,*N,*N,*N,*N,*N,*N,*N
            MOVE      ONE,CARRIED
            MOVE      ONE,HEADTAIL
            CALL      XSTA0000
            PRINT     *N;
            GOTO      STCFW900
          ENDIF
.
          MOVE      CRFWDROW,F3
          MOVE      ONE,CURRROW
          CALL      XPOS0000
          BRANCH    EXIT,STCFW100
.
          PRINT     *CRFWDCOL,*+,"CARRIED FWD";
.
          MOVE      TAILLENG,F3
          CALL      XPOS0000
          PRINT     *N;
.
          GOTO      STCFW900
.
STCFW100  BRANCH    CFDBSLAY,STCFW110,STCFW120,STCFW130,STCFW140,STCFW150: 
                             STCFW160,STCFW170,STCFW180,STCFW190,STCFW200:
                             STCFW210,STCFW110,STCFW170                *C-59741
.
STCFW110  PRINT     *N,*N,*N:
                    *N,*N,*N,*N:
                    *N,*N,*70,"CARRIED FWD":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N
          GOTO      STCFW900
.
STCFW120  PRINT     *N,*N,*N:
                    *N,*N,*N,*N:
                    *N,*N,*70,"CARRIED FWD":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N
          GOTO      STCFW900
.
STCFW130  PRINT     *N,*N,*N,*71,"CARRIED FWD"
          GOTO      STCFW900
.
STCFW140  PRINT     *N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N:
                    *N,*70,"CARRIED FWD":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N,*N,*N
          GOTO      STCFW900
.
STCFW150  PRINT     *N,*N,*N:
                    *N,*N,*N,*N:
                    *N,*N,*70,"CARRIED FWD":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N
          GOTO      STCFW900
.
STCFW160  PRINT     *N,*N,*N:
                    *N,*N,*N,*N:
                    *N,*N,*70,"CARRIED FWD":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N
          GOTO      STCFW900
.
STCFW170  PRINT     *N,*N:
                    *N,*69,"CARRIED FWD"
          GOTO      STCFW900
.
STCFW180  PRINT     *N,*N,*N,*71,"CARRIED FWD",*N,*2,DBTEDES
          GOTO      STCFW900
.
STCFW190  PRINT     *N,*69,"CARRIED FWD":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N,*N,*N,*N,*N
          GOTO      STCFW900
.
STCFW200  PRINT     *N,*N,*N:
                    *N,*N,*N,*N:
                    *N,*N,*68,"CARRIED FWD":
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N:
                    *N,*N,*N,*N
          GOTO      STCFW900
.
STCFW210  PRINT     *N,*N,*N,*N,*93,"CARRIED FWD":
                    *N,*N
.
          GOTO      STCFW900
.
STCFW900  CALL      STHED000
STCFW999  RETURN
.------------------------------------------------------------------------------
. Print end of statement
.      1 Standard
.      2 Epworth   
.      3 Modbury    
.      4 Southland
.      5 Coast Health
.      6 Hawkes Bay
.      7 Holy Spirit
.      8 West Gippsland
.      9 West Wimmera
.     10 Hutt Valley
.     11 Ballarat Health Services
.     12 Standard 132 Columns
.     13 Mercy Health & Aged Care                                      *I-59741
.------------------------------------------------------------------------------
STEND000  IF        CFDBSLAY=11
            MOVE      "999999999.99",PRTOTBAL    * SRF 4570
            MOVE      "999999999.99",BAL1
            MOVE      "999999999.99",BAL2
            MOVE      "999999999.99",BAL3
            MOVE      "999999999.99",CURR
          ELSE
            MOVE      "9,999,999.99",PRTOTBAL
            MOVE      "9,999,999.99",BAL1
            MOVE      "9,999,999.99",BAL2
            MOVE      "9,999,999.99",BAL3
            MOVE      "9,999,999.99",CURR
          ENDIF
          FEDIT     TOTALOUT,PRTOTBAL
          FEDIT     BALTOT30,BAL1
          FEDIT     BALTOT60,BAL2
          FEDIT     BALTOT90,BAL3
          FEDIT     CURRENT,CURR
.
          IF        CFDBSLAY=12
            PRINT     *N,*N,*1,"     90 DAYS      60 DAYS":
                      "      30 DAYS      CURRENT":
                      *N,*1,BAL3,SP1,BAL2,SP1,BAL1,SP1,CURR,*119,PRTOTBAL:
                      *N,*N,*N,*N,*N
          ENDIF
.
          BRANCH    CFDBSLAY,STEND100,STEND100,STEND100,STEND140,STEND150:
                             STEND160,STEND100,STEND100,STEND100,STEND200:
                             STEND100,STEND100,STEND100                *C-59741
.
.                                                                      *C-59741
STEND100  IF        CFDBSLAY=7 | CFDBSLAY=8  | CFDBSLAY=9 | CFDBSLAY=13
            ADD       ONE,STATENO
          ENDIF
          IF        TMPLTFLG=0
            MOVE      ONE,HEADTAIL    * Flagged to Tail
            CALL      XSTA0000      * Print Tax Statement Tail
            PRINT     *N;
            GOTO      STEND999
          ENDIF
.
          BRANCH    CFDBSLAY,STEND110,STEND120,STEND130,STEND140,STEND150:
                             STEND160,STEND170,STEND180,STEND190,STEND200:
                             STEND210,STEND110,STEND170                *C-59741
.
STEND110  PRINT     *N,*1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *N,*N,*69,PRTOTBAL:
                    *N,*N,*N,*N:
                    *N,*69,PRTOTBAL:
                    *N,*N,*2,DATOFSTA,*13,NADLINE1:
                    *N,*N,*N,*13,DBDBDEB:
                    *N,*N,*N,*N,*N
          GOTO      STEND999
.
STEND120  PRINT     *1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *N,*N,*1,STAMESS1,*69,PRTOTBAL:
                    *N,*1,STAMESS2,*N,*N,*N:
                    *N,*N,*69,PRTOTBAL:
                    *N,*N,*1,DATOFSTA,*13,NADLINE1:
                    *N,*N,*N,*12,DBDBDEB:
                    *N,*N,*N,*N,*N,*N,*N,*N
          GOTO      STEND999
.
STEND130  PRINT     *N,*N:
                    *1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *70,PRTOTBAL:
                    *N,*N,*N,*N,*N,*N,*N:
                    *1,DATOFSTA,*13,NADLINE1:
                    *N,*N,*70,PRTOTBAL:
                    *N,*13,DBDBDEB
          GOTO      STEND999
.
STEND140  PRINT     *N,*1,STAMESS1,*N,*1,STAMESS2,*N,*N:
                    *1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *N,*68,PRTOTBAL:
                    *N,*N,*N,*N:
                    *N,*68,PRTOTBAL:
                    *N,*N,*1,DATOFSTA,*12,NADLINE1:
                    *N,*N,*N,*13,DBDBDEB:
                    *N,*N,*N,*N,*N,*N,*N
          GOTO      STEND999
.
STEND150  PRINT     *N,*1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *N,*N,*1,STAMESS1,*69,PRTOTBAL:
                    *N,*1,STAMESS2,*N,*N,*N:
                    *N,*69,PRTOTBAL:
                    *N,*N,*2,DATOFSTA,*13,NADLINE1:
                    *N,*N,*N,*13,DBDBDEB:
                    *N,*N,*N,*N,*N,*N,*N
          GOTO      STEND999
.
STEND160  PRINT     *N,*1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *N,*N,*69,PRTOTBAL:
                    *N,*N,*N,*N:
                    *N,*69,PRTOTBAL:
                    *N,*N,*2,DATOFSTA,*13,NADLINE1:
                    *N,*N,*N,*13,DBDBDEB:
                    *N,*N,*N,*N,*N
          GOTO      STEND999
.
STEND170  PRINT     *N,*1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N,*N,*67,PRTOTBAL
          ADD       ONE,STATENO
          GOTO      STEND999
.
STEND180  PRINT     *N,*21,STAMESS1,*N,*21,STAMESS2,*N:
                    *70,PRTOTBAL,*N:
                    *1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *N,*N,*N,*N,*N,*N:
                    *1,DATOFSTA,*15,NADLINE1:
                    *N,*N,*N,*N,*70,PRTOTBAL:
                    *N,*N,*N,*N,*3,DBDBDEB
          ADD       ONE,STATENO
          GOTO      STEND999
.
STEND190  PRINT     *N,*N,*67,PRTOTBAL:
                    *N,*N,*1,CURR,BAL1,BAL2,BAL3:
                    *N,*N,*N,*N,*N:
                    *N,*N,*N,*N:
                    *N,*12,NADLINE1,*53,DBDBDEB,*N,*N,*N:
                    *N,*N,*67,PRTOTBAL
          ADD       ONE,STATENO
          GOTO      STEND999
.
STEND200  PRINT     *N,*1,"     90 DAYS     60 DAYS     30 DAYS     CURRENT":
                    *N,*1,BAL3,BAL2,BAL1,CURR:
                    *N,*N,*1,STAMESS1,*67,PRTOTBAL:
                    *N,*1,STAMESS2,*N,*N,*N:
                    *N,*67,PRTOTBAL:
                    *N,*N,*1,DATOFSTA,*13,NADLINE1:
                    *N,*N,*N,*12,DBDBDEB:
                    *N,*N,*N,*N,*N,*N,*N,*N,*N
          GOTO      STEND999
.
STEND210  PRINT     *N,*N,*N,*N,*92,PRTOTBAL:
                    *1,CURR,BAL1,BAL2,BAL3:
                    *N,*N
          GOTO      STEND999
.
STEND999  RETURN
.----------------------------------------------------------------------------
. Extract Details of Documents to be Printed on the Statement
.
.   - Part 1 All Documents Not Yet Printed on a Statement
.   - Part 2 All Outstanding Invoices
.   - Returns NOSTATE=1 if Nothing to Print
.                     0 if Details Extracted
.
.----------------------------------------------------------------------------
EXSTAT00  MOVE      ONE,NOSTATE
          PACK      KEY29,DBDBDEB,SP70
          CALL      RSDBFH4
EXSTAT10  CALL      RKDBFH4             * Loop Through the Documents for this
          BRANCH    OVRCD,EXSTAT20      * Debtor 
          MATCH     DBDBDEB,DBFHDEB
          GOTO      EXSTAT20 IF NOT EQUAL
          MATCH     SP70,DBFHDSTA
          GOTO      EXSTAT20 IF NOT EQUAL
          MATCH     DBFHDDAT,ASATDATE  * Ignore Documents Dated After 
          GOTO      EXSTAT10 IF LESS   * as at Date
.
          PACK      KEY21,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          UNPACK    KEY21,DBTSDEB,DBTSDTY,DBTSDOC
          MOVE      DBFHDDAT,DBTSDDAT
          CALL      RADBTS1
          IF        OVRCD=1
            CALL      WRDBTS1
            MOVE      ZERO,NOSTATE
          ENDIF
          MATCH     "1",DBFHDTY
          GOTO      EXSTAT10 IF EQUAL
.
. If Payment & Credit Then Extract the Related Invoices for Printing
.
          PACK      KEY24,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          CALL      RSDBFD1
EXSTAT15  CALL      RKDBFD1
          BRANCH    OVRCD,EXSTAT10
          PACK      KEY24,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          PACK      KEY21,DBFHDEB,DBFHDTY,DBFHDOC,SP70
          MATCH     KEY21,KEY24
          GOTO      EXSTAT10 IF NOT EQUAL
          PACK      KEY21,DBFHDEB,ONE,DBFDINV,SP70
          UNPACK    KEY21,DBTSDEB,DBTSDTY,DBTSDOC
          MOVE      DBFDIDAT,DBTSDDAT
          CALL      RADBTS1
          IF        OVRCD=1
            CALL      WRDBTS1
            MOVE      ZERO,NOSTATE
          ENDIF
          GOTO      EXSTAT15
.
. Extract All Outstanding Invoices
.
EXSTAT20  PACK      KEY52,DBDBDEB,ASATDATE,SP70
          CALL      RSDBFD2            * Process all transactions paid after
EXSTAT30  CALL      RKDBFD2            * the as at date.
          BRANCH    OVRCD,EXSTAT90
          MATCH     DBFDDEB,DBDBDEB
          GOTO      EXSTAT90 IF NOT EQUAL
          MATCH     "1",DBFDDTY        * Process Invoices Only
          GOTO      EXSTAT30 IF NOT EQUAL
          MATCH     DBFDIDAT,ASATDATE  * Ignore Invoices Dated After 
          GOTO      EXSTAT30 IF LESS   * as at Date
.
          PACK      KEY21,DBFDDEB,DBFDDTY,DBFDDOC,SP70
          UNPACK    KEY21,DBTSDEB,DBTSDTY,DBTSDOC
          CALL      RADBTS1
          IF        OVRCD=1
            CALL      RDDBFH1             * Get Document Date
            MOVE      DBFHDDAT,DBTSDDAT
            CALL      WRDBTS1             * Write to Extract Temp File
            MOVE      ZERO,NOSTATE
          ENDIF
          GOTO      EXSTAT30
.
EXSTAT90
.
EXSTAT99  RETURN
.------------------------------------------------------------------------------
. Set Template Files
. Checks whether Template being used
. Find appropriate position for carried forward
. Returns  : TMPLTFLG : 0 - do template, 1 - don't template
.            CRFWDROW
.            CRFWDCOL
.------------------------------------------------------------------------------
STMPL000  MOVE      ONE,TMPLTFLG
.
          MATCH     "000000",CFDBSTHD
          GOTO      STMPL050 IF EQUAL
.
          MATCH     SP6,CFDBSTHD
          GOTO      STMPL100 IF NOT EQUAL
.
STMPL050  MATCH     "000000",CFDBSTTL
          GOTO      STMPL999 IF EQUAL
.
          MATCH     SP6,CFDBSTTL
          GOTO      STMPL999 IF EQUAL
.
STMPL100  PACK      KEY6,CFDBSTHD,SP70
          CALL      RDIBTH1               * read header detail file
          BRANCH    OVRCD,STMPL900
.
          MOVE      IBTHLENG,HEADLENG
.
          PACK      KEY6,CFDBSTTL,SP70
          CALL      RDIBTH1               * read header detail file
          BRANCH    OVRCD,STMPL910
.
          MOVE      IBTHLENG,TAILLENG
.
          MOVE      TWO,CRFWDROW
          MOVE      SIXTY6,CRFWDCOL
          PACK      KEY12,CFDBSTTL,SP70
          CALL      RSIBDET1              * read detail file
STMPL200  CALL      RKIBDET1              * read detail file
          BRANCH    OVRCD,STMPL990
.
          MATCH     IBTHSCOD,IBDTSCOD
          GOTO      STMPL990 IF NOT EQUAL
.
          COMPARE   TWO,IBDTINDC
          GOTO      STMPL200 IF NOT EQUAL
.
          UNPACK    IBDTTXFL,D5
          MOVE      "    8",DIM5
          MATCH     DIM5,D5
          IF        @EQUAL
            MOVE      IBDTCOL,CRFWDCOL
            ADD       ONE,CRFWDCOL
            GOTO      STMPL250
          ENDIF
.
          MOVE      "    1",DIM5
          MATCH     DIM5,D5
          IF        @EQUAL
            MOVE      IBDTCOL,CRFWDCOL
            ADD       FOUR,CRFWDCOL
            GOTO      STMPL250
          ENDIF
          GOTO      STMPL200
.
STMPL250  MOVE      IBDTROW,CRFWDROW
          GOTO      STMPL990
.
.------ stationery code not on file ------
.
STMPL900  MOVE     "User Defined Stationery Header Code not on File. - ",DISPMSG
          CALL      MESSAGE1
          BEEP
          GOTO      STMPL999
.
STMPL910  MOVE      "User Defined Stationery Tail Code not on File. - ",DISPMSG
          CALL      MESSAGE1
          BEEP
          GOTO      STMPL999
.
STMPL990  
..          ASSIGN     MAXLENGT-HEADLENG-TAILLENG,MAXCOLNO
..          IF         MAXCOLNO>1
..            MOVE       MAXCOLNO,MAXCLNO
..          ENDIF
          MOVE      ZERO,TMPLTFLG
.
STMPL999  RETURN
.------------------------------------------------------------------------------
. Print Statement Header for All Sites
. Requires : HEADTAIL : 0 - Head, 1 - Tail
.------------------------------------------------------------------------------
XSTA0000  MOVE      ONE,CURRROW              * Initialise current row counter
.
          IF        HEADTAIL=0
            PACK      KEY6,CFDBSTHD,SP70
            CALL      RDIBTH1               * read header detail file
.
            PACK      KEY12,CFDBSTHD,SP70
          ELSE
            PACK      KEY6,CFDBSTTL,SP70
            CALL      RDIBTH1               * read header detail file
.
            PACK      KEY12,CFDBSTTL,SP70
          ENDIF
          CALL      RSIBDET1
          CALL      RKIBDET1
          BRANCH    OVRCD,XSTA8000
.
          IF        HEADTAIL=0
            MATCH     CFDBSTHD,IBDTSCOD        * Same form ?
            GOTO      XSTA8000 IF NOT EQUAL    * No - pad out rest of form
            GOTO      XSTA0100
          ELSE
            MATCH     CFDBSTTL,IBDTSCOD        * Same form ?
            GOTO      XSTA8000 IF NOT EQUAL    * No - pad out rest of form
            GOTO      XSTA0100
          ENDIF
.
XSTA0100  COMPARE   CURRROW,IBDTROW          * Current row up to required row ?
          GOTO      XSTA0400 IF EQUAL        * Yes - print data
          PRINT     *N;                      * Else print 1 extra line
          ADD       ONE,CURRROW              * Increment counter
          GOTO      XSTA0100                 * Check counter again
.
. ------- Read through the details file -------
.
XSTA0200  CALL      RKIBDET1                 * Read next detail record
          BRANCH    OVRCD,XSTA8000           * No more records - pad out form
.
          BRANCH    HEADTAIL,XSTA0250        * Header or Tail ?
.
          MATCH     CFDBSTHD,IBDTSCOD        * Same form ?
          GOTO      XSTA8000 IF NOT EQUAL    * No - pad out rest of form
          GOTO      XSTA0300
.
XSTA0250  MATCH     CFDBSTTL,IBDTSCOD        * Same form ?
          GOTO      XSTA8000 IF NOT EQUAL    * No - pad out rest of form
.
XSTA0300  COMPARE   CURRROW,IBDTROW          * Are we at the required row ?
          GOTO      XSTA0400 IF EQUAL        * Yes - print data
          PRINT     *N;                      * Else pad out to required row
          ADD       ONE,CURRROW              * One more row printed
          GOTO      XSTA0300                 * Check row count
.
. ------- Print actual data lines -------
.
XSTA0400  BRANCH    IBDTINDC,XSTA0500:       * Text field
                             XSTA0600        * Data field
.
. ------- Print text field -------
.
XSTA0500  RESET     IBDTTXFL,IBDTPLEN
          LENSET    IBDTTXFL
          RESET     IBDTTXFL
          PRINT     *IBDTCOL,*+,IBDTTXFL;    * Print data
          MOVE      IBDTROW,CURRROW          * Row printed is current row
          GOTO      XSTA0200                 * Read next record
.
. ------- Print data field -------
.
XSTA0600  MOVE      IBDTTXFL,DIM5            * Data number 1st 3 chars of field
          MOVE      DIM5,FORM5               * Move to a FORM field for BRANCH
          PACK      VARIABLE,SP30,SP30,SP30,SP30,SP10  * Initialise variable
.
          BRANCH    HEADTAIL,XSTA0650        * Header or Tail ?
.
          BRANCH    FORM5,XSTA1010,XSTA1020,XSTA1030,XSTA1040,XSTA1050:
                          XSTA1060,XSTA1070,XSTA1080,XSTA1090,XSTA1100:   10
                          XSTA1110,XSTA1120,XSTA1130,XSTA1140,XSTA1150:
                          XSTA1160,XSTA1170,XSTA1180,XSTA1190,XSTA1200:   20
                          XSTA1210
          GOTO      XSTA0200                 * ignoring, Read next record
.
XSTA0650  BRANCH    FORM5,XSTA0710,XSTA1010,XSTA1090,XSTA1140,XSTA0720:
                          XSTA1130,XSTA1190,XSTA0730,XSTA0740,XSTA0750:   10
                          XSTA0760,XSTA0770,XSTA0780,XSTA0790,XSTA1210
          GOTO      XSTA0200                 * ignoring, Read next record
.
. Tail Items/Fields below
.
XSTA0710  IF        CARRIED=1
            MOVE      " CARRIED FWD",VARIABLE
            MOVE      ZERO,CARRIED
            GOTO      XSTA5000
          ELSE
            MOVE      TOTALOUT,VARIABLE        * Total Amount
          ENDIF
          MOVE      TEN5,PRNTSTRT
          SUB       IBDTPLEN,PRNTSTRT
          GOTO      XSTA5000
.
XSTA0720  MOVE      DBTEDES,VARIABLE         * Terms Code Description
          GOTO      XSTA5000
.
XSTA0730  IF        CARRIED=1
            MOVE      " CARRIED FWD",VARIABLE
            MOVE      ZERO,CARRIED
            GOTO      XSTA5000
          ELSE
            MOVE      PRTOTBAL,VARIABLE        * Total Amount
          ENDIF
          GOTO      XSTA5000
.
XSTA0740  MOVE      BAL3,VARIABLE            * Formated Stat.Amount Bal. 90 days
          GOTO      XSTA5000
.
XSTA0750  MOVE      BAL2,VARIABLE            * Formated Stat.Amount Bal. 60 days
          GOTO      XSTA5000
.
XSTA0760  MOVE      BAL1,VARIABLE            * Formated Stat.Amount Bal. 30 days
          GOTO      XSTA5000
.
XSTA0770  MOVE      CURR,VARIABLE            * Formated Stat. Current Balance
          GOTO      XSTA5000
.
XSTA0780  MOVE      STAMESS1,VARIABLE        * Statement Message 1
          GOTO      XSTA5000
.
XSTA0790  MOVE      STAMESS2,VARIABLE        * Statement Message 2
          GOTO      XSTA5000
.
. Header Items/Fields below
.
XSTA1010  MOVE      DBDBDEB,VARIABLE         * Debtor number
          GOTO      XSTA5000
.
XSTA1020  MOVE      DBDBNA1,VARIABLE         * Debtor Name 1
          GOTO      XSTA5000
.
XSTA1030  MOVE      DBDBNA2,VARIABLE         * Debtor Name 2
          GOTO      XSTA5000
.
XSTA1040  MOVE      DBDBAD1,VARIABLE         * Debtor Address Line 1
          GOTO      XSTA5000
.
XSTA1050  MOVE      DBDBAD2,VARIABLE         * Debtor Address Line 2
          GOTO      XSTA5000
.
XSTA1060  MOVE      DBDBAD3,VARIABLE         * Debtor Address Line 3
          GOTO      XSTA5000
.
XSTA1070  MOVE      DBDBAD4,VARIABLE         * Debtor Address Line 4
          GOTO      XSTA5000
.
XSTA1080  MOVE      DBDBPC,VARIABLE          * Debtor Post Code
          GOTO      XSTA5000
.
XSTA1090  MOVE      DBFHDOC,F12              * Invoice number
          MOVE      F12,VARIABLE
          MOVE      TEN2,PRNTSTRT
          SUB       IBDTPLEN,PRNTSTRT
          GOTO      XSTA6000
.
XSTA1100  MOVE      CPAGENO,VARIABLE         * Page number
          MOVE      THREE,PRNTSTRT
          SUB       IBDTPLEN,PRNTSTRT
          GOTO      XSTA6000
.
XSTA1110  GOTO      XSTA0200
.
XSTA1120  GOTO      XSTA0200
.
XSTA1130  UNPACK    DBFHDDAT,CCENT,CYEAR,CMON,CDAY    * Invoice date
          CALL      PACDATE
          IF        IBDTPLEN = 10
            MOVE      CPCDATE,VARIABLE
          ELSE
            MOVE      CPDATE,VARIABLE
          ENDIF
          GOTO      XSTA5000
.
XSTA1140  MOVE      NADLINE1,VARIABLE        * Debtor Name & Address 1
          GOTO      XSTA5000
.
XSTA1150  MOVE      NADLINE2,VARIABLE        * Debtor Name & Address 2
          GOTO      XSTA5000
.
XSTA1160  MOVE      NADLINE3,VARIABLE        * Debtor Name & Address 3
          GOTO      XSTA5000
.
XSTA1170  MOVE      NADLINE4,VARIABLE        * Debtor Name & Address 4
          GOTO      XSTA5000
.
XSTA1180  MOVE      NADLINE5,VARIABLE        * Debtor Name & Address 5
          GOTO      XSTA5000
.
XSTA1190  MOVE      DBFHUR1,VARIABLE         * User Def.Ref. 1 (Stat. Reference)
          GOTO      XSTA5000
.
XSTA1200  MOVE      DBFHUR2,VARIABLE         * User Def.Ref. 2
          GOTO      XSTA5000
.
XSTA1210  UNPACK    ASATDATE,CCENT,CYEAR,CMON,CDAY    * Statement date
          CALL      PACDATE
          IF        IBDTPLEN = 10
            MOVE      CPCDATE,VARIABLE
          ELSE
            MOVE      CPDATE,VARIABLE
          ENDIF
          GOTO      XSTA5000
.
. ------- Format the variable -------
.
XSTA5000  RESET     VARIABLE,IBDTPLEN
          LENSET    VARIABLE
          RESET     VARIABLE
          PRINT     *IBDTCOL,*+,VARIABLE;
          GOTO      XSTA0200                 * Read next record
.
. ------- Formatting for Form fields and right justified variables -------
.
XSTA6000  COMPARE   ZERO,PRNTSTRT          * Don't bump if printing full length
          GOTO      XSTA7000 IF EQUAL
.
          BUMP      VARIABLE,PRNTSTRT      * bump to starting position
.
. ------- Print the variable -------
.
XSTA7000  PRINT     *IBDTCOL,*+,VARIABLE;
          GOTO      XSTA0200                 * Read next record
.
.------ end of invoice reached ------
.
XSTA8000  MOVE      FALSE,EXIT
.
.------ print new-lines until the end of page is reached ------
.
XSTA9000  COMPARE   IBTHLENG,CURRROW         * test page length
          GOTO      XSTA9999 IF NOT LESS
.
          PRINT     *N;
          ADD       ONE,CURRROW
          GOTO      XSTA9000
.
XSTA9999  MOVE      ZERO,CLNO                * Set column number
          RETURN                             * Finished
.------------------------------------------------------------------------------
. Position Statement
. Requires : F3
. Returns  : CURRROW
.            EXIT - 0 Successful, 1 - Error positioning
.------------------------------------------------------------------------------
XPOS0000  MOVE      ZERO,EXIT
          COMPARE   CURRROW,F3               * Current row up to required row ?
          GOTO      XPOS9999 IF EQUAL        * Yes - print data
          GOTO      XPOS9990 IF LESS         * out of the loop
          PRINT     *N;                      * Else print 1 extra line
          ADD       ONE,CURRROW              * Increment counter
          GOTO      XPOS0000                 * Check counter again
.
XPOS9990  MOVE      ONE,EXIT
XPOS9999  RETURN
.------------------------------------------------------------------------------
. Set Variable value for Lineup print
.------------------------------------------------------------------------------
XSET0000  MOVE      "999999999.99",TOTALOUT
          PACK      DBTEDES,X70
          MOVE      "9,999,999.99",PRTOTBAL
          MOVE      "999,999,999.99",PRBALANC
          MOVE      "9,999,999.99",BAL1
          MOVE      "9,999,999.99",BAL2
          MOVE      "9,999,999.99",BAL3
          MOVE      "9,999,999.99",CURR
          PACK      STAMESS1,X70
          PACK      STAMESS2,X70
          PACK      DBDBDEB,X70
          PACK      DBDBNA1,X70
          PACK      DBDBNA2,X70
          PACK      DBDBAD1,X70
          PACK      DBDBAD2,X70
          PACK      DBDBAD3,X70
          PACK      DBDBAD4,X70
          PACK      DBDBPC,X70
          MOVE      "999999999999",DBFHDOC
          MOVE      "999",CPAGENO
          MOVE      "99999999",DBFHDDAT
          PACK      NADLINE1,X70
          PACK      NADLINE2,X70
          PACK      NADLINE3,X70
          PACK      NADLINE4,X70
          PACK      NADLINE5,X70
          PACK      DBFHUR1,X70
          PACK      DBFHUR2,X70
          MOVE      "99999999",ASATDATE
.
          PACK      DBITUNT,X70
          PACK      DBFDITM,X70
          PACK      DIM3,X70
          PACK      DIM6,X70
          PACK      DIM28,X70
          MOVE      "9999.99",DIM7
          MOVE      "99999.99",QTYDIM8
          MOVE      "999,999.99",DIM10A
          MOVE      "999,999,999.99",DIM14A
          MOVE      "999,999,999.99",DIM14B
          MOVE      "99999999.9999",PRIDIM13
          MOVE      "9,999,999.99",TOTDIM12
          MOVE      "99,999,999.99",TOTDIM13
          PACK      KEY20,X70
          PACK      KEY27,X70
          PACK      KEY28,X70
          MOVE      "9999",F4
          MOVE      "999",F3
          PACK      DBITDES,X70
          MOVE      "999999999",DIM12
          MOVE      "999999999",DIM12A
          PACK      TRANDESC,X70
.
XSET9999  RETURN
.
