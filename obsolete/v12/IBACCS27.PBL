.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  04.07.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from r5.09
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACCS27
.   Function      :   Costing Model Indirect Cost Allocation  
.   Generated  On :   04/07/2002
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       CCSAWGFD/INC
          INC       CCSCALFD/INC
          INC       CCSCMAFD/INC
          INC       CCSCMBFD/INC
          INC       CCSCMCFD/INC
          INC       CCSCMDFD/INC
          INC       CCSCMEFD/INC
          INC       CCSCMFFD/INC
          INC       CCSDALFD/INC
          INC       CCSDPTFD/INC
          INC       CCSTMPDF    
.=========================
.Local Variable Definition
.-------------------------
PROCYEAR  DIM       4 * Scr 00 Fld     2
PROCPER   DIM       2 * Scr 00 Fld     3
FLAGALL   FORM      1 * Scr 00 Fld     7
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACCS27"
PRGNAM    INIT      "Costing Model Indirect Cost Allocation  "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening ccsawgaf";
          OPEN      CCSAWGA1,"ccsawgaf"
          DISPLAY   *P56:24,"Opening ccsawgaf";
          OPEN      CCSAWGA2,"ccsawgaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA1,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA2,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA3,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscmaaf";
          OPEN      CCSCMAA1,"ccscmaaf"
          DISPLAY   *P56:24,"Opening ccsdalaf";
          OPEN      CCSDALA1,"ccsdalaf"
          DISPLAY   *P56:24,"Opening ccsdalaf";
          OPEN      CCSDALA2,"ccsdalaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA1,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA2,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA3,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA4,"ccsdptaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Indirect Budget Allocation         
          ENDIF
          RETURN
.--------------------------------
. Screen - Indirect Budget Allocation         
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Indirect Budget Allocation         
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,CCMACOM 
          MOVE      SP70,PROCYEAR
          MOVE      SP70,PROCPER 
          MOVE      ZERO,FLAGALL 
          MOVE      SP70,CCMADES 
          MOVE      SP70,CCCADES 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Indirect Budget Allocation         
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Indirect Budget Allocation         
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Indirect Budget Allocation         
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Indirect Budget Allocation         
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Indirect Budget Allocation         
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L101,PS00L102,PS00L103,PS00L999:
                            PS00L999,PS00L999,PS00L104,PS00L105:
                            PS00L106,PS00L999
          GOTO     PS00L999
.
PS00L101
          MOVE      CCMACOM,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      PROCYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      PROCPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      FLAGALL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      CCMADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      CCCADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Indirect Budget Allocation         
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L101,SF00L102,SF00L103,SF00L006:
                            SF00L104,SF00L105,SF00L006,SF00L006:
                            SF00L006,SF00L106
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L101,SF00L102,SF00L103,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCMADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECMOD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CCMACOM,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCMADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L102
          CALL      CCCACL00
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCCCAB00
          MOVE      CCCAYEAR,PROCYEAR
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      PROCYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L103
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCCADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      PROCPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCCADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L105
          CALL      STEPBUGT
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L106
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.-----------------------------------------------
. Clinical Costing Clear Fields for Keyin Year
.-----------------------------------------------
CCCACL00  MOVE      SP70,CCCAYEAR
          MOVE      SP70,CCCAPER
          RETURN
.
.
ECMOD000  CALL      CCSMOPCL
          CALL      KCCMAA00
          BRANCH    EXIT,ECMOD999,ECMOD999
          CALL      CCSMOPOP
.
ECMOD999  RETURN
.----------------------------------------
. Enter Costing Period
.----------------------------------------
EPERD000  MOVE      ZERO,CKEYTYP
          CALL      KCCCAA00
          BRANCH    EXIT,EPERD900
          MOVE      CCCAPER,PROCPER
          GOTO      EPERD999
.
EPERD900  MOVE      ZERO,EXIT
          MOVE      "All Periods",CCCADES
          MOVE      SP70,PROCPER
EPERD999  RETURN
.----------------------------------------------------------------------
. Stepdown through the Departments.
.----------------------------------------------------------------------
STEPBUGT  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          MATCH     SP70,PROCPER
          GOTO      STEPB800 IF NOT EQUAL
          PACK      KEY6,PROCYEAR,SP70
          CALL      RSCCCA1
STEPB100  CALL      RKCCCA1
          BRANCH    OVRCD,STEPB999
          MATCH     PROCYEAR,CCCAYEAR
          GOTO      STEPB999 IF NOT EQUAL
          MOVE      CCCAPER,PROCPER
          CALL      STEP0000
          GOTO      STEPB100
.
STEPB800  CALL      STEP0000
.
STEPB999  CALL      MESSAGE3
          RETURN
.----------------------------------------------------------------------
. Stepdown
.----------------------------------------------------------------------
STEP0000  DISPLAY   *P1:24,"Period ",PROCPER," Department : ";
          CALL      CLEAR000 * Clear any Current Indirect Costs & Summary
          PACK      KEY15,SP70
          CALL      RSCCDP4
          GOTO      STEP1100
.
STEP1000  PACK      KEY15,SAVEHCD,SAVESEQ,SAVEDPT
          CALL      RDCCDP4
STEP1100  CALL      RKCCDP4
          BRANCH    OVRCD,STEP9999
          MATCH     "1",CCDPDTY
          GOTO      STEP1100 IF NOT EQUAL
.
          DISPLAY   *P26:24,*V2LON,CCDPHCD,"/",CCDPDPT;
          PACK      KEY15,CCDPHCD,CCDPSEQ,CCDPDPT
          UNPACK    KEY15,SAVEHCD,SAVESEQ,SAVEDPT
.
          MOVE      CCDPATY,ALLOCATE
          MOVE      CCDPATY,SAVEATY
          CALL      TALL0000  * Calculate Totals for the Default Allocation Type
          MOVE      TOTALLOC,DEFALLOC
.
          CALL      PROC0000  * Process Costs
          GOTO      STEP1000
.
STEP9999  CALL      SUMM0000 * Calculate Summary Totals.
          RETURN
.----------------------------------------------------------------------
. Total the Allocation type from here down.
.----------------------------------------------------------------------
TALL0000
          PACK      KEY15,SAVEHCD,SAVESEQ,SAVEDPT
          MOVE      ZERO,TOTALLOC
          CALL      RDCCDP4
TALL1100  CALL      RKCCDP4
          BRANCH    OVRCD,TALL9999
.
          MATCH     CCDPHCD,SAVEHCD
          GOTO      TALL9999 IF NOT EQUAL
.
          PACK      KEY14,CCDPHCD,CCDPDPT,ALLOCATE
          CALL      RDCCAW1
          BRANCH    OVRCD,TALL1100
          ADD       CCAWQTY,TOTALLOC
.
          GOTO      TALL1100
.
TALL9999  RETURN
.----------------------------------------------------------------------
. Process Department Cost Details File
.----------------------------------------------------------------------
PROC0000  PACK      KEY20,SAVEHCD,SAVEDPT,PROCYEAR,PROCPER,SP70
          CALL      RSCCMB1
          GOTO      PROC1100
.
PROC1000  MOVE      SAVKEY20,KEY20
          CALL      RDCCMB1
PROC1100  CALL      RKCCMB1
          BRANCH    OVRCD,PROC9999
          MATCH     SAVEHCD,CCMBHCD
          GOTO      PROC9999 IF NOT EQUAL
          MATCH     SAVEDPT,CCMBDPT
          GOTO      PROC9999 IF NOT EQUAL
          MATCH     PROCYEAR,CCMBYEAR
          GOTO      PROC9999 IF NOT EQUAL
          MATCH     PROCPER,CCMBPER
          GOTO      PROC9999 IF NOT EQUAL
.
          PACK      SAVKEY20,CCMBHCD,CCMBDPT,CCMBYEAR,CCMBPER,CCMBCTY
          UNPACK    SAVKEY20,SAVEHCD,SAVEDPT,SAVEYEAR,SAVEPER,SAVECTY
.
          ASSIGN    CCMBIND+CCMBDIR,TOTALAMT
          COMPARE   ZERO,TOTALAMT
          GOTO      PROC1100 IF EQUAL
.
          MOVE      DEFALLOC,TOTALLOC
          MOVE      SAVEATY,ALLOCATE
          PACK      KEY14,CCMBHCD,CCMBDPT,CCMBCTY    * Check for Allocation
          CALL      RDCCDA1                          * of This Cost Type
          BRANCH    OVRCD,PROC2000
.
          MATCH     SP70,CCDAATY
          GOTO      PROC2000 IF EQUAL
          MOVE      CCDAATY,ALLOCATE
          CALL      TALL0000  * Calculate Totals for the Allocation Type
.
PROC2000
          PACK      KEY15,SAVEHCD,SAVESEQ,SAVEDPT
          CALL      RDCCDP4
PROC3000  CALL      RKCCDP4
          BRANCH    OVRCD,PROC1000
.
          MATCH     CCDPHCD,SAVEHCD
          GOTO      PROC1000 IF NOT EQUAL
.
          PACK      KEY14,CCDPHCD,CCDPDPT,ALLOCATE
          CALL      RDCCAW1
          BRANCH    OVRCD,PROC3000
.
          ASSIGN    (CCAWQTY/TOTALLOC)*TOTALAMT,ALLOCAMT
          PACK      KEY20,CCAWHCD,CCAWDPT,SAVEYEAR,SAVEPER,SAVECTY
          CALL      RDCCMB1
          IF        OVRCD=0
            ADD       ALLOCAMT,CCMBIND
            CALL      UPCCMB1
          ELSE
            UNPACK    KEY20,CCMBHCD,CCMBDPT,CCMBYEAR,CCMBPER,CCMBCTY
            MOVE      ZERO,CCMBDIR
            MOVE      ALLOCAMT,CCMBIND
            MOVE      ZERO,CCMBFLX
            CALL      WRCCMB1
          ENDIF
.
          MOVE      ALLOCATE,CCMFATY
          MOVE      TOTALLOC,CCMFTWG
          UNPACK    SAVKEY20,CCMFHCD,CCMFFDPT,CCMFYEAR,CCMFPER,CCMFCTY
          MOVE      TOTALAMT,CCMFTOT
          MOVE      CCAWQTY,CCMFWGT
          MOVE      ALLOCAMT,CCMFAMT
          MOVE      CCAWDPT,CCMFTDPT
          PACK      KEY28,CCMFHCD,CCMFFDPT,CCMFYEAR,CCMFPER,CCMFTDPT,CCMFCTY
          CALL      RDCCMF1
          IF        OVRCD=0
            ADD       ALLOCAMT,CCMFAMT
            CALL      UPCCMF1
          ELSE
            CALL      WRCCMF1
          ENDIF
.
          GOTO      PROC3000
.
PROC9999  RETURN
.----------------------------------------------------------------------
. Clear File Totals
.----------------------------------------------------------------------
CLEAR000  PACK      KEY10,SP70
          CALL      RSCCDP1
CLEAR100  CALL      RKCCDP1
          BRANCH    OVRCD,CLEAR999
          PACK      KEY10,CCDPHCD,CCDPDPT
          PACK      KEY16,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER
          CALL      RDCCMC1
          IF        OVRCD=0
            CALL      DECCMC1
          ENDIF
.
          PACK      KEY16,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER
          PACK      KEY20,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER,SP70
          CALL      RSCCMB1
CLEAR200  CALL      RKCCMB1
          BRANCH    OVRCD,CLEAR290
          PACK      KEY20,CCMBHCD,CCMBDPT,CCMBYEAR,CCMBPER,CCMBCTY
          MATCH     KEY16,KEY20
          GOTO      CLEAR290 IF NOT EQUAL
          MOVE      ZERO,CCMBIND
          MOVE      ZERO,CCMBFLX
          CALL      UPCCMB1
          GOTO      CLEAR200
.
CLEAR290  PACK      KEY16,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER
          PACK      KEY28,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER,SP70
          CALL      RSCCMF1
CLEAR300  CALL      RKCCMF1
          BRANCH    OVRCD,CLEAR100
          PACK      KEY28,CCMFHCD,CCMFFDPT,CCMFYEAR,CCMFPER,SP70
          MATCH     KEY16,KEY28
          GOTO      CLEAR100 IF NOT EQUAL
          PACK      KEY28,CCMFHCD,CCMFFDPT,CCMFYEAR,CCMFPER,CCMFTDPT,CCMFCTY
          CALL      DECCMF1
          GOTO      CLEAR300
.
CLEAR999  RETURN
.----------------------------------------------------------------------
. Summarize File
.----------------------------------------------------------------------
SUMM0000  PACK      KEY10,SP70
          CALL      RSCCDP1
SUMM0100  CALL      RKCCDP1
          BRANCH    OVRCD,SUMM9999
          PACK      KEY16,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER
          PACK      KEY20,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER,SP70
          CALL      RSCCMB1
SUMM0200  CALL      RKCCMB1
          BRANCH    OVRCD,SUMM0100
          PACK      KEY20,CCMBHCD,CCMBDPT,CCMBYEAR,CCMBPER,SP70
          MATCH     KEY16,KEY20
          GOTO      SUMM0100 IF NOT EQUAL
.
          PACK      KEY16,CCMBHCD,CCMBDPT,CCMBYEAR,CCMBPER
          CALL      RDCCMC1
          IF        OVRCD=0
            ADD       CCMBDIR,CCMCDIR
            ADD       CCMBIND,CCMCIND
            ADD       CCMBFLX,CCMCFLX
            CALL      UPCCMC1
          ELSE
            MOVE      CCMBDIR,CCMCDIR
            MOVE      CCMBIND,CCMCIND
            MOVE      CCMBFLX,CCMCFLX
            MOVE      SP70,CCMBSPA
            UNPACK    KEY16,CCMCHCD,CCMCDPT,CCMCYEAR,CCMCPER
            CALL      WRCCMC1
          ENDIF
          GOTO      SUMM0200
.
SUMM9999
          RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       CCSAWGIO/INC
          INC       CCSCALIO/INC
          INC       CCSCALKY    
          INC       CCSCMAIO/INC
          INC       CCSCMAKY    
          INC       CCSCMBIO/INC
          INC       CCSCMCIO/INC
          INC       CCSCMDIO/INC
          INC       CCSCMEIO/INC
          INC       CCSCMFIO/INC
          INC       CCSDALIO/INC
          INC       CCSDPTIO/INC
          INC       CCSMOPCD    
.
          INC       STDGENCD
.
