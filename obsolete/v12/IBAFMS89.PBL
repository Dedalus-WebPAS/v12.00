. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS89                                             *
. * Desc      :   Budget Profile Update                                *
. **********************************************************************
. * Date      :   30.04.1991                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.01  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. **********************************************************************
.$$$$$$
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUDADF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSBTYFD/INC
          INC       FMSBPFFD/INC
          INC       FMSBUDFD/INC
          INC       FMSSBUFD/INC
          INC       FMSAMAFD/INC   * Ledger Master
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSCSAFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
FMSAUDG   FORM      1
FMSL      INIT      "fmsl"
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
ALL       INIT      "All"    * default description for all
FMSB      INIT      "fmsb"   * budget file prefix
.
ACCEPT    FORM      1        * accept mode (1=on)
ANBUDGET  FORM      12.2     * annual budget
FILENAME  DIM       8        * file
FORM12P2  FORM      12.2     * general form 12.2
FORM12P5  FORM      12.5
FORM14P2  FORM      14.2
FYEAR     DIM       4        * year
LEDGER    DIM       2        * ledger
LEDGDESC  DIM       35       * ledger desc
OPTIONA   FORM      2        * screen A selection keyin var
PROFILE   DIM       3        * profile
PROFDESC  DIM       35       * profile desc
YEARDESC  DIM       5        * year desc
.
PRGID     INIT      "IBAFMS89"
PRGNAM    INIT      "Budget Profile Update"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
          BRANCH    EXIT,ML9999
.
ML0100    CALL      SELA0000           * perform screen A
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  MOVE      FALSE,EXIT
          CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening fmsbtyaf";
          OPEN      FMSBTYA1,"fmsbtyaf"
.
          DISPLAY   *P64:24,"fmsbpfaf";
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmsamaaf";          * Ledger file
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          MOVE      "   51",AUDTSECT
          MOVE      "49",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          COMPARE   ONE,AUDTFLAG
          GOTO      INIT9999 IF NOT EQUAL
.
          DISPLAY   *P64:24,"fmsaudbu";
          OPEN      FMSAUDBU,"fmsaudbu"
.
INIT9999  DISPLAY   *P1:24,*EF;
          RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  DISPLAY   *P1:3,*EF:
                    *P5:4,"Ledger               : ":
                          *V2LON,LEDGER,*HOFF,SP4,LEDGDESC:
                    *P5:5,"Financial Year       : ":
                          *V2LON,FYEAR,*HOFF,SP2,YEARDESC:
                    *P5:6,"Budget Profile Code  : ":
                          *V2LON,PROFILE,*HOFF,SP3,PROFDESC;
.
SCRA9999  RETURN
.******************************************************************************
.  DOPT - Display Screen A Options               Called by SELA, redisps
.******************************************************************************
DOPT0000  DISPLAY   *P1:4,*V2LON," 1",*HOFF,".";
          MATCH     SP70,LEDGER
          GOTO      DOPT0500 IF EQUAL
.
          DISPLAY   *P1:5,*V2LON," 2",*HOFF,".";
          GOTO      DOPT1000
.
DOPT0500  DISPLAY   *P1:5,"   ";
.
DOPT1000  MATCH     SP70,FYEAR
          GOTO      DOPT1500 IF EQUAL
.
          DISPLAY   *P1:6,*V2LON," 3",*HOFF,".";
          GOTO      DOPT9999
.
DOPT1500  DISPLAY   *P1:6,"   ";
.
DOPT9999  RETURN
.******************************************************************************
.  SELA - Perform Screen A                       Called by ML
.         Returns : EXIT     (1=exit program)
.******************************************************************************
SELA0000  UNPACK    SP70,LEDGER,FYEAR,PROFILE,YEARDESC
          UNPACK    SP70,LEDGDESC,PROFDESC
          MOVE      ZERO,OPTIONA       * reset item desired
          MOVE      ONE,ACCEPT         * into accept mode
          CALL      SCRA0000           * display screen A
.
SELA0100  ADD       ONE,OPTIONA        * get next item
          BRANCH    ACCEPT,SELA0110    * in accept mode ?
          CALL      DOPT0000           * display options
          CALL      MQST0000           * get option if not in accept mode
          MOVE      CCITEM,OPTIONA
.
SELA0110  MOVE      "28",CCOL          * get screen address
          MOVE      "3",CVERT
          ADD       OPTIONA,CVERT
          MOVE      OPTIONA,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELA9500,SELA9000:                  * quit, continue
                       SELA1100,SELA1200,SELA1300          * execute option
.
SELA0200  BRANCH    ACCEPT,SELA0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELA0100           * get another option
.
SELA0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELA0100
.
.---- option 1 ----
.
SELA1100  CALL      KLMAFM00
          BRANCH    EXIT,SELA1180,SELA9500
          PACK      LEDGER,FMLALEDG,SP70
          PACK      LEDGDESC,FMLADESC,SP70
          GOTO      SELA1190
.
SELA1180  PACK      LEDGER,SP70
          PACK      LEDGDESC,ALL,SP70
          UNPACK    SP70,FYEAR,YEARDESC
          UNPACK    SP70,PROFILE,PROFDESC
          DISPLAY   *P28:5,*EL,*P28:6,*EL;
.
SELA1190  DISPLAY   *PCCOL:CVERT,*V2LON,LEDGER,*HOFF,SP4,LEDGDESC;
          MATCH     SP70,FYEAR
          GOTO      SELA0100 IF NOT EQUAL
          ADD       ONE,OPTIONA
          ADD       ONE,CVERT
.
.---- option 2 ----
.
SELA1200  MATCH     SP70,LEDGER
          GOTO      SELA0500 IF EQUAL  * option not valid ?
          CALL      KLMCFM00
          BRANCH    EXIT,SELA1280,SELA9500
          PACK      FYEAR,FMLCYEAR,SP70
          PACK      YEARDESC,SP70
          GOTO      SELA1290
.
SELA1280  PACK      FYEAR,SP70
          PACK      YEARDESC,ALL,SP70
          UNPACK    SP70,PROFILE,PROFDESC
          DISPLAY   *P28:6,*EL;
.
SELA1290  DISPLAY   *PCCOL:CVERT,*V2LON,FYEAR,*HOFF,SP2,YEARDESC;
          MATCH     SP70,PROFILE
          GOTO      SELA0100 IF NOT EQUAL
          ADD       ONE,OPTIONA
          ADD       ONE,CVERT
.
.---- option 3 ----
.
SELA1300  MATCH     SP70,FYEAR
          GOTO      SELA0500 IF EQUAL  * option not valid ?
          CALL      KBPFFM00
          BRANCH    EXIT,SELA1380,SELA9500
          PACK      PROFILE,FMBPCODE,SP70
          PACK      PROFDESC,FMBPDESC,SP70
          GOTO      SELA1390
.
SELA1380  PACK      PROFILE,SP70
          PACK      PROFDESC,ALL,SP70
.
SELA1390  DISPLAY   *PCCOL:CVERT,*V2LON,PROFILE,*HOFF,SP3,PROFDESC;
          GOTO      SELA0100
.
.
SELA9000  CALL      POST0000           * perform update
          MOVE      ZERO,EXIT          * continue
          GOTO      SELA0100
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.**********************************************************************
.  MQST - select, post, cancel, run report              Called By lots
.        Returns  - CCITEM   (0=run update, -1=exit, other=select
.**********************************************************************
MQST0000  MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EF,"Select Item, (",*V2LON:
                    "R",*HOFF,")un Update, e(",*V2LON:
                    "X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQST0000 IF EOS    * nothing entered ?
          REP       UPPLOW,CCITEMD
.
          MOVE      " 0",CCITEM
          MATCH     "  R",CCITEMD      * run update ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      "-1",CCITEM
          MATCH     "  X",CCITEMD      * exit ?
          GOTO      MQST9999 IF EQUAL
.
          MOVE      ZERO,CCITEM
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM         * select item ?
          GOTO      MQST9999 IF NOT LESS
.
          BEEP
          GOTO      MQST0000
.
MQST9999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.**********************************************************************
POST0000  PACK      KEY4,SP70
          CALL      RSFMBT1
.
.---- budget type loop ----
.
POST0500  CALL      RKFMBT1
          BRANCH    OVRCD,POST9999          * no more records ?
.
          PACK      FILENAME,FMSB,FMBTCODE,SP70
          REP       " 0",FILENAME           * get required filename
          DISPLAY   *P1:24,"Processing : ",*V2LON,FILENAME,*EL;
.
          MATCH     FYEAR,SP70
          GOTO      POST0600 IF EQUAL       * all years ?
          MATCH     FYEAR,FMBTYEAR
          GOTO      POST0500 IF NOT EQUAL   * required year ?
.
POST0600  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,POST0500          * file not found ?
          OPEN      FMSBUDA2,FILENAME
.
.---- budget file loop ----
.
          CALL      RSBU0000
.
POST1000  CALL      RKBU0000
          BRANCH    OVRCD,POST0500          * no more records ?
.
          CALL      CBUD0000                * calculate budget for each period
          CALL      UPBU0000                * update record
          GOTO      POST1000
.
POST9999  RETURN
.*************************************************************************
.* CBUD - Calculate the budget for each period        Called by POST     *
.*************************************************************************
CBUD0000  MOVE      ZERO,ANBUDGET           * calculate the budget for year
          ADD       FMBUCA01,ANBUDGET
          ADD       FMBUCA02,ANBUDGET
          ADD       FMBUCA03,ANBUDGET
          ADD       FMBUCA04,ANBUDGET
          ADD       FMBUCA05,ANBUDGET
          ADD       FMBUCA06,ANBUDGET
          ADD       FMBUCA07,ANBUDGET
          ADD       FMBUCA08,ANBUDGET
          ADD       FMBUCA09,ANBUDGET
          ADD       FMBUCA10,ANBUDGET
          ADD       FMBUCA11,ANBUDGET
          ADD       FMBUCA12,ANBUDGET
          BRANCH    FMLAPERS,CBUD0100
          ADD       FMBUCA13,ANBUDGET
.
CBUD0100  MOVE      ANBUDGET,FORM14P2   * move the annual budget into each field
          MULT      FMBPPC1,FORM14P2    * Multiply each period by its percentage
          DIV       "100",FORM14P2      * Divide each period by 100 to get value
          MOVE      FORM14P2,FMBUCA01   * move the annual budget into each field
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC2,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA02
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC3,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA03
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC4,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA04
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC5,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA05
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC6,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA06
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC7,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA07
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC8,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA08
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC9,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA09
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC10,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA10
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC11,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA11
.
          MOVE      ANBUDGET,FORM14P2
          MULT      FMBPPC12,FORM14P2
          DIV       "100",FORM14P2
          MOVE      FORM14P2,FMBUCA12
.
          MOVE      ANBUDGET,FORM12P5       * calculate the budget for the last
          SUB       FMBUCA01,FORM12P5       * period of the year
          SUB       FMBUCA02,FORM12P5
          SUB       FMBUCA03,FORM12P5
          SUB       FMBUCA04,FORM12P5
          SUB       FMBUCA05,FORM12P5
          SUB       FMBUCA06,FORM12P5
          SUB       FMBUCA07,FORM12P5
          SUB       FMBUCA08,FORM12P5
          SUB       FMBUCA09,FORM12P5
          SUB       FMBUCA10,FORM12P5
          SUB       FMBUCA11,FORM12P5
.
          BRANCH    FMLAPERS,CBUD1000
          MOVE      FORM12P5,FMBUCA12
          GOTO      CBUD2000
.
CBUD1000  SUB       FMBUCA12,FORM12P5
          MOVE      FORM12P5,FMBUCA13
          GOTO      CBUD2000
.
.
CBUD2000  
.
CBUD9999  RETURN
.**********************************************************************
.  RSBU - Go to start of records                       Called By POST
.**********************************************************************
RSBU0000  MATCH     SP70,PROFILE
          GOTO      RSBU0100 IF EQUAL  * profile set ?
.
          PACK      KEY17,PROFILE,LEDGER,SP70
          CALL      RSFMBU2
          PACK      KEY9,LEDGER,FYEAR,PROFILE,SP70
          CALL      RDFMBP1            * get profile data
          GOTO      RSBU9999
.
RSBU0100  PACK      KEY14,LEDGER,SP70
          CALL      RSFMBU1
.
RSBU9999  RETURN
.**********************************************************************
.  RKBU - Get next record                              Called By POST
.        Returns  - OVRCD    (1=quit)
.**********************************************************************
RKBU0000  MATCH     SP70,PROFILE
          GOTO      RKBU0100 IF EQUAL  * profile set ?
.
          CALL      RKFMBU2
          BRANCH    OVRCD,RKBU9500          * no more records ?
          MATCH     PROFILE,FMBUCUPR
          GOTO      RKBU9500 IF NOT EQUAL   * no more records ?
          MATCH     LEDGER,FMBUCULD
          GOTO      RKBU9500 IF NOT EQUAL   * no more records ?
          GOTO      RKBU9000
.
RKBU0100  CALL      RKFMBU1
          BRANCH    OVRCD,RKBU9500          * no more records ?
          MATCH     FMBUCUPR,SP70
          GOTO      RKBU0100 IF EQUAL       * blank profile ?
          MATCH     LEDGER,SP70
          GOTO      RKBU0110 IF EQUAL       * all ledgers ?
          MATCH     LEDGER,FMBUCULD
          GOTO      RKBU9500 IF NOT EQUAL   * no more records ?
.
RKBU0110  PACK      KEY9,FMBUCULD,FMBTYEAR,FMBUCUPR,SP70
          CALL      RDFMBP1                 * get profile data
.
RKBU9000  PACK      KEY2,FMBUCULD,SP70
          CALL      RDFMLA1                 * get ledger data
          DISPLAY   *P1:24,"Processing : ",*V2LON,FILENAME,SP1:
                    FMBUCUPR,SLASH,FMBUCULD,SLASH,FMBUCUAC,*EL;
          MOVE      ZERO,OVRCD         * continue
          GOTO      RKBU9999
.
RKBU9500  MOVE      ONE,OVRCD          * quit
.
RKBU9999  RETURN
.**********************************************************************
.  UPBU - Update current budget record                 Called By POST
.**********************************************************************
UPBU0000  MATCH     SP70,PROFILE
          GOTO      UPBU0100 IF EQUAL  * profile set ?
.
          CALL      SVBUD000                * Save modified Variables
          PACK      KEY17,FMBUCUPR,FMBUCULD,FMBUCUAC,SP70
          CALL      RDFMBU2                 * Read Initial Variables
          MOVE      TWO,AUDTTYPE            * before change
          CALL      WAFMBU00                * write audit
          CALL      REBUD000                * Restore modified Variables
          MOVE      THREE,AUDTTYPE          * before change
          CALL      WAFMBU00                * write audit
          CALL      UPFMBU2
          PACK      KEY17,FMBUCUPR,FMBUCULD,FMBUCUAC,SP70
          CALL      RSFMBU2
          GOTO      UPBU9999
.
UPBU0100  PACK      KEY14,FMBUCULD,FMBUCUAC,SP70
          CALL      UPBUD000
          CALL      RSFMBU1
.
UPBU9999  RETURN
.******************************************************************************
.  Redisplays
.******************************************************************************
RLMAFM00  
RLMCFM00  
RBPFFM00  CALL      SCRA0000
          RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD
          INC       FMSBTYIO/INC
          INC       FMSBPFIO/INC
          INC       FMSBUDIO/INC
          INC       FMSSBUIO/INC
          INC       FMSAMAIO/INC   * Ledger Master
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSBPFKY
          INC       FMSLMAKY
          INC       FMSLMCKY
.
