.*****************************************************************************
.*    Program      : F50PMSHC                                                *
.*    Description  : Create pmshcpaf file from patgpcaf                      *
.*                                                                           *
.*    Author       : Steve Downing                                           *
.*    Date         : 20/04/2001                                              *
.*    Modifications:                                                         *
.*                   V10.11.01  09/08/2017 Tracey Nguyen   TSK 0299206       *
.*                   Recompiled for PMSHKIPR                                 *
.*                   v9.02.01  - 21/07/2003 Ebon Clements  CAR               *
.*                   Added oracle option to program                          *
.*                   v9.00.02 6-7-2001 Dean Cramer                           *
.*                   Initialise Yes/No fields                                *
.*****************************************************************************
.
          INC       STD001FD
          INC       PMSHCPFD/INC
.
. 5.01 .002 25/11/1992 SOG Split name into given & surname                   
. *----------------------------------------------------------------------
. * Include Name  :   PATGPCFD.INC
. *
. * Function      :   File Def'n Include for Patient                            
. *                   National GP                        
. *
. * File Type     :   SQL
. *
. * File Name     :   patgpcaf.dat
. *
. * Modifications : 18/03/1993  Graeme Williams
. *                 Added GP/Dentist flag
. *                 15/07/1994   Justin Coates 
. *                 Added Phone and Fax Number and Title
. *----------------------------------------------------------------------
.
.Data File Definition
.--------------------
PATGPCA1   IFILE    SQL, FIXED=271, KEY="U1-8"
PATGPCA2   IFILE    SQL, FIXED=271, KEY="U9-28,29-53,1-8"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PTGPCODE  DIM       8      8        1     GP Code
PTGPSNAM  DIM       20     20       9     GP's Surname
PTGPGNAM  DIM       25     25       29    GP's Given Name (Initials)
PTGPADD1  DIM       35     35       54    Address Line
PTGPADD2  DIM       35     35       89    Address Line 2
PTGPADD3  DIM       35     35       124   Address Line 3
PTGPADD4  DIM       35     35       159   Address Line 4
PTGPPCDE  DIM       8      8        194   Postcode
PTGPTYPE  DIM       1      1        202   G = GP, D = Dentist
PTGPSTAT  DIM       1      1        203   Status             
.                                         0 = active , 1 = non-active
PTGPTITL  DIM       4      4        204   Title
PTGPPHNE  DIM       20     20       208   Phone Number
PTGPFAX   DIM       20     20       228   Fax Number
PTGPSPAR  DIM       23     23       248   Spare
.End of Record                      271
.
.
. variables for ? routine
.
PTGPSNAX  DIM       20              Redefine field for ? Surname
PTGPGNAX  DIM       25              Redefine field for ? Given Name
PTGPPRCX  DIM       6               Redefine field for ? Practice Code
PTGPFLAG  FORM      "0"             Flag for display of active GP in ?
.                                   0 = Don't Display Inactive Gp's
.                                   1 = Display all Gp's
.
PTGPQARR  DIM       16[20]        * array for ? option
PTGPQCNT  FORM      2             * counter for ? option
.
FINDFILE  FILE      ASCII, FIXED=256
.
CMDLINE   DIM       100
DIM60     DIM       60
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
ORACLEFL  FORM      1
.
PRGNAM    INIT      "Create PMSHCPFD"
PRGID     INIT      "F50PMSHC"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
MAIN0100  CALL      OPTN0000                      * select options
          BRANCH    EXIT,MAIN9999                 * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN0200,MAIN0500     * proceed with clean up
          GOTO      MAIN9999
.
MAIN0200  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN0500  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read master records 
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,ORACLEFL
.         
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fix Program CISAM ":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fix Program ORACLE"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000,OPTN9100    * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          MOVE      ZERO,ORACLEFL
          GOTO      OPTN9999
.
OPTN9100  MOVE      ZERO,EXIT
          MOVE      ONE,ORACLEFL
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  CALL      DEFT0000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new extension file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATGPCA1,"patgpcaf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
.
          COMPARE   ONE,ORACLEFL
          GOTO      PREP0500 IF NOT EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PMSHCPA1,"pmshcpaf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP6000       * Original file does not exist
.
          GOTO      PREP9999
.
. Create the new file
.
PREP0500  DISPLAY   *P1:24,*EL,"Creating new Healthcare Professional file ... ":
                    "Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmshcpaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 1751 U1-10 U58-92,23-57,1-10",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSHCPA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"GP file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP6000  DISPLAY   *P1:24,*EL,*B,"HCP file not found.  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file                                     *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY8,SP60
          CALL      RSPTGPC1                      * position at start
READ1000  CALL      RKPTGPC1                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
          PACK      KEY10,PTGPCODE,SP2
          CALL      RAPMHCP1
          COMPARE   ZERO,OVRCD
          GOTO      READ5000 IF EQUAL
.
          PACK      PMHCHCPC,PTGPCODE,SP2
          PACK      PMHCSNAM,PTGPSNAM,SP30,SP5
          PACK      PMHCGNAM,PTGPGNAM,SP30,SP5
          PACK      PMHCADR1,PTGPADD1,SP70
          PACK      PMHCADR2,PTGPADD2,SP70
          PACK      PMHCADR3,PTGPADD3,SP70
          PACK      PMHCADR4,PTGPADD4,SP70
          PACK      PMHCPOST,PTGPPCDE,SP8
          PACK      PMHCHCPT,PTGPTYPE,SP2
          MOVE      PTGPSTAT,PMHCHCST
          PACK      PMHCTITL,PTGPTITL,SP10
          PACK      PMHCSTEL,PTGPPHNE,SP20
          PACK      PMHCFAXN,PTGPFAX,SP20
.
          MOVE      SP70,PMHCINIT
          MOVE      SP70,PMHCGNDR
          MOVE      SP70,PMHCDTOB
          MOVE      SP70,PMHCSPC1
          MOVE      SP70,PMHCSPD1
          MOVE      SP70,PMHCSPC2
          MOVE      SP70,PMHCSPD2
          MOVE      SP70,PMHCSPC3
          MOVE      SP70,PMHCSPD3
          MOVE      SP70,PMHCSPC4
          MOVE      SP70,PMHCSPD4
          MOVE      SP70,PMHCSPC5
          MOVE      SP70,PMHCSPD5
          MOVE      SP70,PMHCRCPT
          MOVE      SP70,PMHCADR5
          MOVE      SP70,PMHCADR6
          MOVE      SP70,PMHCSTAT
          MOVE      SP70,PMHCSEML
          MOVE      SP70,PMHCPAGR
          MOVE      SP70,PMHCPAGN
          MOVE      SP70,PMHCAHP1
          MOVE      SP70,PMHCAHP2
          MOVE      SP70,PMHCAHP3
          MOVE      SP70,PMHCAHP4
          MOVE      SP70,PMHCAHP5
          MOVE      SP70,PMHCPRV1
          MOVE      SP70,PMHCPRV2
          MOVE      SP70,PMHCPRV3
          MOVE      SP70,PMHCPRV4
          MOVE      SP70,PMHCPRV5
          MOVE      SP70,PMHCHTEL
          MOVE      SP70,PMHCHAD1
          MOVE      SP70,PMHCHAD2
          MOVE      SP70,PMHCHAD3
          MOVE      SP70,PMHCHAD4
          MOVE      SP70,PMHCHAD5
          MOVE      SP70,PMHCHAD6
          MOVE      SP70,PMHCHPCD
          MOVE      SP70,PMHCHEML
          MOVE      SP70,PMHCDFAC
          MOVE      SP70,PMHCDLAC
          MOVE      ZERO,PMHCYACC
          MOVE      SP70,PMHCATYP
          MOVE      ZERO,PMHCHHCP
          MOVE      SP70,PMHCOSLV
          MOVE      THREE,PMHCHCST
          MOVE      SP70,PMHCHCSD
          MOVE      SP70,PMHCHFXN
          MOVE      SP70,PMHCMOBN
          MOVE      SP70,PMHCCRDC
          MOVE      SP70,PMHCWAHC
          MOVE      SP70,PMHCMRBN
          MOVE      SP70,PMHCNHSN
          MOVE      SP70,PMHCUDF1
          MOVE      SP70,PMHCUDF2
          MOVE      SP70,PMHCUDF3
          MOVE      SP70,PMHCUDF4
          MOVE      SP70,PMHCUDF5
          MOVE      "0",PMHCUYN1
          MOVE      "0",PMHCUYN2
          MOVE      "0",PMHCUYN3
          MOVE      "0",PMHCUYN4
          MOVE      "0",PMHCUYN5
          MOVE      SP70,PMHCINSC
          MOVE      SP70,PMHCIPLN
          MOVE      SP70,PMHCIDTF
          MOVE      SP70,PMHCIDTT
          MOVE      SP70,PMHCMPGN
          MOVE      "0",PMHCAPCI
          MOVE      SP70,PMHCREGT
          MOVE      SP70,PMHCRGDF
          MOVE      SP70,PMHCRGDT
          MOVE      SP70,PMHCPRDF
          MOVE      SP70,PMHCPRDT
          MOVE      SP70,PMHCTSDF
          MOVE      SP70,PMHCTFDT
          MOVE      SP70,PMHCVISD
          MOVE      SP70,PMHCPRFC
          MOVE      SP70,PMHCPRFN
          MOVE      SP70,PMHCABNN
          MOVE      SP70,PMHCUPDF
          MOVE      SP70,PMHCPRMK
          MOVE      "0",PMHCSTTS
          MOVE      SP70,PMHCDLMI
          MOVE      SP70,PMHCDLMA
          MOVE      SP70,PMHCCDTE
          MOVE      SP70,PMHCCTIM
          MOVE      SP70,PMHCWEBC
          MOVE      SP70,PMHCLUPD
          MOVE      SP70,PMHCLUPT
          MOVE      SP70,PMHCWEBU
          MOVE      SP70,PMHCSPAR
.
          PACK      KEY10,PTGPCODE,SP2
          CALL      WRPMHCP1
          PROC      PMSHKIUP        * Updates keyword index
.
READ5000  IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.**********************************************************************
ENDP0000  CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat patgpcaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding patgpcaf.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.
. PATGPCIO    
. --------
. Filename     : patgpcaf.dat
.
RSPTGPC1  RESET     KEY8                                                        
          READ      PATGPCA1,KEY8;;                                             
          RETURN
.
RAPTGPC1  RESET     KEY8                                                        
          MOVE      ZERO,OVRCD
          READ      PATGPCA1,KEY8;ANS                                           
          GOTO      OVERCOND IF OVER
          RETURN
.
RDPTGPC1  RESET     KEY8                                                        
          MOVE      ZERO,OVRCD
          READ      PATGPCA1,KEY8;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2: 
                                  PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                                  PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RLPTGPC1  RESET     KEY8                                                        
          MOVE      ZERO,OVRCD
          READL     PATGPCA1,KEY8;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2: 
                                  PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                                  PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          GOTO      OVERCOND IF OVER
          GOTO      OVERLOCK IF LOCKED
          RETURN
.
.
RKPTGPC1                                                                        
          MOVE      ZERO,OVRCD
          READKS    PATGPCA1;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2:      
                             PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                             PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPPTGPC1                                                                        
          MOVE      ZERO,OVRCD
          READKP    PATGPCA1;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2:      
                             PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                             PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
UPPTGPC1                                                                        
          UPDATE    PATGPCA1;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2:      
                             PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                             PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          RETURN
.
ULPTGPC1  UNLOCK    PATGPCA1
          RETURN
.
WRPTGPC1  MOVE      ZERO,OVRCD 
          RESET     KEY8   
          TRAP      OVERLOCK IF IO
          WRITE     PATGPCA1,KEY8;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2: 
                                  PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                                  PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          TRAPCLR  IO
          RETURN
.
DEPTGPC1  RESET     KEY8                                                        
          DELETE    PATGPCA1,KEY8                                               
          RETURN
.
.
RSPTGPC2  RESET     KEY53     
          READ      PATGPCA2,KEY53;;   
          RETURN
.
RAPTGPC2  RESET     KEY53             
          MOVE      ZERO,OVRCD
          READ      PATGPCA2,KEY53;ANS 
          GOTO      OVERCOND IF OVER
          RETURN
.
RDPTGPC2  RESET     KEY53                                                        
          MOVE      ZERO,OVRCD
          READ      PATGPCA2,KEY53;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2:
                                   PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                                   PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RKPTGPC2                                                                        
          MOVE      ZERO,OVRCD
          READKS    PATGPCA2;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2:      
                             PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                             PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPPTGPC2                                                                        
          MOVE      ZERO,OVRCD
          READKP    PATGPCA2;PTGPCODE,PTGPSNAM,PTGPGNAM,PTGPADD1,PTGPADD2:      
                             PTGPADD3,PTGPADD4,PTGPPCDE,PTGPTYPE,PTGPSTAT:
                             PTGPTITL,PTGPPHNE,PTGPFAX,PTGPSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.............................................................................
          INC       PMSHCPIO/INC
          INC       STD001IO
          INC       PMSHKIPR
