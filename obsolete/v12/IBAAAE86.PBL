.******************************************************************************
.* System         : Accident and Emergency                                    *
.* Program        : IBAAAE86.PBL                                              *
.* Name           : Set Up A&E Letters                                        *
.******************************************************************************
.* Date           : 12/04/1994                                                *
.* Author         : Rob Leonard                                               *
.* Function       : To set up letters for A&E                                 *
.* Modifications  :                                                           *
.*                                                                            *
.*       V10.13.01  05/12/2018  Don Nguyen       TSK 0838558                  *
.*                  Deleted temp file (TEMP1) on program exit                 *
.*       V10.04.01  07/03/2014  Ania P             CAR 261630                 *
.*                  Remove the use of PORT for temp file names                *
.*        V5.04.02  11/04/1997  Steve Armstrong    SRF 642798                 *
.*                  Fixed UK bug (not padding out work variable)              *
.*        V5.04.01  18/02/1997  Howellsy           WHT                        *
.*                  Added Cell Phone, Postal Add1-4, Postal Post Code         *
.*        V5.03.01  16/04/1996  Howellsy           5.04                       *
.*                  Changed Accident & Emergency to Emergency.                *
.*                                                                            *
.******************************************************************************
.
. PROGRAMMERS NOTE - Adding to Word Processor Variables   (AAE86 & AAE87)
.
.    Add to LC and LX variables on an Alphabetical order basis (PAGE first)
.    SEARCH command altered for total number of variables.
.    LOAD command altered to handle new variable(s).
.
         INC       STD001FD
         INC       AAELETFD/INC           * A&E letters file
         INC       AAEDE1FD/INC           * A&E Master Details
.
         INC       IBASEQFD/INC
         INC       TFILEVAR/INC
         INC       WEBERRFD/INC
.
.========================================================================
.                    WORD PROCESSOR VARS 
.========================================================================
.  
.            ---- List of variables which  ----
.            ---- the Word Processor uses  ----
.
LCPAGE    INIT      "%page"        * Page Break
LCAAENUM  INIT      "%aaenum"      * A&E Number
LCADHOS   INIT      "%adhos"       * Admitted to Hospital
LCCCODE   INIT      "%ccode"       * Compensation Code (CL)
LCCCODED  INIT      "%ccoded"      * Compensation Code Description
LCCOMPW   INIT      "%compw"       * Completion Wait Code (EW)
LCCOMPWD  INIT      "%compwd"      * Completion Wait Code Description
LCDADMIT  INIT      "%dsadmit"     * Decision to Admit Time
LCDADMIS  INIT      "%dassess"     * Discharge Assessment
LCDATES   INIT      "%dateseen"    * Date Seen
LCDCODE   INIT      "%dcode"       * Doctor Code Allocated
LCDDATE   INIT      "%ddate"       * Discharge Date
LCDDIAG   INIT      "%disdiagc"    * Discharge Diagnosis Code
LCDIAG    INIT      "%diag"        * Diagnosis
LCDNAME   INIT      "%dname"       * Doctor Name Allocated
LCDSTAT   INIT      "%dstatus"     * Discharge Status
LCDTIME   INIT      "%dtime"       * Discharge Time
LCDURWT   INIT      "%durwt"       * Duration of Wait
LCEADDA   INIT      "%eadda"       * Employer address line 1
LCEADDB   INIT      "%eaddb"       * Employer address line 2
LCEADDC   INIT      "%eaddc"       * Employer address line 3
LCEADDD   INIT      "%eaddd"       * Employer address line 4
LCEDESC   INIT      "%edesc"       * Employer Description
LCEPHONE  INIT      "%ephone"      * Employer Phone
LCEPOST   INIT      "%epost"       * Employer Postcode
LCEWORK   INIT      "%ework"       * Employer / Workcare
LCFULLN   INIT      "%fulln"       * Patient Full name
LCGIVN    INIT      "%givn"        * Given names
LCHELTH   INIT      "%health"      * Health Fund
LCHELTHD  INIT      "%healthd"     * Health Fund Description
LCHLTHT   INIT      "%healtht"     * Health Fund Table
LCHLTHTD  INIT      "%healthtd"    * Health Fund Table Description
LCINCTM   INIT      "%inctime"     * Incident Time
LCISTAT   INIT      "%istatus"     * Insurance Status (U1)
LCISTATD  INIT      "%istatsd"     * Insurance Status Description
LCINITC   INIT      "%initcod"     * Initiator Code (AI)
LCINITCD  INIT      "%initcodd"    * Initiator Code Description
LCMODE    INIT      "%mode"        * Mode of arrival (EA)
LCMODED   INIT      "%moded"       * Mode of arrival Description
LCNATNUM  INIT      "%natnum"      * National number
LCNOPREV  INIT      "%noprev"      * No. Previous Visits Charged
LCPADDA   INIT      "%padda"       * Patient address line 1
LCPADDB   INIT      "%paddb"       * Patient address line 2
LCPADDC   INIT      "%paddc"       * Patient address line 3
LCPADDD   INIT      "%paddd"       * Patient address line 4
LCPCLSS   INIT      "%pclass"      * Patient Classification (A)
LCPCLSSD  INIT      "%pclassd"     * Patient Classification Description
LCPPBUS   INIT      "%ppbus"       * Patient phone business
LCPPHOME  INIT      "%pphome"      * Patient phone home
LCPPOST   INIT      "%ppost"       * Patient post code
LCPLIN    INIT      "%plinc"       * Place of Incident Code (AP)
LCPLIND   INIT      "%plincd"      * Place of Incident Description
LCPRAE    INIT      "%prevae"      * Previous A&E Attendance (EP)
LCPRAED   INIT      "%prevaed"     * Previous A&E Attendance Description
LCPRID    INIT      "%pridesc"     * Priority Description
LCRGPCOD  INIT      "%rgpcode"     * Referring GP Code
LCRGPNAM  INIT      "%rgpname"     * Referring GP Name
LCRGPPC   INIT      "%rgppcode"    * Referring GP Practice Code
LCRGPPD   INIT      "%rgppd"       * Referring GP Practice Description
LCSEAT    INIT      "%seat"        * Seatbelt Details Code (AR)
LCSEATD   INIT      "%seatd"       * Seatbelt Details Description
LCSIT     INIT      "%sit"         * Situation (ES)  
LCSITD    INIT      "%sitd"        * Situation Description  
LCSORC    INIT      "%sorc"        * Source of Referral (S)
LCSORCD   INIT      "%sorcd"       * Source of Referral Description
LCSURN    INIT      "%surn"        * Surname
LCTIMEI   INIT      "%timei"       * Time of Initial Assessment
LCTIMES   INIT      "%timeseen"    * Time Actually Seen
LCTODDAT  INIT      "%today"       * Todays Date
LCURNUM   INIT      "%urno"        * U/R Number
LCUDEF1   INIT      "%usdef1"      * User Defined Field 1
LCUDEF1D  INIT      "%usdef1d"     * User Defined Field 1 Description
LCUDEF2   INIT      "%usdef2"      * User Defined Field 2
LCUDEF2D  INIT      "%usdef2d"     * User Defined Field 2 Description
LCUDEF3   INIT      "%usdef3"      * User Defined Field 3
LCUDEF3D  INIT      "%usdef3d"     * User Defined Field 3 Description
LCUDEF4   INIT      "%usdef4"      * User Defined Field 4
LCUDEF4D  INIT      "%usdef4d"     * User Defined Field 4 Description
LCUDEF5   INIT      "%usdef5"      * User Defined Field 5
LCUDEF5D  INIT      "%usdef5d"     * User Defined Field 5 Description
LCVDATE   INIT      "%vdate"       * Date of Visit
LCVTIME   INIT      "%vtime"       * Time of Visit
LCCTELE   INIT      "%ctele"            * Cellular Phone Number
LCPODDA   INIT      "%podda"            * Postal address line 1
LCPODDB   INIT      "%poddb"            * Postal address line 2
LCPODDC   INIT      "%poddc"            * Postal address line 3
LCPODDD   INIT      "%poddd"            * Postal address line 4
LCPOOST   INIT      "%poost"            * Postal Post Code       
.
.
. ----- Maximum Field Lengths for the Variables Above -----
.
LXPAGE    INIT      "  -----              Page Break               ":
                    "  -----  "
LXAAENUM  INIT      "XXXXXXXX"
LXADHOS   INIT      "XXX"
LXCCODE   INIT      "XXX"
LXCCODED  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXCOMPW   INIT      "XXX"
LXCOMPWD  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXDADMIT  INIT      "99:99 pm"
LXDADMIS  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXDATES   INIT      "99th XXXXXXXXX 1999"
LXDCODE   INIT      "XXX"
LXDDATE   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXDDIAG   INIT      "XXX"
LXDIAG    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXDNAME   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXDSTAT   INIT      "XXX"
LXDTIME   INIT      "99:99 pm"
LXDURWT   INIT      "XXXX"
LXEADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXEADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXEADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXEADDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXEDESC   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXEPHONE  INIT      "999999999999"
LXEPOST   INIT      "99999999"
LXEWORK   INIT      "XXXXXX"
LXFULLN   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXGIVN    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXHELTH   INIT      "XXXXXX"
LXHELTHD  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXHLTHT   INIT      "XXXXXXXX"
LXHLTHTD  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXINCTM   INIT      "99:99 pm"
LXISTAT   INIT      "XXX"
LXISTATD  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXINITC   INIT      "XXX"
LXINITCD  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXMODE    INIT      "XXX"
LXMODED   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXNATNUM  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXNOPREV  INIT      "XX"
LXPADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPCLSS   INIT      "XXX"
LXPCLSSD  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPPBUS   INIT      "999999999999"
LXPPHOME  INIT      "999999999999"
LXPPOST   INIT      "99999999"
LXPLIN    INIT      "XXX"
LXPLIND   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPRAE    INIT      "XXX"
LXPRAED   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPRID    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXRGPCOD  INIT      "XXX"
LXRGPNAM  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRGPPC   INIT      "XXXXXX"
LXRGPPD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXSEAT    INIT      "XXX"
LXSEATD   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXSIT     INIT      "XXX"
LXSITD    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXSORC    INIT      "XXX"
LXSORCD   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXSURN    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXTIMEI   INIT      "99:99 pm"
LXTIMES   INIT      "99:99 pm"
LXTODDAT  INIT      "99th XXXXXXXXX 1999"
LXURNUM   INIT      "XXXXXXXX"
LXUDEF1   INIT      "XXX"
LXUDEF1D  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXUDEF2   INIT      "XXX"
LXUDEF2D  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXUDEF3   INIT      "XXX"
LXUDEF3D  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXUDEF4   INIT      "XXX"
LXUDEF4D  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXUDEF5   INIT      "XXX"
LXUDEF5D  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXVDATE   INIT      "99th XXXXXXXXX 1999"
LXVTIME   INIT      "99th XXXXXXXXX 1999"
LXCELL    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPODDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPODDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPODDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPODDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPOOST   INIT      "XXXXXXXX"
.
REPSTR    INIT      "a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0":
                    "1020304050"
SPECCHAR  INIT      "%"
.
TEMP1     FILE      ASCII, FIXED=70
.
.========================================================================
.                        GLOBAL  VARIABLES 
.========================================================================
.  
BOTMARG   FORM      2
CMDLINE   DIM       50
COUNT     FORM      3 
DIM30     DIM       30
DIM70     DIM       70
DISPSTRN  DIM       70
ENDSTR    FORM      2
FORM3     FORM      3
FORM3A    FORM      3
FNAMER    DIM       8
FPPOS     FORM      2
LEFTMARG  FORM      2
LETDESC   DIM       20
LETTNAME  DIM       20
LINE      FORM      2
LINENO    FORM      3         * number of lines in letter after change
LLPOS     FORM      2
LSTPRINT  FORM      3
MAXLINES  FORM      3
OPTN      DIM       6
PERCPOS   FORM      2
PHYSPAGE  FORM      3
POS       FORM      2
PRTSTRNG  DIM       70
SRCHNUM   FORM      2
SRCHVAR   DIM       8
STARTSTR  FORM      2
TEMP2     FORM      2
TEMP3     FORM      2
TEMP70    DIM       70
TMPLETT   DIM       3
TMPLETNO  FORM      3
TOPMARG   FORM      2
VERTPOS   FORM      2
.
PRGID     INIT      "IBAAAE86"
PRGNAM    INIT      "Set-Up Emergency Letters"
VERSION   INIT      "V12.00.00"
+
.********************************************************************** 
.*                 ML0000                                             *
.*        Mainline Code / Controlling Logic                           *
.**********************************************************************
ML0000    CALL      INIT0000                * Initialize
.
ML1000    CALL      CLR0000                 * Clear Variables
          CALL      SCR0000                 * Call Option Screen
          BRANCH    EXIT,ML9999
          BRANCH    OPTION,ML2000,ML3000,ML4000,ML5000,ML6000,ML7000
.
.-------  add a letter ------------------------------------------------
.
ML2000    MOVE      "Add   ",OPTN
          CALL      INLT0000                * Input the Letter Number
          BRANCH    EXIT,ML1000
.
          CALL      NWCK0000                * Check if Letter is New
          BRANCH    EXIT,ML2000
.
          CALL      LDET0000                * Display Parameter Fields
          BRANCH    EXIT,ML2000
.
          CALL      INDT0000                * Input Letter Details
.
          CALL      SEL0000                 * Select Field to Update
          BRANCH    EXIT,ML2000
.
          CALL      HEAD0000                * Write the header record 
          CALL      WP0000                  * Call the word processor
          CALL      ADDL0000                * Add a Letter to the File
          GOTO      ML2000
.
.-------  view a letter  -------------------------------------------------
.
ML3000    MOVE      "View  ",OPTN
          CALL      INLT0000                * Input the Letter Number
          BRANCH    EXIT,ML1000
.
          CALL      OLCK0000                * Check if Letter Exists
          BRANCH    EXIT,ML3000
.
          CALL      PARA0000                * Display the Letter Param's.
          BRANCH    EXIT,ML3000
.
          CALL      DISP0000                * Display the Letter Text
          GOTO      ML3000
.
.-------  verify a letter  -------------------------------------------------
.
ML4000    MOVE      "Verify",OPTN
          CALL      INLT0000                * Input the Letter Number
          BRANCH    EXIT,ML1000
.
          CALL      OLCK0000                * Check if Letter Exists
          BRANCH    EXIT,ML4000
.
          CALL      VERF0000                * display the letter
          GOTO      ML4000
.
.-------  change a letter  ----------------------------------------------
.
ML5000    MOVE      "Change",OPTN
          CALL      INLT0000                * Input the Letter Number
          BRANCH    EXIT,ML1000
.
          CALL      OLCK0000                * Check if Letter Exists
          BRANCH    EXIT,ML5000
.
          CALL      DETL0000                * Display the Letters Details
.
          CALL      SEL0000                 * Select Item to Modify
          BRANCH    EXIT,ML5000
.
          CALL      UPDT0000                * Update Letter in w.p.
          GOTO      ML5000
.
.-------  delete a letter  -------------------------------------------------
.
ML6000    MOVE      "Delete",OPTN
          CALL      INLT0000                * Input the Letter to delete
          BRANCH    EXIT,ML1000
.
          CALL      OLCK0000                * Check if Record Exists
          BRANCH    EXIT,ML6000
.
          CALL      DETL0000                * Display the Letter Param's
          BRANCH    EXIT,ML6000
.
          CALL      HITENTER                * Hit Return to Continue
          CALL      DISP0000                * Display Letter 
.
          CALL      DEL0000                 * delete Record Procedure
          GOTO      ML6000
.
.-------  print a letter  ------------------------------------------------
.
ML7000    MOVE      "Print ",OPTN
          CALL      INLT0000                * Input the Letter to Print
          BRANCH    EXIT,ML1000
.
          CALL      OLCK0000                * Check if Letter Exists
          BRANCH    EXIT,ML7000
.
          CALL      PRT0000                 * Print the Extended Letter
          BRANCH    EXIT,ML7000
.
          CALL      HITENTER                * Hit Return to Continue
          GOTO      ML7000
.
ML9999    PREP      TEMP1,FNAMER
          CLOSE     TEMP1,DELETE
          CHAIN     PGM
+
.********************************************************************** 
.*                  INIT0000 - Initialization                         *
.**********************************************************************
INIT0000  CALL      DISPHEAD
          DISPLAY   *P57:24,"Opening aaeletaf"
          OPEN      AAELETA1,"aaeletaf"
          OPEN      AAELETA2,"aaeletaf"
.
          DISPLAY   *P57:24,"aaede1af"      * to sformat field lengths
          OPEN      AAEDE1A1,"aaede1af"
.
. ------- set up port dependancy for temp file -------
.
          CALL      TFILENAM
          PACK      FNAMER,TFILNAME,SP70
.
INIT9999  RETURN
+
.********************************************************************** 
.*                   CLR0000 - Clear Variables                        *
.**********************************************************************
CLR0000   HLINE     *G37,2,52,80
          DISPLAY   *P1:3,SP20              * Clear the mode display
          PACK      DIM70,SP30,SP30,SP10
          MOVE      ZERO,AELEPBOT
          MOVE      ZERO,AELEPTOP
          MOVE      ZERO,AELEPPAG
          MOVE      ZERO,AELEPTAB
          MOVE      ZERO,LINE
          MOVE      SP20,LETTNAME
          MOVE      ZERO,TOPMARG
          MOVE      ZERO,LEFTMARG
          MOVE      ZERO,FORM3
.
CLR9999   RETURN
+
.********************************************************************** 
.*                   SCR0000 - Main Option Screen                     *
.**********************************************************************
SCR0000   DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Add a Letter":
                    *P1:6,*V2LON,"2",*HOFF," = View a Letter":
                    *P1:7,*V2LON,"3",*HOFF," = Verify a Letter":
                    *P1:8,*V2LON,"4",*HOFF," = Change a Letter":
                    *P1:9,*V2LON,"5",*HOFF," = Delete a Letter":
                    *P1:10,*V2LON,"6",*HOFF," = Print a Letter":
                    *P1:12,"Select Item :";
.
SCR0500   KEYIN     *P15:12,*V2LON,*EL,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      SCR9000 IF EQUAL
.
          BRANCH    OPTION,SCR1000,SCR1000,SCR1000,SCR1000,SCR1000,SCR1000
.
          BEEP
          GOTO      SCR0500
.
SCR1000   DISPLAY   *P15:12,*V2LON,OPTION;
          MOVE      FALSE,EXIT
          GOTO      SCR9999
.
SCR9000   MOVE      TRUE,EXIT
.
SCR9999   RETURN
+
.****************************************************************************
.*                    INLT0000 - Input the Letter Number                    *
.****************************************************************************
INLT0000  MOVE      FALSE,EXIT
          STRIP     OPTN
          DISPLAY   *P52:2,*V2LON,"- ",*+,OPTN,SP1,*HOFF:
                    *P1:3,*EF:
                    *P4:4,"Letter Number       :";
.
          KEYIN     *P26:4,*DV,UNDLN3:
                    *P26:4,*V2LON,*JR,TMPLETT:
                    *P26:4,*DV,TMPLETT;
.
          PACK      TMPLETT,TMPLETT,SP3
.
INLT1000  MATCH     SP3,TMPLETT
          GOTO      INLT9000 IF EQUAL       * nothing entered
.
          MATCH     "  ?",TMPLETT
          GOTO      INLT7000 IF NOT EQUAL   * validate code
          CALL      QEST0000 
.
          MATCH     SP3,TMPLETT
          GOTO      INLT9000 IF EQUAL
.
          DISPLAY   *P1:3,*EF:                    * Redisplay Screen
                    *P4:4,"Letter Number       :":
                    *P26:4,*V2LON,TMPLETT;
          GOTO      INLT1000
.
INLT7000  TYPE      TMPLETT                       * Force a Numeric
          GOTO      INLT8000 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EL,"Invalid Letter Number - ";
          CALL      HITENTER
          GOTO      INLT0000
.
INLT8000  MOVE      TMPLETT,TMPLETNO
          COMPARE   ZERO,TMPLETNO                 * Check for Zero
          GOTO      INLT9999 IF NOT EQUAL
.
INLT9000  MOVE      TRUE,EXIT
.
INLT9999  RETURN
+
.********************************************************************** 
.*                              QEST0000                              *
.*               Display all Codes on Report File for "?"             *
.********************************************************************** 
QEST0000  DISPLAY   *P1:4,*EF,*P30:4,*V2LON,*ULON,"EXISTING LETTERS"
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
.
          MOVE      SP6,KEY6
          CALL      RSAELET2
QEST1000
          CALL      RKAELET2
          BRANCH    OVRCD,QEST2000
.
          COMPARE   ZERO,AELELINO
          GOTO      QEST5000 IF NOT EQUAL   * not a header record
.
.-------- have a header record so display -----------
.
          MOVE      AELETEXT,DIM30
          DISPLAY   *PCCOL:CVERT,*V2LON,AELELTNO,SP2,*HOFF,DIM30;
          ADD       ONE,CVERT
          COMPARE   TWENTY3,CVERT
          GOTO      QEST1000 IF LESS
.
          MOVE      FIVE,CVERT
          ADD       "40",CCOL
          COMPARE   "70",CCOL
          GOTO      QEST1000 IF LESS
.
          KEYIN     *P1:24,*EL," (",*V2LON,"C",*HOFF,")ontinue, (":
                    *V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
          REP       UPPLOW,ANS
.
          CMATCH    ANSC,ANS
          GOTO      QEST5000 IF EQUAL
.
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
          DISPLAY   *P1:5,*EF
          GOTO      QEST1000
.
QEST2000  DISPLAY   *P1:24,*B,*EF,"No Records Entered in Report File - Hit <":
                        *V2LON,"ENTER",*HOFF,"> to Continue ";
          KEYIN     ANS;
          GOTO      QEST5000
.
QEST5000  DISPLAY   *P1:24,*EL,"Letter Number : ";
          KEYIN     *P17:24,*DV,UNDLN3:
                    *P17:24,*V2LON,*JR,TMPLETT:
                    *P26:24,*DV,TMPLETT;
          PACK      TMPLETT,TMPLETT,SP3
          MOVE      ZERO,OVRCD
.
QEST9999  RETURN
+
.****************************************************************************
.*                  NWCK0000                     Called by : ML2000         *
.*        Make sure letter is not on File (New for Add)                     *
.****************************************************************************
NWCK0000  MOVE      FALSE,EXIT
          MOVE      ZERO,FORM3              * set for header record
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDAELET1
          BRANCH    OVRCD,NWCK9999          * not on file so OK
.
          DISPLAY   *P1:24,*B,"Letter Already Exists on File - ",*EL;
          CALL      HITENTER 
          MOVE      TRUE,EXIT
.
NWCK9999  RETURN
+
.****************************************************************************
.*                  OLCK0000                     Called by : ML3000 ML4000  *
.*        Check that letter exists on file                   ML5000 ML6000  *
.*        For : view , verify , change , delete , print      ML7000         *
.****************************************************************************
OLCK0000  MOVE      ZERO,FORM3              * set for header record
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDAELET1
          BRANCH    OVRCD,OLCK9000          * letter doesnt exist
.
          MOVE      AELETEXT,LETTNAME
          MOVE      AELEPTOP,TOPMARG
          MOVE      AELEPTAB,LEFTMARG
          MOVE      AELEPPAG,PHYSPAGE
.
          MOVE      FALSE,EXIT
          GOTO      OLCK9999
.
OLCK9000  DISPLAY   *P1:24,*B,"Letter Not Found On File - ",*EL;
          CALL      HITENTER 
          MOVE      TRUE,EXIT
.
OLCK9999  RETURN
+
.****************************************************************************
.*                  LDET0000                     Called by : ML2000         *
.*        Display the Details of the new Letter                             *
.****************************************************************************
LDET0000  DISPLAY   *P1:5,*EF:
                    *P1:5,"   Name                :":
                    *P1:7,*V2LON,"1",*HOFF,". Paper Page Length   :":
                    *P1:8,*V2LON,"2",*HOFF,". Top Margin Size     :":
                    *P1:9,*V2LON,"3",*HOFF,". Bottom Margin Size  :":
                    *P1:10,*V2LON,"4",*HOFF,". Left Margin Size    :";
.
LDET9999  RETURN
+
.****************************************************************************
.*                  INDT0000                          Called by : ML2000    *
.*        Input the letter details                                          *
.****************************************************************************
INDT0000  CALL      NAME0000            * Input the Letter Name
          CALL      PAPL0000            * Input the Paper Page Length
          CALL      TMAR0000            * Input the Top Margin Size
          CALL      BMAR0000            * Input the Bottom Margin Size
          CALL      LMAR0000            * Input the Left Margin Size
.
INDT9999  RETURN
+
.****************************************************************************
.*                 SEL0000                       Called by : ML2000 ML5000  *
.*       Select Field to Update on the Input Letter Detail Screen           *
.****************************************************************************
SEL0000  MOVE      FALSE,EXIT
         CALL      MAINQST
         COMPARE   ZERO,CCITEM
         GOTO      SEL0999 IF EQUAL         * post
         GOTO      SEL0900 IF LESS          * cancel
.
         COMPARE   EIGHT,CCITEM
         GOTO      SEL0000 IF NOT LESS
.
SEL0100  BRANCH    CCITEM,SEL0200,SEL0300,SEL0400,SEL0500
.
         BEEP
         GOTO      SEL0000
.
SEL0200  CALL      PAPL0000                 * Input the Paper Page Length
         GOTO      SEL0000
.
SEL0300  CALL      TMAR0000            * Input the Top Magin Size
         GOTO      SEL0000
.
SEL0400  CALL      BMAR0000            * Input the Bottom Margin Size
         GOTO      SEL0000
.
SEL0500  CALL      LMAR0000            * Input the Left Margin Size
         GOTO      SEL0000
.
SEL0900  MOVE      TRUE,EXIT
.
SEL0999  RETURN
+
.****************************************************************************
.*              NAME0000                         Called by : INDT0000       *
.*        Input the Letter Name                                             *
.****************************************************************************
NAME0000  DISPLAY   *P26:5,UNDLN20;
          KEYIN     *P26:5,*V2LON,LETTNAME;
.
          ENDSET    LETTNAME
          APPEND    SP20,LETTNAME
          RESET     LETTNAME
.
          DISPLAY   *P26:5,*V2LON,LETTNAME;
.
NAME9999  RETURN
+
.****************************************************************************
.*                  PAPL0000                     Called by : INDT0000       *
.*        Input the Physical Paper Length                    SEL0200        *
.****************************************************************************
PAPL0000  KEYIN     *P26:7,*DV,UNDLN2:
                    *P26:7,*V2LON,AELEPPAG:
                    *P26:7,*DV,AELEPPAG;
.
          COMPARE   ZERO,AELEPPAG
          GOTO      PAPL0000 IF EQUAL       * cant be zero
.
          COMPARE   AELEPPAG,AELEPBOT
          GOTO      PAPL9000 IF LESS        * bottom margin is less
.
          DISPLAY   *P1:24,*B,"Page Length Must Be Greater than the ":
                    "Bottom Margin - ",*EL;
          CALL      HITENTER 
          GOTO      PAPL0000
.
PAPL9000  CALL      MARG0000                * check top + bottom margins
          BRANCH    OVRCD,PAPL0000
.
PAPL9999  RETURN
+
.****************************************************************************
.*                  TMAR0000                     Called by : INDT0000       *
.*        Input the top Margin Size                          SEL0300        *
.****************************************************************************
TMAR0000  KEYIN     *P27:8,*DV,UNDLN2:
                    *P27:8,*V2LON,AELEPTOP:
                    *P27:8,*DV,AELEPTOP;
.
          COMPARE   ZERO,AELEPTOP
          GOTO      TMAR0000 IF EQUAL       * zero not allowed
.
          COMPARE   AELEPPAG,AELEPTOP
          GOTO      TMAR9000 IF LESS        * margin is less than page length
.
          DISPLAY   *P1:24,*B,"Top Margin Must Be Less than Page length - ",*EL;
          CALL      HITENTER 
          GOTO      TMAR0000
.
.-------- top margin must be less than (page length - 2) -------
.
TMAR9000  MOVE      AELEPPAG,FORM3          * get page length
          SUB       TWO,FORM3               * take two off
.
          COMPARE   FORM3,AELEPTOP
          GOTO      TMAR9900 IF LESS        * top margin < (page length - 2)
.
          DISPLAY   *P1:24,*B,"Top Margin Too Big - ",*EL;
          CALL      HITENTER 
          GOTO      TMAR0000
.
TMAR9900  CALL      MARG0000                * check top + bottom margins
          BRANCH    OVRCD,TMAR0000
.
TMAR9999  RETURN
+
.****************************************************************************
.*                  BMAR0000                     Called by : INDT0000       *
.*        Input the Bottom Margin                            SEL0400        *
.****************************************************************************
BMAR0000  KEYIN     *P27:9,*DV,UNDLN2:
                    *P27:9,*V2LON,AELEPBOT:
                    *P27:9,*DV,AELEPBOT;
.
          COMPARE   ZERO,AELEPBOT
          GOTO      BMAR0000 IF EQUAL       * zero not allowed
.
          COMPARE   AELEPPAG,AELEPBOT
          GOTO      BMAR9000 IF LESS        * botom margin < page length
.
          DISPLAY   *P1:24,*B,"Bottom Margin Must Be Less than Page length - ":
                    *EL;
          CALL      HITENTER 
          GOTO      BMAR0000
.
.-------- bottom margin must be less than (page length - 2) ----------
.
BMAR9000  MOVE      AELEPPAG,FORM3          * page length
          SUB       TWO,FORM3
.
          COMPARE   FORM3,AELEPBOT
          GOTO      BMAR9900 IF LESS        * bottom margin < (page length - 2)
.
          DISPLAY   *P1:24,*B,"Bottom Margin Too Big - ",*EL;
          CALL      HITENTER 
          GOTO      BMAR0000
.
BMAR9900  CALL      MARG0000                * check top + bottom margins
          BRANCH    OVRCD,BMAR0000
.
BMAR9999  RETURN
+
.****************************************************************************
.*                  LMAR0000                     Called by : INDT0000       *
.*        Input the Left Margin                              SEL0500        *
.****************************************************************************
LMAR0000  KEYIN     *P27:10,*DV,UNDLN2:
                    *P27:10,*V2LON,AELEPTAB:
                    *P27:10,*DV,AELEPTAB;
.
          COMPARE   ZERO,AELEPTAB
          GOTO      LMAR0000 IF EQUAL       * zero not allowed
.
          COMPARE   TWENTY1,AELEPTAB
          GOTO      LMAR9999 IF LESS        * must be <= 20
.
          DISPLAY   *P1:24,*B,"Left Margin May Not Exceed 20 - ",*EL;
          CALL      HITENTER 
          GOTO      LMAR0000
.
LMAR9999  RETURN
+
.****************************************************************************
.*                 MARG0000                      Called by : PAPL TMAR BMAR *
.*        Verify if Top + Bottom Margin < Page Length             LMAR      *
.*        Returns : OVRCD = 1     invalid margins                           *
.****************************************************************************
MARG0000  MOVE      ZERO,OVRCD
          MOVE      AELEPTOP,FORM3          * letter top margin
          ADD       AELEPBOT,FORM3          * add bottom margin
.
          COMPARE   AELEPPAG,FORM3
          GOTO      MARG9999 IF LESS        * top + bottom marg < paper length
.
          MOVE      ONE,OVRCD
          DISPLAY   *P1:24,*B,"Invalid Top & Bottom Margin Combination - ",*EL;
          CALL      HITENTER 
.
MARG9999  RETURN
+
.****************************************************************************
.*                  HEAD0000                     Called by : ML2000         *
.*        Write the Header Record to the Letter File                        *
.****************************************************************************
HEAD0000  MOVE      ZERO,FORM3              * set for header record
          MOVE      LETTNAME,AELETEXT       * letter name
          PACK      KEY6,TMPLETNO,FORM3     * set the key
          MOVE      TMPLETNO,AELELTNO       * letter number
          MOVE      FORM3,AELELINO          * line number
.
.-------  note that the PBOT, PTOP, PPAG, PTAB variables are already set up --
.
          CALL      RAAELET1
          BRANCH    OVRCD,HEAD1000          * doesnt exist so write
.
          CALL      UPAELET1                * update
          GOTO      HEAD9999
.
HEAD1000  CALL      WRAELET1                * write
.
HEAD9999  RETURN
+
.****************************************************************************
.*                  WP0000                       Called by : ML2000         *
.*        Set up the temp file and call the word processor  ADD MODE        *
.****************************************************************************
WP0000    DISPLAY   *P1:3,*EF:
                    *P1:4,"Letter Number : ",*V2LON,TMPLETNO,*HOFF:
                    *P1:5,"Letter Name   : ",*V2LON,LETTNAME
          PREP      TEMP1,FNAMER
          CLOSE     TEMP1
          MOVE      EIGHT,FORM1
          WORD      FNAMER,99,5,7,76,22,FORM1
.
WP9999    RETURN
+
.*************************************************************************** 
.*                  ADDL0000                     Called by : ML2000        *
.*        Add a Letter to the Letter File                                  *
.*************************************************************************** 
ADDL0000  DISPLAY   *P1:24,*EL,"O.K to Post Letter Changes (",*V2LON,"Y",*HOFF:
                           "/",*V2LON,"N",*HOFF,") ";
          KEYIN     *V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     "N",ANS
          GOTO      ADDL9999 IF EQUAL
.
          MATCH     "Y",ANS
          GOTO      ADDL0500 IF EQUAL
.
          BEEP
          GOTO      ADDL0000
.
ADDL0500  DISPLAY   *P1:24,*EL,"Posting Changes to the Letter",*BLINKON,*V2LON:
                           " - Please Wait";
.
ADDL1000  CLOSE     TEMP1                         * Reset the File to Top for
          OPEN      TEMP1,FNAMER                  * Reading
          MOVE      ZERO,COUNT
.
ADDL2000  MOVE      ZERO,AELELVAR           * Reset the "%" Sign Marker
          PACK      DIM70,SP30,SP30,SP10    * clear i/o variable
          PACK      AELETEXT,SP30,SP30,SP10 * clear file variable
.
          READ      TEMP1,SEQ;DIM70         * Read next line in temp file
          GOTO      ADDL9999 IF OVER        * end of temp file
.
          ADD       ONE,COUNT
          MOVE      DIM70,AELETEXT          * set up line of text
.
          SCAN      SPECCHAR,AELETEXT       * search for % sign
          GOTO      ADDL2100 IF NOT EQUAL   * % no present so no special var
.
          MOVE      ONE,AELELVAR            * contains a "%"
.
ADDL2100  PACK      KEY6,TMPLETNO,COUNT     * Set up the key with Letter & line
          MOVE      TMPLETNO,AELELTNO       * letter number
          MOVE      COUNT,AELELINO          * line number
.
          CALL      WRAELET1                * write record
          GOTO      ADDL2000
.
ADDL9999  RETURN
+
.********************************************************************** 
.*                  PARA0000                     Called by : ML3000   *
.*        Display the Letter Parameters          (View letter)        *
.**********************************************************************
PARA0000  CALL      DETL0000           * display parameters
.
PARA1000  DISPLAY   *P1:24,*EL,"(",*V2LON,"N",*HOFF,")ext Page,":
                           " (",*V2LON,"E",*HOFF,")xit : ";
          KEYIN     *V2LON,ANS;
          REP       UPPLOW,ANS
          DISPLAY   *P23:24,*V2LON,ANS;
.
          MATCH     "N",ANS
          GOTO      PARA2000 IF EQUAL
.
          MATCH     "E",ANS
          GOTO      PARA2000 IF EQUAL
.
          BEEP
          GOTO      PARA1000
.
PARA2000  REPLACE   "N0E1",ANS
          MOVE      FALSE,EXIT
          MATCH     "0",ANS
          GOTO      PARA9999 IF EQUAL
.
          MOVE      TRUE,EXIT
.
PARA9999  RETURN
+
.********************************************************************** 
.*                  DISP0000                     Called by : ML3000   *
.*        Display the Letter Text                            ML6000   *
.**********************************************************************
DISP0000  MOVE      FALSE,EXIT
.
          MOVE      ONE,FORM3               * first line of letter
          PACK      KEY6,TMPLETNO,FORM3     * get first line
          CALL      RDAELET1
          BRANCH    OVRCD,DISP9000          * no data for the letter
.
          MOVE      SEVEN,LINE              * first display line
          DISPLAY   *P1:6,*EF:
                    *P2:6,"----------------------------------------":
                          "------------------------------";
.
          ADD       ONE,LEFTMARG
          ADD       LINE,TOPMARG
.
.-------  print | | for lines up to top margin ---------
.
DISP0500  DISPLAY   *P1:LINE,"|",*P72:LINE,"|";
          ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS    * new page
          BRANCH    EXIT,DISP9500
.
          COMPARE   LINE,TOPMARG
          GOTO      DISP0500 IF NOT EQUAL   * not up to top margin
.
.-------- display the letter ------------
.
DISP1000  DISPLAY   *P1:LINE,"|",*PLEFTMARG:LINE,AELETEXT,*P72:LINE,"|";
          CALL      RKAELET1
          BRANCH    OVRCD,DISP8000          * end of letter
.
          COMPARE   AELELTNO,TMPLETNO
          GOTO      DISP8000 IF NOT EQUAL   * end of letter
.
          ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS    * new page
          BRANCH    EXIT,DISP9500
          GOTO      DISP1000
.
.-------- end of letter so finish off display --------
.
DISP8000  ADD       ONE,LINE
          DISPLAY   *P2:LINE,"----------------------------------------":
                             "------------------------------";
          MOVE      FALSE,EXIT
          GOTO      DISP9500
.
DISP9000  DISPLAY   *P1:24,*EL,*B,"No Text Entered for This Letter - ",*EL;
          CALL      HITENTER 
          MOVE      TRUE,EXIT
          GOTO      DISP9999
.
DISP9500  DISPLAY   *P1:24;
          CALL      HITENTER
.
DISP9999  RETURN
+
.********************************************************************** 
.*                  VERF0000                     Called by : ML4000   *
.*        Display the Full Coded Text                                 *
.**********************************************************************
VERF0000  DISPLAY   *P4:5,"Letter Name         : ",*V2LON,LETTNAME;
.
          MOVE      ONE,FORM3               * set for first letter
          PACK      KEY6,TMPLETNO,FORM3     * key for first letter
          CALL      RDAELET1
          BRANCH    OVRCD,VERF9000          * no data for letter
.
          MOVE      SEVEN,LINE
          DISPLAY   *P1:6,*EF:
                    *P2:6,"----------------------------------------":
                          "------------------------------";
.
          ADD       ONE,LEFTMARG
          ADD       LINE,TOPMARG
.
.-------- display top margin --------
.
VERF0500  DISPLAY   *P1:LINE,"|",*P72:LINE,"|";
          ADD       ONE,LINE
.
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS    * new page
          BRANCH    EXIT,VERF9500
.
          COMPARE   LINE,TOPMARG
          GOTO      VERF0500 IF NOT EQUAL   * havent finished top margin
.
.-------- print lines of text -------
.
VERF1000  MOVE      AELETEXT,DIM70
          CALL      MOD0000                 * get line to print
          DISPLAY   *P1:LINE,"|",*PLEFTMARG:LINE,PRTSTRNG,*P72:LINE,"|";
.
          CALL      RKAELET1
          BRANCH    OVRCD,VERF8000          * end of letter
.
          COMPARE   AELELTNO,TMPLETNO
          GOTO      VERF8000 IF NOT EQUAL   * end of letter
.
          ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS
          BRANCH    EXIT,VERF9500
.
          GOTO      VERF1000                * get next line of text
.
VERF8000  ADD       ONE,LINE                * end of letter
          DISPLAY   *P2:LINE,"----------------------------------------":
                             "------------------------------";
          MOVE     FALSE,EXIT
          GOTO     VERF9500
.
VERF9000  DISPLAY   *P1:24,*B,"No Text Entered for This Letter - ",*EL;
          CALL      HITENTER 
          MOVE      TRUE,EXIT
          GOTO      VERF9999
.
VERF9500  DISPLAY   *P1:24,*EL;
          CALL      HITENTER
.
VERF9999  RETURN
+
.********************************************************************** 
.*                  PAGE0000                Called by : VERF DISP     *
.*        message at the end of a page of text                        *
.**********************************************************************
PAGE0000  MOVE      FALSE,EXIT
          DISPLAY   *P2:LINE,"----------------------------------------":
                             "------------------------------";
          DISPLAY   *P1:24,*EL,"(",*V2LON,"N",*HOFF,")ext Page,":
                           " (",*V2LON,"E",*HOFF,")xit : ";
          KEYIN     *V2LON,ANS;
          REP       UPPLOW,ANS
          DISPLAY   *P23:24,*V2LON,ANS;
.
          MATCH     "N",ANS
          GOTO      PAGE2000 IF EQUAL
          MATCH     "E",ANS
          GOTO      PAGE2000 IF EQUAL
          GOTO      PAGE0000
.
PAGE2000  REPLACE   "N0E1",ANS                    * Only allow N or E
          MATCH     "0",ANS
          GOTO      PAGE9999 IF EQUAL
          MOVE      TRUE,EXIT
.
PAGE9999  DISPLAY   *P1:7,*EF;
          SUB       LINE,TOPMARG                  * Reduce top margin by the no.
.                                                 * of lines printed
          MOVE      SEVEN,LINE                    * Reset line to top of print
.
          RETURN
+
.********************************************************************** 
.*                  MOD0000                      Called by : VERF1000 *
.*        Modify a line to show maximum variable length      PRT2000  *
.**********************************************************************
MOD0000   PACK      PRTSTRNG,SP30,SP30,SP10       * Initialize the PRTSTRNG
          RESET     PRTSTRNG,0                    * and pointer positions
          MOVE      ONE,STARTSTR
          MOVE      ONE,ENDSTR
.
MOD2000   SCAN      SPECCHAR,DIM70          * Scan the Input Line for % sign
          GOTO      MOD8000 IF NOT EQUAL    * no % sign in string
.
.-------- there is a % sign in the string so obtain the variable ------
.
MOD3000   MOVEFPTR  DIM70,PERCPOS           * where % sign is in string
          BUMP      DIM70,-1                * Go to the character before % sign
          GOTO      MOD3100 IF NOT EOS      * sign isn't first character
.
          RESET     DIM70,0                 * first character on the line is %
.
MOD3100   MOVEFPTR  DIM70,ENDSTR            * Store endstr at position -
.                                           * 1 char before the "%" sign
          COMPARE   STARTSTR,ENDSTR         * Ensure that end and start
          GOTO      MOD3200 IF NOT LESS     * positions don't overlap
.
          RESET     DIM70,STARTSTR          * Set pointer to start i.e
          GOTO      MOD9000 IF EOS          * to "%" if end < start
          GOTO      MOD3300
.
MOD3200   RESET     DIM70,STARTSTR          * Reset the pointers to extract
          SETLPTR   DIM70,ENDSTR            * text preceeding the % sign
          APPEND    DIM70,PRTSTRNG          * Append preceeding text to
.                                           * the print string
MOD3300   SETLPTR   DIM70,70                * Set the pointers to start at
          RESET     DIM70,PERCPOS           * "%" and go to position 70
.
.         SRF 642798
.
          MOVE      DIM70,TEMP70            * delete preceeding text
          PACK      DIM70,TEMP70,SP30,SP30,SP30     * from the dim70 string
.
MOD4000   CALL      GETV0000                * Call the extraction routine
.                                           * to get the % variable
          MOVEFPTR  DIM70,STARTSTR          * Store finish pos of var.
          BRANCH    EXIT,MOD5000
          RESET     SRCHVAR
          SEARCH    SRCHVAR,LCPAGE,EIGHTY8,SRCHNUM
.                   search string,starting point,how many items,posn located
.
          COMPARE   ZERO,SRCHNUM             * Exit if not a % variable
          GOTO      MOD5000 IF EQUAL
.
          COMPARE   SIX,OPTION
          GOTO      MOD4100 IF NOT EQUAL     * not print option, skip next test
.
          COMPARE   SRCHNUM,ONE
          GOTO      MOD7000 IF EQUAL         * check for page break variable
.
.  -----  Load the maximum length of the variable into the print string -----
.
MOD4100   LOAD      DISPSTRN,SRCHNUM,LXPAGE,LXAAENUM,LXADHOS,LXCCODE,LXCCODED:
                                     LXCOMPW,LXCOMPWD,LXDADMIT,LXDADMIS,LXDATES:
                                     LXDCODE,LXDDATE,LXDDIAG,LXDIAG:
                                     LXDNAME,LXDSTAT,LXDTIME,LXDURWT,LXEADDA:
                                     LXEADDB,LXEADDC,LXEADDD,LXEDESC,LXEPHONE:
                                     LXEPOST,LXEWORK,LXFULLN,LXGIVN,LXHELTH:
                                     LXHELTHD,LXHLTHT,LXHLTHTD,LXINCTM,LXISTAT:
                                     LXISTATD,LXINITC,LXINITCD,LXMODE,LXMODED:
                                     LXNATNUM,LXNOPREV,LXPADDA,LXPADDB,LXPADDC:
                                     LXPADDD,LXPCLSS,LXPCLSSD,LXPPBUS,LXPPHOME:
                                     LXPPOST,LXPLIN,LXPLIND,LXPRAE,LXPRAED:
                                     LXPRID,LXRGPCOD,LXRGPNAM,LXRGPPC,LXRGPPD:
                                     LXSEAT,LXSEATD,LXSIT,LXSITD,LXSORC:
                                     LXSORCD,LXSURN,LXTIMEI,LXTIMES,LXTODDAT:
                                     LXURNUM,LXUDEF1,LXUDEF1D,LXUDEF2,LXUDEF2D:
                                     LXUDEF3,LXUDEF3D,LXUDEF4,LXUDEF4D,LXUDEF5:
                                     LXUDEF5D,LXVDATE,LXVTIME,LXCELL,LXPODDA:
                                     LXPODDB,LXPODDC,LXPODDD,LXPOOST
.
          APPEND    DISPSTRN,PRTSTRNG             * Add the full description 
          GOTO      MOD8000 IF EOS                * to the print string 
          GOTO      MOD2000       
.
MOD5000   RESET     SRCHVAR                       * Add the string starting with
          APPEND    SRCHVAR,PRTSTRNG              * a % if not found in the 
          GOTO      MOD2000                       * variable list
.
.-------- page break variables ---------
.
MOD7000   PRINT     *N;
          COMPARE   COUNT,PHYSPAGE
          GOTO      MOD7100 IF EQUAL
          ADD       ONE,COUNT
          GOTO      MOD7000
.
MOD7100   MOVE      ZERO,COUNT
.
MOD7400   ADD       ONE,COUNT
          COMPARE   COUNT,TOPMARG
          GOTO      MOD7500 IF EQUAL
          GOTO      MOD7500 IF LESS
          PRINT     *N;
          GOTO      MOD7400
.
MOD7500   GOTO      MOD9999
.
.-------- no % sign found so just add line to print -------
.
MOD8000   APPEND    DIM70,PRTSTRNG 
.
MOD9000   MOVE      FALSE,EXIT
.
MOD9999   RETURN
+
.********************************************************************** 
.*    GETV0000 - GETS A LETTER VARIABLE FROM TEXT AFTER THE SCAN      *
.**********************************************************************
GETV0000 MOVE      FALSE,EXIT
         PACK      SRCHVAR,SP30,SP30,SP10
         RESET     SRCHVAR,0
         MOVE      DIM70,ANS
         APPEND    ANS,SRCHVAR
         RESET     SRCHVAR,0
         BUMP      DIM70
         MOVE      DIM70,ANS
         REPLACE   REPSTR,ANS
         MATCH     "0",ANS
         GOTO      GETV9000 IF NOT EQUAL
         BUMP      DIM70,-1
         PACK      SRCHVAR,SP30,SP30,SP10
         RESET     SRCHVAR,0
.
GETV1000 MOVE      DIM70,ANS
         APPEND    ANS,SRCHVAR
         BUMP      DIM70
         GOTO      GETV9999 IF EOS
         MOVE      DIM70,ANS
         REPLACE   REPSTR,ANS
         MATCH     "0",ANS
         GOTO      GETV9999 IF NOT EQUAL
         GOTO      GETV1000
.
GETV9000 MOVE      TRUE,EXIT
.
GETV9999 RETURN
+
.****************************************************************************
.*                  DETL0000                     Called by : ML5000 ML6000  *
.*        display the parameters of the letter                              *
.****************************************************************************
DETL0000  CALL      LDET0000
.
          DISPLAY   *P26:5,*V2LON:
                    *P26:5,LETTNAME:
                    *P26:7,AELEPPAG:
                    *P27:8,AELEPTOP:
                    *P27:9,AELEPBOT:
                    *P27:10,AELEPTAB;
.
DETL9999  RETURN
+
.****************************************************************************
.*                  UPDT0000                     Called by : ML5000         *
.*       set up the temp file and call the word processor                   *
.****************************************************************************
.
UPDT0000  MOVE      TMPLETNO,AELELTNO
          MOVE      ZERO,AELELINO
          MOVE      LETTNAME,AELETEXT
.
          CALL      UPAELET1
.
. ------  Set up the Header for the Word Processor -----
.
          PREP      TEMP1,FNAMER
          DISPLAY   *P1:3,*EF:
                    *P1:4,"Letter Number : ",*V2LON,TMPLETNO,*HOFF:
                    *P1:5,"Letter Name   : ",*V2LON,LETTNAME
.
. ------- read in the old letter details from PATDTLFD to temp file  -------
.
UPDT1000  MOVE      ONE,LINENO              * get first line of letter
          MOVE      ZERO,MAXLINES           * number of lines
          PACK      KEY6,TMPLETNO,LINENO    * key for first line
          CALL      RDAELET1                * read letter file
          BRANCH    OVRCD,UPDT2999          * no data for letter
.
UPDT2000  WRITE     TEMP1,SEQ;AELETEXT      * write text to temp file
          ADD       ONE,MAXLINES            * number of lines written
          PACK      AELETEXT,SP30,SP30,SP10 
.
          CALL      RKAELET1                 
          BRANCH    OVRCD,UPDT2999          * end of existing comments
.
          COMPARE   TMPLETNO,AELELTNO
          GOTO      UPDT2000 IF EQUAL       * same letter
.
.-------- word processor -------
.
UPDT2999  PREP      TEMP1,FNAMER
          CLOSE     TEMP1,DELETE
          MOVE      EIGHT,FORM1
          WORD      FNAMER,99,5,7,76,22,FORM1
.
.-------- have finished with word processor -------
.
UPDT3000  DISPLAY   *P1:24,*EL,"O.K to Post Letter Changes (",*V2LON,"Y",*HOFF:
                          "/",*V2LON,"N",*HOFF,") ";
          KEYIN     *V2LON,ANS;
          REP       UPPLOW,ANS
.
          RESET     ANS
          GOTO      UPDT30000 IF EOS
.
          MATCH     SP1,ANS
          GOTO      UPDT3000 IF EQUAL
.
          MATCH     "N",ANS
          GOTO      UPDT3999 IF EQUAL
.
          MATCH     "Y",ANS
          GOTO      UPDT3050 IF EQUAL
.
          BEEP
          GOTO      UPDT3000
.
.-------- post the new letter details ---------
.
UPDT3050  DISPLAY   *P1:24,*EL,"Posting Changes to the Letter",*BLINKON,*V2LON:
                          " - Please Wait";
.
          CLOSE     TEMP1                   * Reads the new call details out
          OPEN      TEMP1,FNAMER            * of the temp file and puts them
          MOVE      ZERO,LINENO             * back into the PATDLT file.
          MOVE      TMPLETNO,AELELTNO       * Records are updated if the key
                                            * exists or are written if the 
UPDT3100  PACK      DIM70,SP30,SP30,SP10    * key dosen't exist.
          PACK      AELETEXT,SP30,SP30,SP10
          MOVE      ZERO,AELELVAR
.
          READ      TEMP1,SEQ;DIM70          
          GOTO      UPDT3700 IF OVER        * end of temp file
.
          ADD       ONE,LINENO              * number of lines entered in wp
          SCAN      SPECCHAR,DIM70
          GOTO      UPDT3150 IF NOT EQUAL   * no % sign found
.
          MOVE      ONE,AELELVAR            * indicate has % sign
.
UPDT3150  SETLPTR   DIM70,70                * set LL
          RESET     DIM70                   * set FP
          MOVE      LINENO,AELELINO         * line number
          PACK      KEY6,AELELTNO,AELELINO    
.
          CALL      RDAELET1              
          COMPARE   ZERO,OVRCD
          GOTO      UPDT3200 IF EQUAL
.
          MOVE      DIM70,AELETEXT
          CALL      WRAELET1
          GOTO      UPDT3100
.
UPDT3200  MOVE      DIM70,AELETEXT
          CALL      UPAELET1
          GOTO      UPDT3100
.
.-------- delete any extra lines from letter file ----------
.
UPDT3700  COMPARE   MAXLINES,LINENO
          GOTO      UPDT3999 IF NOT LESS    * have deleted extra lines 
.
          PACK      KEY6,TMPLETNO,MAXLINES  * set key for last record of orig
          CALL      DEAELET1                * delete last record
          SUB       ONE,MAXLINES            * get new last record
          GOTO      UPDT3700                * see if deleted all records 
.
UPDT3999  RETURN
+
.**********************************************************************
.*                  DEL0000                                           *
.*        Delete a Letter from the Letter File                        *
.**********************************************************************
DEL0000   MOVE      FALSE,EXIT
          DISPLAY   *P1:24,*EL,"(",*V2LON,"D",*HOFF,")elete  ":
                               "(",*V2LON,"E",*HOFF,")xit : ";
          KEYIN     *V2LON,ANS;
          DISPLAY   *P20:24,*V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     "D",ANS
          GOTO      DEL1000 IF EQUAL
.
          MATCH     "E",ANS
          GOTO      DEL9000 IF EQUAL
.
          BEEP
          GOTO      DEL0000
.
DEL1000   MOVE      ZERO,FORM3
          PACK      KEY6,TMPLETNO,FORM3
          CALL      DEAELET1
.
DEL2000  ADD       ONE,FORM3
          PACK      KEY6,TMPLETNO,FORM3
          CALL      RDAELET1
          BRANCH    OVRCD,DEL9999
          CALL      DEAELET1
          GOTO      DEL2000
.
DEL9000   MOVE      TRUE,EXIT
.
DEL9999   RETURN
+
.**********************************************************************
.*          PRT0000 - Print the Verified Version of the Letter        *
.**********************************************************************
PRT0000   DISPLAY   *P1:24,*EL,"Printing Letter : ",*V2LON,LETTNAME,*HOFF:
                          SP1,*V2LON,*BLINKON,"- Please Wait";
.
          MOVE      FALSE,EXIT
          MOVE      ZERO,FORM3
          MOVE      ZERO,COUNT
          PACK      KEY6,TMPLETNO,FORM3     * get header record
          CALL      RDAELET1
          MOVE      AELEPPAG,PHYSPAGE
          MOVE      AELEPBOT,BOTMARG
          MOVE      AELEPTOP,TOPMARG
          SUB       AELEPBOT,AELEPPAG
          MOVE      AELEPPAG,LSTPRINT
.
PRT0050   ADD       ONE,COUNT
          COMPARE   COUNT,TOPMARG
          GOTO      PRT1000 IF LESS
          PRINT     *N;
          GOTO      PRT0050
.
PRT1000   CALL      RKAELET1
          BRANCH    OVRCD,PRT9000
          COMPARE   AELELTNO,TMPLETNO
          GOTO      PRT9000 IF NOT EQUAL
.
          MOVE      AELETEXT,DIM70
          CALL      MOD0000
          PRINT     *N,*LEFTMARG,PRTSTRNG;
.
.
PRT3000   ADD       ONE,COUNT
          COMPARE   COUNT,LSTPRINT
          CALL      PGE0000 IF LESS
          GOTO      PRT1000
.
PRT9000   PRINT     *N;
          COMPARE   PHYSPAGE,COUNT
          GOTO      PRT9999 IF EQUAL
          GOTO      PRT9999 IF NOT LESS
          ADD       ONE,COUNT
          GOTO      PRT9000
.
PRT9999   DISPLAY   *P1:24,*EL;
          RETURN
+
.**********************************************************************
.*                  PGE0000                                           *
.*        Routine to paginate if a new page is required               *
.**********************************************************************
PGE0000   MOVE      AELELTNO,FORM3
          MOVE      AELELINO,FORM3A
          CALL      RKAELET1
          BRANCH    OVRCD,PGE8000
          COMPARE   TMPLETNO,AELELTNO
          GOTO      PGE8000 IF NOT EQUAL
          MOVE      TOPMARG,TEMP2
          ADD       BOTMARG,TOPMARG
          MOVE      ONE,COUNT
.
PGE1000   PRINT     *N;
          COMPARE   COUNT,TOPMARG
          GOTO      PGE9000 IF EQUAL
          ADD       ONE,COUNT
          GOTO      PGE1000
.
PGE8000   PACK      KEY6,FORM3,FORM3A 
          CALL      RDAELET1
          GOTO      PGE9999
.
PGE9000   MOVE      TEMP2,COUNT
          ADD       ONE,COUNT
          MOVE      TEMP2,TOPMARG
          PACK      KEY6,FORM3,FORM3A
          CALL      RDAELET1
.
PGE9999   RETURN
.
.
.         I/O includes needed
.
          INC       STD001IO
          INC       AAEDE1IO/INC
          INC       AAELETIO/INC
.
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
