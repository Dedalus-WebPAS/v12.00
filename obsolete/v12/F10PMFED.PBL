.*****************************************************************************
.*    Program      : F10PMFED                                                *
.*    Description  : Conversion pmsfedaf to new File layout                  *
.*                                                                           *
.*    Author       : Ebon Clements                                           *
.*    Date         : 30/06/2008                                              *
.*    Modifications: V9.10.00  Ebon Clements  CAR 160213                     *
.*                 :           Created program                               *
.*****************************************************************************
.
.  Global change F10PMFED  eg F57PTDOC
.  Global change PMSFEDFD  eg PATDOCFD (new layout)
.  Global change pmsfedaf  eg patdoctf
.  Global change PMSFEDA1  eg PATDOCT1
.  Global change KEY12     eg KEY8
.  Global change WRPMFED1  eg WRDOCT1
.  Global change sptfedaf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.   
.Data File Definition
.--------------------
OLDFILE    IFILE    SQL, FIXED=475, KEY="U1-12"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.PMFDQUOT  DIM       12     12       1     Quote Number
.PMFDURNO  DIM       8      8        13    UR Number
.PMFDNONS  FORM      5      4        21    No.of Days Stay 1
.PMFDADAT  DIM       8      8        25    Admission Date
.PMFDHFUN  DIM       6      6        33    Health Fund
.PMFDHFTB  DIM       8      8        39    Health Fund Table
.PMFDCMCD  DIM       9      9        47    Casemix Code
.PMFDCLTY  DIM       3      3        56    Claim Type
.PMFDBDTY  DIM       3      3        59    Bed Type 1
.PMFDATYP  DIM       3      3        62    Admission Type
.PMFDAGST  FORM      1      2        65    Accomodation GST 0=No 1=Yes
.PMFDBDT2  DIM       3      3        67    Bed Type 2
.PMFDBDT3  DIM       3      3        70    Bed Type 3
.PMFDBDT4  DIM       3      3        73    Bed Type 4
.PMFDBDT5  DIM       3      3        76    Bed Type 5
.PMFDNDS2  FORM      5      4        79    No.of Days Stay 2
.PMFDNDS3  FORM      5      4        83    No.of Days Stay 3
.PMFDNDS4  FORM      5      4        87    No.of Days Stay 4
.PMFDNDS5  FORM      5      4        91    No.of Days Stay 5
.PMFDCMN1  DIM       70     70       95    Comments Line 1
.PMFDCMN2  DIM       70     70       165   Comments Line 2
.PMFDCMN3  DIM       70     70       235   Comments Line 3
.PMFDCMN4  DIM       70     70       305   Comments Line 4
.PMFDCMN5  DIM       70     70       375   Comments Line 5
.PMFDSPAR  DIM       30     30       445   Spare
.
.End of Record                      475
.
.                                     ******** copy the new FD here *******
.
PMSFEDA1   IFILE    SQL, FIXED=517, KEY="U1-12"
PMSFEDA2   IFILE    SQL, FIXED=517, KEY="U13-20,1-12"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMFDQUOT  DIM       12     12       1     Quote Number
PMFDURNO  DIM       8      8        13    UR Number
PMFDNONS  FORM      5      4        21    No.of Days Stay 1
PMFDADAT  DIM       8      8        25    Admission Date
PMFDHFUN  DIM       6      6        33    Health Fund
PMFDHFTB  DIM       8      8        39    Health Fund Table
PMFDCMCD  DIM       9      9        47    Casemix Code
PMFDCLTY  DIM       3      3        56    Claim Type
PMFDBDTY  DIM       3      3        59    Bed Type 1
PMFDATYP  DIM       3      3        62    Admission Type
PMFDAGST  FORM      1      2        65    Accomodation GST 0=No 1=Yes
PMFDBDT2  DIM       3      3        67    Bed Type 2
PMFDBDT3  DIM       3      3        70    Bed Type 3
PMFDBDT4  DIM       3      3        73    Bed Type 4
PMFDBDT5  DIM       3      3        76    Bed Type 5
PMFDNDS2  FORM      5      4        79    No.of Days Stay 2
PMFDNDS3  FORM      5      4        83    No.of Days Stay 3
PMFDNDS4  FORM      5      4        87    No.of Days Stay 4
PMFDNDS5  FORM      5      4        91    No.of Days Stay 5
PMFDCMN1  DIM       70     70       95    Comments Line 1
PMFDCMN2  DIM       70     70       165   Comments Line 2
PMFDCMN3  DIM       70     70       235   Comments Line 3
PMFDCMN4  DIM       70     70       305   Comments Line 4
PMFDCMN5  DIM       70     70       375   Comments Line 5
PMFDXCSS  FORM      12.2   8        445   Excess
PMFDEXPD  DIM       8      8        453   Expiry Date (CCYYMMDD)
PMFDCDAT  DIM       8      8        461   Date Created (CCYYMMDD)
PMFDCTIM  DIM       8      8        469   Time Created (HH:MM:SS)
PMFDCUID  DIM       10     10       477   Created By (websecaf)
PMFDSPAR  DIM       30     30       487   Spare
.
.End of Record                      517
.
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION PMSFEDFD"
PRGID     INIT      "F10PMFED"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,"pmsfedaf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsfedaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptfedaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsfedaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptfedaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmsfedaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sptfedaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmsfedaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 517 UC1-12",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC13-20,1-12",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSFEDA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY12,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
          MOVE      ZERO,PMFDXCSS
          MOVE      SP70,PMFDEXPD
          MOVE      SP70,PMFDCDAT
          MOVE      SP70,PMFDCTIM
          MOVE      SP70,PMFDCUID
.                                               * Pack key here
          PACK      KEY12,PMFDQUOT,SP70
          CALL      WRPMFED1                    * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSFEDA1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sptfedaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat pmsfedaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding pmsfedaf.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE
.
READSOLD  RESET     KEY12     
          READ      OLDFILE,KEY12;;                                      
          RETURN       
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;PMFDQUOT,PMFDURNO,PMFDNONS,PMFDADAT,PMFDHFUN:
                        PMFDHFTB,PMFDCMCD,PMFDCLTY,PMFDBDTY,PMFDATYP,PMFDAGST:
                        PMFDBDT2,PMFDBDT3,PMFDBDT4,PMFDBDT5,PMFDNDS2,PMFDNDS3:
                        PMFDNDS4,PMFDNDS5,PMFDCMN1,PMFDCMN2,PMFDCMN3,PMFDCMN4:
                        PMFDCMN5,PMFDSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRPMFED1  RESET     KEY12
          WRITE     PMSFEDA1,KEY12;PMFDQUOT,PMFDURNO,PMFDNONS,PMFDADAT,PMFDHFUN:
                        PMFDHFTB,PMFDCMCD,PMFDCLTY,PMFDBDTY,PMFDATYP,PMFDAGST:
                        PMFDBDT2,PMFDBDT3,PMFDBDT4,PMFDBDT5,PMFDNDS2,PMFDNDS3:
                        PMFDNDS4,PMFDNDS5,PMFDCMN1,PMFDCMN2,PMFDCMN3,PMFDCMN4:
                        PMFDCMN5,PMFDXCSS,PMFDEXPD,PMFDCDAT,PMFDCTIM,PMFDCUID:
                        PMFDSPAR
          RETURN
.
.
          INC       STD001IO
