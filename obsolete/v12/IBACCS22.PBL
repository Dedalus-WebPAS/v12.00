.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  04.07.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from r5.09
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACCS22
.   Function      :   Load Departmental Costing Details       
.   Generated  On :   08/07/2002
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       CCSCALFD/INC
          INC       CCSCMAFD/INC
          INC       CCSCMBFD/INC
          INC       CCSCMCFD/INC
          INC       CCSCMDFD/INC
          INC       CCSCMEFD/INC
          INC       CCSCMFFD/INC
          INC       CCSCONFD/INC
          INC       CCSDCOFD/INC
          INC       CCSDPTFD/INC
          INC       CCSGILFD/INC
          INC       CCSGKMFD/INC
          INC       CCSSDCFD/INC
          INC       CCSTMPDF    
.=========================
.Local Variable Definition
.-------------------------
LOADNAME  DIM      40 * Scr 00 Fld     3
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACCS22"
PRGNAM    INIT      "Load Departmental Costing Details       "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA1,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA2,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA3,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscmaaf";
          OPEN      CCSCMAA1,"ccscmaaf"
          DISPLAY   *P56:24,"Opening ccsdcoaf";
          OPEN      CCSDCOA1,"ccsdcoaf"
          DISPLAY   *P56:24,"Opening ccsdcoaf";
          OPEN      CCSDCOA2,"ccsdcoaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA1,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA2,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA3,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA4,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsgilaf";
          OPEN      CCSGILA1,"ccsgilaf"
          DISPLAY   *P56:24,"Opening ccsgilaf";
          OPEN      CCSGILA2,"ccsgilaf"
          DISPLAY   *P56:24,"Opening ccsgkmaf";
          OPEN      CCSGKMA1,"ccsgkmaf"
          DISPLAY   *P56:24,"Opening ccsgkmaf";
          OPEN      CCSGKMA2,"ccsgkmaf"
          DISPLAY   *P56:24,"Opening ccssdcaf";
          OPEN      CCSSDCA1,"ccssdcaf"
          DISPLAY   *P56:24,"Opening ccssdcaf";
          OPEN      CCSSDCA2,"ccssdcaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Load General Ledger Costs          
          ENDIF
          RETURN
.--------------------------------
. Screen - Load General Ledger Costs          
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Load General Ledger Costs          
.-------------------------------------------------------
CF00L000
          MOVE      SP70,CCCAPER 
          MOVE      SP70,LOADNAME
          MOVE      SP70,CCMACOM 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Load General Ledger Costs          
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Load General Ledger Costs          
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Load General Ledger Costs          
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Load General Ledger Costs          
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Load General Ledger Costs          
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L101,PS00L102,PS00L999:
                            PS00L999,PS00L103,PS00L104,PS00L105:
                            PS00L999,PS00L106,PS00L107,PS00L108
          GOTO     PS00L999
.
PS00L101
          MOVE      CCCAPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      LOADNAME,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CCCADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          UNPACK    CCCAFDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          UNPACK    CCCATDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      CCCAYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      CCMACOM,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      CCMADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Load General Ledger Costs          
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L105,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L101,SF00L102,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L105,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCCADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCCAFDT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCCATDT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCCAYEAR
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CCCAPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCCADES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    CCCAFDT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    CCCATDT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCCAYEAR,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L102
          CALL     SELECTED
          STRIP     LOADNAME
          SFORMAT   VAR,SCPSLEN
          MOVE      LOADNAME,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,LOADNAME
          SFORMAT   VAR,127
          ENDSET    LOADNAME
          APPEND    SP70,LOADNAME
          RESET     LOADNAME
          CMATCH    EXITCHAR,LOADNAME
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,LOADNAME
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
          ENDIF
          MOVE      LOADNAME,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L103
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL      CCGLLC00
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L105
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCMADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECMOD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CCMACOM,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCMADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
EPERD000  MOVE      "64",SECTOR
          READ      CONTROLF,SECTOR;CCCOYEAR,CCCOPER,CCCODIR
          MOVE      CCCOYEAR,CCCAYEAR
          CALL      KCCCAA00
          BRANCH    EXIT,EPERD000,EPERD999
          MOVE      CCCOYEAR,CCCAYEAR
.
EPERD999  RETURN
.----------------------------------------
. Load General Ledger Costs
.----------------------------------------
CCGLLC00  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EL,"Checking Load File :"
          STRIP     LOADNAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CCSTMPAF,LOADNAME
          TRAPCLR   IO
          BRANCH    OVRCD,CCGLLC90
.
. Check Format of File
.----------------------
CCGLLC10  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CCSTMPAF,SEQ;CCGKKEY,CCDCDIR
          GOTO      CCGLLC20 IF OVER
          TRAPCLR   FORMAT
          BRANCH    OVRCD,CCGLLC95
          DISPLAY   *P30:24,CCGKKEY
          GOTO      CCGLLC10
.
. Clear Current Costs
.---------------------
CCGLLC20  CALL      CLRDC000        * Clear Department Costs
          OPEN      CCSTMPAF,LOADNAME
          DISPLAY   *P1:24,*EL,"Loading Period Costs :"
.
. Create file to Store Left overs (Rounding Errors)
.---------------------------------------------------
          PACK      REMFNAME,REMDFILE,CCCAYEAR,CCCAPER
          REP       " 0",REMFNAME
          PREP      CCSREMAF,REMFNAME
.
. Load Costs from Tempory File
.------------------------------
CCGLLC30  READ      CCSTMPAF,SEQ;CCGKKEY,CCTMTOT
          GOTO      CCGLLC60 IF OVER
          MOVE      CCTMTOT,CCTMREM
.
          PACK      KEY34,CCGKKEY,SP70
          CALL      RSCCGI1
CCGLLC40  CALL      RKCCGI1
          BRANCH    OVRCD,CCGLLC50
          MATCH     CCGIKEY,CCGKKEY
          GOTO      CCGLLC50 IF NOT EQUAL
.
          DISPLAY   *P30:24,CCGKKEY,CCGIHCD,CCGIDPT
          ASSIGN    CCGIPER*CCTMTOT,CCTMAMT
          SUB       CCTMAMT,CCTMREM
.
          MATCH     SP70,CCMACOM          * Actuals or Cost Model Details
          GOTO      CCGLLC45 IF NOT EQUAL
.
          PACK      KEY20,CCGIHCD,CCGIDPT,CCCAYEAR,CCCAPER,CCGICTY
          CALL      RDCCDC1
          IF        OVRCD=0
            ADD       CCTMAMT,CCDCDIR
            CALL      UPCCDC1
          ELSE
            UNPACK    KEY20,CCDCHCD,CCDCDPT,CCDCYEAR,CCDCPER,CCDCCTY
            MOVE      ZERO,CCDCIBU
            MOVE      ZERO,CCDCCBU
            MOVE      ZERO,CCDCIND
            MOVE      ZERO,CCDCCAL
            MOVE      ZERO,CCDCDIR
            MOVE      ZERO,CCDCDBU
            MOVE      ZERO,CCDCFBU
            MOVE      ZERO,CCDCDBU
            MOVE      CCTMAMT,CCDCDIR
            CALL      WRCCDC1
          ENDIF
          GOTO      CCGLLC40
.
CCGLLC45  PACK      KEY20,CCGIHCD,CCGIDPT,CCCAYEAR,CCCAPER,CCGICTY
          CALL      RDCCMB1
          IF        OVRCD=0
            ADD       CCTMAMT,CCMBDIR
            CALL      UPCCMB1
          ELSE
            UNPACK    KEY20,CCMBHCD,CCMBDPT,CCMBYEAR,CCMBPER,CCMBCTY
            MOVE      ZERO,CCMBFLX
            MOVE      ZERO,CCMBIND
            MOVE      CCTMAMT,CCMBDIR
            CALL      WRCCMB1
          ENDIF
          GOTO      CCGLLC40
.
CCGLLC50  IF        !(CCTMREM=0)
            WRITE     CCSREMAF,SEQ;CCGKKEY,CCTMREM  * Save Remainder
          ENDIF
          GOTO      CCGLLC30
.
. Complete
.---------------------
CCGLLC60
          CALL      MESSAGE3
          MOVE      "Load Complete. - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      "Run Cost Allocation to Update Summary Files.- ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      CCGLLC99
.
CCGLLC90  CALL      MESSAGE3
          BEEP
          MOVE      "File Not Found. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      CCGLLC99
.
CCGLLC95  CALL      MESSAGE3
          BEEP
          MOVE      "File Format Incorrect. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      CCGLLC99
.
CCGLLC99  RETURN
.------------------------------------------------------------
. Clear Detail Level Costs for a Month
.------------------------------------------------------------
CLRDC000  DISPLAY   *P1:24,*EL,"Clearing Department Costs :"
          PACK      KEY10,SP70
          CALL      RSCCDP1
CLRDC100  CALL      RKCCDP1
          BRANCH    OVRCD,CLRDC999
.
          DISPLAY   *P28:24,CCDPHCD,"/",CCDPDPT
          MATCH     SP70,CCMACOM            * Cost Model or Actuals
          GOTO      CLRDC300 IF NOT EQUAL
.
          PACK      KEY16,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER,SP70
          PACK      KEY20,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER,SP70
          CALL      RSCCDC1
CLRDC200  CALL      RKCCDC1
          BRANCH    OVRCD,CLRDC100
          PACK      KEY20,CCDCHCD,CCDCDPT,CCDCYEAR,CCDCPER,SP70
          MATCH     KEY16,KEY20
          GOTO      CLRDC100 IF NOT EQUAL
          MOVE      ZERO,CCDCFBU
          MOVE      ZERO,CCDCDIR
          MOVE      ZERO,CCDCIND
          MOVE      ZERO,CCDCCAL
          CALL      UPCCDC1
          GOTO      CLRDC200
.
CLRDC300  PACK      KEY16,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER,SP70
          PACK      KEY20,CCDPHCD,CCDPDPT,CCCAYEAR,CCCAPER,SP70
          CALL      RSCCMB1
CLRDC400  CALL      RKCCMB1
          BRANCH    OVRCD,CLRDC100
          PACK      KEY20,CCMBHCD,CCMBDPT,CCMBYEAR,CCMBPER,SP70
          MATCH     KEY16,KEY20
          GOTO      CLRDC100 IF NOT EQUAL
          MOVE      ZERO,CCMBFLX
          MOVE      ZERO,CCMBDIR
          MOVE      ZERO,CCMBIND
          CALL      UPCCMB1
          GOTO      CLRDC400
.
CLRDC999  RETURN
.
ECMOD000  MOVE      ZERO,CKEYTYP
          CALL      CCSMOPCL    * Close Model
          CALL      KCCMAA00
          BRANCH    EXIT,ECMOD900,ECMOD999
.
          CALL      CCSMOPOP    * Open Model
          IF        EXIT=1
            MOVE      "Unable to Open Cost Model Files. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ECMOD000
          ENDIF
          GOTO      ECMOD999
ECMOD900  MOVE      "LOADING ACTUAL COSTS FOR THE PERIOD",CCMADES
ECMOD999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       CCSCALIO/INC
          INC       CCSCALKY    
          INC       CCSCMAIO/INC
          INC       CCSCMAKY    
          INC       CCSCMBIO/INC
          INC       CCSCMCIO/INC
          INC       CCSCMDIO/INC
          INC       CCSCMEIO/INC
          INC       CCSCMFIO/INC
          INC       CCSDCOIO/INC
          INC       CCSDPTIO/INC
          INC       CCSGILIO/INC
          INC       CCSGKMIO/INC
          INC       CCSMOPCD    
          INC       CCSSDCIO/INC
.
          INC       STDGENCD
.
