.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.01  02.11.1999 Sandra Barcham
.           Change record locked message to use X
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAMS60
.   Function      :   Asset Disposal                          
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       AMSACMFD/INC
          INC       AMSCODFD/INC
          INC       AMSCONFD/INC
          INC       AMSDEPFD/INC
          INC       AMSDSFFD/INC
          INC       AMSGILFD/INC
          INC       AMSLOCFD/INC
          INC       AMSMASFD/INC
          INC       AMSREGFD/INC
          INC       AMSTRNFD/INC
          INC       APSMASFD/INC
          INC       FMSAMAFD/INC
          INC       FMSLMAFD/INC
          INC       SINCONFD/INC
          INC       SINPERFD/INC
.=========================
.Local Variable Definition
.-------------------------
TYPDESC   DIM      35 * Scr 00 Fld    51
DPTDESC   DIM      35 * Scr 00 Fld    52
BLDDESC   DIM      35 * Scr 00 Fld    53
SOFDESC   DIM      35 * Scr 00 Fld    55
UC1DESC   DIM      35 * Scr 00 Fld    56
UC2DESC   DIM      35 * Scr 00 Fld    57
UC3DESC   DIM      35 * Scr 00 Fld    58
UC4DESC   DIM      35 * Scr 00 Fld    59
.
.Word Processor File * Scr 00 Fld    61
.
NAMAMAC1  INIT      "Wamac1"
FILAMAC1  DIM       8
.
DTYDESC   DIM      35 * Scr 00 Fld    62
ACCDEPN   FORM     12.2 * Scr 00 Fld    67
ACCOPEN   FORM     12.2 * Scr 00 Fld    68
ACCCLOSE  FORM     12.2 * Scr 00 Fld    69
PROFIT    FORM     12.2 * Scr 00 Fld    70
PRIMECST  FORM     12.2 * Scr 00 Fld    71
F12P2     FORM     12.2 * Scr 00 Fld    72
SAVAMT    FORM     12.2 * Scr 00 Fld    74
PLTYPE    DIM      15 * Scr HE Fld    10
PLACCT    DIM      12 * Scr HE Fld    11
PLDESC    DIM      35 * Scr HE Fld    16
SALDESC   DIM      35 * Scr HE Fld    17
ADPDESC   DIM      35 * Scr HE Fld    18
CAPDESC   DIM      35 * Scr HE Fld    19
RVRDESC   DIM      35 * Scr HE Fld    20
RETDESC   DIM      35 * Scr HE Fld    21
TOTALDEP  FORM     12.2 * Scr HE Fld    23
PLAMT     FORM     12.2 * Scr HE Fld    24
CURRDEPN  FORM     12.2 * Scr HE Fld    28
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAMS60"
PRGNAM    INIT      "Asset Disposal                          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      GETCON00
          CALL      SC00L000
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILAMAC1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening amsacmaf";
          OPEN      AMSACMA1,"amsacmaf"
          MOVE      "    3",AUDTSECT
          MOVE      " 10",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening amsaudma";
            OPEN      AMSAUDMA,"amsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening amscodaf";
          OPEN      AMSCODA1,"amscodaf"
          DISPLAY   *P56:24,"Opening amscodaf";
          OPEN      AMSCODA2,"amscodaf"
          DISPLAY   *P56:24,"Opening amsdepaf";
          OPEN      AMSDEPA1,"amsdepaf"
          DISPLAY   *P56:24,"Opening amsdsfaf";
          OPEN      AMSDSFA1,"amsdsfaf"
          DISPLAY   *P56:24,"Opening amsdsfaf";
          OPEN      AMSDSFA2,"amsdsfaf"
          DISPLAY   *P56:24,"Opening amsgilaf";
          OPEN      AMSGILA1,"amsgilaf"
          DISPLAY   *P56:24,"Opening amslocaf";
          OPEN      AMSLOCA1,"amslocaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA1,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA2,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA3,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA4,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA5,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA6,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA7,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsmasaf";
          OPEN      AMSMASA8,"amsmasaf"
          DISPLAY   *P56:24,"Opening amsregaf";
          OPEN      AMSREGA1,"amsregaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA1,"amstrnaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA2,"amstrnaf"
          DISPLAY   *P56:24,"Opening amstrnaf";
          OPEN      AMSTRNA3,"amstrnaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
.--------------------------------------------------------
. Initialise Wp Filename for Asset Notes                        
.--------------------------------------------------------
          PACK      FILAMAC1,NAMAMAC1,PORT
          REP       " 0",FILAMAC1
          DISPLAY   *P56:24,"Create & Open ",FILAMAC1;
          PREP      TEMPWORD,FILAMAC1
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Asset Disposal                     
          ENDIF
          MATCH     "HE",SCRID
          IF         @EQUAL
            CALL       PSHEL000   * Help Display for General Ledger    
          ENDIF
          RETURN
.--------------------------------
. Screen - Asset Disposal                     
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Asset Disposal                     
.-------------------------------------------------------
CF00L000
          MOVE      SP70,AMMAREG 
          MOVE      SP70,AMMAASS 
          MOVE      SP70,AMMADDT 
          MOVE      SP70,AMMADTY 
          MOVE      ZERO,AMMADVA 
          MOVE      ZERO,AMMAUA1 
          MOVE      ZERO,AMMAUA2 
          MOVE      ZERO,AMMAUA3 
          MOVE      SP70,AMMAUR1 
          MOVE      SP70,AMMAUR2 
          MOVE      SP70,AMMAUR3 
          MOVE      SP70,AMMAUR4 
          MOVE      SP70,AMMAUD1 
          MOVE      SP70,AMMAUD2 
          MOVE      SP70,AMMAUD3 
          MOVE      SP70,AMMAUD4 
          MOVE      SP70,AMMAUC1 
          MOVE      SP70,AMMAUC2 
          MOVE      SP70,AMMAUC3 
          MOVE      SP70,AMMAUC4 
          MOVE      SP70,AMMAUY1 
          MOVE      SP70,AMMAUY2 
          MOVE      SP70,AMMAUY3 
          MOVE      SP70,AMMAUY4 
          MOVE      SP70,AMMADYR 
          MOVE      SP70,AMMADRF 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Asset Disposal                     
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMREDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAMREA00
          MOVE      AMREREG,AMMAREG
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      AMMAREG,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMREDES,VAR      
            CALL      DISPITEM
          ENDIF
.
KY00L120
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMMADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      EASST000
          BRANCH    EXIT,KY00L110,KY00L900
          MOVE      OVRCD,ACCEPT
          MOVE      AMMAASS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMMADES,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Asset Disposal                     
.---------------------------------------------------------
WP00L000
          PREP     TEMPWORD,FILAMAC1
          PACK     KEY17,AMMAREG,AMMAASS,SP70
          MOVE     KEY17,SAVKEY80
          SETLPTR  SAVKEY80,14
          CALL      RDAMAC1 
          IF        OVRCD=0
            CALL      RPAMAC1 
          ENDIF
WP00L100
          CALL     RKAMAC1 
          BRANCH   OVRCD,WP00L105
          PACK     KEY17,AMACREG,AMACASS,AMACLIN
          MATCH    SAVKEY80,KEY17   
          GOTO     WP00L105 IF NOT EQUAL
          PACK     VAR,AMACCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     AMACCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP00L100
WP00L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Asset Disposal                     
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Asset Disposal                     
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Asset Disposal                     
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L101,PS00L102:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L115,PS00L116:
                            PS00L117,PS00L118,PS00L119,PS00L120:
                            PS00L121,PS00L122,PS00L123,PS00L124:
                            PS00L125,PS00L126,PS00L127,PS00L128:
                            PS00L129,PS00L130,PS00L131,PS00L132:
                            PS00L133,PS00L134,PS00L135,PS00L136:
                            PS00L137,PS00L138,PS00L139,PS00L140:
                            PS00L141,PS00L142,PS00L143,PS00L144:
                            PS00L145,PS00L146,PS00L147,PS00L148:
                            PS00L149,PS00L150,PS00L151,PS00L152:
                            PS00L153,PS00L154,PS00L155,PS00L156:
                            PS00L157,PS00L158,PS00L159,PS00L160:
                            PS00L161,PS00L162,PS00L163,PS00L164:
                            PS00L165,PS00L166
          GOTO     PS00L999
.
PS00L101
          MOVE      AMMADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      AMREDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      AMMATYP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      AMMADPT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      AMMABLD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      AMMALOC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      AMMALCM,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      AMMASDT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          UNPACK    AMMAVDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMASEC,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMALEA,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAREN,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      AMMAPRI,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          UNPACK    AMMARDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      AMMAGIC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          UNPACK    AMMAAQD,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      AMMASOF,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          UNPACK    AMMADDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      AMMADTY,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      AMMADVA,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      AMMASER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L122
          MOVE      AMMACST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L123
          MOVE      AMMAUA1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L124
          MOVE      AMMAUA2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L125
          MOVE      AMMAUA3,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L126
          MOVE      AMMARVR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L127
          MOVE      AMMAUR1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L128
          MOVE      AMMAUR2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L129
          MOVE      AMMAUR3,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L130
          MOVE      AMMAUR4,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L131
          UNPACK    AMMAUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L132
          UNPACK    AMMAUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L133
          UNPACK    AMMAUD3,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L134
          UNPACK    AMMAUD4,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L135
          MOVE      AMMAUC1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L136
          MOVE      AMMAUC2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L137
          MOVE      AMMAUC3,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L138
          MOVE      AMMAUC4,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L139
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L140
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L141
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAUY3,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L142
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAUY4,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L143
          MOVE      TYPDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L144
          MOVE      DPTDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L145
          MOVE      BLDDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L146
          MOVE      AMLODES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L147
          MOVE      SOFDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L148
          MOVE      UC1DESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L149
          MOVE      UC2DESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L150
          MOVE      UC3DESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L151
          MOVE      UC4DESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L152
          MOVE      AMGIDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L153
          MOVE     FILAMAC1,WORDNAME
          CALL     DISPWORD
          GOTO     PS00L999
.
PS00L154
          MOVE      DTYDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L155
          MOVE      AMMADYR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L156
          MOVE      AMMADPR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L157
          MOVE      AMMARVT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L158
          MOVE      AMMAAAD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L159
          MOVE      ACCDEPN,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L160
          MOVE      ACCOPEN,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L161
          MOVE      ACCCLOSE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L162
          MOVE      PROFIT,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L163
          MOVE      PRIMECST,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L164
          MOVE      F12P2,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L165
          MOVE      AMMADRF,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L166
          MOVE      SAVAMT,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Asset Disposal                     
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L104,SF00L105,SF00L106:
                            SF00L006,SF00L006,SF00L107,SF00L108:
                            SF00L109,SF00L006,SF00L110,SF00L111:
                            SF00L112,SF00L113,SF00L114,SF00L115:
                            SF00L116,SF00L117,SF00L118,SF00L119:
                            SF00L120,SF00L121,SF00L122,SF00L123:
                            SF00L124,SF00L125,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L126,SF00L006,SF00L127,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L128,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L104,SF00L105,SF00L106:
                            SF00L020,SF00L020,SF00L107,SF00L108:
                            SF00L109,SF00L020,SF00L110,SF00L111:
                            SF00L112,SF00L113,SF00L114,SF00L115:
                            SF00L116,SF00L117,SF00L118,SF00L119:
                            SF00L120,SF00L121,SF00L122,SF00L123:
                            SF00L124,SF00L125,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L126,SF00L020,SF00L127,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L128,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      CANC0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      POST0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      SCHEL000
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L104
          CALL      DATECURR
          CALL     SELECTED
          CALL      KEYDATE
          PACK      AMMADDT,CCENT,CYEAR,CMON,CDAY           
          UNPACK    AMMADDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   62",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DTYDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDTY0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMMADTY,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   62",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DTYDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   70",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PROFIT  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDVAL000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMMADVA,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   70",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PROFIT,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,AMMAUA1 
          IF        SCPSMAN=1
            COMPARE   ZERO,AMMAUA1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
          ENDIF
          MOVE      AMMAUA1,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,AMMAUA2 
          IF        SCPSMAN=1
            COMPARE   ZERO,AMMAUA2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
          ENDIF
          MOVE      AMMAUA2,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,AMMAUA3 
          IF        SCPSMAN=1
            COMPARE   ZERO,AMMAUA3 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
          ENDIF
          MOVE      AMMAUA3,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
          CALL     SELECTED
          STRIP     AMMAUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMMAUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMMAUR1 
          SFORMAT   VAR,127
          ENDSET    AMMAUR1 
          APPEND    SP70,AMMAUR1 
          RESET     AMMAUR1 
          CMATCH    EXITCHAR,AMMAUR1 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMMAUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
          ENDIF
          MOVE      AMMAUR1,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L111
          CALL     SELECTED
          STRIP     AMMAUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMMAUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMMAUR2 
          SFORMAT   VAR,127
          ENDSET    AMMAUR2 
          APPEND    SP70,AMMAUR2 
          RESET     AMMAUR2 
          CMATCH    EXITCHAR,AMMAUR2 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMMAUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
          ENDIF
          MOVE      AMMAUR2,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L112
          CALL     SELECTED
          STRIP     AMMAUR3 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMMAUR3,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMMAUR3 
          SFORMAT   VAR,127
          ENDSET    AMMAUR3 
          APPEND    SP70,AMMAUR3 
          RESET     AMMAUR3 
          CMATCH    EXITCHAR,AMMAUR3 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMMAUR3 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L112
            ENDIF
          ENDIF
          MOVE      AMMAUR3,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L113
          CALL     SELECTED
          STRIP     AMMAUR4 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMMAUR4,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMMAUR4 
          SFORMAT   VAR,127
          ENDSET    AMMAUR4 
          APPEND    SP70,AMMAUR4 
          RESET     AMMAUR4 
          CMATCH    EXITCHAR,AMMAUR4 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMMAUR4 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L113
            ENDIF
          ENDIF
          MOVE      AMMAUR4,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L114
          CALL     SELECTED
          CALL      KEYDATE
          PACK      AMMAUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    AMMAUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L115
          CALL     SELECTED
          CALL      KEYDATE
          PACK      AMMAUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    AMMAUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L116
          CALL     SELECTED
          CALL      KEYDATE
          PACK      AMMAUD3,CCENT,CYEAR,CMON,CDAY           
          UNPACK    AMMAUD3,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L117
          CALL     SELECTED
          CALL      KEYDATE
          PACK      AMMAUD4,CCENT,CYEAR,CMON,CDAY           
          UNPACK    AMMAUD4,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L118
.
.
          MOVE      "   56",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,UC1DESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUC10000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L118
            ENDIF
            BRANCH    EXIT,SF00L118,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMMAUC1,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   56",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      UC1DESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L119
.
.
          MOVE      "   57",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,UC2DESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUC20000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L119
            ENDIF
            BRANCH    EXIT,SF00L119,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMMAUC2,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   57",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      UC2DESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L120
.
.
          MOVE      "   58",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,UC3DESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUC30000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L120
            ENDIF
            BRANCH    EXIT,SF00L120,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMMAUC3,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   58",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      UC3DESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L121
.
.
          MOVE      "   59",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,UC4DESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUC40000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L121
            ENDIF
            BRANCH    EXIT,SF00L121,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMMAUC4,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   59",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      UC4DESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L122
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,AMMAUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L123
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,AMMAUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L124
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,AMMAUY3 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAUY3,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L125
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,AMMAUY4 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      AMMAUY4,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L126
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "10",SCPSROW
              MOVE     "  1",SCPSCOL
              MOVE     " 78",SCPSLEN
              MOVE     "10",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILAMAC1,WORDNAME
              MOVE     "  8",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILAMAC1,WORDNAME
            MOVE     "  8",WORDTYPE
            CALL     EDITWORD
          ENDIF
          GOTO     SF00L001
.
SF00L127
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMMACST 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   64",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMMADPR 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   65",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMMARVT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   66",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AMMAAAD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   67",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,ACCDEPN 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   68",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,ACCOPEN 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   69",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,ACCCLOSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   71",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PRIMECST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L127
            ENDIF
            BRANCH    EXIT,SF00L127,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      AMMADYR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMMACST,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   64",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMMADPR,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   65",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMMARVT,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   66",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AMMAAAD,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   67",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ACCDEPN,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   68",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ACCOPEN,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   69",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ACCCLOSE,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   71",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PRIMECST,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L128
          CALL     SELECTED
          STRIP     AMMADRF 
          SFORMAT   VAR,SCPSLEN
          MOVE      AMMADRF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,AMMADRF 
          SFORMAT   VAR,127
          ENDSET    AMMADRF 
          APPEND    SP70,AMMADRF 
          RESET     AMMADRF 
          CMATCH    EXITCHAR,AMMADRF 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,AMMADRF 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L128
            ENDIF
          ENDIF
          MOVE      AMMADRF,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Help Display for General Ledger    
.--------------------------------
SCHEL000
SCHEL100
          MOVE      "HE",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SCHEL200
          CALL      CFHEL000 * Clear Fields
          CALL      HELP0000
SCHEL300
          CALL      KYHEL000 * Enter Key Fields
          BRANCH    EXIT,SCHEL999,SCHEL999
SCHEL400
          CALL      WPHEL000 * Load any WP Details
SCHEL500
          CALL      LMHEL000 * Load any Batch Details
SCHEL600
          CALL      DFHEL000 * Display Fields
SCHEL700
          CALL      SFHEL000 * Select Fields
          BRANCH    EXIT,SCHEL100,SCHEL100,SCHEL200
SCHEL800
SCHEL900
SCHEL999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Help Display for General Ledger    
.-------------------------------------------------------
CFHEL000
CFHEL999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Help Display for General Ledger    
.--------------------------------------------------------
KYHEL000
          MOVE      ZERO,EXIT
          GOTO      KYHEL999
.
KYHEL900  MOVE      ONE,EXIT
KYHEL999  RETURN
.---------------------------------------------------------
. Load WP files for : Help Display for General Ledger    
.---------------------------------------------------------
WPHEL000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Help Display for General Ledger    
.---------------------------------------------------------
LMHEL000
          RETURN
.---------------------------------------------------------
. Display Fields for : Help Display for General Ledger    
.---------------------------------------------------------
DFHEL000
          BRANCH   ACCEPT,DFHEL999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFHEL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFHEL900
          MATCH    PRGID,SCPSPID
          GOTO     DFHEL900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFHEL900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFHEL010 IF NOT EQUAL
.
          CALL     PSHEL000 * Display Field
          GOTO     DFHEL010
DFHEL900
DFHEL999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Help Display for General Ledger    
.---------------------------------------------------------
PSHEL000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSHEL999,PSHEL999,PSHEL101,PSHEL102:
                            PSHEL103,PSHEL104,PSHEL105,PSHEL106:
                            PSHEL107,PSHEL108,PSHEL109,PSHEL110:
                            PSHEL111,PSHEL112,PSHEL113,PSHEL114:
                            PSHEL115,PSHEL116,PSHEL117,PSHEL118:
                            PSHEL119,PSHEL120,PSHEL121,PSHEL122:
                            PSHEL123,PSHEL124,PSHEL125,PSHEL126
          GOTO     PSHEL999
.
PSHEL101
          MOVE      AMGIGIC,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL102
          MOVE      AMGIDES,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL103
          MOVE      AMGIDIS,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL104
          MOVE      AMGIRES,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL105
          MOVE      AMGILED,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL106
          MOVE      AMGIADP,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL107
          MOVE      AMGICAP,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL108
          MOVE      PLTYPE,VAR       
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL109
          MOVE      PLACCT,VAR       
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL110
          MOVE      AMGIRVR,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL111
          MOVE      AMGIRET,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL112
          MOVE      AMGISAL,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL113
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL114
          MOVE      PLDESC,VAR       
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL115
          MOVE      SALDESC,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL116
          MOVE      ADPDESC,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL117
          MOVE      CAPDESC,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL118
          MOVE      RVRDESC,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL119
          MOVE      RETDESC,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL120
          MOVE      AMMADVA,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL121
          MOVE      TOTALDEP,VAR     
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL122
          MOVE      PLAMT,VAR        
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL123
          MOVE      PRIMECST,VAR     
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL124
          MOVE      AMMARVR,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL125
          MOVE      AMMARVR,VAR      
          CALL      DISPITEM
          GOTO     PSHEL999
.
PSHEL126
          MOVE      CURRDEPN,VAR     
          CALL      DISPITEM
          GOTO     PSHEL999
PSHEL999
          RETURN
.---------------------------------------------------------
. Selections for : Help Display for General Ledger    
.---------------------------------------------------------
SFHEL000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFHEL001  BRANCH   ACCEPT,SFHEL020
.
SFHEL005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFHEL006,SFHEL101,SFHEL006,SFHEL006:
                            SFHEL006,SFHEL006,SFHEL006,SFHEL006:
                            SFHEL006,SFHEL006,SFHEL006,SFHEL006:
                            SFHEL006,SFHEL006,SFHEL006,SFHEL006:
                            SFHEL006,SFHEL006,SFHEL006,SFHEL006:
                            SFHEL006,SFHEL006,SFHEL006,SFHEL006:
                            SFHEL006,SFHEL006,SFHEL006,SFHEL006
SFHEL006  BEEP
          GOTO     SFHEL005
SFHEL020  CALL     RKSCSL1
          BRANCH   OVRCD,SFHEL090
          MATCH    PRGID,SCSLPID
          GOTO     SFHEL090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFHEL090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFHEL020,SFHEL020,SFHEL020,SFHEL020:
                            SFHEL020,SFHEL020,SFHEL020,SFHEL020:
                            SFHEL020,SFHEL020,SFHEL020,SFHEL020:
                            SFHEL020,SFHEL020,SFHEL020,SFHEL020:
                            SFHEL020,SFHEL020,SFHEL020,SFHEL020:
                            SFHEL020,SFHEL020,SFHEL020,SFHEL020:
                            SFHEL020,SFHEL020,SFHEL020,SFHEL020
          GOTO     SFHEL020
SFHEL090  MOVE     ZERO,ACCEPT
          GOTO     SFHEL001
.
SFHEL101
          MOVE      ZERO,EXIT
          GOTO      SFHEL999
SFHEL990  MOVE      ONE,EXIT * Exit Char Restart
SFHEL999  RETURN
.@@@@@ Function Restart Point @@@@@
GETCON00  MOVE      THREE,AUDTSECT
          READ      CONTROLF,AUDTSECT;CFAMSRUN,CFAMYEAR,*53,CFAMPASS
          RETURN

DATECURR  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          REP       " 0",CYEAR
          REP       " 0",CMON
          REP       " 0",CDAY
          RETURN
EASST000  MOVE      ZERO,CKEYTYP
          CALL      KAMMAA00                * Call Standard Keyin Routine with ?
          BRANCH    EXIT,EASST999,EASST999  * Exit 1 Null Entry 2 Exitchar
.
          MATCH     SP70,AMMADDT
          IF        !@EQUAL
            BEEP
            MOVE      "Asset has Already Been Disposed. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EASST000
          ENDIF
.
EASST100  PACK      KEY14,AMMAREG,AMMAASS   * Setup Key to File
          CALL      RLAMMA1                 * Read and Lock Record
          BRANCH    OVRCD,EASST999,EASST200 * OVRCD=1 Not on File 2 Locked
.
          MOVE      TWO,AUDTTYPE            * Type 2 Before Change Audit
          CALL      WAAMMA00                * Write Before Audit
          CALL      GASST000                * Get Description Details
.
          MOVE      ONE,OVRCD
          MOVE      ONE,ACCEPT
          GOTO      EASST999
.
EASST200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EASST100 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * Exit
          GOTO      EASST000 IF EQUAL       * Must be a valid response
          MATCH     ANSE,ANS                * Exit
          GOTO      EASST200 IF NOT EQUAL   * Must be a valid response
          GOTO      EASST000                * Return to Keyin
.
EASST999  RETURN                            * End of Routine
.
GASST000
          MOVE      SP70,DPTDESC
          MATCH     SP70,AMMADPT
          IF        !@EQUAL
            MOVE      "DP",AMCDCAT
            PACK      KEY5,AMCDCAT,AMMADPT
            CALL      RDAMCD1
            IF        OVRCD=0
              MOVE      AMCDDES,DPTDESC
            ENDIF
          ENDIF
.
          MOVE      SP70,BLDDESC
          MATCH     SP70,AMMABLD
          IF        !@EQUAL
            MOVE      "BL",AMCDCAT
            PACK      KEY5,AMCDCAT,AMMABLD
            CALL      RDAMCD1
            IF        OVRCD=0
              MOVE      AMCDDES,BLDDESC
            ENDIF
            PACK      KEY9,AMMABLD,AMMALOC
            CALL      RDAMLO1
          ENDIF
.
          MATCH     SP70,AMMASUPC
          IF        !@EQUAL
            MOVE      AMMASUPC,KEY5
            CALL      RDAPMA1
            IF        OVRCD=0
              MOVE      APMASN1,AMMASUPN
            ENDIF
          ENDIF
.
          MATCH     SP70,AMMAMANC
          IF        !@EQUAL
            MOVE      AMMAMANC,KEY5
            CALL      RDAPMA1
            IF        OVRCD=0
              MOVE      APMASN1,AMMAMANN
            ENDIF
          ENDIF
.
          MATCH     SP70,AMMAGIC
          IF        !@EQUAL
            MOVE      AMMAGIC,KEY5
            CALL      RDAMGI1
          ENDIF
.
          MOVE      SP70,SOFDESC
          MATCH     SP70,AMMASOF
          IF        !@EQUAL
            MOVE      "SF",AMCDCAT
            PACK      KEY5,AMCDCAT,AMMASOF
            CALL      RDAMCD1
            IF        OVRCD=0
              MOVE      AMCDDES,SOFDESC
            ENDIF
          ENDIF
.
          MOVE      SP70,UC1DESC
          MATCH     SP70,AMMAUC1
          IF        !@EQUAL
            MOVE      "A1",AMCDCAT
            PACK      KEY5,AMCDCAT,AMMAUC1
            CALL      RDAMCD1
            IF        OVRCD=0
              MOVE      AMCDDES,UC1DESC
            ENDIF
          ENDIF
.
          MOVE      SP70,UC2DESC
          MATCH     SP70,AMMAUC2
          IF        !@EQUAL
            MOVE      "A2",AMCDCAT
            PACK      KEY5,AMCDCAT,AMMAUC2
            CALL      RDAMCD1
            IF        OVRCD=0
              MOVE      AMCDDES,UC2DESC
            ENDIF
          ENDIF
.
          MOVE      SP70,UC3DESC
          MATCH     SP70,AMMAUC3
          IF        !@EQUAL
            MOVE      "A3",AMCDCAT
            PACK      KEY5,AMCDCAT,AMMAUC3
            CALL      RDAMCD1
            IF        OVRCD=0
              MOVE      AMCDDES,UC3DESC
            ENDIF
          ENDIF
.
          MOVE      SP70,UC4DESC
          MATCH     SP70,AMMAUC4
          IF        !@EQUAL
            MOVE      "A4",AMCDCAT
            PACK      KEY5,AMCDCAT,AMMAUC4
            CALL      RDAMCD1
            IF        OVRCD=0
              MOVE      AMCDDES,UC4DESC
            ENDIF
          ENDIF
.
          MOVE      SP70,TYPDESC
          MATCH     SP70,AMMATYP
          IF        !@EQUAL
            MOVE      "AT",AMCDCAT
            PACK      KEY5,AMCDCAT,AMMATYP
            CALL      RDAMCD1
            IF        OVRCD=0
              MOVE      AMCDDES,TYPDESC
            ENDIF
          ENDIF
.
          RETURN
CANC0000  PACK    KEY14,AMMAREG,AMMAASS
          CALL    UUAMMA1
          RETURN

.
. Update Masterfile Details
.--------------------------------------------------
POST0000  MOVE     AMMAGIC,KEY5
          CALL     RDAMGI1
          IF       OVRCD=1
            BEEP
            MOVE     "ERROR : General Ledger Interface Code Missing. ",DISPMSG
            CALL     MESSAGE1
            GOTO     POST9999
          ENDIF
.
          PACK     KEY14,AMMAREG,AMMAASS     * Setup Key
          CALL     RAAMMA1                   * Check for record on file
          IF       OVRCD=0
            CALL     UPAMMA1                 * Update Any Changes
            MOVE     THREE,AUDTTYPE          * After Change Type
            CALL     WAAMMA00                * Write Audit Record
          ENDIF
.
. Update Current Year Depreciation
.--------------------------------------------------
          MOVE     ZERO,CURRDEPN
          PACK     KEY18,AMMAREG,AMMAASS,AMMADYR
          CALL     RDAMDS1
          BRANCH   OVRCD,POST0200
          MOVE     AMMADPR,F2
          COMPARE  "13",F2
          GOTO     POST0200 IF EQUAL
          MOVE     ZERO,SAVAMT * Reversal Amount in Period not Processed to GL ?
.
POST0100  ADD      ONE,F2
          LOAD     F1,F2,AMDSG01,AMDSG02,AMDSG03,AMDSG04,AMDSG05,AMDSG06:
                         AMDSG07,AMDSG08,AMDSG09,AMDSG10,AMDSG11,AMDSG12:
                         AMDSG13
          IF       F1=1
            LOAD     F12P2,F2,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05,AMDSA06:
                              AMDSA07,AMDSA08,AMDSA09,AMDSA10,AMDSA11,AMDSA12:
                              AMDSA13
            SUB      F12P2,SAVAMT
          ELSE
            STORE    SAVAMT,F2,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05,AMDSA06:
                               AMDSA07,AMDSA08,AMDSA09,AMDSA10,AMDSA11,AMDSA12:
                               AMDSA13
            MOVE     ZERO,SAVAMT
          ENDIF
          STORE    ZERO,F2,AMDST01,AMDST02,AMDST03,AMDST04,AMDST05,AMDST06:
                           AMDST07,AMDST08,AMDST09,AMDST10,AMDST11,AMDST12:
                           AMDST13
          COMPARE  "13",F2
          GOTO     POST0100 IF NOT EQUAL
          CALL     UPAMDS1
.
. Calculate Total Current Depreciation
.------------------------------------------------------------
          ASSIGN   AMDSA01+AMDSA02+AMDSA03+AMDSA04+AMDSA05+AMDSA06,CURRDEPN
          ASSIGN   CURRDEPN+AMDSA07+AMDSA08+AMDSA09+AMDSA10+AMDSA11,CURRDEPN
          ASSIGN   CURRDEPN+AMDSA12+AMDSA13,CURRDEPN
.
. Delete Any Depreciation Records in the Future.
.--------------------------------------------------
POST0200  PACK     KEY14,AMMAREG,AMMAASS
          PACK     KEY18,AMMAREG,AMMAASS,AMMADYR
          CALL     RDAMDS1
POST0300  CALL     RKAMDS1
          BRANCH   OVRCD,POST0400
          PACK     KEY18,AMDSREG,AMDSASS,AMDSYEAR
          MATCH    KEY14,KEY18
          GOTO     POST0400 IF NOT EQUAL
          CALL     DEAMDS1
          GOTO     POST0300
POST0400
.
. Write GL Transactions for : - For Sale of Asset
.
          PACK     KEY19,AMMAREG,AMMAASS,Z70
          PACK     KEY14,AMMAREG,AMMAASS,Z70
          CALL     RSAMTR1
          CALL     RPAMTR1
          BRANCH   OVRCD,POST1000
          PACK     KEY19,AMTRREG,AMTRASS,Z70
          MATCH    KEY14,KEY19
          GOTO     POST1000 IF NOT EQUAL
          MOVE     AMTRUNI,SECTOR
          GOTO     POST1100
.
. Dr Sale of Asset
. Cr Capital Account
. For the Sale Value
.------------------------------------------------------------
POST1000  MOVE     ZERO,SECTOR
POST1100  ADD      ONE,SECTOR
          PACK     KEY19,AMMAREG,AMMAASS,SECTOR
          UNPACK   KEY19,AMTRREG,AMTRASS,AMTRUNI
          CALL     RDAMTR1
          COMPARE  ZERO,OVRCD
          GOTO     POST1100 IF EQUAL
.
          PACK     AMTRREF,AMMADRF,SP70
          MOVE     "Disposal. Sale of Asset ",AMTRCOM
          MOVE     AMMADDT,AMTRDAT
.
          MOVE     AMGILED,AMTRDLED
          MOVE     AMGISAL,AMTRDACC
          MOVE     AMGICAP,AMTRCACC
          MOVE     AMMADVA,AMTRAMT
          MOVE     AMGIDIS,AMTRDIS
          MOVE     AMGIRES,AMTRRES
          MOVE     AMMADYR,AMTRYEAR
          MOVE     AMMADPR,F2
          MOVE     F2,AMTRPER
          MOVE     SP70,AMTRIRUN
          MOVE     SP70,AMTRUR1
          MOVE     SP70,AMTRUR2
          MOVE     ZERO,AMTRUY1
          MOVE     ZERO,AMTRUY2
          MOVE     SP70,AMTRSPA
          CALL     WRAMTR1
.
. Dr Acc'm Dep'n
. Cr Capital Account
. For the Total Accummulated Account Depreciation
.------------------------------------------------------------
POST2100  ADD      ONE,SECTOR
          PACK     KEY19,AMMAREG,AMMAASS,SECTOR
          UNPACK   KEY19,AMTRREG,AMTRASS,AMTRUNI
          CALL     RDAMTR1
          COMPARE  ZERO,OVRCD
          GOTO     POST2100 IF EQUAL
.
          PACK     AMTRREF,AMMADRF,SP70
          MOVE     "Disposal. Acc'm Dep'n",AMTRCOM
          MOVE     AMMADDT,AMTRDAT
.
          MOVE     AMGILED,AMTRDLED
          MOVE     AMGIADP,AMTRDACC
          MOVE     AMGICAP,AMTRCACC
          ASSIGN   AMMAAAD+CURRDEPN,AMTRAMT
          MOVE     AMGIDIS,AMTRDIS
          MOVE     AMGIRES,AMTRRES
          MOVE     AMMADYR,AMTRYEAR
          MOVE     AMMADPR,F2
          MOVE     F2,AMTRPER
          MOVE     SP70,AMTRIRUN
          MOVE     SP70,AMTRUR1
          MOVE     SP70,AMTRUR2
          MOVE     ZERO,AMTRUY1
          MOVE     ZERO,AMTRUY2
          MOVE     SP70,AMTRSPA
          CALL     WRAMTR1
.
. Cr(Dr) Profit(Loss) on Sale
. Dr(Cr) Capital Account
. For the Profit or Loss calculated as = DVA+AAD-CST-RVT
. where DVA = Disposal (Sale) Value
.       AAD = Total Accumulated Depreciation
.       CST = Original Cost
.       RVT = Revaluation Totals
.------------------------------------------------------------
POST3100  ADD      ONE,SECTOR
          PACK     KEY19,AMMAREG,AMMAASS,SECTOR
          UNPACK   KEY19,AMTRREG,AMTRASS,AMTRUNI
          CALL     RDAMTR1
          COMPARE  ZERO,OVRCD
          GOTO     POST3100 IF EQUAL
.
          PACK     AMTRREF,AMMADRF,SP70
          MOVE     AMMADDT,AMTRDAT
.
          MOVE     AMGILED,AMTRDLED
          ASSIGN   AMMADVA+AMMAAAD+CURRDEPN-AMMACST-AMMARVT,AMTRAMT
          IF       AMTRAMT>0
            MOVE     AMGIPRO,AMTRCACC
            MOVE     "Disposal. Profit on Sale.",AMTRCOM
            MOVE     AMGICAP,AMTRDACC
          ELSE
            MULT     SEQ,AMTRAMT
            MOVE     AMGILOS,AMTRDACC
            MOVE     "Disposal. Loss on Sale.",AMTRCOM
            MOVE     AMGICAP,AMTRCACC
          ENDIF
          MOVE     AMGIDIS,AMTRDIS
          MOVE     AMGIRES,AMTRRES
          MOVE     AMMADYR,AMTRYEAR
          MOVE     AMMADPR,F2
          MOVE     F2,AMTRPER
          MOVE     SP70,AMTRIRUN
          MOVE     SP70,AMTRUR1
          MOVE     SP70,AMTRUR2
          MOVE     ZERO,AMTRUY1
          MOVE     ZERO,AMTRUY2
          MOVE     SP70,AMTRSPA
          CALL     WRAMTR1
.
. Dr Revaluation Reserve
. Cr Retained Earnings
.------------------------------------------------------------
POST4100  ADD      ONE,SECTOR
          PACK     KEY19,AMMAREG,AMMAASS,SECTOR
          UNPACK   KEY19,AMTRREG,AMTRASS,AMTRUNI
          CALL     RDAMTR1
          COMPARE  ZERO,OVRCD
          GOTO     POST3100 IF EQUAL
.
          COMPARE  ZERO,AMMARVR
          GOTO     POST9999 IF EQUAL
.
          PACK     AMTRREF,AMMADRF,SP70
          MOVE     "Disposal. Revaluation Adj.",AMTRCOM
          MOVE     AMMADDT,AMTRDAT
.
          MOVE     AMGILED,AMTRDLED
          MOVE     AMMARVR,AMTRAMT
          MOVE     AMGIRVR,AMTRDACC
          MOVE     AMGIRET,AMTRCACC
          MOVE     AMGIDIS,AMTRDIS
          MOVE     AMGIRES,AMTRRES
          MOVE     AMMADYR,AMTRYEAR
          MOVE     AMMADPR,F2
          MOVE     F2,AMTRPER
          MOVE     SP70,AMTRIRUN
          MOVE     SP70,AMTRUR1
          MOVE     SP70,AMTRUR2
          MOVE     ZERO,AMTRUY1
          MOVE     ZERO,AMTRUY2
          MOVE     SP70,AMTRSPA
          CALL     WRAMTR1
.
POST9999  PACK     KEY14,AMMAREG,AMMAASS     * Setup Key
          CALL     UUAMMA1                   * Check for record on file
          RETURN
.---------------------------------
. Setup Category and Enter Code
.---------------------------------
EDTY0000  MOVE    ZERO,CKEYTYP
          MOVE    "DT",AMCDCAT
          CALL    KAMCDA00
          BRANCH  EXIT,EDTY9999,EDTY9999
          MOVE    AMCDCOD,AMMADTY
          MOVE    AMCDDES,DTYDESC
EDTY9999  RETURN
.------------------------------------------------------------
. Enter Sale Value
.------------------------------------------------------------
EDVAL000  MOVE    SP70,VAR
          CALL    DISPITEM
          KEYIN   *PCCOL:CVERT,*V2LON,*RV,*NOMASK,AMMADVA
          ASSIGN  AMMADVA-ACCCLOSE,PROFIT
          RETURN
.
.---------------------------------
. Setup Category and Enter Code
.---------------------------------
EUC10000  MOVE    ZERO,CKEYTYP
          MOVE    "A1",AMCDCAT
          CALL    KAMCDA00
          BRANCH  EXIT,EUC19999,EDTY9999
          MOVE    AMCDCOD,AMMAUC1
          MOVE    AMCDDES,UC1DESC
EUC19999  RETURN
.---------------------------------
. Setup Category and Enter Code
.---------------------------------
EUC20000  MOVE    ZERO,CKEYTYP
          MOVE    "A2",AMCDCAT
          CALL    KAMCDA00
          BRANCH  EXIT,EUC29999,EDTY9999
          MOVE    AMCDCOD,AMMAUC2
          MOVE    AMCDDES,UC2DESC
EUC29999  RETURN
.---------------------------------
. Setup Category and Enter Code
.---------------------------------
EUC30000  MOVE    ZERO,CKEYTYP
          MOVE    "A3",AMCDCAT
          CALL    KAMCDA00
          BRANCH  EXIT,EUC39999,EUC39999
          MOVE    AMCDCOD,AMMAUC3
          MOVE    AMCDDES,UC3DESC
EUC39999  RETURN
.---------------------------------
. Setup Category and Enter Code
.---------------------------------
EUC40000  MOVE    ZERO,CKEYTYP
          MOVE    "A4",AMCDCAT
          CALL    KAMCDA00
          BRANCH  EXIT,EUC49999,EUC49999
          MOVE    AMCDCOD,AMMAUC4
          MOVE    AMCDDES,UC4DESC
EUC49999  RETURN
.------------------------------------------------------------
. Enter Year for Depreciation Record
.------------------------------------------------------------
EYEAR000  MOVE    AMMADDT,SIPEDATE
          CALL    RSIPE000
          IF      OVRCD=1
            MOVE    "WARNING: Disposal Date is not in period file. ",DISPMSG
            CALL    MESSAGE1
            MOVE    CFAMYEAR,AMMADYR
          ELSE
            MOVE    SIPEYEAR,AMMADYR
            MOVE    SIPEPER,F2
          ENDIF
.
          MOVE    "   64",FLDID
          CALL    GETPOSIT
          KEYIN   *PCCOL:CVERT,*V2LON,*RV,F2
          IF      (F2<1)|(F2>13)
            BEEP
            GOTO    EYEAR000
          ENDIF
          MOVE    F2,AMMADPR
          REP     " 0",AMMADPR
.
          MOVE    "   63",FLDID
          CALL    GETPOSIT
.
          PACK    KEY18,AMMAREG,AMMAASS,AMMADYR
          CALL    RDAMDS1
          IF      OVRCD=1
            BEEP
            CLEAR   DISPMSG
            APPEND  "WARNING: Depreciation Record Not found for ",DISPMSG
            APPEND  AMMADYR,DISPMSG
            APPEND  " - ",DISPMSG
            RESET   DISPMSG
            CALL    MESSAGE1
            GOTO    EYEAR290
          ENDIF
.
          MOVE    AMMADYR,VAR
          CALL    DISPITEM
.
          MOVE    AMMADPR,F2
.
EYEAR290  MOVE    ZERO,ACCDEPN
          MOVE    AMMADPR,F2
          MOVE    ZERO,SECTOR
EYEAR300  ADD     ONE,SECTOR
          LOAD    F12P2,SECTOR,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05,AMDSA06:
                               AMDSA07,AMDSA08,AMDSA09,AMDSA10,AMDSA11,AMDSA12:
                               AMDSA13
          ADD     F12P2,ACCDEPN
          COMPARE F2,SECTOR
          GOTO    EYEAR300 IF NOT EQUAL
.
          ASSIGN  AMMACST+AMMARVT,PRIMECST
          ASSIGN  PRIMECST-AMMAAAD,ACCOPEN
          ASSIGN  ACCOPEN-ACCDEPN,ACCCLOSE
.
          IF      ACCEPT=0
            MOVE    "   70",FLDID
            CALL    GETPOSIT
            ASSIGN  AMMADVA-ACCCLOSE,PROFIT
            MOVE    PROFIT,VAR
            CALL    DISPITEM
          ENDIF
.
          MOVE    "   63",FLDID
          CALL    GETPOSIT
.
EYEAR999  RETURN
.
.------------------------------------------------------------
. Disposal General Ledger Help
.------------------------------------------------------------
HELP0000  MOVE     AMMAGIC,KEY5
          CALL     RDAMGI1
          IF       OVRCD=1
            BEEP
            MOVE     "ERROR : General Ledger Interface Code Missing. ",DISPMSG
            CALL     MESSAGE1
            GOTO     HELP9999
          ENDIF
.
. Update Current Year Depreciation
.--------------------------------------------------
          MOVE     ZERO,CURRDEPN
          PACK     KEY18,AMMAREG,AMMAASS,AMMADYR
          CALL     RDAMDS1
          BRANCH   OVRCD,HELP0200
          MOVE     AMMADPR,F2
          COMPARE  "13",F2
          GOTO     HELP0200 IF EQUAL
HELP0100  ADD      ONE,F2
          STORE    ZERO,F2,AMDSA01,AMDSA02,AMDSA03,AMDSA04,AMDSA05,AMDSA06:
                           AMDSA07,AMDSA08,AMDSA09,AMDSA10,AMDSA11,AMDSA12:
                           AMDSA13
          STORE    ZERO,F2,AMDST01,AMDST02,AMDST03,AMDST04,AMDST05,AMDST06:
                           AMDST07,AMDST08,AMDST09,AMDST10,AMDST11,AMDST12:
                           AMDST13
          COMPARE  "13",F2
          GOTO     HELP0100 IF NOT EQUAL
.
. Calculate Total Current Depreciation
.------------------------------------------------------------
          ASSIGN   AMDSA01+AMDSA02+AMDSA03+AMDSA04+AMDSA05+AMDSA06,CURRDEPN
          ASSIGN   CURRDEPN+AMDSA07+AMDSA08+AMDSA09+AMDSA10+AMDSA11,CURRDEPN
          ASSIGN   CURRDEPN+AMDSA12+AMDSA13,CURRDEPN
.
HELP0200  MOVE     AMMADVA,PRIMECST
          ASSIGN   AMMAAAD+CURRDEPN,TOTALDEP
          ADD      TOTALDEP,PRIMECST
.
          ASSIGN   AMMADVA+AMMAAAD+CURRDEPN-AMMACST-AMMARVT,PLAMT
          SUB      PLAMT,PRIMECST
          IF       AMTRAMT>0
            MOVE     AMGIPRO,PLACCT
            MOVE     "Cr Sale Profit ",PLTYPE
          ELSE
            MULT     SEQ,PLAMT
            MOVE     AMGILOS,PLACCT
            MOVE     "Dr Loss on Sale",PLTYPE
          ENDIF
.
          PACK     KEY2,AMGILED
          CALL     RDFMLA1
.
          PACK     KEY14,AMGILED,AMGIRET
          CALL     RDFMAM1
          IF       OVRCD=0
            MOVE     FMAMDESC,RETDESC
          ENDIF
.
          PACK     KEY14,AMGILED,AMGISAL
          CALL     RDFMAM1
          IF       OVRCD=0
            MOVE     FMAMDESC,SALDESC
          ENDIF
.
          PACK     KEY14,AMGILED,AMGIRVR
          CALL     RDFMAM1
          IF       OVRCD=0
            MOVE     FMAMDESC,RVRDESC
          ENDIF
.
          PACK     KEY14,AMGILED,AMGICAP
          CALL     RDFMAM1
          IF       OVRCD=0
            MOVE     FMAMDESC,CAPDESC
          ENDIF
.
          PACK     KEY14,AMGILED,AMGIADP
          CALL     RDFMAM1
          IF       OVRCD=0
            MOVE     FMAMDESC,ADPDESC
          ENDIF
.
          PACK     KEY14,AMGILED,PLACCT
          CALL     RDFMAM1
          IF       OVRCD=0
            MOVE     FMAMDESC,PLDESC
          ENDIF
.
HELP9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       AMSACMIO/INC
          INC       AMSCODIO/INC
          INC       AMSCODKY    
          INC       AMSDEPIO/INC
          INC       AMSDSFIO/INC
          INC       AMSDSFKY    
          INC       AMSGILIO/INC
          INC       AMSLOCIO/INC
          INC       AMSMASIO/INC
          INC       AMSMASKY    
          INC       AMSREGIO/INC
          INC       AMSREGKY    
          INC       AMSTRNIO/INC
          INC       APSMASIO/INC
          INC       FMSAMAIO/INC
          INC       FMSLMAIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
.
          INC       STDGENCD
.
