. **********************************************************************
. * System    :   Budget System                                        *
. * Program   :   IBAFMS82                                             *
. * Desc      :   Budget Copying/Modelling                             *
. **********************************************************************
. * Date      :   25.09.1998                                           *
. * Author    :   Paul Duncan                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.03  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.02  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. * VF.00.01  02.11.1999 Sandra Barcham                                *
. *           Change ITEMNO to XITEMNO                                 *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS82
.             open files and initialise variables
.             WHILE user wants to Copy/Model DO
.                  get desired option (Copy Budget, adjust % or adjust % by pr)
.                  CASE option OF
.                       COPY    : WHILE user wants to copy budget DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.             delete temporary files
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * standard update routines
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSBPFFD/INC
          INC       FMSCCAFD/INC
          INC       FMSCSAFD/INC       * Control Account
          INC       FMSSBAFD/INC
          INC       FMSXCSFD/INC
.
.==============================================================================
.CONSTANT DEFINITION
.-------------------------
OPTNDESC  INIT      "                         "
ADJCOST   INIT      "Adjustment by Cost Centre"
ADJSUB    INIT      "Adjustment by Subjective "
COPY      INIT      "Copy Budget File         "
COPYACT   INIT      "Copy Actuals to Budget   "
PERCPROF  INIT      "Percentage Adj by Profile"
PERCAJST  INIT      "Percentage Adjustment    "
.
CONFACT   FORM      6.6
CASHFLAG  FORM      1      * Cash Yes/No
.
XIM3      DIM       3
XIM6      DIM       6
XIM9      DIM       9
DISPCNT   FORM      2
.
INTEGER   FORM      12
LITEMNO   FORM      2
.
MODE      FORM      1
.
PAGENO     FORM     3
.
WORKBUDG  FORM      12.4
.
.LOCAL VARIABLE DEFINITION
.-------------------------
.
FROMBUD   DIM       4                    * Copy from budget type in opt 1
FRBDDESC  DIM       35                   * Copy from budget desc
FILENAME  DIM       8                    * file name
FROMFILE  DIM       8                    * Copy from file name
FROMFMSC  DIM       8                    * Copy from file name
FROMFMSL  DIM       8                    * Copy from file name
STATFILE  DIM       8                    * Copy from file name
FROMYEAR  DIM       4
FRYRDESC  DIM       40
.
LEDGCODE  DIM       2                    * ledger code in all opts excpt 1
LEDGDESC  DIM       35                   * ledger desc
PERADJST  FORM      6.2                  * percentage adjustment
.
ROUNDTO   FORM      6.2                  * round to nearest
ROUNDCAL  FORM      8.2                  * round to nearest
SVERT     FORM      2
SAVCOCE   DIM       12                   * Save Cost Centre for Redisplay
SAVKEY14  DIM       14
.
TOBDDESC  DIM       35                   * Copy to budget description
TOBUD     DIM       4                    * Copy to budget code
TOFILE    DIM       8                    * Copy to file name
TOFMSL    DIM       8                    * Copy from file name
TOFMSC    DIM       8                    * Copy from file name
.
UNIXCMND  DIM       80                   * execute command line
.
. Rounding Variables
.-------------------
RESULT    FORM      12.2
W12P2     FORM      12.2
TOTALBUD  FORM      14.2
TOTALRES  FORM      14.2
.
. Temp file details
.
MAKETMP1  DIM       80
KILLTMP1  DIM       80
FILENAM1  DIM       8
TEMPNAM1  INIT      "fmstm1"
.
MAKETMP2  DIM       80
KILLTMP2  DIM       80
FILENAM2  DIM       8
TEMPNAM2  INIT      "fmstm2"
.
FMSTMPA1  IFILE     SQL, FIXED=20, KEY="U1-2,3-6,7-9"
.
TMPLEDG   DIM     2     2    1
TMPYEAR   DIM     4     4    3
TMPPROF   DIM     3     3    7
TMPPERC   FORM    6.2   5    10
TMPRND    FORM    6.2   5    15
.
FMSTMPA2  IFILE     SQL, FIXED=23, KEY="U1-12"
.
TMPCODE   DIM     12    12   1
.
. Global Variables for Total Account Rcalculation Routine
.
COSTCODE  DIM       12
SUBJCODE  DIM       12
SUBJIND   FORM      1
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
PRGID     INIT      "IBAFMS82"
PRGNAM    INIT      "Budget Copying/Modelling"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      OPTN0000           * display screen A
          BRANCH    EXIT,ML9999
.
          BRANCH    OPTION,ML1000,ML2000,ML3000,ML4000,ML5000,ML6000,ML7000
          GOTO      ML0100
.
ML1000    CALL      COPY0000           * copy a budget
          GOTO      ML0100
.
ML2000    CALL      CPAC0000           * Copy actuals to budget
          GOTO      ML0100             * get next entry
.
ML3000    CALL      PADJ0000           * Percentage adjustment
          GOTO      ML0100             * get next entry
.
ML4000    CALL      ADPR0000           * Percentage adjustment by profile
          GOTO      ML0100             * get next entry
.
ML5000    CALL      ADCC0000           * Percentage adjustment by Cost Centre
          GOTO      ML0100             * get next entry
.
ML6000    CALL      PSUB0000           * Percentage adjustment by Subjective
          GOTO      ML0100             * get next entry
.
ML7000    CALL      ACSB0000           * Percentage adj Cost Cent within Subj
          GOTO      ML0100             * get next entry
.
ML9999    CLOSE     FMSTMPA1
          CLOSE     FMSTMPA2
          EXECUTE   KILLTMP1,TASKID
          EXECUTE   KILLTMP2,TASKID
          MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD                     * display screen
          CALL      OUPD0000                     * open files for update procs
          CALL      OUDA0000                 * Open budget audit files
.
          DISPLAY   *P64:24,"fmsbpfaf";  * Budget Profile Master File
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";  * x ref
          OPEN      FMSXCSA1,"fmsxcsaf"
          OPEN      FMSXCSA2,"fmsxcsaf"
          OPEN      FMSXCSA3,"fmsxcsaf"
.
          DISPLAY   *P64:24,"fmsccaaf";  * Cost Centre Master File
          OPEN      FMSCCAA1,"fmsccaaf"
          OPEN      FMSCCAA2,"fmsccaaf"
.
          DISPLAY   *P64:24,"Opening fmscsaaf";  * Control Account
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * Subjective Master File
          OPEN      FMSSBAA1,"fmssbaaf"
          OPEN      FMSSBAA2,"fmssbaaf"
.
          PACK      FILENAM1,TEMPNAM1,PORT
          REP       " 0",FILENAM1
          CLEAR     MAKETMP1
          APPEND    "isbuild ",MAKETMP1
          APPEND    FILENAM1,MAKETMP1
          APPEND    " 20 U1-2,3-6,7-9",MAKETMP1
          RESET     MAKETMP1
.
          CLEAR     KILLTMP1
          APPEND    "iserase ",KILLTMP1
          APPEND    FILENAM1,KILLTMP1
          RESET     KILLTMP1
.
          PACK      FILENAM2,TEMPNAM2,PORT
          REP       " 0",FILENAM2
          CLEAR     MAKETMP2
          APPEND    "isbuild ",MAKETMP2
          APPEND    FILENAM2,MAKETMP2
          APPEND    " 23 U1-12",MAKETMP2
          RESET     MAKETMP2
.
          CLEAR     KILLTMP2
          APPEND    "iserase ",KILLTMP2
          APPEND    FILENAM2,KILLTMP2
          RESET     KILLTMP2
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.* OPTN - Display Screen A                       Called by ML0000             *
.* Cost Centre within subj not written at this stage
.* May not be required.
.******************************************************************************
OPTN0000  CALL      CLR0000         * clear input variables
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF,". Exit                 ":
                    *P1:5,*V2LON," 1",*HOFF,". Copy a Budget        ":
                    *P1:6,*V2LON," 2",*HOFF,". Copy Actuals to Budget":
                    *P1:7,*V2LON," 3",*HOFF,". Percentage Adjustment":
                    *P1:8,*V2LON," 4",*HOFF,". Percentage Adjustment by":
                    " Profile":
                    *P1:9,*V2LON," 5",*HOFF,". Adjustment by Cost Centre":
                    *P1:10,*V2LON," 6",*HOFF,". Adjustment by Subjective":
                    *P1:12,"Select Option : "
.
OPTN1000  KEYIN     *P17:12,*EF,*DV,UNDLN1,*P17:12,*V2LON,FORM1
.
          COMPARE   ZERO,FORM1          * exit?
          GOTO      OPTN9000 IF EQUAL
.
          MOVE      FORM1,OPTION
.
          BRANCH    OPTION,OPTN2000,OPTN2000,OPTN2000,OPTN2000,OPTN2000:
                           OPTN2000
          BEEP
          GOTO      OPTN1000
.
OPTN2000  MOVE      FALSE,EXIT
          LOAD      OPTNDESC,OPTION,COPY,COPYACT,PERCAJST,PERCPROF,ADJCOST:
                                    ADJSUB
          DISPLAY   *P55:3,*V2LON,OPTNDESC
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
.*************************************************************************
.* CLR  - Clear all the input variables                                  *
.*                     called by : OPTN0000                              *
.*************************************************************************
CLR0000   UNPACK    SP30,FROMBUD,TOBUD,LEDGCODE
          PACK      FRBDDESC,SP30,SP5
          PACK      TOBDDESC,SP30,SP5
          PACK      LEDGDESC,SP30,SP5
          MOVE      ZERO,PERADJST
          MOVE      ZERO,ROUNDTO
.
CLR9999   RETURN
.******************************************************************************
.* COPY - Enter From and to budget types         Called by ML1000             *
.*        Returns : nothing                                                   *
.******************************************************************************
COPY0000  CALL      CLR0000            * clear variables
          MOVE      ZERO,MODE 
          UNPACK    SP70,FROMFILE,TOFILE,FROMFMSL,TOFMSL,FROMFMSC,TOFMSC
          CALL      SCRA0000           * display screen
.
COPY1000  MOVE      "29",CCOL
          MOVE      "4",CVERT
          MOVE      SP4,FROMBUD
          MOVE      SP30,FRBDDESC
          CALL      KBTYFM00           * keyin from budget
          BRANCH    EXIT,COPY9999,COPY9999
.
          DISPLAY   *P29:4,*V2LON,FMBTCODE,*HOFF,SP1,FMBTDESC
          MOVE      FMBTDESC,FRBDDESC
          MOVE      FMBTCODE,FROMBUD
.
          CLEAR     FROMFILE          * set up fromfile name
          APPEND    FMSB,FROMFILE
          APPEND    FMBTCODE,FROMFILE
          RESET     FROMFILE
          REP       " 0",FROMFILE
.
          CLEAR     FROMFMSL          * set up fromfile name
          APPEND    FMSL,FROMFMSL
          APPEND    FMBTCODE,FROMFMSL
          RESET     FROMFMSL
          REP       " 0",FROMFMSL
.
          CLEAR     FROMFMSC          * set up fromfile name
          APPEND    FMSC,FROMFMSC
          APPEND    FMBTCODE,FROMFMSC
          RESET     FROMFMSC
          REP       " 0",FROMFMSC
.
          BRANCH    MODE,COPY2200
.
COPY2000  MOVE      "29",CCOL
          MOVE      "5",CVERT
          MOVE      SP30,TOBDDESC
          MOVE      SP4,TOBUD
          CALL      KBTYFM00           * keyin to budget
          BRANCH    EXIT,COPY1000,COPY1000
          DISPLAY   *P29:5,*V2LON,FMBTCODE,*HOFF,SP1,FMBTDESC
          MOVE      FMBTCODE,TOBUD
          MOVE      FMBTDESC,TOBDDESC
.
          CLEAR     TOFILE          * set up tofile name
          APPEND    FMSB,TOFILE
          APPEND    FMBTCODE,TOFILE
          RESET     TOFILE
          REP       " 0",TOFILE
.
          CLEAR     TOFMSL          * set up tofile name
          APPEND    FMSL,TOFMSL
          APPEND    FMBTCODE,TOFMSL
          RESET     TOFMSL
          REP       " 0",TOFMSL
.
          CLEAR     TOFMSC          * set up tofile name
          APPEND    FMSC,TOFMSC
          APPEND    FMBTCODE,TOFMSC
          RESET     TOFMSC
          REP       " 0",TOFMSC
.
COPY2200  MATCH     TOFILE,FROMFILE * are the budget types the same?
          GOTO      COPY2500 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,"Can't copy Budget type to itself. ";
          CALL      HITENTER
          COMPARE   "4",CVERT            * where do we go back to
          GOTO      COPY1000 IF EQUAL
          GOTO      COPY2000
.
COPY2500  OPEN      FMSBUDA1,TOFILE
          MOVE      SP10,KEY4
          CALL      RSFMBU1
          CALL      RKFMBU1
          BRANCH    OVRCD,COPY3000
.
          DISPLAY   *P1:24,*EL,"WARNING - Budget Type ",TOBUD:
                    " contains Data - ";
          CALL      HITENTER
.
COPY3000  CALL      MAINQST
          COMPARE   "0",CCITEM          * post?
          GOTO      COPY4000 IF EQUAL
.
          COMPARE   "-1",CCITEM          * cancel?
          GOTO      COPY9999 IF EQUAL
.
          MOVE      ONE,MODE
          BRANCH    CCITEM,COPY1000,COPY2000 
.
          BEEP
          GOTO      COPY3000
.
COPY4000  CALL      PCOP0000            * post copies
          GOTO      COPY0000
.
COPY9999  RETURN
.*************************************************************************
.* PCOP - Build and execute the unix command to copy budget types        *
.*                     called by : COPY4000                              *
.*************************************************************************
PCOP0000  DISPLAY    *P1:10;           * move cursor so error messages don't
.                                      * fuck up my pretty screen
          CLEAR     UNIXCMND           * set up unix command to copy .dat file
          APPEND    "cp ",UNIXCMND
          APPEND    FROMFILE,UNIXCMND
          APPEND    ".dat ",UNIXCMND
          APPEND    TOFILE,UNIXCMND
          APPEND    ".dat",UNIXCMND
          RESET     UNIXCMND
          EXECUTE   UNIXCMND,TASKID
.
          CLEAR     UNIXCMND           * set up unix command to copy .idx file
          APPEND    "cp ",UNIXCMND
          APPEND    FROMFILE,UNIXCMND
          APPEND    ".idx ",UNIXCMND
          APPEND    TOFILE,UNIXCMND
          APPEND    ".idx",UNIXCMND
          RESET     UNIXCMND
          EXECUTE   UNIXCMND,TASKID
.
          CLEAR     UNIXCMND           * set up unix command to copy .dat file
          APPEND    "cp ",UNIXCMND
          APPEND    FROMFMSC,UNIXCMND
          APPEND    ".dat ",UNIXCMND
          APPEND    TOFMSC,UNIXCMND
          APPEND    ".dat",UNIXCMND
          RESET     UNIXCMND
          EXECUTE   UNIXCMND,TASKID
.
          CLEAR     UNIXCMND           * set up unix command to copy .idx file
          APPEND    "cp ",UNIXCMND
          APPEND    FROMFMSC,UNIXCMND
          APPEND    ".idx ",UNIXCMND
          APPEND    TOFMSC,UNIXCMND
          APPEND    ".idx",UNIXCMND
          RESET     UNIXCMND
          EXECUTE   UNIXCMND,TASKID
.
          PACK      FILENAME,FMSL,FROMBUD,SP70   * get desired filename
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSLBUA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,PCOP9999
          CLOSE     FMSLBUA1
.
          CLEAR     UNIXCMND           * set up unix command to copy .idx file
          APPEND    "cp ",UNIXCMND
          APPEND    FROMFMSL,UNIXCMND
          APPEND    ".idx ",UNIXCMND
          APPEND    TOFMSL,UNIXCMND
          APPEND    ".idx",UNIXCMND
          RESET     UNIXCMND
          EXECUTE   UNIXCMND,TASKID
.
          CLEAR     UNIXCMND           * set up unix command to copy .dat file
          APPEND    "cp ",UNIXCMND
          APPEND    FROMFMSL,UNIXCMND
          APPEND    ".dat ",UNIXCMND
          APPEND    TOFMSL,UNIXCMND
          APPEND    ".dat",UNIXCMND
          RESET     UNIXCMND
          EXECUTE   UNIXCMND,TASKID
.
PCOP9999  RETURN
.
.*************************************************************************
.* CPAC - Copy Actuals to Budget                                         *
.*                     called by : ML2000                                *
.*************************************************************************
CPAC0000  CALL      SCRB0000               * display copy actuals screen
          MOVE      ZERO,MODE
.
CPAC1000  CALL      CPYR0000               * keyin from year
          BRANCH    EXIT,CPAC9999
          BRANCH    MODE,CPAC4000
.
CPAC2000  MOVE      "29",CCOL                * set up YORN variables
          MOVE      "5",CVERT
          MOVE      UNDLN20,DEFYESNO
          CALL      YORN0000                 * standard YES/NO keyin
          MOVE      FYESNO,CASHFLAG
.
          BRANCH    MODE,CPAC4000
.
CPAC3000  CALL      CPBT0000               * keyin copy to budget type
          BRANCH    EXIT,CPAC9999,CPAC9999
          BRANCH    MODE,CPAC4000
.
CPAC4000  CALL      MAINQST                * select item post cancel
          COMPARE   "0",CCITEM             * post?
          GOTO      CPAC5000 IF EQUAL
.
          COMPARE   "-1",CCITEM             * post?
          GOTO      CPAC9999 IF EQUAL
.
          MOVE      ONE,MODE
          BRANCH    CCITEM,CPAC1000,CPAC2000,CPAC3000
          BEEP
          GOTO      CPAC4000
.
CPAC5000  CALL      PCPA0000               * post copy actuals
          GOTO      CPAC0000
.
CPAC9999  RETURN
.*************************************************************************
.* CPYR - Keyin Copy from Year                  Called by CPAC1000       *
.*        Returns EXIT = 0 - valid entry 1 - null or exitchar            *
.*************************************************************************
CPYR0000  CLEAR     FRYRDESC
          MOVE      SP2,FROMYEAR
.
. must set up a ledger code so the year can be validated
.
          MOVE      SP2,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1      * just get the first one in the file
.
          MOVE      "4",CVERT
          MOVE      "29",CCOL
          CALL      KLMCFM00               * keyin copy from year
          BRANCH    EXIT,CPYR8000,CPYR9000
.
          MOVE      FMLCYEAR,FROMYEAR
.
          MATCH     FMLC13DE,SP20          * is there a thirteenth period?
          GOTO      CPYR1000 IF NOT EQUAL
.
. Set up the copy from year description
.
          UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CLEAR     FRYRDESC
          APPEND    "Year Ending ",FRYRDESC
          APPEND    FMLC12DE,FRYRDESC
          APPEND    CPCDATE,FRYRDESC
          RESET     FRYRDESC
          GOTO      CPYR2000
.
CPYR1000  UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CLEAR     FRYRDESC
          APPEND    "Year Ending ",FRYRDESC
          APPEND    FMLC13DE,FRYRDESC
          APPEND    CPCDATE,FRYRDESC
          RESET     FRYRDESC
.
CPYR2000  DISPLAY   *P29:4,*EL,*V2LON,FROMYEAR,SP1,*HOFF,FRYRDESC
          MOVE      FALSE,EXIT
          GOTO      CPYR9999
.
CPYR8000  BRANCH    MODE,CPYR0000       * if in change mode - dont let null exit
.
CPYR9000  MOVE      TRUE,EXIT
.
CPYR9999  RETURN
.*************************************************************************
.* CPBT - Keyin the Copy to Budget type        Called by : CPAC3000      *
.*        Returns : EXIT = 0 - Valid entry  1 - Null or Exitchar hit     *
.*************************************************************************
CPBT0000  MOVE      SP10,TOBUD                 * clear work variables
          MOVE      SP70,TOBDDESC
          MOVE      "29",CCOL                  * set up standard keyin variables
          MOVE      "6",CVERT
          CALL      KBTYFM00                   * standard keyin
          BRANCH    EXIT,CPBT0000,CPBT9999
.
          MOVE      FMBTCODE,TOBUD             * move code entered to work vars
          MOVE      FMBTDESC,TOBDDESC
.
          DISPLAY   *P29:6,*EL,*V2LON,TOBUD,SP1,*HOFF,TOBDDESC
          MOVE      FALSE,EXIT
          GOTO      CPBT9999
.
CPBT9999  RETURN
.*************************************************************************
.* PCPA - Post Copy actuals to Budget              Clalled by CPAC4000   *
.*        Prompts if budget file already contains data                   *
.*************************************************************************
PCPA0000  DISPLAY  *P1:24,*EL,*V2LON,"Posting - "
          CLEAR    TOFILE                       * set up budget file name
          APPEND   FMSB,TOFILE
          APPEND   TOBUD,TOFILE
          RESET    TOFILE
          REP      " 0",TOFILE
.
. Check if the to file has any data in it
.
          OPEN     FMSBUDA1,TOFILE
          MOVE     SP4,KEY4
          CALL     RSFMBU1
          CALL     RKFMBU1
          BRANCH   OVRCD,PCPA1000
.
          DISPLAY  *P1:24,"Data on Budget File - Overwrite ( / ) ? ":
                   *V2LON,*P34:24,"Y",*P36:24,"N"
.
          MOVE     UNDLN20,DEFYESNO
          MOVE     "41",CCOL
          MOVE     "24",CVERT
          CALL     YORN0000            * standard yes/no keyin
          BRANCH   FYESNO,PCPA1000     * yes - do it
          GOTO     PCPA9999
.
PCPA1000  CLEAR    FROMFILE         *set up period amounts file nmame
          APPEND   "fmsp",FROMFILE
          APPEND   FROMYEAR,FROMFILE
          RESET    FROMFILE
          REP      " 0",FROMFILE
.
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     FMSFPSA1,FROMFILE
          TRAPCLR  IO
          BRANCH   OVRCD,PCPA9000
.
          MOVE     SP20,KEY14
          CALL     RSFMFP1
.
PCPA2000  CALL     RKFMFP1           * read next record from period amounts file
          BRANCH   OVRCD,PCPA9999
          DISPLAY  *P11:24,FMFPCULD,"/",FMFPCUAC
.
          MOVE     FMFPCULD,FMBUCULD
          MOVE     FMFPCUAC,FMBUCUAC
          PACK     KEY14,FMBUCULD,FMBUCUAC
          CALL     RDFMBU1           * is the record on file
          BRANCH   OVRCD,PCPA3000
          CALL     MCAB0000          * move period amounts values to bud file
          CALL     UPBUD000          * record present - update
          GOTO     PCPA2000
.
PCPA3000  MOVE     SP2,FMBUCUPR
          CALL     MCAB0000          * move period amounts values to bud file
          MOVE     ONE,AUDTTYPE
          CALL     WAFMBU00          * write to audit file
          CALL     WRFMBU1
          GOTO     PCPA2000
.
PCPA9000  DISPLAY  *P1:24,*EL,"No Actuals Available for Year Selected - ";
          CALL     HITENTER
.
PCPA9999  RETURN
.*************************************************************************
.* MCAB - Move cash or accruals to budget file   Called by PCPA2000,3000 *
.*************************************************************************
MCAB0000  BRANCH   CASHFLAG,MCAB1000
.
          MOVE     FMFPA01,FMBUCA01  * Move accruals to budget file variables
          ADD      FMFPABF,FMBUCA01
          MOVE     FMFPA02,FMBUCA02
          MOVE     FMFPA03,FMBUCA03
          MOVE     FMFPA04,FMBUCA04
          MOVE     FMFPA05,FMBUCA05
          MOVE     FMFPA06,FMBUCA06
          MOVE     FMFPA07,FMBUCA07
          MOVE     FMFPA08,FMBUCA08
          MOVE     FMFPA09,FMBUCA09
          MOVE     FMFPA10,FMBUCA10
          MOVE     FMFPA11,FMBUCA11
          MOVE     FMFPA12,FMBUCA12
          MOVE     FMFPA13,FMBUCA13
.
          MOVE     FMFPA01D,FMBUCB01
          ADD      FMFPABFD,FMBUCB01
          MOVE     FMFPA02D,FMBUCB02
          MOVE     FMFPA03D,FMBUCB03
          MOVE     FMFPA04D,FMBUCB04
          MOVE     FMFPA05D,FMBUCB05
          MOVE     FMFPA06D,FMBUCB06
          MOVE     FMFPA07D,FMBUCB07
          MOVE     FMFPA08D,FMBUCB08
          MOVE     FMFPA09D,FMBUCB09
          MOVE     FMFPA10D,FMBUCB10
          MOVE     FMFPA11D,FMBUCB11
          MOVE     FMFPA12D,FMBUCB12
          MOVE     FMFPA13D,FMBUCB13
.
          MOVE     FMFPA01T,FMBUCC01
          ADD      FMFPABFT,FMBUCC01
          MOVE     FMFPA02T,FMBUCC02
          MOVE     FMFPA03T,FMBUCC03
          MOVE     FMFPA04T,FMBUCC04
          MOVE     FMFPA05T,FMBUCC05
          MOVE     FMFPA06T,FMBUCC06
          MOVE     FMFPA07T,FMBUCC07
          MOVE     FMFPA08T,FMBUCC08
          MOVE     FMFPA09T,FMBUCC09
          MOVE     FMFPA10T,FMBUCC10
          MOVE     FMFPA11T,FMBUCC11
          MOVE     FMFPA12T,FMBUCC12
          MOVE     FMFPA13T,FMBUCC13
.
          GOTO     MCAB9999
.
MCAB1000  MOVE     FMFPC01,FMBUCA01  * Move cash values to budget file variables
          ADD      FMFPCBF,FMBUCA01
          MOVE     FMFPC02,FMBUCA02
          MOVE     FMFPC03,FMBUCA03
          MOVE     FMFPC04,FMBUCA04
          MOVE     FMFPC05,FMBUCA05
          MOVE     FMFPC06,FMBUCA06
          MOVE     FMFPC07,FMBUCA07
          MOVE     FMFPC08,FMBUCA08
          MOVE     FMFPC09,FMBUCA09
          MOVE     FMFPC10,FMBUCA10
          MOVE     FMFPC11,FMBUCA11
          MOVE     FMFPC12,FMBUCA12
          MOVE     FMFPC13,FMBUCA13
.
          MOVE     FMFPC01D,FMBUCB01 * Move cash values to budget file variables
          ADD      FMFPCBFD,FMBUCB01
          MOVE     FMFPC02D,FMBUCB02
          MOVE     FMFPC03D,FMBUCB03
          MOVE     FMFPC04D,FMBUCB04
          MOVE     FMFPC05D,FMBUCB05
          MOVE     FMFPC06D,FMBUCB06
          MOVE     FMFPC07D,FMBUCB07
          MOVE     FMFPC08D,FMBUCB08
          MOVE     FMFPC09D,FMBUCB09
          MOVE     FMFPC10D,FMBUCB10
          MOVE     FMFPC11D,FMBUCB11
          MOVE     FMFPC12D,FMBUCB12
          MOVE     FMFPC13D,FMBUCB13
.
          MOVE     FMFPC01T,FMBUCC01 * Move cash values to budget file variables
          ADD      FMFPCBFT,FMBUCC01
          MOVE     FMFPC02T,FMBUCC02
          MOVE     FMFPC03T,FMBUCC03
          MOVE     FMFPC04T,FMBUCC04
          MOVE     FMFPC05T,FMBUCC05
          MOVE     FMFPC06T,FMBUCC06
          MOVE     FMFPC07T,FMBUCC07
          MOVE     FMFPC08T,FMBUCC08
          MOVE     FMFPC09T,FMBUCC09
          MOVE     FMFPC10T,FMBUCC10
          MOVE     FMFPC11T,FMBUCC11
          MOVE     FMFPC12T,FMBUCC12
          MOVE     FMFPC13T,FMBUCC13
.
MCAB9999  RETURN
.*************************************************************************
.* PADJ - Percentage Adjustment                                          *
.*                     called by : ML3000                                *
.*************************************************************************
PADJ0000  CALL      CLR0000              * clear variables
          CALL      SCRC0000             * display percentage adjustment screen
          MOVE      ZERO,MODE
.
PADJ1000  CALL      PABT0000             * keyin budget type
          BRANCH    EXIT,PADJ9999
          BRANCH    MODE,PADJ5000
.
PADJ2000  CALL      PALD0000             * keyin ledger
          BRANCH    EXIT,PADJ9999
          BRANCH    MODE,PADJ5000
.
PADJ3000  MOVE      ZERO,PERADJST
          KEYIN     *P39:6,*DV,UNDLN9:
                    *P39:6,*V2LON,PERADJST:
                    *P39:6,*DV,PERADJST
          MOVE      PERADJST,CONFACT           * calculate conversion factor`
          ADD       "100",CONFACT
          DIV       "100",CONFACT
          BRANCH    MODE,PADJ5000
          BRANCH    EXIT,PADJ2000
.
PADJ4000  MOVE      ZERO,ROUNDTO
          KEYIN     *P39:7,*DV,UNDLN9:
                    *P39:7,*V2LON,ROUNDTO:
                    *P39:7,*DV,ROUNDTO
          BRANCH    MODE,PADJ5000
          BRANCH    EXIT,PADJ3000
.
PADJ5000  CALL      MAINQST              * select item post cancel
          COMPARE   "0",CCITEM           * post?
          GOTO      PADJ6000 IF EQUAL
.
          COMPARE   "-1",CCITEM           * cancel?
          GOTO      PADJ9999 IF EQUAL
.
          MOVE      ONE,MODE
          BRANCH    CCITEM,PADJ1000,PADJ2000,PADJ3000,PADJ4000
.
          BEEP
          GOTO      PADJ5000
.
PADJ6000  CALL      PPAD0000             * post percentage adjustment
.
PADJ9999  RETURN
.*************************************************************************
.* PABT0000 - Keyin the budget type to adjust  Called by : PADJ1000      *
.*            Returns - EXIT = 0 - valid entry                           *
.*                           = 1 - Null or Exitchar entry                *
.*************************************************************************
PABT0000  MOVE      SP4,FROMBUD            * clear budget type variables
          PACK      FRBDDESC,SP30,SP5  
.
          MOVE      "4",CVERT              * set up standard keyin position
          MOVE      "39",CCOL
.
          CALL      KBTYFM00               * keyin budget type
          BRANCH    EXIT,PABT9000,PABT9000
.
          MOVE      FMBTCODE,FROMBUD
          MOVE      FMBTDESC,FRBDDESC
.
          DISPLAY   *P39:4,*V2LON,FROMBUD,SP1,*HOFF,FRBDDESC
          MOVE      FALSE,EXIT
          GOTO      PABT9999
.
PABT9000  MOVE      TRUE,EXIT              * exitchar or null hit
.
PABT9999  RETURN
.
.*************************************************************************
.* PALD0000 - Keyin the budget type to adjust  Called by : PADJ1000      *
.*            Returns - EXIT = 0 - valid entry                           *
.*                           = 1 - Null or Exitchar entry                *
.*************************************************************************
PALD0000  MOVE      SP4,LEDGCODE            * clear budget type variables
          PACK      LEDGDESC,SP30,SP5  
.
          MOVE      "5",CVERT              * set up standard keyin position
          MOVE      "39",CCOL
.
          CALL      KLMAFM00               * keyin budget type
          BRANCH    EXIT,PALD1000,PALD9000
.
          MOVE      FMLALEDG,LEDGCODE
          MOVE      FMLADESC,LEDGDESC
.
          DISPLAY   *P39:5,*V2LON,LEDGCODE,SP3,*HOFF,LEDGDESC
          MOVE      FALSE,EXIT
          GOTO      PALD9999
.
PALD1000  COMPARE   "3",OPTION
          GOTO      PALD2000 IF EQUAL
.
          MOVE      ONE,EXIT
          GOTO      PALD9999
.
PALD2000  DISPLAY   *P39:5,*EL,*V2LON,"All"
          MOVE      FALSE,EXIT
          GOTO      PALD9999
.
PALD9000  MOVE      TRUE,EXIT              * exitchar or null hit
          COMPARE   "4",OPTION
          GOTO      PALD9999 IF NOT EQUAL
.
          MOVE      TWO,EXIT
.
PALD9999  RETURN
.
.*************************************************************************[
.* PPAD - Post percentage adjustment                                     *
.*        called by : PADJ6000                                           *
.*************************************************************************
PPAD0000  COMPARE   ONE,FMCOCALC
          GOTO      PPAD0010 IF NOT EQUAL
          DISPLAY   *P1:23,*EF,"Automatic Total Account Calculation in Progress"
          GOTO      PPAD0020
PPAD0010  DISPLAY   *P1:23,*EF,"Total Account Recalculatiion Will Be Required"
PPAD0020  DISPLAY   *P1:24,*EL,*V2LON,"Posting - "
.
          PACK      BUDTYPE,FROMBUD,SP70
          PACK      FROMFILE,FMSB,FROMBUD
          REP       " 0",FROMFILE
          PACK      STATFILE,FMSC,FROMBUD
          REP       " 0",STATFILE
          OPEN      FMSSBUA1,STATFILE       * open budget file
          OPEN      FMSBUDA1,FROMFILE       * open budget file
          PACK      KEY14,LEDGCODE,SP20
          CALL      RSFMBU1                 * position at ledger
.
PPAD1000  CALL      RKFMBU1                 * read next record
          BRANCH    OVRCD,PPAD9999
          MATCH     LEDGCODE,SP2            * was all chosen?
          GOTO      PPAD1500 IF EQUAL
          MATCH     FMBUCULD,LEDGCODE       * right ledger?
          GOTO      PPAD9999 IF NOT EQUAL
.
PPAD1500  PACK      KEY14,FMBUCULD,FMBUCUAC
          CALL      RDFMAM1
          BRANCH    OVRCD,PPAD1000
          MATCH     "6",FMAMTYPE
          GOTO      PPAD1000 IF NOT LESS
.
          DISPLAY   *P11:24,FMBUCULD,FMBUCUAC
          MOVE      ONE,FORM2
PPAD2000  LOAD      W12P2,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                FMBUCA13
          MULT      CONFACT,W12P2
          CALL      CRND0000       * Round to Nearest $
          STORE     RESULT,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                 FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                 FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                 FMBUCA13
          ADD       ONE,FORM2
          COMPARE   TEN4,FORM2        * done all periods?
          GOTO      PPAD4000 IF EQUAL * if so, go and post this record
          GOTO      PPAD2000          * if not, do next period
.
PPAD4000  PACK      KEY14,FMBUCULD,FMBUCUAC
          MOVE      KEY14,SAVKEY14
          CALL      MRND0000          * move to dollars and thousands
          CALL      UPBUD000          * update file
.
          COMPARE   ONE,FMCOCALC
          GOTO      PPAD1000 IF NOT EQUAL
.
          MOVE      FMBUCULD,LEDGER
          MOVE      FMBUCUAC,ACCOUNT
          PACK      UTYPE,BUDTYPE,SP70
          PROC      FMSUA000           * set for update
.
          MOVE      SAVKEY14,KEY14
          CALL      RSFMBU1                 * position at ledger
          GOTO      PPAD1000
.
PPAD9999  RETURN
.*************************************************************************
.* ADPR - Percentage adjustment by budget profile  Called by ML4000      *
.*************************************************************************
ADPR0000  CALL      SCRD0000                  * display screen
.
ADPR1000  CALL      PABT0000                  * keyin budget type
          BRANCH    EXIT,ADPR9999
.
          CALL      PALD0000                  * keyin ledger code
          BRANCH    EXIT,ADPR1000,ADPR9999
.
          CLOSE     FMSTMPA1
          EXECUTE   KILLTMP1,TASKID
          EXECUTE   MAKETMP1,TASKID
          OPEN      FMSTMPA1,FILENAM1
          CALL      ABPR0000             * Accept budget profile percent/round
          CALL      SBPR0000             * Select budget profile percent/round
          BRANCH    EXIT,ADPR9999
.
          CALL      PADP0000                  * post adjustment by profile
.
ADPR9999  RETURN
.------------------------------------------------------------
. Post Budget by profile percentage adjustments
.------------------------------------------------------------
PADP0000  COMPARE   ONE,FMCOCALC
          GOTO      PADP0010 IF NOT EQUAL
          DISPLAY   *P1:23,*EF,"Automatic Total Account Calculation in Progress"
          GOTO      PADP0020
PADP0010  DISPLAY   *P1:23,*EF,"Total Account Recalculatiion Will Be Required"
PADP0020  DISPLAY   *P1:24,*EL,*V2LON,"Posting - "
.
          PACK      BUDTYPE,FROMBUD,SP70
          PACK      FROMFILE,FMSB,FROMBUD
          REP       " 0",FROMFILE
          PACK      STATFILE,FMSC,FROMBUD
          REP       " 0",STATFILE
.
          OPEN      FMSBUDA1,FROMFILE       * open budget file
          OPEN      FMSSBUA1,STATFILE       * open budget file
          PACK      KEY14,LEDGCODE,SP20
          CALL      RSFMBU1                 * position at ledger
.
PADP1000  CALL      RKFMBU1                 * read next record
          BRANCH    OVRCD,PADP9999
          MATCH     LEDGCODE,SP2            * was all chosen?
          GOTO      PADP1500 IF EQUAL
          MATCH     FMBUCULD,LEDGCODE       * right ledger?
          GOTO      PADP9999 IF NOT EQUAL
.
PADP1500  PACK      KEY14,FMBUCULD,FMBUCUAC
          CALL      RDFMAM1
          BRANCH    OVRCD,PADP1000
          MATCH     "6",FMAMTYPE
          GOTO      PADP1000 IF NOT LESS
.
          DISPLAY   *P11:24,FMBUCULD,FMBUCUAC
          PACK      KEY9,LEDGCODE,FMBTYEAR,FMBUCUPR
          CALL      RDTMP1
          BRANCH    OVRCD,PADP1000
          MOVE      TMPRND,ROUNDTO
          MOVE      TMPPERC,CONFACT
          ADD       "100",CONFACT
          DIV       "100",CONFACT
          MOVE      ONE,FORM2
.
PADP2000  LOAD      W12P2,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                FMBUCA13
          MULT      CONFACT,W12P2
          CALL      CRND0000       * Round to Nearest $
          STORE     RESULT,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                 FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                 FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                 FMBUCA13
          ADD       ONE,FORM2
          COMPARE   TEN4,FORM2            * done all periods?
          GOTO      PADP2000 IF NOT EQUAL 
          CALL      MRND0000          * move to dollars and thousands
          PACK      SAVKEY14,FMBUCULD,FMBUCUAC
          CALL      UPBUD000          * update file
.
          COMPARE   ONE,FMCOCALC
          GOTO      PADP1000 IF NOT EQUAL
.
          MOVE      FMBUCULD,LEDGER
          MOVE      FMBUCUAC,ACCOUNT
          PACK      UTYPE,BUDTYPE,SP70
          PROC      FMSUA000           * set for update
.
          MOVE      SAVKEY14,KEY14
          CALL      RSFMBU1                 * position at ledger
          GOTO      PADP1000
.
PADP9999  RETURN
.*************************************************************************
.* ABPR - Accept the budget profiles             Called by ADPR         *
.*************************************************************************
ABPR0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Budget Profile ":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
          MOVE      "8",CVERT
          MOVE      FROMBUD,KEY4         * Get financial year from budget
          CALL      RDFMBT1              * type file
          BRANCH    OVRCD,ABPR9999
          MOVE      ONE,DISPCNT
.
          PACK      KEY9,LEDGCODE,FMBTYEAR,SP10
          CALL      RSFMBP1 
ABPR1000  CALL      RKFMBP1              * read next budget profile
          BRANCH    OVRCD,ABPR9999
          MATCH     LEDGCODE,FMBPLEDG    * the right ledg?
          GOTO      ABPR9999 IF NOT EQUAL
          MATCH     FMBTYEAR,FMBPYEAR    * the right year?
          GOTO      ABPR9999 IF NOT EQUAL
.
          DISPLAY   *P1:CVERT,*V2LON,DISPCNT,*HOFF,".  ",FMBPCODE,*HOFF:
                    SP1,FMBPDESC
          MOVE      "53",CCOL
          CALL      KPER0000           * Keyin Percentage
          BRANCH    EXIT,ABPR9999
          MOVE      "68",CCOL
          CALL      KRND0000           * Keyin Round to
          BRANCH    EXIT,ABPR9999
          PACK      KEY9,LEDGCODE,FMBTYEAR,FMBPCODE
          UNPACK    KEY9,TMPLEDG,TMPYEAR,TMPPROF
          CALL      RATMP1
          BRANCH    OVRCD,ABPR1500
          CALL      UPTMP1
          GOTO      ABPR2000
.
ABPR1500  CALL      WRTMP1
ABPR2000  ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "23",CVERT               * full screen?
          GOTO      ABPR1000 IF NOT EQUAL    
          MOVE      "8",CVERT
          MOVE      ONE,DISPCNT
          DISPLAY   *P1:CVERT,*EF
          GOTO      ABPR1000
.
ABPR9999  RETURN
.
.*************************************************************************
.* SBPR - Select the budget profiles             Called by ADPR         *
.*************************************************************************
SBPR0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Budget Profile ":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
.
          MOVE      ZERO,XITEMNO
          MOVE      ZERO,PAGENO
          MOVE      "7",CVERT
          PACK      KEY9,SP10
          CALL      RSTMP1
.
SBPR1000  CALL      RKTMP1
          BRANCH    OVRCD,SBPR1200
          PACK      KEY9,TMPLEDG,TMPYEAR,TMPPROF
          CALL      RDFMBP1
          ADD       ONE,XITEMNO
          ADD       ONE,CVERT
          STORE     KEY9,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15
          DISPLAY   *P1:CVERT,*V2LON,XITEMNO,*HOFF,".  ",TMPPROF,*HOFF:
                    SP1,FMBPDESC,*P53:CVERT,TMPPERC,*P68:CVERT,TMPRND
          COMPARE   "15",XITEMNO
          GOTO      SBPR1000 IF NOT EQUAL
.
SBPR1200  MOVE      ZERO,CCITEM
          MOVE      SP2,CCITEMD
          DISPLAY   *P1:24,*EL,"Select Item, (";
          COMPARE   "15",XITEMNO
          GOTO      SBPR1225 IF NOT EQUAL
          DISPLAY   *V2LON,"N",*HOFF,")ext page, (";
.
SBPR1225  COMPARE   ZERO,PAGENO
          GOTO      SBPR1226 IF EQUAL
          DISPLAY   *V2LON,"L",*HOFF,")ast page, (";
.
SBPR1226  KEYIN     *V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel ? ",*JR,*V2LON,CCITEMD;
.
          RESET     CCITEMD
          GOTO      SBPR1230 IF EOS      * Next Page
          REP       UPPLOW,CCITEMD
          MATCH     "  N",CCITEMD        * Next Page
          GOTO      SBPR1230 IF EQUAL
          MATCH     "  L",CCITEMD        * Previous Page
          GOTO      SBPR1235 IF EQUAL
          MATCH     "  P",CCITEMD        * Post
          GOTO      SBPR9000 IF EQUAL
          MATCH     "  C",CCITEMD        * Cancel
          GOTO      SBPR9100 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      SBPR1290 IF NOT EQUAL  * Invalid Entry
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      SBPR1290 IF LESS       * Invalid Entry
          COMPARE   CCITEM,XITEMNO
          GOTO      SBPR5000 IF LESS       * Additional Item
          GOTO      SBPR1292               * Item Selected
.
SBPR1230  COMPARE   "15",XITEMNO            * Next Page Selected
          GOTO      SBPR1290 IF NOT EQUAL  * No Next Page Invalid Selection
          ADD       ONE,PAGENO
          MOVE      ZERO,XITEMNO            
          MOVE      SEVEN,CVERT
          DISPLAY   *P1:8,*EF
          GOTO      SBPR1000
.
SBPR1235  COMPARE   ZERO,PAGENO           * Previous Page Selected
          GOTO      SBPR1290 IF EQUAL      * No Previous Page Invalid Selection
          DISPLAY   *P1:8,*EF
          SUB       ONE,PAGENO
          COMPARE   "15",XITEMNO      
          GOTO      SBPR1236 IF EQUAL 
          CALL      RPTMP1             * Initial reverse read
.
SBPR1236  CALL      RPTMP1 
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      SBPR1236 IF NOT EQUAL
          COMPARE   SEVEN,CVERT
          GOTO      SBPR1000 IF EQUAL   * Display Down The Page
          MOVE      SEVEN,CVERT
          MOVE      "15",XITEMNO
          GOTO      SBPR1236
.
SBPR1290  BEEP                          * invalid entry
          GOTO      SBPR1200
.
SBPR1292  MOVE      SP70,KEY9
          LOAD      KEY9,CCITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15
          MOVE      CVERT,SVERT
          MOVE      CCITEM,CVERT
          ADD       SEVEN,CVERT
          CALL      RDTMP1
          BRANCH    OVRCD,SBPR5000
          MOVE      "53",CCOL
          CALL      KPER0000
          BRANCH    EXIT,SBPR0000
          MOVE      "68",CCOL
          CALL      KRND0000
          BRANCH    EXIT,SBPR0000
          CALL      UPTMP1
          MOVE      SVERT,CVERT
          GOTO      SBPR1200
.
SBPR5000  CALL      ADDP0000
          GOTO      SBPR0000
.
SBPR9000  MOVE      ZERO,EXIT
          GOTO      SBPR9999
SBPR9100  MOVE      ONE,EXIT
SBPR9999  RETURN
.----------------------------------------
.Add Additional profiles
.----------------------------------------
ADDP0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Budget Profile ":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
          MOVE      "~~~~~~~~~~",KEY9
          CALL      RSTMP1
          CALL      RPTMP1
          MOVE      "8",CVERT
          MOVE      ONE,DISPCNT
.
          PACK      KEY9,TMPLEDG,TMPYEAR,TMPPROF
          CALL      RSFMBP1 
ADDP1000  CALL      RKFMBP1              * read next budget profile
          BRANCH    OVRCD,ADDP8000
          MATCH     LEDGCODE,FMBPLEDG    * the right ledg?
          GOTO      ADDP8000 IF NOT EQUAL
          MATCH     FMBTYEAR,FMBPYEAR    * the right year?
          GOTO      ADDP8000 IF NOT EQUAL
.
          DISPLAY   *P1:CVERT,*V2LON,DISPCNT,*HOFF,".  ",FMBPCODE,*HOFF:
                    SP1,FMBPDESC
          MOVE      "53",CCOL
          CALL      KPER0000           * Keyin Percentage
          BRANCH    EXIT,ADDP9999
          MOVE      "68",CCOL
          CALL      KRND0000           * Keyin Round to
          BRANCH    EXIT,ADDP9999
          PACK      KEY9,LEDGCODE,FMBTYEAR,FMBPCODE
          UNPACK    KEY9,TMPLEDG,TMPYEAR,TMPPROF
          CALL      RATMP1
          BRANCH    OVRCD,ADDP1500
          CALL      UPTMP1
          GOTO      ADDP2000
.
ADDP1500  CALL      WRTMP1
ADDP2000  ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "23",CVERT               * full screen?
          GOTO      ADDP1000 IF NOT EQUAL    
          MOVE      "8",CVERT
          MOVE      ONE,DISPCNT
          DISPLAY   *P1:CVERT,*EF
          GOTO      ADDP1000
ADDP8000  
.
ADDP9999  RETURN
.
.------------------------------------------------------------
. Keyin for percentage and round to for profile adjustments
.------------------------------------------------------------
KPER0000  KEYIN     *PCCOL:CVERT,*DV,UNDLN9:
                    *PCCOL:CVERT,*V2LON,XIM9
          MATCH     EXITCHAR,XIM9
          GOTO      KPER9000 IF EQUAL
          MOVE      ZERO,TMPPERC
          MOVE      XIM9,TMPPERC
          DISPLAY   *PCCOL:CVERT,TMPPERC
          GOTO      KPER9100
KPER9000  MOVE      ONE,EXIT
          GOTO      KPER9999
KPER9100  MOVE      ZERO,EXIT
KPER9999  RETURN
.
KRND0000  KEYIN     *PCCOL:CVERT,*DV,UNDLN9:
                    *PCCOL:CVERT,*V2LON,XIM9
          MATCH     EXITCHAR,XIM9
          GOTO      KRND9000 IF EQUAL
          MOVE      ZERO,TMPRND
          MOVE      XIM9,TMPRND
          DISPLAY   *PCCOL:CVERT,TMPRND
          GOTO      KRND9100
KRND9000  MOVE      ONE,EXIT
          GOTO      KRND9999
KRND9100  MOVE      ZERO,EXIT
KRND9999  RETURN
.------------------------------------------------------------
. Percentage adjustment by Cost Centre
.------------------------------------------------------------
ADCC0000  CALL      SCRD0000             * display screen
.
ADCC1000  CALL      PABT0000             * keyin budget type
          BRANCH    EXIT,ADCC9999
.
          CALL      PALD0000             * keyin ledger code
          BRANCH    EXIT,ADCC1000,ADCC9999
.
          CLOSE     FMSTMPA2
          EXECUTE   KILLTMP2,TASKID
          EXECUTE   MAKETMP2,TASKID
          OPEN      FMSTMPA2,FILENAM2
          CALL      ACCP0000             * Accept Cost Centre percent/round
          CALL      SCCP0000             * Select Cost Centre percent/round
          BRANCH    EXIT,ADCC9999
.
          MOVE      "0",SUBJIND
          CALL      PACC0000             * post adjustment by Cost Centre
.
ADCC9999  RETURN
.------------------------------------------------------------
. Accept Cost Centre Percentages
.------------------------------------------------------------
ACCP0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Cost Centre":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
          MOVE      "8",CVERT
          MOVE      ONE,LITEMNO
.
ACCP1000  DISPLAY   *P1:CVERT,*V2LON,LITEMNO,*HOFF,". "
          MOVE      "6",CCOL
          CALL      KCCAFM00
          BRANCH    EXIT,ACCP9999,ACCP9999
          DISPLAY   *P6:CVERT,FMCCCOCE,SP1,FMCCDESC
          PACK      KEY12,FMCCCOCE
          CALL      RATMP2
          BRANCH    OVRCD,ACCP1200
          DISPLAY   *P1:24,*EL,"Cost Centre Already Processed - ";
          CALL      HITENTER
          GOTO      ACCP1000
.
ACCP1200  MOVE      "53",CCOL
          CALL      KPER0000           * Keyin Percentage
          BRANCH    EXIT,ACCP9999
          MOVE      "68",CCOL
          CALL      KRND0000           * Keyin Round to
          BRANCH    EXIT,ACCP9999
          MOVE      FMCCCOCE,TMPCODE
          PACK      KEY12,TMPCODE
          CALL      WRTMP2
.
          ADD       ONE,CVERT
          ADD       ONE,LITEMNO
          COMPARE   "23",CVERT               * full screen?
          GOTO      ACCP1000 IF NOT EQUAL    
          MOVE      "8",CVERT
          MOVE      ONE,LITEMNO
          DISPLAY   *P1:CVERT,*EF
          GOTO      ACCP1000
.
ACCP9999  RETURN
.*************************************************************************
.* SCCP - Select Cost Centre                     Called by ACCR         *
.*************************************************************************
SCCP0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Cost Centre":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
.
          MOVE      ZERO,XITEMNO
          MOVE      ZERO,PAGENO
          MOVE      "7",CVERT
          PACK      KEY12,SP10,SP10
          CALL      RSTMP2
.
SCCP1000  CALL      RKTMP2
          BRANCH    OVRCD,SCCP1200
          PACK      KEY14,LEDGCODE,TMPCODE
          CALL      RDFMCC1
          ADD       ONE,XITEMNO
          ADD       ONE,CVERT
          STORE     TMPCODE,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15
          DISPLAY   *P1:CVERT,*V2LON,XITEMNO,*HOFF,".  ",TMPCODE,*HOFF:
                    SP1,FMCCDESC,*P53:CVERT,TMPPERC,*P68:CVERT,TMPRND
          COMPARE   "15",XITEMNO
          GOTO      SCCP1000 IF NOT EQUAL
.
SCCP1200  MOVE      ZERO,CCITEM
          MOVE      SP2,CCITEMD
          DISPLAY   *P1:24,*EL,"Select Item, (";
          COMPARE   "15",XITEMNO
          GOTO      SCCP1225 IF NOT EQUAL
          DISPLAY   *V2LON,"N",*HOFF,")ext page, (";
.
SCCP1225  COMPARE   ZERO,PAGENO
          GOTO      SCCP1226 IF EQUAL
          DISPLAY   *V2LON,"L",*HOFF,")ast page, (";
.
SCCP1226  KEYIN     *V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel ? ",*JR,*V2LON,CCITEMD;
.
          RESET     CCITEMD
          GOTO      SCCP1230 IF EOS      * Next Page
          REP       UPPLOW,CCITEMD
          MATCH     "  N",CCITEMD        * Next Page
          GOTO      SCCP1230 IF EQUAL
          MATCH     "  L",CCITEMD        * Previous Page
          GOTO      SCCP1235 IF EQUAL
          MATCH     "  P",CCITEMD        * Post
          GOTO      SCCP9000 IF EQUAL
          MATCH     "  C",CCITEMD        * Cancel
          GOTO      SCCP9100 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      SCCP1290 IF NOT EQUAL  * Invalid Entry
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      SCCP1290 IF LESS       * Invalid Entry
          COMPARE   CCITEM,XITEMNO
          GOTO      SCCP5000 IF LESS       * Additional Item
          GOTO      SCCP1292               * Item Selected
.
SCCP1230  COMPARE   "15",XITEMNO            * Next Page Selected
          GOTO      SCCP1290 IF NOT EQUAL  * No Next Page Invalid Selection
          ADD       ONE,PAGENO
          MOVE      ZERO,XITEMNO            
          MOVE      SEVEN,CVERT
          DISPLAY   *P1:8,*EF
          GOTO      SCCP1000
.
SCCP1235  COMPARE   ZERO,PAGENO           * Previous Page Selected
          GOTO      SCCP1290 IF EQUAL      * No Previous Page Invalid Selection
          DISPLAY   *P1:8,*EF
          SUB       ONE,PAGENO
          COMPARE   "15",XITEMNO      
          GOTO      SCCP1236 IF EQUAL 
          CALL      RPTMP2             * Initial reverse read
.
SCCP1236  CALL      RPTMP2 
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      SCCP1236 IF NOT EQUAL
          COMPARE   SEVEN,CVERT
          GOTO      SCCP1000 IF EQUAL   * Display Down The Page
          MOVE      SEVEN,CVERT
          MOVE      "15",XITEMNO
          GOTO      SCCP1236
.
SCCP1290  BEEP                          * invalid entry
          GOTO      SCCP1200
.
SCCP1292  MOVE      SP70,KEY12
          LOAD      KEY12,CCITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15
          MOVE      CVERT,SVERT
          MOVE      CCITEM,CVERT
          ADD       SEVEN,CVERT
          CALL      RDTMP2
          BRANCH    OVRCD,SCCP5000
          MOVE      "53",CCOL
          CALL      KPER0000
          BRANCH    EXIT,SCCP0000
          MOVE      "68",CCOL
          CALL      KRND0000
          BRANCH    EXIT,SCCP0000
          CALL      UPTMP2
          MOVE      SVERT,CVERT
          GOTO      SCCP1200
.
SCCP5000  COMPARE   "15",CVERT
          GOTO      SCCP5100 IF NOT EQUAL
          MOVE      ZERO,XITEMNO
          MOVE      "7",CVERT
          DISPLAY   *P1:8,*EF
.
SCCP5100  ADD       ONE,CVERT
          ADD       ONE,XITEMNO
SCCP5200  DISPLAY   *P1:CVERT,*V2LON,XITEMNO,*HOFF,". "
          MOVE      "6",CCOL
          CALL      KCCAFM00
          BRANCH    EXIT,SCCP5999,SCCP5999
          DISPLAY   *P6:CVERT,FMCCCOCE,SP1,FMCCDESC
          PACK      KEY12,FMCCCOCE
          CALL      RATMP2
          BRANCH    OVRCD,SCCP5300
          DISPLAY   *P1:24,*EL,"Cost Centre Already Processed - ";
          CALL      HITENTER
          GOTO      SCCP5200
.
SCCP5300  MOVE      "53",CCOL
          CALL      KPER0000           * Keyin Percentage
          BRANCH    EXIT,SCCP5999
          MOVE      "68",CCOL
          CALL      KRND0000           * Keyin Round to
          BRANCH    EXIT,SCCP5999
          MOVE      FMCCCOCE,TMPCODE
          PACK      KEY12,TMPCODE
          CALL      WRTMP2
.
SCCP5999  GOTO      SCCP0000
.
SCCP9000  MOVE      ZERO,EXIT
          GOTO      SCCP9999
SCCP9100  MOVE      ONE,EXIT
SCCP9999  RETURN
.------------------------------------------------------------
. Post Cost Centre or Subjective Percentage Adjustment
.------------------------------------------------------------
PACC0000  COMPARE   ONE,FMCOCALC
          GOTO      PACC0010 IF NOT EQUAL
          DISPLAY   *P1:23,*EF,"Automatic Total Account Calculation in Progress"
          GOTO      PACC0020
.
PACC0010  DISPLAY   *P1:23,*EF,"Total Account Recalculatiion Will Be Required"
.
PACC0020  DISPLAY   *P1:24,*EL,*V2LON,"Posting - ";
.
          PACK      BUDTYPE,FROMBUD,SP70
          PACK      FROMFILE,FMSB,FROMBUD
          REP       " 0",FROMFILE
          PACK      STATFILE,FMSC,FROMBUD
          REP       " 0",STATFILE
          OPEN      FMSSBUA1,STATFILE       * open budget file
          OPEN      FMSBUDA1,FROMFILE       * open budget file
.
          PACK      KEY12,SP70
          CALL      RSTMP2
.
PACC1000  CALL      RKTMP2
          BRANCH    OVRCD,PACC9999
.
          PACK      KEY31,LEDGCODE,TMPCODE,SP70
          COMPARE   ONE,SUBJIND
          CALL      RSFMXC2 IF EQUAL
          COMPARE   ONE,SUBJIND
          CALL      RSFMXC3 IF NOT EQUAL
.
PACC2000  COMPARE   ONE,SUBJIND
          CALL      RKFMXC2 IF EQUAL
          COMPARE   ONE,SUBJIND
          CALL      RKFMXC3 IF NOT EQUAL
.
          PACK      KEY12,FMXCCOS,SP70      * get desired cc or subj
          LOAD      KEY12,SUBJIND,FMXCSUB
.
          BRANCH    OVRCD,PACC1000          * no more records ?
          MATCH     FMXCLED,LEDGCODE
          GOTO      PACC1000 IF NOT EQUAL
          MATCH     KEY12,TMPCODE
          GOTO      PACC1000 IF NOT EQUAL
.
          PACK      COSTCODE,FMXCCOS,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          CALL      BCOD0000                * build account code
          DISPLAY   *P11:24,*V2LON,FMXCLED,SLASH,ACCOUNT,*EL;
.
          PACK      KEY14,FMXCLED,ACCOUNT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,PACC2000
          MATCH     "6",FMAMTYPE
          GOTO      PACC2000 IF NOT LESS
          PACK      KEY14,FMXCLED,ACCOUNT,SP70
          CALL      RDFMBU1
          BRANCH    OVRCD,PACC2000
.
          MOVE      TMPPERC,CONFACT
          ADD       "100",CONFACT
          DIV       "100",CONFACT
          MOVE      TMPRND,ROUNDTO
          MOVE      ZERO,TOTALBUD
          MOVE      ZERO,TOTALRES
          MOVE      ONE,FORM2
.
PACC3000  LOAD      W12P2,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                FMBUCA13
          ADD       W12P2,TOTALBUD
          MULT      CONFACT,W12P2
          CALL      CRND0000       * Round to Nearest $
          ADD       RESULT,TOTALRES
          STORE     RESULT,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                 FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                 FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                 FMBUCA13
          ADD       ONE,FORM2
          COMPARE   TEN4,FORM2        * done all periods?
          GOTO      PACC3000 IF NOT EQUAL
.
          MOVE      TOTALBUD,W12P2
          MULT      CONFACT,W12P2
          CALL      CRND0000       * Round to Nearest $
          SUB       RESULT,TOTALRES
          COMPARE   ZERO,TOTALRES
          CALL      FIXB0000 IF NOT EQUAL   * fix total budget
.
          PACK      KEY14,FMBUCULD,FMBUCUAC
          MOVE      KEY14,SAVKEY14
          CALL      MRND0000          * move to dollars and thousands
          CALL      UPBUD000          * update file
.
          COMPARE   ONE,FMCOCALC
          GOTO      PACC2000 IF NOT EQUAL
.
          MOVE      FMBUCULD,LEDGER
          MOVE      FMBUCUAC,ACCOUNT
          PACK      UTYPE,BUDTYPE,SP70
          PROC      FMSUA000           * set for update
.
          MOVE      SAVKEY14,KEY14
          CALL      RSFMBU1                 * position at ledger
          GOTO      PACC2000
.
PACC9999  RETURN
.**********************************************************************
.  FIXB - Fix total budget                             Called By PACC
.**********************************************************************
FIXB0000  MOVE      "12",FORM2
          ADD       FMLAPERS,FORM2
.
FIXB0100  LOAD      RESULT,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                 FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                 FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                 FMBUCA13
          COMPARE   TOTALRES,RESULT
          GOTO      FIXB0200 IF NOT LESS
          SUB       RESULT,TOTALRES
          STORE     RESULT,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                 FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                 FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                 FMBUCA13
          SUB       ONE,FORM2
          COMPARE   FORM2,ZERO
          GOTO      FIXB0100 IF LESS
          GOTO      FIXB9999
.
FIXB0200  SUB       TOTALRES,RESULT
          STORE     RESULT,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                 FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                 FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                 FMBUCA13
.
FIXB9999  RETURN
.****************************************************************************
.  BCOD - get account code from subjective and cost codes    Called by lots
.        Requires - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD2B  (separater char)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - ACCOUNT   (account code)
.****************************************************************************
BCOD0000  STORE     COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      ACCOUNT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          COMPARE   FMSUUD2A,ONE
          GOTO      BCOD1000 IF NOT EQUAL         * separator char in use ?
.
          PACK      ACCOUNT,ACCOUNT,FMSUUD2B      * include sep. char
.
BCOD1000  PACK      ACCOUNT,ACCOUNT,SUBJCODE,SP70 * add subj code
.
BCOD9999  RETURN
.------------------------------------------------------------
. Percentage adjustment by Subjective
.------------------------------------------------------------
PSUB0000  CALL      SCRD0000             * display screen
.
PSUB1000  CALL      PABT0000             * keyin budget type
          BRANCH    EXIT,PSUB9999
.
          CALL      PALD0000             * keyin ledger code
          BRANCH    EXIT,PSUB1000,PSUB9999
.
          CLOSE     FMSTMPA2
          EXECUTE   KILLTMP2,TASKID
          EXECUTE   MAKETMP2,TASKID
          OPEN      FMSTMPA2,FILENAM2
          CALL      ASUB0000             * Accept Subj percent/round
          CALL      SSUB0000             * Select Subj percent/round
          BRANCH    EXIT,PSUB9999
.
          MOVE      "1",SUBJIND
          CALL      PACC0000             * post adjustment by Subj
.
PSUB9999  RETURN
.
.------------------------------------------------------------
. Accept Subjective Percentages
.------------------------------------------------------------
ASUB0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Subjective":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
          MOVE      "8",CVERT
          MOVE      ONE,LITEMNO
.
ASUB1000  DISPLAY   *P1:CVERT,*V2LON,LITEMNO,*HOFF,". "
          MOVE      "6",CCOL
          CALL      KSBAFM00
          BRANCH    EXIT,ASUB9999,ASUB9999
          DISPLAY   *P6:CVERT,FMSASUBJ,SP1,FMSADESC
          PACK      KEY12,FMSASUBJ
          CALL      RATMP2
          BRANCH    OVRCD,ASUB1200
          DISPLAY   *P1:24,*EL,"Subjective Already Processed - ";
          CALL      HITENTER
          GOTO      ASUB1000
.
ASUB1200  MOVE      "53",CCOL
          CALL      KPER0000           * Keyin Percentage
          BRANCH    EXIT,ASUB9999
          MOVE      "68",CCOL
          CALL      KRND0000           * Keyin Round to
          BRANCH    EXIT,ASUB9999
          MOVE      FMSASUBJ,TMPCODE
          PACK      KEY12,TMPCODE
          CALL      WRTMP2
.
          ADD       ONE,CVERT
          ADD       ONE,LITEMNO
          COMPARE   "23",CVERT               * full screen?
          GOTO      ASUB1000 IF NOT EQUAL    
          MOVE      "8",CVERT
          MOVE      ONE,LITEMNO
          DISPLAY   *P1:CVERT,*EF
          GOTO      ASUB1000
.
ASUB9999  RETURN
.*************************************************************************
.* SSUB - Select Subjective
.*************************************************************************
SSUB0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Subjective ":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
.
          MOVE      ZERO,XITEMNO
          MOVE      ZERO,PAGENO
          MOVE      "7",CVERT
          PACK      KEY12,SP10,SP10
          CALL      RSTMP2
.
SSUB1000  CALL      RKTMP2
          BRANCH    OVRCD,SSUB1200
          PACK      KEY14,LEDGCODE,TMPCODE
          CALL      RDFMSA1
          ADD       ONE,XITEMNO
          ADD       ONE,CVERT
          STORE     TMPCODE,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15
          DISPLAY   *P1:CVERT,*V2LON,XITEMNO,*HOFF,".  ",TMPCODE,*HOFF:
                    SP1,FMSADESC,*P53:CVERT,TMPPERC,*P68:CVERT,TMPRND
          COMPARE   "15",XITEMNO
          GOTO      SSUB1000 IF NOT EQUAL
.
SSUB1200  MOVE      ZERO,CCITEM
          MOVE      SP2,CCITEMD
          DISPLAY   *P1:24,*EL,"Select Item, (";
          COMPARE   "15",XITEMNO
          GOTO      SSUB1225 IF NOT EQUAL
          DISPLAY   *V2LON,"N",*HOFF,")ext page, (";
.
SSUB1225  COMPARE   ZERO,PAGENO
          GOTO      SSUB1226 IF EQUAL
          DISPLAY   *V2LON,"L",*HOFF,")ast page, (";
.
SSUB1226  KEYIN     *V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel ? ",*JR,*V2LON,CCITEMD;
.
          RESET     CCITEMD
          GOTO      SSUB1230 IF EOS      * Next Page
          REP       UPPLOW,CCITEMD
          MATCH     "  N",CCITEMD        * Next Page
          GOTO      SSUB1230 IF EQUAL
          MATCH     "  L",CCITEMD        * Previous Page
          GOTO      SSUB1235 IF EQUAL
          MATCH     "  P",CCITEMD        * Post
          GOTO      SSUB9000 IF EQUAL
          MATCH     "  C",CCITEMD        * Cancel
          GOTO      SSUB9100 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      SSUB1290 IF NOT EQUAL  * Invalid Entry
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      SSUB1290 IF LESS       * Invalid Entry
          COMPARE   CCITEM,XITEMNO
          GOTO      SSUB5000 IF LESS       * Additional Item
          GOTO      SSUB1292               * Item Selected
.
SSUB1230  COMPARE   "15",XITEMNO            * Next Page Selected
          GOTO      SSUB1290 IF NOT EQUAL  * No Next Page Invalid Selection
          ADD       ONE,PAGENO
          MOVE      ZERO,XITEMNO            
          MOVE      SEVEN,CVERT
          DISPLAY   *P1:8,*EF
          GOTO      SSUB1000
.
SSUB1235  COMPARE   ZERO,PAGENO           * Previous Page Selected
          GOTO      SSUB1290 IF EQUAL      * No Previous Page Invalid Selection
          DISPLAY   *P1:8,*EF
          SUB       ONE,PAGENO
          COMPARE   "15",XITEMNO      
          GOTO      SSUB1236 IF EQUAL 
          CALL      RPTMP2             * Initial reverse read
.
SSUB1236  CALL      RPTMP2 
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      SSUB1236 IF NOT EQUAL
          COMPARE   SEVEN,CVERT
          GOTO      SSUB1000 IF EQUAL   * Display Down The Page
          MOVE      SEVEN,CVERT
          MOVE      "15",XITEMNO
          GOTO      SSUB1236
.
SSUB1290  BEEP                          * invalid entry
          GOTO      SSUB1200
.
SSUB1292  MOVE      SP70,KEY12
          LOAD      KEY12,CCITEM,ST1,ST2,ST3,ST4,ST5:
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15
          MOVE      CVERT,SVERT
          MOVE      CCITEM,CVERT
          ADD       SEVEN,CVERT
          CALL      RDTMP2
          BRANCH    OVRCD,SSUB5000
          MOVE      "53",CCOL
          CALL      KPER0000
          BRANCH    EXIT,SSUB0000
          MOVE      "68",CCOL
          CALL      KRND0000
          BRANCH    EXIT,SSUB0000
          CALL      UPTMP2
          MOVE      SVERT,CVERT
          GOTO      SSUB1200
.
SSUB5000  COMPARE   "15",CVERT
          GOTO      SSUB5100 IF NOT EQUAL
          MOVE      ZERO,XITEMNO
          MOVE      "7",CVERT
          DISPLAY   *P1:8,*EF
.
SSUB5100  ADD       ONE,CVERT
          ADD       ONE,XITEMNO
.
SSUB5200  DISPLAY   *P1:CVERT,*V2LON,XITEMNO,*HOFF,". "
          MOVE      "6",CCOL
          CALL      KSBAFM00
          BRANCH    EXIT,SSUB5999,SSUB5999
          DISPLAY   *P6:CVERT,FMSASUBJ,SP1,FMSADESC
          PACK      KEY12,FMSASUBJ
          CALL      RATMP2
          BRANCH    OVRCD,SSUB5300
          DISPLAY   *P1:24,*EL,"Subjective Already Processed - ";
          CALL      HITENTER
          GOTO      SSUB5200
.
SSUB5300  MOVE      "53",CCOL
          CALL      KPER0000           * Keyin Percentage
          BRANCH    EXIT,SSUB5999
          MOVE      "68",CCOL
          CALL      KRND0000           * Keyin Round to
          BRANCH    EXIT,SSUB5999
          MOVE      FMSASUBJ,TMPCODE
          PACK      KEY12,TMPCODE
          CALL      WRTMP2
.
SSUB5999  GOTO      SSUB0000
.
SSUB9000  MOVE      ZERO,EXIT
          GOTO      SSUB9999
.
SSUB9100  MOVE      ONE,EXIT
.
SSUB9999  RETURN
.------------------------------------------------------------
. Percentage adj Cost Cent within Subj
.------------------------------------------------------------
ACSB0000  CALL      SCRD0000             * display screen
.
ACSB1000  CALL      PABT0000             * keyin budget type
          BRANCH    EXIT,ACSB9999
.
          CALL      PALD0000             * keyin ledger code
          BRANCH    EXIT,ACSB1000,ACSB9999
.
ACSB9999  RETURN
.*************************************************************************
.* Screen Layouts
.*************************************************************************
.
. Copy budget to budget
.
SCRA0000  DISPLAY   *P1:4,*EF,*V2LON," 1",*HOFF,". Copy From Budget Type : ":
                        *P1:5,*V2LON," 2",*HOFF,". Copy To   Budget Type : "
          RETURN
.
. Copy Actuals to Budget
.
SCRB0000  DISPLAY   *P1:4,*EF,*V2LON," 1",*HOFF,". Copy Actuals from Year: ":
                        *P1:5,*V2LON," 2",*HOFF,". Cash (Y/N)            : ":
                        *P1:6,*V2LON," 3",*HOFF,". Copy to Budget Type   : "
          RETURN
.
. Adjust budget by percentage
.
SCRC0000  DISPLAY  *P1:4,*EF:
                   *P1:4,*V2LON," 1",*HOFF,". Budget Type to Adjust          :":
                   *P1:5,*V2LON," 2",*HOFF,". Ledger (Hit Enter for All)     :":
                   *P1:6,*V2LON," 3",*HOFF,". Adjustment Percentage          :":
                   *P1:7,*V2LON," 4",*HOFF,". Round to Nearest               :"
          RETURN
.
. Adjust budget by percentage for each profile
. Adjust budget by percentage for each Subjective
. Adjust budget by percentage for each Cost Centre
. Adjust budget by percentage for each Cost Centre wuthin subjective
.
SCRD0000  DISPLAY   *P1:4,*EF,*P5:4,"Budget Type to Adjust           :":
                              *P5:5,"Ledger                          :"
          RETURN
.*************************************************************************
.* REDISPLAYS FOR STANDARD KEYINS                                        *
.*************************************************************************
RBTYFM00  BRANCH    OPTION,RBTYFM10,RBTYFM20,RBTYFM30 * which screen to redisp?
          GOTO      RBTYFM40
.
RBTYFM10  CALL      SCRA0000
          DISPLAY   *P29:4,*V2LON,FROMBUD,SP1,*HOFF,FRBDDESC:
                    *P29:5,*V2LON,TOBUD,SP1,*HOFF,TOBDDESC
          GOTO      RBTYFM99
.
RBTYFM20  CALL      SCRB0000
          MOVE      NO,YESNO
          LOAD      YESNO,CASHFLAG,YES
          DISPLAY   *P29:4,*V2LON,FROMYEAR,SP1,*HOFF,FRYRDESC:
                    *P29:5,*V2LON,YESNO,*HOFF
          GOTO      RBTYFM99
.
RBTYFM30  CALL      SCRC0000
          COMPARE   ZERO,MODE
          GOTO      RBTYFM99 IF EQUAL
          DISPLAY   *P39:5,*V2LON,LEDGCODE,SP3,*HOFF,LEDGDESC:
                    *P39:6,*V2LON,PERADJST:
                    *P39:7,*V2LON,ROUNDTO
          GOTO      RBTYFM99
.
RBTYFM40  CALL      SCRD0000
RBTYFM99  RETURN 
.
.** redisplay for ledger standard keyin
.
RLMAFM00  BRANCH    OPTION,RLMAFM10,RLMAFM10,RLMAFM10
          CALL      SCRD0000
          DISPLAY   *P39:4,*V2LON,FROMBUD,SP1,*HOFF,FRBDDESC
          GOTO      RLMAFM99
.
RLMAFM10  CALL      SCRC0000
          DISPLAY   *P39:4,*V2LON,FROMBUD,SP1,*HOFF,FRBDDESC
          COMPARE   ZERO,MODE
          GOTO      RLMAFM99 IF EQUAL
          DISPLAY   *P39:5,*V2LON,LEDGCODE,SP3,*HOFF,LEDGDESC:
                    *P39:6,*V2LON,PERADJST:
                    *P39:7,*V2LON,ROUNDTO
.
RLMAFM99  RETURN 
.
.** redisplay for Fin year standard keyin
.
RLMCFM00  CALL      SCRB0000
          COMPARE   ZERO,MODE
          GOTO      RLMCFM99 IF EQUAL
          MOVE      NO,YESNO
          LOAD      YESNO,CASHFLAG,YES
          DISPLAY   *P29:5,*V2LON,YESNO,*HOFF:
                    *P29:6,*V2LON,TOBUD,SP1,*HOFF,TOBDDESC
RLMCFM99  RETURN
.
RSBAFM00  CALL      SCRD0000
          DISPLAY   *P39:4,*V2LON,FROMBUD,SP1,*HOFF,FRBDDESC:
                    *P39:5,*V2LON,LEDGCODE,SP3,*HOFF,LEDGDESC 
          MOVE      SP70,KEY12
          DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Subjective":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
          MOVE      "8",CVERT
          MOVE      ONE,LITEMNO
          MOVE      FMSASUBJ,SAVCOCE
          CALL      RSTMP2
RSBAFM10  DISPLAY   *P1:CVERT,*V2LON,LITEMNO,*HOFF,"."
          CALL      RKTMP2
          BRANCH    OVRCD,RSBAFM99
          PACK      KEY14,LEDGCODE,TMPCODE
          CALL      RDFMSA1
          DISPLAY   *P6:CVERT,TMPCODE,SP1,FMSADESC:
                    *P53:CVERT,TMPPERC,*P68:CVERT,TMPRND
          ADD       ONE,CVERT
          ADD       ONE,LITEMNO
          COMPARE   "23",CVERT
          GOTO      RSBAFM10 IF NOT EQUAL
          MOVE      "8",CVERT
          MOVE      ONE,LITEMNO
          DISPLAY   *P1:8,*EF
          GOTO      RSBAFM10 
.
RSBAFM99  MOVE      SAVCOCE,FMSASUBJ
          RETURN
.
RCCAFM00  CALL      SCRD0000
          DISPLAY   *P39:4,*V2LON,FROMBUD,SP1,*HOFF,FRBDDESC:
                    *P39:5,*V2LON,LEDGCODE,SP3,*HOFF,LEDGDESC 
          MOVE      SP70,KEY12
          DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Item",*P6:7,"Cost Centre":
                    *P47:7,"Percentage Adj.",*P67:7,"Round to "
          MOVE      "8",CVERT
          MOVE      ONE,LITEMNO
          MOVE      FMCCCOCE,SAVCOCE
          CALL      RSTMP2
RCCAFM10  DISPLAY   *P1:CVERT,*V2LON,LITEMNO,*HOFF,"."
          CALL      RKTMP2
          BRANCH    OVRCD,RCCAFM99
          PACK      KEY14,LEDGCODE,TMPCODE
          CALL      RDFMCC1
          DISPLAY   *P6:CVERT,TMPCODE,SP1,FMCCDESC:
                    *P53:CVERT,TMPPERC,*P68:CVERT,TMPRND
          ADD       ONE,CVERT
          ADD       ONE,LITEMNO
          COMPARE   "23",CVERT
          GOTO      RCCAFM10 IF NOT EQUAL
          MOVE      "8",CVERT
          MOVE      ONE,LITEMNO
          DISPLAY   *P1:8,*EF
          GOTO      RCCAFM10 
.
RCCAFM99  MOVE      SAVCOCE,FMCCCOCE
          RETURN
.----------------------------------------------------------------
. Round to the nearest $x   ROUNDTO   = Value to Round to
.                           W12P2     = Variable to Round
.                           RESULT    = Rounded value
. Working Variables
.-------------------
.F12       FORM      12
.F12P2     FORM      12.2
.----------------------------------------------------------------
CRND0000  COMPARE   ZERO,ROUNDTO
          GOTO      CRND9100 IF EQUAL
          COMPARE   ZERO,W12P2
          GOTO      CRND9100 IF EQUAL
.
....          MOVE      W12P2,F12P2   
....          DIV       ROUNDTO,F12P2      
....          MOVE      F12P2,F12        
....          MOVE      F12,RESULT       
....          SUB       RESULT,F12P2     
....          COMPARE   ".5",F12P2       
....          GOTO      CRND9000 IF LESS 
....          ADD       ONE,RESULT       
....CRND9000  MULT      ROUNDTO,RESULT    
....          GOTO      CRND9999
.
          MOVE      ROUNDTO,ROUNDCAL
          MULT      "100",ROUNDCAL
.
          MOVE      W12P2,RESULT  
          DIV       ROUNDCAL,RESULT    
          MULT      ROUNDCAL,RESULT    
          GOTO      CRND9999
.
CRND9100  MOVE      W12P2,RESULT
.
CRND9999  RETURN    
.------------------------------------------------------------
. I/O for temp file 1
.------------------------------------------------------------
RATMP1    RESET     KEY9
          MOVE      ZERO,OVRCD
          READ      FMSTMPA1,KEY9;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMP1    RESET     KEY9
          READ      FMSTMPA1,KEY9;;
          RETURN
.
RDTMP1    RESET     KEY9
          MOVE      ZERO,OVRCD
          READ      FMSTMPA1,KEY9;TMPLEDG,TMPYEAR,TMPPROF,TMPPERC,TMPRND
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMP1    MOVE      ZERO,OVRCD
          READKS    FMSTMPA1;TMPLEDG,TMPYEAR,TMPPROF,TMPPERC,TMPRND
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMP1    MOVE      ZERO,OVRCD
          READKP    FMSTMPA1;TMPLEDG,TMPYEAR,TMPPROF,TMPPERC,TMPRND
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTMP1    UPDATE    FMSTMPA1;TMPLEDG,TMPYEAR,TMPPROF,TMPPERC,TMPRND
          RETURN
.
WRTMP1    WRITE     FMSTMPA1,KEY9;TMPLEDG,TMPYEAR,TMPPROF,TMPPERC,TMPRND
          RETURN

.------------------------------------------------------------
. I/O for temp file 2
.------------------------------------------------------------
RATMP2    RESET     KEY12
          MOVE      ZERO,OVRCD
          READ      FMSTMPA2,KEY12;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMP2    RESET     KEY12
          READ      FMSTMPA2,KEY12;;
          RETURN
.
RDTMP2    RESET     KEY12
          MOVE      ZERO,OVRCD
          READ      FMSTMPA2,KEY12;TMPCODE,TMPPERC,TMPRND
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMP2    MOVE      ZERO,OVRCD
          READKS    FMSTMPA2;TMPCODE,TMPPERC,TMPRND
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMP2    MOVE      ZERO,OVRCD
          READKP    FMSTMPA2;TMPCODE,TMPPERC,TMPRND
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTMP2    UPDATE    FMSTMPA2;TMPCODE,TMPPERC,TMPRND
          RETURN
.
WRTMP2    WRITE     FMSTMPA2,KEY12;TMPCODE,TMPPERC,TMPRND
          RETURN
.
MRND0000  MOVE      FMBUCA01,FMBUCB01
          MOVE      FMBUCA02,FMBUCB02
          MOVE      FMBUCA03,FMBUCB03
          MOVE      FMBUCA04,FMBUCB04
          MOVE      FMBUCA05,FMBUCB05
          MOVE      FMBUCA06,FMBUCB06
          MOVE      FMBUCA07,FMBUCB07
          MOVE      FMBUCA08,FMBUCB08
          MOVE      FMBUCA09,FMBUCB09
          MOVE      FMBUCA10,FMBUCB10
          MOVE      FMBUCA11,FMBUCB11
          MOVE      FMBUCA12,FMBUCB12
          MOVE      FMBUCA13,FMBUCB13
          MOVE      FMBUCA01,FMBUCC01
          MOVE      FMBUCA02,FMBUCC02
          MOVE      FMBUCA03,FMBUCC03
          MOVE      FMBUCA04,FMBUCC04
          MOVE      FMBUCA05,FMBUCC05
          MOVE      FMBUCA06,FMBUCC06
          MOVE      FMBUCA07,FMBUCC07
          MOVE      FMBUCA08,FMBUCC08
          MOVE      FMBUCA09,FMBUCC09
          MOVE      FMBUCA10,FMBUCC10
          MOVE      FMBUCA11,FMBUCC11
          MOVE      FMBUCA12,FMBUCC12
          MOVE      FMBUCA13,FMBUCC13
          RETURN
.
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSBPFIO/INC
          INC       FMSCCAIO/INC
          INC       FMSCSAIO/INC       * Control Account
          INC       FMSSBAIO/INC
          INC       FMSXCSIO/INC
.
          INC       FMSBTYKY
          INC       FMSCCAKY
          INC       FMSLMAKY
          INC       FMSLMCKY
          INC       FMSSBAKY
.
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * standard update routines
