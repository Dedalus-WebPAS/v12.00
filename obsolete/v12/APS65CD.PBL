.**********************************************************************
. create temp file
.**********************************************************************
CRTTEMP   PACK      FILENAMA,NAMEA,PORT,SP70     * set up and open temp file
          REP       " 0",FILENAMA
          PACK      MAKETMPA,ISBUILD,FILENAMA,TMP0ADAT
          PACK      KILLTMPA,ISERASE,FILENAMA
          EXECUTE   KILLTMPA,TASKID
          EXECUTE   MAKETMPA,TASKID
          OPEN      NEZTMP0A,FILENAMA
          RETURN
.**********************************************************************
. Delete temp file
.**********************************************************************
DELTEMP   CLOSE     NEZTMP0A           * delete temp file
          EXECUTE   KILLTMPA,TASKID
          RETURN
.**********************************************************************
.  CDIV - Perform CDIV2=CDIV2/CDIV1 (=0 if CDIV1=0)    Called By lots
.        Requires - CDIV1, CDIV2       ( parameters )
.        Returns  - CDIV2              ( quotient )
.**********************************************************************
CDIV0000  COMPARE   ZERO,CDIV1
          GOTO      CDIV9000 IF EQUAL
.
          DIV       CDIV1,CDIV2
          GOTO      CDIV9999
.
CDIV9000  MOVE      ZERO,CDIV2
.
CDIV9999  RETURN
.**********************************************************************
. NEZTMP0A IO routines                           Called by Lots
.**********************************************************************
RSNEZA1   RESET     KEY15
          READ      NEZTMP0A,KEY15;;
          RETURN
.
RANEZA1   RESET     KEY15
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY15;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZA1   RESET     KEY15
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY15;NEZATYPE,NEZALEDG,NEZAACCT,NEZAV01:
                                   NEZAV02,NEZAV03,NEZAV04,NEZAV05:
                                   NEZAV06,NEZAV07,NEZAV08,NEZAV09:
                                   NEZAV10,NEZAV11,NEZAV12,NEZAV13,NEZAPRO
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZA1   MOVE      ZERO,OVRCD
          READKS    NEZTMP0A;NEZATYPE,NEZALEDG,NEZAACCT,NEZAV01:
                             NEZAV02,NEZAV03,NEZAV04,NEZAV05:
                             NEZAV06,NEZAV07,NEZAV08,NEZAV09:
                             NEZAV10,NEZAV11,NEZAV12,NEZAV13,NEZAPRO
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZA1   MOVE      ZERO,OVRCD
          READKP    NEZTMP0A;NEZATYPE,NEZALEDG,NEZAACCT,NEZAV01:
                             NEZAV02,NEZAV03,NEZAV04,NEZAV05:
                             NEZAV06,NEZAV07,NEZAV08,NEZAV09:
                             NEZAV10,NEZAV11,NEZAV12,NEZAV13,NEZAPRO
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZA1   UPDATE    NEZTMP0A;NEZATYPE,NEZALEDG,NEZAACCT,NEZAV01:
                             NEZAV02,NEZAV03,NEZAV04,NEZAV05:
                             NEZAV06,NEZAV07,NEZAV08,NEZAV09:
                             NEZAV10,NEZAV11,NEZAV12,NEZAV13,NEZAPRO
          RETURN
.
WRNEZA1   RESET     KEY15
          WRITE     NEZTMP0A,KEY15;NEZATYPE,NEZALEDG,NEZAACCT,NEZAV01:
                                   NEZAV02,NEZAV03,NEZAV04,NEZAV05:
                                   NEZAV06,NEZAV07,NEZAV08,NEZAV09:
                                   NEZAV10,NEZAV11,NEZAV12,NEZAV13,NEZAPRO
          RETURN
.
DENEZA1   RESET     KEY15
          DELETE    NEZTMP0A,KEY15
          RETURN
.
.**********************************************************************
. CRDAT - create budget data
.**********************************************************************
CRDAT000  
          PACK      KEY15,SP70
          CALL      RSNEZA1            * loop through temp file
.
.---- budget update loop ----
.
CRDAT100  
          CALL      RKNEZA1
          BRANCH    OVRCD,CRDAT500     * no more records ?
.
          IF        !1=FMCOCALC
            PACK      KEY20,PORT,BUDCODE,NEZALEDG,NEZAACCT,SP70
            CALL      RDFMTU1            * set account for update
            IF        OVRCD=1
              UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
              MOVE      "000",FMTULEV
              MOVE      ZERO,FMTUACT
              MOVE      ZERO,FMTUBUD
              CALL      WRFMTU1
            ENDIF
          ENDIF
.
          PACK      KEY14,NEZALEDG,NEZAACCT,SP70
          MATCH     "8",NEZATYPE       * stat or normal type ?
          IF        @EQUAL
            UNPACK    KEY14,FMSTCULD,FMSTCUAC
            CALL      RDFMST1          * update stat type
            LOAD      FMSTCUPR,SCRNO,SP70,NEZAPRO
            MOVE      NEZAV01,FMSTCA01
            MOVE      NEZAV02,FMSTCA02
            MOVE      NEZAV03,FMSTCA03
            MOVE      NEZAV04,FMSTCA04
            MOVE      NEZAV05,FMSTCA05
            MOVE      NEZAV06,FMSTCA06
            MOVE      NEZAV07,FMSTCA07
            MOVE      NEZAV08,FMSTCA08
            MOVE      NEZAV09,FMSTCA09
            MOVE      NEZAV10,FMSTCA10
            MOVE      NEZAV11,FMSTCA11
            MOVE      NEZAV12,FMSTCA12
            MOVE      NEZAV13,FMSTCA13
            IF        OVRCD=1
              CALL      WRFMST1
            ELSE
              CALL      UPFMST1
            ENDIF
          ELSE
            UNPACK    KEY14,FMBUCULD,FMBUCUAC
            CALL      RDFMBU1          * update normal type
.
            LOAD      FMBUCUPR,SCRNO,SP70,PROCODE
            MOVE      NEZAV01,FMBUCA01
            MOVE      NEZAV02,FMBUCA02
            MOVE      NEZAV03,FMBUCA03
            MOVE      NEZAV04,FMBUCA04
            MOVE      NEZAV05,FMBUCA05
            MOVE      NEZAV06,FMBUCA06
            MOVE      NEZAV07,FMBUCA07
            MOVE      NEZAV08,FMBUCA08
            MOVE      NEZAV09,FMBUCA09
            MOVE      NEZAV10,FMBUCA10
            MOVE      NEZAV11,FMBUCA11
            MOVE      NEZAV12,FMBUCA12
            MOVE      NEZAV13,FMBUCA13
.
            MOVE      NEZAV01,FMBUCB01
            MOVE      NEZAV02,FMBUCB02
            MOVE      NEZAV03,FMBUCB03
            MOVE      NEZAV04,FMBUCB04
            MOVE      NEZAV05,FMBUCB05
            MOVE      NEZAV06,FMBUCB06
            MOVE      NEZAV07,FMBUCB07
            MOVE      NEZAV08,FMBUCB08
            MOVE      NEZAV09,FMBUCB09
            MOVE      NEZAV10,FMBUCB10
            MOVE      NEZAV11,FMBUCB11
            MOVE      NEZAV12,FMBUCB12
            MOVE      NEZAV13,FMBUCB13
.
            ASSIGN    NEZAV01/1000.0,F12P2
            MOVE      F12P2,FMBUCC01
            ASSIGN    NEZAV02/1000.0,F12P2
            MOVE      F12P2,FMBUCC02
            ASSIGN    NEZAV03/1000.0,F12P2
            MOVE      F12P2,FMBUCC03
            ASSIGN    NEZAV04/1000.0,F12P2
            MOVE      F12P2,FMBUCC04
            ASSIGN    NEZAV05/1000.0,F12P2
            MOVE      F12P2,FMBUCC05
            ASSIGN    NEZAV06/1000.0,F12P2
            MOVE      F12P2,FMBUCC06
            ASSIGN    NEZAV07/1000.0,F12P2
            MOVE      F12P2,FMBUCC07
            ASSIGN    NEZAV08/1000.0,F12P2
            MOVE      F12P2,FMBUCC08
            ASSIGN    NEZAV09/1000.0,F12P2
            MOVE      F12P2,FMBUCC09
            ASSIGN    NEZAV10/1000.0,F12P2
            MOVE      F12P2,FMBUCC10
            ASSIGN    NEZAV11/1000.0,F12P2
            MOVE      F12P2,FMBUCC11
            ASSIGN    NEZAV12/1000.0,F12P2
            MOVE      F12P2,FMBUCC12
            ASSIGN    NEZAV13/1000.0,F12P2
            MOVE      F12P2,FMBUCC13
            IF        OVRCD=1
              CALL      WRFMBU1
            ELSE
              CALL      UPFMBU1
            ENDIF
          ENDIF
.
          GOTO      CRDAT100
.
CRDAT500  
.
CRDAT999  RETURN
.**********************************************************************
. ROUND - round FORM14P5 if not a stat type
.**********************************************************************
ROUND000  
          MATCH     "8",FMAMTYPE
          IF        !@EQUAL
            MOVE      FORM14P5,FORM14P2
            MOVE      FORM14P2,FORM14P5
          ENDIF
.
ROUND999  RETURN
.**********************************************************************
.  CACCT - Handle invalid accounts                    Called By RUNINT
.        Requires - ERRLINE  (problem with current account)
.                   SCRNO    (screen number)
.        Returns  - EXIT     (0=cont, 1=retry, 2=quit)
.**********************************************************************
CACCT000  DISPLAY   *P1:23,*B,*+,ERRLINE,*EL:
                    *P1:24,"(",*V2LON:
                    "C",*HOFF,")ontinue & Create Error Report, (",*V2LON:
                    "M",*HOFF,")odify Account, (",*V2LON:
                    "Q",*HOFF,")uit ? ",*EL;
          KEYIN     *V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "C",ANS
          GOTO      CACCT900 IF EQUAL
          MATCH     "M",ANS
          GOTO      CACCT100 IF EQUAL
          MATCH     "Q",ANS
          GOTO      CACCT970 IF EQUAL
          BEEP
          GOTO      CACCT000
.
.----- modify ----
.
CACCT100  DISPLAY   *P1:24,"Ledger/Account : ",*EL;
          MOVE      "18",CCOL
          MOVE      "24",CVERT
          CALL      KFMLAA00
          BRANCH    EXIT,CACCT000,CACCT000
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,SLASH;
          MOVE      FMLALEDG,FMAMLEDG
.
          MOVE      "21",CCOL
          MOVE      "24",CVERT
          CALL      KFMAMA00
          BRANCH    EXIT,CACCT100,CACCT000
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT:
                    *HOFF,"     OK ",*V2LON:
                    "Y",*HOFF,"/",*V2LON,"N",*HOFF," ? ";
.
          MOVE      "47",CCOL
          MOVE      "24",CVERT
          CALL      YORN0000
          COMPARE   "1",FYESNO
          GOTO      CACCT100 IF NOT EQUAL
.
          STORE     FMAMLEDG,SCRNO,FMBALED,FMBBLED
          STORE     FMAMACCT,SCRNO,FMBAACC,FMBBACC
          GOTO      CACCT950
.
.
CACCT900  MOVE      ZERO,EXIT          * continue
          GOTO      CACCT999
.
CACCT950  MOVE      ONE,EXIT           * retry
          GOTO      CACCT999
.
CACCT970  MOVE      TWO,EXIT           * quit
          GOTO      CACCT999
.
CACCT999  DISPLAY   *P1:23,*EL;
          RETURN
