.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.01  09.07.2002  Glenn Saunders
.           Recompile for changes in includes shared with Southland, but with
.           previously different formats - now merged.  Includes effected :-
.           CCSCEAFD, CCSCONFD, CCSEPSFD, CCSHCDFD, CCSHLCFD, CCSIADFD
.-------------------------------------------------------
. V9.02.00  03.06.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 23.11.2000 Sandra Barcham
.           Allow for changed ccsepsaf
.-------------------------------------------------------
. V6.03.02  30.10.1995 B.G.Ackland
.           Phase 1 WGH Changes
. V6.03.01  03.10.1995 B.G.Ackland
.           Added Actual Price Import to File
.           Recompiled for Change to CEASTR & CEAPSC
. V6.03.00  02.10.1995 B.G.Ackland
.           Release 6.03
.-------------------------------------------------------
ACTPRIC   FORM      8.2
LOADFILE  FILE      ASCII, FIXED=100
TOTALQTY  FORM      12.2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACEA11
.   Function      :   Import Patient Service Details          
.   Generated  On :   09/07/2002
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       CCSEPSFD/INC
          INC       CCSIADFD/INC
          INC       CEABHDFD/INC
          INC       CEAPSCFD/INC
          INC       CEASPCFD/INC
          INC       CEASTRFD/INC
.=========================
.Local Variable Definition
.-------------------------
LOADNAME  DIM      30 * Scr 00 Fld     4
CONTROL   FORM     10.2 * Scr 00 Fld     5
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACEA11"
PRGNAM    INIT      "Import Patient Service Details          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   64",AUDTSECT
          MOVE      " 37",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening ccsaudep";
            OPEN      CCSAUDEP,"ccsaudep"
          ENDIF
          MOVE      "   64",AUDTSECT
          MOVE      " 38",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening ccsaudia";
            OPEN      CCSAUDIA,"ccsaudia"
          ENDIF
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA1,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA2,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA3,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA4,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA5,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsiadaf";
          OPEN      CCSIADA1,"ccsiadaf"
          MOVE      "   64",AUDTSECT
          MOVE      " 39",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening ceaaudps";
            OPEN      CEAAUDPS,"ceaaudps"
          ENDIF
          MOVE      "   64",AUDTSECT
          MOVE      " 40",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening ceaaudst";
            OPEN      CEAAUDST,"ceaaudst"
          ENDIF
          DISPLAY   *P56:24,"Opening ceabhdaf";
          OPEN      CEABHDA1,"ceabhdaf"
          DISPLAY   *P56:24,"Opening ceapscaf";
          OPEN      CEAPSCA1,"ceapscaf"
          DISPLAY   *P56:24,"Opening ceaspcaf";
          OPEN      CEASPCA1,"ceaspcaf"
          DISPLAY   *P56:24,"Opening ceastraf";
          OPEN      CEASTRA1,"ceastraf"
          DISPLAY   *P56:24,"Opening ceastraf";
          OPEN      CEASTRA2,"ceastraf"
          DISPLAY   *P56:24,"Opening ceastraf";
          OPEN      CEASTRA3,"ceastraf"
          DISPLAY   *P56:24,"Opening ceastraf";
          OPEN      CEASTRA4,"ceastraf"
          DISPLAY   *P56:24,"Opening ceastraf";
          OPEN      CEASTRA5,"ceastraf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Input File                         
          ENDIF
          RETURN
.--------------------------------
. Screen - Input File                         
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Input File                         
.-------------------------------------------------------
CF00L000
          MOVE      SP70,LOADNAME
          MOVE      ZERO,CONTROL 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Input File                         
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Input File                         
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Input File                         
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Input File                         
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Input File                         
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102
          GOTO     PS00L999
.
PS00L101
          MOVE      LOADNAME,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CONTROL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Input File                         
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L104
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      LOAD0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFILE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      LOADNAME,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,CONTROL 
          IF        SCPSMAN=1
            COMPARE   ZERO,CONTROL 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
          ENDIF
          MOVE      CONTROL,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.------------------------------------------------------------
. Load Fixed Length ASCII File
.------------------------------------------------------------
LOAD0000  OPEN      LOADFILE,LOADNAME
          CALL      VERI0000          * Verify Format of File
          BRANCH    EXIT,LOAD9999
.
. Re Position at Start of File & Load Details
.---------------------------------------------
          CALL      GETB0000          * Determine Batch & Lock
.
          DISPLAY   *P1:10,"Batch Allocated : ",*V2LON,CEBHBAT,*W
.
          DISPLAY   *P1:24,*EL,"Load in Progress : "
          MOVE      ZERO,F4
          OPEN      LOADFILE,LOADNAME
LOAD1000  ADD       ONE,F4
          READ      LOADFILE,SEQ;CESTHCD,CESTEPS,CESTDAT:
                    CESTTIM,CESTPSC,CESTSPC,CESTQTY,ACTPRIC,CESTKEY,CESTUD1:
                    CESTUD2,CESTUY1,CESTUY2,CESTITM,CESTDCD
          GOTO      LOAD1900 IF OVER
          IF       (F4%100=0)
            DISPLAY  *P36:24,*V2LON,F4
          ENDIF
          MOVE      CEBHBAT,CESTBAT
          MOVE      F4,CESTLIN
          REP       " 0",CESTLIN
          MOVE      CESTPSC,KEY7
          CALL      RDCEPS1
          MATCH     "1",CEPSACT
          IF        @EQUAL
            ASSIGN    CEPSST1*ACTPRIC,CESTST1
            ASSIGN    CEPSST2*ACTPRIC,CESTST2
            ASSIGN    CEPSST3*ACTPRIC,CESTST3
            ASSIGN    CEPSST4*ACTPRIC,CESTST4
            ASSIGN    CEPSST5*ACTPRIC,CESTST5
          ELSE
            MOVE      CEPSST1,CESTST1
            MOVE      CEPSST2,CESTST2
            MOVE      CEPSST3,CESTST3
            MOVE      CEPSST4,CESTST4
            MOVE      CEPSST5,CESTST5
          ENDIF
          MOVE      "IBACEA11",CESTFIL
          REP       " 0",CESTDAT
.
LOAD1100  PACK      KEY9,CESTBAT,CESTLIN
          CALL      RACEST1
          BRANCH    OVRCD,LOAD1200
          ADD       ONE,F4
          MOVE      F4,CESTLIN
          REP       " 0",CESTLIN
          GOTO      LOAD1100
LOAD1200  CALL      WRCEST1
          GOTO      LOAD1000
.
. Update Episode Summary
.------------------------
LOAD1900  CALL      UPEPS000          * Update Epsiode Details
.
LOAD9999  CALL      UUCEBH1           * Unlock Batch
          RETURN
.------------------------------------------------------------
. Verify Contents of File
.------------------------------------------------------------
VERI0000  DISPLAY   *P1:24,*EL,"Verify in Progress : "
          MOVE      ZERO,SECTOR
          MOVE      ZERO,OVRCD
          MOVE      ZERO,TOTALQTY
.
VERI1000  ADD       ONE,SECTOR
          DISPLAY   *P40:24,*V2LON,SECTOR
          TRAP      OVERCOND IF FORMAT
          READ      LOADFILE,SEQ;CESTHCD,CESTEPS,CESTDAT:
                    CESTTIM,CESTPSC,CESTSPC,CESTQTY,ACTPRIC,CESTKEY,CESTUD1:
                    CESTUD2,CESTUY1,CESTUY2,CESTITM,CESTDCD
          BRANCH    OVRCD,VERI9000
          GOTO      VERI9900 IF OVER
          ADD       CESTQTY,TOTALQTY
          TRAPCLR   FORMAT
          MATCH     SP70,CESTHCD
          IF        @EQUAL
            MOVE      "1 ",CESTHCD
          ENDIF
.
          MOVE      CESTSPC,KEY3
          CALL      RDCESP1
          BRANCH    OVRCD,VERI9100
.
          MOVE      CESTPSC,KEY7
          CALL      RDCEPS1
          BRANCH    OVRCD,VERI9200
.
          PACK      KEY18,CESTHCD,CESTEPS,SP70
          CALL      RDCCEP1
          BRANCH    OVRCD,VERI9300
.
          REP       " 0",CESTDAT
          UNPACK    CESTDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          IF        (F2<1)|(F2>12)
            GOTO      VERI9400
          ENDIF
          MOVE      CDAY,F2
          IF        (F2<1)|(F2>31)
            GOTO      VERI9400
          ENDIF
.
          UNPACK    CESTTIM,CHOUR,KEY1,CMIN
          MATCH     ":",KEY1
          GOTO      VERI9500 IF NOT EQUAL
          MOVE      CHOUR,F2
          IF        (F2<1)|(F2>24)
            GOTO      VERI9500
          ENDIF
          MOVE      CMIN,F2
          IF        (F2<0)|(F2>60)
            GOTO      VERI9500
          ENDIF
.
          GOTO      VERI1000
.
VERI9000  CLEAR     DISPMSG
          APPEND    "Format Error at Record ",DISPMSG
          APPEND    SECTOR,DISPMSG
          APPEND    " Load Aborted - ",DISPMSG
          RESET     DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      VERI9999
.
VERI9100  CLEAR     DISPMSG
          APPEND    "Service Provider Invalid. Record ",DISPMSG
          APPEND    SECTOR,DISPMSG
          APPEND    " Load Aborted - ",DISPMSG
          RESET     DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      VERI9999
.
VERI9200  CLEAR     DISPMSG
          APPEND    "Patient Service Invalid. Record ",DISPMSG
          APPEND    SECTOR,DISPMSG
          APPEND    " Load Aborted - ",DISPMSG
          RESET     DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      VERI9999
.
VERI9300  CLEAR     DISPMSG
          APPEND    "Patient Episode Invalid. Record ",DISPMSG
          APPEND    SECTOR,DISPMSG
          APPEND    " Load Aborted - ",DISPMSG
          RESET     DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      VERI9999
.
VERI9400  CLEAR     DISPMSG
          APPEND    "Date Invalid. Record ",DISPMSG
          APPEND    SECTOR,DISPMSG
          APPEND    " Load Aborted - ",DISPMSG
          RESET     DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      VERI9999
.
VERI9500  CLEAR     DISPMSG
          APPEND    "Time Invalid. Record ",DISPMSG
          APPEND    SECTOR,DISPMSG
          APPEND    " Load Aborted - ",DISPMSG
          RESET     DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      VERI9999
.
VERI9600  CLEAR     DISPMSG
          APPEND    "File Must Contain Less than 9999 Records. ",DISPMSG
          APPEND    "Record Count = ",DISPMSG
          APPEND    SECTOR,DISPMSG
          APPEND    " Load Aborted - ",DISPMSG
          RESET     DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      VERI9999
.
VERI9900  IF        SECTOR>9999
            GOTO      VERI9600
          ENDIF
          COMPARE   CONTROL,TOTALQTY
          GOTO      VERI9990 IF EQUAL
.
          CLEAR     DISPMSG
          APPEND    "Total =",DISPMSG
          APPEND    TOTALQTY,DISPMSG
          APPEND    "  Unbalanced Load Aborted - ",DISPMSG
          RESET     DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      VERI9999
.
VERI9990  MOVE      ZERO,EXIT
          GOTO      VERI9999
.
VERI9999  RETURN
.------------------------------------------------------------
. Get Batch Number
.------------------------------------------------------------
GETB0000  PACK      KEY5,Z70                 * Determine Next Batch Number
          CALL      RSCEBH1
          CALL      RPCEBH1
          IF        OVRCD=0
            MOVE      CEBHBAT,F5
            ADD       ONE,F5
            MOVE      F5,CEBHBAT
            REP       " 0",CEBHBAT
          ELSE
            MOVE      "00001",CEBHBAT
          ENDIF
          PACK      CEBHDAT,CCC,CYY,CMM,CDD  * Set up Batch Header Details
          MOVE      PASSCODE,CEBHUID
          MOVE      TWO,CEBHTYP
          MOVE      "1 ",CEBHHCD
          MOVE      SP70,CEBHSPC
          MOVE      CONTROL,CEBHTOT
          MOVE      LOADNAME,CEBHUR1
          MOVE      SP70,CEBHUR2
          MOVE      SP70,CEBHUD1
          MOVE      SP70,CEBHUD2
          MOVE      SP70,CEBHUY1
          MOVE      SP70,CEBHUY2
          MOVE      SP70,CEBHSPA
          PACK      KEY5,CEBHBAT
          CALL      WRCEBH1
          CALL      RLCEBH1      * Lock Batch
          RETURN
.----------------------------------
. Update Batch to Epsiode Details
.----------------------------------
UPEPS000  DISPLAY  *P1:24,*EL,"Updating Epsiode Summary Details : "
          PACK     KEY9,CEBHBAT,SP70      * Check for Transactions
          CALL     RSCEST1
          CALL     RKCEST1
          BRANCH   OVRCD,UPEPS900         * If No Transactions Delete Batch
          MATCH    CEBHBAT,CESTBAT        * Header (Y/N) ?
          GOTO     UPEPS900 IF NOT EQUAL
.
          MOVE     ZERO,SECTOR
          PACK     KEY9,CEBHBAT,SP70      * Update details to epsiode level
          CALL     RSCEST1
UPEPS100  CALL     RKCEST1
          BRANCH   OVRCD,UPEPS990
          MATCH    CEBHBAT,CESTBAT
          GOTO     UPEPS990 IF NOT EQUAL
          ADD      ONE,SECTOR
          IF       (SECTOR%100=0)
            DISPLAY  *P36:24,*V2LON,SECTOR
          ENDIF
.
          PACK     KEY7,CESTPSC,SP70
          CALL     RDCEPS1                * Read Patient Service Details
          BRANCH   OVRCD,UPEPS980         * Error if Not There
.
          MOVE     ZERO,F5
UPEPS110  PACK     KEY18,CESTHCD,CESTEPS,SP70
          CALL     RLCCIA1                * Read & Lock Patient Expense Summary
          BRANCH   OVRCD,UPEPS200,UPEPS300
.
          CALL     ADEPS000
          CALL     UPCCIA1
          CALL     UUCCIA1
          GOTO     UPEPS100
.
UPEPS200  CALL     CLEPS000
          CALL     ADEPS000
          PACK     KEY18,CESTHCD,CESTEPS,SP70
          UNPACK   KEY18,CCIAHCD,CCIAEPS
          CALL     WRCCIA1
          GOTO     UPEPS100
.
UPEPS300  MOVE     CESTEPS,KEY16
          SQUEEZE  KEY16
          CLEAR    DISPMSG
          APPEND   "Epsiode ",DISPMSG
          APPEND   KEY16,DISPMSG
          APPEND   " Expense Details Locked - ",DISPMSG
          RESET    DISPMSG
          CALL     MESSAGE1
          GOTO     UPEPS100
.
UPEPS900  DISPLAY  *P1:24,*EL,"This Batch Contains NO Details. Delete Header (":
                   *V2LON,"Y",*HOFF,"/":
                   *V2LON,"N",*HOFF,") ? "
          MOVE     "55",CCOL
          MOVE     "24",CVERT
          CALL     YORN0000
          IF       FYESNO=1
            PACK     KEY5,CEBHBAT
            CALL     DECEBH1
          ENDIF
          GOTO     UPEPS999
.
UPEPS980  BEEP
          CLEAR    DISPMSG
          APPEND   "ERROR : Patient Service Code ",DISPMSG
          APPEND   KEY7,DISPMSG
          APPEND   " is Missing - ",DISPMSG
          RESET    DISPMSG
          CALL     MESSAGE1
          GOTO     UPEPS110
.
UPEPS990
.
UPEPS999  RETURN
.--------------------------------------------
. Add Transaction to Expense Summary Details
.--------------------------------------------
ADEPS000  MOVE     CEPSTYP,F1
          BRANCH   F1,ADEPS100,ADEPS200,ADEPS300,ADEPS400,ADEPS500:
                      ADEPS600,ADEPS700,ADEPS800,ADEPS900
.
ADEPS100  ASSIGN    CCIAETH1+(CESTQTY*CESTST1),CCIAETH1
          ASSIGN    CCIAETH2+(CESTQTY*CESTST2),CCIAETH2
          ASSIGN    CCIAETH3+(CESTQTY*CESTST3),CCIAETH3
          ASSIGN    CCIAETH4+(CESTQTY*CESTST4),CCIAETH4
          ASSIGN    CCIAETH5+(CESTQTY*CESTST5),CCIAETH5
          GOTO      ADEPS999
.
ADEPS200  ASSIGN    CCIAEA11+(CESTQTY*CESTST1),CCIAEA11
          ASSIGN    CCIAEA12+(CESTQTY*CESTST2),CCIAEA12
          ASSIGN    CCIAEA13+(CESTQTY*CESTST3),CCIAEA13
          ASSIGN    CCIAEA14+(CESTQTY*CESTST4),CCIAEA14
          ASSIGN    CCIAEA15+(CESTQTY*CESTST5),CCIAEA15
          GOTO      ADEPS999
.
ADEPS300  ASSIGN    CCIAEA21+(CESTQTY*CESTST1),CCIAEA21
          ASSIGN    CCIAEA22+(CESTQTY*CESTST2),CCIAEA22
          ASSIGN    CCIAEA23+(CESTQTY*CESTST3),CCIAEA23
          ASSIGN    CCIAEA24+(CESTQTY*CESTST4),CCIAEA24
          ASSIGN    CCIAEA25+(CESTQTY*CESTST5),CCIAEA25
          GOTO      ADEPS999
.
ADEPS400  ASSIGN    CCIAEA31+(CESTQTY*CESTST1),CCIAEA31
          ASSIGN    CCIAEA32+(CESTQTY*CESTST2),CCIAEA32
          ASSIGN    CCIAEA33+(CESTQTY*CESTST3),CCIAEA33
          ASSIGN    CCIAEA34+(CESTQTY*CESTST4),CCIAEA34
          ASSIGN    CCIAEA35+(CESTQTY*CESTST5),CCIAEA35
          GOTO      ADEPS999
.
ADEPS500  ASSIGN    CCIAEAO1+(CESTQTY*CESTST1),CCIAEAO1
          ASSIGN    CCIAEAO2+(CESTQTY*CESTST2),CCIAEAO2
          ASSIGN    CCIAEAO3+(CESTQTY*CESTST3),CCIAEAO3
          ASSIGN    CCIAEAO4+(CESTQTY*CESTST4),CCIAEAO4
          ASSIGN    CCIAEAO5+(CESTQTY*CESTST5),CCIAEAO5
          GOTO      ADEPS999
.
ADEPS600  ASSIGN    CCIAEM11+(CESTQTY*CESTST1),CCIAEM11
          ASSIGN    CCIAEM12+(CESTQTY*CESTST2),CCIAEM12
          ASSIGN    CCIAEM13+(CESTQTY*CESTST3),CCIAEM13
          ASSIGN    CCIAEM14+(CESTQTY*CESTST4),CCIAEM14
          ASSIGN    CCIAEM15+(CESTQTY*CESTST5),CCIAEM15
          GOTO      ADEPS999
.
ADEPS700  ASSIGN    CCIAEM21+(CESTQTY*CESTST1),CCIAEM21
          ASSIGN    CCIAEM22+(CESTQTY*CESTST2),CCIAEM22
          ASSIGN    CCIAEM23+(CESTQTY*CESTST3),CCIAEM23
          ASSIGN    CCIAEM24+(CESTQTY*CESTST4),CCIAEM24
          ASSIGN    CCIAEM25+(CESTQTY*CESTST5),CCIAEM25
          GOTO      ADEPS999
.
ADEPS800  ASSIGN    CCIAEM31+(CESTQTY*CESTST1),CCIAEM31
          ASSIGN    CCIAEM32+(CESTQTY*CESTST2),CCIAEM32
          ASSIGN    CCIAEM33+(CESTQTY*CESTST3),CCIAEM33
          ASSIGN    CCIAEM34+(CESTQTY*CESTST4),CCIAEM34
          ASSIGN    CCIAEM35+(CESTQTY*CESTST5),CCIAEM35
          GOTO      ADEPS999
.
ADEPS900  ASSIGN    CCIAEMO1+(CESTQTY*CESTST1),CCIAEMO1
          ASSIGN    CCIAEMO2+(CESTQTY*CESTST2),CCIAEMO2
          ASSIGN    CCIAEMO3+(CESTQTY*CESTST3),CCIAEMO3
          ASSIGN    CCIAEMO4+(CESTQTY*CESTST4),CCIAEMO4
          ASSIGN    CCIAEMO5+(CESTQTY*CESTST5),CCIAEMO5
          GOTO      ADEPS999
.
ADEPS999  RETURN
.------------------------------------------
. Clear Epsiode Income/Expense Details
.------------------------------------------
CLEPS000  MOVE      CESTHCD,CCIAHCD
          MOVE      CESTEPS,CCIAEPS
          MOVE      ZERO,CCIABA1
          MOVE      ZERO,CCIABA2
          MOVE      ZERO,CCIABA3
          MOVE      ZERO,CCIALOS
          MOVE      ZERO,CCIAITH
          MOVE      ZERO,CCIAIA1
          MOVE      ZERO,CCIAIA2
          MOVE      ZERO,CCIAIA3
          MOVE      ZERO,CCIAIAO
          MOVE      ZERO,CCIAIM1
          MOVE      ZERO,CCIAIM2
          MOVE      ZERO,CCIAIM3
          MOVE      ZERO,CCIAIMO
.
          MOVE      ZERO,CCIAETH1
          MOVE      ZERO,CCIAETH2
          MOVE      ZERO,CCIAETH3
          MOVE      ZERO,CCIAETH4
          MOVE      ZERO,CCIAETH5
.
          MOVE      ZERO,CCIAEA11
          MOVE      ZERO,CCIAEA12
          MOVE      ZERO,CCIAEA13
          MOVE      ZERO,CCIAEA14
          MOVE      ZERO,CCIAEA15
.
          MOVE      ZERO,CCIAEA21
          MOVE      ZERO,CCIAEA22
          MOVE      ZERO,CCIAEA23
          MOVE      ZERO,CCIAEA24
          MOVE      ZERO,CCIAEA25
.
          MOVE      ZERO,CCIAEA31
          MOVE      ZERO,CCIAEA32
          MOVE      ZERO,CCIAEA33
          MOVE      ZERO,CCIAEA34
          MOVE      ZERO,CCIAEA35
.
          MOVE      ZERO,CCIAEAO1
          MOVE      ZERO,CCIAEAO2
          MOVE      ZERO,CCIAEAO3
          MOVE      ZERO,CCIAEAO4
          MOVE      ZERO,CCIAEAO5
.
          MOVE      ZERO,CCIAEM11
          MOVE      ZERO,CCIAEM12
          MOVE      ZERO,CCIAEM13
          MOVE      ZERO,CCIAEM14
          MOVE      ZERO,CCIAEM15
.
          MOVE      ZERO,CCIAEM21
          MOVE      ZERO,CCIAEM22
          MOVE      ZERO,CCIAEM23
          MOVE      ZERO,CCIAEM24
          MOVE      ZERO,CCIAEM25
.
          MOVE      ZERO,CCIAEM31
          MOVE      ZERO,CCIAEM32
          MOVE      ZERO,CCIAEM33
          MOVE      ZERO,CCIAEM34
          MOVE      ZERO,CCIAEM35
.
          MOVE      ZERO,CCIAEMO1
          MOVE      ZERO,CCIAEMO2
          MOVE      ZERO,CCIAEMO3
          MOVE      ZERO,CCIAEMO4
          MOVE      ZERO,CCIAEMO5
.
          RETURN
.
.------------------------------------------------------------
. Enter File to Load
.------------------------------------------------------------
KFILE000  STRIP     LOADNAME
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,LOADNAME
          ENDSET    LOADNAME
          APPEND    SP70,LOADNAME
          RESET     LOADNAME
          CMATCH    EXITCHAR,LOADNAME
          GOTO      KFILE900 IF EQUAL
          MATCH     SP70,LOADNAME
          GOTO      KFILE900 IF EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOADFILE,LOADNAME
          TRAPCLR   IO
          IF        OVRCD=1
            BEEP
            MOVE    "File Not Found - ",DISPMSG
            CALL    MESSAGE1
            GOTO    KFILE0000
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KFILE999
KFILE900  MOVE      TWO,EXIT
KFILE999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       CCSEPSIO/INC
          INC       CCSIADIO/INC
          INC       CEABHDIO/INC
          INC       CEAPSCIO/INC
          INC       CEASPCIO/INC
          INC       CEASTRIO/INC
.
          INC       STDGENCD
.
