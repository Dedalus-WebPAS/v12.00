.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.01.01  30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
.-------------------------------------------------------
CMDLINE   DIM       127
.
ERASE     INIT      "iserase "
.
FNAMEA    INIT      "aps30a"          * set up for temp file name
FTOT9P2   INIT      "999,999,999.99"
.
GTOTAMT1  FORM      12.2
GTOTAMT2  FORM      12.2
GTOTAMT3  FORM      12.2
.
ISBUILD   INIT      "isbuild "
.
LINEUPYN  FORM      "0"
.
NADLINE1  DIM       35
NADLINE2  DIM       35
NADLINE3  DIM       35
NADLINE4  DIM       35
NADLINE5  DIM       35
NODETFLG  FORM      1
.
TEMPFILE  DIM       8
TEMAKEY1  INIT      " 57 UC1-5,6-10,11-25,26-40"
TEMAKEY3  INIT      " UC6-10,11-25,26-40,1-5"
TOTALAMT  FORM      12.2
TOTOUT14  DIM       14
.
VALINDIC  FORM      1
.
X10       INIT      "XXXXXXXXXX"
.
. Filename : aps30axx.dat          (xx = port id)
.
APSTEMA1  IFILE SQL, FIXED=57, KEY="U1-5,6-10,11-25,26-40"
APSTEMA3  IFILE SQL, FIXED=57, KEY="U6-10,11-25,26-40,1-5"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
TEMABCH   DIM       5      5        1     Batch
TEMACRD   DIM       5      5        6     Creditor
TEMAREF   DIM       15     15       11    Invoice Reference
TEMADOC   DIM       15     15       26    Document Reference
TEMAIDT   DIM       8      8        41    Invoice Date
TEMATOT   FORM      12.2   8        49    Total Amount + GST Amount
.
.End of Record                      57
.
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS30
.   Function      :   Recipient Generated Invoices            
.   Generated  On :   07/04/2011
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSBCHDF    
          INC       APSBMFFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCSAFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       IBACONFD/INC
          INC       IBAPRNFD/INC
.=========================
.Local Variable Definition
.-------------------------
INVREFER  DIM      15 * Scr 02 Fld     3
CRDNAM80  DIM      80 * Scr 02 Fld     7
CRDADD80  DIM      80 * Scr 02 Fld     8
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS30"
PRGNAM    INIT      "Recipient Generated Invoices            "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RCON0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA4,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening  ihapassf           ";
          OPEN      IHAPASS1,"ihapassf"          
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Menu                          
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * By Batch                           
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * by Individual                      
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Menu                          
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Menu                          
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Menu                          
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Menu                          
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Menu                          
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Menu                          
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Menu                          
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Menu                          
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      KILL0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - By Batch                           
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : By Batch                           
.-------------------------------------------------------
CF01L000
          MOVE      SP70,APBMBCH 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for By Batch                           
.--------------------------------------------------------
KY01L000
.
KY01L110
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EBCH0000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      APBMBCH,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : By Batch                           
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : By Batch                           
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : By Batch                           
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : By Batch                           
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : By Batch                           
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L101,SF01L102,SF01L103
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      PRNT0000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L103
          CALL      LNUP0000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - by Individual                      
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : by Individual                      
.-------------------------------------------------------
CF02L000
          MOVE      SP70,APIMCRD 
          MOVE      SP70,INVREFER
          MOVE      SP70,TEMABCH 
          MOVE      SP70,TEMAIDT 
          MOVE      ZERO,TEMATOT 
          MOVE      SP70,CRDNAM80
          MOVE      SP70,CRDADD80
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for by Individual                      
.--------------------------------------------------------
KY02L000
.
KY02L110
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CRDNAM80
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CRDADD80
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAPMA000
          BRANCH    EXIT,KY02L900,KY02L900
          MOVE      ZERO,ACCEPT
          MOVE      APIMCRD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CRDNAM80,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CRDADD80,VAR     
            CALL      DISPITEM
          ENDIF
.
KY02L120
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EINV0000
          BRANCH    EXIT,KY02L110,KY02L900
          MOVE      ZERO,ACCEPT
          MOVE      INVREFER,VAR     
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : by Individual                      
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : by Individual                      
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : by Individual                      
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : by Individual                      
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L103,PS02L104,PS02L105:
                            PS02L999,PS02L999,PS02L999,PS02L999
          GOTO     PS02L999
.
PS02L101
          MOVE      TEMABCH,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          UNPACK    TEMAIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      TEMATOT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      CRDNAM80,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      CRDADD80,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : by Individual                      
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L101,SF02L102,SF02L103
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      PRNT0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
          CALL      LNUP0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
SF02L990  MOVE      ONE,EXIT * Exit Char Restart
SF02L999  RETURN
.@@@@@ Function Restart Point @@@@@
.-------------------------------------------------------
. Select Printer, Read Control File, & Init Temporary File
.-------------------------------------------------------
RCON0000  OPEN      IBACODE1,"ibacodef"     * open files
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-249574
          MOVE      SP70,SPLFILE
          CALL      SELPRINT
.
          READ      CONTROLF,ZERO;*70,IBCNABNN
.
          PACK      TEMPFILE,FNAMEA,PORT
          REP       " 0",TEMPFILE
          CALL      CREA0000
.
RCON9999  RETURN
.-------------------------------------------------------
. Create a New Temporary File
.-------------------------------------------------------
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,TEMAKEY1,TEMAKEY3
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      APSTEMA1,TEMPFILE            * open temp index file
.
          OPEN      APSTEMA3,TEMPFILE            * open temp index file
.
CREA9999  RETURN
.-------------------------------------------------------
. IO Routines for Temporary File
.-------------------------------------------------------
. 1st index
.
RSTEMA1   RESET     KEY40
          READ      APSTEMA1,KEY40;;
          RETURN
.
RATEMA1   RESET     KEY40
          MOVE      ZERO,OVRCD
          READ      APSTEMA1,KEY40;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMA1   RESET     KEY40
          MOVE      ZERO,OVRCD
          READ      APSTEMA1,KEY40;TEMABCH,TEMACRD,TEMAREF,TEMADOC:
                                   TEMAIDT,TEMATOT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMA1   MOVE      ZERO,OVRCD
          READKS    APSTEMA1;TEMABCH,TEMACRD,TEMAREF,TEMADOC:
                                   TEMAIDT,TEMATOT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMA1   MOVE      ZERO,OVRCD
          READKP    APSTEMA1;TEMABCH,TEMACRD,TEMAREF,TEMADOC:
                                   TEMAIDT,TEMATOT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMA1   UPDATE    APSTEMA1;TEMABCH,TEMACRD,TEMAREF,TEMADOC:
                                   TEMAIDT,TEMATOT
          RETURN
.
WRTEMA1   RESET     KEY40
          WRITE     APSTEMA1,KEY40;KEY40,TEMAIDT,TEMATOT
          RETURN
.
DETEMA1   RESET     KEY40
          DELETE    APSTEMA1,KEY40
          RETURN
.
. 3rd index
.
RSTEMA3   RESET     KEY40
          READ      APSTEMA3,KEY40;;
          RETURN
.
RATEMA3   RESET     KEY40
          MOVE      ZERO,OVRCD
          READ      APSTEMA3,KEY40;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMA3   RESET     KEY40
          MOVE      ZERO,OVRCD
          READ      APSTEMA3,KEY40;TEMACRD,TEMAREF,TEMADOC,TEMABCH:
                                   TEMAIDT,TEMATOT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMA3   MOVE      ZERO,OVRCD
          READKS    APSTEMA3;TEMACRD,TEMAREF,TEMADOC,TEMABCH:
                                   TEMAIDT,TEMATOT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMA3   MOVE      ZERO,OVRCD
          READKP    APSTEMA3;TEMACRD,TEMAREF,TEMADOC,TEMABCH:
                                   TEMAIDT,TEMATOT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMA3   UPDATE    APSTEMA3;TEMACRD,TEMAREF,TEMADOC,TEMABCH:
                                   TEMAIDT,TEMATOT
          RETURN
.
WRTEMA3   RESET     KEY40
          WRITE     APSTEMA3,KEY40;KEY40,TEMAIDT,TEMATOT
          RETURN
.
DETEMA3   RESET     KEY40
          DELETE    APSTEMA3,KEY40
          RETURN
.
.-------------------------------------------------------
. Remove Temporary File
.-------------------------------------------------------
KILL0000  CLOSE     APSTEMA1                     * close file
          CLOSE     APSTEMA3                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999  RETURN
.
.-------------------------------------------------------
. Enter Batch Number
.-------------------------------------------------------
EBCH0000  MOVE      ZERO,VALINDIC
          CALL      ERAS0000
          MOVE      ZERO,CKEYTYP
          CALL      KAPBMA00
          BRANCH    EXIT,EBCH9999,EBCH9999
.
          CALL      VDET0000
          BRANCH    NODETFLG,EBCH0000
.
          CALL      APBF0000      * format data (in function APSBCHPR)
.
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APBMTOT,OUTFORM2
          DISPLAY   *P27:6,*V2LON,STATDESC:
                    *P27:7,*V2LON,APBMLED,*HOFF,*P34:7,FMLADESC:
                    *P27:8,*V2LON,APBMTYP,*HOFF,*P34:8,BATDESC:
                    *P27:9,*V2LON,OUTFORM2:
                    *P27:10,SECUSER:
                    *P27:11,ENTRDATE:
                    *P27:12,POSTDATE,*HOFF,SP2,PERDESC:
                    *P54:12,"Ending ":
                    *V2LON,ENDDATE
.
EBCH9999  RETURN
.-------------------------------------------------------
. Validate Details
. Parameters : VALINDIC = 0 - by Batch Number,
.                         1 - by Invoice Reference.
.              NODETFLG = 0 - at least one Detail found
.                         1 - Details not found
.-------------------------------------------------------
VDET0000  MOVE      ONE,NODETFLG
          IF        VALINDIC=0
            PACK      KEY40,APBMBCH,SP70
            CALL      RSAPIM1
          ELSE
            PACK      KEY40,APMACRD,INVREFER,SP70
            CALL      RSAPIM3
          ENDIF
VDET0100  IF        VALINDIC=0
            CALL      RKAPIM1
          ELSE
            CALL      RKAPIM3
          ENDIF
          BRANCH    OVRCD,VDET9900
.
          IF        VALINDIC=0
            MATCH     APBMBCH,APIMBCH
            GOTO      VDET9900 IF NOT EQUAL
          ELSE
            MATCH     APMACRD,APIMCRD
            GOTO      VDET9900 IF NOT EQUAL
.
            MATCH     INVREFER,APIMREF
            GOTO      VDET9900 IF NOT EQUAL
          ENDIF
.
          MATCH     "0",APIMTYP
          GOTO      VDET0100 IF NOT EQUAL
.
          MATCH     "1",APIMUPD
          GOTO      VDET0100 IF NOT EQUAL
.
          MOVE      ZERO,NODETFLG
          MOVE      APIMBCH,TEMABCH
          MOVE      APIMCRD,TEMACRD
          MOVE      APIMREF,TEMAREF
          MOVE      APIMDOC,TEMADOC
          MOVE      APIMIDT,TEMAIDT
          ASSIGN    APIMTOT+APIMGST,TEMATOT
.
          IF        VALINDIC=0
            PACK      KEY40,TEMABCH,TEMACRD,TEMAREF,TEMADOC,SP70
            CALL      WRTEMA1
          ELSE
            PACK      KEY40,TEMACRD,TEMAREF,TEMADOC,TEMABCH,SP70
            CALL      WRTEMA3
.
            PACK      KEY5,APIMBCH,SP70
            CALL      RDAPBM1
          ENDIF
          GOTO      VDET0100
.
VDET9900  IF        NODETFLG=1
            MOVE      "No Match Details to be Selected. - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
VDET9999  RETURN
.-------------------------------------------------------
. Format the batch data
.-------------------------------------------------------
APBF0000  CLEAR     BATDESC
          MATCH     "CR",APBMTYP
          GOTO      APBF1200 IF NOT EQUAL
          MOVE      "Credit Notes      ",BATDESC
          GOTO      APBF2000
.
APBF1200  MATCH     "IN",APBMTYP
          GOTO      APBF1300 IF NOT EQUAL
          MOVE      "Invoices          ",BATDESC
          GOTO      APBF2000
.
APBF1300  MATCH     "PY",APBMTYP
          GOTO      APBF1400 IF NOT EQUAL
          MOVE      "Payments          ",BATDESC
          GOTO      APBF2000
.
APBF1400  MATCH     "CC",APBMTYP
          GOTO      APBF1500 IF NOT EQUAL
          MOVE      "Cancelled Payments",BATDESC
          GOTO      APBF2000
.
APBF1500  MATCH     "PP",APBMTYP
          GOTO      APBF2000 IF NOT EQUAL
          MOVE      "Prompt Payments   ",BATDESC
          GOTO      APBF2000
.
APBF2000  CLEAR     DIM28
.
.----- Format the post date ----
.
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",POSTDATE
.
.----- get the financial period description and end date ----
.
          MOVE      APBMADT,WORKDATE
          PACK      KEY2,APBMLED
          CALL      RDFMLA1
          CALL      CFYR0000
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
.
.----- Format the date of entry -----
.
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
          REP       " 0",APBMDAT
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      ENTRDATE,CPCDATE,SP70
.
.----- Format the date of entry -----
.
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
          REP       " 0",APBMUDT
          MOVE      "Batch Awaiting Update",STATDESC
.
          MATCH     "0000000000",APBMUDT
          GOTO      APBF5000 IF EQUAL
.
          MOVE      "Batch Updated ",STATDESC
          UNPACK    APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      STATDESC,STATDESC,CPCDATE,SP70
.
.----- get user description -----
.
APBF5000  CLEAR     SECUSER
          PACK      KEY4,APBMOPR
          CALL      RDPASS1
.
APBF9999  RETURN
.-------------------------------------------------------
. Erase All Temporary Details
. Parameters : VALINDIC = 0 - by Batch Number,
.                         1 - by Invoice Reference,
.-------------------------------------------------------
ERAS0000  BRANCH    VALINDIC,ERAS0100
.
ERAS0100  PACK      KEY40,SP70
          CALL      RSTEMA1
          CALL      RKTEMA1
          BRANCH    OVRCD,ERAS9999
.
          PACK      KEY40,TEMABCH,TEMACRD,TEMAREF,TEMADOC,SP70
          CALL      DETEMA1
          GOTO      ERAS0100
.
ERAS1000  PACK      KEY40,SP70
          CALL      RSTEMA3
          CALL      RKTEMA3
          BRANCH    OVRCD,ERAS9999
.
          PACK      KEY40,TEMACRD,TEMAREF,TEMADOC,TEMABCH,SP70
          CALL      DETEMA3
          GOTO      ERAS1000
.
ERAS9999  RETURN
.
.-------------------------------------------------------
. Print Recipient Created Tax Invoice
. Parameters : VALINDIC = 0 - by Batch Number,
.                         1 - by Invoice Reference.
.              NODETFLG = 0 - Details not found
.                         1 - at least one Detail found
.              LINEUPYN = 0 - No
.                         1 - Yes
.-------------------------------------------------------
PRNT0000  MOVE      ZERO,NODETFLG
          MOVE      ZERO,CPAGENO
          CALL      OPNPRINT                     * open print file
.
          BRANCH    LINEUPYN,PRNT0200
.
          PACK      KEY40,SP70
          IF        VALINDIC=0
            CALL      RSTEMA1
          ELSE
            CALL      RSTEMA3
          ENDIF
PRNT0100  IF        VALINDIC=0
            CALL      RKTEMA1
          ELSE
            CALL      RKTEMA3
          ENDIF
          BRANCH    OVRCD,PRNT8000
.
          PACK      KEY5,TEMACRD,SP70
          CALL      RDAPMA1
          BRANCH    OVRCD,PRNT8100
.
          PACK      KEY40,TEMABCH,TEMACRD,TEMAREF,TEMADOC,SP70
          CALL      RDAPIM1
          BRANCH    OVRCD,PRNT8200
.
PRNT0200  MOVE      ONE,NODETFLG
          CALL      PRCTI000                * Print Recipient Created Invoice
          BRANCH    LINEUPYN,PRNT8000
.
          GOTO      PRNT0100
.
PRNT8000  BRANCH    NODETFLG,PRNT9900
.
          MOVE      "Details not Found. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      PRNT9999
.
PRNT8100  MOVE      "Creditor Detail is Missing. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      PRNT9999
.
PRNT8200  MOVE      "Invoice Detail is Missing. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      PRNT9999
.
PRNT9900  CALL      CLSPRINT                     * close print file & print
.
PRNT9999  RETURN
.
.-------------------------------------------------------
. Line Up Print
.-------------------------------------------------------
LNUP0000  MOVE      ONE,LINEUPYN
          CALL      PRNT0000
          MOVE      ZERO,LINEUPYN
.
LNUP9999  RETURN
.
.-------------------------------------------------------
. Enter Creditor Code
.-------------------------------------------------------
KAPMA000  MOVE     ONE,VALINDIC
          CALL     ERAS0000
.
          PACK     CRDNAM80,SP70,SP70
          PACK     CRDADD80,SP70,SP70
.
          OPEN     APSMXRA1,"apsmxraf"
          OPEN     APSMXRA2,"apsmxraf"
          MOVE     ZERO,CKEYTYP
          CALL     KAPMAA00
          CLOSE    APSMXRA1
          CLOSE    APSMXRA2
          BRANCH   EXIT,KAPMA999,KAPMA999
          IF       APMAHPY=1
            MOVE     "Creditor On Hold for Payments - ",DISPMSG
            CALL     MESSAGE1
            MOVE     SP70,APMACRD
            GOTO     KAPMA000
          ENDIF
          MOVE     APMACRD,APIMCRD
.
KAPMA900  STRIP    APMACN1
          STRIP    APMACN2
          CLEAR    CRDNAM80
          APPEND   APMACN1,CRDNAM80
          APPEND   SP1,CRDNAM80
          APPEND   APMACN2,CRDNAM80
          RESET    CRDNAM80
.
          STRIP    APMACA1
          STRIP    APMACA2
          STRIP    APMACA3
          STRIP    APMACPC
          CLEAR    CRDADD80
          APPEND   APMACA1,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACA2,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACA3,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACPC,CRDADD80
          RESET    CRDADD80
          MOVE     ZERO,EXIT
.
KAPMA999  RETURN
.
.-------------------------------------------------------
. Enter Invoice Reference
.-------------------------------------------------------
EINV0000  STRIP     INVREFER
          SFORMAT   VAR,SCPSLEN
          MOVE      INVREFER,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,INVREFER
          SFORMAT   VAR,127
          ENDSET    INVREFER
          APPEND    SP70,INVREFER
          RESET     INVREFER
          MATCH     SP70,INVREFER
          GOTO      EINV9900 IF EQUAL
          CMATCH    EXITCHAR,INVREFER
          GOTO      EINV9900 IF EQUAL
.
          MOVE      ONE,VALINDIC
          CALL      VDET0000
          BRANCH    NODETFLG,EINV0000
.
          MOVE      ZERO,EXIT
          GOTO      EINV9999
.
EINV9900  MOVE      ONE,EXIT
.
EINV9999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APS30CD     
          INC       APSBMFIO/INC
          INC       APSBMFKY    
          INC       APSCKIKY    
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCSAIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
.
          INC       STDGENCD
.
