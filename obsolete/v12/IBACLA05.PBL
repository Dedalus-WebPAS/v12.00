.*******************************************************************************
.* System         : Clinical Audit                                             *
.* Program        : IBACLA05                                                   *
.* Desc           : Ad-Hoc Enquiry                                             *
.*******************************************************************************
.* Date           : 06/04/1992                                                 *
.* Author         : Justin Coates                                              *
.* Function       : To locate patients from the CLAVARFD whose values lie      *
.*                  within the entered ranges.                                 *
.* Mods           :                                                            *
.*                                                                             *
.*        V11.03.01 22/03/2023  Ebon Clements  TSK 0909393                     *
.*                  Changed to use oprdetaf index 6                            *
.*        V11.00.01 11/03/2020  J.Tan          TSK 0838262                     *
.*                  Added Effective from and to date to MBS Item file          *
.*        V10.07.01 30/10/2015  Ebon Clements    CAR 268970                    *
.*                  Change to use OUTCLIFD index 1 instead of index 2          *
.*        V10.04.02 17/06/2014  Steve Armstrong  CAR 301639                    *
.*                  Added call to DTPA0000 on exit of program                  *
.*        V10.04.01 07/03/2014  Ania P           CAR 261630                    *
.*                  Remove the use of PORT for temp file names                 *
.*******************************************************************************
.*        V10.02.01 07/07/2011  Steve Armstrong  CAR 240722                    *
.*                  Added RDPMPX21 prior to calling PMIHEAD                    *
.*******************************************************************************
.*        V10.01.01 03/02/2011  Jill Parkinson   CAR 233088                    *
.*                  Added PMSVX1FD                                             *
.*******************************************************************************
.*        V9.09.01  04/03/2008  Peter Vela    CAR 162914                       *
.*                  Recompiled for KYOUTCLI - readk of outcliaf                *
.*        V9.03.01  29/12/2003  Sylvek Litewka  CAR 20222                      *
.*                  Modified procedures DPROV000 and DCAMBSX0 to read ICD      *
.*                  Disease file using IO routine RDPTICD1 and Discharge Date  *
.*                  as ICDRDDTE.                                               *
.*        V9.02.01  16/04/2003  Tonii  CAR 35401                               *
.*                  Fixed Cancel option                                        *
.*******************************************************************************
.*        V5.08.03  19/09/2000  Steve Armstrong   srf 647263                   *
.*                  Recompiled for changes to OUTDSCLN                         *
.*        V5.08.02  23/08/2000  Caleb Sharman                                  *
.*                  Changed Health Fund table variables to 8 chars             *
.*        V5.08.01  27/06/2000  Greg Horvat                                    *
.*                  Recompiled for PATICDKY - Validating ICD10 version 2 codes *
.*        V5.08.B02 16/03/2000  Steve Armstrong    5.08 Mods                   *
.*                  Mods for changes to OUTCLIFD (effective date)              *
.*        V5.08.B01 06/03/2000  Jill Habasque                                  *
.*                  Recompiled for STDKWSDF & STDKWSCD                         *
.*        V5.07.03  06/11/1999  Greg Horvat                                    *
.*                  Recompiled for PATICDKY                                    *
.*        V5.07.02  19/10/1999  Steve Downing  SRF 646137                      *
.*                  Added PTCNDCQS - Single column for doctor code search      *
.*        V5.07.01  08/03/1999  Steve Armstrong                                *
.*                  Mods for ICD10 keyword search                              *
.*        V5.07.B03 12/01/1999    Jim Stathopoulos                             *
.*                  Additional 507 Changes                                     *
.*        V5.07.B02 14/12/1998  Glenn Berry      5.07 Changes                  *
.*                  Fixed I*I                                                  *
.*        V5.07.B01 26/10/1998    Jim Stathopoulos                             *
.*                  507 Changes                                                *
.*        V5.01.002 14/01/1993    Justin Coates                                *
.*                  Added visit type and slot number to OP display             *
.*        V5.01.003 23/02/1993    Justin Coates                                *
.*                  Added supervising and trainee anaesthetist for theatre     *
.*        V5.01.004 02/03/1993    Darren Jones                                 *
.*                  access session team if no case team                        *
.*        V5.01.005 22/04/93 DIG                                               *
.*                  Re-Compiled for changes to PATALERT.                       *
.*        V5.01.006 14/01/94 Paul Howells                                      *
.*                  Changes for global recompile.                              *
.*        V5.01.007 26/05/1994 Ian Rutt                                        *
.*                  Fixed Global Recompile Bugs                                * 
.*******************************************************************************
.
.$$$$$
.
. INDEX 1  : when have a site dependant value which gives no key to either the
.            clinical audit files or an A&E/OP/IP/THEATRE file
. INDEX 2  : clinical audit code
. INDEX 3  : clinical audit date
. INDEX 4  : clinical audit time
. INDEX 5  : clinical audit numeric
. INDEX 6  : clinical audit doctor
. INDEX 7  : clinical audit theatre
. INDEX 8  : clinical audit mbs/icd-9
. INDEX 9  : clinical audit changeable code
. INDEX 10 : admission date
. INDEX 11 : discharge date
. INDEX 12 : OP visit date
. INDEX 13 : OP clinic type
. INDEX 14 : OP clinic id  
. INDEX 15 : A&E attendance date
. INDEX 16 : Theatre session date
.
.$$$$$
          INC       STD001FD/PBL
          INC       AAEDE1FD/INC
          INC       BOKRC1FD/INC
          INC       CLACATFD/INC
          INC       CLACODFD/INC
          INC       CLASITFD/INC
          INC       CLAVARFD/INC 
          INC       OPRCLIFD/INC
          INC       OPRDEAFD/INC
          INC       OPRDEBFD/INC
          INC       OPROPRFD/INC
          INC       OPRSESFD/INC
          INC       OUTBOAFD/INC
          INC       OUTCLIFD/INC
          INC       OUTCONFD/INC
          INC       OUTCTYFD/INC
          INC       OUTDIAFD/INC
          INC       OUTSITFD/INC
          INC       PATALRFD/INC
          INC       PATCALAG/INC
          INC       PATCODFD/INC
          INC       PATCOMM/INC             * variables for surname search
          INC       PATCONFD/INC            * control file
          INC       PATDHEAD/INC
          INC       PATDICVR/INC
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC
          INC       PATICDFD/INC
          INC       PATITMFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PATNIDFD/INC
          INC       PATNOBFD/INC
          INC       PATPR1FD/INC
          INC       PATTRNFD/INC
          INC       PATVISFD/INC
          INC       PATWR1FD/INC
          INC       PMSHCPFD/INC
          INC       SCRFLDFD/INC
          INC       SCRMASFD/INC
          INC       SCRPRGFD/INC
          INC       SCRPSTFD/INC
          INC       SCRSBGFD/INC
          INC       SCRSLTFD/INC
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.         program constants
.
BJDAY     FORM      3
CJDAY     FORM      3
CATCV     INIT      "CV"
CATEA     INIT      "EA"
CATEW     INIT      "EW"
CLAAUD    INIT      "CLAAUD"
CLAHOC    INIT      "CLAHOC"
COLADDA   FORM      "13"
COLADDB   FORM      "3"
FINISH    INIT      "Finish"
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
KEYA      INIT      " 21 U1-2,3-10,11-20"
LASTVIS   FORM      "15"
MODER     INIT      "Moderate  "
NONURG    INIT      "Non-urgent"
PRGIDI    INIT      "IBACLAUD"    * program id for item file
START     INIT      "Start "
TO        INIT      " to "
UNDLN50   INIT      "__________________________________________________"
URGENT    INIT      "Urgent    "
VISIN     INIT      "Inpatient    "
VISPR     INIT      "Pre-Admission"
Z20       INIT      "zzzzzzzzzzzzzzzzzzzz"
Z30       INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
TEMPA     IFILE     SQL, FIXED=21, KEY="U1-2,3-10,11-20"
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.CAVRSITE  DIM       2      2        1     Site Code                          
.CAVRVIST  DIM       8      8        3     Visit Number                       
.CAVRTHEU  DIM       10     10      11     Visit Number                       
.                                   21     End of Record
.
.         program variables
.
ATT       DIM       127
BEDADMT   DIM       3             * admitting bed
BEDCURR   DIM       3             * current/discharge bed
CALLPOSN  FORM      1
CFNAMEA   DIM       8
CKVISTYP  FORM      1         * the visit type to check for A&E,OP,IP,Theatre
CMDLINE   DIM       50
CNTITEM   FORM      2
CODE      DIM       2             * for patdscod
CODEANAE  DIM       6             * anaethetist code
CODESUPA  DIM       6             * supervising anaethetist code
CODETRNA  DIM       6             * trainee anaethetist code
CPINDEX   FORM      2         * copy of the index
CPVARBL   FORM      2         * copy of the variable number
CURRPAGE  FORM      2             * page counter
DESCANAE  DIM       50            * anaethetist desc
DESCSUPA  DIM       50            * supervising anaethetist desc
DESCTRNA  DIM       50            * trainee anaethetist desc
DIM1A     DIM       1
DIM3      DIM       3
DIM6      DIM       6
DIM12A    DIM       12
DIM12B    DIM       12
DIM14     DIM       14
DIM20     DIM       20
DIM40     DIM       40
DIM70     DIM       70
DIM80     DIM       80
DOCCODE   DIM       6 
DOCTNAM   DIM       41
FIELD     DIM       5[20]         * field entered/index/variable #
FIRSTFLD  FORM      2             * first field on screen which is entered
FLDID     DIM       5    
FORM5     FORM      5
FORM8     FORM      8
FRCODE    DIM       3             * codes file from code
FRDIAG    DIM       9             * diagnosis from code
FRRANGE   DIM       9             * common from variable for display
FRWARD    DIM       3             * ward from code
HNUMDES   DIM       9
INDEX     FORM      2             * which index to use
KEYFIELD  DIM       127
LLCNT     FORM      3
MBSICD    FORM      1             * 1 = keyin MBS item
NUMSCR    FORM      1             * copy of number of screens
OPCNCDSC  DIM       15            * clinic/surg desc
OPCNCLSU  FORM      1             * clinic or surgeon
OPCNCODE  FORM      1             * MBS or ICD
PATNAME   DIM       40            * patients name
PRGIDB    DIM       8             * program id for background/selections
RANGE     FORM      1
SAVFIRST  FORM      2             * save first field 
SAVINDX   FORM      2             * save index
SAVVARB   FORM      2             * save variable number
SAVKEY9   DIM       9
SAVKEY22  DIM       22            * save key for clavarfd
SCRID     DIM       2             * screen id for routines
SCRIDB    DIM       2             * screen  id for backgroud/selections file
SUMM      DIM       20[20]        * site & visit for person
THETUNIQ  DIM       10            * theatre unique id
TOCODE    DIM       3             * codes file to   code
TORANGE   DIM       9             * common to variable for display
TODIAG    DIM       9             * diagnosis to   code
TOWARD    DIM       3             * ward to   code
VAR       DIM       127
VARBLENO  FORM      2             * variable number of item (1-20)
WARDADMT  DIM       3             * admitting ward
WARDCURR  DIM       3             * current/disch ward
.
.         storage arrays for the 20 possible values of each audit variable
.
CHGC      DIM       3[20]         * changeable codes code   ACTUAL VALUES
CHGD      DIM       20[20]        * changeable codes desc
CODD      DIM       3[20]         * codes file
DATE      DIM       8[20]         * date
DOCT      DIM       6[20]         * doctors
FREE      DIM       50[20]        * free format
MBSI      DIM       9[20]         * MBS/ICD-9
NUMB      FORM      6.2[20]       * numeric
THET      DIM       6[20]         * theatres
TIME      DIM       5[20]         * time
.
.         storage arrays for the ranges
.
FRCHGC    DIM       3[20]         * changeable codes code    FROM
FRCHGD    DIM       20[20]        * changeable codes desc
FRCODD    DIM       3[20]         * codes file
FRDATE    DIM       8[20]         * date
FRDOCT    DIM       6[20]         * doctors
FRFREE    DIM       50[20]        * free format
FRMBSI    DIM       9[20]         * MBS/ICD-9
FRNUMB    FORM      6.2[20]       * numeric
FRTHET    DIM       6[20]         * theatres
FRTIME    DIM       5[20]         * time
.
TOCHGC    DIM       3[20]         * changeable codes code    TO
TOCHGD    DIM       20[20]        * changeable codes desc
TOCODD    DIM       3[20]         * codes file
TODATE    DIM       8[20]         * date
TODOCT    DIM       6[20]         * doctors
TOFREE    DIM       50[20]        * free format
TOMBSI    DIM       9[20]         * MBS/ICD-9
TONUMB    FORM      6.2[20]       * numeric
TOTHET    DIM       6[20]         * theatres
TOTIME    DIM       5[20]         * time
.
.         these are the display only fields which may be used in search criteria
.
FRDOA001  DIM       8             * from A&E attendance date
TODOA001  DIM       8             * to   A&E attendance date
FRDOA002  DIM       3             * from mode of arrival
TODOA002  DIM       3             * to   mode of arrival
FRDOA004  DIM       3             * from completion code
TODOA004  DIM       3             * to   completion code
.
FRDOI001  DIM       8             * from Admission date
TODOI001  DIM       8             * to   Admission date
FRDOI002  DIM       3             * from source of referral
TODOI002  DIM       3             * to   source of referral
FRDOI004  DIM       3             * from pat. class
TODOI004  DIM       3             * to   pat. class
FRDOI006  DIM       3             * from pat. cat
TODOI006  DIM       3             * to   pat. cat
FRDOI008  DIM       3             * from ward code (admission)
TODOI008  DIM       3             * to   ward code (admission)
FRDOI010  DIM       3             * from ward code (curr/disch)
TODOI010  DIM       3             * to   ward code (curr/disch)
FRDOI012  DIM       9             * from admit. diag
TODOI012  DIM       9             * to   admit. diag
FRDOI015  DIM       9             * from disch. diag
TODOI015  DIM       9             * to   disch. diag
FRDOI018  DIM       3             * from disch. stat
TODOI018  DIM       3             * to   disch. stat
FRDOI020  DIM       3             * from disch. dest
TODOI020  DIM       3             * to   disch. dest
FRDOI022  DIM       8             * from Discharge date
TODOI022  DIM       8             * to   Discharge date
.
FRDOO001  DIM       8             * from Outpatient date
TODOO001  DIM       8             * to   Outpatient date
FRDOO002  DIM       6             * from Outpatient clinic type
TODOO002  DIM       6             * to   Outpatient clinic type
FRDOO004  DIM       6             * from Outpatient clinic id
TODOO004  DIM       6             * to   Outpatient clinic id
FRDOO006  DIM       9             * from diagnosis code
TODOO006  DIM       9             * to   diagnosis code
.
FRDOT001  DIM       8             * from Theatre date
TODOT001  DIM       8             * to   Theatre date
FRDOT002  DIM       6             * from clinic/surgeon
TODOT002  DIM       6             * to   clinic/surgeon
FRDOT005  DIM       3             * from anaesthetic code
TODOT005  DIM       3             * to   anaesthetic code
FRDOT007  DIM       3             * from op type
TODOT007  DIM       3             * to   op type 
FRDOT009  DIM       3             * from transport code
TODOT009  DIM       3             * to   transport code
FRDOT011  DIM       3             * from UD field 1
TODOT011  DIM       3             * to   UD field 1
FRDOT013  DIM       3             * from UD field 2
TODOT013  DIM       3             * to   UD field 2
FRDOT015  DIM       3             * from UD field 3
TODOT015  DIM       3             * to   UD field 3
FRDOT017  DIM       3             * from UD field 4
TODOT017  DIM       3             * to   UD field 4
FRDOT019  DIM       9             * from prov item 1
TODOT019  DIM       9             * to   prov item 1
FRDOT021  DIM       9             * from prov item 2
TODOT021  DIM       9             * to   prov item 2
FRDOT023  DIM       9             * from prov item 3
TODOT023  DIM       9             * to   prov item 3
FRDOT029  DIM       6             * from theatre
TODOT029  DIM       6             * to   theatre
FRDOT040  FORM      4             * from duration
TODOT040  FORM      4             * to   duration
FRDOT041  DIM       3             * from known infection
TODOT041  DIM       3             * to   known infection
FRDOT043  DIM       6             * from anaesthetist
TODOT043  DIM       6             * to   anaesthetist
FRDOT045  DIM       6             * from supervising anaesthetist
TODOT045  DIM       6             * to   supervising anaesthetist
FRDOT047  DIM       6             * from trainee anaesthetist
TODOT047  DIM       6             * to   trainee anaesthetist
.
PRGID     INIT      "IBACLA05"
PRGNAM    INIT      "Ad-Hoc Enquiry"
VERSION   INIT      "V12.00.00"
.
.*********************************************************************
.* ML0000 - Mainline Logic                                           *
.*********************************************************************
ML0000    CALL      INIT0000                * Initialise
.
ML1000    CALL      SITE0000                * Identify the Audit site
          BRANCH    EXIT,ML9999             * Exit
.
ML2000    CALL      PROC0000                * Get parameters
          BRANCH    EXIT,ML1000:            * cancel
                         ML9999             * exit
.
          CALL      INDX0000                * get the index to loop over
          BRANCH    EXIT,ML2000             * no fields entered
.
          CALL      DATA0000                * get the patients in ranges
.
ML3000    CALL      SUMM0000                * display the patients found
          BRANCH    EXIT,ML2000             * no patient selected
.
          CALL      PTSL0000                * patient selected
          GOTO      ML3000
.
ML9999    CALL      DTPA0000                * remove temp file
          CHAIN     PGM
          STOP
.
.*********************************************************************
.                   INIT0000                    Called by : ML1000 
.         Initialize Routine
.*********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,CPAGENO            * set page for printing
.
          DISPLAY   *P50:24,"Opening clasitaf"
          OPEN      CLASITA1,"clasitaf"
          DISPLAY   *P58:24,"clavaraf"
          OPEN      CLAVARA1,"clavaraf"
          OPEN      CLAVARA2,"clavaraf"
          OPEN      CLAVARA3,"clavaraf"
          OPEN      CLAVARA4,"clavaraf"
          OPEN      CLAVARA5,"clavaraf"
          OPEN      CLAVARA6,"clavaraf"
          OPEN      CLAVARA7,"clavaraf"
          OPEN      CLAVARA8,"clavaraf"
          OPEN      CLAVARA9,"clavaraf"
.
          DISPLAY   *P58:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
          DISPLAY   *P58:24,"scrsbgaf";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P58:24,"scrpstaf";
          OPEN      SCRPSTA1,"scrpstaf"
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P58:24,"scrsltaf";
          OPEN      SCRSLTA1,"scrsltaf"
          OPEN      SCRSLTA2,"scrsltaf"
.
          DISPLAY   *P58:24,"controlf"
          OPEN      CONTROLF,"controlf"          * files to open
          DISPLAY   *P58:24,"patdschf"
          OPEN      PATDSCH2,"patdschf"
          DISPLAY   *P58:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          DISPLAY   *P58:24,"patmx1af"
          OPEN      PATMX1A1,"patmx1af"
          DISPLAY   *P58:24,"pmspx2af"
          OPEN      PMSPX2A1,"pmspx2af"
          DISPLAY   *P58:24,"patmi1af"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PATMI1A3,"patmi1af"
          DISPLAY   *P58:24,"patpramf"
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
          DISPLAY   *P58:24,"patpraxf"
          DISPLAY   *P58:24,"oprdetaf"
          OPEN      OPRDETA1,"oprdetaf"
          OPEN      OPRDETA6,"oprdetaf"
          DISPLAY   *P58:24,"aaede1af"
          OPEN      AAEDE1A1,"aaede1af"
          OPEN      AAEDE1A3,"aaede1af"
.
          READ      CONTROLF,TEN5;*190,CKMBS
          READ      CONTROLF,TWENTY1;*247,PTCNDCQS
          READ      CONTROLF,THIRTY;*168,HNUMDES
          READ      CONTROLF,FORTY;*96,OPCNCDSC,OPCNCLSU,OPCNCODE
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D
          MOVE      ONE,CNEWDS
          MOVE      ONE,CDEFDTE
          PACK      DSICDDTE,CCC,CYY,CMM,CDD
          REP       " 0",DSICDDTE
          STRIP     OPCNCDSC
.
          CALL      TFILENAM
          PACK      CFNAMEA,TFILNAME,SP70
.
INIT9999  RETURN
.
.*********************************************************************
.                   SITE0000                    Called by : ML1000
.         Get Clinical Audit Site
.*********************************************************************
SITE0000  HLINE     *G37,2,47,80
          CALL      KYCLASIT
          BRANCH    EXIT,SITE9999           * no code entered
.
          MOVE      "out",OSTFILE
          MOVE      CASTSITE,KEY6
          CALL      RDSITA1
          MOVE      OSTFILE,UID
.
.         valid site
.
SITE9200  PACK      PRGIDB,CLAHOC,CASTFILE  * Background Program Id
          MOVE      "01",SCRIDB             * Background Screen Id
          MOVE      THREE,CKVISTYP          * default to inpatient
          MOVE      CASTTYPE,FORM1          * get the visit type
          LOAD      CKVISTYP,FORM1,TWO,ONE,FOUR
          STRIP     CASTDESC
          DISPLAY   *P47:2,*V2LON,"- ",*+,CASTDESC,SP1  * display site name
          MOVE      CASTDESC,CPHDROPT       * set print suboption
          CALL      CRGV0000                * clear the range arrays
.
SITE9999  RETURN
.
.*********************************************************************
.                   PROC0000                    Called by : ML2000
.         get the parameters for the search
.*********************************************************************
PROC0000  CALL      OPFA0000                * open files
          CALL      DTPA0000                * delete temp file
.
PROC1000  PACK      PRGIDB,CLAHOC,CASTFILE  * Background Program Id
          MOVE      "01",SCRIDB             * Background Screen Id
          MOVE      PRGIDB,PRGID            * set program id
          MOVE      SCRIDB,SCRID            * set screen id
          DISPLAY   *P1:3,*EF;
          CALL      DSPBGRND                * Display Screen background
          BRANCH    EXIT,PROC9100           * no screen set up
.
          CALL      CSCR0000                * check the audit screen is valid
          BRANCH    EXIT,PROC9999           * invalid variables
.
          CALL      DCRG0000                * display the current range values
.
PROC5000  CALL      MSPCE000
          COMPARE   ZERO,CCITEM
          GOTO      PROC9900 IF EQUAL       * post selected
          COMPARE   "-1",CCITEM
          GOTO      PROC9910 IF EQUAL       * cancel selected
          COMPARE   "-2",CCITEM
          GOTO      PROC9920 IF EQUAL       * exit selected
.
          PACK      KEY13,PRGIDB,SCRIDB,CCITEM
          CALL      RDSCSL1                 * read selections file
          COMPARE   ZERO,OVRCD
          GOTO      PROC5500 IF EQUAL       * valid selection
.
          BEEP
          GOTO      PROC5000
.
.         now get position file record
.
PROC5500  PACK      KEY15,PRGIDB,SCRIDB,SCSLROW,SCSLCOL
          CALL      RDSCPS1                 * read screen position file
          BRANCH    OVRCD,PROC5000          * invalid record
.
          CALL      KEYN0000                * keyin appropriate item
          BRANCH    EXIT,PROC9910           * exitchar
          GOTO      PROC5000
.
. ******* Cancel selected *******
.
PROC6000  CALL      CRGV0000                * clear range arrays
          GOTO      PROC1000
.
PROC9100  DISPLAY   *P1:24,*B,"Program & Screen Id ",*V2LON,PRGID,"/",SCRID:
                    *HOFF," not set up.  ",*EL;
          CALL      HITENTER
          GOTO      PROC9910
.
. ******* Post selected *******
.
PROC9900  MOVE      ZERO,EXIT               * valid
          GOTO      PROC9999
.
PROC9910  MOVE      ONE,EXIT                * cancel selected
          GOTO      PROC9999
.
PROC9920  MOVE      TWO,EXIT                * exit selected
.
PROC9999  RETURN
+
.*********************************************************************
.                   INDX0000                    Called by : ML2000
.         work out which index to use for looping over CLAVARFD
.         try to get index which will optimize search
.         best    : index    2 -  9
.         next    : index   10 - 16
.         worst   : index    1
.*********************************************************************
INDX0000  MOVE      ZERO,FIRSTFLD           * set as no criteria entered
          MOVE      ZERO,SAVFIRST           * clear save first field
          MOVE      ONE,SAVINDX             * set save index to be worst index
          MOVE      ZERO,FORM2              * start at first item
          MOVE      ZERO,EXIT               * set exit as no
.
.         loop over screen fields to see which ones have been entered
.
INDX1000  WHILE     FORM2 <= 19 & EXIT = ZERO
            ADD       ONE,FORM2               * get to next field
            UNPACK    FIELD[FORM2],ANS,KEY4
            MOVE      ANS,FORM1               * get as a form
            IF        FORM1 = ONE
              MOVE      FORM2,FIRSTFLD          * the first field entered
              MOVE      ONE,EXIT                * set flag to exit
            ENDIF
          DO
.
          COMPARE   ZERO,FIRSTFLD
          GOTO      INDX9000 IF EQUAL       * no fields entered
.
          COMPARE   SAVFIRST,FIRSTFLD
          GOTO      INDX7000 IF EQUAL       * no more entered fields
.
.         have found an entered range, see if have the best index
.
          UNPACK    FIELD[FIRSTFLD],ANS,XMON,XDAY
          MOVE      XMON,CPINDEX            * check index 
          MOVE      XDAY,CPVARBL            * check variable number (1-20)
.
          IF        CPINDEX >= 2 & CPINDEX <= 9
            GOTO      INDX8000                * found best index
          ENDIF
.
.         found index 1 or 10-16 so keep looking for best index
.
          MOVE      FIRSTFLD,SAVFIRST       * save field number found
          IF        CPINDEX >= 10
            MOVE      CPINDEX,SAVINDX         * set save index
            MOVE      CPVARBL,SAVVARB         * set save variable
          ENDIF
          MOVE      ZERO,EXIT               * set to continue search
          GOTO      INDX1000
.
.         have got either index one or index 10-16
.
INDX7000  COMPARE   ONE,SAVINDX
          GOTO      INDX8000 IF EQUAL       * first index is found one
.
          MOVE      SAVINDX,INDEX           * set index
          MOVE      SAVVARB,VARBLENO        * set variable
          GOTO      INDX8500
.
.         got index 1 - 9
.
INDX8000  MOVE      XMON,INDEX              * set index
          MOVE      XDAY,VARBLENO           * set variable number
.
INDX8500  COMPARE   ZERO,INDEX
          GOTO      INDX9100 IF EQUAL       * no index found
          COMPARE   ZERO,VARBLENO
          GOTO      INDX9200 IF EQUAL       * no index found
          MOVE      ZERO,EXIT
          GOTO      INDX9999
.
INDX9000  DISPLAY   *P1:24,*B,"Search criteria must be entered.  ",*EL;
          GOTO      INDX9990
INDX9100  DISPLAY   *P1:24,*B,"No search index found.  ",*EL;
          GOTO      INDX9990
INDX9200  DISPLAY   *P1:24,*B,"No search variable found.  ",*EL;
INDX9990  CALL      HITENTER
          MOVE      ONE,EXIT
.
INDX9999  RETURN
+
.*********************************************************************
.                   DATA0000                    Called by : ML2000
.         obtain all patients within specified ranges
.*********************************************************************
DATA0000  DISPLAY   *P1:24,*EL,"Obtaining valid patients - ",*V2LON,*BLINKON:
                    "Please wait"
          CALL      CTPA0000                * create temp file
          CALL      RDSF0000                * positional read
.
DATA1000  CALL      RDKF0000                * perform next read & validation
          BRANCH    OVRCD,DATA9999          * finished
.
          PACK      KEY20,CAVRSITE,CAVRVIST,CAVRTHEU
          READ      TEMPA,KEY20;ANS
          GOTO      DATA1000 IF NOT OVER    * record exists so dont write
.
          DISPLAY   *P53:24,*HON,CAVRVIST,SP1,CAVRUNIQ,SP1,CAVRSITE
          WRITE     TEMPA,KEY10;CAVRSITE,CAVRVIST,CAVRTHEU
          GOTO      DATA1000
.
DATA9999  RETURN
+
.*********************************************************************
.                   SUMM0000                    Called by : ML3000
.         display the summary of details found
.*********************************************************************
SUMM0000  CALL      CLRA0000                * clear storage variables
          MOVE      ONE,CURRPAGE            * set page for display
          MOVE      "4",CVERT               * starting line
          MOVE      ZERO,CNTITEM            * clear count
          CALL      OPFS0000                * open files for PMI
          MOVE      "IBACLA05",PRGID        * set real program name
          DISPLAY   *P1:3,*EF,*V2LON,*ULON:
                    *P5:4,"Visit No",*P14:4,"U/R Number":
                    *P25:4,"Patient Name                            "
          IF        CKVISTYP = FOUR
            DISPLAY   *P66:4,*V2LON,*ULON,"Unique Id."
          ENDIF
.
          MOVE      SP20,KEY20
          READ      TEMPA,KEY20;;
.
. ******* loop over file *******
.
SUMM1000  READKS    TEMPA;CAVRSITE,CAVRVIST,CAVRTHEU
          GOTO      SUMM5000 IF OVER        * end of file
.
. ******* increment counters *******
.
SUMM2000  ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      SUMM4000 IF NOT LESS    * need a new page
.
SUMM2900  ADD       ONE,CNTITEM             * add to item counter
.
. ******* display data and store key *******
.
SUMM3000  CALL      GPMI0000                * get the PMI details
          DISPLAY   *P1:CVERT,*V2LON,CNTITEM,*HOFF,". ":
                    PVIBILL,SP2,PVIURNO,SP2,PATNAME,SP1,CAVRTHEU
          PACK      SUMM[CNTITEM],CAVRSITE,CAVRVIST,CAVRTHEU
          GOTO      SUMM1000
.
. ******* new screen needed *******
.
SUMM4000  BRANCH    CURRPAGE,SUMM4500
.
.         Middle pages : (N)ext & (P)revious
.
SUMM4100  MOVE      ONE,CALLPOSN            * set position
          CALL      KEYA0000
          BRANCH    EXIT,SUMM7000,SUMM0000,SUMM9100,SUMM8000
.                        Next     First    Exit     Print
          GOTO      SUMM6000
.
.         first page : (N)ext
.
SUMM4500  MOVE      TWO,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,SUMM7000,SUMM5900,SUMM9100,SUMM8000
.                        Next     First    Exit     Print
          GOTO      SUMM6000
.
. ******* no more data to display *******
.
SUMM5000  COMPARE   ZERO,CNTITEM
          GOTO      SUMM8900 IF EQUAL       * nothing on file
.
          BRANCH    CURRPAGE,SUMM5500
.
.         last page : (P)revious
.
SUMM5100  MOVE      THREE,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,SUMM5900,SUMM0000,SUMM9100,SUMM8000
.                        Next     First    Exit     Print
          GOTO      SUMM6000
.
.         first page :
.
SUMM5500  MOVE      FOUR,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,SUMM5900,SUMM5900,SUMM9100,SUMM8000
.                        Next     First    Exit     Print
          GOTO      SUMM6000
.
SUMM5900  BEEP   
          BRANCH    CALLPOSN,SUMM4100,SUMM4500,SUMM5100,SUMM5500
.
. ******* valid patient selected *******
.
SUMM6000  UNPACK    SUMM[FORM2],CAVRSITE,CAVRVIST,CAVRTHEU
          MOVE      CAVRVIST,PVIBILL        * set visit number
          MOVE      CAVRTHEU,THETUNIQ       * set unique theatre id
          GOTO      SUMM9000
.
. ******* set up for a new page *******
.
SUMM7000  CALL      CLRA0000                * clear storage variables
          ADD       ONE,CURRPAGE            * add to page counter
          MOVE      ONE,CNTITEM             * reset item counter
          MOVE      "4",CVERT               * set row
          DISPLAY   *P1:CVERT,*EF           * clear screen
          GOTO      SUMM3000
.
. ******* print the summary details *******
.
SUMM8000  CALL      PRANG000                * print the search criteria
          CALL      PSUM0000                * print patients found
          GOTO      SUMM0000
.
SUMM8900  DISPLAY   *P1:24,*B,"No patients found.  ",*EL;
          CALL      HITENTER
          GOTO      SUMM9100
.
. ******* set exit flags *******
.
SUMM9000  MOVE      ZERO,EXIT               * patient selected
          GOTO      SUMM9999
.
SUMM9100  MOVE      ONE,EXIT                * exit selected
.
SUMM9999  RETURN
+
.*********************************************************************
.                   PTSL0000                    Called by : ML3000
.         a patient has been selected so get all their visit details
.         and display the clinical audit details
.         Para's  : PVIBILL       visit number
.                   THETUNIQ      theatre unique id
.*********************************************************************
PTSL0000  CALL      CHIN0000                * get clavarfd variables
          MOVE      CASTSCRN,NUMSCR         * copy the screen value
          PACK      PRGIDB,CLAAUD,CASTFILE  * set program id
          MOVE      "01",SCRIDB             * set screen id
          MOVE      PRGIDB,PRGID            * set for b/grnd display
          MOVE      SCRIDB,SCRID            * set for b/grnd display
.
          COMPARE   FOUR,CKVISTYP
          GOTO      PTSL1000 IF EQUAL       * a theatre patient
.
.         get A&E, OP or IP details
.
          OPEN      PATVISA1,"patvisaf"
          MOVE      PVIBILL,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,PTSL9100          * invalid visit
.
          OPEN      AAEDE1A1,"aaede1af"
          OPEN      PATALRT1,"patalrtf"
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PATNOBE1,"patnobef"
          OPEN      PATTRAN2,"pattranf"
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATWR1A4,"patwr1af"
.
          MOVE      PVIBILL,KEY8
          PERFORM   CKVISTYP,RDDETA1,GOPD0000,RDMISS1
          BRANCH    OVRCD,PTSL9400          * invalid patient
.
          PACK      DDIAG,SP30,SP20
          PACK      DDIAG2,SP30,SP20
          UNPACK    SP30,DSTAT,DDEST,DDATE,DFMBS
          CALL      RDDSCH1                 * get any discharge details
          IF        OVRCD=0
            MOVE      DDATE,ICDRDDTE        * Used for reading ICD Disease file
          ENDIF
          GOTO      PTSL2000
.
.         get theatre details
.
PTSL1000  CALL      GOPR0000                * get theatre details
          BRANCH    EXIT,PTSL9200           * invalid patient
.
          OPEN      BOKRC1A1,"bokrc1af"
          MOVE      OPDAADMN,KEY8
          CALL      RDBKREC1
          CLOSE     BOKRC1A1
          BRANCH    OVRCD,PTSL9300          * invalid booking
.
          MOVE      BKREURNO,PVIURNO        * set UR number
.
.         get PMI details
.
PTSL2000  MATCH     ZEROUR,PVIURNO          * do we have a UR number
          IF        @EQUAL
            MOVE      PVIBILL,KEY8
            CALL      RDPRAM1
            MOVE      ZEROUR,PURNO
          ELSE
            MOVE      PVIURNO,KEY8
            CALL      RDMAST1
            CALL      RDPMPX21
          ENDIF
          PERFORM   CKVISTYP,AAEHEAD,OUTHEAD,PATHEAD,THETHEAD
.
.         display the screen background and all available details
.
PTSL3000  DISPLAY   *P1:8,*EF;
          CALL      DSPBGRND                * display background
          BRANCH    EXIT,PTSL9000           * no screen
.
          CALL      DCAVR000                * display all clavarfd variables
.
PTSL3500  CALL      KEYC0000                * keyin line 24
          BRANCH    EXIT,PTSL4000,PTSL5000,PTSL6000
.                        print    next     first
          GOTO      PTSL9910
.
PTSL4000  CALL      PCAVR000                * print all details
          GOTO      PTSL3500
.
.         there is two screens so display second one
.
PTSL5000  MOVE      "02",SCRIDB
          MOVE      "02",SCRID
          MOVE      THREE,NUMSCR            * set so displays (F)irst
          GOTO      PTSL3000
.
PTSL6000  MOVE      "01",SCRIDB
          MOVE      "01",SCRID
          MOVE      TWO,NUMSCR              * set so displays (N)ext
          GOTO      PTSL3000
.
PTSL9000  DISPLAY   *P1:24,*B,"Program & Screen Id ",*V2LON,PRGID,"/",SCRID:
                    *HOFF," not set up.  ",*EL;
          CALL      HITENTER
          GOTO      PTSL9910
.
PTSL9100  DISPLAY   *P1:24,*B,"No visit details.  ",*EL;
          CALL      HITENTER
          GOTO      PTSL9910
.
PTSL9200  DISPLAY   *P1:24,*B,"No operation details.  ",*EL;
          CALL      HITENTER
          GOTO      PTSL9910
.
PTSL9300  DISPLAY   *P1:24,*B,"No booking details.  ",*EL;
          CALL      HITENTER
          GOTO      PTSL9910
.
PTSL9400  IF        CKVISTYP = ONE
            DISPLAY   *P1:24,*B,"NO A&E details.  ",*EL;
          ELSE
            DISPLAY   *P1:24,*B,"No Admission details.  ",*EL;
          ENDIF
          CALL      HITENTER
          GOTO      PTSL9910
.
PTSL9910  CLOSE     AAEDE1A1
          CLOSE     OPRDETA2
          CLOSE     PATALRT1
          CLOSE     PATDSCH1
          CLOSE     PATMI1A1
          CLOSE     PATNOBE1
          CLOSE     PATTRAN2
          CLOSE     PATWR1A1
          CLOSE     PATWR1A4
.
PTSL9999  RETURN
+
.*********************************************************************
.                   CRGV0000                    Called by : SITE9200
.         Clear the range arrays                            PROC6000
.*********************************************************************
CRGV0000  MOVE      ZERO,INDEX              * clear index
          MOVE      ZERO,VARBLENO           * clear variable number
          MOVE      "20",FORM2
          WHILE     FORM2
            MOVE      SP3,FRCODD[FORM2]
            PACK      FRFREE[FORM2],SP30,SP30
            MOVE      SP8,FRDATE[FORM2]
            MOVE      SP5,FRTIME[FORM2]
            MOVE      "-99999.99",TONUMB[FORM2]
            MOVE      SP6,FRDOCT[FORM2]
            MOVE      SP6,FRTHET[FORM2]
            MOVE      SP9,FRMBSI[FORM2]
            MOVE      SP3,FRCHGC[FORM2]
            MOVE      SP20,FRCHGD[FORM2]
.
            MOVE      Z20,TOCODD[FORM2]
            PACK      TOFREE[FORM2],Z20,Z20
            MOVE      Z20,TODATE[FORM2]
            MOVE      Z20,TOTIME[FORM2]
            MOVE      "999999.99",TONUMB[FORM2]
            MOVE      Z20,TODOCT[FORM2]
            MOVE      Z20,TOTHET[FORM2]
            MOVE      Z20,TOMBSI[FORM2]
            MOVE      Z20,TOCHGC[FORM2]
            MOVE      Z20,TOCHGD[FORM2]
.
            MOVE      "0    ",FIELD[FORM2]    * set as not entered
            SUB       ONE,FORM2
          DO
.
.         now clear all the display only fields ranges
.
          PACK      DIM80,SP30,SP30,SP20
          PACK      VAR,Z20,Z20,Z20,Z20
.
          UNPACK    DIM80,FRDOA001,FRDOA002,FRDOA004
          UNPACK    VAR,TODOA001,TODOA002,TODOA004
.
          UNPACK    DIM80,FRDOI001,FRDOI002,FRDOI004,FRDOI006,FRDOI008
          UNPACK    DIM80,FRDOI010,FRDOI012,FRDOI015,FRDOI018
          UNPACK    DIM80,FRDOI020,FRDOI022
          UNPACK    VAR,TODOI001,TODOI002,TODOI004,TODOI006,TODOI008
          UNPACK    VAR,TODOI010,TODOI012,TODOI015,TODOI018
          UNPACK    VAR,TODOI020,TODOI022
.
          UNPACK    DIM80,FRDOO001,FRDOO002,FRDOO004,FRDOO006
          UNPACK    VAR,TODOO001,TODOO002,TODOO004,TODOO006
.
          UNPACK    DIM80,FRDOT001,FRDOT002,FRDOT005,FRDOT007
          UNPACK    VAR,TODOT001,TODOT002,TODOT005,TODOT007
          UNPACK    DIM80,FRDOT009,FRDOT011,FRDOT013,FRDOT015
          UNPACK    VAR,TODOT009,TODOT011,TODOT013,TODOT015
          UNPACK    DIM80,FRDOT017,FRDOT019,FRDOT021,FRDOT023
          UNPACK    VAR,TODOT017,TODOT019,TODOT021,TODOT023
          UNPACK    DIM80,FRDOT029,FRDOT041,FRDOT043,FRDOT045,FRDOT047
          UNPACK    VAR,TODOT029,TODOT041,TODOT043,TODOT045,TODOT047
          MOVE      "-999",FRDOT040
          MOVE      "9999",TODOT040
.
CRGV9999  RETURN
+
.*********************************************************************
.                   OPFA0000                    Called by : PROC0000
.         open the files for the clinical audits
.*********************************************************************
OPFA0000  OPEN      CLACATA1,"clacataf"
          OPEN      CLACODA1,"clacodaf"
          OPEN      OPRCLIA1,"oprcliaf"
          OPEN      OPRCLIA2,"oprcliaf"
          OPEN      OPROPRA1,"opropraf"
          OPEN      OPROPRA2,"opropraf"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATDO1A2,"patdo1af"
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATITEM1,"patitemn"
          OPEN      PATTRAN2,"pattranf"
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATWR1A3,"patwr1af"
          CALL      OPICD1                  * Open ICD Disease files
OPFA9999  RETURN
+
.*********************************************************************
.                   DTPA0000                    Called by : PROC0000
.         Delete temp file A                                CTPA0000
.*********************************************************************
DTPA0000  CLOSE     TEMPA,DELETE            * close temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISERASE,CFNAMEA * set command line for erase
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * delete the temp file
DTPA9999  RETURN
+
.*********************************************************************
.                   CSCR0000                    Called by : PROC1000 
.         Check that the audit screen only has variables that are on
.         the input screen
.*********************************************************************
CSCR0000  MOVE      "01",SCRID              * set screen id
          PACK      PRGID,CLAAUD,CASTFILE   * input audit program id
.
.         loop over each selection for this site and make sure
.         the selection appears on the input screen
.
          PACK      KEY13,PRGIDB,SCRID,SP3
          CALL      RSSCSL1
.
CSCR1000  CALL      RKSCSL1
          BRANCH    OVRCD,CSCR9000          * end of file so OK
.
          MATCH     PRGIDB,SCSLPID
          GOTO      CSCR9000 IF NOT EQUAL   * different program so OK
.
          MATCH     SCRID,SCSLSID
          GOTO      CSCR9000 IF NOT EQUAL   * different screen so OK
.
          MOVE      SCSLITM,FLDID           * set field id
          MOVE      SCSLITM,FORM5           * set field id
          COMPARE   "281",FORM5
          GOTO      CSCR5000 IF NOT LESS    * valid field
.
          CALL      GETPOSIT
          COMPARE   ZERO,EXIT
          GOTO      CSCR5000 IF EQUAL       * is on the screen
.
          BRANCH    CASTSCRN,CSCR4000       * only one screen
.
          MOVE      "02",SCRID              * set screen id
          CALL      GETPOSIT
          COMPARE   ZERO,EXIT
          GOTO      CSCR5000 IF EQUAL       * is on the screen
.
CSCR4000  DISPLAY   *P1:24,*B,"Selection ",*V2LON,SCSLSEL,*HOFF:
                    " is not on the Audit screen.  ",*EL;
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      CSCR9900
.
.         reset screen id
.
CSCR5000  MOVE      "01",SCRID
          GOTO      CSCR1000
.
.         all selections are OK
.
CSCR9000  MOVE      ZERO,EXIT
.
.         restore program id
.
CSCR9900  MOVE      "IBACLA05",PRGID        * re-set program id
          MOVE      "01",SCRID
.
CSCR9999  RETURN
+
.*********************************************************************
.                   DCRG0000
.         display the current range values
.*********************************************************************
DCRG0000  MOVE      ZERO,EXIT               * clear exit flag
          MOVE      ZERO,CNTITEM            * clear field counter
          PACK      KEY15,PRGIDB,SCRIDB,SP20
          CALL      RSSCPS1
.
DCRG1000  CALL      RKSCPS1                 * next read
          BRANCH    OVRCD,DCRG9999          * end of file
.
          MATCH     PRGIDB,SCPSPID
          GOTO      DCRG9999 IF NOT EQUAL   * different prog
          MATCH     SCRIDB,SCPSSID
          GOTO      DCRG9999 IF NOT EQUAL   * different screen
.
          ADD       ONE,CNTITEM             * get to next field number
          MOVE      FIELD[CNTITEM],ANS      * get input part of variable
          MATCH     "0",ANS
          GOTO      DCRG1000 IF EQUAL       * field not entered so dont display
.
          CALL      DVAL0000                * display the search parameters
          GOTO      DCRG1000
.
DCRG9999  RETURN
+
.*********************************************************************
.                   KEYN0000                    Called by : PROC5500
.         Keyin a variable (insert & change mode)
.*********************************************************************
KEYN0000  CALL      CVRB0000                * get variable 1-20 number
          MOVE      ZERO,EXIT               * clear exit flag
          MOVE      SCPSITM,FORM5           * item number
          MOVE      SCPSCOL,ECOL            * column
          MOVE      SCPSROW,EVERT           * row
          PERFORM   FORM5,KCACODD0,KEYN9999,KCACODD0,KEYN9999,KCACODD0:
                          KEYN9999,KCACODD0,KEYN9999,KCACODD0,KEYN9999:
                          KCACODD0,KEYN9999,KCACODD0,KEYN9999,KCACODD0:
                          KEYN9999,KCACODD0,KEYN9999,KCACODD0,KEYN9999:
                          KCACODD0,KEYN9999,KCACODD0,KEYN9999,KCACODD0:
                          KEYN9999,KCACODD0,KEYN9999,KCACODD0,KEYN9999:
                          KCACODD0,KEYN9999,KCACODD0,KEYN9999,KCACODD0:
                          KEYN9999,KCACODD0,KEYN9999,KCACODD0,KEYN9999:
.
                          KEYN9999,KEYN9999,KEYN9999,KEYN9999,KEYN9999:
                          KEYN9999,KEYN9999,KEYN9999,KEYN9999,KEYN9999:
                          KEYN9999,KEYN9999,KEYN9999,KEYN9999,KEYN9999:
                          KEYN9999,KEYN9999,KEYN9999,KEYN9999,KEYN9999:
.
                          KCADATE0,KCADATE0,KCADATE0,KCADATE0,KCADATE0:
                          KCADATE0,KCADATE0,KCADATE0,KCADATE0,KCADATE0:
                          KCADATE0,KCADATE0,KCADATE0,KCADATE0,KCADATE0:
                          KCADATE0,KCADATE0,KCADATE0,KCADATE0,KCADATE0:
.
                          KCATIME0,KCATIME0,KCATIME0,KCATIME0,KCATIME0:
                          KCATIME0,KCATIME0,KCATIME0,KCATIME0,KCATIME0:
                          KCATIME0,KCATIME0,KCATIME0,KCATIME0,KCATIME0:
                          KCATIME0,KCATIME0,KCATIME0,KCATIME0,KCATIME0:
.
                          KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0:
                          KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0:
                          KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0:
                          KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0,KCANUMB0:
.
                          KCADOCT0,KEYN9999,KCADOCT0,KEYN9999,KCADOCT0:
                          KEYN9999,KCADOCT0,KEYN9999,KCADOCT0,KEYN9999:
                          KCADOCT0,KEYN9999,KCADOCT0,KEYN9999,KCADOCT0:
                          KEYN9999,KCADOCT0,KEYN9999,KCADOCT0,KEYN9999:
                          KCADOCT0,KEYN9999,KCADOCT0,KEYN9999,KCADOCT0:
                          KEYN9999,KCADOCT0,KEYN9999,KCADOCT0,KEYN9999:
                          KCADOCT0,KEYN9999,KCADOCT0,KEYN9999,KCADOCT0:
                          KEYN9999,KCADOCT0,KEYN9999,KCADOCT0,KEYN9999:
.
                          KCATHET0,KEYN9999,KCATHET0,KEYN9999,KCATHET0:
                          KEYN9999,KCATHET0,KEYN9999,KCATHET0,KEYN9999:
                          KCATHET0,KEYN9999,KCATHET0,KEYN9999,KCATHET0:
                          KEYN9999,KCATHET0,KEYN9999,KCATHET0,KEYN9999:
                          KCATHET0,KEYN9999,KCATHET0,KEYN9999,KCATHET0:
                          KEYN9999,KCATHET0,KEYN9999,KCATHET0,KEYN9999:
                          KCATHET0,KEYN9999,KCATHET0,KEYN9999,KCATHET0:
                          KEYN9999,KCATHET0,KEYN9999,KCATHET0,KEYN9999:
.
                          KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0:
                          KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999:
                          KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0:
                          KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999:
                          KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0:
                          KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999:
                          KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0:
                          KEYN9999,KCAMBSI0,KEYN9999,KCAMBSI0,KEYN9999:
.
                          KCACHGC0,KEYN9999,KCACHGC0,KEYN9999,KCACHGC0:
                          KEYN9999,KCACHGC0,KEYN9999,KCACHGC0,KEYN9999:
                          KCACHGC0,KEYN9999,KCACHGC0,KEYN9999,KCACHGC0:
                          KEYN9999,KCACHGC0,KEYN9999,KCACHGC0,KEYN9999:
                          KCACHGC0,KEYN9999,KCACHGC0,KEYN9999,KCACHGC0:
                          KEYN9999,KCACHGC0,KEYN9999,KCACHGC0,KEYN9999:
                          KCACHGC0,KEYN9999,KCACHGC0,KEYN9999,KCACHGC0:
                          KEYN9999,KCACHGC0,KEYN9999,KCACHGC0,KEYN9999
.
          MOVE      SCPSITM,FORM5           * get as a form
          IF        FORM5 >= 281
            SUB       "280",FORM5             * start at field 1
            IF        CKVISTYP = 1
              PERFORM   FORM5,KDORA010,KDORA020,KEYN9999,KDORA040,KEYN9999:
                              KEYN9999
            ENDIF
            IF        CKVISTYP = 2
              PACK      CFNAME,OSTFILE,FILCTYA1
              CLOSE     OUTCTYA1
              OPEN      OUTCTYA1,CFNAME
              PACK      CFNAME,OSTFILE,FILCLIA1
              CLOSE     OUTCLIA1
              OPEN      OUTCLIA1,CFNAME
              PERFORM   FORM5,KDORO010,KDORO020,KEYN9999,KDORO040,KEYN9999:
                              KDORO060,KEYN9999,KEYN9999,KEYN9999,KEYN9999
            ENDIF
            IF        CKVISTYP = 3
              PERFORM   FORM5,KDORI010,KDORI020,KEYN9999,KDORI040,KEYN9999:
                              KDORI060,KEYN9999,KDORI080,KEYN9999,KDORI100:
                              KEYN9999,KDORI120,KEYN9999,KEYN9999,KDORI150:
                              KEYN9999,KEYN9999,KDORI180,KEYN9999,KDORI200:
                              KEYN9999,KDORI220
            ENDIF
            IF        CKVISTYP = 4
              PERFORM   FORM5,KDORT010,KDORT020,KEYN9999,KEYN9999,KDORT050:
                              KEYN9999,KDORT070,KEYN9999,KDORT090,KEYN9999:
                              KDORT110,KEYN9999,KDORT130,KEYN9999,KDORT150:
                              KEYN9999,KDORT170,KEYN9999,KDORT190,KEYN9999:
                              KDORT210,KEYN9999,KDORT230,KEYN9999,KEYN9999:
                              KEYN9999,KEYN9999,KEYN9999,KDORT290,KEYN9999:
                              KEYN9999,KEYN9999,KEYN9999,KEYN9999,KEYN9999:
                              KEYN9999,KEYN9999,KEYN9999,KEYN9999,KDORT400:
                              KDORT410,KEYN9999,KDORT430,KEYN9999,KDORT450:
                              KEYN9999,KDORT470,KEYN9999
            ENDIF
          ENDIF
.
          BRANCH    EXIT,KEYN9000,KEYN9100  * nothing/exitchar
.         
KEYN9000  MOVE      ZERO,EXIT               * valid entry
          GOTO      KEYN9999
.
KEYN9100  MOVE      ONE,EXIT                * exitchar entered
.
KEYN9999  RETURN
+
.*********************************************************************
.                   CVRB0000
.         Calculate which variable number (1-20) an item is
.         Para's  : SCPSITM       the field number
.         Returns : VARBLENO      the variable number 1-20
.*********************************************************************
CVRB0000  MOVE      SCPSITM,FORM5           * get as a numeric
          MOVE      ZERO,VARBLENO           * clear variable number
.
          IF        FORM5 >= 41 & FORM5 <= 60
            ASSIGN    (FORM5-40),VARBLENO     * free format field
          ENDIF
.
          IF        FORM5 >= 61 & FORM5 <= 80
            ASSIGN    (FORM5-60),VARBLENO     * date field
          ENDIF
.
          IF        FORM5 >= 81 & FORM5 <= 100
            ASSIGN    (FORM5-80),VARBLENO     * time field
          ENDIF
.
          IF        FORM5 >= 101 & FORM5 <= 120
            ASSIGN    (FORM5-100),VARBLENO    * numeric field
          ENDIF
.
          IF        FORM5 >= 121 & FORM5 <= 160
            SUB       "120",FORM5             * doctors field
          ENDIF
.
          IF        FORM5 >= 161 & FORM5 <= 200
            SUB       "160",FORM5             * theatre field
          ENDIF
.
          IF        FORM5 >= 201 & FORM5 <= 240
            SUB       "200",FORM5             * MBS/ICD field
          ENDIF
.
          IF        FORM5 >= 241 & FORM5 <= 280
            SUB       "240",FORM5             * changeable code field
          ENDIF
.
          LOAD      VARBLENO,FORM5,ONE,ONE,TWO,TWO,THREE:
                                   THREE,FOUR,FOUR,FIVE,FIVE:
                                   SIX,SIX,SEVEN,SEVEN,EIGHT:
                                   EIGHT,NINE,NINE,TEN,TEN:
                                   TEN1,TEN1,TEN2,TEN2,TEN3:
                                   TEN3,TEN4,TEN4,TEN5,TEN5:
                                   TEN6,TEN6,TEN7,TEN7,TEN8:
                                   TEN8,TEN9,TEN9,TWENTY,TWENTY
.
.DISPLAY *P1:3,"SCPSITM=[",SCPSITM,"] VARBLENO=[",VARBLENO,"]",*EL;
.KEYIN ANS
CVRB9999  RETURN
+
.*********************************************************************
.                   KCACODD0
.         keyin any of the twenty CLINICAL AUDITS CODES FILE variables 
.*********************************************************************
KCACODD0  PACK      FIELD[CCITEM],ONE,SP1,TWO,VARBLENO  * field entered
          MOVE      ZERO,CKYIMAND           * mandatory ??
          MOVE      SP3,CKYIDEF3            * default value
          MOVE      SP2,CACTCODE            * clear the category
          PACK      KEY8,CASTSITE,VARBLENO
          CALL      RDCACAT1                * get category
          MOVE      CACTCODE,CODE           * set category
          DISPLAY   *PECOL:EVERT,SP6
          CALL      KYCLACOD
          COMPARE   TWO,EXIT
          GOTO      KCACODD9 IF EQUAL       * exitchar entered
          MOVE      CACDCODE,FRCODD[VARBLENO]  * set the value
          MATCH     SP3,CACDCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
.
          CALL      DTOK0000                * display 'to' and add to column
.
KCACODD5  MOVE      FRCODD[VARBLENO],CKYIDEF3 * default value
          DISPLAY   *PECOL:EVERT,SP6
          CALL      KYCLACOD
          COMPARE   TWO,EXIT
          GOTO      KCACODD9 IF EQUAL       * exitchar entered
          MOVE      CACDCODE,TOCODD[VARBLENO]  * set the value
          MATCH     SP3,CACDCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TOCODD[VARBLENO]
          ENDIF
.
          MATCH     FRCODD[VARBLENO],TOCODD[VARBLENO]
          GOTO      KCACODD9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCACODD5
.
KCACODD9  RETURN
+
.*********************************************************************
.                   KCADATE0
.         keyin any of the twenty DATE variables 
.*********************************************************************
KCADATE0  PACK      FIELD[CCITEM],ONE,SP1,THREE,VARBLENO  * field entered
          UNPACK    SP6,CYEAR,CMON,CDAY     * no default
          MOVE      CCC,CCENT
.
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          CALL      KEYDATE
          IF        OVRCD = ZERO
            PACK      FRDATE[VARBLENO],CCENT,CYEAR,CMON,CDAY
            REP       " 0",FRDATE[VARBLENO]
          ELSE
            DISPLAY   *PCCOL:CVERT,*V2LON,"Start     "
            MOVE      SP8,FRDATE[VARBLENO]
          ENDIF
          CALL      DTOK0000                * display 'to' and add to column
.
KCADATE5  CALL      KEYDATE
          IF        OVRCD = ZERO
            PACK      TODATE[VARBLENO],CCENT,CYEAR,CMON,CDAY
            REP       " 0",TODATE[VARBLENO]
          ELSE
            DISPLAY   *PCCOL:CVERT,*V2LON,"Finish    "
            MOVE      Z20,TODATE[VARBLENO]
          ENDIF
.
          MATCH     FRDATE[VARBLENO],TODATE[VARBLENO]
          GOTO      KCADATE9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCADATE5
.
KCADATE9  RETURN
+
.*********************************************************************
.         keyin any of the twenty TIME fields
.*********************************************************************
KCATIME0  PACK      FIELD[CCITEM],ONE,SP1,FOUR,VARBLENO  * field entered
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          DISPLAY   *PCCOL:CVERT,SP6
          UNPACK    SP4,CHOUR,CMIN          * default time
          CALL      KEYTIME
          IF        OVRCD = ZERO
            PACK      FRTIME[VARBLENO],CHOUR,COLON,CMIN
            REP       " 0",FRTIME[VARBLENO]
          ELSE
            DISPLAY   *PCCOL:CVERT,*V2LON,"Start     "
            MOVE      SP5,FRTIME[VARBLENO]
          ENDIF
          CALL      DTOK0000                * display 'to' and add to column
.
KCATIME5  DISPLAY   *PCCOL:CVERT,SP6
          CALL      KEYTIME
          IF        OVRCD = ZERO
            PACK      TOTIME[VARBLENO],CHOUR,COLON,CMIN
            REP       " 0",TOTIME[VARBLENO]
          ELSE
            DISPLAY   *PCCOL:CVERT,*V2LON,"Finish    "
            MOVE      Z20,TOTIME[VARBLENO]
          ENDIF
.
          MATCH     FRTIME[VARBLENO],TOTIME[VARBLENO]
          GOTO      KCATIME9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCATIME5
.
KCATIME9  RETURN
+
.*********************************************************************
.         keyin any of the twenty NUMERIC fields
.*********************************************************************
KCANUMB0  PACK      FIELD[CCITEM],ONE,SP1,FIVE,VARBLENO  * field entered
          KEYIN     *PECOL:EVERT,"______.__":
                    *PECOL:EVERT,*V2LON,FRNUMB[VARBLENO]:
                    *PECOL:EVERT,*DV,FRNUMB[VARBLENO]
          IF        FRNUMB[VARBLENO] = 0
            DISPLAY   *PECOL:EVERT,*V2LON,"Start     "
            MOVE      "-99999.99",FRNUMB[VARBLENO]
          ENDIF
          CALL      DTOK0000                * display 'to' and add to column
.
KCANUMB5  KEYIN     *PECOL:EVERT,"______.__":
                    *PECOL:EVERT,*V2LON,TONUMB[VARBLENO]:
                    *PECOL:EVERT,*DV,TONUMB[VARBLENO]
          IF        TONUMB[VARBLENO] = 0
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish    "
            MOVE      "999999.99",TONUMB[VARBLENO]
          ENDIF
.
          COMPARE   FRNUMB[VARBLENO],TONUMB[VARBLENO]
          GOTO      KCANUMB9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCANUMB5
.
KCANUMB9  RETURN
+
.*********************************************************************
.         keyin any of the twenty DOCTOR fields
.*********************************************************************
KCADOCT0  PACK      FIELD[CCITEM],ONE,SP1,SIX,VARBLENO  * field entered
          MOVE      ZERO,CKYIMAND           * mandatory ??
          MOVE      SP6,CKYIDEF6            * default value
          CALL      PATDOCKY
          COMPARE   TWO,EXIT
          GOTO      KCADOCT9 IF EQUAL       * exitchar entered
          MOVE      DOCCODE,FRDOCT[VARBLENO]  * set the code
          MATCH     SP6,DOCCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
          CALL      DTOK0000                * display 'to' and add to column
.
KCADOCT5  MOVE      FRDOCT[VARBLENO],CKYIDEF6 * default value
          CALL      PATDOCKY
          COMPARE   TWO,EXIT
          GOTO      KCADOCT9 IF EQUAL       * exitchar entered
          MOVE      DOCCODE,TODOCT[VARBLENO]  * set the code
          MATCH     SP6,DOCCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TODOCT[VARBLENO]
          ENDIF
.
          MATCH     FRDOCT[VARBLENO],TODOCT[VARBLENO]
          GOTO      KCADOCT9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCADOCT5
.
KCADOCT9  RETURN
+
.*********************************************************************
.                   KCATHET0
.         keyin any of the twenty THEATRE variables
.*********************************************************************
KCATHET0  PACK      FIELD[CCITEM],ONE,SP1,SEVEN,VARBLENO  * field entered
          MOVE      SP6,CKYIDEF6            * default value
          MOVE      ZERO,CKYIMAND           * mandatory ??
          CALL      KYOPROPR                * keyin code
          COMPARE   TWO,EXIT
          GOTO      KCATHET9 IF EQUAL       * exitchar entered
          MOVE      OPRMROOM,FRTHET[VARBLENO] * set code
          MATCH     SP6,OPRMROOM
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
          MOVE      FRTHET[VARBLENO],CKYIDEF6 * default value
          CALL      DTOK0000                * display 'to' and add to column
.
KCATHET5  CALL      KYOPROPR                * keyin code
          COMPARE   TWO,EXIT
          GOTO      KCATHET9 IF EQUAL       * exitchar entered
          MOVE      OPRMROOM,TOTHET[VARBLENO] * set code
          MATCH     SP6,OPRMROOM
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TOTHET[VARBLENO]
          ENDIF
.
          MATCH     FRTHET[VARBLENO],TOTHET[VARBLENO]
          GOTO      KCATHET9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCATHET5
.
KCATHET9  RETURN
+
.*********************************************************************
.                   KCAMBSI0
.         keyin any of the twenty MBS/ICD-9 variables
.*********************************************************************
KCAMBSI0  PACK      FIELD[CCITEM],ONE,SP1,EIGHT,VARBLENO  * field entered
          MOVE      SP9,CKYIDEF9            * default value
          MOVE      ZERO,CKYIMAND           * mandatory ??
          BRANCH    CKMBS,KCAMBSI2,KCAMBSI4
          GOTO      KCAMBSI9
.
.         keyin MBS code
.
KCAMBSI2  CALL      PATITMKY                * keyin MBS item
          COMPARE   TWO,EXIT
          GOTO      KCAMBSI9 IF EQUAL       * exitchar entered
          MOVE      AMBS,FRMBSI[VARBLENO]     * set the value
          MATCH     SP9,AMBS
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start   "
          ENDIF
          CALL      DTOK0000                * display 'to' and add to column
.
KCAMBSI3  MOVE      FRMBSI[VARBLENO],CKYIDEF9 * default value
          CALL      PATITMKY                * keyin MBS item
          COMPARE   TWO,EXIT
          GOTO      KCAMBSI9 IF EQUAL       * exitchar entered
          MOVE      AMBS,TOMBSI[VARBLENO]     * set the value
          MATCH     SP9,AMBS
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish   "
            MOVE      Z20,TOMBSI[VARBLENO]
          ENDIF
          MATCH     FRMBSI[VARBLENO],TOMBSI[VARBLENO]
          GOTO      KCAMBSI9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCAMBSI3
.
.         keyin ICD-9 code
.
KCAMBSI4  CALL      PATICDKY                * keyin ICD-9 code
          COMPARE   TWO,EXIT
          GOTO      KCAMBSI9 IF EQUAL       * exitchar entered
          MOVE      DPCODE,FRMBSI[VARBLENO]   * set the value
          MATCH     SP9,DPCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
          CALL      DTOK0000                * display 'to' and add to column
.
KCAMBSI5  MOVE      FRMBSI[VARBLENO],CKYIDEF9 * default value
          CALL      PATICDKY                * keyin ICD-9 code
          COMPARE   TWO,EXIT
          GOTO      KCAMBSI9 IF EQUAL       * exitchar entered
          MOVE      DPCODE,TOMBSI[VARBLENO]   * set the value
          MATCH     SP3,DPCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TOMBSI[VARBLENO]
          ENDIF
.
          MATCH     FRMBSI[VARBLENO],TOMBSI[VARBLENO]
          GOTO      KCAMBSI9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCAMBSI5
.
KCAMBSI9  RETURN
+
.*********************************************************************
.                   KCACHGC0
.         keyin any of the twenty codes file CHANGEABLE variables
.*********************************************************************
KCACHGC0  PACK      FIELD[CCITEM],ONE,SP1,NINE,VARBLENO  * field entered
          MOVE      ZERO,CKYIMAND           * mandatory ??
          MOVE      SP3,CKYIDEF3            * default value
          MOVE      SP2,CACTCHGE            * clear the category
          PACK      KEY8,CASTSITE,VARBLENO
          CALL      RDCACAT1                * get category
          MOVE      CACTCHGE,CODE           * set category
          DISPLAY   *PECOL:EVERT,SP6
          CALL      KYCLACOD
          COMPARE   TWO,EXIT
          GOTO      KCACHGC9 IF EQUAL       * exitchar entered
          MOVE      CACDCODE,FRCHGC[VARBLENO]    * set code
          MATCH     SP3,CACDCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
          CALL      DTOK0000                * display 'to' and add to column
.
KCACHGC5  MOVE      FRCHGC[VARBLENO],CKYIDEF3 * default value
          DISPLAY   *PECOL:EVERT,SP6
          CALL      KYCLACOD
          COMPARE   TWO,EXIT
          GOTO      KCACHGC9 IF EQUAL       * exitchar entered
          MOVE      CACDCODE,TOCHGC[VARBLENO]    * set code
          MATCH     SP3,CACDCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TOCHGC[VARBLENO]
          ENDIF
.
          MATCH     FRCHGC[VARBLENO],TOCHGC[VARBLENO]
          GOTO      KCACHGC9 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KCACHGC5
.
KCACHGC9  RETURN
+
.*********************************************************************
.         keyin ACCIDENT & EMERGENCY extra variable ranges
.*********************************************************************
KDORA010  MOVE      ONE,VARBLENO            * ATTENDANCE DATE
          PACK      FIELD[CCITEM],ONE,TEN5,VARBLENO  * field entered
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    CQUEST,KDORA010         * ? entered
.
          IF        OVRCD = ONE
            MOVE      SP8,FRDOA001 
            DISPLAY   *PCCOL:CVERT,*V2LON,START
          ELSE
            PACK      FRDOA001,CCENT,CYEAR,CMON,CDAY
            REP       " 0",FRDOA001
          ENDIF
.
          CALL      DTOK0000                * display the ' to '
.
KDORA015  CALL      KEYDATE
          BRANCH    CQUEST,KDORA015         * ? entered
.
          IF        OVRCD = ONE
            MOVE      Z20,TODOA001 
            DISPLAY   *PCCOL:CVERT,*V2LON,FINISH
          ELSE
            PACK      TODOA001,CCENT,CYEAR,CMON,CDAY
            REP       " 0",TODOA001
          ENDIF
.
          MATCH     FRDOA001,TODOA001
          GOTO      KDORA019 IF NOT LESS    * valid ranges
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORA015
.
KDORA019  RETURN
.*********************************************************************
KDORA020  MOVE      CATEA,CODE              * MODE OF ARRIVAL
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOA002         * set from code
          MOVE      TOCODE,TODOA002         * set to   code
          MOVE      "2",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORA029  RETURN
.*********************************************************************
KDORA040  MOVE      CATEW,CODE              * COMPLETION CODE
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOA004         * set from code
          MOVE      TOCODE,TODOA004         * set to   code
          MOVE      "4",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORA049  RETURN
+
.*********************************************************************
.         keyin OUTPATIENT extra variables ranges
.*********************************************************************
KDORO010  MOVE      ONE,VARBLENO            * VISIT DATE
          PACK      FIELD[CCITEM],ONE,TEN2,VARBLENO  * field entered
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    CQUEST,KDORO010         * ? entered
.
          IF        OVRCD = ONE
            MOVE      SP6,FRDOO001 
            DISPLAY   *PCCOL:CVERT,*V2LON,START
          ELSE
            PACK      FRDOO001,CCENT,CYEAR,CMON,CDAY
            REP       " 0",FRDOO001
          ENDIF
.
          CALL      DTOK0000                * display the ' to '
.
KDORO015  CALL      KEYDATE
          BRANCH    CQUEST,KDORO015         * ? entered
.
          IF        OVRCD = ONE
            MOVE      Z20,TODOO001 
            DISPLAY   *PCCOL:CVERT,*V2LON,FINISH
          ELSE
            PACK      TODOO001,CCENT,CYEAR,CMON,CDAY
            REP       " 0",TODOO001
          ENDIF
.
          MATCH     FRDOO001,TODOO001
          GOTO      KDORO019 IF NOT LESS    * valid ranges
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORO015
.
KDORO019  RETURN
.*********************************************************************
KDORO020  MOVE      ZERO,CKYIMAND           * CLINIC TYPE
          MOVE      ONE,VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,TEN3,VARBLENO  * field entered
          MOVE      SP6,CKYIDEF6            * no default value
          CALL      KYOUTCTY
          COMPARE   TWO,EXIT
          GOTO      KDORO029 IF EQUAL       * exitchar entered
.
          MOVE      OCTCTYP,FRDOO002        * set code
          IF        EXIT = ONE
            DISPLAY   *PECOL:EVERT,*V2LON,START
          ENDIF
.
          CALL      DTOK0000                * display the ' to '
          MOVE      OCTCTYP,CKYIDEF6        * default to start code
.
KDORO025  CALL      KYOUTCTY
          COMPARE   TWO,EXIT
          GOTO      KDORO029 IF EQUAL       * exitchar entered
.
          MOVE      OCTCTYP,TODOO002        * set code
          IF        EXIT = ONE
            DISPLAY   *PECOL:EVERT,*V2LON,FINISH
            MOVE      Z20,TODOO002
          ENDIF
.
          MATCH     FRDOO002,TODOO002
          GOTO      KDORO029 IF NOT LESS    * valid
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORO025
.
KDORO029  RETURN
.*********************************************************************
KDORO040  MOVE      ZERO,CKYIMAND           * CLINIC ID
          MOVE      ONE,VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,TEN4,VARBLENO  * field entered
          MOVE      SP6,CKYIDEF6            * no default value
          CALL      KYOUTCLI
          COMPARE   TWO,EXIT
          GOTO      KDORO049 IF EQUAL       * exitchar entered
.
          MOVE      OCACLIN,FRDOO004        * set code
          IF        EXIT = ONE
            DISPLAY   *PECOL:EVERT,*V2LON,START
          ENDIF
.
          CALL      DTOK0000                * display the ' to '
          MOVE      OCACLIN,CKYIDEF6        * default to start code
.
KDORO045  CALL      KYOUTCLI
          COMPARE   TWO,EXIT
          GOTO      KDORO049 IF EQUAL       * exitchar entered
.
          MOVE      OCACLIN,TODOO004        * set code
          IF        EXIT = ONE
            DISPLAY   *PECOL:EVERT,*V2LON,FINISH
            MOVE      Z20,TODOO004
          ENDIF
.
          MATCH     FRDOO004,TODOO004
          GOTO      KDORO049 IF NOT LESS    * valid
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORO045
.
KDORO049  RETURN
.*********************************************************************
KDORO060  MOVE      CKMBS,MBSICD            * DIAGNOSIS CODE
          CALL      RGED0000                * enter ranges
          MOVE      FRDIAG,FRDOO006         * set from code
          MOVE      TODIAG,TODOO006         * set to   code
          MOVE      "6",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORO069  RETURN
+
.*********************************************************************
.         keyin INPATIENT extra variable ranges
.*********************************************************************
KDORI010  MOVE      ONE,VARBLENO            * ADMISSION DATE
          PACK      FIELD[CCITEM],ONE,TEN,VARBLENO  * field entered
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    CQUEST,KDORI010         * ? entered
.
          IF        OVRCD = ONE
            MOVE      SP6,FRDOI001 
            DISPLAY   *PCCOL:CVERT,*V2LON,START
          ELSE
            PACK      FRDOI001,CCENT,CYEAR,CMON,CDAY
            REP       " 0",FRDOI001
          ENDIF
.
          CALL      DTOK0000                * display the ' to '
.
KDORI015  CALL      KEYDATE
          BRANCH    CQUEST,KDORI015         * ? entered
.
          IF        OVRCD = ONE
            MOVE      Z20,TODOI001 
            DISPLAY   *PCCOL:CVERT,*V2LON,FINISH
          ELSE
            PACK      TODOI001,CCENT,CYEAR,CMON,CDAY
            REP       " 0",TODOI001
          ENDIF
.
          MATCH     FRDOI001,TODOI001
          GOTO      KDORI019 IF NOT LESS    * valid ranges
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORI015
.
KDORI019  RETURN
.*********************************************************************
KDORI020  MOVE      "S ",CODE               * SOURCE OF REFERRAL
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOI002         * set from code
          MOVE      TOCODE,TODOI002         * set to   code
          MOVE      "2",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI029  RETURN
.*********************************************************************
KDORI040  MOVE      "A ",CODE               * PATIENT CLASSIFICATION
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOI004         * set from code
          MOVE      TOCODE,TODOI004         * set to   code
          MOVE      "4",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI049  RETURN
.*********************************************************************
KDORI060  MOVE      "P ",CODE               * PATIENT CATEGORY
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOI006         * set from code
          MOVE      TOCODE,TODOI006         * set to   code
          MOVE      "6",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI069  RETURN
.*********************************************************************
KDORI080  CALL      RGEW0000                * ADMISSION WARD
          MOVE      FRWARD,FRDOI008         * set from code
          MOVE      TOWARD,TODOI008         * set to   code
          MOVE      "8",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI089  RETURN
.*********************************************************************
KDORI100  CALL      RGEW0000                * CURRENT/DISCHARGE WARD
          MOVE      FRWARD,FRDOI010         * set from code
          MOVE      TOWARD,TODOI010         * set to   code
          MOVE      "10",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI109  RETURN
.*********************************************************************
KDORI120  MOVE      CKMBS,MBSICD            * ADMITTING DIAGNOSIS
          CALL      RGED0000                * enter ranges
          MOVE      FRDIAG,FRDOI012         * set from code
          MOVE      TODIAG,TODOI012         * set to   code
          MOVE      "12",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI129  RETURN
.*********************************************************************
KDORI150  MOVE      CKMBS,MBSICD            * DISCHARGE DIAGNOSIS
          CALL      RGED0000                * enter ranges
          MOVE      FRDIAG,FRDOI015         * set from code
          MOVE      TODIAG,TODOI015         * set to   code
          MOVE      "15",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI159  RETURN
.*********************************************************************
KDORI180  MOVE      "D ",CODE               * DISCHARGE STATUS
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOI018         * set from code
          MOVE      TOCODE,TODOI018         * set to   code
          MOVE      "18",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI189  RETURN
.*********************************************************************
KDORI200  MOVE      "DD",CODE               * DISCHARGE DESTINATION
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOI020         * set from code
          MOVE      TOCODE,TODOI020         * set to   code
          MOVE      "20",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORI209  RETURN
.*********************************************************************
KDORI220  MOVE      ONE,VARBLENO            * DISCHARGE DATE
          PACK      FIELD[CCITEM],ONE,TEN1,VARBLENO  * field entered
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    CQUEST,KDORI220         * ? entered
.
          IF        OVRCD = ONE
            MOVE      SP6,FRDOI022 
            DISPLAY   *PCCOL:CVERT,*V2LON,START
          ELSE
            PACK      FRDOI022,CCENT,CYEAR,CMON,CDAY
            REP       " 0",FRDOI022
          ENDIF
.
          CALL      DTOK0000                * display the ' to '
.
KDORI225  CALL      KEYDATE
          BRANCH    CQUEST,KDORI225         * ? entered
.
          IF        OVRCD = ONE
            MOVE      Z20,TODOI022
            DISPLAY   *PCCOL:CVERT,*V2LON,FINISH
          ELSE
            PACK      TODOI022,CCENT,CYEAR,CMON,CDAY
            REP       " 0",TODOI022
          ENDIF
.
          MATCH     FRDOI022,TODOI022
          GOTO      KDORI229 IF NOT LESS    * valid ranges
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORI225
.
KDORI229  RETURN
+
.*********************************************************************
.         keyin THEATRE extra variable ranges
.*********************************************************************
KDORT010  MOVE      ONE,VARBLENO            * PROCEDURE DATE
          PACK      FIELD[CCITEM],ONE,TEN6,VARBLENO  * field entered
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    CQUEST,KDORT010         * ? entered
.
          IF        OVRCD = ONE
            MOVE      SP6,FRDOT001 
            DISPLAY   *PCCOL:CVERT,*V2LON,START
          ELSE
            PACK      FRDOT001,CCENT,CYEAR,CMON,CDAY
            REP       " 0",FRDOT001
          ENDIF
.
          CALL      DTOK0000                * display the ' to '
.
KDORT015  CALL      KEYDATE
          BRANCH    CQUEST,KDORT015         * ? entered
.
          IF        OVRCD = ONE
            MOVE      Z20,TODOT001 
            DISPLAY   *PCCOL:CVERT,*V2LON,FINISH
          ELSE
            PACK      TODOT001,CCENT,CYEAR,CMON,CDAY
            REP       " 0",TODOT001
          ENDIF
.
          MATCH     FRDOT001,TODOT001
          GOTO      KDORT019 IF NOT LESS    * valid ranges
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORT015
.
KDORT019  RETURN
.*********************************************************************
KDORT020  MOVE      "2",VARBLENO            * CLINIC/SURGEON 
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
          DISPLAY   *PECOL:EVERT,SP6
          MOVE      SP6,CKYIDEF6
          CALL      KDOC0000                * enter the code
          MOVE      DCODE,FRDOT002          * set up code
          MATCH     SP6,DCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,START
          ENDIF
.
          CALL      DTOK0000
.
KDORT025  MOVE      FRDOT002,CKYIDEF6       * default code
          DISPLAY   *PECOL:EVERT,SP6
          CALL      KDOC0000                * enter the docs code
          MOVE      DCODE,TODOT002          * set up code
          MATCH     SP6,DCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,FINISH
            MOVE      Z20,TODOT002
          ENDIF
.
          MATCH     FRDOT002,TODOT002
          GOTO      KDORT029 IF NOT LESS    * valid ranges
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORT025
.
KDORT029  RETURN
+
.*********************************************************************
KDORT050  MOVE      "OA",CODE               * ANAESTHETIC CODE
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOT005         * set from code
          MOVE      TOCODE,TODOT005         * set to   code
          MOVE      "5",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT059  RETURN
.*********************************************************************
KDORT070  MOVE      "OY",CODE               * OPERATION TYPE
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOT007         * set from code
          MOVE      TOCODE,TODOT007         * set to   code
          MOVE      "7",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT079  RETURN
.*********************************************************************
KDORT090  MOVE      "OR",CODE               * TRANSPORT CODE
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOT009         * set from code
          MOVE      TOCODE,TODOT009         * set to   code
          MOVE      "9",VARBLENO            * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT099  RETURN
.*********************************************************************
KDORT110  MOVE      "Y6",CODE               * UD FIELD 1
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOT011         * set from code
          MOVE      TOCODE,TODOT011         * set to   code
          MOVE      "11",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT119  RETURN
.*********************************************************************
KDORT130  MOVE      "Y7",CODE               * UD FIELD 2
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOT013         * set from code
          MOVE      TOCODE,TODOT013         * set to   code
          MOVE      "13",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT139  RETURN
.*********************************************************************
KDORT150  MOVE      "Y8",CODE               * UD FIELD 3
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOT015         * set from code
          MOVE      TOCODE,TODOT015         * set to   code
          MOVE      "15",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT159  RETURN
.*********************************************************************
KDORT170  MOVE      "Y9",CODE               * UD FIELD 4
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOT017         * set from code
          MOVE      TOCODE,TODOT017         * set to   code
          MOVE      "17",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT179  RETURN
.*********************************************************************
KDORT190  MOVE      OPCNCODE,MBSICD         * PROVISIONAL ITEM 1
          CALL      RGED0000                * enter the range
          MOVE      FRDIAG,FRDOT019         * set from code
          MOVE      TODIAG,TODOT019         * set to   code
          MOVE      "19",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT199  RETURN
.*********************************************************************
KDORT210  MOVE      OPCNCODE,MBSICD         * PROVISIONAL ITEM 2
          CALL      RGED0000                * enter the range
          MOVE      FRDIAG,FRDOT021         * set from code
          MOVE      TODIAG,TODOT021         * set to   code
          MOVE      "21",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT219  RETURN
.*********************************************************************
KDORT230  MOVE      OPCNCODE,MBSICD         * PROVISIONAL ITEM 3
          CALL      RGED0000                * enter the range
          MOVE      FRDIAG,FRDOT023         * set from code
          MOVE      TODIAG,TODOT023         * set to   code
          MOVE      "23",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT239  RETURN
.*********************************************************************
KDORT290  MOVE      ZERO,CKYIMAND           * OPERATING ROOM
          MOVE      SP6,CKYIDEF6            * default value
          MOVE      "29",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      KYOPROPR
          MOVE      OPRMROOM,FRDOT029       * from code
          MATCH     SP6,OPRMROOM
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
.
          CALL      DTOK0000                * display 'to' and add to column
.
KDORT295  MOVE      OPRMROOM,CKYIDEF6       * default value
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      KYOPROPR
          MOVE      OPRMROOM,TODOT029       * set the value
          MATCH     SP6,OPRMROOM
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TODOT029
          ENDIF
.
          MATCH     FRDOT029,TODOT029
          GOTO      KDORT299 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORT295
.
KDORT299  RETURN
.*********************************************************************
KDORT400  KEYIN     *PECOL:EVERT,*DV,UNDLN4,*DV,SP2:  * DURATION
                    *PECOL:EVERT,*V2LON,FRDOT040:
                    *PECOL:EVERT,*DV,FRDOT040
.
          IF        FRDOT040 = ZERO
            DISPLAY   *PECOL:EVERT,*V2LON,START
          ENDIF
.
          CALL      DTOK0000
.
KDORT405  KEYIN     *PECOL:EVERT,*DV,UNDLN4,*DV,SP2:
                    *PECOL:EVERT,*V2LON,TODOT040:
                    *PECOL:EVERT,*DV,TODOT040
.
          IF        TODOT040 = ZERO
            DISPLAY   *PECOL:EVERT,*V2LON,FINISH
            MOVE      "9999",TODOT040
          ENDIF
.
          MOVE      "40",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
.
          COMPARE   FRDOT040,TODOT040
          GOTO      KDORT409 IF NOT LESS    * valid ranges
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORT405
.
KDORT409  RETURN
.*********************************************************************
KDORT410  MOVE      "OK",CODE               * KNOWN INFECTION
          CALL      RGEC0000                * enter the range
          MOVE      FRCODE,FRDOT041         * set from code
          MOVE      TOCODE,TODOT041         * set to   code
          MOVE      "41",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
KDORT419  RETURN
.*********************************************************************
KDORT430  MOVE      ZERO,CKYIMAND           * ANAESTHETIST
          MOVE      SP6,CKYIDEF6            * default value
          MOVE      "43",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATDOCKY
          MOVE      DOCCODE,FRDOT043        * from code
          MATCH     SP6,DOCCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
.
          CALL      DTOK0000                * display 'to' and add to column
.
KDORT435  MOVE      DOCCODE,CKYIDEF6        * default value
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATDOCKY
          MOVE      DOCCODE,TODOT043        * set the value
          MATCH     SP6,DOCCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TODOT043
          ENDIF
.
          MATCH     FRDOT043,TODOT043
          GOTO      KDORT439 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORT435
.
KDORT439  RETURN
.*********************************************************************
KDORT450  MOVE      ZERO,CKYIMAND           * SUPERVISING ANAESTHETIST
          MOVE      SP6,CKYIDEF6            * default value
          MOVE      "45",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATDOCKY
          MOVE      DOCCODE,FRDOT045        * from code
          MATCH     SP6,DOCCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
.
          CALL      DTOK0000                * display 'to' and add to column
.
KDORT455  MOVE      DOCCODE,CKYIDEF6        * default value
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATDOCKY
          MOVE      DOCCODE,TODOT045        * set the value
          MATCH     SP6,DOCCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TODOT045
          ENDIF
.
          MATCH     FRDOT045,TODOT045
          GOTO      KDORT459 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORT455
.
KDORT459  RETURN
.*********************************************************************
KDORT470  MOVE      ZERO,CKYIMAND           * TRAINEE ANAESTHETIST
          MOVE      SP6,CKYIDEF6            * default value
          MOVE      "47",VARBLENO           * set variable number
          PACK      FIELD[CCITEM],ONE,SP1,ONE,VARBLENO  * field entered
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATDOCKY
          MOVE      DOCCODE,FRDOT047        * from code
          MATCH     SP6,DOCCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
.
          CALL      DTOK0000                * display 'to' and add to column
.
KDORT475  MOVE      DOCCODE,CKYIDEF6        * default value
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATDOCKY
          MOVE      DOCCODE,TODOT047        * set the value
          MATCH     SP6,DOCCODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TODOT047
          ENDIF
.
          MATCH     FRDOT047,TODOT047
          GOTO      KDORT479 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      KDORT475
.
KDORT479  RETURN
+
.*********************************************************************
.                   RDSF0000                    Called by : DATA0000 
.         perform the desired positional read
.*********************************************************************
RDSF0000  BRANCH    INDEX,RDSF0100,RDSF0200,RDSF0300,RDSF0400,RDSF0500:
                          RDSF0600,RDSF0700,RDSF0800,RDSF0900,RDSF1000:
                          RDSF1100,RDSF1200,RDSF1300,RDSF1400,RDSF1500:
                          RDSF1600
          GOTO      RDSF9999
.
RDSF0100  PACK      KEY22,CASTFILE,SP30
          CALL      RSCAVAR1
          DISPLAY   *P45:24,"VAR1  : "
          GOTO      RDSF9999
.
RDSF0200  PACK      KEY7,CASTFILE,VARBLENO,SP20
          CALL      RSCAVAR2
          DISPLAY   *P45:24,"VAR2  : "
          GOTO      RDSF9999
.
RDSF0300  PACK      KEY12,CASTFILE,VARBLENO,SP20
          CALL      RSCAVAR3
          DISPLAY   *P45:24,"VAR3  : "
          GOTO      RDSF9999
.
RDSF0400  PACK      KEY9,CASTFILE,VARBLENO,SP20
          CALL      RSCAVAR4
          DISPLAY   *P45:24,"VAR4  : "
          GOTO      RDSF9999
.
RDSF0500  PACK      KEY13,CASTFILE,VARBLENO,SP30
          CALL      RSCAVAR5
          DISPLAY   *P45:24,"VAR5  : "
          GOTO      RDSF9999
.
RDSF0600  PACK      KEY10,CASTFILE,VARBLENO,SP30
          CALL      RSCAVAR6
          DISPLAY   *P45:24,"VAR6  : "
          GOTO      RDSF9999
.
RDSF0700  PACK      KEY10,CASTFILE,VARBLENO,SP30
          CALL      RSCAVAR7
          DISPLAY   *P45:24,"VAR7  : "
          GOTO      RDSF9999
.
RDSF0800  PACK      KEY13,CASTFILE,VARBLENO,SP30
          CALL      RSCAVAR8
          DISPLAY   *P45:24,"VAR8  : "
          GOTO      RDSF9999
.
RDSF0900  PACK      KEY7,CASTFILE,VARBLENO,SP30
          CALL      RSCAVAR9
          DISPLAY   *P45:24,"VAR9  : "
          GOTO      RDSF9999
.
RDSF1000  PACK      KEY16,FRDOI001,SP20
          CALL      RDSMISS3
          DISPLAY   *P45:24,"MISS3 : "
          GOTO      RDSF9999
.
RDSF1100  PACK      KEY16,FRDOI022,SP20
          CALL      RDSDSCH2
          DISPLAY   *P45:24,"DSCH2 : "
          GOTO      RDSF9999
.
RDSF1200  PACK      KEY36,SP20,SP20
          CLOSE     OUTBOKA3                * for outpatients read site dep file
          PACK      CFNAME,UID,FILBOKA3
          OPEN      OUTBOKA3,CFNAME
          CALL      RDSBOKA3
          DISPLAY   *P45:24,"BOKA3 : "
          GOTO      RDSF9999
.
RDSF1300  PACK      KEY35,IDDD,FRDOO002,SP30
          CLOSE     OUTBOKA2                * for outpatients read site dep file
          PACK      CFNAME,UID,FILBOKA2
          OPEN      OUTBOKA2,CFNAME
          CALL      RDSBOKA2
          DISPLAY   *P45:24,"BOKA2 : "
          GOTO      RDSF9999
.
RDSF1400  PACK      KEY28,IDDD,FRDOO004,SP30
          CLOSE     OUTBOKA1                * for outpatients read site dep file
          PACK      CFNAME,UID,FILBOKA1
          OPEN      OUTBOKA1,CFNAME
          CALL      RDSBOKA1
          DISPLAY   *P45:24,"BOKA1 : "
          GOTO      RDSF9999
.
RDSF1500  PACK      KEY21,FRDOA001,SP20
          CALL      RDSDETA3
          DISPLAY   *P45:24,"DETA3 : "
          GOTO      RDSF9999
.
RDSF1600  PACK      KEY26,FRDOT001,SP20
          CALL      RSOPDEA6
          DISPLAY   *P45:24,"DEA1  : "
          GOTO      RDSF9999
.
RDSF9999  RETURN
+
.*********************************************************************
.                   RDKF0000                    Called by : DATA1000
.         do the correct next read
.*********************************************************************
RDKF0000  BRANCH    INDEX,RDKF0100,RDKF0200,RDKF0300,RDKF0400,RDKF0500:
                          RDKF0600,RDKF0700,RDKF0800,RDKF0900,RDKF1000:
                          RDKF1100,RDKF1200,RDKF1300,RDKF1400,RDKF1500:
                          RDKF1600
          GOTO      RDKF9100
.
RDKF0100  CALL      RKCAVAR1                * display only fields
          BRANCH    OVRCD,RDKF9100
          DISPLAY   *P53:24,CAVRVIST,SP1,CAVRUNIQ,*EL;
          MATCH     CAVRSITE,CASTFILE
          GOTO      RDKF9100 IF NOT EQUAL   * not correct site
          GOTO      RDKF5100
.
RDKF0200  CALL      RKCAVAR2                * CODED FIELDS
          BRANCH    OVRCD,RDKF9100
          GOTO      RDKF5000
.
RDKF0300  CALL      RKCAVAR3                * DATES
          BRANCH    OVRCD,RDKF9100
          GOTO      RDKF5000
.
RDKF0400  CALL      RKCAVAR4                * TIMES
          BRANCH    OVRCD,RDKF9100
          GOTO      RDKF5000
.
RDKF0500  CALL      RKCAVAR5                * NUMERICS
          BRANCH    OVRCD,RDKF9100
          GOTO      RDKF5000
.
RDKF0600  CALL      RKCAVAR6                * DOCTORS
          BRANCH    OVRCD,RDKF9100
          GOTO      RDKF5000
.
RDKF0700  CALL      RKCAVAR7                * THEATRES
          BRANCH    OVRCD,RDKF9100
          GOTO      RDKF5000
.
RDKF0800  CALL      RKCAVAR8                * MBS/ICD-9
          BRANCH    OVRCD,RDKF9100
          GOTO      RDKF5000
.
RDKF0900  CALL      RKCAVAR9                * CHANGEABLE CODES
          BRANCH    OVRCD,RDKF9100
          GOTO      RDKF5000
.
RDKF1000  CALL      RDKMISS3                * ADMISSION DATE
          BRANCH    OVRCD,RDKF9100
          MOVE      AADMNO,KEY8             * set visit number
          GOTO      RDKF4900
.
RDKF1100  CALL      RDKDSCH2                * DISCHARGE DATE
          BRANCH    OVRCD,RDKF9100
          MOVE      DADMNO,KEY8             * set visit number
          GOTO      RDKF4900
.
RDKF1200  CALL      RDKBOKA3                * OP VISIT DATE 
          BRANCH    OVRCD,RDKF9100
          MATCH     IDDD,OBASITE
          GOTO      RDKF9100 IF NOT EQUAL   * wrong site
          COMPARE   ZERO,OBAOUTNO
          GOTO      RDKF0000 IF EQUAL       * empty slot
          MOVE      OBAOUTNO,KEY8           * set visit number
          GOTO      RDKF4900
.
RDKF1300  CALL      RDKBOKA2                * OP CLINIC TYPE
          BRANCH    OVRCD,RDKF9100
          MATCH     IDDD,OBASITE
          GOTO      RDKF9100 IF NOT EQUAL   * wrong site
          COMPARE   ZERO,OBAOUTNO
          GOTO      RDKF0000 IF EQUAL       * empty slot
          MOVE      OBAOUTNO,KEY8           * set visit number
          GOTO      RDKF4900
.
RDKF1400  CALL      RDKBOKA1                * OP CLINIC ID
          BRANCH    OVRCD,RDKF9100
          MATCH     IDDD,OBASITE
          GOTO      RDKF9100 IF NOT EQUAL   * wrong site
          COMPARE   ZERO,OBAOUTNO
          GOTO      RDKF0000 IF EQUAL       * empty slot
          MOVE      OBAOUTNO,KEY8           * set visit number
          GOTO      RDKF4900
.
RDKF1500  CALL      RDKDETA3                * A&E ATTENDANCE DATE
          BRANCH    OVRCD,RDKF9100
          MOVE      ADANUMB,KEY8            * set visit number
          GOTO      RDKF4900
.
RDKF1600  CALL      RKOPDEA6                * THEATRE SESSION DATE
          BRANCH    OVRCD,RDKF9100
          COMPARE   THREE,OPDASTAT
          GOTO      RDKF1600 IF EQUAL       * cancelled booking
          MOVE      OPDAADMN,KEY8           * set visit number
          GOTO      RDKF4900
.
.         see if a clinical audit patient for Special cases
.
RDKF4900  DISPLAY   *P53:24,KEY8,*EL;
          PACK      KEY22,CASTFILE,KEY8,SP1,ONE,SP10
          CALL      RSCAVAR1
          CALL      RKCAVAR1
          BRANCH    OVRCD,RDKF0000          * not a clinical audit patient
.
          DISPLAY   *P53:24,CAVRVIST,SP1,CAVRUNIQ
          MATCH     CASTFILE,CAVRSITE 
          GOTO      RDKF0000 IF NOT EQUAL   * wrong site
          MATCH     KEY8,CAVRVIST
          GOTO      RDKF0000 IF NOT EQUAL   * wrong patient
          MOVE      CAVRUNIQ,VARBLENO       * set variable number
.
.         check that site and variable number is still the same
.
RDKF5000  DISPLAY   *P53:24,CAVRVIST,SP1,CAVRUNIQ,*EL;
          MATCH     CAVRSITE,CASTFILE
          GOTO      RDKF9100 IF NOT EQUAL   * not correct site
.
          MOVE      CAVRUNIQ,FORM2          * get as a form
          COMPARE   FORM2,VARBLENO
          GOTO      RDKF9100 IF NOT EQUAL   * different variable number
.
. ******* check index value is within range *******
.
RDKF5100  MOVE      INDEX,CPINDEX           * set index value
          MOVE      VARBLENO,CPVARBL        * set variable value
          IF        INDEX = ONE
            CALL      CKDI0000                * check dud index variables
          ELSE
            CALL      CKRI0000                * check real index variables
          ENDIF
          BRANCH    EXIT,RDKF0000,RDKF9100  * too low, too high
.
.         patient satisfies first search range, now check all other ranges to
.         see if it valid
.
RDKF8000  CALL      CRNG0000                * check if other ranges satisfied
          BRANCH    EXIT,RDKF0000           * invalid record
.
.         have a valid record
.
RDKF9000  MOVE      ZERO,OVRCD
          GOTO      RDKF9999
.
RDKF9100  MOVE      ONE,OVRCD               * have finished the search
.
RDKF9999  RETURN
+
.*********************************************************************
.*                  CTPA0000                    Called by : xxxx0000 *
.*        Create a temp file                                         *
.*********************************************************************
CTPA0000  CALL      DTPA0000                * delete temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISBUILD,CFNAMEA,KEYA,SP30      * set command
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * build the temp file
          OPEN      TEMPA,CFNAMEA           * open the temp file
.
CTPA9999  RETURN
+
.*********************************************************************
.*                  KEYA0000                    Called by :          *
.*        Keyin response for line 24 question                        *
.*        Para's  : CALLPOSN      which line 24 prompt               *
.*        Returns : EXIT = 0      item selected (FORM2)              *
.*                  EXIT = 1      Next screen selected               *
.*                  EXIT = 2      Previous screen selected           *
.*                  EXIT = 3      Exit entered                       *
.*********************************************************************
KEYA0000  DISPLAY   *P1:24,*EL,"Select item";
          MOVE      "11",CCOL
          IF        ((CALLPOSN = ONE) | (CALLPOSN = TWO))
            DISPLAY   ", (",*V2LON,"N",*HOFF,"ext";
            ADD       "8",CCOL
          ENDIF
          IF        ((CALLPOSN = ONE) | (CALLPOSN = THREE))
            DISPLAY   ", (",*V2LON,"F",*HOFF,"irst";
            ADD       "9",CCOL
          ENDIF
          DISPLAY   ", (",*V2LON,"P",*HOFF,")rint ? ",*EL;
          ADD       "13",CCOL
.
KEYA1000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
.
          TYPE      DIM2
          GOTO      KEYA5000 IF EQUAL       * number entered
.
          RESET     DIM2
          GOTO      KEYA4300 IF EOS         * nothing entered
.
.         letter entered
.
          MATCH     SP1,DIM2
          GOTO      KEYA1500 IF NOT EQUAL   * invalid entry
.
          UNPACK    DIM2,ANS,ANS            * get required letter in ANS
          REP       UPPLOW,ANS              * get as uppercase
          REP       "N1F2E3P4",ANS          * turn valid letters into number
          MOVE      ZERO,EXIT               * clear exit flag
          MOVE      ANS,EXIT                * set exit flag
          BRANCH    EXIT,KEYA9999,KEYA9999,KEYA1500,KEYA9999
.
KEYA1500  BEEP
          GOTO      KEYA1000
.
KEYA4300  MOVE      THREE,EXIT
          GOTO      KEYA9999
.
.         number entered
.
KEYA5000  MOVE      ZERO,EXIT               * set exit flag
          MOVE      DIM2,FORM2              * get as a number
.
          COMPARE   FORM2,ZERO
          GOTO      KEYA1500 IF NOT LESS    * negative entered
.
          COMPARE   FORM2,CNTITEM
          GOTO      KEYA1500 IF LESS        * number too large
.
KEYA9999  RETURN
+
.*********************************************************************
.*                  CLRA0000                    Called by :          *
.*        Clear the storage variables                                *
.*********************************************************************
CLRA0000  MOVE      "20",FORM2
          WHILE     FORM2
            MOVE      SP30,SUMM[FORM2]
            SUB       ONE,FORM2
          DO
.
CLRA9999  RETURN
+
.*********************************************************************
.                   DCAVR000
.         display the current details for the patient
.*********************************************************************
DCAVR000  PACK      KEY15,PRGIDB,SCRIDB,SP20
          CALL      RSSCPS1
.
DCAVR100  CALL      RKSCPS1                 * next read
          BRANCH    OVRCD,DCAVR999          * end of file
.
          MATCH     PRGIDB,SCPSPID
          GOTO      DCAVR999 IF NOT EQUAL   * different prog
          MATCH     SCRIDB,SCPSSID
          GOTO      DCAVR999 IF NOT EQUAL   * different screen
.
          CALL      DISPVARS
          GOTO      DCAVR100
.
DCAVR999  RETURN
+
.*********************************************************************
.                   CSTB0000
.         Clear the storage arrays
.*********************************************************************
CSTB0000  MOVE      "20",FORM2
          WHILE     FORM2
            MOVE      SP3,CODD[FORM2]
            PACK      FREE[FORM2],SP30,SP30
            MOVE      SP8,DATE[FORM2]
            MOVE      SP5,TIME[FORM2]
            MOVE      ZERO,NUMB[FORM2]
            MOVE      SP6,DOCT[FORM2]
            MOVE      SP6,THET[FORM2]
            MOVE      SP9,MBSI[FORM2]
            MOVE      SP3,CHGC[FORM2]
            MOVE      SP20,CHGD[FORM2]
            SUB       ONE,FORM2
          DO
CSTB9999  RETURN
+
.*********************************************************************
.         display any of the twenty CODES FILE variables 
.*********************************************************************
DCACODD0  PACK      VAR,CODD[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCACODD9  RETURN
+
.*********************************************************************
.         display any of the twenty CODES FILE variables descriptions
.*********************************************************************
DCACODX0  MOVE      SP20,CACDDESC
          MATCH     SP3,CODD[VARBLENO]
          GOTO      DCACODX5 IF EQUAL       * no code to display
.
          MOVE      SP2,CACTCODE            * clear code
          PACK      KEY8,CASTSITE,VARBLENO
          CALL      RDCACAT1                * get category
          MOVE      "Invalid Code",CACDDESC
          PACK      KEY5,CACTCODE,CODD[VARBLENO]
          CALL      RDCACOD1
.
DCACODX5  PACK      VAR,CACDDESC,SP30,SP30,SP20
          CALL      DISPITEM
.
DCACODX9  RETURN
+
.*********************************************************************
.         display any of the twenty FREE FORMAT variables 
.*********************************************************************
DCAFREE0  PACK      VAR,FREE[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCAFREE9  RETURN
+
.*********************************************************************
.         display any of the twenty DATE variables 
.*********************************************************************
DCADATE0  UNPACK    DATE[VARBLENO],CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM 
DCADATE9  RETURN
+
.*********************************************************************
.         display any of the twenty TIME fields
.*********************************************************************
DCATIME0  PACK      VAR,TIME[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCATIME9  RETURN
+
.*********************************************************************
.         display any of the twenty NUMERIC fields
.*********************************************************************
DCANUMB0  PACK      VAR,NUMB[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCANUMB9  RETURN
+
.*********************************************************************
.         display any of the twenty DOCTOR fields
.*********************************************************************
DCADOCT0  PACK      VAR,DOCT[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCADOCT9  RETURN
+
.*********************************************************************
.         display any of the twenty DOCTOR fields descriptions
.*********************************************************************
DCADOCX0  PACK      PACFNAME,SP30,SP30,SP20
          MATCH     SP6,DOCT[VARBLENO]
          GOTO      DCADOCX5 IF EQUAL       * no code to display
.
          MOVE      "Invalid Code",PACFNAME
          MOVE      DOCT[VARBLENO],KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,DCADOCX5          * invalid code
.
          MOVE      DSNAME,PACSNAME
          MOVE      DGNAME,PACGNAME
          MOVE      DTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
.
DCADOCX5  PACK      VAR,PACFNAME,SP30,SP30,SP20
          CALL      DISPITEM
.
DCADOCX9  RETURN
+
.*********************************************************************
.         display any of the twenty THEATRE variables
.*********************************************************************
DCATHET0  PACK      VAR,THET[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCATHET9  RETURN
+
.*********************************************************************
.         display any of the twenty THEATRE variables descriptions
.*********************************************************************
DCATHEX0  MOVE      SP30,OPRMDESC
          MATCH     SP6,THET[VARBLENO]
          GOTO      DCATHEX5 IF EQUAL       * no code to display
.
          MOVE      "Invalid Code",OPRMDESC
          MOVE      THET[VARBLENO],KEY6
          CALL      RDOPOPR1
.
DCATHEX5  PACK      VAR,OPRMDESC,SP30,SP30,SP20
          CALL      DISPITEM
.
DCATHEX9  RETURN
+
.*********************************************************************
.         display any of the twenty MBS/ICD-9 variables
.*********************************************************************
DCAMBSI0  PACK      VAR,MBSI[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCAMBSI9  RETURN
+
.*********************************************************************
.         display any of the twenty MBS/ICD-9 variables descriptions
.*********************************************************************
DCAMBSX0  PACK      DDESC,SP30,SP30,SP20
          MATCH     SP9,MBSI[VARBLENO]
          GOTO      DCAMBSX8 IF EQUAL       * no code to display
.
          MOVE      MBSI[VARBLENO],KEY9
          BRANCH    CKMBS,DCAMBSX2,DCAMBSX4
          GOTO      DCAMBSX9
.
.         display MBS code
.
DCAMBSX2  MOVE      "Invalid Code",IDESC
          PACK      KEY17,KEY9,SP70
          CALL      PATITMRD
          PACK      VAR,IDESC,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DCAMBSX9
.
.         display ICD-9 code
.
DCAMBSX4  MOVE      "Invalid Code",DDESC
          CALL      RDPTICD1
          IF        OVRCD=1 & ICDRDVER>1
            CALL      RD10T9D1
          ENDIF
.
DCAMBSX8  PACK      VAR,DDESC,SP30,SP30,SP20
          CALL      DISPITEM
.
DCAMBSX9  RETURN
+
.*********************************************************************
.                   DCACHGC0
.         display any of the twenty codes file CHANGEABLE CODES variables
.*********************************************************************
DCACHGC0  PACK      VAR,CHGC[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCACHGC9  RETURN
.
.*********************************************************************
.                   DCACHGD0
.         display any of the twenty codes file CHANGEABLE DESCS variables
.*********************************************************************
DCACHGD0  PACK      VAR,CHGD[VARBLENO],SP30,SP30,SP20
          CALL      DISPITEM
DCACHGD9  RETURN
.
.*********************************************************************
.                   DPTCD000
.         display a codes file entry
.*********************************************************************
DPTCD000  MOVE      SP20,TDESC              * clear description
          MATCH     SP3,ACODE               * see if have a code
          IF        !@EQUAL
            MOVE      "Invalid Code",TDESC
            PACK      KEY5,TCODE,ACODE,SP10
            CALL      RDCODE1
          ENDIF
          PACK      VAR,TDESC,SP30,SP30,SP30
          CALL      DISPITEM                * display code
          RETURN
+
.*********************************************************************
.                   DDOFA000
.         display extra variables for A&E
.*********************************************************************
DDOFA001  UNPACK    ADADATE,CCENT,CYEAR,CMON,CDAY     * attendance date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          RETURN
.
DDOFA002  PACK      VAR,ADAMODE,SP30,SP30,SP20        * mode of arrival code
          CALL      DISPITEM
          RETURN
.
DDOFA003  MOVE      CATEA,TCODE                       * mode of arrival desc
          MOVE      ADAMODE,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFA004  PACK      VAR,ADAWAIT,SP30,SP30,SP20        * completion code
          CALL      DISPITEM
          RETURN
.
DDOFA005  MOVE      CATEW,TCODE                       * completion code desc
          MOVE      ADAWAIT,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFA006  PACK      VAR,ADADIAG,SP30,SP30,SP20        * diagnosis desc
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.                   DDOFO000
.         display extra variables for Outpatients
.*********************************************************************
DDOFO001  UNPACK    OBADATE,CCENT,CYEAR,CMON,CDAY     * visit date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          RETURN
.
DDOFO002  PACK      VAR,OBACTYP,SP30,SP30,SP20        * clinic type
          CALL      DISPITEM
          RETURN
.
DDOFO003  PACK      VAR,OCTDESC,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.
DDOFO004  PACK      VAR,OBACLIN,SP30,SP30,SP20        * clinic id
          CALL      DISPITEM
          RETURN
.
DDOFO005  PACK      VAR,OCADESC,SP30,SP30,SP20        * clinic id desc
          CALL      DISPITEM
          RETURN
.
DDOFO006  PACK      VAR,OPDICODE,SP30,SP30,SP20       * diagnosis code
          CALL      DISPITEM
          RETURN
.
DDOFO007  PACK      VAR,OPDIDESC,SP30,SP30,SP20       * diagnosis desc
          CALL      DISPITEM
          RETURN
.
DDOFO008  PACK      VAR,OBAVISIT,SP30,SP30,SP20       * visit type code
          CALL      DISPITEM
          RETURN
.
DDOFO009  MOVE      CATCV,TCODE                       * visit type desc
          MOVE      OBAVISIT,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFO010  PACK      VAR,OBASLOT,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.                   DDOFI000
.         display extra variables for Inpatients
.*********************************************************************
DDOFI001  UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY             * admission date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI002  PACK      VAR,ASRCE,SP30,SP30,SP20          * source of referral
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI003  MOVE      "S ",TCODE                        * SOR desc
          MOVE      ASRCE,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI004  PACK      VAR,ATYPE,SP30,SP30,SP20          * patient classification
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI005  MOVE      "A ",TCODE                        * PClass desc
          MOVE      ATYPE,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI006  PACK      VAR,ACLSS,SP30,SP30,SP20          * patient category
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI007  MOVE      "P ",TCODE                        * PCat desc
          MOVE      ACLSS,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI008  CALL      GADW0000                          * admitting ward
          PACK      VAR,WARDADMT,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI009  CALL      GADW0000                          * admitting ward desc
          MOVE      SP20,WBDESC
          PACK      KEY6,WARDADMT,BEDADMT,SP6
          CALL      RDWARD1
          PACK      VAR,WBDESC,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI010  CALL      GCDW0000                          * current/disch ward
          PACK      VAR,WARDCURR,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI011  CALL      GCDW0000                          * current/disch ward desc
          MOVE      SP20,WBDESC
          PACK      KEY6,WARDCURR,BEDCURR,SP6
          CALL      RDWARD1
          PACK      VAR,WBDESC,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI012  PACK      VAR,AMBS,SP30,SP30,SP20           * admitting MBS code
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI013  PACK      VAR,ADIAG1,SP30,SP30,SP20         * admitting diag 1
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI014  PACK      VAR,ADIAG2,SP30,SP30,SP20         * admitting diag 2
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI015  PACK      VAR,DFMBS,SP30,SP30,SP20          * discharge diag code
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI016  PACK      VAR,DDIAG,SP30,SP30,SP20          * discharge diag 1
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI017  PACK      VAR,DDIAG2,SP30,SP30,SP20         * discharge diag 2
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI018  PACK      VAR,DSTAT,SP30,SP30,SP20          * discharge stat
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI019  MOVE      "D ",TCODE                        * discharge stat desc
          MOVE      DSTAT,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI020  PACK      VAR,DDEST,SP30,SP30,SP20          * discharge destination
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI021  MOVE      "DD",TCODE                        * discharge dest desc
          MOVE      DDEST,ACODE
          CALL      DPTCD000
          GOTO      DDOFI999
.
DDOFI022  UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY             * discharge date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          GOTO      DDOFI999
.
DDOFI999  RETURN
+
.*********************************************************************
.                   DDOFT000
.         display extra variables for Theatre patients
.*********************************************************************
DDOFT001  UNPACK    OPDADATE,CCENT,CYEAR,CMON,CDAY    * session date
          CALL      PACDATE
          IF        SCPSLEN = 10
            PACK      VAR,CPCDATE,SP30,SP30,SP20
          ELSE
            PACK      VAR,CPDATE,SP30,SP30,SP20
          ENDIF
          CALL      DISPITEM
          RETURN
.
DDOFT002  PACK      VAR,OPDACLIN,SP30,SP30,SP20       * clinic/surgeon code
          CALL      DISPITEM
          RETURN
.
DDOFT003  CALL      GCLIN000                          * get clin/surg desc
          CALL      DISPITEM
          RETURN
.
DDOFT004  PACK      VAR,OPDACASE,SP30,SP30,SP20       * case number
          CALL      DISPITEM
          RETURN
.
DDOFT005  PACK      VAR,OPDAANAE,SP30,SP30,SP20       * anaesthetic code
          CALL      DISPITEM
          RETURN
.
DDOFT006  MOVE      "OA",TCODE                        * AC desc
          MOVE      OPDAANAE,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT007  PACK      VAR,OPDATYPE,SP30,SP30,SP20       * operation type code
          CALL      DISPITEM
          RETURN
.
DDOFT008  MOVE      "OY",TCODE                        * OT desc
          MOVE      OPDATYPE,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT009  PACK      VAR,OPDATRAN,SP30,SP30,SP20       * transport code
          CALL      DISPITEM
          RETURN
.
DDOFT010  MOVE      "OR",TCODE                        * TC desc
          MOVE      OPDATRAN,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT011  PACK      VAR,OPDAUSR1,SP30,SP30,SP20       * UD field 1
          CALL      DISPITEM
          RETURN
.
DDOFT012  MOVE      "Y6",TCODE                        * UD field 1 desc
          MOVE      OPDAUSR1,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT013  PACK      VAR,OPDAUSR2,SP30,SP30,SP20       * UD field 2
          CALL      DISPITEM
          RETURN
.
DDOFT014  MOVE      "Y7",TCODE                        * UD field 2 desc
          MOVE      OPDAUSR2,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT015  PACK      VAR,OPDAUSR3,SP30,SP30,SP20       * UD field 3
          CALL      DISPITEM
          RETURN
.
DDOFT016  MOVE      "Y8",TCODE                        * UD field 3 desc
          MOVE      OPDAUSR3,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT017  PACK      VAR,OPDAUSR2,SP30,SP30,SP20       * UD field 2
          CALL      DISPITEM
          RETURN
.
DDOFT018  MOVE      "Y7",TCODE                        * UD field 2 desc
          MOVE      OPDAUSR2,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT019  PACK      VAR,OPDAPROV,SP30,SP30,SP20       * prov item 1
          CALL      DISPITEM
          RETURN
.
DDOFT020  MOVE      OPDAPROV,KEY9                     * prov item 1 desc
          CALL      DPROV000
          RETURN
.
DDOFT021  PACK      VAR,OPDAPRV2,SP30,SP30,SP20       * prov item 2
          CALL      DISPITEM
          RETURN
.
DDOFT022  MOVE      OPDAPRV2,KEY9                     * prov item 2 desc
          CALL      DPROV000
          RETURN
.
DDOFT023  PACK      VAR,OPDAPRV3,SP30,SP30,SP20       * prov item 3
          CALL      DISPITEM
          RETURN
.
DDOFT024  MOVE      OPDAPRV3,KEY9                     * prov item 3 desc
          CALL      DPROV000
          RETURN
.
DDOFT025  PACK      VAR,OPDADES1,SP30,SP30,SP20       * desc 1
          CALL      DISPITEM
          RETURN
.
DDOFT026  PACK      VAR,OPDADES2,SP30,SP30,SP20       * desc 2
          CALL      DISPITEM
          RETURN
.
DDOFT027  PACK      VAR,OPDADES3,SP30,SP30,SP20       * desc 3
          CALL      DISPITEM
          RETURN
.
DDOFT028  PACK      VAR,OPDACOMM,SP30,SP30,SP20       * comments
          CALL      DISPITEM
          RETURN
.
DDOFT029  PACK      VAR,OPDATHET,SP30,SP30,SP20       * theatre/op room
          CALL      DISPITEM
          RETURN
.
DDOFT030  MOVE      OPDATHET,KEY6                     * theatre/op room desc
          PACK      OPRMDESC,SP30,SP30
          MATCH     SP6,OPDATHET
          IF        !@EQUAL
            MOVE      "Invalid Code",OPRMDESC
            CALL      RDOPOPR1
          ENDIF
          PACK      VAR,OPRMDESC,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.
DDOFT031  PACK      VAR,OPDAPRE1,SP30,SP30,SP20       * pre-op time 1
          CALL      DISPITEM
          RETURN
.
DDOFT032  PACK      VAR,OPDAPRE2,SP30,SP30,SP20       * pre-op time 2
          CALL      DISPITEM
          RETURN
.
DDOFT033  PACK      VAR,OPDAPRE3,SP30,SP30,SP20       * pre-op time 3
          CALL      DISPITEM
          RETURN
.
DDOFT034  PACK      VAR,OPDAPRE4,SP30,SP30,SP20       * pre-op time 4
          CALL      DISPITEM
          RETURN
.
DDOFT035  PACK      VAR,OPDAPRE5,SP30,SP30,SP20       * pre-op time 5
          CALL      DISPITEM
          RETURN
.
DDOFT036  PACK      VAR,OPDAPOS1,SP30,SP30,SP20       * post-op time 1
          CALL      DISPITEM
          RETURN
.
DDOFT037  PACK      VAR,OPDAPOS2,SP30,SP30,SP20       * post-op time 2
          CALL      DISPITEM
          RETURN
.
DDOFT038  PACK      VAR,OPDAPOS3,SP30,SP30,SP20       * post-op time 3
          CALL      DISPITEM
          RETURN
.
DDOFT039  PACK      VAR,OPDAPOS4,SP30,SP30,SP20       * post-op time 4
          CALL      DISPITEM
          RETURN
.
DDOFT040  PACK      VAR,OPDAEXPD,SP30,SP30,SP20       * expected duration
          CALL      DISPITEM
          RETURN
.
DDOFT041  PACK      VAR,OPDAKNOW,SP30,SP30,SP20       * known infection
          CALL      DISPITEM
          RETURN
.
DDOFT042  MOVE      "OK",TCODE                        * known infection desc
          MOVE      OPDAKNOW,ACODE
          CALL      DPTCD000
          RETURN
.
DDOFT043  PACK      VAR,CODEANAE,SP30,SP30,SP20       * anaesthetist code
          CALL      DISPITEM
          RETURN
.
DDOFT044  PACK      VAR,DESCANAE,SP30,SP30,SP20       * anaesthetist name
          CALL      DISPITEM
          RETURN
.
DDOFT045  PACK      VAR,CODESUPA,SP30,SP30,SP20       * supervisor anae code
          CALL      DISPITEM
          RETURN
.
DDOFT046  PACK      VAR,DESCSUPA,SP30,SP30,SP20       * supervisor anae name
          CALL      DISPITEM
          RETURN
.
DDOFT047  PACK      VAR,CODETRNA,SP30,SP30,SP20       * trainee anae code
          CALL      DISPITEM
          RETURN
.
DDOFT048  PACK      VAR,DESCTRNA,SP30,SP30,SP20       * trainee anae name
          CALL      DISPITEM
          RETURN
.
.*********************************************************************
.                   GCLIN000
.         Format Clinic/Surgeon name
.*********************************************************************
GCLIN000  MOVE      OPDACLIN,KEY6           * set up the key
          PACK      VAR,SP30,SP30,SP20
          BRANCH    OPCNCLSU,GCLIN500       * using doctor codes
.
.         validate using clinic file
.
          CALL      RDOPCLI1                * read clinic file
          BRANCH    OVRCD,GCLIN500          * invalid code
          PACK      VAR,OPCLDESC,SP30,SP30,SP20
.
          MATCH     SP6,OPCLDOCT
          GOTO      GCLIN999 IF EQUAL       * no docotor code to use
          MOVE      OPCLDOCT,KEY6           * use the doctor code
.
.         validate using doctors file
.
GCLIN500  CALL      RDDOCT1                 * read docs file
          BRANCH    OVRCD,GCLIN999          * invalid code
.
          MOVE      DSNAME,PACSNAME         * surname
          MOVE      DGNAME,PACGNAME         * given name
          MOVE      DTITL,PACTITLE          * title
          MOVE      TWO,PACFRMT             * SURNAME, TITLE GIVEN
          CALL      PACNAME                 * format the name
          PACK      VAR,PACFNAME,SP30,SP30,SP20
.
GCLIN999  RETURN
+
.*********************************************************************
.                   DPROV000
.         Get desc for a provisional item
.*********************************************************************
DPROV000  BRANCH    OPCNCODE,DPROV500       * MBS code
.
          MOVE      "Invalid Code",DDESC
          CALL      RDPTICD1
          IF        OVRCD=1 & ICDRDVER>1
            CALL      RD10T9D1
          ENDIF
          PACK      VAR,DDESC,SP30,SP30,SP20
          CALL      DISPITEM
          GOTO      DPROV999
.
.         MBS codes
.
DPROV500  MOVE      "Invalid Code",IDESC
          PACK      KEY17,KEY9,SP70
          CALL      PATITMRD
          PACK      VAR,IDESC,SP30,SP30,SP20
          CALL      DISPITEM
.
DPROV999  RETURN
+
.*********************************************************************
.                   CHIN0000                    Called by : PTSL0000
.         set up the clinical audit values
.*********************************************************************
CHIN0000  CALL      CSTB0000                * clear array values
          PACK      KEY22,CASTFILE,PVIBILL,SP20
          CALL      RSCAVAR1
.
CHIN1000  CALL      RKCAVAR1
          BRANCH    OVRCD,CHIN9999          * end of file
.
          MATCH     CAVRSITE,CASTFILE
          GOTO      CHIN9999 IF NOT EQUAL   * different site
.
          MOVE      CAVRVIST,FORM8          * get visit number as a form
          COMPARE   FORM8,PVIBILL
          GOTO      CHIN9999 IF NOT EQUAL   * different patient
.
          MATCH     THETUNIQ,CAVRTHEU
          GOTO      CHIN1000 IF NOT EQUAL   * not same id
.
          MOVE      CAVRUNIQ,FORM2          * get unique count as a form
          MOVE      CAVRCODE,CODD[FORM2]    * set up coded field
          MOVE      CAVRFREE,FREE[FORM2]    * set up free format field
          MOVE      CAVRDATE,DATE[FORM2]    * set up date field
          MOVE      CAVRTIME,TIME[FORM2]    * set up time field
          MOVE      CAVRNUMB,NUMB[FORM2]    * set up numeric field
          MOVE      CAVRDOCT,DOCT[FORM2]    * set up doctor field
          MOVE      CAVRTHET,THET[FORM2]    * set up theatre field
          MOVE      CAVRCOD9,MBSI[FORM2]    * set up MBS/ICD-9 field
          MOVE      CAVRCODC,CHGC[FORM2]    * set up changeable code field
          MOVE      CAVRDESC,CHGD[FORM2]    * set up changeable code desc field
          GOTO      CHIN1000
.
CHIN9999  RETURN
+
.*********************************************************************
.                   GOPD0000                    Called by : PTSL0000
.         get the outpatient details
.*********************************************************************
GOPD0000  MOVE      "out",OSTFILE
          MOVE      PVISITE,KEY6
          CALL      RDSITA1
.
          CLOSE     OUTBOKA1
          PACK      CFNAME,OSTFILE,FILBOKA1
          OPEN      OUTBOKA1,CFNAME
          PACK      KEY28,PVISITE,PVIDOCT,PVIDATE,SP30
          CALL      RDSBOKA1
.
GOPD1000  CALL      RDKBOKA1
          BRANCH    OVRCD,GOPD9100
.
          MATCH     PVISITE,OBASITE
          GOTO      GOPD9100 IF NOT EQUAL
          MATCH     PVIDOCT,OBACLIN
          GOTO      GOPD9100 IF NOT EQUAL
          MATCH     PVIDATE,OBADATE
          GOTO      GOPD9100 IF NOT EQUAL
          COMPARE   PVIBILL,OBAOUTNO
          GOTO      GOPD1000 IF NOT EQUAL
          MATCH     PVIURNO,OBAURNO
          GOTO      GOPD1000 IF NOT EQUAL
.
          PACK      CFNAME,OSTFILE,FILCTYA1
          CLOSE     OUTCTYA1
          OPEN      OUTCTYA1,CFNAME
          MOVE      "Invalid Code",OCTDESC  * clinic type descriptiom
          PACK      KEY12,OBASITE,OBACTYP
          CALL      RDCTYA1
.
          PACK      CFNAME,OSTFILE,FILCLIA1
          CLOSE     OUTCLIA1
          OPEN      OUTCLIA1,CFNAME
.
          PACK      KEY20,OBASITE,OBACLIN,OBADATE
          CALL      RDCLIA1
          IF        OVRCD = 1
            CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     OBASITE,OCASITE
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ELSE
                MATCH     OBACLIN,OCACLIN
                IF        !@EQUAL
                  MOVE      ONE,OVRCD
                ENDIF
              ENDIF
            ENDIF
          ENDIF
          IF        OVRCD = 1
            MOVE      "Unknown clinic",OCADESC
            PACK      OCADESC,OCADESC,SP30
          ELSE
            MATCH     SP6,OCADOCT
            IF        !@EQUAL
              MOVE      OCADOCT,KEY6
              CALL      RDDOCT1
              IF        OVRCD = ZERO
                MOVE      DSNAME,PACSNAME
                MOVE      DGNAME,PACGNAME
                MOVE      DTITL,PACTITLE
                MOVE      TWO,PACFRMT
                CALL      PACNAME
                MOVE      PACFNAME,OCADESC
              ENDIF
            ENDIF
          ENDIF
.
          CLOSE     OUTDIAG1
          PACK      CFNAME,OSTFILE,FILDIAG1
          OPEN      OUTDIAG1,CFNAME
          PACK      OPDIDESC,SP30,SP30      * diagnosis details
          MOVE      SP9,OPDICODE
          MOVE      PVIBILL,KEY8
          CALL      RDDIAG1
.
          MOVE      ZERO,OVRCD
          GOTO      GOPD9999
.
GOPD9100  MOVE      ONE,OVRCD
.
GOPD9999  RETURN
+
.*********************************************************************
.                   KEYC0000                    Called by : PTSL3500
.         display line 24 prompt for displaying details
.*********************************************************************
KEYC0000  DISPLAY   *P1:24,*EL,"(",*V2LON,"E",*HOFF,")xit, (":
                    *V2LON,"P",*HOFF,")rint";
          MOVE      "15",CCOL               * set column
          IF        NUMSCR = TWO
            DISPLAY   ", (",*V2LON,"N",*HOFF,")ext";
            ADD       "8",CCOL
          ENDIF
          IF        NUMSCR = THREE
            DISPLAY   ", (",*V2LON,"F",*HOFF,")irst";
            ADD       "9",CCOL
          ENDIF
          DISPLAY   " ? ",*EL;
          ADD       "4",CCOL
.
KEYC1000  KEYIN     *PCCOL:24,*DV,UNDLN1:
                    *PCCOL:24,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSE,ANS
          GOTO      KEYC5000 IF EQUAL       * exit
          MATCH     ANSP,ANS
          GOTO      KEYC5100 IF EQUAL       * print
          MATCH     ANSN,ANS
          GOTO      KEYC5200 IF EQUAL       * next
          MATCH     ANSF,ANS
          GOTO      KEYC5300 IF EQUAL       * first
.
KEYC1500  BEEP
          GOTO      KEYC1000
.
.         set exit flags
.
KEYC5000  MOVE      ZERO,EXIT               * EXIT
          GOTO      KEYC9999
.
KEYC5100  MOVE      ONE,EXIT                * PRINT
          GOTO      KEYC9999
.
KEYC5200  COMPARE   TWO,NUMSCR
          GOTO      KEYC1500 IF NOT EQUAL   * option not available
.
          MOVE      TWO,EXIT                * NEXT
          GOTO      KEYC9999
.
KEYC5300  COMPARE   THREE,NUMSCR
          GOTO      KEYC1500 IF NOT EQUAL   * option not available
.
          MOVE      THREE,EXIT              * FIRST
.
KEYC9999  RETURN
+
.*********************************************************************
.                   THETHEAD                    Called by : PTSL2000
.         display header for theatre patient
.*********************************************************************
THETHEAD  CALL      PMIHEAD
          UNPACK    OPDADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:5,"Booking No   : ",*V2LON,OPDAADMN,*P1:6,*EF,*HOFF:
                    *P1:6,"Session Date : ",*V2LON,CPCDATE,*HOFF:
                    "  Time : ",*V2LON,OPDATIME,*HOFF:
                    "    Case : ",*V2LON,OPDACASE,*HOFF:
                    "  ",*+,OPCNCDSC," : ",*V2LON,OPDACLIN
          RETURN
+
.*********************************************************************
.                   OPFS0000                    Called by : SUMM0000
.         open files for summary screen to get PMI details
.*********************************************************************
OPFS0000  OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PATVISA1,"patvisaf"
          IF        CKVISTYP = FOUR
            OPEN      OPRDETA2,"oprdetaf"
            OPEN      BOKRC1A1,"bokrc1af"
          ENDIF
OPFS9999  RETURN
+
.*********************************************************************
.                   GPMI0000                    Called by : PSUM0000
.         get the PMI details for patient                   SUMM3000
.*********************************************************************
GPMI0000  MOVE      " *** MISSING PMI DETAILS ***",PATNAME
          MOVE      ZEROUR,PVIURNO
          MOVE      ZERO,PVIBILL
.
          COMPARE   FOUR,CKVISTYP        
          GOTO      GPMI1000 IF EQUAL       * a theatre patient
. 
          MOVE      CAVRVIST,KEY8           * get visit details
          CALL      RDVISA1
          BRANCH    OVRCD,GPMI9999
          GOTO      GPMI2000
.
.         get theatre details
.
GPMI1000  MOVE      CAVRVIST,PVIBILL
          PACK      KEY31,PVIBILL,SP30
          CALL      RSOPDEA2
GPMI1100  CALL      RKOPDEA2
          BRANCH    OVRCD,GPMI9999          * invalid patient
.
          MOVE      OPDAADMN,FORM8
          COMPARE   FORM8,PVIBILL
          GOTO      GPMI9999 IF NOT EQUAL   * invalid patient
.
          MATCH     CAVRTHEU,OPDAUNIQ
          GOTO      GPMI1100 IF NOT EQUAL   * not same booking
.
          MOVE      OPDAADMN,KEY8
          CALL      RDBKREC1
          BRANCH    OVRCD,GPMI9999          * invalid booking
.
          MOVE      BKREURNO,PVIURNO        * set UR number
.
.         get PMI details
.
GPMI2000  MATCH     ZEROUR,PVIURNO          * do we have a UR number
          IF        @EQUAL
            MOVE      PVIBILL,KEY8
            CALL      RDPRAM1
            MOVE      ZEROUR,PURNO
          ELSE
            MOVE      PVIURNO,KEY8
            CALL      RDMAST1
          ENDIF
          BRANCH    OVRCD,GPMI9999
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,PATNAME
.
GPMI9999  RETURN
+
.*********************************************************************
.                   HEAD0000
.         print new page for printing clinical audit details
.*********************************************************************
HEAD0000  MOVE      "IBACLA05",PRGID        * set to real program name
          CALL      HEAD80
          MOVE      PRGIDB,PRGID            * set program name back
          CALL      PPDT0000                * print the patient header details
          MOVE      "9",CLNO                * set line number
.
HEAD9999  RETURN
+
.*********************************************************************
.                   DISPVARS                    Called by : DCAVR000 
.         display the requried variable 
.*********************************************************************
DISPVARS  CALL      CVRB0000                * get the variable number (1-20)
          MOVE      SCPSITM,FORM5           * item number
          MOVE      SCPSCOL,CCOL            * column
          MOVE      SCPSROW,CVERT           * row
          PERFORM   FORM5,DCACODD0,DCACODX0,DCACODD0,DCACODX0,DCACODD0:
                          DCACODX0,DCACODD0,DCACODX0,DCACODD0,DCACODX0:
                          DCACODD0,DCACODX0,DCACODD0,DCACODX0,DCACODD0:
                          DCACODX0,DCACODD0,DCACODX0,DCACODD0,DCACODX0:
                          DCACODD0,DCACODX0,DCACODD0,DCACODX0,DCACODD0:
                          DCACODX0,DCACODD0,DCACODX0,DCACODD0,DCACODX0:
                          DCACODD0,DCACODX0,DCACODD0,DCACODX0,DCACODD0:
                          DCACODX0,DCACODD0,DCACODX0,DCACODD0,DCACODX0:
.
                          DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0:
                          DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0:
                          DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0:
                          DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0,DCAFREE0:
.
                          DCADATE0,DCADATE0,DCADATE0,DCADATE0,DCADATE0:
                          DCADATE0,DCADATE0,DCADATE0,DCADATE0,DCADATE0:
                          DCADATE0,DCADATE0,DCADATE0,DCADATE0,DCADATE0:
                          DCADATE0,DCADATE0,DCADATE0,DCADATE0,DCADATE0:
.
                          DCATIME0,DCATIME0,DCATIME0,DCATIME0,DCATIME0:
                          DCATIME0,DCATIME0,DCATIME0,DCATIME0,DCATIME0:
                          DCATIME0,DCATIME0,DCATIME0,DCATIME0,DCATIME0:
                          DCATIME0,DCATIME0,DCATIME0,DCATIME0,DCATIME0:
.
                          DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0:
                          DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0:
                          DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0:
                          DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0,DCANUMB0:
.
                          DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0:
                          DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0:
                          DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0:
                          DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0:
                          DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0:
                          DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0:
                          DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0:
                          DCADOCX0,DCADOCT0,DCADOCX0,DCADOCT0,DCADOCX0:
.
                          DCATHET0,DCATHEX0,DCATHET0,DCATHEX0,DCATHET0:
                          DCATHEX0,DCATHET0,DCATHEX0,DCATHET0,DCATHEX0:
                          DCATHET0,DCATHEX0,DCATHET0,DCATHEX0,DCATHET0:
                          DCATHEX0,DCATHET0,DCATHEX0,DCATHET0,DCATHEX0:
                          DCATHET0,DCATHEX0,DCATHET0,DCATHEX0,DCATHET0:
                          DCATHEX0,DCATHET0,DCATHEX0,DCATHET0,DCATHEX0:
                          DCATHET0,DCATHEX0,DCATHET0,DCATHEX0,DCATHET0:
                          DCATHEX0,DCATHET0,DCATHEX0,DCATHET0,DCATHEX0:
.
                          DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0:
                          DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0:
                          DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0:
                          DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0:
                          DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0:
                          DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0:
                          DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0:
                          DCAMBSX0,DCAMBSI0,DCAMBSX0,DCAMBSI0,DCAMBSX0:
.
                          DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0:
                          DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0:
                          DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0:
                          DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0:
                          DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0:
                          DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0:
                          DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0:
                          DCACHGD0,DCACHGC0,DCACHGD0,DCACHGC0,DCACHGD0
.
          MOVE      SCPSITM,FORM5           * get as a form
          IF        FORM5 >= 281
            SUB       "280",FORM5             * start at field 1
            IF        CKVISTYP = 1
              PERFORM   FORM5,DDOFA001,DDOFA002,DDOFA003,DDOFA004,DDOFA005:
                              DDOFA006
            ENDIF
            IF        CKVISTYP = 2
              PERFORM   FORM5,DDOFO001,DDOFO002,DDOFO003,DDOFO004,DDOFO005:
                              DDOFO006,DDOFO007,DDOFO008,DDOFO009,DDOFO010
            ENDIF
            IF        CKVISTYP = 3
              PERFORM   FORM5,DDOFI001,DDOFI002,DDOFI003,DDOFI004,DDOFI005:
                              DDOFI006,DDOFI007,DDOFI008,DDOFI009,DDOFI010:
                              DDOFI011,DDOFI012,DDOFI013,DDOFI014,DDOFI015:
                              DDOFI016,DDOFI017,DDOFI018,DDOFI019,DDOFI020:
                              DDOFI021,DDOFI022
            ENDIF
            IF        CKVISTYP = 4
              PERFORM   FORM5,DDOFT001,DDOFT002,DDOFT003,DDOFT004,DDOFT005:
                              DDOFT006,DDOFT007,DDOFT008,DDOFT009,DDOFT010:
                              DDOFT011,DDOFT012,DDOFT013,DDOFT014,DDOFT015:
                              DDOFT016,DDOFT017,DDOFT018,DDOFT019,DDOFT020:
                              DDOFT021,DDOFT022,DDOFT023,DDOFT024,DDOFT025:
                              DDOFT026,DDOFT027,DDOFT028,DDOFT029,DDOFT030:
                              DDOFT031,DDOFT032,DDOFT033,DDOFT034,DDOFT035:
                              DDOFT036,DDOFT037,DDOFT038,DDOFT039,DDOFT040:
                              DDOFT041,DDOFT042,DDOFT043,DDOFT044,DDOFT045:
                              DDOFT046,DDOFT047,DDOFT048
            ENDIF
          ENDIF
          RETURN
+
.*********************************************************************
.                   PCAVR000
.         Print the clinical audit screen
.         have to use a suspend as DISPITEM displays the variable
.*********************************************************************
PCAVR000  DISPLAY   *P1:24,*EL,"Printing audit screen(s)..."
          MOVE      "70",CLNO               * set line number
          CALL      IBACLOCK                * get current date and time
          MOVE      CASTSCRN,CCITEM         * copy number of screens
          MOVE      SEVEN,CVERT             * set the row
          CLIP      50,24,80,24
          PACK      PRGIDB,CLAAUD,CASTFILE  * set program id
          MOVE      "01",SCRIDB             * set screen id
          MOVE      PRGIDB,PRGID            * set for b/grnd display
          MOVE      SCRIDB,SCRID            * set for b/grnd display
.
PCAVR100  PACK      SCSBDAT,SP30,SP30,SP20  * clear data
          PACK      KEY12,PRGID,SCRID,CVERT * get screen background
          CALL      RDSCSB1                 * positional read
.
.         get the file variables and add to DATA & ATTRIBUTES string
.
          PACK      KEY15,PRGID,SCRID,CVERT,SP20
          CALL      RSSCPS1                 * positional read
.
PCAVR200  CALL      RKSCPS1                 * next read
          BRANCH    OVRCD,PCAVR300          * end of file
.
          MATCH     PRGID,SCPSPID
          GOTO      PCAVR300 IF NOT EQUAL   * different program id
.
          MATCH     SCRID,SCPSSID
          GOTO      PCAVR300 IF NOT EQUAL   * different screen id
.
          MOVE      SCPSROW,FORM2
          COMPARE   CVERT,FORM2
          GOTO      PCAVR300 IF NOT EQUAL   * different line number
.
          PACK      VAR,SP30,SP30,SP20      * clear variable
          CALL      DISPVARS                * set up and display VAR
          MOVE      VAR,DIM80               * set parameter for dxsetval
          MOVE      SCPSCOL,CCOL            * set column
          MOVE      "99",IMON               * dont display variable
          CALL      DXSETVAL                * set up scbsdat
          GOTO      PCAVR200
.
PCAVR300  SETLPTR   SCSBDAT                 * set FP to end of string
          RESET     SCSBDAT                 * reset FP to start of string
.
.         print a line of the screen
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * print new screen
.
          PRINT     *1,SCSBDAT              * display data string
          ADD       ONE,CLNO                * add to line number
          ADD       ONE,CVERT               * get to next screen line
          COMPARE   "24",CVERT
          GOTO      PCAVR100 IF LESS        * more lines to print
.
.         have finished a screen, see if there are two screens
.
PCAVR400  BRANCH    CCITEM,PCAVR500         * only one screen
.
          ADD       "2",CLNO
          MOVE      "02",SCRID              * set for screen two
          MOVE      ONE,CCITEM              * set so will end
          MOVE      SEVEN,CVERT             * set line number
          PRINT     *N,*20,"PATIENT AUDIT DETAILS - SCREEN ",SCRID
          GOTO      PCAVR100
.
.         redisplay screen
.
PCAVR500  CLIP
          PRINT     "*** End of Patient Details ***",*N
.
PCAVR999  RETURN
+
.*********************************************************************
.                   PPDT0000
.         Print the 3 line patient header
.*********************************************************************
PPDT0000  PRINT     *1,"U/R Number   : ",PURNO,SP1,*26,"Name : ",PATHDNAM
          IF        CKVISTYP = ONE
            PRINT     *1,HNUMDES,*14,": ",PVIBILL;
          ENDIF
          IF        CKVISTYP = TWO
            PRINT     *1,"Outpatient No: ",PVIBILL;
          ENDIF
          IF        CKVISTYP = THREE
            PRINT     *1,"Admission No : ",PVIBILL;
          ENDIF
          IF        CKVISTYP = FOUR
            PRINT     *1,"Booking No   : ",PVIBILL;
          ENDIF
          PRINT     *26,"Sex  : ",PATHDSEX,*42,"Born : ",PATHDDOB:
                    *61,"Age : ",PSAGE
.
.         print the patient visit type dependant third line
.
          IF        CKVISTYP = ONE
            PRINT     *1,PATHDADM,*26,"Time : ",ADATIME,*42,"Doct : ",PATHDDOC
          ENDIF
          IF        CKVISTYP = TWO
            PRINT     *1,PATHDADM,*26,"Site : ",PVISITE,*42,"Clin : ",PATHDDOC
          ENDIF
          IF        CKVISTYP = THREE
            PRINT     *1,PATHDADM,*26,"Ward : ",PATHDWB,*42,"Doct : ",PATHDDOC
          ENDIF
          IF        CKVISTYP = FOUR
            UNPACK    OPDADATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PRINT     *1,"Session Date : ",CPCDATE,"  Time : ",OPDATIME:
                      "    Case : ",OPDACASE,"  ",*+,OPCNCDSC," : ",OPDACLIN
          ENDIF
.
PPDT9999  RETURN
+
.*********************************************************************
.                   CRNG0000                    Called by : RDKF8000
.         check that the other search criteria are satisified
.*********************************************************************
CRNG0000  MOVE      ZERO,CNTITEM            * check all entered ranges
          PACK      SAVKEY22,CAVRSITE,CAVRVIST,CAVRUNIQ,CAVRTHEU
.
CRNG1000  ADD       ONE,CNTITEM
          COMPARE   "21",CNTITEM
          GOTO      CRNG8000 IF NOT LESS    * valid field
.
          UNPACK    FIELD[CNTITEM],ANS,XMON,XDAY   * entered/index/variable #
          MOVE      ANS,FORM1
          COMPARE   ONE,FORM1
          GOTO      CRNG1000 IF NOT EQUAL   * field not entered
.
          MOVE      XMON,CPINDEX            * the index - which code
          MOVE      XDAY,CPVARBL            * which variable number (1-20)
.
          IF        CPINDEX = ONE 
            CALL      CKDI0000                * check dud index values
          ELSE
            PACK      KEY22,CAVRSITE,CAVRVIST,CPVARBL,CAVRTHEU
            CALL      RDCAVAR1
            BRANCH    OVRCD,CRNG1000          * dont have the extra values
            CALL      CKRI0000                * check real index values
          ENDIF
          BRANCH    EXIT,CRNG9100,CRNG9100  * out of range
          GOTO      CRNG1000
.
.         set exit flag
.
CRNG8000  MOVE      ZERO,EXIT               * WITHIN ALL OTHER RANGES
          MOVE      SAVKEY22,KEY22
          CALL      RDCAVAR1                * restore position in file
          GOTO      CRNG9999
.
CRNG9100  MOVE      ONE,EXIT                * NOT WITHIN OTHER RANGES
.
CRNG9999  RETURN
+
.*********************************************************************
.                   DVAL0000
.         Display a variable for the search parameters
.*********************************************************************
DVAL0000  CALL      CVRB0000                * get variable 1-20 number
          MOVE      SCPSITM,FORM5           * item number
          MOVE      SCPSCOL,CCOL            * column
          MOVE      SCPSROW,CVERT           * row
          PERFORM   FORM5,DRGCODD0,DVAL9999,DRGCODD0,DVAL9999,DRGCODD0:
                          DVAL9999,DRGCODD0,DVAL9999,DRGCODD0,DVAL9999:
                          DRGCODD0,DVAL9999,DRGCODD0,DVAL9999,DRGCODD0:
                          DVAL9999,DRGCODD0,DVAL9999,DRGCODD0,DVAL9999:
                          DRGCODD0,DVAL9999,DRGCODD0,DVAL9999,DRGCODD0:
                          DVAL9999,DRGCODD0,DVAL9999,DRGCODD0,DVAL9999:
                          DRGCODD0,DVAL9999,DRGCODD0,DVAL9999,DRGCODD0:
                          DVAL9999,DRGCODD0,DVAL9999,DRGCODD0,DVAL9999:
.
                          DVAL9999,DVAL9999,DVAL9999,DVAL9999,DVAL9999:
                          DVAL9999,DVAL9999,DVAL9999,DVAL9999,DVAL9999:
                          DVAL9999,DVAL9999,DVAL9999,DVAL9999,DVAL9999:
                          DVAL9999,DVAL9999,DVAL9999,DVAL9999,DVAL9999:
.
                          DRGDATE0,DRGDATE0,DRGDATE0,DRGDATE0,DRGDATE0:
                          DRGDATE0,DRGDATE0,DRGDATE0,DRGDATE0,DRGDATE0:
                          DRGDATE0,DRGDATE0,DRGDATE0,DRGDATE0,DRGDATE0:
                          DRGDATE0,DRGDATE0,DRGDATE0,DRGDATE0,DRGDATE0:
.
                          DRGTIME0,DRGTIME0,DRGTIME0,DRGTIME0,DRGTIME0:
                          DRGTIME0,DRGTIME0,DRGTIME0,DRGTIME0,DRGTIME0:
                          DRGTIME0,DRGTIME0,DRGTIME0,DRGTIME0,DRGTIME0:
                          DRGTIME0,DRGTIME0,DRGTIME0,DRGTIME0,DRGTIME0:
.
                          DRGNUMB0,DRGNUMB0,DRGNUMB0,DRGNUMB0,DRGNUMB0:
                          DRGNUMB0,DRGNUMB0,DRGNUMB0,DRGNUMB0,DRGNUMB0:
                          DRGNUMB0,DRGNUMB0,DRGNUMB0,DRGNUMB0,DRGNUMB0:
                          DRGNUMB0,DRGNUMB0,DRGNUMB0,DRGNUMB0,DRGNUMB0:
.
                          DRGDOCT0,DVAL9999,DRGDOCT0,DVAL9999,DRGDOCT0:
                          DVAL9999,DRGDOCT0,DVAL9999,DRGDOCT0,DVAL9999:
                          DRGDOCT0,DVAL9999,DRGDOCT0,DVAL9999,DRGDOCT0:
                          DVAL9999,DRGDOCT0,DVAL9999,DRGDOCT0,DVAL9999:
                          DRGDOCT0,DVAL9999,DRGDOCT0,DVAL9999,DRGDOCT0:
                          DVAL9999,DRGDOCT0,DVAL9999,DRGDOCT0,DVAL9999:
                          DRGDOCT0,DVAL9999,DRGDOCT0,DVAL9999,DRGDOCT0:
                          DVAL9999,DRGDOCT0,DVAL9999,DRGDOCT0,DVAL9999:
.
                          DRGTHET0,DVAL9999,DRGTHET0,DVAL9999,DRGTHET0:
                          DVAL9999,DRGTHET0,DVAL9999,DRGTHET0,DVAL9999:
                          DRGTHET0,DVAL9999,DRGTHET0,DVAL9999,DRGTHET0:
                          DVAL9999,DRGTHET0,DVAL9999,DRGTHET0,DVAL9999:
                          DRGTHET0,DVAL9999,DRGTHET0,DVAL9999,DRGTHET0:
                          DVAL9999,DRGTHET0,DVAL9999,DRGTHET0,DVAL9999:
                          DRGTHET0,DVAL9999,DRGTHET0,DVAL9999,DRGTHET0:
                          DVAL9999,DRGTHET0,DVAL9999,DRGTHET0,DVAL9999:
.
                          DRGMBSI0,DVAL9999,DRGMBSI0,DVAL9999,DRGMBSI0:
                          DVAL9999,DRGMBSI0,DVAL9999,DRGMBSI0,DVAL9999:
                          DRGMBSI0,DVAL9999,DRGMBSI0,DVAL9999,DRGMBSI0:
                          DVAL9999,DRGMBSI0,DVAL9999,DRGMBSI0,DVAL9999:
                          DRGMBSI0,DVAL9999,DRGMBSI0,DVAL9999,DRGMBSI0:
                          DVAL9999,DRGMBSI0,DVAL9999,DRGMBSI0,DVAL9999:
                          DRGMBSI0,DVAL9999,DRGMBSI0,DVAL9999,DRGMBSI0:
                          DVAL9999,DRGMBSI0,DVAL9999,DRGMBSI0,DVAL9999:
.
                          DRGCHGC0,DVAL9999,DRGCHGC0,DVAL9999,DRGCHGC0:
                          DVAL9999,DRGCHGC0,DVAL9999,DRGCHGC0,DVAL9999:
                          DRGCHGC0,DVAL9999,DRGCHGC0,DVAL9999,DRGCHGC0:
                          DVAL9999,DRGCHGC0,DVAL9999,DRGCHGC0,DVAL9999:
                          DRGCHGC0,DVAL9999,DRGCHGC0,DVAL9999,DRGCHGC0:
                          DVAL9999,DRGCHGC0,DVAL9999,DRGCHGC0,DVAL9999:
                          DRGCHGC0,DVAL9999,DRGCHGC0,DVAL9999,DRGCHGC0:
                          DVAL9999,DRGCHGC0,DVAL9999,DRGCHGC0,DVAL9999
.
          IF        FORM5 >= 281
            SUB       "280",FORM5             * start at field 1
            IF        CKVISTYP = 1
              PERFORM   FORM5,DRGDA010,DRGDA020,DVAL9999,DRGDA040,DVAL9999:
                              DVAL9999
            ENDIF
            IF        CKVISTYP = 2
              PERFORM   FORM5,DRGDO010,DRGDO020,DVAL9999,DRGDO040,DVAL9999:
                              DRGDO060,DVAL9999,DVAL9999,DVAL9999,DVAL9999
            ENDIF
            IF        CKVISTYP = 3
              PERFORM   FORM5,DRGDI010,DRGDI020,DVAL9999,DRGDI040,DVAL9999:
                              DRGDI060,DVAL9999,DRGDI080,DVAL9999,DRGDI100:
                              DVAL9999,DRGDI120,DVAL9999,DVAL9999,DRGDI150:
                              DVAL9999,DVAL9999,DRGDI180,DVAL9999,DRGDI200:
                              DVAL9999,DRGDI220
            ENDIF
            IF        CKVISTYP = 4
              PERFORM   FORM5,DRGDT010,DRGDT020,DVAL9999,DVAL9999,DRGDT050:
                              DVAL9999,DRGDT070,DVAL9999,DRGDT090,DVAL9999:
                              DRGDT110,DVAL9999,DRGDT130,DVAL9999,DRGDT150:
                              DVAL9999,DRGDT170,DVAL9999,DRGDT190,DVAL9999:
                              DRGDT210,DVAL9999,DRGDT020,DVAL9999,DVAL9999:
                              DVAL9999,DVAL9999,DVAL9999,DRGDT290,DVAL9999:
                              DVAL9999,DVAL9999,DVAL9999,DVAL9999,DVAL9999:
                              DVAL9999,DVAL9999,DVAL9999,DVAL9999,DRGDT400:
                              DRGDT410,DVAL9999,DRGDT430,DVAL9999,DRGDT450:
                              DVAL9999,DRGDT470,DVAL9999
            ENDIF
          ENDIF
.
DVAL9999  RETURN
+
.*********************************************************************
.         display the CODES ranges
.*********************************************************************
DRGCODD0  PACK      FRRANGE,FRCODD[VARBLENO],SP9
          PACK      TORANGE,TOCODD[VARBLENO],SP9
          CALL      DRGCODES
          RETURN
+
.*********************************************************************
.         display the DATE ranges
.*********************************************************************
DRGDATE0  MATCH     SP8,FRDATE[VARBLENO]
          IF        @EQUAL
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            UNPACK    FRDATE[VARBLENO],CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        SCPSLEN = 10
              PACK      DIM12A,CPCDATE,SP30,SP30,SP20
            ELSE
              PACK      DIM12A,CPDATE,SP30,SP30,SP20
            ENDIF
          ENDIF
          MATCH     Z20,TODATE[VARBLENO]
          IF        @EQUAL
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            UNPACK    TODATE[VARBLENO],CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        SCPSLEN = 10
              PACK      DIM12B,CPCDATE,SP30,SP30,SP20
            ELSE
              PACK      DIM12B,CPDATE,SP30,SP30,SP20
            ENDIF
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.         display the TIME ranges
.*********************************************************************
DRGTIME0  MATCH     SP5,FRTIME[VARBLENO]
          IF        @EQUAL
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            PACK      DIM12A,FRTIME[VARBLENO]
          ENDIF
          MATCH     Z20,TOTIME[VARBLENO]
          IF        @EQUAL
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            PACK      DIM12B,TOTIME[VARBLENO]
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.         display the NUMERIC ranges
.*********************************************************************
DRGNUMB0  IF        FRNUMB[VARBLENO] = -99999.99
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            PACK      DIM12A,FRNUMB[VARBLENO],SP30,SP30,SP20
          ENDIF
          IF        TONUMB[VARBLENO] = 999999.99
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            PACK      DIM12B,TONUMB[VARBLENO],SP30,SP30,SP20
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.         display the DOCTOR ranges
.*********************************************************************
DRGDOCT0  PACK      FRRANGE,FRDOCT[VARBLENO],SP9
          PACK      TORANGE,TODOCT[VARBLENO],SP9
          CALL      DRGCODES
          RETURN
+
.*********************************************************************
.         display the THEATRE ranges
.*********************************************************************
DRGTHET0  PACK      FRRANGE,FRTHET[VARBLENO],SP9
          PACK      TORANGE,TOTHET[VARBLENO],SP9
          CALL      DRGCODES
          RETURN
+
.*********************************************************************
.         display the MBS/ICD-9 ranges
.*********************************************************************
DRGMBSI0  PACK      FRRANGE,FRMBSI[VARBLENO],SP9
          PACK      TORANGE,TOMBSI[VARBLENO],SP9
          CALL      DRGCODES
          RETURN
+
.*********************************************************************
.         display the CHANGEABLE CODES ranges
.*********************************************************************
DRGCHGC0  PACK      FRRANGE,FRCHGC[VARBLENO],SP9
          PACK      TORANGE,TOCHGC[VARBLENO],SP9
          CALL      DRGCODES
          RETURN
+
.*********************************************************************
.         display the ACCIDENT AND EMERGENCY ranges
.*********************************************************************
DRGDA010  MATCH     SP8,FRDOA001            * ATTENDANCE DATE
          IF        @EQUAL
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            UNPACK    FRDOA001,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        SCPSLEN = 10
              PACK      DIM12A,CPCDATE,SP30,SP30,SP20
            ELSE
              PACK      DIM12A,CPDATE,SP30,SP30,SP20
            ENDIF
          ENDIF
          MATCH     TODOA001,Z20
          IF        @EQUAL
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            UNPACK    TODOA001,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        SCPSLEN = 10
              PACK      DIM12B,CPCDATE,SP30,SP30,SP20
            ELSE
              PACK      DIM12B,CPDATE,SP30,SP30,SP20
            ENDIF
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.*********************************************************************
DRGDA020  PACK      FRRANGE,FRDOA002,SP9    * MODE OF ARRIVAL
          PACK      TORANGE,TODOA002,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDA040  PACK      FRRANGE,FRDOA004,SP9    * COMPLETION CODE
          PACK      TORANGE,TODOA004,SP9
          CALL      DRGCODES
          RETURN
+
.*********************************************************************
.         display the OUTPATIENT ranges
.*********************************************************************
DRGDO010  MATCH     SP6,FRDOO001            * VISIT DATE
          IF        @EQUAL
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            UNPACK    FRDOO001,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        SCPSLEN = 10
              PACK      DIM12A,CPCDATE,SP30,SP30,SP20
            ELSE
              PACK      DIM12A,CPDATE,SP30,SP30,SP20
            ENDIF
          ENDIF
          MATCH     TODOO001,Z20
          IF        @EQUAL
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            UNPACK    TODOO001,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        SCPSLEN = 10
              PACK      DIM12B,CPCDATE,SP30,SP30,SP20
            ELSE
              PACK      DIM12B,CPDATE,SP30,SP30,SP20
            ENDIF
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.*********************************************************************
DRGDO020  PACK      FRRANGE,FRDOO002,SP9    * CLINIC TYPE
          PACK      TORANGE,TODOO002,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDO040  PACK      FRRANGE,FRDOO004,SP9    * CLINIC ID
          PACK      TORANGE,TODOO004,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDO060  PACK      FRRANGE,FRDOO006,SP9    * DIAGNOSIS CODE
          PACK      TORANGE,TODOO006,SP9
          CALL      DRGCODES
          RETURN
+
.*********************************************************************
.         display the INPATIENT ranges
.*********************************************************************
DRGDI010  MATCH     SP6,FRDOI001            * ADMISSION DATE
          IF        @EQUAL
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            UNPACK    FRDOI001,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PACK      DIM12A,CPDATE,SP30,SP30,SP20
          ENDIF
          MATCH     TODOI001,Z20
          IF        @EQUAL
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            UNPACK    TODOI001,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PACK      DIM12B,CPDATE,SP30,SP30,SP20
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.*********************************************************************
DRGDI020  PACK      FRRANGE,FRDOI002,SP9    * SOURCE OF REFERRAL
          PACK      TORANGE,TODOI002,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDI040  PACK      FRRANGE,FRDOI004,SP9    * PATIENT CLASSIFICATION
          PACK      TORANGE,TODOI004,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDI060  PACK      FRRANGE,FRDOI006,SP9    * PATIENT CATEGORY
          PACK      TORANGE,TODOI006,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDI080  PACK      FRRANGE,FRDOI008,SP9    * ADMISSION WARD
          PACK      TORANGE,TODOI008,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDI100  PACK      FRRANGE,FRDOI010,SP9    * CURRENT/DISCHARGE WARD
          PACK      TORANGE,TODOI010,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDI120  PACK      FRRANGE,FRDOI012,SP9    * ADMITTING DIAGNOSIS
          PACK      TORANGE,TODOI012,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDI150  PACK      FRRANGE,FRDOI015,SP9    * DISCHARGE DIAGNOSIS
          PACK      TORANGE,TODOI015,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDI180  PACK      FRRANGE,FRDOI018,SP9    * DISCHARGE STATUS
          PACK      TORANGE,TODOI018,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************  
DRGDI200  PACK      FRRANGE,FRDOI020,SP9    * DISCHARGE DESTINATION
          PACK      TORANGE,TODOI020,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDI220  MATCH     SP6,FRDOI022            * DISCHARGE DATE
          IF        @EQUAL
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            UNPACK    FRDOI022,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PACK      DIM12A,CPDATE,SP30,SP30,SP20
          ENDIF
          MATCH     TODOI022,Z20
          IF        @EQUAL
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            UNPACK    TODOI022,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PACK      DIM12B,CPDATE,SP30,SP30,SP20
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.         display the THEATRE ranges
.*********************************************************************
DRGDT010  MATCH     SP6,FRDOT001            * SESSION DATE
          IF        @EQUAL
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            UNPACK    FRDOT001,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        SCPSLEN = 10
              PACK      DIM12A,CPCDATE,SP30,SP30,SP20
            ELSE
              PACK      DIM12A,CPDATE,SP30,SP30,SP20
            ENDIF
          ENDIF
          MATCH     TODOT001,Z20
          IF        @EQUAL
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            UNPACK    TODOT001,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        SCPSLEN = 10
              PACK      DIM12B,CPCDATE,SP30,SP30,SP20
            ELSE
              PACK      DIM12B,CPDATE,SP30,SP30,SP20
            ENDIF
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
.*********************************************************************
DRGDT020  PACK      FRRANGE,FRDOT002,SP9    * CLINIC/SURGEON
          PACK      TORANGE,TODOT002,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT050  PACK      FRRANGE,FRDOT005,SP9    * ANAESTHETIC
          PACK      TORANGE,TODOT005,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT070  PACK      FRRANGE,FRDOT007,SP9    * OPERATION TYPE
          PACK      TORANGE,TODOT007,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT090  PACK      FRRANGE,FRDOT009,SP9    * TRANSPORT CODE
          PACK      TORANGE,TODOT009,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT110  PACK      FRRANGE,FRDOT011,SP9    * UD FIELD 1
          PACK      TORANGE,TODOT011,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT130  PACK      FRRANGE,FRDOT013,SP9    * UD FIELD 2
          PACK      TORANGE,TODOT013,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT150  PACK      FRRANGE,FRDOT015,SP9    * UD FIELD 3
          PACK      TORANGE,TODOT015,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT170  PACK      FRRANGE,FRDOT017,SP9    * UD FIELD 4
          PACK      TORANGE,TODOT017,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT190  PACK      FRRANGE,FRDOT019,SP9    * PROV ITEM 1
          PACK      TORANGE,TODOT019,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT210  PACK      FRRANGE,FRDOT021,SP9    * PROV ITEM 2
          PACK      TORANGE,TODOT021,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT230  PACK      FRRANGE,FRDOT023,SP9    * PROV ITEM 3
          PACK      TORANGE,TODOT023,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT290  PACK      FRRANGE,FRDOT029,SP9    * OPERATING ROOM
          PACK      TORANGE,TODOT029,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT400  IF        FRDOT040 = ZERO
            PACK      DIM12A,START,SP30     * DURATION
          ELSE
            PACK      DIM12A,FRDOT040,SP30
          ENDIF
          IF        TODOT040 = 9999
            PACK      DIM12B,FINISH,SP30
          ELSE
            PACK      DIM12B,TODOT040,SP30
          ENDIF
          MOVE      "28",SCPSLEN
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP30
          CALL      DISPITEM
          RETURN
.*********************************************************************
DRGDT410  PACK      FRRANGE,FRDOT041,SP9    * KNOWN INFECTION
          PACK      TORANGE,TODOT041,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT430  PACK      FRRANGE,FRDOT043,SP9    * ANAESTHETIST
          PACK      TORANGE,TODOT043,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT450  PACK      FRRANGE,FRDOT045,SP9    * SUPERVISING ANAESTHETIST
          PACK      TORANGE,TODOT045,SP9
          CALL      DRGCODES
          RETURN
.*********************************************************************
DRGDT470  PACK      FRRANGE,FRDOT047,SP9    * TRAINEE ANAESTHETIST
          PACK      TORANGE,TODOT047,SP9
          CALL      DRGCODES
          RETURN
+
.*********************************************************************
.                   DTOK0000
.         display the 'to ' for the keyins and add to column amount
.*********************************************************************
DTOK0000  ADD       COLADDA,ECOL            * get column for to
          DISPLAY   *PECOL:EVERT,*V2LON,"to"
          ADD       COLADDB,ECOL            * get to column for from code
          MOVE      ECOL,CCOL               * set for date/time keyins
DTOK9999  RETURN
+
.*********************************************************************
.                   PRANG000                    Called by : SUMM8000
.         Print the search ranges
.         have to use a suspend as DISPITEM displays the variable
.*********************************************************************
PRANG000  DISPLAY   *P1:24,*EL,"Printing search criteria..."
          CALL      IBACLOCK                * get current date and time
          CALL      HEAD80
          PRINT     *20,"SEARCH CRITERIA"
          ADD       ONE,CLNO
          MOVE      THREE,CVERT             * set the row
          MOVE      ZERO,CNTITEM            * clear field counter
          PACK      PRGIDB,CLAHOC,CASTFILE  * Background Program Id
          MOVE      "01",SCRIDB             * Background Screen Id
          MOVE      PRGIDB,PRGID            * set program id
          MOVE      SCRIDB,SCRID            * set screen id
          CLIP      50,24,80,24
.
PRANG100  PACK      SCSBDAT,SP30,SP30,SP20  * clear data
          PACK      KEY12,PRGID,SCRID,CVERT * get screen background
          CALL      RDSCSB1                 * positional read
.
.         get the file variables and add to DATA & ATTRIBUTES string
.
          PACK      KEY15,PRGID,SCRID,CVERT,SP20
          CALL      RSSCPS1                 * positional read
.
PRANG200  CALL      RKSCPS1                 * next read
          BRANCH    OVRCD,PRANG300          * end of file
.
          MATCH     PRGID,SCPSPID
          GOTO      PRANG300 IF NOT EQUAL   * different program id
.
          MATCH     SCRID,SCPSSID
          GOTO      PRANG300 IF NOT EQUAL   * different screen id
.
          MOVE      SCPSROW,EVERT
          COMPARE   CVERT,EVERT   
          GOTO      PRANG300 IF NOT EQUAL   * different line number
.
          PACK      VAR,SP30,SP30,SP20      * clear variable
          ADD       ONE,CNTITEM             * get to next field number
          MOVE      FIELD[CNTITEM],ANS      * get input part of variable
          MATCH     "1",ANS                 * has field been entered
          IF        @EQUAL
            CALL      DVAL0000                * display and set VAR
          ENDIF
          MOVE      VAR,DIM80               * set parameter for dxsetval
          MOVE      SCPSCOL,CCOL            * set column
          MOVE      "99",IMON               * dont display variable
          CALL      DXSETVAL                * set up scbsdat
          GOTO      PRANG200
.
PRANG300  SETLPTR   SCSBDAT                 * set FP to end of string
          RESET     SCSBDAT                 * reset FP to start of string
.
.         print a line of the screen
.
          COMPARE   "55",CLNO
          CALL      HEAD80 IF NOT LESS    * print new screen
.
          PRINT     *1,SCSBDAT              * display data string
          ADD       ONE,CLNO                * add to line number
          ADD       ONE,CVERT               * get to next screen line
          COMPARE   "24",CVERT
          GOTO      PRANG100 IF LESS        * more lines to print
.
PRANG500  MOVE      "IBACLA05",PRGID
          CLIP
.
PRANG999  RETURN
+
.*********************************************************************
.                   PSUM0000                    Called by : SUMM8000
.         print the summary details
.*********************************************************************
PSUM0000  DISPLAY   *P1:24,*EL,"Printing patients found...."
          MOVE      "70",CLNO               * starting line
          MOVE      ONE,CNTITEM             * set count
          CALL      OPFS0000                * open files for PMI
          CALL      IBACLOCK                * get current date and time
          MOVE      SP20,KEY20
          READ      TEMPA,KEY20;;
.
. ******* loop over file *******
.
PSUM1000  READKS    TEMPA;CAVRSITE,CAVRVIST,CAVRTHEU
          GOTO      PSUM9000 IF OVER        * end of file
.
. ******* increment counters *******
.
PSUM2000  IF        CLNO >= 55
            CALL      HEAD80   
            PRINT     *20,"SUMMARY FOR ",CASTDESC
            PRINT     *N,*5,"Visit No",*14,"U/R Number",*25,"Patient Name";
            IF        CKVISTYP = FOUR
              PRINT     *66,"Unique Id.";
            ENDIF
            PRINT     *N,*5,"--------",*14,"----------":
                      *25,"----------------------------------------";
            IF        CKVISTYP = FOUR
              PRINT     *66,"----------";
            ENDIF
            PRINT     *N;
            ADD       "3",CLNO
          ENDIF
.
          CALL      GPMI0000                * get the PMI details
          PRINT     *1,CNTITEM,". ",PVIBILL,SP2,PVIURNO,SP2,PATNAME,SP1,CAVRTHEU
          ADD       ONE,CLNO
          ADD       ONE,CNTITEM             * add to item counter
          GOTO      PSUM1000
.
PSUM9000  PRINT     *N,"*** End of Summary ***",*N
.
PSUM9999  RETURN
+
.*********************************************************************
.                   RGEC0000                    Called by : KDORxnnn 
.         keyin a range for any patient codes file variables
.         Para's  : CODE          the category
.                   ECOL & EVERT  keyin position of first code
.         Returns : FRCODE        from code
.                   TOCODE        to   code
.*********************************************************************
RGEC0000  MOVE      ZERO,CKYIMAND           * mandatory ??
          MOVE      SP3,CKYIDEF3            * default value
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATCODKY
          COMPARE   TWO,EXIT
          GOTO      RGEC9999 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,FRCODE            * from code
          MATCH     SP3,ACODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
.
          CALL      DTOK0000                * display 'to' and add to column
.
RGEC5000  MOVE      FRCODE,CKYIDEF3         * default value
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATCODKY
          COMPARE   TWO,EXIT
          GOTO      RGEC9999 IF EQUAL       * exitchar entered
.
          MOVE      ACODE,TOCODE            * set the value
          MATCH     SP3,ACODE
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TOCODE
          ENDIF
.
          MATCH     FRCODE,TOCODE
          GOTO      RGEC9999 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      RGEC5000
.
RGEC9999  RETURN
+
.*********************************************************************
.                   RGEW0000                    Called by : KDORxnnn 
.         keyin a range for ward codes
.         Para's  : ECOL & EVERT  keyin position of first code
.         Returns : FRWARD        from code
.                   TOWARD        to   code
.*********************************************************************
RGEW0000  MOVE      ZERO,CKYIMAND           * mandatory ??
          MOVE      SP3,CKYIDEF3            * default value
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATWRDKY
          COMPARE   TWO,EXIT
          GOTO      RGEW9999 IF EQUAL       * exitchar entered
.
          MOVE      WWARD,FRWARD            * from code
          MATCH     SP3,WWARD
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
.
          CALL      DTOK0000                * display 'to' and add to column
.
RGEW5000  MOVE      FRCODE,CKYIDEF3         * default value
          DISPLAY   *PECOL:EVERT,SP6;
          CALL      PATWRDKY
          COMPARE   TWO,EXIT
          GOTO      RGEW9999 IF EQUAL       * exitchar entered
.
          MOVE      WWARD,TOWARD            * set the value
          MATCH     SP3,WWARD
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TOWARD
          ENDIF
.
          MATCH     FRWARD,TOWARD
          GOTO      RGEW9999 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      RGEW5000
.
RGEW9999  RETURN
+
.*********************************************************************
.                   RGED0000                    Called by : KDORxnnn 
.         keyin a range for diagnosis codes
.         Para's  : ECOL & EVERT  keyin position of first code
.                   MBSICD        keyin MBS or ICD code
.         Returns : FRDIAG        from code
.                   TODIAG        to   code
.*********************************************************************
RGED0000  MOVE      ZERO,CKYIMAND           * mandatory ??
          MOVE      SP3,CKYIDEF9            * default value
          DISPLAY   *PECOL:EVERT,SP9;
          IF        MBSICD = ONE
            CALL      PATITMKY                * keyin MBS code
          ELSE
            CALL      PATICDKY                * keyin ICD code
            MOVE      DPCODE,AMBS             * set code
          ENDIF
          COMPARE   TWO,EXIT
          GOTO      RGED9999 IF EQUAL       * exitchar entered
.
          MOVE      AMBS,FRDIAG             * from code
          MATCH     SP9,AMBS
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Start"
          ENDIF
.
          CALL      DTOK0000                * display 'to' and add to column
.
RGED5000  MOVE      FRDIAG,CKYIDEF9         * default value
          DISPLAY   *PECOL:EVERT,SP9;
          IF        MBSICD = ONE
            CALL      PATITMKY                * keyin MBS code
          ELSE
            CALL      PATICDKY                * keyin ICD code
            MOVE      DPCODE,AMBS             * set code
          ENDIF
          COMPARE   TWO,EXIT
          GOTO      RGED9999 IF EQUAL       * exitchar entered
.
          MOVE      AMBS,TODIAG             * set the value
          MATCH     SP9,AMBS
          IF        @EQUAL
            DISPLAY   *PECOL:EVERT,*V2LON,"Finish"
            MOVE      Z20,TODIAG
          ENDIF
.
          MATCH     FRDIAG,TODIAG
          GOTO      RGED9999 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"End value must be after Start value.  ",*EL;
          CALL      HITENTER
          GOTO      RGED5000
.
RGED9999  RETURN
+
.*********************************************************************
.                   GADW0000                    Called by : xxxx0000 
.         get the admission ward for a patient
.         Para's  : AADMNO
.         Returns : WARDADMT / BEDADMT
.*********************************************************************
GADW0000  MOVE      SP30,TDESC
          MOVE      SP3,WARDADMT            * clear code
          MOVE      SP3,BEDADMT             * clear code
          PACK      KEY30,AADMNO,TDESC
          CALL      RDSTRAN2
          CALL      RDKTRAN2
          BRANCH    OVRCD,GADW9999          * no ward
          COMPARE   AADMNO,TADMN
          GOTO      GADW9999 IF NOT EQUAL   * no ward
          MATCH     ANSA,TMOVE
          GOTO      GADW9999 IF NOT EQUAL   * no ward
          MOVE      TWARD,WARDADMT          * set the ward
          MOVE      TBED,BEDADMT            * set the bed
GADW9999  RETURN
+
.*********************************************************************
.                   GCDW0000                    Called by : xxxx0000 
.         get the current/discharge ward for a patient
.         Para's  : AADMNO
.         Returns : WARDCURR / BEDCURR
.*********************************************************************
GCDW0000  MOVE      Z30,TDESC
          MOVE      SP3,WARDCURR            * clear code
          MOVE      SP3,BEDCURR             * clear code
          PACK      KEY30,AADMNO,TDESC
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,GCDW9999          * no ward
          COMPARE   AADMNO,TADMN
          GOTO      GCDW9999 IF NOT EQUAL   * no ward
          MOVE      TWARD,WARDCURR          * set the ward
          MOVE      TBED,BEDCURR            * set the bed 
GCDW9999  RETURN
+
.*********************************************************************
.                   DRGCODES
.         display any code range
.*********************************************************************
DRGCODES  MATCH     SP9,FRRANGE 
          IF        @EQUAL
            PACK      DIM12A,START,SP30,SP30,SP20
          ELSE
            PACK      DIM12A,FRRANGE,SP30,SP30,SP20
          ENDIF
          MATCH     "zzz",TORANGE
          IF        @EQUAL
            PACK      DIM12B,FINISH,SP30,SP30,SP20
          ELSE
            PACK      DIM12B,TORANGE,SP30,SP30,SP20
          ENDIF
          MOVE      "28",SCPSLEN            * set length
          PACK      VAR,DIM12A,TO,DIM12B,SP30,SP30,SP20
          CALL      DISPITEM
          RETURN
+
.*********************************************************************
.                   CKDI0000                    Called by : RDKF5100 
.         check that the dud values which give no index     CRNG5100
.         are within the entered ranges
.         Para's  : CPVARBL       which variable we are using
.         Returns : EXIT = 0      valid value
.                   EXIT = 1      value too low
.                   EXIT = 2      value too high
.*********************************************************************
CKDI0000  BRANCH    CKVISTYP,CKDI1000,CKDI2000,CKDI3000,CKDI4000
.                            A&E      OP       IP       Thet
          GOTO      CKDI9992
.
. ******* check A&E details *******
.
CKDI1000  MOVE      CAVRVIST,KEY8
          CALL      RDDETA1
          BRANCH    OVRCD,CKDI9991          * invalid A&E patient
.
          BRANCH    CPVARBL,CKDI1001,CKDI1002,CKDI9990,CKDI1004,CKDI9990
          GOTO      CKDI9991
.
CKDI1001  MATCH     FRDOA001,ADADATE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     ADADATE,TODOA001
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI1002  MATCH     FRDOA002,ADAMODE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     ADAMODE,TODOA002
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI1004  MATCH     FRDOA002,ADAWAIT
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     ADAWAIT,TODOA002
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
. ******* check Outpatient details *******
.
CKDI2000  MOVE      CAVRVIST,KEY8
          CALL      RDDIAG1
          BRANCH    OVRCD,CKDI9990          * no diagnosis
.
          BRANCH    CPVARBL,CKDI2001,CKDI2002,CKDI9991,CKDI2004,CKDI9991:
                            CKDI2006,CKDI9991,CKDI9991,CKDI9991,CKDI9991
          GOTO      CKDI9990
.
CKDI2001  MATCH     FRDOO001,OBADATE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OBADATE,TODOO001
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI2002  MATCH     FRDOO002,OBACTYP
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OBACTYP,TODOO002
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI2004  MATCH     FRDOO004,OBACLIN
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OBACLIN,TODOO004
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI2006  MATCH     FRDOO006,OPDICODE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDICODE,TODOO006
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
. ******* check Inpatient details *******
.
CKDI3000  MOVE      CAVRVIST,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,CKDI9991          * invalid inpatient
.
          MOVE      CAVRVIST,KEY8
          PACK      DDIAG,SP30,SP20
          PACK      DDIAG2,SP30,SP20
          UNPACK    SP30,DSTAT,DDEST,DDATE,DFMBS
          CALL      RDDSCH1                 * get any discharge details
.
          BRANCH    CPVARBL,CKDI3001,CKDI3002,CKDI9991,CKDI3004,CKDI9991:
                            CKDI3006,CKDI9991,CKDI3008,CKDI9991,CKDI3010:
                            CKDI9991,CKDI3012,CKDI9991,CKDI9991,CKDI3015:
                            CKDI9991,CKDI9991,CKDI3018,CKDI9991,CKDI3020:
                            CKDI9991,CKDI9991
          GOTO      CKDI9991
.
CKDI3001  MATCH     FRDOI001,ADATE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     ADATE,TODOI001
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3002  MATCH     FRDOI002,ASRCE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     ASRCE,TODOI002
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3004  MATCH     FRDOI004,ATYPE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     ATYPE,TODOI004
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3006  MATCH     FRDOI006,ACLSS
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     ACLSS,TODOI006
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3008  CALL      GADW0000                * get the admitting ward
          MATCH     FRDOI008,WARDADMT
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     WARDADMT,TODOI008
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3010  CALL      GCDW0000                * get the current/discharge ward
          MATCH     FRDOI010,WARDCURR
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     WARDCURR,TODOI010
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3012  MATCH     FRDOI012,AMBS
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     AMBS,TODOI012
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3015  MATCH     FRDOI015,DFMBS
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     DFMBS,TODOI015
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3018  MATCH     FRDOI018,DSTAT
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     DSTAT,TODOI018
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI3020  MATCH     FRDOI020,DDEST
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     DDEST,TODOI020
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
. ******* check Theatre details *******
.
CKDI4000  MOVE      CAVRTHEU,THETUNIQ       * set theatre unique
          MOVE      CAVRVIST,PVIBILL        * set visit number
          CALL      GOPR0000                * get theatre details
          BRANCH    EXIT,CKDI9991           * invalid patient
.
          BRANCH    CPVARBL,CKDI4001,CKDI4002,CKDI9991,CKDI9991,CKDI4005:
                            CKDI9991,CKDI4007,CKDI9991,CKDI4009,CKDI9991:
                            CKDI4011,CKDI9991,CKDI4013,CKDI9991,CKDI4015:
                            CKDI9991,CKDI4017,CKDI9991,CKDI4019,CKDI9991:
                            CKDI4021,CKDI9991,CKDI4023,CKDI9991,CKDI9991:
                            CKDI9991,CKDI9991,CKDI9991,CKDI4029,CKDI9991:
                            CKDI9991,CKDI9991,CKDI9991,CKDI9991,CKDI9991:
                            CKDI9991,CKDI9991,CKDI9991,CKDI9991,CKDI4040:
                            CKDI4041,CKDI9991,CKDI4043,CKDI9991,CKDI4045:
                            CKDI9991,CKDI4047,CKDI9991
          GOTO      CKDI9990
.        
CKDI4001  MATCH     FRDOT001,OPDADATE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDADATE,TODOT001
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4002  MATCH     FRDOT002,OPDACLIN
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDACLIN,TODOT002
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4005  MATCH     FRDOT005,OPDAANAE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAANAE,TODOT005
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4007  MATCH     FRDOT007,OPDATYPE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDATYPE,TODOT007
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4009  MATCH     FRDOT009,OPDATRAN
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDATRAN,TODOT009
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4011  MATCH     FRDOT011,OPDAUSR1
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAUSR1,TODOT011
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4013  MATCH     FRDOT013,OPDAUSR2
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAUSR2,TODOT013
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4015  MATCH     FRDOT015,OPDAUSR3
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAUSR3,TODOT015
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4017  MATCH     FRDOT017,OPDAUSR4
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAUSR4,TODOT017
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4019  MATCH     FRDOT019,OPDAPROV
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAPROV,TODOT019
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4021  MATCH     FRDOT021,OPDAPRV2
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAPRV2,TODOT021
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4023  MATCH     FRDOT023,OPDAPRV3
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAPRV3,TODOT023
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4029  MATCH     FRDOT029,OPDATHET
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDATHET,TODOT029
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4040  COMPARE   FRDOT040,OPDAEXPD
          GOTO      CKDI9991 IF LESS        * value too low
          COMPARE   OPDAEXPD,TODOT040
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4041  MATCH     FRDOT041,OPDAKNOW
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     OPDAKNOW,TODOT041
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4043  MATCH     FRDOT043,CODEANAE
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     CODEANAE,TODOT043
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4045  MATCH     FRDOT045,CODESUPA
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     CODESUPA,TODOT045
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
CKDI4047  MATCH     FRDOT047,CODETRNA
          GOTO      CKDI9991 IF LESS        * value too low
          MATCH     CODETRNA,TODOT047
          GOTO      CKDI9992 IF LESS        * value too high
          GOTO      CKDI9990
.
.         set exit flags
.
CKDI9990  MOVE      ZERO,EXIT               * valid code
          GOTO      CKDI9999
.
CKDI9991  MOVE      ONE,EXIT                * value too low
          GOTO      CKDI9999
.
CKDI9992  MOVE      TWO,EXIT                * value too high
          GOTO      CKDI9999
.
CKDI9999  RETURN
+
.*********************************************************************
.                   CKRI0000                    Called by : RDKF5000 
.         check that values from real indexes are in        CRNG5100
.         requried ranges
.         Para's  : CPINDEX       index value to check for
.                   CPVARBL       variable number to check for
.         Returns : EXIT = 0      valid value
.                   EXIT = 1      value too low
.                   EXIT = 2      value too high
.*********************************************************************
CKRI0000  BRANCH    CPINDEX,CKRI9000,CKRI5200,CKRI5300,CKRI5400,CKRI5500:
                            CKRI5600,CKRI5700,CKRI5800,CKRI5900,CKRI6000:
                            CKRI6100,CKRI6200,CKRI6300,CKRI6400,CKRI6500:
                            CKRI6600
          GOTO      CKRI9000
.
CKRI5200  MATCH     FRCODD[CPVARBL],CAVRCODE
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     CAVRCODE,TOCODD[CPVARBL]
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI5300  MATCH     FRDATE[CPVARBL],CAVRDATE
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     CAVRDATE,TODATE[CPVARBL]
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI5400  MATCH     FRTIME[CPVARBL],CAVRTIME
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     CAVRTIME,TOTIME[CPVARBL]
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI5500  COMPARE   FRNUMB[CPVARBL],CAVRNUMB
          GOTO      CKRI9100 IF LESS        * value too low
          COMPARE   CAVRNUMB,TONUMB[CPVARBL]
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI5600  MATCH     FRDOCT[CPVARBL],CAVRDOCT
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     CAVRDOCT,TODOCT[CPVARBL]
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI5700  MATCH     FRTHET[CPVARBL],CAVRTHET
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     CAVRTHET,TOTHET[CPVARBL]
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI5800  MATCH     FRMBSI[CPVARBL],CAVRCOD9
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     CAVRCOD9,TOMBSI[CPVARBL]
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI5900  MATCH     FRCHGC[CPVARBL],CAVRCODC
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     CAVRCODC,TOCHGC[CPVARBL]
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI6000  MATCH     FRDOI001,ADATE
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     ADATE,TODOI001
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI6100  MATCH     FRDOI022,DDATE
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     DDATE,TODOI022
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * satisifies other criteria
.
CKRI6200  MATCH     FRDOO001,OBADATE   
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     OBADATE,TODOO001
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * first search range is valid
.
CKRI6300  MATCH     FRDOO002,OBACTYP   
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     OBACTYP,TODOO002
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * first search range is valid
.
CKRI6400  MATCH     FRDOO004,OBACLIN   
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     OBACLIN,TODOO004
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * first search range is valid
.
CKRI6500  MATCH     FRDOA001,ADADATE   
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     ADADATE,TODOA001
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * first search range is valid
.
CKRI6600  MATCH     FRDOT001,OPDADATE   
          GOTO      CKRI9100 IF LESS        * value too low
          MATCH     OPDADATE,TODOT001
          GOTO      CKRI9200 IF LESS        * value too high
          GOTO      CKRI9000                * first search range is valid
.
.         set exit flags
.
CKRI9000  MOVE      ZERO,EXIT               * valid record
          GOTO      CKRI9999
.
CKRI9100  MOVE      ONE,EXIT                * value too low
          GOTO      CKRI9999
.
CKRI9200  MOVE      TWO,EXIT                * value too high
.
CKRI9999  RETURN
+
.*********************************************************************
.                   GOPR0000                    Called by : PTSL1000 
.         get the theatre details for a patient             CKDI4000
.         Para's  : PVIBILL       visit number
.                   THETUNIQ      unique id for session
.         Returns : EXIT = 1      no oprdeafd details
.*********************************************************************
GOPR0000  OPEN      OPRDETA2,"oprdetaf"
          PACK      KEY31,PVIBILL,SP30
          CALL      RSOPDEA2
GOPR1000  CALL      RKOPDEA2
          BRANCH    OVRCD,GOPR9100          * invalid patient
.
          MOVE      OPDAADMN,FORM8
          COMPARE   FORM8,PVIBILL
          GOTO      GOPR9100 IF NOT EQUAL   * invalid patient
.
          MATCH     THETUNIQ,OPDAUNIQ
          GOTO      GOPR1000 IF NOT EQUAL   * not same booking
.
          CALL      CLAGTANS                * get anaesthetist(s)
          MOVE      ZERO,EXIT
          GOTO      GOPR9995
.
GOPR9100  MOVE      ONE,EXIT
.
GOPR9995  CLOSE     OPRDETA2
.
GOPR9999  RETURN
+
.*********************************************************************
.*                  KDOC0000                    Called by : CLIN0000 *
.*        Common Keyin for the surgeon or clinic code                *
.*        Para's  : OPCNCLSU      whether to use clinic or surgeon   *
.*                  EVERT         row for input                      *
.*                  ECOL          column for input                   *
.*        Returns : DCODE         the code entered                   *
.*                  EXIT = 1      nothing entered                    *
.*********************************************************************
KDOC0000  MOVE      ONE,FORM1               * set ? as not performed
          MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
.
KDOC1000  MATCH     SP6,CKYIDEF6
          GOTO      KDOC1100 IF EQUAL       * no default
.
          MOVE      CKYIDEF6,DCODE
          KEYIN     *PCCOL:CVERT,*DV,DCODE:
                    *PCCOL:CVERT,*V2LON,*RV,DCODE:
                    *PCCOL:CVERT,*DV,DCODE;
          GOTO      KDOC1200
.
KDOC1100  KEYIN     *PCCOL:CVERT,*DV,UNDLN6:
                    *PCCOL:CVERT,*V2LON,DCODE:
                    *PCCOL:CVERT,*DV,DCODE;
.
KDOC1200  ENDSET    DCODE
          APPEND    SP6,DCODE
          RESET     DCODE
.
          MATCH     SP6,DCODE
          GOTO      KDOC5000 IF EQUAL       * nothing entered
          MATCH     EXITCHAR,DCODE
          GOTO      KDOC9200 IF EQUAL       * exitchar entered
.
          CMATCH    QUEST,DCODE
          GOTO      KDOC2000 IF NOT EQUAL   * validate what was entered
.
.         ? entered, call required routine according to OPCNCLSU
.
          IF        FORM1 = ONE
            MOVE      ZERO,HLEF               * save screen
            CALL      GETSCR00
            MOVE      ZERO,FORM1
          ENDIF
.
          BRANCH    OPCNCLSU,KDOC1500       * using doctor codes
.
          CALL      OPRCLIDS                * ? for clinics
          GOTO      KDOC1600
.
KDOC1500  CALL      PATDOCDS                * ? for doctors
.
KDOC1600  IF        CNEWDS = ZERO
            CALL      PUTSCR00                * redisplay screen
            MOVE      ONE,FORM1
            MOVE      ECOL,CCOL
            MOVE      EVERT,CVERT
          ELSE
            MOVE      "24",CVERT
            MOVE      "14",CCOL
            MOVE      ZERO,FORM1
            DISPLAY   *P1:24,"Enter Code : ",*EL;
          ENDIF
          GOTO      KDOC1000
.
.         validate what was entered, according to OPCNCLSU
.
KDOC2000  MOVE      DCODE,DIM6              * save code 
          CALL      FNAM0000                * set up the key
          BRANCH    OVRCD,KDOC4000          * invalid code
.
          MOVE      DIM6,DCODE              * restore code
          MOVE      FALSE,EXIT              * valid answer
          GOTO      KDOC6000                * check for redisplay
.
.         invalid code entered
.
KDOC4000  DISPLAY   *P1:24,*EL,*B,"Invalid Code entered.  ";
          CALL      HITENTER
          BRANCH    FORM1,KDOC1000
          DISPLAY   *P1:24,"Enter Code : ",*EL;
          GOTO      KDOC1000
.
.         nothing entered
.
KDOC5000  MOVE      ONE,EXIT
.
.         check for redisplay
.
KDOC6000  IF        FORM1 = ZERO
            CALL      PUTSCR00
          ENDIF
          DISPLAY   *PECOL:EVERT,*V2LON,DCODE
          GOTO      KDOC9999
.
.         exitchar entered
.
KDOC9200  MOVE      TWO,EXIT
          MOVE      SP6,DCODE
          IF        FORM1 = ZERO
            CALL      FRESCR00
          ENDIF
.
KDOC9999  RETURN
+
.*********************************************************************
.*                  FNAM0000                    Called by : EXTR0000 *
.*        Format Clinic/Surgeon name                                 *
.*********************************************************************
FNAM0000  MOVE      DCODE,KEY6
          PACK      OPCLDESC,SP30,SP20
          BRANCH    OPCNCLSU,FNAM5000       * using doctor codes
.
.         validate using clinic file
.
          CALL      RDOPCLI1                * read clinic file
          BRANCH    OVRCD,FNAM9999          * invalid code
.
          MATCH     SP6,OPCLDOCT
          GOTO      FNAM9999 IF EQUAL       * no docotor code to use
          MOVE      OPCLDOCT,KEY6           * use the doctor code
.
.         validate using doctors file
.
FNAM5000  CALL      RDDOCT1                 * read docs file
          BRANCH    OVRCD,FNAM9999          * invalid code
.
          MOVE      DSNAME,PACSNAME         * surname
          MOVE      DGNAME,PACGNAME         * given name
          MOVE      DTITL,PACTITLE          * title
          MOVE      TWO,PACFRMT             * SURNAME, TITLE GIVEN
          CALL      PACNAME                 * format the name
          MOVE      PACFNAME,OPCLDESC       * set name
.
FNAM9999  RETURN
+
.*********************************************************************
.                   MSPCE000                    Called by : xxxx0000 
.         keyin response to Select item (P)ost, (C)ancel, (E)xit
.         Returns : CCITEM > 0    for any item number selected    
.                   CCITEM = 0    Post selected                    
.                   CCITEM = -1   Cancel selected                   
.                   CCITEM = -2   Exit selected                      
.*********************************************************************
MSPCE000  DISPLAY   *P1:24,*EL,"Select item, (":
                    *V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"E",*HOFF,")xit ? "
.
MSPCE100  KEYIN     *P41:24,*DV,UNDLN3:
                    *P41:24,*V2LON,*JR,CCITEMD:
                    *P41:24,*DV,CCITEMD
.
          TYPE      CCITEMD
          GOTO      MSPCE500 IF EQUAL       * number entered
.
.         letters entered
.
          UNPACK    CCITEMD,ANS,ANS,ANS
          REP       UPPLOW,ANS
          MATCH     ANSP,ANS
          GOTO      MSPCE200 IF EQUAL       * post selected
          MATCH     ANSC,ANS
          GOTO      MSPCE210 IF EQUAL       * cancel selected
          MATCH     ANSE,ANS
          GOTO      MSPCE220 IF EQUAL       * exit selected
.
MSPCE150  BEEP
          GOTO      MSPCE100
.
MSPCE200  MOVE      ZERO,CCITEM             * POST
          GOTO      MSPCE999
.
MSPCE210  MOVE      "-1",CCITEM             * CANCEL
          GOTO      MSPCE999
.
MSPCE220  MOVE      "-2",CCITEM             * EXIT
          GOTO      MSPCE999
.
.         number entered
.
MSPCE500  MOVE      CCITEMD,CCITEM          * get as numeric
          COMPARE   CCITEM,ZERO
          GOTO      MSPCE150 IF NOT LESS    * invalid number
.
MSPCE999  RETURN
+
.
.         I/O includes needed 
.
          INC       STD001IO/PBL
          INC       AAEHEAD/PBL
          INC       AAEDE1IO/INC
          INC       BOKRC1IO/INC
          INC       CALCAGE
          INC       PATITMRD
          INC       CLACATIO/INC
          INC       CLACODIO/INC
          INC       CLACDADS/PBL
          INC       CLACDBDS/PBL
          INC       CLASITDS/PBL            * ? for clasitfd
          INC       CLAGTANS/PBL
          INC       CLASITIO/INC
          INC       CLAVARIO/INC 
          INC       DSPBGRND/PBL            * display the background
          INC       KYCLACOD/PBL            * keyin for clacodfd
          INC       KYCLASIT/PBL            * keyin for clasitfd
          INC       KYOPROPR/PBL            * keyin for oproprfd
          INC       KYOUTCLI/PBL            * keyin for outclifd
          INC       KYOUTCTY/PBL            * keyin for outctyfd
          INC       PATICDKY/PBL            * keyin for paticdfd
          INC       PATWRDKY/PBL            * keyin for patwrdfd
          INC       OPRCLIDS/PBL
          INC       OPRCLIIO/INC
          INC       OPRDEAIO/INC
          INC       OPRDEBIO/INC
          INC       OPROPRDS/PBL
          INC       OPROPRIO/INC
          INC       OPRSESIO/INC
          INC       OUTDIAIO/INC
          INC       OUTDSCLN/PBL            * ? for clinic id
          INC       OUTDSCTY/PBL            * ? for clinic type
          INC       OUTHEAD/PBL
          INC       OUTBOAIO/INC
          INC       OUTCLIIO/INC
          INC       OUTCTYIO/INC
          INC       OUTSITIO/INC
          INC       PATALERT/PBL
          INC       PATALRIO/INC
          INC       PATCODKY/PBL
          INC       PATDOCDS
          INC       PATDOCKY/PBL
          INC       PATITMKY/PBL
          INC       PATHEAD/PBL
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATICDIO/INC
          INC       PATITMIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PATNOBIO/INC
          INC       PATPR1IO/INC
          INC       PATTRNIO/INC
          INC       PATVISIO/INC
          INC       PATNIDIO/INC
          INC       PATWR1IO/INC
          INC       PMIHEAD/PBL
          INC       PMSHCPIO/INC
          INC       SCRKYFRE/PBL            * keyin free format field
          INC       DXSETVAL/PBL            * set up screen for print
          INC       STDSCRIO/PBL
          INC       PATDICIO/INC
          INC       PATOICIO/INC
          INC       ICDHLPSC
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
...............................................................................
