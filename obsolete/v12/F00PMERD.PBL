.*****************************************************************************
.*    Program      : F00PMERD.PBL                                            *
.*    Description  : Conversion pmserdaf to new File layout                  *
.*                                                                           *
.*    Author       : Steve Armstrong                                         *
.*    Date         : 10/05/2010                                              *
.*    Modifications:                                                         *
.*        V10.00.00 Steve Armstrong  CAR 221795                              *
.*                  Created program                                          *
.*****************************************************************************
.
          INC       STD001FD
.
IBCNMHOS  FORM      1             * multi-campus flag
.
FINDFILE  FILE      ASCII, FIXED=256
.
OLDFILE    IFILE    SQL, FIXED=166, KEY="U1-3,4-33,34-37,38-61"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMEDPART  DIM       3         3       1   Participant Code (Health Fund)
.PMEDRADV DIM       30        30      4   Remittance Advice ID
.PMEDPNUM DIM       4         4      34   Part Number
.PMEDTRID DIM       24        24     38   Transaction ID
.PMEDARID DIM       20        20     62   Account Reference ID
.PMEDBAMT DIM       9         9      82   Benefit Amount
.PMEDCCOD DIM       3         3      91   Claim Channel Code
.PMEDLDAT DIM       8         8      94   Date of Lodgement
.PMEDPARI DIM       20        20    102   Previous Account Reference ID
.PMEDPTID DIM       24        24    122   Previous Transaction ID
.PMEDSTAT DIM       1         1     146   Status
.                                            0 = Received
.                                            1 = Locked
.                                            2 = Released
OLDDSPAR  DIM       19        19    147   Spare Variable
.
.End of Record                      166
.
.
PMSERDA1   IFILE    SQL, FIXED=188, KEY="U1-24,25-54,55-58,59-82"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMEDFTID  DIM       24        24      1   Fund Transaction ID
PMEDRADV  DIM       30        30     25   Remittance Advice ID
PMEDPNUM  DIM       4         4      55   Part Number
PMEDTRID  DIM       24        24     59   Transaction ID
PMEDARID  DIM       20        20     83   Account Reference ID
PMEDBAMT  DIM       9         9     103   Benefit Amount
PMEDCCOD  DIM       3         3     112   Claim Channel Code
PMEDLDAT  DIM       8         8     115   Date of Lodgement
PMEDPARI  DIM       20        20    123   Previous Account Reference ID
PMEDPTID  DIM       24        24    143   Previous Transaction ID
PMEDSTAT  DIM       1         1     167   Status
.                                            0 = Received
.                                            1 = Locked
.                                            2 = Released
PMEDSPAR  DIM       20        20    168   Spare Variable
.
.End of Record                      188
.
.
PMSECTA6  IFILE SQL, FIXED=150, KEY="U58-81,17-24,25-32"
.
. NAME    TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----   ------   --------  ----------   ----------------------
DPMECFLG  DIM       2           2         1      Eclipse Status Flag
.                                                 ibaPAS Processing
.                                                    0 = Not Sent
.                                                    1 = Error (PAS validation)
.                                                    2 = Extracted
.                                                 Eclipse - Processing
.                                                    3 = Error (SA validation)
.                                                    4 = Received
.                                                    5 = Health Fund Unverified
.                                                    6 = Health Fund Verified
.                                                    7 = Health Fund Assessing
.                                                 Eclipse - Interim Report
.                                                    8 = Ready
.                                                    9 = Reported
.                                                 Eclipse - Ready
.                                                   10 = Health Fund Rejected
.                                                   11 = Assessing Complete
.                                                 Eclipse - Reported
.                                                   12 = HF Rejected - Reported
.                                                   13 = Complete - Reported
.                                                 Eclipse - Remittance
.                                                   14 = Reported
.                                                   15 = Closed
PMECHFND  DIM       6           6         3      Health Fund Code
PMECADMN  DIM       8           8         9      Admission Number
PMECINVN  DIM       8           8        17      Invoice Number
PMECBATN  DIM       8           8        25      Batch Number
PMECURNO  DIM       8           8        33      U/R Number
PMECPBAT  DIM       8           8        41      Previous Batch Number
.                                                  (Resubmission from)
PMECNBAT  DIM       8           8        49      Next Batch Number
.                                                  (Resubmission to)
PMECCCFL  DIM       1           1        57      Contiguous Claim Flag
.                                                   (EDI field 40005)
.                                                   N = Not in series
.                                                   F = First in series
.                                                   L = Last in series
.                                                   M = Middle in series
PMECTRID  DIM       24          24       58      Claim Transaction Id
DPMECEET  DIM       1           1        82      Eclipse extract type
.                                                   0 - Health Fund 
.                                                   1 - Claim Code (DVA)
PMECAMTC  FORM      12.2        8        83      Amount Claimed
PMECAMTP  FORM      12.2        8        91      Amount Paid by Health Fund
PMECPDAT  DIM       8           8        99      Payment Date (ccyymmdd)
PMECSTAT  DIM       2           2       107      Closed Status
.                                                  Spaces - not closed
.                                                  " 0" = Closed
.                                                  " 1" = Closed with Write Off
.                                                  " 2" = Closed with Payment
.                                                  " 3" = Closed with WO & Pymt
PMECFTID  DIM       24          24      109      Fund Report Transaction Id
PMECHOSP  DIM       3           3       133      Hospital ID
PMECSPAR  DIM       14          14      136      Spare Variable
.
.End of Record                          150
.                              
. Redefine FORM fields from key
. -----------------------------
PMECFLAG  FORM      2
PMECEETP  FORM      1
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DIM60     DIM       60
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
REPTCOMM  DIM       35
.
SAVEFLG   FORM      1
.
. 
. PROGRAM CONSTANTS
. -----------------
PIPE      INIT      "|"
SP24      INIT    "                        "
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PMSERDFD"
PRGID     INIT      "F00PMERD"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                         MAIN0000                                          *
.*                      Mainline code                                        *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get user option
          BRANCH    EXIT,MAIN9999                 * exit selected
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.*****************************************************************************
.*                          INIT0000               Called by: MAIN0000       *
.*  Display heading and check that the files needed exist & open them        *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"pmsectaf"
          OPEN      PMSECTA6,"pmsectaf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION = 1 = Run full fixit                                 *
.*                        2 = Run data upload only                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Full Fixit (c-isam)":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Data Upload Only (oracle)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run full fixit
                            OPTN9000             * run data upload only
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                          KDIR0000               Called by: MAIN0000       *
.*                       Keyin directories                                   *
.*****************************************************************************
.
KDIR0000  COMPARE   TWO,COPTION                  * running data upload only ?
          GOTO      KDIR9999 IF EQUAL            * yes
.
          MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9000
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9100 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9100 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9000
.
KDIR9000  MOVE      ZERO,EXIT
          GOTO      KDIR9999
.
KDIR9100  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.*****************************************************************************
.*                          PREP0000               Called by: MAIN0000       *
.*                       Preparing files                                     *
.*****************************************************************************
.
PREP0000  COMPARE   TWO,COPTION                  * running data upload only ?
          IF        @EQUAL
            MOVE      "spmerdaf",DIM60           * yes - load saved file name
            MOVE      "pmserdaf",NEWFILE         * load new file name
            GOTO      PREP0500
          ENDIF
.
          CALL      CHEK0000             * old file found ok ?
          BRANCH    EXIT,PREP9000        * no - finish
.
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmserdaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmerdaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmserdaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmerdaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmserdaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmerdaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
PREP0500  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
          COMPARE   TWO,COPTION                  * running data upload only ?
          GOTO      PREP7000 IF EQUAL            * yes
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmserdaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 188 UC1-24,25-54,55-58,59-82",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC59-82,1-24,25-54,55-58",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
PREP7000  OPEN      PMSERDA1,NEWFILE
.
.         Set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.*****************************************************************************
.*                               READ0000          Called by: MAIN0000       *
.*             Loop thru old file and write each record                      *
.*****************************************************************************
.
READ0000  MOVE      ZERO,CPAGENO
          MOVE      ZERO,CNOUNDLN
          CALL      IBACLOCK
.
          CALL      HEAD0000
.
          DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY61,SP30,SP30,SP30
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ9000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.         Using the transaction id, get the pmsectaf record which will
.         give us the fund transaction id.
.
          PACK      KEY40,PMEDTRID,SP30,SP10
          CALL      RSPMECT6                      * position on transaction id
          CALL      RKPMECT6                      * read next record
          BRANCH    OVRCD,READ5000                * eof - print error
.
          MATCH     PMECTRID,PMEDTRID             * same transaction id ?
          GOTO      READ5000 IF NOT EQUAL         * no - print error
.
          MATCH     SP24,PMECFTID                 * blank fund trans. id ?
          GOTO      READ6000 IF EQUAL             * yes
.
          MOVE      PMECFTID,PMEDFTID
          PACK      PMEDSPAR,OLDDSPAR,SP20
          CALL      WRPMERD1                      * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
.         Error retrieving pmsectaf record
.
READ5000  MOVE      "pmsectaf missing                   ",REPTCOMM
          GOTO      READ7000
.
READ6000  MOVE      "pmsectaf.pmecftid blank            ",REPTCOMM
.
READ7000  COMPARE   SIXTY,CLNO                    * page full ?
          CALL      HEAD0000 IF NOT LESS          * yes
.
          PRINT     *1,PIPE,*3,PMEDPART,*20,PIPE,*22,PMEDRADV,*53,PIPE:
                    *55,PMEDPNUM,*67,PIPE,*69,PMEDTRID,*94,PIPE:
                    *96,REPTCOMM,*132,PIPE
.
          ADD       ONE,CLNO                      * increment line count
          GOTO      READ1000                      * get next record
.
READ9000  CLOSE     PMSERDA1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
          CALL      LINE0000
          PRINT     *N,*1,"*** End of Report ***"
.
READ9999  RETURN
+
.*****************************************************************************
.*                               VALD0000          Called by: KDIR0000       *
.*                   Check if it a valid directory                           *
.*****************************************************************************
.
VALD0000  SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9100
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      VALD9999
.
VALD9100  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.*****************************************************************************
.*                               ENDP0000          Called by: MAIN0000       *
.*                    Remove or compress save file                           *
.*****************************************************************************
.
ENDP0000  COMPARE   TWO,COPTION                  * running data upload only ?
          GOTO      ENDP9000 IF EQUAL            * yes
.         
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmerdaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
ENDP9000  DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.*****************************************************************************
.*                               DEFT0000          Called by: KDIR0000       *
.*                      Get the default directory                            *
.*****************************************************************************
.
DEFT0000  EXECUTE   "ldat pmserdaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding pmserdaf.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE,"pmserdaf"
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE
          GOTO      CHEK9000
.
CHEK2000  DISPLAY   *P1:23,*EF,"File 'pmserdaf' ";
          SCAN      "I * I",DIM60
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed":
                    *P1:24;
          CALL      HITENTER
.
          MOVE      ONE,EXIT
          GOTO      CHEK9999
.
CHEK9000  MOVE      ZERO,EXIT
.
CHEK9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: READ0000  *
.*                       Print page heading                                 *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          PRINT     *40,"Errors - Missing pmsectaf records",*N
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Participant Code",*20,PIPE,*22,"Remittance ":
                    "Advice Id          ",*53,PIPE,*55,"Part Number",*67,PIPE:
                    *69,"Transaction Id",*94,PIPE,*96,"Comment",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      EIGHT,CLNO                   * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: READ0000  *
.*                      Draw line across page                     HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
READSOLD  RESET     KEY61
          READ      OLDFILE,KEY61;;
          RETURN    
.  
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;PMEDPART,PMEDRADV,PMEDPNUM,PMEDTRID:
                            PMEDARID,PMEDBAMT,PMEDCCOD,PMEDLDAT:
                            PMEDPARI,PMEDPTID,PMEDSTAT,OLDDSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRPMERD1  RESET     KEY82
          WRITE     PMSERDA1,KEY82;PMEDFTID,PMEDRADV,PMEDPNUM,PMEDTRID:
                                   PMEDARID,PMEDBAMT,PMEDCCOD,PMEDLDAT:
                                   PMEDPARI,PMEDPTID,PMEDSTAT,PMEDSPAR
          RETURN
.
RSPMECT6  RESET     KEY40
          READ      PMSECTA6,KEY40;;
          RETURN
.
RKPMECT6  MOVE      ZERO,OVRCD
          READKS    PMSECTA6;DPMECFLG,PMECHFND,PMECADMN,PMECINVN:
                             PMECBATN,PMECURNO,PMECPBAT,PMECNBAT,PMECCCFL:
                             PMECTRID,DPMECEET,PMECAMTC,PMECAMTP,PMECPDAT:
                             PMECSTAT,PMECFTID,PMECHOSP,PMECSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPMECFLG,PMECFLAG
          MOVE      DPMECEET,PMECEETP
          RETURN
.
          INC       STD001IO
+
