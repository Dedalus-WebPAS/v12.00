. **********************************************************************
. * ################################################################## *
. * # NOTE: The print batch routines in IBAFMS76.PBL and PRCFMSUB.PBL# *
. * #       should produce the same reports                          # *
. * ################################################################## *
. *                                                                    *
. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS76                                             *
. * Desc      :   Batch Listing                                        *
. **********************************************************************
. * Date      :   27.11.1990                                           *
. * Author    :   Peter Eddey                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.B02 09.02.2001 Sandra Barcham                                *
. *           Fix BAS Code printing for all batches awaiting printing  *
. * VF.09.B01 14.11.2000 Sandra Barcham                                *
. *           Added BAS Code                                           *
. **********************************************************************
. * VF.00.04  05.01.2000 Charles Handaya                               *
. *           Recompiled for APSMASIO change                           *
. *           17.11.1999 Sandra Barcham                                *
. *           Allow Cancelled Direct Debits                            *
. *           srf 635048                                               *
. * VF.00.03  19.10.1999 Charles Handaya                               *
. *           Fix page numbering and I * M error                       *
. * VF.00.02  01.09.1999 Sandra Barcham                                *
. *           Recompiled for change to index fix to FMSJPDA2           *
. *           srf 645667                                               *
. * VF.00.01  01.07.1999 Sandra Barcham                                *
. *           Stop overprinting of total debit entries                 *
. *           srf 632424                                               *
. **********************************************************************
.
          INC       FMSSTDDF
.
          INC       APSMASFD/INC
          INC       APSNSCFD/INC
.
          INC       IBABATFD/INC
          INC       IBACONFD/INC
          INC       IBAPASFD/INC
.
          INC       FMSAMAFD/INC
          INC       FMSBASFD/INC
          INC       FMSBCFFD/INC
          INC       FMSCONFD/INC 
          INC       FMSCSAFD/INC 
          INC       FMSCTRFD/INC
          INC       FMSLMAFD/INC
          INC       FMSJPDFD/INC
          INC       FMSLMCFD/INC
          INC       FMSSIBFD/INC
          INC       FMSTRNFD/INC
.
.**********************************************************************
.*                   Data variables required                          *
.**********************************************************************
.
BASFLAG   FORM      1
BATDESC   DIM       18
BCH       INIT      "bch"
BSTATUS   FORM      1
BATCHNO   FORM      5
DBATCHNO  DIM       5
D26       DIM       26
DEBCRED   DIM       2
DIM25     DIM       25
ENTRDATE  DIM       10
ENDDATE   DIM       10
FROMBAT   DIM       5
FORMAT2   INIT      "(999,999,999,999.99 "
FORMAT3   INIT      "(99,999,999,999,999.99 "
FILNAME   DIM       8
FMSG      INIT      "fmsg"
FMSR      INIT      "fmsr"
FMST      INIT      "fmst"
ITEM      FORM      5
LASTDRCR  DIM       2
LASTNAME  DIM       40
MENUOPT1   FORM      1
NEXTSCRF  FORM      1
OUTFORM   DIM       20
OUTFORM1  DIM       20
OUTFORM2  DIM       20
OUTFORM3  DIM       23
POSTDATE  DIM       10
PRINTED   FORM      1
PRTDESC   DIM       7
PRTTYPE   DIM       1
SCRCOUNT  FORM      4
SCRNUMB   FORM      4
SECTOR5   FORM      5
STATDESC  DIM       30
STATUS    DIM       1
TOBAT     DIM       5
TOTDEBS   FORM      14.2
TOTCREDS  FORM      14.2 
VALIDFLG  FORM      1
WKDTDESC  DIM       12
WKDTPDAT  DIM       10
SIB       INIT      "sib"
SIBFILE   DIM       8
SIBTOTAL  FORM      12.6
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
.
PRGID     INIT      "IBAFMS76"
PRGNAM    INIT      "Batch Listing"                   
VERSION   INIT      "V12.00.00"
.
.**********************************************************************
.*                           ML0000                                   *
.*                    Mainline  Code                                  *
.**********************************************************************
.
ML0000    CALL      INIT0000             * initialisation
.
ML0500    CALL      MENU0000             * perform the menu
.
          BRANCH    MENUOPT1,ML1000,ML2000,ML3000,ML4000
          GOTO      ML9999
.
.-----  Selected batch -----
.
ML1000    CALL      DSBS0000             * display the screen
.
          MOVE      "25",CCOL
          MOVE      "4",CVERT
          CALL      KBCFFM00             * keyin the batch number 
          BRANCH    EXIT,ML0500,ML0500
.
          CALL      FORM0000             * format data for display
          CALL      DSBD0000             * display the data
          CALL      PREX0000             * print transactions or exit
          BRANCH    EXIT,ML0500
.
ML1500    CALL      PASB0000             * print a selected batch
          GOTO      ML0500
.
.----- range of batches -----
.
ML2000    CALL      RANG0000           * print range of options
          GOTO      ML0500
.
.----- Print all batches awaiting printing -----
.
ML3000    CALL      IBACLOCK
          CALL      PBAP0000             * print all batches awaiting
.                                          printing
          GOTO      ML0500
.
.-----  Interface batch -----
.
ML4000    CALL      DSBS0000             * display the screen
.
          MOVE      "25",CCOL
          MOVE      "4",CVERT
          CALL      KBCFJN00             * keyin the batch number 
          BRANCH    EXIT,ML0500,ML0500
.
          CALL      FOIJ0000             * format data for display
          CALL      DSBD0000             * display the data
          CALL      PREX0000             * print transactions or exit
          BRANCH    EXIT,ML0500
.
          CALL      PASB0000             * print a selected batch
          GOTO      ML0500
.
.
ML9999    CHAIN     PGM
.
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P64:24,"apsmasaf"
          OPEN      APSMASA1,"apsmasaf"
.
          DISPLAY   *P64:24,"apsnscaf"
          OPEN      APSNSCA1,"apsnscaf"
.
          DISPLAY   *P64:24,"fmsamaaf"
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmscsaaf"
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmsjpdaf"
          OPEN      FMSJPDA1,"fmsjpdaf"
          OPEN      FMSJPDA3,"fmsjpdaf"
.
          DISPLAY   *P64:24,"fmslmaaf"
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf"
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsbcfaf"
          OPEN      FMSBCFA1,"fmsbcfaf"
          OPEN      FMSBCFA2,"fmsbcfaf"
.
          DISPLAY   *P64:24,"ihapassf"
          OPEN      IHAPASS1,"ihapassf"
          OPEN      IHAPASS2,"ihapassf"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*107,IBCNUBAS,IBCNBSFY
          CALL      RDFMCO52
.
INIT9999  RETURN
.**********************************************************************
.*                         MENU0000                                   *
.*                     Display the screen                             *
.**********************************************************************
MENU0000  MOVE      TEN,CVERT
.
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,"0 ",*HOFF,"= Exit":
                    *P2:5,*V2LON,"1 ",*HOFF,"= Selected Batch":
                    *P2:6,*V2LON,"2 ",*HOFF,"= Range of Batches":
                    *P2:7,*V2LON,"3 ",*HOFF,"= All Batches Awaiting Printing":
                    *P2:8,*V2LON,"4 ",*HOFF,"= Interface Batches Awaiting ":
                                              "Authorization":
                    *P1:CVERT,"Select Option : "
.
MENU1000  MOVE      ZERO,MENUOPT1
          KEYIN     *P17:CVERT,*DV,UNDLN1:
                    *P17:CVERT,*V2LON,MENUOPT1:
                    *P17:CVERT,*DV,MENUOPT1
.
          COMPARE   ZERO,MENUOPT1         * test entry not less than 0
          GOTO      MENU9999 IF EQUAL
          BRANCH    MENUOPT1,MENU2000,MENU3000,MENU4000,MENU5000
.
          BEEP
          GOTO      MENU1000
.
.-----   Display the option heading -----
.
MENU2000  DISPLAY   *P60:3,*V2LON,"Selected Batch   "
          MOVE      ZERO,STATUS
          GOTO      MENU9999
.
MENU3000  DISPLAY   *P60:3,*V2LON,"Range of Batches "
          MOVE      ZERO,STATUS
          GOTO      MENU9999
.
MENU4000  DISPLAY   *P60:3,*V2LON,"Awaiting Printing"
          MOVE      TWO,STATUS
          GOTO      MENU9999
.
MENU5000  DISPLAY   *P60:3,*V2LON,"Interface Batch"
          MOVE      TWO,STATUS
          GOTO      MENU9999
.
MENU9999  RETURN
+
.*********************************************************************
.*                         FORM0000                                  *
.*                  format the batch data                            *
.*********************************************************************
.
FORM0000  CLEAR     BATDESC
          MOVE      FMBCSTA,FORM1
          BRANCH    FORM1,FORM0100,FORM0200,FORM0300,FORM0400
.
          MOVE      "Batch in Use",STATDESC
          GOTO      FORM10000
.
FORM0100  MOVE      "Batch Awaiting Mods",STATDESC
          GOTO      FORM10000
.
FORM0200  MOVE      "Batch Awaiting Printing",STATDESC
          GOTO      FORM10000
.
FORM0300  MOVE      "Batch Awaiting Update",STATDESC
          GOTO      FORM10000
.
FORM0400  MOVE      "Batch Processed",STATDESC
.
FORM1000  MATCH      "CE",FMBCTRT
          GOTO       FORM1100 IF NOT EQUAL
          MOVE       "Committed Expend. ",BATDESC
          GOTO        FORM2000
.
FORM1100  MATCH      "CR",FMBCTRT
          GOTO       FORM1200 IF NOT EQUAL
          MOVE       "Credit Notes      ",BATDESC
          GOTO        FORM2000
.
FORM1200  MATCH      "CS",FMBCTRT
          GOTO       FORM1300 IF NOT EQUAL
          MOVE       "Cash Receipts     ",BATDESC
          GOTO        FORM2000
.
FORM1300  MATCH      "IN",FMBCTRT
          GOTO       FORM1400 IF NOT EQUAL
          MOVE       "Invoices          ",BATDESC
          GOTO        FORM2000
.
FORM1400  MATCH      "JA",FMBCTRT
          GOTO       FORM1450 IF NOT EQUAL
          MOVE       "Journals          ",BATDESC
          GOTO        FORM2000
.
FORM1450  MATCH      "JC",FMBCTRT
          GOTO       FORM1500 IF NOT EQUAL
          MOVE       "Journals          ",BATDESC
          GOTO        FORM2000
.
FORM1500  MATCH      "PY",FMBCTRT
          GOTO       FORM1600 IF NOT EQUAL
          MOVE       "Payments          ",BATDESC
          GOTO        FORM2000
.
FORM1600  MATCH      "RF",FMBCTRT
          GOTO       FORM1700 IF NOT EQUAL
          MOVE       "Refunds           ",BATDESC
          GOTO        FORM2000
.
FORM1700  MATCH      "SC",FMBCTRT
          GOTO       FORM1800 IF NOT EQUAL
          MOVE       "Supply Credits    ",BATDESC
          GOTO        FORM2000
.
FORM1800  MATCH      "RI",FMBCTRT
          GOTO       FORM1900 IF NOT EQUAL
          MOVE       "Reinstate Invoices",BATDESC
          GOTO        FORM2000
.
FORM1900  MATCH      "CJ",FMBCTRT
          GOTO       FORM1950 IF NOT EQUAL
          MOVE       "Cash Journals     ",BATDESC
          GOTO       FORM2000
.
FORM1950  MATCH      "CC",FMBCTRT
          GOTO       FORM1960 IF NOT EQUAL
          MOVE       "Cancelled Payments",BATDESC
          GOTO       FORM2000
.
FORM1960  MATCH      "PP",FMBCTRT
          GOTO       FORM2000 IF NOT EQUAL
          MOVE       "Prompt Payments   ",BATDESC
          GOTO       FORM2000
.
FORM2000  CLEAR      DIM25
.
.----- format the post date ----
.
          UNPACK     FMBCPDAT,CCENT,CYEAR,CMON,CDAY
          PACK       POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP        " 0",POSTDATE
.
.----- get the financial period description and end date ----
.
          MOVE      FMBCPDAT,WORKDATE
          PACK      KEY2,FMBCLED
          CALL      RDFMLA1
          CALL      CFYR0000
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
.
.----- format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",FMBCDAT
          UNPACK     FMBCDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       ENTRDATE,CPCDATE,SP70
.
.----- get user description -----
.
          CLEAR      SECUSER
          PACK       KEY4,FMBCUID
          CALL       RDPASS1
.
FORM9999  RETURN
+
.*********************************************************************
.*                         FOIJ0000                                  *
.*                  format the interface batch data                  *
.*********************************************************************
.
FOIJ0000  CLEAR     BATDESC
.
          MOVE      "Not Authorised",STATDESC
          MOVE      "Interface Journal ",BATDESC
.
.----- format the post date ----
.
          UNPACK     FMJPPDAT,CCENT,CYEAR,CMON,CDAY
          PACK       POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP        " 0",POSTDATE
.
.----- get the financial period description and end date ----
.
          MOVE      FMJPPDAT,WORKDATE
          PACK      KEY2,FMBCLED
          CALL      RDFMLA1
          CALL      CFYR0000
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
.
.----- format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",FMJPPDAT
          UNPACK     FMJPPDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       ENTRDATE,CPCDATE,SP70
.
.----- get user description -----
.
          CLEAR      SECUSER
          PACK       KEY4,FMBCUID
          CALL       RDPASS1
.
FOIJ9999  RETURN
.
.**********************************************************************
.*                        DSBS0000                                    *
.*                 display single batch screen                        *
.**********************************************************************
.
DSBS0000
          DISPLAY   *P1:4,*EF:
                    *P5:4,"Batch Number      : ":
                    *P5:6,"Status            : ":
                    *P5:7,"Ledger Number     : ":
                    *P5:8,"Transaction Type  : ":
                    *P5:9,"Number of Entries : ":
                    *P5:10,"Batch Total       : ":
                    *P5:11,"Operator ID       : ":
                    *P5:12,"Date Entered      : ": 
                    *P5:13,"Post to Date      : "
DSBS9999  RETURN
.
.-----  Display the batch data -----
.
DSBD0000  MOVE      FMBCSEC,F5
          SUB       "2",F5
          MOVE      FORMAT2,OUTFORM
          FEDIT     FMBCTOT,OUTFORM
          DISPLAY   *P25:4,*V2LON,FMBCBAT:
                    *P25:6,FMBCSTA,*HOFF,*P32:6,STATDESC:
                    *P25:7,*V2LON,FMBCLED,*HOFF,*P32:7,FMLADESC:
                    *P25:8,*V2LON,FMBCTRT,*HOFF,*P32:8,BATDESC:
                    *P25:9,*V2LON,F5:
                    *P25:10,OUTFORM:
                    *P25:11,SECUSER:
                    *P25:12,ENTRDATE:
                    *P25:13,POSTDATE,*HOFF,SP2,PERDESC: 
                    *P52:13,"Ending ":
                    *V2LON,ENDDATE 
DSBD9999  RETURN
.
.*********************************************************************
.*                         PREX0000                                  *
.*                     Print or exit                                 *
.*********************************************************************
.
PREX0000  MOVE      ZERO,EXIT
.
          DISPLAY   *P1:24,*EL:
                    "(",*V2LON,"P",*HOFF,")rint, ":                  
                    "e(",*V2LON,"X",*HOFF,")it : "                  
.
PREX1000  KEYIN     *P19:24,*DV,UNDLN1:
                    *P19:24,*V2LON,ANS:
                    *P19:24,*DV,ANS
.
          REP       UPPLOW,ANS
.
          MATCH     ANSX,ANS             * test for exit
          GOTO      PREX9000 IF EQUAL
.
          MATCH     ANSP,ANS             * test for print
          GOTO      PREX9900 IF EQUAL
.
          BEEP 
          GOTO      PREX1000
.
PREX9000
          MOVE      ONE,EXIT
          GOTO      PREX9999
.
PREX9900  MOVE      "999",CLNO
          MOVE      ZERO,CPAGENO
          GOTO      PREX9999
.
PREX9999
          RETURN
.
.*********************************************************************
.*                          PASB0000                                 *
.*                     Print a single batch                          *
.*********************************************************************
PASB0000  CALL      IBACLOCK
          MATCH     "4",FMBCSTA
          GOTO      PASB1000 IF EQUAL
.
          MOVE      BATCHNO,DBATCHNO
          MATCH     FMBCBAT,DBATCHNO
          GOTO      PASB0050 IF EQUAL
.
          MOVE      "999",CLNO
.
PASB0050  MOVE      FMBCBAT,BATCHNO
          PACK      FILNAME,BCH,BATCHNO  * format file name to use
          REP       " 0",FILNAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      BATFILE,FILNAME      * open file
          TRAPCLR   IO
          BRANCH    OVRCD,PASB0999       * cant open file ?
.
          MATCH     "CJ",FMBCTRT
          GOTO      PASB0100 IF EQUAL  * cash transaction ?
          MATCH     "PY",FMBCTRT
          GOTO      PASB0100 IF EQUAL  * cash transaction ?
          MATCH     "CS",FMBCTRT
          GOTO      PASB0260 IF NOT EQUAL  * cash transaction ?
.
PASB0100  COMPARE   "2",MENUOPT1
          GOTO      PASB0250 IF EQUAL  * single or range of batches ?
.
PASB0200  KEYIN     *P1:24,"Print for (",*V2LON,"C",*HOFF,")ash or (":
                    *V2LON,"A",*HOFF,")ccrual, e(",*V2LON,"X",*HOFF,")it : ": 
                    *V2LON,PRTTYPE;
          PACK      PRTTYPE,PRTTYPE,SP70
          REP       UPPLOW,PRTTYPE
.
PASB0250  MOVE      ZERO,BASFLAG
          MATCH     "C",PRTTYPE
          GOTO      PASB0300 IF EQUAL  * cash ?
          MATCH     "A",PRTTYPE
          GOTO      PASB0260 IF EQUAL  * accrual ?
          MATCH     "X",PRTTYPE
          GOTO      PASB9999 IF EQUAL  * exit ?
          BEEP
          GOTO      PASB0200
.
PASB0260  IF        IBCNUBAS=1
            MOVE      ONE,BASFLAG
          ENDIF
.
PASB0300  DISPLAY   *P1:24,*EL,"Printing Batch : ",*V2LON,FMBCBAT;
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          MOVE      TWO,SECTOR5
          MOVE      TWO,BC0NXTSC       
          CALL      PTXT0000             * print transactions
          MATCH     "2",FMBCSTA
          GOTO      PASB9999 IF NOT EQUAL * awaiting printing ?
.
          MOVE      "3",FMBCSTA          * update transaction as printed
          CALL      UPFMBC1
          GOTO      PASB9999
.
PASB0999  DISPLAY   *P1:24,*B,*EL,"ERROR - Batch Data File ",FILNAME:
                    " Missing - ";
          CALL      HITENTER
          GOTO      PASB9999
.
.
. This requires fixing for batches that have been updated
. it also requires the question to be ask cash or accrual if
. the batch is cash related ie CJ,PY,CS
.
PASB1000  MOVE      BATCHNO,DBATCHNO
          MATCH     FMBCBAT,DBATCHNO
          GOTO      PASB1100 IF EQUAL
.
          MOVE      "999",CLNO
.
PASB1100  MOVE      FMBCBAT,BATCHNO
          MATCH     "CJ",FMBCTRT
          GOTO      PASB1500 IF EQUAL  * cash transaction ?
          MATCH     "PY",FMBCTRT
          GOTO      PASB1500 IF EQUAL  * cash transaction ?
          MATCH     "CS",FMBCTRT
          GOTO      PASB1500 IF EQUAL  * cash transaction ?
          GOTO      PASB2000           * non cash transaction
.
PASB1500  COMPARE   "2",MENUOPT1
          GOTO      PASB1700 IF EQUAL  * single or range of batches ?
.
          KEYIN     *P1:24,"Print for (",*V2LON,"C",*HOFF,")ash or (":
                    *V2LON,"A",*HOFF,")ccrual, e(",*V2LON,"X",*HOFF,")it : ":
                    *V2LON,PRTTYPE;
          PACK      PRTTYPE,PRTTYPE,SP70
          REP       UPPLOW,PRTTYPE
.
PASB1700  MATCH     "C",PRTTYPE
          GOTO      PASB3000 IF EQUAL  * cash ?
          MATCH     "A",PRTTYPE
          GOTO      PASB2000 IF EQUAL  * accrual ?
          MATCH     "X",PRTTYPE
          GOTO      PASB9999 IF EQUAL  * exit ?
          BEEP
          GOTO      PASB1500
.
.---- accrual transactions ----
.
PASB2000  DISPLAY   *P1:24,*EL,"Printing Batch : ",*V2LON,FMBCBAT;
          CLOSE     FMSTRNA1
          CLOSE     FMSBASA1
          MOVE      FMBCPDAT,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,PASB7999
.
          PACK      FILNAME,FMST,CURYEAR
          REP       " 0",FILNAME
          MOVE      ZERO,OVRCD         * open file
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA1,FILNAME
          TRAPCLR   IO
          BRANCH    OVRCD,PASB7999     * cant open file ?
.
          MOVE      ZERO,BASFLAG
          IF        IBCNUBAS=1
            MATCH     IBCNBSFY,CURYEAR
            GOTO      PASB2050 IF LESS
            PACK      FILNAME,FMSG,CURYEAR
            REP       " 0",FILNAME
            MOVE      ZERO,OVRCD         * open file
            TRAP      OVERCOND IF IO
            OPEN      FMSBASA1,FILNAME
            TRAPCLR   IO
            BRANCH    OVRCD,PASB2050     * cant open file ?
            MOVE      ONE,BASFLAG
          ENDIF
.
PASB2050  MOVE      ZERO,TOTDEBS       * initialise total debits
          MOVE      ZERO,TOTCREDS      * initialise total credits
          MOVE      SP70,LASTDRCR
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          PACK      KEY10,FMBCBAT,SP70
          CALL      RSFMTR1            * go to start of records
.
          MATCH     "C",PRTTYPE          * cash type batch
          GOTO      PASB2100 IF NOT EQUAL
          MATCH     "CJ",FMBCTRT
          GOTO      PASB2100 IF EQUAL    * cash transaction ?
          MATCH     "PY",FMBCTRT
          GOTO      PASB2100 IF EQUAL    * cash transaction ?
          MATCH     "CS",FMBCTRT
          GOTO      PASB7000 IF NOT EQUAL  * cash transaction ?
.
PASB2100  CALL      RKFMTR1            * go to start of records
          BRANCH    OVRCD,PASB7000     * no more records ?
          MATCH     FMTRBAT,FMBCBAT
          GOTO      PASB7000 IF NOT EQUAL
.
          MOVE      FMTRCRED,BCRED
          MOVE      FMTRLEDG,BCLEDG
          MOVE      FMTRACCT,BCACCT
          MOVE      FMTRACCT,BCACCTP
          MOVE      FMTRDISS,BCDISS
          MOVE      FMTRRESP,BCRESP
          UNPACK    FMTRTDAT,CCENT,CYEAR,CMON,CDAY
          PACK      BCDATED,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BCDATED
          MOVE      FMTRDESC,BCTRAND
          MOVE      FMTRTYPE,BCTRAN
          MOVE      FMTRAMT,BCAMT
          MOVE      FMTRDOCR,BCREFER
          PACK      BCCDESC,SP70
.
          MOVE      SP3,BCBASC
          MOVE      SP3,FMBSBASC
          IF        BASFLAG=1
            PACK      KEY10,FMTRBAT,FMTRUNIQ,SP70
            CALL      RDFMBS1
            MOVE      FMBSBASC,BCBASC 
          ENDIF
.
          CALL      CTOT0000             * calculate totals
          CALL      PLIN0000             * print the report line
          GOTO      PASB2100
.
.---- cash transactions ----
.
PASB3000  MOVE      "C",PRTTYPE
          MOVE      ZERO,BASFLAG
          DISPLAY   *P1:24,*EL,"Printing Batch : ",*V2LON,FMBCBAT;
          CLOSE     FMSCTRA1
          MOVE      FMBCCDAT,WORKDATE
          CALL      CFYR0000
          BRANCH    EXIT,PASB7999
          MOVE      FMBCPDAT,D4
.
          PACK      FILNAME,FMSR,CURYEAR
          REP       " 0",FILNAME
. 
          MOVE      ZERO,OVRCD         * open file
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA1,FILNAME
          TRAPCLR   IO
          BRANCH    OVRCD,PASB7999     * cant open file ?
.
          MOVE      ZERO,TOTDEBS       * initialise total debits
          MOVE      ZERO,TOTCREDS      * initialise total credits
          MOVE      SP70,LASTDRCR
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          PACK      KEY10,FMBCBAT,SP70
          CALL      RSFMCT1            * go to start of records
.
          MATCH     "C",PRTTYPE          * cash type batch
          GOTO      PASB3100 IF NOT EQUAL
          MATCH     "CJ",FMBCTRT
          GOTO      PASB3100 IF EQUAL    * cash transaction ?
          MATCH     "PY",FMBCTRT
          GOTO      PASB3100 IF EQUAL    * cash transaction ?
          MATCH     "CS",FMBCTRT
          GOTO      PASB7000 IF NOT EQUAL  * cash transaction ?
.
PASB3100  CALL      RKFMCT1            * go to start of records
          BRANCH    OVRCD,PASB7000     * no more records ?
          MATCH     FMCTBAT,FMBCBAT
          GOTO      PASB7000 IF NOT EQUAL
.
          MOVE      "00000",BCRED
          MOVE      FMCTLEDG,BCLEDG
          MOVE      FMCTACCT,BCACCT
          MOVE      FMCTACCT,BCACCTP
          MOVE      FMCTDISS,BCDISS
          MOVE      FMCTRESP,BCRESP
          UNPACK    FMCTTDAT,CCENT,CYEAR,CMON,CDAY
          PACK      BCDATED,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BCDATED
          MOVE      FMCTDESC,BCTRAND
          MOVE      FMCTTYPE,BCTRAN
          MOVE      FMCTAMT,BCAMT
          MOVE      FMCTDOCR,BCREFER
          PACK      BCCDESC,SP70
.
          CALL      CTOT0000             * calculate totals
          CALL      PLIN0000             * print the report line
          GOTO      PASB3100
.
.---- print totals ----
.
PASB7000  MOVE    FORMAT3,OUTFORM3
          FEDIT   TOTDEBS,OUTFORM3
          CALL      UND132 
          PRINT     *30,"Total Debit Entries : ",OUTFORM3;
          MOVE      FORMAT3,OUTFORM3
          FEDIT     TOTCREDS,OUTFORM3
          PRINT     *76,"Total Credit Entries : ",OUTFORM3
          CALL      UND132
          GOTO      PASB9999
.
PASB7999  DISPLAY   *P1:24,*B,*EL,"ERROR - Transaction Data File ",FILNAME:
                    " Missing - ";
          CALL      HITENTER
          GOTO      PASB9999
.
PASB9999  RETURN
.
.*********************************************************************
.*                          PBAP0000                                 *
.*             Print all batches awaiting printing                   *
.*********************************************************************
.
PBAP0000  MOVE      "999",CLNO
          MOVE      ZERO,PRINTED
          MOVE      ZERO,BASFLAG
          IF        IBCNUBAS=1
            MOVE      ONE,BASFLAG
          ENDIF
          PACK      KEY6,STATUS,SP10
          CALL      RSFMBC2              * position at start of batch
.                                          control file
PBAP1000  CALL      RKFMBC2              * read next record
          BRANCH    OVRCD,PBAP9000
.
          MATCH     "2",FMBCSTA          * test for correct status
          GOTO      PBAP9000 IF NOT EQUAL
.
          MOVE      ONE,PRINTED
          CALL      FORM0000             * format the heading data
          MOVE      FMBCBAT,BATCHNO
          DISPLAY   *P1:24,*EL,"Printing Batch : ",*V2LON,BATCHNO;
.
          CLEAR     FILNAME
          PACK      FILNAME,BCH,BATCHNO  * format the file name to use
          REP       " 0",FILNAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      BATFILE,FILNAME      * open the file
          TRAPCLR   IO
          BRANCH    OVRCD,PBAP9900       * cant open file ?
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          MOVE      TWO,SECTOR5
          MOVE      TWO,BC0NXTSC       
          CALL      PTXT0000             * print the report  
          MOVE      "999",CLNO
.
          MOVE      "3",FMBCSTA
          PACK      KEY5,FMBCBAT
          CALL      RSFMBC1
          CALL      UPFMBC1
          GOTO      PBAP1000
.
PBAP9000  BRANCH    PRINTED,PBAP9999
          DISPLAY   *P1:24,*EL,*B,"No Batches are waiting to be printed - ";
          CALL      HITENTER
          GOTO      PBAP9999
.
PBAP9900  DISPLAY   *P1:24,*B,*EL,"ERROR - Batch Data File ",FILNAME:
                    " Missing - ";
          CALL      HITENTER
          GOTO      PBAP1000
.
PBAP9999 RETURN 
.
.**********************************************************************
.*                           PTXT0000                                 *
.*                        Print the report                            *
.**********************************************************************
.
PTXT0000  MOVE      ZERO,TOTDEBS         * initialise total debits
          MOVE      ZERO,TOTCREDS        * initialise total credits
          MOVE      SP70,LASTDRCR
.
          MATCH     "C",PRTTYPE          * cash type batch
          GOTO      PTXT1000 IF NOT EQUAL
          MATCH     "CJ",FMBCTRT
          GOTO      PTXT1000 IF EQUAL    * cash transaction ?
          MATCH     "PY",FMBCTRT
          GOTO      PTXT1000 IF EQUAL    * cash transaction ?
          MATCH     "CS",FMBCTRT
          GOTO      PTXT9500 IF NOT EQUAL  * cash transaction ?
.
PTXT1000  CALL      RDBATC               * read the sector
          GOTO      PTXT9500 IF OVER
.
          ADD       ONE,SECTOR5
          MOVE      SECTOR5,BC0NXTSC
.
          MATCH     "XX",BCTRAN
          GOTO      PTXT1000 IF EQUAL
          MATCH     "SI",BCTRAN
          GOTO      PTXT1000 IF EQUAL
          MATCH     "SC",BCTRAN
          GOTO      PTXT1000 IF EQUAL
.
          CALL      CTOT0000             * calculate totals
          CALL      PLIN0000             * print the report line
.
          GOTO      PTXT1000
.
.----- end of batch so print totals etc ----
.
PTXT9500  MOVE      FORMAT3,OUTFORM3
          FEDIT     TOTDEBS,OUTFORM3
          CALL      UND132 
          PRINT     *30,"Total Debit Entries : ",OUTFORM3;
          MOVE      FORMAT3,OUTFORM3
          FEDIT     TOTCREDS,OUTFORM3
          PRINT     *76,"Total Credit Entries : ",OUTFORM3        
          CALL      UND132
.
          CALL      PSIB0000             * print stat batch (if exists)
.
PTXT9999  DISPLAY   *P1:24,*EL
          RETURN
.
.**********************************************************************
.*                         HSIB0000                                   *
.*                  display the page heading                          *
.**********************************************************************
.
HSIB0000  MOVE      ONE,CNOUNDLN
          CALL      HEAD132
.
          PRINT        "Batch Number : ",FMBCBAT:
                   *60,"Post to Date : ",POSTDATE,SP1,PERDESC,"Ending ",ENDDATE:
                    *N,"Batch Type   : Statistical Batch":
                   *60,"Entered      : ",ENTRDATE," by ",SECUSER
.
          CALL      UND132
          PRINT     "Ledger/Account",*17,"Description",*55,"Reference":
                    *75,"Transaction Description",*112,"             Amount"
          CALL      UND132
          ADD       THREE,CLNO
.
HSIB9999  RETURN
.**********************************************************************
.  PSIB - Print Stat Batch                             Called By PTXT
.**********************************************************************
PSIB0000  PACK      SIBFILE,SIB,FMBCBAT
          REP       " 0",SIBFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSIBA1,SIBFILE
          TRAPCLR   IO
          BRANCH    OVRCD,PSIB9999
.
          MOVE      ZERO,SIBTOTAL
          CALL      HSIB0000
.
PSIB1000  CALL      RKFMSB1
          BRANCH    OVRCD,PSIB9000     * no more records ?
.
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMSBLEDG,FMSBACCT
          CALL      RDFMAM1
.
          COMPARE   "55",CLNO            * test for a full page
          CALL      UND132 IF NOT LESS
          COMPARE   "55",CLNO            * test for a full page
          CALL      HEAD0000 IF NOT LESS
.
          PRINT     FMSBLEDG,SLASH,FMSBACCT,*17,FMAMDESC,*55,FMSBREF:
                    *75,FMSBDESC,*112,FMSBUNIT
          ADD       ONE,CLNO
          ADD       FMSBUNIT,SIBTOTAL
          GOTO      PSIB1000
.
PSIB9000  CALL      UND132
          PRINT     *105,"Total",*112,SIBTOTAL
          CALL      UND132
.
PSIB9999  RETURN
.
.**********************************************************************
.*                         HEAD0000                                   *
.*                  display the page heading                          *
.**********************************************************************
.
HEAD0000  MOVE      ONE,CNOUNDLN
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          CALL      HEAD132
.
          MOVE      "Accrual",PRTDESC
          MATCH     "C",PRTTYPE
          GOTO      HEAD1000 IF NOT EQUAL
.
          MOVE      "Cash   ",PRTDESC
.
HEAD1000  MOVE      FMBCSEC,F5
          SUB       "2",F5
          MOVE      FMBCFMT,FMBCFTOT
          FEDIT     FMBCTOT,FMBCFTOT
          MOVE      SP3,KEY3
          IF        BASFLAG=1
            MOVE      "BAS",KEY3
          ENDIF
          PRINT        "Batch Number : ",FMBCBAT:
                   *60,"Line Items   : ",F5:
                    *N,"Batch Type   : ",FMBCTRT,SP1,BATDESC,SP3:
                       "(",PRTDESC,")":
                   *60,"Post to Date : ",POSTDATE,SP1,PERDESC,"Ending ",ENDDATE:
                    *N,"Batch Total  : ",FMBCFTOT:
                   *60,"Entered      : ",ENTRDATE," by ",SECUSER
          CALL      UND132
          PRINT     *69,"Creditor Code",*85,"Creditor Name":
                    *N,"Ledger/Account",*17,"Description",*43,"Diss",*49,"Resp":
                    *54,KEY3,*60,"Date",*69,"Reference":
                    *85,"Transaction Description",*124,"Amount"
.
          CALL      UND132
.
          ADD       FIVE,CLNO
.
HEAD9999  RETURN
.
.**********************************************************************
.*                         PLIN0000                                   *
.*                 Print the report lines                             *
.**********************************************************************
.
PLIN0000  COMPARE   "55",CLNO            * test for a full page
          CALL      UND132 IF NOT LESS
          COMPARE   "55",CLNO            * test for a full page
          CALL      HEAD0000 IF NOT LESS
.
.----- format the amount for printing ----
.
          MOVE      FORMAT2,OUTFORM
          FEDIT     BCAMT,OUTFORM
.
          CLEAR     DIM25
          PACK      KEY14,BCLEDG,BCACCT
          MATCH     "C",PRTTYPE
          GOTO      PLIN0100 IF NOT EQUAL
          PACK      KEY14,BCLEDG,BCACCTP
.
PLIN0100  UNPACK    SP70,FMAMDESC
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          MOVE      FMAMDESC,DIM25
.
          MATCH     SP70,LASTDRCR
          GOTO      PLIN9000 IF EQUAL
          MATCH     LASTDRCR,DEBCRED
          GOTO      PLIN9000 IF EQUAL
          PRINT     SP1
          ADD       ONE,CLNO             * increment the row
.
PLIN9000  MOVE      DEBCRED,LASTDRCR
          MATCH     "IN",FMBCTRT
          GOTO      PLIN9100 IF EQUAL
          MATCH     "CR",FMBCTRT
          GOTO      PLIN9100 IF EQUAL
          MATCH     "PY",FMBCTRT
          GOTO      PLIN9100 IF EQUAL
          MATCH     "CC",FMBCTRT
          GOTO      PLIN9100 IF EQUAL
          GOTO      PLIN9200
.
.---- print supplier if desired ----
.
PLIN9100  MATCH     "00000",BCRED
          GOTO      PLIN9200 IF EQUAL
          PACK      APMACN1,BCCDESC,SP70
          MATCH     SP35,BCCDESC
          IF        @EQUAL
            UNPACK    BCRED,DIM2,DIM3
            MATCH     "~~",DIM2
            IF        @EQUAL
              PACK      KEY8,FMBCBAT,DIM3
              CALL      RDAPNS1
              IF        OVRCD=0
                PACK      APMACN1,APNSNA1,SP70
              ELSE
                PACK      APMACN1,BCRED,SP70
              ENDIF
            ELSE
              PACK      KEY5,BCRED,SP70
              CALL      RDAPMA1
            ENDIF
          ENDIF
.
PLIN9190  MATCH     APMACN1,LASTNAME
          GOTO      PLIN9200 IF EQUAL       * same as last creditor ?
.
          PACK      LASTNAME,APMACN1,SP70
          ADD       ONE,CLNO
          PRINT     *69,BCRED,*85,LASTNAME
.
PLIN9200  UNPACK    BCDATED,CDAY,CMON,CCENT,CYEAR
          CALL      PACDATE
          MOVE      BCTRAND,D26
          IF        BASFLAG=0
            PRINT     BCLEDG,SLASH,FMAMACCT,*17,DIM25,*43,BCDISS,*49,BCRESP:
                      *58,CPCDATE,*69,BCREFER,*85,D26:
                      *111,OUTFORM,*131,DEBCRED
          ELSE
            PRINT     BCLEDG,SLASH,FMAMACCT,*17,DIM25,*43,BCDISS,*49,BCRESP:
                      *54,BCBASC,*58,CPCDATE,*69,BCREFER,*85,D26:
                      *111,OUTFORM,*131,DEBCRED
          ENDIF
          ADD       ONE,CLNO             * increment the row
.
PLIN9999  RETURN
.**********************************************************************
.*                         CTOT0000                                   *
.*                    Calculate totals                                *
.**********************************************************************
.
CTOT0000
          MATCH     "PY",BCTRAN          * debits total if equal
          GOTO      CTOT5000 IF EQUAL
.
          MATCH     "JA",BCTRAN          * debits total if equal
          GOTO      CTOT5000 IF EQUAL
.
          MATCH     "IN",BCTRAN          * debits total if equal
          GOTO      CTOT5000 IF EQUAL
.
          ADD       BCAMT,TOTCREDS       * else add to credits
          MOVE      "Cr",DEBCRED
          GOTO      CTOT9999
CTOT5000
          ADD       BCAMT,TOTDEBS        * add to debits
          MOVE      "Dr",DEBCRED 
.
CTOT9999  RETURN
.**********************************************************************
.  SCRB - Print for a range of batches           Called By RANG,redisps
.**********************************************************************
SCRB0000  DISPLAY   *P1:4,*EF:
                    *P5:4,"From Batch Number    : ",*V2LON,FROMBAT,*HOFF:
                    *P5:5,"To   Batch Number    : ",*V2LON,TOBAT,*HOFF:
                    *P5:6,"Print ",*V2LON,"C",*HOFF,"ash/",*V2LON,"A": 
                    *HOFF,"ccrual   : ";
.
SCRB9999  RETURN
.**********************************************************************
.  RANG - Print for a range of batches                 Called By ML
.**********************************************************************
RANG0000  UNPACK    SP70,FROMBAT,TOBAT,PRTTYPE
          CALL      SCRB0000           * display screen
.
RANG1000  
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          CALL      KBCFFM00             * keyin the batch number
          BRANCH    EXIT,RANG9999,RANG9999
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBCBAT
          MOVE      FMBCBAT,FROMBAT
.
          MOVE      "28",CCOL
          MOVE      "5",CVERT
          CALL      KBCFFM00             * keyin the batch number
          BRANCH    EXIT,RANG1000,RANG9999
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBCBAT
          MOVE      FMBCBAT,TOBAT
.
RANG1500  KEYIN     *P28:6,"_":
                    *P28:6,*V2LON,PRTTYPE;
          PACK      PRTTYPE,PRTTYPE,SP70
          REP       UPPLOW,PRTTYPE
          MATCH     "C",PRTTYPE
          GOTO      RANG1900 IF EQUAL  * cash ?
          MATCH     "A",PRTTYPE
          GOTO      RANG1950 IF EQUAL  * accrual ?
          BEEP
          GOTO      RANG1500
.
.
RANG1900  DISPLAY   *P28:6,*V2LON,"Cash"
          GOTO      RANG2000
.
RANG1950  DISPLAY   *P28:6,*V2LON,"Accrual"
.
.
RANG2000  CALL      CONTQST
          BRANCH    CEXIT,RANG3000,RANG0000,RANG9999
.
RANG3000  PACK      KEY5,FROMBAT
          CALL      RSFMBC1
          CALL      RPFMBC1
          MOVE      ZERO,CPAGENO
          MOVE      "999",CLNO
.
RANG3100  CALL      RKFMBC1
          BRANCH    OVRCD,RANG9999
          MATCH     FMBCBAT,TOBAT
          GOTO      RANG9999 IF LESS     * out of range ?
.
          CALL      FORM0000             * format data for display
          CALL      PASB0000             * print a selected batch
          GOTO      RANG3100             * get next batch
.
RANG9999  RETURN
.
.-------------------------------------------------------------------------------
. Normal Code Keyin - Code Must Exist Exit = 1 if Null Entry
.-------------------------------------------------------------------------------
KBCFJN00  MOVE      UNDLN70,FMJPBAT
          KEYIN     *PCCOL:CVERT,*EL,*DV,FMJPBAT:
                    *PCCOL:CVERT,*V2LON,*ZF,*JR,FMJPBAT
.
          ENDSET    FMJPBAT
          APPEND    SP70,FMJPBAT
          RESET     FMJPBAT
          MATCH     SP70,FMJPBAT             * System Code Spaces so exit set
          GOTO      KBCFJN90 IF EQUAL
          MATCH     "00000",FMJPBAT     * System Code Zeros so exit set
          GOTO      KBCFJN90 IF EQUAL
.
          MOVE      "0000",KEY4
          PACK      KEY5,KEY4,EXITCHAR
          MATCH     KEY5,FMJPBAT         * Exit Selected
          GOTO      KBCFJN95 IF EQUAL
.
          PACK      KEY5,KEY4,QUEST
          MATCH     KEY5,FMJPBAT            * Help Required  
          GOTO      KBCFJN10 IF NOT EQUAL
.
          CALL      HBCFJN00                  * Display List Of FMBCBATs
          PACK      CDATASAV,FMJPBAT,SP70    * save data entered
          CALL      RBCFFM00                  * Redisplay Routine
          PACK      FMJPBAT,CDATASAV,SP70    * restore data entered
.
          ENDSET    FMJPBAT
          APPEND    SP70,FMJPBAT
          RESET     FMJPBAT
          MATCH     SP70,FMJPBAT             * System Code Spaces so exit set
          GOTO      KBCFJN00 IF EQUAL
.
KBCFJN10  DISPLAY   *PCCOL:CVERT,*V2LON,FMJPBAT
.
          PACK      KEY5,FMJPBAT,SP70
          CALL      RDFMJP1
          BRANCH    OVRCD,KBCFJN81
.
          MATCH     "1",FMJPAUTH
          GOTO      KBCFJN81 IF EQUAL
          MATCH     FMJOPRE5,FMJPJTY
          GOTO      KBCFJN81 IF NOT EQUAL
.
          MOVE      FMJPBAT,FMBCBAT
          MOVE      FMJPBAT,BATCHNO
          PACK      FILNAME,BCH,BATCHNO  * format file name to use
          REP       " 0",FILNAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      BATFILE,FILNAME      * open file
          TRAPCLR   IO
          BRANCH    OVRCD,KBCFJN80       * cant open file ?
.
          MOVE      ZERO,EXIT                 * no entry so exit is set
          CALL      RDBAT0
          CALL      RDBAT1
          MOVE      BC1BATCH,FMBCBAT
          MOVE      BC0NXTSC,FMBCSEC
          MOVE      BC1KEYT,FMBCTOT
          MOVE      ZERO,FMBCDIS
          MOVE      BC1OPER,FMBCUID
          MOVE      FMJPPDAT,FMBCDAT
          MOVE      FMJPPDAT,FMBCPDAT
          MOVE      BC1LEDG,FMBCLED
          MOVE      BC1TRAN,FMBCTRT
       
          GOTO      KBCFJN99
.
KBCFJN80  DISPLAY   *P1:24,*EL,*B,"Batch Does Not Exist - ";
          CALL      HITENTER
          GOTO      KBCFJN00
.
KBCFJN81  DISPLAY   *P1:24,*EL,*B,"Invalid Batch Number - ";
          CALL      HITENTER
          GOTO      KBCFJN00
.
KBCFJN90  MOVE      ONE,EXIT                  * null entry so exit is set
          GOTO      KBCFJN99
.
KBCFJN95  MOVE      TWO,EXIT                  * Exit character entered    
.
KBCFJN99  RETURN
.------------------------------------------------------------------------------
. Display List of All Codes
.------------------------------------------------------------------------------
HBCFJN00  DISPLAY   *P1:4,*EF,*P1:4,*V2LON,*ULON,"Item":
                    *P6:4,"Batch",*P12:4,"Entered",*P23:4,"Status":
                    *P39:4,"Post to",*P50:4,"Type",*P75:4,"Total"
.
          PACK      KEY6,ZERO,SP70
          MOVE      FIVE,STDROW
          MOVE      ZERO,XITEMNO
          MOVE      ZERO,CPAGENO
          CALL      RSFMJP3
.
HBCFJN10  CALL      RKFMJP3
          BRANCH    OVRCD,HBCFJN20
          MATCH     "1",FMJPAUTH
          GOTO      HBCFJN20 IF EQUAL
          MATCH     FMJOPRE5,FMJPJTY
          GOTO      HBCFJN10 IF NOT EQUAL
          ADD       ONE,XITEMNO
          ADD       ONE,STDROW
          STORE     FMJPBAT,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                    ST6,ST7,ST8,ST9,ST10:
                                    ST11,ST12,ST13,ST14,ST15:
                                    ST16,ST17
.
          MOVE      "Not Authorised",FMBCDST
          REP       " 0",FMJPDAT
          UNPACK    FMJPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P2:STDROW,*V2LON,XITEMNO,DOT,*HOFF:
                    *P6:STDROW,FMJPBAT,*P12:STDROW,CPCDATE,*P23:STDROW,FMBCDST
          UNPACK    FMJPPDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      FMBCFMT,FMBCFTOT
          FEDIT     FMJPDTOT,FMBCFTOT
          MOVE     "Interface Journal",FMBCDTY
          DISPLAY  *P39:STDROW,CPCDATE,*P50:STDROW,FMBCDTY:
                   *P65:STDROW,FMBCFTOT
.
          COMPARE   "17",XITEMNO
          GOTO      HBCFJN10 IF NOT EQUAL
.
HBCFJN20  MOVE      ZERO,CCITEM
          MOVE      SP2,CCITEMD
          DISPLAY   *P1:24,*EL,"Select Item, ";
          COMPARE   "17",XITEMNO
          GOTO      HBCFJN25 IF NOT EQUAL
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext page, ";
.
HBCFJN25  COMPARE   ZERO,CPAGENO
          GOTO      HBCFJN26 IF EQUAL
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious page, ";
.
HBCFJN26  KEYIN     "e(",*V2LON,"X",*HOFF,")it ? ",*JR,*V2LON,CCITEMD;
.
          RESET     CCITEMD
          GOTO      HBCFJN30 IF EOS      * Next Page
          REP       UPPLOW,CCITEMD
          MATCH     "  N",CCITEMD        * Next Page
          GOTO      HBCFJN30 IF EQUAL
          MATCH     "  P",CCITEMD        * Previous Page
          GOTO      HBCFJN35 IF EQUAL
          MATCH     "  X",CCITEMD        * Exit
          GOTO      HBCFJN91 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      HBCFJN90 IF NOT EQUAL  * Invalid Entry
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      HBCFJN90 IF LESS       * Invalid Entry
          COMPARE   CCITEM,XITEMNO
          GOTO      HBCFJN90 IF LESS       * Invalid Entry
          GOTO      HBCFJN92               * Item Selected
.
HBCFJN30  COMPARE   "17",XITEMNO            * Next Page Selected
          GOTO      HBCFJN90 IF NOT EQUAL  * No Next Page Invalid Selection
          ADD       ONE,CPAGENO
          MOVE      ZERO,XITEMNO            
          MOVE      FIVE,STDROW
          DISPLAY   *P1:6,*EF
          GOTO      HBCFJN10
.
HBCFJN35  COMPARE   ZERO,CPAGENO           * Previous Page Selected
          GOTO      HBCFJN90 IF EQUAL      * No Previous Page Invalid Selection
          DISPLAY   *P1:6,*EF
          SUB       ONE,CPAGENO
          COMPARE   "17",XITEMNO      
          GOTO      HBCFJN36 IF EQUAL 
          CALL      RPFMJP3            * Initial reverse read
          COMPARE   ZERO,XITEMNO      
          GOTO      HBCFJN37 IF EQUAL 
.
HBCFJN36  CALL      RPFMJP3
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HBCFJN36 IF NOT EQUAL
          COMPARE   FIVE,STDROW
          GOTO      HBCFJN10 IF EQUAL   * Display Down The Page
HBCFJN37  MOVE      FIVE,STDROW
          MOVE      "17",XITEMNO
          GOTO      HBCFJN36
.
HBCFJN90  BEEP                          * invalid entry
          GOTO      HBCFJN20
.
HBCFJN91  MOVE      SP70,FMJPBAT
          GOTO      HBCFJN99
.
HBCFJN92  MOVE      SP70,FMJPBAT
          LOAD      FMJPBAT,CCITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15:
                                  ST16,ST17
.
HBCFJN99  RETURN
.
RLMCFM00
          RETURN
.
RBCFFM00  BRANCH    MENUOPT1,RDISA000,RDISB000,RDISB000,RDISA000
.
RDISA000  CALL      DSBS0000
          RETURN
.
RDISB000  CALL      SCRB0000
          RETURN
.
          INC       FMSSTDCD
.
          INC       APSMASIO/INC
          INC       APSNSCIO/INC
.
          INC       IBABATIO/INC 
          INC       IBAPASIO/INC
.
          INC       FMSAMAIO/INC
          INC       FMSBASIO/INC
          INC       FMSBCFIO/INC
          INC       FMSCONIO/INC 
          INC       FMSCSAIO/INC 
          INC       FMSJPDIO/INC 
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSSIBIO/INC
          INC       FMSTRNIO/INC
          INC       FMSCTRIO/INC
          INC       FMSLMCKY
          INC       FMSBCFKY
