.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.03.01  27/02/2013  Ania P              CAR 281021
.           RECOMPILED for FMSBNKKY
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
. V9.04.01  13.04.2005 Peter Vela CAR 59696
.           Recompiled for SINCGBFD
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 28.11.2000 Sandra Barcham
.           Added BAS Code
.-------------------------------------------------------
. VF.01.03  30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
. VF.01.02  23.10.2000 Sandra Barcham
.           Make fmsbnkaf for reinstatements be cancel date
.           not original payment date
.           srf 6591
. VF.01.01  20.04.2000 Sandra Barcham
.           GST Changes
.-------------------------------------------------------
. VF.00.03  28.04.2000 Sandra Barcham
.           Recompiled for FMSBNKKY change
. VF.00.02  13.01.2000 Sandra Barcham
.           Recompiled for FMSBNKKY change
. VF.00.01  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           17.11.1999 Sandra Barcham
.           Allow Cancelled direct debits
.           srf 635048
.-------------------------------------------------------
BSAVEBCH  DIM       5      5        1     Batch Number
BSAVEDIS  DIM       5      5        8     Dissection
BSAVERES  DIM       4      4        13    Responsibility
BSAVECHQ  DIM       15     15       55    Cheque Account
.
CORREF    DIM       15
F12P4     FORM      12.4
INVBASC   DIM       3
INVBCH    DIM       5
INVCRD    DIM       5
INVKEY51  DIM       51
INVLIN    DIM       3
INVORD    DIM       8
INVREFER  DIM       15
INVREST   DIM       40
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS16
.   Function      :   Cancelled Cheque Input                  
.   Generated  On :   07/04/2011
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSAPYDF    
          INC       APSAPYFD/INC
          INC       APSBCHDF    
          INC       APSBMFFD/INC
          INC       APSCAFFD/INC
          INC       APSCILFD/INC
          INC       APSCIOFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSISLFD/INC
          INC       APSMASFD/INC
          INC       APSNSCFD/INC
          INC       APSORDFD/INC
          INC       APSSUBFD/INC
          INC       APSTMPDF    
          INC       FMSAMADF    
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSBNKFD/INC
          INC       FMSCAFFD/INC
          INC       FMSCHQFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSDISFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSRESFD/INC
          INC       FMSTDSFD/INC
          INC       FMSTUPFD/INC
          INC       IBABATFD/INC
          INC       IBACONFD/INC
          INC       IBAPRNFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINORIFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINWARFD/INC
.=========================
.Local Variable Definition
.-------------------------
BATCHCAL  FORM     12.2 * Scr 00 Fld    13
CRDNAM80  DIM      80 * Scr 01 Fld    10
CRDADD80  DIM      80 * Scr 01 Fld    11
DATECANC  DIM       8 * Scr 01 Fld    23
ISCANCEL  DIM      10 * Scr 01 Fld    24
CANNOTE0  DIM      35 * Scr 01 Fld    25
CANNOTE1  DIM      70 * Scr 01 Fld    26
CANNOTE2  DIM      70 * Scr 01 Fld    27
.
.    Multi Item Key Fields Scr 01 Fld    30
.-------------------------------------------------------
APIM5NAM  INIT      "APIM5"
APIM5END  FORM      1   * End Display
APIM5SNO  FORM      5   * Number of Items on the Screen
APIM5MKY  DIM       127 * Match Key 
APIM5EKY  DIM       127 * End Key
APIM5SKY  DIM       127 * Start Key
APIM5IDX  INIT      " 132 UC1-5"
APIM5FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
APIM5FNM  DIM       8  * Filename
APIM5CNT  FORM      3  * Number of Items on Screen
CANDESC   DIM      10 * Scr 01 Fld    32
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS16"
PRGNAM    INIT      "Cancelled Cheque Input                  "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      CKPPY000
          CALL      SC00L000
          CLOSE     APIM5FL1,DELETE
.
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA4,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apscilaf";
          OPEN      APSCILA1,"apscilaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA1,"apscioaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA2,"apscioaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsislaf";
          OPEN      APSISLA1,"apsislaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA1,"apsnscaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA2,"apsnscaf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA1,"apsordaf"
          DISPLAY   *P56:24,"Opening apssubaf";
          OPEN      APSSUBA1,"apssubaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA2,"fmsbcfaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA1,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA2,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA3,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA4,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA5,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA6,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmscafaf";
          OPEN      FMSCAFA1,"fmscafaf"
          DISPLAY   *P56:24,"Opening fmscafaf";
          OPEN      FMSCAFA2,"fmscafaf"
          DISPLAY   *P56:24,"Opening fmschqaf";
          OPEN      FMSCHQA1,"fmschqaf"
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening fmsresaf";
          OPEN      FMSRESA1,"fmsresaf"
          DISPLAY   *P56:24,"Opening  fmstdsaf           ";
          OPEN      FMSTDSA1,"fmstdsaf"          
          DISPLAY   *P56:24,"Opening  fmstupaf           ";
          OPEN      FMSTUPA1,"fmstupaf"          
          DISPLAY   *P56:24,"Opening  ihapassf           ";
          OPEN      IHAPASS1,"ihapassf"          
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA4,"sincicaf"
.--------------------------------------------------------
. Initialise Batch Screen Invoice Reference                  
.--------------------------------------------------------
          MOVE     ZERO,APIM5SNO
          MOVE     "01   30",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,APIM5SNO
            ENDIF
          ENDIF
          PACK      APIM5FNM,ANST,APIM5NAM,PORT
          REP       " 0",APIM5FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APIM5FL1,APIM5FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     APIM5FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,APIM5FNM,APIM5IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",APIM5FNM;
          EXECUTE   KEY80,TASKID
          OPEN      APIM5FL1,APIM5FNM
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Cancelled Cheque Input Batch Header
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Cancelled Cheque Input             
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Transaction Details                
          ENDIF
          RETURN
.--------------------------------
. Screen - Cancelled Cheque Input Batch Header
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      FMSCON00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Cancelled Cheque Input Batch Header
.-------------------------------------------------------
CF00L000
          MOVE      SP70,APIMBCH 
          MOVE      SP70,APBMADT 
          MOVE      ZERO,APBMTOT 
          MOVE      SP70,APBMLED 
          MOVE      SP70,APBMDIS 
          MOVE      SP70,APBMRES 
          MOVE      SP70,APBMCHQ 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Cancelled Cheque Input Batch Header
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,BATCHCAL
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APBMDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SECUSER 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KAPBCH00
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      OVRCD,ACCEPT
          MOVE      APIMBCH,VAR      
          CALL      DISPITEM
          CALL      GBAT0000
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      BATCHCAL,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SECUSER,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Cancelled Cheque Input Batch Header
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Cancelled Cheque Input Batch Header
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Cancelled Cheque Input Batch Header
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Cancelled Cheque Input Batch Header
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L101,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L115:
                            PS00L116
          GOTO     PS00L999
.
PS00L101
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          CALL      GBDES000
          MOVE      APBMLED,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      APBMDIS,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      APBMRES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      BATCHCAL,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          UNPACK    PERSDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      PERDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      SECUSER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      APBMCHQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      FMCHDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Cancelled Cheque Input Batch Header
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L108,SF00L109:
                            SF00L110,SF00L111,SF00L112,SF00L113:
                            SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L113:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      POSTHEAD
          GOTO      SF00L001
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELBCH00
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PEREDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERSDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      APDATE00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    PERSDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PERDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,APBMTOT 
          IF        SCPSMAN=1
            COMPARE   ZERO,APBMTOT 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
          ENDIF
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLAA00
          MOVE      FMLALEDG,APBMLED
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      GBDES000
          MOVE      APBMLED,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMDSA00
          MOVE      FMDSCODE,APBMDIS
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMDIS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMRSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMRSA00
          MOVE      FMRSCODE,APBMRES
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMRES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMRSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      UPCAN000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L109
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      APSBCHPR
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L110
          CALL      UUAPBM1 
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L111
          CALL      UUAPBM1 
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L112
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      LSTBCH00
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L113
.
.
          MOVE      "   25",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCHDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCHAC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L113
            ENDIF
            BRANCH    EXIT,SF00L113,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMCHQ,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   25",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCHDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Cancelled Cheque Input             
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Cancelled Cheque Input             
.-------------------------------------------------------
CF01L000
          MOVE      SP70,CHEQNUMB
          MOVE      SP70,DATECANC
          MOVE      SP70,ISCANCEL
          MOVE      SP70,CANNOTE0
          MOVE      SP70,CANNOTE1
          MOVE      SP70,CANNOTE2
          MOVE      SP70,APIMREF 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Cancelled Cheque Input             
.--------------------------------------------------------
KY01L000
.
KY01L110
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACRD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CRDNAM80
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CRDADD80
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMBNDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PAYTOTAL
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KCHEQ000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      OVRCD,ACCEPT
          MOVE      CHEQNUMB,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACRD,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CRDNAM80,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CRDADD80,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    FMBNDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PAYTOTAL,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Cancelled Cheque Input             
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Cancelled Cheque Input             
.---------------------------------------------------------
LM01L000
.---------------------------------------------------------
. Load for :    30 Invoice Reference                  
.---------------------------------------------------------
          UNPACK    SP70,APIMBCH,APIMCRD,APIMDOC,APIMREF
          PACK      KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          MOVE      KEY40,APIM5EKY
          STRIP     APIM5SKY
          SETLPTR   APIM5EKY,25
          MOVE      APIM5EKY,APIM5SKY
          CALL      RDAPIM5 
          IF        OVRCD=0
            CALL      RPAPIM5 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP01L000
          MOVE     ZERO,APIM5CNT
          MOVE     ZERO,APIM5END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP01L600
          MATCH    PRGID,SCPSPID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP01L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                           DP01L010,DP01L101,DP01L102,DP01L103:
                            DP01L104,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010
          GOTO      DP01L010
.
DP01L101
          PACK      APIM5MKY,SP70,SP70
          CALL      UPTAPIM5
          IF        APIM5END=0
            CALL      RKAPIM5 
            IF        OVRCD=0
              PACK      APIM5MKY,APIMBCH,APIMCRD,APIMDOC,APIMREF                                                
              MATCH     APIM5EKY,APIM5MKY
              IF        @EQUAL
                MOVE      ZERO,APIM5END
                ADD       ONE,APIM5CNT
                CALL      UPTAPIM5
          CALL      RDET0000
                MOVE      APIMREF,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,APIM5END
              ENDIF
            ELSE
              MOVE      ONE,APIM5END
            ENDIF
          ENDIF
          IF        APIM5END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L102
          IF        APIM5END=0
            MOVE      APIMPAY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L103
          IF        APIM5END=0
            MOVE      CANDESC,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L104
          IF        APIM5END=0
            UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
DP01L600
          MATCH    "APIM5",NAMSSFFI
          GOTO     DP01L605 IF NOT EQUAL
          GOTO     DP01L999
DP01L605
DP01L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP01L000
.
          MATCH    "APIM5",NAMSSFFI
          GOTO     FP01L105 IF NOT EQUAL
          PACK     KEY40,APIM5SKY,SP70
          CALL     RDAPIM5  * Start
          IF       OVRCD=0
            CALL     RPAPIM5  * Start
          ENDIF
          CALL     DP01L000
          GOTO     FP01L999
FP01L105
FP01L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP01L000
.
          MATCH    "APIM5",NAMSSFFI
          GOTO     LP01L105 IF NOT EQUAL
          PACK     KEY40,APIM5SKY,Z70
          CALL     RSAPIM5  * End
          IF       OVRCD=1
            CALL     RPAPIM5 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APIM5SNO
            CALL     RPAPIM5 
            IF       OVRCD=1
              MOVE     APIM5SNO,SECTOR
            ENDIF
            PACK     APIM5MKY,APIMBCH,APIMCRD,APIMDOC,APIMREF                                                
            MATCH    APIM5EKY,APIM5MKY
            IF       !@EQUAL
              MOVE     APIM5SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     LP01L999
LP01L105
LP01L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP01L000
.
          MATCH    "APIM5",NAMSSFFI
          GOTO     PP01L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP01L105
          CALL      RFTAPIM5
          BRANCH   OVRCD,PP01L115
          MOVE      APIM5MKY,KEY40 
          CALL      RSAPIM5 
PP01L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=APIM5SNO
            CALL     RPAPIM5 
            IF       OVRCD=1
              MOVE     APIM5SNO,SECTOR
            ENDIF
            PACK     APIM5MKY,APIMBCH,APIMCRD,APIMDOC,APIMREF                                                
            MATCH    APIM5EKY,APIM5MKY
            IF       !@EQUAL
              MOVE     APIM5SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     PP01L999
PP01L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APIM5SNO
            CALL     RKAPIM5 
            IF       OVRCD=1
              MOVE     APIM5SNO,SECTOR
            ENDIF
            PACK     APIM5MKY,APIMBCH,APIMCRD,APIMDOC,APIMREF                                                
            MATCH    APIM5EKY,APIM5MKY
            IF       !@EQUAL
              MOVE     APIM5SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP01L999
PP01L120
PP01L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP01L000
          MATCH    "APIM5",NAMSSFFI
          GOTO     NP01L115 IF NOT EQUAL
NP01L105
          CALL     RKAPIM5 
          BRANCH   OVRCD,NP01L110
          PACK     APIM5MKY,APIMBCH,APIMCRD,APIMDOC,APIMREF                                                
          MATCH    APIM5EKY,APIM5MKY
          GOTO     NP01L110 IF NOT EQUAL
          CALL     RPAPIM5 
          CALL     DP01L000
          GOTO     NP01L999
NP01L110
          CALL     RPAPIM5 
          BEEP
          GOTO     NP01L999
NP01L115
NP01L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT01L000
CT01L105
CT01L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Cancelled Cheque Input             
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    30 Invoice Reference                  
.---------------------------------------------------------
UPTAPIM5
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      APIM5FL1,KEY5;ANS
          IF        @OVER
            WRITE     APIM5FL1,KEY5;SCPSROW,SCPSCOL,APIM5MKY
          ELSE
            UPDATE    APIM5FL1;SCPSROW,SCPSCOL,APIM5MKY
          ENDIF
          RETURN
RDTAPIM5
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      APIM5FL1,KEY5;SCPSROW,SCPSCOL,APIM5MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTAPIM5
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      APIM5FL1,KEY5;;
          READKS    APIM5FL1;SCPSROW,SCPSCOL,APIM5MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,APIM5MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Cancelled Cheque Input             
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
          MOVE      "APIM5",NAMSSFFI
          MOVE      "   30",ITMSSFFI
          CALL      FP01L000
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Cancelled Cheque Input             
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L101,PS01L102,PS01L103,PS01L104:
                            PS01L105,PS01L106,PS01L107,PS01L108:
                            PS01L109,PS01L110,PS01L111,PS01L112:
                            PS01L113,PS01L114,PS01L115,PS01L116:
                            PS01L117,PS01L118,PS01L119,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999
          GOTO     PS01L999
.
PS01L101
          MOVE      APMACRD,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      CRDNAM80,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      CRDADD80,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          UNPACK    FMBNDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      PAYTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      APMACA1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      APMACA2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      APMACA3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      APMACPC,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      APMACTEL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      APMACFAX,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      APMACON,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          UNPACK    DATECANC,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      ISCANCEL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      CANNOTE0,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      CANNOTE1,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      CANNOTE2,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Cancelled Cheque Input             
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L104,SF01L105:
                            SF01L106,SF01L107,SF01L108,SF01L006:
                           SF01L006,SF01L109,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L110:
                            SF01L111,SF01L006,SF01L006,SF01L112:
                            SF01L113
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L104,SF01L105:
                            SF01L106,SF01L107,SF01L108,SF01L020:
                           SF01L020,SF01L109,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          MOVE      "APIM5",NAMSSFFI
          MOVE      "   30",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L101
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELCHQ00
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L103
          CALL      CKDOC000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECCDT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          UNPACK    DATECANC,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECANC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      ISCANCEL,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KICM0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CANNOTE0,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EREMA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CANNOTE1,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EREMB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
            BRANCH    EXIT,SF01L108,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      CANNOTE2,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L109
          CALL      SELECTED
          BRANCH    EXIT,SF01L001
          COMPARE   ONE,ACCEPT
          GOTO      SF01L001 IF EQUAL
          CALL      RDTAPIM5
          IF        OVRCD=1
            BEEP
            GOTO      SF01L001
          ENDIF
          MATCH     SP70,APIM5MKY
          IF        @EQUAL
            BEEP
            GOTO      SF01L001
          ENDIF
          MOVE      APIM5MKY,KEY40 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      MODINV00
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTAPIM5
          IF        OVRCD=1
            CALL      FP01L000
          ELSE
            MOVE      APIM5MKY,KEY40 
            CALL      RSAPIM5 
            CALL      RPAPIM5 
            CALL      DP01L000
          ENDIF
          GOTO     SF01L001
.
SF01L110
          MOVE      "APIM5",NAMSSFFI
          MOVE      "   30",ITMSSFFI
          CALL      NP01L000
          GOTO     SF01L001
.
SF01L111
          MOVE      "APIM5",NAMSSFFI
          MOVE      "   30",ITMSSFFI
          CALL      PP01L000
          GOTO     SF01L001
.
SF01L112
          MOVE      "APIM5",NAMSSFFI
          MOVE      "   30",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L113
          MOVE      "APIM5",NAMSSFFI
          MOVE      "   30",ITMSSFFI
          CALL      LP01L000
          GOTO     SF01L001
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Transaction Details                
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "15",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC02L200
          CALL      CF02L000 * Clear Fields
          CALL      RDET0000
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Transaction Details                
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Transaction Details                
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Transaction Details                
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Transaction Details                
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Transaction Details                
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Transaction Details                
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L999,PS02L999,PS02L103:
                            PS02L104
          GOTO     PS02L999
.
PS02L101
          MOVE      APIMREF,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      CANDESC,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      APIMPAY,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Transaction Details                
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L006:
                            SF02L103,SF02L006,SF02L006,SF02L104:
                            SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L103,SF02L020,SF02L020,SF02L104:
                            SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
          CALL      WAPIM000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECARE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L103
            ENDIF
            BRANCH    EXIT,SF02L103,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      CANDESC,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L104
          CALL     SELECTED
          CALL      KEYDATE
          PACK      APIMPDT,CCENT,CYEAR,CMON,CDAY           
          UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
SF02L990  MOVE      ONE,EXIT * Exit Char Restart
SF02L999  RETURN
.@@@@@ Function Restart Point @@@@@
.**********************************************************************
. Check if proposed payments in progress (Exit program if so)
. General Routine (nb : CKPPI000 + CKPPU000 is for Invoice Input)
.**********************************************************************
CKPPY000  OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS
          MOVE      IBCNUBAS,BASFLAG
          MOVE      SP3,BASDESC
          IF        BASFLAG=1
            MOVE      "BAS",BASDESC
          ENDIF
.
          MOVE      "9999999999999999999999999999999999999999",KEY40
          CALL      RDAPIM1            * check if proposed payments active
          BRANCH    OVRCD,CKPPY999
.
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO50
          PACK      FMCOTACC,FMCOTACC,SP70
          REP       " 0",FMCOTACC
.
          MATCH     "3",FMCOTACC       * full access allowed ?
          GOTO      CKPPY999 IF EQUAL
.
          MOVE      "ACCESS DENIED - Proposed Payments In Progress - ",DISPMSG
          CALL      MESSAGE1
.
          MATCH     "1426",PASSCODE    * sneaky delete of payments file
          GOTO      CKPPY900 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKPPY900 IF NOT EQUAL
.
          MOVE      "HELLO IBA - Delete Proposed Payments File ? ",DISPMSG
          CALL      MESSAGE4           * does iba want to delete auto pay file ?
          BRANCH    EXIT,CKPPY999
.
          CALL      DELAP000           * delete file if possible
          GOTO      CKPPY000
.
CKPPY900
          CLOCK      FORK,KEY2         * exit program
          MATCH      " 0",KEY2
          IF         @EQUAL
            CHAIN       PGM
          ELSE
            STOP
          ENDIF
.
CKPPY999  READ       CONTROLF,SIXTY3;*85,INCOSTYP
          RETURN
.
.----------------------------------------------------------------------
. Read FMS Control File Parameters
.----------------------------------------------------------------------
FMSCON00  CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CALL      RDFMCO66
.
          READ       CONTROLF,TWENTY3;*95,HACCNT
          READ       CONTROLF,ZERO;*85,IBCNUGST
.
          PACK       KEY2,SP70
          CALL       RSFMLA1
          CALL       RKFMLA1
          BRANCH     OVRCD,FMSERR01
.
FMSCON10  MATCH      SP70,FMLABNK
          GOTO       FMSERR02 IF EQUAL
          MATCH      SP70,FMLACRD
          GOTO       FMSERR03 IF EQUAL
          MATCH      SP70,FMLAAGST
          GOTO       FMSERR04 IF EQUAL
.
          CALL       RKFMLA1
          COMPARE    ZERO,OVRCD
          GOTO       FMSCON10 IF EQUAL
.
          RETURN
.
FMSERR01  DISPLAY    *P1:24,*EL,"No Ledgers Found - ";
          CALL       HITENTER
          GOTO       FATALERR
.
FMSERR02  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"Bank Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSERR03  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"Creditors Control Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSERR04  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"G.S.T. Control Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSCOS00  MOVE       ONE,EXIT
          PACK       KEY15,FMLALEDG,ONE,SP70
          CALL       RSFMAM2
          CALL       RKFMAM2
          BRANCH     OVRCD,FMSCOS99
.
          MATCH      "6",FMAMTYPE
          RETURN     IF NOT LESS
.
          MOVE       ZERO,EXIT
.
FMSCOS99  RETURN
.----------------------------------------
. Read Batch Header Details
.----------------------------------------
GBAT0000
          PACK      KEY5,APBMBCH       * check if batch exists
          CALL      RDAPBM1
          BRANCH    OVRCD,GBAT5000
.
          MOVE      APBMLED,KEY2
          CALL      RDFMLA1
          MOVE      APBMDIS,KEY5
          CALL      RDFMDS1
          MOVE      APBMRES,KEY4
          CALL      RDFMRS1
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
          MOVE      APBMOPR,KEY4
          CALL      RDPASS1
.
. Calculate Batch Total
.----------------------
          MOVE      ZERO,ACCEPT
          MOVE      ZERO,OVRCD
          MOVE      ZERO,BATCHCAL
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
GBAT0150
          CALL      RKAPIM1
          BRANCH    OVRCD,GBAT9999
          MATCH     APBMBCH,APIMBCH
          GOTO      GBAT9999 IF NOT EQUAL
          ASSIGN    APIMTOT+APIMGST-APIMDIS+BATCHCAL,BATCHCAL
          GOTO      GBAT0150
.
. Insert Setup Defaults
.----------------------
GBAT5000  MOVE      ONE,ACCEPT
.
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMLALEDG,APBMLED
.
          MOVE      SP70,KEY5
          CALL      RSFMDS1
          CALL      RKFMDS1
          MOVE      FMDSCODE,APBMDIS
.
          MOVE      SP70,KEY4
          CALL      RSFMRS1
          CALL      RKFMRS1
          MOVE      FMRSCODE,APBMRES
.
.
GBAT9999  RETURN
.----------------------------------------
. Read Batch Header Details
.----------------------------------------
GBDES000
          BRANCH    ACCEPT,GBDES999         * skip if in accept mode
.
          MOVE      APBMLED,KEY2
          CALL      RDFMLA1
          MOVE      APBMDIS,KEY5
          CALL      RDFMDS1
          MOVE      APBMRES,KEY4
          CALL      RDFMRS1
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
.
GBDES999  RETURN
.----------------------------------------------------------------------
. Save Header Details
.----------------------------------------------------------------------
POSTHEAD
          MATCH     "New  ",APBMBCH
          GOTO      PHED0100 IF NOT EQUAL
          MOVE      SP70,APBMUDT
PHED0010
          CALL      RDFMCOCH
          MOVE      FMBCHBAT,APBMBCH
          MATCH     "00000",APBMBCH
          GOTO      PHED0010 IF EQUAL
          PACK      KEY5,APBMBCH
          CALL      RAAPBM1
          COMPARE   ZERO,OVRCD
          GOTO      PHED0010 IF EQUAL
          CALL      RAFMBC1
          COMPARE   ZERO,OVRCD
          GOTO      PHED0010 IF EQUAL
.
PHED0100
          MOVE     APBMBCH,APIMBCH
          PACK     KEY5,APBMBCH
          MOVE     SP70,APBMUDT
          MOVE     "CC",APBMTYP
          CALL     RAAPBM1
          IF       OVRCD=0
            CALL     UPAPBM1
          ELSE
            CALL     WRAPBM1
            CALL     RLAPBM1
          ENDIF
.
          CALL     SC01L000
.
          MOVE      ZERO,BATCHCAL
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
PHED1000
          CALL      RKAPIM1
          BRANCH    OVRCD,PHED1100
          MATCH     APBMBCH,APIMBCH
          GOTO      PHED1100 IF NOT EQUAL
          ASSIGN    APIMTOT+APIMGST-APIMDIS+BATCHCAL,BATCHCAL
          GOTO      PHED1000
.
PHED1100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      APBMBCH,APIMBCH
          MOVE      APIMBCH,VAR
          CALL      DISPITEM
          CALL      DF00L000 * Display Fields
.
          RETURN
.
.----------------------------------------------------------------------
. Delete Batch
.----------------------------------------------------------------------
DELBCH00
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          CALL      DELQST
          COMPARE   ONE,CEXIT
          GOTO      DELBCH90 IF NOT EQUAL
.
          MOVE      APBMBCH,KEY5
          CALL      RDAPBM1
          IF        OVRCD=0
            CALL      DEAPBM1
          ENDIF
.
DELBCH10
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
          CALL      RKAPIM1
          BRANCH    OVRCD,DELBCH20
          MATCH     APIMBCH,APBMBCH
          GOTO      DELBCH20 IF NOT EQUAL
          PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF
          CALL      DEAPCL1
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      DEAPIM1
          GOTO      DELBCH10
DELBCH20
          PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1
          CALL      RKAPIN1
          BRANCH    OVRCD,DELBCH30
          MATCH     APINBCH,APBMBCH
          GOTO      DELBCH30 IF NOT EQUAL
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL      DEAPIN1
          GOTO      DELBCH20
DELBCH30
          MOVE      TWO,EXIT
          GOTO      DELBCH99
.
DELBCH90  MOVE      ONE,EXIT
          CALL      MESSAGE3
          GOTO      DELBCH99
.
DELBCH99  RETURN
.----------------------------------------------------------------------
. Keyin Batch Number (enter=next batch)
.----------------------------------------------------------------------
KAPBCH00  MOVE      ZERO,CKEYTYP
          MOVE      "CC",APBMTYP
          CALL      KAPBMZ00
          BRANCH    EXIT,KAPBC800,KAPBC999  * Exit 1=null 2=exitchar
.
KAPBC100  PACK      KEY5,APBMBCH            * Pack Key for Read Lock
          CALL      RLAPBM1                 * Lock Record if On File
          BRANCH    OVRCD,KAPBC999,KAPBC200 * OVRCD 1=Not on File 2=Locked
.                                           * Record Now Lock
          MATCH     "CC",APBMTYP
          GOTO      KAPBC300 IF NOT EQUAL
          MATCH     SP8,APBMUDT
          GOTO      KAPBC700 IF EQUAL
          MATCH     "00000000",APBMUDT
          GOTO      KAPBC700 IF EQUAL
          GOTO      KAPBC750
.
KAPBC200  MOVE      SP70,DISPMSG            * Save Line 24
          CALL      MESSAGE2                * and Prompt for Retry
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      KAPBC100 IF EQUAL       * Retry Read with Lock
          MATCH     ANSX,ANS
          GOTO      KAPBC200 IF NOT EQUAL   * Invalid Entry
          GOTO      KAPBCH00                * Return to Keyin
.
KAPBC300  CLEAR     DISPMSG                 * Save Line 24
          APPEND    "Batch Type Invalid. ",DISPMSG
          APPEND    APBMTYP,DISPMSG
          APPEND    " - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          GOTO      KAPBCH00                * Return to Keyin
.
KAPBC700  MOVE      ZERO,ACCEPT
          MOVE      ZERO,OVRCD
          GOTO      KAPBC900
.-------------------------------------------------
. Batch Already Updated
.-------------------------------------------------
KAPBC750  MOVE      SP70,DISPMSG
          UNPACK    APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          CLEAR     DISPMSG
          APPEND    "Batch Updated on the ",DISPMSG
          APPEND    CPCDATE,DISPMSG
          APPEND    " Changes NOT Possible - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          MATCH     "1426",PASSCODE
          IF        @EQUAL
            MATCH     "*",ANS
            IF        @EQUAL
              CALL      INITB000          * Initialise Files & Parameters
              CALL      UPFMS000          * Update General Ledger Batch
              CALL      CLOS0000          * Close Update
            ENDIF
          ENDIF
          GOTO      KAPBCH00                * Return to Keyin
.---------------------------------------------------
. Get Next Batch Number (Null Entry)
.---------------------------------------------------
KAPBC800  MOVE      ZERO,EXIT
          MOVE      ZERO,BATCHCAL
          MOVE      "New  ",APBMBCH
          PACK      APBMDAT,CCC,CYY,CMM,CDD
          REP       " 0",APBMDAT              * Date Entered
          MOVE      PASSCODE,APBMOPR
          MOVE      APBMOPR,KEY4
          CALL      RDPASS1
.
          MOVE      SP70,KEY5               * Set up Defaults in case
          MOVE      SP70,KEY4               * They are not entered
          MOVE      SP70,KEY2
          CALL      RSFMDS1
          CALL      RKFMDS1
          CALL      RSFMRS1
          CALL      RKFMRS1
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMRSCODE,APBMRES
          MOVE      FMDSCODE,APBMDIS
          MOVE      FMLALEDG,APBMLED
          MOVE      SP70,FMLADESC
          MOVE      SP70,FMDSDESC
          MOVE      SP70,FMRSDESC
.
          MOVE      ONE,ACCEPT
          MOVE      ONE,OVRCD
.
KAPBC900  MOVE      APBMBCH,APIMBCH
.
KAPBC999  RETURN
.----------------------------------------------------------------------
. Enter Accounting Period Date
.----------------------------------------------------------------------
APDATE00  MATCH     SP8,APBMADT             * any date entered yet
          IF        @EQUAL
            MOVE      CCC,CCENT
            MOVE      CYY,CYEAR
            MOVE      CMM,CMON
            MOVE      CDD,CDAY * default to todays date
            PACK      APBMADT,CCENT,CYEAR,CMON,CDAY
            REP       " 0",APBMADT
            UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          ELSE
            UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          ENDIF
.
          CALL      KEYDATE                 * keyin posting date
          BRANCH    OVRCD,APDATE00
          BRANCH    CQUEST,APDATE00
          PACK      APBMADT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",APBMADT
.
          ENDSET    FMLALEDG
          APPEND    SP2,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP2,FMLALEDG
          IF        @EQUAL
            MOVE      SP2,KEY2
            CALL      RSFMLA1
            CALL      RKFMLA1
          ELSE
            MOVE      FMLALEDG,KEY2
            CALL      RDFMLA1
          ENDIF
.
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
          IF        EXIT=0
            MOVE      PERDESC,WKDTDESC
            UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,WKDTPDAT
            IF        PERLOCK=1
              BEEP
              CLEAR     DISPMSG
              APPEND    "Period is Locked - ",DISPMSG
              RESET     DISPMSG
              CALL      MESSAGE1
              GOTO      APDATE00
            ENDIF
          ELSE
            MOVE      ERRMSG,DISPMSG
            CALL      MESSAGE1
            GOTO      APDATE00
          ENDIF
          RETURN
.**********************************************************************
. Batch print routine
.   Requires : APSBCHDF
.              IBACRAFD & IO and CREDMAST open
.              IHAPASSF open
.              IBACODFD & IO
.              IBAPRNFD & IO and IBAPRINT
.**********************************************************************
APSBCHPR  BRANCH    NOPRINT,APBCPR10   * no printer selection ?
          OPEN      IBACODE1,"ibacodef"
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
          CALL      OPNPRINT
.
APBCPR10  MOVE      ZERO,CPAGENO
          CALL      APBF0000           * format batch
          CALL      APBP0000           * print batch
          BRANCH    NOPRINT,APBCPR99   * no printer selection ?
.
          IF        CPAGENO>0
            CALL      SELPRINT
            CALL      CLSPRINT
          ELSE
            MOVE      "Nothing to Print !! - ",DISPMSG
            CALL      MESSAGE1
            CALL      CLSPRINT
          ENDIF
          CLOSE     IBACODE1
...       CLOSE     IBAPRNT1                                          *D-239574
.
          MOVE      ZERO,CPRTFLG    * Make Sure a New Spool File is
          MOVE      SP8,SPLFILE     * Allocated for the Next Print
APBCPR99  RETURN
.
.*********************************************************************
.*                         APBF0000                                  *
.*                  Format the batch data                            *
.*********************************************************************
.
APBF0000  CLEAR     BATDESC
          MATCH      "CR",APBMTYP
          GOTO       APBF1200 IF NOT EQUAL
          MOVE       "Credit Notes      ",BATDESC
          GOTO        APBF2000
.
APBF1200  MATCH      "IN",APBMTYP
          GOTO       APBF1300 IF NOT EQUAL
          MOVE       "Invoices          ",BATDESC
          GOTO        APBF2000
.
APBF1300  MATCH      "PY",APBMTYP
          GOTO       APBF1400 IF NOT EQUAL
          MOVE       "Payments          ",BATDESC
          GOTO        APBF2000
.
APBF1400  MATCH      "CC",APBMTYP
          GOTO       APBF1500 IF NOT EQUAL
          MOVE       "Cancelled Payments",BATDESC
          GOTO       APBF2000
.
APBF1500  MATCH      "PP",APBMTYP
          GOTO       APBF2000 IF NOT EQUAL
          MOVE       "Prompt Payments   ",BATDESC
          GOTO       APBF2000
.
APBF2000  CLEAR      DIM28
.
.----- Format the post date ----
.
          UNPACK     APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK       POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP        " 0",POSTDATE
.
.----- get the financial period description and end date ----
.
          MOVE      APBMADT,WORKDATE
          PACK      KEY2,APBMLED
          CALL      RDFMLA1
          CALL      CFYR0000
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMDAT
          UNPACK     APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       ENTRDATE,CPCDATE,SP70
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMUDT
          MOVE       "Batch Awaiting Update",STATDESC
.
          MATCH      "0000000000",APBMUDT
          GOTO       APBF5000 IF EQUAL
.
          MOVE       "Batch Updated ",STATDESC
          UNPACK     APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       STATDESC,STATDESC,CPCDATE,SP70
.
.----- get user description -----
.
APBF5000  CLEAR      SECUSER
          PACK       KEY4,APBMOPR
          CALL       RDPASS1
.
APBF9999  RETURN
.
.*********************************************************************
.*                          APBP0000                                 *
.*                     Print a single batch                          *
.*********************************************************************
APBP0000  CALL      IBACLOCK
.
          DISPLAY   *P1:24,*EL,"Printing Batch : ",*V2LON,APBMBCH;
.
          MOVE      ZERO,TOTDEBS       * initialise total debits
          MOVE      SP70,LASTCRD
          MOVE      SP70,LASTDOC
          MOVE      Z70,LASTREF
          CALL      HEAD0000           * print header
.
APBP3000  PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1            * go to start of records
.
APBP3100  CALL      RKAPIN1            * go to start of records
          BRANCH    OVRCD,APBP7000     * no more records ?
          MATCH     APINBCH,APBMBCH
          GOTO      APBP7000 IF NOT EQUAL
.
          CALL      PGST0000
.
          MOVE      SP70,APIMTER
          MOVE      ZERO,APIMTOT
          MOVE      ZERO,APIMDIS
          MOVE      ZERO,APIMGST
          PACK      KEY40,APINBCH,APINCRD,APINREF,APINDOC,SP70
          CALL      RDAPIM1
.
          MOVE      APINCRD,LASTCRD
          MOVE      APINDOC,LASTDOC
          MOVE      APINREF,LASTREF
.
          CALL      PLIN0000             * print the report line
          GOTO      APBP3100
.
.---- print totals ----
.
APBP7000  MOVE      "~~~~~~~~~~~~~~~~~~~~",APINREF
          MOVE      "~~~~~~~~~~~~~~~~~~~~",APINDOC
          CALL      PGST0000
          MOVE      FORMAT2,OUTFORM2
          FEDIT     TOTDEBS,OUTFORM2
          PRINT     SP1
          CALL      UND132
          PRINT     *100,"Total : ",*113,OUTFORM2
          CALL      UND132
.
APBP9999  RETURN
.
.**********************************************************************
.  PGST - Print Gst Data                               Called By APBP
.**********************************************************************
PGST0000  MATCH     APINCRD,LASTCRD
          GOTO      PGST1000 IF NOT EQUAL
          MATCH     APINREF,LASTREF
          GOTO      PGST1000 IF NOT EQUAL
          MATCH     APINDOC,LASTDOC
          GOTO      PGST9999 IF EQUAL
.
PGST1000  MATCH     Z70,LASTREF
          GOTO      PGST9999 IF EQUAL
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          MATCH     ANSP,APIMPAYG
          IF        @EQUAL
            ASSIGN    APIMTOT-APIMDIS,APIMTOT
          ELSE
            ASSIGN    APIMTOT-APIMDIS+APIMGST,APIMTOT
          ENDIF
          ADD       APIMTOT,TOTDEBS        * add to debits
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APIMTOT,OUTFORM2
          PRINT     *113,OUTFORM2
.
PGST9999  RETURN
.**********************************************************************
.*                         HEAD0000                                   *
.*                  display the page heading                          *
.**********************************************************************
.
HEAD0000  MOVE      ONE,CNOUNDLN
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          PACK      CPHDROPT,SP70
          CALL      HEAD132
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APBMTOT,OUTFORM2
.
          PRINT        "Batch Number : ",APBMBCH:
                   *60,"Post to Date : ",POSTDATE,SP1,PERDESC,"Ending ",ENDDATE:
                    *N,"Batch Type   : ",APBMTYP,SP1,BATDESC:
                   *60,"Entered      : ",ENTRDATE," by ",SECUSER:
                    *N,"Batch Total  : ",OUTFORM2:
                   *60,"Status       : ",STATDESC
          CALL      UND132
.
          MOVE      "Document Ref   ",REFDESC1
          MOVE      "Invoice Number ",REFDESC2
          MATCH     "IN",APBMTYP
          IF        @EQUAL
            MOVE      "Invoice Number ",REFDESC1
            MOVE      "               ",REFDESC2
          ENDIF
          MATCH     "CR",APBMTYP
          IF        @EQUAL
            MOVE      "Credit Note    ",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
          MATCH     "PY",APBMTYP
          IF        @EQUAL
            MOVE      "Payment  Number",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
          MATCH     "CC",APBMTYP
          IF        @EQUAL
            MOVE      "Payment  Number",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
.
          PRINT     *1,"Creditor Code",*17,"Creditor Name",*50,REFDESC1:
                    *67,REFDESC2,*97,"        Posting":
                    *117,"    Transaction":
                    *N,*1,"Ledger/Account",*16,"Order No",*26,"Catalog":
                    *34,"Quantity":
                    *43," Diss",*49,"Resp",*54,BASDESC:
                    *65,"Transaction Description":
                    *97,"         Amount",*117,"         Amount"
.
          CALL      UND132
.
          ADD       FIVE,CLNO
.
HEAD9999  RETURN
.
.**********************************************************************
.*                         PLIN0000                                   *
.*                 Print the report lines                             *
.**********************************************************************
.
PLIN0000  COMPARE   "55",CLNO            * test for a full page
          CALL      UND132 IF NOT LESS
          COMPARE   "55",CLNO            * test for a full page
          CALL      HEAD0000 IF NOT LESS
.
.----- format the amount for printing ----
.
          CLEAR     DIM28
          PACK      KEY14,APINLED,APINACC
          UNPACK    SP70,FMAMDESC
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          MOVE      FMAMDESC,DIM28
.
          MOVE      APINQTY,IQUANT
.
.---- print supplier if desired ----
.
PLIN9100  PACK      APMACN1,SP70
          PACK      KEY5,APINCRD,SP70
          MATCH     "~~",KEY5
          GOTO      PLIN9150 IF NOT EQUAL
.
          CALL      GETBAT00            * Get Batch# for Non-Spec Cred Ret KEY8
          CALL      RDAPNS1
          MOVE      APNSNA1,APMACN1
          GOTO      PLIN9160
.
PLIN9150  CALL      RDAPMA1
.
PLIN9160  MATCH     APMACN1,LASTNAME
          GOTO      PLIN9200 IF EQUAL       * same as last creditor ?
.
          PACK      LASTNAME,APMACN1,SP70
          ADD       TWO,CLNO
          MATCH     SP70,REFDESC2           * print invoice ref ?
          IF        @EQUAL
            MOVE      SP70,INVREF
          ELSE
            MOVE      APINREF,INVREF
          ENDIF
          PRINT     *N,APINCRD,*17,APMACN1,*50,APINDOC,*67,INVREF;
          COMPARE   ZERO,APIMGST
          GOTO      PLIN9200 IF EQUAL
.
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APIMGST,OUTFORM2
          MATCH     ANSP,APIMPAYG
          IF        @EQUAL
            PRINT     *83,"P.A.Y.G. :",*93,OUTFORM2;
          ELSE
            PRINT     *83,"G.S.T.   :",*93,OUTFORM2;
          ENDIF
.
PLIN9200  MOVE      FORMAT2,OUTFORM2
          FEDIT     APINAMT,OUTFORM2
.
          MATCH     "~~",KEY5
          GOTO      PLIN9210 IF EQUAL
.
          MATCH     "Cheque Print",APIMDOC
          GOTO      PLIN9250 IF EQUAL
.
PLIN9210  CALL      GETSIN00
          IF        BASFLAG=1
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*54,APINBASC,*58,APINDES:
                      *93,OUTFORM2;
          ELSE
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*58,APINDES:
                      *93,OUTFORM2;
          ENDIF
          ADD       ONE,CLNO             * increment the row
          GOTO      PLIN9999
.
PLIN9250  CALL      GETSIN00
          UNPACK    APINDES,KEY5,KEY15,KEY8,KEY3,KEY1
          MOVE      KEY1,F1
          CLEAR     KEY34
          IF        F1=0
            APPEND    "IN Batch ",KEY34
          ELSE
            APPEND    "CR Batch ",KEY34
          ENDIF
          APPEND    KEY5,KEY34
          APPEND    " Ref ",KEY34
          STRIP     KEY15
          APPEND    KEY15,KEY34
          RESET     KEY34
          IF        BASFLAG=1
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*54,APINBASC,*58,KEY34:
                      *93,OUTFORM2;
          ELSE
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*58,KEY34:
                      *93,OUTFORM2;
          ENDIF
          ADD       ONE,CLNO             * increment the row
.
PLIN9999  RETURN
.
.----------------------------------------------------------------------
. Get Sin Catalog Code
.----------------------------------------------------------------------
GETSIN00  COMPARE   ONE,INCOSTYP
          GOTO      GETSIN99 IF NOT EQUAL
.
          MATCH     SP70,APINORD
          GOTO      GETSIN99 IF EQUAL
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1          * Read Inventory Directory
          BRANCH    OVRCD,GETSIN99
.
          MOVE      "sinpocaf",KEY8
          PACK      KEY80,APISDIR,KEY8
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SINPOCA1,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,GETSIN99
.
          MOVE      APINCAT,KEY3
          PACK      KEY10,KEY7,KEY3,SP70
          CALL      RDSIPC1
          BRANCH    OVRCD,GETSIN99
          MATCH     SP70,SIPCCAT
          IF        !@EQUAL
            MOVE      SIPCCAT,APINCAT
          ENDIF
.         CLOSE     SINPOCA1           srf 616745 & 641977
.
GETSIN99  RETURN
.----------------------------------------------------------------------
. Get the Payments Batch Number for Cancelled Cheques and Reinstatements
.----------------------------------------------------------------------
GETBAT00  UNPACK    KEY5,KEY2,KEY3
          PACK      KEY8,APINBCH,KEY3
.
          MATCH     "3",APIMTYP           * Cancelled Cheque
          CALL      IMSBCH00 IF EQUAL
.
          MATCH     "4",APIMTYP           * Reinstated Cheque
          CALL      IMSBCH00 IF EQUAL
.
GETBAT99  RETURN
.----------------------------------------------------------------------
. Get the Payments Batch Number from the apsimsaf file
. RETURNS   KEY8 set for reading non-spec. cred. apsnscaf file
.----------------------------------------------------------------------
. ------- Save Current Record Positions
IMSBCH00  PACK      KEY41,APINBCH,APINCRD,APINREF,APINDOC,SP70
          PACK      KEY52,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
.
. ------- Get Matching Payments Batch Number
          PACK      KEY40,APINCRD,APINDOC,APINREF,SP70
          CALL      RSAPIM4
.
IMSBCH10  CALL      RKAPIM4
          BRANCH    OVRCD,IMSBCH90
.
          PACK      KEY35,APINCRD,APINDOC,APINREF,SP70
          MATCH     KEY35,KEY40
          GOTO      IMSBCH90 IF NOT EQUAL
.
          MATCH     "2",APIMTYP
          GOTO      IMSBCH10 IF NOT EQUAL
.
          MOVE      APIMBCH,APINBCH         * Move in the payments batch number
          UNPACK    KEY5,KEY2,KEY3
          PACK      KEY8,APIMBCH,KEY3
.
. ------- Reset original position in the invoice files.
IMSBCH90  PACK      KEY40,KEY41
          CALL      RDAPIM1
.
          PACK      KEY51,KEY52
          CALL      RDAPIN1
.
IMSBCH99  RETURN
.----------------------------------------------------------------------
. List Batch - Summary
.----------------------------------------------------------------------
LSTBCH00
          CLOSE     FMSAMAA1
          CLOSE     FMSAMAA2
          CLOSE     FMSAMAA3
          CLOSE     FMSAMAA4
          OPEN      IBACODE1,"ibacodef"
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
          CALL      OPNPRINT
          MOVE      ZERO,CPAGENO
          MOVE      "88",CLNO
          CLOCK     TIME,CTIMEIS
          PACK      KEY40,APBMBCH,SP70
          MOVE      SP70,KEY5
          CALL      RSAPIM1
LSTBCH10
          CALL      RKAPIM1
          BRANCH    OVRCD,LSTBCH90
          MATCH     APIMBCH,APBMBCH
          GOTO      LSTBCH90 IF NOT EQUAL
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEDBCH00 IF NOT LESS
          MATCH     APIMCRD,KEY5
          IF        !@EQUAL
            MOVE    APIMCRD,KEY5
            MATCH   "~~",APIMCRD
            IF      @EQUAL
              UNPACK  KEY5,KEY2,KEY3
              PACK    KEY8,APIMBCH,KEY3
              CALL    RDAPNS1
              PRINT     "| ",KEY5,SP1,APNSNA1,*80,"|"
            ELSE
              CALL    RDAPMA1
              PRINT     "| ",APMACRD,SP1,APMACN1,*80,"|"
            ENDIF
            ADD     ONE,CLNO
          ENDIF
          MATCH     "3",APIMTYP
          IF        @EQUAL
            PRINT     "|  Cancelled",*32,APIMDOC,*48,APIMREF,*64,APIMPAY," |"
          ELSE
            PRINT     "|  Reinstated",*32,APIMDOC,*48,APIMREF,*64,APIMPAY," |"
          ENDIF
          GOTO      LSTBCH10
.
LSTBCH90  IF        CPAGENO>0
            CALL      UND80
            PRINT     *25,"*** End of List ***"
            CALL      SELPRINT
            CALL      CLSPRINT
            MOVE      THREE,EXIT
          ELSE
            MOVE      "No Entries in That Batch - ",DISPMSG
            CALL      MESSAGE1
            CALL      CLSPRINT
            MOVE      ONE,EXIT
          ENDIF
          CLOSE     IBACODE1
...       CLOSE     IBAPRNT1
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
          OPEN      FMSAMAA4,"fmsamaaf"
          RETURN
.
HEDBCH00
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,KEY10
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      KEY12,CPCDATE,SP70
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CALL      HEAD80
          PRINT     "Batch Number  : ",APBMBCH,*35,"Operator          : ":
                    SECUSER
          PRINT     "Date Entered  : ",KEY10,*35,"Accounting Period : ",KEY12:
                    PERDESC
          PRINT     "Total Entered : ",APBMTOT,*35,"Calculated Total  : ":
                    BATCHCAL
          CALL      UND80
          PRINT     "| Creditor                     Cheque":
                    " No.      Invoice Ref.            Payment |"
          CALL      UND80
          MOVE      "7",CLNO
          RETURN


.----------------------------------------------------------------------
. Enter Cheque Account
.----------------------------------------------------------------------
KCHAC000
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
          CALL      RKAPIM1
          BRANCH    OVRCD,KCHAC900
          MATCH     APIMBCH,APBMBCH
          GOTO      KCHAC900 IF NOT EQUAL
.
          MOVE      "Transactions Exist - Field Cannot Be Modified - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCHAC999
.
KCHAC900  CALL      KFMCHA00
          MOVE      FMCHCHQ,APBMCHQ
.
KCHAC999  RETURN
.
.----------------------------------------------------------------------
. Read Line Item Details
.----------------------------------------------------------------------
RDET0000  MATCH     "3",APIMTYP
          IF        @EQUAL
            MOVE      "Cancel   ",CANDESC
          ELSE
            MOVE      "Reinstate",CANDESC
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Delete Cancelled Cheque
.----------------------------------------------------------------------
DELCHQ00  MOVE     "Delete Cancellation. ",DISPMSG
          CALL     MESSAGE4
          BRANCH   EXIT,DELCHQ90
          SUB      SAVETOT,BATCHCAL
          PACK     KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          PACK     KEY25,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          CALL     RSAPIM5
DELCHQ10
          CALL     RKAPIM5
          BRANCH   OVRCD,DELCHQ80
          PACK     KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          MATCH    KEY25,KEY40
          GOTO     DELCHQ80 IF NOT EQUAL
          PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          PACK     KEY51,KEY40,SP70
          CALL     RSAPIN1
DELCHQ20
          CALL     RKAPIN1
          BRANCH   OVRCD,DELCHQ30
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH    KEY40,KEY51
          GOTO     DELCHQ30 IF NOT EQUAL
.
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL     DEAPIN1
          CALL     RSAPIN1
          GOTO     DELCHQ20
DELCHQ30
          PACK     KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF
          CALL     DEAPCL1
          PACK     KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          CALL     DEAPIM5
          CALL     RSAPIM5
          GOTO     DELCHQ10
.
DELCHQ80  MOVE     "2",EXIT
          GOTO     DELCHQ99
.
DELCHQ90  MOVE     "1",EXIT
.
DELCHQ99  RETURN
.
.
.****************************************************************************
. Check if a document reference exists in another fms batch awaiting update
.         Requires : FMBNREF - (DIM 15)  Document reference
.         Returns  : OVRCD     (0=not found, 1=found)
.                    APCL record where reference was found
.
. This routine is designed specifically to check if a particular cheque
. number has already been used in a batch which has not yet been updated
. in the FMS system (in fmsbnkaf)
.****************************************************************************
CKDOC000  PACK      KEY40,FMBNREF,SP70
          CALL      RSAPCL1
.
CKDOC100  CALL      RKAPCL1            * check if reference exists
          BRANCH    OVRCD,CKDOC900
          MATCH     FMBNREF,APCLDOC
          GOTO      CKDOC900 IF NOT EQUAL
.
          MATCH     APCLBCH,APBMBCH    * same batch ?
          GOTO      CKDOC950 IF NOT EQUAL
          MATCH     SP70,APMACRD
          IF        !@EQUAL
            MATCH     APCLCRD,APMACRD  * same creditor ?
            GOTO      CKDOC950 IF NOT EQUAL
          ENDIF
          GOTO      CKDOC100
.
.
CKDOC900  MOVE      ZERO,OVRCD
          GOTO      CKDOC999
.
CKDOC950  MOVE      ONE,OVRCD
.
CKDOC999  RETURN
.----------------------------------------------------------------------
. Enter Cheque to Cancel
.----------------------------------------------------------------------
KCHEQ000  MOVE     SP70,DOCREF
          MOVE     SP70,APIMDOC
          MOVE     ZERO,CKEYTYP
          MOVE     "0",FMBNTYP
          MOVE     APBMCHQ,FMBNBNK
          MOVE     SP70,APIMDOC
          CALL     KFMBNZ00
          BRANCH   EXIT,KCHEQ999,KCHEQ999
.
          MOVE      SP70,APMACRD
          CALL      CKDOC000
          IF        OVRCD=1
            SQUEEZE   FMBNREF
            CLEAR     DISPMSG
            APPEND    "Cheque ",DISPMSG
            APPEND    FMBNREF,DISPMSG
            APPEND    " Already Exists in Batch ",DISPMSG
            APPEND    APCLBCH,DISPMSG
            APPEND    " - ",DISPMSG
            CALL      MESSAGE1
            PACK      FMBNREF,FMBNREF,SP70
            GOTO      KCHEQ000
          ENDIF
.
          UNPACK   FMBNREF,KEY7,KEY8
          MOVE     KEY8,CHEQNUMB
          MOVE     FMBNCRE,APMACRD
          MATCH    "1",FMBNPRE
          IF       @EQUAL
            MOVE     "Cheque has been Presented - ",DISPMSG
            BEEP
            CALL     MESSAGE1
            GOTO     KCHEQ000
          ENDIF
          MATCH    "2",FMBNPRE
          IF       @EQUAL
            MOVE     "Cheque has been Cancelled. - ",DISPMSG
            BEEP
            CALL     MESSAGE1
            GOTO     KCHEQ000
          ENDIF
.
          MATCH    "~~",FMBNCRE
          IF       @EQUAL
            UNPACK   FMBNCRE,KEY2,KEY3
            PACK     KEY8,FMBNBCH,KEY3
            CALL     RDAPNS1
            MOVE     FMBNCRE,APMACRD
            MOVE     APNSNA1,APMACN1
            MOVE     APNSNA2,APMACN2
            MOVE     APNSAD1,APMACA1
            MOVE     APNSAD2,APMACA2
            MOVE     APNSAD3,APMACA3
            MOVE     APNSPC,APMACPC
          ELSE
            MOVE     FMBNCRE,KEY5
            CALL     RDAPMA1
          ENDIF
.
          STRIP    APMACN1
          STRIP    APMACN2
          CLEAR    CRDNAM80
          APPEND   APMACN1,CRDNAM80
          APPEND   SP1,CRDNAM80
          APPEND   APMACN2,CRDNAM80
          RESET    CRDNAM80
.
          STRIP    APMACA1
          STRIP    APMACA2
          STRIP    APMACA3
          STRIP    APMACPC
          CLEAR    CRDADD80
          APPEND   APMACA1,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACA2,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACA3,CRDADD80
          APPEND   SP1,CRDADD80
          APPEND   APMACPC,CRDADD80
          RESET    CRDADD80
.
          MOVE     "3",SAVETYPE
          PACK     KEY25,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          PACK     KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          CALL     RDAPIM5
          IF       OVRCD=0
            CALL     RPAPIM5
          ENDIF
.
          CALL     RKAPIM5
          BRANCH   OVRCD,KCHEQ090
          PACK     KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF,SP70
          MATCH    KEY25,KEY40
          GOTO     KCHEQ090 IF NOT EQUAL
.
          MOVE     APIMTYP,SAVETYPE
          MOVE     APIMICM,CANNOTE0
          MOVE     APIMCM1,CANNOTE1
          MOVE     APIMCM2,CANNOTE2
          MOVE     APIMDDT,DATECANC
          MATCH    "3",APIMTYP
          IF       @EQUAL
            MOVE     "Cancel   ",ISCANCEL
          ELSE
            MOVE     "Reinstate",ISCANCEL
          ENDIF
          MOVE     ZERO,PAYTOTAL
          PACK     KEY25,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          PACK     KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          CALL     RDAPIM5
          IF       OVRCD=0
            CALL     RPAPIM5
          ENDIF
.
KCHEQ050  CALL     RKAPIM5
          BRANCH   OVRCD,KCHEQ300
          PACK     KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF,SP70
          MATCH    KEY25,KEY40
          GOTO     KCHEQ300 IF NOT EQUAL
          MATCH    SP15,APIMREF
          IF       @EQUAL
            BEEP
            MOVE     "Cannot Cancel Payment in Suspense - ",DISPMSG
            CALL     MESSAGE1
            GOTO     KCHEQ200
          ENDIF
          ADD      APIMPAY,PAYTOTAL
          GOTO     KCHEQ050
.
KCHEQ090  MOVE     APBMBCH,BSAVEBCH
          MOVE     APBMCHQ,BSAVECHQ
          MOVE     APBMRES,BSAVERES
          MOVE     APBMDIS,BSAVEDIS
.
          MOVE     ZERO,PAYTOTAL
          PACK     KEY20,APMACRD,SP7,CHEQNUMB,SP70
          PACK     KEY40,APMACRD,SP7,CHEQNUMB,SP70
          CALL     RDAPIM4
          IF       OVRCD=0
            CALL     RPAPIM4
          ENDIF
.
KCHEQ100  CALL     RKAPIM4
          BRANCH   OVRCD,KCHEQ200
          PACK     KEY40,APIMCRD,APIMDOC,SP70
          MATCH    KEY20,KEY40
          GOTO     KCHEQ200 IF NOT EQUAL
          MATCH    BSAVEBCH,APIMBCH
          GOTO     KCHEQ100 IF EQUAL
          MOVE     APIMBCH,KEY5
          CALL     RDAPBM1
          BRANCH   OVRCD,KCHEQ100
          MATCH    BSAVECHQ,APBMCHQ
          GOTO     KCHEQ100 IF NOT EQUAL
.
          MATCH    SP15,APIMREF
          IF       @EQUAL
            BEEP
            MOVE     "Cannot Cancel Payment in Suspense - ",DISPMSG
            CALL     MESSAGE1
            GOTO     KCHEQ200
          ENDIF
.
          ADD      APIMPAY,PAYTOTAL
.
          CALL     KCDET000     * Get Details of cheque for APIN file
          MOVE     BSAVEBCH,APIMBCH
          PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL     RAAPIM1
          IF       OVRCD=1
            MOVE     "3",APIMTYP
            MOVE     "0",APIMUPD
            MOVE     KEY40,SAVKEY40
            CALL     WRAPIM1
.
            PACK      KEY40,APIMDOC,APIMBCH,APIMCRD,APIMREF * write to chq file
            UNPACK    KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF
            CALL      RAAPCL1
            COMPARE   ONE,OVRCD
            CALL      WRAPCL1 IF EQUAL
.
            PACK     KEY35,APIMCRD,APIMREF,APIMREF,SP70
            PACK     KEY40,APIMCRD,APIMREF,APIMREF,Z70
            CALL     RSAPIM3
            CALL     RPAPIM3
            IF       OVRCD=0
              PACK     KEY40,APIMCRD,APIMREF,APIMREF,APIMBCH
              MATCH    KEY35,KEY40
              IF       @EQUAL
                MOVE     APIMPDT,KEY8
                MOVE     SAVKEY40,KEY40
                CALL     RDAPIM1
                IF       OVRCD=0
                  MOVE     KEY8,APIMPDT
                  CALL     UPAPIM1
                ENDIF
              ENDIF
            ENDIF
          ENDIF
          GOTO     KCHEQ100
.
KCHEQ200  MOVE     BSAVEBCH,KEY5
          CALL     RDAPBM1
          MOVE     ONE,OVRCD
          MOVE     ONE,ACCEPT
          GOTO     KCHEQ999
.
KCHEQ300  MOVE     ZERO,OVRCD
          MOVE     ZERO,ACCEPT
.
KCHEQ999  RETURN
.----------------------------------------------------------------------
.  Retrieve data from payment batch
.     Requires : SAVETYPE (3=cancel payment, 4=reinstate invoice)
.                APIM read for payment batch
.                BSAVEBCH current batch number
.----------------------------------------------------------------------
KCDET000  PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK     KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL     RSAPIN1
.
KCDET100  CALL     RKAPIN1
          BRANCH   OVRCD,KCDET999
          PACK     SAVKEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH    KEY40,SAVKEY51
          GOTO     KCDET999 IF NOT EQUAL
.
          MOVE     APINACC,SAVEACC
          MOVE     BSAVEBCH,APINBCH
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL     RDAPIN1
          MOVE     OVRCD,SAVOVRCD
.
          MOVE      ZERO,APINUPD          * not updated
          MATCH     "4",SAVETYPE
          IF        @EQUAL
            PACK      KEY2,APINLED          * use cred control for reinstate
            CALL      RDFMLA1
            PACK      KEY14,APINLED,SAVEACC
            CALL      RDFMAM1
            CALL      RFMCOT00
            MOVE      SP3,APINBASC
            MATCH     ANSZ,APINPAYG
            IF        @EQUAL
               MOVE     FMLAPAYG,APINACC
            ELSE
              MOVE      FMCSCRD,APINACC
            ENDIF
          ELSE
            MOVE      SAVEACC,APINACC       * use old account for cancel
          ENDIF
.
          PACK     APINRES,BSAVERES,SP70
          PACK     APINDIS,BSAVEDIS,SP70
          IF       SAVOVRCD=1
            CALL     WRAPIN1
          ELSE
            CALL     UPAPIN1
          ENDIF
.
          MATCH    "~~",APIMCRD
          GOTO     KCDET500 IF EQUAL
.
          MATCH    "4",SAVETYPE
          GOTO     KCDET500 IF EQUAL
.
          MOVE     KEY51,INVKEY51
          UNPACK   APINDES,INVBCH,INVREFER,INVORD,INVLIN,INVREST
          PACK     KEY51,INVBCH,APIMCRD,INVREFER,INVREFER,INVORD,INVLIN,SP70
          CALL     RDAPIN1
          IF       OVRCD=1
            MOVE     SP3,INVBASC
          ELSE
            MOVE     APINBASC,INVBASC
          ENDIF
.
          MOVE     INVKEY51,KEY51
          CALL     RDAPIN1
          BRANCH   OVRCD,KCDET500
.
          MOVE     INVBASC,APINBASC
          CALL     UPAPIN1
.
KCDET500  MOVE     SAVKEY51,KEY51
          CALL     RDAPIN1
          GOTO     KCDET100
.
KCDET999  RETURN
.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSBNKKY
.   Routine   :   KFMBNZ00 Keyin Cheque
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KFMBNZ00  TOPIC     "FMBNREF "
          MOVE      UNDLN70,KEY8
          KEYIN     *PCCOL:CVERT,*DV,KEY8:
                    *PCCOL:CVERT,*V2LON,*JR,KEY8:
                    *PCCOL:CVERT,*DV,KEY8
.
          REP       UPPLOW,KEY8
          ENDSET    KEY8
          APPEND    SP70,KEY8
          RESET     KEY8
.
          MATCH     SP70,KEY8
          GOTO      KFMBNZ90 IF EQUAL
.
          ENDSET    KEY8
          CMATCH    EXITCHAR,KEY8
          GOTO      KFMBNZ95 IF EQUAL
          CMATCH    ANSX,KEY8
          GOTO      KFMBNZ95 IF EQUAL
.
          CMATCH    QUEST,KEY8
          GOTO      KFMBNZ10 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      QFMBNA00            * Cheque Help
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMBNREF
          APPEND    SP70,FMBNREF
          RESET     FMBNREF
.
          MATCH     SP70,FMBNREF
          GOTO      KFMBNZ00 IF EQUAL
          UNPACK    FMBNREF,KEY7,KEY8
.
          DISPLAY   *PCCOL:CVERT,*V2LON,KEY8
.
KFMBNZ10  RESET     KEY8
          TYPE      KEY8
          GOTO      KFMBNZ76 IF NOT EQUAL
          PACK      FMBNREF,SP7,KEY8
          PACK      KEY36,FMBNBNK,FMBNTYP,FMBNREF,SP70
          CALL      RSFMBN2
          CALL      RKFMBN2
          BRANCH    OVRCD,KFMBNZ80
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,SP70
          MATCH     KEY31,KEY36
          GOTO      KFMBNZ80 IF NOT EQUAL
          BRANCH    CKEYTYP,KFMBNZ75
.
KFMBNZ70  MOVE      ZERO,EXIT
          GOTO      KFMBNZ99
.
KFMBNZ75  MOVE      "Cheque Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMBNZ00
.
KFMBNZ76  MOVE      "Cheque No. Must be Numeric - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMBNZ00
.
KFMBNZ80  MOVE      SP70,FMBNLED
          MOVE      SP70,FMBNACC
          MOVE      SP70,FMBNDAT
          MOVE      SP70,FMBNPRE
          MOVE      SP70,FMBNPDT
          MOVE      ZERO,FMBNAMT
          MOVE      SP70,FMBNFYR
          MOVE      SP70,FMBNBCH
          MOVE      SP70,FMBNLNO
          MOVE      SP70,FMBNCRE
          MOVE      SP70,FMBNNAM
          MOVE      SP70,FMBNSPAR
          MOVE      SP70,FMBNUNQ
          UNPACK    KEY36,FMBNBNK,FMBNTYP,FMBNREF
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMBNZ99,KFMBNZ99
          MOVE      "Cheque Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMBNZ00
.
KFMBNZ90  MOVE      ONE,EXIT
          GOTO      KFMBNZ99
.
KFMBNZ95  MOVE      TWO,EXIT
.
KFMBNZ99  TOPIC     PRGID
          RETURN
.
.----------------------------------------------------------------------
. Enter Date Cancelled
.----------------------------------------------------------------------
ECCDT000
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,ECCDT900
          BRANCH    CQUEST,ECCDT000
          MATCH     SP70,CDAY
          GOTO      ECCDT900 IF EQUAL
.
          PACK      DATECANC,CCENT,CYEAR,CMON,CDAY
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",DATECANC
          REP       " 0",KEY8
          MATCH     KEY8,DATECANC
          GOTO      ECCDT800 IF EQUAL
          IF        !@LESS
            MOVE      "Date in the Future. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,ECCDT000
            GOTO      ECCDT800
          ENDIF
.
          UNPACK    DATECANC,KEY4,KEY2
          MOVE      KEY4,TSTCCYY1
          MOVE      KEY2,TSTMM1
.
          UNPACK    KEY8,KEY4,KEY2
          MOVE      KEY4,TSTCCYY2
          MOVE      KEY2,TSTMM2
          IF        TSTCCYY2-TSTCCYY1>1
            MOVE      "Date Over 1 Year. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,ECCDT000
            GOTO      ECCDT800
          ENDIF
          IF        TSTCCYY2=TSTCCYY1
            IF        TSTMM2-TSTMM1>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,ECCDT000
              GOTO      ECCDT800
            ENDIF
          ELSE
            IF        TSTMM2-TSTMM1+12>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,ECCDT000
              GOTO      ECCDT800
            ENDIF
          ENDIF
.
ECCDT800
          CALL      RKAPIM5        * to Maintain Position in the File
          PACK      SAVKEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
.
          PACK      KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          PACK      KEY25,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          CALL      RSAPIM5
ECCDT810
          CALL      RKAPIM5
          BRANCH    OVRCD,ECCDT890
          PACK      KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          MATCH     KEY25,KEY40
          GOTO      ECCDT890 IF NOT EQUAL
          MOVE      DATECANC,APIMDDT
          CALL      UPAPIM5
          GOTO      ECCDT810
.
ECCDT890
          MOVE      SAVKEY40,KEY40
          CALL      RSAPIM5
          CALL      RPAPIM5
          MOVE      ZERO,EXIT
          GOTO      ECCDT999
.
ECCDT900  MOVE      TWO,EXIT
ECCDT999  RETURN
.----------------------------------------------------------------------
. Cancel or Reinstate
.----------------------------------------------------------------------
ECANC000
          MATCH     "~~",APMACRD        * Non Specific Creditors Must be
          GOTO      ECANC350 IF EQUAL   * Cancelled
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2
.
          DISPLAY   *P1:24,*EL,"Default to ":
                               *V2LON,"C",*HOFF,"ancel or ":
                               *V2LON,"R",*HOFF,"einstate for Invoice Details"
ECANC100
          KEYIN     *PCCOL:CVERT,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      ECANC200 IF EQUAL
          MATCH     ANSC,ANS
          GOTO      ECANC300 IF EQUAL
          BEEP
          GOTO      ECANC100
.
ECANC200  MOVE      "Reinstate",ISCANCEL
          GOTO      ECANC500
.
ECANC300  MOVE      "Cancel   ",ISCANCEL
          GOTO      ECANC500
.
ECANC350  MOVE      "Cancel   ",ISCANCEL
          BRANCH    ACCEPT,ECANC999
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EL,"Non Specific Creditor Payments Must be ":
                               "Cancelled. ";
          CALL      HITENTER
          GOTO      ECANC900
.
ECANC500  COMPARE   ZERO,ACCEPT
          GOTO      ECANC900 IF EQUAL
          CALL      RKAPIM5
          PACK      SAVKEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          PACK      KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          PACK      KEY25,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          CALL      RSAPIM5
ECANC600
          CALL      RKAPIM5
          BRANCH    OVRCD,ECANC800
          PACK      KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          MATCH     KEY25,KEY40
          GOTO      ECANC800 IF NOT EQUAL
          MATCH     SP70,APIMREF            * No Reinstate for payment without
          GOTO      ECANC600 IF EQUAL       * Reference Number
          MATCH     "Cancel   ",ISCANCEL
          IF        @EQUAL
            MOVE      "3",APIMTYP
          ELSE
            MOVE      "4",APIMTYP
          ENDIF
          CALL      UPAPIM5
.
.---- update data from payment ----
.
          MOVE      APIMTYP,SAVETYPE
          MOVE      KEY40,XAVKEY40          * save current key
          PACK      KEY20,APIMCRD,APIMDOC,SP70
          PACK      KEY40,APIMCRD,APIMDOC,SP70
          CALL      RSAPIM4
ECANC700
          CALL      RKAPIM4
          BRANCH    OVRCD,ECANC750
          PACK      KEY40,APIMCRD,APIMDOC,SP70
          MATCH     KEY20,KEY40
          GOTO      ECANC750 IF NOT EQUAL
          MATCH     APBMBCH,APIMBCH
          GOTO      ECANC700 IF EQUAL
.
          CALL      KCDET000                * retrieve data from payment
          GOTO      ECANC700
.
ECANC750  MOVE      XAVKEY40,KEY40          * restore current record
          CALL      RDAPIM5
          GOTO      ECANC600
.
.
ECANC800  MOVE      SAVKEY40,KEY40
          CALL      RSAPIM5
          CALL      RPAPIM5
ECANC900
          CALL      MESSAGE3
ECANC999
          RETURN
.--------------------------------------------------
. Keyin Invoice Description
.--------------------------------------------------
KICM0000  KEYIN     *PCCOL:CVERT,*RV,*V2LON,CANNOTE0
          MOVE      ZERO,EXIT
.
          ENDSET    CANNOTE0
          APPEND    SP70,CANNOTE0
          RESET     CANNOTE0
.
          MATCH     SP70,CANNOTE0
          GOTO      KICM1000 IF EQUAL
.
          CMATCH    QUEST,CANNOTE0
          GOTO      KICM0010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMTDA00
          MOVE      SCCITEM,CCITEM
.
          MOVE      FMTDCODE,CANNOTE0
          ENDSET    CANNOTE0
          APPEND    SP70,CANNOTE0
          RESET     CANNOTE0
.
          MATCH     SP70,CANNOTE0
          GOTO      KICM0000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,CANNOTE0
KICM0010
.
          MOVE      ZERO,EXIT
          PACK      KEY4,CANNOTE0,SP70
          PACK      KEY50,KEY4,SP70
          MATCH     KEY50,CANNOTE0
          IF        @EQUAL
            CALL      RDFMTD1
            BRANCH    OVRCD,KICM1000
            MOVE      FMTDDESC,CANNOTE0
            MATCH     KEY50,CANNOTE0
            GOTO      KICM0000 IF NOT EQUAL
          ENDIF
.
KICM1000  CALL      RKAPIM5
          PACK      SAVKEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          PACK      KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          PACK      KEY25,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          CALL      RSAPIM5
KICM1600  CALL      RKAPIM5
          BRANCH    OVRCD,KICM1999
          PACK      KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          MATCH     KEY25,KEY40
          GOTO      KICM1999 IF NOT EQUAL
          MOVE      CANNOTE0,APIMICM
          CALL      UPAPIM5
          GOTO      KICM1600
KICM1999  MOVE      SAVKEY40,KEY40
          CALL      RSAPIM5
          CALL      RPAPIM5
          RETURN
.
.--------------------------------------------------
. Enter comment line 1
.--------------------------------------------------
EREMA000  MOVE      ZERO,EXIT
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,CANNOTE1:
                    *PCCOL:CVERT
          ENDSET    CANNOTE1
          APPEND    SP70,CANNOTE1
          RESET     CANNOTE1
          CMATCH    EXITCHAR,CANNOTE1
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      EREMA999
          ENDIF
          MATCH     SP70,CANNOTE1
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
.
          CALL      RKAPIM5
          PACK      SAVKEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          PACK      KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          PACK      KEY25,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          CALL      RSAPIM5
.
EREMA600  CALL      RKAPIM5
          BRANCH    OVRCD,EREMA900
          PACK      KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          MATCH     KEY25,KEY40
          GOTO      EREMA900 IF NOT EQUAL
          MOVE      CANNOTE1,APIMCM1
          CALL      UPAPIM5
          GOTO      EREMA600
.
EREMA900  MOVE      SAVKEY40,KEY40
          CALL      RSAPIM5
          CALL      RPAPIM5
.
EREMA999  RETURN
.
.--------------------------------------------------
. Enter comment line 1
.--------------------------------------------------
EREMB000  MOVE      ZERO,EXIT
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,CANNOTE2:
                    *PCCOL:CVERT
          ENDSET    CANNOTE2
          APPEND    SP70,CANNOTE2
          RESET     CANNOTE2
          CMATCH    EXITCHAR,CANNOTE2
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      EREMB999
          ENDIF
          MATCH     SP70,CANNOTE2
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
.
          CALL      RKAPIM5
          PACK      SAVKEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          PACK      KEY40,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          PACK      KEY25,APBMBCH,APMACRD,SP7,CHEQNUMB,SP70
          CALL      RSAPIM5
.
EREMB600  CALL      RKAPIM5
          BRANCH    OVRCD,EREMB900
          PACK      KEY40,APIMBCH,APIMCRD,APIMDOC,APIMREF
          MATCH     KEY25,KEY40
          GOTO      EREMB900 IF NOT EQUAL
          MOVE      CANNOTE2,APIMCM2
          CALL      UPAPIM5
          GOTO      EREMB600
.
EREMB900  MOVE      SAVKEY40,KEY40
          CALL      RSAPIM5
          CALL      RPAPIM5
.
EREMB999  RETURN
.
.--------------------------------------------------
. Modify Cancelled Cheque Invoice Details
.--------------------------------------------------
MODINV00  MATCH     "~~",APMACRD
          GOTO      MODINV95 IF EQUAL
.
          CALL      RDAPIM5
          BRANCH    OVRCD,MODINV90
.
          MATCH     SP70,APIMREF
          GOTO      MODINV96 IF EQUAL
.
          MOVE      ZERO,ACCEPT
.
          CALL      SC02L000
.
          GOTO      MODINV99
.
MODINV90  BEEP
          GOTO      MODINV99
.
MODINV95  BEEP
          MOVE      "Mod. Invalid for Non-Specific Creditors. ",DISPMSG
          CALL      MESSAGE1
          GOTO      MODINV99
.
MODINV96  BEEP
          MOVE      "Mod. Invalid for Payments Without Invoice Ref.",DISPMSG
          CALL      MESSAGE1
          GOTO      MODINV99
.
MODINV99  RETURN
WAPIM000  PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      RAAPIM1
          IF        OVRCD=0
            CALL      UPAPIM1
          ELSE
            CALL      WRAPIM1
            UNPACK    KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF
            PACK      KEY40,APCLDOC,APCLBCH,APCLCRD,APCLREF
            CALL      RAAPCL1
            IF        1=OVRCD
              CALL      WRAPCL1
            ENDIF
            PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          ENDIF
.
.---- update transactions ----
.
          MOVE      APIMTYP,SAVETYPE
          MOVE      KEY40,XAVKEY40          * save current key
          PACK      KEY35,APIMCRD,APIMDOC,APIMREF,SP70
          PACK      KEY40,APIMCRD,APIMDOC,APIMREF,SP70
          CALL      RSAPIM4
WAPIM700
          CALL      RKAPIM4
          BRANCH    OVRCD,WAPIM750
          PACK      KEY40,APIMCRD,APIMDOC,APIMREF,SP70
          MATCH     KEY35,KEY40
          GOTO      WAPIM750 IF NOT EQUAL
          MATCH     APBMBCH,APIMBCH
          GOTO      WAPIM700 IF EQUAL
.
          CALL      KCDET000                * retrieve data from payment
          GOTO      WAPIM700
.
WAPIM750  MOVE      XAVKEY40,KEY40          * restore current record
          CALL      RDAPIM1
          RETURN
.----------------------------------------------------------------------
. Cancel or Reinstate
.----------------------------------------------------------------------
ECARE000  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          MATCH     "~~",APMACRD        * Non Specific Creditors Must be
          GOTO      ECARE350 IF EQUAL   * Cancelled
.
          DISPLAY   *P1:24,*EL,*V2LON,"C",*HOFF,"ancel or ":
                               *V2LON,"R",*HOFF,"einstate for Invoice Details"
.
ECARE100  KEYIN     *PCCOL:CVERT,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      ECARE200 IF EQUAL
          MATCH     ANSC,ANS
          GOTO      ECARE300 IF EQUAL
          BEEP
          GOTO      ECARE100
.
ECARE200  MOVE      "Reinstate",CANDESC
          MOVE      "4",APIMTYP
          GOTO      ECARE999
.
ECARE300  MOVE      "Cancel   ",CANDESC
          MOVE      "3",APIMTYP
          GOTO      ECARE999
.
ECARE350  MOVE      "Cancel   ",CANDESC
          MOVE      "3",APIMTYP
          DISPLAY   *P1:24,*EL,"Non Specific Creidtor Payments Must be ":
                               "Cancelled. ";
          CALL      HITENTER
          GOTO      ECARE999
.
ECARE999  CALL      MESSAGE3
          RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APS16CD     
          INC       APSAPYCD    
          INC       APSAPYIO/INC
          INC       APSBMFIO/INC
          INC       APSBMFKY    
          INC       APSCAFIO/INC
          INC       APSCILIO/INC
          INC       APSCIOIO/INC
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSISLIO/INC
          INC       APSMASIO/INC
          INC       APSNSCIO/INC
          INC       APSOPNCD    
          INC       APSORDIO/INC
          INC       APSSUBIO/INC
          INC       FMSAMAIO/INC
          INC       FMSBCFIO/INC
          INC       FMSBNKIO/INC
          INC       FMSBNKKY    
          INC       FMSCAFIO/INC
          INC       FMSCHQIO/INC
          INC       FMSCHQKY    
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSDISIO/INC
          INC       FMSDISKY    
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSRESIO/INC
          INC       FMSRESKY    
          INC       FMSTDSIO/INC
          INC       FMSTDSKY    
          INC       FMSTUPIO/INC
          INC       IBABATIO/INC
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINFACIO/INC
          INC       SINORIIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINWARIO/INC
.
          INC       STDGENCD
.
