.***************************************************************************
.* System    :   CIAS                                                      *
.* Program   :   IBACCC77                                                  *
.* Desc      :   CIAS PowerPlay Analysis generation                        *
.***************************************************************************
.* Date      :   17/03/2004                                                *
.* Author    :   Ebon Clements                                             *
.* Function  :   This program contains the standard code to generate       *
.*               the PowerPlay Analysis files                              *
.***************************************************************************
.* Mods      :                                                             *
.*                                                                         *
.*       V11.00.01  20/03/2020  J.Tan          TSK 0838262                 * 
.*                  Added Effective from and to date to MBS Item file      *
.*       V10.13.01  05/12/2018  Don Nguyen       TSK 0838558               *
.*                  Removed PORT from temp filename (FILENAME)             *
.*       V9.03.00   17/03/2004 Ebon Clements     CAR 45489                 *
.*                  Created Program from IBACIA77                          *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       CCSAADFD/INC
          INC       CCSAGEFD/INC
          INC       CCSCEAFD/INC
          INC       CCSCEBFD/INC
          INC       CCSCECFD/INC
          INC       CCSCEDFD/INC
          INC       CCSCEEFD/INC
          INC       CCSCEFFD/INC
          INC       CCSCEGFD/INC
          INC       CCSCONFD/INC
          INC       CCSEPSFD/INC
          INC       CCSIADFD/INC
          INC       CCSPPYFD/INC
          INC       CCSSTADF
          INC       CCSSTYFD/INC
          INC       CCSTIMFD/INC
          INC       CCSXHDFD/INC
          INC       CIA67TFD
          INC       PATITMFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CASPAYTP  DIM       1
CT1DESC   DIM       35
CT2DESC   DIM       35
CT3DESC   DIM       35
COSTDESC  DIM       10
COMMAND   DIM       127
CMDLINE   DIM       127
DESC      DIM       35
DIMCOD2   DIM       10
DIMCOD3   DIM       10
DIMCOD4   DIM       10
DIMLEV    FORM      1
EXTRSUMM  FORM      1
EXTRBRAN  FORM      3
FILENAME  DIM       8
FLAGOTH   FORM      1
FLAGOTH1  FORM      1
FLAGOTH2  FORM      1
FLAGOTH3  FORM      1
FLAGOTH4  FORM      1
INCODESC  DIM       10
MEASURES  DIM       127
PDIA01    DIM       9
POPP01    DIM       9
SDIA01    DIM       9
SOPP01    DIM       9
THEBAND   DIM       10
QUOTE     INIT      "#""
.
PRGID     INIT      "IBACCC77"
PRGNAM    INIT      "PowerPlay Analysis Generation"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000
.
ML1000    CALL      POWR0000              * Generate PowerPlay analysis files
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML9999    CHAIN     PGM                    * chain back to pr
.
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening ccsaadaf";
          OPEN      CCSAADA1,"ccsaadaf"
          DISPLAY   *P56:24,"Opening ccsaadaf";
          OPEN      CCSAADA2,"ccsaadaf"
          DISPLAY   *P56:24,"Opening ccsageaf";
          OPEN      CCSAGEA1,"ccsageaf"
          DISPLAY   *P56:24,"Opening ccsageaf";
          OPEN      CCSAGEA2,"ccsageaf"
          MOVE      "   64",AUDTSECT
          MOVE      " 37",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening ccsaudep";
            OPEN      CCSAUDEP,"ccsaudep"
          ENDIF
          MOVE      "   64",AUDTSECT
          MOVE      " 38",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening ccsaudia";
            OPEN      CCSAUDIA,"ccsaudia"
          ENDIF
          DISPLAY   *P56:24,"Opening ccsceaaf";
          OPEN      CCSCEAA1,"ccsceaaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA1,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA2,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA3,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA4,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA5,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsiadaf";
          OPEN      CCSIADA1,"ccsiadaf"
          DISPLAY   *P56:24,"Opening ccsppyaf";
          OPEN      CCSPPYA1,"ccsppyaf"
          DISPLAY   *P56:24,"Opening ccsstyaf";
          OPEN      CCSSTYA1,"ccsstyaf"
          DISPLAY   *P56:24,"Opening ccstimaf";
          OPEN      CCSTIMA1,"ccstimaf"
          DISPLAY   *P56:24,"Opening ccsxhdaf";
          OPEN      CCSXHDA1,"ccsxhdaf"
          DISPLAY   *P56:24,"Opening ccsxhdaf";
          OPEN      CCSXHDA2,"ccsxhdaf"
          DISPLAY   *P56:24,"Opening  patitemn           ";
          OPEN      PATITEM1,"patitemn"
          DISPLAY   *P56:24,"Opening  patitemn           ";
          OPEN      PATITEM2,"patitemn"
          DISPLAY   *P56:24,"Opening  patitemn           ";
          OPEN      PATITEM3,"patitemn"
          DISPLAY   *P1:24,*EL
.
INIT9999  RETURN
.
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Generate PowerPlay Extract"
.
OPTN0500  KEYIN     *P1:16,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:16,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
.
.**************************************************************************
.*                               POWR0000              Called by: ML1000  *
.* Generate Casemix Extract                                               *
.**************************************************************************
.
POWR0000  CALL      KEXT0000                     * Keyin PowerPlay extract ID
          BRANCH    EXIT,POWR9999
.
          CALL      CONTQST                      * ok to continue
          BRANCH    CEXIT,POWR5000,POWR9999,POWR9999    * 1=Yes, 2=No, 3=Cancel
.
POWR5000  CALL      POST0000                    * Generate Extract
.
POWR9999  RETURN
.
.------------------------------------------------------------
. Keyin extract ID
.------------------------------------------------------------
KEXT0000  DISPLAY   *P1:4,*EF
          KEYIN     *P1:4,"PowerPlay Extract ID : ",*V2LON,CCPPPID
          ENDSET    CCPPPID
          APPEND    SP70,CCPPPID
          RESET     CCPPPID
.
          MATCH     SP70,CCPPPID
          GOTO      KEXT9000 IF EQUAL
.
          PACK      KEY8,CCPPPID,SP70
          CALL      RDCCPP1
          IF        OVRCD=1
            BEEP
            DISPLAY  *P1:24,"Invalid PowerPlay Extract ID";
            CALL      HITENTER
            GOTO      KEXT0000
          ENDIF
.
          DISPLAY   *P19:4,*V2LON,CCEADES
.
          MOVE      SP70,CT1DESC
          MOVE      SP70,CT2DESC
          MOVE      SP70,CT3DESC
          MOVE      SP70,CCEADES
          MOVE      CCPPEID,KEY4
          CALL      RDCCEA1
.
          MOVE      CCPPCT1,KEY3
          CALL      RDCCST1
          IF        OVRCD=0
            MOVE      CCSTDES,CT1DESC
          ENDIF
          MOVE      CCPPCT2,KEY3
          CALL      RDCCST1
          IF        OVRCD=0
            MOVE      CCSTDES,CT2DESC
          ENDIF
          MOVE      CCPPCT3,KEY3
          CALL      RDCCST1
          IF        OVRCD=0
            MOVE      CCSTDES,CT3DESC
          ENDIF
.
.         CALL      CHKDIM00
.
          MOVE      ZERO,EXIT
          GOTO      KEXT9999
.
KEXT9000  MOVE      ONE,EXIT
          GOTO      KEXT9999
.
KEXT9999  RETURN
.
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Post Changes.
.-------------------------------------------------------------
POST0000  PACK     CCPPCT1,CCPPCT1,SP70
          PACK     CCPPCT2,CCPPCT2,SP70
          PACK     CCPPCT3,CCPPCT3,SP70
          CALL     GETEX000           * Get Extract Details
          IF       CCPPEPS=0
            CALL     EXTR0000
          ELSE
            CALL     CRET0000
          ENDIF
          PACK     KEY8,CCPPPID      * Setup Key
          CALL     RACCPP1            * Check for record on file
          IF       OVRCD=0
            CALL     UPCCPP1          * Update Changes
          ELSE
            CALL     WRCCPP1          * Write New Record
          ENDIF
.
POST9999  RETURN                      * Return to program.
.
.------------------------------------------------------------
. Get Extract Details
.------------------------------------------------------------
GETEX000  MOVE      "Income   ",INCODESC
          MOVE      "Cost     ",COSTDESC
.
          MATCH      SP70,CCEAIMOD
          IF         !@EQUAL
            MOVE       "Model ",KEY6
            PACK       INCODESC,KEY6,CCEAIMOD,SP70
          ENDIF
          MATCH      SP70,CCEACMOD
          IF         !@EQUAL
            MOVE       "Model ",KEY6
            PACK       COSTDESC,KEY6,CCEACMOD,SP70
          ENDIF
.
          MOVE      "   64",AUDTSECT
          READ      CONTROLF,AUDTSECT;*177,CCCOSOPR:
                                      *183,CCCOTH1,CCCOTH2,CCCOTH3,CCCOTH4:
                                           CCCOTF1,CCCOTF2,CCCOTF3,CCCOTF4:
                                           CCCOTT1,CCCOTT2,CCCOTT3,CCCOTT4
          MATCH      SP70,CCEAITHE
          IF         !@EQUAL
            MOVE       CCEAITHE,F1
            LOAD       INCODESC,F1,CCCOTH1,CCCOTH2,CCCOTH3,CCCOTH4
          ENDIF
          MATCH      SP70,CCEACTHE
          IF         !@EQUAL
            MOVE       CCEACTHE,F1
            LOAD       COSTDESC,F1,CCCOTH1,CCCOTH2,CCCOTH3,CCCOTH4
          ENDIF
.
GETEX999  RETURN
.
.------------------------------------------------------------
. Create Export Files
.------------------------------------------------------------
EXTR0000  DISPLAY  *P1:10,*EF
          CALL      OPEN0000
          BRANCH    EXIT,EXTR9999
.
          CALL      OPNTMP00
.
          DISPLAY  *P1:10,*EF
.
          CALL      SUMM0000       * Summarize Data
.
          CALL      CDAT0000       * Create Data File
.
          CALL      CDEF0000       * Create Definitions File
.
          CALL      TRAN0000
.
          CALL      CLSTMP00
.
EXTR9999  RETURN
.------------------------------------------------------------
. Summarize Data
.------------------------------------------------------------
SUMM0000  DISPLAY  *P1:14,*EL,"Summarizing Casemix Extract for Data File"
          MOVE     SP70,DIMCOD2
          MOVE     SP70,DIMCOD3
          MOVE     SP70,DIMCOD4
          PACK     KEY18,SP70
          CALL     RSCCEC1
SUMM1000  CALL     RKCCEC1
          BRANCH   OVRCD,SUMM2000
.
          MATCH    "1",CCECEXC
          GOTO     SUMM1000 IF EQUAL
.
          PACK     KEY18,CCECHCD,CCECEPS
          CALL     RDCCEP1
.
          MOVE     ONE,DIMLEV
          MATCH    "0",CCPPTIM
          IF       !@EQUAL
            CALL     GETTIM00    * Time Analysis
            PACK     KEY10,TIMRANGE,SP70
            MATCH    SP70,KEY10
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,KEY10
            ENDIF
            STORE    KEY10,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    "0",CCPPARE
          IF       !@EQUAL
            PACK     KEY10,CCEPPCD,SP70
            PACK     KEY11,CCPPARE,CCEPPCD,SP70
            CALL     RDCCAD1
            IF       OVRCD=1
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,KEY10
            ENDIF
            STORE    KEY10,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT1
          IF       !@EQUAL
            MOVE     CCPPCT1,EXTRBRAN
            CALL     GETCD000     * Get Code Level 1
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT2
          IF       !@EQUAL
            MOVE     CCPPCT2,EXTRBRAN
            CALL     GETCD000     * Get Code Level 2
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT3
          IF       !@EQUAL
            MOVE     CCPPCT3,EXTRBRAN
            CALL     GETCD000     * Get Code Level 3
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          PACK     KEY60,CCECLV1,CCECLV2,CCECLV3,DIMCOD2,DIMCOD3,DIMCOD4,SP70
          UNPACK   KEY60,CCTPLV1,CCTPLV2,CCTPLV3,CCTPD2,CCTPD3,CCTPD4
          CALL     RDCCTP1
          IF       OVRCD=0
            ADD      ONE,CCTPEPS
            ADD      CCECLOS,CCTPLOS
            ADD      CCECFTC,CCTPFTC
            ADD      CCECTTC,CCTPTTC
            CALL     UPCCTP1
          ELSE
            MOVE     ONE,CCTPEPS
            MOVE     CCECLOS,CCTPLOS
            MOVE     CCECFTC,CCTPFTC
            MOVE     CCECTTC,CCTPTTC
            CALL     WRCCTP1
          ENDIF
          GOTO     SUMM1000
SUMM2000
SUMM9999  RETURN
.
.------------------------------------------------------------
. Open/Create Downlaod File
.------------------------------------------------------------
OPEN0000  CALL      CCSCOPCL         * Close Files
          MOVE      CCPPEID,KEY4
          CALL      RDCCEA1
          CALL      CCSCOPOP         * Open Files
.
          CLEAR     KEY80
          APPEND    CCPPPID,KEY80
          APPEND    ".DEF",KEY80
          RESET     KEY80
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PPDEFFIL,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN1000
.
          CLOSE     PPDEFFIL,DELETE
.
OPEN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PREP      PPDEFFIL,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
          CLEAR     KEY80
          APPEND    CCPPPID,KEY80
          APPEND    ".DAT",KEY80
          RESET     KEY80
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PPDATFIL,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN2000
.
          CLOSE     PPDATFIL,DELETE
.
OPEN2000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PREP      PPDATFIL,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  BEEP
          MOVE      "Unable to Create Export File - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      OPEN9999
.
OPEN9999  RETURN
.
OPNTMP00  DISPLAY  *P1:10;
.
.         CLEAR    FILENAME
.         APPEND   "cia77a",FILENAME
.         APPEND   PORT,FILENAME
.         RESET    FILENAME
.         REP      " 0",FILENAME
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAME
.
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     CCSTMPA1,FILENAME
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    CCSTMPA1,DELETE
          ENDIF
.
          CLEAR    COMMAND
          APPEND   "isbuild ",COMMAND
          APPEND   FILENAME,COMMAND
          APPEND   " 120 UC1-10,11-20,21-30,31-40,41-50,51-60",COMMAND
          RESET    COMMAND
          EXECUTE  COMMAND,TASKID
          OPEN     CCSTMPA1,FILENAME
.
OPNTMP99  RETURN
.
.------------------------------------------------------------
. Create Data
.------------------------------------------------------------
CDAT0000  DISPLAY  *P1:14,*EL,"Extracting Casemix Analysis Data File"
          DISPLAY  *P1:15,*EL,*V2LON,CCPPPID,".DAT"
          PACK     KEY60,SP70
          CALL     RSCCTP1
CDAT1000  CALL     RKCCTP1
          BRANCH   OVRCD,CDAT9000
          PACK     KEY30,CCTPLV1,CCTPLV2,CCTPLV3
          MOVE     CCTPFTC,TOTCOST1
          MOVE     CCTPTTC,TOTCOST2
          CLEAR    MEASURES
          IF       CCPPNE=1
            APPEND   SP1,MEASURES
            APPEND   CCTPEPS,MEASURES
          ENDIF
          IF       CCPPBD=1
            APPEND   SP1,MEASURES
            APPEND   CCTPLOS,MEASURES
          ENDIF
          IF       CCPPC1=1
            APPEND   SP1,MEASURES
            APPEND   TOTCOST1,MEASURES
          ENDIF
          IF       CCPPC2=1
            APPEND   SP1,MEASURES
            APPEND   TOTCOST2,MEASURES
          ENDIF
          APPEND   SP70,MEASURES
          RESET    MEASURES
          STRIP    MEASURES
.
          MATCH    "0",CCPPTIM
          IF       @EQUAL
            WRITE    PPDATFIL,SEQ;QUOTE,KEY30,QUOTE,SP1,CCTPD2,SP1,CCTPD3:
                                  SP1,CCTPD4,MEASURES
          ELSE
            WRITE    PPDATFIL,SEQ;CCTPD2,SP1,QUOTE,KEY30,QUOTE,SP1,CCTPD3:
                                  SP1,CCTPD4,MEASURES
          ENDIF
          GOTO     CDAT1000
CDAT9000
CDAT9999  RETURN
.
.------------------------------------------------------------
. Create Definitions
.------------------------------------------------------------
CDEF0000  DISPLAY  *P1:11,*EL,"Extracting Casemix Analysis Definition File"
          DISPLAY  *P1:12,*EL,*V2LON,CCPPPID,".DEF"
          WRITE    PPDEFFIL,SEQ;"memory ",QUOTE,CCPPDES,QUOTE
          WRITE    PPDEFFIL,SEQ;"; ",QUOTE,CCEAEID,SP1,CCEADES,QUOTE
.
          MOVE     ONE,DIMLEV
          MATCH    "0",CCPPTIM
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            CALL     ADTIM000   * Add Time
          ENDIF
.
          LOAD     DESC,DIMLEV,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4
          CALL     ADCAS000   * Add Casemix Analysis
.
          MATCH    "0",CCPPARE
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            CALL     ADARE000   * Add Area
          ENDIF
.
          MATCH    SP70,CCPPCT1
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT1,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
          MATCH    SP70,CCPPCT2
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT2,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
          MATCH    SP70,CCPPCT3
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT3,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
.
          CALL     ADMES000   * Add Measures
.
CDEF9999  RETURN
.
.------------------------------------------------------------
. Add Measures
.------------------------------------------------------------
ADMES000  WRITE    PPDEFFIL,SEQ;";Measures "
          WRITE    PPDEFFIL,SEQ;"1 Casemix Analysis Measures"
          IF       CCPPNE=1
            WRITE    PPDEFFIL,SEQ;"2 PAT ",QUOTE,"Number of Patients",QUOTE:
                                  " Storage=INT_32 Scale=0"
          ENDIF
          IF       CCPPBD=1
            WRITE    PPDEFFIL,SEQ;"2 BDS ",QUOTE,"Bed Days",QUOTE:
                                  " Storage=INT_32 Scale=0"
          ENDIF
          IF       CCPPC1=1
            WRITE    PPDEFFIL,SEQ;"2 CST1 ",QUOTE,INCODESC,QUOTE:
                                  " Storage=INT_32 Scale=0"
          ENDIF
          IF       CCPPC2=1
            WRITE    PPDEFFIL,SEQ;"2 CST2 ",QUOTE,COSTDESC,QUOTE:
                                  " Storage=INT_32 Scale=0"
          ENDIF
.
          IF       CCPPALOS=1
            WRITE    PPDEFFIL,SEQ;"2 LOS ",QUOTE,"Av. Length of Stay":
                     QUOTE," & "
            WRITE    PPDEFFIL,SEQ;"          CALC=BDS/PAT "
          ENDIF
          IF       CCPPAC1=1
            WRITE    PPDEFFIL,SEQ;"2 AC1 ",QUOTE,"Av. Patient ",INCODESC:
                     QUOTE," & "
            WRITE    PPDEFFIL,SEQ;"          CALC=CST1/PAT "
          ENDIF
          IF       CCPPAC2=1
            WRITE    PPDEFFIL,SEQ;"2 AC2 ",QUOTE,"Av. Patient ",COSTDESC:
                     QUOTE," & "
            WRITE    PPDEFFIL,SEQ;"          CALC=CST2/PAT "
          ENDIF
.
          IF       CCPPBC1=1
            WRITE    PPDEFFIL,SEQ;"2 BC1 ",QUOTE,"Av. ",INCODESC,"/Bed Day":
                     QUOTE," & "
            WRITE    PPDEFFIL,SEQ;"          CALC=CST1/BDS "
          ENDIF
          IF       CCPPBC2=1
            WRITE    PPDEFFIL,SEQ;"2 BC2 ",QUOTE,"Av. ",COSTDESC,"/Bed Day":
                     QUOTE," & "
            WRITE    PPDEFFIL,SEQ;"          CALC=CST2/BDS "
          ENDIF
ADMES999  RETURN
.
.--------------------------------------------------------------------------
. Execute Transfer Script eg softerm
.--------------------------------------------------------------------------
TRAN0000  CLEAR     CMDLINE                 * header file
          APPEND    "ibaccc77.us1 ",CMDLINE
          APPEND    CCPPPID,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
TRAN9999  RETURN
.
CLSTMP00  DISPLAY  *P1:10;
          CLOSE    CCSTMPA1,DELETE
          RETURN
.
.------------------------------------------------------------
. Extract at Patient Level
.------------------------------------------------------------
CRET0000  DISPLAY  *P1:10,*EF
.
          CALL      OPEN0000
          BRANCH    EXIT,CRET9999
.
          DISPLAY  *P1:10,*EF
          MOVE     ZERO,FLAGOTH2
          MOVE     ZERO,FLAGOTH3
          MOVE     ZERO,FLAGOTH4
.
          CALL      DATC0000       * Create Data File
.
          CALL      DEFC0000       * Create Definitions File
.
          CALL      TRAN0000
.
          CALL      CLSTMP00
.
CRET9999  RETURN
.
.------------------------------------------------------------
. Create Data
.------------------------------------------------------------
DATC0000  DISPLAY  *P1:14,*EL,"Extracting Casemix Analysis Data File"
          DISPLAY  *P1:15,*EL,*V2LON,CCPPPID,".DAT"
.
          PACK     KEY48,SP70
          CALL     RSCCEC2
DATC1000  CALL     RKCCEC2
          BRANCH   OVRCD,DATC9000
.
          MATCH    "1",CCECEXC
          GOTO     DATC1000 IF EQUAL
.
          PACK     KEY18,CCECHCD,CCECEPS
          CALL     RDCCEP1
.
          MOVE     ONE,DIMLEV
          MATCH    "0",CCPPTIM
          IF       !@EQUAL
            CALL     GETTIM00    * Time Analysis
            PACK     KEY10,TIMRANGE,SP70
            MATCH    SP70,KEY10
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,KEY10
            ENDIF
            STORE    KEY10,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    "0",CCPPARE
          IF       !@EQUAL
            PACK     KEY10,CCEPPCD,SP70
            PACK     KEY11,CCPPARE,CCEPPCD,SP70
            CALL     RDCCAD1
            IF       OVRCD=1
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,KEY10
            ENDIF
            STORE    KEY10,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT1
          IF       !@EQUAL
            MOVE     CCPPCT1,EXTRBRAN
            CALL     GETCD000     * Get Code Level 1
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT2
          IF       !@EQUAL
            MOVE     CCPPCT2,EXTRBRAN
            CALL     GETCD000     * Get Code Level 2
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          MATCH    SP70,CCPPCT3
          IF       !@EQUAL
            MOVE     CCPPCT3,EXTRBRAN
            CALL     GETCD000     * Get Code Level 3
            MATCH    SP70,CCXHKEY
            IF       @EQUAL
              STORE    ONE,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
              MOVE     Z70,CCXHKEY
            ENDIF
            STORE    CCXHKEY,DIMLEV,DIMCOD2,DIMCOD3,DIMCOD4
            ADD      ONE,DIMLEV
          ENDIF
.
          PACK     KEY18,CCECHCD,CCECEPS
          SQUEEZE  KEY18
          MOVE     CCECFTC,TOTCOST1
          MOVE     CCECTTC,TOTCOST2
.
          CLEAR    MEASURES
          IF       CCPPNE=1
            APPEND   SP1,MEASURES
            APPEND   ONE,MEASURES
          ENDIF
          IF       CCPPBD=1
            APPEND   SP1,MEASURES
            APPEND   CCECLOS,MEASURES
          ENDIF
          IF       CCPPC1=1
            APPEND   SP1,MEASURES
            APPEND   TOTCOST1,MEASURES
          ENDIF
          IF       CCPPC2=1
            APPEND   SP1,MEASURES
            APPEND   TOTCOST2,MEASURES
          ENDIF
.
.          IF       COSTMAT=1
.            CALL     GETCST00
.            APPEND   SP1,MEASURES
.            APPEND   COST01,MEASURES
.            APPEND   SP1,MEASURES
.            APPEND   COST02,MEASURES
.            APPEND   SP1,MEASURES
.            APPEND   COST03,MEASURES
.            APPEND   SP1,MEASURES
.            APPEND   COST04,MEASURES
.            APPEND   SP1,MEASURES
.            APPEND   COST05,MEASURES
.          ENDIF
.
          APPEND   SP70,MEASURES
          RESET    MEASURES
          STRIP    MEASURES
.
          MATCH    "0",CCPPTIM
          IF       @EQUAL
            WRITE    PPDATFIL,SEQ;KEY18,SP1,DIMCOD2,SP1,DIMCOD3,SP1,DIMCOD4:
                                  MEASURES
          ELSE
            WRITE    PPDATFIL,SEQ;DIMCOD2,SP1,KEY18,SP1,DIMCOD3,SP1,DIMCOD4:
                                  MEASURES
          ENDIF
          GOTO     DATC1000
DATC9000
DATC9999  RETURN
.
.------------------------------------------------------------
. Create Definitions
.------------------------------------------------------------
DEFC0000  DISPLAY  *P1:11,*EL,"Extracting Casemix Analysis Definition File"
          DISPLAY  *P1:12,*EL,*V2LON,CCPPPID,".DEF"
.
          WRITE    PPDEFFIL,SEQ;"memory ",QUOTE,CCPPDES,QUOTE
          WRITE    PPDEFFIL,SEQ;"; ",QUOTE,CCEAEID,SP1,CCPPDN1,QUOTE
.
          MOVE     ONE,DIMLEV
          MATCH    "0",CCPPTIM
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            CALL     ADTIM000   * Add Time
          ENDIF
.
          LOAD     DESC,DIMLEV,CCPPDN1,CCPPDN2,CCPPDN3,CCPPDN4
          CALL     ADEPS000   * Add Casemix Analysis
.
          MATCH    "0",CCPPARE
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            CALL     ADARE000   * Add Area
          ENDIF
.
          MATCH    SP70,CCPPCT1
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT1,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
          MATCH    SP70,CCPPCT2
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT2,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
          MATCH    SP70,CCPPCT3
          IF       !@EQUAL
            LOAD     DESC,DIMLEV,CCPPDN2,CCPPDN3,CCPPDN4
            LOAD     FLAGOTH,DIMLEV,FLAGOTH2,FLAGOTH3,FLAGOTH4
            ADD      ONE,DIMLEV
            MOVE     CCPPCT3,EXTRBRAN
            CALL     ADCMT000   * Add Casemix Type
          ENDIF
.
          CALL     ADMES000   * Add Measures
.
DEFC9999  RETURN
.
.--------------------------------------------------
. Add Casemix Types Analysis
.--------------------------------------------------
ADCMT000  MOVE     EXTRBRAN,KEY3
          REP      " 0",KEY3
          WRITE    PPDEFFIL,SEQ;";",DESC
          WRITE    PPDEFFIL,SEQ;"1 CMT",KEY3,SP1,QUOTE,DESC,QUOTE
          PACK     KEY13,KEY3,SP70
          CALL     RSCCXH1
ADCMT100  CALL     RKCCXH1
          BRANCH   OVRCD,ADCMT900
          MOVE     EXTRBRAN,KEY3
          REP      " 0",KEY3
          MATCH    KEY3,CCXHSTY
          GOTO     ADCMT900 IF NOT EQUAL
.
          IF       EXTRBRAN>200
            PACK     KEY13,EXTRBRAN,CCXHKEY
          ELSE
            PACK     KEY13,CCXHKEY
          ENDIF
          SQUEEZE  KEY13
          WRITE    PPDEFFIL,SEQ;"2 ",KEY13,SP1,QUOTE,CCXHDES,QUOTE
          IF       EXTRBRAN<200
            GOTO     ADCMT100
          ENDIF
.
          MOVE     EXTRBRAN,F3
          SUB      "200",F3
          MOVE     F3,KEY3
          REP      " 0",KEY3
          PACK     KEY23,KEY3,CCXHKEY,SP70
          PACK     KEY13,KEY3,CCXHKEY,SP70
          CALL     RSCCXH2
ADCMT200  CALL     RKCCXH2
          BRANCH   OVRCD,ADCMT100
          PACK     KEY23,CCXHSTY,CCXHSUM,SP70
          MATCH    KEY13,KEY23
          GOTO     ADCMT100 IF NOT EQUAL
.
          SQUEEZE  CCXHKEY
          WRITE    PPDEFFIL,SEQ;"3 ",CCXHKEY,SP1,QUOTE,CCXHDES,QUOTE
          GOTO     ADCMT200
.
ADCMT900  IF       FLAGOTH=1
             MOVE     Z70,CCXHKEY
             MOVE     "Other (Blank Key)",CCXHDES
             WRITE    PPDEFFIL,SEQ;"2 ",CCXHKEY,SP1,QUOTE,CCXHDES,QUOTE
          ENDIF
          RETURN
.
.------------------------------------------------------------
. Add Area to Definition File.
.------------------------------------------------------------
ADARE000  WRITE    PPDEFFIL,SEQ;";",DESC
          WRITE    PPDEFFIL,SEQ;"1 AREA",CCPPARE,SP1:
                                QUOTE,DESC,QUOTE
          MOVE     Z70,TIMLV2
          MOVE     Z70,TIMLV3
          MOVE     Z70,TIMLV4
.
          PACK     KEY41,CCPPARE,SP70
          CALL     RSCCAD2
ADARE100  CALL     RKCCAD2
          BRANCH   OVRCD,ADARE900
          MATCH    CCPPARE,CCADDEF
          GOTO     ADARE900 IF NOT EQUAL
.
          MATCH    CCADLV2,TIMLV2    * Change in Level 2
          IF       !@EQUAL
            MOVE     CCADLV2,TIMLV2
            MOVE     CCADLV3,TIMLV3
            MOVE     CCADLV4,TIMLV4
            MOVE     "2",NEXTLEV
            MATCH    SP70,CCADLV2
            IF       !@EQUAL
              MOVE     CCADLV2,KEY10
              SQUEEZE  KEY10
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY10,SP1,QUOTE,CCADLV2,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCADLV3
            IF       !@EQUAL
              PACK     KEY20,CCADLV2,CCADLV3
              SQUEEZE  KEY20
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY20,SP1,QUOTE,CCADLV3,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCADLV4
            IF       !@EQUAL
              PACK     KEY30,CCADLV2,CCADLV3,CCADLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCADLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          MATCH    CCADLV3,TIMLV3    * Change in Level 3
          IF       !@EQUAL
            MOVE     CCADLV3,TIMLV3
            MOVE     CCADLV4,TIMLV4
            MOVE     "3",NEXTLEV
            MATCH    SP70,CCADLV3
            IF       !@EQUAL
              PACK     KEY20,CCADLV2,CCADLV3
              SQUEEZE  KEY20
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY20,SP1,QUOTE,CCADLV3,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCADLV4
            IF       !@EQUAL
              PACK     KEY30,CCADLV2,CCADLV3,CCADLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCADLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          MATCH    CCADLV4,TIMLV4    * Change in Level 4
          IF       !@EQUAL
            MOVE     CCADLV4,TIMLV4
            MOVE     "4",NEXTLEV
            MATCH    SP70,CCADLV4
            IF       !@EQUAL
              PACK     KEY30,CCADLV2,CCADLV3,CCADLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCADLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,CCADPC,SP1,QUOTE,CCADDES,QUOTE
          GOTO     ADARE100
.
ADARE900  IF       FLAGOTH=1
             MOVE     Z70,CCXHKEY
             MOVE     "Other (Blank Key)",CCXHDES
             WRITE    PPDEFFIL,SEQ;"2 ",CCXHKEY,SP1,QUOTE,CCXHDES,QUOTE
          ENDIF
.
ADARE999  RETURN
.
.------------------------------------------------------------
. Add Casemix Analysis to Definition File
.------------------------------------------------------------
ADEPS000  PACK     KEY3,CCEALV1
          CALL     RDCCST1
          IF       OVRCD=1
            PACK     CCSTDES,CCEALV1,SP70
          ENDIF
          WRITE    PPDEFFIL,SEQ;"1 CE",CCEALV1,SP1,QUOTE,DESC,QUOTE
.
          MOVE     Z70,LASTLV1
          MOVE     Z70,LASTLV2
          MOVE     Z70,LASTLV3
          PACK     KEY48,SP70
          CALL     RSCCEC2
ADEPS100  CALL     RKCCEC2
          BRANCH   OVRCD,ADEPS900
.
          MATCH    LASTLV1,CCECLV1
          CALL     LV1AD000 IF NOT EQUAL
.
          MATCH    LASTLV2,CCECLV2
          CALL     LV2AD000 IF NOT EQUAL
.
          MATCH    LASTLV3,CCECLV3
          CALL     LV3AD000 IF NOT EQUAL
.
          PACK     KEY18,CCECHCD,CCECEPS
          CALL     RDCCEP1
          MOVE     "UR : ",KEY5
          MOVE     " Episode : ",KEY11
          PACK     KEY45,KEY5,CCEPURN,KEY11,KEY18,SP70
          SQUEEZE  KEY18
          WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY18,SP1,QUOTE,KEY45,QUOTE
          GOTO     ADEPS100
.
ADEPS900  RETURN
.
.------------------------------------------------------------
. Add Level 1 to Definition File
.------------------------------------------------------------
LV1AD000  PACK     KEY13,CCEALV1,CCECLV1
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCECLV1,SP70
          ENDIF
.
          MATCH    Z70,CCECLV1
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          PACK     KEY10,CCECLV1,SP70
          WRITE    PPDEFFIL,SEQ;"2 ",QUOTE,KEY10,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
          MOVE     THREE,NEXTLEV
          MOVE     CCECLV1,LASTLV1
          CALL     LV2AD000
          RETURN
.------------------------------------------------------------
. Add Level 2 to Definition File
.------------------------------------------------------------
LV2AD000  MATCH    SP70,CCEALV2
          GOTO     LV2AD900 IF EQUAL
          PACK     KEY13,CCEALV2,CCECLV2
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCECLV2,SP70
          ENDIF
          MATCH    Z70,CCECLV2
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          MOVE     CCECLV2,KEY10
          MATCH    SP70,CCECLV2
          IF       @EQUAL
            MOVE     "N/A      ",KEY10
            PACK     CCXHDES,KEY10,SP70
          ENDIF
          PACK     KEY20,CCECLV1,KEY10,SP70
          WRITE    PPDEFFIL,SEQ;"3 ",QUOTE,KEY20,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
          MOVE     FOUR,NEXTLEV
          MOVE     CCECLV2,LASTLV2
          CALL     LV3AD000
          GOTO     LV2AD999
.
LV2AD900  MOVE     CCECLV2,LASTLV2
LV2AD999  RETURN
.------------------------------------------------------------
. Add Level 3 to Definition File
.------------------------------------------------------------
LV3AD000  MATCH    SP70,CCEALV3
          GOTO     LV3AD900 IF EQUAL
.
          PACK     KEY13,CCEALV3,CCECLV3
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCECLV3,SP70
          ENDIF
          MATCH    Z70,CCECLV3
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          MOVE     CCECLV3,KEY10
          MATCH    SP70,CCECLV3
          IF       @EQUAL
            MOVE     "N/A      ",KEY10
            PACK     CCXHDES,KEY10,SP70
          ENDIF
          PACK     KEY30,CCECLV1,CCECLV2,KEY10,SP70
          WRITE    PPDEFFIL,SEQ;"4 ",QUOTE,KEY30,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
          MOVE     FIVE,NEXTLEV
.
LV3AD900  MOVE     CCECLV3,LASTLV3
LV3AD999  RETURN
.
.------------------------------------------------------------
. Add Time to Definition File.
.------------------------------------------------------------
ADTIM000  WRITE    PPDEFFIL,SEQ;";",DESC
          WRITE    PPDEFFIL,SEQ;"1 TIME",CCPPTIM,SP1:
                                QUOTE,DESC,QUOTE
          MOVE     Z70,TIMLV2
          MOVE     Z70,TIMLV3
          MOVE     Z70,TIMLV4
.
          PACK     KEY9,CCPPTIM,SP70
          CALL     RSCCTM1
ADTIM100  CALL     RKCCTM1
          BRANCH   OVRCD,ADTIM900
          MATCH    CCPPTIM,CCTMDEF
          GOTO     ADTIM900 IF NOT EQUAL
.
          MATCH    CCTMLV2,TIMLV2    * Change in Level 2
          IF       !@EQUAL
            MOVE     CCTMLV2,TIMLV2
            MOVE     CCTMLV3,TIMLV3
            MOVE     CCTMLV4,TIMLV4
            MOVE     "2",NEXTLEV
            MATCH    SP70,CCTMLV2
            IF       !@EQUAL
              MOVE     CCTMLV2,KEY10
              SQUEEZE  KEY10
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY10,SP1,QUOTE,CCTMLV2,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCTMLV3
            IF       !@EQUAL
              PACK     KEY20,CCTMLV2,CCTMLV3
              SQUEEZE  KEY20
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY20,SP1,QUOTE,CCTMLV3,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCTMLV4
            IF       !@EQUAL
              PACK     KEY30,CCTMLV2,CCTMLV3,CCTMLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCTMLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          MATCH    CCTMLV3,TIMLV3    * Change in Level 3
          IF       !@EQUAL
            MOVE     CCTMLV3,TIMLV3
            MOVE     CCTMLV4,TIMLV4
            MOVE     "3",NEXTLEV
            MATCH    SP70,CCTMLV3
            IF       !@EQUAL
              PACK     KEY20,CCTMLV2,CCTMLV3
              SQUEEZE  KEY20
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY20,SP1,QUOTE,CCTMLV3,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
            MATCH    SP70,CCTMLV4
            IF       !@EQUAL
              PACK     KEY30,CCTMLV2,CCTMLV3,CCTMLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCTMLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          MATCH    CCTMLV4,TIMLV4    * Change in Level 4
          IF       !@EQUAL
            MOVE     CCTMLV4,TIMLV4
            MOVE     "4",NEXTLEV
            MATCH    SP70,CCTMLV4
            IF       !@EQUAL
              PACK     KEY30,CCTMLV2,CCTMLV3,CCTMLV4
              SQUEEZE  KEY30
              WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,KEY30,SP1,QUOTE,CCTMLV4,QUOTE
              ADD      ONE,NEXTLEV
            ENDIF
          ENDIF
.
          WRITE    PPDEFFIL,SEQ;NEXTLEV,SP1,CCTMDAT,SP1,QUOTE,CCTMDES,QUOTE
          GOTO     ADTIM100
.
ADTIM900  IF       FLAGOTH=1
             MOVE     Z70,CCXHKEY
             MOVE     "Other (Blank Key)",CCXHDES
             WRITE    PPDEFFIL,SEQ;"2 ",CCXHKEY,SP1,QUOTE,CCXHDES,QUOTE
          ENDIF
.
ADTIM999  RETURN
.
.--------------------------------------------------
. Determine Time Range Code
.--------------------------------------------------
GETTIM00  MOVE     SP70,TIMRANGE
          MOVE     CCPPTIM,KEY1
          REP      " 0",CCEPDDAT
          PACK     KEY9,KEY1,CCEPDDAT,SP70
          CALL     RDCCTM1
          IF       OVRCD=0
            CALL     RPCCTM1
          ENDIF
          CALL     RKCCTM1
          BRANCH   OVRCD,GETTIM99
          MATCH    KEY1,CCTMDEF
          GOTO     GETTIM99 IF NOT EQUAL
          MOVE     CCTMDAT,TIMRANGE
.
GETTIM99  RETURN
.
.------------------------------------------------------------
. Add Casemix Analysis to Definition File
.------------------------------------------------------------
ADCAS000  PACK     KEY3,CCEALV1
          CALL     RDCCST1
          IF       OVRCD=1
            PACK     CCSTDES,CCEALV1,SP70
          ENDIF
          WRITE    PPDEFFIL,SEQ;"1 CE",CCEALV1,SP1,QUOTE,DESC,QUOTE
.
          PACK     KEY10,SP70
          CALL     RSCCEB1
ADCAS100  CALL     RKCCEB1
          BRANCH   OVRCD,ADCAS900
.
          PACK     KEY13,CCEALV1,CCEBLV1
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCEBLV1,SP70
          ENDIF
.
          MATCH    Z70,CCEBLV1
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          PACK     KEY10,CCEBLV1,SP70
          WRITE    PPDEFFIL,SEQ;"2 ",QUOTE,KEY10,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
.
          MATCH    SP70,CCEALV2
          GOTO     ADCAS100 IF EQUAL
.
          PACK     KEY20,CCEBLV1,SP70
          CALL     RSCCED1
ADCAS200  CALL     RKCCED1
          BRANCH   OVRCD,ADCAS100
          MATCH    CCEBLV1,CCEDLV1
          GOTO     ADCAS100 IF NOT EQUAL
.
          PACK     KEY13,CCEALV2,CCEDLV2
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCEDLV2,SP70
          ENDIF
.
          MATCH    Z70,CCEDLV2
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          PACK     KEY20,CCEDLV1,CCEDLV2,SP70
          WRITE    PPDEFFIL,SEQ;"3 ",QUOTE,KEY20,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
.
          MATCH    SP70,CCEALV3
          GOTO     ADCAS200 IF EQUAL
.
          PACK     KEY30,CCEBLV1,CCEDLV2,SP70
          CALL     RSCCEE1
ADCAS300  CALL     RKCCEE1
          BRANCH   OVRCD,ADCAS200
          MATCH    CCEDLV1,CCEELV1
          GOTO     ADCAS200 IF NOT EQUAL
          MATCH    CCEDLV2,CCEELV2
          GOTO     ADCAS200 IF NOT EQUAL
.
          PACK     KEY13,CCEALV3,CCEELV3
          CALL     RDCCXH1
          IF       OVRCD=1
            PACK     CCXHDES,CCEELV3,SP70
          ENDIF
.
          MATCH    Z70,CCEELV3
          IF       @EQUAL
            MOVE     "Other (Blank Key)",CCXHDES
          ENDIF
.
          PACK     KEY30,CCEELV1,CCEELV2,CCEELV3,SP70
          WRITE    PPDEFFIL,SEQ;"4 ",QUOTE,KEY30,QUOTE,SP1,QUOTE,CCXHDES,QUOTE
.
          GOTO     ADCAS300
.
ADCAS900
.
ADCAS999  RETURN
.
.
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       PATITMRD
.
          INC       CCSAADIO/INC
          INC       CCSAGEIO/INC
          INC       CCSCEAIO/INC
          INC       CCSCEBIO/INC
          INC       CCSCECIO/INC
          INC       CCSCEDIO/INC
          INC       CCSCEEIO/INC
          INC       CCSCOPCD
          INC       CCSEPSIO/INC
          INC       CCSG58CD
          INC       CCSIADIO/INC
          INC       CCSPPYIO/INC
          INC       CCSSTACD
          INC       CCSSTYIO/INC
          INC       CCSTIMIO/INC
          INC       CCSXHDIO/INC
          INC       CIA67TIO
          INC       PATITMIO/INC
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
