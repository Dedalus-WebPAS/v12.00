.******************************************************************************
.* System    :   Accounting System                                            *
.* Procedure :   PRCFMSPR                                                     *
.* Desc      :   Print User Defined Report Specification                      *
.* Routines  :   FMSPR000                                                     *
.* Used in   :   IBAFMS50 IBAFMS51                                            *
.******************************************************************************
.* Date      :   14.12.90                                                     *
.* Author    :   B.G.Ackland (IBA)                                            *
.*                                                                            *
.*        V9.03.02  12/11/2003  Mike Laming  CAR 37633                        *
.*                  Fix the fix - Linear projection (in FAMT6000)             *
.*        V9.03.01  05/11/2003  Mike Laming  CAR 37633                        *
.*                  Change Projection to Linear projection (in FAMT6000)      *
.*                                                                            *
.*30.10.2000 Charles Handaya                                                  *
.*           Added Column Type : 7-Statistical Unit                           *
.*           srf 6934                                                         *
.******************************************************************************
.*               07.05.1991 Neeriem Dye                                       *
.*                          Fixed infinite loop in procedure PBEF0000         *
.*                                                                            *
.*               13.06.1991 Neeriem Dye                                       *
.*                          Modified to run over range PERDFROM to PERDTO     *
.*                                                                            *
.*               08.07.1991 Neeriem Dye                                       *
.*                     Modified to allow choice of printing or not printing   *
.*                     the posting accounts for stat total accounts           *
.*                     srf 109354                                             *
.*                                                                            *
.*               08.07.1991 Neeriem Dye                                       *
.*                     If not printing zero accounts, check for one line of   *
.*                     data to determine if to print                          *
.*                     srf 109074                                             *
.*                                                                            *
.*               19.07.1991 Neeriem Dye                                       *
.*                     If not printing zero accounts, print heading accounts  *
.*                     srf 109569                                             *
.*                                                                            *
.*               26.07.1991 Neeriem Dye                                       *
.*                     Stopped printing of security code                      *
.*                     srf 109695                                             *
.*                                                                            *
.*               30.07.1991 Neeriem Dye                                       *
.*                     Suppress printing of posting accounts if desired       *
.*                     srf 109591                                             *
.*                                                                            *
.*                     21.08.1991 Neeriem Dye                                 *
.*                     Pay attention to the level of heading accounts         *
.*                     srf 110169                                             *
.*                                                                            *
.*                     23.08.1991 Neeriem Dye                                 *
.*                     Fix budget desc's print                                *
.*                     Fix budget figures                                     *
.*                     srf 109893                                             *
.*                                                                            *
.*                     11.09.1991 Neeriem Dye                                 *
.*                     Add underlines at end of page                          *
.*                     srf 110574                                             *
.*                     Fixed open of budget files "01"                        *
.*                     srf 110563                                             *
.*                                                                            *
.*                     28.10.91 Neeriem Dye                                   *
.*                     Add option of printing prior period                    *
.*                     srf 111392                                             *
.*                     Fix printing of specific periods over a range          *
.*                     srf 111457                                             *
.*                     Fix printing of statistical accounts (use right format)*
.*                     srf 111489                                             *
.*                     Change printing of dollars only to evaluate from       *
.*                     Dollars & cents value on file (not dollars only)       *
.*                     srf 111127                                             *
.*                                                                            *
.*                     07.11.91 Neeriem Dye                                   *
.*                     Fixed printing of tot accs so not all zero             *
.*                     srf 111650                                             *
.*                                                                            *
.*                     25.11.91 Neeriem Dye                                   *
.*                     Print stat accounts by either rep style or dec places  *
.*                     srf 111868                                             *
.*                                                                            *
.*                     05.12.91 Neeriem Dye                                   *
.*                     Add Annual Movement (YTD -BF)                          *
.*                     srf 112087                                             *
.*                                                                            *
.*                     23.12.91 Neeriem Dye                                   *
.*                     Add previous period option                             *
.*                     srf 112207                                             *
.*                                                                            *
.*                     20.01.92 Neeriem Dye                                   *
.*                     Add diff between current and last period               *
.*                     srf 112602                                             *
.*                                                                            *
.*                     06.03.92 Neeriem Dye (I.B.A.)                          *
.*                     Allow heading accounts to add to total accounts        *
.*                     srf 112961                                             *
.*                                                                            *
.*                     03.06.92 S.Barcham                                     *
.*                     Depending of FMCOBVAR                                  *
.*                            0 = Acutal > Budget +ve Variance                *
.*                            1 = Acutal > Budget -ve Variance                *
.*                     srf 114626                                             *
.*                                                                            *
.*                     01.03.93 Neeriem Dye (I.B.A.)                          *
.*                     Use var FMCOHPRT to suppress heading acct print        *
.*                     if no accounts to print b/n heading accts              *
.*                     srf 118641   Quote 7526                                *
.*                                                                            *
.*                     13.03.93 Neeriem Dye (I.B.A.)                          *
.*                     Fix use of parameter FMCOBVAR                          *
.*                     srf 120510                                             *
.*                                                                            *
.*                     21.10.93 Neeriem Dye (I.B.A.)                          *
.*                     Modified for new committed expenditure field           *
.*                     srf HWK                                                *
.*                                                                            *
.*                     17.12.93 Neeriem Dye (I.B.A.)                          *
.*                     Modify supress heading to ignore a heading with a      *
.*                     level code lower than the next level                   *
.*                     srf 118641   Quote 7526                                *
.*                                                                            *
.*                     11.11.94 Robert Sumsion                                *
.*                     Added two new period types in report style maintainence*
.*                     These were Annual Budget-(YTD Accutal + Committed Exp  *
.*                     Raised+Received or Received only).                     *
.*                     srf 125513                                             *
.*                                                                            *
.******************************************************************************
.
          DEFPROC FMSPR000
.
          INC     FMSAMAFD/INC
          INC     FMSBUDFD/INC
          INC     FMSCCAFD/INC
          INC     FMSCONFD/INC
          INC     FMSFPSFD/INC
          INC     FMSPRCFD/INC
          INC     FMSSMAFD/INC
          INC     FMSRSFFD/INC
          INC     FMSSBAFD/INC
          INC     FMSSBUFD/INC
          INC     FMSTCFFD/INC
          INC     FMSWCFFD/INC
          INC     IBAPASFD/INC
.
SAVKEY01  DIM       26
ACCKEY01  DIM       14
.
SAVKEY02  DIM       33
ACCKEY02  DIM       14
.
SAVKEY03  DIM       33
ACCKEY03  DIM       14
.
SAVKEY04  DIM       33
ACCKEY04  DIM       14
.
SAVKEY05  DIM       33
ACCKEY05  DIM       14
.
EXPORTFL  FILE      ASCII, FIXED=400
EXPORTYN  FORM      1                    * Export File Yes or No
EXPORTFN  DIM       8                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
EXPORTVR  DIM       36[20]               * Export Variable  
EXPORTVN  FORM      2                    * Export Variable Number
.
PRGNAM    DIM     35    * Program name declared local so that heading 
.                       * can be altered according to the report parameter
CEAFILE   FORM    1
PERS      FORM    2
PRINTFL   FORM    1
ACTYPE    FORM    1
DATCNT    FORM    5
S1        INIT    "s1"
S2        INIT    "s2"
S3        INIT    "s3"
S4        INIT    "s4"
S5        INIT    "s5"
.
FMSB      INIT    "fmsb"
FMSC      INIT    "fmsc"
FMSP      INIT    "fmsp"
FMSS      INIT    "fmss"
.
SAVEACCT  DIM     30                   * save account data
SAVHACC   DIM     14                   * save last heading account
SAVHLEV   DIM     3                    * save last heading account level
SAVHPRT   DIM     3                    * save last heading account print code
.
.---- stat account formats ----
.
FORMAT01  INIT    "(9999,999 "
FORMAT02  INIT    "(9,999,999 "
FORMAT03  INIT    "(99,999,999 "
FORMAT04  INIT    "(999,999,999 "
FORMAT05  INIT    "(9999,999,999 "
FORMAT06  INIT    "(9,999,999,999 "
FORMAT07  INIT    "(99,999,999,999 "
FORMAT08  INIT    "(999,999,999,999 "
FORMAT09  INIT    "(9999,999,999,999 "
FORMAT0A  INIT    "(9,999,999,999,999 "
FORMAT0B  INIT    "(99,99,9999,999,999 "
.
FORMAT11  INIT    "(99,999.9 "
FORMAT12  INIT    "(999,999.9 "
FORMAT13  INIT    "(9999,999.9 "
FORMAT14  INIT    "(9,999,999.9 "
FORMAT15  INIT    "(99,999,999.9 "
FORMAT16  INIT    "(999,999,999.9 "
FORMAT17  INIT    "(9999,999,999.9 "
FORMAT18  INIT    "(9,999,999,999.9 "
FORMAT19  INIT    "(99,999,999,999.9 "
FORMAT1A  INIT    "(999,999,999,999.9 "
FORMAT1B  INIT    "(999,9999,999,999.9 "
.
XORMAT21  INIT    "(9,999.99 "
FORMAT22  INIT    "(99,999.99 "
FORMAT23  INIT    "(999,999.99 "
FORMAT24  INIT    "(9999,999.99 "
FORMAT25  INIT    "(9,999,999.99 "
FORMAT26  INIT    "(99,999,999.99 "
FORMAT27  INIT    "(999,999,999.99 "
FORMAT28  INIT    "(9999,999,999.99 "
FORMAT29  INIT    "(9,999,999,999.99 "
FORMAT2A  INIT    "(99,999,999,999.99 "
FORMAT2B  INIT    "(99,9999,999,999.99 "
.
FORMAT31  INIT    "(9999.999 "
FORMAT32  INIT    "(9,999.999 "
FORMAT33  INIT    "(99,999.999 "
FORMAT34  INIT    "(999,999.999 "
FORMAT35  INIT    "(9999,999.999 "
FORMAT36  INIT    "(9,999,999.999 "
FORMAT37  INIT    "(99,999,999.999 "
FORMAT38  INIT    "(999,999,999.999 "
FORMAT39  INIT    "(9999,999,999.999 "
FORMAT3A  INIT    "(9,999,999,999.999 "
FORMAT3B  INIT    "(9,9999,999,999.999 "
.
FORMAT41  INIT    "(999.9999 "
FORMAT42  INIT    "(9999.9999 "
FORMAT43  INIT    "(9,999.9999 "
FORMAT44  INIT    "(99,999.9999 "
FORMAT45  INIT    "(999,999.9999 "
FORMAT46  INIT    "(9999,999.9999 "
FORMAT47  INIT    "(9,999,999.9999 "
FORMAT48  INIT    "(99,999,999.9999 "
FORMAT49  INIT    "(999,999,999.9999 "
FORMAT4A  INIT    "(9999,999,999.9999 "
FORMAT4B  INIT    "(99999,999,999.9999 "
.
FORMAT51  INIT    "(99.99999 "
FORMAT52  INIT    "(999.99999 "
FORMAT53  INIT    "(9999.99999 "
FORMAT54  INIT    "(9,999.99999 "
FORMAT55  INIT    "(99,999.99999 "
FORMAT56  INIT    "(999,999.99999 "
FORMAT57  INIT    "(9999,999.99999 "
FORMAT58  INIT    "(9,999,999.99999 "
FORMAT59  INIT    "(99,999,999.99999 "
FORMAT5A  INIT    "(999,999,999.99999 "
FORMAT5B  INIT    "(9999,999,999.99999 "
.
FORMAT61  INIT    "(9.999999 "
FORMAT62  INIT    "(99.999999 "
FORMAT63  INIT    "(999.999999 "
FORMAT64  INIT    "(9999.999999 "
FORMAT65  INIT    "(9,999.999999 "
FORMAT66  INIT    "(99,999.999999 "
FORMAT67  INIT    "(999,999.999999 "
FORMAT68  INIT    "(9999,999.999999 "
FORMAT69  INIT    "(9,999,999.999999 "
FORMAT6A  INIT    "(99,999,999.999999 "
FORMAT6B  INIT    "(999,999,999.999999 "
.
MOVEFLAG  FORM    1
HEADFLAG  FORM    1
.
. Variables to load Row/column Parameters
.
CURROW    FORM     2    * Row Counter
CURCOL    FORM     2    * Column Counter
CHKZERO   FORM     1    * 0=dont print since zero, 1=print
.
CURPERD   FORM     2    * Current Period
COLTYPE   FORM     2    * Column Type
COLWIDT   FORM     2    * Column Width
COLWID    FORM     2    * Column Width
COLATYP   FORM     2    * Column Amount Type
COLSCAL   FORM     2    * Column Scale
COLPERD   FORM     2    * Column Period
COLFORM   DIM      20   * Column Format
COLUMN    FORM     3
RESETCOL  FORM     3
SAVCOL    FORM     3
COUNT     FORM     3
.
DECPLA    FORM     2
.
LASER     FORM      1                        * Laser Print 0 = No
.
REPCHAR   DIM       2
DASH      INIT      "-"
DASHES    INIT      "----------------------------------------":
                    "----------------------------------------"
DESC35    DIM       35
ACCOUNT   DIM       12
LUND50    DIM       50
LUND52    DIM       52
LUND80    DIM       80
.
VAMTS     FORM     12.5 * Unformatted Amount for variance calculation
VAMTC     FORM     12.2 * Unformatted Amount for variance calculation
SVAMTS    FORM     12.5 * Unformatted Amount for variance calculation
SVAMTC    FORM     12.2 * Unformatted Amount for variance calculation
.
PVAMTS    FORM     12.5 * Unformatted Amount for variance calculation
PVAMTC    FORM     12.5 * Unformatted Amount for variance calculation
.
SUBAMTS   FORM     12.5 * Sub Amount
SUBAMTC   FORM     12.2 * Sub Amount
AMOUNTS   FORM     12.5 * Unformatted Amount
AMOUNTC   FORM     12.2 * Unformatted Amount
SAMOUNTS  FORM     12.5 * Unformatted Amount
SAMOUNTC  FORM     12.2 * Unformatted Amount
AMOUNTD   FORM     12   * Unformatted Amount
FAMOUNT   DIM      20   * Formatted Amount
ANS1      DIM      1
ANS2      DIM      1
ANS3      DIM      1
ANS4      DIM      1
ANS5      DIM      1
ANS6      DIM      1
ANS7      DIM      1
ANS8      DIM      1
ANS9      DIM      1
ANS10     DIM      1
ANS11     DIM      1
ANS12     DIM      1
ANS13     DIM      1
ANS14     DIM      1
ANS15     DIM      1
ANS16     DIM      1
ANS17     DIM      1
ANS18     DIM      1
ANS19     DIM      1
ANS20     DIM      1
.
F2        FORM     2 
FINYEAR   DIM      4    * Reporting Year
FVAR      DIM      20
FPVAR     DIM      20
PERIOD    FORM     2    * Reporting Period
PERTYPE   FORM     2
RCLOAD    FORM     3
TAMT      FORM     12.5
TAMTC     FORM     12.2
TAMTS     FORM     12.5
TCOL      DIM      1
WILITPRT  FORM     1
YESNO1    DIM      3
YESNO2    DIM      3
YESNO3    DIM      3
.    
ACTA01S   FORM     12.5  * Actuals Current Year (Period 1 to Include B-Fwd)
ACTA02S   FORM     12.5
ACTA03S   FORM     12.5
ACTA04S   FORM     12.5
ACTA05S   FORM     12.5
ACTA06S   FORM     12.5
ACTA07S   FORM     12.5
ACTA08S   FORM     12.5
ACTA09S   FORM     12.5
ACTA10S   FORM     12.5
ACTA11S   FORM     12.5
ACTA12S   FORM     12.5
ACTA13S   FORM     12.5
.
ACTB01S   FORM     12.5  * Actuals Last Year (Period 1 to Include B-Fwd)
ACTB02S   FORM     12.5
ACTB03S   FORM     12.5
ACTB04S   FORM     12.5
ACTB05S   FORM     12.5
ACTB06S   FORM     12.5
ACTB07S   FORM     12.5
ACTB08S   FORM     12.5
ACTB09S   FORM     12.5
ACTB10S   FORM     12.5
ACTB11S   FORM     12.5
ACTB12S   FORM     12.5
ACTB13S   FORM     12.5
.
BUDA01S   FORM     12.5  * Budget
BUDA02S   FORM     12.5
BUDA03S   FORM     12.5
BUDA04S   FORM     12.5
BUDA05S   FORM     12.5
BUDA06S   FORM     12.5
BUDA07S   FORM     12.5
BUDA08S   FORM     12.5
BUDA09S   FORM     12.5
BUDA10S   FORM     12.5
BUDA11S   FORM     12.5
BUDA12S   FORM     12.5
BUDA13S   FORM     12.5
.
BUDB01S   FORM     12.5  * Alternative Budget
BUDB02S   FORM     12.5
BUDB03S   FORM     12.5
BUDB04S   FORM     12.5
BUDB05S   FORM     12.5
BUDB06S   FORM     12.5
BUDB07S   FORM     12.5
BUDB08S   FORM     12.5
BUDB09S   FORM     12.5
BUDB10S   FORM     12.5
BUDB11S   FORM     12.5
BUDB12S   FORM     12.5
BUDB13S   FORM     12.5
.
ACTABFC   FORM     12.2
ACTA01C   FORM     12.2
ACTA02C   FORM     12.2
ACTA03C   FORM     12.2
ACTA04C   FORM     12.2
ACTA05C   FORM     12.2
ACTA06C   FORM     12.2
ACTA07C   FORM     12.2
ACTA08C   FORM     12.2
ACTA09C   FORM     12.2
ACTA10C   FORM     12.2
ACTA11C   FORM     12.2
ACTA12C   FORM     12.2
ACTA13C   FORM     12.2
ACTACMC   FORM     12.2
ACTACMC2  FORM     12.2
.
ACTBBFC   FORM     12.2
ACTB01C   FORM     12.2
ACTB02C   FORM     12.2
ACTB03C   FORM     12.2
ACTB04C   FORM     12.2
ACTB05C   FORM     12.2
ACTB06C   FORM     12.2
ACTB07C   FORM     12.2
ACTB08C   FORM     12.2
ACTB09C   FORM     12.2
ACTB10C   FORM     12.2
ACTB11C   FORM     12.2
ACTB12C   FORM     12.2
ACTB13C   FORM     12.2
ACTBCMC   FORM     12.2
ACTBCMC2  FORM     12.2
.
BUDA01C   FORM     12.2
BUDA02C   FORM     12.2
BUDA03C   FORM     12.2
BUDA04C   FORM     12.2
BUDA05C   FORM     12.2
BUDA06C   FORM     12.2
BUDA07C   FORM     12.2
BUDA08C   FORM     12.2
BUDA09C   FORM     12.2
BUDA10C   FORM     12.2
BUDA11C   FORM     12.2
BUDA12C   FORM     12.2
BUDA13C   FORM     12.2
.
BUDB01C   FORM     12.2
BUDB02C   FORM     12.2
BUDB03C   FORM     12.2
BUDB04C   FORM     12.2
BUDB05C   FORM     12.2
BUDB06C   FORM     12.2
BUDB07C   FORM     12.2
BUDB08C   FORM     12.2
BUDB09C   FORM     12.2
BUDB10C   FORM     12.2
BUDB11C   FORM     12.2
BUDB12C   FORM     12.2
BUDB13C   FORM     12.2
.
TEMPVAR   DIM      36
TEMPAMTC  FORM     12.5
TEMPAMTS  FORM     12.5
.
PLIN80A   DIM      80
PLIN80B   DIM      79
PLIN52    DIM      51
PLIN100   DIM      100
PLIN110   DIM      109
.
HLIN80A   DIM      80
HLIN80B   DIM      79
HLIN52    DIM      51
HLIN100   DIM      100
HLIN110   DIM      109
.
.---- file status vars (0=file open, 1=file close) ----
.
BUDA1STA  FORM      1
BUDA3STA  FORM      1
FPSA1STA  FORM      1
FPSA2STA  FORM      1
SBUA1STA  FORM      1
SBUA3STA  FORM      1
SMAA1STA  FORM      1
SMAA2STA  FORM      1
.
PERDESC1  DIM       15
PERDESC2  DIM       15
PEREDAT1  DIM       8
PEREDAT2  DIM       8
CPCDATE1  DIM       10
CPCDATE2  DIM       10
.
REPTYPEF  FORM      1
REPTYPE   INIT      "       "
REPTYPE0  INIT      "Accrual"
REPTYPE1  INIT      "Cash"
.
WEBIND    FORM      1
.
.OPEN FILES FOR PROCEDURE
.------------------------
          CALL    MAKEXP00                      * Create Export File
.
          MOVE    "0",CNOUNDLN                  * underlines
.
          OPEN    CONTROLF,"controlf"
          CALL    RDFMCO50
          CALL    RDFMCO51
          CALL    RDFMCO52
.
          UNPACK  SP70,SAVHACC,SAVHLEV,SAVHPRT  * clear save variables
          MOVE    ZERO,DATCNT
.
          OPEN    FMSAMAA1,"fmsamaaf"
          OPEN    FMSCCAA1,"fmsccaaf"
          OPEN    FMSRSFA1,"fmsrsfaf"
          OPEN    FMSRSFA2,"fmsrsfaf"
          OPEN    FMSRSFA3,"fmsrsfaf"
          OPEN    FMSSBAA1,"fmssbaaf"
          OPEN    FMSTCFA1,"fmstcfaf"
          OPEN    FMSPRCA1,"fmsprcaf"
          OPEN    IBAESCA1,"ibaescaf"
          OPEN    IBAESCA2,"ibaescaf"
.
          MOVE    ZERO,OVRCD
          TRAP    OVERCOND IF IO
          OPEN    FMSWCFA1,"fmswcfaf"
          TRAPCLR IO
          MOVE    OVRCD,WEBIND
.
.************************************************************************
. PRNT - Print Report                                 Called By ML      *
.        Requires -FMRDLED,FMRDREP,FMRDLEV,FMRDFPR,FMRDTPR (screen data)*
.************************************************************************
PRNT0000  PACK      SAVCOSTC,SP70
          BRANCH    DISPFLAG,PRNT0500
          DISPLAY   *P1:24,*EL,*P50:24,"Printing :   ";              
.
PRNT0500  MOVE      ZERO,CPAGENO         * reset page no.           
          CLOCK     TIME,CTIMEIS         * get current time        
          MOVE      "999",CLNO           * set line number        
          CALL      FILE0000             * goto correct position in file
          BRANCH    EXIT,PRNT9000        * If the Ledger has Disappeared
.
          PACK      FILENAME,FMSP,CURYEAR,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FILENAME
          TRAPCLR   IO
          MOVE      OVRCD,FPSA1STA       * set up status for file
.
          PACK      FILENAME,FMSS,CURYEAR,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA1,FILENAME
          TRAPCLR   IO
          MOVE      OVRCD,SMAA1STA       * set up status for file
.
          MOVE      CURYEAR,FORM4
          SUB       ONE,FORM4
          PACK      FILENAME,FMSP,FORM4,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA2,FILENAME
          TRAPCLR   IO
          MOVE      OVRCD,FPSA2STA       * set up status for file
.
          PACK      FILENAME,FMSS,FORM4,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA2,FILENAME
          TRAPCLR   IO
          MOVE      OVRCD,SMAA2STA       * set up status for file
.
          PACK      FILENAME,FMSB,FMRDCBT,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA1,FILENAME
          TRAPCLR   IO
          MOVE      OVRCD,BUDA1STA       * set up status for file
.
          PACK      FILENAME,FMSB,FMRDPBT,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA3,FILENAME
          TRAPCLR   IO
          MOVE      OVRCD,BUDA3STA       * set up status for file
.
          PACK      FILENAME,FMSC,FMRDCBT,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSBUA1,FILENAME
          TRAPCLR   IO
          MOVE      OVRCD,SBUA1STA       * set up status for file
.
          PACK      FILENAME,FMSC,FMRDPBT,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSBUA3,FILENAME
          TRAPCLR   IO
          MOVE      OVRCD,SBUA3STA       * set up status for file
.
PRNT1000  CALL      RKFMRF3              * get next record     
          BRANCH    OVRCD,PRNT9000       * no more records ?  
          MATCH     FMRFLED,FMLALEDG                               
          GOTO      PRNT9000 IF NOT EQUAL   * correct ledger ?    
          MATCH     FMRFREP,FMRDREP                            
          GOTO      PRNT9000 IF NOT EQUAL   * correct report ?
          MATCH     FMRFPOS,FMRDTPR                    
          GOTO      PRNT9000 IF LESS        * in print range ?     
.
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,PRNT1000
          MATCH     FMRDLEV,FMAMCLEV
          GOTO      PRNT1000 IF LESS        * level in desired range ?
.
          MATCH     "0",FMRDSUPP            * No Sub Accounts
          IF        !@EQUAL
            CALL      SUBA0000              * Process Sub Accounts
          ENDIF
.
          CALL      CKHD0000                * Print Total Level Accounts
          GOTO      PRNT1000                * get next record
.
PRNT9000  COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL            * print head if nothing printed
          CALL      LINE0000                     * print line
          PRINT     *N,"****   End of Report   ****"
          CALL      RESP0000                     * Reset Printer if required
          CALL      TRAN0000                     * Transfer Export File  
.
PRNT9999  GOTO      FMSPR999
.------------------------------------------------------------
. Sub Accounts Level 1
.------------------------------------------------------------
SUBA0000  PACK      ACCKEY01,FMRFLED,FMRFACC,SP70
          PACK      SAVKEY01,FMRFLED,FMRFREP,FMRFPOS,FMRFSEQ,FMRFACC,SP70
          MATCH     "3",FMRDSUPP
          GOTO      SUBA0100 IF EQUAL
.
          MOVE      "0",FMPRSUPP
          PACK      KEY3,FMRFPRT,SP70
          CALL      RDFMPR1
          MATCH     "1",FMPRSUPP
          GOTO      SUBA9000 IF EQUAL       * suppress printing of sub accs
.
SUBA0100  PACK      KEY33,FMRFLED,FMRFACC,SP70
          CALL      RSFMTC1
SUBA1000  CALL      RKFMTC1
          BRANCH    OVRCD,SUBA9000
          PACK      KEY14,FMTCTLED,FMTCTACC
          MATCH     ACCKEY01,KEY14
          GOTO      SUBA9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1
          BRANCH    OVRCD,SUBA1000
          MATCH     FMRDLEV,FMAMCLEV
          GOTO      SUBA1000 IF LESS        * level in desired range ?
.
          MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          BRANCH    F1,SUBA1200,SUBA1200,SUBA1200,SUBA1200,SUBA1200:
                       SUBA1100,SUBA1000,SUBA1200,SUBA1100
.
SUBA1100  CALL      CHKREP00      * Check if Account is on the Report
          BRANCH    EXIT,SUBA1000 * Yes so ignore
.
          MATCH     "1",FMRDSUPP  * Posting Only ?
          GOTO      SUBA1000 IF EQUAL
.
          CALL      SUBB0000      * Sub Account Level 2
.
SUBA1200  MOVE      FMTCPRT,FMRFPRT
          CALL      CKHD0000                     * print data
          GOTO      SUBA1000                     * get next record
.
SUBA9000  MOVE      SAVKEY01,KEY26
          CALL      RDFMRF3
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          CALL      RDFMAM1
.
SUBA9999  RETURN
.
.------------------------------------------------------------
. Check to see if the account is on the report
.------------------------------------------------------------
CHKREP00  MOVE      ZERO,EXIT
          PACK      KEY26,FMAMLEDG,FMAMACCT,FMRDREP,SP70
          CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,CHKREP90
          PACK      KEY16,FMRFLED,FMRFACC,FMRFREP,SP70
          MATCH     KEY16,KEY26
          GOTO      CHKREP90 IF NOT EQUAL
          MOVE      ONE,EXIT
CHKREP90  
CHKREP99  RETURN
.**********************************************************************
. LINE - Print Header                                 Called By PRNT
.**********************************************************************
LINE0000  ADD       ONE,CLNO
          BRANCH    FMUDWID,LINE1100,LINE1200,LINE1300,LINE1400
.
LINE1100  PRINT     "--------------------------------------------":
                    "--------------------------------------------":
                    "--------------------------------------------"
          GOTO      LINE9999
.
LINE1200  PRINT     "----------------------------------------":
                    "----------------------------------------"
          GOTO      LINE9999
.
LINE1300  PRINT     "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------"
          GOTO      LINE9999
.
LINE1400  PRINT     "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------":
                    "----------------------------------------":
                    "----------"
          GOTO      LINE9999
.
LINE9999  RETURN
.**********************************************************************
. FILE - Go to starting position on file              Called By PRNT
.**********************************************************************
FILE0000  PACK      KEY2,FMRDLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,FILE9500
.
          MOVE      ZERO,LASER
          MATCH     SP70,FMRDPT
          GOTO      FILE0100 IF EQUAL
          PACK      KEY5,SP3,FMRDPT
          CALL      RDIBES2
          BRANCH    OVRCD,FILE0100
          MOVE      IBESLAS,LASER
.
FILE0100  PACK      KEY26,FMLALEDG,FMRDREP,FMRDFPR,SP70
.
          CALL      RSFMRF3                 * go to next desired position
          CALL      BANR0000                * Print Banner Page
          CALL      HEAD0000                * start new page
          MOVE      ZERO,OVRCD              * continue
          GOTO      FILE9900
.
FILE9500  MOVE      ONE,EXIT
          CALL      HEAD0000                * start new page
          PRINT     "**********  LEDGER MASTER RECORD MISSING  **********"
          GOTO      FILE9999
.
FILE9900  MOVE      ZERO,EXIT
.
FILE9999  RETURN
..***********************************************************************
.* ACT - Set up actual values                                           *
.************************************************************************
ACT0000   MATCH   "7",FMAMTYPE
          GOTO    ACT0100 IF LESS
          CALL    STAA0000
          GOTO    ACT9999
.
ACT0100   MATCH   "7",FMAMTYPE
          GOTO    ACT9999 IF EQUAL
.
          CALL    ZACT0000
          BRANCH  MOVEFLAG,ACT0200,ACT1000            * current or last year?
.
ACT0200   PACK    KEY14,FMAMLEDG,FMAMACCT,SP70
          COMPARE ONE,FPSA1STA
          CALL    RDFMFP1 IF NOT EQUAL               * read 
          GOTO    ACT2000
.
ACT1000   PACK    KEY14,FMAMLEDG,FMAMACCT
          COMPARE ONE,FPSA2STA
          CALL    RDFMFP2 IF NOT EQUAL               * read previous fin year
.
ACT2000   BRANCH  FMRDCAS,ACT3000                    * cash or acrual
.
. Using acrual values
. -------------------
.
.--- Dollars and cents
.
          STORE   FMFPABF,MOVEFLAG,ACTABFC,ACTBBFC
          STORE   FMFPA01,MOVEFLAG,ACTA01C,ACTB01C
          STORE   FMFPA02,MOVEFLAG,ACTA02C,ACTB02C
          STORE   FMFPA03,MOVEFLAG,ACTA03C,ACTB03C
          STORE   FMFPA04,MOVEFLAG,ACTA04C,ACTB04C
          STORE   FMFPA05,MOVEFLAG,ACTA05C,ACTB05C
          STORE   FMFPA06,MOVEFLAG,ACTA06C,ACTB06C
          STORE   FMFPA07,MOVEFLAG,ACTA07C,ACTB07C
          STORE   FMFPA08,MOVEFLAG,ACTA08C,ACTB08C
          STORE   FMFPA09,MOVEFLAG,ACTA09C,ACTB09C
          STORE   FMFPA10,MOVEFLAG,ACTA10C,ACTB10C
          STORE   FMFPA11,MOVEFLAG,ACTA11C,ACTB11C
          STORE   FMFPA12,MOVEFLAG,ACTA12C,ACTB12C
          STORE   FMFPA13,MOVEFLAG,ACTA13C,ACTB13C
          STORE   FMFPCOM,MOVEFLAG,ACTACMC,ACTBCMC
          STORE   FMFPCOM2,MOVEFLAG,ACTACMC2,ACTBCMC2
.
          GOTO    ACT9999
.
. Using Cash values
. -----------------
.
.---Dollars and cents
.
ACT3000   STORE   FMFPCBF,MOVEFLAG,ACTABFC,ACTBBFC
          STORE   FMFPC01,MOVEFLAG,ACTA01C,ACTB01C
          STORE   FMFPC02,MOVEFLAG,ACTA02C,ACTB02C
          STORE   FMFPC03,MOVEFLAG,ACTA03C,ACTB03C
          STORE   FMFPC04,MOVEFLAG,ACTA04C,ACTB04C
          STORE   FMFPC05,MOVEFLAG,ACTA05C,ACTB05C
          STORE   FMFPC06,MOVEFLAG,ACTA06C,ACTB06C
          STORE   FMFPC07,MOVEFLAG,ACTA07C,ACTB07C
          STORE   FMFPC08,MOVEFLAG,ACTA08C,ACTB08C
          STORE   FMFPC09,MOVEFLAG,ACTA09C,ACTB09C
          STORE   FMFPC10,MOVEFLAG,ACTA10C,ACTB10C
          STORE   FMFPC11,MOVEFLAG,ACTA11C,ACTB11C
          STORE   FMFPC12,MOVEFLAG,ACTA12C,ACTB12C
          STORE   FMFPC13,MOVEFLAG,ACTA13C,ACTB13C
          STORE   FMFPCOM,MOVEFLAG,ACTACMC,ACTBCMC
          STORE   FMFPCOM2,MOVEFLAG,ACTACMC2,ACTBCMC2
.
ACT9999   RETURN 
.
ZACT0000  MOVE     ZERO,FMFPABFT
          MOVE     ZERO,FMFPA01T
          MOVE     ZERO,FMFPA02T
          MOVE     ZERO,FMFPA03T
          MOVE     ZERO,FMFPA04T
          MOVE     ZERO,FMFPA05T
          MOVE     ZERO,FMFPA06T
          MOVE     ZERO,FMFPA07T
          MOVE     ZERO,FMFPA08T
          MOVE     ZERO,FMFPA09T
          MOVE     ZERO,FMFPA10T
          MOVE     ZERO,FMFPA11T
          MOVE     ZERO,FMFPA12T
          MOVE     ZERO,FMFPA13T
.
          MOVE     ZERO,FMFPABF
          MOVE     ZERO,FMFPA01
          MOVE     ZERO,FMFPA02
          MOVE     ZERO,FMFPA03
          MOVE     ZERO,FMFPA04
          MOVE     ZERO,FMFPA05
          MOVE     ZERO,FMFPA06
          MOVE     ZERO,FMFPA07
          MOVE     ZERO,FMFPA08
          MOVE     ZERO,FMFPA09
          MOVE     ZERO,FMFPA10
          MOVE     ZERO,FMFPA11
          MOVE     ZERO,FMFPA12
          MOVE     ZERO,FMFPA13
.
          MOVE     ZERO,FMFPCBFT
          MOVE     ZERO,FMFPC01T
          MOVE     ZERO,FMFPC02T
          MOVE     ZERO,FMFPC03T
          MOVE     ZERO,FMFPC04T
          MOVE     ZERO,FMFPC05T
          MOVE     ZERO,FMFPC06T
          MOVE     ZERO,FMFPC07T
          MOVE     ZERO,FMFPC08T
          MOVE     ZERO,FMFPC09T
          MOVE     ZERO,FMFPC10T
          MOVE     ZERO,FMFPC11T
          MOVE     ZERO,FMFPC12T
          MOVE     ZERO,FMFPC13T
.
          MOVE     ZERO,FMFPCBF
          MOVE     ZERO,FMFPC01
          MOVE     ZERO,FMFPC02
          MOVE     ZERO,FMFPC03
          MOVE     ZERO,FMFPC04
          MOVE     ZERO,FMFPC05
          MOVE     ZERO,FMFPC06
          MOVE     ZERO,FMFPC07
          MOVE     ZERO,FMFPC08
          MOVE     ZERO,FMFPC09
          MOVE     ZERO,FMFPC10
          MOVE     ZERO,FMFPC11
          MOVE     ZERO,FMFPC12
          MOVE     ZERO,FMFPC13
          MOVE     ZERO,FMFPCOM
          MOVE     ZERO,FMFPCOMD
          MOVE     ZERO,FMFPCOM2
.
          RETURN
.************************************************************************
.* BUD - Set up Budget values                                           *
.************************************************************************
BUD0000   MATCH     "7",FMAMTYPE
          GOTO      BUD9999 IF NOT LESS
.
          CALL      ZBUD0000
          BRANCH    MOVEFLAG,BUD0100,BUD1000           * current or last year?
.
BUD0100   PACK      KEY14,FMAMLEDG,FMAMACCT
          COMPARE   ONE,BUDA1STA
          CALL      RDFMBU1 IF NOT EQUAL               * read current fin. year
          GOTO      BUD2000
.
BUD1000   PACK      KEY14,FMAMLEDG,FMAMACCT
          COMPARE   ONE,BUDA3STA
          CALL      RDFMBU3 IF NOT EQUAL               * read previous fin year
.
.--- Dollars and cents
.
BUD2000   STORE   FMBUCA01,MOVEFLAG,BUDA01C,BUDB01C
          STORE   FMBUCA02,MOVEFLAG,BUDA02C,BUDB02C
          STORE   FMBUCA03,MOVEFLAG,BUDA03C,BUDB03C
          STORE   FMBUCA04,MOVEFLAG,BUDA04C,BUDB04C
          STORE   FMBUCA05,MOVEFLAG,BUDA05C,BUDB05C
          STORE   FMBUCA06,MOVEFLAG,BUDA06C,BUDB06C
          STORE   FMBUCA07,MOVEFLAG,BUDA07C,BUDB07C
          STORE   FMBUCA08,MOVEFLAG,BUDA08C,BUDB08C
          STORE   FMBUCA09,MOVEFLAG,BUDA09C,BUDB09C
          STORE   FMBUCA10,MOVEFLAG,BUDA10C,BUDB10C
          STORE   FMBUCA11,MOVEFLAG,BUDA11C,BUDB11C
          STORE   FMBUCA12,MOVEFLAG,BUDA12C,BUDB12C
          STORE   FMBUCA13,MOVEFLAG,BUDA13C,BUDB13C
.
BUD9999   RETURN 
.
ZBUD0000  MOVE      ZERO,FMBUCA01
          MOVE      ZERO,FMBUCA02
          MOVE      ZERO,FMBUCA03
          MOVE      ZERO,FMBUCA04
          MOVE      ZERO,FMBUCA05
          MOVE      ZERO,FMBUCA06
          MOVE      ZERO,FMBUCA07
          MOVE      ZERO,FMBUCA08
          MOVE      ZERO,FMBUCA09
          MOVE      ZERO,FMBUCA10
          MOVE      ZERO,FMBUCA11
          MOVE      ZERO,FMBUCA12
          MOVE      ZERO,FMBUCA13
.
          MOVE      ZERO,FMBUCB01
          MOVE      ZERO,FMBUCB02
          MOVE      ZERO,FMBUCB03
          MOVE      ZERO,FMBUCB04
          MOVE      ZERO,FMBUCB05
          MOVE      ZERO,FMBUCB06
          MOVE      ZERO,FMBUCB07
          MOVE      ZERO,FMBUCB08
          MOVE      ZERO,FMBUCB09
          MOVE      ZERO,FMBUCB10
          MOVE      ZERO,FMBUCB11
          MOVE      ZERO,FMBUCB12
          MOVE      ZERO,FMBUCB13
.
          MOVE      ZERO,FMBUCC01
          MOVE      ZERO,FMBUCC02
          MOVE      ZERO,FMBUCC03
          MOVE      ZERO,FMBUCC04
          MOVE      ZERO,FMBUCC05
          MOVE      ZERO,FMBUCC06
          MOVE      ZERO,FMBUCC07
          MOVE      ZERO,FMBUCC08
          MOVE      ZERO,FMBUCC09
          MOVE      ZERO,FMBUCC10
          MOVE      ZERO,FMBUCC11
          MOVE      ZERO,FMBUCC12
          MOVE      ZERO,FMBUCC13
          RETURN
.
.************************************************************************
.* STAT - Set up Statistical values                                     *
.************************************************************************
STAA0000  BRANCH  MOVEFLAG,STAA0100,STAA1000          * current or last year?
.
STAA0100  CALL    ZSTA0000
          PACK    KEY14,FMAMLEDG,FMAMACCT
          COMPARE ONE,SMAA1STA
          CALL    RDFMSS1 IF NOT EQUAL               * read current fin. year
          GOTO    STAA2000
.
STAA1000  CALL    ZSTA0000
          PACK    KEY14,FMAMLEDG,FMAMACCT
          COMPARE ONE,SMAA2STA
          CALL    RDFMSS2 IF NOT EQUAL               * read previous fin year
.
.--- 
.
STAA2000  BRANCH  FMRDCAS,STAA2500
          STORE   FMSSA1,MOVEFLAG,ACTA01S,ACTB01S
          STORE   FMSSA2,MOVEFLAG,ACTA02S,ACTB02S
          STORE   FMSSA3,MOVEFLAG,ACTA03S,ACTB03S
          STORE   FMSSA4,MOVEFLAG,ACTA04S,ACTB04S
          STORE   FMSSA5,MOVEFLAG,ACTA05S,ACTB05S
          STORE   FMSSA6,MOVEFLAG,ACTA06S,ACTB06S
          STORE   FMSSA7,MOVEFLAG,ACTA07S,ACTB07S
          STORE   FMSSA8,MOVEFLAG,ACTA08S,ACTB08S
          STORE   FMSSA9,MOVEFLAG,ACTA09S,ACTB09S
          STORE   FMSSA10,MOVEFLAG,ACTA10S,ACTB10S
          STORE   FMSSA11,MOVEFLAG,ACTA11S,ACTB11S
          STORE   FMSSA12,MOVEFLAG,ACTA12S,ACTB12S
          STORE   FMSSA13,MOVEFLAG,ACTA13S,ACTB13S
          GOTO    STAA2600
.
STAA2500  STORE   FMSSC1,MOVEFLAG,ACTA01S,ACTB01S
          STORE   FMSSC2,MOVEFLAG,ACTA02S,ACTB02S
          STORE   FMSSC3,MOVEFLAG,ACTA03S,ACTB03S
          STORE   FMSSC4,MOVEFLAG,ACTA04S,ACTB04S
          STORE   FMSSC5,MOVEFLAG,ACTA05S,ACTB05S
          STORE   FMSSC6,MOVEFLAG,ACTA06S,ACTB06S
          STORE   FMSSC7,MOVEFLAG,ACTA07S,ACTB07S
          STORE   FMSSC8,MOVEFLAG,ACTA08S,ACTB08S
          STORE   FMSSC9,MOVEFLAG,ACTA09S,ACTB09S
          STORE   FMSSC10,MOVEFLAG,ACTA10S,ACTB10S
          STORE   FMSSC11,MOVEFLAG,ACTA11S,ACTB11S
          STORE   FMSSC12,MOVEFLAG,ACTA12S,ACTB12S
          STORE   FMSSC13,MOVEFLAG,ACTA13S,ACTB13S
.
STAA2600  BRANCH  MOVEFLAG,STAA3000                   * current or last year?
          CALL    ZSBU0000
          PACK    KEY14,FMAMLEDG,FMAMACCT
          COMPARE ONE,SBUA3STA
          CALL    RDFMST3 IF NOT EQUAL               * read current fin. year
          GOTO    STAA4000
.
STAA3000  CALL    ZSBU0000
          PACK    KEY14,FMAMLEDG,FMAMACCT
          COMPARE ONE,SBUA1STA
          CALL    RDFMST1 IF NOT EQUAL               * read previous fin year
.
.--- 
.
STAA4000  STORE   FMSTCA01,MOVEFLAG,BUDA01S,BUDB01S
          STORE   FMSTCA02,MOVEFLAG,BUDA02S,BUDB02S
          STORE   FMSTCA03,MOVEFLAG,BUDA03S,BUDB03S
          STORE   FMSTCA04,MOVEFLAG,BUDA04S,BUDB04S
          STORE   FMSTCA05,MOVEFLAG,BUDA05S,BUDB05S
          STORE   FMSTCA06,MOVEFLAG,BUDA06S,BUDB06S
          STORE   FMSTCA07,MOVEFLAG,BUDA07S,BUDB07S
          STORE   FMSTCA08,MOVEFLAG,BUDA08S,BUDB08S
          STORE   FMSTCA09,MOVEFLAG,BUDA09S,BUDB09S
          STORE   FMSTCA10,MOVEFLAG,BUDA10S,BUDB10S
          STORE   FMSTCA11,MOVEFLAG,BUDA11S,BUDB11S
          STORE   FMSTCA12,MOVEFLAG,BUDA12S,BUDB12S
          STORE   FMSTCA13,MOVEFLAG,BUDA13S,BUDB13S
.
STAA9999  RETURN 
.
ZSBU0000  MOVE    ZERO,FMSTCA01
          MOVE    ZERO,FMSTCA02
          MOVE    ZERO,FMSTCA03
          MOVE    ZERO,FMSTCA04
          MOVE    ZERO,FMSTCA05
          MOVE    ZERO,FMSTCA06
          MOVE    ZERO,FMSTCA07
          MOVE    ZERO,FMSTCA08
          MOVE    ZERO,FMSTCA09
          MOVE    ZERO,FMSTCA10
          MOVE    ZERO,FMSTCA11
          MOVE    ZERO,FMSTCA12
          MOVE    ZERO,FMSTCA13
          RETURN
.
ZSTA0000  MOVE    ZERO,FMSSA1
          MOVE    ZERO,FMSSA2
          MOVE    ZERO,FMSSA3
          MOVE    ZERO,FMSSA4
          MOVE    ZERO,FMSSA5
          MOVE    ZERO,FMSSA6
          MOVE    ZERO,FMSSA7
          MOVE    ZERO,FMSSA8
          MOVE    ZERO,FMSSA9
          MOVE    ZERO,FMSSA10
          MOVE    ZERO,FMSSA11
          MOVE    ZERO,FMSSA12
          MOVE    ZERO,FMSSA13
          MOVE    ZERO,FMSSC1
          MOVE    ZERO,FMSSC2
          MOVE    ZERO,FMSSC3
          MOVE    ZERO,FMSSC4
          MOVE    ZERO,FMSSC5
          MOVE    ZERO,FMSSC6
          MOVE    ZERO,FMSSC7
          MOVE    ZERO,FMSSC8
          MOVE    ZERO,FMSSC9
          MOVE    ZERO,FMSSC10
          MOVE    ZERO,FMSSC11
          MOVE    ZERO,FMSSC12
          MOVE    ZERO,FMSSC13
          RETURN
.
.**********************************************************************
. BANR - Print Banner Page and Setup Printer          Called By FILE
.        Setup Strings - S1 - Set laser printer to 132 Landscape
.                             This Sends all print types starting with "s1"
.                        S2 - Set laser printer to 80 Column Print
.                             This Sends all print types starting with "s2"
.                        S3 - Set printer to 160 Column Print
.                             This Sends all print types starting with "s3"
.                        S4 - Set printer to 210 Column Print
.                             This Sends all print types starting with "s4"
.                        S5 - Return Printer to Normal
.                             This Sends all print types starting with "s5"
.**********************************************************************
BANR0000  BRANCH  FMUDWID,BANR1000,BANR2000,BANR3000,BANR4000
.
. Report Width 132 char
.
BANR1000  BRANCH  LASER,BANR1500        * Is it a Laser Printer ?
          GOTO    BANR5000              * No so Setup Not Required
.
BANR1500  PACK    KEY5,FMRDPT,S1,SP70
          CALL    RSIBES1
BANR1600  CALL    RKIBES1
          BRANCH  OVRCD,BANR5000
          MATCH   S1,IBESPT
          GOTO    BANR5000 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    BANR1600
.
. Report Width 80  char 
.
BANR2000  BRANCH  LASER,BANR2500
          GOTO    BANR5000              * No so Setup Not Required
.
BANR2500  PACK    KEY5,FMRDPT,S2,SP70
          CALL    RSIBES1
BANR2600  CALL    RKIBES1
          BRANCH  OVRCD,BANR5000
          MATCH   S2,IBESPT
          GOTO    BANR5000 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    BANR2600
.
. Report Width 160 char (Send Printer Codes to Set Printer to Pitch 12)
.
BANR3000  PACK    KEY5,FMRDPT,S3,SP70
          CALL    RSIBES1
BANR3600  CALL    RKIBES1
          BRANCH  OVRCD,BANR5000
          MATCH   S3,IBESPT
          GOTO    BANR5000 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    BANR3600
.
. Report Width 210 char (Send Printer Codes to Set Printer to Pitch 16)
.
BANR4000  PACK    KEY5,FMRDPT,S4,SP70
          CALL    RSIBES1
.
BANR4600  CALL    RKIBES1
          BRANCH  OVRCD,BANR5000
          MATCH   S3,IBESPT
          GOTO    BANR5000 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    BANR4600
. 
. Printer Setup Complete so Print Banner Page (Always 80 Char Print)
.
BANR5000  MOVE      PASSCODE,KEY4
          MOVE      SP70,SECUSER
          OPEN      IHAPASS1,"ihapassf"
          CALL      RDPASS1
          CLOSE     IHAPASS1
          PACK      KEY6,FMLALEDG,CURYEAR
          MOVE      PERDTO,PERCNT
          CALL      RDFMLC1
.
          LOAD      PERSDAT,PERCNT,FMLC01FR,FMLC02FR,FMLC03FR,FMLC04FR,FMLC05FR:
                                  FMLC06FR,FMLC07FR,FMLC08FR,FMLC09FR,FMLC10FR:
                                  FMLC11FR,FMLC12FR,FMLC13FR
.
          LOAD      PERLOCK,PERCNT,FMLC01IN,FMLC02IN,FMLC03IN,FMLC04IN,FMLC05IN:
                                  FMLC06IN,FMLC07IN,FMLC08IN,FMLC09IN,FMLC10IN:
                                  FMLC11IN,FMLC12IN,FMLC13IN
.
          LOAD      PERDESC1,PERDFROM,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                     FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                     FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                     FMLC13DE
.
          LOAD      PEREDAT1,PERDFROM,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                     FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                     FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                     FMLC13TO
.
          LOAD      PERDESC2,PERDTO,FMLC01DE,FMLC02DE,FMLC03DE,FMLC04DE:
                                     FMLC05DE,FMLC06DE,FMLC07DE,FMLC08DE:
                                     FMLC09DE,FMLC10DE,FMLC11DE,FMLC12DE:
                                     FMLC13DE
.
          LOAD      PEREDAT2,PERDTO,FMLC01TO,FMLC02TO,FMLC03TO,FMLC04TO:
                                     FMLC05TO,FMLC06TO,FMLC07TO,FMLC08TO:
                                     FMLC09TO,FMLC10TO,FMLC11TO,FMLC12TO:
                                     FMLC13TO
.
          UNPACK    PEREDAT1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,CPCDATE1
.
          UNPACK    PEREDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,CPCDATE2
.
          MOVE      ANSN,ANS
          LOAD      ANS,FMRDCAS,ANSY
          MOVE      FMRDDES,PRGNAM
.
          MOVE      TWO,REPTYPEF
          LOAD      REPTYPEF,FMRDCAS,ONE
          MOVE      SP70,REPTYPE
          LOAD      REPTYPE,REPTYPEF,REPTYPE1,REPTYPEF0
.
          PACK      YESNO,NO,SP70
          LOAD      YESNO,FMRDZER,YES
.
          MOVE      ZERO,F1
          MOVE      FMRDSUPP,F1
          MOVE      SUPPTYP0,SUPPTYPE
          LOAD      SUPPTYPE,F1,SUPPTYP1,SUPPTYP2,SUPPTYP3
.
          MOVE      ZERO,F1
          MOVE      LASER,F1
          PACK      YESNO1,NO,SP70
          LOAD      YESNO1,F1,YES
.
          MOVE      ZERO,F1
          MOVE      FMRDCRIN,F1
          PACK      YESNO2,NO,SP70
          LOAD      YESNO2,F1,YES
.
          MOVE      ZERO,F1
          MOVE      FMRDSHED,F1
          PACK      YESNO3,NO,SP70
          LOAD      YESNO3,F1,YES
.
          PRINT   *F:
                  *N,"----------------------------------------":
                     "----------------------------------------":
                  *N,"----------------------------------------":
                     "----------------------------------------":
                  *N,"|                                       ":
                     "                                       |":
                  *N,"|                      Report Selection ":
                     "Details                                |":
                  *N,"|                      -----------------":
                     "-------                                |":
                  *N,"|                                       ":
                     "                                       |":
                  *N,"|      Printed by User       : ",SECUSER:
                     *80,"|":
                  *N,"|      On Port               : ",PORT:
                     *80,"|":
                  *N,"|                                       ":
                     "                                       |":
                  *N,"|      Report Parameter Code : ",FMRDCOD,SP5,FMRDDES:
                     *80,"|":
                  *N,"|                                       ":
                     "                                       |":
                  *N,"|      Ledger                : ",FMLALEDG,SP6,FMLADESC:
                     *80,"|":
                  *N,"|      From Period/Fin Year  : ",PERDFROM,"/",CURYEAR:
                     SP1,PERDESC1," Ending ",CPCDATE1:
                     *80,"|":
                  *N,"|      To   Period/Fin Year  : ",PERDTO,"/",CURYEAR:
                     SP1,PERDESC2," Ending ",CPCDATE2:
                     *80,"|":
                  *N,"|                                       ":
                     "                                       |":
                  *N,"|      Report Sequence Code  : ",FMRDREP,SP6,FMLBDESC:
                     *80,"|":
                  *N,"|      Report Style          : ",FMRDRS,SP5,FMUDDES:
                     *80,"|":
                  *N,"|      Printer Type          : ",FMRDPT:
                     *80,"|":
                  *N,"|      Laser            (Y/N): ",YESNO1:
                     *80,"|":
                  *N,"|      From Level            : ",FMRDLEV,SP5,FMLVDESC:
                     *80,"|":
                  *N,"|      First Print Position  : ",FMRDFPR:
                     *80,"|":
                  *N,"|      Last  Print Position  : ",FMRDTPR:
                     *80,"|":
                  *N,"|      Cash/Accrual Report   : ",REPTYPE:
                     *80,"|":
                  *N,"|      Budget Type           : ",FMRDCBT,SP4,BUDDESC:
                     *80,"|":
                  *N,"|      Alternate Budget Type : ",FMRDPBT,SP4,ABUDDESC:
                     *80,"|":
                  *N,"|      Posting Ac Name       : ",FMRDDOP,SP7,ADESC:
                     *80,"|":
                  *N,"|      Zero Account          : ",YESNO:
                     *80,"|":
                  *N,"|      Sub Account Print     : ",SUPPTYPE:
                     *80,"|":
                  *N,"|      Use Credit Print (Y/N): ",YESNO2:
                     *80,"|":
                  *N,"|      Suppress Heading A/Cs : ",YESNO3:
                     *80,"|"
.
BANR8000  
          COMPARE   ONE,PRTWARN
          GOTO      BANR9000 IF EQUAL
          PRINT      "|      WARNING - Accounting period has not been locked":
                     *80,"|":
                  *N,"|                This will be an interim report only":
                     *80,"|"
.
BANR9000  PRINT      "----------------------------------------":
                     "----------------------------------------":
                  *N,"----------------------------------------":
                     "----------------------------------------"

BANR9999  RETURN
.**********************************************************************
. Reset Printer
.**********************************************************************
RESP0000  BRANCH  LASER,RESP1000
          BRANCH  FMUDWID,RESP9999,RESP9999
RESP1000  PACK    KEY5,FMRDPT,S5,SP70
          CALL    RSIBES1
RESP2000  CALL    RKIBES1
          BRANCH  OVRCD,RESP9999
          MATCH   S5,IBESPT
          GOTO    RESP9999 IF NOT EQUAL
          CALL    PRSEQ000
          GOTO    RESP2000

RESP9999  RETURN
.**********************************************************************
. HEAD - Print Header                                 Called By PRNT
.**********************************************************************
HEAD0000  BRANCH    FMUDWID,HEAD1000,HEAD2000,HEAD3000,HEAD4000
.
HEAD1000  CALL      HEAD132                      * print header
          PRINT        "Ledger                     : ",FMLALEDG,SP1,FMLADESC:
                    *N,"From Period/Financial Year : ",PERDFROM,"/",CURYEAR:
                       SP1,PERDESC1," Ending ",CPCDATE1:
                    *N,"To   Period/Financial Year : ",PERDTO,"/",CURYEAR:
                       SP1,PERDESC2," Ending ",CPCDATE2
          ADD       "3",CLNO
          CALL      LINE0000                     * print line
          MOVE      FMUDH12,DIM52
          PRINT     FMUDH11,DIM52
          ADD       ONE,CLNO
.
          MATCH     SP80,FMUDH21
          GOTO      HEAD1100 IF NOT EQUAL
          MATCH     SP80,FMUDH22
          GOTO      HEAD1200 IF EQUAL
.
HEAD1100  MOVE      FMUDH22,DIM52
          PRINT     FMUDH21,DIM52
          ADD       ONE,CLNO
.
HEAD1200  CALL      LINE0000                     * print line
          GOTO      HEAD9999
.
HEAD2000  CALL      HEAD80
          PRINT        "Ledger                     : ",FMLALEDG,SP1,FMLADESC:
                    *N,"From Period/Financial Year : ",PERDFROM,"/",CURYEAR:
                       SP1,PERDESC1," Ending ",CPCDATE1:
                    *N,"To   Period/Financial Year : ",PERDTO,"/",CURYEAR:
                       SP1,PERDESC2," Ending ",CPCDATE2
          ADD       "3",CLNO
          CALL      LINE0000                     * print line
          PRINT     FMUDH11
          ADD       ONE,CLNO
          MATCH     SP80,FMUDH21
          GOTO      HEAD2100 IF EQUAL
.
          PRINT     FMUDH21
          ADD       ONE,CLNO
HEAD2100  CALL      LINE0000                     * print line
          GOTO      HEAD9999
.
HEAD3000  CALL      HEAD160                      * print header
          PRINT        "Ledger                     : ",FMLALEDG,SP1,FMLADESC:
                    *N,"From Period/Financial Year : ",PERDFROM,"/",CURYEAR:
                       SP1,PERDESC1," Ending ",CPCDATE1:
                    *N,"To   Period/Financial Year : ",PERDTO,"/",CURYEAR:
                       SP1,PERDESC2," Ending ",CPCDATE2
          ADD       "3",CLNO
          CALL      LINE0000                     * print line
          PRINT     FMUDH11,FMUDH12
          ADD       ONE,CLNO
.
          MATCH     SP80,FMUDH21
          GOTO      HEAD3100 IF NOT EQUAL
          MATCH     SP80,FMUDH22
          GOTO      HEAD3200 IF EQUAL
.
HEAD3100  PRINT     FMUDH21,FMUDH22
          ADD       ONE,CLNO
.
HEAD3200  CALL      LINE0000                     * print line
          GOTO      HEAD9999
.
HEAD4000  CALL      HEAD210                      * print header
          PRINT        "Ledger                     : ",FMLALEDG,SP1,FMLADESC:
                    *N,"From Period/Financial Year : ",PERDFROM,"/",CURYEAR:
                       SP1,PERDESC1," Ending ",CPCDATE1:
                    *N,"To   Period/Financial Year : ",PERDTO,"/",CURYEAR:
                       SP1,PERDESC2," Ending ",CPCDATE2
          ADD       "3",CLNO
          CALL      LINE0000                     * print line
          PRINT     FMUDH11,FMUDH12,FMUDH13
          ADD       ONE,CLNO
.
          MATCH     SP80,FMUDH21
          GOTO      HEAD4100 IF NOT EQUAL
          MATCH     SP80,FMUDH22
          GOTO      HEAD4100 IF NOT EQUAL
          MATCH     SP80,FMUDH23
          GOTO      HEAD4200 IF EQUAL
.
HEAD4100  PRINT     FMUDH21,FMUDH22,FMUDH23
          ADD       ONE,CLNO
.
HEAD4200  CALL      LINE0000                     * print line
          GOTO      HEAD9999
.
HEAD160   BRANCH   CNOUNDLN,HEAD160A         * No underlines
          COMPARE  ZERO,CPAGENO              * First page ?
          GOTO     HEAD160A IF EQUAL         * Yes. Don't print underlines
.
          CALL     UND160                    * Print the last line of prev page
.
HEAD160A  ADD      ONE,CPAGENO
.
          RESET    CPHDROPT                  * Do we have a header option ?
          GOTO     HEAD160B IF EOS           * No.
.
          MATCH    SP20,CPHDROPT             * Do we have a header option ?
          GOTO     HEAD160B IF EQUAL         * No.
.
          PRINT    *F,PRGID,*60,CNAME,*146,"DATE : ",CDATE:
                   *N,VERSION,*60,PRGNAM,SP1,*+,CPHDROPT:
                      *146,"TIME : ",CTIMEIS:
                   *N,*146,"PAGE :      ",CPAGENO
          GOTO     HEAD160Z
.
HEAD160B  PRINT    *F,PRGID,*60,CNAME,*146,"DATE : ",CDATE:
                   *N,VERSION,*60,PRGNAM,*146,"TIME : ",CTIMEIS:
                   *N,*146,"PAGE :      ",CPAGENO
.
HEAD160Z  CALL     IBACLOCK
          MOVE     THREE,CLNO
          GOTO      HEAD9999
.
HEAD210   BRANCH   CNOUNDLN,HEAD210A         * No underlines
          COMPARE  ZERO,CPAGENO              * First page ?
          GOTO     HEAD210A IF EQUAL         * Yes. Don't print underlines
.
          CALL     UND210                    * Print the last line of prev page
.
HEAD210A  ADD      ONE,CPAGENO
.
          RESET    CPHDROPT                  * Do we have a header option ?
          GOTO     HEAD210B IF EOS           * No.
.
          MATCH    SP20,CPHDROPT             * Do we have a header option ?
          GOTO     HEAD210B IF EQUAL         * No.
.
          PRINT    *F,PRGID,*60,CNAME,*146,"DATE : ",CDATE:
                   *N,VERSION,*60,PRGNAM,SP1,*+,CPHDROPT:
                      *146,"TIME : ",CTIMEIS:
                   *N,*146,"PAGE :      ",CPAGENO
          GOTO     HEAD210Z
.
HEAD210B  PRINT    *F,PRGID,*60,CNAME,*146,"DATE : ",CDATE:
                   *N,VERSION,*60,PRGNAM,*146,"TIME : ",CTIMEIS:
                   *N,*146,"PAGE :      ",CPAGENO
.
HEAD210Z  CALL     IBACLOCK
          MOVE     THREE,CLNO
          GOTO     HEAD9999
.
HEAD9999  RETURN
.
UND160    PRINT    *1,"*---------------------------------------":
                      "----------------------------------------":
                      "----------------------------------------":
                      "---------------------------------------*"
          ADD      ONE,CLNO 
          RETURN 
.
UND210    PRINT    *1,"*---------------------------------------":
                      "----------------------------------------":
                      "----------------------------------------":
                      "----------------------------------------":
                      "----------------------------------------":
                      "---------*"
          ADD      ONE,CLNO 
          RETURN 
.
.**********************************************************************
. Print a line
.**********************************************************************
PROW0000  COMPARE   ONE,EXPORTYN
          GOTO      PROW0020 IF NOT EQUAL
          MOVE      ONE,F2
PROW0010  WRITE     EXPORTFL,SEQ;EXPORTVR[F2],TABDELM;
          ADD       ONE,F2
          COMPARE   F2,EXPORTVN
          GOTO      PROW0010 IF NOT EQUAL
          WRITE     EXPORTFL,SEQ;SP1
.
PROW0020  MOVE      FMPRBOLD,F1            * increment bolding indicator
          ADD       ONE,F1                 * increment bolding indicator
.
PROW0050  CALL      PRTL0000
.
PROW0900  BRANCH    LASER,PROW1000    * Bolding Draft Printer
          SUB       ONE,F1            * decrement bolding indicator
          BRANCH    F1,PROW0050       * repeat print for bolding ?
.
PROW1000  PRINT     SP1
          ADD       ONE,CLNO
.
PROW9999  RETURN
.
.**********************************************************************
. Print Before Print Code Options
.**********************************************************************
PBEF0000  COMPARE   "0",FMPRBLIN
          GOTO      PBEF2000 IF EQUAL       * No Before Lines
.
          COMPARE   "9",FMPRBLIN
          GOTO      PBEF1000 IF EQUAL       * New Page ?
.
PBEF0500  COMPARE   "1",FMPRBLIN
          GOTO      PBEF2000 IF LESS        * print blank line ?
.
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      PBEF1000 IF NOT LESS    * page full
          PRINT     SP1
          IF        EXPORTYN=1
            WRITE     EXPORTFL,SEQ;SP1
          ENDIF
          SUB       ONE,FMPRBLIN
          GOTO      PBEF0500
.
PBEF1000  CALL      HEAD0000
.
PBEF2000  COMPARE   TWO,FMPRUNDL
          CALL      UNDL0000 IF EQUAL       * print underline ?
          COMPARE   THREE,FMPRUNDL
          CALL      UNDL0000 IF EQUAL       * print underline ?
.
          COMPARE   ZERO,LASER
          GOTO      PBEF9999 IF EQUAL
.
          MATCH     SP70,FMPRPT1B
          GOTO      PBEF2100 IF EQUAL
          PACK      KEY5,FMRDPT,FMPRPT1B
          CALL      RDIBES1
          BRANCH    OVRCD,PBEF2100
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PBEF2100  MATCH     SP70,FMPRPT2B
          GOTO      PBEF2200 IF EQUAL
          PACK      KEY5,FMRDPT,FMPRPT2B
          CALL      RDIBES1
          BRANCH    OVRCD,PBEF2200
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PBEF2200  MATCH     SP70,FMPRPT3B
          GOTO      PBEF9999 IF EQUAL
          PACK      KEY5,FMRDPT,FMPRPT3B
          CALL      RDIBES1
          BRANCH    OVRCD,PBEF2300
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PBEF2300  
.
PBEF9999  RETURN
.
.**********************************************************************
. Print After Print Code Options
.**********************************************************************
PAFT0000  COMPARE   ZERO,LASER
          GOTO      PAFT0400 IF EQUAL
.
          MATCH     SP70,FMPRPT1A
          GOTO      PAFT0100 IF EQUAL
          PACK      KEY5,FMRDPT,FMPRPT1A
          CALL      RDIBES1
          BRANCH    OVRCD,PAFT0100
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PAFT0100  MATCH     SP70,FMPRPT2A
          GOTO      PAFT0200 IF EQUAL
          PACK      KEY5,FMRDPT,FMPRPT2A
          CALL      RDIBES1
          BRANCH    OVRCD,PAFT0200
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PAFT0200  MATCH     SP70,FMPRPT3A
          GOTO      PAFT0400 IF EQUAL
          PACK      KEY5,FMRDPT,FMPRPT3A
          CALL      RDIBES1
          BRANCH    OVRCD,PAFT0400
.
          CALL      PRSEQ000       * Print Escape Sequence 
.
PAFT0400  COMPARE   "1",FMPRUNDL
          CALL      UNDL0000 IF EQUAL       * print underline ?
          COMPARE   "3",FMPRUNDL
          CALL      UNDL0000 IF EQUAL       * print underline ?
.
          COMPARE   "0",FMPRALIN
          GOTO      PAFT9999 IF EQUAL       * Print Any After Blank Lines (No)
.
          COMPARE   "9",FMPRALIN
          GOTO      PAFT1000 IF EQUAL       * Print New Page
.
PAFT0500  COMPARE   "1",FMPRALIN
          GOTO      PAFT9999 IF LESS        * print blank line ?
.
          ADD       ONE,CLNO
          COMPARE   "60",CLNO
          GOTO      PAFT1000 IF NOT LESS    * page full
          PRINT     SP1
          IF        EXPORTYN=1
            WRITE     EXPORTFL,SEQ;SP1
          ENDIF
          SUB       ONE,FMPRALIN
          GOTO      PAFT0500
.
PAFT1000  CALL      HEAD0000
.
.
PAFT9999  RETURN
.**********************************************************************
. Print Draft Underline (If Required)
.**********************************************************************
UNDL0000  BRANCH    LASER,UNDL9999
          PACK      LUND50,DASHES
          PACK      LUND52,DASHES
          PACK      LUND80,DASHES
          PACK      REPCHAR,DASH,FMPRUNDC
          REP       REPCHAR,LUND50
          REP       REPCHAR,LUND52
          REP       REPCHAR,LUND80
          MATCH     "7",FMAMTYPE
          GOTO      UNDL1000 IF NOT EQUAL
.
          CALL      UHED0000
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL1000  BRANCH    FMUDWID,UNDL1100,UNDL1200,UNDL1300,UNDL1400
          GOTO      UNDL9999
.
UNDL1100  PRINT     LUND80,LUND52          * 132 char print
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL1200  PRINT     LUND80                 * 80  char print
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL1300  PRINT     LUND80,LUND80          * 160 char print
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL1400  PRINT     LUND80,LUND80,LUND50   * 210 char print
          ADD       ONE,CLNO
          GOTO      UNDL9999
.
UNDL9999  RETURN
.----------------------------------------------------------------------
. Check heading account
.----------------------------------------------------------------------
CKHD0000  ADD       ONE,DATCNT         * display every 100th record
          IF        (DATCNT%100=1) & (DISPFLAG=0)
            DISPLAY   *P61:24,*V2LON,FMAMLEDG,"/",FMAMACCT,*EL;
          ENDIF
          CALL      CKSV0000            * Check Save Cost Centre
.
          MATCH     "7",FMAMTYPE                 * dont calc for headings
          GOTO      CKHD0050 IF EQUAL
.
          MOVE      ONE,MOVEFLAG
          CALL      ACT0000                      * set up current actual vars
          CALL      BUD0000                      * set up current budget vars
.
          MOVE      TWO,MOVEFLAG
          CALL      ACT0000                      * set up last years actual vars
          CALL      BUD0000                      * set up last years budget vars
.
          CALL      CREDT000                     * Check for Credit Account Ind
.
          BRANCH    FMRDZER,CKHD0050
          MOVE      FMAMTYPE,ACTYPE
.
. Next Section Comments for Print Zero Problem at STV
.------------------------------------------------------
.         IF       ACTYPE>7    
.           CALL     ADDTS000                     * calculate check total
.         ELSE
.           CALL     ADDTA000                     * calculate check total
.         ENDIF
.         BRANCH   EXIT,CKHD9999
.
CKHD0050   
          MATCH     "1",FMRDSHED            * is parameter set ?
          GOTO      CKHD6000 IF NOT EQUAL
.
          MATCH     "7",FMAMTYPE            * IF acct to be printed is a heading
          GOTO      CKHD5000 IF NOT EQUAL
.
          MATCH     FMAMCLEV,SAVHLEV        *    IF curr level > saved level
          GOTO      CKHD4000 IF NOT LESS
          MATCH     SP70,SAVHLEV
          GOTO      CKHD4000 IF EQUAL
.                                           *    THEN print data in save vars
          PACK      SAVEACCT,FMAMLEDG,FMAMACCT,FMRFPRT,SP70
          PACK      FMRFPRT,SAVHPRT,SP70
          PACK      KEY14,SAVHACC,SP70
          CALL      RDFMAM1
          CALL      MLPR0000
          UNPACK    SAVEACCT,KEY14,FMRFPRT
          CALL      RDFMAM1
.                                           *    ENDIF
CKHD4000  
.                                           *    move current data to save vars
          PACK      SAVHACC,FMAMLEDG,FMAMACCT,SP70
          PACK      SAVHLEV,FMAMCLEV,SP70
          PACK      SAVHPRT,FMRFPRT,SP70
          GOTO      CKHD9999
.
.
CKHD5000
          MATCH     FMAMCLEV,SAVHLEV        *    IF curr level <= saved level
          GOTO      CKHD6000 IF LESS
.                                           *    THEN print data in save vars
. ------- Check if account is going to print b4 we print the saved heading
          CALL      CIWP0000                * Check if will print
          IF        WILITPRT=FALSE
            GOTO      CKHD9999              * Don't Print Head - Could be blank
          ENDIF
          PACK      SAVEACCT,FMAMLEDG,FMAMACCT,FMRFPRT,SP70
          PACK      FMRFPRT,SAVHPRT,SP70
          PACK      KEY14,SAVHACC,SP70
          CALL      RDFMAM1
          CALL      MLPR0000
          UNPACK    SAVEACCT,KEY14,FMRFPRT
          CALL      RDFMAM1
.                                           *    ENDIF
CKHD6000  
.                                           *    clear save vars
          UNPACK    SAVHACC,KEY2,KEY12
          MATCH     SAVCHEAD,KEY12 
          IF        !@EQUAL
            PACK      SAVHACC,SP70
            PACK      SAVHLEV,SP70
            PACK      SAVHPRT,SP70
          ENDIF
.
          CALL      MLPR0000                * print current account data
          GOTO      CKHD9999
.
.
CKHD9999  RETURN
.----------------------------------------------------------------------
. Check Cost Centre Save Variables
.----------------------------------------------------------------------
CKSV0000
          MATCH     SAVCOSTC,SP70
          IF        @EQUAL
            CALL      SETCST00
            MOVE      SP70,SAVCHEAD
            MATCH     "7",FMAMTYPE
            IF        @EQUAL
              MOVE      FMAMACCT,SAVCHEAD
            ENDIF
          ENDIF
          MATCH     SAVCOSTC,FMAMACCT
          IF        !@EQUAL
            CALL      SETCST00
            MOVE      SP70,SAVCHEAD
            MATCH     "7",FMAMTYPE
            IF        @EQUAL
              MOVE      FMAMACCT,SAVCHEAD
            ENDIF
          ENDIF
.
CKSV9999  RETURN
.------------------------------------------------------------
. Credit Accounts if Required
.------------------------------------------------------------
CREDT000  MATCH     "1",FMRDCRIN                 * Credit Account Mult for Rept.
          GOTO      CREDT999 IF NOT EQUAL
          MATCH     "1",FMRFCRP                  * Check Total Account
          GOTO      CREDT999 IF NOT EQUAL
.
. Actuals
.------------------------------------------------------------
          MULT      SEQ,ACTABFC
          MULT      SEQ,ACTA01C
          MULT      SEQ,ACTA02C
          MULT      SEQ,ACTA03C
          MULT      SEQ,ACTA04C
          MULT      SEQ,ACTA05C
          MULT      SEQ,ACTA06C
          MULT      SEQ,ACTA07C
          MULT      SEQ,ACTA08C
          MULT      SEQ,ACTA09C
          MULT      SEQ,ACTA10C
          MULT      SEQ,ACTA11C
          MULT      SEQ,ACTA12C
          MULT      SEQ,ACTA13C
          MULT      SEQ,ACTACMC
          MULT      SEQ,ACTACMC2
.
          MULT      SEQ,ACTBBFC
          MULT      SEQ,ACTB01C
          MULT      SEQ,ACTB02C
          MULT      SEQ,ACTB03C
          MULT      SEQ,ACTB04C
          MULT      SEQ,ACTB05C
          MULT      SEQ,ACTB06C
          MULT      SEQ,ACTB07C
          MULT      SEQ,ACTB08C
          MULT      SEQ,ACTB09C
          MULT      SEQ,ACTB10C
          MULT      SEQ,ACTB11C
          MULT      SEQ,ACTB12C
          MULT      SEQ,ACTB13C
          MULT      SEQ,ACTBCMC
          MULT      SEQ,ACTBCMC2
.
          MULT      SEQ,ACTA01S
          MULT      SEQ,ACTA02S
          MULT      SEQ,ACTA03S
          MULT      SEQ,ACTA04S
          MULT      SEQ,ACTA05S
          MULT      SEQ,ACTA06S
          MULT      SEQ,ACTA07S
          MULT      SEQ,ACTA08S
          MULT      SEQ,ACTA09S
          MULT      SEQ,ACTA10S
          MULT      SEQ,ACTA11S
          MULT      SEQ,ACTA12S
          MULT      SEQ,ACTA13S
.
          MULT      SEQ,ACTB01S
          MULT      SEQ,ACTB02S
          MULT      SEQ,ACTB03S
          MULT      SEQ,ACTB04S
          MULT      SEQ,ACTB05S
          MULT      SEQ,ACTB06S
          MULT      SEQ,ACTB07S
          MULT      SEQ,ACTB08S
          MULT      SEQ,ACTB09S
          MULT      SEQ,ACTB10S
          MULT      SEQ,ACTB11S
          MULT      SEQ,ACTB12S
          MULT      SEQ,ACTB13S
.
. Budgets
.------------------------------------------------------------
          MULT      SEQ,BUDA01C
          MULT      SEQ,BUDA02C
          MULT      SEQ,BUDA03C
          MULT      SEQ,BUDA04C
          MULT      SEQ,BUDA05C
          MULT      SEQ,BUDA06C
          MULT      SEQ,BUDA07C
          MULT      SEQ,BUDA08C
          MULT      SEQ,BUDA09C
          MULT      SEQ,BUDA10C
          MULT      SEQ,BUDA11C
          MULT      SEQ,BUDA12C
          MULT      SEQ,BUDA13C
.
          MULT      SEQ,BUDB01C
          MULT      SEQ,BUDB02C
          MULT      SEQ,BUDB03C
          MULT      SEQ,BUDB04C
          MULT      SEQ,BUDB05C
          MULT      SEQ,BUDB06C
          MULT      SEQ,BUDB07C
          MULT      SEQ,BUDB08C
          MULT      SEQ,BUDB09C
          MULT      SEQ,BUDB10C
          MULT      SEQ,BUDB11C
          MULT      SEQ,BUDB12C
          MULT      SEQ,BUDB13C
.
          MULT      SEQ,BUDA01S
          MULT      SEQ,BUDA02S
          MULT      SEQ,BUDA03S
          MULT      SEQ,BUDA04S
          MULT      SEQ,BUDA05S
          MULT      SEQ,BUDA06S
          MULT      SEQ,BUDA07S
          MULT      SEQ,BUDA08S
          MULT      SEQ,BUDA09S
          MULT      SEQ,BUDA10S
          MULT      SEQ,BUDA11S
          MULT      SEQ,BUDA12S
          MULT      SEQ,BUDA13S
.
          MULT      SEQ,BUDB01S
          MULT      SEQ,BUDB02S
          MULT      SEQ,BUDB03S
          MULT      SEQ,BUDB04S
          MULT      SEQ,BUDB05S
          MULT      SEQ,BUDB06S
          MULT      SEQ,BUDB07S
          MULT      SEQ,BUDB08S
          MULT      SEQ,BUDB09S
          MULT      SEQ,BUDB10S
          MULT      SEQ,BUDB11S
          MULT      SEQ,BUDB12S
          MULT      SEQ,BUDB13S
.
CREDT999  RETURN
.----------------------------------------------------------------------
. Store Cost Centre
.----------------------------------------------------------------------
SETCST00  MOVE      FMAMACCT,SAVCOSTC    
          SETLPTR   SAVCOSTC,FMSUUD4A
          UNPACK  SP70,SAVHACC,SAVHLEV,SAVHPRT  * clear save variables
.
SETCST99  RETURN
.----------------------------------------------------------------------
. Main "Print Line" Routine 
.                           - fmsudr record read at start of program
.----------------------------------------------------------------------
MLPR0000  MOVE      CLNO,F2                      * check if at end of page
          ADD       FMUDROW,F2
          COMPARE   "60",F2                      * at end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
.
           MOVE     FMRDZER,CHKZERO   * reset print for zero accounts
           LOAD     CHKZERO,FMUDROW,CHKZERO,ONE,ONE,ONE,ONE
           MOVE     FMAMTYPE,F1       * always print heading accounts
           LOAD     CHKZERO,F1,CHKZERO,CHKZERO,CHKZERO,CHKZERO,CHKZERO:
                               CHKZERO,ONE,CHKZERO,CHKZERO
           UNPACK   SP70,FMPRCODE,FMPRDESC  * clear print code data
           UNPACK   SP70,FMPRPT1B,FMPRPT2B,FMPRPT3B:
                         FMPRPT1A,FMPRPT2A,FMPRPT3A,FMPRUNDC
           MOVE     ZERO,FMPRUNDL     * check for heading account
           MOVE     ZERO,FMPRBLIN     * if heading account only print the row
           MOVE     ZERO,FMPRALIN     * with the account description so that
           MOVE     ZERO,FMPRBOLD     * only the description is underlined
           MOVE     ZERO,HEADFLAG     * Flag for Print Features    
           MOVE     ZERO,PRINTFL 
.
           MATCH    SP70,FMRFPRT
           IF       !(@EQUAL)
             PACK     KEY3,FMRFPRT,SP70
             CALL     RDFMPR1           * get print code data
             IF       OVRCD=0
               MOVE     ONE,PRINTFL      * Flag for Print Features
               IF       FMPRBLIN=9
                 MOVE     ONE,CHKZERO
               ENDIF
               IF       FMPRALIN=9
                 MOVE     ONE,CHKZERO
               ENDIF
             ENDIF
           ENDIF
.
           MOVE     ZERO,CURROW       * Row Count 
.
MLPR1000   COMPARE  FMUDROW,CURROW    * Test to see if all rows have been
           GOTO     MLPR9000 IF EQUAL * printed exit if true
           ADD      ONE,CURROW        * Next Row
           MOVE     ZERO,CURCOL       * Column Count
           MOVE     ZERO,COLUMN
           BRANCH   HEADFLAG,MLPR9000
           CALL     CLRR0000          * Clear Row
.
MLPR2000   COMPARE  "20",CURCOL       * Check for last column
           GOTO     MLPR3000 IF EQUAL
           ADD      ONE,CURCOL        * Next Column
           CALL     LCOL0000          * Load Column Parameters
           COMPARE  ZERO,COLTYPE      * Column Type so last column
           GOTO     MLPR3000 IF EQUAL 
.
           CALL     LROW0000          * Load variable into Print Array
           GOTO     MLPR2000
.
MLPR3000   COMPARE  ONE,CHKZERO       * check if ok to print
           GOTO     MLPR9999 IF NOT EQUAL
.
           IF       (PRINTFL=1)&(CURROW=1)
             CALL     PBEF0000        * Print Before on first Line only
           ENDIF
.
           MATCH    FMAMACCT,SAVCHEAD
           IF       @EQUAL
             MOVE     SP70,SAVCHEAD   * Only save if not printed yet
             UNPACK  SP70,SAVHACC,SAVHLEV,SAVHPRT  * clear save variables
           ENDIF
           CALL     PROW0000
           GOTO     MLPR1000
.
MLPR9000   COMPARE  ONE,PRINTFL
           CALL     PAFT0000 IF EQUAL  * Print After Routine
.
MLPR9999   RETURN
.----------------------------------------------------------------------
. Check if this Account is going to be printed - ie is it a zero account
.   and we are not printing zero accounts (FMRDZER = 0)
.----------------------------------------------------------------------
CIWP0000  MOVE      FALSE,WILITPRT               * All won't print initially
          MOVE      CLNO,F2                      * check if at end of page
          ADD       FMUDROW,F2
          COMPARE   "60",F2                      * at end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
.
          MOVE     FMRDZER,CHKZERO   * reset print for zero accounts
          LOAD     CHKZERO,FMUDROW,CHKZERO,ONE,ONE,ONE,ONE
          MOVE     FMAMTYPE,F1       * always print heading accounts
          LOAD     CHKZERO,F1,CHKZERO,CHKZERO,CHKZERO,CHKZERO,CHKZERO:
                              CHKZERO,ONE,CHKZERO,CHKZERO
          UNPACK   SP70,FMPRCODE,FMPRDESC  * clear print code data
          UNPACK   SP70,FMPRPT1B,FMPRPT2B,FMPRPT3B:
                        FMPRPT1A,FMPRPT2A,FMPRPT3A,FMPRUNDC
          MOVE     ZERO,FMPRUNDL     * check for heading account
          MOVE     ZERO,FMPRBLIN     * if heading account only print the row
          MOVE     ZERO,FMPRALIN     * with the account description so that
          MOVE     ZERO,FMPRBOLD     * only the description is underlined
          MOVE     ZERO,HEADFLAG     * Flag for Print Features    
          MOVE     ZERO,PRINTFL 
.
          MATCH    SP70,FMRFPRT
          IF       !(@EQUAL)
            PACK     KEY3,FMRFPRT,SP70
            CALL     RDFMPR1           * get print code data
            IF       OVRCD=0
              MOVE     ONE,PRINTFL      * Flag for Print Features
              IF       FMPRBLIN=9
                MOVE     ONE,CHKZERO
              ENDIF
              IF       FMPRALIN=9
                MOVE     ONE,CHKZERO
              ENDIF
            ENDIF
          ENDIF
.
          MOVE     ZERO,CURROW       * Row Count 
.
CIWP1000  COMPARE  FMUDROW,CURROW    * Test to see if all rows have been
          GOTO     CIWP9999 IF EQUAL * printed exit if true
          ADD      ONE,CURROW
          MOVE     ZERO,CURCOL       * Column Count
          MOVE     ZERO,COLUMN
          BRANCH   HEADFLAG,CIWP9999
          CALL     CLRR0000          * Clear Row
.
CIWP2000  COMPARE  "20",CURCOL       * Check for last column
          GOTO     CIWP3000 IF EQUAL
          ADD      ONE,CURCOL        * Next Column
          CALL     LCOL0000          * Load Column Parameters
          COMPARE  ZERO,COLTYPE      * Column Type so last column
          GOTO     CIWP3000 IF EQUAL 
.
          CALL     LROW0000          * Load variable into Print Array
          GOTO     CIWP2000
.
CIWP3000  IF       CHKZERO=1
            MOVE     TRUE,WILITPRT
          ENDIF
.
CIWP9999  CALL     CLRR0000          * Clear Row
          RETURN
.----------------------------------------------------------------------
. Load Column Parameters
.----------------------------------------------------------------------
LCOL0000   MOVE     CURROW,RCLOAD    * Calculate load number
           SUB      ONE,RCLOAD
           MULT     "20",RCLOAD
           ADD      CURCOL,RCLOAD
.
           LOAD     COLTYPE,RCLOAD,FMUDT101,FMUDT102,FMUDT103,FMUDT104,FMUDT105:
                                   FMUDT106,FMUDT107,FMUDT108,FMUDT109,FMUDT110:
                                   FMUDT111,FMUDT112,FMUDT113,FMUDT114,FMUDT115:
                                   FMUDT116,FMUDT117,FMUDT118,FMUDT119,FMUDT120:
                                   FMUDT201,FMUDT202,FMUDT203,FMUDT204,FMUDT205:
                                   FMUDT206,FMUDT207,FMUDT208,FMUDT209,FMUDT210:
                                   FMUDT211,FMUDT212,FMUDT213,FMUDT214,FMUDT215:
                                   FMUDT216,FMUDT217,FMUDT218,FMUDT219,FMUDT220:
                                   FMUDT301,FMUDT302,FMUDT303,FMUDT304,FMUDT305:
                                   FMUDT306,FMUDT307,FMUDT308,FMUDT309,FMUDT310:
                                   FMUDT311,FMUDT312,FMUDT313,FMUDT314,FMUDT315:
                                   FMUDT316,FMUDT317,FMUDT318,FMUDT319,FMUDT320:
                                   FMUDT401,FMUDT402,FMUDT403,FMUDT404,FMUDT405:
                                   FMUDT406,FMUDT407,FMUDT408,FMUDT409,FMUDT410:
                                   FMUDT411,FMUDT412,FMUDT413,FMUDT414,FMUDT415:
                                   FMUDT416,FMUDT417,FMUDT418,FMUDT419,FMUDT420:
                                   FMUDT501,FMUDT502,FMUDT503,FMUDT504,FMUDT505:
                                   FMUDT506,FMUDT507,FMUDT508,FMUDT509,FMUDT510:
                                   FMUDT511,FMUDT512,FMUDT513,FMUDT514,FMUDT515:
                                   FMUDT516,FMUDT517,FMUDT518,FMUDT519,FMUDT520
.
           LOAD     COLWIDT,RCLOAD,FMUDW101,FMUDW102,FMUDW103,FMUDW104,FMUDW105:
                                   FMUDW106,FMUDW107,FMUDW108,FMUDW109,FMUDW110:
                                   FMUDW111,FMUDW112,FMUDW113,FMUDW114,FMUDW115:
                                   FMUDW116,FMUDW117,FMUDW118,FMUDW119,FMUDW120:
                                   FMUDW201,FMUDW202,FMUDW203,FMUDW204,FMUDW205:
                                   FMUDW206,FMUDW207,FMUDW208,FMUDW209,FMUDW210:
                                   FMUDW211,FMUDW212,FMUDW213,FMUDW214,FMUDW215:
                                   FMUDW216,FMUDW217,FMUDW218,FMUDW219,FMUDW220:
                                   FMUDW301,FMUDW302,FMUDW303,FMUDW304,FMUDW305:
                                   FMUDW306,FMUDW307,FMUDW308,FMUDW309,FMUDW310:
                                   FMUDW311,FMUDW312,FMUDW313,FMUDW314,FMUDW315:
                                   FMUDW316,FMUDW317,FMUDW318,FMUDW319,FMUDW320:
                                   FMUDW401,FMUDW402,FMUDW403,FMUDW404,FMUDW405:
                                   FMUDW406,FMUDW407,FMUDW408,FMUDW409,FMUDW410:
                                   FMUDW411,FMUDW412,FMUDW413,FMUDW414,FMUDW415:
                                   FMUDW416,FMUDW417,FMUDW418,FMUDW419,FMUDW420:
                                   FMUDW501,FMUDW502,FMUDW503,FMUDW504,FMUDW505:
                                   FMUDW506,FMUDW507,FMUDW508,FMUDW509,FMUDW510:
                                   FMUDW511,FMUDW512,FMUDW513,FMUDW514,FMUDW515:
                                   FMUDW516,FMUDW517,FMUDW518,FMUDW519,FMUDW520
.
           LOAD     COLATYP,RCLOAD,FMUDA101,FMUDA102,FMUDA103,FMUDA104,FMUDA105:
                                   FMUDA106,FMUDA107,FMUDA108,FMUDA109,FMUDA110:
                                   FMUDA111,FMUDA112,FMUDA113,FMUDA114,FMUDA115:
                                   FMUDA116,FMUDA117,FMUDA118,FMUDA119,FMUDA120:
                                   FMUDA201,FMUDA202,FMUDA203,FMUDA204,FMUDA205:
                                   FMUDA206,FMUDA207,FMUDA208,FMUDA209,FMUDA210:
                                   FMUDA211,FMUDA212,FMUDA213,FMUDA214,FMUDA215:
                                   FMUDA216,FMUDA217,FMUDA218,FMUDA219,FMUDA220:
                                   FMUDA301,FMUDA302,FMUDA303,FMUDA304,FMUDA305:
                                   FMUDA306,FMUDA307,FMUDA308,FMUDA309,FMUDA310:
                                   FMUDA311,FMUDA312,FMUDA313,FMUDA314,FMUDA315:
                                   FMUDA316,FMUDA317,FMUDA318,FMUDA319,FMUDA320:
                                   FMUDA401,FMUDA402,FMUDA403,FMUDA404,FMUDA405:
                                   FMUDA406,FMUDA407,FMUDA408,FMUDA409,FMUDA410:
                                   FMUDA411,FMUDA412,FMUDA413,FMUDA414,FMUDA415:
                                   FMUDA416,FMUDA417,FMUDA418,FMUDA419,FMUDA420:
                                   FMUDA501,FMUDA502,FMUDA503,FMUDA504,FMUDA505:
                                   FMUDA506,FMUDA507,FMUDA508,FMUDA509,FMUDA510:
                                   FMUDA511,FMUDA512,FMUDA513,FMUDA514,FMUDA515:
                                   FMUDA516,FMUDA517,FMUDA518,FMUDA519,FMUDA520
.
           LOAD     COLSCAL,RCLOAD,FMUDS101,FMUDS102,FMUDS103,FMUDS104,FMUDS105:
                                   FMUDS106,FMUDS107,FMUDS108,FMUDS109,FMUDS110:
                                   FMUDS111,FMUDS112,FMUDS113,FMUDS114,FMUDS115:
                                   FMUDS116,FMUDS117,FMUDS118,FMUDS119,FMUDS120:
                                   FMUDS201,FMUDS202,FMUDS203,FMUDS204,FMUDS205:
                                   FMUDS206,FMUDS207,FMUDS208,FMUDS209,FMUDS210:
                                   FMUDS211,FMUDS212,FMUDS213,FMUDS214,FMUDS215:
                                   FMUDS216,FMUDS217,FMUDS218,FMUDS219,FMUDS220:
                                   FMUDS301,FMUDS302,FMUDS303,FMUDS304,FMUDS305:
                                   FMUDS306,FMUDS307,FMUDS308,FMUDS309,FMUDS310:
                                   FMUDS311,FMUDS312,FMUDS313,FMUDS314,FMUDS315:
                                   FMUDS316,FMUDS317,FMUDS318,FMUDS319,FMUDS320:
                                   FMUDS401,FMUDS402,FMUDS403,FMUDS404,FMUDS405:
                                   FMUDS406,FMUDS407,FMUDS408,FMUDS409,FMUDS410:
                                   FMUDS411,FMUDS412,FMUDS413,FMUDS414,FMUDS415:
                                   FMUDS416,FMUDS417,FMUDS418,FMUDS419,FMUDS420:
                                   FMUDS501,FMUDS502,FMUDS503,FMUDS504,FMUDS505:
                                   FMUDS506,FMUDS507,FMUDS508,FMUDS509,FMUDS510:
                                   FMUDS511,FMUDS512,FMUDS513,FMUDS514,FMUDS515:
                                   FMUDS516,FMUDS517,FMUDS518,FMUDS519,FMUDS520
.
           LOAD     COLPERD,RCLOAD,FMUDP101,FMUDP102,FMUDP103,FMUDP104,FMUDP105:
                                   FMUDP106,FMUDP107,FMUDP108,FMUDP109,FMUDP110:
                                   FMUDP111,FMUDP112,FMUDP113,FMUDP114,FMUDP115:
                                   FMUDP116,FMUDP117,FMUDP118,FMUDP119,FMUDP120:
                                   FMUDP201,FMUDP202,FMUDP203,FMUDP204,FMUDP205:
                                   FMUDP206,FMUDP207,FMUDP208,FMUDP209,FMUDP210:
                                   FMUDP211,FMUDP212,FMUDP213,FMUDP214,FMUDP215:
                                   FMUDP216,FMUDP217,FMUDP218,FMUDP219,FMUDP220:
                                   FMUDP301,FMUDP302,FMUDP303,FMUDP304,FMUDP305:
                                   FMUDP306,FMUDP307,FMUDP308,FMUDP309,FMUDP310:
                                   FMUDP311,FMUDP312,FMUDP313,FMUDP314,FMUDP315:
                                   FMUDP316,FMUDP317,FMUDP318,FMUDP319,FMUDP320:
                                   FMUDP401,FMUDP402,FMUDP403,FMUDP404,FMUDP405:
                                   FMUDP406,FMUDP407,FMUDP408,FMUDP409,FMUDP410:
                                   FMUDP411,FMUDP412,FMUDP413,FMUDP414,FMUDP415:
                                   FMUDP416,FMUDP417,FMUDP418,FMUDP419,FMUDP420:
                                   FMUDP501,FMUDP502,FMUDP503,FMUDP504,FMUDP505:
                                   FMUDP506,FMUDP507,FMUDP508,FMUDP509,FMUDP510:
                                   FMUDP511,FMUDP512,FMUDP513,FMUDP514,FMUDP515:
                                   FMUDP516,FMUDP517,FMUDP518,FMUDP519,FMUDP520
.
           LOAD     COLFORM,RCLOAD,FMUDF101,FMUDF102,FMUDF103,FMUDF104,FMUDF105:
                                   FMUDF106,FMUDF107,FMUDF108,FMUDF109,FMUDF110:
                                   FMUDF111,FMUDF112,FMUDF113,FMUDF114,FMUDF115:
                                   FMUDF116,FMUDF117,FMUDF118,FMUDF119,FMUDF120:
                                   FMUDF201,FMUDF202,FMUDF203,FMUDF204,FMUDF205:
                                   FMUDF206,FMUDF207,FMUDF208,FMUDF209,FMUDF210:
                                   FMUDF211,FMUDF212,FMUDF213,FMUDF214,FMUDF215:
                                   FMUDF216,FMUDF217,FMUDF218,FMUDF219,FMUDF220:
                                   FMUDF301,FMUDF302,FMUDF303,FMUDF304,FMUDF305:
                                   FMUDF306,FMUDF307,FMUDF308,FMUDF309,FMUDF310:
                                   FMUDF311,FMUDF312,FMUDF313,FMUDF314,FMUDF315:
                                   FMUDF316,FMUDF317,FMUDF318,FMUDF319,FMUDF320:
                                   FMUDF401,FMUDF402,FMUDF403,FMUDF404,FMUDF405:
                                   FMUDF406,FMUDF407,FMUDF408,FMUDF409,FMUDF410:
                                   FMUDF411,FMUDF412,FMUDF413,FMUDF414,FMUDF415:
                                   FMUDF416,FMUDF417,FMUDF418,FMUDF419,FMUDF420:
                                   FMUDF501,FMUDF502,FMUDF503,FMUDF504,FMUDF505:
                                   FMUDF506,FMUDF507,FMUDF508,FMUDF509,FMUDF510:
                                   FMUDF511,FMUDF512,FMUDF513,FMUDF514,FMUDF515:
                                   FMUDF516,FMUDF517,FMUDF518,FMUDF519,FMUDF520
.
           RETURN
.**********************************************************************
. Load a variable into the print array
. the following records should have been read before this routine is 
. called   1. Account Master Record
.          2. Period Summary Record
.          3. Budget Summary Record
.          4. Period Summary Record Last Year
.          5. Stats Summary Record
.          6. Stats Budget Summary
.          7. Stats Last Year Summary
.
. Parameters for column - COLTYPE = column type
.**********************************************************************
LROW0000  MOVE      SP70,TEMPVAR
          BRANCH    COLTYPE,LROW1000,LROW2000
.
LROW0100  MATCH     "7",FMAMTYPE
          GOTO      LROW9000 IF EQUAL
.
          BRANCH    COLTYPE,LROW1000,LROW2000,LROW3000,LROW4000,LROW5000:
                            LROW6000,LROW7000
.
. 1 Account Code
.
LROW1000  MOVE      FMAMACCT,TEMPVAR
          GOTO      LROW9000
.         
. 2 Account Description
.
LROW2000  CALL      FDES0000   * Get Required Description
          UNPACK    DESC35,TEMPVAR
          MATCH     "7",FMAMTYPE
          GOTO      LROW9000 IF NOT EQUAL
          MOVE      ONE,HEADFLAG  * Heading Underline has been set
          CALL      STHS0000      * Store Underline for Heading
          GOTO      LROW9000
.
. 3 Amount
.
LROW3000  CALL      FAMT0000    * Determine Formated Amount
          MOVE      FAMOUNT,TEMPVAR
          GOTO      LROW9000
.
. 4 Variance Amount
.
LROW4000  CALL      FVAR0000
          MOVE      FAMOUNT,TEMPVAR
          GOTO      LROW9000
.
. 5 Variance Percentage
.
LROW5000  CALL      FPVA0000
          MOVE      FAMOUNT,TEMPVAR
          GOTO      LROW9000
.         
. 6 Text
.
LROW6000  MOVE      COLFORM,TEMPVAR
          GOTO      LROW9000
.
. 7 Statistical Unit
.
..LROW7000  CALL      FDES0000   * Get Required Description
LROW7000  UNPACK    FMAMUNIT,TEMPVAR
          MATCH     "7",FMAMTYPE
          GOTO      LROW9000 IF NOT EQUAL
          MOVE      ONE,HEADFLAG  * Heading Underline has been set
          CALL      STHS0000      * Store Underline for Heading
          GOTO      LROW9000
.
LROW9000  CALL      STRC0000
.
LROW9999  RETURN
.**********************************************************************
. FDES format Description
.**********************************************************************
FDES0000  MOVE      FMAMDESC,DESC35
          COMPARE   ZERO,FMRDDOP
          GOTO      FDES9999 IF EQUAL
          MATCH     "8",FMAMTYPE
          GOTO      FDES0500 IF EQUAL
          MATCH     "6",FMAMTYPE
          GOTO      FDES9999 IF NOT LESS
.
FDES0500  BRANCH    FMRDDOP,FDES1000,FDES2000
          GOTO      FDES9999
.
FDES1000  STORE     FMAMACCT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      ACCOUNT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          PACK      KEY14,FMAMLEDG,ACCOUNT
          CALL      RDFMCC1
          BRANCH    OVRCD,FDES9999
          MOVE      FMCCDESC,DESC35
          GOTO      FDES9999
.
FDES2000  MOVE      FMSUUD4A,F2
          ADD       FMSUUD2A,F2
          ADD       ONE,F2
          RESET     FMAMACCT,F2
          MOVE      FMAMACCT,ACCOUNT
          PACK      KEY14,FMAMLEDG,ACCOUNT
          CALL      RDFMSA1
          BRANCH    OVRCD,FDES9999
          MOVE      FMSADESC,DESC35
          GOTO      FDES9999
.
FDES9999  RETURN
.**********************************************************************
. Get And Format Amount
.**********************************************************************
FAMT0000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          BRANCH    COLPERD,FAMT1000,FAMT1000,FAMT1000,FAMT1000,FAMT1000:
                            FAMT1000,FAMT1000,FAMT1000,FAMT1000,FAMT1000:
                            FAMT1000,FAMT1000,FAMT1000,FAMT2000,FAMT3000:
                            FAMT4000,FAMT5000,FAMT6000,FAMT7000,FAMT8000:
                            FAMT8500,FAMT8600,FAMT8700,FAMT8800,FAMT8900:
                            FAMT9000
.
. Select Period Amount
.========================================
FAMT1000  BRANCH    COLATYP,FAMT1100,FAMT1200,FAMT1300,FAMT1400
.
FAMT1100  CALL      CAAPR000
          GOTO      FAMT9990
.
FAMT1200  CALL      CBAPR000
          GOTO      FAMT9990
.
FAMT1300  CALL      CBBPR000
          GOTO      FAMT9990
.
FAMT1400  CALL      CABPR000
          GOTO      FAMT9990
.
. Current Period Amount
.========================================
FAMT2000  BRANCH    COLATYP,FAMT2100,FAMT2200,FAMT2300,FAMT2400
.
FAMT2100  CALL      CAACU000
          GOTO      FAMT9990
.
FAMT2200  CALL      CBACU000
          GOTO      FAMT9990
.
FAMT2300  CALL      CBBCU000
          GOTO      FAMT9990
.
FAMT2400  CALL      CABCU000
          GOTO      FAMT9990
.
. Year to Date Amount
.========================================
FAMT3000  BRANCH    COLATYP,FAMT3100,FAMT3200,FAMT3300,FAMT3400
.
FAMT3100  CALL      CAAYR000
          GOTO      FAMT9990
.
FAMT3200  CALL      CBAYR000
          GOTO      FAMT9990
.
FAMT3300  CALL      CBBYR000
          GOTO      FAMT9990
.
FAMT3400  CALL      CABYR000
          GOTO      FAMT9990
.
. Annual Amount
.==============================
FAMT4000  BRANCH    COLATYP,FAMT4100,FAMT4200,FAMT4300,FAMT4400
.
FAMT4100  CALL      CAAAN000 * Annual Amount Current Actuals
          GOTO      FAMT9990
.
FAMT4200  CALL      CBAAN000 * Annual Amount Budget
          GOTO      FAMT9990
.
FAMT4300  CALL      CBBAN000 * Annual Amount Alternative Budget
          GOTO      FAMT9990
.
FAMT4400  CALL      CABAN000 * Annual Amount Last Year Actuals
          GOTO      FAMT9990
.
. Brought Forward
.==============================
FAMT5000  BRANCH    COLATYP,FAMT5100,FAMT9990,FAMT9990,FAMT5200
.
FAMT5100  MOVE      ACTABFC,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9990
.
FAMT5200  MOVE      ACTBBFC,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9990
.
. Projection
.==============================
.
FAMT6000  BRANCH    COLATYP,FAMT6200,FAMT9990,FAMT9990,FAMT6300        *C-f0901
.
. Current Year Projection
.------------------------
.                                           * Linear Projection        *I-f0901
FAMT6100  CALL      CAAYR000                * Calculate Actuals YTD
          MULT      "12",AMOUNTC
          DIV       PERDTO,AMOUNTC
          MOVE      AMOUNTC,VAMTC           * Yr.Projection
.....     MULT      "12",AMOUNTS
.....     DIV       PERDTO,AMOUNTS
          MOVE      AMOUNTS,VAMTS
          GOTO      FAMT9990
.
.                                           * Percentage Projection
.                                           * YR Budget - [YR Budget *
.                                           *         [YTD Diff / YTD Budget]]
FAMT6200  CALL      CBAYR000                * Calculate Budget YTD     *C-f0901
          MOVE      AMOUNTS,SAMOUNTS        *  Save Statistical Budget *I-f0902
          MOVE      AMOUNTC,SAMOUNTC        *  Save YTD Budget         *I-f0902
          MOVE      AMOUNTS,VAMTS           *  Move Statistical Budget
          MOVE      AMOUNTC,VAMTC           *  Move YTD Budget
          CALL      CAAYR000                * Calculate Actuals YTD
                                            * Calc variance of YTD Actual
          SUB       AMOUNTS,VAMTS           *  is Stat'cal (Bud YTD - Act YTD)
          SUB       AMOUNTC,VAMTC           *  is (YTD Budget - Actual YTD)
                                            * Calc variance ratio of YTD Actual
          DIV       SAMOUNTS,VAMTS                                     *I-f0902
          DIV       SAMOUNTC,VAMTC          *  Variance Ratio (%?)     *I-f0902
.
          CALL      CBAAN000                * Calculate Annual Budget (YR Budget
          MOVE      AMOUNTS,SAMOUNTS        *  Save Stats. YR Budget   *I-f0902
          MOVE      AMOUNTC,SAMOUNTC        *  Save YR Budget          *I-f0902
.
          MULT      VAMTS,SAMOUNTS
          MULT      VAMTC,SAMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          SUB       SAMOUNTC,AMOUNTC        * Projection = YR.B - [YR.B  etc]
          GOTO      FAMT9990
.
FAMT6300  CALL      CBBYR000                                           *C-f0901
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABYR000
          SUB       AMOUNTS,VAMTS
          SUB       AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FAMT9990
.
. Committed 1
.==============================
FAMT7000  BRANCH    COLATYP,FAMT7100,FAMT9990,FAMT9990,FAMT7200
.
FAMT7100  MOVE      ACTACMC,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9990
.
FAMT7200  MOVE      ACTBCMC,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9990
.
. Carried Forward From Last Period Amount
.========================================
FAMT8000  BRANCH    COLATYP,FAMT8100,FAMT8200,FAMT8300,FAMT8400
.
FAMT8100  CALL      CAACF000
          GOTO      FAMT9990
.
FAMT8200  CALL      CBACF000
          GOTO      FAMT9990
.
FAMT8300  CALL      CBBCF000
          GOTO      FAMT9990
.
FAMT8400  CALL      CABCF000
          GOTO      FAMT9990
.
. YTD Movement
.=============
FAMT8500  BRANCH    COLATYP,FAMT8510,FAMT8520,FAMT8530,FAMT8540
.
FAMT8510  CALL      CAAYR000
          SUB       ACTABFC,AMOUNTC
          GOTO      FAMT9990
.
FAMT8520  CALL      CBAYR000
          GOTO      FAMT9990
.
FAMT8530  CALL      CBBYR000
          GOTO      FAMT9990
.
FAMT8540  CALL      CABYR000
          SUB       ACTBBFC,AMOUNTC
          GOTO      FAMT9990
.
. Previous Period
.========================================
FAMT8600  BRANCH    COLATYP,FAMT8610,FAMT8620,FAMT8630,FAMT8640
.
FAMT8610  CALL      CAAPP000
          GOTO      FAMT9990
.
FAMT8620  CALL      CBAPP000
          GOTO      FAMT9990
.
FAMT8630  CALL      CBBPP000
          GOTO      FAMT9990
.
FAMT8640  CALL      CABPP000
          GOTO      FAMT9990
.
. Diff between Current and Previous Period
.=========================================
FAMT8700  BRANCH    COLATYP,FAMT8710,FAMT8720,FAMT8730,FAMT8740
.
FAMT8710  CALL      CAAPP000
          MOVE      AMOUNTC,SAMOUNTC
          MOVE      AMOUNTS,SAMOUNTS
          CALL      CAACU000
          SUB       SAMOUNTC,AMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          GOTO      FAMT9990
.
FAMT8720  CALL      CBAPP000
          MOVE      AMOUNTC,SAMOUNTC
          MOVE      AMOUNTS,SAMOUNTS
          CALL      CBACU000
          SUB       SAMOUNTC,AMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          GOTO      FAMT9990
.
FAMT8730  CALL      CBBPP000
          MOVE      AMOUNTC,SAMOUNTC
          MOVE      AMOUNTS,SAMOUNTS
          CALL      CBBCU000
          SUB       SAMOUNTC,AMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          GOTO      FAMT9990
.
FAMT8740  CALL      CABPP000
          MOVE      AMOUNTC,SAMOUNTC
          MOVE      AMOUNTS,SAMOUNTS
          CALL      CABCU000
          SUB       SAMOUNTC,AMOUNTC
          SUB       SAMOUNTS,AMOUNTS
          GOTO      FAMT9990
.
. Committed 2
.==============================
FAMT8800  BRANCH    COLATYP,FAMT8810,FAMT9990,FAMT9990,FAMT8820
.
FAMT8810  MOVE      ACTACMC2,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9990
.
FAMT8820  MOVE      ACTBCMC2,AMOUNTC
          MOVE      ZERO,AMOUNTS
          GOTO      FAMT9990
.
. Annual Budget - (YTD Actual + Committed Raised + Committed Received)
.=====================================================================
FAMT8900  CALL      CBAAN000                 * Annual Budget
          MOVE      AMOUNTS,TEMPAMTS
          MOVE      AMOUNTC,TEMPAMTC
          CALL      CAAYR000                 * Current YTD Amount
          SUB       AMOUNTS,TEMPAMTS
          SUB       AMOUNTC,TEMPAMTC
. ------- Current Raised
          SUB       ACTACMC,TEMPAMTS       Subtract Received Amount
          SUB       ACTACMC,TEMPAMTC       Subtract Received Amount
          SUB       ACTACMC2,TEMPAMTS      Subtract Raised Amount
          SUB       ACTACMC2,TEMPAMTC      Subtract Raised Amount
          MOVE      TEMPAMTS,AMOUNTS      
          MOVE      TEMPAMTC,AMOUNTC     
          GOTO      FAMT9990
.
. Annual Budget - (YTD Actual + Committed Received)
.==================================================
FAMT9000  CALL      CBAAN000                 * Annual Budget
          MOVE      AMOUNTS,TEMPAMTS
          MOVE      AMOUNTC,TEMPAMTC
          CALL      CAAYR000                 * Current YTD Amount
          SUB       AMOUNTS,TEMPAMTS
          SUB       AMOUNTC,TEMPAMTC
. ------- Current Received
          SUB       ACTACMC,TEMPAMTS       *** May need *PERIODNO/TOTPERD ***
          SUB       ACTACMC,TEMPAMTC       *** May need *PERIODNO/TOTPERD ***
          MOVE      TEMPAMTS,AMOUNTS      *** May need *PERIODNO/TOTPERD ***
          MOVE      TEMPAMTC,AMOUNTC      *** May need *PERIODNO/TOTPERD ***
          GOTO      FAMT9990
.
. ---- format amount ----
.
FAMT9990  CALL      FRMA0000           * format account
.
FAMT9999  RETURN
.**********************************************************************
. Store a Variable into the Print Array & Export
. Fields Passed to Routine - TEMPVAR DIM 36
.                          - PRTLIN1 DIM 80
.                          - PRTLIN2 DIM 52
.                          - PRTLIN3 DIM 52
.**********************************************************************
STRC0000  COMPARE   ZERO,COLWIDT
          GOTO      STRC9999 IF EQUAL
.
          RESET     TEMPVAR,COLWIDT
          LENSET    TEMPVAR
          RESET     TEMPVAR
          IF        EXPORTYN=1
            MOVE      TEMPVAR,EXPORTVR[EXPORTVN]
            STRIP     EXPORTVR[EXPORTVN]
            ADD       ONE,EXPORTVN
          ENDIF
          
STRC1000  BRANCH    FMUDWID,STRC1100,STRC1200,STRC1300,STRC1400
          GOTO      STRC9999
.
. 132 Character Print
.---------------------
STRC1100  IF        COLUMN<132
            IF        COLUMN<81
              RESET     PLIN80A,COLUMN
              APPEND    TEMPVAR,PLIN80A
              ADD       COLWIDT,COLUMN
              IF        COLUMN>80
                CLEAR     PLIN52 
                ASSIGN    (COLWIDT+81-COLUMN),RESETCOL
                RESET     TEMPVAR,RESETCOL
                APPEND    TEMPVAR,PLIN52
              ENDIF
            ELSE
              ASSIGN    (COLUMN-80),RESETCOL
              RESET     PLIN52,RESETCOL
              APPEND    TEMPVAR,PLIN52
              ADD       COLWIDT,COLUMN
            ENDIF
          ENDIF
          GOTO      STRC9000
.
. 80 Character Print
.--------------------
STRC1200  IF        COLUMN<81
            RESET     PLIN80A,COLUMN
            APPEND    TEMPVAR,PLIN80A
            ADD       COLWIDT,COLUMN
          ENDIF
          GOTO      STRC9000
.
. 160 Character Print
.--------------------
STRC1300  IF        COLUMN<161
            IF        COLUMN<81
              RESET     PLIN80A,COLUMN
              APPEND    TEMPVAR,PLIN80A
              ADD       COLWIDT,COLUMN
              IF        COLUMN>80
                CLEAR     PLIN80B
                ASSIGN    (COLWIDT+81-COLUMN),RESETCOL
                RESET     TEMPVAR,RESETCOL
                APPEND    TEMPVAR,PLIN80B
              ENDIF
            ELSE
              ASSIGN    (COLUMN-80),RESETCOL
              RESET     PLIN80B,RESETCOL
              APPEND    TEMPVAR,PLIN80B
              ADD       COLWIDT,COLUMN
            ENDIF
          ENDIF
          GOTO      STRC9000
.
. 210 Character Print
.--------------------
STRC1400  IF        COLUMN<210
            IF        COLUMN<101
              RESET     PLIN100,COLUMN
              APPEND    TEMPVAR,PLIN100
              ADD       COLWIDT,COLUMN
              IF        COLUMN>100
                CLEAR     PLIN110 
                ASSIGN    (COLWIDT+101-COLUMN),RESETCOL
                RESET     TEMPVAR,RESETCOL
                APPEND    TEMPVAR,PLIN110
              ENDIF
            ELSE
              ASSIGN    (COLUMN-100),RESETCOL
              RESET     PLIN110,RESETCOL
              APPEND    TEMPVAR,PLIN110
              ADD       COLWIDT,COLUMN
            ENDIF
          ENDIF
.
STRC9000  RESET     TEMPVAR,36
          RESET     TEMPVAR
STRC9999  RETURN
.**********************************************************************
. Setup Underlines
.**********************************************************************
STHS0000  COMPARE   ZERO,COLWIDT
          GOTO      STHS9999 IF EQUAL
.
          MOVE      SP70,KEY36
          PACK      KEY2,SP1,FMPRUNDC
          REP       KEY2,KEY36
          RESET     KEY36,COLWIDT
          LENSET    KEY36
          RESET     KEY36
          
STHS1000  BRANCH    FMUDWID,STHS1100,STHS1200,STHS1300,STHS1400
          GOTO      STHS9999
.
. 132 Character Print
.---------------------
STHS1100  IF        COLUMN<132
            IF        COLUMN<81
              RESET     HLIN80A,COLUMN
              APPEND    KEY36,HLIN80A
              IF        (COLUMN+COLWIDT)>80
                CLEAR     HLIN52 
                ASSIGN    (81-COLUMN),RESETCOL
                RESET     KEY36,RESETCOL
                APPEND    KEY36,HLIN52
              ENDIF
            ELSE
              ASSIGN    (COLUMN-80),RESETCOL
              RESET     HLIN52,RESETCOL
              APPEND    KEY36,HLIN52
            ENDIF
          ENDIF
          GOTO      STHS9000
.
. 80 Character Print
.--------------------
STHS1200  IF        COLUMN<81
            RESET     HLIN80A,COLUMN
            APPEND    KEY36,HLIN80A
          ENDIF
          GOTO      STHS9000
.
. 160 Character Print
.--------------------
STHS1300  IF        COLUMN<161
            IF        COLUMN<81
              RESET     HLIN80A,COLUMN
              APPEND    KEY36,HLIN80A
              IF        (COLUMN+COLWIDT)>80
                CLEAR     HLIN80B
                ASSIGN    (81-COLUMN),RESETCOL
                RESET     KEY36,RESETCOL
                APPEND    KEY36,HLIN80B
              ENDIF
            ELSE
              ASSIGN    (COLUMN-80),RESETCOL
              RESET     HLIN80B,RESETCOL
              APPEND    KEY36,HLIN80B
            ENDIF
          ENDIF
          GOTO      STHS9000
.
. 210 Character Print
.--------------------
STHS1400  IF        COLUMN<210
            IF        COLUMN<101
              RESET     HLIN100,COLUMN
              APPEND    KEY36,HLIN100
              IF        (COLUMN+COLWIDT)>110
                CLEAR     HLIN110 
                ASSIGN    (101-COLUMN),RESETCOL
                RESET     KEY36,RESETCOL
                APPEND    KEY36,HLIN110
              ENDIF
            ELSE
              ASSIGN    (COLUMN-100),RESETCOL
              RESET     HLIN110,RESETCOL
              APPEND    KEY36,HLIN110
            ENDIF
          ENDIF
.
STHS9000  RESET     KEY36,36
          RESET     KEY36
STHS9999  RETURN
.**********************************************************************
. Print Print Array
.**********************************************************************
PRTL0000  BRANCH    FMUDWID,PRTL1000,PRTL2000,PRTL3000,PRTL4000
.
PRTL1000  PRINT     *1,PLIN80A,PLIN52;
          GOTO      PRTL9999
.
PRTL2000  PRINT     *1,PLIN80A;
          GOTO      PRTL9999
.
PRTL3000  PRINT     *1,PLIN80A,PLIN80B;
          GOTO      PRTL9999
.
PRTL4000  PRINT     *1,PLIN100,PLIN110;
          GOTO      PRTL9999
.
PRTL9999  RETURN
.**********************************************************************
. Print Underline Array
.**********************************************************************
UHED0000  BRANCH    FMUDWID,UHED1000,UHED2000,UHED3000,UHED4000
.
UHED1000  PRINT    *1,HLIN80A,HLIN52
          GOTO      UHED9999
.
UHED2000  PRINT    *1,HLIN80A
          GOTO      UHED9999
.
UHED3000  PRINT    *1,HLIN80A,HLIN80B
          GOTO      UHED9999
.
UHED4000  PRINT    *1,HLIN100,HLIN110
          GOTO      UHED9999
.
UHED9999  RETURN
.------------------------------------------------------------
. Annual Amount for Current Actuals
.------------------------------------------------------------
CAAAN000  MOVE      ACTA01S,AMOUNTS
          ADD       ACTA02S,AMOUNTS
          ADD       ACTA03S,AMOUNTS
          ADD       ACTA04S,AMOUNTS
          ADD       ACTA05S,AMOUNTS
          ADD       ACTA06S,AMOUNTS
          ADD       ACTA07S,AMOUNTS
          ADD       ACTA08S,AMOUNTS
          ADD       ACTA09S,AMOUNTS
          ADD       ACTA10S,AMOUNTS
          ADD       ACTA11S,AMOUNTS
          ADD       ACTA12S,AMOUNTS
          ADD       ACTA13S,AMOUNTS
          COMPARE   ONE,FMAMAYTD
          GOTO      CAAAN100 IF NOT EQUAL
          MOVE      "12",PERS
          ADD       FMLAPERS,PERS
          DIV       PERS,AMOUNTS
.
CAAAN100  MOVE      ACTABFC,AMOUNTC
          ADD       ACTA01C,AMOUNTC
          ADD       ACTA02C,AMOUNTC
          ADD       ACTA03C,AMOUNTC
          ADD       ACTA04C,AMOUNTC
          ADD       ACTA05C,AMOUNTC
          ADD       ACTA06C,AMOUNTC
          ADD       ACTA07C,AMOUNTC
          ADD       ACTA08C,AMOUNTC
          ADD       ACTA09C,AMOUNTC
          ADD       ACTA10C,AMOUNTC
          ADD       ACTA11C,AMOUNTC
          ADD       ACTA12C,AMOUNTC
          ADD       ACTA13C,AMOUNTC
.
          RETURN
.
. Annual Budget
.------------------------------
CBAAN000  MOVE      BUDA01S,AMOUNTS
          ADD       BUDA02S,AMOUNTS
          ADD       BUDA03S,AMOUNTS
          ADD       BUDA04S,AMOUNTS
          ADD       BUDA05S,AMOUNTS
          ADD       BUDA06S,AMOUNTS
          ADD       BUDA07S,AMOUNTS
          ADD       BUDA08S,AMOUNTS
          ADD       BUDA09S,AMOUNTS
          ADD       BUDA10S,AMOUNTS
          ADD       BUDA11S,AMOUNTS
          ADD       BUDA12S,AMOUNTS
          ADD       BUDA13S,AMOUNTS
          COMPARE   ONE,FMAMAYTD
          GOTO      CBAAN100 IF NOT EQUAL
          MOVE      "12",PERS
          ADD       FMLAPERS,PERS
          DIV       PERS,AMOUNTS
.
CBAAN100  MOVE      BUDA01C,AMOUNTC
          ADD       BUDA02C,AMOUNTC
          ADD       BUDA03C,AMOUNTC
          ADD       BUDA04C,AMOUNTC
          ADD       BUDA05C,AMOUNTC
          ADD       BUDA06C,AMOUNTC
          ADD       BUDA07C,AMOUNTC
          ADD       BUDA08C,AMOUNTC
          ADD       BUDA09C,AMOUNTC
          ADD       BUDA10C,AMOUNTC
          ADD       BUDA11C,AMOUNTC
          ADD       BUDA12C,AMOUNTC
          ADD       BUDA13C,AMOUNTC
.
          RETURN
.
. Annual Alternative Budget
.------------------------------
CBBAN000  MOVE      BUDB01S,AMOUNTS
          ADD       BUDB02S,AMOUNTS
          ADD       BUDB03S,AMOUNTS
          ADD       BUDB04S,AMOUNTS
          ADD       BUDB05S,AMOUNTS
          ADD       BUDB06S,AMOUNTS
          ADD       BUDB07S,AMOUNTS
          ADD       BUDB08S,AMOUNTS
          ADD       BUDB09S,AMOUNTS
          ADD       BUDB10S,AMOUNTS
          ADD       BUDB11S,AMOUNTS
          ADD       BUDB12S,AMOUNTS
          ADD       BUDB13S,AMOUNTS
          COMPARE   ONE,FMAMAYTD
          GOTO      CBBAN100 IF NOT EQUAL
          MOVE      "12",PERS
          ADD       FMLAPERS,PERS
          DIV       PERS,AMOUNTS
.
CBBAN100  MOVE      BUDB01C,AMOUNTC
          ADD       BUDB02C,AMOUNTC
          ADD       BUDB03C,AMOUNTC
          ADD       BUDB04C,AMOUNTC
          ADD       BUDB05C,AMOUNTC
          ADD       BUDB06C,AMOUNTC
          ADD       BUDB07C,AMOUNTC
          ADD       BUDB08C,AMOUNTC
          ADD       BUDB09C,AMOUNTC
          ADD       BUDB10C,AMOUNTC
          ADD       BUDB11C,AMOUNTC
          ADD       BUDB12C,AMOUNTC
          ADD       BUDB13C,AMOUNTC
.
          RETURN
.
. Last Years Actuals
.------------------------------
CABAN000  MOVE      ACTB01S,AMOUNTS
          ADD       ACTB02S,AMOUNTS
          ADD       ACTB03S,AMOUNTS
          ADD       ACTB04S,AMOUNTS
          ADD       ACTB05S,AMOUNTS
          ADD       ACTB06S,AMOUNTS
          ADD       ACTB07S,AMOUNTS
          ADD       ACTB08S,AMOUNTS
          ADD       ACTB09S,AMOUNTS
          ADD       ACTB10S,AMOUNTS
          ADD       ACTB11S,AMOUNTS
          ADD       ACTB12S,AMOUNTS
          ADD       ACTB13S,AMOUNTS
          COMPARE   ONE,FMAMAYTD
          GOTO      CABAN100 IF NOT EQUAL
          MOVE      "12",PERS
          ADD       FMLAPERS,PERS
          DIV       PERS,AMOUNTS
.
CABAN100  MOVE      ACTBBFC,AMOUNTC
          ADD       ACTB01C,AMOUNTC
          ADD       ACTB02C,AMOUNTC
          ADD       ACTB03C,AMOUNTC
          ADD       ACTB04C,AMOUNTC
          ADD       ACTB05C,AMOUNTC
          ADD       ACTB06C,AMOUNTC
          ADD       ACTB07C,AMOUNTC
          ADD       ACTB08C,AMOUNTC
          ADD       ACTB09C,AMOUNTC
          ADD       ACTB10C,AMOUNTC
          ADD       ACTB11C,AMOUNTC
          ADD       ACTB12C,AMOUNTC
          ADD       ACTB13C,AMOUNTC
.
          RETURN
.
. Calculate Actuals YTD
.-----------------------
CAAYR000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ACTABFC,AMOUNTC
.
CAAYR100  ADD       ONE,F2
          LOAD      TAMTS,F2,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                             ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                             ACTA11S,ACTA12S,ACTA13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                             ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                             ACTA11C,ACTA12C,ACTA13C
          ADD       TAMTC,AMOUNTC
          COMPARE   PERDTO,F2
          GOTO      CAAYR100 IF NOT EQUAL
          COMPARE   ONE,FMAMAYTD
          GOTO      CAAYR999 IF NOT EQUAL
          DIV       PERDTO,AMOUNTS
.
CAAYR999  RETURN
.
. Calculate Budget YTD
.----------------------
CBAYR000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
.
CBAYR100  ADD       ONE,F2
          LOAD      TAMTS,F2,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                             BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                             BUDA11S,BUDA12S,BUDA13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                             BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                             BUDA11C,BUDA12C,BUDA13C
          ADD       TAMTC,AMOUNTC
          COMPARE   PERDTO,F2
          GOTO      CBAYR100 IF NOT EQUAL
          COMPARE   ONE,FMAMAYTD
          GOTO      CBAYR999 IF NOT EQUAL
          DIV       PERDTO,AMOUNTS
.
CBAYR999  RETURN
.
. Calculate YTD alternative Budget
.----------------------------------
CBBYR000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
.
CBBYR100  ADD       ONE,F2
          LOAD      TAMTS,F2,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                             BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                             BUDB11S,BUDB12S,BUDB13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                             BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                             BUDB11C,BUDB12C,BUDB13C
          ADD       TAMTC,AMOUNTC
          COMPARE   PERDTO,F2
          GOTO      CBBYR100 IF NOT EQUAL
          COMPARE   ONE,FMAMAYTD
          GOTO      CBBYR999 IF NOT EQUAL
          DIV       PERDTO,AMOUNTS
.
CBBYR999  RETURN
.
. Calculate YTD Last Year
.-------------------------
CABYR000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ACTBBFC,AMOUNTC
.
CABYR100  ADD       ONE,F2
          LOAD      TAMTS,F2,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                             ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                             ACTB11S,ACTB12S,ACTB13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                             ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                             ACTB11C,ACTB12C,ACTB13C
          ADD       TAMTC,AMOUNTC
          COMPARE   PERDTO,F2
          GOTO      CABYR100 IF NOT EQUAL
          COMPARE   ONE,FMAMAYTD
          GOTO      CABYR999 IF NOT EQUAL
          DIV       PERDTO,AMOUNTS
.
CABYR999  RETURN
.
. Calculate Actuals Carried Forward
.----------------------------------
CAACF000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ACTABFC,AMOUNTC
.
CAACF100  ADD       ONE,F2
          COMPARE   PERDFROM,F2
          GOTO      CAACF200 IF NOT LESS
          LOAD      TAMTS,F2,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                             ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                             ACTA11S,ACTA12S,ACTA13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                             ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                             ACTA11C,ACTA12C,ACTA13C
          ADD       TAMTC,AMOUNTC
          GOTO      CAACF100
.
CAACF200  COMPARE   ONE,FMAMAYTD
          GOTO      CAACF999 IF NOT EQUAL
          DIV       PERDFROM,AMOUNTS
.
CAACF999  RETURN
.
. Calculate Budget Carried Forward
.---------------------------------
CBACF000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
.
CBACF100  ADD       ONE,F2
          COMPARE   PERDFROM,F2
          GOTO      CBACF200 IF NOT LESS
          LOAD      TAMTS,F2,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                             BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                             BUDA11S,BUDA12S,BUDA13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                             BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                             BUDA11C,BUDA12C,BUDA13C
          ADD       TAMTC,AMOUNTC
          GOTO      CBACF100
.
CBACF200  COMPARE   ONE,FMAMAYTD
          GOTO      CBACF999 IF NOT EQUAL
          DIV       PERDFROM,AMOUNTS
.
CBACF999  RETURN
.
. Calculate Carried Forward Alternative Budget
.---------------------------------------------
CBBCF000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
.
CBBCF100  ADD       ONE,F2
          COMPARE   PERDFROM,F2
          GOTO      CBBCF200 IF NOT LESS
          LOAD      TAMTS,F2,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                             BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                             BUDB11S,BUDB12S,BUDB13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                             BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                             BUDB11C,BUDB12C,BUDB13C
          ADD       TAMTC,AMOUNTC
          GOTO      CBBCF100
.
CBBCF200  COMPARE   ONE,FMAMAYTD
          GOTO      CBBCF999 IF NOT EQUAL
          DIV       PERDFROM,AMOUNTS
.
CBBCF999  RETURN
.
. Calculate Carried Forward Last Year
.------------------------------------
CABCF000  MOVE      ZERO,F2
          MOVE      ZERO,AMOUNTS
          MOVE      ACTBBFC,AMOUNTC
.
CABCF100  ADD       ONE,F2
          COMPARE   PERDFROM,F2
          GOTO      CABCF200 IF NOT LESS
          LOAD      TAMTS,F2,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                             ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                             ACTB11S,ACTB12S,ACTB13S
          ADD       TAMTS,AMOUNTS
          LOAD      TAMTC,F2,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                             ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                             ACTB11C,ACTB12C,ACTB13C
          ADD       TAMTC,AMOUNTC
          GOTO      CABCF100
.
CABCF200  COMPARE   ONE,FMAMAYTD
          GOTO      CABCF999 IF NOT EQUAL
          DIV       PERDFROM,AMOUNTS
.
CABCF999  RETURN
.
. Actual Current Period
.----------------------------
CAACU000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
.
CAACU100  LOAD      SUBAMTS,CURPERD,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                                   ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                                   ACTA11S,ACTA12S,ACTA13S
.
          LOAD      SUBAMTC,CURPERD,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                                   ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                                   ACTA11C,ACTA12C,ACTA13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          ADD       ONE,CURPERD
          COMPARE   CURPERD,PERDTO
          GOTO      CAACU100 IF NOT LESS
.
          RETURN
.
. Budget Current Period
.----------------------------------------
CBACU000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
.
CBACU100  LOAD      SUBAMTS,CURPERD,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                                   BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                                   BUDA11S,BUDA12S,BUDA13S
.
          LOAD      SUBAMTC,CURPERD,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                                   BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                                   BUDA11C,BUDA12C,BUDA13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          ADD       ONE,CURPERD
          COMPARE   CURPERD,PERDTO
          GOTO      CBACU100 IF NOT LESS
.
          RETURN
.
. Alternative Budget Current Period
.----------------------------------------
CBBCU000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
.
CBBCU100  LOAD      SUBAMTS,CURPERD,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                                   BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                                   BUDB11S,BUDB12S,BUDB13S
.
          LOAD      SUBAMTC,CURPERD,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                                   BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                                   BUDB11C,BUDB12C,BUDB13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          ADD       ONE,CURPERD
          COMPARE   CURPERD,PERDTO
          GOTO      CBBCU100 IF NOT LESS
.
          RETURN
.
. Last Year Actuals Current Period
.----------------------------------------
CABCU000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
.
CABCU100  LOAD      SUBAMTS,CURPERD,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                                   ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                                   ACTB11S,ACTB12S,ACTB13S
.
          LOAD      SUBAMTC,CURPERD,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                                   ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                                   ACTB11C,ACTB12C,ACTB13C
.
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          ADD       ONE,CURPERD
          COMPARE   CURPERD,PERDTO
          GOTO      CABCU100 IF NOT LESS
          RETURN
.
. Actual Previous Period
.----------------------------
CAAPP000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
          SUB       ONE,CURPERD
          MOVE      PERDTO,F2
          SUB       ONE,F2
.
          COMPARE   CURPERD,ZERO
          GOTO      CAAPP100 IF LESS
.
          MOVE      ZERO,F1
          MOVE      FMLAPERS,F1
          MOVE      ACTB12S,AMOUNTS
          MOVE      ACTB12C,AMOUNTC
          LOAD      AMOUNTS,F1,ACTB12S
          LOAD      AMOUNTC,F1,ACTB12C
          GOTO      CAAPP200
.
CAAPP100  LOAD      SUBAMTS,CURPERD,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                                   ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                                   ACTA11S,ACTA12S,ACTA13S
.
          LOAD      SUBAMTC,CURPERD,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                                   ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                                   ACTA11C,ACTA12C,ACTA13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
.
CAAPP200  ADD       ONE,CURPERD
          COMPARE   CURPERD,F2
          GOTO      CAAPP100 IF NOT LESS
.
          RETURN
.
. Budget Previous Period
.----------------------------------------
CBAPP000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
          SUB       ONE,CURPERD
          MOVE      PERDTO,F2
          SUB       ONE,F2
.
          COMPARE   CURPERD,ZERO
          GOTO      CAAPP100 IF LESS
.
          GOTO      CBAPP200
.
CBAPP100  LOAD      SUBAMTS,CURPERD,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                                   BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                                   BUDA11S,BUDA12S,BUDA13S
.
          LOAD      SUBAMTC,CURPERD,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                                   BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                                   BUDA11C,BUDA12C,BUDA13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
.
CBAPP200  ADD       ONE,CURPERD
          COMPARE   CURPERD,F2
          GOTO      CBAPP100 IF NOT LESS
.
          RETURN
.
. Alternative Budget Previous Period
.----------------------------------------
CBBPP000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
          SUB       ONE,CURPERD
          MOVE      PERDTO,F2
          SUB       ONE,F2
.
          COMPARE   CURPERD,ZERO
          GOTO      CAAPP100 IF LESS
.
          GOTO      CBBPP200
.
CBBPP100  LOAD      SUBAMTS,CURPERD,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                                   BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                                   BUDB11S,BUDB12S,BUDB13S
.
          LOAD      SUBAMTC,CURPERD,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                                   BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                                   BUDB11C,BUDB12C,BUDB13C
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
.
CBBPP200  ADD       ONE,CURPERD
          COMPARE   CURPERD,F2
          GOTO      CBBPP100 IF NOT LESS
.
          RETURN
.
. Last Year Actuals Previous Period
.----------------------------------------
CABPP000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          MOVE      PERDFROM,CURPERD
          SUB       ONE,CURPERD
          MOVE      PERDTO,F2
          SUB       ONE,F2
.
          COMPARE   CURPERD,ZERO
          GOTO      CABPP100 IF LESS   * I cant be bothered to get data before
.                                      * previous year - call me lazy but who
          GOTO      CABPP200           * gives a fuck !!
.
CABPP100  LOAD      SUBAMTS,CURPERD,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                                   ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                                   ACTB11S,ACTB12S,ACTB13S
.
          LOAD      SUBAMTC,CURPERD,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                                   ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                                   ACTB11C,ACTB12C,ACTB13C
.
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
.
CABPP200  ADD       ONE,CURPERD
          COMPARE   CURPERD,F2
          GOTO      CABPP100 IF NOT LESS
          RETURN
.
. Actuals (Selected Period)
.----------------------------------------
CAAPR000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          COMPARE   PERDFROM,COLPERD
          RETURN    IF LESS
          COMPARE   COLPERD,PERDTO
          RETURN    IF LESS
.
          LOAD      SUBAMTC,COLPERD,ACTA01C,ACTA02C,ACTA03C,ACTA04C,ACTA05C:
                                    ACTA06C,ACTA07C,ACTA08C,ACTA09C,ACTA10C:
                                    ACTA11C,ACTA12C,ACTA13C
.
          LOAD      SUBAMTS,COLPERD,ACTA01S,ACTA02S,ACTA03S,ACTA04S,ACTA05S:
                                    ACTA06S,ACTA07S,ACTA08S,ACTA09S,ACTA10S:
                                    ACTA11S,ACTA12S,ACTA13S
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          RETURN
.
. Budgets (Selected Period)
.----------------------------------------
CBAPR000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          COMPARE   PERDFROM,COLPERD
          RETURN    IF LESS
          COMPARE   COLPERD,PERDTO
          RETURN    IF LESS
.
          LOAD      SUBAMTC,COLPERD,BUDA01C,BUDA02C,BUDA03C,BUDA04C,BUDA05C:
                                    BUDA06C,BUDA07C,BUDA08C,BUDA09C,BUDA10C:
                                    BUDA11C,BUDA12C,BUDA13C
.
          LOAD      SUBAMTS,COLPERD,BUDA01S,BUDA02S,BUDA03S,BUDA04S,BUDA05S:
                                    BUDA06S,BUDA07S,BUDA08S,BUDA09S,BUDA10S:
                                    BUDA11S,BUDA12S,BUDA13S
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          RETURN
.
. Alternative Budgets (Selected Period)
.----------------------------------------
CBBPR000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          COMPARE   PERDFROM,COLPERD
          RETURN    IF LESS
          COMPARE   COLPERD,PERDTO
          RETURN    IF LESS
.
          LOAD      SUBAMTC,COLPERD,BUDB01C,BUDB02C,BUDB03C,BUDB04C,BUDB05C:
                                    BUDB06C,BUDB07C,BUDB08C,BUDB09C,BUDB10C:
                                    BUDB11C,BUDB12C,BUDB13C
.
          LOAD      SUBAMTS,COLPERD,BUDB01S,BUDB02S,BUDB03S,BUDB04S,BUDB05S:
                                    BUDB06S,BUDB07S,BUDB08S,BUDB09S,BUDB10S:
                                    BUDB11S,BUDB12S,BUDB13S
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          RETURN
.
. Last Years Actuals (Selected Period)
.----------------------------------------
CABPR000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          COMPARE   PERDFROM,COLPERD
          RETURN    IF LESS
          COMPARE   COLPERD,PERDTO
          RETURN    IF LESS
.
          LOAD      SUBAMTC,COLPERD,ACTB01C,ACTB02C,ACTB03C,ACTB04C,ACTB05C:
                                    ACTB06C,ACTB07C,ACTB08C,ACTB09C,ACTB10C:
                                    ACTB11C,ACTB12C,ACTB13C
.
          LOAD      SUBAMTS,COLPERD,ACTB01S,ACTB02S,ACTB03S,ACTB04S,ACTB05S:
                                    ACTB06S,ACTB07S,ACTB08S,ACTB09S,ACTB10S:
                                    ACTB11S,ACTB12S,ACTB13S
          ADD       SUBAMTS,AMOUNTS
          ADD       SUBAMTC,AMOUNTC
          RETURN
.**********************************************************************
. Calculate Variance Amount
.**********************************************************************
FVAR0000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          BRANCH    COLPERD,FVAR1000,FVAR1000,FVAR1000,FVAR1000,FVAR1000:
                            FVAR1000,FVAR1000,FVAR1000,FVAR1000,FVAR1000:
                            FVAR1000,FVAR1000,FVAR1000,FVAR2000,FVAR3000:
                            FVAR4000
.
. Select Period Amount
.========================================
FVAR1000  BRANCH    COLATYP,FVAR1100,FVAR1200,FVAR1300,FVAR1400,FVAR1500:
                            FVAR1600
.
FVAR1100  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1200  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1300  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1400  CALL      CBAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1500  CALL      CBAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR1600  CALL      CABPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
. Current Period Amount
.========================================
FVAR2000  BRANCH    COLATYP,FVAR2100,FVAR2200,FVAR2300,FVAR2400,FVAR2500:
                            FVAR2600
.
FVAR2100  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBACU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2200  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2300  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2400  CALL      CBACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2500  CALL      CBACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR2600  CALL      CABCU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
. Ytd Amount
.========================================
FVAR3000  BRANCH    COLATYP,FVAR3100,FVAR3200,FVAR3300,FVAR3400,FVAR3500:
                            FVAR3600
.
FVAR3100  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3200  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3300  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3400  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3500  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR3600  CALL      CABYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
. Annual Amount
.========================================
FVAR4000  BRANCH    COLATYP,FVAR4100,FVAR4200,FVAR4300,FVAR4400,FVAR4500:
                            FVAR4600
.
FVAR4100  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4200  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4300  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4400  CALL      CBAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4500  CALL      CBAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
FVAR4600  CALL      CABAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
          GOTO      FVAR8000
.
. * note : variance here is bud-act
. *        in enquiries variance is act-bud
.
FVAR8000  MATCH     "1",FMCOBVAR
          IF        !@EQUAL
            MULT      SEQ,AMOUNTS
            MULT      SEQ,AMOUNTC
          ENDIF
.
          BRANCH    WEBIND,FVAR8500
          MOVE      FMAMTYPE,F1
          IF        F1<7
            GOTO      FVAR8500
          ENDIF
.
          PACK      KEY12,FMAMLEDG,FMAMACCT
          CALL      RDFMWC1
          BRANCH    OVRCD,FVAR8500
.
          MULT      SEQ,AMOUNTS
          MULT      SEQ,AMOUNTC
.
FVAR8500  MATCH     "1",FMRDCRIN                 * Credit Account Mult for Rept.
          GOTO      FVAR8900 IF NOT EQUAL
          MATCH     "1",FMRFCRP                  * Check Total Account
          GOTO      FVAR8900 IF NOT EQUAL
.
          MULT      SEQ,AMOUNTS
          MULT      SEQ,AMOUNTC
.
FVAR8900  CALL      FRMA0000           * format account
.
FVAR9999  RETURN
.
CLRR0000  PACK       PLIN80A,SP70,SP70
          PACK       PLIN80B,SP70,SP70
          PACK       PLIN52,SP70,SP70
          PACK       PLIN100,SP70,SP70
          PACK       PLIN110,SP70,SP70
          MOVE       ONE,EXPORTVN
          MOVE       SP70,EXPORTVR[1]
          MOVE       SP70,EXPORTVR[2]
          MOVE       SP70,EXPORTVR[3]
          MOVE       SP70,EXPORTVR[4]
          MOVE       SP70,EXPORTVR[5]
          MOVE       SP70,EXPORTVR[6]
          MOVE       SP70,EXPORTVR[7]
          MOVE       SP70,EXPORTVR[8]
          MOVE       SP70,EXPORTVR[9]
          MOVE       SP70,EXPORTVR[10]
          MOVE       SP70,EXPORTVR[11]
          MOVE       SP70,EXPORTVR[12]
          MOVE       SP70,EXPORTVR[13]
          MOVE       SP70,EXPORTVR[14]
          MOVE       SP70,EXPORTVR[15]
          MOVE       SP70,EXPORTVR[16]
          MOVE       SP70,EXPORTVR[17]
          MOVE       SP70,EXPORTVR[18]
          MOVE       SP70,EXPORTVR[19]
          MOVE       SP70,EXPORTVR[20]
          RETURN
.
.**********************************************************************
. Calculate Percentage Variance Amount
.**********************************************************************
FPVA0000  MOVE      ZERO,AMOUNTS
          MOVE      ZERO,AMOUNTC
          BRANCH    COLPERD,FPVA1000,FPVA1000,FPVA1000,FPVA1000,FPVA1000:
                            FPVA1000,FPVA1000,FPVA1000,FPVA1000,FPVA1000:
                            FPVA1000,FPVA1000,FPVA1000,FPVA2000,FPVA3000:
                            FPVA4000
.
. Select Period Amount
.========================================
FPVA1000  BRANCH    COLATYP,FPVA1100,FPVA1200,FPVA1300,FPVA1400,FPVA1500:
                            FPVA1600
.
FPVA1100  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1200  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1300  CALL      CAAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1400  CALL      CBAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1500  CALL      CBAPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA1600  CALL      CABPR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBPR000
          CALL      CPERC000
          GOTO      FPVA8000
.
. Current Period Amount
.========================================
FPVA2000  BRANCH    COLATYP,FPVA2100,FPVA2200,FPVA2300,FPVA2400,FPVA2500:
                            FPVA2600
.
FPVA2100  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBACU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2200  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2300  CALL      CAACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2400  CALL      CBACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2500  CALL      CBACU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA2600  CALL      CABCU000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBCU000
          CALL      CPERC000
          GOTO      FPVA8000
.
. Ytd Amount
.========================================
FPVA3000  BRANCH    COLATYP,FPVA3100,FPVA3200,FPVA3300,FPVA3400,FPVA3500:
                            FPVA3600
.
FPVA3100  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3200  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3300  CALL      CAAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3400  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3500  CALL      CBAYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA3600  CALL      CABYR000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBYR000
          CALL      CPERC000
          GOTO      FPVA8000
.
. Annual Amount
.========================================
FPVA4000  BRANCH    COLATYP,FPVA4100,FPVA4200,FPVA4300,FPVA4400,FPVA4500:
                            FPVA4600
.
FPVA4100  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBAAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4200  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4300  CALL      CAAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CABAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4400  CALL      CBAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4500  CALL      CBAAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA4600  CALL      CABAN000
          MOVE      AMOUNTS,VAMTS
          MOVE      AMOUNTC,VAMTC
          CALL      CBBAN000
          CALL      CPERC000
          GOTO      FPVA8000
.
FPVA8000  
.                                 * note : variance here is bud-act
.                                 *        in enquiries variance is act-bud
          MATCH     "1",FMCOBVAR
          GOTO      FPVA8500 IF EQUAL
.
          COMPARE   ZERO,AMOUNTS
          GOTO      FPVA8400 IF EQUAL
.
          MULT      SEQ,AMOUNTS
.
FPVA8400  COMPARE   ZERO,AMOUNTC
          GOTO      FPVA8500 IF EQUAL
.
          MULT      SEQ,AMOUNTC
.
FPVA8500  CALL      FRMA0000           * format account
.
FPVA9999  RETURN
.**********************************************************************
.  FRMA - Format Amount                                Called By lots
.**********************************************************************
FRMA0000  MATCH     "7",FMAMTYPE
          GOTO      FRMA9400 IF NOT LESS
.
          MOVE      AMOUNTC,AMOUNTD     * round for dollars only/thousands
          LOAD      F12P6,COLSCAL,AMOUNTC,AMOUNTD,AMOUNTC
          GOTO      FRMA9900
.
FRMA9400  MOVE      FMAMDPLA,F2
          ADD       ONE,F2              * round to normal dec places
          STORE     AMOUNTS,F2,F12,F12P1,F12P2,F12P3,F12P4,F12P5
          LOAD      AMOUNTS,F2,F12,F12P1,F12P2,F12P3,F12P4,F12P5
          MOVE      AMOUNTS,F12P6
          GOTO      FRMA9900
.
FRMA9900  BRANCH    COLSCAL,FRMA9990,FRMA9990
          DIV       "1000",F12P6        * calculate for thousands
.
FRMA9990  CALL      FEDIT000            * format amount
          COMPARE   ZERO,F12P6
          GOTO      FRMA9999 IF EQUAL
          MOVE      ONE,CHKZERO
FRMA9999  RETURN
.**********************************************************************
.  FEDIT - format amount                               Called By lots
.        Requires - COLFORM   (contains desired format)
.                   F12P2     (contains amount to format)
.                   FMAMTYPE  (account type)
.                   FMAMDPLA  (no. of decimal places)
.         Returns - FAMOUNT   (output string)
.**********************************************************************
.
.---- calc number of decimal places ----
.
FEDIT000  MOVE      COLFORM,FAMOUNT     * Dollars and Cents
.
          MATCH     "8",FMAMTYPE
          GOTO      FEDIT010 IF LESS             * stat type account
.
          MOVE      ZERO,F1
          MOVE      FMCOPSTA,F1
          COMPARE   ONE,F1
          GOTO      FEDIT010 IF NOT EQUAL        * 0=rep style, 1=dec places
.
          MOVE      "2",DECPLA
          MOVE      FMAMDPLA,DECPLA
          CALL      GFRM0000                     * get desired format
          GOTO      FEDIT200
.
FEDIT010  UNPACK    FAMOUNT,ANS1,ANS2,ANS3,ANS4,ANS5,ANS6,ANS7,ANS8,ANS9,ANS10:
                    ANS11,ANS12,ANS13,ANS14,ANS15,ANS16,ANS17,ANS18,ANS19,ANS20
          MOVE      "20",F2                      * at end of string
          MOVE      "0",DECPLA
.
FEDIT100  LOAD      ANS,F2,ANS1,ANS2,ANS3,ANS4,ANS5,ANS6,ANS7,ANS8,ANS9,ANS10:
                    ANS11,ANS12,ANS13,ANS14,ANS15,ANS16,ANS17,ANS18,ANS19,ANS20
          PACK      ANS,ANS,SP70
          MATCH     ".",ANS
          GOTO      FEDIT200 IF EQUAL            * found decimal point ?
.
          MATCH     "9",ANS
          GOTO      FEDIT110 IF NOT EQUAL        * valid number ?
          ADD       ONE,DECPLA
.
FEDIT110  SUB       ONE,F2
          COMPARE   ONE,F2
          GOTO      FEDIT100 IF NOT LESS         * at start of string ?
          MOVE      "0",DECPLA                   * no decimal places
.
.---- format number ----
.
FEDIT200  COMPARE   ZERO,DECPLA
          GOTO      FEDIT205 IF EQUAL
          BRANCH    DECPLA,FEDIT210,FEDIT220,FEDIT230,FEDIT240,FEDIT250
          GOTO      FEDIT260           * anything other than 0-5
.
FEDIT205  MOVE      F12P6,F12
          FEDIT     F12,FAMOUNT
          GOTO      FEDIT999
.
FEDIT210  MOVE      F12P6,F12P1
          FEDIT     F12P1,FAMOUNT
          GOTO      FEDIT999
.
FEDIT220  MOVE      F12P6,F12P2
          FEDIT     F12P2,FAMOUNT
          GOTO      FEDIT999
.
FEDIT230  MOVE      F12P6,F12P3
          FEDIT     F12P3,FAMOUNT
          GOTO      FEDIT999
.
FEDIT240  MOVE      F12P6,F12P4
          FEDIT     F12P4,FAMOUNT
          GOTO      FEDIT999
.
FEDIT250  MOVE      F12P6,F12P5
          FEDIT     F12P5,FAMOUNT
          GOTO      FEDIT999
.
FEDIT260  FEDIT     F12P6,FAMOUNT
          GOTO      FEDIT999
.
FEDIT999  RETURN
.**********************************************************************
.  GFRM - Get format                                   Called By FEDIT
.**********************************************************************
GFRM0000  MOVE      COLWIDT,F2
          SUB       "9",F2
          BRANCH    DECPLA,GFRM0100,GFRM0200,GFRM0300,GFRM0400,GFRM0500,GFRM0600
.
          LOAD      FAMOUNT,F2,FORMAT01,FORMAT02,FORMAT03,FORMAT04,FORMAT05:
                      FORMAT06,FORMAT07,FORMAT08,FORMAT09,FORMAT0A,FORMAT0B
          GOTO      GFRM9999
.
GFRM0100  LOAD      FAMOUNT,F2,FORMAT11,FORMAT12,FORMAT13,FORMAT14,FORMAT15:
                      FORMAT16,FORMAT17,FORMAT18,FORMAT19,FORMAT1A,FORMAT1B
          GOTO      GFRM9999
.
GFRM0200  LOAD      FAMOUNT,F2,XORMAT21,FORMAT22,FORMAT23,FORMAT24,FORMAT25:
                      FORMAT26,FORMAT27,FORMAT28,FORMAT29,FORMAT2A,FORMAT2B
          GOTO      GFRM9999
.
GFRM0300  LOAD      FAMOUNT,F2,FORMAT31,FORMAT32,FORMAT33,FORMAT34,FORMAT35:
                      FORMAT36,FORMAT37,FORMAT38,FORMAT39,FORMAT3A,FORMAT3B
          GOTO      GFRM9999
.
GFRM0400  LOAD      FAMOUNT,F2,FORMAT41,FORMAT42,FORMAT43,FORMAT44,FORMAT45:
                      FORMAT46,FORMAT47,FORMAT48,FORMAT49,FORMAT4A,FORMAT4B
          GOTO      GFRM9999
.
GFRM0500  LOAD      FAMOUNT,F2,FORMAT51,FORMAT52,FORMAT53,FORMAT54,FORMAT55:
                      FORMAT56,FORMAT57,FORMAT58,FORMAT59,FORMAT5A,FORMAT5B
          GOTO      GFRM9999
.
GFRM0600  LOAD      FAMOUNT,F2,FORMAT61,FORMAT62,FORMAT63,FORMAT64,FORMAT65:
                      FORMAT66,FORMAT67,FORMAT68,FORMAT69,FORMAT6A,FORMAT6B
          GOTO      GFRM9999
.
GFRM9999  RETURN
.**********************************************************************
. Calculate Percentage Variance Amount
.**********************************************************************
CPERC000  MOVE      AMOUNTS,SVAMTS
          MOVE      AMOUNTC,SVAMTC
          SUB       VAMTS,AMOUNTS
          SUB       VAMTC,AMOUNTC
.
          MOVE      AMOUNTS,PVAMTS
          MOVE      AMOUNTC,PVAMTC
          DIV       SVAMTS,PVAMTS
          DIV       SVAMTC,PVAMTC
          MULT      "100",PVAMTS
          MULT      "100",PVAMTC
.
          MOVE      PVAMTS,AMOUNTS
          MOVE      PVAMTC,AMOUNTC
          RETURN
.**********************************************************************
. Calculate Check Total for Zero Accounts
.**********************************************************************
ADDTA000  
          COMPARE   ZERO,ACTABFC
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA01C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA02C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA03C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA04C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA05C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA06C
          GOTO      ADDTA950 IF NOT EQUAL

          COMPARE   ZERO,ACTA07C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA08C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA09C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA10C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA11C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA12C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA13C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTACMC
          GOTO      ADDTA950 IF NOT EQUAL
.
.
          COMPARE   ZERO,ACTBBFC
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB01C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB02C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB03C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB04C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB05C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB06C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB07C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB08C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB09C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB10C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB11C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB12C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB13C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTBCMC
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA01C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA02C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA03C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA04C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA05C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA06C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA07C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA08C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA09C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA10C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA11C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA12C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA13C
          GOTO      ADDTA950 IF NOT EQUAL
.
.
          COMPARE   ZERO,BUDB01C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB02C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB03C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB04C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB05C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB06C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB07C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB08C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB09C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB10C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB11C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB12C
          GOTO      ADDTA950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB13C
          GOTO      ADDTA950 IF NOT EQUAL
.
ADDTA900  MOVE      ONE,EXIT
          GOTO      ADDTA999
.
ADDTA950  MOVE      ZERO,EXIT
.
ADDTA999  RETURN
.
.
ADDTS000  
          COMPARE   ZERO,ACTA01S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA02S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA03S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA04S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA05S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA06S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA07S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA08S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA09S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA10S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA11S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA12S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTA13S
          GOTO      ADDTS950 IF NOT EQUAL
.
.
          COMPARE   ZERO,ACTB01S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB02S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB03S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB04S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB05S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB06S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB07S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB08S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB09S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB10S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB11S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB12S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,ACTB13S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA01S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA02S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA03S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA04S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA05S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA06S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA07S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA08S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA09S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA10S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA11S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA12S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDA13S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB01S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB02S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB03S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB04S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB05S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB06S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB07S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB08S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB09S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB10S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB11S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB12S
          GOTO      ADDTS950 IF NOT EQUAL
.
          COMPARE   ZERO,BUDB13S
          GOTO      ADDTS950 IF NOT EQUAL
.
ADDTS900  MOVE      ONE,EXIT
          GOTO      ADDTS999
.
ADDTS950  MOVE      ZERO,EXIT
.
ADDTS999  RETURN
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  MOVE     SP70,DISPMSG
          CALL     MESSAGE2
MAKEXP10  MOVE     "N",ANS
          KEYIN    *P1:24,*EL,"Create Export File (":
                   *V2LON,"Y",*HOFF,"/":
                   *V2LON,"N",*HOFF,") ? ",*V2LON,*RV,ANS
          REP      UPPLOW,ANS
          MOVE     ZERO,EXPORTYN
          MATCH    ANSN,ANS
          GOTO     MAKEXP99 IF EQUAL
          MATCH    ANSY,ANS
          GOTO     MAKEXP10 IF NOT EQUAL
          MOVE     ONE,EXPORTYN
          MOVE     "EXPORT",KEY6
          PACK     EXPORTFN,KEY6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
MAKEXP99  CALL     MESSAGE3
          RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ZERO,EXPORTYN
          GOTO     TRAN9999 IF EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.
.------------------------------------------------------------
. Sub Accounts Level 2
.------------------------------------------------------------
SUBB0000  PACK      ACCKEY02,FMAMLEDG,FMAMACCT,SP70
          PACK      SAVKEY02,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          PACK      KEY33,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMTC1
SUBB1000  CALL      RKFMTC1
          BRANCH    OVRCD,SUBB9000
          PACK      KEY14,FMTCTLED,FMTCTACC
          MATCH     ACCKEY02,KEY14
          GOTO      SUBB9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1
          BRANCH    OVRCD,SUBB1000
          MATCH     FMRDLEV,FMAMCLEV
          GOTO      SUBB1000 IF LESS        * level in desired range ?
          MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          BRANCH    F1,SUBB1200,SUBB1200,SUBB1200,SUBB1200,SUBB1200:
                       SUBB1100,SUBB1000,SUBB1200,SUBB1100
.
SUBB1100  CALL      CHKREP00      * Check if Account is on the Report
          BRANCH    EXIT,SUBB1000
.
          CALL      SUBC0000      * Sub Account Level 2
.
SUBB1200  MOVE      FMTCPRT,FMRFPRT
          CALL      CKHD0000                     * print data
          GOTO      SUBB1000                     * get next record
.
SUBB9000  MOVE      SAVKEY02,KEY33
          CALL      RDFMTC1
          MOVE      ACCKEY02,KEY14
          CALL      RDFMAM1
.
SUBB9999  RETURN
.------------------------------------------------------------
. Sub Accounts Level 3
.------------------------------------------------------------
SUBC0000  PACK      ACCKEY03,FMAMLEDG,FMAMACCT,SP70
          PACK      SAVKEY03,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          PACK      KEY33,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMTC1
SUBC1000  CALL      RKFMTC1
          BRANCH    OVRCD,SUBC9000
          PACK      KEY14,FMTCTLED,FMTCTACC
          MATCH     ACCKEY03,KEY14
          GOTO      SUBC9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1
          BRANCH    OVRCD,SUBC1000
          MATCH     FMRDLEV,FMAMCLEV
          GOTO      SUBC1000 IF LESS        * level in desired range ?
          MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          BRANCH    F1,SUBC1200,SUBC1200,SUBC1200,SUBC1200,SUBC1200:
                       SUBC1100,SUBC1000,SUBC1200,SUBC1100
.
SUBC1100  CALL      CHKREP00      * Check if Account is on the Report
          BRANCH    EXIT,SUBC1000
.
          CALL      SUBD0000      * Sub Account Level 2
.
SUBC1200  MOVE      FMTCPRT,FMRFPRT
          CALL      CKHD0000                     * print data
          GOTO      SUBC1000                     * get next record
.
SUBC9000  MOVE      SAVKEY03,KEY33
          CALL      RDFMTC1
          MOVE      ACCKEY03,KEY14
          CALL      RDFMAM1
.
SUBC9999  RETURN
.------------------------------------------------------------
. Sub Accounts Level 4
.------------------------------------------------------------
SUBD0000  PACK      ACCKEY04,FMAMLEDG,FMAMACCT,SP70
          PACK      SAVKEY04,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          PACK      KEY33,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMTC1
SUBD1000  CALL      RKFMTC1
          BRANCH    OVRCD,SUBD9000
          PACK      KEY14,FMTCTLED,FMTCTACC
          MATCH     ACCKEY04,KEY14
          GOTO      SUBD9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1
          BRANCH    OVRCD,SUBD1000
          MATCH     FMRDLEV,FMAMCLEV
          GOTO      SUBD1000 IF LESS        * level in desired range ?
          MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          BRANCH    F1,SUBD1200,SUBD1200,SUBD1200,SUBD1200,SUBD1200:
                       SUBD1100,SUBD1000,SUBD1200,SUBD1100
.
SUBD1100  CALL      CHKREP00      * Check if Account is on the Report
          BRANCH    EXIT,SUBD1000
.
          CALL      SUBE0000      * Sub Account Level 2
.
SUBD1200  MOVE      FMTCPRT,FMRFPRT
          CALL      CKHD0000                     * print data
          GOTO      SUBD1000                     * get next record
.
SUBD9000  MOVE      SAVKEY04,KEY33
          CALL      RDFMTC1
          MOVE      ACCKEY04,KEY14
          CALL      RDFMAM1
.
SUBD9999  RETURN
.------------------------------------------------------------
. Sub Accounts Level 5
.------------------------------------------------------------
SUBE0000  PACK      ACCKEY05,FMAMLEDG,FMAMACCT,SP70
          PACK      SAVKEY05,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          PACK      KEY33,FMAMLEDG,FMAMACCT,SP70
          CALL      RSFMTC1
SUBE1000  CALL      RKFMTC1
          BRANCH    OVRCD,SUBE9000
          PACK      KEY14,FMTCTLED,FMTCTACC
          MATCH     ACCKEY05,KEY14
          GOTO      SUBE9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1
          BRANCH    OVRCD,SUBE1000
          MATCH     FMRDLEV,FMAMCLEV
          GOTO      SUBE1000 IF LESS        * level in desired range ?
          MOVE      ZERO,F1
          MOVE      FMAMTYPE,F1
          BRANCH    F1,SUBE1200,SUBE1200,SUBE1200,SUBE1200,SUBE1200:
                       SUBE1100,SUBE1000,SUBE1200,SUBE1100
.
SUBE1100  CALL      CHKREP00      * Check if Account is on the Report
          BRANCH    EXIT,SUBE1000
.
SUBE1200  MOVE      FMTCPRT,FMRFPRT
          CALL      CKHD0000                     * print data
          GOTO      SUBE1000                     * get next record
.
SUBE9000  MOVE      SAVKEY05,KEY33
          CALL      RDFMTC1
          MOVE      ACCKEY05,KEY14
          CALL      RDFMAM1
.
SUBE9999  RETURN
.
          INC       FMSSTDCD
          INC       FMSAMAIO/INC
          INC       FMSBUDIO/INC
          INC       FMSCCAIO/INC
          INC       FMSCONIO/INC
          INC       FMSFPSIO/INC
          INC       FMSPRCIO/INC      
          INC       FMSRSFIO/INC
          INC       FMSSMAIO/INC 
          INC       FMSSBAIO/INC
          INC       FMSSBUIO/INC 
          INC       FMSTCFIO/INC
          INC       FMSWCFIO/INC
          INC       IBAPASIO/INC
.
FMSPR999  ENDPROC
