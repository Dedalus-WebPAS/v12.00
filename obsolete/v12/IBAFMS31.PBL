. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS31                                             *
. * Desc      :   Control Account Maintenance                          *
. **********************************************************************
. * Date      :   17.09.1990                                           *
. * Author    :   B.G.Ackland (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.01.01  17.07.2000 Sandra Barcham                                *
. *           Print GST Control Accounts                               *
. *           srf 3796                                                 *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS31
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSAMAFD/INC       * Account
          INC       FMSCAFFD/INC       * Control Account
          INC       FMSCHQFD/INC       * Cheque Account
          INC       FMSCSAFD/INC       * Account
          INC       FMSLMAFD/INC       * Ledger
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
.
ACCEPT    FORM      1                  * accept mode (1=on)
ACC1      DIM       12
ACC2      DIM       12
ACCCODE   DIM       12
ACCDESC   DIM       35
ACCDESC1  DIM       35
ACCDESC2  DIM       35
CTYDESC   DIM       20
.
CTYDES1   INIT      "Bank Control        "
CTYDES2   INIT      "Creditors Control   "
CTYDES3   INIT      "Discount Control    "
CTYDES4   INIT      "Debtors Control     "
CTYDES5   INIT      "Other Control       "
CTYDES6   INIT      "Payments in Suspense"
CTYDES7   INIT      "G.S.T. Control      "
.
DESC35    DIM       35
LCCITEM   FORM      2
KOPT      INIT      "              "   * vars for KOPT
KOPT1     INIT      "Insert"
KOPT2     INIT      "Change"
KOPT3     INIT      "Delete"
KOPT4     INIT      "Print"
.
PRGID     INIT      "IBAFMS31"
PRGNAM    INIT      "Control Account Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      KOPT0000           * insert/modify/delete/exit ?
          COMPARE   ZERO,COPTION
          GOTO      ML9999 IF EQUAL    * exit program
          COMPARE   FOUR,COPTION
          GOTO      ML4000 IF EQUAL    * print
.
ML0150    CALL      KLED0000           * get entry
          BRANCH    EXIT,ML0100,ML0100 * exit option
.
ML0200    CALL      PROC0000           * get entry
          BRANCH    EXIT,ML0150,ML0100 * exit option
.
          LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO * set up mode
          CALL      SCRA0000           * display screen A
.
          BRANCH    COPTION,ML1000,ML1000,ML2000
.
.---- add/modify data ----
.
ML1000    CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML0200        * don't save data
.
          CALL      POST0000           * post screen A data
          GOTO      ML0200             * get next entry
.
.---- delete data ----
.
ML2000    CALL      DELQST             * ok to delete (y/n/c) ?
          BRANCH    CEXIT,ML2100,ML0200,ML0100
.
ML2100    CALL      DELT0000           * delete screen A data
          GOTO      ML0200             * get next entry
.
.---- print ----
.
ML4000    CALL      KRAB0000           * get range
          BRANCH    EXIT,ML0100        * don't execute range input
          CALL      CONTQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,ML4000,ML0100
          CALL      PRAB0000           * print
          GOTO      ML0100             * get next entry
.
.
ML9999
          CHAIN     PGM
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmscafaf";  * Control Accountfile
          OPEN      FMSCAFA1,"fmscafaf"
.
          DISPLAY   *P64:24,"fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmschqaf";
          OPEN      FMSCHQA1,"fmschqaf"
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.  KOPT - Get desired function                    Called by ML
.        Displays option at *P65:3
.        Requires : KOPT1, KOPT2, KOPT3 ....  (descriptions of options)
.        Returns  : COPTION  (desired option)
.******************************************************************************
KOPT0000  DISPLAY   *P65:3,*EF:             * display screen
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = ",KOPT1:
                    *P1:6,*V2LON,"2",*HOFF," = ",KOPT2:
                    *P1:7,*V2LON,"3",*HOFF," = ",KOPT3:
                    *P1:8,*V2LON,"4",*HOFF," = ",KOPT4
.
KOPT1000  KEYIN     *P1:10,"Select Option : _",*EL:
                   *P17:10,*V2LON,COPTION
          COMPARE   ZERO TO COPTION
          GOTO      KOPT9999 IF EQUAL       * exit ?
.
          MOVE      SP70,KOPT
          LOAD      KOPT,COPTION,KOPT1,KOPT2,KOPT3,KOPT4
          MATCH     SP70,KOPT
          GOTO      KOPT9000 IF NOT EQUAL   * valid option entered ?
          BEEP                              * illegal option, get another
          GOTO      KOPT1000
.
KOPT9000  DISPLAY   *P65:3,*V2LON,KOPT;     * display option
.
KOPT9999  RETURN
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRA0000  DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,SP10,SP5,FMLADESC,*EL:
                    *P1:5,"    Control Account      : ":
                    *V2LON,FMCAACC,*HOFF,SP5,FMAMDESC,*EF:
                    *P1:7,*V2LON," 1",*HOFF,". Control Type         : ":
                    *P1:8,*V2LON," 2",*HOFF,". Journals       (Y/N) : ";
.
          BRANCH    ACCEPT,SCRA9999    * accept mode
          COMPARE   ONE,FMCATYP
          GOTO      SCRA1000 IF NOT EQUAL
          DISPLAY   *P1:9,*V2LON," 3",*HOFF,". Cheque Account       : ";
.
SCRA1000
.
          LOAD      CTYDESC,FMCATYP,CTYDES1,CTYDES2,CTYDES3,CTYDES4,CTYDES5:
                                    CTYDES6,CTYDES7
          MOVE      NO,YESNO
          LOAD      YESNO,FMCAJNL,YES
.
          DISPLAY   *P28:7,*V2LON,FMCATYP,*HOFF,SP6,SP10,CTYDESC:
                    *P28:8,*V2LON,YESNO
          COMPARE   ONE,FMCATYP
          GOTO      SCRA9999 IF NOT EQUAL
.
          PACK      KEY15,FMCACHQ
          CALL      RDFMCH1
          BRANCH    OVRCD,SCRA9999
          MOVE      FMCHDES,DESC35
          DISPLAY   *P28:9,*V2LON,FMCACHQ,*HOFF,SP2,DESC35
.
SCRA9999  RETURN
.******************************************************************************
.* KLED - Enter Ledger                           Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.******************************************************************************
KLED0000  DISPLAY   *P1:4,"    Ledger               : ",*EF;
.
          MOVE      "28",CCOL          * set up screen address
          MOVE      "4",CVERT
          CALL      KLMAFM00
          BRANCH    EXIT,KLED9999,KLED9999
          DISPLAY   *P28:4,*EL,*V2LON,FMLALEDG,*HOFF,SP10,SP5,FMLADESC;
.
KLED9999  RETURN
.******************************************************************************
.* PROC - Enter Control Account                  Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMCALED,FMCAACC (variable entered)                        *
.******************************************************************************
PROC0000  DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,SP10,SP5,FMLADESC,*EL:
                    *P1:5,"    Control Account      : ",*EF;
.
PROC0100  MOVE      "5",CVERT
          MOVE      "28",CCOL          * set up screen address
          COMPARE   ONE,COPTION        * insert mode ?
          GOTO      PROC1000 IF EQUAL
          MOVE      "0",CCONTIND
          CALL      KCAFFM00
          BRANCH    EXIT,PROC9999,PROC9999
          DISPLAY   *P28:5,*EL,*V2LON,FMCAACC,*HOFF,SP5,FMAMDESC;
          GOTO      PROC9999
.
PROC1000  MOVE      "1",CACCTIND
          CALL      KAMAFM00
          BRANCH    EXIT,PROC9999,PROC9999
.
          PACK      KEY14,FMLALEDG,FMAMACCT
          UNPACK    KEY14,FMCALED,FMCAACC
          DISPLAY   *P28:5,*EL,*V2LON,FMCAACC,*HOFF,SP5,FMAMDESC
          CALL      RDFMCA1
          BRANCH    OVRCD,PROC9999
          DISPLAY   *P1:24,*EL,"Control Account Already on File - ";
          CALL      HITENTER
          GOTO      PROC0100
.
PROC9999  RETURN
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMCALED,FMCAACC (variable entered)                        *
.******************************************************************************
SELA0000  MOVE      ZERO,LCCITEM
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,LCCITEM                   * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      MAINQST                      * select/post/cancel ?
          MOVE      CCITEM,LCCITEM
.
          COMPARE   ZERO,LCCITEM
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,LCCITEM
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "6",CVERT
          ADD       LCCITEM,CVERT
          BRANCH    LCCITEM,SELA1100,SELA1200,SELA1300
.
          BRANCH    ACCEPT,SELA0900              * finished accept mode ?
          BEEP                                   * illegal option
.
SELA0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELA0100                     * get next option
.
.---- option 1 ---- Type
.
SELA1100  DISPLAY   *P1:22,*EF,*V2LON," 1",*HOFF," = ",CTYDES1:
                               *V2LON," 2",*HOFF," = ",CTYDES2:
                               *V2LON," 3",*HOFF," = ",CTYDES3:
                        *P1:23,*V2LON," 4",*HOFF," = ",CTYDES4:
                               *V2LON," 5",*HOFF," = ",CTYDES5:
                               *V2LON," 6",*HOFF," = ",CTYDES6:
                        *P1:24,*V2LON," 7",*HOFF," = ",CTYDES7
.
          KEYIN     *PCCOL:CVERT,*DV,UNDLN1,*EL:
                    *PCCOL:CVERT,*V2LON,FMCATYP:
                    *PCCOL:CVERT,*DV,FMCATYP;
          BRANCH    FMCATYP,SELA1110,SELA1110,SELA1110,SELA1110,SELA1110:
                            SELA1110,SELA1110
          BEEP
          GOTO      SELA1100
.
SELA1110  LOAD      CTYDESC,FMCATYP,CTYDES1,CTYDES2,CTYDES3,CTYDES4,CTYDES5:
                                    CTYDES6,CTYDES7
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCATYP,*HOFF,SP6,SP10,CTYDESC:
                    *P1:22,*EF;
          COMPARE   ONE,FMCATYP
          GOTO      SELA1120 IF NOT EQUAL
.
          DISPLAY   *P1:9,*V2LON," 3",*HOFF,". Cheque Account       : ";
          MATCH     SP70,FMCACHQ
          GOTO      SELA0100 IF NOT EQUAL
.
          ADD       TWO,CVERT
          BRANCH    ACCEPT,SELA0100    * in accept mode ?
          GOTO      SELA1300
.
SELA1120  DISPLAY   *P1:9,*EL;
          UNPACK    SP70,FMCACHQ,DESC35
          GOTO      SELA0100
.
.---- option 2 ---- Journals Allowed
.
SELA1200  CALL      YORN0000
          MOVE      FYESNO,FMCAJNL
          GOTO      SELA0100
.
.---- option 3 ---- Opening Balance
.
SELA1300
          COMPARE   ONE,FMCATYP
          GOTO      SELA1390 IF NOT EQUAL
.
          CALL      KCHQFM00
          BRANCH    EXIT,SELA1300,SELA9500
          MOVE      FMCHCHQ,FMCACHQ
          MOVE      FMCHDES,DESC35
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCACHQ,*HOFF,SP2,DESC35
          GOTO      SELA0100
.
SELA1390  BRANCH    ACCEPT,SELA0100              * in insert mode ?
          BEEP
          GOTO      SELA0100
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT                     * cancel
.
SELA9999  RETURN
.******************************************************************************
.* POST - Post data                              Called by ML0000             *
.******************************************************************************
POST0000  PACK      KEY14,FMCALED,FMCAACC,SP70
.
          COMPARE   ONE,COPTION
          GOTO      POST1000 IF NOT EQUAL
          CALL      RAFMCA1                 * record exists ?
          BRANCH    OVRCD,POST1000
          DISPLAY   *P1:24,*B,*EF:
                    "Control Account Code Has Just Been Entered - ";
          CALL      HITENTER
          GOTO      POST9999
.
POST1000  CALL      DEFMCA1                 * delete old record (if possible)
          CALL      WRFMCA1                 * write new record
.
POST9999  RETURN
.******************************************************************************
.* DELT - Delete data                            Called by ML0000             *
.******************************************************************************
DELT0000  PACK      KEY14,FMCALED,FMCAACC,SP70
          CALL      DEFMCA1                 * delete old record (if possible)
.
DELT9999  RETURN
.**********************************************************************
.  KRAB - Keyin range                                  Called By ML
.        Returns  - FMLALEDG   (ledger)
.                   ACC1, ACC2 (from and to accounts)
.                   EXIT       (1=quit option)
.**********************************************************************
KRAB0000  UNPACK    SP70,ACC1,ACCDESC1
          UNPACK    SP70,ACC2,ACCDESC2
          DISPLAY   *P1:4,*EF,"    Ledger               : ";
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          CALL      KLMAFM00                * get ledger
          BRANCH    EXIT,KRAB9500,KRAB9500  * exit ?
          DISPLAY   *P1:4,"    Ledger               : ":
                           *V2LON,FMLALEDG,*HOFF,SP10,SP2,FMLADESC,*EF:
                    *P1:5,"    First Control Acct   : ":
                           *V2LON,ACC1,*HOFF,SP2,ACCDESC1:
                    *P1:6,"    Last  Control Acct   : ";
.
KRAB0100  MOVE      "28",CCOL
          MOVE      "5",CVERT
          DISPLAY   *P28:6,*EF;             * clear last account from screen
          MOVE      "0",CCONTIND            * posting accounts only
          CALL      KCAFFM00                * get account
          BRANCH    EXIT,KRAB0000,KRAB9500  * exit ?
          PACK      ACC1,FMCAACC,SP70
          PACK      ACCDESC1,FMAMDESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,ACC1,*HOFF,SP2,ACCDESC1;
.
          MOVE      "28",CCOL
          MOVE      "6",CVERT
          CALL      KCAFFM00                * get account
          BRANCH    EXIT,KRAB0100,KRAB9500  * exit ?
          PACK      ACC2,FMCAACC,SP70
          PACK      ACCDESC2,FMAMDESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,ACC2,*HOFF,SP2,ACCDESC2;
.
          MATCH     ACC1,ACC2
          GOTO      KRAB9000 IF NOT LESS    * valid range ?
          DISPLAY   *P1:24,*B,*EL:
                    "First Account Cannot Be After Last Account - ";
          CALL      HITENTER
          GOTO      KRAB0100
.
KRAB9000  MOVE      ZERO,EXIT          * continue
          GOTO      KRAB9999
.
KRAB9500  MOVE      ONE,EXIT           * quit
.
KRAB9999  RETURN
.******************************************************************************
.* PRAB - Post data for range input              Called by ML, PRAB           *
.******************************************************************************
PRAB0000
          DISPLAY   *P1:24,"Printing :   ";
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "599",CLNO                   * init last line number
          MOVE      ZERO,SECTOR
.
          PACK      KEY14,FMLALEDG,ACC1,SP70
          CALL      RSFMCA1                 * go to start of records
          CALL      RPFMCA1                 * go back one record
.
PRAB1000  CALL      RKFMCA1                 * get next record
          BRANCH    OVRCD,PRAB9000          * no more records ?
          MATCH     FMLALEDG,FMCALED
          GOTO      PRAB9000 IF NOT EQUAL   * out of range ?
          MATCH     FMCAACC,ACC2
          GOTO      PRAB9000 IF LESS        * out of range ?
.
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMLALEDG,FMCAACC,SP70
          CALL      RDFMAM1
          MOVE      FMCAACC,ACCCODE
          MOVE      FMAMDESC,ACCDESC
.
          PACK      KEY15,FMLALEDG,SP70
          CALL      RSFMAM2                 * go to start of records
.
PRAB2000  CALL      RKFMAM2                 * get next record
          BRANCH    OVRCD,PRAB1000          * no more records ?
          MATCH     FMLALEDG,FMAMLEDG       * end of ledger
          GOTO      PRAB1000 IF NOT EQUAL
          MATCH     "6",FMAMTYPE            * end of posting accounts
          GOTO      PRAB1000 IF NOT LESS
.
          ADD       ONE,SECTOR         * display every 100th record
          IF        SECTOR%100=1
            DISPLAY   *P1:24,*V2LON,SECTOR," - ",FMCAACC,SP1,FMAMACCT,*EF;
          ENDIF
.
          MOVE      SP70,FMCSBNK            * Bank Control
          MOVE      SP70,FMCSCRD            * Creditors Control
          MOVE      SP70,FMCSDIS            * Discount Control
          MOVE      SP70,FMCSDEB            * Debtors Control
          MOVE      SP70,FMCSAGST           * Accrual Gst Control
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMCS1
.
          MATCH     SP70,FMCSBNK
          IF        @EQUAL
            MOVE      FMLABNK,FMCSBNK
          ENDIF
          MATCH     FMCAACC,FMCSBNK
          GOTO      PRAB3000 IF EQUAL
.
          MATCH     SP70,FMCSCRD
          IF        @EQUAL
            MOVE      FMLACRD,FMCSCRD
          ENDIF
          MATCH     FMCAACC,FMCSCRD
          GOTO      PRAB3000 IF EQUAL
.
          MATCH     SP70,FMCSDIS
          IF        @EQUAL
            MOVE      FMLADIS,FMCSDIS
          ENDIF
          MATCH     FMCAACC,FMCSDIS
          GOTO      PRAB3000 IF EQUAL
.
          MATCH     SP70,FMCSDEB
          IF        @EQUAL
            MOVE      FMLADEB,FMCSDEB
          ENDIF
          MATCH     FMCAACC,FMCSDEB
          GOTO      PRAB3000 IF EQUAL
.
          MATCH     SP70,FMCSAGST
          IF        @EQUAL
            MOVE      FMLAAGST,FMCSAGST
          ENDIF
          MATCH     FMCAACC,FMCSAGST
          GOTO      PRAB2000 IF NOT EQUAL
.
PRAB3000  
          COMPARE   "55",CLNO               * end of page ?
          CALL      HEAD0000 IF NOT LESS    * start new page
.
          PRINT     "| ",ACCCODE,SP2,ACCDESC," | ",FMAMACCT,SP2,FMAMDESC:
                    *132,"|"
          ADD       "1",CLNO                * increment line number
          UNPACK    SP70,ACCCODE,ACCDESC
.
          GOTO      PRAB2000
.
PRAB9000  
          COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL            * print head if nothing printed
          CALL      UND132                       * print line
          PRINT     "****   End of Report   ****"
.
PRAB9999  RETURN
.********************************************************************
. HEAD - print report                               Called by PRN#
.********************************************************************
HEAD0000  CALL      HEAD132                      * print heading
.
          ADD       "3",CLNO
          PRINT     *40,"Print Control Account Links":
                    *N,*40,"From : ",FMLALEDG,SLASH,ACC1,SP2,ACCDESC1:
                    *N,*40,"To   : ",FMLALEDG,SLASH,ACC2,SP2,ACCDESC2
          CALL      UND132                       * print line
          PRINT     "| Control Account                                   | ":
                    " Linked to Posting Account":
                    *132,"| "
          ADD       "1",CLNO
          CALL      UND132                       * print line
.
HEAD9999  RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
          INC       FMSAMAIO/INC       * Account
          INC       FMSCAFIO/INC       * Control Account
          INC       FMSCHQIO/INC       * Cheque Account
          INC       FMSCSAIO/INC       * Account
          INC       FMSLMAIO/INC       * Ledger
.
          INC       FMSAMAKY           * Account
          INC       FMSCAFKY           * Control Account
          INC       FMSCHQKY           * Cheque Account
          INC       FMSLMAKY           * Ledger
.
          INC       FMSSTDCD           * FMS Acc. standard routines
