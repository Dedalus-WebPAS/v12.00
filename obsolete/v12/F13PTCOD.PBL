.*****************************************************************************
.*    Program      : F13PTCOD                                                *
.*    Description  : Conversion of patcodes to New File layout               *
.*                                                                           *
.*    Author       : Don Nguyen                                              *
.*    Date         : 03/08/2018                                              *
.*    Modifications:                                                         *
.*                                                                           *
.*        V10.13.00  03/08/2018  Don Nguyen      TSK 0853011                 *
.*                   Created new                                             *
.*****************************************************************************
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
.
.                                     ******** Old FD *******
.
OLDFILE1  IFILE     SQL, FIXED=244, KEY="U1-2,3-5"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
.TCODE    DIM       2          2          1       TYPE OF CODE TO TABLE
.ACODE    DIM       3          3          3       ACTUAL CODE
.
.TDESC    DIM       20        20          6       TABLE DESCRIPTION
.THCSCOD  DIM       4          4         26       HCS EQUIVALENT
.                                                 (Journal Type for Journals)
.TCFORM6  FORM      6          4         30       FORM 6 USING ANYWHERE
.TCINDC1  DIM       1          1         34       SPECIAL INDIC 1 (Categ depend)
.TCINDC2  DIM       1          1         35       SPECIAL INDIC 2 (Categ depend)
.TCINDC3  DIM       1          1         36       SPECIAL INDIC 3 (Categ depend)
.TCINDC4  DIM       1          1         37       SPECIAL INDIC 4 (Categ depend)
.TCINDC5  DIM       1          1         38       SPECIAL INDIC 5 (Categ depend)
.PTCOACTV DIM       1          1         39       ACTIVE INDICATOR, A = Active
.                                                                   I = Inactive
.TCINDC6  DIM       1          1         40       SPECIAL INDIC 6 (Categ depend)
.TCINDC7  DIM       1          1         41       SPECIAL INDIC 7 (Categ depend)
.TCINDC8  DIM       1          1         42       SPECIAL INDIC 8 (Categ depend)
.TCINDC9  DIM       1          1         43       SPECIAL INDIC 9 (Categ depend)
.TCINDC10 DIM       1          1         44       SPECIAL INDIC10 (Categ depend)
.TCINDC11 DIM       1          1         45       SPECIAL INDIC11 (Categ depend)
.PTCDGRPV DIM       3          3         46       GROUPER VERSION (031 or 041)
.PTCDDEFT DIM       1          1         49       DEFAULT CODE (0=NO 1=YES)
.PTCDNHCP DIM       4          4         50       National HCP Equivalent
.PTCDHOSS DIM       1          1         54       Hospital Specific Code
.                                                 (0=NO 1=YES) mltcodaf
.PTCDLDES DIM      50         50         55       Long Description
.PTCDDFIC DIM       6          6        105       Default Fee Information Code
.                                                 (Stationery Code - Type 3)
.TCINDC12 DIM       1          1        111       SPECIAL INDIC12 (Categ depend)
.TCINDC13 DIM       1          1        112       SPECIAL INDIC13 (Categ depend)
.TCINDC14 DIM       1          1        113       SPECIAL INDIC14 (Categ depend)
.TCINDC15 DIM       1          1        114       SPECIAL INDIC15 (Categ depend)
.TCINDC16 DIM       1          1        115       SPECIAL INDIC16 (Categ depend)
.TCINDC17 DIM       1          1        116       SPECIAL INDIC17 (Categ depend)
.TCINDC18 DIM       1          1        117       SPECIAL INDIC18 (Categ depend)
.TCINDC19 DIM       1          1        118       SPECIAL INDIC19 (Categ depend)
.TCINDC20 DIM       1          1        119       SPECIAL INDIC20 (Categ depend)
.TCINDC21 DIM       1          1        120       SPECIAL INDIC21 (Categ depend)
.PTCDFELC DIM      10         10        121       Financial Election Stationery
.                                                 Template Form
.PTCDUDF2 DIM      10         10        131       Hospital code (pathspaf)
.PTCDUDF3 DIM      10         10        141       User Defined Field 3
.PTCDUDF4 DIM      10         10        151       User Defined Field 4
.PTCDCRSC FORM      2.2        3        161       % Credit Card Surcharge
.PTCDASC1 DIM       6          6        164       Associated Number 1
.PTCDASC2 DIM       6          6        170       Associated Number 2
.PTCDASC3 DIM       6          6        176       Associated Number 3
.PTCDASC4 DIM       6          6        182       Associated Number 4
.PTCDASC5 DIM       6          6        188       Associated Number 5
.TCSPARE  DIM      50         50        194       SPARE VARIABLE
.End of Record                          244
.
.
.
.                                     ******** New FD *******
.Data File Definition
.--------------------
.
PATCODE1   IFILE SQL, FIXED=424, KEY="U1-2,3-5"
.
. NAME    TYPE    LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----    ----    ------   --------  ----------   -----------
TCODE     DIM       2          2          1       TYPE OF CODE TO TABLE
ACODE     DIM       3          3          3       ACTUAL CODE
.
TDESC     DIM       20        20          6       TABLE DESCRIPTION
THCSCOD   DIM       4          4         26       HCS EQUIVALENT
.                                                 (Journal Type for Journals)
TCFORM6   FORM      6          4         30       FORM 6 USING ANYWHERE
TCINDC1   DIM       1          1         34       SPECIAL INDIC 1 (Categ depend)
TCINDC2   DIM       1          1         35       SPECIAL INDIC 2 (Categ depend)
TCINDC3   DIM       1          1         36       SPECIAL INDIC 3 (Categ depend)
TCINDC4   DIM       1          1         37       SPECIAL INDIC 4 (Categ depend)
TCINDC5   DIM       1          1         38       SPECIAL INDIC 5 (Categ depend)
PTCOACTV  DIM       1          1         39       ACTIVE INDICATOR, A = Active
.                                                                   I = Inactive
TCINDC6   DIM       1          1         40       SPECIAL INDIC 6 (Categ depend)
TCINDC7   DIM       1          1         41       SPECIAL INDIC 7 (Categ depend)
TCINDC8   DIM       1          1         42       SPECIAL INDIC 8 (Categ depend)
TCINDC9   DIM       1          1         43       SPECIAL INDIC 9 (Categ depend)
TCINDC10  DIM       1          1         44       SPECIAL INDIC10 (Categ depend)
TCINDC11  DIM       1          1         45       SPECIAL INDIC11 (Categ depend)
PTCDGRPV  DIM       3          3         46       GROUPER VERSION (031 or 041)
PTCDDEFT  DIM       1          1         49       DEFAULT CODE (0=NO 1=YES)
PTCDNHCP  DIM       4          4         50       National HCP Equivalent
PTCDHOSS  DIM       1          1         54       Hospital Specific Code
.                                                 (0=NO 1=YES) mltcodaf
PTCDLDES  DIM      50         50         55       Long Description
PTCDDFIC  DIM       6          6        105       Default Fee Information Code
.                                                 (Stationery Code - Type 3)
TCINDC12  DIM       1          1        111       SPECIAL INDIC12 (Categ depend)
TCINDC13  DIM       1          1        112       SPECIAL INDIC13 (Categ depend)
TCINDC14  DIM       1          1        113       SPECIAL INDIC14 (Categ depend)
TCINDC15  DIM       1          1        114       SPECIAL INDIC15 (Categ depend)
TCINDC16  DIM       1          1        115       SPECIAL INDIC16 (Categ depend)
TCINDC17  DIM       1          1        116       SPECIAL INDIC17 (Categ depend)
TCINDC18  DIM       1          1        117       SPECIAL INDIC18 (Categ depend)
TCINDC19  DIM       1          1        118       SPECIAL INDIC19 (Categ depend)
TCINDC20  DIM       1          1        119       SPECIAL INDIC20 (Categ depend)
TCINDC21  DIM       1          1        120       SPECIAL INDIC21 (Categ depend)
PTCDFELC  DIM      10         10        121       Financial Election Stationery
.                                                 Template Form 
PTCDUDF2  DIM      10         10        131       Hospital code (pathspaf)
PTCDUDF3  DIM      10         10        141       User Defined Field 3
PTCDUDF4  DIM      10         10        151       User Defined Field 4
PTCDCRSC  FORM      2.2        3        161       % Credit Card Surcharge
PTCDASC1  DIM       6          6        164       Associated Number 1
PTCDASC2  DIM       6          6        170       Associated Number 2
PTCDASC3  DIM       6          6        176       Associated Number 3
PTCDASC4  DIM       6          6        182       Associated Number 4
PTCDASC5  DIM       6          6        188       Associated Number 5
TCINDC22  DIM       1          1        194       SPECIAL INDIC22 (Categ depend)
TCINDC23  DIM       1          1        195       SPECIAL INDIC23 (Categ depend)
TCINDC24  DIM       1          1        196       SPECIAL INDIC24 (Categ depend)
TCINDC25  DIM       1          1        197       SPECIAL INDIC25 (Categ depend)
TCINDC26  DIM       1          1        198       SPECIAL INDIC26 (Categ depend)
TCINDC27  DIM       1          1        199       SPECIAL INDIC27 (Categ depend)
TCINDC28  DIM       1          1        200       SPECIAL INDIC28 (Categ depend)
TCINDC29  DIM       1          1        201       SPECIAL INDIC29 (Categ depend)
TCINDC30  DIM       1          1        202       SPECIAL INDIC30 (Categ depend)
TCINDC31  DIM       1          1        203       SPECIAL INDIC31 (Categ depend)
TCINDC32  DIM       1          1        204       SPECIAL INDIC32 (Categ depend)
TCINDC33  DIM       1          1        205       SPECIAL INDIC33 (Categ depend)
TCINDC34  DIM       1          1        206       SPECIAL INDIC34 (Categ depend)
TCINDC35  DIM       1          1        207       SPECIAL INDIC35 (Categ depend)
TCINDC36  DIM       1          1        208       SPECIAL INDIC36 (Categ depend)
TCINDC37  DIM       1          1        209       SPECIAL INDIC37 (Categ depend)
TCINDC38  DIM       1          1        210       SPECIAL INDIC38 (Categ depend)
TCINDC39  DIM       1          1        211       SPECIAL INDIC39 (Categ depend)
TCINDC40  DIM       1          1        212       SPECIAL INDIC40 (Categ depend)
TCINDC41  DIM       1          1        213       SPECIAL INDIC41 (Categ depend)
PTCDUDF5  DIM      10         10        214       User Defined Field 5
PTCDUDF6  DIM      10         10        224       User Defined Field 6
PTCDUDF7  DIM      10         10        234       User Defined Field 7
PTCDUDF8  DIM      10         10        244       User Defined Field 8
PTCDUDF9  DIM      10         10        254       User Defined Field 9
PTCDUD10  DIM      10         10        264       User Defined Field 10
PTCDUD11  DIM      10         10        274       User Defined Field 11
PTCDUD12  DIM      10         10        284       User Defined Field 12
PTCDUD13  DIM      10         10        294       User Defined Field 13
PTCDUD14  DIM      10         10        304       User Defined Field 14
PTCDASC6  DIM       6          6        314       Associated Number 6
PTCDASC7  DIM       6          6        320       Associated Number 7
PTCDASC8  DIM       6          6        326       Associated Number 8
PTCDASC9  DIM       6          6        332       Associated Number 9
PTCDAS10  DIM       6          6        338       Associated Number 10
PTCDAS11  DIM       6          6        344       Associated Number 11
PTCDAS12  DIM       6          6        350       Associated Number 12
PTCDAS13  DIM       6          6        356       Associated Number 13
PTCDAS14  DIM       6          6        362       Associated Number 14
PTCDAS15  DIM       6          6        368       Associated Number 15
TCSPARE   DIM      50         50        374       SPARE VARIABLE
.End of Record                          424
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      6
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION PATCODFD"
PRGID     INIT      "F13PTCOD"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0500:               * no
                          MAIN9000                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9000
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  MOVE      "No",USINGORC
          REP       "yYnN",USINGORC
          MOVE      USINGORC,KEY1
          REP       "Y-N-",KEY1
          MATCH     "-",KEY1
          GOTO      OPTN9200 IF NOT EQUAL
.
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
          MATCH     "Y",USINGORC
          IF        @EQUAL
            DISPLAY   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
          ENDIF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9200  DISPLAY   *P1:3,*EF,*P1:4," Oracle Option has not been set up ":
                          "correctly":
                    *P1:6," Program will terminate    - ";
          MOVE      "Oracle Option has not been set up correctly",ERORTEXT
          WRITE     LOGFILE,SEQ;*+,ERORTEXT
          CALL      HITENTER
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          MOVE      "patcodes",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patcodes.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptcodes.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat patcodes.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sptcodes.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "patcodes",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sptcodes",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "patcodes",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 424 UC1-2,3-5",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC1-2,6-25,3-5",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC3-5,1-2",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC3-5,6-25,1-2",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC1-2,26-29,3-5",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PATCODE1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
          CALL      ELOG0000                     * write an end log entry
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY5,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 100000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          UNPACK    SP60,TCINDC22,TCINDC23,TCINDC24,TCINDC25:
                         TCINDC26,TCINDC27,TCINDC28,TCINDC29,TCINDC30:
                         TCINDC31,TCINDC32,TCINDC33,TCINDC34,TCINDC35:
                         TCINDC36,TCINDC37,TCINDC38,TCINDC39,TCINDC40:
                         TCINDC41
          UNPACK    SP60,PTCDUDF5,PTCDUDF6,PTCDUDF7,PTCDUDF8,PTCDUDF9,PTCDUD10
          UNPACK    SP60,PTCDUD11,PTCDUD12,PTCDUD13,PTCDUD14
          UNPACK    SP60,PTCDASC6,PTCDASC7,PTCDASC8,PTCDASC9,PTCDAS10:
                         PTCDAS11,PTCDAS12,PTCDAS13,PTCDAS14,PTCDAS15
.
.
          PACK      KEY5,TCODE,ACODE,SP70
          CALL      WRCODE1                       * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PATCODE1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sptcodes*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat patcodes.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  MOVE      "Error finding 'patcodes'.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"f03ptcod.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"f03ptcod.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "PATCODFD"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,*EL,"Record No. :";
.
          CALL      SLOG0000                      * write start to log file
.
          OPEN      PATCODE1,"patcodes"
.
          PACK      KEY5,SP70
          CALL      OFDUMYIO                      * position at start of file
OFIX0500  CALL      OFDUMYIO                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.         
          IF        DISNUM = 100000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          CALL      OFDUMYIO
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     PATCODE1
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Update completed ",CDATE,SP1,CTIMEIS:
                    *P1:24;
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
OFIX9999  RETURN
.
OFDUMYIO  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.
READSOLD  RESET     KEY5
          READ      OLDFILE1,KEY5;;
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;TCODE,ACODE,TDESC,THCSCOD,TCFORM6:
                             TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5,PTCOACTV:
                             TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10,TCINDC11:
                             PTCDGRPV,PTCDDEFT,PTCDNHCP,PTCDHOSS,PTCDLDES:
                             PTCDDFIC,TCINDC12,TCINDC13,TCINDC14,TCINDC15:
                             TCINDC16,TCINDC17,TCINDC18,TCINDC19,TCINDC20:
                             TCINDC21,PTCDFELC,PTCDUDF2,PTCDUDF3,PTCDUDF4:
                             PTCDCRSC,PTCDASC1,PTCDASC2,PTCDASC3,PTCDASC4:
                             PTCDASC5,TCSPARE
          GOTO      OVERCOND IF OVER
          RETURN
.
.
.                  ******************************    NEW IO ROUTINES
.
WRCODE1   MOVE      ZERO,OVRCD
          RESET     KEY5
          TRAP      OVERLOCK IF IO
          WRITE     PATCODE1,KEY5;KEY5,TDESC,THCSCOD,TCFORM6:
                            TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5,PTCOACTV:
                            TCINDC6,TCINDC7,TCINDC8,TCINDC9,TCINDC10,TCINDC11:
                            PTCDGRPV,PTCDDEFT,PTCDNHCP,PTCDHOSS,PTCDLDES:
                            PTCDDFIC,TCINDC12,TCINDC13,TCINDC14,TCINDC15:
                            TCINDC16,TCINDC17,TCINDC18,TCINDC19,TCINDC20:
                            TCINDC21,PTCDFELC,PTCDUDF2,PTCDUDF3,PTCDUDF4:
                            PTCDCRSC,PTCDASC1,PTCDASC2,PTCDASC3,PTCDASC4:
                            PTCDASC5,TCINDC22,TCINDC23,TCINDC24,TCINDC25:
                            TCINDC26,TCINDC27,TCINDC28,TCINDC29,TCINDC30:
                            TCINDC31,TCINDC32,TCINDC33,TCINDC34,TCINDC35:
                            TCINDC36,TCINDC37,TCINDC38,TCINDC39,TCINDC40:
                            TCINDC41,PTCDUDF5,PTCDUDF6,PTCDUDF7,PTCDUDF8:
                            PTCDUDF9,PTCDUD10,PTCDUD11,PTCDUD12,PTCDUD13:
                            PTCDUD14,PTCDASC6,PTCDASC7,PTCDASC8,PTCDASC9:
                            PTCDAS10,PTCDAS11,PTCDAS12,PTCDAS13,PTCDAS14:
                            PTCDAS15,TCSPARE
          TRAPCLR   IO
          RETURN
.
          INC       STD001IO
.
