.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.01  30.10.2002  Davin Sloan SRF 16951
.           Added NAB statement import
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.00  29.01.2002 Raghunandan Surve, HPS SRF14936
.           Changed transaction counter size (TRANCNT),
.           Changed error messages in KFILE000,
.           Added routine to get default path,
.           Delete temp files, Changed to skip dates with
.           no transaction records in CBA Import
. VF.09.B02 17.12.2000 Sandra Barcham
.           Move SP3 to IBGIBASC
. VF.09.B01 17.11.2000 Sandra Barcham
.           Replaced FMSGINFD & IO with IBAGINFD & IO
.-------------------------------------------------------
. VF.00.01  04.05.1998 B.G.Ackland
.           CBA Diamond Cash Bank Statement Import BHS Modifications V6.00.07
.-------------------------------------------------------
GINFILE   DIM       8
LASTCHQ   DIM       15
LASTDAT   DIM       8
GENCOUNT  FORM      6
TRANTYPE  DIM       1
HYPEN     INIT      "-"
D15       DIM       15
AMTFILE   FORM      12.2
AMTSTAT   FORM      12.2
AMT14     DIM       14
.
CHKDIM2   DIM       2
CHKDIM6   DIM       6
CURRBANK  DIM       15
COUNT     FORM      2
DASH      INIT      "-"
D80A      DIM       80
D80B      DIM       80
IMPFILE   DIM       15
FORM15    FORM      15
PRESDATE  DIM       8
REFCODE   DIM       15
STATDATE  DIM       8
STATUS    DIM       1
TEXTFILE  FILE      ASCII,FIXED=161    * Text File
TRANCODE  DIM       2
TRANCNT   FORM      6
TRNCODES  DIM       3[17]                   * codes for CR transactions
FILENAME  DIM       8
ISBUILD   INIT      "isbuild "
FILEERR   FORM      1
TEMPFILE  FILE      ASCII, FIXED=256
DEFPATH   DIM       40
OLDPATH   DIM       40
LOWUP     INIT      "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
.
. Import Temp File
.
APSTM1A1  IFILE    SQL, FIXED=179, KEY="U1-6"
APTM1KEY  INIT     " 179 U1-6"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
APTMUNI   DIM       6      6        1     Unique ID
APTMCHQ   DIM       15     15       7     Cheque Account
APTMDAT   DIM       8      8        22    Statement Date CCYYMMDD
APTMCLB   FORM      12.2   8        30    Closing Balance
APTMAMT   FORM      12.2   8        38    Transaction Amount
APTMCOD   DIM       3      3        46    Transaction Code
APTMNAR   DIM       42     42       49    Narrative
APTMSER   DIM       9      9        91    Serial Number (Cheque No)
APTMUPD   DIM       1      1       100    Updated 0=No 1=Yes
APTMERR   DIM       47     47      101    Error Message
APTMSPA   DIM       31     31      148    Spare
.
. End of Record                    179
.
.---------------------------------------------------------------------------
. NAB Statement Import
.---------------------------------------------------------------------------
.Name     Type      Length Start Description
.----     ----      ------ ----- -----------
NABBNKID  DIM       8      1     * Bank ID
NABCURCD  DIM       3      9     * Currency Code
NABACNTN  DIM       9      12    * Account Number
NABTRDTE  DIM       8      21    * Date of Transaction
NABTRCOD  DIM       3      29    * Transaction Code
NABTRDSC  DIM       20     32    * Transaction Description
NABREFNO  DIM       9      52    * Reference / Cheque number
NABNARRT  DIM       42     61    * Narrative
NABTRAMT  DIM       15     103   * Transaction Amount
.
. End of Record            118
.
. Commonwealth Bank Diamond Cash Statement Import
.---------------------------------------------------------------------------
. Header Records (0, 1, 2, 3 )
.
CBA2ACC   DIM       8    * Cheque Account
CBA2CLB   DIM       13   * Closing Balance
CBA2SIG   DIM       1    * Closing Balance Sign
.
. Transaction Records   (4 & 5)
.
CBA2TYP   DIM       1    * Record Type 4=Debit 5=Credit
CBA2BRN   DIM       4    * Branch
CBA2ACT   DIM       8    * Account
CBA2AGT   DIM       8    * Agent
CBA2TRN   DIM       3    * Transaction Code
CBA2AMT   DIM       11   * Amount
CBA2NUM   DIM       9    * Number
CBA2NAR   DIM       30   * Narative
.
. Trailer Records
.
CBA2DBT   DIM       13     Debit Total
CBA2DBN   DIM       5      Debit Number
CBA2CRT   DIM       13     Credit Total
CBA2CRN   DIM       5      Credit Number
.
. Westpac Bank Statement Import
.------------------------------------------------------------
.
. Header Record Details - BRS, 01, 02, 03
.
.Name     Type      Length Description
.----     ----      ------ -----------
WBCHYER   DIM       4      Year
WBCHDAY   DIM       3      Julian Day
WBCHACC   DIM       13     Account Number
WBCHCLB   DIM       15     Closing Balance Amount
WBCHCLS   DIM       1      Closing Balance Sign
.
. Transaction Record  - 05
.
.Name     Type      Length Start Description
.----     ----      ------ ----- -----------
WBCTTYP   DIM       2      1     "05"
WBCTAMT   DIM       15     3     Transaction Amount
WBCTSIG   DIM       1      18    Transaction Sign
WBCTCOD   DIM       3      19    Transaction Code
WBCTNAR   DIM       42     22    Narrative
WBCTSER   DIM       7      64    Serial Number (Cheque No)
WBCTFLG   DIM       1      71    Account Number
.
. End of Record            72
.
. Narative Details
.
APTMREM   DIM       16           Name of Remitter
APTMLOG   DIM       18           Lodgment Reference
.
.
. Trailing Record Details - END, 99, 07
.
.Name     Type      Length Description
.----     ----      ------ -----------
WBCEDBT   DIM       15     Debit Total
WBCEDBN   DIM       5      Debit Number
WBCECRT   DIM       15     Credit Total
WBCECRN   DIM       5      Credit Number
WBCETOT   DIM       16     Total Amount
WBCESIG   DIM       1      Total Sign
WBCENUM   DIM       6      Total Records
.
F13       FORM      13
F15       FORM      15
F12P2     FORM      12.2
TOTALAMT  FORM      12.2
TOTALCNT  FORM      6
DBTOTAMT  FORM      12.2
DBTOTCNT  FORM      6
CRTOTAMT  FORM      12.2
CRTOTCNT  FORM      6
HEADOK    FORM      1
.
. Unpresented Temp File
.
APSTM2A1  IFILE    SQL, FIXED=68, KEY="U1-15,16-16,17-24,25-39"
APTM2KEY  INIT     " 68 U1-15,16-16,17-24,25-39"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
APT2CHQ   DIM       15     15       1     Cheque Account
APT2TYP   DIM       1      1        16    Type 0=Cheq, 1=Rec
APT2DAT   DIM       8      8        17    Date CCYYMMDD
APT2REF   DIM       15     15       25    Reference
APT2AMT   FORM      12.2   8        40    Transaction Amount
APT2SPA   DIM       20     3        48    Spare
.
. End of Record                     68
.
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS79
.   Function      :   Read Bank Statement Tape/Disc File      
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       FMSBNKFD/INC
          INC       FMSBRIFD/INC
          INC       FMSCHQFD/INC
          INC       IBAGINFD/INC
.=========================
.Local Variable Definition
.-------------------------
BANKPATH  DIM      40 * Scr 00 Fld     4
INPUTFMT  FORM      2 * Scr 00 Fld     5
INPFDES   DIM      30 * Scr 00 Fld     6
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS79"
PRGNAM    INIT      "Read Bank Statement Tape/Disc File      "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA1,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA2,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA3,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA4,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening fmsbnkaf";
          OPEN      FMSBNKA5,"fmsbnkaf"
          DISPLAY   *P56:24,"Opening  fmsbnkaf           ";
          OPEN      FMSBNKA6,"fmsbnkaf"          
          DISPLAY   *P56:24,"Opening fmsbriaf";
          OPEN      FMSBRIA1,"fmsbriaf"
          DISPLAY   *P56:24,"Opening fmsbriaf";
          OPEN      FMSBRIA2,"fmsbriaf"
          DISPLAY   *P56:24,"Opening fmschqaf";
          OPEN      FMSCHQA1,"fmschqaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETACCEP
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,BANKPATH
          MOVE      ZERO,INPUTFMT
          MOVE      SP70,INPFDES 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103
          GOTO     PS00L999
.
PS00L101
          MOVE      BANKPATH,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      INPUTFMT,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      INPFDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L104,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      RUNINT00
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL     SELECTED
          MOVE      "2",CKEYTYP
          CALL      KFILE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      BANKPATH,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,INPFDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSFMT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      INPUTFMT,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      INPFDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
.----------------------------------------------------------------------
. Run Interface
.----------------------------------------------------------------------
RUNINT00  PACK      KEY15,SP70  * read cheque acct record
          CALL      RSFMCH1
RUNINT05  CALL      RKFMCH1
          BRANCH    OVRCD,RUNINT90
.
          COMPARE   FMCHFMT,INPUTFMT             * only want selected format
          GOTO      RUNINT05 IF NOT EQUAL
.
          BRANCH    INPUTFMT,RUNINT10,RUNINT20,RUNINT30,RUNINT40
          GOTO      RUNINT99
.
RUNINT10  CALL      CBAINT00
          GOTO      RUNINT99
.
RUNINT20  CALL      WBCINT00
          GOTO      RUNINT99
.
RUNINT30  CALL      CBA2IN00
          GOTO      RUNINT99
.
RUNINT40  CALL      NABINT00
          GOTO      RUNINT99
.
RUNINT90  BEEP
          MOVE      "No Valid Cheque Accounts Found FMSCHQ - ",DISPMSG
          CALL      MESSAGE1
.
RUNINT99  RETURN
.----------------------------------------------------------------------
. CBA Interface
.----------------------------------------------------------------------
CBAINT00  CALL      OPEN0000
          BRANCH    OVRCD,CBAINT99
.
          MOVE      SP70,CURRBANK      * clear current bank
          MOVE      ZERO,SECTOR
.
CBAINT10  CALL      RDTEXT1
          BRANCH    OVRCD,CBAINT99
.
          MATCH     "00",D80A          * check if header record
          IF        @EQUAL
            UNPACK    D80A,KEY2,KEY6,KEY3,CHKDIM6,CHKDIM2
            MOVE      SP70,FMCHBSB
            PACK      KEY15,CHKDIM6,DASH,CHKDIM2,SP70  * read cheque acct record
            CALL      RDFMCH1
            MATCH     KEY6,FMCHBSB     * make sure correct Bank/State/Branch
            IF        @EQUAL
              PACK      CURRBANK,CHKDIM6,DASH,CHKDIM2,SP70
            ELSE
              PACK      CURRBANK,SP70
              PRINT     "Invalid Bank Account ",KEY15
            ENDIF
          ENDIF
.
          MATCH     "01",D80A          * check if transaction record
          IF        @EQUAL
            UNPACK    D80A,KEY2,KEY1,TRANCODE,ANS,ANS,AMT14,KEY12,KEY30:
                      CDAY,CMON,CYEAR
            MOVE      CCC,CCENT
            PACK      PRESDATE,CCENT,CYEAR,CMON,CDAY,SP70
            REP       " 0",PRESDATE
            PACK      REFCODE,SP3,KEY12,SP70
            REP       " 0",AMT14       * format statement amount
            MOVE      ZERO,AMTSTAT
            MOVE      AMT14,AMTSTAT
            DIV       "100",AMTSTAT
.
            MATCH     "00",TRANCODE    * check for cheque transaction
            IF        @EQUAL
              STRIP     REFCODE        * right justify cheque number
              MOVE      ZERO,FORM15
              MOVE      REFCODE,FORM15
              MOVE      FORM15,REFCODE
.
              MATCH     CURRBANK,SP70
              IF        @EQUAL
                PRINT     "Current Bank Account Invalid for Cheque ",REFCODE:
                          " Amount $",AMTSTAT
              ELSE
                CALL      GBNK0000     * get Cheque/Receipt total
              ENDIF
            ENDIF
.
            MATCH     "50",TRANCODE    * check for deposit transaction
            IF        @EQUAL
              MATCH     CURRBANK,SP70
              IF        @EQUAL
                PRINT     "Current Bank Account Invalid for Deposit ",REFCODE:
                          " Amount $",AMTSTAT
              ELSE
                CALL      GBNK0000     * get Cheque/Receipt total
              ENDIF
            ENDIF
          ENDIF
          GOTO      CBAINT10
.
CBAINT99  RETURN
.------------------------------------------------------------
. Open Import File
.------------------------------------------------------------
OPEN0000  CLOSE     TEXTFILE           * open file
          STRIP     BANKPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEXTFILE,BANKPATH
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      OPEN9999 IF EQUAL
.
          BEEP
          CLEAR     DISPMSG
          APPEND    "File ",DISPMSG
          APPEND    BANKPATH,DISPMSG
          APPEND    " Missing - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,OVRCD
.
OPEN9999  RETURN
.----------------------------------------------------------------------
. Get Cheque/Receipt Details
.----------------------------------------------------------------------
GBNK0000
          MATCH     "00",TRANCODE      * F1 : 0=cheques, 1=receipts
          IF        @EQUAL
            MOVE      "0",F1
            MOVE      "Cheque  ",KEY8
          ELSE
            MOVE      "1",F1
            MOVE      "Receipt ",KEY8
          ENDIF
.
          MOVE      ZERO,AMTFILE
          MOVE      SP70,STATUS
          PACK      KEY36,CURRBANK,F1,REFCODE,SP70
          CALL      RSFMBN2
.
GBNK1000
          CALL      RKFMBN2
          BRANCH    OVRCD,GBNK2000
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,FMBNUNQ,SP70
          MATCH     KEY31,KEY36
          GOTO      GBNK2000 IF NOT EQUAL
.
          ADD       FMBNAMT,AMTFILE
          MOVE      FMBNPRE,STATUS
          GOTO      GBNK1000
.
GBNK2000
          MATCH     SP70,STATUS
          IF        @EQUAL
            PRINT     KEY8," ",REFCODE," Amount $",AMTSTAT," Does Not Exist"
            GOTO      GBNK9999
          ENDIF
.
          MATCH     "1",STATUS
          IF        @EQUAL
            PRINT     KEY8," ",REFCODE," Amount $",AMTSTAT:
                      " Already Presented ($",AMTFILE," Here)"
            GOTO      GBNK9999
          ENDIF
.
          MATCH     "2",STATUS
          IF        @EQUAL
            PRINT     KEY8," ",REFCODE," Amount $",AMTSTAT:
                      " Already Cancelled ($",AMTFILE," Here)"
            GOTO      GBNK9999
          ENDIF
.
          IF        AMTFILE <> AMTSTAT
            PRINT     KEY8," ",REFCODE," Amount $",AMTSTAT:
                      " Has Value $",AMTFILE," Here"
            GOTO      GBNK9999
          ENDIF
.
.---- update status on bank rec file ----
.
          PACK      KEY36,CURRBANK,F1,REFCODE,SP70
          CALL      RSFMBN2
.
GBNK3000
          CALL      RKFMBN2
          BRANCH    OVRCD,GBNK4000
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,FMBNUNQ,SP70
          MATCH     KEY31,KEY36
          GOTO      GBNK4000 IF NOT EQUAL
.
          MOVE      ONE,FMBNPRE
          PACK      FMBNPDT,PRESDATE,SP70
          CALL      UPFMBN2
          GOTO      GBNK3000
.
GBNK4000
.
GBNK9999  RETURN
.----------------------------------------------------------------------
. WBC Interface
.----------------------------------------------------------------------
WBCINT00  CALL      OPEN0000           * Open Import File
          BRANCH    OVRCD,WBCINT99
          CALL      MKTMP000           * Create Import Temporary File
          BRANCH    EXIT,WBCINT99
.
          MOVE      SP70,CURRBANK      * Clear Current Bank
          MOVE      ZERO,SECTOR        * Init Count
          MOVE      ZERO,HEADOK      * Init Header Flag
          MOVE      ZERO,FILEERR       * Error in Import File
.
WBCINT10  CALL      RDTEXT1
          BRANCH    OVRCD,WBCINT90
.
          MATCH     "##BRS##",D80A
          IF        @EQUAL
            CALL      WBCHED00            * Process Ac Header Records
            GOTO      WBCINT10
          ENDIF
.
          MATCH     "07",D80A
          IF        @EQUAL
            CALL      WBCEND00            * Process Ac Trailing Records
            GOTO      WBCINT10
          ENDIF
.
          COMPARE   ZERO,HEADOK         * Must have Valid Header Read
          GOTO      WBCINT10 IF EQUAL     * to Process Transaction
.
          MATCH     "05",D80A
          IF        @EQUAL
            CALL      WBCTRN00            * Process Transaction Record
            GOTO      WBCINT10
          ENDIF
.
          BEEP
          MOVE      "Unexpected Record Found - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
.
          GOTO      WBCINT10
.
WBCINT90  IF        FILEERR=1
            BEEP
            MOVE      "Errors Found in Import File Load Aborted - ",DISPMSG
            CALL      MESSAGE1
            GOTO      WBCINT99
          ENDIF
.
          CALL      PROC0000              * Process Temp File.
.
WBCINT99  CALL      RMTMP000              * Remove Temp File
.
          RETURN
.---------------------------------------------------------------------------
. WBC - Process Transaction Records   (05)
.---------------------------------------------------------------------------
WBCTRN00  UNPACK    D80A,WBCTTYP,WBCTAMT,WBCTSIG,APTMCOD:
                           APTMNAR,WBCTSER,WBCTFLG
          MOVE      WBCTSER,F7
          MOVE      F7,F9
          MOVE      F9,APTMSER
          MOVE      WBCTAMT,F15
          ASSIGN    F15/100,APTMAMT
          MATCH     "-",WBCTSIG
          IF        @EQUAL
            ADD       APTMAMT,DBTOTAMT
            ADD       ONE,DBTOTCNT
            MULT      SEQ,APTMAMT
          ELSE
            ADD       APTMAMT,CRTOTAMT
            ADD       ONE,CRTOTCNT
          ENDIF
.
          CALL      WRTM1000           * Write to Import Temp File
.
          RETURN
.
.---------------------------------------------------------------------------
. WBC - Process Header Records   (BRS,01,02,03)
.---------------------------------------------------------------------------
WBCHED00  MOVE      ZERO,DBTOTAMT
          MOVE      ZERO,DBTOTCNT
          MOVE      ZERO,CRTOTAMT
          MOVE      ZERO,CRTOTCNT
          MOVE      ZERO,HEADOK
          CALL      RDTEXT1
          BRANCH    OVRCD,WBCHED90
          MATCH     "01",D80A
          GOTO      WBCHED90 IF NOT EQUAL
          UNPACK    D80A,KEY7,WBCHYER,WBCHDAY
.
          CALL      RDTEXT1
          BRANCH    OVRCD,WBCHED90
          MATCH     "02",D80A
          GOTO      WBCHED90 IF NOT EQUAL
          UNPACK    D80A,KEY11,WBCHACC,KEY3,WBCHCLB,WBCHCLS
.
          CALL      RDTEXT1
          BRANCH    OVRCD,WBCHED90
          MATCH     "03",D80A
          GOTO      WBCHED90 IF NOT EQUAL
.
          DISPLAY   *P1:21,"Cheque Account : ",*V2LON,WBCHACC
          PACK      KEY15,SP70  * read cheque acct record
          CALL      RSFMCH1
WBCHED80  CALL      RKFMCH1
          BRANCH    OVRCD,WBCHED85
          MOVE      FMCHACCT,KEY9
          REP       "- ",KEY9
          SQUEEZE   KEY9
          MATCH     KEY9,WBCHACC
          GOTO      WBCHED80 IF NOT EQUAL
          MOVE      ONE,HEADOK
.
          MOVE      FMCHCHQ,APTMCHQ       * Setup for Temp File Write
          MOVE      WBCHCLB,F15
          ASSIGN    F15/100,APTMCLB
          MATCH     "-",WBCHCLS
          IF        @EQUAL
            MULT      SEQ,APTMCLB
          ENDIF
.
          MOVE      WBCHDAY,JWKDAY
          UNPACK    WBCHYER,JWKCC,JWKYER
          CALL      JULCON
          PACK      APTMDAT,CC,YY,MM,DD
          REP       " 0",APTMDAT
.
          GOTO      WBCHED99
.
WBCHED85  BEEP
          CLEAR     DISPMSG
          APPEND    "Cheque Account ",DISPMSG
          APPEND    WBCHACC,DISPMSG
          APPEND    " Not on File - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
          GOTO      WBCHED99
.
WBCHED90  BEEP
          MOVE      "Invalid Header Records Found - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
.
WBCHED99  RETURN
.
.---------------------------------------------------------------------------
. WBC - Process Trailer Records   (99, END)
.---------------------------------------------------------------------------
WBCEND00  UNPACK    D80A,KEY2,WBCEDBT,WBCEDBN:
                              WBCECRT,WBCECRN:
                              WBCETOT,WBCESIG,WBCENUM
          MOVE      WBCECRT,F15
          ASSIGN    F15/100,F12P2
          MOVE      WBCECRN,F5
          DISPLAY   *P1:16,"Credit File  Total : ",F12P2,"  Count : ",F5
          DISPLAY   *P1:17,"Credit Trans Total : ",CRTOTAMT,"  Count :",CRTOTCNT
.
          MOVE      WBCEDBT,F15
          ASSIGN    F15/100,F12P2
          MOVE      WBCEDBN,F5
          DISPLAY   *P1:18,"Debit File   Total : ",F12P2,"  Count : ",F5
          DISPLAY   *P1:19,"Debit Trans  Total : ",DBTOTAMT,"  Count :",DBTOTCNT
.
          COMPARE   ZERO,HEADOK            * Must have Valid Header Read
          GOTO      WBCEND10 IF EQUAL    * to have Process Transaction
.
          COMPARE   F12P2,DBTOTAMT
          GOTO      WBCEND70 IF NOT EQUAL
          COMPARE   F5,DBTOTCNT
          GOTO      WBCEND70 IF NOT EQUAL
.
          MOVE      WBCECRT,F15
          ASSIGN    F15/100,F12P2
          MOVE      WBCECRN,F5
          COMPARE   F12P2,CRTOTAMT
          GOTO      WBCEND70 IF NOT EQUAL
          COMPARE   F5,CRTOTCNT
          GOTO      WBCEND70 IF NOT EQUAL
.
WBCEND10  CALL      RDTEXT1
          BRANCH    OVRCD,WBCEND90
          MATCH     "99",D80A
          GOTO      WBCEND90 IF NOT EQUAL
.
          CALL      RDTEXT1
          BRANCH    OVRCD,WBCEND90
          MATCH     "##END##",D80A
          GOTO      WBCEND90 IF NOT EQUAL
.
          ASSIGN    CRTOTCNT+DBTOTCNT,F5
          IF        F5>0
            CALL      EXBNK000
          ENDIF
.
          MOVE      SP70,FMCHACCT
          MOVE      SP70,WBCHACC
          MOVE      ZERO,HEADOK
          GOTO      WBCEND99
.
WBCEND70  BEEP
          MOVE      "ERROR - Unbalanced Totals - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
          GOTO      WBCEND99
.
WBCEND90  BEEP
          MOVE      "Invalid Trailer Records Found - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
.
WBCEND99  RETURN
.----------------------------------------------------------------------------
. Extract Unpresented to a Temp File for the Cheque Account for Matching
.----------------------------------------------------------------------------
EXBNK000  PACK      KEY39,APTMCHQ,SP70
          CALL      RSTM2000
          CALL      RKTM2000
          BRANCH    OVRCD,EXBNK010
          MATCH     APTMCHQ,APT2CHQ       * If on File then Extract Already
          GOTO      EXBNK999 IF EQUAL     * Performed so just exit
.
EXBNK010  PACK      KEY24,APTMCHQ,SP70
          CALL      RSFMBN6
EXBNK100  CALL      RKFMBN6
          BRANCH    OVRCD,EXBNK900
          MATCH     APTMCHQ,FMBNBNK
          GOTO      EXBNK900 IF NOT EQUAL
          MATCH     "0",FMBNPRE
          GOTO      EXBNK900 IF NOT EQUAL
          MOVE      APTMCHQ,APT2CHQ
          MOVE      FMBNTYP,APT2TYP
          MOVE      FMBNREF,APT2REF
          MOVE      FMBNDAT,APT2DAT
          MOVE      FMBNAMT,APT2AMT
          PACK      KEY39,APT2CHQ,APT2TYP,APT2DAT,APT2REF
          CALL      RDTM2000
          IF        OVRCD=0
            ADD       FMBNAMT,APT2AMT
            CALL      UPTM2000
          ELSE
            CALL      WRTM2000
          ENDIF
          GOTO      EXBNK100
EXBNK900
EXBNK999  RETURN
.------------------------------------------------------------
. Read Import File
.------------------------------------------------------------
RDTEXT1   MOVE      ZERO,OVRCD
          READ      TEXTFILE,SEQ;D80A,D80B
          GOTO      OVERCOND IF OVER
          ADD       ONE,SECTOR
          DISPLAY   *P1:22,"Verifying Record : ",*V2LON,SECTOR,*EL;
          RETURN
.
.------------------------------------------------------------
. Create Temporary Files
.------------------------------------------------------------
MKTMP000  MOVE      "apstm1",KEY6
          PACK      FILENAME,KEY6,PORT
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APSTM1A1,FILENAME
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     APSTM1A1,DELETE
          ENDIF
          PACK      KEY80,ISBUILD,FILENAME,APTM1KEY,SP70
          EXECUTE   KEY80,TASKID
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APSTM1A1,FILENAME
          TRAPCLR   IO
          MOVE      ZERO,EXIT
          IF        OVRCD=1
            MOVE      "Can't Create Temp. File - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      ONE,EXIT
            GOTO      MKTMP999
          ENDIF
.
          MOVE      "apstm2",KEY6
          PACK      FILENAME,KEY6,PORT
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APSTM2A1,FILENAME
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     APSTM2A1,DELETE
          ENDIF
          PACK      KEY80,ISBUILD,FILENAME,APTM2KEY,SP70
          EXECUTE   KEY80,TASKID
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APSTM2A1,FILENAME
          TRAPCLR   IO
          MOVE      ZERO,EXIT
          IF        OVRCD=1
            MOVE      "Can't Create Temp. File - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      ONE,EXIT
            GOTO      MKTMP999
          ENDIF
.
          MOVE      ZERO,TRANCNT       * Unique Transaction Count
MKTMP999  RETURN
.------------------------------------------------------------
. Delete Temporary Import File
.------------------------------------------------------------
RMTMP000
          CLOSE     APSTM1A1,DELETE
          CLOSE     APSTM2A1,DELETE
.
RMTMP999  RETURN
.------------------------------------------------------------
. IO for Temp File
.------------------------------------------------------------
WRTM1000  MOVE      ZERO,APTMUPD
          MOVE      SP70,APTMERR
          ADD       ONE,TRANCNT
          MOVE      TRANCNT,KEY6
          MOVE      TRANCNT,APTMUNI
          WRITE     APSTM1A1,KEY6;APTMUNI,APTMCHQ,APTMDAT,APTMCLB:
                                  APTMAMT,APTMCOD,APTMNAR,APTMSER:
                                  APTMUPD,APTMERR,APTMSPA
          RETURN
.
RSTM1000  MOVE      ZERO,OVRCD
          READ      APSTM1A1,KEY6;;
          RETURN
.
RKTM1000  MOVE      ZERO,OVRCD
          READKS    APSTM1A1;APTMUNI,APTMCHQ,APTMDAT,APTMCLB:
                             APTMAMT,APTMCOD,APTMNAR,APTMSER:
                             APTMUPD,APTMERR,APTMSPA
          GOTO      OVERCOND IF OVER
          UNPACK    APTMNAR,APTMREM,KEY8,APTMLOG
          RETURN
.
UPTM1000  UPDATE    APSTM1A1;APTMUNI,APTMCHQ,APTMDAT,APTMCLB:
                             APTMAMT,APTMCOD,APTMNAR,APTMSER:
                             APTMUPD,APTMERR,APTMSPA
          RETURN
.
RSTM2000  MOVE      ZERO,OVRCD
          READ      APSTM2A1,KEY39;;
          RETURN
.
RKTM2000  MOVE      ZERO,OVRCD
          READKS    APSTM2A1;APT2CHQ,APT2TYP,APT2DAT,APT2REF,APT2AMT,APT2SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTM2000  MOVE      ZERO,OVRCD
          READ      APSTM2A1,KEY39;APT2CHQ,APT2TYP,APT2DAT,APT2REF,APT2AMT:
                                   APT2SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTM2000  UPDATE    APSTM2A1;APT2CHQ,APT2TYP,APT2DAT,APT2REF,APT2AMT:
                                   APT2SPA
          RETURN
.
WRTM2000  WRITE     APSTM2A1,KEY39;APT2CHQ,APT2TYP,APT2DAT,APT2REF,APT2AMT:
                                   APT2SPA
          RETURN
.
DETM2000  DELETE    APSTM2A1,KEY39
          RETURN
.------------------------------------------------------------
. Process Temp File for WBC Import
.------------------------------------------------------------
PROC0000  MOVE      "BJNL",KEY4
          PACK      GINFILE,KEY4,CMM,CDD
          REP       " 0",GINFILE
          PREP      IBAGINA1,GINFILE
.
          MOVE      SP70,LASTCHQ
          MOVE      SP70,LASTDAT
          MOVE      SP70,KEY6
          MOVE      ZERO,SECTOR
          DISPLAY   *P1:22,"Processing Record : ",*V2LON,SECTOR,*EL;
          CALL      RSTM1000
PROC1000  CALL      RKTM1000
          BRANCH    OVRCD,PROC9000
.
          ADD       ONE,SECTOR
          DISPLAY   *P21:22,*V2LON,SECTOR,*EL;
.
          MOVE      ZERO,APTMUPD
          MOVE      SP70,APTMERR
          IF        APTMAMT>0
            MOVE      ONE,TRANTYPE         * Deposit
          ELSE
            MOVE      ZERO,TRANTYPE        * Cheque
          ENDIF
          CALL      MATCH000               * Try to Match with Cheque or Dep.
          BRANCH    EXIT,PROC1100
          CALL      PRES0000               * Match Found so Present
          MOVE      ONE,APTMUPD
          CLEAR     APTMERR
          APPEND    "Presented Ref: ",APTMERR
          APPEND    APT2REF,APTMERR
          APPEND    " Date: ",APTMERR
          UNPACK    APT2DAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          APPEND    CPCDATE,APTMERR
          RESET     APTMERR
          GOTO      PROC1900
.
. Can't Match so Try to Generate a Journal
.
PROC1100  CALL      JGEN0000               * Generate Journal
.
PROC1900  COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          MATCH     APTMCHQ,LASTCHQ
          CALL      HEAD0000 IF NOT EQUAL
          MATCH     APTMDAT,LASTDAT
          CALL      HEAD0000 IF NOT EQUAL
          UNPACK    APTMNAR,APTMREM,KEY8,APTMLOG
          PRINT     APTMCOD,SP3,APTMREM," - ",KEY8," - ",APTMLOG,SP1,APTMSER:
                    SP1,APTMAMT,SP5,APTMERR
          ADD       ONE,CLNO
.
          GOTO      PROC1000
.
PROC9000  CALL      UND132
          PRINT     *30,"Number of Journals Line Generated : ",GENCOUNT
          PRINT     *30,"Journal Interface File Name       : ",GINFILE,".txt"
          CALL      UND132
          PRINT     *40,"****  End of Report  ****"
.
PROC9999  RETURN
.
HEAD0000  CALL      HEAD132
          UNPACK    APTMDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          IF        INPUTFMT <> 4
            PRINT     "Cheque Account  : ",APTMCHQ:
                      "      Statement Date  : ",CPCDATE:
                      "      Closing Balance : ",APTMCLB
          ELSE
            PRINT     "Cheque Account  : ",APTMCHQ:
                      "      Statement Date  : ",CPCDATE
          ENDIF
          MOVE      APTMCHQ,LASTCHQ
          MOVE      APTMDAT,LASTDAT
          CALL      UND132
          PRINT     "Tran  Narrative                                        ":
                    "Serial           Amount     Action/Error"
          PRINT     "      Remitter         -          - Lodgement Ref."
          CALL      UND132
          ADD       "3",CLNO
          RETURN
.------------------------------------------------------------
. Find Matching Receipt or Cheque
.------------------------------------------------------------
MATCH000  PACK      KEY39,APTMCHQ,TRANTYPE,SP70
          CALL      RSTM2000
MATCH100  CALL      RKTM2000               * Unpresented Details Temp File
          BRANCH    OVRCD,MATCH800
          MATCH     APTMCHQ,APT2CHQ        * Account
          GOTO      MATCH800 IF NOT EQUAL
          MATCH     TRANTYPE,APT2TYP       * Cheque/Receipt
          GOTO      MATCH800 IF NOT EQUAL
          MATCH     "0",TRANTYPE
          IF        @EQUAL
            MULT      SEQ,APT2AMT          * Cheques Negative
          ENDIF
          COMPARE   APT2AMT,APTMAMT        * Amount
          GOTO      MATCH100 IF NOT EQUAL
          MATCH     APT2DAT,APTMDAT        * Date
          GOTO      MATCH100 IF LESS
          MATCH     "1",TRANTYPE           * Can't Match Receipt Reference
          GOTO      MATCH110 IF EQUAL
.
          MOVE      APTMSER,F9
          MOVE      F9,F15
          MOVE      F15,D15
          MATCH     D15,APT2REF            * Match Cheque Number
          GOTO      MATCH100 IF NOT EQUAL
.
MATCH110  MOVE      ZERO,EXIT
          GOTO      MATCH999
.
MATCH800  MATCH     "1",TRANTYPE
          IF        @EQUAL
            MOVE      "ERROR: Deposit Not Matched",APTMERR
          ELSE
            MOVE      "ERROR: Withdrawal Not Matched",APTMERR
          ENDIF
          MOVE      ONE,EXIT
          GOTO      MATCH999
.
MATCH999  RETURN
.------------------------------------------------------------
. Update Bank Rec with Presented
.------------------------------------------------------------
PRES0000  PACK      KEY44,APT2CHQ,APT2TYP,APT2DAT,APT2REF,SP70
          CALL      RSFMBN3
PRES1000  CALL      RKFMBN3
          BRANCH    OVRCD,PRES9000
          MATCH     APT2CHQ,FMBNBNK
          GOTO      PRES9000 IF NOT EQUAL
          MATCH     APT2TYP,FMBNTYP
          GOTO      PRES9000 IF NOT EQUAL
          MATCH     APT2DAT,FMBNDAT
          GOTO      PRES9000 IF NOT EQUAL
          MATCH     APT2REF,FMBNREF
          GOTO      PRES9000 IF NOT EQUAL
          MOVE      "1",FMBNPRE
          PACK      FMBNPDT,APTMDAT,SP70
          CALL      UPFMBN3
          GOTO      PRES1000
.
PRES9000  PACK      KEY39,APT2CHQ,APT2TYP,APT2DAT,APT2REF,SP70
          CALL      DETM2000
PRES9999  RETURN
.------------------------------------------------------------
. Generate a Journal for Unmatched Deposits/Cheques
.------------------------------------------------------------
JGEN0000  PACK      KEY55,APTMCHQ,APTMCOD,APTMREM,APTMLOG,SP70
          CALL      RSFMBR2
JGEN1000  CALL      RKFMBR2
          BRANCH    OVRCD,JGEN1900
          MATCH     APTMCOD,FMBRBSC         * Code
          GOTO      JGEN1900 IF NOT EQUAL
          MATCH     APTMREM,FMBRNOR         * Name of Remitter
          GOTO      JGEN1900 IF NOT EQUAL
          MATCH     APTMLOG,FMBRLOG         * Lodgement Reference
          GOTO      JGEN1900 IF NOT EQUAL
          GOTO      JGEN5000                * Found Rule
.
JGEN1900  PACK      KEY55,APTMCHQ,APTMCOD,APTMREM,SP70
          CALL      RSFMBR2
JGEN2000  CALL      RKFMBR2
          BRANCH    OVRCD,JGEN2900
          MATCH     APTMCOD,FMBRBSC         * Code
          GOTO      JGEN2900 IF NOT EQUAL
          MATCH     APTMREM,FMBRNOR         * Name of Remitter
          GOTO      JGEN2900 IF NOT EQUAL
          MATCH     SP70,FMBRLOG            * Lodgement Reference
          GOTO      JGEN2900 IF NOT EQUAL
          GOTO      JGEN5000                * Found Rule
.
JGEN2900  PACK      KEY55,APTMCHQ,APTMCOD,SP70
          CALL      RSFMBR2
JGEN3000  CALL      RKFMBR2
          BRANCH    OVRCD,JGEN3900
          MATCH     APTMCOD,FMBRBSC         * Code
          GOTO      JGEN3900 IF NOT EQUAL
          MATCH     SP70,FMBRNOR            * Name of Remitter
          GOTO      JGEN3900 IF NOT EQUAL
          MATCH     SP70,FMBRLOG            * Lodgement Reference
          GOTO      JGEN3900 IF NOT EQUAL
          GOTO      JGEN5000                * Found Rule
.
JGEN3900  GOTO      JGEN9999
.
. Found a Matching Rule for Transaction so Write to Interface File
.-------------------------------------------------------------------
JGEN5000  MOVE      FMBRLED,IBGILEDG
          MOVE      FMBRDAC,IBGIACCT
          MOVE      APTMDAT,IBGIDATE
          MOVE      SP70,IBGISIGN
          MOVE      APTMAMT,IBGIVALU
          MOVE      "-",IBGISIGN       * Income
          IF        APTMAMT<0
            MULT      SEQ,IBGIVALU     * Expense (Cheque)
            MOVE      " ",IBGISIGN
          ENDIF
          MOVE      APTMREM,KEY16
          MOVE      APTMLOG,KEY18
          STRIP     KEY16
          STRIP     KEY18
          PACK      IBGIDESC,APTMCOD,HYPEN,KEY16,HYPEN,KEY18
          MOVE      IMPFILE,IBGIREF
          MOVE      FMBRDIS,IBGIDISS
          MOVE      FMBRRES,IBGIRESP
          MOVE      FMBRCAC,IBGICRAC
          MOVE      FMBRCAC,IBGICRAA
          MOVE      SP3,IBGIBASC
          CALL      WRIBGI1
          ADD       ONE,GENCOUNT
          CLEAR     APTMERR
          APPEND    "Journal Rule ID ",APTMERR
          APPEND    FMBRRID,APTMERR
          APPEND    SP1,APTMERR
          APPEND    FMBRDES,APTMERR
          RESET     APTMERR
.
JGEN9999  RETURN
.----------------------------------------------------------------------
. CBA Diamond Cash Interface
.----------------------------------------------------------------------
CBA2IN00  CALL      OPEN0000           * Open Import File
          BRANCH    OVRCD,CBA2IN99
          CALL      MKTMP000           * Create Import Temporary File
          BRANCH    EXIT,CBA2IN99
.
          MOVE      SP70,CURRBANK      * Clear Current Bank
          MOVE      ZERO,SECTOR        * Init Count
          MOVE      ZERO,HEADOK      * Init Header Flag
          MOVE      ZERO,FILEERR       * Error in Import File
.
CBA2IN10  CALL      RDTEXT1
          BRANCH    OVRCD,CBA2IN90
.
          MATCH     "0",D80A
          IF        @EQUAL
            CALL      CBA2HD00            * Process Ac Header Records
            GOTO      CBA2IN10
          ENDIF
.
          MATCH     "6",D80A
          IF        @EQUAL
            CALL      CBA2ED00            * Process Ac Trailing Records
            GOTO      CBA2IN10
          ENDIF
.
          COMPARE   ZERO,HEADOK         * Must have Valid Header Read
          GOTO      CBA2IN10 IF EQUAL     * to Process Transaction
.
          MATCH     "4",D80A
          IF        @EQUAL
            CALL      CBA2TR00            * Process Transaction Record
            GOTO      CBA2IN10
          ENDIF
.
          MATCH     "5",D80A
          IF        @EQUAL
            CALL      CBA2TR00            * Process Transaction Record
            GOTO      CBA2IN10
          ENDIF
.
          BEEP
          MOVE      "Unexpected Record Found - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
.
          GOTO      CBA2IN10
.
CBA2IN90  IF        FILEERR=1
            BEEP
            MOVE      "Errors Found in Import File Load Aborted - ",DISPMSG
            CALL      MESSAGE1
            GOTO      CBA2IN99
          ENDIF
.
          CALL      PROC0000              * Process Temp File.
.
CBA2IN99  CALL      RMTMP000              * Remove Temp File
.
          RETURN
.---------------------------------------------------------------------------
. CBA2 - Process Transaction Records   (4 & 5)
.---------------------------------------------------------------------------
CBA2TR00  UNPACK    D80A,CBA2TYP,CBA2BRN,CBA2ACT,CBA2AGT,CBA2TRN:
                         CBA2AMT,CBA2NUM,CBA2NAR
.
          MOVE      CBA2NUM,F9
          MOVE      F9,APTMSER
          PACK      APTMNAR,CBA2NAR,CBA2AGT,SP70
          MOVE      CBA2TRN,APTMCOD
          MOVE      CBA2AMT,F15
          ASSIGN    F15/100,APTMAMT
          MATCH     "4",CBA2TYP
          IF        @EQUAL
            ADD       APTMAMT,DBTOTAMT
            ADD       ONE,DBTOTCNT
          ELSE
            ADD       APTMAMT,CRTOTAMT
            ADD       ONE,CRTOTCNT
            MULT      SEQ,APTMAMT
          ENDIF
.
          CALL      WRTM1000           * Write to Import Temp File
.
          RETURN
.
.---------------------------------------------------------------------------
. CBA2 - Process Header Records   (0,1,2,3)
.---------------------------------------------------------------------------
CBA2HD00  MOVE      ZERO,DBTOTAMT
          MOVE      ZERO,DBTOTCNT
          MOVE      ZERO,CRTOTAMT
          MOVE      ZERO,CRTOTCNT
          MOVE      ZERO,HEADOK
          CALL      RDTEXT1
          BRANCH    OVRCD,WBCHED90
          MATCH     "1",D80A
          GOTO      CBA2HD90 IF NOT EQUAL
.
          CALL      RDTEXT1
          BRANCH    OVRCD,CBA2HD90
          MATCH     "8",D80A      * Nothing for the Date
          GOTO      CBA2HD99 IF EQUAL
          MATCH     "2",D80A
          GOTO      CBA2HD90 IF NOT EQUAL
.
          UNPACK    D80A,KEY5,CBA2ACC,CDAY,CMON,CYEAR
          CALL      IBACLOCK
          PACK      APTMDAT,CCC,CYEAR,CMON,CDAY
          REP       " 0",APTMDAT
.
          CALL      RDTEXT1
          BRANCH    OVRCD,CBA2HD90
          MATCH     "3",D80A
          GOTO      CBA2HD90 IF NOT EQUAL
          UNPACK    D80A,KEY5,CBA2ACC,CBA2CLB,CBA2SIG
          MOVE      CBA2CLB,F13
          ASSIGN    F13/100,APTMCLB
          MATCH     "-",CBA2SIG
          IF        @EQUAL
            MULT      SEQ,APTMCLB
          ENDIF
.
          DISPLAY   *P1:21,"Cheque Account : ",*V2LON,CBA2ACC
          PACK      KEY15,SP70  * read cheque acct record
          CALL      RSFMCH1
CBA2HD80  CALL      RKFMCH1
          BRANCH    OVRCD,CBA2HD85
          MOVE      FMCHACCT,KEY9
          REP       "- ",KEY9
          SQUEEZE   KEY9
          MATCH     KEY9,CBA2ACC
          GOTO      CBA2HD80 IF NOT EQUAL
.
          MOVE      ONE,HEADOK
.
          MOVE      FMCHCHQ,APTMCHQ       * Setup for Temp File Write
.
          GOTO      CBA2HD99
.
CBA2HD85  BEEP
          CLEAR     DISPMSG
          APPEND    "Cheque Account ",DISPMSG
          APPEND    WBCHACC,DISPMSG
          APPEND    " Not on File - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
          GOTO      CBA2HD99
.
CBA2HD90  BEEP
          MOVE      "Invalid Header Records Found - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
.
CBA2HD99  RETURN
.---------------------------------------------------------------------------
. Process Trailer Records   (6,8)
.---------------------------------------------------------------------------
CBA2ED00  UNPACK    D80A,KEY13,CBA2DBT,CBA2CRT:
                               CBA2DBN,CBA2CRN
          MOVE      CBA2CRT,F13
          ASSIGN    F13/100,F12P2
          MOVE      CBA2CRN,F5
          DISPLAY   *P1:16,"Credit File  Total : ",F12P2,"  Count : ",F5
          DISPLAY   *P1:17,"Credit Trans Total : ",CRTOTAMT,"  Count :",CRTOTCNT
.
          MOVE      CBA2DBT,F13
          ASSIGN    F13/100,F12P2
          MOVE      CBA2DBN,F5
          DISPLAY   *P1:18,"Debit File   Total : ",F12P2,"  Count : ",F5
          DISPLAY   *P1:19,"Debit Trans  Total : ",DBTOTAMT,"  Count :",DBTOTCNT
.
          COMPARE   ZERO,HEADOK            * Must have Valid Header Read
          GOTO      CBA2ED10 IF EQUAL    * to have Process Transaction
.
          COMPARE   F12P2,DBTOTAMT
          GOTO      CBA2ED70 IF NOT EQUAL
          COMPARE   F5,DBTOTCNT
          GOTO      CBA2ED70 IF NOT EQUAL
.
          MOVE      CBA2CRT,F13
          ASSIGN    F13/100,F12P2
          MOVE      CBA2CRN,F5
          COMPARE   F12P2,CRTOTAMT
          GOTO      CBA2ED70 IF NOT EQUAL
          COMPARE   F5,CRTOTCNT
          GOTO      CBA2ED70 IF NOT EQUAL
.
CBA2ED10  CALL      RDTEXT1
          BRANCH    OVRCD,CBA2ED90
          MATCH     "8",D80A
          GOTO      CBA2ED90 IF NOT EQUAL
.
          ASSIGN    CRTOTCNT+DBTOTCNT,F5
          IF        F5>0
            CALL      EXBNK000
          ENDIF
.
          MOVE      SP70,FMCHACCT
          MOVE      SP70,WBCHACC
          MOVE      ZERO,HEADOK
          GOTO      CBA2ED99
.
CBA2ED70  BEEP
          MOVE      "ERROR - Unbalanced Totals - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
          GOTO      CBA2ED99
.
CBA2ED90  BEEP
          MOVE      "Invalid Trailer Records Found - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
.
CBA2ED99  RETURN
.
.----------------------------------------------------------------------
. NAB Interface
.----------------------------------------------------------------------
NABINT00  CALL      OPEN0000           * Open Import File
          BRANCH    OVRCD,NABINT99
          CALL      MKTMP000           * Create Import Temporary File
          BRANCH    EXIT,NABINT99
.
          MOVE      ZERO,DBTOTAMT      * init DR total
          MOVE      ZERO,DBTOTCNT      * init DR count
          MOVE      ZERO,CRTOTAMT      * init CR total
          MOVE      ZERO,CRTOTCNT      * init CR count
          MOVE      SP70,CURRBANK      * Clear Current Bank
          MOVE      ZERO,SECTOR        * Init Count
          MOVE      ZERO,HEADOK        * Init Header Flag
          MOVE      ZERO,FILEERR       * Error in Import File
          CALL      LDTRCD00           * load CR transaction codes
          CALL      KSTDTE00           * enter statement date for NAB
.
NABINT10  READ      TEXTFILE,SEQ;NABBNKID,NABCURCD,NABACNTN,NABTRDTE,NABTRCOD:
                                 NABTRDSC,NABREFNO,NABNARRT,NABTRAMT
          GOTO      NABINT90 IF OVER
          ADD       ONE,SECTOR
          DISPLAY   *P1:22,"Verifying Record : ",*V2LON,SECTOR,*EL;
.
          CALL      NABHED00           * Process Header Fields
          COMPARE   ZERO,HEADOK        * Must have Valid Header Read
          GOTO      NABINT10 IF EQUAL  * to Process Transaction
.
          CALL      EXBNK000           * Extract Unpresented Cheques to tmpfile
          CALL      NABTRN00           * Process Transaction Fields
          CALL      WRTM1000           * Write to Import Temp File
          GOTO      NABINT10
.
NABINT90  IF        FILEERR=1
            BEEP
            MOVE      "Errors Found in Import File Load Aborted - ",DISPMSG
            CALL      MESSAGE1
            GOTO      NABINT99
          ENDIF
.
          CALL      PROC0000           * Process Temp File.
.
NABINT99  CALL      RMTMP000           * Remove Temp File
.
          RETURN
.
.---------------------------------------------------------------------------
. NAB - Process Header Fields
.---------------------------------------------------------------------------
NABHED00  MOVE      ZERO,HEADOK
.
          DISPLAY   *P1:21,"Cheque Account : ",*V2LON,NABACNTN
          PACK      KEY15,SP70  * read cheque acct record
          CALL      RSFMCH1
NABHED80  CALL      RKFMCH1
          BRANCH    OVRCD,NABHED85
          MOVE      FMCHACCT,KEY9
          REP       "- ",KEY9
          SQUEEZE   KEY9
          MATCH     KEY9,NABACNTN
          GOTO      NABHED80 IF NOT EQUAL
          MOVE      ONE,HEADOK
.
          MOVE      FMCHCHQ,APTMCHQ       * Setup for Temp File Write
.>>>>     MOVE      WBCHCLB,F15
.>>>>     ASSIGN    F15/100,APTMCLB
.>>>>     MATCH     "-",WBCHCLS
.>>>>     IF        @EQUAL
.>>>>       MULT      SEQ,APTMCLB
.>>>>     ENDIF
.
          GOTO      NABHED99
.
NABHED85  BEEP
          CLEAR     DISPMSG
          APPEND    "Cheque Account ",DISPMSG
          APPEND    NABACNTN,DISPMSG
          APPEND    " Not on File - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,FILEERR
.
NABHED99  RETURN
.
.---------------------------------------------------------------------------
. NAB - Process Transaction Fields
.---------------------------------------------------------------------------
NABTRN00  MOVE      NABTRCOD,APTMCOD        * Transaction code
.
          UNPACK    STATDATE,CCENT,CYEAR,CMON,CDAY
          PACK      APTMDAT,CCENT,CYEAR,CMON,CDAY       * Statement date
          REP       " 0",APTMDAT
.
          PACK      NABREFNO,NABREFNO,SP70
          MATCH     SP70,NABREFNO
          IF        @EQUAL
            MOVE      SP70,APTMSER
          ELSE
            MOVE      NABREFNO,F9
            MOVE      F9,APTMSER            * Reference / cheque number
          ENDIF
.
          MOVE      NABNARRT,APTMNAR        * Narrative
.
          MOVE      NABTRAMT,F12P2
          MOVE      F12P2,APTMAMT           * Transaction amount
          MOVE      ZERO,COUNT
NABTRN50  ADD       ONE,COUNT
          COMPARE   TEN8,COUNT
          GOTO      NABTRN80 IF EQUAL
.
          MATCH     TRNCODES[COUNT],NABTRCOD     * check for CR transaction
          GOTO      NABTRN50 IF NOT EQUAL
.
          ADD       APTMAMT,CRTOTAMT        * transaction is CR
          ADD       ONE,CRTOTCNT
          GOTO      NABTRN99
.
NABTRN80  ADD       APTMAMT,DBTOTAMT        * transaction is DR
          ADD       ONE,DBTOTCNT
          MULT      SEQ,APTMAMT
NABTRN99  RETURN
.
.---------------------------------------------------------------------------
. NAB - Load CR transaction codes
.---------------------------------------------------------------------------
LDTRCD00  MOVE      "175",TRNCODES[1]
          MOVE      "195",TRNCODES[2]
          MOVE      "238",TRNCODES[3]
          MOVE      "252",TRNCODES[4]
          MOVE      "357",TRNCODES[5]
          MOVE      "399",TRNCODES[6]
          MOVE      "905",TRNCODES[7]
          MOVE      "906",TRNCODES[8]
          MOVE      "910",TRNCODES[9]
          MOVE      "911",TRNCODES[10]
          MOVE      "915",TRNCODES[11]
          MOVE      "920",TRNCODES[12]
          MOVE      "925",TRNCODES[13]
          MOVE      "930",TRNCODES[14]
          MOVE      "935",TRNCODES[15]
          MOVE      "936",TRNCODES[16]
          MOVE      "938",TRNCODES[17]
LDTRCD99  RETURN
.
.------------------------------------------------------------
. Statement Date - NAB
.------------------------------------------------------------
KSTDTE00  MOVE      "33",CCOL
          MOVE      "6",CVERT
          DISPLAY   *PCCOL:CVERT,"Statement Date : ";
.
          MOVE      "50",CCOL
          MOVE      ONE,CCANLDTE            * Blank cancel default
          MOVE      ZERO,CHIGHLT            * Use highlight
          MOVE      CCC,CCENT
          UNPACK    SP6,CYEAR,CMON,CDAY     * No defaults
KSTDTE10  CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,KSTDTE10          * Nothing entered
          BRANCH    CQUEST,KSTDTE10
.
          PACK      STATDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",STATDATE
.
          CALL      CONTQST            * ok to continue?
          BRANCH    CEXIT,KSTDTE99,KSTDTE00,KSTDTE00
.
KSTDTE99  RETURN
.
.----------------------------------------------------------------------
. Keyin File Name
. Note : EXIT (0=Ok, 2=Exitchar)
.----------------------------------------------------------------------
KFILE000  KEYIN     *PCCOL:CVERT,*V2LON,*RV,BANKPATH
          PACK      BANKPATH,BANKPATH,SP70
          MATCH     SP70,BANKPATH
          GOTO      KFILE950 IF EQUAL
          MATCH     EXITCHAR,BANKPATH
          GOTO      KFILE950 IF EQUAL
.
KFILE100  MOVE      BANKPATH,IMPFILE
          STRIP     BANKPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEXTFILE,BANKPATH
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
          REP       "./",BANKPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEXTFILE,BANKPATH
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2
KFILE500  MOVE      "Y",ANS
          KEYIN     *P1:24,*EL,"Execute PC Transfer ":
                    "(Y/N) ? ",*V2LON,*RV,ANS
          CALL      MESSAGE3
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      KFILE000 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      KFILE500 IF NOT EQUAL
          REP       "/.",BANKPATH
          CLEAR     KEY80
          APPEND    "ibaaps79.us1 ",KEY80
          APPEND    BANKPATH,KEY80
          RESET     KEY80
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          EXECUTE   KEY80,TASKID
          CALL      PUTSCR00
.
KFILE600  MOVE      BANKPATH,OLDPATH
          CALL      DEFT0000
          PACK      BANKPATH,DEFPATH,SLASH,BANKPATH,SP30
          STRIP     BANKPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEXTFILE,BANKPATH
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
          REP       "./",BANKPATH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEXTFILE,BANKPATH
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
.try lower case
          REP       LOWUP,OLDPATH
          PACK      BANKPATH,DEFPATH,SLASH,OLDPATH,SP30
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEXTFILE,BANKPATH
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
          MOVE      SP70,BANKPATH
          MOVE      OLDPATH,BANKPATH
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          DISPLAY   *P1:24,*B,*EL,"File Does Not Exist.";
          CALL      HITENTER
          CALL      MESSAGE3
          GOTO      KFILE000
.
KFILE900  MOVE      ZERO,EXIT          * return to prompt
          GOTO      KFILE9999
.
KFILE950  MOVE      TWO,EXIT           * exit
.
KFILE999  RETURN
.
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "pwd > temp.txt",TASKID.
          PACK      DEFPATH,SP30,SP30
          CLOSE     TEMPFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      TEMPFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          CLOSE     TEMPFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding current directory.";
          CALL      HITENTER
          CLOSE     TEMPFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
.
.----------------------------------------------------------------------
. Enter Statement Import Format
.----------------------------------------------------------------------
KSFMT000   CALL      DSFMT000
           MOVE      ZERO,INPUTFMT
KSFMT001   KEYIN     *PCCOL:CVERT,*V2LON,*RV,INPUTFMT
           COMPARE   ZERO,INPUTFMT
           GOTO      KSFMT900 IF EQUAL
           BRANCH    INPUTFMT,KSFMT010,KSFMT020,KSFMT030,KSFMT040
           BEEP
           GOTO      KSFMT001
.
KSFMT010   MOVE      "CBA Micro Treasurer",INPFDES
           GOTO      KSFMT999
.
KSFMT020   MOVE      "Westpac Deskbank",INPFDES
           GOTO      KSFMT999
.
KSFMT030   MOVE      "CBA Diamond Cash",INPFDES
           GOTO      KSFMT999
.
KSFMT040   MOVE      "NAB",INPFDES
           GOTO      KSFMT999
.
KSFMT900   MOVE      "N/A",INPFDES
           GOTO      KSFMT999
.
KSFMT999   CALL      PUTSCR00
           RETURN
.------------------------------------------------------------
. Display Options
.------------------------------------------------------------
DSFMT000  MOVE      "13",HTOP
          MOVE      "40",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
.
          BOXCLR    HLEF,HTOP,HRIG,HBOT
          BOX       16,HLEF,HTOP,HRIG,HBOT
          DISPLAY   *P45:14,*V2LON,*ULON,"Statement Import Format",*HOFF:
                    *P42:15,*V2LON,"0. ",*HOFF,"N/A":
                    *P42:16,*V2LON,"1. ",*HOFF,"CBA Micro Treasurer":
                    *P42:17,*V2LON,"2. ",*HOFF,"Westpac Deskbank":
                    *P42:18,*V2LON,"3. ",*HOFF,"CBA Diamond Cash ":
                    *P42:19,*V2LON,"4. ",*HOFF,"NAB Statement "
DSFMT999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       FMSBNKIO/INC
          INC       FMSBRIIO/INC
          INC       FMSCHQIO/INC
          INC       IBAGINIO/INC
.
          INC       STDGENCD
.
