.*****************************************************************************
.*    Include      : MOVMDREC                                                *
.*    Description  : Move a Medical record                                   *
.*                                                                           *
.*    Author       : ROD    (10/09/92)  Extracted from IBAMRT13              *
.*                                                                           *
.*    Parameters   : MOVEDAT   - movement default date (blank = current date)*
.*                   MOVETIM   - movement default time (blank = current time)*
.*                                                                           *
.*    Modifications:                                                         *
.*                                                                           *
.*                  This module appears to be OBSOLETE                       *
.*                                                                           *
.*        V10.02.06 28/07/2011  Ebon Clements     CAR 243582                 *
.*                  Added using tracking receipt functionality               *
.*        V10.02.05 08/07/2011  Mike Laming      CAR 240724                  *
.*                  Mods to MRT Tables for Hospital Id. - WA Health changes  *
.*        V9.08.01  25/01/2007  Peter Vela       CAR 127930                  *
.*                  Added MRMADTCR MRMATMCR before WRTMAS1                   *
.*        V9.02.04  30/04/2002  Pat Dirito                                   *
.*                  Mods to use MRMOINDC 0=Home not 1 & MRMOTYPE             *
.*        V9.02.03  18/01/2002  Tonii  SRF 13881 & 14184                     *
.*                  Mods to default to current date and time when moving a   *
.*                  record                                                   *
.*                  Changed condition of match to allow movement and creation*
.*                  of medical record at the same time                       *
.*                  Fixed display of "Location" is reservation summary screen*
.*        V9.02.02  29/11/2001  Greg Horvat      SRF 11738                   *
.*                  Changed to use UPMRMAS2 in WRIT0000                      *
.*        V9.02.01  06/10/2001  J.Tan           srf 12301                    *
.*                  make sure file MRTMASA2 is open in WRIT0000              *
.*                  (related to previous change)                             *
.*        V5.09.B03 03.01.2001 Bronko Sosic                                  *
.*                  Added update for MRTMASFD when a write is done on        *
.*                  MRTHISFD due to FD changes                               *
.*        V5.09.B02 29/12/2000  Greg Horvat      SRF 8040                    *
.*                  Changed to read all the parameters required before doing *
.*                  any processing                                           *
.*        V5.09.B01 20/12/2000  Bronko Sosic                                 *
.*                  Replaced WRHIST1 with new WRMRHIS1                       *
.*                  Replaced ULMRHIS1 with new UUMRHIS1                      *
.*        V5.07.01  04/12/1998  Jim Stathopoulos     SRF 629244              *
.*                  Added MRCNIN1A,MRCNIN1B,MRCNIN1C,MRCNIN1D,MRCNIN1E       *
.*        V5.07.00  12/10/1998  Davin                                        *
.*                  507 changes                                              *
.*        V5.05.01  02/01/1998  Nick   SRF 643895                            *
.*                  Mods to ensure "Correct Record?" prompt before keyin of  *
.*                  movement details, regardless of # of volumes found       *
.*                   V5.01.01  27/11/92  DIG                                 *
.*                             Changed so that the Requested By field uses   *
.*                             the MRCNREQB default.                         *
.*                   V5.01.02  30/12/92  DIG                                 *
.*                             Changed so that the record status is          *
.*                             displayed next to its identification.         *
.*                   V5.01.03  23/06/1993  Graeme Williams                   *
.*                             Fixed error reported by Justin in the U.K.    *
.*                             where it tested OVRCD before a read, not after*
.*        V5.02.01  12/12/1994  Graeme Williams                              *
.*                  Make sure the REAS0000 routine sets EXIT when it returns *
.*        V5.02.02  28/04/1995  Paul Howells     SRF 134942                  *
.*                  Allow a default date & time other than current.          *
.*        V5.03.01  09/02/95 J.Tan    SRF 613962                        *
.*                  Mods to recalculate age                             *
.*****************************************************************************
.
MOVMDREC  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,SIXTY;*81,MRCNTLOC,*114,MRCNFUTD,*115,HTNUMDAY:
                                   *119,MRCNOIDM,*121,MRCNREQB
          READ      CONTROLF,NINTY7;*1,MRCNIN1A,*21,MRCNIN1B,*41,MRCNIN1C:
                                    *61,MRCNIN1D,*81,MRCNIN1E
.
          CALL      SCRM0000           * Screen Layouts
.
          CALL      DATA0000           * Display data for the U/R Number
          BRANCH    EXIT,MVREC999      * Record locked
.
.          COMPARE   ZERO,FLAG
.          GOTO      MVREC100 IF EQUAL  * One Vol. only so no prompt
.
          CALL      CORR0000           * Correct Record (Y/N/C) ?
          BRANCH    EXIT,MVREC999
.
MVREC100  CALL      INPT0000           * Input Destination Data
          BRANCH    EXIT,MVREC999      * Exit from Input Routine
.
MVREC200  CALL      SEL0000            * Select Item to change
          BRANCH    EXIT,MVREC999        * 1=Cancel
          MOVE      ZERO,POSTFLAG
.
          IF        FLAG=0            
             IF        EXIT=0          
                MOVE      ONE,POSTFLAG * Single Rec. was posted
             ENDIF
          ENDIF
.
          CALL      RESS0000           * Display any Reservations on file
          BRANCH    EXIT,MVREC999
.
          CALL      WRIT0000           * Write data to files
          BRANCH    EXIT,MVREC200
.
MVREC999  CALL      UHIS0000           * unlock History file rec's on cancel
          RETURN
+
.********************************************************************** 
.*                             SCRM0000                               *
.*                           Screen Layout                            *
.**********************************************************************
SCRM0000  DISPLAY   *P1:3,*EF,*P1:4,"Record Identification : ":
                    *P1:6,"Name                  : ":
                    *P1:7,"D.O.B.                : ":
                    *P40:7,"Age : "
.
          MATCH     "IBAPAT36",PRGID
          IF        @EQUAL
            DISPLAY   *P1:8,"Transferring to Ward  :"
          ENDIF
.
          DISPLAY   *P1:9,*ULON,*V2LON,"Current Details",*HOFF:
                    *P1:10,"Current Location      : ":
                    *P1:11,"Date                  : ":
                    *P1:12,"Time                  : ":
                    *P1:14,*ULON,*V2LON,"Destination Details",*HOFF:
                    *P1:15,*V2LON," 1",*HOFF,DOT:
                    *P5:15,"Date              : ":
                    *P1:16,*V2LON," 2",*HOFF,DOT:
                    *P5:16,"Time              : ":
                    *P1:17,*V2LON," 3",*HOFF,DOT:
                    *P5:17,"Location          : ":
                    *P1:18,*V2LON," 4",*HOFF,DOT:
                    *P5:18,"Requested By      : ":
                    *P1:19,*V2LON," 5",*HOFF,DOT:
                    *P5:19,"Operator          : ":
                    *P1:20,*V2LON," 6",*HOFF,DOT:
                    *P5:20,"Reason            : ";
.
          MOVE      ZERO,FORM1
          MOVE      MOVEINDC,FORM1
.
.------ only display due date if reason is "other" ------
.
          IF        FORM1 = 2
            DISPLAY   *P1:22,*V2LON," 7",*HOFF,DOT:
                      *P5:22,"Due Date          : ";
          ENDIF
.
          RETURN
+
.********************************************************************** 
.*                             DATA0000                               *
.*                     Data for Particular U/R                        *
.**********************************************************************
DATA0000  MOVE      FALSE,EXIT
          MOVE      SP10,CDATE10  
          MOVE      SP20,DATIMSTR
          MOVE      ZERO,TEMPTYPE
.
          CALL      FNAM0000                          * Format Patient's Name
.
          UNPACK    PBDATE,XCENT,XYEAR,XMON,XDAY      * Format Birth Date
          PACK      BRMRHIDATE,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR
.
.-------- readkp routine, read backwards thru history for recent -----
.-------- reservation dates...                                   -----
.
          MOVE      SP10,MRHIDATE
          MOVE      SP10,MRHITIME
.
          PACK      KEY26,MRMAKEY,Z30
          CALL      RSMRHIS1                    * positioning read
          CALL      RPMRHIS1                    * read key seq.
          BRANCH    OVRCD,DATA0200
.
          PACK      SAVKEY26,MRHIKEY,MRHIDATE,MRHITIME
DATA0150
          PACK      KEY26,MRHIKEY,MRHIDATE,MRHITIME
          CALL      RLMRHIS1
          COMPARE   ZERO,OVRCD                   * Record Exists
          GOTO      DATA1000 IF EQUAL
.
          BRANCH    OVRCD,DATA0200,DATA0400      * Missing or Locked
.
DATA0200  DISPLAY   *P1:24,*EL,*B,"No Previous History Record.  ";
          CALL      HITENTER
          GOTO      DATA9000
.
DATA0400  DISPLAY   *P1:24,*EL,*B,"Current Details locked by Port No. ":
                    *V2LON,MRHILOCK,*HOFF,".  ";
          CALL      HITENTER
          GOTO      DATA9000
.
DATA1000  MOVE      SP30,MRLODESC
          MOVE      MRHITIME,CURRTIME              * Store Records Current Time
.
.                                                 * Get and Store Records
          PACK      KEY7,MRHIDHOS,MRHILOC,SP10                        *C-240724
          CALL      RDMRLOC1                      * Location Description
          MOVE      MRLODESC,CURRLOCT
.
. -----  Test Location Type to see if Current Location is Temporary        -----
. -----  If so Set TEMPTYPE = 1 for Update not Write to the mrthisaf File  -----
.
          MATCH     MRCNTLOC,MRLOTYPE
          GOTO      DATA2000 IF NOT EQUAL
          MOVE      ONE,TEMPTYPE
.
DATA2000  UNPACK    MRHIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      CDATE10,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      DATIMSTR,MRHIDATE,MRHITIME     * Current Loc. Date & Time
.
          MOVE      SP20,RECSTAT
          PACK      KEY5,CODERS,MRMASTAT
          CALL      RDCODE1
          IF        OVRCD = 0
            TYPE       TCINDC1
            GOTO       DATA2500 IF EQUAL
.
            REP       "A1B2C3D4E5",TCINDC1
.
            TYPE      TCINDC1
            GOTO      DATA2500 IF NOT EQUAL
.
            MOVE      TCINDC1,FORM1
            LOAD      RECSTAT,FORM1,MRCNIN1A,MRCNIN1B,MRCNIN1C:
                                    MRCNIN1D,MRCNIN1E
          ENDIF
.
DATA2500  CALL      CURR0000                   * Display Current History
.
          GOTO      DATA9999
.
DATA9000  MOVE      TRUE,EXIT
.
DATA9999  RETURN
+
.**********************************************************************
.*                           INPT0000                                 *
.*               Input Relevant Data from the Screen                  *
.**********************************************************************
INPT0000  MOVE      FALSE,EXIT
          CALL      DATE0000                     * Keyin Movement Date
.
          CALL      TIME0000                     * Keyin Movement Time
          BRANCH    EXIT,INPT0000                * Dest. Date/Time > Current
.
          CALL      LOCT0000                     * Keyin Destionation Location
          BRANCH    EXIT,INPT9999
.
          CALL      RQBY0000                     * Keyin Requested By
          CALL      OPER0000                     * Keyin Operator
          CALL      REAS0000                     * Keyin Reason for Movement
.                                                  & Due Date
INPT9999  RETURN
+
.**************************************************************************
.*                                   SEL0000                              *
.*                         select field to modify or post                 *
.**************************************************************************
SEL0000   MOVE      FALSE,EXIT
          CALL      MAINQST
          COMPARE   ZERO,CCITEM                * ok to post
          GOTO      SEL9999 IF EQUAL
          COMPARE   "-1",CCITEM                * cancel option
          GOTO      SEL9000 IF EQUAL
          COMPARE   CCITEM,VALOPTN
          GOTO      SEL0000 IF LESS
.
          BRANCH    CCITEM,SEL1000,SEL2000,SEL3000,SEL4000,SEL5000,SEL6000:
                           SEL7000
.
SEL1000   CALL      DATE0000                     * Input Date
.
SEL2000   CALL      TIME0000                     * Input Time
          BRANCH    EXIT,SEL1000                 * re enter date & time
          GOTO      SEL0000
.
SEL3000   CALL      LOCT0000                     * Input Location
          BRANCH    EXIT,SEL9999
          GOTO      SEL0000
.
SEL4000   CALL      RQBY0000                     * Input Requested By
          GOTO      SEL0000
.
SEL5000   CALL      OPER0000                     * Input Operator
          GOTO      SEL0000
.
SEL6000   CALL      REAS0000                     * Input Reason for loan
          BRANCH    EXIT,SEL9999
          GOTO      SEL0000
.
SEL7000   CALL      DUED0000                     * Input Due Date
          GOTO      SEL0000
.
SEL9000   MOVE      TRUE,EXIT                    * Cancel
.
SEL9999   RETURN
+
.**************************************************************************
.*                              DATE0000                                  *
.*                       Input date required                              *
.**************************************************************************
DATE0000  MOVE      SP8,STRTDATE
          MOVE      SP8,DESTDATE
.
.          MATCH     SP8,MOVEDAT             * default date?
.          IF        !@EQUAL
.            UNPACK    MOVEDAT,CCENT,CYEAR,CMON,CDAY
.          ELSE      
.            MOVE      CDD,CDAY
.            MOVE      CMM,CMON
.            MOVE      CYY,CYEAR
.            MOVE      CCC,CCENT
.          ENDIF
.
          MOVE      TEN5,CVERT
          MOVE      TWENTY5,CCOL
          MOVE      CVERT,EVERT
          MOVE      "40",ECOL
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,CDEFDTE
.
          CALL      KEYDATE
.
.------- redisplay date after keyin -----
.
          REPLACE   " 0",CDAY
          REPLACE   " 0",CMON
          REPLACE   " 0",CYEAR
.
          DISPLAY   *P25:15,*EL,*V2LON,CDAY,*HOFF,SLASH,*V2LON,CMON,*HOFF:
                    SLASH,*V2LON,CCENT,CYEAR,*HOFF;
.
          BRANCH    CQUEST,DATE0000                   * "?" entered
          PACK      DESTDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DESTDATE
          MOVE      DESTDATE,DESTFORM                 * move date to form field
.
.------- check system parameters, if future record movements set-up -------
.
          BRANCH    MRCNFUTD,DATE1500                 * "1" = Yes, future dates
.
.------- if future date system not set-up resume processing -------
.
          MATCH     DESTDATE,TODAY                    * Dest Date too big
          GOTO      DATE0500 IF NOT LESS
. 
          DISPLAY   *P1:24,*EL,*B:
                    "Destination Date is greater than today's date.  ";
          CALL      HITENTER
          GOTO      DATE0000
DATE0500
          MOVE      DATIMSTR,KEY8                * Dest Date less than Current 
          MATCH     KEY8,DESTDATE                * History Record Value
          GOTO      DATE1000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B:
                    "Destination Date must be > Current Details Date.  ";
          CALL      HITENTER
          GOTO      DATE0000
DATE1000
          PACK      STRTDATE,CCENT,CYEAR,CMON,CDAY    * Store New Dest. Date
          GOTO      DATE9999
.
.------- future Record Movements set-up, continue processing -----
.
DATE1500  MOVE      DATIMSTR,KEY8                * Dest Date less than Current 
          MATCH     KEY8,DESTDATE                * History Record Value
          GOTO      DATE1600 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B:
                    "Destination Date must be > Current Details Date.  ";
          CALL      HITENTER
          GOTO      DATE0000
.
DATE1600  PACK      STRTDATE,CCENT,CYEAR,CMON,CDAY    * Store New Dest. Date
.
          UNPACK    SP10,JWKDAY,JWKYER,JWKCC
          MOVE      CDD,DD
          MOVE      CMM,MM
          MOVE      CYY,YY
          MOVE      CCC,CC
.
.-------- Convert current date to future date range according to no. of days --
.-------- set up in system parameters -----
.
          CALL      DMYCON                      * convert to julian date
          ADD       HTNUMDAY,JULDAY             * add no. of days to date
.
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                      * convert julian date back
.
          MOVE      DD,CDAY
          MOVE      MM,CMON
          MOVE      YY,CYEAR
          MOVE      CC,CCENT
.
          PACK      FTUREDAT,CCENT,CYEAR,CMON,CDAY
          REPLACE   " 0",FTUREDAT               * replace spaces with zero's
          MOVE      FTUREDAT,FUTRFORM           * move date to form field
          COMPARE   DESTFORM,FUTRFORM           * compare date with future date
          GOTO      DATE9000 IF NOT LESS
.
.-------- date entered is passed the end of range -----
.
          DISPLAY   *P1:24,*EL,*B:
                    "Date entered is passed end of range.  ";
          CALL      HITENTER
          GOTO      DATE0000                    * Re-enter
. 
.-------- if future date entered, warn user -----
.
DATE9000  MATCH     DESTDATE,TODAY              * if < or equal to current date 
          GOTO      DATE9999 IF NOT LESS        * skip warning message
.
.-------- Greater than current date, warn user ----
.
          DISPLAY   *P40:15,*EL,*V2LON,*BLINKON,"Warning",*HOFF,*V2LON:
                                                " - future date entered",*W2;
          DISPLAY   *P40:15,*EL; 
.
DATE9999  RETURN
+
.**************************************************************************
.*                               TIME0000                                 *
.*                      Input New Destination Time                        *
.**************************************************************************
TIME0000  MOVE      FALSE,EXIT
          MOVE      SP20,DATIMEND
.
.          MATCH     SP8,MOVETIM
.          IF        !@EQUAL
.            UNPACK    MOVETIM,CHOUR,ANS,CMIN,ANS,CSEC
.          ELSE
            CLOCK     TIME,LONGTIME
            UNPACK    LONGTIME,CHOUR,ANS,CMIN,ANS,CSEC
.          ENDIF
.
          MOVE      TWENTY5,CCOL
          MOVE      TEN6,CVERT
          MOVE      CVERT,EVERT
          MOVE      "40",ECOL
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      KEYTIME
.
          MOVE      "00",CSEC
          PACK      DESTTIME,CHOUR,COLON,CMIN,COLON,CSEC
          REP       " 0",DESTTIME
.
          MATCH     DESTDATE,TODAY                    * test if current date
          GOTO      TIME0500 IF NOT EQUAL
.
          MATCH     DESTTIME,LONGTIME                * if current date, check
          GOTO      TIME0500 IF NOT LESS             * against current time
.
.------- check system parameters, if future record movements set-up -------
.
          BRANCH    MRCNFUTD,TIME0500                 * "1" = Yes
.
.-------- destination time is greater then current time ------
.
          DISPLAY   *P1:24,*EL,*B:
                    "Destination Time is greater than Current Time.  ";
          CALL      HITENTER
          GOTO      TIME8000
.
TIME0500  PACK      DATIMEND,DESTDATE,DESTTIME
.
          MATCH     DATIMEND,DATIMSTR            * Compare Current Details to 
          IF        @LESS | @EQUAL
            GOTO      TIME9999
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B:
                    "Destination Date/Time must be > Current Details.  ";
          CALL      HITENTER
.
          DISPLAY   *P25:15,*EL,*P25:16,*EL;     * Clear old Date & Time
.
TIME8000  MOVE      TRUE,EXIT
.
TIME9999  RETURN
+
.**************************************************************************
.*                               LOCT0000                                 *
.*                            Input Location                              *
.**************************************************************************
LOCT0000  MOVE      FALSE,EXIT
.
          MOVE      SP30,DESCLOCT
          MOVE      SP4,LOCATION
          MOVE      SP30,TDESC
.
          DISPLAY   *P25:17,*EL,UNDLN4;           * Keyin Destination Location 
.
          MATCH     "IBAPAT36",PRGID
          IF        @EQUAL
            MOVE      SVMRLOCN,LOCATION           * use default from ward file
            KEYIN     *P25:17,*RV,LOCATION
          ELSE
            KEYIN     *P25:17,*V2LON,LOCATION;     * of the Record
          ENDIF
.
          RESET     LOCATION
          GOTO      LOCT1000 IF EOS              * test for end of string
.
          ENDSET    LOCATION
          APPEND    SP4,LOCATION
          RESET     LOCATION
.
          MATCH     SP4,LOCATION                 * Test for a Null String
          GOTO      LOCT2000 IF NOT EQUAL
.
.------- location is mandatory -----
.
LOCT1000  DISPLAY   *P1:24,*EL,*B,"Movement Location is mandatory.  ";
          CALL      HITENTER
          GOTO      LOCT0000
LOCT2000
          DISPLAY   *P25:17,*V2LON,LOCATION;
          CMATCH    EXITCHAR,LOCATION            * Exit from Input Routine
          GOTO      LOCT9500 IF EQUAL
.
          CMATCH    QUEST,LOCATION               * Display Location File Det.
          GOTO      LOCT3000 IF NOT EQUAL
.
          MOVE      SP4,LOCATION
          MOVE      ZERO,LOCATNS
          MOVE      ZERO,HOMEONLY
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      MRTLOCDS                     * display all locations
          CALL      PUTSCR00
          BRANCH    EXIT,LOCT0000                * Exit
          DISPLAY   *P25:17,*V2LON,LOCATION
.
.                                                * Validate Location on File
LOCT3000  PACK      KEY7,DESTHOSP,LOCATION,SP10                       *C-240724
          CALL      RDMRLOC1
          BRANCH    OVRCD,LOCT9000
.
.------ check if Location Reason is Non Active ----
.
          COMPARE   "0",MRLOSTAT                   * "0" = Active
          GOTO      LOCT6000 IF NOT EQUAL
.
. -----  Check if MOVEINDC = 1 i.e. Record Going Home, If so ensure that -----
. -----   Destination Location matches the Home Location of the Record   -----
.
          MOVE      ZERO,FORM1
          MOVE      MOVEINDC,FORM1
          BRANCH    FORM1,LOCT4000
          GOTO      LOCT5000
.
LOCT4000  MATCH     LOCATION,MRMAHLOC
          GOTO      LOCT5000 IF EQUAL
          DISPLAY   *P1:24,*EL,*B,"Invalid Movement Location.  ";
          CALL      HITENTER
          GOTO      LOCT0000
LOCT5000
          DISPLAY   *P36:17,MRLODESC;
          MOVE      MRLODESC,DESCLOCT              * Store Location Description
          GOTO      LOCT9999
.
LOCT6000  DISPLAY   *P1:24,*EL,*B:
                    "Invalid entry.  Location Code is non-active.  ";
          CALL      HITENTER
          GOTO      LOCT0000
.
LOCT9000  DISPLAY   *P1:24,*EL,*B,"Movement Location not on file.  ";
          CALL      HITENTER
          GOTO      LOCT0000
.
LOCT9500  MOVE      TRUE,EXIT
.
LOCT9999  RETURN 
+
.**************************************************************************
.*                                 RQBY0000                               *
.*                            Input Requested-By                          *
.**************************************************************************
RQBY0000  PACK      DESCRQBY,SP30,SP20
          MOVE      MRCNREQB,REQUESTR
          PACK      NAMELINE,SP30,SP20
.
          DISPLAY   *P25:18,*EL,REQUESTR;
          KEYIN     *P25:18,*V2LON,*RV,REQUESTR;     * Keyin Requestor
.
          ENDSET    REQUESTR
          APPEND    SP6,REQUESTR
          RESET     REQUESTR
.
          MATCH     SP6,REQUESTR                 * Test for spaces
          GOTO      RQBY9999 IF EQUAL
.
          DISPLAY   *P25:18,*V2LON,REQUESTR; 
.
          CMATCH    QUEST,REQUESTR               * Test for a "?"
          GOTO      RQBY3000 IF NOT EQUAL
.
          MOVE      SP4,REQUESTR
          CALL      GETSCR00
          OPEN      MRTSTFA3,"mrtstfaf"
          CALL      MRTSTFDS                     * display all staff members
          CLOSE     MRTSTFA3
          CALL      PUTSCR00
          BRANCH    EXIT,RQBY0000                * Exit
          MOVE      KEY6,REQUESTR
          DISPLAY   *P25:18,*V2LON,REQUESTR;     * Redisplay Requestor
.
RQBY3000  MOVE      REQUESTR,KEY6
          CALL      RDMRSTF1
          BRANCH    OVRCD,RQBY9000
.
.-------- check if Staff Member is Non Active -----
.
          COMPARE   "0",MRSTSTAT 
          GOTO      RQBY4000 IF NOT EQUAL            * "0" = Active
.
          CALL      FORM0000                        * format staff members name
          DISPLAY   *P36:18,NAMELINE;
          MOVE      NAMELINE,DESCRQBY               * Store Name Description
          GOTO      RQBY9999
.
.------- staff member is Non Active ----
.
RQBY4000  DISPLAY   *P1:24,*EL,*B,"Invalid entry.  Staff Code is non-active.  ";
          CALL      HITENTER
          GOTO      RQBY0000
.
.------- staff member not on file -----
. 
RQBY9000  DISPLAY   *P1:24,*EL,*B,"Staff member not on file.  ";
          CALL      HITENTER
          GOTO      RQBY0000
.
RQBY9999  RETURN
+
.**************************************************************************
.*                                 OPER0000                               *
.*                              Input Operator                            *
.**************************************************************************
OPER0000  PACK      DESCOPER,SP30,SP20
          MOVE      SP6,OPERATOR
          PACK      NAMELINE,SP30,SP20
.
          DISPLAY   *P25:19,*EL,UNDLN6;
          KEYIN     *P25:19,*V2LON,OPERATOR:     * Keyin Operator's Name
                    *P25:19,*DV,OPERATOR;
.
          RESET     OPERATOR
          GOTO      OPER1000 IF EOS              * test for end of string
.
          ENDSET    OPERATOR
          APPEND    SP6,OPERATOR
          RESET     OPERATOR
.
          MATCH     SP6,OPERATOR                 * Test For a Null String
          GOTO      OPER2000 IF NOT EQUAL
.
OPER1000  IF        MRCNOIDM=0
            MOVE      SP30,DESCOPER
            GOTO      OPER9999
          ENDIF
          DISPLAY   *P1:24,*EL,*B,"Operator Id is mandatory.  ";
          CALL      HITENTER
          GOTO      OPER0000
.
OPER2000
          DISPLAY   *P25:19,*V2LON,OPERATOR;     * Redisplay Operators Name
          CMATCH    QUEST,OPERATOR               * Test for a "?"
          GOTO      OPER3000 IF NOT EQUAL
.
          MOVE      SP4,OPERATOR
          CALL      GETSCR00
          OPEN      MRTSTFA3,"mrtstfaf"
          CALL      MRTSTFDS                     * display all staff members
          CLOSE     MRTSTFA3
          CALL      PUTSCR00
          BRANCH    EXIT,OPER0000                * Exit
          MOVE      KEY6,OPERATOR
          DISPLAY   *P25:19,*V2LON,OPERATOR;     * Redisplay Operators Name
.
OPER3000  MOVE      OPERATOR,KEY6
          CALL      RDMRSTF1
          BRANCH    OVRCD,OPER9000              * Validate Staff Member on File
.
.------- check if operator is active -----
.
          COMPARE   "0",MRSTSTAT                  * "0" = Active
          GOTO      OPER4000 IF NOT EQUAL
.
          CALL      FORM0000                     * format staff members name
          DISPLAY   *P36:19,NAMELINE;
          MOVE      NAMELINE,DESCOPER            * Save Operator's Full Name
          GOTO      OPER9999
.
.------- operator code is Non Active -----
.
OPER4000  DISPLAY   *P1:24,*EL,*B:
                    "Invalid entry.  Staff Code is non-active.  ";
          CALL      HITENTER
          GOTO      OPER0000
.
.------- operator code not on file -----
.
OPER9000  DISPLAY   *P1:24,*EL,*B,"Staff member not on file.  ";
          CALL      HITENTER
          GOTO      OPER0000
.
OPER9999  RETURN
+
.**************************************************************************
.*                                 REAS0000                               *
.*                           Input Reason for Loan                        *
.**************************************************************************
REAS0000  MOVE      SP30,DESCREAS
          MOVE      SP4,REASON
          MOVE      SP30,TDESC
          MOVE      SP1,MOVEINDC
          MOVE      ONE,MRHISTAT
.
          MATCH     "IBAPAT36",PRGID
          IF        @EQUAL
            MOVE      PTCNDBTR,REASON
            KEYIN     *P25:20,*RV,REASON;
          ELSE
            DISPLAY   *P25:20,*EL,UNDLN4;
            KEYIN     *P25:20,*V2LON,REASON;       * Keyin Movement Reason
          ENDIF
.
          ENDSET    REASON
          APPEND    SP4,REASON
          RESET     REASON
.
          MATCH     SP4,REASON                   * Test for a Null String
          GOTO      REAS2000 IF NOT EQUAL
.
.------ Reason is mandatory -----
.
REAS1000  DISPLAY   *P1:24,*EL,*B,"Movement Reason is mandatory.  ";
          CALL      HITENTER
          GOTO      REAS0000
.
REAS2000  DISPLAY   *P25:20,*V2LON,REASON;       * redisplay Movement Reason
          CMATCH    EXITCHAR,REASON
          GOTO      DUED9000 IF EQUAL            * Exit at Bottom of REAS/DUED
.                                                  Routine - Move TRUE --> EXIT
          CMATCH    QUEST,REASON
          GOTO      REAS3000 IF NOT EQUAL
.
          MOVE      SP4,REASON
          CALL      GETSCR00
          CALL      MRTMOVDS                     * display all reasons
          CALL      PUTSCR00
          BRANCH    EXIT,REAS0000                * Exit
          DISPLAY   *P25:20,*V2LON,REASON
.
REAS3000  MOVE      REASON,KEY4                  * Validate Reason of File
          CALL      RDMRMOV1
          BRANCH    OVRCD,REAS9000
.
.-------- check if reason is Non Active -----
.
          COMPARE   "0",MRMOSTAT                   * "0" = Active
          GOTO      REAS6000 IF NOT EQUAL
.
. ----- Test if Movement Reason is Returning Home, i.e. MRMOINDC = 0 -----
. ----- and if so, the record's Home Location matches the Location   -----
. ----- the record is being moved to                                 -----
.
          MOVE      MRMOINDC,MOVEINDC
          MOVE      ZERO,FORM1
          MOVE      MRMOINDC,FORM1
          BRANCH    FORM1,REAS5000      * 1=Not a Home Location Movement 
.
REAS4000  MOVE      TWO,MRHISTAT        * 0=Indicates Home Location
          MATCH     MRMAHLOC,LOCATION
          GOTO      REAS5000 IF EQUAL
          DISPLAY   *P1:24,*EL,*B:
                    "Invalid Movement Reason for Location specified.  ";
          CALL      HITENTER
          GOTO      REAS0000
.
REAS5000  DISPLAY   *P36:20,MRMODESC;
          MOVE      MRMODESC,DESCREAS              * Store Reason Description
          GOTO      REAS9999
.
.------- reason code is Non Active -----
.
REAS6000  DISPLAY   *P1:24,*EL,*B:
                    "Invalid entry. Movement Reason Code is non-active.  ";
          CALL      HITENTER
          GOTO      REAS0000
.
.------ reason not on file ----
.
REAS9000  DISPLAY   *P1:24,*EL,*B,"Movement Reason not on file.  ";
          CALL      HITENTER
          GOTO      REAS0000
.
REAS9999                                         * No Return so Due Date Always
.                                                * Follows Movement Reason
+
.**********************************************************************
.*                           DUED0000                                 *
.*                      Keyin the Due Date                            *
.**********************************************************************
DUED0000  MOVE      ZERO,FORM1
          MOVE      MRMOINDC,FORM1      * 0=Home 1=Other 2=Archive Home
          BRANCH    FORM1,DUED1000      
.                                                  
          DISPLAY   *P1:22,*EF;         * If Returning Home no Due Date needed
          MOVE      SIX,VALOPTN         * Don't Allow the User to Keyin Due Date
.                                                  
          MOVE      SP10,DUEDATE        * Clear Due Date
          MOVE      ZERO,EXIT
          GOTO      DUED9999
.
DUED1000  MOVE      SEVEN,VALOPTN       * Calculate Due Date
          DISPLAY   *P1:22,*V2LON," 7",*HOFF,DOT:
                    *P5:22,"Due Date          : ";
.
          MOVE      SP8,ENDDATE
.
          UNPACK    DESTDATE,CCENT,CYEAR,CMON,CDAY * Default to Dest Date
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
.
          CALL      DMYCON                       * Convert Todays Date
          CALL      BORR0000                     * Calculate the Borrow Period
.
          ADD       MRMOPERD,JULDAY              * Add the Borrowing Period
          MOVE      JULDAY,JWKDAY                * Load Variables for Conv.
          MOVE      JULYR,JWKYER                 * Back to Normal Date
          MOVE      JULCC,JWKCC
          CALL      JULCON                       * Convert to Normal Date
.
          MOVE      DD,CDAY                      * Set up Variables for 
          MOVE      MM,CMON                      * the KEYDATE routine
          MOVE      YY,CYEAR
          MOVE      CC,CCENT
          MOVE      TWENTY2,CVERT
          MOVE      TWENTY5,CCOL
          MOVE      CVERT,EVERT
          MOVE      "40",ECOL
          MOVE      ZERO,CDEFDTE
.
          CALL      KEYDATE                      * Keyin Return Date with 
.                                                * default as today's date 
.                                                * + Borrowing Period
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDATE
          PACK      DUEDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP       " 0",DUEDATE
.
.------- redisplay after keyin ----
.
          DISPLAY   *P25:22,*EL,*V2LON,DUEDATE,*HOFF;
.
          MOVE      ZERO,EXIT
          MATCH     STRTDATE,ENDDATE             * Validate Due Date
          GOTO      DUED9999 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Due Date less than Destination Date.  ";
          CALL      HITENTER
          GOTO      DUED0000
.
DUED9000  MOVE      TRUE,EXIT
.
DUED9999  RETURN
+
+          
.**********************************************************************
.*                           FNAM0000                                 *
.*                 Routine to format patients name                    *
.**********************************************************************
FNAM0000    CLEAR      PNAME53
            RESET      PTITL
            MATCH      SP4,PTITL             * test title for spaces
            GOTO       FNAM3000 IF EQUAL
.
FNAM1000    CMATCH     SP1,PTITL
            GOTO       FNAM2000 IF EQUAL
            MOVE       PTITL,ANS             * append title to patient name
            APPEND     ANS,PNAME53
            BUMP       PTITL
            GOTO       FNAM2000 IF EOS
            GOTO       FNAM1000
.
FNAM2000    APPEND     DOT,PNAME53
            APPEND     SP1,PNAME53
.
FNAM3000    APPEND     PSNAME,PNAME53        * append surname to patient name
            RESET      PNAME53
            MOVE       PNAME53,LINE
            CALL       COMP0000              * compress blanks
            MOVE       LINE,PNAME53
.
            MATCH      SP20,PGNAME           * test given name for spaces
            GOTO       FNAM9999 IF EQUAL
.
            ENDSET     PNAME53
            APPEND     ", ",PNAME53
            APPEND     PGNAME,PNAME53        * append given name to patient name
            RESET      PNAME53
.
FNAM9999    RETURN
.**********************************************************************
.*                           CURR0000                                 *
.*                Current History File Record Details                 *
.**********************************************************************
CURR0000  DISPLAY   *P25:4,*V2LON,MRMAURNO,*HOFF,*P33:4,SLASH:
                    *P34:4,*V2LON,MRMAHLOC,*HOFF,*P38:4,SLASH:
                    *P39:4,*V2LON,MRMADOTY,*HOFF,*P42:4,SLASH:
                    *P43:4,*V2LON,MRMAVOLN;
          MATCH     SP20,RECSTAT
          IF        !@EQUAL
            DISPLAY   *P50:4,*V2LON,"(",*+,RECSTAT,")";
          ENDIF
.
          PACK      AGEDATE,CCC,CYY,CMM,CDD
          REP       " 0",AGEDATE
          CALL      CALCAGE                       * Calculate patients age
          MOVE      PSAGEYRS,PSAGE
.
          DISPLAY   *P25:6,*V2LON,PNAME53:
                    *P25:7,BRMRHIDATE:
                    *P46:7,PSAGE
.
          MATCH     "IBAPAT36",PRGID
          IF        @EQUAL
            DISPLAY   *P25:8,*V2LON,NWARD,*HOFF,"/",*V2LON,NBED
          ENDIF
.
          DISPLAY   *P25:10,*V2LON,CURRLOCT:
                    *P25:11,CDATE10:
                    *P25:12,CURRTIME;
          RETURN
+
.**********************************************************************
.*                           CORR0000                                 *
.*                Correct Patient Yes, No, Cancel                     *
.**********************************************************************
CORR0000  MOVE      FALSE,EXIT
.
          DISPLAY   *P1:24,*EL,"Correct Record (",*V2LON,"Y",*HOFF,"/":
                           *V2LON,"N",*HOFF,") ? ";
.
CORR1000  MOVE      "Y",ANS
          KEYIN     *P24:24,*EL,*DV,*HOFF,ANS:
                    *P24:24,*RV,*V2LON,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CORR9999 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      CORR8000 IF EQUAL
          BEEP
          GOTO      CORR1000
.
CORR8000  MOVE      TRUE,EXIT
.
CORR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.**********************************************************************
.*                           RESS0000                                 *
.*            Check if a Reservation Exists on the Record             *
.**********************************************************************
RESS0000  MOVE      FALSE,EXIT
          MOVE      ZERO,RESSFLAG
.
          PACK      KEY23,MRMAKEY,SP30             * Position and Read Res. File
          CALL      RSMRRES1
          CALL      RKMRRES1
          BRANCH    OVRCD,RESS9999
RESS1000
          MATCH     MRMAKEY,MRRSKEY
          GOTO      RESS9999 IF NOT EQUAL        * No Res. for Medical Rec
.
          MATCH     STRTDATE,MRRSDATE            * First Reservation is less
          GOTO      RESS2000 IF LESS             * than Destination Date
.
          MATCH     MRRSDATE,ENDDATE             * First Reservation is Greater
          GOTO      RESS9999 IF LESS             * than Due Date
          GOTO      RESS3000                     * A Reservation is in Range
.                                                  Btw. Dest & Due Date
RESS2000  CALL      RKMRRES1                     * Check Next Reservation
          BRANCH    OVRCD,RESS9999
          GOTO      RESS1000
.
RESS3000  DISPLAY   *P1:24,*EL,*V2LON,*B,*BLINKON,"RESERVATIONS EXIST",*HOFF:
                           ", (",*V2LON,"D",*HOFF,")isplay, (",*V2LON,"C":
                           *HOFF,")ontinue, (",*V2LON,"E",*HOFF,")xit ?    "; 
          KEYIN     *P53:24,*V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     ANSD,ANS
          GOTO      RESS7000 IF EQUAL            * Display Reservation
          MATCH     ANSC,ANS         
          GOTO      RESS9999 IF EQUAL            * Cancel from Input 
          MATCH     ANSE,ANS         
          GOTO      RESS8000 IF EQUAL            * Exit from Reservations 
          BEEP
          GOTO      RESS3000                     * Invalid Input
.
RESS7000  CALL      DRES0000                     * Display Reservations in 
.                                                * Dest & Due Date Range
          BRANCH    EXIT,RESS8000
          GOTO      RESS9999
.
RESS8000  MOVE      TRUE,EXIT                    * Exit = 1, Option = Exit
.
RESS9999  RETURN
+
.**********************************************************************
.*                           WRIT0000                                 *
.*             Write the Record to the History File                   *
.**********************************************************************
WRIT0000  MOVE      FALSE,EXIT
          MOVE      MRMAKEY,MRHIKEY
.
          UNPACK    DESTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      MRHIDATE,CCENT,CYEAR,CMON,CDAY
.
          MOVE      DESTTIME,MRHITIME
.
.------- update location file -----
.
          MOVE      DESTHOSP,MRHIDHOS                                 *I-240724
          MOVE      LOCATION,MRHILOC
          PACK      KEY7,DESTHOSP,LOCATION,SP10                       *C-240724
          CALL      RDMRLOC1
          BRANCH    OVRCD,WRIT0200
          MOVE      "1",MRLOUSAG
          CALL      UPMRLOC1
.
          UNPACK    SP70,MRHIRCST,MRHIRCUI,MRHIRCDT,MRHIRCTM
.
          MATCH     "1",MRCNTREC            * System Using Tracking Receipt
          IF        @EQUAL
            MATCH     "1",MRLOTREC          * Location Using Tracking Receipt
            IF        @EQUAL
              MOVE      "1",MRHIRCST        * In Transit
            ELSE
              MOVE      "3",MRHIRCST        * Sent Direct
            ENDIF
          ENDIF
.
.------ update staff  file ----
.
WRIT0200  MOVE      REQUESTR,MRHIRECV
          PACK      KEY6,REQUESTR
          CALL      RDMRSTF1
          BRANCH    OVRCD,WRIT0400
          MOVE      "1",MRSTUSAG
          CALL      UPMRSTF1
.
.------ update staff file ----
.
WRIT0400  
          MOVE      OPERATOR,MRHIOPER
          MATCH     SP6,OPERATOR
          GOTO      WRIT0600 IF EQUAL
          PACK      KEY6,OPERATOR
          CALL      RDMRSTF1
          BRANCH    OVRCD,WRIT0600
          MOVE      "1",MRSTUSAG
          CALL      UPMRSTF1
.
.------- update reason file ----
.
WRIT0600  MOVE      REASON,MRHIREAS
          PACK      KEY4,REASON
          CALL      RDMRMOV1
          BRANCH    OVRCD,WRIT0800
          MOVE      "1",MRMOUSAG
          CALL      UPMRMOV1
.
.------ write the rest of the data ----
.
WRIT0800  UNPACK    DUEDATE,CDAY,DUMMY,CMON,DUMMY,CCENT,CYEAR
          PACK      MRHIDDUE,CCENT,CYEAR,CMON,CDAY
.
          BRANCH    TEMPTYPE,WRIT1000            * Update as Old Location
.                                                * is Temporary
          DISPLAY   *P1:24,*EL,"Writing to History file - ",*V2LON,*BLINKON:
                               "Please wait ",*W1;
.
          MOVE      SP2,MRHILOCK
          PACK      KEY26,MRHIKEY,MRHIDATE,MRHITIME
          CALL      WRMRHIS1
.
          OPEN      MRTMASA2,"mrtmasaf"
.         
          PACK      KEY10,MRHIKEY,SP70
          CALL      RDMRMAS2       * Updates the master file with current loc
          MOVE      MRHIDHOS,MRMACHOS                                 *I-240724
          MOVE      MRHILOC,MRMACLOC
          CALL      IBACLOCK
          PACK      MRMADTUP,CCC,CYY,CMM,CDD
          REP       " 0",MRMADTUP
          MOVE      CTIMEIS,MRMATMUP
          CALL      UPMRMAS2
.
          CLOSE     MRTMASA2
.
          UNPACK    SAVKEY26,MRHIKEY,MRHIDATE,MRHITIME * Space Fill Due Date 
          PACK      KEY26,MRHIKEY,MRHIDATE,MRHITIME    * in Old Record for 
          CALL      RDMRHIS1                           * the Overdue Report 
          MOVE      SP8,MRHIDDUE                 
          CALL      UPMRHIS1
          GOTO      WRIT9999
.
WRIT1000  PACK      KEY26,SAVKEY26
          CALL      RAMRHIS1
          BRANCH    OVRCD,WRIT9000
.
          DISPLAY   *P1:24,*EL,"Updating the History file - ",*V2LON,*BLINKON:
                                "Please wait",*W1;
          CALL      UPMRHIS1
          PACK      SAVKEY26,MRHIKEY,MRHIDATE,MRHITIME       * Save Old Rec. Key
          GOTO      WRIT9999
.
WRIT9000  DISPLAY   *P1:24,*EL,*B,"No History Details on file for ":
                    "U/R ",MRMAURNO,".  ";
          CALL      HITENTER
.
WRIT9999  RETURN
+
.**********************************************************************
.*                           FORM0000                                 *
.*                 Routine to format patients name                    *
.**********************************************************************
FORM0000    CLEAR      NAMELINE
            RESET      MRSTTITL
            MATCH      SP4,MRSTTITL             * test title for spaces
            GOTO       FORM3000 IF EQUAL
.
FORM1000    CMATCH     SP1,MRSTTITL
            GOTO       FORM2000 IF EQUAL
            MOVE       MRSTTITL,ANS
            APPEND     ANS,NAMELINE            * append title to temp name
            BUMP       MRSTTITL
            GOTO       FORM2000 IF EOS
            GOTO       FORM1000
.
FORM2000    APPEND     DOT,NAMELINE
            APPEND     SP1,NAMELINE
.
FORM3000    APPEND     MRSTSNAM,NAMELINE        * append surname to temp name
            RESET      NAMELINE
            MOVE       NAMELINE,LINE
            CALL       COMP0000                * compress blanks
            MOVE       LINE,NAMELINE
.
            MATCH      SP20,MRSTGNAM            * test given name for spaces
            GOTO       FORM9999 IF EQUAL
.
            ENDSET     NAMELINE
            APPEND     ", ",NAMELINE
            APPEND     MRSTGNAM,NAMELINE        * append given name to temp name
            RESET      NAMELINE
.
FORM9999    RETURN
+
.**********************************************************************
.*                              COMP0000                              *
.*       Routine to compress excessive blanks in LINE                 *
.**********************************************************************
COMP0000    MOVE       LINE,KEY55
            PACK       TEMP55,SP20,SP20,SP10,SP5
            MATCH      TEMP55,KEY55                 * test line for spaces
            GOTO       COMP9999 IF EQUAL
            CLEAR      LINE
.
COMP1000    CMATCH     SP1,KEY55
            GOTO       COMP5000 IF NOT EQUAL        * compress leading blanks
            BUMP       KEY55 
            GOTO       COMP1000 IF NOT EOS
            GOTO       COMP8000
.
COMP5000    MOVE       KEY55,TEMP55
            MOVE       TEMP55,KEY55
            ENDSET     KEY55
.
COMP5100    CMATCH     SP1,KEY55
            GOTO       COMP7000 IF NOT EQUAL        * compress trailing blanks
            BUMP       KEY55,-1
            GOTO       COMP5100
.
COMP7000    LENSET     KEY55
            RESET      KEY55
.
COMP7100    MOVE       KEY55,ANS
            APPEND     ANS,LINE
            BUMP       KEY55                        * compress multiple blanks
            GOTO       COMP8000 IF EOS              *   from in-between words
            CMATCH     SP1,KEY55                   
            GOTO       COMP7100 IF NOT EQUAL
            MOVE       KEY55,ANS
            APPEND     ANS,LINE
.     
COMP7200    BUMP       KEY55
            CMATCH     SP1,KEY55
            GOTO       COMP7100 IF NOT EQUAL
            GOTO       COMP7200
.
COMP8000    RESET      LINE
            GOTO       COMP9999
.
COMP9999    RETURN
.**********************************************************************
.*                           DRES0000                                 *
.*                Display Reservations for a Record                   *
.**********************************************************************
DRES0000  MOVE      FALSE,EXIT
          MOVE      ONE,COUNT
          MOVE      ONE,COUNTER
          MOVE      ONE,RECDCNT
          MOVE      FIVE,INDEX
.
          PACK      KEY23,MRMAKEY,SP30
          CALL      RSMRRES1
          CALL      RKMRRES1
          BRANCH    OVRCD,DRES9999
          MATCH     MRMAKEY,MRRSKEY
          GOTO      DRES9999 IF NOT EQUAL
          CALL      HEAD0000                     * Display summary screen head
.
          PACK      KEY24,MRRSKEY,MRRSDATE,MRRSTIME
          STORE     KEY24,COUNTER,REC1
          MATCH     DESTDATE,MRRSDATE            * Reservation Date Before 
          GOTO      DRES1000 IF LESS             * Current Date
          CALL      DREC0000                     * Display a record
.
DRES1000  CALL      RKMRRES1
          BRANCH    OVRCD,DRES3000
          MATCH     MRMAKEY,MRRSKEY                  * Incorrect Medical Record
          GOTO      DRES3000 IF NOT EQUAL
          PACK      KEY24,MRRSKEY,MRRSDATE,MRRSTIME * Store Key
          STORE     KEY24,COUNTER,REC1,REC2,REC3,REC4,REC5,REC6,REC7,REC8,REC9:
                                  REC10,REC11,REC12,REC13,REC14,REC15,REC16
.
          MATCH     DESTDATE,MRRSDATE            * Res. Date Before Curr. Date
          GOTO      DRES1000 IF LESS
          MATCH     MRRSDATE,ENDDATE             * Res. Date After Due Date
          GOTO      DRES3000 IF LESS
.
          CALL      DREC0000                     * Display a record
          COMPARE   TWENTY3,INDEX
          GOTO      DRES2000 IF EQUAL            * Page Break
          GOTO      DRES1000
.
DRES2000  DISPLAY   *P1:24,*EL,"(",*V2LON,"M",*HOFF,")ore, ":
                               "(",*V2LON,"A",*HOFF,")ccept, ":
                               "(",*V2LON,"E",*HOFF,")xit ? ";
          KEYIN     *V2LON,ANS;
          REP       UPPLOW,ANS
          MATCH     ANSE,ANS
          GOTO      DRES9000 IF EQUAL            * Exit
          MATCH     ANSA,ANS
          GOTO      DRES3000 IF EQUAL            * Accept Screen
          MATCH     ANSM,ANS
          GOTO      DRES2100 IF EQUAL            * More - Display Next Screen
          BEEP
          GOTO      DRES2000
.
DRES2100  MOVE      FOUR,INDEX
          MOVE      ONE,COUNT
          MOVE      ONE,COUNTER
          MOVE      SP30,KEY24
.
DRES2200  STORE     KEY24,COUNTER,REC1,REC2,REC3,REC4,REC5,REC6,REC7,REC8,REC9:
                                  REC10,REC11,REC12,REC13,REC14,REC15,REC16
          ADD       ONE,COUNTER
          COMPARE   TEN7,COUNTER
          GOTO      DRES2200 IF NOT EQUAL
          CALL      HEAD0000                     * Display header
          MOVE      ONE,COUNTER
          GOTO      DRES1000
.
.-------- Satisfy and Delete are one in the same, however Satisfy deletes ----
.-------- a specific reservation in order for a movement to be made in it's ---
.--------- place. Delete removes unwanted reservations ------
.
DRES3000  DISPLAY   *P1:24,*EL,"(",*V2LON,"S",*HOFF,")atisfy, ":
                               "(",*V2LON,"D",*HOFF,")elete, ":
                               "(",*V2LON,"E",*HOFF,")xit ? ";
          KEYIN     *V2LON,ANS;
          REP       UPPLOW,ANS
          MATCH     ANSS,ANS                           * Satisfy 
          GOTO      DRES4000 IF EQUAL
          MATCH     ANSD,ANS                           * Delete
          GOTO      DRES4000 IF EQUAL
          MATCH     ANSE,ANS                           * Exit
          GOTO      DRES9999 IF EQUAL
          BEEP
          GOTO      DRES3000
.
.-------- Satisfy or Delete option chosen ------
.
DRES4000  DISPLAY   *P1:24,*EL,"Select Item : __";
          MOVE      ZERO,FORM2
          KEYIN     *P15:24,*V2LON,*RV,FORM2;    * Delete Record for the
.
          COMPARE   ZERO,FORM2                   * Relevent Reservation
          GOTO      DRES3000 IF EQUAL
          COMPARE   COUNTER,FORM2
          GOTO      DRES3000 IF NOT LESS
.
          LOAD      KEY24,FORM2,REC1,REC2,REC3,REC4,REC5,REC6,REC7,REC8,REC9:
                                REC10,REC11,REC12,REC13,REC14,REC15,REC16
          MOVE      KEY24,KEY23
.
          CALL      DERESV1                      * Delete Reservation
          SUB       ONE,RECDCNT                  * subtract 1 from record count
          COMPARE   ONE,RECDCNT                  * if all deleted, then exit
          GOTO      DRES9999 IF EQUAL
          GOTO      DRES0000                     * display more reservations
.
.------- Exit ------
.
DRES9000  MOVE      TRUE,EXIT                    * (E)xit
.
.------- No record entered ------
.
DRES9999  RETURN
+
.**********************************************************************
.*                           BORR0000                                 *
.*              Calculate the Borrowing Period (Days)                 *
.**********************************************************************
BORR0000  MOVE      ZERO,MRMOPERD                * Zero the Borrowing Period
.
          PACK      KEY4,MRMOREAS                * Get the Borrowing Period
          CALL      RDMRMOV1                        for this Reason
          MOVE      MRMOTYPE,FORM1
          BRANCH    FORM1,BORR9000
.
BORR9000  MOVE      ZERO,MRMOPERD                * Zero the Borrowing Period
.                                                  for In-Patient Visits
BORR9999  RETURN
+
.**************************************************************************
.*                               HEAD0000                                 *
.*                      Header for summary screen                         *
.**************************************************************************
HEAD0000  DISPLAY   *P1:4,*EF,*V2LON,*ULON:
                    *P5:4,"Date Required":
                    *P19:4,"Time ":
                    *P24:4,"Location            ":
                    *P46:4,"Requestor      ":
                    *P67:4,"Date Reserved";
HEAD9999  RETURN
+
.**************************************************************************
.*                                  DREC0000                              *
.*                    Display a record on the summary screen              *
.**************************************************************************
DREC0000  MOVE      SP20,KEY20
          UNPACK    MRRSDATE,CCENT,CYEAR,CMON,CDAY    * Format Reservation Date
          DISPLAY   *P1:INDEX,*V2LON,COUNT,*HOFF,DOT;
          MATCH     SP2,CCENT
          GOTO      DREC0100 IF EQUAL
          DISPLAY   *P7:INDEX,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR;
.
DREC0100  DISPLAY   *P19:INDEX,MRRSTIME;          * Display Reservation Time
          PACK      KEY7,MRRSRHOS,MRRSDEPT,SP10                       *C-240724
          CALL      RDMRLOC1
          BRANCH    OVRCD,DREC1000
          MOVE      SP20,KEY20
          MOVE      MRLODESC,KEY20
.
DREC1000  DISPLAY   *P25:INDEX,KEY20;
          MOVE      MRRSREQS,KEY6
          CALL      RDMRSTF1                      * Get Staff Member's Name
          BRANCH    OVRCD,DREC2000               * Who Reserved the Record
          CLEAR     KEY20
          MOVE      MRSTGNAM,ANS                  * Format the Name
          APPEND    ANS,KEY20
          APPEND    DOT,KEY20
          APPEND    SP1,KEY20
          APPEND    MRSTSNAM,KEY20
          RESET     KEY20
.
DREC2000  DISPLAY   *P46:INDEX,KEY20;            * Display the Reserver
          UNPACK    MRRSRESV,CCENT,CYEAR,CMON,CDAY
          MATCH     SP2,CCENT
          GOTO      DREC2100 IF EQUAL
          DISPLAY   *P67:INDEX,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR;
.
DREC2100  ADD       ONE,INDEX
          ADD       ONE,COUNT
          ADD       ONE,COUNTER
          ADD       ONE,RECDCNT                  * increment record counter
.
DREC9999  RETURN
+          
.**********************************************************************
.*                              UHIS0000                              *
.*               Unlock the Current History File Record               *
.**********************************************************************
UHIS0000  MOVE      SAVKEY26,KEY26
          UNPACK    KEY26,MRHIKEY,MRHIDATE,MRHITIME
          CALL      UUMRHIS1
          RETURN
+          

