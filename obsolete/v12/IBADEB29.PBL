.-----------------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-----------------------------------------------------------------------------
. VF.09.01  28.02.2002  Glenn Saunders   srf 15126
.           Re-compile for changes in DEBDKIKY
. VF.09.B01 25.01.2001 Charles Handaya
.           Modification of BAS Statement
.-----------------------------------------------------------------------------
. VF.00.01  04.05.1999 Sandra Barcham
.           Allow / to exit for periodic type in delete billing details
.-----------------------------------------------------------------------------
LASTDEB   DIM       8
QTYDIM10  DIM       10
PRIDIM12  DIM       12
TAXDIM13  DIM       13
TOTDIM13  DIM       13
.-----------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBADEB29
.   Function      :   Periodic Charges                        
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       DEBBICFD/INC
          INC       DEBBILFD/INC
          INC       DEBCODFD/INC
          INC       DEBCONFD/INC
          INC       DEBDBTFD/INC
          INC       DEBDKIFD/INC
          INC       DEBICMFD/INC
          INC       DEBITMFD/INC
          INC       DEBLINFD/INC
          INC       DEBPBLFD/INC
          INC       DEBPLNFD/INC
          INC       DEBPTYFD/INC
          INC       DEBSECFD/INC
          INC       DEBTERFD/INC
          INC       IBACONFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
.=========================
.Local Variable Definition
.-------------------------
DBDBUC1D  DIM      35 * Scr 01 Fld    35
DBDBUC2D  DIM      35 * Scr 01 Fld    36
DBDBUC3D  DIM      35 * Scr 01 Fld    37
DBDBUC4D  DIM      35 * Scr 01 Fld    38
DBDBWRND  DIM      35 * Scr 01 Fld    39
.
.    Multi Item Key Fields Scr 01 Fld    43
.-------------------------------------------------------
DBPB1NAM  INIT      "DBPB1"
DBPB1END  FORM      1   * End Display
DBPB1SNO  FORM      5   * Number of Items on the Screen
DBPB1MKY  DIM       127 * Match Key 
DBPB1EKY  DIM       127 * End Key
DBPB1SKY  DIM       127 * Start Key
DBPB1IDX  INIT      " 132 UC1-5"
DBPB1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
DBPB1FNM  DIM       8  * Filename
DBPB1CNT  FORM      3  * Number of Items on Screen
TOTALCHG  FORM     12.2 * Scr 01 Fld    53
.
.Word Processor File * Scr 02 Fld    41
.
NAMDBPL1  INIT      "Wdbpl1"
FILDBPL1  DIM       8
.
DBPBUC1D  DIM      35 * Scr 02 Fld    45
DBPBUC2D  DIM      35 * Scr 02 Fld    46
DBPBUC3D  DIM      35 * Scr 02 Fld    47
DBPBUC4D  DIM      35 * Scr 02 Fld    48
TOTALAMT  FORM     12.2 * Scr 02 Fld    50
DBPBTYPD  DIM      35 * Scr 02 Fld    51
SERVDATE  DIM       8 * Scr 03 Fld     4
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBADEB29"
PRGNAM    INIT      "Periodic Charges                        "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RCON0000
          CALL      SC00L000
          CLOSE     DBPB1FL1,DELETE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBPL1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   81",AUDTSECT
          MOVE      "  9",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudcd";
            OPEN      DEBAUDCD,"debaudcd"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 10",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debauddb";
            OPEN      DEBAUDDB,"debauddb"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 12",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudit";
            OPEN      DEBAUDIT,"debaudit"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 13",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudpt";
            OPEN      DEBAUDPT,"debaudpt"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 14",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudse";
            OPEN      DEBAUDSE,"debaudse"
          ENDIF
          MOVE      "   81",AUDTSECT
          MOVE      " 15",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening debaudte";
            OPEN      DEBAUDTE,"debaudte"
          ENDIF
          DISPLAY   *P56:24,"Opening debbicaf";
          OPEN      DEBBICA1,"debbicaf"
          DISPLAY   *P56:24,"Opening debbilaf";
          OPEN      DEBBILA1,"debbilaf"
          DISPLAY   *P56:24,"Opening debbilaf";
          OPEN      DEBBILA2,"debbilaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA1,"debcodaf"
          DISPLAY   *P56:24,"Opening debcodaf";
          OPEN      DEBCODA2,"debcodaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA1,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA2,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA3,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdbtaf";
          OPEN      DEBDBTA4,"debdbtaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA1,"debdkiaf"
          DISPLAY   *P56:24,"Opening debdkiaf";
          OPEN      DEBDKIA2,"debdkiaf"
          DISPLAY   *P56:24,"Opening debicmaf";
          OPEN      DEBICMA1,"debicmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA1,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA2,"debitmaf"
          DISPLAY   *P56:24,"Opening debitmaf";
          OPEN      DEBITMA3,"debitmaf"
          DISPLAY   *P56:24,"Opening  debdbtaf           ";
          OPEN      DEBLINA1,"debdbtaf"          
          DISPLAY   *P56:24,"Opening debpblaf";
          OPEN      DEBPBLA1,"debpblaf"
          DISPLAY   *P56:24,"Opening debplnaf";
          OPEN      DEBPLNA1,"debplnaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA1,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA2,"debptyaf"
          DISPLAY   *P56:24,"Opening debptyaf";
          OPEN      DEBPTYA3,"debptyaf"
          DISPLAY   *P56:24,"Opening debsecaf";
          OPEN      DEBSECA1,"debsecaf"
          DISPLAY   *P56:24,"Opening debsecaf";
          OPEN      DEBSECA2,"debsecaf"
          DISPLAY   *P56:24,"Opening debteraf";
          OPEN      DEBTERA1,"debteraf"
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
.--------------------------------------------------------
. Initialise Batch Screen Period Charge Number               
.--------------------------------------------------------
          MOVE     ZERO,DBPB1SNO
          MOVE     "01   43",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,DBPB1SNO
            ENDIF
          ENDIF
          PACK      DBPB1FNM,ANST,DBPB1NAM,PORT
          REP       " 0",DBPB1FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      DBPB1FL1,DBPB1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     DBPB1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,DBPB1FNM,DBPB1IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",DBPB1FNM;
          EXECUTE   KEY80,TASKID
          OPEN      DBPB1FL1,DBPB1FNM
.--------------------------------------------------------
. Initialise Wp Filename for Billing Invoice Notes              
.--------------------------------------------------------
          PACK      FILDBPL1,NAMDBPL1,PORT
          REP       " 0",FILDBPL1
          DISPLAY   *P56:24,"Create & Open ",FILDBPL1;
          PREP      TEMPWORD,FILDBPL1
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Menu                               
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Maintain Period Charge Table       
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Charge Details                     
          ENDIF
          MATCH     "03",SCRID
          IF         @EQUAL
            CALL       PS03L000   * Process Periodic Charges           
          ENDIF
          MATCH     "04",SCRID
          IF         @EQUAL
            CALL       PS04L000   * Delete Periodic Billing Details    
          ENDIF
          RETURN
.--------------------------------
. Screen - Menu                               
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Menu                               
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Menu                               
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Menu                               
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Menu                               
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Menu                               
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Menu                               
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Menu                               
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L105
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC03L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L105
          CALL      SC04L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Maintain Period Charge Table       
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Maintain Period Charge Table       
.-------------------------------------------------------
CF01L000
          MOVE      SP70,DBDBDEB 
          MOVE      SP70,DBPBUNI 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Maintain Period Charge Table       
.--------------------------------------------------------
KY01L000
.
KY01L110
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EKEYF000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      DBDBDEB,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Maintain Period Charge Table       
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Maintain Period Charge Table       
.---------------------------------------------------------
LM01L000
.---------------------------------------------------------
. Load for :    43 Period Charge Number               
.---------------------------------------------------------
          UNPACK    SP70,DBPBDEB,DBPBUNI
          PACK      KEY11,DBDBDEB,SP70
          MOVE      KEY11,DBPB1EKY
          STRIP     DBPB1SKY
          SETLPTR   DBPB1EKY,8
          MOVE      DBPB1EKY,DBPB1SKY
          CALL      RDDBPB1 
          IF        OVRCD=0
            CALL      RPDBPB1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP01L000
          MOVE     ZERO,DBPB1CNT
          MOVE     ZERO,DBPB1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP01L600
          MATCH    PRGID,SCPSPID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP01L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L101,DP01L102:
                            DP01L103,DP01L104,DP01L105,DP01L106:
                            DP01L107,DP01L108,DP01L109,DP01L110:
                            DP01L111,DP01L112,DP01L113,DP01L010:
                           DP01L010,DP01L010,DP01L010,DP01L010:
                           DP01L010,DP01L010,DP01L010,DP01L010:
                           DP01L010,DP01L010
          GOTO      DP01L010
.
DP01L101
          PACK      DBPB1MKY,SP70,SP70
          CALL      UPTDBPB1
          IF        DBPB1END=0
            CALL      RKDBPB1 
            IF        OVRCD=0
              PACK      DBPB1MKY,DBPBDEB,DBPBUNI                                                                
              MATCH     DBPB1EKY,DBPB1MKY
              IF        @EQUAL
                MOVE      ZERO,DBPB1END
                ADD       ONE,DBPB1CNT
                CALL      UPTDBPB1
          CALL      REDITM00
                MOVE      DBPBUNI,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,DBPB1END
              ENDIF
            ELSE
              MOVE      ONE,DBPB1END
            ENDIF
          ENDIF
          IF        DBPB1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L102
          IF        DBPB1END=0
            MOVE      DBPBTYP,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L103
          IF        DBPB1END=0
            MOVE      DBPBITM,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L104
          IF        DBPB1END=0
            MOVE      DBPBDREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L105
          IF        DBPB1END=0
            MOVE      DBPBOREF,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L106
          IF        DBPB1END=0
            MOVE      DBPBQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L107
          IF        DBPB1END=0
            MOVE      DBPBPRI,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L108
          IF        DBPB1END=0
            MOVE      DBPBTOT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L109
          IF        DBPB1END=0
            MOVE      DBPBTRT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L110
          IF        DBPB1END=0
            MOVE      DBPBTAX,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L111
          IF        DBPB1END=0
            MOVE      TOTALCHG,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L112
          IF        DBPB1END=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L113
          IF        DBPB1END=0
            MOVE      DBPBGST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
DP01L600
          MATCH    "DBPB1",NAMSSFFI
          GOTO     DP01L605 IF NOT EQUAL
          GOTO     DP01L999
DP01L605
DP01L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP01L000
.
          MATCH    "DBPB1",NAMSSFFI
          GOTO     FP01L105 IF NOT EQUAL
          PACK     KEY11,DBPB1SKY,SP70
          CALL     RDDBPB1  * Start
          IF       OVRCD=0
            CALL     RPDBPB1  * Start
          ENDIF
          CALL     DP01L000
          GOTO     FP01L999
FP01L105
FP01L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP01L000
.
          MATCH    "DBPB1",NAMSSFFI
          GOTO     LP01L105 IF NOT EQUAL
          PACK     KEY11,DBPB1SKY,Z70
          CALL     RSDBPB1  * End
          IF       OVRCD=1
            CALL     RPDBPB1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBPB1SNO
            CALL     RPDBPB1 
            IF       OVRCD=1
              MOVE     DBPB1SNO,SECTOR
            ENDIF
            PACK     DBPB1MKY,DBPBDEB,DBPBUNI                                                                
            MATCH    DBPB1EKY,DBPB1MKY
            IF       !@EQUAL
              MOVE     DBPB1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     LP01L999
LP01L105
LP01L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP01L000
.
          MATCH    "DBPB1",NAMSSFFI
          GOTO     PP01L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP01L105
          CALL      RFTDBPB1
          BRANCH   OVRCD,PP01L115
          MOVE      DBPB1MKY,KEY11 
          CALL      RSDBPB1 
PP01L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=DBPB1SNO
            CALL     RPDBPB1 
            IF       OVRCD=1
              MOVE     DBPB1SNO,SECTOR
            ENDIF
            PACK     DBPB1MKY,DBPBDEB,DBPBUNI                                                                
            MATCH    DBPB1EKY,DBPB1MKY
            IF       !@EQUAL
              MOVE     DBPB1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     PP01L999
PP01L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<DBPB1SNO
            CALL     RKDBPB1 
            IF       OVRCD=1
              MOVE     DBPB1SNO,SECTOR
            ENDIF
            PACK     DBPB1MKY,DBPBDEB,DBPBUNI                                                                
            MATCH    DBPB1EKY,DBPB1MKY
            IF       !@EQUAL
              MOVE     DBPB1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP01L999
PP01L120
PP01L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP01L000
          MATCH    "DBPB1",NAMSSFFI
          GOTO     NP01L115 IF NOT EQUAL
NP01L105
          CALL     RKDBPB1 
          BRANCH   OVRCD,NP01L110
          PACK     DBPB1MKY,DBPBDEB,DBPBUNI                                                                
          MATCH    DBPB1EKY,DBPB1MKY
          GOTO     NP01L110 IF NOT EQUAL
          CALL     RPDBPB1 
          CALL     DP01L000
          GOTO     NP01L999
NP01L110
          CALL     RPDBPB1 
          BEEP
          GOTO     NP01L999
NP01L115
NP01L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT01L000
CT01L105
CT01L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Maintain Period Charge Table       
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    43 Period Charge Number               
.---------------------------------------------------------
UPTDBPB1
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      DBPB1FL1,KEY5;ANS
          IF        @OVER
            WRITE     DBPB1FL1,KEY5;SCPSROW,SCPSCOL,DBPB1MKY
          ELSE
            UPDATE    DBPB1FL1;SCPSROW,SCPSCOL,DBPB1MKY
          ENDIF
          RETURN
RDTDBPB1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      DBPB1FL1,KEY5;SCPSROW,SCPSCOL,DBPB1MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTDBPB1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      DBPB1FL1,KEY5;;
          READKS    DBPB1FL1;SCPSROW,SCPSCOL,DBPB1MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,DBPB1MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Maintain Period Charge Table       
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
          MOVE      "DBPB1",NAMSSFFI
          MOVE      "   43",ITMSSFFI
          CALL      FP01L000
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Maintain Period Charge Table       
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L101,PS01L102,PS01L103:
                            PS01L104,PS01L105,PS01L106,PS01L107:
                            PS01L108,PS01L109,PS01L110,PS01L111:
                            PS01L112,PS01L113,PS01L114,PS01L115:
                            PS01L116,PS01L117,PS01L118,PS01L119:
                            PS01L120,PS01L121,PS01L122,PS01L123:
                            PS01L124,PS01L125,PS01L126,PS01L127:
                            PS01L128,PS01L129,PS01L130,PS01L131:
                            PS01L132,PS01L133,PS01L134,PS01L135:
                            PS01L136,PS01L137,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999
          GOTO     PS01L999
.
PS01L101
          MOVE      DBDBNA1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      DBDBNA2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      DBDBAD1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      DBDBAD2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      DBDBAD3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      DBDBAD4,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      DBDBPC,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBACT,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBSTA,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBTEX,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      DBDBTER,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      DBDBWRN,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      DBDBLIN,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      DBDBPUR,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBBAD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L120
          MOVE      DBDBSORT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L121
          MOVE      DBDBUR2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L122
          UNPACK    DBDBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L123
          UNPACK    DBDBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L124
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L125
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBDBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L126
          MOVE      DBDBUC1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L127
          MOVE      DBDBUC2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L128
          MOVE      DBDBUC3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L129
          MOVE      DBDBUC4,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L130
          MOVE      DBDBUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L131
          MOVE      DBDBUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L132
          MOVE      DBDBUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L133
          MOVE      DBDBUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L134
          MOVE      DBDBWRND,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L135
          MOVE      DBTEDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L136
          MOVE      DBLNNA1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L137
          MOVE      DBDBCLM,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Maintain Period Charge Table       
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L104,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L105,SF01L106,SF01L006,SF01L006:
                           SF01L107,SF01L108
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L104,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          MOVE      "DBPB1",NAMSSFFI
          MOVE      "   43",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L101
          CALL      UUDBDB1 
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      UUDBDB1 
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      ADDC0000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF01L000
          GOTO      SF01L001
.
SF01L104
          CALL      SELECTED
          BRANCH    EXIT,SF01L001
          COMPARE   ONE,ACCEPT
          GOTO      SF01L001 IF EQUAL
          CALL      RDTDBPB1
          IF        OVRCD=1
            BEEP
            GOTO      SF01L001
          ENDIF
          MATCH     SP70,DBPB1MKY
          IF        @EQUAL
            BEEP
            GOTO      SF01L001
          ENDIF
          MOVE      DBPB1MKY,KEY11 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SELT0000
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTDBPB1
          IF        OVRCD=1
            CALL      FP01L000
          ELSE
            MOVE      DBPB1MKY,KEY11 
            CALL      RSDBPB1 
            CALL      RPDBPB1 
            CALL      DP01L000
          ENDIF
          GOTO     SF01L001
.
SF01L105
          MOVE      "DBPB1",NAMSSFFI
          MOVE      "   43",ITMSSFFI
          CALL      NP01L000
          GOTO     SF01L001
.
SF01L106
          MOVE      "DBPB1",NAMSSFFI
          MOVE      "   43",ITMSSFFI
          CALL      PP01L000
          GOTO     SF01L001
.
SF01L107
          MOVE      "DBPB1",NAMSSFFI
          MOVE      "   43",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L108
          MOVE      "DBPB1",NAMSSFFI
          MOVE      "   43",ITMSSFFI
          CALL      LP01L000
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Charge Details                     
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 6",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Charge Details                     
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Charge Details                     
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Charge Details                     
.---------------------------------------------------------
WP02L000
          PREP     TEMPWORD,FILDBPL1
          PACK     KEY14,DBPBDEB,DBPBUNI,SP70
          MOVE     KEY14,SAVKEY80
          SETLPTR  SAVKEY80,11
          CALL      RDDBPL1 
          IF        OVRCD=0
            CALL      RPDBPL1 
          ENDIF
WP02L100
          CALL     RKDBPL1 
          BRANCH   OVRCD,WP02L105
          PACK     KEY14,DBPLDEB,DBPLUNI,DBPLLIN
          MATCH    SAVKEY80,KEY14   
          GOTO     WP02L105 IF NOT EQUAL
          PACK     VAR,DBPLCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBPLCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP02L100
WP02L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Charge Details                     
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Charge Details                     
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Charge Details                     
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L101,PS02L102,PS02L103,PS02L999:
                           PS02L999,PS02L999,PS02L104,PS02L999:
                           PS02L105,PS02L106,PS02L107,PS02L108:
                            PS02L109,PS02L110,PS02L111,PS02L112:
                            PS02L113,PS02L114,PS02L115,PS02L116:
                            PS02L117,PS02L118,PS02L119,PS02L120:
                            PS02L121,PS02L122,PS02L123,PS02L124:
                            PS02L125,PS02L126,PS02L127,PS02L128:
                            PS02L129,PS02L130,PS02L131,PS02L132:
                            PS02L133,PS02L134,PS02L135,PS02L136:
                            PS02L137,PS02L138,PS02L139,PS02L140:
                            PS02L999,PS02L141,PS02L142,PS02L143:
                            PS02L144
          GOTO     PS02L999
.
PS02L101
          MOVE      DBPBDEB,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      DBPBUNI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      DBPBTYP,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      DBPBITM,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      DBPBDREF,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      DBPBOREF,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      DBPBQTY,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      DBPBPRI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      DBPBTOT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          MOVE      DBPBTRT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      DBPBTAX,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          MOVE      DBPBUR1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          MOVE      DBPBUR2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          UNPACK    DBPBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          UNPACK    DBPBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L116
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBPBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L117
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBPBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L118
          MOVE      DBPBUC1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L119
          MOVE      DBPBUC2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L120
          MOVE      DBPBUC3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L121
          MOVE      DBPBUC4,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L122
          MOVE      DBDBNA1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L123
          MOVE      DBDBNA2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L124
          MOVE      DBDBAD1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L125
          MOVE      DBDBAD2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L126
          MOVE      DBDBAD3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L127
          MOVE      DBDBAD4,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L128
          MOVE      DBDBPC,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L129
          MOVE      DBDBPH1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L130
          MOVE      DBDBPH2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L131
          MOVE      DBDBPH3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L132
          MOVE      DBDBCON,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L133
          MOVE     FILDBPL1,WORDNAME
          CALL     DISPWORD
          GOTO     PS02L999
.
PS02L134
          MOVE      DBITDES,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L135
          MOVE      DBITIDE,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L136
          MOVE      DBITPRI,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L137
          MOVE      DBPBUC1D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L138
          MOVE      DBPBUC2D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L139
          MOVE      DBPBUC3D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L140
          MOVE      DBPBUC4D,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L141
          MOVE      TOTALAMT,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L142
          MOVE      DBPBTYPD,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L143
          MOVE      DBPBGST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L144
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Charge Details                     
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L006,SF02L104,SF02L006:
                           SF02L006,SF02L006,SF02L105,SF02L006:
                           SF02L106,SF02L107,SF02L108,SF02L109:
                            SF02L110,SF02L111,SF02L112,SF02L113:
                            SF02L114,SF02L115,SF02L116,SF02L117:
                            SF02L118,SF02L119,SF02L120,SF02L121:
                            SF02L122,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L123,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L124:
                            SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L104,SF02L020:
                           SF02L020,SF02L020,SF02L105,SF02L020:
                           SF02L106,SF02L107,SF02L108,SF02L109:
                            SF02L110,SF02L111,SF02L112,SF02L113:
                            SF02L114,SF02L115,SF02L116,SF02L117:
                            SF02L118,SF02L119,SF02L120,SF02L121:
                            SF02L122,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L123,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L124:
                            SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          CALL      POST0000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L104
.
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBPBTYPD
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPTYP000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBTYP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBTYPD,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
.
.
          MOVE      "   42",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   43",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITIDE 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   44",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBITPRI 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESALI000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L105
            ENDIF
            BRANCH    EXIT,SF02L105,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBITM,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   42",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITDES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   43",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITIDE,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   44",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBITPRI,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L106
          CALL     SELECTED
          STRIP     DBPBDREF
          SFORMAT   VAR,SCPSLEN
          MOVE      DBPBDREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBPBDREF
          SFORMAT   VAR,127
          ENDSET    DBPBDREF
          APPEND    SP70,DBPBDREF
          RESET     DBPBDREF
          CMATCH    EXITCHAR,DBPBDREF
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBPBDREF
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L106
            ENDIF
          ENDIF
          MOVE      DBPBDREF,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L107
          CALL     SELECTED
          STRIP     DBPBOREF
          SFORMAT   VAR,SCPSLEN
          MOVE      DBPBOREF,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBPBOREF
          SFORMAT   VAR,127
          ENDSET    DBPBOREF
          APPEND    SP70,DBPBOREF
          RESET     DBPBOREF
          CMATCH    EXITCHAR,DBPBOREF
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBPBOREF
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L107
            ENDIF
          ENDIF
          MOVE      DBPBOREF,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EQUTY000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L108
            ENDIF
            BRANCH    EXIT,SF02L108,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBQTY,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPRIC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L109
            ENDIF
            BRANCH    EXIT,SF02L109,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBPRI,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L110
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETOTL000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L110
            ENDIF
            BRANCH    EXIT,SF02L110,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBTOT,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L111
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,DBPBTRT 
          IF        SCPSMAN=1
            COMPARE   ZERO,DBPBTRT 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L111
            ENDIF
          ENDIF
          MOVE      DBPBTRT,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L112
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETAXA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L112
            ENDIF
            BRANCH    EXIT,SF02L112,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBTAX,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L113
          CALL     SELECTED
          STRIP     DBPBUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBPBUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBPBUR1 
          SFORMAT   VAR,127
          ENDSET    DBPBUR1 
          APPEND    SP70,DBPBUR1 
          RESET     DBPBUR1 
          CMATCH    EXITCHAR,DBPBUR1 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBPBUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L113
            ENDIF
          ENDIF
          MOVE      DBPBUR1,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L114
          CALL     SELECTED
          STRIP     DBPBUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      DBPBUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DBPBUR2 
          SFORMAT   VAR,127
          ENDSET    DBPBUR2 
          APPEND    SP70,DBPBUR2 
          RESET     DBPBUR2 
          CMATCH    EXITCHAR,DBPBUR2 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DBPBUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L114
            ENDIF
          ENDIF
          MOVE      DBPBUR2,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L115
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBPBUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBPBUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L116
          CALL     SELECTED
          CALL      KEYDATE
          PACK      DBPBUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    DBPBUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L117
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBPBUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBPBUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L118
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DBPBUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DBPBUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L119
.
.
          MOVE      "   45",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBPBUC1D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L119
            ENDIF
            BRANCH    EXIT,SF02L119,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBUC1,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   45",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBUC1D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L120
.
.
          MOVE      "   46",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBPBUC2D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCB000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L120
            ENDIF
            BRANCH    EXIT,SF02L120,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBUC2,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   46",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBUC2D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L121
.
.
          MOVE      "   47",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBPBUC3D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L121
            ENDIF
            BRANCH    EXIT,SF02L121,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBUC3,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   47",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBUC3D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L122
.
.
          MOVE      "   48",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBPBUC4D
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EUDCD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L122
            ENDIF
            BRANCH    EXIT,SF02L122,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBUC4,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   48",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBUC4D,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L123
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "16",SCPSROW
              MOVE     " 22",SCPSCOL
              MOVE     " 50",SCPSLEN
              MOVE     " 6",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILDBPL1,WORDNAME
              MOVE     "  8",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILDBPL1,WORDNAME
            MOVE     "  8",WORDTYPE
            CALL     EDITWORD
          ENDIF
          GOTO     SF02L001
.
SF02L124
.
.
          MOVE      "   53",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,IBGSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGST0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L124
            ENDIF
            BRANCH    EXIT,SF02L124,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      DBPBGST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   53",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      IBGSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.--------------------------------
. Screen - Process Periodic Charges           
.--------------------------------
SC03L000
SC03L100
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC03L200
          CALL      CF03L000 * Clear Fields
          CALL      MVACCEPT
SC03L300
          CALL      KY03L000 * Enter Key Fields
          BRANCH    EXIT,SC03L999,SC03L999
SC03L400
          CALL      WP03L000 * Load any WP Details
SC03L500
          CALL      LM03L000 * Load any Batch Details
SC03L600
          CALL      DF03L000 * Display Fields
SC03L700
          CALL      SF03L000 * Select Fields
          BRANCH    EXIT,SC03L100,SC03L100,SC03L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC03L800
SC03L900
SC03L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Process Periodic Charges           
.-------------------------------------------------------
CF03L000
          MOVE      SP70,DBCDCOD 
          MOVE      SP70,SERVDATE
          MOVE      SP70,DBCDDES 
CF03L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Process Periodic Charges           
.--------------------------------------------------------
KY03L000
          MOVE      ZERO,EXIT
          GOTO      KY03L999
.
KY03L900  MOVE      ONE,EXIT
KY03L999  RETURN
.---------------------------------------------------------
. Load WP files for : Process Periodic Charges           
.---------------------------------------------------------
WP03L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Process Periodic Charges           
.---------------------------------------------------------
LM03L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Process Periodic Charges           
.---------------------------------------------------------
DF03L000
          BRANCH   ACCEPT,DF03L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF03L900
          MATCH    PRGID,SCPSPID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF03L010 IF NOT EQUAL
.
          CALL     PS03L000 * Display Field
          GOTO     DF03L010
DF03L900
DF03L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Process Periodic Charges           
.---------------------------------------------------------
PS03L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS03L999,PS03L999,PS03L101,PS03L102:
                            PS03L103,PS03L999
          GOTO     PS03L999
.
PS03L101
          MOVE      DBCDCOD,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L102
          UNPACK    SERVDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L103
          MOVE      DBCDDES,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
PS03L999
          RETURN
.---------------------------------------------------------
. Selections for : Process Periodic Charges           
.---------------------------------------------------------
SF03L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF03L001  BRANCH   ACCEPT,SF03L020
.
SF03L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L006,SF03L101,SF03L102,SF03L103:
                            SF03L006,SF03L104
SF03L006  BEEP
          GOTO     SF03L005
SF03L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF03L090
          MATCH    PRGID,SCSLPID
          GOTO     SF03L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF03L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L020,SF03L020,SF03L102,SF03L103:
                            SF03L020,SF03L020
          GOTO     SF03L020
SF03L090  MOVE     ZERO,ACCEPT
          GOTO     SF03L001
.
SF03L101
          MOVE      ZERO,EXIT
          GOTO      SF03L999
.
SF03L102
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBCDDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPTYP000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF03L102
            ENDIF
            BRANCH    EXIT,SF03L102,SF03L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF03L990 IF EQUAL
          ENDIF
          MOVE      DBCDCOD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCDDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF03L001
.
SF03L103
          CALL      DEFDATE1
          CALL     SELECTED
          CALL      KEYDATE
          PACK      SERVDATE,CCENT,CYEAR,CMON,CDAY          
          UNPACK    SERVDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF03L001
.
SF03L104
          CALL      PROC0000
          MOVE      ZERO,EXIT
          GOTO      SF03L999
SF03L990  MOVE      FOUR,EXIT * Exit Char Exit
SF03L999  RETURN
.--------------------------------
. Screen - Delete Periodic Billing Details    
.--------------------------------
SC04L000
SC04L100
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC04L200
          CALL      CF04L000 * Clear Fields
          CALL      MVACCEPT
SC04L300
          CALL      KY04L000 * Enter Key Fields
          BRANCH    EXIT,SC04L999,SC04L999
SC04L400
          CALL      WP04L000 * Load any WP Details
SC04L500
          CALL      LM04L000 * Load any Batch Details
SC04L600
          CALL      DF04L000 * Display Fields
SC04L700
          CALL      SF04L000 * Select Fields
          BRANCH    EXIT,SC04L100,SC04L100,SC04L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC04L800
SC04L900
SC04L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Delete Periodic Billing Details    
.-------------------------------------------------------
CF04L000
          MOVE      SP70,DBCDCOD 
          MOVE      SP70,SERVDATE
          MOVE      SP70,DBCDDES 
CF04L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Delete Periodic Billing Details    
.--------------------------------------------------------
KY04L000
          MOVE      ZERO,EXIT
          GOTO      KY04L999
.
KY04L900  MOVE      ONE,EXIT
KY04L999  RETURN
.---------------------------------------------------------
. Load WP files for : Delete Periodic Billing Details    
.---------------------------------------------------------
WP04L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Delete Periodic Billing Details    
.---------------------------------------------------------
LM04L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Delete Periodic Billing Details    
.---------------------------------------------------------
DF04L000
          BRANCH   ACCEPT,DF04L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF04L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF04L900
          MATCH    PRGID,SCPSPID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF04L010 IF NOT EQUAL
.
          CALL     PS04L000 * Display Field
          GOTO     DF04L010
DF04L900
DF04L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Delete Periodic Billing Details    
.---------------------------------------------------------
PS04L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS04L999,PS04L999,PS04L101,PS04L102:
                            PS04L103,PS04L999
          GOTO     PS04L999
.
PS04L101
          MOVE      DBCDCOD,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L102
          UNPACK    SERVDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L103
          MOVE      DBCDDES,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
PS04L999
          RETURN
.---------------------------------------------------------
. Selections for : Delete Periodic Billing Details    
.---------------------------------------------------------
SF04L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF04L001  BRANCH   ACCEPT,SF04L020
.
SF04L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L006,SF04L101,SF04L102,SF04L103:
                            SF04L006,SF04L104
SF04L006  BEEP
          GOTO     SF04L005
SF04L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF04L090
          MATCH    PRGID,SCSLPID
          GOTO     SF04L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF04L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L020,SF04L020,SF04L102,SF04L103:
                            SF04L020,SF04L020
          GOTO     SF04L020
SF04L090  MOVE     ZERO,ACCEPT
          GOTO     SF04L001
.
SF04L101
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L102
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DBCDDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPTYP000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L102
            ENDIF
            BRANCH    EXIT,SF04L102,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      DBCDCOD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBCDDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L103
          CALL      DEFDATE1
          CALL     SELECTED
          CALL      KEYDATE
          PACK      SERVDATE,CCENT,CYEAR,CMON,CDAY          
          UNPACK    SERVDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF04L001
.
SF04L104
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DBIL0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF04L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF04L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF04L999
          ENDIF
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF04L000
          ENDIF
          GOTO      SF04L001
SF04L990  MOVE      FOUR,EXIT * Exit Char Exit
SF04L999  RETURN
.@@@@@ Function Restart Point @@@@@
.-------------------------------------------------------------
. Read Control File
.-------------------------------------------------------------
RCON0000  READ     CONTROLF,ZERO;*85,IBCNUGST
.
RCON9999  RETURN
.
.------------------------------------------------------------
. Debtors Periodic Charge Table Listing
.------------------------------------------------------------
REPT0000  MOVE      "Print Periodic Charge Table. ",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,REPT9999
.
          DISPLAY   *P1:24,"Printing Page ...."
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      "999",CLNO
          MOVE      SP70,LASTDEB
          PACK      KEY11,SP70
          CALL      RSDBPB1
REPT1000  CALL      RKDBPB1
          BRANCH    OVRCD,REPT9000
.
          MATCH     LASTDEB,DBPBDEB
          IF        !@EQUAL
            MOVE      DBPBDEB,KEY8
            CALL      RDDBDB1
            IF        CLNO>50
              CALL      HEAD0000
            ELSE
              CALL      UND132
            ENDIF
            PRINT     "Debtor : ",DBPBDEB,SP1,DBDBNA1
            ADD       ONE,CLNO
            CALL      UND132
            MOVE      DBPBDEB,LASTDEB
          ENDIF
.
.
          MOVE      DBPBITM,KEY8
          CALL      RDDBIT1
.
          MOVE      "PBTY",DBCDCAT
          PACK      KEY7,DBCDCAT,DBPBTYP
          CALL      RDDBCD1
          MOVE      DBCDDES,KEY19
.
          MOVE      "999,999.99",QTYDIM10
          FEDIT     DBPBQTY,QTYDIM10
          MOVE      "999,999.9999",PRIDIM12
          FEDIT     DBPBPRI,PRIDIM12
          MOVE      "99,999,999.99",TAXDIM13
          FEDIT     DBPBTAX,TAXDIM13
          MOVE      "99,999,999.99",TOTDIM13
          ASSIGN    DBPBTAX+DBPBTOT,TOTALAMT
          FEDIT     TOTALAMT,TOTDIM13
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          PRINT     "| ",KEY19," | ",DBPBITM,SP1,DBITIDE,*69,DBPBGST," |":
                    QTYDIM10," |",PRIDIM12," |",TAXDIM13," |",TOTDIM13," |"
          ADD       "1",CLNO
          MATCH     SP70,DBPBDREF
          IF        !@EQUAL
            PRINT     "|",*23,"| ",DBPBDREF,*76,"|",*88,"|",*102,"|",*117,"|":
                      *132,"|"
            ADD       "1",CLNO
          ENDIF
.
          PACK      KEY14,DBPBDEB,DBPBUNI,SP70
          CALL      RSDBPL1
REPT2000  CALL      RKDBPL1
          BRANCH    OVRCD,REPT2900
          MATCH     DBPBDEB,DBPLDEB
          GOTO      REPT2900 IF NOT EQUAL
          MATCH     DBPBUNI,DBPLUNI
          GOTO      REPT2900 IF NOT EQUAL
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          PRINT     "|",*23,"| ",DBPLCOM,*76,"|",*88,"|",*102,"|",*117,"|":
                    *132,"|"
          ADD       "1",CLNO
          GOTO      REPT2000
.
REPT2900  PRINT     "|",*23,"| ",*76,"|",*88,"|",*102,"|",*117,"|":
                    *132,"|"
          ADD       "1",CLNO
          GOTO      REPT1000
.
REPT9000  CALL      UND132
          PRINT     *30,"***** End of Report *****"
REPT9999  RETURN
.
HEAD0000  CALL      HEAD132
          DISPLAY   *P30:24,CPAGENO
          PRINT     *40,"Periodic Charge Table Listing"
          CALL      UND132
          PRINT     "| Type                | Sales Item           ":
                    "                       GST    |  Quantity |  ":
                    "     Price |          Tax |        Total |"
          CALL      UND132
          ADD       "4",CLNO
          RETURN
.
.---------------------
. Read Item
.---------------------
REDITM00  MOVE     DBPBITM,KEY8
          CALL     RDDBIT1
          IF       OVRCD=1
            MOVE     "***** ITEM RECORD MISSING *****",DBITDES
          ENDIF
          ASSIGN   DBPBTOT+DBPBTAX,TOTALCHG
.
REDITM99  RETURN
.
.-------------------------------------------------------------
. Add Item to the Billing Detail
.-------------------------------------------------------------
ADDC0000  MOVE      ONE,F3
          PACK      KEY11,DBDBDEB,Z70       * Setup Key to File
          CALL      RSDBPB1
          CALL      RPDBPB1
          BRANCH    OVRCD,ADDC2000
          MATCH     DBDBDEB,DBPBDEB
          GOTO      ADDC2000 IF NOT EQUAL
          MOVE      DBPBUNI,F3
          ADD       ONE,F3
.
ADDC2000  MOVE      DBDBDEB,DBPBDEB
          MOVE      F3,DBPBUNI
          REP       " 0",DBPBUNI
          CALL      CLRBIL00
          PACK      KEY11,DBDBDEB,DBPBUNI,SP70  * Setup Key to File
          UNPACK    KEY11,DBPBDEB,DBPBUNI
          CALL      RADBPB1                     * Read
          COMPARE   ZERO,OVRCD
          GOTO      ADDC2000 IF EQUAL
.
          MOVE      ONE,ACCEPT
          CALL      SC02L000
.
ADDC9999  RETURN
.------------------------------
. Clear Fields for New Record
.------------------------------
CLRBIL00  MOVE     SP70,DBPBITM
          MOVE     SP70,DBPBDREF
          MOVE     SP70,DBPBOREF
          MOVE     ZERO,DBPBQTY
          MOVE     ZERO,DBPBPRI
          MOVE     ZERO,DBPBTOT
          MOVE     ZERO,DBPBTRT
          MOVE     ZERO,DBPBTAX
          MOVE     SP70,DBPBUR1
          MOVE     SP70,DBPBUR2
          MOVE     SP70,DBPBUD1
          MOVE     SP70,DBPBUD2
          MOVE     ZERO,DBPBUY1
          MOVE     ZERO,DBPBUY2
          MOVE     SP70,DBPBUC1
          MOVE     SP70,DBPBUC2
          MOVE     SP70,DBPBUC3
          MOVE     SP70,DBPBUC4
          MOVE     SP70,DBPBGST
          MOVE     SP70,DBPBSPA
          RETURN
.
.-------------------------------------------------------------
. Locking Standard Routine to Enter Key Field
.-------------------------------------------------------------
EKEYF000  MOVE      ZERO,CKEYTYP
          CALL      KDBDBA00                * Call Standard Keyin Routine wDBh ?
          BRANCH    EXIT,EKEYF999,EKEYF999  * EXIT 1 Null Entry 2 EXITchar
.
          MOVE     SP70,DBLNNA1
          MATCH    SP70,DBDBLIN
          IF       !@EQUAL
            PACK     KEY8,DBDBLIN,SP70
            CALL     RDDBDB1
          ENDIF
.
EKEYF100  PACK      KEY8,DBDBDEB,SP70       * Setup Key to File
          CALL      RLDBDB1                 * Read and Lock Record
          BRANCH    OVRCD,EKEYF999,EKEYF200 * OVRCD=1 Not on File 2 Locked
          CALL      GETCDS00                * Get User Def Code Descriptions
          MOVE      ZERO,EXIT               * Setup EXIT Field
          MOVE      ZERO,OVRCD              * Setup Ovrcd Field
          GOTO      EKEYF999
.
EKEYF200  MOVE      SP70,DISPMSG            * Clear Line 24 Message Display
          CALL      MESSAGE2                * Clear Line 24 and Save
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or (":
                    *V2LON,"E",*HOFF,")xDB ? ",ANS
          CALL      MESSAGE3                * Restore Line 24
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      EKEYF100 IF EQUAL       * Return to locking
          MATCH     ANSE,ANS                * EXIT
          GOTO      EKEYF200 IF NOT EQUAL   * Must be a valid response
          GOTO      EKEYF000                * Return to Keyin
.
EKEYF999  RETURN                            * End of Routine
.---------------------------------------------------
. Get User Def Code Descriptions
.---------------------------------------------------
GETCDS00   MOVE     SP70,DBDBUC1D
           MOVE     SP70,DBDBUC2D
           MOVE     SP70,DBDBUC3D
           MOVE     SP70,DBDBUC4D
           MOVE     SP70,DBDBWRND
.
           MATCH    SP70,DBDBWRN
           IF       !@EQUAL
             MOVE     "DBWR",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBWRN
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBWRND
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC1
           IF       !@EQUAL
             MOVE     "DB01",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC1
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC1D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC2
           IF       !@EQUAL
             MOVE     "DB02",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC2
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC2D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC3
           IF       !@EQUAL
             MOVE     "DB03",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC3
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC3D
             ENDIF
           ENDIF
           MATCH    SP70,DBDBUC4
           IF       !@EQUAL
             MOVE     "DB04",DBCDCAT
             PACK     KEY7,DBCDCAT,DBDBUC4
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBDBUC4D
             ENDIF
           ENDIF
.
           MOVE     SP70,DBTEDES
           PACK     KEY3,DBDBTER,SP70
           CALL     RDDBTE1
.
           RETURN
.
.-------------------------------------------------------------
. Item Selected
.-------------------------------------------------------------
SELT0000  CALL     RDDBPB1
          IF       OVRCD=1
            BEEP
            MOVE     "Can't Read Details - ",DISPMSG
            CALL     MESSAGE1
            GOTO     SELT9999
          ENDIF
.
          MOVE      DBPBITM,KEY8
          CALL      RDDBIT1
          BRANCH    OVRCD,SELT9100
.
          MOVE      DBITPTY,KEY8
          CALL      RDDBPT1
          BRANCH    OVRCD,SELT9200
.
          PACK      KEY12,PASSCODE,DBPTDEP
          CALL      RDDBSE1
          BRANCH    OVRCD,SELT9300
.
          UNPACK    SP70,IBGSDESC
          PACK      KEY6,DBPBGST,SP70
          CALL      RDIBGS1
          IF        OVRCD=0 & IBGSACTV=1
            MOVE      "GST Code is Inactive          ",IBGSDESC
          ENDIF
.
          ASSIGN   DBPBTOT+DBPBTAX,TOTALCHG
          CALL     GETDES00
.
          CALL     SC02L000
          GOTO     SELT9999
.
SELT9100  BEEP
          MOVE     "Invalid Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9200  BEEP
          MOVE     "Invalid Product Type on Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9300  BEEP
          MOVE     "Inadequate Security for Sales Item - ",DISPMSG
          CALL     MESSAGE1
          GOTO     SELT9999
.
SELT9999  RETURN
.---------------------------------------------------
. Get User Def Code Descriptions
.---------------------------------------------------
GETDES00   MOVE     SP70,DBPBUC1D
           MOVE     SP70,DBPBUC2D
           MOVE     SP70,DBPBUC3D
           MOVE     SP70,DBPBUC4D
           MATCH    SP70,DBPBUC1
           IF       !@EQUAL
             MOVE     "FD01",DBCDCAT
             PACK     KEY7,DBCDCAT,DBPBUC1
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBPBUC1D
             ENDIF
           ENDIF
           MATCH    SP70,DBPBUC2
           IF       !@EQUAL
             MOVE     "FD02",DBCDCAT
             PACK     KEY7,DBCDCAT,DBPBUC2
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBPBUC2D
             ENDIF
           ENDIF
           MATCH    SP70,DBPBUC3
           IF       !@EQUAL
             MOVE     "FD03",DBCDCAT
             PACK     KEY7,DBCDCAT,DBPBUC3
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBPBUC3D
             ENDIF
           ENDIF
           MATCH    SP70,DBPBUC4
           IF       !@EQUAL
             MOVE     "FD04",DBCDCAT
             PACK     KEY7,DBCDCAT,DBPBUC4
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBPBUC4D
             ENDIF
           ENDIF
           MATCH    SP70,DBPBTYP
           IF       !@EQUAL
            MOVE      "PBTY",DBCDCAT    * Setup Category
             PACK     KEY7,DBCDCAT,DBPBTYP
             CALL     RDDBCD1
             IF       OVRCD=0
               MOVE     DBCDDES,DBPBTYPD
             ENDIF
           ENDIF
           ASSIGN    DBPBTAX+DBPBTOT,TOTALAMT
.
GETDES99   RETURN
.
DATECURR  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          REP       " 0",CYEAR
          REP       " 0",CMON
          REP       " 0",CDAY
          RETURN
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Post Changes.
.-------------------------------------------------------------
POST0000  PACK     KEY11,DBPBDEB,DBPBUNI,SP70  * Setup Key
          CALL     RADBPB1            * Check for record on file
          IF       OVRCD=0
            CALL     UPDBPB1          * Update Changes
          ELSE
            CALL     WRDBPB1          * Write New Record
          ENDIF
.
          CALL      PNOTE000          * Save Notes
          RETURN                      * Return to program.
.---------------------------
. Save Notes
.---------------------------
PNOTE000  PACK      KEY14,DBPBDEB,DBPBUNI,SP70
          CALL      RSDBPL1
PNOTE200  CALL      RKDBPL1
          BRANCH    OVRCD,PNOTE250
          MATCH     DBPBDEB,DBPLDEB
          GOTO      PNOTE250 IF NOT EQUAL
          MATCH     DBPBUNI,DBPLUNI
          GOTO      PNOTE250 IF NOT EQUAL
          PACK      KEY14,DBPLDEB,DBPLUNI,DBPLLIN
          CALL      DEDBPL1
          GOTO      PNOTE200
.
PNOTE250  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILDBPL1
          TRAPCLR   IO
          BRANCH    OVRCD,PNOTE999
          MOVE      ZERO,F3
PNOTE260  READ      TEMPWORD,SEQ;DBPLCOM
          GOTO      PNOTE999 IF OVER
          MOVE      F3,DBPLLIN
          PACK      KEY14,DBPBDEB,DBPBUNI,DBPLLIN
          UNPACK    KEY14,DBPLDEB,DBPLUNI,DBPLLIN
          CALL      WRDBPL1
          ADD       ONE,F3
          GOTO      PNOTE260
.
PNOTE999  RETURN
.
.-------------------------------------------------------------
. Audit & Locking Standard Routine to Delete Record.
.-------------------------------------------------------------
DELT0000  MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DELT1000,DELT9000,DELT9100
.
DELT1000  PACK     KEY11,DBPBDEB,DBPBUNI,SP70   * Setup Key to File
          CALL     RADBPB1             * Read Record
          IF       OVRCD=0
            CALL     DEDBPB1           * Delete Record
          ENDIF
.
. Delete Invoice Details
.-----------------------------------
          PACK     KEY14,DBPBDEB,DBPBUNI,SP70   * Setup Key to File
          CALL     RSDBPL1
DELT1100  CALL     RKDBPL1
          BRANCH   OVRCD,DELT1190
          MATCH    DBPBDEB,DBPLDEB
          GOTO     DELT1190 IF NOT EQUAL
          MATCH    DBPBUNI,DBPLUNI
          GOTO     DELT1190 IF NOT EQUAL
          PACK     KEY14,DBPLDEB,DBPLUNI,DBPLLIN,SP70   * Setup Key to File
          CALL     DEDBPL1
          GOTO     DELT1100
.
DELT1190  MOVE     ZERO,EXIT           * Exit Screen
          GOTO     DELT9999
.
DELT9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DELT9999
DELT9100  MOVE     ZERO,EXIT           * Exit Screen on "Cancel"
          GOTO     DELT9999
DELT9999  RETURN
.---------------------------------------------------------
. Enter PTYPing Code
.---------------------------------------------------------
EPTYP000  MOVE       "PBTY",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          MOVE       DBCDCOD,DBPBTYP
          BRANCH     EXIT,EPTYP999,EPTYP999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EPTYP000
          ENDIF
          MOVE       DBCDDES,DBPBTYPD
EPTYP999  RETURN
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
ESALI000  MOVE      ZERO,CKEYTYP
          CALL      KDBITX00
          BRANCH    EXIT,ESALI800,ESALI999
          IF        DBITACT=0
            MOVE      "Sales Item Not Active. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ESALI000
          ENDIF
          MOVE      DBITITM,DBPBITM
.
          CALL      LODWP000
.
          COMPARE   ONE,ACCEPT
          GOTO      ESALI999 IF EQUAL
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FILDBPL1,WORDNAME
            CALL      DISPWORD
          ENDIF
          MOVE      DBITPRI,DBPBPRI
          ASSIGN    DBPBPRI*DBPBQTY,DBPBTOT
          PACK      KEY8,CCC,CYY,CMM,CDD,SP70
          REP       " 0",KEY8
          CALL      CALTAX00
          ASSIGN    DBPBTOT+DBPBTAX,TOTALAMT
          CALL      DISPIT00
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          GOTO      ESALI999
.
ESALI800  BEEP
          GOTO      ESALI000
.
ESALI999  RETURN
.
LODWP000  PREP     TEMPWORD,FILDBPL1
          PACK     KEY11,DBPBITM,SP70
          CALL      RDDBIC1
          IF        OVRCD=0
            CALL      RPDBIC1
          ENDIF
LODWP100  CALL     RKDBIC1
          BRANCH   OVRCD,LODWP999
          MATCH    DBPBITM,DBICITM
          GOTO     LODWP999 IF NOT EQUAL
          PACK     VAR,DBICCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     DBICCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     LODWP100
LODWP999  CLOSE    TEMPWORD
          RETURN
.
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
EQUTY000  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBPBQTY
          COMPARE   ONE,ACCEPT
          GOTO      EQUTY999 IF EQUAL
.
EQUTY100  ASSIGN    DBPBPRI*DBPBQTY,DBPBTOT
          PACK      KEY8,CCC,CYY,CMM,CDD,SP70
          REP       " 0",KEY8
          CALL      CALTAX00
          ASSIGN    DBPBTOT+DBPBTAX,TOTALAMT
          CALL      DISPIT00
          MOVE      "   15",FLDID
          CALL      GETPOSIT
.
EQUTY999  RETURN
.
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
EPRIC000  MOVE      DBITPRI,DBPBPRI
          IF        DBITMOD=1
            IF        ACCEPT=0
              BEEP
              MOVE      "Price Fixed for this Sales Item. ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      EPRIC100
          ENDIF
          COMPARE   ZERO,DBPBPRI
          GOTO      EPRIC050 IF EQUAL
.
          COMPARE   ONE,ACCEPT
          GOTO      EPRIC100 IF EQUAL
.
EPRIC050  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBPBPRI
.
EPRIC100  ASSIGN    DBPBPRI*DBPBQTY,DBPBTOT
          PACK      KEY8,CCC,CYY,CMM,CDD,SP70
          REP       " 0",KEY8
          CALL      CALTAX00    * Calculate Tax Amount
          ASSIGN    DBPBTOT+DBPBTAX,TOTALAMT
          CALL      DISPIT00    * Display Fields
          MOVE      "   16",FLDID
          CALL      GETPOSIT
.
EPRIC999  RETURN
.
CALTAX00  MOVE      ZERO,DBPBTRT
          MOVE      ZERO,DBPBTAX
.
          MATCH     SP6,DBPBGST
          GOTO      CALTAX99 IF EQUAL
.
          COMPARE   ONE,DBDBTEX
          GOTO      CALTAX99 IF EQUAL
.
          PACK      KEY14,DBPBGST,KEY8,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     DBPBGST,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  IF        IBGEAMNT<>0
            ASSIGN    (DBPBTOT*IBGEAMNT)/100.0,DBPBTAX
          ENDIF
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,IBGEAMNT
.
CALTAX99  RETURN
.
.------------------------------------------------------------
. Enter Sales Item Code
.------------------------------------------------------------
ETOTL000  IF        DBITMOD=1
            ASSIGN    DBPBQTY*DBPBPRI,DBPBTOT
            IF        ACCEPT=0
              BEEP
              MOVE      "Price Fixed for this Sales Item. ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            GOTO      ETOTL999
          ENDIF
.
          ASSIGN    DBPBQTY*DBPBPRI,DBPBTOT
          COMPARE   ONE,ACCEPT
          GOTO      ETOTL500 IF EQUAL
.
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBPBTOT
          IF        !(DBPBTOT=(DBPBQTY*DBPBPRI))
            ASSIGN    DBPBTOT/DBPBQTY,DBPBPRI
          ENDIF
.
ETOTL500  CALL      CALTAX00
          ASSIGN    DBPBTOT+DBPBTAX,TOTALAMT
          CALL      DISPIT00         * Display Other
          MOVE      "   17",FLDID
          CALL      GETPOSIT
.
ETOTL999  RETURN
.
.
DISPIT00  MOVE      "   16",FLDID   * Price
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBPRI,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   17",FLDID   * Extended Total
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBTOT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   18",FLDID   * Tax Rate
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBTRT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   19",FLDID   * Tax
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DBPBTAX,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   50",FLDID   * Total Charge
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          RETURN
.
.------------------------------------------------------------
. Enter Tax Amount
.------------------------------------------------------------
ETAXA000  COMPARE   ONE,DBDBTEX
          GOTO      ETAXA100 IF NOT EQUAL
          MOVE      ZERO,DBPBTAX
          MOVE      ZERO,DBPBTRT
          MOVE      SP6,DBPBGST
          COMPARE   ONE,ACCEPT
          GOTO      ETAXA900 IF EQUAL
          MOVE      "WARNING : Debtor is Flagged as Tax Exempt - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      ETAXA200
.
ETAXA100  CALL      CALTAX00
          COMPARE   ONE,ACCEPT          * Default if in Insert Mode
          GOTO      ETAXA900 IF EQUAL
.
ETAXA200  MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DBPBTAX
.
          ASSIGN    DBPBTAX+DBPBTOT,TOTALAMT
          MOVE      "   50",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
.
ETAXA900  MOVE      ZERO,EXIT
          MOVE      ZERO,OVRCD
.
ETAXA999  RETURN
.
.---------------------------------------------------------
. Enter User Defined Code 1
.---------------------------------------------------------
EUDCA000  MOVE       "FD01",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          MOVE       DBCDCOD,DBPBUC1
          BRANCH     EXIT,EUDCA999,EUDCA999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCA000
          ENDIF
          MOVE       DBCDDES,DBPBUC1D
EUDCA999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 2
.---------------------------------------------------------
EUDCB000  MOVE       "FD02",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          MOVE       DBCDCOD,DBPBUC2
          BRANCH     EXIT,EUDCB999,EUDCB999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCB000
          ENDIF
          MOVE       DBCDDES,DBPBUC2D
.
EUDCB999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 3
.---------------------------------------------------------
EUDCC000  MOVE       "FD03",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          MOVE       DBCDCOD,DBPBUC3
          BRANCH     EXIT,EUDCC999,EUDCC999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCC000
          ENDIF
          MOVE       DBCDDES,DBPBUC3D
.
EUDCC999  RETURN
.---------------------------------------------------------
. Enter User Defined Code 4
.---------------------------------------------------------
EUDCD000  MOVE       "FD04",DBCDCAT    * Setup Category
          MOVE       ZERO,CKEYTYP
          CALL       KDBCDA00          * Enter Code
          MOVE       DBCDCOD,DBPBUC4
          BRANCH     EXIT,EUDCD999,EUDCD999
          IF         DBCDACT=0
            MOVE       "Code Not Active. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       EUDCD000
          ENDIF
          MOVE       DBCDDES,DBPBUC4D
.
EUDCD999  RETURN
.
.-------------------------------------------------------------
. Enter GST Code
.------------------------------------------------------------
EGST0000  BRANCH    IBCNUGST,EGST0100,EGST0100
          GOTO      EGST9999
.
EGST0100  UNPACK    SP70,IBGSCODE,IBGSDESC
          MOVE      DBITGST,IBGSCODE
          CALL      KIBGSA00
          BRANCH    EXIT,EGST1000,EGST9999
.
          MOVE      IBGSCODE,DBPBGST
          GOTO      EGST1500
.
EGST1000  MOVE      SP70,DBPBGST
          MOVE      SP70,IBGSDESC
.
EGST1500  CALL      CALTAX00
          ASSIGN    DBPBTOT+DBPBTAX,TOTALAMT
          CALL      DISPIT00         * Display Other
.
          MOVE      "   53",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,IBGSDESC,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   52",FLDID
          CALL      GETPOSIT
.
          GOTO      EGST9999
.
EGST9999  RETURN
.
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
DEFDATE1  MOVE     CCC,CCENT
          MOVE     CYY,CYEAR
          MOVE     CMM,CMON
          MOVE     CDD,CDAY
          REP      " 0",CCENT
          REP      " 0",CYEAR
          REP      " 0",CMON
          REP      " 0",CDAY
          RETURN
.------------------------------------------------------------
. Process Periodic Charges
.------------------------------------------------------------
PROC0000  DISPLAY   *P1:24,*EL,"Processing ...."
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      "999",CLNO
          MOVE      SP70,LASTDEB
          PACK      KEY11,SP70
          CALL      RSDBPB1
PROC1000  CALL      RKDBPB1
          BRANCH    OVRCD,PROC9000
          MATCH     DBPBTYP,DBCDCOD       * Only Process Selected Charges
          GOTO      PROC1000 IF NOT EQUAL
.
          MATCH     LASTDEB,DBPBDEB
          IF        !@EQUAL
            MOVE      DBPBDEB,KEY8
            CALL      RDDBDB1
            IF        CLNO>50
              CALL      PHED0000
            ELSE
              CALL      UND132
            ENDIF
            PRINT     "Debtor : ",DBPBDEB,SP1,DBDBNA1
            ADD       ONE,CLNO
            CALL      UND132
            MOVE      DBPBDEB,LASTDEB
          ENDIF
.
          MOVE      DBPBITM,KEY8
          CALL      RDDBIT1
          MOVE      "999,999.99",QTYDIM10
          FEDIT     DBPBQTY,QTYDIM10
          MOVE      "999,999.9999",PRIDIM12
          FEDIT     DBPBPRI,PRIDIM12
          MOVE      "99,999,999.99",TAXDIM13
          FEDIT     DBPBTAX,TAXDIM13
          MOVE      "99,999,999.99",TOTDIM13
          ASSIGN    DBPBTAX+DBPBTOT,TOTALAMT
          FEDIT     TOTALAMT,TOTDIM13
          COMPARE   "55",CLNO
          CALL      PHED0000 IF NOT LESS
.
          CALL      MAKBIL00
.
          PRINT     "| ",DBPBITM,SP1,DBITIDE,*76,"|":
                    QTYDIM10," |",PRIDIM12," |",TAXDIM13," |",TOTDIM13," |"
          ADD       "1",CLNO
          MATCH     SP70,DBPBDREF
          IF        !@EQUAL
            PRINT     "|          ",DBPBDREF,*76,"|",*88,"|",*102,"|",*117,"|":
                      *132,"|"
            ADD       "1",CLNO
          ENDIF
.
          PACK      KEY14,DBPBDEB,DBPBUNI,SP70
          CALL      RSDBPL1
PROC2000  CALL      RKDBPL1
          BRANCH    OVRCD,PROC2900
          MATCH     DBPBDEB,DBPLDEB
          GOTO      PROC2900 IF NOT EQUAL
          MATCH     DBPBUNI,DBPLUNI
          GOTO      PROC2900 IF NOT EQUAL
          COMPARE   "55",CLNO
          CALL      PHED0000 IF NOT LESS
          PRINT     "|          ",DBPLCOM,*76,"|",*88,"|",*102,"|",*117,"|":
                    *132,"|"
          ADD       "1",CLNO
          GOTO      PROC2000
.
PROC2900  PRINT     "|",*76,"|",*88,"|",*102,"|",*117,"|":
                    *132,"|"
          ADD       "1",CLNO
          GOTO      PROC1000
.
PROC9000  CALL      UND132
          PRINT     *30,"***** End of Report *****"
PROC9999  RETURN
.
PHED0000  CALL      HEAD132
          DISPLAY   *P30:24,CPAGENO
          UNPACK    SERVDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *40,"Periodic Charges Processed Report"
          PRINT     "Charge Type : ",DBCDCOD,SP1,DBCDDES,"   Service Date : ":
                    CPCDATE
          CALL      UND132
          PRINT     "| Sales Item                                       ":
                    "                        |  Quantity |       Price |":
                    "          Tax |        Total |"
          CALL      UND132
          ADD       "4",CLNO
          RETURN
.
.------------------------------------------------------------
. Make Billing Item
.------------------------------------------------------------
MAKBIL00  MOVE      ZERO,F6
          PACK      KEY14,DBPBDEB,Z70       * Setup Key to File
          CALL      RSDBBI1
          CALL      RPDBBI1
          BRANCH    OVRCD,MAKBIL50
          MATCH     DBPBDEB,DBBIDEB
          GOTO      MAKBIL50 IF NOT EQUAL
.
          MOVE      DBBIUNI,F6
MAKBIL50  ADD       ONE,F6
          MOVE      DBPBDEB,DBBIDEB
          MOVE      F6,DBBIUNI
          REP       " 0",DBBIUNI
          CALL      MOVBIL00
          PACK      KEY14,DBPBDEB,DBBIUNI,SP70  * Setup Key to File
          UNPACK    KEY14,DBBIDEB,DBBIUNI
          MOVE      "1",DBBISTA                 * Check Status of Record
          CALL      RADBBI1                     * Read
          COMPARE   ZERO,OVRCD
          GOTO      MAKBIL50 IF EQUAL
          CALL      WRDBBI1                     * Write
          CALL      COPNOT00                * Copy Notes
.
MAKBIL99  RETURN                            * End of Routine
.----------------------------------------------------------------------
. Move in Charge Details
.----------------------------------------------------------------------
MOVBIL00  MOVE      SERVDATE,DBBISDAT
          PACK      DBBIDAT,CCC,CYY,CMM,CDD
          REP       " 0",DBBIDAT
          CLOCK     TIME,CTIMEIS
          UNPACK    CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK      DBBITIM,CHOUR,CMIN,KEY2
          MOVE      PASSCODE,DBBIUID
          MOVE      SP70,DBBISPA
          MOVE      DBPBDREF,DBBIDREF
          MOVE      DBPBOREF,DBBIOREF
          MOVE      DBPBITM,DBBIITM
          MOVE      DBPBQTY,DBBIQTY
          MOVE      DBPBPRI,DBBIPRI
          MOVE      DBPBTOT,DBBITOT
          MOVE      DBPBTRT,DBBITRT
          MOVE      DBPBTAX,DBBITAX
          MOVE      DBPBUR1,DBBIUR1
          MOVE      DBPBUR2,DBBIUR2
          MOVE      DBPBUD1,DBBIUD1
          MOVE      DBPBUD2,DBBIUD2
          MOVE      DBPBUY1,DBBIUY1
          MOVE      DBPBUY2,DBBIUY2
          MOVE      DBPBUC1,DBBIUC1
          MOVE      DBPBUC2,DBBIUC2
          MOVE      DBPBUC3,DBBIUC3
          MOVE      DBPBUC4,DBBIUC4
          MOVE      DBPBGST,DBBIGST
.
MOVBIL99  RETURN
.
COPNOT00  PACK      KEY14,DBPBDEB,DBPBUNI,SP70
          CALL      RSDBPL1
COPNOT10  CALL      RKDBPL1
          BRANCH    OVRCD,COPNOT99
          MATCH     DBPBDEB,DBPLDEB
          GOTO      COPNOT99 IF NOT EQUAL
          MATCH     DBPBUNI,DBPLUNI
          GOTO      COPNOT99 IF NOT EQUAL
.
          MOVE      DBPLDEB,DBBCDEB
          MOVE      DBBIUNI,DBBCUNI
          MOVE      DBPLLIN,DBBCLIN
          MOVE      DBPLCOM,DBBCCOM
          MOVE      DBPLSPA,DBBCSPA
          PACK      KEY17,DBBCDEB,DBBCUNI,DBBCLIN
          CALL      RADBBC1
          IF        OVRCD=0
            CALL      UPDBBC1
          ELSE
            CALL      WRDBBC1
          ENDIF
.
          GOTO      COPNOT10
.
COPNOT99  RETURN
.-------------------------------------------------------------
. Delete Billing Details Periodic Charges
.------------------------------------------------------------
DBIL0000  READ      CONTROLF,EIGHTY1;*20,CFDBIFL
          IF        CFDBIFL=1
            BEEP
            MOVE      "ERROR : Invoice Generation in Progress. - ",DISPMSG
            CALL      MESSAGE1
            BEEP
            GOTO      DBIL9100
          ENDIF
.
          MOVE     SP70,DISPMSG        * Clear Line 24 Display Message
          CALL     MESSAGE2            * Save and Clear Line 24
          CALL     DELQST              * Delete (Y/N/C) CEXIT 1/2/3
          CALL     MESSAGE3            * Restore Line 24
          BRANCH   CEXIT,DBIL1000,DBIL9000,DBIL9100
.
DBIL1000  CALL     DALL0000
          MOVE     ZERO,EXIT           * Exit Screen
          GOTO     DBIL9999
DBIL9000  MOVE     ONE,EXIT            * Return to Prompt on "No"
          GOTO     DBIL9999
DBIL9100  MOVE     ZERO,EXIT           * Exit Screen on "Cancel"
          GOTO     DBIL9999
DBIL9999  RETURN
.------------------------------------------------------------
. Delete Billing Details Periodic Charges
.------------------------------------------------------------
DALL0000  DISPLAY   *P1:24,*EL,"Processing ...."
          PACK      KEY11,SP70
          CALL      RSDBPB1
DALL1000  CALL      RKDBPB1
          BRANCH    OVRCD,DALL9999
          MATCH     DBPBTYP,DBCDCOD       * Only Process Selected Charges
          GOTO      DALL1000 IF NOT EQUAL
          CALL      DELBIL00
          GOTO      DALL1000
DALL9999  RETURN
.------------------------------------------------------------
. Delete Billing Item
.------------------------------------------------------------
DELBIL00  MOVE      ZERO,F6
          PACK      KEY14,DBPBDEB,SP70      * Setup Key to File
          CALL      RSDBBI1
DELBIL10  CALL      RKDBBI1
          BRANCH    OVRCD,DELBIL99
          MATCH     DBPBDEB,DBBIDEB
          GOTO      DELBIL99 IF NOT EQUAL
          MATCH     DBPBITM,DBBIITM
          GOTO      DELBIL10 IF NOT EQUAL
          MATCH     SERVDATE,DBBISDAT
          GOTO      DELBIL10 IF NOT EQUAL
.
          PACK      KEY14,DBPBDEB,DBBIUNI,SP70  * Setup Key to File
          CALL      DEDBBI1                     * Delete
          GOTO      DELBIL10
.
DELBIL99  RETURN                            * End of Routine
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       DEBBICIO/INC
          INC       DEBBILIO/INC
          INC       DEBCODIO/INC
          INC       DEBCODKY    
          INC       DEBDBTIO/INC
          INC       DEBDBTKY    
          INC       DEBDKIIO/INC
          INC       DEBDKIKY    
          INC       DEBDKIPR    
          INC       DEBICMIO/INC
          INC       DEBITMCD    
          INC       DEBITMIO/INC
          INC       DEBITMKY    
          INC       DEBLINIO/INC
          INC       DEBPBLIO/INC
          INC       DEBPLNIO/INC
          INC       DEBPTYIO/INC
          INC       DEBSECIO/INC
          INC       DEBTERIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGKIKY    
          INC       IBAGSTIO/INC
          INC       IBAGSTKY    
.
          INC       STDGENCD
.
