. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS92                                             *
. * Desc      :   Copy Ledger Masterfile Details                       *
. **********************************************************************
. * Date      :   01.11.1990                                           *
. * Author    :   Peter Eddey                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.03  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. * VF.00.02  30.06.1999 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. *           srf 632475                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. **********************************************************************
.
          INC       FMSSTDDF
.
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMBFD/INC
          INC       FMSLMCFD/INC
          INC       FMSLMDFD/INC
          INC       FMSLEVFD/INC
          INC       FMSCAFFD/INC
          INC       FMSCCAFD/INC
          INC       FMSRSFFD/INC
          INC       FMSSBAFD/INC
          INC       FMSSSCFD/INC
          INC       FMSTCFFD/INC
          INC       FMSUWPFD/INC
          INC       FMSXCSFD/INC
.
ACCLEVEL  DIM       3
ACLVDESC  DIM       35
ADDLEDFL  FORM      1
.
DIRFLAG   FORM      1
DM12     DIM       12
.
FINISH    INIT      "Finish"
FIRSTFLG  FORM      1
FROMACCT  DIM       12
FROMDESC  DIM       35
FROMLED   DIM       2
FROMLEV   DIM       3
FROMSUB   DIM       12
FROMCST   DIM       12
FROMPOS   DIM       5
FROMREPT DIM       2
.
ITEM      FORM      1
.
LEDGDESC  DIM       35
LEDGER    DIM       2
.
NEWLEDG   DIM       2
NLEDDESC  DIM       35
.
START     INIT      "Start"
.
TOSUB     DIM       12
TOCST     DIM       12
TOACCT    DIM       12
TODESC    DIM       35
TOLED     DIM       2
TOLEV     DIM       3
TOPOS     DIM       5
TOREPT   DIM       2
.
VALIDFLG  FORM      1
.
Z12       INIT      "zzzzzzzzzzzzz"
COSTCODE  DIM       12
SUBJCODE  DIM       12
ACCOUNT   DIM       12
.
PRGID     INIT      "IBAFMS92"
PRGNAM    INIT      "Copy Ledger Masterfile Details" 
VERSION   INIT      "V12.00.00"
.
.**********************************************************************
.*                           ML0000                                   *
.*                       Mainline  Code                               *
.**********************************************************************
.
ML0000    CALL      INIT0000             * initialisation
.
ML1000    DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," Ledger Copy":
                    *P1:6,*V2LON," 2.",*HOFF," Report Seq Copy"
          KEYIN     *P1:8,"Select Option : ",F1
          COMPARE   ZERO,F1
          GOTO      ML9999 IF EQUAL
          BRANCH    F1,ML1900,ML6000
          BEEP
          GOTO      ML1000
.
.
ML1900    CALL      SCRN0000             * display the screen
.
ML2000    CALL      ICPD0000             * input copy details
          BRANCH    EXIT,ML9999,ML9999
.
ML3000    CALL      MAINQST              * select item post cancel
.
          COMPARE   "-1",CCITEM          * test for cancel
          GOTO      ML9999 IF EQUAL
.
          COMPARE   ZERO,CCITEM          * tset for post
          GOTO      ML5000 IF EQUAL
.
          CALL      MCPD0000             * modify the field
          BRANCH    EXIT,ML9999,ML9999
.
          GOTO      ML3000
.
ML5000    CALL      CPLD0000             * copy the ledger details
          GOTO      ML1000
.
ML6000    CALL      CPRSF000             * Copy Report Details
          GOTO      ML1000
.
ML9999    CHAIN     PGM
.
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"  * account master file
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"  * ledger master file
.
          DISPLAY   *P64:24,"fmslmbaf";
          OPEN      FMSLMBA1,"fmslmbaf"  * ledger calender control file
.
          DISPLAY   *P64:24,"fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"  * ledger calender control file
.
          DISPLAY   *P64:24,"fmslmdaf";
          OPEN      FMSLMDA1,"fmslmdaf"  * ledger word processing file 
.
          DISPLAY   *P64:24,"fmsrsfaf";
          OPEN      FMSRSFA1,"fmsrsfaf"  * report sequence file        
          OPEN      FMSRSFA2,"fmsrsfaf"  * report sequence file        
.
          DISPLAY   *P64:24,"fmstcfaf";
          OPEN      FMSTCFA1,"fmstcfaf"  * total calculation file      
          OPEN      FMSTCFA2,"fmstcfaf"  * total calculation file      
.
          DISPLAY   *P64:24,"fmsuwpaf";
          OPEN      FMSUWPA1,"fmsuwpaf"  * user defined word processing
.
          DISPLAY   *P64:24,"fmscafaf";
          OPEN      FMSCAFA1,"fmscafaf"  * control account file            
.
          DISPLAY   *P64:24,"fmsccaaf";
          OPEN      FMSCCAA1,"fmsccaaf"  * cost centre file            
.
          DISPLAY   *P64:24,"fmssbaaf";
          OPEN      FMSSBAA1,"fmssbaaf"  * subjective file             
.
          DISPLAY   *P64:24,"fmslevaf";
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmssscaf";
          OPEN      FMSSSCA1,"fmssscaf"
          OPEN      FMSSSCA2,"fmssscaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";
          OPEN      FMSXCSA1,"fmsxcsaf"
          OPEN      FMSXCSA2,"fmsxcsaf"
.
          DISPLAY   *P64:24,"controlf";  * control file
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO51
          CALL      RDFMCO52
.
INIT9999  RETURN
          
.*********************************************************************
.*                          SCRN0000                                 *
.*                      Display the screen                           *
.*********************************************************************
.
SCRN0000
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,"1.",*HOFF:
                    *P5:4,"From Ledger        : ":
                    *P2:5,*V2LON,"2.",*HOFF:
                    *P5:5,"New Ledger         : ":
                    *P2:6,*V2LON,"3.",*HOFF:
                    *P5:6,"New Description    : ":
                    *P2:7,*V2LON,"4.",*HOFF:
                    *P5:7,"From Account code  : ":
                    *P2:8,*V2LON,"5.",*HOFF:
                    *P5:8,"To Account Code    : ":
                    *P2:9,*V2LON,"6.",*HOFF:
                    *P5:9,"From Report Level  : "
SCRN9999  RETURN
.
.**********************************************************************
.*                        CLRC0000                                    *
.*                    clear the variables                             *
.**********************************************************************
.
CLRC0000
          CLEAR     LEDGER
          CLEAR     LEDGDESC
          CLEAR     NEWLEDG
          CLEAR     NLEDDESC
          CLEAR     FROMACCT
          CLEAR     FROMDESC
          CLEAR     TOACCT
          CLEAR     TODESC
          CLEAR     ACCLEVEL
          CLEAR     ACLVDESC
CLRC9999
          RETURN
.
.**********************************************************************
.*                        ICPD0000                                    *
.*                   Input the copy details                           *
.**********************************************************************
.
ICPD0000
          MOVE      ONE,FIRSTFLG 
          CALL      CLRC0000             * clear the copy details  
          MOVE      ZERO,ITEM  
ICPD1000
          ADD       ONE,ITEM  
.
          MOVE      ITEM,CCITEM
          CALL      MCPD0000             * modify the next field
          BRANCH    EXIT,ICPD9999,ICPD9999
.
          COMPARE   SIX,ITEM  
          GOTO      ICPD9999 IF EQUAL
.
          GOTO      ICPD1000
ICPD9999
          MOVE      ZERO,FIRSTFLG
          RETURN
.
.*********************************************************************
.*                       MCPD0000                                    *
.*               modify the copy details                             *
.*********************************************************************
.
MCPD0000
          BRANCH    CCITEM,MCPD1000,MCPD2000,MCPD3000,MCPD4000,MCPD5000:
                           MCPD6000
          BEEP
          GOTO      MCPD9999
MCPD1000
          CALL      KLED0000             * keyin the ledger
          GOTO      MCPD9999
.
MCPD2000
          MOVE      ONE,ADDLEDFL
          CALL      KNLG0000             * keyin the new ledger
          MOVE      ZERO,ADDLEDFL
          GOTO      MCPD9999
.
MCPD3000
          CALL      KNDS0000             * keyin the new ledger descri
          MOVE      LEDGER,FMLALEDG      * for followimg routines
          GOTO      MCPD9999
.
MCPD4000
          MOVE      ZERO,DIRFLAG
          MOVE      SEVEN,CVERT
          CALL      KACT0000             * keyin the "from" account
          BRANCH    FIRSTFLG,MCPD9999
          CALL      VACT0000
          BRANCH    VALIDFLG,MCPD4000
          GOTO      MCPD9999
.
MCPD5000
          MOVE      ONE,DIRFLAG
          MOVE      EIGHT,CVERT
          CALL      KACT0000            * keyin the "to" account
          BRANCH    EXIT,MCPD9999
          CALL      VACT0000            * test "to" > "from"
          BRANCH    VALIDFLG,MCPD5000
          GOTO      MCPD9999
.
MCPD6000
          CALL      KLEV0000             * keyin the level
          GOTO      MCPD9999
.
MCPD9999
          RETURN
        
.*********************************************************************
.*                        VACT0000                                   * 
.*           validate that "to" account > "from" account             *
.*********************************************************************
.
VACT0000
          MOVE      ZERO,VALIDFLG
.
          MATCH     TOACCT,FROMACCT
          GOTO      VACT9999 IF LESS
          GOTO      VACT9999 IF EQUAL
.
VACT5000
          BEEP
          DISPLAY   *P1:24,*EL,"Account codes must be in ascending order - ";
          CALL      HITENTER
          MOVE      ONE,VALIDFLG
.
VACT9999  RETURN
.*********************************************************************
.*                          KLED0000                                 *
.*                Keyin the required ledger                          *
.*********************************************************************
.
KLED0000
          CLEAR     LEDGER
          CLEAR     LEDGDESC
.
          MOVE      TWENTY6,CCOL
          MOVE      FOUR,CVERT
          MOVE      ZERO,EXIT
.
          CALL      KLMAFM00             * Keyin the required ledger
.
          BRANCH    EXIT,KLED9999,KLED9999
.
          DISPLAY   *P42:4,FMLADESC
          MOVE      FMLALEDG,LEDGER     
          MOVE      FMLADESC,LEDGDESC
.
KLED9999  RETURN
.
.
.------ Redisplay routines -----
.
RLMAFM00
          BRANCH    ADDLEDFL,RLMAFM50
          CALL      SCRN0000
          DISPLAY   *P26:4,*V2LON,FMLALEDG,*HOFF,*P42:4,FMLADESC:
                    *P26:5,*V2LON,NEWLEDG:
                    *P26:6,NLEDDESC:
                    *P26:7,FROMACCT,*HOFF,*P42:7,FROMDESC:
                    *P26:8,*V2LON,TOACCT,*HOFF,*P42:8,TODESC: 
                    *P26:9,*V2LON,ACCLEVEL,*HOFF,*P42:9,ACLVDESC
          RETURN
RLMAFM50
          CALL      SCRN0000
          DISPLAY   *P26:4,*V2LON,LEDGER,*HOFF,*P42:4,LEDGDESC:
                    *P26:5,*V2LON,FMLALEDG:
                    *P26:6,NLEDDESC:
                    *P26:7,FROMACCT,*HOFF,*P42:7,FROMDESC:
                    *P26:8,*V2LON,TOACCT,*HOFF,*P42:8,TODESC: 
                    *P26:9,*V2LON,ACCLEVEL,*HOFF,*P42:9,ACLVDESC
          RETURN
         
.        
.*********************************************************************
.*                          KNLG0000                                 *[
.*                Keyin a new ledger number                          *
.*********************************************************************
.
KNLG0000
          MOVE      TWENTY6,CCOL
          MOVE      FIVE,CVERT
          MOVE      ZERO,EXIT
.
          CALL      ALMAFM00             * Keyin a new ledger       
.
          BRANCH    EXIT,KNLG1000,KNLG9000
.
          MOVE      FMLALEDG,NEWLEDG 
          DISPLAY   *P26:5,*V2LON,FMLALEDG
          GOTO      KNLG9999
.
KNLG1000
          BEEP
          GOTO      KNLG0000
.
KNLG9000
          MOVE      ONE,EXIT
.
KNLG9999  RETURN
.        
.**********************************************************************
.*                         KNDS0000                                   *
.*                    key in the new ledger description               *
.**********************************************************************
.
KNDS0000
          KEYIN     *P26:6,*DV,UNDLN:       
                    *P26:6,*V2LON,NLEDDESC:
                    *P26:6,*DV,NLEDDESC
.
          PACK      NLEDDESC,NLEDDESC,SP70
          MATCH     EXITCHAR,NLEDDESC
          GOTO      KNDS9500 IF EQUAL
          MATCH     SP35,NLEDDESC
          GOTO      KNDS9000 IF NOT EQUAL
.
          BEEP
          GOTO      KNDS0000
.
KNDS9000  MOVE      ZERO,EXIT
          GOTO      KNDS9999
.
KNDS9500  MOVE      ONE,EXIT
.
KNDS9999
          RETURN
.*********************************************************************
.*                         KACT0000                                  *
.*                    Keyin an account                               *
.*********************************************************************
.
KACT0000
          MOVE      TWENTY6,CCOL
          MOVE      ZERO,EXIT
.
          CALL      KAMAFM00             * Keyin  account       
.
          BRANCH    EXIT,KACT9000,KACT9800
.
          DISPLAY   *P42:CVERT,FMAMDESC
          BRANCH    DIRFLAG,KACT3000
          MOVE      FMAMACCT,FROMACCT
          MOVE      FMAMDESC,FROMDESC 
          GOTO      KACT9999
KACT3000
          MOVE      FMAMACCT,TOACCT
          MOVE      FMAMDESC,TODESC
          GOTO      KACT9999
.
KACT9000
          MOVE      ZERO,EXIT
          BRANCH    DIRFLAG,KACT9500
          MOVE      START,FROMDESC
          PACK      FROMACCT,SP20
          DISPLAY   *P42:CVERT,FROMDESC
          GOTO      KACT9999
.
KACT9500
        
          MOVE      FINISH,TODESC
          PACK      TOACCT,Z12 
          DISPLAY   *P26:CVERT,*V2LON,TOACCT,*HOFF:    
                    *P42:CVERT,TODESC   
          GOTO      KACT9999
KACT9800
          MOVE      ONE,EXIT
.
KACT9999  RETURN
.
.
.
.------ Redisplay routines -----
.
RAMAFM00
          BRANCH    DIRFLAG,RAMAFM50
          CALL      SCRN0000
          DISPLAY   *P26:4,*V2LON,LEDGER,*HOFF,*P42:4,LEDGDESC:
                    *P26:5,*V2LON,NEWLEDG:
                    *P26:6,NLEDDESC:
                    *P26:7,FMAMACCT,*HOFF,*P42:7,FMAMDESC:
                    *P26:8,*V2LON,TOACCT,*HOFF,*P42:8,TODESC: 
                    *P26:9,*V2LON,ACCLEVEL,*HOFF,*P42:9,ACLVDESC
          RETURN
RAMAFM50
          CALL      SCRN0000
          DISPLAY   *P26:4,*V2LON,LEDGER,*HOFF,*P42:4,LEDGDESC:
                    *P26:5,*V2LON,NEWLEDG:
                    *P26:6,NLEDDESC:
                    *P26:7,FROMACCT,*HOFF,*P42:7,FROMDESC:
                    *P26:8,*V2LON,FMAMACCT,*HOFF,*P42:8,FMAMDESC:
                    *P26:9,*V2LON,ACCLEVEL,*HOFF,*P42:9,ACLVDESC
          RETURN
.
.*********************************************************************
.*                          KLEV0000                                 *
.*                      Keyin the account level                      *
.*********************************************************************
.
KLEV0000
          CLEAR     ACLVDESC
          CLEAR     ACCLEVEL
          MOVE      ZERO,EXIT
          MOVE      TWENTY6,CCOL
          MOVE      NINE,CVERT
.
          MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00             * keyin the account level
.
          BRANCH    EXIT,KLEV1000,KLEV2000
.
          MOVE      FMLVCODE,ACCLEVEL
          MOVE      FMLVDESC,ACLVDESC
          DISPLAY   *P42:9,ACLVDESC
          GOTO      KLEV9999
.
KLEV1000
          MOVE     ZERO,EXIT
          MOVE     "000",ACCLEVEL
          DISPLAY  *P26:9,*V2LON,ACCLEVEL
          GOTO     KLEV9999
.
KLEV2000
          MOVE      ONE,EXIT
.
KLEV9999  RETURN 
.
.
.
.------ Redisplay routines -----
.
RLEVFM00
          CALL      SCRN0000
          DISPLAY   *P26:4,*V2LON,LEDGER,*HOFF,*P42:4,LEDGDESC:
                    *P26:5,*V2LON,NEWLEDG:
                    *P26:6,NLEDDESC:
                    *P26:7,FROMACCT,*HOFF,*P42:7,FROMDESC:
                    *P26:8,*V2LON,TOACCT,*HOFF,*P42:8,TODESC: 
                    *P26:9,*V2LON,FMLVCODE,*HOFF,*P42:9,FMLVDESC
          RETURN
.
.**********************************************************************
.*                         VACR0000                                   *
.*                 check account is within the range                  *
.**********************************************************************
.
VACR0000
          MOVE      ZERO,VALIDFLG
.
          MATCH     FROMACCT,DM12
          GOTO      VACR9000 IF LESS
.
          MATCH     DM12,TOACCT
          GOTO      VACR9000 IF LESS
          GOTO      VACR9999
.
VACR9000  MOVE      ONE,VALIDFLG
.
VACR9999  RETURN
.
.**********************************************************************
.*                         CPLD0000                                   *
.*                copy the ledger details                             *
.**********************************************************************
.
CPLD0000
          DISPLAY   *P1:24,*EL,"**** Processing ";
.
.------  copy the financial calender control file (LMC) ----
.
          DISPLAY   *P17:24,*V2LON,"fmslmcaf";
          PACK      KEY6,LEDGER
          CALL      RSFMLC1
CPLD1000
          CALL      RKFMLC1
          BRANCH    OVRCD,CPLD2000
.
          MATCH     LEDGER,FMLCLEDG
          GOTO      CPLD2000 IF NOT EQUAL
.
          MOVE      NEWLEDG,FMLCLEDG
          PACK      KEY6,NEWLEDG,FMLCYEAR
          CALL      WRFMLC1
          PACK      KEY6,LEDGER,FMLCYEAR
          DISPLAY   *P26:24,*EL,*V2LON,KEY6;
          CALL      RSFMLC1
          GOTO      CPLD1000  
.
.-----  copy the ledger word processing file ----
.
CPLD2000
          DISPLAY   *P17:24,*V2LON,"fmslmdaf";
          PACK      KEY11,LEDGER,SP10
          CALL      RSFMLD1
CPLD2500
          CALL      RKFMLD1
          BRANCH    OVRCD,CPLD3000
.
          MATCH     FMLDLEDG,LEDGER
          GOTO      CPLD3000 IF NOT EQUAL
.
          MOVE      NEWLEDG,FMLDLEDG
          PACK      KEY11,NEWLEDG,FMLDYEAR,FMLDPERD,FMLDLNO
          CALL      WRFMLD1
          PACK      KEY11,LEDGER,FMLDYEAR,FMLDPERD,FMLDLNO
          DISPLAY   *P26:24,*EL,*V2LON,KEY11;
          CALL      RSFMLD1
          GOTO      CPLD2500
.
.
.------ copy the cost centre file -----
.
CPLD3000
          DISPLAY   *P17:24,*V2LON,"fmsccaaf";
          PACK      KEY14,LEDGER,SP20
          CALL      RSFMCC1
CPLD3500
          CALL      RKFMCC1
          BRANCH    OVRCD,CPLD4000
.
          MATCH     FMCCLEDG,LEDGER
          GOTO      CPLD4000 IF NOT EQUAL
.
          MOVE      FMCCCOCE,DM12
          CALL      VACR0000             * test for valid account
          BRANCH    VALIDFLG,CPLD3500
.
          MOVE      NEWLEDG,FMCCLEDG
          PACK      KEY14,NEWLEDG,FMCCCOCE
          CALL      WRFMCC1
          PACK      KEY14,LEDGER,FMCCCOCE
          DISPLAY   *P26:24,*EL,*V2LON,KEY14;
          CALL      RSFMCC1
          GOTO      CPLD3500
.
.-----  copy the subjective master file ----
.
CPLD4000
          DISPLAY   *P17:24,*V2LON,"fmssbaaf";
          PACK      KEY14,LEDGER,SP20
          CALL      RSFMSA1
CPLD4500
          CALL      RKFMSA1
          BRANCH    OVRCD,CPLD5000
.
          MATCH     FMSALEDG,LEDGER
          GOTO      CPLD5000 IF NOT EQUAL
.
          MOVE      FMSASUBJ,DM12
          CALL      VACR0000             * test for valid account
          BRANCH    VALIDFLG,CPLD4500
.
          MOVE      NEWLEDG,FMSALEDG
          PACK      KEY14,NEWLEDG,FMSASUBJ
          CALL      WRFMSA1
          PACK      KEY14,LEDGER,FMSASUBJ
          DISPLAY   *P26:24,*EL,*V2LON,KEY14;
          CALL      RSFMSA1
.
          CALL      ASSC0000
          GOTO      CPLD4500
.
.-----  copy the ledger master file ----
.
CPLD5000
          DISPLAY   *P17:24,*V2LON,"fmslmaaf";
          PACK      KEY2,LEDGER
          DISPLAY   *P26:24,*EL,*V2LON,KEY2;
          CALL      RDFMLA1
          MOVE      NEWLEDG,FMLALEDG
          MOVE      NLEDDESC,FMLADESC
          PACK      KEY2,NEWLEDG
          CALL      WRFMLA1
.
.----- copy account file and related file details -----
.
          DISPLAY   *P17:24,*V2LON,"fmsamaaf";
          PACK      KEY14,LEDGER,FROMACCT
          CALL      RDFMAM1
          BRANCH    OVRCD,CPLD5500
          GOTO      CPLD7000
CPLD5500
          CALL      RSFMAM1
CPLD6000
          CALL      RKFMAM1
          BRANCH    OVRCD,CPLD9000
CPLD7000
          MATCH     LEDGER,FMAMLEDG 
          GOTO      CPLD9000 IF NOT EQUAL
.
          MATCH     FMAMACCT,TOACCT
          GOTO      CPLD9000 IF LESS
.
          MATCH     ACCLEVEL,FMAMCLEV    * test within required level
          GOTO      CPLD6000 IF LESS
.
          MOVE      NEWLEDG,FMAMLEDG
          PACK      KEY14,NEWLEDG,FMAMACCT
          CALL      WRFMAM1
          PACK      KEY14,LEDGER,FMAMACCT
          DISPLAY   *P26:24,*EL,*V2LON,KEY14;
.
          DISPLAY   *P17:24,*V2LON,"fmscafaf";
          CALL      RDFMCA1            * check for control account
          BRANCH    OVRCD,CPLD7100
          MOVE      NEWLEDG,FMCALED
          PACK      KEY14,NEWLEDG,FMCAACC
          CALL      WRFMCA1
.
CPLD7100  PACK      KEY14,LEDGER,FMAMACCT
          CALL      RSFMAM1
.
.-----   write the report sequence file ---
.
          DISPLAY   *P17:24,*V2LON,"fmsrsfaf";
          PACK      KEY26,LEDGER,FMAMACCT,SP20
          CALL      RSFMRF2
CPLD7200
          CALL      RKFMRF2
          BRANCH    OVRCD,CPLD7400
.
          MATCH     FMRFLED,LEDGER
          GOTO      CPLD7400 IF NOT EQUAL
.
          MATCH     FMRFACC,FMAMACCT
          GOTO      CPLD7400 IF NOT EQUAL
.
          MOVE      NEWLEDG,FMRFLED
          PACK      KEY26,NEWLEDG,FMAMACCT,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      WRFMRF2
          PACK      KEY26,LEDGER,FMAMACCT,FMRFREP,FMRFPOS,FMRFSEQ
          DISPLAY   *P26:24,*EL,*V2LON,KEY26;
          CALL      RSFMRF2
          GOTO      CPLD7200
.
.-----  copy the total calculations file -----
.
.   First index copy
.
CPLD7400
          DISPLAY   *P17:24,*V2LON,"fmstcfa1";
          PACK      KEY33,LEDGER,FMAMACCT,SP20
          CALL      RSFMTC1
CPLD7600
          CALL      RKFMTC1
          BRANCH    OVRCD,CPLD7800 
.
          MATCH     FMTCTLED,LEDGER
          GOTO      CPLD7800 IF NOT EQUAL
.
          MATCH     FMTCTACC,FMAMACCT
          GOTO      CPLD7800 IF NOT EQUAL
.
          DISPLAY   *P26:24,*EL,*V2LON:
                    FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC;
          MATCH     FMTCSLED,LEDGER
          GOTO      CPLD7700 IF NOT EQUAL 
          MOVE      NEWLEDG,FMTCSLED
.
CPLD7700  MOVE      FMTCSACC,DM12
          CALL      VACR0000             * test for valid account
          BRANCH    VALIDFLG,CPLD7600
.        
          PACK      KEY33,FMTCSLED,FMTCSACC,NEWLEDG,FMAMACCT,FMTCASEQ
          UNPACK    KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ
          CALL      RDFMTC2               * read and write on second index
          COMPARE   ONE,OVRCD
          CALL      WRFMTC2 IF EQUAL
          GOTO      CPLD7600
.
.  Second index copy
.
CPLD7800
          DISPLAY   *P17:24,*V2LON,"fmstcfa2";
          PACK      KEY33,LEDGER,FMAMACCT,SP20
          CALL      RSFMTC2
CPLD8000
          CALL      RKFMTC2
          BRANCH    OVRCD,CPLD8200 
.
          MATCH     FMTCSLED,LEDGER
          GOTO      CPLD8200 IF NOT EQUAL
.
          MATCH     FMTCSACC,FMAMACCT
          GOTO      CPLD8200 IF NOT EQUAL
.
          DISPLAY   *P26:24,*EL,*V2LON:
                    FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ;
          MATCH     FMTCTLED,LEDGER
          GOTO      CPLD8100 IF NOT EQUAL
          MOVE      NEWLEDG,FMTCTLED
.
CPLD8100  MOVE      FMTCTACC,DM12
          CALL      VACR0000              * test for valid account
          BRANCH    VALIDFLG,CPLD8000
.         
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,NEWLEDG,FMTCSACC
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          CALL      RDFMTC1               * read and write on first index
          COMPARE   ONE,OVRCD
          CALL      WRFMTC1 IF EQUAL
          GOTO      CPLD8000
.
.---- copy the user defined word processing file -----
.
CPLD8200
          DISPLAY   *P17:24,*V2LON,"fmsuwpaf";
          PACK      KEY17,LEDGER,FMAMACCT,SP10
          CALL      RSFMUW1
CPLD8400
          CALL      RKFMUW1
          BRANCH    OVRCD,CPLD6000
.
          MATCH     FMUWLEDG,LEDGER
          GOTO      CPLD6000 IF NOT EQUAL
.
          MATCH     FMUWACCT,FMAMACCT
          GOTO      CPLD6000 IF NOT EQUAL
.
          MOVE      NEWLEDG,FMUWLEDG
          PACK      KEY17,NEWLEDG,FMAMACCT,FMUWLNO
          CALL      WRFMUW1
          PACK      KEY17,LEDGER,FMAMACCT,FMUWLNO
          DISPLAY   *P26:24,*EL,*V2LON,KEY17;
          CALL      RSFMUW1
          GOTO      CPLD8400 
.
.---- copy x ref file ----
.
CPLD9000  PACK      KEY31,LEDGER,SP70
          CALL      RSFMXC2
          DISPLAY   *P17:24,*V2LON,"fmsxcsaf";
.
CPLD9100  CALL      RKFMXC2
          BRANCH    OVRCD,CPLD9500          * no more records ?
          MATCH     LEDGER,FMXCLED
          GOTO      CPLD9500 IF NOT EQUAL   * no more records ?
.
          DISPLAY   *P26:24,*EL,*V2LON,FMXCLED,FMXCSUB,FMXCCOS;
          PACK      KEY14,NEWLEDG,FMXCSUB,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,CPLD9100          * subjective exists ?
.
          PACK      KEY14,NEWLEDG,FMXCCOS,SP70
          CALL      RDFMCC1
          BRANCH    OVRCD,CPLD9100          * cost centre exists ?
.
          PACK      FMXCLED,NEWLEDG,SP70    * set up ledger
          PACK      FMXCCPR,FMCCPPOS,SP70   * ensure print positions correct
          PACK      FMXCSPR,FMSAPPOS,SP70
          CALL      WRFMXC1                 * write on key 1
          GOTO      CPLD9100
.
CPLD9500  
.
CPLD9999  RETURN
.**********************************************************************
.  ASSC - copy fmssscaf                                Called By CPLD
.**********************************************************************
ASSC0000  
.
.   First index copy
.
ASSC7400
          DISPLAY   *P17:24,*V2LON,"fmsscca1";
          PACK      KEY31,LEDGER,FMSASUBJ,SP20
          CALL      RSFMTS1
ASSC7600
          CALL      RKFMTS1
          BRANCH    OVRCD,ASSC7800 
.
          MATCH     FMTSTLED,LEDGER
          GOTO      ASSC7800 IF NOT EQUAL
.
          MATCH     FMTSTACC,FMSASUBJ
          GOTO      ASSC7800 IF NOT EQUAL
.
          DISPLAY   *P26:24,*EL,*V2LON:
                    FMTSTLED,FMTSTACC,FMTSASEQ,FMTSSACC;
.
          MOVE      FMTSSACC,DM12
          CALL      VACR0000             * test for valid account
          BRANCH    VALIDFLG,ASSC7600
.        
          PACK      KEY31,NEWLEDG,FMTSSACC,FMSASUBJ,FMTSASEQ
          UNPACK    KEY31,FMTSTLED,FMTSSACC,FMTSTACC,FMTSASEQ
          CALL      RDFMTS2               * read and write on second index
          COMPARE   ONE,OVRCD
          CALL      WRFMTS2 IF EQUAL
          GOTO      ASSC7600
.
ASSC7800  
.
ASSC9999  RETURN
.------------------------------------------------------------
. Copy Report Sequence 
.------------------------------------------------------------
CPRSF000  CALL      GETREP00
          BRANCH    EXIT,CPRSF999
          CALL      GETLED00
          CALL      GETSEQ00
          CALL      GETLEV00
          CALL      GETSUB00
          CALL      GETCST00
.
CPRSF200  KEYIN     *P1:24,*EL,"Ok to Continue (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSN,ANS
          GOTO      CPRSF999 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      CPRSF200 IF NOT EQUAL
.
          PACK      KEY26,FROMREPT,FROMPOS,SP70
          CALL      RSFMRF1
CPRSF300  CALL      RKFMRF1
          BRANCH    OVRCD,CPRSF400
          MATCH     FROMREPT,FMRFREP
          GOTO      CPRSF400 IF NOT EQUAL
.
          MATCH     FMRFPOS,TOPOS
          GOTO      CPRSF400 IF LESS
.
          MATCH     FROMLED,FMRFLED
          GOTO      CPRSF300 IF LESS
          MATCH     FMRFLED,TOLED
          GOTO      CPRSF300 IF LESS
.
          CALL      CHKCS000       * Check Cost Centre & Subjective
          BRANCH    EXIT,CPRSF300
.
          PACK      KEY14,FMRFLED,FMRFACC
          CALL      RDFMAM1
          BRANCH    OVRCD,CPRSF300
.
          MATCH     FROMLEV,FMAMCLEV
          GOTO      CPRSF300 IF LESS
          MATCH     FMAMCLEV,TOLEV
          GOTO      CPRSF300 IF LESS
.
          MOVE      TOREPT,FMRFREP
          PACK      KEY26,FMRFREP,FMRFPOS,FMRFSEQ,FMRFLED,FMRFACC
          CALL      RAFMRF1
          IF        OVRCD=1 
            CALL      WRFMRF1
          ENDIF
          PACK      KEY26,FROMREPT,FMRFPOS,FMRFSEQ,FMRFLED,FMRFACC
          CALL      RDFMRF1
          GOTO      CPRSF300
.
CPRSF400  DISPLAY   *P1:24,"Copy Complete - ";
          CALL      HITENTER
.
CPRSF999  RETURN
.------------------------------------------------------------
. Check Cost Centre & Subjective Range Exit 0=Ok 1=Out of Range
.------------------------------------------------------------
CHKCS000  MOVE      FMRFACC,ACCOUNT
          CALL      GCOD0000
          MATCH     FROMCST,COSTCODE
          GOTO      CHKCS900 IF LESS
          MATCH     COSTCODE,TOCST
          GOTO      CHKCS900 IF LESS
          MATCH     FROMSUB,SUBJCODE
          GOTO      CHKCS900 IF LESS
          MATCH     SUBJCODE,TOSUB
          GOTO      CHKCS900 IF LESS
          MOVE      ZERO,EXIT
          GOTO      CHKCS999
CHKCS900  MOVE      ONE,EXIT
CHKCS999  RETURN
.------------------------------------------------------------
. Get Report Code
.------------------------------------------------------------
GETREP00  DISPLAY   *P1:3,*EF
          KEYIN     *P1:4,"Copy From Report Code : ",FROMREPT
          ENDSET    FROMREPT
          APPEND    SP70,FROMREPT
          RESET     FROMREPT
          MATCH     SP70,FROMREPT
          GOTO      GETREP90 IF EQUAL
          MOVE      FROMREPT,KEY2
          CALL      RDFMLB1
          IF        OVRCD=1
            BEEP
            DISPLAY   *P1:24,"Invalid Report Code - ";
            CALL      HITENTER
            GOTO      GETREP00
          ENDIF
          DISPLAY   *P1:4,"Copy From Report Code : ",FMLBRPNO,SP1,FMLBDESC
.
GETREP10  KEYIN     *P1:5,*EL,"Copy To   Report Code : ",TOREPT
          ENDSET    TOREPT
          APPEND    SP70,TOREPT
          RESET     TOREPT
          MATCH     SP70,TOREPT
          GOTO      GETREP00 IF EQUAL
          MOVE      TOREPT,KEY2
          CALL      RDFMLB1
          IF        OVRCD=1
            BEEP
            DISPLAY   *P1:24,"Invalid Report Code - ";
            CALL      HITENTER
            GOTO      GETREP10
          ENDIF
          DISPLAY   *P1:5,"Copy To   Report Code : ",FMLBRPNO,SP1,FMLBDESC
          MOVE      ZERO,EXIT
          MATCH     FROMREPT,TOREPT
          GOTO      GETREP99 IF NOT EQUAL
          BEEP
          DISPLAY   *P1:24,"Invalid Same as From Code - ";
          CALL      HITENTER
          GOTO      GETREP10
GETREP90  MOVE      ONE,EXIT
GETREP99  RETURN
.------------------------------------------------------------
. Get Ledger Range
.------------------------------------------------------------
GETLED00  KEYIN     *P1:6,*EL,"Ledger           From : ",*JR,*ZF,FROMLED
          ENDSET    FROMLED
          APPEND    SP70,FROMLED
          RESET     FROMLED
          MATCH     "00",FROMLED
          IF        @EQUAL
            MOVE      SP70,FROMLED
          ENDIF
          MATCH     SP70,FROMLED
          IF        !@EQUAL
            MOVE      FROMLED,KEY2
            CALL      RDFMLA1
            BRANCH    OVRCD,GETLED00
            DISPLAY   *P1:6,*EL,"Ledger           From : ",FROMLED,SP1,FMLADESC
          ELSE
            DISPLAY   *P1:6,*EL,"Ledger           From : Start"
          ENDIF
GETLED10  KEYIN     *P1:7,*EL,"                 To   : ",*JR,*ZF,TOLED
          ENDSET    TOLED
          APPEND    SP70,TOLED
          RESET     TOLED
          MATCH     "00",TOLED
          IF        @EQUAL
            MOVE      SP70,TOLED
          ENDIF
          MATCH     SP70,TOLED
          IF        !@EQUAL
            MOVE      TOLED,KEY2
            CALL      RDFMLA1
            BRANCH    OVRCD,GETLED10
            DISPLAY   *P1:7,*EL,"                 To   : ",TOLED,SP1,FMLADESC
          ELSE
            MOVE      Z70,TOLED
            DISPLAY   *P1:7,*EL,"                 To   : Finish"
          ENDIF
          RETURN
.------------------------------------------------------------
. Get Position Range
.------------------------------------------------------------
GETSEQ00  KEYIN     *P1:8,*EL,"Print Position   From : ",*JR,*ZF,FROMPOS
          ENDSET    FROMPOS
          APPEND    SP70,FROMPOS
          RESET     FROMPOS
          MATCH     "00000",FROMPOS
          IF        @EQUAL
            MOVE      SP70,FROMPOS
          ENDIF
          MATCH     SP70,FROMPOS
          IF        !@EQUAL
            DISPLAY   *P1:8,*EL,"Print Position   From : ",FROMPOS
          ELSE
            DISPLAY   *P1:8,*EL,"Print Position   From : Start"
          ENDIF
GETSEQ10  KEYIN     *P1:9,*EL,"                 To   : ",*JR,*ZF,TOPOS
          ENDSET    TOPOS
          APPEND    SP70,TOPOS
          RESET     TOPOS
          MATCH     "00",TOPOS
          IF        @EQUAL
            MOVE      SP70,TOPOS
          ENDIF
          MATCH     SP70,TOPOS
          IF        !@EQUAL
            DISPLAY   *P1:9,*EL,"                 To   : ",TOPOS
          ELSE
            DISPLAY   *P1:9,*EL,"                 To   : Finish"
            MOVE      Z70,TOPOS
          ENDIF
          RETURN
.------------------------------------------------------------
. Get Level Range
.------------------------------------------------------------
GETLEV00  MOVE      SP70,FROMLEV
          KEYIN     *P1:10,*EL,"Report Level     From : ",*JR,*ZF,FROMLEV
          ENDSET    FROMLEV
          APPEND    SP70,FROMLEV
          RESET     FROMLEV
          MATCH     "000",FROMLEV
          IF        @EQUAL
            MOVE      SP70,FROMLEV
          ENDIF
          MATCH     SP70,FROMLEV
          IF        !@EQUAL
            MOVE      FROMLEV,KEY3
            CALL      RDFMLV1
            BRANCH    OVRCD,GETLEV00
            DISPLAY   *P1:10,*EL,"Report Level     From : ",FROMLEV,SP1,FMLVDESC
          ELSE
            DISPLAY   *P1:10,*EL,"Report Level     From : Start"
          ENDIF
GETLEV10  KEYIN     *P1:11,*EL,"                 To   : ",*JR,*ZF,TOLEV
          ENDSET    TOLEV
          APPEND    SP70,TOLEV
          RESET     TOLEV
          MATCH     "000",TOLEV
          IF        @EQUAL
            MOVE      SP70,TOLEV
          ENDIF
          MATCH     SP70,TOLEV
          IF        !@EQUAL
            MOVE      TOLEV,KEY3
            CALL      RDFMLV1
            BRANCH    OVRCD,GETLEV10
            DISPLAY   *P1:11,*EL,"                 To   : ",TOLEV,SP1,FMLVDESC
          ELSE
            MOVE      Z70,TOLEV
            DISPLAY   *P1:11,*EL,"                 To   : Finish"
          ENDIF
          RETURN
.
          INC       FMSSTDCD
          INC       FMSAMAIO/INC
          INC       FMSLEVIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMBIO/INC
          INC       FMSCONIO/INC
          INC       FMSSBAIO/INC
          INC       FMSCAFIO/INC
          INC       FMSCCAIO/INC
          INC       FMSSSCIO/INC
          INC       FMSUWPIO/INC
          INC       FMSTCFIO/INC
          INC       FMSRSFIO/INC
          INC       FMSLMDIO/INC
          INC       FMSLMCIO/INC
          INC       FMSXCSIO/INC
          INC       FMSAMAKY
          INC       FMSLMAKY
          INC       FMSLEVKY
.
.------------------------------------------------------------
. Get Subjective Range
.------------------------------------------------------------
GETSUB00  MATCH     SP70,FROMLED
          GOTO      GETSUB90 IF EQUAL
.
          MOVE      SP70,FROMSUB
          KEYIN     *P1:12,*EL,"Report Subjective From: ",FROMSUB
          ENDSET    FROMSUB
          APPEND    SP70,FROMSUB
          RESET     FROMSUB
          MATCH     SP70,FROMSUB
          IF        !@EQUAL
            PACK      KEY14,FROMLED,FROMSUB,SP70
            CALL      RDFMSA1
            BRANCH    OVRCD,GETSUB00
            DISPLAY   *P1:12,*EL,"Report Subjective From: ",FROMSUB,SP1,FMSADESC
          ELSE
            DISPLAY   *P1:12,*EL,"Report Subjective From: Start"
          ENDIF
GETSUB10  KEYIN     *P1:13,*EL,"                  To  : ",TOSUB
          ENDSET    TOSUB
          APPEND    SP70,TOSUB
          RESET     TOSUB
          MATCH     SP70,TOSUB
          IF        !@EQUAL
            PACK      KEY14,FROMLED,TOSUB,SP70
            CALL      RDFMSA1
            BRANCH    OVRCD,GETSUB10
            DISPLAY   *P1:13,*EL,"                  To  : ",TOSUB,SP1,FMSADESC
          ELSE
            MOVE      Z70,TOSUB
            DISPLAY   *P1:13,*EL,"                  To  : Finish"
          ENDIF
          GOTO      GETSUB99
.
GETSUB90  MOVE      SP70,FROMSUB
          MOVE      Z70,TOSUB
          DISPLAY   *P1:12,*EL,"Report Subjective From: Start"
          DISPLAY   *P1:13,*EL,"                  To  : Finish"
.
GETSUB99  RETURN
.
.------------------------------------------------------------
. Get Subjective Range
.------------------------------------------------------------
GETCST00  MATCH     SP70,FROMLED
          GOTO      GETCST90 IF EQUAL
.
          MOVE      SP70,FROMCST
          KEYIN     *P1:14,*EL,"Report Cost Cent. From: ",FROMCST
          ENDSET    FROMCST
          APPEND    SP70,FROMCST
          RESET     FROMCST
          MATCH     SP70,FROMCST
          IF        !@EQUAL
            PACK      KEY14,FROMLED,FROMCST,SP70
            CALL      RDFMCC1
            BRANCH    OVRCD,GETCST00
            DISPLAY   *P1:14,*EL,"Report Cost Cent. From: ",FROMCST,SP1,FMCCDESC
          ELSE
            DISPLAY   *P1:14,*EL,"Report Cost Cent. From: Start"
          ENDIF
GETCST10  KEYIN     *P1:15,*EL,"                  To  : ",TOCST
          ENDSET    TOCST
          APPEND    SP70,TOCST
          RESET     TOCST
          MATCH     SP70,TOCST
          IF        !@EQUAL
            PACK      KEY14,FROMLED,TOCST,SP70
            CALL      RDFMCC1
            BRANCH    OVRCD,GETCST10
            DISPLAY   *P1:15,*EL,"                  To  : ",TOCST,SP1,FMCCDESC
          ELSE
            MOVE      Z70,TOCST
            DISPLAY   *P1:15,*EL,"                  To  : Finish"
          ENDIF
          GOTO      GETCST99
.
GETCST90  MOVE      SP70,FROMCST
          MOVE      Z70,TOCST
          DISPLAY   *P1:14,*EL,"Report Cost Cent. From: Start"
          DISPLAY   *P1:15,*EL,"                  To  : Finish"
.
GETCST99  RETURN
.
.****************************************************************************
.  GCOD - get subjective and cost codes from account code    Called by lots
.        Requires - ACCOUNT   (account code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY1,KEY1,KEY1:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
