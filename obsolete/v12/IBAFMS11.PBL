. **********************************************************************
. * System    :   Budget System                                        *
. * Program   :   IBAFMS11                                             *
. * Desc      :   Security Allocation                                  *
. **********************************************************************
. * Date      :   12.10.1990                                           *
. * Author    :   Paul Duncan                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.01  28.10.2002 Sunil Kumar  SRF 15692                        *
. *           Mods to fix the description column                       *
. **********************************************************************
. * VF.00.01  02.11.1999 Sandra Barcham                                *
. *           Change ITEMNO to XITEMNO                                 *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS11
.             open files and initialise variables
.             Keyin PCODE
.             display accounts under security code
.             WHILE user wants to add/delete DO
.                  get selected item
.                  if selected item on screen
.                       Ask if ok to delete
.                       if yes - delete
.                       end if
.                  if selected item greater than on screen
.                       while user wants to add
.                          let him add
.                       end while
.                  end if
.
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSAMAFD/INC
          INC       FMSGURFD/INC
          INC       FMSLMAFD/INC
          INC       FMSNRGFD/INC
          INC       FMSNRJFD/INC
          INC       FMSRDFFD/INC
          INC       FMSSQUFD/INC
          INC       IBAPASFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
DISPCNT    FORM     2
.
KEYINNO    FORM     1
.
MAXDISP    FORM     2
MODE       FORM     1
.
NEXT       FORM     1
NUMREC     FORM     2
.
OLDPCODE   DIM      4
OLDUSER    DIM      30
OPTIONA    FORM     1
OPTIONC    FORM     2
.
PAGENO     FORM     3
PCODE      DIM      4
.
RECCNT     FORM     2
.
SEL01      DIM      17
SEL02      DIM      17
SEL03      DIM      17
SEL04      DIM      17
SEL05      DIM      17
SEL06      DIM      17
SEL07      DIM      17
SEL08      DIM      17
SEL09      DIM      17
SEL10      DIM      17
SEL11      DIM      17
SEL12      DIM      17
SEL13      DIM      17
SEL14      DIM      17
SEL15      DIM      17
SEL16      DIM      17
.
VALOPTN    DIM      4
.
.---- new variables for screen B ----
.
MAXITEMB  FORM      "17"               * maximum no. of items on screen B + 1
.
REPTYPE   INIT      "                 "
REPTYPE0  INIT      "Internal FMS"
REPTYPE1  INIT      "External Unix/SQL"
ABBTYPE   INIT      "            "
ABBTYPE0  INIT      "Internal FMS"
ABBTYPE1  INIT      "Ext Unix/SQL"
.
REPSTAT   INIT      "                        "
REPSTAT0  INIT      "Run At Any Time"
REPSTAT1  INIT      "Only After Period Locked"
ABBSTAT   INIT      "                    "
ABBSTAT0  INIT      "Run At Any Time"
ABBSTAT1  INIT      "Run If Period Locked"
.
ACCEPT    FORM      1                  * accept mode mode
CURPAGE   FORM      3                  * current page number
ITEMNUM   FORM      2                  * item number
MORE      FORM      1                  * more data (1=yes)
OPTIONB   FORM      2                  * screen selection keyin var
SAVITEM   FORM      2                  * item number for Screen B
SKEY      DIM       35                 * key save for Screen B
.
PRGID     INIT      "IBAFMS11"
PRGNAM    INIT      "Security Allocation"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      OPTN0000           * input or copy
          BRANCH    OPTIONA,ML1000,ML1000,ML1000,ML2000,ML2000,ML2000
          GOTO      ML9999
.
ML1000    MOVE      FOUR,CVERT
          MOVE      ONE,KEYINNO
          CALL      PASS0000           * keyin PCODE
          BRANCH    EXIT,ML0100,ML9999
          COMPARE   "1",OPTIONA
          CALL      PROC0000 IF EQUAL  * process security codes
          COMPARE   "2",OPTIONA
          CALL      SELB0000 IF EQUAL  * process report codes
          COMPARE   "3",OPTIONA
          CALL      SELE0000 IF EQUAL  * process template report codes
          GOTO      ML0100             * get next entry
.
ML2000    MOVE      FOUR,CVERT
          MOVE      TWO,KEYINNO
          CALL      PASS0000           * keyin from PCODE
          BRANCH    EXIT,ML0100,ML9999
.
          MOVE      PCODE,OLDPCODE     * save old pcode
          MOVE      SECUSER,OLDUSER
.
ML2100    CALL      TOPS0000           * keyin to PCODE
          BRANCH    EXIT,ML2000,ML0100
          COMPARE   "4",OPTIONA
          CALL      COPY0000 IF EQUAL  * copy security codes
          COMPARE   "5",OPTIONA
          CALL      COPB0000 IF EQUAL  * copy report codes
          COMPARE   "6",OPTIONA
          CALL      COPC0000 IF EQUAL  * copy template report codes
          GOTO      ML2100
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening ihapassf";
          OPEN      IHAPASS1,"ihapassf"
.
          DISPLAY   *P64:24,"fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmsrdfaf";
          OPEN      FMSRDFA1,"fmsrdfaf"
.
          DISPLAY   *P64:24,"fmsguraf";
          OPEN      FMSGURA1,"fmsguraf"
.
          DISPLAY   *P64:24,"fmsnrgaf";
          OPEN      FMSNRGA1,"fmsnrgaf"
.
          DISPLAY   *P64:24,"fmsnrjaf";
          OPEN      FMSNRJA1,"fmsnrjaf"
.
          DISPLAY   *P64:24,"fmssquaf";
          OPEN      FMSSQUA1,"fmssquaf"
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.* OPTN - Main options             Called by ML0100                      *
.*************************************************************************
OPTN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*P1:5,"1",*P1:6,"2":
                           *P1:7,"3",*P1:8,"4":
                           *P1:9,"5",*P1:10,"6",*HOFF:
                    *P2:4," = Exit":
                    *P2:5," = Input/Modify Security Allocation":
                    *P2:6," = Input/Modify Report Allocation":
                    *P2:7," = Input/Modify Report Template Allocation":
                    *P2:8," = Copy Security Allocation":
                    *P2:9," = Copy Report Allocation":
                   *P2:10," = Copy Report Template Allocation":
                   *P1:12,"Select Option : "
.
OPTN1000  KEYIN     *P17:12,*DV,UNDLN1,*P17:12,*V2LON,OPTIONA
          BRANCH    OPTIONA,OPTN2000,OPTN2500,OPTN2600:
                            OPTN3000,OPTN3500,OPTN3600
.
          COMPARE   "0",OPTIONA         * exit?
          GOTO      OPTN9999 IF EQUAL
.
OPTN2000  DISPLAY   *P60:3,*V2LON,"Security Allocation"
          GOTO      OPTN9999
.
OPTN2500  DISPLAY   *P60:3,*V2LON,"Report Allocation  "
          GOTO      OPTN9999
.
OPTN2600  DISPLAY   *P60:3,*V2LON,"Template Allocation"
          GOTO      OPTN9999
.
OPTN3000  DISPLAY   *P60:3,*V2LON,"Copy Security Alloc"
          GOTO      OPTN9999
.
OPTN3500  DISPLAY   *P60:3,*V2LON,"Copy Report Alloc  "
          GOTO      OPTN9999
.
OPTN3600  DISPLAY   *P60:3,*V2LON,"Copy Template Alloc"
          GOTO      OPTN9999
.
OPTN9999  RETURN 
.*******************************************************************************
. Normal Code Keyin - Code Must Exist Exit = 1 if Null Entry
********************************************************************************
PASS0000  MOVE      UNDLN70,PCODE
          BRANCH    KEYINNO,PASS0100,PASS0200,PASS0500
PASS0100  DISPLAY   *P1:4,*EF,*P5:4,*EF,"Passcode",*P26:4,":"
          GOTO      PASS0500
.
PASS0200  DISPLAY   *P1:4,*EF,*P5:4,*EF,"Copy From Passcode",*P26:4,":"
PASS0300  DISPLAY   *P5:5,*EF,"Copy To   Passcode",*P26:5,":"
.
PASS0500  KEYIN     *P28:CVERT,*EL,*DV,PCODE:
                    *P28:CVERT,*V2LON,PCODE: 
                    *P28:CVERT,*V2LON,*DV,PCODE
.
          ENDSET    PCODE
          APPEND    SP70,PCODE
          RESET     PCODE
          REP       UPPLOW,PCODE
          MATCH     SP70,PCODE             * System Code Spaces so exit set
          GOTO      PASS9000 IF EQUAL
.
          MATCH     EXITCHAR,PCODE         * Exit Selected
          GOTO      PASS9500 IF EQUAL
.
          CMATCH    QUEST,PCODE            * Help Required  
          GOTO      PASS1000 IF NOT EQUAL
          CALL      DPAS0000                  * Display List Of PCODEs
          BRANCH    EXIT,PASS0500,PASS0500
          MOVE      SECODE,PCODE
          BRANCH    KEYINNO,PASS0600,PASS0700,PASS0800
PASS0600  DISPLAY   *P5:4,*EF,"Passcode",*P26:4,":"
          GOTO      PASS0900
.
PASS0700  DISPLAY   *P5:4,*EF,"Copy From Passcode",*P26:4,":"
          DISPLAY   *P5:5,*EF,"Copy To   Passcode",*P26:5,":"
          GOTO      PASS0900
.
PASS0800  DISPLAY   *P5:4,*EF,"Copy From Passcode",*P26:4,": ",*V2LON:
                    *P28:4,OLDPCODE,SP2,*HOFF,OLDUSER
          DISPLAY   *P5:CVERT,*EF,"Copy To   Passcode",*P26:CVERT,":"
.
PASS0900  ENDSET    PCODE
          APPEND    SP70,PCODE
          RESET     PCODE
          MATCH     SP70,PCODE             * System Code Spaces so exit set
          GOTO      PASS0000 IF EQUAL
.
PASS1000  PACK      KEY4,PCODE
          CALL      RDPASS1                                   
          BRANCH    OVRCD,PASS8000
.
          DISPLAY   *P28:CVERT,*V2LON,PCODE,*HOFF,SP2,SECUSER
.
          MOVE      ZERO,EXIT                 * no entry so exit is set
          GOTO      PASS9900
.
PASS8000  DISPLAY   *P1:24,*EL,*B,"Passcode Does Not Exist - ";
          CALL      HITENTER
          GOTO      PASS0000
.
PASS9000  MOVE      ONE,EXIT                  * null entry so exit is set
          GOTO      PASS9900
.
PASS9500  MOVE      TWO,EXIT                  * Exit character entered    
.
PASS9900  RETURN
.******************************************************************************
. Display List of All Codes
.******************************************************************************
DPAS0000  
HIBSEA00
          MOVE      ZERO,CSCRSIZ
          IF        HTOP<3
            MOVE      "12",HTOP
            MOVE      "24",HBOT
            MOVE      "30",HLEF
            MOVE      "80",HRIG
          ENDIF
HIBSEA04
          CALL      GSCRN000
          BRANCH    EXIT,HIBSEA99
          MOVE      STDCOL00,STDCOL01
          ADD       " 5",STDCOL01
          DISPLAY   *PSTDCOL01:STDROW,*V2LON,*ULON,"Passcode"             
.
          MOVE      STDCOL01,STDCOL02
          ADD       " 9",STDCOL02
          DISPLAY   *PSTDCOL02:STDROW,*V2LON,*ULON,"User Name"        
.
          MOVE      STDCOL02,STDCOL03
          ADD       "34",STDCOL03
HIBSEA08
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          MOVE      SP70,SECODE
          PACK      KEY4,SECODE,SP70                                          
.                                                                               
.                                                                               
          CALL      RDSPASS1 
HIBSEA10
          CALL      RDKPASS1 
          BRANCH    OVRCD,HIBSEA15
          PACK      KEY4,SECODE,SP70                                          
.                                                                               
.                                                                               
          BRANCH    CSEARCH,HIBSEA12
          CALL      HIBSEA60
          BRANCH    OVRCD,HIBSEA10
HIBSEA12
          ADD       ONE,XITEMNO
          ADD       ONE,STDROW
          STORE     KEY4,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          DISPLAY   *PSTDCOL00:STDROW,SP1,*V2LON,XITEMNO,DOT
          DISPLAY   *PSTDCOL01:STDROW,SECODE
          DISPLAY   *PSTDCOL02:STDROW,SECUSER
          COMPARE   MAXITEM,XITEMNO
          GOTO      HIBSEA10 IF NOT EQUAL
HIBSEA15
.                                                                               
          MOVE      ONE,DITEM
          MOVE      MINITEM,DROW
          ADD       ONE,DROW
          DISPLAY   *PSTDCOL00:DROW,*V2LON,*HON,SP1,DITEM,DOT
          CLIP
          FLUSH     HLEF,HTOP,HRIG,HBOT
.
HIBSEA20
          CALL      HSCRI000
          BRANCH    EXIT,HIBSEA30,HIBSEA35,HIBSEA40,HIBSEA45,HIBSEA04:
                              HIBSEA91,HIBSEA50
          GOTO      HIBSEA92
HIBSEA30
          CALL      RDKPASS1 
          BRANCH    OVRCD,HIBSEA85
          PACK      KEY4,SECODE,SP70                                          
.                                                                               
.                                                                               
          CALL      RDPPASS1 
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HIBSEA10
HIBSEA35
          MOVE      ST1,KEY4 
          CALL      RDPASS1 
          CALL      RDPPASS1 
          BRANCH    OVRCD,HIBSEA85
          PACK      KEY4,SECODE,SP70                                          
.                                                                               
.                                                                               
.                                                                               
.                                                                               
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,XITEMNO
HIBSEA36
          CALL      RDPPASS1 
          BRANCH    OVRCD,HIBSEA37
          PACK      KEY4,SECODE,SP70                                          
.                                                                               
.                                                                               
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HIBSEA36 IF NOT EQUAL
HIBSEA37
          MOVE      ZERO,XITEMNO
          GOTO      HIBSEA10
HIBSEA40
          MOVE      ST1,KEY4 
          CALL      RDPASS1 
          CALL      RDPPASS1 
          BRANCH    OVRCD,HIBSEA85
          PACK      KEY4,SECODE,SP70                                          
.                                                                               
.                                                                               
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HIBSEA08
HIBSEA45
          CALL      RDKPASS1 
          BRANCH    OVRCD,HIBSEA85
          PACK      KEY4,SECODE,SP70                                          
.                                                                               
.                                                                               
          SUSPEND
          CLIP      1,1,CRIG,24
.
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          MOVE      ZERO,XITEMNO
          PACK      KEY2,Z70                                                    
          MOVE      MINITEM,STDROW
          MOVE      MAXITEM,XITEMNO
          CALL      RDSPASS1 
HIBSEA46
          CALL      RDPPASS1 
          BRANCH    OVRCD,HIBSEA47
          PACK      KEY4,SECODE,SP70                                          
.                                                                               
.                                                                               
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      HIBSEA46 IF NOT EQUAL
HIBSEA47
          MOVE      ZERO,XITEMNO
          GOTO      HIBSEA10
HIBSEA50  COMPARE   ZERO,CSEARCH
          GOTO      HIBSEA55 IF EQUAL
          MOVE      ZERO,CSEARCH
          MOVE      ZERO,XITEMNO
          MOVE      MINITEM,STDROW
          ADD       ONE,STDROW
          UNPACK    SP70,SCHFLD01,SCHFLD02,SCHFLD03,SCHFLD04,SCHFLD05
          UNPACK    SP70,SCHFLD06,SCHFLD07,SCHFLD08,SCHFLD09,SCHFLD10
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          DISPLAY   *PSTDCOL00:STDROW,*V2LON,*HON,"Sch"
          KEYIN     *PSTDCOL01:STDROW,*V2LON,SCHFLD01
          RESET     SCHFLD01
          KEYIN     *PSTDCOL02:STDROW,*V2LON,SCHFLD02
          RESET     SCHFLD02
          PACK      KEY8,SP70
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HIBSEA08
HIBSEA55  MOVE      ONE,CSEARCH
          PACK      KEY8,SP70
          SUSPEND
          CLIP      1,1,CRIG,24
          BOXCLR    CLEF,CTOP,CRIG,CBOT
          GOTO      HIBSEA08
HIBSEA60  MOVE      ZERO,OVRCD
          MATCH     SP70,SCHFLD01
          GOTO      HIBSEA61 IF EQUAL
          MATCH     SCHFLD01,SECODE
          GOTO      HIBSEA72 IF NOT EQUAL
HIBSEA61
          MATCH     SP70,SCHFLD02
          GOTO      HIBSEA62 IF EQUAL
          MATCH     SCHFLD02,SECUSER
          GOTO      HIBSEA72 IF NOT EQUAL
HIBSEA62
HIBSEA63
HIBSEA64
HIBSEA65
HIBSEA66
HIBSEA67
HIBSEA68
HIBSEA69
HIBSEA70
          GOTO      HIBSEA75
HIBSEA72  MOVE      ONE,OVRCD
HIBSEA75  RETURN
HIBSEA85
          LOAD      KEY4,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY4,SECODE                                               
          CALL      RDPASS1 
HIBSEA90
.                                                                               
          BEEP
          GOTO      HIBSEA20
HIBSEA91
          MOVE      SP70,SECNUMB
          MOVE      SP70,SECUSER
          MOVE      ZERO,SECACCT
          MOVE      SP70,SECNUMB1 
          MOVE      SP70,SECNUMB2 
          MOVE      ZERO,SECDIRCT
          MOVE      SP70,SECMENU 
          MOVE      SP70,SECPRINT 
          MOVE      SP70,SECDEPT
          MOVE      SP70,SECMNNUM
          MOVE      SP70,SECMAIL
          MOVE      SP70,SECSPARE
          MOVE      SP70,KEY4 
          MOVE      SP70,SECODE
          GOTO      HIBSEA96
HIBSEA92
          MOVE      SP70,KEY4 
          MOVE      SP70,SECODE
          LOAD      KEY4,CCITEM,ST1,ST2,ST3,ST4,ST5:                            
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17
          UNPACK    KEY4,SECODE                                               
HIBSEA96
          PUTSCR    CSSCRNUM,HLEF,HTOP,HRIG,HBOT
          CALL      FRESCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
HIBSEA99
          RETURN

.*************************************************************************
.* PROC - Display all related accounts and process selections            *
.*        Returns : EXIT = 1 - exit = 0 - valid item chosen              *
.*                     called by : ML2000                                *
.*************************************************************************
PROC0000  MOVE      ONE,NEXT           *assume no next screen
          MOVE      SEVEN,CVERT
          MOVE      ONE,DISPCNT
          DISPLAY   *P1:6,*V2LON,*ULON,"Item",*P6:6,"Ledger/Account":
                    *P24:6,"Description    ",SP20:
                    *P65:6,"Seq";
          PACK      KEY21,PCODE,SP20
          CALL      RSFMSQ1
.
          MOVE      ONE,POSTFLAG
          MOVE      ONE,PAGENO
.
PROC1000  MOVE      "16",NUMREC
          CALL      DACN0000            * Display next page of relative accounts
          COMPARE   TWO,EXIT            * none there - straight to insert mode
          GOTO      PROC6000 IF EQUAL
.
PROC1500  CLEAR     VALOPTN
          DISPLAY   *P1:24,*EL,"Select Item, ";
          MOVE      "23",CCOL
.
          BRANCH    NEXT,PROC2000       * is there a next page
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
          APPEND    ANSN,VALOPTN
.
PROC2000  COMPARE   ONE,PAGENO         * no previous page if we are on page one
          GOTO      PROC3000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious Page, ";
          ADD       "17",CCOL
          APPEND    ANSP,VALOPTN
.
PROC3000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it ?"
          APPEND    ANSX,VALOPTN
.
PROC4000  KEYIN     *PCCOL:24,*EL,*DV,UNDLN2,*JR,*PCCOL:24,*V2LON,DIM2
          REP       UPPLOW,DIM2
          TYPE      DIM2
          GOTO      PROC9000 IF EQUAL
.
          MATCH     SP1,DIM2         * cant enter two letters
          GOTO      PROC4000 IF NOT EQUAL
          UNPACK    DIM2,ANS,ANS
          RESET     VALOPTN
          SCAN      ANS,VALOPTN            * valid option chosen?
          GOTO      PROC4000 IF NOT EQUAL
          RESET     VALOPTN
.
          REP       "N1P2X3",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,PROC4500,PROC5000,PROC8000
.
          GOTO      PROC4000
.
PROC4500  ADD       ONE,PAGENO
          DISPLAY   *P1:9,*EF
          GOTO      PROC1000
.
PROC5000  COMPARE   "2",PAGENO       * if on second page - go from start
          GOTO      PROC0000 IF EQUAL
          CALL      PREV0000          * read back a page so we can read 
                                      * forward a page
          GOTO      PROC1000
.
PROC6000  MOVE      ONE,MODE          * don't go to start of file
          CALL      ISEC0000          * go back into input mode
          BRANCH    EXIT,PROC9999
          GOTO      PROC0000
PROC8000  MOVE      TRUE,EXIT          
          MOVE      ONE,POSTFLAG
          GOTO      PROC9999
.
PROC9000  MOVE      ZERO,CCITEM
          MOVE      DIM2,CCITEM
          COMPARE   CCITEM,ZERO    * cant be less than zero
          GOTO      PROC4000 IF NOT LESS
. 
          COMPARE   "17",CCITEM         * a valid selection?
          GOTO      PROC4000 IF NOT LESS
. 
          COMPARE   CCITEM,MAXDISP      * a valid selection?
          GOTO      PROC6000 IF LESS
. 
          CALL      DEL0000         * ok to delete and delete
          BRANCH    EXIT,PROC1000,PROC1500,PROC9999
          GOTO      PROC0000
.
PROC9999  RETURN
.*************************************************************************
.* DEL - OK to delete - delete if yes - dont if no   Called by PROC9000  *
.*************************************************************************
DEL0000   MOVE      DIM2,FORM2
          MOVE      SP70,KEY17
          LOAD      KEY17,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                 SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14:
                                 SEL15,SEL16
          UNPACK    KEY17,FMSQLEDG,FMSQSEQ,FMSQACCT
          PACK      KEY21,PCODE,KEY17
          CALL      RDFMSQ1        * read the security file chosen
          PACK      KEY14,FMSQLEDG,FMSQACCT
          CALL      RDFMAM1 
.                                           * SRF 15692 Start
          IF        OVRCD=1
            MOVE      SP70,FMAMDESC
          ENDIF
.                                           * SRF 15692 End
          MOVE      FORM2,CVERT
          ADD       SIX,CVERT
          DISPLAY   *P1:CVERT,*EL,*V2LON,DIM2,DOT:
                    *P6:CVERT,FMSQLEDG,SLASH,FMSQACCT:
                    *P24:CVERT,FMAMDESC:
                    *P65:CVERT,FMSQSEQ;
.
          CALL      DELQST         * ok to delete
          BRANCH    CEXIT,DEL1000,DEL2000,DEL3000
.
DEL1000   CALL      DEFMSQ1        * delete
          MOVE      ONE,EXIT
          PACK      KEY21,PCODE,SEL01  * set up redisplay of screen
          CALL      RSFMSQ1
          CALL      RPFMSQ1
          GOTO      DEL9999
.
DEL2000   MOVE      FORM2,CVERT
          ADD       SIX,CVERT
          DISPLAY   *P1:CVERT,*EL,*V2LON,DIM2,*HOFF,DOT:
                    *P6:CVERT,FMSQLEDG,SLASH,FMSQACCT:
                    *P24:CVERT,FMAMDESC:
                    *P65:CVERT,FMSQSEQ;
          MOVE      TWO,EXIT
          GOTO      DEL9999
.
DEL3000   MOVE      THREE,EXIT
.
DEL9999   RETURN
.
.*************************************************************************
.* DACN - Display the next page of accounts on file  Called by Lots      *
.*        Requires the file pointer to be positioned before the first    *
.*        record that we wish to display                                 *
.*************************************************************************
DACN0000  MOVE      ONE,DISPCNT
          MOVE      ONE,NEXT
          MOVE      SEVEN,CVERT
          MOVE      ZERO,RECCNT
          DISPLAY   *P1:7,*EF
.
          CALL      CSEL0000          * clear screen variables(SEL)
          MOVE      SP70,FMAMDESC           *  SRF 15692
DACN1000  CALL      RKFMSQ1           * read next record
          BRANCH    OVRCD,DACN9000
.
          MATCH     FMSQSEC,PCODE  * right ledger?
          IF        !@EQUAL
            IF        RECCNT>=NUMREC
              GOTO      DACN8000
            ELSE
              GOTO      DACN9000
            ENDIF
          ENDIF
          GOTO      DACN9000 IF NOT EQUAL
.
          COMPARE   "23",CVERT        * full page?
          GOTO      DACN8000 IF EQUAL
.
          PACK      KEY14,FMSQLEDG,FMSQACCT
          CALL      RDFMAM1          * get account description
.                                           * SRF 15692 Start
          IF        OVRCD=1
            MOVE      SP70,FMAMDESC
          ENDIF
.                                           * SRF 15692 End
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P6:CVERT,FMSQLEDG:
                    SLASH,FMSQACCT:
                    *P24:CVERT,FMAMDESC:
                    *P65:CVERT,FMSQSEQ;
          ADD       ONE,RECCNT
          MOVE      CVERT,FORM2
          SUB       "6",FORM2
          PACK      KEY17,FMSQLEDG,FMSQSEQ,FMSQACCT,SP70
          STORE     KEY17,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07,SEL08:
                                SEL09,SEL10,SEL11,SEL12,SEL13,SEL14,SEL15,SEL16
          MOVE      DISPCNT,MAXDISP
          ADD       ONE,CVERT
          ADD       ONE,DISPCNT
          COMPARE   "16",NUMREC         * do we want to display the whole screen
          GOTO      DACN1000 IF EQUAL
.
          COMPARE   RECCNT,NUMREC       * if not have we displayed enough?
          GOTO      DACN1000 IF NOT EQUAL
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DACN9999
.
DACN8000  MOVE      ZERO,NEXT        * there is a next page
          CALL      RPFMSQ1          * read back so when next page only 
.                                    * have to read forward
          GOTO      DACN9999
.
DACN9000  COMPARE   "7",CVERT
          GOTO      DACN9500 IF NOT EQUAL
          MOVE      ZERO,MAXDISP
.
          MOVE      TWO,EXIT
          GOTO      DACN9999
.
DACN9500  MOVE      ONE,EXIT         * no next page
.
DACN9999  RETURN
. 
.*************************************************************************
.* CURP - Display current page                 Called by RBPFFM30        *
.*************************************************************************
CURP0000  PACK      KEY21,PCODE,SEL01
          CALL      RSFMSQ1           * read details of first record on screen
          CALL      RPFMSQ1
          BRANCH    OVRCD,CURP1000
          GOTO      CURP2000
.
CURP1000  MOVE      SP20,KEY21
          CALL      RSFMSQ1    
CURP2000  DISPLAY   *P5:4,*EF,"Passcode",*P26:4,COLON:
                    *P28:4,*V2LON,PCODE,*HOFF,SP2,SECUSER:
                    *P1:6,*V2LON,*ULON,"Item",*P6:6,"Ledger/Account":
                    *P24:6,"Description    ",SP20:
                    *P65:6,"Seq";
          CALL      DACN0000          * display screen
.
CURP9999  RETURN
.*************************************************************************
.* CSEL - Clear the SEL variables               Called by DACN0000       *
.*************************************************************************
CSEL0000  UNPACK    SP70,SEL01,SEL02,SEL03,SEL04,SEL05
          UNPACK    SP70,SEL06,SEL07,SEL08,SEL09,SEL10
          UNPACK    SP70,SEL11,SEL12,SEL13,SEL14,SEL15,SEL16
.
CSEL9999  RETURN
.*************************************************************************
.* PREV - read back 14 records from first one on screen for previous     *
.*        page                                                           *
.*                     called by : SACN                                  *
.*************************************************************************
PREV0000  PACK      KEY21,PCODE,SEL01
          CALL      RSFMSQ1
          MOVE      ONE,FORM2
          SUB       ONE,PAGENO
.
PREV1000  CALL      RPFMSQ1         * read back one
          BRANCH    OVRCD,PREV9000
.
          COMPARE   "17",FORM2      * have we read back far enough
          GOTO      PREV9999 IF EQUAL * go out if so
.
          ADD       ONE,FORM2
          GOTO      PREV1000
.
PREV9000  MOVE      SP70,KEY35      * reached eof - posy at start
          CALL      RSFMSQ1
.
PREV9999  RETURN
.*************************************************************************
.* ISEC - Input security allocations            Called by PROC6000       *
.*************************************************************************
ISEC0000  MOVE      MAXDISP,DISPCNT
          ADD       ONE,DISPCNT
          MOVE      DISPCNT,CVERT
          ADD       "6",CVERT
ISEC1000  DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT;
.
ISEC2000  MOVE      "6",CCOL              * set up column variable          
          CALL      KLMAFM00              * standard ledger keyin
          BRANCH    EXIT,ISEC9000,ISEC9500
.
          MOVE      FMLALEDG,FMSQLEDG
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P6:CVERT,FMSQLEDG:
                    SLASH;
.         
ISEC3000  MOVE      "9",CCOL
          CALL      KAMAFM00              * account keyin
          BRANCH    EXIT,ISEC2000,ISEC9500
.
          MOVE      FMLALEDG,FMSQLEDG
          MOVE      FMAMACCT,FMSQACCT
          DISPLAY   *P1:CVERT,*EL,*V2LON,DISPCNT,*HOFF,DOT,*P6:CVERT,FMSQLEDG:
                    SLASH,FMSQACCT,*P24:CVERT,FMAMDESC;
          KEYIN     *P65:CVERT,"___":
                    *P65:CVERT,*V2LON,*DE,*JR,FMSQSEQ;
          PACK      FMSQSEQ,FMSQSEQ,SP70
          REP       " 0",FMSQSEQ
          DISPLAY   *P65:CVERT,FMSQSEQ,*EL;
          PACK      KEY17,FMSQLEDG,FMSQSEQ,FMSQACCT,SP70
          STORE     KEY17,DISPCNT,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                  SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14: 
                                  SEL15,SEL16
          MOVE      PCODE,FMSQSEC
          PACK      KEY21,PCODE,KEY17,SP70
          CALL      RAFMSQ1                * is it on file
          BRANCH    OVRCD,ISEC4000 
.
          DISPLAY   *P1:24,"Record already on file - ";
          CALL      HITENTER
          GOTO      ISEC3000 
.
ISEC4000  ADD       ONE,DISPCNT
          ADD       ONE,CVERT
          CALL      WRFMSQ1
          COMPARE   "23",CVERT              * full page
          GOTO      ISEC1000 IF LESS
          DISPLAY   *P1:7,*EF
          MOVE      "7",CVERT
          MOVE      "1",DISPCNT
          ADD       ONE,PAGENO
          GOTO      ISEC1000
.
ISEC9000  COMPARE   "1",PAGENO             * are we on the first page
          GOTO      ISEC9500 IF NOT EQUAL   * no - thats cool - go out
.
          COMPARE   "1",DISPCNT             * yes - first line?
          GOTO      ISEC9500 IF NOT EQUAL     * no - thats cool - go out
.
          MOVE      TRUE,EXIT
          GOTO      ISEC9999
.
ISEC9500  MOVE      FALSE,EXIT
.
ISEC9999  RETURN
.*************************************************************************
.* TOPS - Input passcode to copy to.            Called by ML2000         *
.*************************************************************************
TOPS0000  DISPLAY   *P28:5,*EF;
          MOVE      THREE,KEYINNO
          MOVE      FIVE,CVERT
          MOVE      FALSE,EXIT
          CALL      PASS0000           * keyin copy to
          BRANCH    EXIT,TOPS9999,TOPS9999
.
          MATCH     PCODE,OLDPCODE
          GOTO      TOPS5000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EL,"Cannot Copy Passcode to Itself - ";
          CALL      HITENTER
          GOTO      TOPS0000
.
TOPS5000  CALL      CONTQST           * ok to continue?
          BRANCH    CEXIT,TOPS9999,TOPS0000,TOPS8000
.
TOPS8000  MOVE      TWO,EXIT
.
TOPS9999  RETURN 
.
.******************************************************************************
.* SCRB - Display Screen B                       Called by SELB0000, redisps  *
.******************************************************************************
SCRB0000  DISPLAY   *P1:4,"    Passcode             : ":
                    *P28:4,*V2LON,PCODE,*HOFF,SP2,SECUSER,*EF:
                    *P1:6,*V2LON,*ULON,"Item",*P6:6,"Seq":
                    *P10:6,"Description                        ":
                    *P46:6,"Type        ",*P59:6,"Status              "
.
SCRB9999  RETURN
.******************************************************************************
.* SELB - Perform Screen B                       Called By ML0000             *
.******************************************************************************
SELB0000  CALL      SCRB0000           * display Screen B
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
.
SELB1000  CALL      DATB0000           * display data
.
          CALL      MQSB0000           * get desired action
          BRANCH    EXIT,SELB9999      * quit screen ?
          MOVE      SP70,SKEY
          LOAD      SKEY,OPTIONB,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY7,SKEY,SP70
          CALL      RDFMGU1
.
          MOVE      OVRCD,ACCEPT       * set up params for SELC
          CALL      SELC0000           * do sub screen
.
          CALL      SCRB0000           * display Screen B
          GOTO      SELB1000
.
SELB9999  RETURN
.******************************************************************************
.* DATB - display Screen B data                  Called By MQSB,SELB          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMB (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATB0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17
          PACK      KEY7,PCODE,SP70
          CALL      RSFMGU1                      * go to start of records
          MOVE      "6",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:7,*EF;                   * clear data area on screen
.
DATB1000  CALL      RKFMGU1                      * get next record
          BRANCH    OVRCD,DATB9000               * no more records ?
          MATCH     PCODE,FMGUUID
          GOTO      DATB9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      DATB2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATB2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATB1000 IF LESS             * not up to current page ?
          GOTO      DATB9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      ABBTYPE0,ABBTYPE
          LOAD      ABBTYPE,FMGUTYP,ABBTYPE1
          MOVE      ABBSTAT0,ABBSTAT
          LOAD      ABBSTAT,FMGUSTA,ABBSTAT1
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P6:LINENO,FMGUSEQ,*P10:LINENO,FMGUDES:
                    *P46:LINENO,ABBTYPE,*P59:LINENO,ABBSTAT
          PACK      KEY7,FMGUUID,FMGUSEQ         * save key
          STORE     KEY7,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATB1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATB9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATB9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATB9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      DATB9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATB9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATB9999
.
.---- reached EOP before EOF ----
.
DATB9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMB,ITEMNUM
.
DATB9999  RETURN
.******************************************************************************
.* MQSB - Main question for Screen B             Called By SELB0000           *
.******************************************************************************
MQSB0000  DISPLAY   *P1:24,"Select Item";        * display prompt
          MOVE      "11",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSB1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQSB1000  COMPARE   PAGENO,ONE
          GOTO      MQSB2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQSB2000  DISPLAY   ", e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "12",CCOL
.
MQSB3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQSB4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQSB4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATB0000
          GOTO      MQSB0000
.
MQSB4000  COMPARE   PAGENO,ONE
          GOTO      MQSB5000 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQSB5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATB0000
          GOTO      MQSB0000
.
MQSB5000  MATCH     " X",DIM2
          GOTO      MQSB9500 IF EQUAL
.
          MOVE      ZERO,OPTIONB
          MOVE      DIM2,OPTIONB
          COMPARE   OPTIONB,ZERO
          GOTO      MQSB9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQSB3000           * get another option
.
MQSB9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSB9999
.
MQSB9500  MOVE      ONE,EXIT           * quit
.
MQSB9999  RETURN
.******************************************************************************
.* SCRE - Display Screen E                       Called by SELE0000, redisps  *
.******************************************************************************
SCRE0000  DISPLAY   *P1:4,"    Passcode             : ":
                    *P28:4,*V2LON,PCODE,*HOFF,SP2,SECUSER,*EF:
                    *P1:6,*V2LON,*ULON,"Item",*P6:6,"Seq":
                    *P10:6,"Description                        ":
                    *P46:6,"Type        ",*P59:6,"Status              "
.
SCRE9999  RETURN
.******************************************************************************
.* SELE - Perform Screen B                       Called By ML0000             *
.******************************************************************************
SELE0000  CALL      SCRE0000           * display Screen B
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
.
SELE1000  CALL      DATE0000           * display data
.
          CALL      MQSE0000           * get desired action
          BRANCH    EXIT,SELE9999      * quit screen ?
          MOVE      SP70,SKEY
          LOAD      SKEY,OPTIONB,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY7,SKEY,SP70
          CALL      RDFMNJ1
.
          MOVE      OVRCD,ACCEPT       * set up params for SELD
          CALL      SELD0000           * do sub screen
.
          CALL      SCRE0000           * display Screen B
          GOTO      SELE1000
.
SELE9999  RETURN
.******************************************************************************
.* DATE - display Screen B data                  Called By MQSE,SELE          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMB (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*                  MORE     (1=more data)                                    *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATE0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17
          PACK      KEY7,PCODE,SP70
          CALL      RSFMNJ1                      * go to start of records
          MOVE      "6",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:7,*EF;                   * clear data area on screen
.
DATE1000  CALL      RKFMNJ1                      * get next record
          BRANCH    OVRCD,DATE9000               * no more records ?
          MATCH     PCODE,FMNJUID
          GOTO      DATE9000 IF NOT EQUAL        * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      DATE2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATE2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATE1000 IF LESS             * not up to current page ?
          GOTO      DATE9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      ABBTYPE0,ABBTYPE
          LOAD      ABBTYPE,FMNJTYP,ABBTYPE1
          MOVE      ABBSTAT0,ABBSTAT
          LOAD      ABBSTAT,FMNJSTA,ABBSTAT1
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P6:LINENO,FMNJSEQ,*P10:LINENO,FMNJDES:
                    *P46:LINENO,ABBTYPE,*P59:LINENO,ABBSTAT
          PACK      KEY7,FMNJUID,FMNJSEQ         * save key
          STORE     KEY7,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATE1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATE9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATE9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATE9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMB,ITEMNUM
          GOTO      DATE9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATE9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATE9999
.
.---- reached EOP before EOF ----
.
DATE9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMB,ITEMNUM
.
DATE9999  RETURN
.******************************************************************************
.* MQSE - Main question for Screen B             Called By SELE0000           *
.******************************************************************************
MQSE0000  DISPLAY   *P1:24,"Select Item";        * display prompt
          MOVE      "11",CCOL
          COMPARE   ONE,MORE
          GOTO      MQSE1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQSE1000  COMPARE   PAGENO,ONE
          GOTO      MQSE2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQSE2000  DISPLAY   ", e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "12",CCOL
.
MQSE3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQSE4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQSE4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATE0000
          GOTO      MQSE0000
.
MQSE4000  COMPARE   PAGENO,ONE
          GOTO      MQSE5000 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQSE5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATE0000
          GOTO      MQSE0000
.
MQSE5000  MATCH     " X",DIM2
          GOTO      MQSE9500 IF EQUAL
.
          MOVE      ZERO,OPTIONB
          MOVE      DIM2,OPTIONB
          COMPARE   OPTIONB,ZERO
          GOTO      MQSE9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQSE3000           * get another option
.
MQSE9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSE9999
.
MQSE9500  MOVE      ONE,EXIT           * quit
.
MQSE9999  RETURN
.******************************************************************************
.* CLRV - Clear variables                        Called by SELC               *
.******************************************************************************
CLRV0000  UNPACK    SP70,REPTYPE,REPSTAT
          UNPACK    SP70,FMRDDES,FMLADESC
          UNPACK    SP70,FMGUSEQ,FMGUDES,FMGULED,FMGUREP
          UNPACK    SP70,FMGUCMD
.
          UNPACK    SP70,REPTYPE,REPSTAT
          UNPACK    SP70,FMRDDES,FMLADESC
          UNPACK    SP70,FMNJSEQ,FMNJDES,FMNJREP
          UNPACK    SP70,FMNJCMD
.
CLRV9999  RETURN
.******************************************************************************
.* SCRC - Display Screen C                       Called by SELC, redisps      *
.******************************************************************************
SCRC0000  UNPACK    SP70,REPTYPE,REPSTAT
          UNPACK    SP70,FMRDDES,FMLADESC
          MATCH     SP70,FMGUSEQ
          GOTO      SCRC1000 IF EQUAL  * any garbage entered yet ?
.
          MOVE      REPTYPE0,REPTYPE   * get report type desc
          LOAD      REPTYPE,FMGUTYP,REPTYPE1
          MOVE      REPSTAT0,REPSTAT   * get report status desc
          LOAD      REPSTAT,FMGUSTA,REPSTAT1
          PACK      KEY3,FMGUREP,SP70  * get report code desc
          CALL      RDFMRD1
          PACK      KEY2,FMGULED,SP70  * get ledger code desc
          CALL      RDFMLA1
.
SCRC1000  DISPLAY   *P1:4,"    Passcode             : ":
                    *P28:4,*V2LON,PCODE,*HOFF,SP2,SECUSER,*V2LON,*EF:
                    *P1:6," 1",*HOFF,". Sequence Code        : ",*V2LON,FMGUSEQ:
                    *P1:7," 2",*HOFF,". Description          : ",*V2LON,FMGUDES:
                    *P1:8," 3",*HOFF,". Report Type          : ",*V2LON,REPTYPE:
                    *P1:9," 4",*HOFF,". Report Status        : ",*V2LON,REPSTAT:
                   *P1:10," 5",*HOFF,". Report Code          : ":
                        *V2LON,FMGUREP,*P34:10,*HOFF,FMRDDES,*V2LON:
                   *P1:11," 6",*HOFF,". Ledger               : ":
                        *V2LON,FMGULED,*P34:11,*HOFF,FMLADESC,*V2LON:
                   *P1:12," 7",*HOFF,". Unix/SQL Command     : ",*V2LON,FMGUCMD;
.
SCRC9999  RETURN
.******************************************************************************
.* SELC - Perform Screen C                       Called by SELB               *
.*       Requires : ACCEPT   (1=accept mode on)                               *
.*        Returns : EXIT     (1=exit program)                                 *
.******************************************************************************
SELC0000  COMPARE   ONE,ACCEPT
          CALL      CLRV0000 IF EQUAL  * clear vars if in insert mode
          CALL      SCRC0000           * display screen C
          MOVE      ZERO,OPTIONC       * reset item desired
.
SELC0100  ADD       ONE,OPTIONC        * get next item
          COMPARE   ONE,ACCEPT
          CALL      MQSC0000 IF NOT EQUAL   * get option if not in accept mode
.
          MOVE      "28",CCOL          * get screen address
          MOVE      "5",CVERT
          ADD       OPTIONC,CVERT
          MOVE      OPTIONC,F2         * adjust selection for quit/continue
          ADD       THREE,F2
          BRANCH    F2,SELC9700,SELC9500,SELC9000:    * delete, quit, continue
                       SELC1100,SELC1200,SELC1300:     * execute option
                       SELC1400,SELC1500,SELC1600,SELC1700
          BRANCH    ACCEPT,SELC0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELC0100           * get another option
.
SELC0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELC0100
.
.---- option 1 ----
.
SELC1100  KEYIN     *PCCOL:CVERT,"___":
                    *PCCOL:CVERT,*V2LON,*JR,FMGUSEQ;
          PACK      FMGUSEQ,FMGUSEQ,SP70
          REP       " 0",FMGUSEQ
          DISPLAY   *PCCOL:CVERT,*V2LON,FMGUSEQ;
.
          PACK      KEY7,PCODE,FMGUSEQ,SP70
          MATCH     KEY7,SKEY
          GOTO      SELC0100 IF EQUAL  * same as old record ?
          CALL      RAFMGU1
          BRANCH    OVRCD,SELC0100     * another record exists with same seq ?
.
          DISPLAY   *P1:24,*B,*EL,"Sequence Already Allocated to Passcode - ";
          CALL      HITENTER
          GOTO      SELC1100
.
.---- option 2 ----
.
SELC1200  KEYIN     *PCCOL:CVERT,"___________________________________":
                    *PCCOL:CVERT,*V2LON,FMGUDES,*EL;
          PACK      FMGUDES,FMGUDES,SP70
          MATCH     SP70,FMGUDES
          GOTO      SELC1200 IF EQUAL  * desc blank ?
          GOTO      SELC0100
.
.---- option 3 ----
.
SELC1300  KEYIN     *P1:24,*V2LON,"1",*DV,*HOFF," = ",REPTYPE0,", ":
                           *V2LON,"2",*DV,*HOFF," = ",REPTYPE1,*EL:
                    *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,F1;
          BRANCH    F1,SELC1350,SELC1350
          BEEP
          GOTO      SELC1300
.
SELC1350  LOAD      REPTYPE,F1,REPTYPE0,REPTYPE1
          MOVE      F1,FMGUTYP
          SUB       ONE,FMGUTYP
          DISPLAY   *PCCOL:CVERT,*V2LON,REPTYPE,*P1:24,*EL;
          BRANCH    ACCEPT,SELC0100         * in accept mode ?
          BRANCH    F1,SELC1360,SELC1370    * need to key in data ?
.
SELC1360  UNPACK    SP70,FMGULED,FMGUCMD
          DISPLAY   *P28:11,*EL,*P28:12,*EL;
          MATCH     SP70,FMGUREP
          GOTO      SELC0100 IF NOT EQUAL   * report exists ?
          MOVE      "1",ACCEPT
          MOVE      "4",OPTIONC
          GOTO      SELC0100                * get data
.
SELC1370  UNPACK    SP70,FMGUREP
          DISPLAY   *P28:10,*EL;
          MATCH     SP70,FMGULED
          GOTO      SELC0100 IF NOT EQUAL   * ledger exists ?
          MOVE      "1",ACCEPT
          MOVE      "4",OPTIONC
          GOTO      SELC0100                * get data
.
.---- option 4 ----
.
SELC1400  KEYIN     *P1:24,*V2LON,"1",*DV,*HOFF," = ",REPSTAT0,", ":
                           *V2LON,"2",*DV,*HOFF," = ",REPSTAT1,*EL:
                    *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,F1;
          BRANCH    F1,SELC1490,SELC1490
          BEEP
          GOTO      SELC1400
.
SELC1490  LOAD      REPSTAT,F1,REPSTAT0,REPSTAT1
          SUB       ONE,F1
          MOVE      F1,FMGUSTA
          DISPLAY   *PCCOL:CVERT,*V2LON,REPSTAT,*P1:24,*EL;
          GOTO      SELC0100
.
.---- option 5 ----
.
SELC1500  COMPARE   ONE,FMGUTYP
          GOTO      SELC1510 IF NOT EQUAL
.
          BRANCH    ACCEPT,SELC0100    * in accept mode ?
          DISPLAY   *P1:24,*B,*EL,"Not Valid For Type '",REPTYPE1,"' - ";
          CALL      HITENTER
          GOTO      SELC0100
.
SELC1510  CALL      KRDFFM00
          BRANCH    EXIT,SELC1510,SELC9500
          MOVE      FMRDCOD,FMGUREP
          DISPLAY   *PCCOL:CVERT,*V2LON,FMGUREP,*P34:CVERT,*HOFF,FMRDDES;
          GOTO      SELC0100
.
.---- option 6 ----
.
SELC1600  COMPARE   ONE,FMGUTYP
          GOTO      SELC1610 IF EQUAL
.
          BRANCH    ACCEPT,SELC0100    * in accept mode ?
          DISPLAY   *P1:24,*B,*EL,"Not Valid For Type '",REPTYPE0,"' - ";
          CALL      HITENTER
          GOTO      SELC0100
.
SELC1610  CALL      KLMAFM00
          BRANCH    EXIT,SELC1610,SELC9500
          MOVE      FMLALEDG,FMGULED
          DISPLAY   *PCCOL:CVERT,*V2LON,FMGULED,*P34:CVERT,*HOFF,FMLADESC;
          GOTO      SELC0100
.
.---- option 7 ----
.
SELC1700  COMPARE   ONE,FMGUTYP
          GOTO      SELC1710 IF EQUAL
.
          BRANCH    ACCEPT,SELC0100    * in accept mode ?
          DISPLAY   *P1:24,*B,*EL,"Not Valid For Type '",REPTYPE0,"' - ";
          CALL      HITENTER
          GOTO      SELC0100
.
SELC1710  KEYIN     *PCCOL:CVERT,"_________________________":
                                 "_________________________":
                    *PCCOL:CVERT,*V2LON,FMGUCMD,*EL;
          PACK      FMGUCMD,FMGUCMD,SP70
          MATCH     SP70,FMGUCMD
          GOTO      SELC1710 IF EQUAL  * cmd blank ?
          GOTO      SELC0100
.
.
SELC9000  MOVE      ZERO,EXIT          * continue
          PACK      KEY7,SKEY,SP70
          CALL      DEFMGU1            * delete old record
          PACK      KEY7,PCODE,FMGUSEQ,SP70
          UNPACK    KEY7,FMGUUID,FMGUSEQ
          CALL      WRFMGU1            * write new record
          GOTO      SELC9999
.
SELC9500  MOVE      ONE,EXIT           * quit
          GOTO      SELC9999
.
SELC9700  MOVE      ONE,EXIT           * delete
          CALL      DELQST
          BRANCH    CEXIT,SELC9800,SELC0100,SELC9999
SELC9800  MOVE      SKEY,KEY7
          UNPACK    KEY7,FMGUUID,FMGUSEQ
          CALL      DEFMGU1
.
SELC9999  RETURN
.**********************************************************************
.  MQSC - prompt for screen C                          Called By SELC
.        Returns  - OPTIONC   (0=post, -1=cancel, -2=delete, oth=option)
.**********************************************************************
MQSC0000  DISPLAY   *P1:24,*EL,"Select Field, (";
.
          MATCH     SP70,SKEY
          GOTO      MQSC1000 IF EQUAL  * new reord ?
          DISPLAY   *V2LON,"D",*HOFF,")elete, (";
.
MQSC1000  KEYIN     *V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"P",*HOFF,")ost : ":
                    *V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "P",ANS
          GOTO      MQSC9000 IF EQUAL  * post ?
          MATCH     "C",ANS
          GOTO      MQSC9500 IF EQUAL  * cancel ?
          MATCH     SP70,SKEY
          GOTO      MQSC2000 IF EQUAL  * new record ?
          MATCH     "D",ANS
          GOTO      MQSC9700 IF EQUAL  * delete ?
.
MQSC2000  MOVE      ZERO,OPTIONC
          MOVE      ANS,OPTIONC
          COMPARE   OPTIONC,ZERO       * legal number entered ?
          GOTO      MQSC9999 IF LESS
          BEEP
          GOTO      MQSC0000
.
MQSC9000  MOVE      ZERO,OPTIONC       * continue
          GOTO      MQSC9999
.
MQSC9500  MOVE      SEQ,OPTIONC        * quit
          GOTO      MQSC9999
.
MQSC9700  MOVE      "-2",OPTIONC       * delete
.
MQSC9999  RETURN
.******************************************************************************
.* SCRD - Display Screen D                       Called by SELD, redisps      *
.******************************************************************************
SCRD0000  UNPACK    SP70,REPTYPE,REPSTAT
          UNPACK    SP70,FMNGDESC
          MATCH     SP70,FMNJSEQ
          GOTO      SCRD1000 IF EQUAL  * any garbage entered yet ?
.
          MOVE      REPTYPE0,REPTYPE   * get report type desc
          LOAD      REPTYPE,FMNJTYP,REPTYPE1
          MOVE      REPSTAT0,REPSTAT   * get report status desc
          LOAD      REPSTAT,FMNJSTA,REPSTAT1
          PACK      KEY3,FMNJREP,SP70  * get report code desc
          CALL      RDFMNG1
.
SCRD1000  DISPLAY   *P1:4,"    Passcode             : ":
                    *P28:4,*V2LON,PCODE,*HOFF,SP2,SECUSER,*V2LON,*EF:
                    *P1:6," 1",*HOFF,". Sequence Code        : ",*V2LON,FMNJSEQ:
                    *P1:7," 2",*HOFF,". Description          : ",*V2LON,FMNJDES:
                    *P1:8," 3",*HOFF,". Report Type          : ",*V2LON,REPTYPE:
                    *P1:9," 4",*HOFF,". Report Status        : ",*V2LON,REPSTAT:
                   *P1:10," 5",*HOFF,". Report Code          : ":
                        *V2LON,FMNJREP,*P34:10,*HOFF,FMNGDESC,*V2LON:
                   *P1:11," 6",*HOFF,". Unix/SQL Command     : ",*V2LON,FMNJCMD;
.
SCRD9999  RETURN
.******************************************************************************
.* SELD - Perform Screen C                       Called by SELB               *
.*       Requires : ACCEPT   (1=accept mode on)                               *
.*        Returns : EXIT     (1=exit program)                                 *
.******************************************************************************
SELD0000  COMPARE   ONE,ACCEPT
          CALL      CLRV0000 IF EQUAL  * clear vars if in insert mode
          CALL      SCRD0000           * display screen C
          MOVE      ZERO,OPTIONC       * reset item desired
.
SELD0100  ADD       ONE,OPTIONC        * get next item
          COMPARE   ONE,ACCEPT
          CALL      MQSD0000 IF NOT EQUAL   * get option if not in accept mode
.
          MOVE      "28",CCOL          * get screen address
          MOVE      "5",CVERT
          ADD       OPTIONC,CVERT
          MOVE      OPTIONC,F2         * adjust selection for quit/continue
          ADD       THREE,F2
          BRANCH    F2,SELD9700,SELD9500,SELD9000:    * delete, quit, continue
                       SELD1100,SELD1200,SELD1300:     * execute option
                       SELD1400,SELD1500,SELD1700
          BRANCH    ACCEPT,SELD0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELD0100           * get another option
.
SELD0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELD0100
.
.---- option 1 ----
.
SELD1100  KEYIN     *PCCOL:CVERT,"___":
                    *PCCOL:CVERT,*V2LON,*JR,FMNJSEQ;
          PACK      FMNJSEQ,FMNJSEQ,SP70
          REP       " 0",FMNJSEQ
          DISPLAY   *PCCOL:CVERT,*V2LON,FMNJSEQ;
.
          PACK      KEY7,PCODE,FMNJSEQ,SP70
          MATCH     KEY7,SKEY
          GOTO      SELD0100 IF EQUAL  * same as old record ?
          CALL      RAFMNJ1
          BRANCH    OVRCD,SELD0100     * another record exists with same seq ?
.
          DISPLAY   *P1:24,*B,*EL,"Sequence Already Allocated to Passcode - ";
          CALL      HITENTER
          GOTO      SELD1100
.
.---- option 2 ----
.
SELD1200  KEYIN     *PCCOL:CVERT,"___________________________________":
                    *PCCOL:CVERT,*V2LON,FMNJDES,*EL;
          PACK      FMNJDES,FMNJDES,SP70
          MATCH     SP70,FMNJDES
          GOTO      SELD1200 IF EQUAL  * desc blank ?
          GOTO      SELD0100
.
.---- option 3 ----
.
SELD1300  KEYIN     *P1:24,*V2LON,"1",*DV,*HOFF," = ",REPTYPE0,", ":
                           *V2LON,"2",*DV,*HOFF," = ",REPTYPE1,*EL:
                    *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,F1;
          BRANCH    F1,SELD1350,SELD1350
          BEEP
          GOTO      SELD1300
.
SELD1350  LOAD      REPTYPE,F1,REPTYPE0,REPTYPE1
          MOVE      F1,FMNJTYP
          SUB       ONE,FMNJTYP
          DISPLAY   *PCCOL:CVERT,*V2LON,REPTYPE,*P1:24,*EL;
          BRANCH    ACCEPT,SELD0100         * in accept mode ?
          BRANCH    F1,SELD1360,SELD1370    * need to key in data ?
.
SELD1360  UNPACK    SP70,FMNJCMD
          DISPLAY   *P28:11,*EL,*P28:12,*EL;
          MATCH     SP70,FMNJREP
          GOTO      SELD0100 IF NOT EQUAL   * report exists ?
          MOVE      "1",ACCEPT
          MOVE      "4",OPTIONC
          GOTO      SELD0100                * get data
.
SELD1370  UNPACK    SP70,FMNJREP
          DISPLAY   *P28:10,*EL;
          MOVE      "1",ACCEPT
          MOVE      "4",OPTIONC
          GOTO      SELD0100                * get data
.
.---- option 4 ----
.
SELD1400  KEYIN     *P1:24,*V2LON,"1",*DV,*HOFF," = ",REPSTAT0,", ":
                           *V2LON,"2",*DV,*HOFF," = ",REPSTAT1,*EL:
                    *PCCOL:CVERT,"_",*EL:
                    *PCCOL:CVERT,*V2LON,F1;
          BRANCH    F1,SELD1490,SELD1490
          BEEP
          GOTO      SELD1400
.
SELD1490  LOAD      REPSTAT,F1,REPSTAT0,REPSTAT1
          SUB       ONE,F1
          MOVE      F1,FMNJSTA
          DISPLAY   *PCCOL:CVERT,*V2LON,REPSTAT,*P1:24,*EL;
          GOTO      SELD0100
.
.---- option 5 ----
.
SELD1500  COMPARE   ONE,FMNJTYP
          GOTO      SELD1510 IF NOT EQUAL
.
          BRANCH    ACCEPT,SELD0100    * in accept mode ?
          DISPLAY   *P1:24,*B,*EL,"Not Valid For Type '",REPTYPE1,"' - ";
          CALL      HITENTER
          GOTO      SELD0100
.
SELD1510  CALL      KFMNGA00
          BRANCH    EXIT,SELD1510,SELD9500
          MOVE      FMNGCODE,FMNJREP
          DISPLAY   *PCCOL:CVERT,*V2LON,FMNJREP,*P34:CVERT,*HOFF,FMNGDESC;
          GOTO      SELD0100
.
.---- option 7 ----
.
SELD1700  COMPARE   ONE,FMNJTYP
          GOTO      SELD1710 IF EQUAL
.
          BRANCH    ACCEPT,SELD0100    * in accept mode ?
          DISPLAY   *P1:24,*B,*EL,"Not Valid For Type '",REPTYPE0,"' - ";
          CALL      HITENTER
          GOTO      SELD0100
.
SELD1710  KEYIN     *PCCOL:CVERT,"_________________________":
                                 "_________________________":
                    *PCCOL:CVERT,*V2LON,FMNJCMD,*EL;
          PACK      FMNJCMD,FMNJCMD,SP70
          MATCH     SP70,FMNJCMD
          GOTO      SELD1710 IF EQUAL  * cmd blank ?
          GOTO      SELD0100
.
.
SELD9000  MOVE      ZERO,EXIT          * continue
          PACK      KEY7,SKEY,SP70
          CALL      DEFMNJ1            * delete old record
          PACK      KEY7,PCODE,FMNJSEQ,SP70
          UNPACK    KEY7,FMNJUID,FMNJSEQ
          CALL      WRFMNJ1            * write new record
          GOTO      SELD9999
.
SELD9500  MOVE      ONE,EXIT           * quit
          GOTO      SELD9999
.
SELD9700  MOVE      ONE,EXIT           * delete
          CALL      DELQST
          BRANCH    CEXIT,SELD9800,SELD0100,SELD9999
SELD9800  MOVE      SKEY,KEY7
          UNPACK    KEY7,FMNJUID,FMNJSEQ
          CALL      DEFMNJ1
.
SELD9999  RETURN
.**********************************************************************
.  MQSD - prompt for screen C                          Called By SELD
.        Returns  - OPTIONC   (0=post, -1=cancel, -2=delete, oth=option)
.**********************************************************************
MQSD0000  DISPLAY   *P1:24,*EL,"Select Field, (";
.
          MATCH     SP70,SKEY
          GOTO      MQSD1000 IF EQUAL  * new reord ?
          DISPLAY   *V2LON,"D",*HOFF,")elete, (";
.
MQSD1000  KEYIN     *V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"P",*HOFF,")ost : ":
                    *V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MATCH     "P",ANS
          GOTO      MQSD9000 IF EQUAL  * post ?
          MATCH     "C",ANS
          GOTO      MQSD9500 IF EQUAL  * cancel ?
          MATCH     SP70,SKEY
          GOTO      MQSD2000 IF EQUAL  * new record ?
          MATCH     "D",ANS
          GOTO      MQSD9700 IF EQUAL  * delete ?
.
MQSD2000  MOVE      ZERO,OPTIONC
          MOVE      ANS,OPTIONC
          COMPARE   OPTIONC,ZERO       * legal number entered ?
          GOTO      MQSD9999 IF LESS
          BEEP
          GOTO      MQSD0000
.
MQSD9000  MOVE      ZERO,OPTIONC       * continue
          GOTO      MQSD9999
.
MQSD9500  MOVE      SEQ,OPTIONC        * quit
          GOTO      MQSD9999
.
MQSD9700  MOVE      "-2",OPTIONC       * delete
.
MQSD9999  RETURN
.*************************************************************************
.* COPY - Copy the security for one security code to another             *
.*                     called by : ML2000                                *
.*************************************************************************
COPY0000  PACK      KEY21,OLDPCODE,SP20
          CALL      RSFMSQ1
          DISPLAY   *P1:24,*EL,"Copying :"
.
COPY1000  CALL      RKFMSQ1           * read next record
          BRANCH    OVRCD,COPY9999
.
          MATCH     FMSQSEC,OLDPCODE  * right passcode?
          GOTO      COPY9999 IF NOT EQUAL
.
          DISPLAY   *P11:24,*V2LON,FMSQLEDG,*HOFF,SLASH,*V2LON,FMSQACCT
          MOVE      PCODE,FMSQSEC
          PACK      KEY21,FMSQSEC,FMSQLEDG,FMSQSEQ,FMSQACCT,SP30
          CALL      RDFMSQ1
.
          COMPARE   ONE,OVRCD
          CALL      WRFMSQ1 IF EQUAL
          PACK      KEY21,OLDPCODE,FMSQLEDG,FMSQSEQ,FMSQACCT,SP30
          CALL      RSFMSQ1
          GOTO      COPY1000
.
COPY9999  RETURN 
.*************************************************************************
.* COPB - Copy the security for one report code to another               *
.*                     called by : ML2000                                *
.*************************************************************************
COPB0000  PACK      KEY7,OLDPCODE,SP20
          CALL      RSFMGU1
          DISPLAY   *P1:24,*EL,"Copying :"
.
COPB1000  CALL      RKFMGU1           * read next record
          BRANCH    OVRCD,COPB9999
.
          MATCH     FMGUUID,OLDPCODE  * right passcode?
          GOTO      COPB9999 IF NOT EQUAL
.
          DISPLAY   *P11:24,*V2LON,FMGUSEQ;
          MOVE      PCODE,FMGUUID
.
COPB1500  PACK      KEY7,FMGUUID,FMGUSEQ,SP30
          CALL      RDFMGU1
.
          COMPARE   ONE,OVRCD
          CALL      WRFMGU1 IF EQUAL
          PACK      KEY7,OLDPCODE,FMGUSEQ,SP30
          CALL      RSFMGU1
          GOTO      COPB1000
.
COPB9999  RETURN 
.*************************************************************************
.* COPC - Copy the security for one report code to another               *
.*                     called by : ML2000                                *
.*************************************************************************
COPC0000  PACK      KEY7,OLDPCODE,SP20
          CALL      RSFMNJ1
          DISPLAY   *P1:24,*EL,"Copying :"
.
COPC1000  CALL      RKFMNJ1           * read next record
          BRANCH    OVRCD,COPC9999
.
          MATCH     FMNJUID,OLDPCODE  * right passcode?
          GOTO      COPC9999 IF NOT EQUAL
.
          DISPLAY   *P11:24,*V2LON,FMNJSEQ;
          MOVE      PCODE,FMNJUID
.
COPC1500  PACK      KEY7,FMNJUID,FMNJSEQ,SP30
          CALL      RDFMNJ1
.
          COMPARE   ONE,OVRCD
          CALL      WRFMNJ1 IF EQUAL
          PACK      KEY7,OLDPCODE,FMNJSEQ,SP30
          CALL      RSFMNJ1
          GOTO      COPC1000
.
COPC9999  RETURN 
.*************************************************************************
.* REDISPLAY ROUTINES FOR STANDARD KEYINS                                *
.*************************************************************************
RRDFFM00 
RLMAFM00 
RAMAFM00  COMPARE   "2",OPTIONA
          GOTO      RDISC000 IF EQUAL  * reporting screen ?
          COMPARE   "3",OPTIONA
          GOTO      RDISE000 IF EQUAL  * reporting template screen ?
.
          CALL      CURP0000           * display current ledge
          DISPLAY   *P1:CVERT,*V2LON,DISPCNT,*HOFF,DOT,*P6:CVERT,FMLALEDG:
                    SLASH
          MOVE      FMLALEDG,FMSQLEDG
          RETURN
.
RDISB000  CALL      SCRB0000           * redisplay for Screen B data keyins
          CALL      DATB0000
          RETURN
.
RDISC000  CALL      SCRC0000           * redisplay for Screen C data keyins
          RETURN
.
RDISD000  CALL      SCRD0000           * redisplay for Screen D data keyins
          RETURN
.
RDISE000  CALL      SCRE0000           * redisplay for Screen E data keyins
          CALL      DATE0000
          RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       IBAPASIO/INC 
          INC       FMSAMAIO/INC
          INC       FMSAMAKY
          INC       FMSLMAIO/INC
          INC       FMSRDFKY
          INC       FMSRDFIO/INC
          INC       FMSNRGKY
          INC       FMSNRGIO/INC
          INC       FMSNRJIO/INC
          INC       FMSLMAKY
          INC       FMSSQUIO/INC
          INC       FMSGURIO/INC
