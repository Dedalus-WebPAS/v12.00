.*****************************************************************************
.*    Program      : F95PMQVI                                                *
.*    Description  : Conversion pmsqviaf to new File layout                  *
.*                                                                           *
.*    Author       : Peter Vela                                              *
.*    Date         : 30/01/2006                                              *
.*    Modifications: V9.05.B00 30/01/2006 Peter Vela CAR 54614               *
.*                             Created program                               *
.*****************************************************************************
.
.
          INC       STD001FD
          INC       MEHLERFD/INC
          INC       PATDSCFD/INC
          INC       PATMI1FD/INC
          INC       PATONLFD/INC
          INC       PATRE1FD/INC
          INC       PATTRNFD/INC
          INC       PATVISFD/INC
          INC       PATWR1FD/INC
          INC       PMSBRQFD/INC
          INC       PMSVX1FD/INC
          INC       PMSQVIFD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
.
.   
OLDFILE   IFILE     SQL, FIXED=1350, KEY="U1-20,21-22"
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DDCENT    DIM       2
.
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION PMSQVIFD"
PRGID     INIT      "F95PMQVI"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and WRPMQVI1 records to new file
.
          CALL      READ0000                     * read old records and WRPMQVI1
          CALL      ENDP0000                     * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,"pmsqviaf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsqviaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmqviaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsqviaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmqviaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmsqviaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmqviaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmsqviaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
          APPEND    " 1568 U1-20,21-22",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.          PACK      CMDLINE,SP60,SP60
.          CLEAR     CMDLINE
.          APPEND    "isadd ",CMDLINE
.          APPEND    NEWFILE,CMDLINE
.          APPEND    " U9-16,1-8",CMDLINE
.          APPEND    SP60,CMDLINE
.          RESET     CMDLINE
.          EXECUTE   CMDLINE,TASKID
.
.          PACK      CMDLINE,SP60,SP60
.          CLEAR     CMDLINE
.          APPEND    "isadd ",CMDLINE
.          APPEND    NEWFILE,CMDLINE
.          APPEND    " U682-684,1-8",CMDLINE
.          APPEND    SP60,CMDLINE
.          RESET     CMDLINE
.          EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSQVIA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and WRPMVX11 each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY22,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
          PACK      PKNAME,SP70
          PACK      PKADD1,SP70
          PACK      PKADD2,SP70
          PACK      PKSUBR,SP70
          PACK      PKADD4,SP70
          PACK      PKPOST,SP70
          PACK      PKTELEP,SP70
          PACK      PKTELEB,SP70
          PACK      PKRELP,SP70
          MOVE      ZERO,ASTAT
          PACK      PMQVSPAR,SP70
.
          PACK      KEY22,DPMQVMES,DPMQVTRN,SP70  * Pack key here
          CALL      WRPMQVI1                      * WRPMQVI1 to new file
.
.         IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
.         ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSQVIA1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmqviaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat pmsqviaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding pmsqviaf.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.**********************************************************************
. ---- OLD IO ROUTINES ----
.**********************************************************************
.  Copy and paste the Positional Read routine from the original
.  IO file, rename the routine READSOLD and change the index name
.  to OLDFILE
.
READSOLD  RESET     KEY22
          READ      OLDFILE,KEY22;;
          RETURN
.
.  Copy and paste the Read Next routine from the original
.  IO file, rename the routine READKOLD and change the index name 
.  to OLDFILE
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;DPMQVMES,DPMQVTRN,AADMNO,AURNO,ADATE:
                            ATIME,AINVPRT,ALACDTE,ACANCEL,ADOCTR:
                            ADOCTL,ASRCE,ACLSS,ACARE,AFUNDH:
                            AFNDTB,AFNDMM,AELIG,AVISIT,AALERG:
                            AILLN,ADIAG1,ADIAG2,ADISC,ADOCTT:
                            AALLOW,AMBS,ACLAIM,ADIET,APLOCCR:
                            ASTAY,ADYHOSP,AMEMB,AMEMBNO,ACOMM1:
                            ACOMM2,APLUR,APURGE,AUSR1,AUSR2:
                            AUSR3,AUSR4,AUSR5,AUSR6,AUSR7:
                            ADSCHI,ARDRNAM,AFNDYY,AFNDCG,AOCCDTE:
                            ACODDTE,ARETDTE,AMUMADM,PTMIPVIS,ABWGHT:
                            PTMSRFGP,PTMSGPPC,PTMSFHAN,PTMSECRA,PTMSMGIN:
                            PTMIDDIG,PTMIGPPT,PTMIDOFR,PTMIREFD,PTMIDFCN:
                            PTMIPHPU,PTMIAGNC,PTMIESSF,PTMIUSR8,PTMIUSR9:
                            PTMIUSR0,PTMIPDRG,PTMIOPER,PTMIXWRD,PTMIADOC:
                            PTMIREGS,PTMIUYN1,PTMIUYN2,TWARD,TBED:
                            TDATE,TTIME,TURNO,TADMN,TRATEF:
                            TRATEG,TDISC,TALLW,TATYPE,TADOCT:
                            TRATEH,TEXTRA,TRBTYP,TRBEND,TCHSTAT:
                            TDEPT,PTTRLTYP,PTTREPNO,PMVXVLOC,PMVXCFSG:
                            PMVXINGP,PMVXCPTH,PMVXHCP1,PMVXHCP2,PMVXHCP3:
                            PMVXHCP4,PMVXRHC1,PMVXRHC2,PMVXRHC3,PMVXRHC4:
                            PMVXCADM,PMVXIRAD,PMVXIDUS,PMVXCRAV,PMVXRCCT:
                            PMVXAPWD,PMVXAPBD,PMVXPOWD,PMVXPOBD,PMVXPSTY:
                            PMVXVALW,PMVXPALW,PMVXINDC,PMVXMDAV,PMVXFRMS:
                            PMVXEDC1,PMVXEDC2,PMVXEDC3,PMVXUDF1,PMVXUDF2:
                            PMVXUDF3,PMVXUDF4,PMVXUDT1,PMVXUDT2,PMVXUDT3:
                            PMVXUDT4,PMVXUDT5,PMVXUDT6,DDATE,DTIME:
                            DSTAT,DDEST,DDIAG,DDIAG2,DUSD1:
                            DUSD2,DUSD3,DUSD4,DUSD5,DFMBS:
                            PTDSDMDC,PTDSDDRG,DWLREASN,PTDSSIDX,PTDSVOGU:
                            PTDSOPER,PTDSUYN1,PTDSUYN2,PTDSUYN3,PTDSUYN4:
                            MHLRCODE,PMVXRH1G,PMVXRH1C,PMQVTDAT,PMQVTTIM:
                            PMQVSPAR
.
.                       PMVXVISN,PMVXVSDT,PMVXDOCA,PMVXDOCT,PMVXCSNR:
.                       PMVXPOST,PMVXPIND,PMVXVLOC,PMVXCFSG,PMVXINGP,PMVXCPTH:
.                       PMVXHCP1,PMVXHCP2,PMVXHCP3,PMVXHCP4,PMVXRHC1,PMVXRH1G:
.                       PMVXRH1C,PMVXRHC2,PMVXRH2G,PMVXRH2C,PMVXRHC3,PMVXRH3G:
.                       PMVXRH3C,PMVXRHC4,PMVXRH4G,PMVXRH4C,PMVXABRG,PMVXCADM:
.                       PMVXIRAD,PMVXIDUS,PMVXCRAV,PMVXRCCT,PMVXAPWD,PMVXAPBD:
.                       PMVXPOWD,PMVXPOBD,PMVXPSTY,PMVXVALW,PMVXPALW,PMVXINDC:
.                       PMVXMDAV,PMVXFRMS,PMVXCSNG,PMVXPWGT,PMVXPHGT,PMVXDHWR:
.                       PMVXEDC1,PMVXEDC2,PMVXEDC3,PMVXHOME,PMVXUDF1,PMVXUDF2:
.                       PMVXUDF3,PMVXUDF4,PMVXUDT1,PMVXUDT2,PMVXUDT3,PMVXUDT4:
.                       PMVXUDT5,PMVXUDT6,PMVXCDTE,PMVXCTIM,PMVXWEBC,PMVXLUPD:
.                       PMVXLUPT,PMVXWEBU,PMVXMHLS,PMVXPICD,PMVXRMOR,PMVXASUT:
.                       PMVXELPS,PMVXEMPL,PMVXFINP,PMVXOCCP,PMVXPALC,PMVXPPAL:
.                       PMVXPPPT,PMVXPSOS,PMVXPYSP,PMVXQLDB,PMVXREAD,PMVXUDIN:
.                       PMVXUREA,PMVXUSAC,PMVXUVTH,PMVXINTR,PMVXLNG1,PMVXASGC:
.                       PMVXMHOS,PMVXDSPD,PMVXDSIF,PMVXPRMI,PMVXPRAI,PMVXPRES:
.                       PMVXUITR,PMVXRPOA,PMVXRCN1,PMVXRCN2,PMVXRHFU,PMVXRDVA:
.                       PMVXRSLO,PMVXMLOC,PMVXPACC,PMVXSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPMQVMES,PMQVMESI
          MOVE      DPMQVTRN,PMQVTRAN
          RETURN
.
          INC       PMSQVIIO/INC
          INC       STD001IO
