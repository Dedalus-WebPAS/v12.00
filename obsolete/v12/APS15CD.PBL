. Modifications:
....      DISPLAY   *P1:20,*+,"aaaaaaaa=",*DBON,aaaaaaaa,*EF; xx
.         DISPLAY   *P1:20,*+,"aaaaaaaa=",*DSPSW,aaaaaaaa,*EF; xx
.         CALL      HITENTER xx
.         MATCH     "*",ANS xx
.         GOTO      ML9999 IF EQUAL xx
. 14.09.94 S.Barcham     Fix 334176 I * C
.          srf 132216
. 20/04/94 RKS srfiba    Trying to open sinwar file even if using inv & not 
.                        sin.
. 07.04.94 Neeriem Dye - Contractor !!
.          Added "Fixed Charge" and "% of Invoice Value" Charges for Contract
.          srf HWK
. 02/02/94 RKS srf126933 Modified so that an update could not be made if
.                        the period was locked when an update was being made
. 01/02/94 RKS srf127466 If SIIAQIN = SP10 then it won't update the f10 form
.                        variable and the average cost will be out.
. 10/09/95 S.Barcham     Stop updating of SIN costs if catalog code is blank
.                        srf 611882
. 29/11/95 S.Barcham     open assetnew not prepare
.                        srf 640821
. 26/03/96 S.Barcham     In old inventory update average cost for non-stock 
.                        catalogs move last cost to average cost
.                        srf 641338
.
. 30/07/96 B.G.Ackland   Invoice Tracking Update
.                        quote 8628
.
. 01/08/96 B.G.Ackland   Invoice Tracking Update
.                        quote 8628
.
.-------------------------------------------------------------------------
. Update Creditors Invoice Data and create General Ledger batch details.
.-------------------------------------------------------------------------
UPINV000  MOVE      SP70,LASTDIR      * Setup Last Inventory Directory
.
          IF        PERLOCK=1
            BEEP
            CLEAR     DISPMSG
            APPEND    "Period is Locked - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            MOVE      TRUE,EXIT
            GOTO      UPINV999
          ENDIF
.
          CALL      CKPPU000          * Check if proposed payments active
.
          CALL      CBAT0000          * Check Batch
          BRANCH    EXIT,UPINV999     * Batch Not Balanced Exit
.
          CLOSE     SCRSBGA1
          CLOSE     SCRPSTA1
          CLOSE     SCRPSTA2
          CLOSE     SCRSLTA1
.
          CALL      INITB000          * Initialise Files & Parameters
.
          CALL      APISOPN1           * Open Inventory File Required
.
          CALL      UPAPS000          * Update Accounts Payable System
.
          CALL      UPFMS000          * Update General Ledger Batch
.
          CALL      CLOS0000          * Close Update
.
          OPEN      SCRSBGA1,"scrsbgaf"
          OPEN      SCRPSTA1,"scrpstaf"
          OPEN      SCRPSTA2,"scrpstaf"
          OPEN      SCRSLTA1,"scrsltaf"
.
          CALL      APISCLS1
.
UPINV999  RETURN
.----------------------------------------------------
. Restore Files Closed & Remove Temp Files
.----------------------------------------------------
CLOS0000  CLOSE     APSTMPA1,DELETE
          CLOSE     APSGSTA1,DELETE
          PACK      KEY5,APBMBCH
          PACK      APBMUDT,CCC,CYY,CMM,CDD
          REP       " 0",APBMUDT
          CALL      RAAPBM1
          IF        OVRCD=0
            CALL      UPAPBM1
            CALL      UUAPBM1         * Unlock Record
          ENDIF
          MOVE      TWO,EXIT          * Restart Screen
          RETURN
.----------------------------------------
.  Main Update
.----------------------------------------
UPAPS000  DISPLAY   *P1:24,*EL        * Clear Line for Display
          IF        FMCOITRK=1
            OPEN      APSTRKA3,"apstrkaf"
          ENDIF
          PACK      KEY40,APBMBCH,SP70
          MOVE      ZERO,TRUNIQ       * Unique Batch Line Counter APTR
          CALL      RSAPIM1           * Main Loop through Invoice
.
UPAPS100  CALL      RKAPIM1           * Header Records for Batch
          BRANCH    OVRCD,UPAPS900
          MATCH     APBMBCH,APIMBCH
          GOTO      UPAPS900 IF NOT EQUAL
          MATCH     "1",APIMUPD
          GOTO      UPAPS100 IF EQUAL * Already Updated
          DISPLAY   *P1:24,"Updating Creditor : ",*V2LON,APIMCRD,*HOFF:
                    "  Ref : ",*V2LON,APIMREF
.
          CALL      APSGST00          * Allocate G.S.T.
.
          IF        FMCOITRK=1
            CALL      APSTRK00          * Update Invoice Tracking Tables
          ENDIF
.
          MATCH     APIMREF,APIMDOC
          IF        @EQUAL
            MOVE      ONE,APIMUPD       * Updated     = 1 Yes
            MOVE      ONE,APIMOUT       * Outstanding = 1 Yes
            MOVE      ZERO,APIMPAY      * Amount Paid = 0
            CALL      UPAPIM1
          ELSE
            MOVE      ONE,APIMUPD       * Updated     = 1 Yes
            MOVE      ZERO,APIMOUT      * Outstanding = 0 No 
            ASSIGN    APIMTOT+APIMGST-APIMDIS,APIMPAY
            CALL      UPAPIM1
            CALL      UPLINK00          * Update Cheque Payment with invoice
          ENDIF
          GOTO      UPAPS100
.
UPAPS900  IF        FMCOITRK=1
            CLOSE     APSTRKA3
          ENDIF
          RETURN
.------------------------------------------------------------
. Update Invoice Tracking
.------------------------------------------------------------
APSTRK00  PACK      KEY21,APIMCRD,SP70
          CALL      RSAPTK3
APSTRK10  CALL      RKAPTK3
          BRANCH    OVRCD,APSTRK99
          MATCH     APIMCRD,APTKCRD
          GOTO      APSTRK99 IF NOT EQUAL
          MATCH     SP70,APTKBAT
          GOTO      APSTRK99 IF NOT EQUAL
          MATCH     APIMREF,APTKREF
          GOTO      APSTRK10 IF NOT EQUAL
          PACK      KEY21,APTKCRD,APTKBAT,APTKDTRC,APTKUNIQ,SP70
          MOVE      APBMADT,APTKDTPR
          REP       " 0",APTKDTPR
          MOVE      APIMBCH,APTKBAT
          CALL      UPAPTK3             * Update Batch & Date Processed
          CALL      RDAPTK3             * Re Position with old key
          GOTO      APSTRK10
.
APSTRK99  RETURN
.----------------------------------------------------------------------
. Update payment in suspense
.----------------------------------------------------------------------
UPLINK00  PACK      SAVKEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          PACK      SKEY20,APIMBCH,APIMDOC,SP70
          PACK      SKEY1,APIMTYP,SP70
.
          UNPACK    APIMDOC,LINKBCH,LINKCHQ * Link to cheque
          MOVE      APIMREF,KEY15
          MOVE      APIMIDT,KEY8 
          MOVE      APIMPAY,LINKAMT
          PACK      KEY40,LINKBCH,APIMCRD,SP10,SP5,SP7,LINKCHQ
          CALL      RDAPIM1
          BRANCH    OVRCD,UPLINK90
          PACK      KEY25,APIMBCH,APIMCRD,APIMDOC
          CALL      RDAPUM1
          BRANCH    OVRCD,UPLINK50
          IF        APIMPAY-APUMAIN-LINKAMT=0
            CALL      DEAPUM1
            CALL      UAPIN000             * update inp recs with inv number
          ELSE
            ADD       LINKAMT,APUMAIN
            CALL      UPAPUM1
          ENDIF
          GOTO      UPLINK90
UPLINK50
          IF        APIMPAY-LINKAMT=0
            CALL      UAPIN000             * update inp recs with inv number
            MOVE      KEY15,APIMREF        * Update with Invoice Number
            MOVE      KEY8,APIMIDT         * Update with Invoice Date
            CALL      UPAPIM1
          ELSE
            MOVE      LINKAMT,APUMAIN
            UNPACK    KEY25,APUMBCH,APUMCRD,APUMDOC
            CALL      WRAPUM1
          ENDIF
          GOTO      UPLINK90
UPLINK90
          MOVE      SAVKEY40,KEY40
          CALL      RDAPIM1
          RETURN
.
.----------------------------------------------------------------------
. UAPIN - update invoice for suspended payment
.----------------------------------------------------------------------
UAPIN000
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY51,KEY40,SP70
.
UAPIN100  
          CALL      RSAPIN1
          CALL      RKAPIN1
          BRANCH    OVRCD,UAPIN200
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
          MATCH     KEY40,KEY51
          GOTO      UAPIN200 IF NOT EQUAL
.
          MOVE      KEY15,APINREF          * Update with Invoice Number
          PACK      APINDES,SKEY20,APINORD,APINLIN,SKEY1,SP70
          CALL      UPAPIN1
          GOTO      UAPIN100
.
UAPIN200  
          MOVE      KEY15,APIMREF          * Update with Invoice Number
          MOVE      KEY8,APIMIDT           * Update with Invoice Date
          CALL      UPAPIM1
.
UAPIN999  RETURN
.----------------------------------------------------------------------
. Create Batch for FMS system
.----------------------------------------------------------------------
UPFMS000  CALL      MKBAT000           * Create Batch and Write Initail Sectors
.
          DISPLAY   *P1:24,*EL
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
.
UPFMS100  CALL      RKAPIM1            * Read Through Invoices
          BRANCH    OVRCD,UPFMS900
          MATCH     APBMBCH,APIMBCH
          GOTO      UPFMS900 IF NOT EQUAL
          DISPLAY   *P1:24,"Processing FMS Creditor : ",*V2LON,APIMCRD,*HOFF:
                    "  Ref : ",*V2LON,APIMREF
.
          MOVE      ZERO,GSTTOTAL
          ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
          MOVE      ONE,UPDATEXP
.
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      SBRSORD,SP70
          CALL      RSAPIN1
.
UPFMS110  CALL      RKAPIN1           * Read Through Allocations
          BRANCH    OVRCD,UPFMS120
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH     KEY40,KEY51
          GOTO      UPFMS120 IF NOT EQUAL
.
          MATCH     SBRSORD,APINORD
          IF        !@EQUAL
            CALL      GETMU000        * Get Total Markup
            MOVE      APINORD,SBRSORD
          ENDIF
.
          CALL      WRBCH000          * Update Batch Record
          IF        !(APIMGST=0)
            CALL      WBGST000        * Summarise GST Postings
          ENDIF
          GOTO      UPFMS110
.
UPFMS120 IF        !(APIMGST=0)
            CALL      ALGST000        * Create GST General Ledger Entries
          ENDIF
.
          GOTO      UPFMS100
.
. Update Batch Header and Write Control Account Records
.----------------------------------------------------------------------
UPFMS900  ADD       ONE,BC0NXTSC
          WEOF      BATFILE,BC0NXTSC
          MOVE      BC1ACCT,BC1KEYT
          CALL      WRBAT1
.
          CALL      CCTR0000           * Update Totals in Batch
          CALL      UPGL0000           * Update Batch Queue
.
UPFMS999  RETURN
.------------------------------------------------------------------------------
. Get Total Invoiced to Date from the SINPOC file
.------------------------------------------------------------------------------
GETIN000  MOVE      ZERO,TOTINVAM
          UNPACK    APINORD,KEY1,KEY7       * read order header
          CALL      RDSIPA1
          BRANCH    OVRCD,GETIN999
.
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
GETIN100  CALL      RKSIPC1
          BRANCH    OVRCD,GETIN999
.
          MATCH     SIPAPON,SIPCPON
          GOTO      GETIN999 IF NOT EQUAL
.
          MATCH     SIPCCAT,SP70
          IF        !@EQUAL
            PACK      KEY7,SIPCCAT
            CALL      RDSIIA1
            BRANCH    OVRCD,GETIN100
.
            COMPARE   ZERO,SIIANON
            GOTO      GETIN100 IF EQUAL      * Only want non-stock & non-catalog
          ENDIF
.
          ADD       SIPCTIN,TOTINVAM
          GOTO      GETIN100
.
GETIN999  RETURN
.------------------------------------------------------------------------------
. Get Markup Total for Order
.------------------------------------------------------------------------------
GETMU000  PACK      SAVKEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          IF        INCOSTYP=0
            GOTO      GETMU999
          ENDIF
.
          CALL      RDFMCO66                * read parameters
          PACK      FMCOINFC,FMCOINFC,SP70
          REP       " 0",FMCOINFC
          MOVE      ZERO,FFFFINFC
          MOVE      FMCOINFC,FFFFINFC
          MOVE      FFFFINFC,FMCOINFC
.
          PACK      FMCOINPV,FMCOINPV,SP70
          REP       " 0",FMCOINPV
          MOVE      ZERO,FFFFINPV
          MOVE      FMCOINPV,FFFFINPV
          MOVE      FFFFINPV,FMCOINPV
.
          IF        HACCNT<>1 | (FFFFINFC=0 & FFFFINPV=0) | INCOSTYP<>1
           GOTO      GETMU999               * charges not required
          ENDIF
.
          CALL      GETIN000
.
          UNPACK    APINORD,KEY1,KEY7       * read order header
          CALL      RDSIPA1
          BRANCH    OVRCD,GETMU999
.
          PACK      FILENAMC,NAMEC,PORT,SP70 * set up and open temp file
          REP       " 0",FILENAMC
          PACK      MAKETMPC,ISBUILD,FILENAMC,TMP0CDAT
          PACK      KILLTMPC,ISERASE,FILENAMC
.
          TRAP      OVERCOND IF IO
          OPEN      NEZTMP0C,FILENAMC
          TRAPCLR   IO
.
          BRANCH    OVRCD,GETMU050
.
          CLOSE     NEZTMP0C
          EXECUTE   KILLTMPC,TASKID
.
GETMU050  EXECUTE   MAKETMPC,TASKID
          OPEN      NEZTMP0C,FILENAMC
.
          MOVE      ZERO,INVOCTOT
          MOVE      ZERO,COSTCTOT
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,SP70
          PACK      KEY48,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,SP70
          CALL      RSAPIN1
GETMU100  CALL      RKAPIN1           * Read Through Allocations
          BRANCH    OVRCD,GETMU900
.
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH     KEY48,KEY51
          GOTO      GETMU900 IF NOT EQUAL
.
          PACK      KEY10,SIPAPON,APINCAT
          CALL      RDSIPC1
          BRANCH    OVRCD,GETMU100
.
          MATCH     SIPCCAT,SP70
          IF        !@EQUAL
            PACK      KEY7,SIPCCAT
            CALL      RDSIIA1
            BRANCH    OVRCD,GETMU100        * Catalog does not exist
.
            COMPARE   ZERO,SIIANON
            GOTO      GETMU100 IF EQUAL     * Only want Non-Stock Items
          ENDIF
.
          PACK      KEY5,SIPCCST,SP70     * accumulate cost centre total      
          CALL      RDNEZC1
          IF        OVRCD=1
            ADD       ONE,COSTCTOT        * increment "number of cost centres"
            UNPACK    KEY5,NEZCCST
            MOVE      APINAMT,NEZCAMT
            CALL      WRNEZC1
          ELSE
            ADD       APINAMT,NEZCAMT
            CALL      UPNEZC1
          ENDIF
          ADD       APINAMT,INVOCTOT      * Sum Total Invoiced for this order
.
          GOTO      GETMU100
.
GETMU900  MOVE      SAVKEY51,KEY51
          CALL      RDAPIN1               * Return to original Record
.
GETMU999  RETURN
.------------------------------------------------------------------------------
. Add Markup To Each Item for the Order
.------------------------------------------------------------------------------
ADDMU000  MOVE      ZERO,MARKUPAM
          IF        HACCNT<>1|(FFFFINFC=0&FFFFINPV=0)|INCOSTYP<>1|UPDATEXP=0
           GOTO      ADDMU999               * charges not required
          ENDIF
.
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDSIPA1
          BRANCH    OVRCD,ADDMU999
.
          PACK      KEY10,SIPAPON,APINCAT
          CALL      RDSIPC1
          BRANCH    OVRCD,ADDMU999
.
          MATCH     SIPCCAT,SP70
          IF        !@EQUAL
            PACK      KEY7,SIPCCAT
            CALL      RDSIIA1
            BRANCH    OVRCD,ADDMU999        * Catalog does not exist
.
            COMPARE   ZERO,SIIANON
            GOTO      ADDMU999 IF EQUAL     * Only Non-Stock & Non-Catalog Items
          ENDIF
.
          PACK      KEY5,SIPCWAR
          CALL      RDSIWA1
          BRANCH    OVRCD,ADDMU999
.
          PACK      KEY14,APINLED,SIWAMUAC
          CALL      RDFMAM1
          BRANCH    OVRCD,ADDMU999
.
. ------- Fixed Portion
          PACK      KEY5,SIPCCST,SP70
          CALL      RDNEZC1
          IF        OVRCD=0
            IF        (TOTINVAM-INVOCTOT)=0
              ASSIGN    (FFFFINFC/COSTCTOT)*(APINAMT/NEZCAMT),MARKUPAM   
            ENDIF
          ELSE
            MOVE      "Error: Qty not calculated for Cost Centre - ",DISPMSG
            CALL      MESSAGE1
            MOVE      "Please Contact IBA before Continuing - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
.
. ------- Variable Portion
          ASSIGN    (FFFFINPV/100.0000)*APINAMT+MARKUPAM,MARKUPAM
.
. ------- Update Both if Passed all Conditions Therefore Apply Markup Value
          PACK      KEY14,APINLED,SIWAMUAC
          CALL      RDAPTM1
          IF        OVRCD=0
            ADD       MARKUPAM,APTMAMT
            CALL      UPAPTM1
          ELSE
            MOVE      MARKUPAM,APTMAMT
            MOVE      APINLED,APTMLED
            MOVE      SIWAMUAC,APTMACC
            CALL      WRAPTM1
          ENDIF
.
ADDMU900  
.
ADDMU999  RETURN
.------------------------------------------------------------------------------
. Distribute G.S.T. Amounts and flag transaction allocations as updated
.------------------------------------------------------------------------------
APSGST00  MOVE      ZERO,GSTTOTAL
          ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RSAPIN1           * Loop Through Allocation Details
APSGST10  CALL      RKAPIN1           * Within The Invoice
          BRANCH    OVRCD,APSGST80
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH     KEY40,KEY51
          GOTO      APSGST80 IF NOT EQUAL
.
          MATCH     "1",APINUPD
          GOTO      APSGST20 IF EQUAL * Already Updated
.
          IF        IBCNUGST=1
            ASSIGN    (APINAMT/ALLTOTAL)*APIMGST,APINGST
          ENDIF
.
          ADD       APINGST,GSTTOTAL
          CALL      UPASS000          * Asset System Update if Required
          CALL      UPISY000          * Inventory System Update if Required
          MATCH     APINDOC,APINREF
          IF        @EQUAL
            MOVE      ZERO,APINPAY
          ELSE
            ASSIGN    APINAMT+APINGST,APINPAY
          ENDIF
          MOVE      ONE,APINUPD       * Updated = 1 Yes
          CALL      UPAPIN1           * Update Details
.
          PACK      SAVKEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          GOTO      APSGST10
.
. Updated so add in gst only
.
APSGST20  ADD       APINGST,GSTTOTAL
          PACK      SAVKEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          GOTO      APSGST10
APSGST80  IF        !(GSTTOTAL=APIMGST)
            MOVE      SAVKEY51,KEY51
            CALL      RDAPIN1
            IF        OVRCD=0
              ASSIGN    APINGST-GSTTOTAL+APIMGST,APINGST
              MATCH     APINDOC,APINREF   * Check for Payment in Suspense
              IF        !(@EQUAL)
                ASSIGN    APINAMT+APINGST,APINPAY
              ENDIF
              CALL      UPAPIN1       * Update Difference to Final Record
            ENDIF
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Save Details for GST Allocation
.----------------------------------------------------------------------
WBGST000  PACK     KEY2,APINLED
          CALL     RDFMLA1
          BRANCH   OVRCD,WBGST999
.
          PACK     KEY14,APINLED,APINACC
          CALL     RDFMAM1
          BRANCH   OVRCD,WBGST999
.
          CALL     RFMCOT00              * Determine GST Control Account
          MOVE     APINLED,APGSLED       * Update Summary Record
          MOVE     FMCSAGST,APGSACC
          PACK     KEY14,APGSLED,APGSACC
          CALL     RDAPGS1
          IF       OVRCD=0
            ADD      APINGST,APGSAMT
            CALL     UPAPGS1
          ELSE
            MOVE     APINGST,APGSAMT
            CALL     WRAPGS1
          ENDIF
WBGST999  RETURN
.----------------------------------------------------------------------
. Create Input Record for G.S.T.
.----------------------------------------------------------------------
MVINP000  MOVE     APIMBCH,APINBCH
          MOVE     APIMCRD,APINCRD
          MOVE     APIMREF,APINREF
          MOVE     APIMDOC,APINDOC
          MOVE     SP70,APINORD
          MOVE     "  1",APINLIN
          MOVE     APBMDIS,APINDIS
          MOVE     APBMRES,APINRES
          MOVE     "G.S.T.            ",APINDES
          MOVE     SP70,APINCAT
          MOVE     ZERO,APINQTY
          MOVE     ZERO,APINUCT
          MOVE     ZERO,APINPAY
          MOVE     SP3,APINBASC
          MOVE     SP6,APINCGS
          MOVE     SP70,APINSPA
          RETURN
.----------------------------------------------------------------------
. Update new assets file if required
.----------------------------------------------------------------------
UPASS000  PACK      KEY14,APINLED,APINACC
          CALL      RDFMAM1
          IF        FMAMASST=1
            MOVE      APINCRD,CNCRED
            MOVE      APINREF,CNREFNO
            MOVE      APINORD,CNORDER
            MOVE      APINDES,CNDESC
            MOVE      APINAMT,CNAMT
            MOVE      APIMIDT,CNDATE
            REP       " 0",CNDATE
            MOVE      APINBCH,CNBATCH
            OPEN      ASSETNEW,"assetnew"
            CALL      RDASSS0
            CALL      WRASS
            ADD       ONE TO CNSECTOR
            CALL      WRASSS0
            CLOSE     ASSETNEW
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Update Supply and Inventory System (will require locking after file changes)
.----------------------------------------------------------------------
UPISY000  MATCH     SP70,APINORD
          GOTO      UPISY999 IF EQUAL
          MATCH     SP70,APINCAT
          GOTO      UPISY999 IF EQUAL
.
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1          * Read Inventory Linkage File
          BRANCH    OVRCD,UPISY999
.
          COMPARE   ONE,HACCNT
          GOTO      UPISY999 IF NOT EQUAL
.
          PACK      KEY14,APINORD,APINCAT
          CALL      RDAPOD1
          IF        OVRCD=0
            SUB       APINQTY,APODQTY
            IF        APODQTY=0
              CALL      DEAPOD1
              CALL      CHKOD000
            ELSE
              ASSIGN    APODQTY*APODUCT,APODAMT
              ASSIGN    APODQTY*APODUGS,APODGSTA
              CALL      UPAPOD1
            ENDIF
          ENDIF
.
          ASSIGN    SEQ*APINQTY*APODUCT,APODAMT
          ASSIGN    SEQ*APINQTY*APODUGS,APODGSTA
          CALL      UFMFP000
.
          CALL      UPSIN000
.
UPISY999  RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
UFMFP000  PACK      KEY2,APODLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APODLED,APODACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,UFMFP999
.
          PACK      WORKDATE,APCIDAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,UFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APODLED,APODACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
        
            ASSIGN    APODAMT+FMFPCOM,FMFPCOM
            MOVE      FMFPCOM,FMFPCOMD
            ASSIGN    FMFPCOM/1000,F12P2
            MOVE      F12P2,FMFPCOMT
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APODAMT,FMFPCOM
            MOVE      FMFPCOM,FMFPCOMD
            ASSIGN    FMFPCOM/1000,F12P2
            MOVE      F12P2,FMFPCOMT
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      UFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APODLED,APODACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      UFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
UFMFP999  RETURN
.----------------------------------------------------------------------
. Create Batch
.----------------------------------------------------------------------
MKBAT000  MOVE      APBMBCH,BC1BATCH
          MOVE      ZERO,BC0BTCHT
          MOVE      SP2,BC0DIM2
          MOVE      TWO,BC0NXTSC
          MOVE      ZERO,BC0NXTSW
          MOVE      ONE,BC0SUPBC
          MOVE      SP6,BC0DIM6
          MOVE      ZERO,BC0SPLTK
          MOVE      ZERO,BC0SPLTP
          MOVE      ONE,BC0ONE
          MOVE      ZERO,BC0SPSEC
          MOVE      ZERO,BC0DISC
.
          CLEAR     FNAME
          APPEND    "bch",FNAME
          APPEND    BC1BATCH,FNAME
          APPEND    ".txt",FNAME
          RESET     FNAME
          PREP      BATFILE,FNAME
          CALL      WRBAT0
.
          MOVE      FIVE,BC1STAT
          MOVE      "HD",BC1HEAD
          MOVE      BC1BATCH,BCBATCH
          MOVE      ZERO,BC1KEYT
          MOVE      ZERO,BC1ACCT
          MOVE      ZERO,BC1NOTR
.
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY
          PACK      BC1DATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0" IN BC1DATE
          MOVE      APBMOPR,BC1OPER
          MOVE      APBMLED,BC1LEDG
          MOVE      BC1LEDG,BCLEDG
          MOVE      "IN",BC1TRAN
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      BC1BDATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0" IN BC1BDATE
          MOVE      ZERO,BC1REORG
          MOVE      APBMDIS,BC1DISS
          MOVE      BC1DISS,BCDISS
          MOVE      SP2,BC1PAYT
          MOVE      APBMRES,BC1RESP
          MOVE      BC1RESP,BCRESP
          MOVE      ZERO,BC1REST
          MOVE      ZERO TO BC1UTYPE
.
          CALL      WRBAT1
.
          RETURN
.----------------------------------------------------------------------
. Write Batch Transaction
.----------------------------------------------------------------------
WRBCH000  MOVE      "IN",BCTRAN
          MOVE      APINLED,BCLEDG
          MOVE      APINACC,BCACCT
          MOVE      APINAMT,BCAMT
          MOVE      APINREF,BCREFER
          MOVE      APINDES,BCTRAND
          MOVE      APINRES,BCRESP
          MOVE      APINDIS,BCDISS
.
          CALL      RDBATS0
          ADD       ONE,BC0NXTSC
          CALL      WRBATS0
          SUB       ONE FROM BC0NXTSC
.
          MOVE      FIVE,BCSTAT
          MOVE      APIMTER,BCPAYT
          MOVE      APIMCRD,BCRED
          MOVE      APINORD,BCORD
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY
          PACK      BCDATEE,CDAY,CMON,CCENT,CYEAR
          REP       " 0" IN BCDATEE
          MOVE      BC1BDATE,BCDATED
          MOVE      "00000000",BCDATCX
          MOVE      SP70,BCACCTP
          MOVE      SP10,BCCHEQ
          MOVE      ZERO,BCINVT
          MOVE      ZERO,BCDISC
          MOVE      "0",BCCOMX
          MOVE      ZERO,BCCOMXA
          MOVE      SP70,BCCONT
          MOVE      SP70,BCDISCC
          MOVE      SP3,BCBASC
          IF        BASFLAG=1
            MOVE      APINBASC,BCBASC
          ENDIF
.
          CALL      ADDMU000                * Add Markup if accplicable
          CALL      GACCT000                * get normal credit account
          CALL      RDAPTM1
          IF        OVRCD=0
            ADD       BCAMT,APTMAMT
            CALL      UPAPTM1
          ELSE
            UNPACK    KEY14,APTMLED,APTMACC
            MOVE      BCAMT,APTMAMT
            CALL      WRAPTM1
          ENDIF
.
          ADD       MARKUPAM,BCAMT           * Calculated in ADDMU000
.
          CALL      WRBATC
          ADD       ONE,BC0NXTSC
          ADD       ONE,BC1NOTR
          ADD       BCAMT,BC1KEYT
          ADD       BCAMT,BC1ACCT
          WEOF      BATFILE,BC0NXTSC
.
WRBCH999  RETURN
.----------------------------------------------------------------------
. Get normal credit account
.----------------------------------------------------------------------
GACCT000  PACK      KEY2,APINLED,SP70
          CALL      RDFMLA1
          PACK      KEY14,APINLED,APINACC,SP70
          CALL      RDFMAM1
          CALL      RFMCOT00
          MATCH     APINREF,APINDOC         * check if payments in suspense
          IF        @EQUAL
            PACK      KEY14,APINLED,FMCSCRD,SP70
          ELSE
            PACK      KEY14,APINLED,FMCSPAY,SP70
          ENDIF
          MATCH     ANSZ,APIMPAYG
          IF        @EQUAL
            PACK      KEY14,APINLED,FMLAPAYG,SP70
          ENDIF
.
GACCT999  RETURN
.
.******************************************************************************
. Post Control Account Transactions
.******************************************************************************
CCTR0000  MOVE      "00000",BCRED
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY
          PACK      BCDATEE WITH CDAY,CMON,CCENT,CYEAR
          REP       " 0" IN BCDATEE
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      BCDATED WITH CDAY,CMON,CCENT,CYEAR
          REP       " 0" IN BCDATED
          MOVE      ZERO,BCINVT
          MOVE      ZERO,BCDISC
          MOVE      BC1RESP TO BCRESP
          MOVE      SP70 TO BCTRAND
          MOVE      "INVOICE ",BCORD
          MOVE      "INVOICE        ",BCREFER
          MOVE      FMCOIDIS TO BCDISS
.
          MOVE      SP70,KEY14
          CALL      RSAPTM1
CCTR8000  CALL      RKAPTM1
          BRANCH    OVRCD,CCTR9999
          MOVE      APTMAMT,BCAMT
.
          MOVE      "JC" TO BCTRAN
.
          MOVE      APTMLED,BCLEDG
          MOVE      APTMACC,BCACCT
.
          CALL      WBCH0000                * Write Record Back to Batch file
.
          GOTO      CCTR8000                * for General Ledger
.
CCTR9999  MOVE      "IN",BCTRAN
          RETURN
.**********************************************************************
. Add Control Account Transactions to Batch
.**********************************************************************
WBCH0000  MOVE      "5",BCSTAT
          MOVE      SP70,BCDATCX
          MOVE      SP70,BCACCTP
          MOVE      SP70,BCCHEQ
          MOVE      "N",BCCOMX
          MOVE      ZERO,BCCOMXA
          MOVE      SP70,BCCONT
          MOVE      SP70,BCDISCC
          MOVE      SP70,BCCEORD
          MOVE      SP70,BCCELNE
          MOVE      SP70,BCCATA
          MOVE      SP3,BCBASC
          CALL      RDBATS0
          ADD       ONE,BC0NXTSC
          CALL      WRBATS0
          SUB       ONE,BC0NXTSC
          CALL      WRBATC
.
          CALL      RDBAT1
          ADD       ONE,BC1NOTR
          MOVE      "5",BC1STAT
          CALL      WRBAT1
.
          RETURN
.----------------------------------------------------------------------
. Update Control File in General Ledger
.----------------------------------------------------------------------
UPGL0000
          CALL      RDBATS0
          MOVE      BC1BATCH,F5
          MOVE      F5,FMBCBAT
          MOVE      "2",FMBCSTA
          MOVE      BC0NXTSC,FMBCSEC
          MOVE      BC1ACCT,FMBCTOT
          MOVE      ZERO,FMBCDIS
          MOVE      BC1OPER,FMBCUID
          MOVE      BC1LEDG,FMBCLED
          MOVE      BC1TRAN,FMBCTRT
          MOVE      BC0SUPBC,FMBCINV
.
          UNPACK    BC1DATE,CDAY,CMON,CCENT,CYEAR
          PACK      FMBCDAT,CCENT,CYEAR,CMON,CDAY
          UNPACK    BC1BDATE,CDAY,CMON,CCENT,CYEAR
          PACK      FMBCPDAT,CCENT,CYEAR,CMON,CDAY
          PACK      FMBCCDAT,CCENT,CYEAR,CMON,CDAY
.
          MOVE      SP70,FMBCSPAR
          PACK      KEY5,APBMBCH
          UNPACK    KEY5,FMBCBAT
          CALL      RAFMBC1
          IF        OVRCD=0
            CALL      UPFMBC1
          ELSE
            CALL      WRFMBC1
          ENDIF
UPGL9999  RETURN
.**********************************************************************
. Temp file IO routines
.**********************************************************************
RSAPTM1   RESET     KEY14
          READ      APSTMPA1,KEY14;;
          RETURN
.
RAAPTM1   RESET     KEY14
          MOVE      ZERO,OVRCD
          READ      APSTMPA1,KEY14;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDAPTM1   RESET     KEY14
          MOVE      ZERO,OVRCD
          READ      APSTMPA1,KEY14;APTMLED,APTMACC,APTMAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKAPTM1   MOVE      ZERO,OVRCD
          READKS    APSTMPA1;APTMLED,APTMACC,APTMAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPAPTM1   MOVE      ZERO,OVRCD
          READKP    APSTMPA1;APTMLED,APTMACC,APTMAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPAPTM1   UPDATE    APSTMPA1;APTMLED,APTMACC,APTMAMT
          RETURN
.
WRAPTM1   RESET     KEY14
          WRITE     APSTMPA1,KEY14;APTMLED,APTMACC,APTMAMT
          RETURN
.
DEAPTM1   RESET     KEY14
          DELETE    APSTMPA1,KEY14
          RETURN
.
RSAPGS1   RESET     KEY14
          READ      APSGSTA1,KEY14;;
          RETURN
.
RDAPGS1   RESET     KEY14
          MOVE      ZERO,OVRCD
          READ      APSGSTA1,KEY14;APGSLED,APGSACC,APGSAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKAPGS1   MOVE      ZERO,OVRCD
          READKS    APSGSTA1;APGSLED,APGSACC,APGSAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPAPGS1   
          UPDATE    APSGSTA1;APGSLED,APGSACC,APGSAMT
          RETURN
.
WRAPGS1   RESET     KEY14
          WRITE     APSGSTA1,KEY14;APGSLED,APGSACC,APGSAMT
          RETURN
.
DEAPGS1   RESET     KEY14
          DELETE    APSGSTA1,KEY14
          RETURN
.**********************************************************************
. NEZTMP0C IO routines                           Called by Lots
.**********************************************************************
RSNEZC1   RESET     KEY5
          READ      NEZTMP0C,KEY5;;
          RETURN
.
RANEZC1   RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      NEZTMP0C,KEY5;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZC1   RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      NEZTMP0C,KEY5;NEZCCST,NEZCAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZC1   MOVE      ZERO,OVRCD
          READKS    NEZTMP0C;NEZCCST,NEZCAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZC1   MOVE      ZERO,OVRCD
          READKP    NEZTMP0C;NEZCCST,NEZCAMT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZC1   UPDATE    NEZTMP0C;NEZCCST,NEZCAMT
          RETURN
.
WRNEZC1   RESET     KEY5
          WRITE     NEZTMP0C,KEY5;NEZCCST,NEZCAMT
          RETURN
.
DENEZC1   RESET     KEY5
          DELETE    NEZTMP0C,KEY5
          RETURN
.
.-----------------------------------------------
. Check batch totals for balance here.
.-----------------------------------------------
CBAT0000  MOVE      ZERO,BATCHCAL
          MOVE      TWO,EXIT           * set to no records found
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
.
CBAT0100  CALL      RKAPIM1
          BRANCH    OVRCD,CBAT0900
          MATCH     APBMBCH,APIMBCH
          GOTO      CBAT0900 IF NOT EQUAL
          MOVE      ZERO,EXIT          * set to records found
          ASSIGN    APIMTOT+APIMGST-APIMDIS+BATCHCAL,BATCHCAL
          MOVE      ZERO,ALLTOTAL
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RSAPIN1
.
CBAT0200  CALL      RKAPIN1
          BRANCH    OVRCD,CBAT0300
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH     KEY40,KEY51
          GOTO      CBAT0300 IF NOT EQUAL
          ADD       APINAMT,ALLTOTAL
          GOTO      CBAT0200
.
CBAT0300  IF        !(APIMTOT-APIMDIS=ALLTOTAL)
            CLEAR      DISPMSG
            APPEND     "Invoice Unbalanced. Creditor/Ref. : ",DISPMSG
            APPEND     APIMCRD,DISPMSG
            APPEND     SLASH,DISPMSG
            APPEND     APIMREF,DISPMSG
            RESET      DISPMSG
            CALL       MESSAGE1
            MOVE       ONE,EXIT
            GOTO       CBAT9999
          ENDIF
          GOTO      CBAT0100
.
CBAT0900  IF        !(BATCHCAL=APBMTOT)
            MOVE      "Batch Unbalanced. ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
            GOTO       CBAT9999
          ENDIF
          IF        EXIT=TWO
            MOVE      "No Transactions in this Batch. ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
            GOTO       CBAT9999
          ENDIF
CBAT9999  RETURN
.----------------------------------------
. Read parameters & Open Files
.----------------------------------------
INITB000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,SIXTY6;*52,FMCOIDIS
.
. Create Temp File APSTMPxx
.--------------------------
          PACK      TMPFILE,APSTMPIN,PORT
          REP       " 0",TMPFILE
          PACK      MAKETMP,MAKE,TMPFILE,INDEX
          PACK      KILLTMP,KILL,TMPFILE
.
          CLOSE     APSTMPA1
          EXECUTE   KILLTMP,TASKID
          EXECUTE   MAKETMP,TASKID
          OPEN      APSTMPA1,TMPFILE
.
          PACK      TMPFILE,APSGSTIN,PORT
          REP       " 0",TMPFILE
          PACK      MAKETMP,MAKE,TMPFILE,INDEX
          PACK      KILLTMP,KILL,TMPFILE
.
          CLOSE     APSGSTA1
          EXECUTE   KILLTMP,TASKID
          EXECUTE   MAKETMP,TASKID
          OPEN      APSGSTA1,TMPFILE
.
          RETURN
.----------------------------------------------------------------------
. Write Details to creditors for G.S.T.
.----------------------------------------------------------------------
ALGST000  MOVE      ZERO,UPDATEXP
          MOVE      SP70,KEY14
          CALL      RSAPGS1
          CALL      RKAPGS1
          BRANCH    OVRCD,ALGST900
          MOVE      APGSLED,APINLED
          MOVE      APGSACC,APINACC
          MOVE      APGSAMT,APINAMT
          CALL      MVINP000               * Move in Fields
          CALL      WRBCH000               * Update Batch Record
          PACK      KEY14,APGSLED,APGSACC
          CALL      DEAPGS1
          GOTO      ALGST000
.
ALGST900  RETURN
.-------------------------------------------------------------
. Check for Delete of Outstanding Orders Received
.-------------------------------------------------------------
CHKOD000  PACK      KEY14,APINORD,SP70
          CALL      RSAPOD1
          CALL      RKAPOD1
          BRANCH    OVRCD,CHKOD100
          PACK      KEY8,APODISC,APODORD
          MATCH     KEY8,APINORD
          GOTO      CHKOD999 IF EQUAL
.
CHKOD100  PACK      KEY8,APINORD
          CALL      RDAPCI1
          IF        OVRCD=0
            CALL      DEAPCI1
          ENDIF
CHKOD999  RETURN
.--------------------------------------------------
. Update New Supply System
.--------------------------------------------------
UPSIN000  
.
UPSIN100  UNPACK    APINORD,KEY1,KEY7
          CALL      RLSIPA1
          BRANCH    OVRCD,UPSIN999
          IF        OVRCD=2
            CLEAR     DISPMSG
            APPEND    "Purchase Order ",DISPMSG
            APPEND    APINORD,DISPMSG
            APPEND    " Locked. - ",DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      UPSIN100
          ENDIF
.
          PACK      KEY12,KEY7,APINCAT
          CALL      RDSIPF1
          BRANCH    OVRCD,UPSIN840
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          BRANCH    OVRCD,UPSIN840
.
          MOVE      ONE,SIFACTOR
          MATCH     SP70,SIPCCAT
          GOTO      UPSIN700 IF EQUAL
.
          PACK      KEY7,SIPCCAT
          CALL      RDSIIA1
          BRANCH    OVRCD,UPSIN700
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPFSUT
          CALL      RDSIFA1
.
UPSIN700  ASSIGN    APINQTY*SIFACTOR,SIUSQTY
          ADD       SIUSQTY,SIPCIQT
          IF        IBCNUGST=2
            ADD       APINGST,SIPCIGS
            ASSIGN    SIPCTIN+(APINAMT+APINGST),SIPCTIN
            IF        SNCOPURC=1
              ASSIGN    (APINAMT+APINGST),SIUSCST   * Total Invoiced
            ELSE
              MOVE      APINAMT,SIUSCST
            ENDIF
          ELSE
            MOVE      ZERO,SIPCIGS
            ADD       APINAMT,SIPCTIN
            MOVE      APINAMT,SIUSCST   * Total Invoiced
          ENDIF
.
          CALL      UPSIPC1
.
          MATCH     SP70,SIPCCAT
          GOTO      UPSIN840 IF EQUAL
.
          CALL      UPCOST00            * Update SIN Costs
.
UPSIN840  CALL      UUSIPA1
.
UPSIN850  MOVE      APIMIDT,SIPEDATE
          REP       " 0",SIPEDATE
          CALL      RSIPE000   * Get Period End Date
          IF        OVRCD=1
            MOVE      "Period Not on File. Invalid Date - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      "######",KEY6
          ELSE
            PACK      KEY6,SIPEYEAR,SIPEPER
          ENDIF
          PACK     KEY11,APINCRD,KEY6
          UNPACK   KEY11,APSBSUP,APSBDAT
          CALL     RLAPSB1
          BRANCH   OVRCD,UPSIN860,UPSIN850
          ADD      SIUSCST,APSBIAM
          CALL     UPAPSB1
          CALL     UUAPSB1
          GOTO     UPSIN900
.
UPSIN860  MOVE     SIUSCST,APSBIAM
          MOVE     ZERO,APSBIBD
          MOVE     ZERO,APSBPAM
          MOVE     ZERO,APSBPBD
          MOVE     ZERO,APSBRAM
          MOVE     ZERO,APSBRBD
          MOVE     SP70,APSBSPA
          CALL     WRAPSB1
.
. Calculate Variation for Purchase Analysis
.-------------------------------------------
UPSIN900  IF       IBCNUGST=2
            IF       SNCOPURC=1
              MOVE     SIPFCST,F12P4
            ELSE
              MOVE     SIPFCST,F12P4
              SUB      SIPFGST,F12P4
            ENDIF
            ASSIGN   SIUSCST-(F12P4*SIUSQTY/SIFACTOR),SIUSCST
          ELSE
            ASSIGN   SIUSCST-(SIPFCST*SIUSQTY/SIFACTOR),SIUSCST
          ENDIF
          MOVE     ZERO,SIUSQTY    * No Quantity Variation for Invoices
          COMPARE  ZERO,SIUSCST
          CALL     SINORDUS IF NOT EQUAL
.
UPSIN999  RETURN
.--------------------------------------------------
. Update SIN Costs
.--------------------------------------------------
UPCOST00  PACK      KEY27,SIPCCAT,APINCRD,SIPFSUT
          CALL      RDSIIC1
          BRANCH    OVRCD,UPCOST99
.
          IF        HLASTCIN=2
            IF        IBCNUGST=2
              ASSIGN    (APINAMT+APINGST)/APINQTY,SIICLCT
            ELSE
              ASSIGN    APINAMT/APINQTY,SIICLCT
            ENDIF
          ENDIF
            
          IF        HAVGCOST=2
            CALL      UPAVG000          * Average Cost Update
          ENDIF
.
          CALL      UPSIIC1
          CALL      UPSIIA1
.
UPCOST99  RETURN
.--------------------------------------------------
. Update Average Costs
.--------------------------------------------------
UPAVG000  MOVE      ZERO,SECTOR
UPAVG100  MOVE      SIPCCAT,KEY7
          CALL      RLSIIA1
          BRANCH    OVRCD,UPAVG999,UPAVG200
.
          CALL      TOTSOH00          * Calculate Total SOH for Catalog
          IF        SIUSQTY>=TOTALSOH
            IF        IBCNUGST=2
              ASSIGN    APINAMT/APINQTY,F12P4
              ASSIGN    (F12P4/SIFACTOR),SIIAAVC
            ELSE
              ASSIGN    (APINUCT/SIFACTOR),SIIAAVC
            ENDIF
          ELSE
            ASSIGN    (APINAMT+(TOTALSOH-SIUSQTY)*SIIAAVC)/TOTALSOH,SIIAAVC
          ENDIF
          MOVE      SIIAQIN,F10
          ADD       SIUSQTY,F10
          MOVE      F10,SIIAQIN
          CALL      UPSIIA1
          CALL      UUSIIA1
          GOTO      UPAVG999
.
UPAVG200  IF        SECTOR<5
            DISPLAY    *P1:24,*W
            ADD        ONE,SECTOR
            GOTO       UPAVG100
          ENDIF
          CLEAR     DISPMSG
          APPEND    "Catalog Record Locked : ",DISPMSG
          APPEND    SIPCCAT,DISPMSG
          APPEND    " - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          MOVE      ZERO,SECTOR
          GOTO      UPAVG100
.
UPAVG999  RETURN
.------------------------------------------------------------------------------
. Calculate Total SOH
.------------------------------------------------------------------------------
TOTSOH00  MOVE      ZERO,TOTALSOH
          MOVE      FALSE,LOOPVAR
          IF        SIIANON=0
            PACK      KEY12,SIPCCAT,SP70
            CALL      RSSIIE1
            REPEAT 
              CALL      RKSIIE1
              MATCH     SIPCCAT,SIIECAT
              IF        !@EQUAL | OVRCD=1
                MOVE      TRUE,LOOPVAR
              ELSE
                ADD       SIIESOH,TOTALSOH
              ENDIF
            UNTIL     LOOPVAR=TRUE
          ENDIF
.
TOTSOH99  RETURN
