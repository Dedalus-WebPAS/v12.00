. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS36                                             *
. * Desc      :   Input Unused Cheques                                 *
. **********************************************************************
. * Date      :   19.02.1991                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. *V10.03.01  27/02/2013  Ania P              CAR 281021               *
. *           RECOMPILED for FMSBNKKY                                  *
. * V9.03.01  09.05.2003  Henry Son  CAR 38580                         *
. *           Check to see if Cheques are in Limbo.                    *
. *           If they are in Limbo then cannot delete them.            *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.03  28.04.2000 Sandra Barcham                                *
. *           Recompiled for FMSBNKKY                                  *
. * VF.00.02  12.01.2000 Sandra Barcham                                *
. *           Recompiled for FMSBNKKY                                  *
. * VF.00.01  05.01.2000 Charles Handaya                               *
. *           Recompiled for APSMASIO                                  *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS36
.             open files and initialise variables
.             WHILE user wants to modify data DO
.                  get desired option
.                  allow user to modify option
.             END WHILE
.             IF user wants to post data
.                  THEN write data
.             END IF
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       APSCILFD/INC       * Limbo Cheques                 *I-F0901
          INC       APSMASFD/INC       * creditor
          INC       FMSBNKFD/INC       * bank rec
          INC       FMSCHQFD/INC       * cheque
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
.
ACCEPT    FORM      1        * accept mode (1=on)
CHEQ1     DIM       8        * cheque no.
CHEQ2     DIM       8        * cheque no.
CORREF    DIM       15
DIM35     DIM       35       * reason
TRANDATE  DIM       8        * transaction date
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
REPUNIQ   INIT      "yzxywxvwuvtustrsqrpqopnomnlmkljkijhighfgefdecdbcabZa":
                    "YZXYWXVWUVTUSTRSQRPQOPNOMNLMKLJKIJHIGHFGEFDECDBCAB9A":
                    "8978675645342312 1"
.
PRGID     INIT      "IBAFMS36"
PRGNAM    INIT      "Input Unused Cheques"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0050    CALL      PROC0000           * get key
          BRANCH    EXIT,ML9999        * exit program
.
ML0100    CALL      PCHQ0000           * get key
          BRANCH    EXIT,ML0050        * exit program
.
          CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML0100        * exit screen
.
          CALL      POST0000           * save data
          GOTO      ML0100
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening apsmasaf";  * creditor
          OPEN      APSMASA1,"apsmasaf"
.
          DISPLAY   *P64:24,"fmsbnkaf";  * bank rec
          OPEN      FMSBNKA1,"fmsbnkaf"
          OPEN      FMSBNKA2,"fmsbnkaf"
          OPEN      FMSBNKA3,"fmsbnkaf"
.
          DISPLAY   *P64:24,"fmschqaf";  * cheque
          OPEN      FMSCHQA1,"fmschqaf"
.
          DISPLAY   *P64:24,"apscilaf";  * Cheques in Limbo            *I-F0901
          OPEN      APSCILA1,"apscilaf"                                *I-F0901
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.**********************************************************************
.  PROC - Keyin cheque account and number              Called By ML
.        Returns  - FMCHCHQ  (bank account)
.**********************************************************************
PROC0000  UNPACK    SP70,CHEQ1,CHEQ2
          CALL      RCHQFM00           * display screen
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          CALL      KCHQFM00                * get cheque account
          BRANCH    EXIT,PROC9500,PROC9500  * exit program ?
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCHCHQ,*HOFF,SP2,FMCHDES;
.
PROC9000  MOVE      ZERO,EXIT          * continue
          GOTO      PROC9999
.
PROC9500  MOVE      ONE,EXIT           * quit
.
PROC9999  RETURN
.**********************************************************************
.  PCHQ - Keyin cheque account and number              Called By ML
.        Returns  - FMCHCHQ  (bank account)
.                   CRECNO   (cheque number)
.**********************************************************************
PCHQ0000  UNPACK    SP70,CHEQ1,CHEQ2
          CALL      RBNKFM00           * display screen
          MOVE      "28",CCOL
          MOVE      "5",CVERT
          MOVE      ZERO,CCHEQREC           * set for cheques
          CALL      XBNKFM00                * get cheque/receipt no
          BRANCH    EXIT,PCHQ9500,PCHQ9500  * exit program ?
          DISPLAY   *PCCOL:CVERT,*V2LON,CHEQNO;
          PACK      CHEQ1,CHEQNO,SP70
          PACK      KEY36,FMCHCHQ,ZERO,CRECNO,SP70
          CALL      RSFMBN2                 * check if cheque already on file
          CALL      RKFMBN2                 * get next record
          BRANCH    OVRCD,PCHQ2000          * no more records ?
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,SP70
          MATCH     KEY36,KEY31
          GOTO      PCHQ8000 IF EQUAL       * out of range ?
.
PCHQ2000  MOVE      "28",CCOL
          MOVE      "6",CVERT
          MOVE      ZERO,CCHEQREC           * set for cheques
          PACK      UNDLN70,CHEQ1,SP70
          CALL      XBNKFM00                * get cheque/receipt no
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          BRANCH    EXIT,PCHQ3000,PCHQ0000  * exit program ?
.
PCHQ3000  LOAD      CHEQNO,EXIT,CHEQ1       * keep from cheq if no entry
          DISPLAY   *PCCOL:CVERT,*V2LON,CHEQNO;
          PACK      CRECNO,SP7,CHEQNO,SP70
          PACK      CHEQ2,CHEQNO,SP70
          PACK      KEY36,FMCHCHQ,ZERO,CRECNO,SP70
          CALL      RSFMBN2                 * check if cheque already on file
          CALL      RKFMBN2                 * get next record
          BRANCH    OVRCD,PCHQ4000          * no more records ?
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,SP70
          MATCH     KEY36,KEY31
          GOTO      PCHQ8000 IF EQUAL       * out of range ?
.
PCHQ4000  MATCH     CHEQ1,CHEQ2
          GOTO      PCHQ9000 IF NOT LESS
.
          DISPLAY   *P1:24,*B,*EF,"From Cheque Cannot Be After To Cheque - ";
          CALL      HITENTER
          GOTO      PCHQ0000
.
.---- cheq already exists ----
.
PCHQ8000  UNPACK    FMBNDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:20,*B,*EF,*V2LON,"NOTE   ",*HOFF:
                    " - This program is for the input of cheques that":
                           " have not been":
                    *P1:21,"          issued. To cancel a Cheque that ":
                           "has been issued, use the":
                    *P1:22,"          Cancelled Cheque Input Program in ":
                           "the Accounts Payable Section":
                    *P1:24,*V2LON,"ERROR",*HOFF:
                    " - Cheque Number Already on File for ",CPCDATE," - ";
          CALL      HITENTER
....                *P1:24,*V2LON,"WARNING",*HOFF:
....                " - Cheque Number Already on File for ",CPCDATE:
....                ". Continue (",*V2LON,"Y",*HOFF,"/":
....                *V2LON,"N",*HOFF,") ? ";
....      MOVE      "N",DEFYESNO       * set default to no
....      MOVE      "74",CCOL
....      MOVE      "24",CVERT
....      CALL      YORN0000
....      DISPLAY   *P1:20,*EF;
....      BRANCH    FYESNO,PCHQ9000
          GOTO      PCHQ0000
.
.
PCHQ9000  MOVE      ZERO,EXIT          * continue
          GOTO      PCHQ9999
.
PCHQ9500  MOVE      ONE,EXIT           * quit
.
PCHQ9999  RETURN
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA, redisps      *
.******************************************************************************
SCRA0000  DISPLAY   *P1:7,*EF,*V2LON:
                   *P1:8," 1",*HOFF,". Transaction Date     : ",*V2LON,CPCDATE:
                   *P1:9," 2",*HOFF,". Reason               : ",*V2LON,DIM35;
.
SCRA9999  RETURN
.******************************************************************************
.* SELA - Perform Screen A                       Called by ML                 *
.*        Returns : EXIT     (1=exit program)                                 *
.******************************************************************************
SELA0000  UNPACK    SP70,CPCDATE,DIM35
          CALL      SCRA0000           * display screen A
          MOVE      ONE,ACCEPT         * in accept mode
          MOVE      ZERO,CCITEM        * reset item desired
.
SELA0100  ADD       ONE,CCITEM         * get next item
          COMPARE   ONE,ACCEPT
          CALL      MAINQST  IF NOT EQUAL   * get option if not in accept mode
.
          MOVE      "28",CCOL          * get screen address
          MOVE      "7",CVERT
          ADD       CCITEM,CVERT
          MOVE      CCITEM,F2          * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELA9500,SELA9000:              * quit, continue
                       SELA1100,SELA1200               * execute option
          BRANCH    ACCEPT,SELA0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELA0100           * get another option
.
SELA0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELA0100
.
.---- option 1 ----
.
SELA1100  PACK      TRANDATE,CCC,CYY,CMM,CDD      * get transaction date
          REP       " 0",TRANDATE
          UNPACK    TRANDATE,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,SELA1100
          PACK      TRANDATE,CCENT,CYEAR,CMON,CDAY
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  MOVE      UNDLN70,DIM35
          KEYIN     *PCCOL:CVERT,*DV,DIM35:
                    *PCCOL:CVERT,*V2LON,DIM35,*EL
          PACK      DIM35,DIM35,SP70
          MATCH     SP70,DIM35
          GOTO      SELA1200 IF EQUAL  * no reason entered ?
          GOTO      SELA0100
.
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.**********************************************************************
.  POST - Post data                                    Called By ML
.        Requires - DIM35    (reason)
.                   TRANDATE (transaction date)
.                   FMCHCHQ  (bank account)
.                   CHEQ[12] (cheque number range)
.**********************************************************************
POST0000  
          CALL      GNID0000           * get next id
          UNPACK    KEY20,FMBNBNK,FMBNUNQ
.
          MOVE      CHEQ1,F8           * get first cheq number
          SUB       ONE,F8
.
.---- cheq loop ----
.
POST1000  ADD       ONE,F8             * get next cheq number
          MOVE      F8,CHEQNO
          MATCH     CHEQNO,CHEQ2
          GOTO      POST9999 IF LESS   * no more cheques ?
.
          DISPLAY   *P1:24,"Processing : ",*V2LON,CHEQNO,*EF;
          MOVE      CHEQNO,CFORM8
          MOVE      CFORM8,CFORM15
          MOVE      CFORM15,CRECNO
...
...       Check to see if the cheque is in Limbo ie. Between           *I-F0901
...       Creditors and GL. If the Cheque is in Limbo                  *I-F0901
...       then output a message and don't process this cheque.         *I-F0901
...                                                                    *I-F0901
          PACK      KEY40,CRECNO,SP70                                  *I-F0901
          CALL      RSAPCL1                 * Posit record             *I-F0901
          CALL      RKAPCL1                 * Get next record          *I-F0901
          BRANCH    OVRCD,POST1100          * Not in Limbo so process  *I-F0901
...                                                                    *I-F0901
          MATCH     APCLDOC,CRECNO          * same cheque ?            *I-F0901
          GOTO      POST1100 IF NOT EQUAL   * Not in Limbo so process  *I-F0901
...                                                                    *I-F0901
          DISPLAY   *P1:20,*B,*EF,*V2LON,"NOTE   ",*HOFF:              *I-F0901
                    " - This program is for the input of cheques ":    *I-F0901
                           "that have not been":                       *I-F0901
                    *P1:21,"          issued. To cancel a Cheque ":    *I-F0901
                           "that has been issued, use the":            *I-F0901
                    *P1:22,"          Cancelled Cheque Input ":        *I-F0901
                           "Program in the Accounts Payable Section":  *I-F0901
                    *P1:24,*V2LON,"ERROR",*HOFF:                       *I-F0901
                    " - Cheque ",CFORM8," Already used in ":           *I-F0901
                    "Batch ",APCLBCH," - ";                            *I-F0901
          CALL      HITENTER                                           *I-F0901
          DISPLAY   *P1:20,*B,*EF," ",*HOFF                            *I-F0901
          GOTO      POST1000                                           *I-F0901
...
POST1100  PACK      KEY36,FMCHCHQ,ZERO,CRECNO,SP70
          CALL      RSFMBN2                 * check if cheque already on file
          CALL      RKFMBN2                 * get next record
          BRANCH    OVRCD,POST2000          * no more records ?
          PACK      KEY31,FMBNBNK,FMBNTYP,FMBNREF,SP70
          MATCH     KEY36,KEY31
          GOTO      POST1000 IF EQUAL       * out of range ?
.
POST2000  
          CALL      GNID0000           * get next id
          UNPACK    KEY20,FMBNBNK,FMBNUNQ
.
          CALL      RDFMBN1
          COMPARE   ZERO,OVRCD
          GOTO      POST2000 IF EQUAL
.
          UNPACK    KEY20,FMBNBNK,FMBNUNQ
          MOVE      CRECNO,FMBNREF        * set up vars
          MOVE      TRANDATE,FMBNDAT
          MOVE      DIM35,FMBNNAM
          MOVE      TRANDATE,FMBNPDT
.         PACK      FMBNPDT,CCC,CYY,CMM,CDD,SP70
.         REP       " 0",FMBNPDT
          MOVE      "0",FMBNTYP
          MOVE      "0",FMBNAMT
          MOVE      "2",FMBNPRE
          UNPACK    SP70,FMBNLED,FMBNACC,FMBNFYR,FMBNBCH,FMBNLNO,FMBNCRE
          CALL      WRFMBN1            * write record
          GOTO      POST1000
.
POST9999  RETURN
.**********************************************************************
. Get next bank rec unique id
.**********************************************************************
GNID0000
          MOVE      "~~~~~",KEY5
          PACK      KEY20,FMCHCHQ,KEY5
          CALL      RSFMBN1
          CALL      RPFMBN1
          BRANCH    OVRCD,GNID1150
          MATCH     FMBNBNK,FMCHCHQ
          GOTO      GNID1150 IF NOT EQUAL
.
          UNPACK    FMBNUNQ,ANS,KEY4
          MOVE      ZERO,F4
          MOVE      KEY4,F4
.
GNID1100  
          COMPARE   "9999",F4          * at end of group ?
          GOTO      GNID1110 IF NOT EQUAL
.
          MATCH     "z",ANS
          GOTO      BADERROR IF EQUAL
.
          REP       REPUNIQ,ANS
          MOVE      ZERO,F4
.
GNID1110
          ADD       ONE,F4
          PACK      KEY20,FMCHCHQ,ANS,F4,SP70
          CALL      RDFMBN1
          BRANCH    OVRCD,GNID1200
          GOTO      GNID1100
.
.---- no records !! ----
.
GNID1150  MOVE      ONE,F4
          MOVE      " ",ANS
          PACK      KEY20,FMCHCHQ,ANS,F4,SP70
.
GNID1200  
.
GNID9999  RETURN
.
BADERROR  DISPLAY   *P1:24,"CONTACT IBA - fmsbnkaf full for ",FMCHCHQ," - ";
          CALL      HITENTER
          GOTO      ML9999
.******************************************************************************
.* Redisplays                                                                 *
.******************************************************************************
RCHQFM00  DISPLAY   *P1:4,"    Cheque Account       : ",*EF;
          RETURN
.
RBNKFM00  DISPLAY   *P1:4,"    Cheque Account       : ":
                           *V2LON,FMCHCHQ,*HOFF,SP2,FMCHDES,*EL:
                    *P1:5,"    From Cheque Number   : ",*EL:
                           *V2LON,CHEQ1,*HOFF,*EL:
                    *P1:6,"    To   Cheque Number   : ",*EL:
                           *V2LON,CHEQ2,*EF;
          RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       APSCILIO/INC       * Limbo cheques                 *I-F0901
          INC       APSMASIO/INC       * creditor
          INC       FMSBNKIO/INC       * bank rec
          INC       FMSCHQIO/INC       * cheque
          INC       FMSCHQKY           * cheque
          INC       FMSBNKKY           * cheque no.
          INC       FMSSTDCD           * FMS Acc. standard routines
