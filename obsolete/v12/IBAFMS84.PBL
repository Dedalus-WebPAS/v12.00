. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS84                                             *
. * Desc      :   Budget by Cost Centre                                *
. **********************************************************************
. * Date      :   02.10.1990                                           *
. * Author    :   Paul Duncan                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.02  23.12.1999 Sandra Barcham                                *
. *           Recompiled for fixing Audit File                         *
. * VF.00.01  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               * 
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS84
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.             delete temporary files
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * FMS Budget Audit update routines
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSBPFFD/INC
          INC       FMSCCAFD/INC
          INC       FMSSBAFD/INC
          INC       FMSXCSFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
ANBUDGET  FORM      11.2
.
DISPCNT   FORM      2
.
FORM4P2   FORM      4.2 
FORM12P2  FORM      12.2
FORM12P4  FORM      12.4
FORM12P5  FORM      12.5
FORM13    FORM      13.2
FORM13P2  FORM      13.2
FORM14P2  FORM      14.2
.
MAXDISP   FORM      2
MODE      FORM      1
.
NOPERD    FORM      2
NUMREC    FORM      2
.
PAGENO     FORM     3
.
RECCNT    FORM      2
.
SCRFLAG   FORM      1
SCVERT    FORM      2
SEL01     DIM       33
SEL02     DIM       33
SEL03     DIM       33
SEL04     DIM       33
SEL05     DIM       33
SEL06     DIM       33
SEL07     DIM       33
SEL08     DIM       33
SEL09     DIM       33
SEL10     DIM       33
SEL11     DIM       33
SEL12     DIM       33
SEL13     DIM       33
SEL14     DIM       33
SELARRAY  DIM       33[50]
.
COSTCODE  DIM       12
SUBJCODE  DIM       12
.
BUDFILE   DIM       8
FILENAME  DIM       8
STATFILE  DIM       8
DISPFLAG  FORM      1
LINENUMB  FORM      2
SDISPCNT  FORM      2
SKEY31    DIM       31
VALOPTN   DIM       4
.
PRGID     INIT      "IBAFMS84"
PRGNAM    INIT      "Budget by Cost Centre"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      OPTN0000           * get option
          BRANCH    EXIT,ML9999
.
ML1000    CALL      GREC0000           * get record
          BRANCH    EXIT,ML0100        * exit program
.
          BRANCH    OPTION,ML2000,ML3000
.
ML2000    MOVE      ZERO,MODE          * start at start of file
          CALL      IBUD0000           * input bugets by cost centre
.
ML3000    CALL      SACN0000           * select account number
          BRANCH    EXIT,ML1000
          CALL      PROC0000           * process record
          BRANCH    EXIT,ML3000,ML0100
.
          GOTO      ML3000             * get next entry
.
ML9999    MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD                     * display screen
          CALL      OUPD0000                     * open files for update procs
          CALL      OUDA0000                     * open files for audit updates
.
          DISPLAY   *P56:24,"Opening fmsxcsaf";  * 
          OPEN      FMSXCSA1,"fmsxcsaf"
          OPEN      FMSXCSA3,"fmsxcsaf"
.
          DISPLAY   *P64:24,"fmsbpfaf";  * 
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsccaaf";  * 
          OPEN      FMSCCAA1,"fmsccaaf"
          OPEN      FMSCCAA2,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * 
          OPEN      FMSSBAA1,"fmssbaaf"
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.*************************************************************************
.*  OPTN - Select the main option        Called by ML0100                *
.*************************************************************************
OPTN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF,". Exit":
                    *P1:5,*V2LON,"1",*HOFF,". Insert":
                    *P1:6,*V2LON,"2",*HOFF,". Modify": 
                    *P1:8,"Select Option :"
.
OPTN1000  KEYIN     *P17:8,*DV,UNDLN1,*P17:8,*V2LON,FORM1
          COMPARE   "0",FORM1            * exit?
          GOTO      OPTN9000 IF EQUAL
.
          MOVE      FORM1,OPTION
          BRANCH    OPTION,OPTN2000,OPTN3000
          BEEP 
          GOTO      OPTN1000
.
OPTN2000  DISPLAY   *P70:3,*V2LON,"Insert"
          MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN3000  DISPLAY   *P70:3,*V2LON,"Modify"
          MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
.******************************************************************************
.* GREC - Enter the record details               Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.******************************************************************************
GREC0000  MOVE      ONE,PAGENO
          BRANCH    POSTFLAG,GREC1500
          CALL      RBTYFM00           * display screen
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          CALL      KBTYFM00           * keyin budget type code
          BRANCH    EXIT,GREC9000,GREC9000
.
          DISPLAY   *P28:4,*V2LON,FMBTCODE,*HOFF,*P41:4,FMBTDESC
.
          MATCH     "2",FMBTSTAT
          GOTO      GREC8500 IF EQUAL
.
.** open the budget file for this budget type
.
          PACK      BUDTYPE,FMBTCODE,SP70
          CLEAR     BUDFILE
          APPEND    FMSB,BUDFILE
          APPEND    FMBTCODE,BUDFILE
          RESET     BUDFILE
          REP       " 0",BUDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA1,BUDFILE
          TRAPCLR   IO
          BRANCH    OVRCD,GREC8100
.
          CLEAR     STATFILE
          APPEND    FMSC,STATFILE
          APPEND    FMBTCODE,STATFILE
          RESET     STATFILE
          REP       " 0",STATFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSBUA1,STATFILE
          TRAPCLR   IO
          BRANCH    OVRCD,GREC8000
.
GREC1000  MOVE      "5",CVERT
          MOVE      "28",CCOL
          CALL      KLMAFM00              * keyin ledger code
          BRANCH    EXIT,GREC0000,GREC9000
          DISPLAY   *P41:5,FMLADESC
          MOVE      "12",NOPERD           * calculate number of periods
          ADD       FMLAPERS,NOPERD
.
GREC1500  MOVE      "6",CVERT
          MOVE      "28",CCOL
          MOVE      ZERO,POSTFLAG
          DISPLAY   *P28:6,*EF
          CALL      KCCAFM00              * keyin Cost centre
          BRANCH    EXIT,GREC1000,GREC9000
          DISPLAY   *P28:6,*V2LON,FMCCCOCE,*HOFF,*P41:6,FMCCDESC
          GOTO      GREC9999
.
GREC8000  DISPLAY   *P1:24,*EL,*B,"Budget Stat File ",STATFILE:
                    " Not Available - ";
          CALL      HITENTER
          GOTO      GREC0000
.
GREC8100  DISPLAY   *P1:24,*EL,*B,"Budget File ",BUDFILE:
                    " Not Available - ";
          CALL      HITENTER
          GOTO      GREC0000
.
GREC8500  DISPLAY   *P1:24,*EL,*B,"Budget File Locked. No Maintenance ":
                    "Allowed - ";
          CALL      HITENTER
          GOTO      GREC0000
.
GREC9000  MOVE      ONE,EXIT
.
GREC9999  RETURN
.*************************************************************************
.* IBUD - Input budgets for accounts by cost centre    Called by ML2000  *
.*************************************************************************
IBUD0000  MOVE      ONE,SCRFLAG          * doing first screen
          BRANCH    MODE,IBUD0500
          MOVE      ONE,NUMREC
          PACK      KEY31,FMLALEDG,FMCCCOCE,SP70
          CALL      RSFMXC3              * position at start of files that are 
.                                        * adding to this account
          DISPLAY   *P1:7,*EL,*P1:8,*V2LON,*ULON,"Item",*HOFF,SP1:
                    *V2LON,*ULON,"Account Code",*HOFF,SP1:
                    *V2LON,*ULON,"Description    ",SP20,*HOFF,SP1:
                    *V2LON,*ULON,"Profile",*HOFF,SP5:
                    *V2LON,*ULON,"Annual Budget ",*EF;
.
          MOVE      ONE,PAGENO
          MOVE      ZERO,DISPCNT
          MOVE      EIGHT,CVERT
          GOTO      IBUD1000
.
IBUD0500  MOVE      MAXDISP,CVERT        * work out display position and number
          MOVE      MAXDISP,DISPCNT
          ADD       EIGHT,CVERT
.
          LOAD      KEY31,MAXDISP,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                  SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14
.
          CALL      RSFMXC3              * read the budget chosen
.
IBUD1000  CALL      RKFMXC3              * read next record
          BRANCH    OVRCD,IBUD9999
.
          MATCH     FMLALEDG,FMXCLED     * right ledger?
          GOTO      IBUD9999 IF NOT EQUAL
.
          MATCH     FMCCCOCE,FMXCCOS     * right account?
          GOTO      IBUD9999 IF NOT EQUAL
.
          PACK      SKEY31,FMXCLED,FMXCCOS,FMXCSPR,FMXCSUB,SP70
.
          MOVE      FMXCCOS,COSTCODE
          MOVE      FMXCSUB,SUBJCODE
          CALL      BCOD0000
          PACK      KEY14,FMXCLED,ACCOUNT
          CALL      RDFMAM1
          BRANCH    OVRCD,IBUD1000
          MATCH     "6",FMAMTYPE
          GOTO      IBUD1000 IF NOT LESS    * check account is a posting account
          CALL      CLRB0000
          PACK      KEY14,FMXCLED,ACCOUNT
          CALL      RDFMBU1
.
IBUD2000  ADD       ONE,DISPCNT
          ADD       ONE,CVERT
.
          DISPLAY   *P1:CVERT,*EF,*V2LON,DISPCNT,*HOFF,DOT,*P6:CVERT,ACCOUNT:
                    SP1,FMAMDESC
.
          CALL      CKBL0000           * check for budget link
          BRANCH    EXIT,IBUD1000      * Return to top of loop
.
          CALL      IBPR0000             * input budget profile
          BRANCH    EXIT,IBUD9999
.
          PACK      KEY31,SKEY31,SP70
          CALL      RDFMXC3
.
          CALL      IABD0000             * input annual budget
          CALL      WBUD0000             * write a budget profile
          PACK      KEY31,FMXCLED,FMXCCOS,FMXCSPR,FMXCSUB,SP70
          STORE     KEY31,DISPCNT,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14
.
          ADD       ONE,NUMREC
          COMPARE   "23",CVERT           * full page
          GOTO      IBUD1000 IF LESS     * no - keep going
.
          DISPLAY   *P1:9,*EF
          MOVE      ZERO,DISPCNT
          MOVE      EIGHT,CVERT
          ADD       ONE,PAGENO
          GOTO      IBUD1000
.
IBUD9999  RETURN
.**********************************************************************
.  CKBL - check for budget link                        Called By ML
.        Requires - FMBTCODE, FMAMLEDG, FMAMACCT
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CKBL0000  PACK      FILENAME,FMSL,FMBTCODE,SP70  * get desired filename
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * look for file opening error
          OPEN      FMSLBUA1,FILENAME            * open file (if possible)
          TRAPCLR   IO
          BRANCH    OVRCD,CKBL9000               * file not found ? (continue)
          OPEN      FMSLBUA2,FILENAME            * open file (key2 for PRCFMSAA)
.
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      RDFMBL1
          BRANCH    OVRCD,CKBL9000               * record not found ? (continue)
          GOTO      CKBL9500                     * record found ? (quit)
.
CKBL9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKBL9999
.
CKBL9500  MOVE      ONE,EXIT           * quit
          DISPLAY   *P1:24,*B,*EF,"Budget Link Exists for this Account - ";
          CALL      HITENTER
.
CKBL9999  RETURN
.****************************************************************************
.  BCOD - get account code from subjective and cost codes    Called by lots
.        Requires - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD2B  (separater char)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - ACCOUNT   (account code)
.****************************************************************************
BCOD0000  STORE     COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      ACCOUNT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          COMPARE   FMSUUD2A,ONE
          GOTO      BCOD1000 IF NOT EQUAL         * separator char in use ?
.
          PACK      ACCOUNT,ACCOUNT,FMSUUD2B      * include sep. char
.
BCOD1000  PACK      ACCOUNT,ACCOUNT,SUBJCODE,SP70 * add subj code
.
BCOD9999  RETURN
.****************************************************************************
.  GCOD - get subjective and cost codes from account code    Called by lots
.        Requires - ACCOUNT   (account code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.*************************************************************************
.* IBPR - keyin the budget profile for this related account              *
.*                     called by : IBUD1000                              *
.*************************************************************************
IBPR0000  MOVE      "55",CCOL
          MOVE      CVERT,SCVERT
          MOVE      DISPCNT,SDISPCNT
.
          MOVE      FMXCLED,FMLALEDG
          MOVE      FMXCLED,KEY2 
          MOVE      FMBTYEAR,FMLCYEAR
          PACK      KEY14,FMXCLED,ACCOUNT
          CALL      CLRB0000
          CALL      RDFMBU1
.
IBPR0400  PACK      FMBUCUPR,FMBUCUPR,SP70
          MATCH     FMBUCUPR,SP70
          GOTO      IBPR0500 IF EQUAL   * no default ?
          MOVE      FMBUCUPR,UNDLN70    * set up default value
.
IBPR0500  CALL      KBPFFM00            * keyin budget profile
          MOVE      SCVERT,CVERT
          MOVE      SDISPCNT,DISPCNT
          BRANCH    EXIT,IBPR1000,IBPR9500
.
          DISPLAY   *P55:CVERT,*V2LON,FMBPCODE;
          MOVE      FMBPCODE,FMBUCUPR   * set up budget profile records
          GOTO      IBPR8000
.
IBPR1000  MATCH     UNDLN30,UNDLN70    * did we use a default?
          GOTO      IBPR8000 IF EQUAL  * no - so must have an entry - go back
          DISPLAY   *P55:CVERT,*V2LON,FMBUCUPR;
          PACK      KEY9,FMLALEDG,FMBTYEAR,FMBUCUPR
          CALL      RDFMBP1
          GOTO      IBPR8000
.
IBPR8000  MOVE      ZERO,EXIT
          GOTO      IBPR9999
.
IBPR9500  MOVE      ONE,EXIT
.
IBPR9999  PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
          RETURN          
.*************************************************************************
.* IABD - Input the annual budget                     Called by IBUD1000 *
.*************************************************************************
IABD0000  CALL      CANB0000            * calculate annual budget from file read
.
          COMPARE   ZERO,ANBUDGET       * have we got a default value?
          GOTO      IABD1000 IF EQUAL
.
          KEYIN     *P66:CVERT,*DV,ANBUDGET:
                    *P66:CVERT,*RV,*V2LON,ANBUDGET:
                    *P66:CVERT,*DV,ANBUDGET
.
          GOTO      IABD9999
.
IABD1000  KEYIN     *P66:CVERT,*DV,UNDLN11,*DV,DOT,*DV,UNDLN2:
                    *P66:CVERT,*V2LON,ANBUDGET:
                    *P66:CVERT,*DV,ANBUDGET
.
IABD9999  RETURN
.*************************************************************************
.* WBUD - Write a budget record           Called by IBUD2000             *
.*************************************************************************
WBUD0000  MATCH     SP3,FMBUCUPR        * have we got a profile
          GOTO      WBUD0500 IF NOT EQUAL
.
          CALL      CBTS0000            * calculate budget - 1/12 each
          GOTO      WBUD2000
.
WBUD0500  MOVE      ONE,DISPFLAG
          CALL      CBUD0000            * calc budget
.
WBUD2000  MOVE      FMXCLED,FMBUCULD
          MOVE      ACCOUNT,FMBUCUAC
          PACK      KEY14,FMBUCULD,FMBUCUAC
          CALL      RAFMBU1            * is it already there
          BRANCH    OVRCD,WBUD3000
.
          CALL      UPBUD000           * yes - update
          GOTO      WBUD4000
.
WBUD3000  MOVE      ONE,AUDTTYPE
          CALL      WAFMBU00           * Write audit record
          CALL      WRFMBU1            * no - write
.
WBUD4000  COMPARE   ONE,FMCOCALC
          GOTO      WBUD9999 IF NOT EQUAL
.
          MOVE      FMBUCULD,LEDGER               * set up file variables
          MOVE      FMBUCUAC,ACCOUNT
          PACK      UTYPE,BUDTYPE,SP70
          PROC      FMSUA000           * set for update
.
WBUD9999  RETURN
.*************************************************************************
.* SACN - Select account number that relates to this ledger              *
.*        Returns : EXIT = 1 - exit = 0 - valid item chosen              *
.*                     called by : ML2000                                *
.*************************************************************************
SACN0000  DISPLAY   *P1:7,*EL,*P1:8,*V2LON,*ULON,"Item",*HOFF,SP1:
                    *V2LON,*ULON,"Account Code",*HOFF,SP1:
                    *V2LON,*ULON,"Description    ",SP20,*HOFF,SP1:
                    *V2LON,*ULON,"Profile",*HOFF,SP5:
                    *V2LON,*ULON,"Annual Budget ",*EF;
.
          MOVE      ONE,POSTFLAG
          IF        PAGENO>1
            PACK      KEY31,SEL01,SP70
            CALL      RSFMXC3
            CALL      RPFMXC3
          ELSE
            PACK      KEY31,FMLALEDG,FMCCCOCE,SP20
            CALL      RSFMXC3
          ENDIF
          CALL      CSEL0000          * clear screen variables(SEL)
.
SACN1000  MOVE      "14",NUMREC
          CALL      DACN0000            * Display next page of relative accounts
.
          CLEAR     VALOPTN
          DISPLAY   *P1:24,*EL,"Select Item, ";
          MOVE      "23",CCOL
.
          BRANCH    EXIT,SACN2000       * is there a next page
          DISPLAY   "(",*V2LON,"N",*HOFF,")ext Page, ";
          ADD       "13",CCOL
          APPEND    ANSN,VALOPTN
.
SACN2000  COMPARE   ONE,PAGENO         * no previous page if we are on page one
          GOTO      SACN3000 IF EQUAL
.
          DISPLAY   "(",*V2LON,"P",*HOFF,")revious Page, ";
          ADD       "17",CCOL
          APPEND    ANSP,VALOPTN
.
SACN3000  DISPLAY   "e(",*V2LON,"X",*HOFF,")it ?"
          APPEND    ANSX,VALOPTN
.
SACN4000  IF        PAGENO<=50
            MOVE      SEL01,SELARRAY[PAGENO]   * store all 1st Keys
          ELSE
            DISPLAY   *P1:24,*EL,"Array out of bounds.  ";  * > 20 pages
            CALL      HITENTER
          ENDIF
          KEYIN     *PCCOL:24,*EL,*DV,UNDLN2,*PCCOL:24,*V2LON,DIM2
          TYPE      DIM2
          GOTO      SACN9000 IF EQUAL
.
          REP       UPPLOW,DIM2
          RESET     VALOPTN
          SCAN      DIM2,VALOPTN            * valid option chosen?
          GOTO      SACN4000 IF NOT EQUAL
.
          REP       "N1P2X3",DIM2 
          MOVE      DIM2,FORM1
          BRANCH    FORM1,SACN4500,SACN5000,SACN8000
.
          GOTO      SACN4000
.
SACN4500  ADD       ONE,PAGENO
          DISPLAY   *P1:9,*EF
          GOTO      SACN1000
.
SACN5000  SUB       ONE,PAGENO
          CALL      CSEL0000
          MOVE      SELARRAY[PAGENO],KEY31
          CALL      RSFMXC3
          CALL      RPFMXC3
          IF        OVRCD=1
            MOVE      SP70,KEY31
            CALL      RSFMXC3
          ENDIF
          GOTO      SACN1000
.
SACN8000  MOVE      TRUE,EXIT          
          MOVE      ONE,POSTFLAG
          GOTO      SACN9999
.
SACN9000  MOVE      DIM2,CCITEM
          COMPARE   CCITEM,ZERO    * cant be less than zero
          GOTO      SACN4000 IF NOT LESS
. 
          COMPARE   CCITEM,TEN4    * a valid selection?
          GOTO      SACN4000 IF LESS
. 
          COMPARE   CCITEM,MAXDISP    * a valid selection?
          GOTO      SACN4000 IF LESS
. 
          MOVE      FALSE,EXIT          
          MOVE      DIM2,FORM2
          LOAD      KEY31,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07:
                                 SEL08,SEL09,SEL10,SEL11,SEL12,SEL13,SEL14
          CALL      RDFMXC3
          BRANCH    OVRCD,SACN4000
          MOVE      FMXCCOS,COSTCODE
          MOVE      FMXCSUB,SUBJCODE
          CALL      BCOD0000
.
          PACK      KEY14,FMXCLED,ACCOUNT,SP70
          UNPACK    KEY14,FMBUCULD,FMBUCUAC
          CALL      CLRB0000
          CALL      RDFMBU1        * read the budget chosen
          MOVE      FMBUCUAC,FMAMACCT
          MOVE      ZERO,ANBUDGET
          UNPACK    SP70,FMBPDESC,FMBPCODE
.
SACN9999  RETURN
.*************************************************************************
.* CLRB - Clear budget record                                            *
.*************************************************************************
CLRB0000  MOVE      SP70,FMBUCUPR
          MOVE      ZERO,FMBUCA01
          MOVE      ZERO,FMBUCA02
          MOVE      ZERO,FMBUCA03
          MOVE      ZERO,FMBUCA04
          MOVE      ZERO,FMBUCA05
          MOVE      ZERO,FMBUCA06
          MOVE      ZERO,FMBUCA07
          MOVE      ZERO,FMBUCA08
          MOVE      ZERO,FMBUCA09
          MOVE      ZERO,FMBUCA10
          MOVE      ZERO,FMBUCA11
          MOVE      ZERO,FMBUCA12
          MOVE      ZERO,FMBUCA13
.
          MOVE      ZERO,FMBUCB01
          MOVE      ZERO,FMBUCB02
          MOVE      ZERO,FMBUCB03
          MOVE      ZERO,FMBUCB04
          MOVE      ZERO,FMBUCB05
          MOVE      ZERO,FMBUCB06
          MOVE      ZERO,FMBUCB07
          MOVE      ZERO,FMBUCB08
          MOVE      ZERO,FMBUCB09
          MOVE      ZERO,FMBUCB10
          MOVE      ZERO,FMBUCB11
          MOVE      ZERO,FMBUCB12
          MOVE      ZERO,FMBUCB13
.
          MOVE      ZERO,FMBUCC01
          MOVE      ZERO,FMBUCC02
          MOVE      ZERO,FMBUCC03
          MOVE      ZERO,FMBUCC04
          MOVE      ZERO,FMBUCC05
          MOVE      ZERO,FMBUCC06
          MOVE      ZERO,FMBUCC07
          MOVE      ZERO,FMBUCC08
          MOVE      ZERO,FMBUCC09
          MOVE      ZERO,FMBUCC10
          MOVE      ZERO,FMBUCC11
          MOVE      ZERO,FMBUCC12
          MOVE      ZERO,FMBUCC13
.
CLRB9999  RETURN
.*************************************************************************
.* DACN - Display the next page of accounts on file  Called by SACN1000  *
.*        Requires the file pointer to be positioned before the first    *
.*        record that we wish to display                                 *
.*************************************************************************
DACN0000  MOVE      ONE,DISPCNT
          MOVE      NINE,LINENUMB
          MOVE      ZERO,RECCNT
          DISPLAY   *P1:9,*EF
          CALL      CSEL0000          * clear screen variables(SEL)
.
DACN1000  CALL      RKFMXC3           * read next record
          BRANCH    OVRCD,DACN9000
.
          MATCH     FMLALEDG,FMXCLED  * right ledger?
          GOTO      DACN9000 IF NOT EQUAL
.
          MATCH     FMCCCOCE,FMXCCOS  * right ledger?
          GOTO      DACN9000 IF NOT EQUAL
.
          MOVE      FMXCCOS,COSTCODE
          MOVE      FMXCSUB,SUBJCODE
          CALL      BCOD0000
          PACK      KEY14,FMXCLED,ACCOUNT
          CALL      RDFMAM1
          BRANCH    OVRCD,DACN1000
          MATCH     "6",FMAMTYPE
          GOTO      DACN1000 IF NOT LESS    * check account is a posting account
          CALL      CLRB0000
          CALL      RDFMBU1
.
          COMPARE   "23",LINENUMB        * full page?
          GOTO      DACN8000 IF EQUAL
.
          CALL      CANB0000            * calculate annual budget
.
          DISPLAY   *P1:LINENUMB,*V2LON,DISPCNT,*HOFF,DOT,*P6:LINENUMB,ACCOUNT:
                    *P19:LINENUMB,FMAMDESC:
                    *P55:LINENUMB,*V2LON,FMBUCUPR,*P66:LINENUMB,ANBUDGET
          ADD       ONE,RECCNT
          PACK      KEY31,FMXCLED,FMXCCOS,FMXCSPR,FMXCSUB,SP70
          MOVE      LINENUMB,FORM2
          SUB       "8",FORM2
          STORE     KEY31,FORM2,SEL01,SEL02,SEL03,SEL04,SEL05,SEL06,SEL07,SEL08:
                                SEL09,SEL10,SEL11,SEL12,SEL13,SEL14
          MOVE      DISPCNT,MAXDISP
          ADD       ONE,LINENUMB
          ADD       ONE,DISPCNT
          COMPARE   "14",NUMREC         * do we want to display the whole screen
          GOTO      DACN1000 IF EQUAL
.
          COMPARE   RECCNT,NUMREC       * if not have we displayed enough?
          GOTO      DACN1000 IF NOT EQUAL
          MOVE      ZERO,EXIT        * there is a next page
          GOTO      DACN9999
.
DACN8000  MOVE      ZERO,EXIT        * there is a next page
          CALL      RPFMXC3          * read back so when next page only 
.                                    * have to read forward
          GOTO      DACN9999
.
DACN9000  MOVE      ONE,EXIT         * no next page
.
DACN9999  RETURN
.*************************************************************************
.* CURP - Display current page                 Called by RBPFFM30        *
.*************************************************************************
CURP0000  MOVE      SEL01,KEY31
          CALL      RSFMXC3           * position on the first record
          CALL      RPFMXC3           * read back one
.
          DISPLAY   *P1:7,*EL,*P1:8,*V2LON,*ULON,"Item",*HOFF,SP1:
                    *V2LON,*ULON,"Account Code",*HOFF,SP1:
                    *V2LON,*ULON,"Description    ",SP20,*HOFF,SP1:
                    *V2LON,*ULON,"Profile",*HOFF,SP5:
                    *V2LON,*ULON,"Annual Budget ",*EF;
          CALL      DACN0000          * display screen
.
CURP9999  RETURN
.*************************************************************************
.* CSEL - Clear the SEL variables               Called by DACN0000       *
.*************************************************************************
CSEL0000  UNPACK    SP70,SEL01,SEL02
          UNPACK    SP70,SEL03,SEL04
          UNPACK    SP70,SEL05
          UNPACK    SP70,SEL06,SEL07
          UNPACK    SP70,SEL08,SEL09
          UNPACK    SP70,SEL10
          UNPACK    SP70,SEL11,SEL12
          UNPACK    SP70,SEL13,SEL14
.
CSEL9999  RETURN
.*************************************************************************
.* PROC - Keyin the budget profile and process the record                *
.*                     called by : ML2000                                *
.*************************************************************************
PROC0000  MOVE      ZERO,MODE
          MOVE      TWO,SCRFLAG          * doing second screen
          PACK      KEY6,FMLALEDG,FMBTYEAR
          CALL      RDFMLC1
          COMPARE   ZERO,OVRCD          * record present?
          GOTO      PROC0100 IF EQUAL
.
          DISPLAY   *P1:24,*B,*EF,"WARNING - Budget year not present. Using":
                           " current financial year. Tap <",*V2LON,"ENTER":
                           *HOFF,">"
          KEYIN     ANS;
.         
          PACK      KEY6,FMLALEDG,CCC,CYY
          CALL      RDFMLC1
.
PROC0100  CALL      RBPFFM10            * display screen
          MOVE      ZERO,MODE
.
PROC0500  CALL      DBUD0000            * display the budget thats on file
          CALL      DOPT0000
          CALL      CKBL0000           * check for budget link
          BRANCH    EXIT,PROC9000      * exit screen if linked
          GOTO      PROC5000
.         
PROC0600  MOVE      "8",CVERT           * standard keyin variables
          MOVE      "28",CCOL
          CALL      KBPFFM00            * keyin budget profile
          BRANCH    EXIT,PROC1000,PROC9000
          DISPLAY   *P28:8,*EL,*V2LON,FMBPCODE,*HOFF,*P41:8,FMBPDESC;
.
PROC1000  CALL      DOPT0000
          COMPARE   ZERO,ANBUDGET
          GOTO      PROC1100 IF EQUAL
.
          MATCH     SP3,FMBPCODE
          GOTO      PROC1150 IF NOT EQUAL
          DISPLAY   *P45:10,*EL,*P45:11,*EL,*P45:12,*EL,*P45:13,*EL:
                    *P45:14,*EL,*P45:15,*EL,*P45:16,*EL,*P45:17,*EL:
                    *P45:18,*EL,*P45:19,*EL,*P45:20,*EL,*P45:21,*EL:
                    *P45:22,*EL;
.
          BRANCH    MODE,PROC5000
          CALL      CABD0000          * 1/12 each
          GOTO      PROC5000
.
PROC1100  CALL      KABD0000           * keyin annual budget
          BRANCH    EXIT,PROC2000,PROC5000
.
PROC1150  MOVE      ZERO,DISPFLAG
          CALL      CBUD0000           * calculate budget
          GOTO      PROC5000
.
PROC2000  CALL      KBSP0000           * keyin budgets seperating
.
PROC5000  CALL      MAINQST
          MOVE      ONE,MODE
          COMPARE   "0",CCITEM             * post?
          GOTO      PROC8000 IF EQUAL 
          COMPARE   "-1",CCITEM             * cancel?
          GOTO      PROC9000 IF EQUAL 
.
          BRANCH    CCITEM,PROC0600,PROC1100
.
          MOVE      NOPERD,FORM2          * work out how many selections on scr
          ADD       TWO,FORM2
          COMPARE   CCITEM,FORM2          * is the choice too big?
          GOTO      PROC5000 IF LESS
          ENDSET    FMBPCODE
          APPEND    SP30,FMBPCODE
          RESET     FMBPCODE               * is profile code null?
          MATCH     SP3,FMBPCODE
          GOTO      PROC6000 IF EQUAL      * yes - you can chose any field
.
          BEEP
          GOTO      PROC5000
.
PROC6000  SUB       TWO,CCITEM
          CALL      KBUD0000              * keyin budget for one period
          CALL      CANB0000              * recalculate annual budget
          DISPLAY   *P29:9,*EL,*V2LON,ANBUDGET
          GOTO      PROC5000
.
PROC8000  CALL      POST0000
.
PROC9000
          MOVE      ONE,EXIT
.
PROC9999  RETURN
.*************************************************************************
.* DOPT - Display valid options                  Called by lots          *
.*************************************************************************
DOPT0000  MATCH     SP70,FMBPCODE
          GOTO      DOPT1000 IF NOT EQUAL
.
          DISPLAY    *P1:8,*V2LON," 1",*HOFF,". ":
                     *P1:9,*V2LON," 2",*HOFF,". ":
                    *P1:10,*V2LON," 3",*HOFF,". ":
                    *P1:11,*V2LON," 4",*HOFF,". ":
                    *P1:12,*V2LON," 5",*HOFF,". ":
                    *P1:13,*V2LON," 6",*HOFF,". ":
                    *P1:14,*V2LON," 7",*HOFF,". ":
                    *P1:15,*V2LON," 8",*HOFF,". ":
                    *P1:16,*V2LON," 9",*HOFF,". ":
                    *P1:17,*V2LON,"10",*HOFF,". ":
                    *P1:18,*V2LON,"11",*HOFF,". ":
                    *P1:19,*V2LON,"12",*HOFF,". ":
                    *P1:20,*V2LON,"13",*HOFF,". ":
                    *P1:21,*V2LON,"14",*HOFF,". ";
.
          COMPARE   ZERO,FMLAPERS  * are there thirteen periods?
          GOTO      DOPT9999 IF EQUAL
.
          DISPLAY   *P1:22,*V2LON,"15",*HOFF,". ";
          GOTO      DOPT9999
.
DOPT1000  DISPLAY   *P1:8,*V2LON," 1",*HOFF,". ":
                    *P1:9,*V2LON," 2",*HOFF,". ":
                    *P1:10,"   ":
                    *P1:11,"   ":
                    *P1:12,"   ":
                    *P1:13,"   ":
                    *P1:14,"   ":
                    *P1:15,"   ":
                    *P1:16,"   ":
                    *P1:17,"   ":
                    *P1:18,"   ":
                    *P1:19,"   ":
                    *P1:20,"   ":
                    *P1:21,"   ":
                    *P1:22,"   ";
.
DOPT9999  RETURN
.*************************************************************************
.* CLRS - Clear the bottom right of the screen   Called by PROC2000      *
.*************************************************************************
CLRS0000  MOVE      "9",CVERT
.
CLRS1000  DISPLAY   *P28:CVERT,SP30
          ADD       ONE,CVERT
.
          COMPARE   TWENTY3,CVERT
          GOTO      CLRS1000 IF NOT EQUAL
.
          PACK      FMBPCODE,FMBPCODE,SP5
          MATCH     SP3,FMBPCODE             * are we using a budget profile
          GOTO      CLRS9999 IF NOT EQUAL    * no - get out
.
          MOVE      ZERO,MODE
.
CLRS9999  RETURN
.
.*************************************************************************
.* CBUD - Calculate the budget for each period    Called by PROC3000     *
.*************************************************************************
CBUD0000  
          MOVE      ANBUDGET,FORM14P2   * move the annual budget into each feild
          DIV       "100",FORM14P2      * Divide each period by 100 to get value
          MULT      FMBPPC1,FORM14P2    * Multiply each period by its percentage
          MOVE      FORM14P2,FMBUCA01   * move the annual budget into each feild
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC2,FORM14P2
          MOVE      FORM14P2,FMBUCA02
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC3,FORM14P2
          MOVE      FORM14P2,FMBUCA03
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC4,FORM14P2
          MOVE      FORM14P2,FMBUCA04
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC5,FORM14P2
          MOVE      FORM14P2,FMBUCA05
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC6,FORM14P2
          MOVE      FORM14P2,FMBUCA06
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC7,FORM14P2
          MOVE      FORM14P2,FMBUCA07
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC8,FORM14P2
          MOVE      FORM14P2,FMBUCA08
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC9,FORM14P2
          MOVE      FORM14P2,FMBUCA09
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC10,FORM14P2
          MOVE      FORM14P2,FMBUCA10
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC11,FORM14P2
          MOVE      FORM14P2,FMBUCA11
.
          MOVE      ANBUDGET,FORM14P2
          DIV       "100",FORM14P2
          MULT      FMBPPC12,FORM14P2
          MOVE      FORM14P2,FMBUCA12
.
          MOVE      ANBUDGET,FORM12P2       * calculate the budget for the last
          SUB       FMBUCA01,FORM12P2       * period of the year
          SUB       FMBUCA02,FORM12P2
          SUB       FMBUCA03,FORM12P2
          SUB       FMBUCA04,FORM12P2
          SUB       FMBUCA05,FORM12P2
          SUB       FMBUCA06,FORM12P2
          SUB       FMBUCA07,FORM12P2
          SUB       FMBUCA08,FORM12P2
          SUB       FMBUCA09,FORM12P2
          SUB       FMBUCA10,FORM12P2
          SUB       FMBUCA11,FORM12P2
.
          BRANCH    FMLAPERS,CBUD1000
          MOVE      FORM12P2,FMBUCA12
          GOTO      CBUD2000
.
CBUD1000  SUB       FMBUCA12,FORM12P2
          MOVE      FORM12P2,FMBUCA13
          GOTO      CBUD2000
.
.
CBUD2000  BRANCH    DISPFLAG,CBUD9999       * display data ?
          DISPLAY   *P28:10,*EL,*V2LON,FMBUCA01,*P45:10,*HOFF,FMBPPC1,"%":
                    *P28:11,*EL,*V2LON,FMBUCA02,*P45:11,*HOFF,FMBPPC2,"%":
                    *P28:12,*EL,*V2LON,FMBUCA03,*P45:12,*HOFF,FMBPPC3,"%":
                    *P28:13,*EL,*V2LON,FMBUCA04,*P45:13,*HOFF,FMBPPC4,"%":
                    *P28:14,*EL,*V2LON,FMBUCA05,*P45:14,*HOFF,FMBPPC5,"%":
                    *P28:15,*EL,*V2LON,FMBUCA06,*P45:15,*HOFF,FMBPPC6,"%":
                    *P28:16,*EL,*V2LON,FMBUCA07,*P45:16,*HOFF,FMBPPC7,"%":
                    *P28:17,*EL,*V2LON,FMBUCA08,*P45:17,*HOFF,FMBPPC8,"%":
                    *P28:18,*EL,*V2LON,FMBUCA09,*P45:18,*HOFF,FMBPPC9,"%":
                    *P28:19,*EL,*V2LON,FMBUCA10,*P45:19,*HOFF,FMBPPC10,"%":
                    *P28:20,*EL,*V2LON,FMBUCA11,*P45:20,*HOFF,FMBPPC11,"%":
                    *P28:21,*EL,*V2LON,FMBUCA12,*P45:21,*HOFF,FMBPPC12,"%" 
.
          COMPARE   ZERO,FMLAPERS          * are there thirteen periods?
          GOTO      CBUD9999 IF EQUAL
.
          DISPLAY   *P28:22,*V2LON,FMBUCA13,*P45:22,*HOFF,FMBPPC13,"%"
.
CBUD9999  RETURN
.*************************************************************************
.* KBUD - keyin a period budget               Called by PROC4000         *
.*************************************************************************
KBUD0000  MOVE      CCITEM,CVERT
          ADD       NINE,CVERT
.
          KEYIN     *P28:CVERT,"____________.__":
                    *P28:CVERT,*V2LON,FORM12P2:
                    *P28:CVERT,*DV,FORM12P2
.
          STORE     FORM12P2,CCITEM,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                    FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                    FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                    FMBUCA13
.
KBUD9999  RETURN                  
         
.*************************************************************************
.* CBTS - Calculate the annual budget from the period budgets entered    *
.*                     called by : PROC4000                              *
.*************************************************************************
CBTS0000 
          MOVE      ANBUDGET,FORM13
          DIV       NOPERD,FORM13
          MOVE      ZERO,FORM2
          MOVE      ANBUDGET,FORM13P2
.
CBTS1400  
          ADD       ONE,FORM2
.
          COMPARE   NOPERD,FORM2
          GOTO      CBTS1450 IF EQUAL
          STORE     FORM13,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                 FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                 FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                 FMBUCA13
          SUB       FORM13,FORM13P2
          GOTO      CBTS1400
.
CBTS1450  
          MOVE      NOPERD,FORM2
          SUB       "11",FORM2      * if 12 periods - form2 = 1
          STORE     FORM13P2,FORM2,FMBUCA12,FMBUCA13
.
CBTS9999  RETURN
.*************************************************************************
.* CABD - Calculate the annual budget from the period budgets entered    *
.*                     called by : PROC4000                              *
.*************************************************************************
CABD0000  MOVE      ANBUDGET,FORM13
          DIV       NOPERD,FORM13
          MOVE      NINE,CVERT
          MOVE      ZERO,FORM2
          MOVE      ANBUDGET,FORM13P2
.
CABD1400  ADD       ONE,CVERT
          ADD       ONE,FORM2
.
          COMPARE   NOPERD,FORM2
          GOTO      CABD1450 IF EQUAL
          STORE     FORM13,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                 FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                 FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                 FMBUCA13
          DISPLAY   *P27:CVERT,*EL,*V2LON,FORM13
          SUB       FORM13,FORM13P2
          GOTO      CABD1400
.
CABD1450  DISPLAY   *P27:CVERT,*EL,*V2LON,FORM13P2
          MOVE      NOPERD,FORM2
          SUB       "11",FORM2      * if 12 periods - form2 = 1
          STORE     FORM13P2,FORM2,FMBUCA12,FMBUCA13
          GOTO      CABD1550
.
CABD1500  DISPLAY   *P29:9,*EL,*V2LON,ANBUDGET
.
          COMPARE   "0",ANBUDGET       * is there a budget
          GOTO      CABD9999 IF EQUAL
.
CABD1550  MOVE      ANBUDGET,FORM13
.
CABD1600  MOVE      "9",CVERT
          MOVE      "0",FORM2
          ENDSET    FMBPCODE
          APPEND    SP10,FMBPCODE
          RESET     FMBPCODE
.
          MATCH     SP3,FMBPCODE
          GOTO      CABD9999 IF EQUAL
.
CABD2000  ADD       ONE,CVERT
          ADD       ONE,FORM2
.
          LOAD      FORM12P4,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                   FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                   FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                   FMBUCA13
.
          DIV       FORM13,FORM12P4         * calculate percentages
          MULT      "100",FORM12P4
          MOVE      FORM12P4,FMBPPC13
.
          DISPLAY   *P45:CVERT,FMBPPC13,"%"
          STORE     FMBPPC13,FORM2,FMBPPC1,FMBPPC2,FMBPPC3,FMBPPC4:
                                   FMBPPC5,FMBPPC6,FMBPPC7,FMBPPC8:
                                   FMBPPC9,FMBPPC10,FMBPPC11,FMBPPC12:
                                   FMBPPC13
.
          COMPARE   NOPERD,FORM2
          GOTO      CABD2000 IF NOT EQUAL
.
CABD9999  RETURN
.*************************************************************************
.*  KABD - Keyin annual budget                       Called by PROC2000  *
.*************************************************************************
KABD0000  CALL      CLRS0000               * clear screen
          KEYIN     *P29:9,*DV,UNDLN11:
                    *P29:9,*V2LON,ANBUDGET:
                    *P29:9,*DV,ANBUDGET
.
          MATCH     SP3,FMBPCODE            * was there a budget profile?
          GOTO      KABD1000 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      KABD9999
.
KABD1000  COMPARE   ZERO,ANBUDGET             * was an annual budget entered?
          GOTO      KABD8000 IF EQUAL
.
          CALL      CABD0000                * one twelfth in each
          MOVE      TWO,EXIT
          GOTO      KABD9999
.
KABD8000  MOVE      ONE,EXIT               * go and keyin seperately
          GOTO      KABD9999
.
KABD9999  RETURN
.*************************************************************************
.* KBSP - keyin the budget for each month seperately                     *
.*                     called by : PROC3000                              *
.*************************************************************************
KBSP0000  MOVE      ONE,CCITEM
          CALL      CLRS0000      * clear the part of the screen that we want to
.
KBSP1000  MOVE      SP30,FMBPDESC
          CALL      KBUD0000               * keyin budget
.
          COMPARE   NOPERD,CCITEM            * have we done all 13
          GOTO      KBSP9000 IF EQUAL
.
          ADD       ONE,CCITEM             * increment ccitem for insert mode
          GOTO      KBSP1000
.
KBSP9000  CALL      CANB0000               * calculate annual budget
          DISPLAY   *P29:9,*EL,*V2LON,ANBUDGET
.
KBSP9999  RETURN
.*************************************************************************
.* CANB - Calculate annual budget           Called by KBSP9000           *
.*************************************************************************
CANB0000  MOVE      ZERO,FORM2
          MOVE      ZERO,ANBUDGET
.
CANB1000  ADD       ONE,FORM2
          LOAD      FORM12P4,FORM2,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                   FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                   FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                   FMBUCA13
.
          ADD       FORM12P4,ANBUDGET
          COMPARE   NOPERD,FORM2
          GOTO      CANB1000 IF NOT EQUAL
.
.
CANB9999  RETURN
.*************************************************************************
.* POST - Write to the budget file           Called by PROC8000          *
.*************************************************************************
POST0000  DISPLAY   *P50:24,*V2LON,*BLINKON,"*** Posting ***"
          PACK      KEY14,FMLALEDG,FMAMACCT
          MOVE      FMLALEDG,FMBUCULD               * set up file variables
          MOVE      FMAMACCT,FMBUCUAC
          MOVE      FMBPCODE,FMBUCUPR
.
          CALL      RAFMBU1                         * is record already there?
          BRANCH    OVRCD,POST1000
.
          CALL      UPBUD000                        * yes - update it
          GOTO      POST2000
.
POST1000  MOVE      ONE,AUDTTYPE
          CALL      WAFMBU00                        * Write audit record
          CALL      WRFMBU1                         * no - write it
.
POST2000  COMPARE   ONE,FMCOCALC
          GOTO      POST9999 IF NOT EQUAL
.
          MOVE      FMBUCULD,LEDGER               * set up file variables
          MOVE      FMBUCUAC,ACCOUNT
          PACK      UTYPE,BUDTYPE,SP70
          PROC      FMSUA000           * update for budget links
.
POST9999  RETURN
.*************************************************************************
.* DBUD - Display the budget that is on file for these parametres        *
.*        Requires a valid record to have been read                      *
.*                     called by : PROC1000                              *
.*************************************************************************
DBUD0000  MOVE      SP7,FMBPCODE,FMBPDESC0
          PACK      KEY9,FMBUCULD,FMLACYRR,FMBUCUPR
          CALL      RDFMBP1           * get profile description
          DISPLAY   *P28:8,*V2LON,FMBUCUPR,*HOFF,*P41:8,FMBPDESC;
.
          MOVE      ZERO,CCITEM
          MOVE      NINE,CVERT
.
.** Calculate the annual budget as we display the budget for each period
.
          MOVE      ZERO,ANBUDGET
DBUD1000  ADD       ONE,CCITEM
          ADD       ONE,CVERT
.
          LOAD      FORM12P2,CCITEM,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                    FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                    FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12:
                                    FMBUCA13
          DISPLAY   *P28:CVERT,*V2LON,FORM12P2;
.
          MATCH     SP70,FMBPCODE
          GOTO      DBUD1100 IF EQUAL
          LOAD      FORM4P2,CCITEM,FMBPPC1,FMBPPC2,FMBPPC3,FMBPPC4:
                                   FMBPPC5,FMBPPC6,FMBPPC7,FMBPPC8:
                                   FMBPPC9,FMBPPC10,FMBPPC11,FMBPPC12:
                                   FMBPPC13
.
          DISPLAY   *P45:CVERT,FORM4P2,"%";
.
DBUD1100  ADD       FORM12P2,ANBUDGET
          COMPARE   NOPERD,CCITEM   * done all periods?
          GOTO      DBUD1000 IF NOT EQUAL
.
          DISPLAY   *P29:9,*V2LON,ANBUDGET;
.
DBUD9999  RETURN
.******************************************************************************
.* REDISPLAY ROUTINES FOR STANDARD KEYINS                                     *
.******************************************************************************
RBTYFM00  DISPLAY   *P1:4,*EF,*P5:4,"Budget Type",*P26:4,": ":
                    *P5:5,"Ledger",*P26:5,":":
                    *P5:6,"Cost Centre",*P26:6,":"
.
RBTYFM99  RETURN
.
RCCAFM00
RLMAFM00  DISPLAY   *P1:4,*EF,*P5:4,"Budget Type",*P26:4,": ",*V2LON,FMBTCODE:
                    *HOFF,*P41:4,FMBTDESC:
                    *P5:5,"Ledger",*P26:5,": ",*V2LON,FMLALEDG,*HOFF:
                    *P41:5,FMLADESC:
                    *P5:6,"Cost Centre",*P26:6,": "
.
RLMAFM99  RETURN
.
RAMAFM00  DISPLAY   *P1:4,*EF,*P5:4,"Budget Type",*P26:4,": ",*V2LON,FMBTCODE:
                    *HOFF,*P41:4,FMBTDESC:
                    *P5:5,"Ledger",*P26:5,": ",*V2LON,FMLALEDG,*HOFF:
                    *P41:5,FMLADESC:
                    *P5:6,"Cost Centre",*P26:6,": ",*V2LON,FMCCCOCE
.
RAMAFM99  RETURN
.
RBPFFM00  DISPLAY   *P1:4,*EF,*P5:4,"Budget Type",*P26:4,": ",*V2LON,FMBTCODE:
                    *HOFF,*P41:4,FMBTDESC:
                    *P5:5,"Ledger",*P26:5,": ",*V2LON,FMLALEDG,*HOFF:
                    *P41:5,FMLADESC:
                    *P5:6,"Cost Centre ",*P26:6,": ",*V2LON,FMCCCOCE,*P41:6:
                    *HOFF,FMAMDESC
RBPFFM10  BRANCH    SCRFLAG,RBPFFM30,RBPFFM15    * which screen?
.
RBPFFM15  RESET     FMAMACCT,FMSUUD4A    * get subjective code from account code
          BUMP      FMAMACCT,2
          MOVE      FMAMACCT,FMSASUBJ
          RESET     FMAMACCT
          MOVE      FMLALEDG,FMSALEDG
          PACK      KEY14,FMSALEDG,FMSASUBJ
          CALL      RDFMSA1              * get subjective description
          DISPLAY   *P5:7,"Subjective",*P26:7,": ",*V2LON,FMSASUBJ,*HOFF:
                    *P41:7,FMSADESC,*EF;
          DISPLAY   *P5:8,"Budget Profile",*P26:8,":":
                    *P5:9,"Annual Budget",*P26:9,":":
                    *P5:10,FMLC01DE,*P26:10,":":
                    *P5:11,FMLC02DE,*P26:11,":":
                    *P5:12,FMLC03DE,*P26:12,":":
                    *P5:13,FMLC04DE,*P26:13,":":
                    *P5:14,FMLC05DE,*P26:14,":":
                    *P5:15,FMLC06DE,*P26:15,":":
                    *P5:16,FMLC07DE,*P26:16,":":
                    *P5:17,FMLC08DE,*P26:17,":":
                    *P5:18,FMLC09DE,*P26:18,":":
                    *P5:19,FMLC10DE,*P26:19,":":
                    *P5:20,FMLC11DE,*P26:20,":":
                    *P5:21,FMLC12DE,*P26:21,":" 
.
          COMPARE   ZERO,FMLAPERS  * are there thirteen periods?
          GOTO      RBPFFM20 IF EQUAL
.
          DISPLAY   *P5:22,FMLC13DE,*P26:22,":"
.
RBPFFM20  COMPARE   ZERO,ANBUDGET           * do we need to display any values
          GOTO      RBPFFM99 IF EQUAL
.
          DISPLAY   *P29:9,*V2LON,ANBUDGET:
                    *P28:10,*EL,*V2LON,FMBUCA01:
                    *P28:11,*EL,*V2LON,FMBUCA02:
                    *P28:12,*EL,*V2LON,FMBUCA03:
                    *P28:13,*EL,*V2LON,FMBUCA04:
                    *P28:14,*EL,*V2LON,FMBUCA05:
                    *P28:15,*EL,*V2LON,FMBUCA06:
                    *P28:16,*EL,*V2LON,FMBUCA07:
                    *P28:17,*EL,*V2LON,FMBUCA08:
                    *P28:18,*EL,*V2LON,FMBUCA09:
                    *P28:19,*EL,*V2LON,FMBUCA10:
                    *P28:20,*EL,*V2LON,FMBUCA11:
                    *P28:21,*EL,*V2LON,FMBUCA12
.
          COMPARE   ZERO,FMLAPERS          * are there thirteen periods?
          GOTO      RBPFFM99 IF EQUAL
.
          DISPLAY   *P28:22,*V2LON,FMBUCA13
          GOTO      RBPFFM99
.
RBPFFM30  CALL      CURP0000               * display current page
          DISPLAY   *P1:CVERT,*V2LON,SDISPCNT,*HOFF,DOT:
                    *P6:CVERT,ACCOUNT,SP1,FMAMDESC,*EF;
.
RBPFFM99  RETURN
.
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSBPFIO/INC
          INC       FMSCCAIO/INC
          INC       FMSSBAIO/INC
          INC       FMSXCSIO/INC
.
          INC       FMSAMAKY
          INC       FMSBTYKY
          INC       FMSBPFKY
          INC       FMSCCAKY
          INC       FMSLMAKY
.
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD           * FMS Acc. standard routinesQ
          INC       FMSUDACD           * FMS Budget Audit update routines
