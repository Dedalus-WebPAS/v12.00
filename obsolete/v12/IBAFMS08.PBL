. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS08                                             *
. * Desc      :   Subjective Code Maintenance                          *
. **********************************************************************
. * Date      :   03.10.1990                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filenames (FILENAM1 & FILENAM2).  *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.05  30.12.1999 Charles Handaya                               *
. *           Fixed write to Audit Files                               *
. * VF.00.04  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. * VF.00.03  09.11.1999 Charles Handaya                               *
. *           Fix Y2K of Audit Files Date (CCYYMMDD)                   *
. * VF.00.02  30.06.1999 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. *           srf 632475                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS08
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values for screens A,B,C
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get used to select screen (A,B,C)
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record's screen A
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF
          INC       FMSUDADF           * FMS audit update variables
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSBPFFD/INC       * consolidated cost centre
          INC       FMSCCAFD/INC       * cost centre
          INC       FMSCCCFD/INC       * consolidated cost centre
          INC       FMSCODFD/INC       * codes file
          INC       FMSCTRFD/INC       * normal tran file
          INC       FMSLEVFD/INC       * level code
          INC       FMSLMBFD/INC       * ledger report desc.
          INC       FMSONCFD/INC       * oncost
          INC       FMSPRCFD/INC       * print code
          INC       FMSRSFFD/INC       * report seq file
          INC       FMSSBAFD/INC       * subjective
          INC       FMSSSCFD/INC
          INC       FMSSLBFD/INC
          INC       FMSSTRFD/INC       * stat tran file
          INC       FMSTRNFD/INC       * normal tran file
          INC       FMSUWPFD/INC       * user defined wp. file
          INC       FMSXCSFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
DISPCNT   FORM      5                  * Counter
FMSTMP01  FILE      ASCII,FIXED=70     * WP Holding File Def'n 1
FILENAM1  DIM       8
NAME1     INIT      "fmstm1"
.
FMSTMP02  FILE      ASCII,FIXED=70     * WP Holding File Def'n 2
FILENAM2  DIM       8
NAME2     INIT      "fmstm2"
.
DIM31     DIM       31
DSIX      INIT      "6"
DSEVEN    INIT      "7"
DEIGHT    INIT      "8"
DNINE     INIT      "9"
CCLEV     DIM       3        * cc level
DELALL    FORM      1        * delete all the way up data tree in DREC   1=yes
DESC1     DIM       127
FILENAME  DIM       8
SLBNAME   DIM       8
FMSO      INIT      "fmso"
.
CP        INIT      "cp "              * word processor variables
TXT       INIT      ".txt "
WP        INIT      "wp "
WPDAT     INIT      ".txt 999 7 -1 70 14"
WPSTAT    FORM      2
.
STATUS    INIT      "                      "  * status
STATUS0   INIT      "Open"
STATUS1   INIT      "Open for Journals Only"
STATUS2   INIT      "Closed"
.
DTYPE     INIT      "           "             * description type
DTYPE0    INIT      "Combined"
DTYPE1    INIT      "Subjective"
DTYPE2    INIT      "Cost Centre"
.
MODESC    INIT      "      "                  * description type
MODESC1   INIT      "Insert"
MODESC2   INIT      "Delete"
.
NOADD     INIT      "No Subjective Allocated            "
TOTDESC   INIT      "                                   "
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
HEADSEQ   INIT      "00000"
TOTSEQ    INIT      "ZZZZZ"
.
MAXITEMS  FORM      "15"               * maximum no. of items on screen C + 1
SP12      INIT      "            "
.
ACCEPT    FORM      1                  * accept mode (1=on)
AMOUNTNO  FORM      1                  * amount number (param for DAMA, GAMA)
COSTCODE  DIM       12                 * cost centre code
CURLEVEL  DIM       3                  * current report level
CURPAGE   FORM      3                  * current page number
CURPRTC   DIM       3                  * new print code
CURCRP    DIM       1                  * new Credit Print
CURPRTP   DIM       5                  * new print position
DACCOUNT  DIM       35                 * temp account description
DEFLEVEL  DIM       3                  * current default level
DIM1A     DIM       1
DIM1B     DIM       1
DIM1C     DIM       1
DIM1D     DIM       1
DIM1E     DIM       1
FROMCOCE  DIM       12                 * start of CC range
ITEMNUM   FORM      2                  * item number
LINKONLY  FORM      1
MORE      FORM      1                  * more data (1=yes)
OLDADDT   DIM       12                 * old add to subjective
OLDADES   DIM       35                 * old abbrev description
OLDASST   FORM      1                  * old asset reg ind type
OLDPPOS   DIM       5                  * old print position
OLDPRT    DIM       3                  * old print code
OLDCRP    DIM       1                  * old print code
OLDCLEV   DIM       3                  * old report level
OLDDESC   DIM       35                 * old description
OLDDLEV   DIM       3                  * old default level
OLDDTYP   DIM       1                  * old description type
OLDSTAT   FORM      2                  * old status type
OLDSTYP   DIM       1                  * old subjective type
OLDTYPE   DIM       1                  * old acc type
OLDDPLA   DIM       1                  * old Decimal Places
OLDUNIT   DIM       20                 * old Statistical Units
OLDAYTD   FORM      1                  * old Av YTD (1=yes)
OLDMULT   FORM      6.2                * old constant Mult
OLDDIV    FORM      6.2                * old constant Div 
OPTNO     FORM      2                  * current option number
OPTIONA   FORM      1                  * screen selection keyin var
OPTIONC   FORM      2                  * screen selection keyin var
PAGENO    FORM      3                  * current page number
POSTACCT  DIM       12                 * posting account "add to account"
SAVADDT   DIM       12                 * key save for subjective add to acct
SAVITEM   FORM      2                  * item number for screen C
SAVSUBJ   DIM       12                 * key save for subjective
SAVDSUBJ  DIM       35                 * key save for subjective description
SAVDLEDG  DIM       35                 * key save for ledger description
SAVDRPNO  DIM       35                 * key save for report number description
SAVLEDG   DIM       2                  * key save for ledger
SAVPERS   FORM      1                  * save for no of periods (1=13,0=12)
SAVRPNO   DIM       2                  * key save for report number
SAVKEY14  DIM       14                 * key 14 save
SAVKEY19  DIM       19                 * key save for audits
SAVKEY31  DIM       31                 * key 31 save
SAVKEY33  DIM       33                 * key 33 save
SAVSTYP   DIM       1                  * subjective type save
SCRNO     FORM      1                  * screen number
SELECT    FORM      2                  * selection
SKEY      DIM       35                 * key save for screen C
SUBJCODE  DIM       12                 * subjective code
TEMPACCT  DIM       12                 * temp account
TEMPCPOS  DIM       5                  * temp cc print position
TEMPCOST  DIM       12                 * temp cc
TEMPDESC  DIM       35                 * temp description
TEMPSPOS  DIM       5                  * temp subj print position
TEMPSUBJ  DIM       12                 * temp subj
TEMPSUB1  DIM       12                 * temporary subj code
TOCOCE    DIM       12                 * end of CC range
UPDATE    FORM      1                  * update cc/subj accounts (1=yes)
WAUDTYPE  FORM      1                  * write audit parameter
.
.---- new vars for stat subj ----
.
ADDTYPE   DIM       1
ADTYDESC  DIM       8
ATYPDESC  DIM       4
DIM17     DIM       17
ITEM      FORM      2
ITEM01    DIM       17
ITEM02    DIM       17
ITEM03    DIM       17
ITEM04    DIM       17
ITEM05    DIM       17
ITEM06    DIM       17
ITEM07    DIM       17
ITEM08    DIM       17
ITEM09    DIM       17
ITEM10    DIM       17
ITEM11    DIM       17
ITEM12    DIM       17
ITEM13    DIM       17
ITEM14    DIM       17
ITEM15    DIM       17
NEXTSCRF  FORM      1
RANGFLAG  FORM      1
RECCOUNT  FORM      2
ROW       FORM      2
SAVEACCT  DIM       12
SAVEFUNC  DIM       1
SAVESEQ   DIM       5
SAVETOTL  FORM      1
SAVETYPE  DIM       1
SCRCOUNT  FORM      4
SCRNUMB   FORM      4
SUBACCT   DIM       12
SUBFLAG   FORM      1
SUBFUNC   DIM       1
SUBSEQ    DIM       5
SUBTOTAL  FORM      1
SUBTYPE   DIM       1
VALIDFLG  FORM      1
OLDDCOST  FORM      1        * 1=use old cc data
OLDDSUBJ  FORM      1        * 1=use old subj data
RESTFMSA  DIM       14
SFMTS01   DIM       43
SFMTS02   DIM       43
SFMTS03   DIM       43
SFMTS04   DIM       43
SFMTS05   DIM       43
SFMTS06   DIM       43
SFMTS07   DIM       43
SFMTS08   DIM       43
SFMTS09   DIM       43
SFMTS10   DIM       43
SKEY31    DIM       31
SKEY27    DIM       27
SKEY43    DIM       43
SKIPLINE  FORM      1
SKIPFMTU  FORM      1
WHICAUDI  FORM      "0"
WRECLEV   FORM      2
.
DIMA14    DIM       14
DIMB14    DIM       14
DIMC5     DIM       5
DIMD35    DIM       35
DIME5     DIM       5
SAVEDATA  DIM       50
SAVECCC   DIM       50       * field to ccc data
IBAMODE   FORM      "0"
NORMFIL1  DIM       8                  * norm tran file
NORMFIL2  DIM       8                  * norm tran file
STATFILE  DIM       8                  * stat tran file
F4YEAR    FORM      4
FMST      INIT      "fmst"
FMSA      INIT      "fmsa"
.
PRGID     INIT      "IBAFMS08"
PRGNAM    INIT      "Subjective Code Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
          BRANCH    EXIT,ML9999        * control file ok ?
.
ML0100    CALL      SELOPTN            * insert/modify/delete/exit ?
          COMPARE   ZERO,COPTION
          GOTO      ML9999 IF EQUAL    * exit program
.
ML0150    CALL      LEDG0000           * get ledger
          BRANCH    EXIT,ML0100,ML0100 * exit option
.
ML0200    CALL      PROC0000           * get second index
          BRANCH    EXIT,ML0150,ML0100 * exit option
.
          BRANCH    COPTION,ML1000,ML2000,ML3000
.
.---- add data ----
.
ML1000    CALL      DEFV0000           * set up default values
          MOVE      ONE,ACCEPT         * accept mode
          CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML0200        * don't save data
.
          MOVE      ONE,ACCEPT         * accept mode
          CALL      SELB0000           * modify screen A
          BRANCH    EXIT,ML0200        * don't save data
.
          CALL      POST0000           * post data
          CALL      READ0000           * read data and set up vars
          MATCH     "4",OLDSTYP
          GOTO      ML1100 IF LESS     * screen D not valid for non-stat types
          MOVE      ONE,ACCEPT         * accept mode
          CALL      SUBA0000           * modify screen D
.
ML1100    MATCH     "1",OLDSTYP
          GOTO      ML0200 IF EQUAL    * screen C not valid for total types
          MOVE      ONE,ACCEPT         * accept mode
          CALL      SELC0000           * modify screen C
          GOTO      ML0200             * get next entry
.
.---- modify data ----
.
ML2000    MOVE      ZERO,ACCEPT        * modify mode
          CALL      OPTN0000           * get screen to modify
          BRANCH    OPTIONA,ML2100,ML2200,ML2300,ML2400
          GOTO      ML0200             * exit screen
.
ML2100    MOVE      TWO,WHICAUDI       * write 2nd audit record only
          MOVE      "2",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          CALL      SELA0000           * modify screen A
          BRANCH    EXIT,ML2190        * quit
.
          CALL      POST0000           * post data
          MOVE      TWO,WHICAUDI       * write 2nd audit record only
          MOVE      "3",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          GOTO      ML2000
.
ML2190    CALL      DAUD0000           * delete before change audit record
          GOTO      ML2000
.
ML2200    MOVE      TWO,WHICAUDI       * write 2nd audit record only
          MOVE      "2",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          CALL      SELB0000           * modify screen B
          BRANCH    EXIT,ML2290        * quit
.
          CALL      POST0000           * post data
          MOVE      TWO,WHICAUDI       * write 2nd audit record only
          MOVE      "3",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          GOTO      ML2000
.
ML2290    CALL      DAUD0000           * delete before change audit record
          GOTO      ML2000
.
ML2300    CALL      SELC0000           * modify screen C
          GOTO      ML2000
.
ML2400    CALL      SUBA0000           * modify screen D
          GOTO      ML2000
.
.---- delete data ----
.
ML3000    MOVE      ZERO,ACCEPT        * modify mode
          CALL      READ0000           * read subjective data
          CALL      SCRA0000           * display basic details screen
          CALL      DISA0000           * display basic details
          CALL      DELQST             * ok to delete (y/n/c) ?
          SUB       ONE,CEXIT
          BRANCH    CEXIT,ML0200,ML0100
.
          CALL      DELT0000           * delete data
          BRANCH    EXIT,ML0200
.
          MOVE      "4",WAUDTYPE
          CALL      WAUD0000           * write audit record data
          GOTO      ML0200             * get next entry
.
.
ML9999    PREP      FMSTMP01,FILENAM1
          CLOSE     FMSTMP01,DELETE
          MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
.
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
          CALL      OUPD0000
          CALL      OUDA0000
.
          DISPLAY   *P56:24,"Opening fmsbpfaf";  * cost centre file
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsccaaf";  * cost centre file
          OPEN      FMSCCAA1,"fmsccaaf"
          OPEN      FMSCCAA2,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmscccaf";  * consolidated cost centre file
          OPEN      FMSCCCA1,"fmscccaf"
          OPEN      FMSCCCA2,"fmscccaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * subjective master file
          OPEN      FMSSBAA1,"fmssbaaf"
          OPEN      FMSSBAA2,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmsaudam";  * account audit file
          OPEN      FMSAUDAM,"fmsaudam"
.
          DISPLAY   *P64:24,"fmsaudsa";  * subjective audit file
          OPEN      FMSAUDSA,"fmsaudsa"
.
          DISPLAY   *P64:24,"fmscodaf";  * codes file
          OPEN      FMSCODA1,"fmscodaf"
          OPEN      FMSCODA2,"fmscodaf"
.
          DISPLAY   *P64:24,"fmslevaf";  * level code
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmslmbaf";  * ledger report desc. file
          OPEN      FMSLMBA1,"fmslmbaf"
.
          DISPLAY   *P64:24,"fmsoncaf";  * oncost code
          OPEN      FMSONCA1,"fmsoncaf"
.
          DISPLAY   *P64:24,"fmsprcaf";  * print code
          OPEN      FMSPRCA1,"fmsprcaf"
.
          DISPLAY   *P64:24,"fmsuwpaf";  * user defined wp file
          OPEN      FMSUWPA1,"fmsuwpaf"
.
          DISPLAY   *P64:24,"fmsrsfaf";  * report seq file
          OPEN      FMSRSFA1,"fmsrsfaf"
          OPEN      FMSRSFA2,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmssscaf";  * stat total calc file
          OPEN      FMSSSCA1,"fmssscaf"
          OPEN      FMSSSCA2,"fmssscaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";
          OPEN      FMSXCSA1,"fmsxcsaf"
          OPEN      FMSXCSA2,"fmsxcsaf"
          OPEN      FMSXCSA3,"fmsxcsaf"
.
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
.         PACK      FILENAM2,NAME2,PORT
.         REP       " 0",FILENAM2
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM2
.
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          UNPACK    SP70,FILENAME,SLBNAME,LBUNAME,UTYPE
.
          COMPARE   ZERO,FMSUUD3A                * check params ok
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD4A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD5A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD6A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD7A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD8A
          GOTO      INIT9500 IF EQUAL
.
          MOVE      FMSUUD7A,SAVRPNO             * set report number
          REP       " 0",SAVRPNO
          UNPACK    SP70,NORMFIL1,NORMFIL2,STATFILE
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
          DISPLAY   *P1:24,*B,*EF,"Incorrect System Parameter Set Up - ";
          CALL      HITENTER
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.******************************************************************************
SCRA0000  MOVE      "1",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Subjective           : ":
                    *V2LON,SAVSUBJ,*EF:
                     *P1:7,*V2LON," 1",*HOFF,". Description          : ":
                     *P1:8,*V2LON," 2",*HOFF,". Print Position       : ":
                     *P1:9,*V2LON," 3",*HOFF,". Print Code           : ":
                    *P1:10,*V2LON," 4",*HOFF,". Credit Print (Y/N)   : ":
                    *P1:11,*V2LON," 5",*HOFF,". Subjective Type      : ":
                    *P1:12,*V2LON," 6",*HOFF,". Subjective Level     : ";
          CALL      SCRX0000           * display rest of screen
.
SCRA9999  RETURN
.******************************************************************************
.* SCRX - Display Screen A                       Called by SELA0000, SCRA0000 *
.******************************************************************************
SCRX0000  DISPLAY   *P1:13,*EF;
          MATCH     " ",FMSASTYP
          GOTO      SCRX9999 IF EQUAL            * subjective type not set
.
          MATCH     "3",FMSASTYP
          GOTO      SCRX0500 IF NOT LESS         * subjective type = 0,1,2 ?
          MOVE      "12",LINENO                  * starting line number
          GOTO      SCRX1000
.
SCRX0500  DISPLAY   *P1:13,*V2LON," 7",*HOFF,". Decimal Places       : ":
                    *P1:14,*V2LON," 8",*HOFF,". Statistical Units    : ":
                    *P1:15,*V2LON," 9",*HOFF,". Average YTD (Y/N)    : ":
                    *P1:16,*V2LON,"10",*HOFF,". Constant Multiplier  : ":
                    *P1:17,*V2LON,"11",*HOFF,". Constant Divisor     : ";
          MOVE      "17",LINENO                  * starting line number
          GOTO      SCRX1000
.
SCRX1000  MOVE      " 1",COLNO                   * fix collumn number
          MOVE      FMSASTYP,F1
          MOVE      SIX,OPTNO                   * starting option number
          LOAD      OPTNO,F1,SIX,SIX,TEN1,TEN1
          COMPARE   ONE,FMACR1ON
          GOTO      SCRX1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR1NA," : ";
.
SCRX1100  COMPARE   ONE,FMACR2ON
          GOTO      SCRX1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR2NA," : ";
.
SCRX1200  COMPARE   ONE,FMACR3ON
          GOTO      SCRX1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR3NA," : ";
.
SCRX1300  COMPARE   ONE,FMACR4ON
          GOTO      SCRX2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR4NA," : ";
.
SCRX2000  COMPARE   ONE,FMACD1ON
          GOTO      SCRX2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD1NA," : ";
.
SCRX2100  COMPARE   ONE,FMACD2ON
          GOTO      SCRX2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD2NA," : ";
.
SCRX2200  COMPARE   ONE,FMACD3ON
          GOTO      SCRX2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD3NA," : ";
.
SCRX2300  COMPARE   ONE,FMACD4ON
          GOTO      SCRX3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD4NA," : ";
.
SCRX3000  COMPARE   ONE,FMACA1ON
          GOTO      SCRX3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA1NA," : ";
.
SCRX3100  COMPARE   ONE,FMACA2ON
          GOTO      SCRX3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA2NA," : ";
.
SCRX3200  COMPARE   ONE,FMACA3ON
          GOTO      SCRX3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA3NA," : ";
.
SCRX3300  COMPARE   ONE,FMACA4ON
          GOTO      SCRX4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA4NA," : ";
.
SCRX4000  COMPARE   ONE,FMACC1ON
          GOTO      SCRX4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC1NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRX4100  COMPARE   ONE,FMACC2ON
          GOTO      SCRX4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC2NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRX4200  COMPARE   ONE,FMACC3ON
          GOTO      SCRX4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC3NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRX4300  COMPARE   ONE,FMACC4ON
          GOTO      SCRX5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC4NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRX5000  
.
SCRX9999  RETURN
.******************************************************************************
.* DISA - Display Screen A                       Called by SELA0000, redisps  *
.******************************************************************************
DISA0000  PACK      KEY3,CURPRTC,SP70
          MOVE      SP70,FMPRDESC
          CALL      RDFMPR1                      * get print code description
.
          MOVE      ZERO,F1
          MOVE      FMSASTYP,F1
          ADD       ONE,F1
          LOAD      SASTYPE,F1,SASTYPE0,SASTYPE1,SASTYPE2,SASTYPE3,SASTYPE4
.
          PACK      KEY3,CURLEVEL,SP70
          MOVE      SP70,FMLVDESC
          CALL      RDFMLV1                      * get level description
.
          MOVE      ZERO,FYESNO
          MOVE      CURCRP,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
.
          DISPLAY   *P28:7,*V2LON,SAVDSUBJ:
                    *P28:8,CURPRTP:
                    *P28:9,CURPRTC,*HOFF,*P44:9,FMPRDESC:
                    *P28:10,*V2LON,YESNO;
          CALL      DISX0000
.
DISA9999  RETURN
.******************************************************************************
.* DISX - Display Screen A                       Called by SELA0000, DISA0000 *
.******************************************************************************
DISX0000  COMPARE   ONE,ACCEPT
          GOTO      DISX0300 IF NOT EQUAL        * in accept mode ?
          COMPARE   "4",SELECT   
          GOTO      DISX9999 IF LESS             * display more ?
.
DISX0300  DISPLAY   *P28:11,*V2LON,SASTYPE:
                    *P28:12,CURLEVEL,*HOFF,*P44:12,FMLVDESC;
.
          COMPARE   ONE,ACCEPT
          GOTO      DISX0500 IF NOT EQUAL        * in accept mode ?
          COMPARE   "6",SELECT   
          GOTO      DISX9999 IF LESS             * display more ?
.
DISX0500  MATCH     " ",FMSASTYP
          GOTO      DISX9999 IF EQUAL            * subjective type not set
.
          MATCH     "3",FMSASTYP
          GOTO      DISX0600 IF NOT LESS         * subjective type = 0,1,2 ?
.
          MOVE      "12",LINENO                  * starting line number
          GOTO      DISX1000
.
DISX0600  COMPARE   ONE,ACCEPT
          GOTO      DISX0700 IF NOT EQUAL        * in accept mode ?
          COMPARE   "7",SELECT   
          GOTO      DISX9999 IF LESS             * display more ?
.
DISX0700  MOVE      NO,YESNO
          LOAD      YESNO,FMAMAYTD,YES
          DISPLAY   *P28:13,*V2LON,FMAMDPLA:
                    *P28:14,*V2LON,FMAMUNIT:
                    *P28:15,*V2LON,YESNO:
                    *P28:16,*V2LON,FMAMMULT:
                    *P28:17,*V2LON,FMAMDIV;
          MOVE      "17",LINENO                  * starting line number
          GOTO      DISX1000
.
DISX1000  COMPARE   ONE,ACCEPT
          GOTO      DISX1050 IF NOT EQUAL        * in accept mode ?
          COMPARE   "7",SELECT   
          GOTO      DISX9999 IF LESS             * display more ?
.
DISX1050  MOVE      "28",COLNO                   * fix collumn number
          COMPARE   ONE,FMACR1ON
          GOTO      DISX1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF1;
.
DISX1100  COMPARE   ONE,FMACR2ON
          GOTO      DISX1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF2;
.
DISX1200  COMPARE   ONE,FMACR3ON
          GOTO      DISX1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF3;
.
DISX1300  COMPARE   ONE,FMACR4ON
          GOTO      DISX2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF4;
.
DISX2000  COMPARE   ONE,FMACD1ON
          GOTO      DISX2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISX2100  COMPARE   ONE,FMACD2ON
          GOTO      DISX2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISX2200  COMPARE   ONE,FMACD3ON
          GOTO      DISX2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT3,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISX2300  COMPARE   ONE,FMACD4ON
          GOTO      DISX3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMAMDAT4,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISX3000  COMPARE   ONE,FMACA1ON
          GOTO      DISX3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "1",AMOUNTNO
          CALL      DAMA0000
.
DISX3100  COMPARE   ONE,FMACA2ON
          GOTO      DISX3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "2",AMOUNTNO
          CALL      DAMA0000
.
DISX3200  COMPARE   ONE,FMACA3ON
          GOTO      DISX3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "3",AMOUNTNO
          CALL      DAMA0000
.
DISX3300  COMPARE   ONE,FMACA4ON
          GOTO      DISX4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "4",AMOUNTNO
          CALL      DAMA0000
.
DISX4000  COMPARE   ONE,FMACC1ON
          GOTO      DISX4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD1
          GOTO      DISX4100 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMAMCOD1,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD1,*HOFF,*P44:LINENO,FMCDDESC;
.
DISX4100  COMPARE   ONE,FMACC2ON
          GOTO      DISX4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD2
          GOTO      DISX4200 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMAMCOD2,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD2,*HOFF,*P44:LINENO,FMCDDESC;
.
DISX4200  COMPARE   ONE,FMACC3ON
          GOTO      DISX4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD3
          GOTO      DISX4300 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMAMCOD3,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD3,*HOFF,*P44:LINENO,FMCDDESC;
.
DISX4300  COMPARE   ONE,FMACC4ON
          GOTO      DISX5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD4
          GOTO      DISX5000 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMAMCOD4,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD4,*HOFF,*P44:LINENO,FMCDDESC;
.
DISX5000  
.
DISX9999  RETURN
.******************************************************************************
.* USRB - User defined options                   Called by SELB               *
.*       Requires : SELECT   (option selected)                                *
.*                  OPTNO    (starting option number)                         *
.*       Note : clears accept mode when completed last available option       *
.*       Returns  : EXIT = 2 if exitchar entered                              *
.******************************************************************************
USRB0000  COMPARE   ONE,FMACR1ON
          GOTO      USRB1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB1100 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      FMACR1LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMSAREF1,CSTRING,SP70
          GOTO      USRB9999
.
USRB1100  COMPARE   ONE,FMACR2ON
          GOTO      USRB1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB1200 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      FMACR2LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMSAREF2,CSTRING,SP70
          GOTO      USRB9999
.
USRB1200  COMPARE   ONE,FMACR3ON
          GOTO      USRB1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB1300 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      FMACR3LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMSAREF3,CSTRING,SP70
          GOTO      USRB9999
.
USRB1300  COMPARE   ONE,FMACR4ON
          GOTO      USRB2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB2000 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      FMACR4LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMSAREF4,CSTRING,SP70
          GOTO      USRB9999
.
USRB2000  COMPARE   ONE,FMACD1ON
          GOTO      USRB2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB2100 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          UNPACK    FMSADAT1,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMSADAT1,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRB9999
.
USRB2100  COMPARE   ONE,FMACD2ON
          GOTO      USRB2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB2200 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          UNPACK    FMSADAT2,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMSADAT2,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRB9999
.
USRB2200  COMPARE   ONE,FMACD3ON
          GOTO      USRB2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB2300 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          UNPACK    FMSADAT3,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMSADAT3,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRB9999
.
USRB2300  COMPARE   ONE,FMACD4ON
          GOTO      USRB3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB3000 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          UNPACK    FMSADAT4,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMSADAT4,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRB9999
.
USRB3000  COMPARE   ONE,FMACA1ON
          GOTO      USRB3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB3100 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      "1",AMOUNTNO
          CALL      GAMB0000
          GOTO      USRB9999
.
USRB3100  COMPARE   ONE,FMACA2ON
          GOTO      USRB3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB3200 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      "2",AMOUNTNO
          CALL      GAMB0000
          GOTO      USRB9999
.
USRB3200  COMPARE   ONE,FMACA3ON
          GOTO      USRB3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB3300 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      "3",AMOUNTNO
          CALL      GAMB0000
          GOTO      USRB9999
.
USRB3300  COMPARE   ONE,FMACA4ON
          GOTO      USRB4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB4000 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      "4",AMOUNTNO
          CALL      GAMB0000
          GOTO      USRB9999
.
USRB4000  COMPARE   ONE,FMACC1ON
          GOTO      USRB4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB4100 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      FMACC1NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMSACOD1
          MATCH     SP70,FMSACOD1
          GOTO      USRB9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMSACOD1,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSACOD1,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRB9999
.
USRB4100  COMPARE   ONE,FMACC2ON
          GOTO      USRB4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB4200 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      FMACC2NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMSACOD2
          MATCH     SP70,FMSACOD2
          GOTO      USRB9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMSACOD2,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSACOD2,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRB9999
.
USRB4200  COMPARE   ONE,FMACC3ON
          GOTO      USRB4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB4300 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      FMACC3NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMSACOD3
          MATCH     SP70,FMSACOD3
          GOTO      USRB9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMSACOD3,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSACOD3,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRB9999
.
USRB4300  COMPARE   ONE,FMACC4ON
          GOTO      USRB5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRB5000 IF NOT EQUAL        * desired option ?
.
          MOVE      ONE,UPDATE
          MOVE      FMACC4NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMSACOD4
          MATCH     SP70,FMSACOD4
          GOTO      USRB9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMSACOD4,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSACOD4,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRB9000                     * make sure accept mode cleared
.
.
USRB5000  BRANCH    ACCEPT,USRB9000              * in accept mode ?
          BEEP                                   * illegal option
.
USRB9000  MOVE      ZERO,ACCEPT                  * clear accept mode
.
USRB9999  RETURN
.******************************************************************************
.* DAMB - Display amount                         Called by lots               *
.*       Requires : AMOUNTNO      (1=amount number)                           *
.*                  LINENO,COLNO  (screen address)                            *
.******************************************************************************
DAMB0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,DAMB0100,DAMB0200,DAMB0300,DAMB0400,DAMB0500,DAMB0600
.
.---- no decimal places ----
.
          LOAD      F12,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12;
          GOTO      DAMB9999
.
.---- 1 decimal places ----
.
DAMB0100  LOAD      F12P1,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P1;
          GOTO      DAMB9999
.
.---- 2 decimal places ----
.
DAMB0200  LOAD      F12P2,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P2;
          GOTO      DAMB9999
.
.---- 3 decimal places ----
.
DAMB0300  LOAD      F12P3,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P3;
          GOTO      DAMB9999
.
.---- 4 decimal places ----
.
DAMB0400  LOAD      F12P4,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P4;
          GOTO      DAMB9999
.
.---- 5 decimal places ----
.
DAMB0500  LOAD      F12P5,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P5;
          GOTO      DAMB9999
.
.---- 6 decimal places ----
.
DAMB0600  LOAD      F12P6,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P6;
          GOTO      DAMB9999
.
DAMB9999  RETURN
.******************************************************************************
.* GAMB - Get amount                             Called by lots               *
.*       Requires : AMOUNTNO (1=amount number)                                *
.*                  CVERT,CCOL    (screen address)                            *
.******************************************************************************
GAMB0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,GAMB0100,GAMB0200,GAMB0300,GAMB0400,GAMB0500,GAMB0600
.
.---- no decimal places ----
.
          KEYIN     *PCCOL:CVERT,"____________":
                    *PCCOL:CVERT,*V2LON,F12:
                    *PCCOL:CVERT,*DV,F12;
          STORE     F12,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          GOTO      GAMB9999
.
.---- 1 decimal places ----
.
GAMB0100  KEYIN     *PCCOL:CVERT,"____________._":
                    *PCCOL:CVERT,*V2LON,F12P1:
                    *PCCOL:CVERT,*DV,F12P1;
          STORE     F12P1,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          GOTO      GAMB9999
.
.---- 2 decimal places ----
.
GAMB0200  KEYIN     *PCCOL:CVERT,"____________.__":
                    *PCCOL:CVERT,*V2LON,F12P2:
                    *PCCOL:CVERT,*DV,F12P2;
          STORE     F12P2,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          GOTO      GAMB9999
.
.---- 3 decimal places ----
.
GAMB0300  KEYIN     *PCCOL:CVERT,"____________.___":
                    *PCCOL:CVERT,*V2LON,F12P3:
                    *PCCOL:CVERT,*DV,F12P3;
          STORE     F12P3,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          GOTO      GAMB9999
.
.---- 4 decimal places ----
.
GAMB0400  KEYIN     *PCCOL:CVERT,"____________.____":
                    *PCCOL:CVERT,*V2LON,F12P4:
                    *PCCOL:CVERT,*DV,F12P4;
          STORE     F12P4,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          GOTO      GAMB9999
.
.---- 5 decimal places ----
.
GAMB0500  KEYIN     *PCCOL:CVERT,"____________._____":
                    *PCCOL:CVERT,*V2LON,F12P5:
                    *PCCOL:CVERT,*DV,F12P5;
          STORE     F12P5,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          GOTO      GAMB9999
.
.---- 6 decimal places ----
.
GAMB0600  KEYIN     *PCCOL:CVERT,"____________.______":
                    *PCCOL:CVERT,*V2LON,F12P6:
                    *PCCOL:CVERT,*DV,F12P6;
          STORE     F12P6,AMOUNTNO,FMSAAMT1,FMSAAMT2,FMSAAMT3,FMSAAMT4
          GOTO      GAMB9999
.
GAMB9999  RETURN
.******************************************************************************
.* USRA - User defined options                   Called by SELB               *
.*       Requires : SELECT     (option selected)                              *
.*                  OPTNO      (starting option number)                       *
.*                  CVERT,CCOL (screen address to get data)                   *
.*       Note : clears accept mode when completed last available option       *
.*       Returns  : EXIT = 2 if exitchar entered                              *
.******************************************************************************
USRA0000  COMPARE   ONE,FMACR1ON
          GOTO      USRA1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA1100 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR1LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF1,CSTRING,SP70
          GOTO      USRA9999
.
USRA1100  COMPARE   ONE,FMACR2ON
          GOTO      USRA1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA1200 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR2LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF2,CSTRING,SP70
          GOTO      USRA9999
.
USRA1200  COMPARE   ONE,FMACR3ON
          GOTO      USRA1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA1300 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR3LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF3,CSTRING,SP70
          GOTO      USRA9999
.
USRA1300  COMPARE   ONE,FMACR4ON
          GOTO      USRA2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA2000 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR4LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF4,CSTRING,SP70
          GOTO      USRA9999
.
USRA2000  COMPARE   ONE,FMACD1ON
          GOTO      USRA2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA2100 IF NOT EQUAL        * desired option ?
.
          UNPACK    FMAMDAT1,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMAMDAT1,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRA9999
.
USRA2100  COMPARE   ONE,FMACD2ON
          GOTO      USRA2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA2200 IF NOT EQUAL        * desired option ?
.
          UNPACK    FMAMDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMAMDAT2,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRA9999
.
USRA2200  COMPARE   ONE,FMACD3ON
          GOTO      USRA2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA2300 IF NOT EQUAL        * desired option ?
.
          UNPACK    FMAMDAT3,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMAMDAT3,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRA9999
.
USRA2300  COMPARE   ONE,FMACD4ON
          GOTO      USRA3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA3000 IF NOT EQUAL        * desired option ?
.
          UNPACK    FMAMDAT4,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      FMAMDAT4,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRA9999
.
USRA3000  COMPARE   ONE,FMACA1ON
          GOTO      USRA3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA3100 IF NOT EQUAL        * desired option ?
.
          MOVE      "1",AMOUNTNO
          CALL      GAMA0000
          GOTO      USRA9999
.
USRA3100  COMPARE   ONE,FMACA2ON
          GOTO      USRA3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA3200 IF NOT EQUAL        * desired option ?
.
          MOVE      "2",AMOUNTNO
          CALL      GAMA0000
          GOTO      USRA9999
.
USRA3200  COMPARE   ONE,FMACA3ON
          GOTO      USRA3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA3300 IF NOT EQUAL        * desired option ?
.
          MOVE      "3",AMOUNTNO
          CALL      GAMA0000
          GOTO      USRA9999
.
USRA3300  COMPARE   ONE,FMACA4ON
          GOTO      USRA4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA4000 IF NOT EQUAL        * desired option ?
.
          MOVE      "4",AMOUNTNO
          CALL      GAMA0000
          GOTO      USRA9999
.
USRA4000  COMPARE   ONE,FMACC1ON
          GOTO      USRA4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA4100 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC1NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD1
          MATCH     SP70,FMAMCOD1
          GOTO      USRA9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMAMCOD1,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD1,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRA9999
.
USRA4100  COMPARE   ONE,FMACC2ON
          GOTO      USRA4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA4200 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC2NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD2
          MATCH     SP70,FMAMCOD2
          GOTO      USRA9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMAMCOD2,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD2,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRA9999
.
USRA4200  COMPARE   ONE,FMACC3ON
          GOTO      USRA4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA4300 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC3NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD3
          MATCH     SP70,FMAMCOD3
          GOTO      USRA9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMAMCOD3,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD3,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRA9999
.
USRA4300  COMPARE   ONE,FMACC4ON
          GOTO      USRA5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRA5000 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC4NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD4
          MATCH     SP70,FMAMCOD4
          GOTO      USRA9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMAMCOD4,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD4,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRA9000                     * make sure accept mode cleared
.
.
USRA5000  BRANCH    ACCEPT,USRA9000              * in accept mode ?
          BEEP                                   * illegal option
.
USRA9000  MOVE      ZERO,ACCEPT                  * clear accept mode
.
USRA9999  RETURN
.******************************************************************************
.* DAMA - Display amount                         Called by lots               *
.*       Requires : AMOUNTNO      (1=amount number)                           *
.*                  LINENO,COLNO  (screen address)                            *
.******************************************************************************
DAMA0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,DAMA0100,DAMA0200,DAMA0300,DAMA0400,DAMA0500,DAMA0600
.
.---- no decimal places ----
.
          LOAD      F12,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12;
          GOTO      DAMA9999
.
.---- 1 decimal places ----
.
DAMA0100  LOAD      F12P1,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P1;
          GOTO      DAMA9999
.
.---- 2 decimal places ----
.
DAMA0200  LOAD      F12P2,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P2;
          GOTO      DAMA9999
.
.---- 3 decimal places ----
.
DAMA0300  LOAD      F12P3,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P3;
          GOTO      DAMA9999
.
.---- 4 decimal places ----
.
DAMA0400  LOAD      F12P4,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P4;
          GOTO      DAMA9999
.
.---- 5 decimal places ----
.
DAMA0500  LOAD      F12P5,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P5;
          GOTO      DAMA9999
.
.---- 6 decimal places ----
.
DAMA0600  LOAD      F12P6,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P6;
          GOTO      DAMA9999
.
DAMA9999  RETURN
.******************************************************************************
.* GAMA - Get amount                             Called by lots               *
.*       Requires : AMOUNTNO (1=amount number)                                *
.*                  CVERT,CCOL    (screen address)                            *
.******************************************************************************
GAMA0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,GAMA0100,GAMA0200,GAMA0300,GAMA0400,GAMA0500,GAMA0600
.
.---- no decimal places ----
.
          KEYIN     *PCCOL:CVERT,"____________":
                    *PCCOL:CVERT,*V2LON,F12:
                    *PCCOL:CVERT,*DV,F12;
          STORE     F12,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMA9999
.
.---- 1 decimal places ----
.
GAMA0100  KEYIN     *PCCOL:CVERT,"____________._":
                    *PCCOL:CVERT,*V2LON,F12P1:
                    *PCCOL:CVERT,*DV,F12P1;
          STORE     F12P1,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMA9999
.
.---- 2 decimal places ----
.
GAMA0200  KEYIN     *PCCOL:CVERT,"____________.__":
                    *PCCOL:CVERT,*V2LON,F12P2:
                    *PCCOL:CVERT,*DV,F12P2;
          STORE     F12P2,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMA9999
.
.---- 3 decimal places ----
.
GAMA0300  KEYIN     *PCCOL:CVERT,"____________.___":
                    *PCCOL:CVERT,*V2LON,F12P3:
                    *PCCOL:CVERT,*DV,F12P3;
          STORE     F12P3,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMA9999
.
.---- 4 decimal places ----
.
GAMA0400  KEYIN     *PCCOL:CVERT,"____________.____":
                    *PCCOL:CVERT,*V2LON,F12P4:
                    *PCCOL:CVERT,*DV,F12P4;
          STORE     F12P4,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMA9999
.
.---- 5 decimal places ----
.
GAMA0500  KEYIN     *PCCOL:CVERT,"____________._____":
                    *PCCOL:CVERT,*V2LON,F12P5:
                    *PCCOL:CVERT,*DV,F12P5;
          STORE     F12P5,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMA9999
.
.---- 6 decimal places ----
.
GAMA0600  KEYIN     *PCCOL:CVERT,"____________.______":
                    *PCCOL:CVERT,*V2LON,F12P6:
                    *PCCOL:CVERT,*DV,F12P6;
          STORE     F12P6,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMA9999
.
GAMA9999  RETURN
.******************************************************************************
.* SCRC - Display screen C                       Called by SELC0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRC0000  MOVE      "3",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Subjective           : ":
                    *V2LON,SAVSUBJ,*HOFF,SP2,SAVDSUBJ,*EF:
                    *P28:7,*V2LON,"Related Cost Centres":
                    *P1:8,*ULON,"Item",*P7:8,"Cost Centre":
                    *P68:8,"Account"
.
SCRC9999  RETURN
.******************************************************************************
.* OPTN - Select option to display               Called by ML0000             *
.*        Returns : OPTIONA  (screen no. selected)                            *
.******************************************************************************
OPTN0000  CALL      READ0000           * read Subjective data
.
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Subjective           : ":
                    *V2LON,SAVSUBJ,*HOFF,SP2,SAVDSUBJ,*EF:
                    *P1:7,*V2LON," 0",*HOFF," = Exit":
                    *P1:8,*V2LON," 1",*HOFF," = Subjective Account Details":
                    *P1:9,*V2LON," 2",*HOFF:
                              " = Combined CC/Subj Default Account Details";
          MOVE      "11",LINENO
          MOVE      "12   ",KEY5
.
          MATCH     "1",OLDSTYP
          GOTO      OPTN1000 IF EQUAL    * screen c not valid for total types
          MATCH     "4",OLDSTYP
          GOTO      OPTN0500 IF NOT LESS * FMSASTYP=0,2 ?
          DISPLAY   *P1:10,*V2LON," 3",*HOFF," = Related Cost Centres";
          ADD       ONE,LINENO
          MOVE      "123  ",KEY5
          GOTO      OPTN1000
.
OPTN0500  DISPLAY  *P1:10,*V2LON," 3",*HOFF," = Subjective Calculation Details":
                   *P1:11,*V2LON," 4",*HOFF," = Related Cost Centres";
          ADD       TWO,LINENO
          MOVE      "1243 ",KEY5
          GOTO      OPTN1000
.
OPTN1000  KEYIN     *P5:LINENO,"Select Option : _",*P21:LINENO,*V2LON,OPTIONA
          COMPARE   OPTIONA,ZERO
          GOTO      OPTN9999 IF EQUAL            * exit
          UNPACK    KEY5,DIM1A,DIM1B,DIM1C,DIM1D,DIM1E
          LOAD      ANS,OPTIONA,DIM1A,DIM1B,DIM1C,DIM1D,DIM1E
          MATCH     SP70,ANS
          GOTO      OPTN9000 IF NOT EQUAL
          BEEP                                   * illegal option
          GOTO      OPTN1000
.
OPTN9000  MOVE      ANS,OPTIONA
.
OPTN9999  RETURN
.******************************************************************************
.* DEFV - set up default variables               Called by ML0000             *
.******************************************************************************
DEFV0000  MOVE      SP70,FMSADESC                * set description
          MOVE      SP70,FMSAADES                * set abbrev description
          MOVE      SP70,FMSASEC                 * set security code
          MOVE      ZERO,FMSASTAT                * set status
          MOVE      ZERO,FMSACTRL                * set bank account
          MOVE      ZERO,FMSAASST                * set Asset Reg. Acc.
          MOVE      ZERO,FMSAPPT                 * set Pres. Pay. Tax
          MOVE      ZERO,FMSAONC                 * set oncost indic
          MOVE      SP70,FMSAONCC                * set oncost code
          MOVE      SP70,FMSACHEQ                * set cheque no.
          MOVE      SP70,CURPRTC                 * set print code
          MOVE      SP70,CURCRP                  * set print code
          MOVE      ONE,FMSATYPE                 * set account type
.
          UNPACK    SP70,FMAMREF1,FMAMREF2       * set user defined fields
          UNPACK    SP70,FMAMREF3,FMAMREF4
.
          PACK      FMAMDAT1,CCC,SP70
          PACK      FMAMDAT2,CCC,SP70
          PACK      FMAMDAT3,CCC,SP70
          PACK      FMAMDAT4,CCC,SP70
.
          UNPACK    SP70,FMAMCOD1,FMAMCOD2,FMAMCOD3,FMAMCOD4
.
          MOVE      ZERO,FMAMAMT1
          MOVE      ZERO,FMAMAMT2
          MOVE      ZERO,FMAMAMT3
          MOVE      ZERO,FMAMAMT4
.
          MOVE      SP70,FMAMDESC                * set description
          MOVE      SP70,FMAMSEC                 * set security code
          MOVE      ZERO,FMAMSTAT                * set status
          MOVE      ZERO,FMAMCTRL                * set bank account
          MOVE      ZERO,FMAMASST                * set Asset Reg. Acc.
          MOVE      ZERO,FMAMPPT                 * set Pres. Pay. Tax
          MOVE      ZERO,FMAMONC                 * set oncost indic
          MOVE      SP70,FMAMONCC                * set oncost code
          MOVE      SP70,FMAMCHEQ                * set cheque no.
.
          UNPACK    SP70,FMSAREF1,FMSAREF2       * set user defined fields
          UNPACK    SP70,FMSAREF3,FMSAREF4
.
          PACK      FMSADAT1,CCC,SP70
          PACK      FMSADAT2,CCC,SP70
          PACK      FMSADAT3,CCC,SP70
          PACK      FMSADAT4,CCC,SP70
.
          UNPACK    SP70,FMSACOD1,FMSACOD2,FMSACOD3,FMSACOD4
.
          MOVE      ZERO,FMSAAMT1
          MOVE      ZERO,FMSAAMT2
          MOVE      ZERO,FMSAAMT3
          MOVE      ZERO,FMSAAMT4
.
          UNPACK    SP70,FMRFPOS,FMTCASEQ,FMAMCLEV,FMRFPRT,FMTCTLED,FMTCTACC
          MOVE      SP70,FMRFCRP
          UNPACK    SP70,SAVDSUBJ,OLDADDT,OLDPPOS,OLDCLEV   * set description
          UNPACK    SP70,CURPRTP,SAVDRPNO           * set report num/description
          UNPACK    SP70,FMSASTYP,FMSADTYP,FMSAADDT
          UNPACK    SP70,OLDDESC,OLDADES
          UNPACK    SP70,OLDDTYP,OLDSTYP,OLDTYPE,OLDPRT,OLDCRP
          MOVE      ZERO,OLDASST
          MOVE      ZERO,OLDSTAT
          UNPACK    SP70,OLDUNIT
          MOVE      TWO,OLDDPLA
          MOVE      ZERO,OLDAYTD
          MOVE      ZERO,OLDMULT
          MOVE      ZERO,OLDDIV
.
          UNPACK    SP70,FMSAUNIT,FMSABLN,FMSADLEV
          MOVE      ZERO,FMSAAYTD
          MOVE      TWO,FMSADPLA
          MOVE      ONE,FMAMMULT
          MOVE      ONE,FMAMDIV
          MOVE      ONE,FMSAMULT
          MOVE      ONE,FMSADIV
.
          UNPACK    SP70,CURLEVEL,DEFLEVEL
.
DEFV9999  RETURN
.******************************************************************************
.* LEDG - Enter Ledger Number                    Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMLALEDG (Ledger)                                         *
.******************************************************************************
LEDG0000  MOVE      ZERO,SCRNO         * clear screen number
          DISPLAY   *P1:4,"    Ledger               : ",*EF;
.
          MOVE      "28",CCOL          * set up screen address
          MOVE      "4",CVERT
.
          CALL      KLMAFM00           * get ledger
          MOVE      FMLALEDG,SAVLEDG   * save ledger
          MOVE      FMLADESC,SAVDLEDG  * save ledger description
          MOVE      FMLAPERS,SAVPERS   * save no. of periods
.
LEDG9999  RETURN
.******************************************************************************
.* PROC - Enter second index                     Called by ML0000             *
.*      Requires : SAVLEDG  (Ledger)                                          *
.*       Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.)  *
.*                 SAVSUBJ  (Subjective)                                      *
.******************************************************************************
PROC0000  MOVE      ZERO,SCRNO         * clear screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Subjective           : ",*EF;
          MOVE      "28",CCOL          * set up screen address
          MOVE      "5",CVERT
.
          PACK      FMLALEDG,SAVLEDG,SP70
          BRANCH    COPTION,PROC1000,PROC2000,PROC2000
.
PROC1000  MOVE      "0",CSUBJIND       * set for all subjectives
          CALL      ASBAFM00           * insert mode
          BRANCH    EXIT,PROC9999,PROC9999
          PACK      KEY14,SAVLEDG,FMSASUBJ,SP70
          CALL      RAFMAM1
          BRANCH    OVRCD,PROC5000     * existing account code ?
.
          DISPLAY   *P1:24,*EL,*B,"Identical To Existing Account Code - ";
          CALL      HITENTER
          GOTO      PROC1000           * quit
.
PROC2000  MOVE      "0",CSUBJIND       * set for all subjectives
          CALL      KSBAFM00           * not in insert mode
          BRANCH    EXIT,PROC9999,PROC9999
.
PROC5000  MOVE      FMSASUBJ,SAVSUBJ   * save subj
.
PROC9999  RETURN
.**********************************************************************
. READ - read account data                           Called By ML
.**********************************************************************
READ0000  PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          CALL      RDFMSA1            * read in subjective data
          CALL      RDFMAM1            * read in subjective data
          REP       " 0",FMSASTYP      * ensure type not blank
          REP       " 0",FMSADTYP      * ensure type not blank
          REP       " 0",FMAMCLEV      * ensure level not blank
          MOVE      FMSADESC,SAVDSUBJ  * save subjective description
          MOVE      FMAMCLEV,CURLEVEL  * save report level
          MOVE      FMAMCLEV,OLDCLEV   * save report level
          MOVE      FMSADLEV,DEFLEVEL  * save default level
          MOVE      FMSADLEV,OLDDLEV   * save default level
          MOVE      FMSAADDT,OLDADDT   * save add to subj
          MOVE      FMSADESC,OLDDESC   * save subjective description
          MOVE      FMSAADES,OLDADES   * save subj abbrev description
          MOVE      FMSADTYP,OLDDTYP   * save subjective description type
          MOVE      FMSASTYP,OLDSTYP   * save subjective type
          MOVE      FMSATYPE,OLDTYPE   * save acc type
          MOVE      FMSASTAT,OLDSTAT   * save status type
          MOVE      FMSAASST,OLDASST   * save asset reg ind
          MOVE      FMSADPLA,OLDDPLA   * save Decimal Places
          MOVE      FMSAUNIT,OLDUNIT   * save Statistical Units
          MOVE      FMSAAYTD,OLDAYTD   * save Av YTD (1=yes)
          MOVE      FMSAMULT,OLDMULT   * save constant Mult
          MOVE      FMSADIV,OLDDIV     * save constant Div 
.
          PACK      KEY26,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMRF2            * read in report seq data
          CALL      RKFMRF2            * read in report seq data
          BRANCH    OVRCD,READ5000     * record found ?
          PACK      KEY16,FMRFLED,FMRFACC,SP70
          MATCH     KEY16,KEY26
          GOTO      READ5000 IF NOT EQUAL
          GOTO      READ9000
.
READ5000  UNPACK    SP70,FMRFREP,FMRFPOS,FMRFLED,FMRFACC,FMRFPRT,OLDPPOS
          MOVE      SP70,FMRFCRP
          BRANCH    COPTION,READ9999   * exit if in insert mode ?
          DISPLAY   *P1:24,*B,*EL,"WARNING - fmsrsfaf Record Missing - ";
          CALL      HITENTER
          GOTO      READ9999
.
READ9000  MOVE      FMRFPOS,CURPRTP   * save old print position
          MOVE      FMRFPOS,OLDPPOS   * save print position
          MOVE      FMRFPRT,OLDPRT    * save old print code
          MOVE      FMRFCRP,OLDCRP    * save old print code
          MOVE      FMRFPRT,CURPRTC   * save print code
          MOVE      FMRFCRP,CURCRP    * save print code
.
          MOVE      SP70,FMLBDESC
          PACK      KEY4,SAVLEDG,SAVRPNO,SP70
          CALL      RDFMLB1            * read in account data
          MOVE      FMLBDESC,SAVDRPNO  * save account description
.
READ9999  RETURN
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (1=quit, 0=post)                                 *
.******************************************************************************
SELA0000  MOVE      ZERO,SELECT   
          MOVE      ZERO,UPDATE
          CALL      GETW0000                     * read in wp data (if req)
          CALL      SCRA0000                     * display screen A
          CALL      DISA0000                     * display screen A data
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,SELECT                   * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      QUES0000                     * select/post/cancel/notes ?
.
          COMPARE   ZERO,SELECT
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,SELECT
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "6",CVERT
          ADD       SELECT,CVERT
.
          MATCH     "3",FMSASTYP
          GOTO      SELA0700 IF LESS             * stat type ?
          BRANCH    SELECT,SELA1100,SELA1400,SELA1500,SELA1600,SELA1700:
                           SELA1800,SELA2000,SELA2100,SELA2200,SELA2300:
                           SELA2400
          GOTO      SELA7000
.
SELA0700  BRANCH    SELECT,SELA1100,SELA1400,SELA1500,SELA1600,SELA1700:
                           SELA1800
          GOTO      SELA7000
.
.---- option 1 ----
.
SELA1100  MATCH     SAVDSUBJ,SP70
          GOTO      SELA1150 IF NOT EQUAL        * description spaces ?
          PACK      SAVDSUBJ,UNDLN70
.
SELA1150  KEYIN     *PCCOL:CVERT,*DV,SAVDSUBJ:   * read in description
                    *PCCOL:CVERT,*V2LON,*RV,SAVDSUBJ;
          PACK      SAVDSUBJ,SAVDSUBJ,SP70
.
          MATCH     SAVDSUBJ,SP70
          GOTO      SELA1100 IF EQUAL            * blanks entered ?
          MATCH     SAVDSUBJ,UNDLN70
          GOTO      SELA9500 IF EQUAL            * nothing entered ?
          MATCH     SAVDSUBJ,EXITCHAR
          GOTO      SELA9500 IF EQUAL            * EXITCHAR entered ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SAVDSUBJ;
          PACK      FMSADESC,SAVDSUBJ,SP70
          GOTO      SELA0100
.
.---- option 4 ----
.
SELA1400  KEYIN     *PCCOL:CVERT,"_____":
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*DE,CURPRTP;
          PACK      CURPRTP,CURPRTP,SP70
          REP       " 0",CURPRTP
          DISPLAY   *PCCOL:CVERT,*V2LON,CURPRTP;
          GOTO      SELA0100
.
.---- option 5 ----
.
SELA1500  CALL      KPRCFM00                     * get print code
          BRANCH    EXIT,SELA1590,SELA9500       * exit ?
.
          MOVE      FMPRCODE,CURPRTC
          DISPLAY   *PCCOL:CVERT,*V2LON,FMPRCODE,*HOFF,*P44:CVERT,FMPRDESC;
          GOTO      SELA0100
.
SELA1590  MOVE      SP70,CURPRTC                 * nothing entered
          DISPLAY   *PCCOL:CVERT,*EL;
          GOTO      SELA0100
.
SELA1600  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,CURCRP 
          GOTO      SELA0100
.
.---- option 7 ----
.
SELA1700  MATCH     "1",FMSASTYP       * total type subjective ?
          GOTO      SELA1710 IF NOT EQUAL
          CALL      CKSU0000           * check no add to subjectives
          BRANCH    EXIT,SELA0100
.
SELA1710  CALL      CKXC0000           * check if any related accounts
          BRANCH    EXIT,SELA0100
          CALL      CKTS0000           * check if calc details exist
          BRANCH    EXIT,SELA0100
          PACK      DIM1,FMSASTYP,SP70 * save old subjective type
.
SELA1720  KEYIN     *P1:24,*V2LON,"0",*HOFF," = ",*DV,SASTYPE0,", ":
                           *V2LON,"1",*HOFF," = ",*DV,SASTYPE1,", ":
                           *V2LON,"2",*HOFF," = ",*DV,SASTYPE2,", ":
                           *V2LON,"3",*HOFF," = ",*DV,SASTYPE3,", ":
                           *V2LON,"4",*HOFF," = ",*DV,SASTYPE4,*EL:
                    *PCCOL:CVERT,"_",*EL,*PCCOL:CVERT,*V2LON,F1;
          ADD       ONE,F1
          BRANCH    F1,SELA1790,SELA1790,SELA1790,SELA1790,SELA1790
          BEEP
          GOTO      SELA1720
.
SELA1790  LOAD      SASTYPE,F1,SASTYPE0,SASTYPE1,SASTYPE2,SASTYPE3,SASTYPE4
          DISPLAY   *PCCOL:CVERT,*V2LON,SASTYPE,*P1:24,*EL;
          SUB       ONE,F1
          MOVE      F1,FMSASTYP
.
          MATCH     DIM1,FMSASTYP
          GOTO      SELA1792 IF EQUAL            * redisp scr if type changed
          CALL      SCRX0000
          CALL      DISX0000
.
SELA1792  MATCH     "2",FMSASTYP
          GOTO      SELA1795 IF NOT EQUAL        * heading type ?
.
          DISPLAY   *P28:12,*EL;
          UNPACK    SP70,FMSAADDT
          GOTO      SELA0100
.
SELA1795  MATCH     "000",CURLEVEL
          GOTO      SELA0100 IF NOT EQUAL        * current level zero's ?
          ADD       ONE,CVERT                    * set up to get level
          ADD       ONE,SELECT
.
.---- option 8 ----
.
SELA1800  MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00                     * get level code
          REP       " 0",FMLVCODE
          MOVE      FMLVCODE,FMAMCLEV
          MOVE      FMLVCODE,CURLEVEL
          BRANCH    EXIT,SELA1890,SELA9500       * exit ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLVCODE,*HOFF,*P44:CVERT,FMLVDESC;
.
          MATCH     OLDCLEV,CURLEVEL
          GOTO      SELA0100 IF EQUAL            * level unchanged ?
          MATCH     "2",FMSASTYP
          GOTO      SELA0100 IF EQUAL            * heading subj ?
          PACK      SAVADDT,FMSAADDT,SP70
          PACK      SAVSTYP,FMSASTYP,SP70
          PROC      CKLV0000                     * test level ok
          BRANCH    EXIT,SELA1800                * level ok ?
          GOTO      SELA0100
.
SELA1890  MATCH     "2",FMSASTYP
          GOTO      SELA1800 IF NOT EQUAL        * not req for heading type
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLVCODE;
          GOTO      SELA0100
.
.---- option 10 ----
.
SELA2000  MOVE      "2",F1
          KEYIN     *PCCOL:CVERT,*DV,F1,"     (0-5)":
                    *PCCOL:CVERT,*V2LON,*RV,F1:
                    *PCCOL:CVERT,*DV,F1,*EL;
          MOVE      F1,FMAMDPLA
          ADD       ONE,F1
          BRANCH    F1,SELA0100,SELA0100,SELA0100,SELA0100,SELA0100,SELA0100
          BEEP
          GOTO      SELA2000
.
.---- option 11 ----
.
SELA2100  PACK      FMAMUNIT,UNDLN70
          KEYIN     *PCCOL:CVERT,*DV,FMAMUNIT:
                    *PCCOL:CVERT,*V2LON,FMAMUNIT,*EL
          PACK      FMAMUNIT,FMAMUNIT,SP70
          GOTO      SELA0100
.
.---- option 12 ----
.
SELA2200  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,FMAMAYTD
          GOTO      SELA0100
.
.---- option 13 ----
.
SELA2300  MOVE      "1",FMAMMULT
          KEYIN     *PCCOL:CVERT,*DV,FMAMMULT:
                    *PCCOL:CVERT,*V2LON,*RV,FMAMMULT:
                    *PCCOL:CVERT,*DV,FMAMMULT;
          GOTO      SELA0100
.
.---- option 14 ----
.
SELA2400  MOVE      "1",FMAMDIV
          KEYIN     *PCCOL:CVERT,*DV,FMAMDIV:
                    *PCCOL:CVERT,*V2LON,*RV,FMAMDIV:
                    *PCCOL:CVERT,*DV,FMAMDIV;
          GOTO      SELA0100
.
.---- user defined fields ----
.
SELA7000  MOVE      FMSASTYP,F1
          MOVE      SIX,OPTNO                    * starting option number
          LOAD      OPTNO,F1,SIX,SIX,TEN1,TEN1
          CALL      USRA0000                     * execute user defined option
          COMPARE   "2",EXIT
          GOTO      SELA9500 IF EQUAL            * exitchar entered ?
          GOTO      SELA0100                     * get next option
.
.---- exit points ----
.
SELA9000  MATCH     "3",FMSASTYP
          GOTO      SELA9100 IF EQUAL            * stat-post type ?
          MATCH     "0",FMSASTYP
          GOTO      SELA9200 IF NOT EQUAL        * normal type ?
.
SELA9100  MOVE      "0",FMSADTYP
          LOAD      FMSAADES,COPTION,SP70        * clear if in insert
          MATCH     SP70,FMSAADES
          GOTO      SELA9200 IF NOT EQUAL
.
          SETLPTR   FMSADESC,FMSUUD5A
          PACK      FMSAADES,FMSADESC,SP70
          SETLPTR   FMSADESC
.
SELA9200  MOVE      ZERO,EXIT                    * post
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT                     * cancel
.
SELA9999  RETURN
.******************************************************************************
.* SELC - screen C                               Called By ML0000             *
.******************************************************************************
SELC0000  CALL      SCRC0000           * display screen C
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
          MOVE      "1",SKIPLINE 
          MOVE      SAVLEDG,LEDGER
          BRANCH    ACCEPT,SELC5000    * in accept mode
.
SELC1000  CALL      DATC0000           * display data
.
SELC1010  CALL      MQST0000           * get desired action
          BRANCH    EXIT,SELC9500      * quit screen ?
          MOVE      SP70,KEY26
          LOAD      KEY26,OPTIONC,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
          CALL      RDFMXC1
          BRANCH    OVRCD,SELC5000
.
.---- modify mode ----
.
          MOVE      SP70,KEY26
          LOAD      KEY26,OPTIONC,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
          UNPACK    KEY26,LEDGER,SUBJCODE,COSTCODE
          CALL      CKTC0000           * check if in calc details
          BRANCH    EXIT,SELC1010
.
          CALL      BCOD0000
          PACK      KEY14,LEDGER,ACCOUNT,SP70
          CALL      CDAT0000             * check for data
          BRANCH    EXIT,SELC1010
.
          DISPLAY   *P55:24,"Deleting : ",*V2LON,COSTCODE,*EF;
          MOVE      ZERO,DELALL
          MOVE      ZERO,OLDDSUBJ
          MOVE      ZERO,OLDDCOST
          MOVE      ZERO,SKIPFMTU
          CALL      DREC0000           * delete old records
.
          MOVE      OPTIONC,ITEMNUM
          MOVE      OPTIONC,SAVITEM
          MOVE      "8",LINENO
          ADD       ITEMNUM,LINENO     * get lineno
          MOVE      "0",SKIPLINE 
          CALL      KDAT0000           * get data
          MOVE      "1",SKIPLINE 
          GOTO      SELC1000
.
.---- insert mode ----
.
SELC5000  ADD       ONE,ITEMNUM
          COMPARE   MAXITEMS,ITEMNUM
          CALL      ADDR0000 IF NOT LESS         * get first free position
          MOVE      "8",LINENO
          ADD       ITEMNUM,LINENO               * get lineno
          MOVE      ITEMNUM,SAVITEM
.
SELC6000  CALL      KDAT0000           * get data
          BRANCH    EXIT,SELC1000
.
          MOVE      SAVITEM,ITEMNUM
          GOTO      SELC5000           * get more entries
.
SELC9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELC9999
.
SELC9500  MOVE      ONE,EXIT           * quit
.
SELC9999  RETURN
.**********************************************************************
.  KDAT - Keyin screen data                            Called By SELC
.        Requires - SAVLEDG  (current ledger)
.                   SAVSUBJ  (current subj)
.                   LINENO   (current line)
.        Returns  - EXIT     (1=quit)
.**********************************************************************
KDAT0000  DISPLAY   *P1:LINENO,*V2LON,SAVITEM,DOT,*EL;
          MOVE      SAVLEDG,FMLALEDG
          MOVE      "7",CCOL
          MOVE      LINENO,CVERT
          CALL      KCCAFM00           * get cost centre
          BRANCH    EXIT,KDAT9500,KDAT9500
          MOVE      FMCCCOCE,COSTCODE
          MOVE      SAVSUBJ,SUBJCODE
          CALL      BCOD0000           * build account code
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCCCOCE,*HOFF,SP2,FMCCDESC:
                    *P68:CVERT,*V2LON,ACCOUNT;
.
          PACK      KEY26,SAVLEDG,SUBJCODE,COSTCODE,SP70
          CALL      RAFMXC1
          BRANCH    OVRCD,KDAT1000    * record exists ?
          DISPLAY   *P1:24,*B,*EL,"Cost Centre Already Linked - ";
          CALL      HITENTER
          GOTO      KDAT0000
.
KDAT1000  MOVE      SAVLEDG,LEDGER
          MOVE      ZERO,WRECLEV
          MOVE      ZERO,SKIPFMTU
          DISPLAY   *P55:24,"Writing  : ",*V2LON,COSTCODE,*EF;
          CALL      WREC0000           * write records
.
.
KDAT9000  MOVE      ZERO,EXIT          * continue
          GOTO      KDAT9999
.
KDAT9500  MOVE      ONE,EXIT           * quit
.
KDAT9999  RETURN
.******************************************************************************
.* QUES - question select/post/cancel/notes ?    Called by SELA               *
.*        Returns : Selection (-1 = Cancel, 0 = Post, other = selection)      *
.******************************************************************************
QUES0000  DISPLAY   *P1:24,*EL,"Select, (",*V2LON,"P":
                    *HOFF,")ost, (",*V2LON,"C",*HOFF,")ancel";
          MOVE      "24",F2
          COMPARE   ONE,FMACW1ON
          GOTO      QUES0500 IF NOT EQUAL        * wp activated ?
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")otes";
          ADD       "9",F2
.
QUES0500  DISPLAY   " : ";
          ADD       "4",F2
.
QUES1000  KEYIN     *PF2:24,"__":
                    *PF2:24,*V2LON,*JR,DIM2,*EL;
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          MOVE      SEQ,SELECT
          MATCH     " C",DIM2
          GOTO      QUES9999 IF EQUAL            * cancel ?
.
          MOVE      ZERO,SELECT
          MATCH     " P",DIM2
          GOTO      QUES9999 IF EQUAL            * post ?
.
          MATCH     " *",DIM2
          GOTO      QUES9000 IF EQUAL            * iba mode ?
.
          COMPARE   ONE,FMACW1ON
          GOTO      QUES2000 IF NOT EQUAL        * notes active ?
          MATCH     " N",DIM2
          GOTO      QUES2000 IF NOT EQUAL        * notes ?
.
          CALL      NOTE0000                     * execute wp
          CALL      RCODFM00                     * redisplay screen
          GOTO      QUES0000
.
QUES2000  MOVE      ZERO,SELECT                  * selection made
          MOVE      DIM2,SELECT
          COMPARE   SELECT,ZERO
          GOTO      QUES9999 IF LESS             * valid numeric ?
          BEEP
          GOTO      QUES1000
.
QUES9000  MATCH     "1426",PASSCODE              * go into iba mode
          GOTO      QUES2000 IF NOT EQUAL
          MOVE      "1",IBAMODE
          GOTO      QUES0000
.
QUES9999  RETURN
.******************************************************************************
.* GETW - read in wp data                        Called by SELA, SELB         *
.******************************************************************************
GETW0000  COMPARE   ONE,FMACW1ON
          GOTO      GETW9999 IF NOT EQUAL        * notes active ?
.
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          PACK      KEY17,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMUW1                      * go to start of records
.
GETW1000  CALL      RKFMUW1                      * get next record
          BRANCH    OVRCD,GETW2000               * no more records ?
          PACK      KEY14,FMUWLEDG,FMUWACCT,SP70
          MATCH     KEY14,KEY17
          GOTO      GETW2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMUWLINE
          GOTO      GETW1000
.
GETW2000  WEOF      FMSTMP01,SEQ
          CLOSE     FMSTMP01
.
GETW9999  RETURN
.******************************************************************************
.* NOTE - Execute word processor                 Called by QUES               *
.******************************************************************************
NOTE0000  
.         DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                   *BLINKON,*V2LON,"Please Wait",*EL;
.
.         PREP      FMSTMP02,FILENAM2
.         WRITE     FMSTMP02,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.         WRITE     FMSTMP02,SEQ;VERSION,SP10,SP5,PRGNAM
.         WRITE     FMSTMP02,SEQ;SP1
.         WRITE     FMSTMP02,SEQ;"    Ledger               : ":
.                   SAVLEDG,SP10,SP4,SAVDLEDG
.         WRITE     FMSTMP02,SEQ;"    Subjective           : ":
.                   SAVSUBJ,SP4,SAVDSUBJ
.         WRITE     FMSTMP02,SEQ;"    Notes"
.         WRITE     FMSTMP02,SEQ;SP1
.
.         OPEN      FMSTMP01,FILENAM1            * go to start of records
.
.OTE1000  READ      FMSTMP01,SEQ;FMUWLINE        * read in wp data
.         GOTO      NOTE2000 IF OVER
.
.         WRITE     FMSTMP02,SEQ;FMUWLINE
.         GOTO      NOTE1000
.
.OTE2000  CLEAR     CMDLINE
.         PACK      CMDLINE,WP,FILENAM2,WPDAT
.         EXECUTE   CMDLINE,TASKID               * initiate word processor
.
.         CALL      WEOF0000                     * make sure something in file
.         CLOSE     FMSTMP02
          CLOSE     FMSTMP01
.
.         CLEAR     CMDLINE                      * copy file to original
.         PACK      CMDLINE,CP,FILENAM2,TXT,FILENAM1,TXT 
.         EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    FILENAM1,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          MOVE      ONE,WPSTAT
.
          DISPLAY   *P42:5,SAVDSUBJ
          WORD      CMDLINE,999,2,7,76,22,WPSTAT
          DISPLAY   *P42:5,*EL
.
NOTE9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
.EOF0000  CLOSE     FMSTMP02
.         MOVE      ZERO,OVRCD
.         TRAP      OVERCOND IF IO
.         OPEN      FMSTMP02,FILENAM2
.         TRAPCLR   IO
.         COMPARE   ONE,OVRCD
.         GOTO      WEOF9999 IF NOT EQUAL
.
.         PREP      FMSTMP02,FILENAM2
.         WEOF      FMSTMP02,SEQ
.
.EOF9999  RETURN
.******************************************************************************
.* DATC - display screen C data                  Called By MQST,SELC          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMS (maximum no. of items per page + 1)              *
.*                  SKIPLINE (0=dont display data on line cvert (redisplays)) *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATC0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17,SKEY
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
          PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMXC2                      * go to start of records
.
DATC1000  CALL      RKFMXC2                      * get next record
          BRANCH    OVRCD,DATC9000               * no more records ?
          MATCH     SAVLEDG,FMXCLED
          GOTO      DATC9000 IF NOT EQUAL        * not valid record ?
          MATCH     SAVSUBJ,FMXCSUB
          GOTO      DATC9000 IF NOT EQUAL        * not valid record ?
.
DATC1500  ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMS,ITEMNUM
          GOTO      DATC2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATC2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATC1000 IF LESS             * not up to current page ?
          GOTO      DATC9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
          BRANCH    SKIPLINE,DATC5000            * display line CVERT ?
          COMPARE   LINENO,CVERT
          GOTO      DATC1500 IF EQUAL            * get next line
.
DATC5000  MOVE      FMXCCOS,COSTCODE
          MOVE      FMXCSUB,SUBJCODE
          CALL      BCOD0000
.
          PACK      FMCCDESC,SP70
          PACK      KEY14,FMXCLED,FMXCCOS,SP70
          CALL      RDFMCC1
.
          DISPLAY   *P7:LINENO,COSTCODE,SP2,FMCCDESC:
                    *P68:LINENO,ACCOUNT;
          PACK      KEY26,FMXCLED,FMXCSUB,FMXCCOS,SP70
          STORE     KEY26,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATC1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATC9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATC9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATC9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMS,ITEMNUM
          GOTO      DATC9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATC9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                     * no more data
          GOTO      DATC9999
.
.---- reached EOP before EOF ----
.
DATC9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMS,ITEMNUM
.
DATC9999  RETURN
.******************************************************************************
.* HEDC - display screen C heading accounts data    Called by DATC            *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMS (maximum no. of items per page + 1)              *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
HEDC0000  PACK      KEY26,SAVLEDG,SP70
          CALL      RSFMRF2                      * go to start of records
.
HEDC1000  CALL      RKFMRF2                      * get next record
          BRANCH    OVRCD,HEDC9000               * no more records ?
          MATCH     SAVLEDG,FMRFLED
          GOTO      HEDC9000 IF NOT EQUAL        * no more records ?
.
          MOVE      FMRFACC,ACCOUNT
          CALL      GCOD0000                     * get Subj and CC
          MATCH     SUBJCODE,SAVSUBJ
          GOTO      HEDC1000 IF NOT EQUAL        * not desired Subj ?
.
          MOVE      SP70,FMCCDESC
          PACK      KEY14,SAVLEDG,COSTCODE,SP70
          CALL      RDFMCC1
          BRANCH    OVRCD,HEDC1000
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMS,ITEMNUM
          GOTO      HEDC2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
HEDC2000  COMPARE   PAGENO,CURPAGE
          GOTO      HEDC1000 IF LESS             * not up to current page ?
          GOTO      HEDC9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,COSTCODE,SP2,FMCCDESC:
                    *P68:LINENO,FMRFACC;
          PACK      KEY33,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,UNDLN70
          STORE     KEY33,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      HEDC1000                     * get next record
.
.---- reached EOF before EOP ----
.
HEDC9000  COMPARE   PAGENO,CURPAGE
          GOTO      HEDC9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
HEDC9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMS,ITEMNUM
          GOTO      HEDC9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
HEDC9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                    * no more data
          GOTO      HEDC9999
.
.---- reached EOP before EOF ----
.
HEDC9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMS,ITEMNUM
.
HEDC9999  RETURN
.******************************************************************************
.* ADDR - get first blank position               Called By SCRC0000           *
.******************************************************************************
ADDR0000  ADD       ONE,PAGENO         * try next page
          CALL      DATC0000           * display next page
.
          ADD       ONE,ITEMNUM        * get next item
          COMPARE   MAXITEMS,ITEMNUM
          GOTO      ADDR0000 IF NOT LESS  * at end of page
.
ADDR9999  RETURN
.******************************************************************************
.* MQST - Main question for screen C             Called By SELC0000           *
.******************************************************************************
MQST0000  DISPLAY   *P1:24,"Select Item, (",*V2LON,"R":
                    *HOFF,")ange";               * display prompt
          MOVE      "20",CCOL
          COMPARE   ONE,MORE
          GOTO      MQST1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQST1000  COMPARE   PAGENO,ONE
          GOTO      MQST2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQST2000  DISPLAY   ", (",*V2LON,"A",*HOFF,")dd":
                    ", e(",*V2LON,"X",*HOFF,")it : "
                    
          ADD       "19",CCOL
.
MQST3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
.
          MATCH     " A",DIM2          * Add at any stage
          GOTO      MQST8000 IF EQUAL
.
          COMPARE   ONE,MORE
          GOTO      MQST4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQST4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATC0000
          GOTO      MQST0000
.
MQST4000  COMPARE   PAGENO,ONE
          GOTO      MQST4500 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQST4500 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATC0000
          GOTO      MQST0000
.
MQST4500  MATCH     " R",DIM2
          GOTO      MQST5000 IF NOT EQUAL
          CALL      RANG0000           * enter data for range
          CALL      DATC0000
          GOTO      MQST0000
.
MQST5000  MATCH     " X",DIM2
          GOTO      MQST9500 IF EQUAL
.
          MOVE      ZERO,OPTIONC
          MOVE      DIM2,OPTIONC
          COMPARE   OPTIONC,ZERO
          GOTO      MQST9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQST3000           * get another option
.
MQST8000  MOVE      "99",OPTIONC
.
MQST9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQST9999
.
MQST9500  MOVE      ONE,EXIT           * quit
.
MQST9999  RETURN
.**********************************************************************
. RANG - create records for a range of cost centres   Called By MQST
.**********************************************************************
RANG0000  MOVE      "4",SCRNO          * set up redisplays for scr C range keyin
.
RANG0100  KEYIN     *P1:22,*EF,*P1:24,"(",*V2LON:
                    "A",*HOFF,")dd Range, (",*V2LON:
                    "D",*HOFF,")elete Range, e(",*V2LON:
                    "X",*HOFF,")it : _",*P39:24,*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       "1x2x3xa1A1d2D2x3X3",ANS
          MOVE      ZERO,RANGFLAG
          MOVE      ANS,RANGFLAG
          BRANCH    RANGFLAG,RANG0150,RANG0150,RANG9999
          BEEP
          GOTO      RANG0100
.
RANG0150  LOAD      MODESC,RANGFLAG,MODESC1,MODESC2
          MOVE      SAVLEDG,FMLALEDG
          UNPACK    SP70,FROMCOCE,TEMPDESC
          DISPLAY   *P1:22,MODESC," From Cost Centre : ",*EF;
          MOVE      "27",CCOL
          MOVE      "22",CVERT
          CALL      KCCAFM00           * get start of range
          BRANCH    EXIT,RANG0000,RANG9999
          MOVE      FMCCCOCE,FROMCOCE
          MOVE      FMCCDESC,TEMPDESC
.
RANG0200  DISPLAY   *P1:22,MODESC," From Cost Centre : ",*V2LON,FROMCOCE:
                    *HOFF,"  ",TEMPDESC,*EL,*P1:23:
                    "       To   Cost Centre :  ",*EF;
.
          MOVE      "27",CCOL
          MOVE      "23",CVERT
          CALL      KCCAFM00           * get end of range
          BRANCH    EXIT,RANG0000,RANG9999
          MOVE      FMCCCOCE,TOCOCE
.
          DISPLAY   *P1:22,MODESC," From Cost Centre : ",*V2LON:
                    FROMCOCE,*HOFF,"  ",TEMPDESC,*EL,*P1:23:
                    "       To   Cost Centre : ",*V2LON,TOCOCE:
                    *HOFF,"  ",FMCCDESC;
          MATCH     FROMCOCE,TOCOCE
          GOTO      RANG0300 IF NOT LESS
          DISPLAY   *P1:24,*B,*EL,"Illegal Range Entered - ";
          CALL      HITENTER
          GOTO      RANG0200
.
RANG0300  KEYIN     *P15:24,"  Ok (Y/N) ? ",*EF,*V2LON,ANS; * range is ok ?
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      RANG0400 IF EQUAL  * continue
          MATCH     "N",ANS
          GOTO      RANG0000 IF EQUAL  * rekey range
          BEEP
          GOTO      RANG0300
.
RANG0400  PACK      KEY14,SAVLEDG,FROMCOCE,SP70
          CALL      RSFMCC1
          CALL      RPFMCC1
          MOVE      SAVSUBJ,SUBJCODE
          MOVE      SAVLEDG,LEDGER
          DISPLAY   *P1:24,*EL;
.
RANG0500  CALL      RKFMCC1            * create records
          BRANCH    OVRCD,RANG9999     * no more records
          MATCH     FMCCLEDG,SAVLEDG
          GOTO      RANG9999 IF LESS   * past end of range
.
          MATCH     FMCCCOCE,TOCOCE
          GOTO      RANG9999 IF LESS   * past end of range
.
          DISPLAY   *P55:24,"Processing : ",*V2LON,FMCCCOCE;
.
          MOVE      FMCCCOCE,COSTCODE
          MOVE      SAVSUBJ,SUBJCODE
          MOVE      ZERO,WRECLEV
          MOVE      ZERO,SKIPFMTU
          MOVE      ZERO,DELALL
          MOVE      ZERO,OLDDSUBJ
          MOVE      ZERO,OLDDCOST
.
          BRANCH    RANGFLAG,RANG2000       * add or delete ?
.
          CALL      CKTC0000                * check if in calc details
          BRANCH    EXIT,RANG0500
.
          CALL      BCOD0000
          PACK      KEY14,LEDGER,ACCOUNT,SP70
          CALL      CDAT0000                * check for data
          BRANCH    EXIT,RANG0500
.
          CALL      DREC0000                * delete required records
          GOTO      RANG0500
.
RANG2000  CALL      WREC0000                * create required records
          GOTO      RANG0500
.
RANG9999  MOVE      "3",SCRNO          * set up redisplays for scr C data keyins
          RETURN
.******************************************************************************
.* SCRB - Display Screen B                       Called by SELB0000, redisps  *
.******************************************************************************
SCRB0000  MOVE      "2",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Subjective           : ":
                    *V2LON,SAVSUBJ,*HOFF,SP2,SAVDSUBJ,*EF;
          MOVE      FMSASTYP,F1
          BRANCH    F1,SCRB0010,SCRB0010,SCRB0020,SCRB0030
.
          DISPLAY   *P1:7,*V2LON," 1",*HOFF,". Abbrev. Description  : ":
                    *P1:8,*V2LON," 2",*HOFF,". Account Type         : ":
                    *P1:9,*V2LON," 3",*HOFF,". Status               : ":
                   *P1:10,*V2LON," 4",*HOFF,". Asset Reg. Ind.(Y/N) : ":
                   *P1:11,*V2LON," 5",*HOFF,". Total to Subjective  : ";
          MOVE      "11",LINENO                  * starting line number
          MOVE      " 1",COLNO                   * fix collumn number
          MOVE      "5",OPTNO                    * starting option number
          GOTO      SCRB1000
.
SCRB0010  DISPLAY   *P1:7,*V2LON," 1",*HOFF,". Description Type     : ":
                    *P1:8,*V2LON," 2",*HOFF,". Abbrev. Description  : ":
                    *P1:9,*V2LON," 3",*HOFF,". Level                : ":
                   *P1:10,*V2LON," 4",*HOFF,". Total to Subjective  : ";
          MOVE      "10",LINENO                  * starting line number
          MOVE      " 1",COLNO                   * fix collumn number
          MOVE      "4",OPTNO                    * starting option number
          GOTO      SCRB1000
.
SCRB0020  DISPLAY   *P1:7,*V2LON," 1",*HOFF,". Abbrev. Description  : ":
                    *P1:8,*V2LON," 2",*HOFF,". Decimal Places       : ":
                    *P1:9,*V2LON," 3",*HOFF,". Statistical Units    : ":
                   *P1:10,*V2LON," 4",*HOFF,". Average YTD (Y/N)    : ";
          MOVE      "10",LINENO                  * starting line number
          MOVE      " 1",COLNO                   * fix collumn number
          MOVE      "4",OPTNO                    * starting option number
          GOTO      SCRB1000
.
SCRB0030  DISPLAY   *P1:7,*V2LON," 1",*HOFF,". Description Type     : ":
                    *P1:8,*V2LON," 2",*HOFF,". Abbrev. Description  : ":
                    *P1:9,*V2LON," 3",*HOFF,". Level                : ":
                   *P1:10,*V2LON," 4",*HOFF,". Decimal Places       : ":
                   *P1:11,*V2LON," 5",*HOFF,". Statistical Units    : ":
                   *P1:12,*V2LON," 6",*HOFF,". Average YTD (Y/N)    : ":
                   *P1:13,*V2LON," 7",*HOFF,". Constant Multiplier  : ":
                   *P1:14,*V2LON," 8",*HOFF,". Constant Divisor     : ";
          MOVE      "14",LINENO                  * starting line number
          MOVE      " 1",COLNO                   * fix collumn number
          MOVE      "8",OPTNO                    * starting option number
          GOTO      SCRB1000
.
.
...       old bank account, oncost code, ppt (should be deleted if definately
...       not required in the future)
....               *P1:10,*V2LON," 4",*HOFF,". Bank Account   (Y/N) : ":
....                      *P32:10,"Cheque Account Number : ":
....               *P1:11,*V2LON," 5",*HOFF,". Prsc. Pay Tax  (Y/N) : ":
....               *P1:12,*V2LON," 6",*HOFF,". Oncost         (Y/N) : ":
....                      *P32:12,"Oncost Code : ":
.
SCRB1000  COMPARE   ONE,FMACR1ON
          GOTO      SCRB1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR1NA," : ";
.
SCRB1100  COMPARE   ONE,FMACR2ON
          GOTO      SCRB1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR2NA," : ";
.
SCRB1200  COMPARE   ONE,FMACR3ON
          GOTO      SCRB1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR3NA," : ";
.
SCRB1300  COMPARE   ONE,FMACR4ON
          GOTO      SCRB2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR4NA," : ";
.
SCRB2000  COMPARE   ONE,FMACD1ON
          GOTO      SCRB2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD1NA," : ";
.
SCRB2100  COMPARE   ONE,FMACD2ON
          GOTO      SCRB2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD2NA," : ";
.
SCRB2200  COMPARE   ONE,FMACD3ON
          GOTO      SCRB2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD3NA," : ";
.
SCRB2300  COMPARE   ONE,FMACD4ON
          GOTO      SCRB3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD4NA," : ";
.
SCRB3000  COMPARE   ONE,FMACA1ON
          GOTO      SCRB3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA1NA," : ";
.
SCRB3100  COMPARE   ONE,FMACA2ON
          GOTO      SCRB3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA2NA," : ";
.
SCRB3200  COMPARE   ONE,FMACA3ON
          GOTO      SCRB3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA3NA," : ";
.
SCRB3300  COMPARE   ONE,FMACA4ON
          GOTO      SCRB4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA4NA," : ";
.
SCRB4000  COMPARE   ONE,FMACC1ON
          GOTO      SCRB4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC1NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRB4100  COMPARE   ONE,FMACC2ON
          GOTO      SCRB4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC2NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRB4200  COMPARE   ONE,FMACC3ON
          GOTO      SCRB4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC3NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRB4300  COMPARE   ONE,FMACC4ON
          GOTO      SCRB5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC4NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRB5000  
.
SCRB9999  RETURN
.******************************************************************************
.* DISB - Display Screen B                       Called by SELB0000, redisps  *
.******************************************************************************
DISB0000  MATCH     "0",FMSASTYP
          GOTO      DISB0100 IF EQUAL
.
          BRANCH    ACCEPT,DISB9999
          MOVE      ZERO,F1
          MOVE      FMSADTYP,F1
          ADD       ONE,F1
          LOAD      DTYPE,F1,DTYPE0,DTYPE1,DTYPE2
          MOVE      NO,YESNO
          LOAD      YESNO,FMSAAYTD,YES
          MOVE      FMSASTYP,F1
          BRANCH    F1,DISB0010,DISB0010,DISB0020,DISB0030
.
DISB0010  MOVE      SP70,FMLVDESC
          PACK      KEY3,FMSADLEV,SP70
          CALL      RDFMLV1
          MOVE      FMSAADDT,TEMPSUB1
          PROC      GETDESC
          DISPLAY   *P28:7,*V2LON,DTYPE:
                    *P28:8,*V2LON,FMSAADES:
                    *P28:9,*V2LON,FMSADLEV,*HOFF,*P44:9,FMLVDESC:
                   *P28:10,*V2LON,FMSAADDT,*HOFF,*P44:10,TOTDESC;
          MOVE      "10",LINENO                  * starting line number
          MOVE      "28",COLNO                   * fix collumn number
          GOTO      DISB1000
.
DISB0020  DISPLAY   *P28:7,*V2LON,FMSAADES:
                    *P28:8,*V2LON,FMSADPLA:
                    *P28:9,*V2LON,FMSAUNIT:
                    *P28:10,*V2LON,YESNO;
          MOVE      "10",LINENO                  * starting line number
          MOVE      "28",COLNO                   * fix collumn number
          GOTO      DISB1000
.
DISB0030  MOVE      SP70,FMLVDESC
          PACK      KEY3,FMSADLEV,SP70
          CALL      RDFMLV1
          DISPLAY   *P28:7,*V2LON,DTYPE:
                    *P28:8,*V2LON,FMSAADES:
                    *P28:9,*V2LON,FMSADLEV,*HOFF,*P44:9,FMLVDESC:
                    *P28:10,*V2LON,FMSADPLA:
                    *P28:11,*V2LON,FMSAUNIT:
                    *P28:12,*V2LON,YESNO:
                    *P28:13,*V2LON,FMSAMULT:
                    *P28:14,*V2LON,FMSADIV;
          MOVE      "14",LINENO                  * starting line number
          MOVE      "28",COLNO                   * fix collumn number
          GOTO      DISB1000
.
DISB0100  COMPARE   "7",SELECT
          GOTO      DISB0200 IF NOT LESS
          BRANCH    ACCEPT,DISB9999              * in accept mode ?
.
DISB0200  MOVE      ZERO,F1
          MOVE      FMSATYPE,F1
          MOVE      SP70,ACCTYPE
          LOAD      ACCTYPE,F1,ACCTYPE1,ACCTYPE2,ACCTYPE3:  * get acc type
                               ACCTYPE4,ACCTYPE5,ACCTYPE6,ACCTYPE7:
                               ACCTYPE8,ACCTYPE9
          MOVE      STATUS0,STATUS
          LOAD      STATUS,FMSASTAT,STATUS1,STATUS2   * get status
          MOVE      FMSAADDT,TEMPSUB1
          PROC      GETDESC
.
          MOVE      NO,YESNO
          LOAD      YESNO,FMSAASST,YES           * get yes/no
          DISPLAY   *P28:7,*V2LON,FMSAADES:
                    *P28:8,ACCTYPE:
                    *P28:9,STATUS:
                    *P28:10,YESNO:
                    *P28:11,*V2LON,FMSAADDT,*HOFF,*P44:11,TOTDESC;
          MOVE      "11",LINENO                  * starting line number
          MOVE      "28",COLNO                   * fix collumn number
...       old bank account, oncost code, ppt (should be deleted if definately
...       not required in the future)
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMSACTRL,YES           * get yes/no
...                 *P28:10,YESNO,*P56:11,FMSACHEQ;
...
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMSAPPT,YES            * get yes/no
...       DISPLAY   *P28:11,*V2LON,YESNO;
...
...       MOVE      NO,YESNO
...       LOAD      YESNO,FMSAONC,YES            * get yes/no
...       DISPLAY   *P28:12,*V2LON,YESNO;
...       COMPARE   ONE,FMSAONC
...       GOTO      DISB0300 IF NOT EQUAL
...       MOVE      SP70,FMONDESC
...       PACK      KEY3,FMSAONCC,SP70
...       CALL      RDFMON1
...       DISPLAY   *P46:12,*V2LON,FMSAONCC,*HOFF:
...                 SP1,FMONDESC,SP1,FMONPERC," %";
.
DISB1000  
          COMPARE   ONE,FMACR1ON
          GOTO      DISB1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMSAREF1;
.
DISB1100  COMPARE   ONE,FMACR2ON
          GOTO      DISB1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMSAREF2;
.
DISB1200  COMPARE   ONE,FMACR3ON
          GOTO      DISB1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMSAREF3;
.
DISB1300  COMPARE   ONE,FMACR4ON
          GOTO      DISB2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMSAREF4;
.
DISB2000  COMPARE   ONE,FMACD1ON
          GOTO      DISB2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMSADAT1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISB2100  COMPARE   ONE,FMACD2ON
          GOTO      DISB2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMSADAT2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISB2200  COMPARE   ONE,FMACD3ON
          GOTO      DISB2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMSADAT3,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISB2300  COMPARE   ONE,FMACD4ON
          GOTO      DISB3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          UNPACK    FMSADAT4,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISB3000  COMPARE   ONE,FMACA1ON
          GOTO      DISB3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "1",AMOUNTNO
          CALL      DAMB0000
.
DISB3100  COMPARE   ONE,FMACA2ON
          GOTO      DISB3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "2",AMOUNTNO
          CALL      DAMB0000
.
DISB3200  COMPARE   ONE,FMACA3ON
          GOTO      DISB3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "3",AMOUNTNO
          CALL      DAMB0000
.
DISB3300  COMPARE   ONE,FMACA4ON
          GOTO      DISB4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "4",AMOUNTNO
          CALL      DAMB0000
.
DISB4000  COMPARE   ONE,FMACC1ON
          GOTO      DISB4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMSACOD1
          GOTO      DISB4100 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMSACOD1,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMSACOD1,*HOFF,*P44:LINENO,FMCDDESC;
.
DISB4100  COMPARE   ONE,FMACC2ON
          GOTO      DISB4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMSACOD2
          GOTO      DISB4200 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMSACOD2,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMSACOD2,*HOFF,*P44:LINENO,FMCDDESC;
.
DISB4200  COMPARE   ONE,FMACC3ON
          GOTO      DISB4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMSACOD3
          GOTO      DISB4300 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMSACOD3,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMSACOD3,*HOFF,*P44:LINENO,FMCDDESC;
.
DISB4300  COMPARE   ONE,FMACC4ON
          GOTO      DISB5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMSACOD4
          GOTO      DISB5000 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMSACOD4,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMSACOD4,*HOFF,*P44:LINENO,FMCDDESC;
.
DISB5000  
.
DISB9999  RETURN
.******************************************************************************
.* SELB - Modify screen B data                   Called by ML0000             *
.*        Returns : EXIT     (1=quit, 0=post)                                 *
.******************************************************************************
SELB0000  MOVE      ZERO,SELECT   
          MOVE      ZERO,UPDATE
          COMPARE   ONE,COPTION
          CALL      GETW0000 IF NOT EQUAL        * read in wp data (if req)
          CALL      SCRB0000                     * display screen B
          CALL      DISB0000                     * display screen B data
.
.---- determine option to execute ----
.
SELB0100  ADD       ONE,SELECT                   * get next option
          BRANCH    ACCEPT,SELB0500              * in accept mode ?
          CALL      QUES0000                     * select/post/cancel/notes ?
.
          COMPARE   ZERO,SELECT
          GOTO      SELB9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,SELECT
          GOTO      SELB9500 IF EQUAL            * cancel ?
.
SELB0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "6",CVERT
          ADD       SELECT,CVERT
          MATCH     "0",FMSASTYP
          GOTO      SELB0600 IF EQUAL
          MATCH     "3",FMSASTYP
          GOTO      SELB0700 IF EQUAL
          MATCH     "4",FMSASTYP
          GOTO      SELB0800 IF EQUAL
.
          BRANCH    SELECT,SELB1100,SELB1200:    * head/tot options
                           SELB2500,SELB2600
          GOTO      SELB7000
.
SELB0600  BRANCH    SELECT,SELB1200,SELB1300:    * normal subj options
                           SELB1400,SELB1800,SELB2600
          GOTO      SELB7000
.
SELB0700  BRANCH    SELECT,SELB1200:             * stat-post subj options
                           SELB2000,SELB2100,SELB2200
          GOTO      SELB7000
.
SELB0800  BRANCH    SELECT,SELB1100,SELB1200:    * stat-total subj options
                           SELB2500,SELB2000,SELB2100:
                           SELB2200,SELB2300,SELB2400
          GOTO      SELB7000
.
.---- option 1 ----
.
SELB1100  KEYIN     *P1:24,*V2LON,"0",*HOFF," = ",*DV,DTYPE0,", ":
                           *V2LON,"1",*HOFF," = ",*DV,DTYPE1,", ":
                           *V2LON,"2",*HOFF," = ",*DV,DTYPE2,*EL:
                    *PCCOL:CVERT,"_",*EL,*PCCOL:CVERT,*V2LON,F1;
          ADD       ONE,F1
          BRANCH    F1,SELB1190,SELB1190,SELB1190
          BEEP
          GOTO      SELB1100
.
SELB1190  LOAD      DTYPE,F1,DTYPE0,DTYPE1,DTYPE2
          DISPLAY   *PCCOL:CVERT,*V2LON,DTYPE,*P1:24,*EL;
          SUB       ONE,F1
          MOVE      F1,FMSADTYP
.
          ADD       ONE,CVERT          * set up to read in abbrev desc if req
          ADD       ONE,SELECT
          MATCH     "0",FMSADTYP
          GOTO      SELB1195 IF EQUAL
.
          MOVE      SP70,FMSAADES
          DISPLAY   *P28:CVERT,*EL;
          GOTO      SELB0100
.
SELB1195  MATCH     SP70,FMSAADES
          GOTO      SELB0100 IF NOT EQUAL
.
.---- option 2 ----
.
SELB1200  MATCH     "0",FMSADTYP
          GOTO      SELB1295 IF NOT EQUAL        * combined type
.
          MATCH     FMSAADES,SP70
          GOTO      SELB1250 IF NOT EQUAL        * no abbrev desc ?
          SETLPTR   FMSADESC,FMSUUD5A
          PACK      FMSAADES,FMSADESC,SP70
          SETLPTR   FMSADESC
.
SELB1250  PACK      UNDLN70,FMSAADES,SP70
          MOVE      FMSUUD5A,CSTRLEN             * set up string length
          CALL      GSTR0000                     * get string
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
.
          PACK      CSTRING,CSTRING,SP70
          MATCH     CSTRING,SP70
          GOTO      SELB1270 IF EQUAL            * nothing entered ?
          PACK      FMSAADES,CSTRING,SP70
.
SELB1270  MATCH     FMSAADES,SP70
          GOTO      SELB1290 IF EQUAL            * no abbrev desc ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSAADES;
          MATCH     EXITCHAR,FMSAADES
          GOTO      SELB9500 IF EQUAL            * exitchar entered ?
          GOTO      SELB0100
.
SELB1290  DISPLAY   *P1:24,*EL,*B:               * nothing entered
                    "An Abbreviated Description Must Be Entered - ";
          CALL      HITENTER
          GOTO      SELB1200
.
SELB1295  DISPLAY   *P1:24,*EL,*B:               * option not valid
                    "Option Only Valid for Combined Description Type - ";
          CALL      HITENTER
          GOTO      SELB0100
.
.---- option 3 ----
.
SELB1300  DISPLAY   *P1:24,*V2LON,"1",*HOFF," = ",ACCTYPE1,", ":
                           *V2LON,"2",*HOFF," = ",ACCTYPE2,", ":
                           *V2LON,"3",*HOFF," = ",ACCTYPE3,", ":
                           *V2LON,"4",*HOFF," = ",ACCTYPE4,", ":
                           *V2LON,"5",*HOFF," = ",ACCTYPE5,*EL;
.
SELB1310  KEYIN     *PCCOL:CVERT,"_",*EL:             * read in acct type
                    *PCCOL:CVERT,*V2LON,F1;
          MOVE      SP70,ACCTYPE
          LOAD      ACCTYPE,F1,ACCTYPE1,ACCTYPE2:     * get description
                               ACCTYPE3,ACCTYPE4,ACCTYPE5
          MATCH     SP70,ACCTYPE
          GOTO      SELB1390 IF NOT EQUAL             * legal option ?
.
          BEEP
          GOTO      SELB1310
.
SELB1390  
          MOVE      F1,FMSATYPE
          DISPLAY   *PCCOL:CVERT,*V2LON,ACCTYPE:
                    *P1:24,*EL;
          GOTO      SELB0100
.
.---- option 4 ----
.
SELB1400  DISPLAY   *P1:24,*V2LON,"0",*HOFF," = ",STATUS0,", ":
                           *V2LON,"1",*HOFF," = ",STATUS1,", ":
                           *V2LON,"2",*HOFF," = ",STATUS2,*EL;
.
SELB1410  MOVE      FMSASTAT,F1
          KEYIN     *PCCOL:CVERT,*DV,F1,*EL:          * read in acct stat
                    *PCCOL:CVERT,*V2LON,*RV,F1;
          MOVE      F1,FMSASTAT
          MOVE      SP70,STATUS
          LOAD      STATUS,FMSASTAT,STATUS1,STATUS2   * get description
          MATCH     SP70,STATUS
          GOTO      SELB1490 IF NOT EQUAL             * legal option ?
.
          MOVE      STATUS0,STATUS
          COMPARE   ZERO,FMSASTAT
          GOTO      SELB1490 IF EQUAL                 * legal option ?
.
          BEEP
          GOTO      SELB1410
.
SELB1490  DISPLAY   *PCCOL:CVERT,*V2LON,STATUS:
                    *P1:24,*EL;
          GOTO      SELB0100
.
.---- option 5 ----
.
...       old bank account, oncost code, ppt (should be deleted if definately
...       not required in the future)
...       currently not activated
SELB1500  MOVE      "N",DEFYESNO                 * default to no
          CALL      YORN0000                     * get yes or no
          MOVE      FYESNO,FMSACTRL
          MOVE      SP70,FMSACHEQ
          COMPARE   ONE,FYESNO
          GOTO      SELB1590 IF NOT EQUAL        * "no" entered ? 
.
          KEYIN     *P56:CVERT,"__________":
                    *P56:CVERT,*V2LON,FMSACHEQ;
          PACK      FMSACHEQ,FMSACHEQ,SP70
.
SELB1590  DISPLAY   *P56:CVERT,*V2LON,FMSACHEQ;
          GOTO      SELB0100
.
.---- option 6 ----
.
...       old bank account, oncost code, ppt (should be deleted if definately
...       not required in the future)
...       currently not activated
SELB1600  MOVE      "N",DEFYESNO                 * default to no
          CALL      YORN0000                     * get yes or no
          MOVE      FYESNO,FMSAPPT
          GOTO      SELB0100
.
.---- option 7 ----
.
...       old bank account, oncost code, ppt (should be deleted if definately
...       not required in the future)
...       currently not activated
SELB1700  MOVE      "N",DEFYESNO                 * default to no
          CALL      YORN0000                     * get yes or no
          MOVE      FYESNO,FMSAONC
          UNPACK    SP70,FMSAONCC,FMONDESC       * clear vars
          MOVE      "46",CCOL
          DISPLAY   *PCCOL:CVERT,*EL;
.
          COMPARE   ONE,FYESNO
          GOTO      SELB0100 IF NOT EQUAL        * "no" entered ? 
.
          CALL      KONCFM00                     * get oncost code
          BRANCH    EXIT,SELB1700,SELB9500       * exit ?
          PACK      FMSAONCC,FMONCODE,SP70
.
          MOVE      NO,YESNO
          LOAD      YESNO,FMSAONC,YES                 * get yes/no
          DISPLAY   *P28:CVERT,*V2LON,YESNO,*PCCOL:CVERT:
                    FMSAONCC,*HOFF,SP1,FMONDESC,SP1,FMONPERC," %"
          GOTO      SELB0100
.
.---- option 8 ----
.
SELB1800  MOVE      "N",DEFYESNO                 * default to no
          CALL      YORN0000                     * get yes or no
          MOVE      FYESNO,FMSAASST
          GOTO      SELB0100
.
.---- option 10 ----
.
SELB2000  MOVE      "2",F1
          KEYIN     *PCCOL:CVERT,*DV,F1,"     (0-5)":
                    *PCCOL:CVERT,*V2LON,*RV,F1:
                    *PCCOL:CVERT,*DV,F1,*EL;
          MOVE      F1,FMSADPLA
          ADD       ONE,F1
          BRANCH    F1,SELB0100,SELB0100,SELB0100,SELB0100,SELB0100,SELB0100
          BEEP
          GOTO      SELB2000
.
.---- option 11 ----
.
SELB2100  PACK      FMSAUNIT,UNDLN70
          KEYIN     *PCCOL:CVERT,*DV,FMSAUNIT:
                    *PCCOL:CVERT,*V2LON,FMSAUNIT,*EL
          PACK      FMSAUNIT,FMSAUNIT,SP70
          GOTO      SELB0100
.
.---- option 12 ----
.
SELB2200  MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,FMSAAYTD
          GOTO      SELB0100
.
.---- option 13 ----
.
SELB2300  MOVE      "1",FMSAMULT
          KEYIN     *PCCOL:CVERT,*DV,FMSAMULT:
                    *PCCOL:CVERT,*V2LON,*RV,FMSAMULT:
                    *PCCOL:CVERT,*DV,FMSAMULT;
          GOTO      SELB0100
.
.---- option 14 ----
.
SELB2400  MOVE      "1",FMSADIV
          KEYIN     *PCCOL:CVERT,*DV,FMSADIV:
                    *PCCOL:CVERT,*V2LON,*RV,FMSADIV:
                    *PCCOL:CVERT,*DV,FMSADIV;
          GOTO      SELB0100
.
.---- option 25 ----
.
SELB2500  MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00                     * get level code
          REP       " 0",FMLVCODE
          MOVE      FMLVCODE,FMSADLEV
          MOVE      FMLVCODE,DEFLEVEL
          BRANCH    EXIT,SELB2590,SELB9500       * exit ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLVCODE,*HOFF,*P44:CVERT,FMLVDESC;
.
          MATCH     OLDDLEV,DEFLEVEL
          GOTO      SELB0100 IF EQUAL            * level unchanged ?
          MATCH     "2",FMSASTYP
          GOTO      SELB0100 IF EQUAL            * heading subj ?
          PACK      SAVADDT,FMSAADDT,SP70
          PACK      SAVSTYP,FMSASTYP,SP70
          PROC      CKLV0000                     * test level ok
          BRANCH    EXIT,SELB2500                * level ok ?
          GOTO      SELB0100
.
SELB2590  MATCH     "2",FMSASTYP
          GOTO      SELB2500 IF NOT EQUAL        * not req for heading type
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLVCODE;
          GOTO      SELB0100
.
.---- option 16 ----
.
SELB2600  MATCH     "2",FMSASTYP
          GOTO      SELB2690 IF NOT LESS
.
          PROC      KSUBJECT                     * get subj code
          PACK      FMSAADDT,TEMPSUB1,SP30
          BRANCH    EXIT,SELB0100,SELB9500       * exit ?
          GOTO      SELB0100
.
SELB2690  BRANCH    ACCEPT,SELB0100              * in accept mode ?
          DISPLAY   *P1:24,*B,*EL,"Not a Valid Option for ",SASTYPE," Type - ";
          CALL      HITENTER
          GOTO      SELB0100
.
.---- user defined fields ----
.
SELB7000  MOVE      FMSASTYP,F1
          MOVE      FIVE,OPTNO                   * starting option number
          LOAD      OPTNO,F1,FOUR,FOUR,FOUR,EIGHT
          CALL      USRB0000                     * execute user defined option
          COMPARE   "2",EXIT
          GOTO      SELB9500 IF EQUAL            * exitchar entered ?
          GOTO      SELB0100                     * get next option
.
.---- exit points ----
.
SELB9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELB9999
.
SELB9500  MOVE      ONE,EXIT                     * cancel
.
SELB9999  RETURN
.******************************************************************************
.* POST - Post data                              Called by ML0000             *
.******************************************************************************
POST0000  DISPLAY   *P40:24,*V2LON,"Posting Data",*EL;
          REP       " 0",DEFLEVEL
          PACK      FMSADLEV,DEFLEVEL,SP70
          PACK      FMSAPPOS,CURPRTP,SP70
          PACK      FMSADESC,SAVDSUBJ,SP70
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          UNPACK    KEY14,FMSALEDG,FMSASUBJ
.
          COMPARE   ONE,COPTION
          GOTO      POST0600 IF NOT EQUAL
          CALL      RAFMSA1                 * subj record exists ?
          BRANCH    OVRCD,POST0500
          DISPLAY   *P1:24,*B,*EF,"Subjective Code Has Just Been Entered - ";
          CALL      HITENTER
          GOTO      POST9999
.
POST0500  CALL      RAFMAM1                 * acct record exists ?
          BRANCH    OVRCD,POST0600
          DISPLAY   *P1:24,*B,*EF,"Account Code Has Just Been Entered - ";
          CALL      HITENTER
          GOTO      POST9999
.
POST0600  MATCH     OLDDLEV,DEFLEVEL
          GOTO      POST0700 IF EQUAL       * level unchanged ?
          MATCH     "2",FMSASTYP
          GOTO      POST0700 IF EQUAL       * heading subj ?
          PACK      SAVADDT,FMSAADDT,SP70
          PACK      SAVSTYP,FMSASTYP,SP70
          PROC      CKLV0000                * check level ok
          BRANCH    EXIT,POST9999
.
POST0700  PACK      KEY14,FMSALEDG,FMSASUBJ,SP70
          CALL      DEFMSA1                 * delete old record (if possible)
          CALL      WRFMSA1                 * write new record
.
          MOVE      ZERO,F1
          MOVE      FMSASTYP,F1
          PACK      FMAMTYPE,DSIX
          LOAD      FMAMTYPE,F1,DSIX,DSEVEN,DNINE,DNINE
          MOVE      SP70,FMSALOCK
          PACK      FMAMLEDG,FMSALEDG,SP70
          PACK      FMAMACCT,FMSASUBJ,SP70
          PACK      FMAMDESC,FMSADESC,SP70
          PACK      FMAMSEC,FMSASEC,SP70
          REP       " 0",CURLEVEL
          PACK      FMAMCLEV,CURLEVEL,SP70
          PACK      KEY14,FMAMLEDG,FMAMACCT,SP70
          CALL      DEFMAM1
          CALL      WRFMAM1            * write new account record
.
          IF        COPTION=1
            MOVE      "1",WAUDTYPE
            CALL      WAUD0000         * write audit record data
          ENDIF
.
          PACK      KEY26,SAVLEDG,SAVSUBJ,SAVRPNO,SP70
          PACK      KEY16,SAVLEDG,SAVSUBJ,SAVRPNO,SP70
.
POST1000  CALL      RSFMRF2            * delete rsf records
          CALL      RKFMRF2
          BRANCH    OVRCD,POST2000     * no more records ?
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY16
          GOTO      POST2000 IF NOT EQUAL
          CALL      DEFMRF2
          GOTO      POST1000
.
POST2000  MOVE      CURPRTC,FMRFPRT
          MOVE      CURCRP,FMRFCRP
          MOVE      ZERO,F1
          MOVE      FMSASTYP,F1
          PACK      FMTCASEQ,TOTSEQ
          LOAD      FMTCASEQ,F1,TOTSEQ,HEADSEQ,HEADSEQ,TOTSEQ
.
          PACK      KEY26,SAVLEDG,SAVSUBJ,SAVRPNO,CURPRTP,FMTCASEQ,SP70
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      WRFMRF2
.
          COMPARE   ONE,FMACW1ON
          GOTO      POST5000 IF NOT EQUAL        * notes active ?
.
          DISPLAY   *P40:24,*V2LON,"Posting WP Data",*EL;
          PACK      KEY17,SAVLEDG,SAVSUBJ,SP70
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          MOVE      ZERO,F3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTMP01,FILENAM1
          TRAPCLR   IO
          BRANCH    OVRCD,POST4000
.
POST3000  READ      FMSTMP01,SEQ;FMUWLINE        * save wp data
          GOTO      POST4000 IF OVER
.
          ADD       ONE,F3
          PACK      KEY17,SAVLEDG,SAVSUBJ,F3,SP70
          UNPACK    KEY17,FMUWLEDG,FMUWACCT,FMUWLNO
          CALL      DEFMUW1                      * delete old record
          CALL      WRFMUW1                      * write new record
          GOTO      POST3000
.                                                * delete excess records
POST4000  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,POST5000               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      POST5000 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      POST4000
.
POST5000  BRANCH    COPTION,POST9999             * new record ?
          BRANCH    IBAMODE,POST5010             * in iba mode
.
          MOVE      ZERO,SKIPFMTU                * set to total acc update
          MATCH     FMSAADDT,OLDADDT
          GOTO      POST5010 IF NOT EQUAL        * add to subj changed ?
.
          MOVE      ONE,SKIPFMTU                 * set to no total acc update
          MATCH     CURPRTP,OLDPPOS
          GOTO      POST5010 IF NOT EQUAL        * print position changed ?
          MATCH     FMSADTYP,OLDDTYP
          GOTO      POST5010 IF NOT EQUAL        * desc type changed ?
          MATCH     FMSATYPE,OLDTYPE
          GOTO      POST5010 IF NOT EQUAL        * acc type changed ?
          COMPARE   FMSASTAT,OLDSTAT
          GOTO      POST5010 IF NOT EQUAL        * acc status changed ?
          COMPARE   FMSAASST,OLDASST
          GOTO      POST5010 IF NOT EQUAL        * acc asset reg ind changed ?
          MATCH     FMSAADES,OLDADES
          GOTO      POST5010 IF NOT EQUAL        * abbrev desc changed ?
          MATCH     FMSADESC,OLDDESC
          GOTO      POST5010 IF NOT EQUAL        * desc changed ?
          MATCH     DEFLEVEL,OLDDLEV
          GOTO      POST5010 IF NOT EQUAL        * default level changed ?
          MATCH     FMSADPLA,OLDDPLA
          GOTO      POST5010 IF NOT EQUAL        * Decimal Places changed ?
          MATCH     FMSAUNIT,OLDUNIT
          GOTO      POST5010 IF NOT EQUAL        * Statistical Units changed ?
          COMPARE   FMSAAYTD,OLDAYTD
          GOTO      POST5010 IF NOT EQUAL        * Av YTD (1=yes) changed ?
          COMPARE   FMSAMULT,OLDMULT
          GOTO      POST5010 IF NOT EQUAL        * constant Mult changed ?
          COMPARE   FMSADIV,OLDDIV  
          GOTO      POST5010 IF NOT EQUAL        * constant Div changed ?
          COMPARE   ONE,UPDATE  
          GOTO      POST5010 IF EQUAL            * user defined vars changed ?
.
          MATCH     FMSASTYP,OLDSTYP
          GOTO      POST5010 IF NOT EQUAL        * subj type changed ?
.
          MATCH     "0",FMSASTYP
          GOTO      POST9999 IF EQUAL            * normal subjective type ?
.
          COMPARE   "1",FMCOSTPO
          GOTO      POST5005 IF EQUAL            * writ to rsf for stat-post ?
          MATCH     "3",FMSASTYP
          GOTO      POST9999 IF EQUAL            * stat-post subjective type ?
.
POST5005  MATCH     CURPRTC,OLDPRT
          GOTO      POST5010 IF NOT EQUAL        * print code changed ?
          MATCH     CURCRP,OLDCRP
          GOTO      POST5010 IF NOT EQUAL        * print code changed ?
          GOTO      POST9999                     * no account update required
.
POST5010  PACK      SAVSTYP,FMSASTYP,SP70
          PACK      SAVADDT,FMSAADDT,SP70
          PACK      SAVKEY31,SAVLEDG,SAVSUBJ,SP70
          PACK      SAVKEY14,SAVLEDG,SAVSUBJ,SP70
          MOVE      ZERO,DISPCNT
.
POST5100  PACK      KEY31,SAVKEY31,SP70
          CALL      RSFMXC2                      * get next record
          CALL      RKFMXC2
          BRANCH    OVRCD,POST9999               * no more records ?
          PACK      SAVKEY31,FMXCLED,FMXCSUB,FMXCCPR,FMXCCOS,SP70
          MATCH     SAVKEY31,SAVKEY14
          GOTO      POST9999 IF NOT EQUAL        * at end of valid records ?
.
          ADD       ONE,DISPCNT
          IF        DISPCNT%100=0
            DISPLAY   *P40:24,*V2LON,"Updating ",FMXCLED,SLASH:
                      FMXCCOS,"/",DISPCNT
          ENDIF
          UNPACK    SAVKEY31,LEDGER,SUBJCODE,KEY5,COSTCODE
          CALL      BCOD0000                     * build account code
.
          MATCH     "1",SAVSTYP
          GOTO      POST7000 IF EQUAL            * update for total subj type
.
.-- This code is critical : if print position code changed, we want to
.--                         delete to the top of the tree (ie DELALL=1)
.-- nb : it is fine to delete to the top of the tree unless the add to
.--      code has been changed. The add to code and the print position
.--      cannot both be changed at the same time as they are on different
.--      screens. (as at 24/09/92)
.
          MOVE      ONE,DELALL
          MATCH     CURPRTP,OLDPPOS
          GOTO      POST6000 IF NOT EQUAL        * print position changed ?
          MOVE      ZERO,DELALL
.
POST6000  MOVE      ONE,OLDDSUBJ
          MOVE      ZERO,OLDDCOST
          CALL      DREC0000                     * delete for head/norm records
.
          UNPACK    SAVKEY31,LEDGER,SUBJCODE,KEY5,COSTCODE
          CALL      BCOD0000                     * build account code
          MOVE      ZERO,WRECLEV
          CALL      WREC0000                     * write for head/norm records
          GOTO      POST5100
.
.---- update for total accounts ----
.
POST7000  CALL      UTOT0000
          GOTO      POST5100
.
POST9999  RETURN
.**********************************************************************
.  UTOT - Update for total accounts                    Called By POST
.**********************************************************************
UTOT0000  MOVE      LEDGER,TOTLEDG               * delete for total records
          MOVE      ACCOUNT,TOTACCNT
          CALL      SETU0000                     * write rec for tot acc update
.
          PACK      KEY14,LEDGER,SUBJCODE,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,UTOT9999
          MOVE      FMSAADDT,SAVADDT
.
          PACK      KEY14,LEDGER,COSTCODE,SP70
          CALL      RDFMCC1
          BRANCH    OVRCD,UTOT9999
.
          PACK      KEY26,LEDGER,SUBJCODE,COSTCODE,SP70
          CALL      RDFMXC1
          BRANCH    OVRCD,UTOT9999
.
          PACK      KEY14,LEDGER,COSTCODE,SP70
          CALL      RDFMAM1
          PACK      CCLEV,FMAMCLEV,SP70
          MOVE      DEFLEVEL,FMAMCLEV
          CALL      CLEV0000                * check level
.
          PACK      FMRFREP,FMSUUD8A,SP70        * report seq file
          REP       " 0",FMRFREP
          PACK      KEY26,LEDGER,ACCOUNT,FMRFREP,FMXCCPR,FMXCSPR,SP70
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      DEFMRF2
          MOVE      FMSAPPOS,FMRFSEQ             * update seq and print code
          MOVE      FMCCPPOS,FMRFPOS
          MOVE      CURPRTC,FMRFPRT
          MOVE      CURCRP,FMRFCRP
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      DEFMRF2
          CALL      WRFMRF2
.
          MOVE      ACCOUNT,TEMPACCT
          PACK      ACCOUNT,COSTCODE,SP70
          PACK      SUBJCODE,OLDADDT,SP70
          MATCH     SP70,SUBJCODE
          CALL      BCOD0000 IF NOT EQUAL   * build account code ?
.
          PACK      KEY33,LEDGER,ACCOUNT,SP5,LEDGER,TEMPACCT,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          CALL      DEFMTC1
.
          PACK      ACCOUNT,COSTCODE,SP70   * update add to acc and acc seq
          PACK      SUBJCODE,SAVADDT,SP70
          MATCH     SP70,SUBJCODE
          CALL      BCOD0000 IF NOT EQUAL   * build account code ?
          MOVE      ACCOUNT,FMTCTACC
          MOVE      SP5,FMTCASEQ
          MOVE      "0",FMTCPOST
          MOVE      "0",FMTCADDT
          PACK      KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          CALL      DEFMTC1
          CALL      WRFMTC1
.
          MOVE      FMSAPPOS,FMXCSPR        * update xref subj print pos
          CALL      UPFMXC1
.
          PACK      KEY14,LEDGER,TEMPACCT,SP70
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          CALL      DEFMAM1
          MOVE      DEFLEVEL,FMAMCLEV
          CALL      BDES0000           * build description
          MOVE      ZERO,F1
          MOVE      FMSADTYP,F1
          LOAD      FMAMDESC,F1,FMSADESC,FMCCDESC
          MOVE      FMSATYPE,FMAMTYPE
          MOVE      ZERO,F1
          MOVE      FMSASTYP,F1
          LOAD      FMAMTYPE,F1,DSIX,DSEVEN,DEIGHT,DNINE
.
          PACK      FMAMSEC,FMSASEC,SP70
          PACK      FMAMREF1,FMSAREF1,SP70
          PACK      FMAMREF2,FMSAREF2,SP70
          PACK      FMAMREF3,FMSAREF3,SP70
          PACK      FMAMREF4,FMSAREF4,SP70
          PACK      FMAMDAT1,FMSADAT1,SP70
          PACK      FMAMDAT2,FMSADAT2,SP70
          PACK      FMAMDAT3,FMSADAT3,SP70
          PACK      FMAMDAT4,FMSADAT4,SP70
          PACK      FMAMCOD1,FMSACOD1,SP70
          PACK      FMAMCOD2,FMSACOD2,SP70
          PACK      FMAMCOD3,FMSACOD3,SP70
          PACK      FMAMCOD4,FMSACOD4,SP70
          MOVE      FMSAAMT1,FMAMAMT1
          MOVE      FMSAAMT2,FMAMAMT2
          MOVE      FMSAAMT3,FMAMAMT3
          MOVE      FMSAAMT4,FMAMAMT4
          MOVE      FMSASTAT,FMAMSTAT
          MOVE      FMSACTRL,FMAMCTRL
          MOVE      FMSAASST,FMAMASST
          MOVE      FMSAPPT,FMAMPPT
          MOVE      FMSAONC,FMAMONC
          MOVE      FMSAONCC,FMAMONCC
          MOVE      FMSACHEQ,FMAMCHEQ
          PACK      FMAMDPLA,FMSADPLA,SP70
          PACK      FMAMUNIT,FMSAUNIT,SP70
          MOVE      FMSAAYTD,FMAMAYTD
          MOVE      FMSAMULT,FMAMMULT
          MOVE      FMSADIV,FMAMDIV
          MOVE      ZERO,FMAMOBAL
          MOVE      SP70,FMAMLOCK
.
          PACK      FMAMCLEV,FMSADLEV,SP70
          CALL      WRFMAM1
.
          MOVE      TEMPACCT,ACCOUNT   * update any CCC's
          CALL      GCOD0000
          CALL      WCCC0000
.
          MATCH     SAVADDT,OLDADDT
          GOTO      UTOT9999 IF EQUAL  * add to account changed ?
.
          MOVE      SP70,TEMPSPOS      * if so, delete LEDGER/OLDADDT if unused
          MOVE      FMCCPPOS,TEMPCPOS
          MOVE      ZERO,FMTCPOST
          MOVE      OLDADDT,FMSAADDT
          MOVE      TEMPACCT,ACCOUNT
          CALL      GCOD0000
          MOVE      ZERO,DELALL
          CALL      DTOT0000           * delete total rec if required
.
          MOVE      SP70,TEMPSPOS      * if so, create LEDGER/FMSAADDT if req
          MOVE      FMCCPPOS,TEMPCPOS
          MOVE      ZERO,FMTCPOST
          MOVE      SAVADDT,FMSAADDT
          MOVE      TEMPACCT,ACCOUNT
          CALL      GCOD0000
          CALL      WTOT0000           * create total rec if required
.
UTOT9999  RETURN
.******************************************************************************
.* CKSU - Check whether there are any related CC's   Called by lots           *
.******************************************************************************
CKSU0000  PACK      KEY14,SAVLEDG,SP70
          CALL      RSFMSA1                      * position file pointer
.
CKSU1000  CALL      RKFMSA1                      * get next record
          BRANCH    OVRCD,CKSU9000               * no more records ?
.
          MATCH     FMSALEDG,SAVLEDG
          GOTO      CKSU9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMSAADDT,SAVSUBJ
          GOTO      CKSU1000 IF NOT EQUAL        * sub-subj exists ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Other Subjectives Add to this Subjective - ";
          CALL      HITENTER
          GOTO      CKSU9500
.
CKSU9000  MOVE      ZERO,EXIT
          GOTO      CKSU9999
.
CKSU9500  MOVE      ONE,EXIT
.
CKSU9999  RETURN
.******************************************************************************
.* DSSC - Delete for related CC's                    Called by lots           *
.******************************************************************************
DSSC0000  PACK      KEY31,SAVLEDG,SAVSUBJ,DIM17,SP70
          CALL      RDFMTS1                      * read the record (for DLNK)
          CALL      DEFMTS1                      * delete the record
.
          MATCH     "2",FMTSSUBJ
          GOTO      DSSC0500 IF EQUAL      * write subj tcf rec if not c/centre
.
          PACK      KEY33,FMTSTLED,FMTSTACC,FMTSASEQ,FMTSTLED,FMTSSACC,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          CALL      DEFMTC1
.
DSSC0500  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMXC2                      * position file pointer
.
DSSC1000  CALL      RKFMXC2                      * get next record
          BRANCH    OVRCD,DSSC9999               * no more records ?
          MATCH     FMXCLED,SAVLEDG
          GOTO      DSSC9999 IF NOT EQUAL        * no more records ?
          MATCH     FMXCSUB,SAVSUBJ
          GOTO      DSSC9999 IF NOT EQUAL        * no more records ?
          DISPLAY   *P55:24,"Deleting : ",*V2LON,FMXCCOS,*EL;
.
          PACK      LEDGER,FMXCLED,SP70
          PACK      COSTCODE,FMXCCOS,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          CALL      BCOD0000
          PACK      POSTACCT,ACCOUNT,SP70
          PACK      TEMPSUBJ,FMXCSUB,SP70
          CALL      DLNK0000                     * delete link
          GOTO      DSSC1000
.
DSSC9999  RETURN
.******************************************************************************
.* WSSC - Write  for related CC's                    Called by lots           *
.*        Requires : SUBACCT (account to add)                                 *
.******************************************************************************
WSSC0000  MOVE      SAVLEDG,FMTSTLED
          MOVE      SAVSUBJ,FMTSTACC
          MOVE      SUBSEQ,FMTSASEQ
          MOVE      SUBACCT,FMTSSACC
          MOVE      SUBFUNC,FMTSADDT
          MOVE      SUBTYPE,FMTSSUBJ
.
          PACK      KEY31,SAVLEDG,SAVSUBJ,SUBSEQ,SUBACCT,SP70
          CALL      WRFMTS1
.
          MATCH     "2",FMTSSUBJ
          GOTO      WSSC0500 IF EQUAL      * write subj tcf rec if not c/centre
.
          PACK      KEY33,FMTSTLED,FMTSTACC,FMTSASEQ,FMTSTLED,FMTSSACC,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
          MOVE      FMTSADDT,FMTCADDT
          CALL      DEFMTC1
          CALL      WRFMTC1
.
WSSC0500  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMXC2                      * position file pointer
.
WSSC1000  CALL      RKFMXC2                      * get next record
          BRANCH    OVRCD,WSSC9999               * no more records ?
          MATCH     FMXCLED,SAVLEDG
          GOTO      WSSC9999 IF NOT EQUAL        * no more records ?
          MATCH     FMXCSUB,SAVSUBJ
          GOTO      WSSC9999 IF NOT EQUAL        * no more records ?
          DISPLAY   *P55:24,"Writing : ",*V2LON,FMXCCOS,*EL;
.
          PACK      LEDGER,FMXCLED,SP70
          PACK      COSTCODE,FMXCCOS,SP70
          PACK      SUBJCODE,FMXCSUB,SP70
          CALL      BCOD0000
.
          PACK      POSTACCT,ACCOUNT,SP70
          PACK      TEMPSUBJ,FMXCSUB,SP70
          CALL      WLNK0000                     * create link
          GOTO      WSSC1000
.
WSSC9999  RETURN
.******************************************************************************
.* CKXC - Check whether there are any related CC's   Called by lots           *
.*        Returns : EXIT     (0=ok, 1=rel cc)                                 *
.******************************************************************************
CKXC0000  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMXC2                      * position file pointer
          CALL      RKFMXC2                      * get next record
          BRANCH    OVRCD,CKXC9000               * no more records ?
.
          MATCH     FMXCLED,SAVLEDG
          GOTO      CKXC9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMXCSUB,SAVSUBJ
          GOTO      CKXC9000 IF NOT EQUAL        * no more records ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Related Cost Centres Exist for this Subjective - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      CKXC9500 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKXC9000 IF EQUAL
          GOTO      CKXC9500
.
CKXC9000  MOVE      ZERO,EXIT
          GOTO      CKXC9999
.
CKXC9500  MOVE      ONE,EXIT
.
CKXC9999  RETURN
.******************************************************************************
.* CKTS - Check whether there are any Calc Details   Called by lots           *
.*        Returns : EXIT     (0=ok, 1=calc det)                               *
.******************************************************************************
CKTS0000  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMTS1                      * position file pointer
          CALL      RKFMTS1                      * get next record
          BRANCH    OVRCD,CKTS5000               * no more records ?
.
          MATCH     FMTSTLED,SAVLEDG
          GOTO      CKTS5000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMTSTACC,SAVSUBJ
          GOTO      CKTS5000 IF NOT EQUAL        * no more records ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Calculation Details Exist for this Subjective - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      CKTS9500 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKTS5000 IF EQUAL
          GOTO      CKTS9500
.
CKTS5000  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMTS2                      * position file pointer
          CALL      RKFMTS2                      * get next record
          BRANCH    OVRCD,CKTS9000               * no more records ?
.
          MATCH     FMTSTLED,SAVLEDG
          GOTO      CKTS9000 IF NOT EQUAL        * no more records ?
.
          MATCH     FMTSSACC,SAVSUBJ
          GOTO      CKTS9000 IF NOT EQUAL        * no more records ?
.
          DISPLAY   *P1:24,*B,*EF:
                    "Subj Used In ",FMTSTLED,SLASH,FMTSTACC:
                    " Calculation Details - ";
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      CKTS9500 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKTS9000 IF EQUAL
          GOTO      CKTS9500
.
CKTS9000  MOVE      ZERO,EXIT
          GOTO      CKTS9999
.
CKTS9500  MOVE      ONE,EXIT
.
CKTS9999  RETURN
.******************************************************************************
.* CKTC - Check whether included in any Calc Details      Called by lots      *
.*        Returns : EXIT     (0=ok, 1=calc det)                               *
.******************************************************************************
CKTC0000  CALL      BCOD0000
          PACK      KEY14,LEDGER,ACCOUNT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKTC9000               * check if account exists
.
          PACK      KEY31,LEDGER,SUBJCODE,SP70
          CALL      RSFMTS2
.
CKTC1000  CALL      RKFMTS2
          BRANCH    OVRCD,CKTC9000
          PACK      KEY14,FMTSTLED,FMTSSACC,SP70
          MATCH     KEY14,KEY31
          GOTO      CKTC9000 IF NOT EQUAL
.
          PACK      KEY26,LEDGER,FMTSTACC,COSTCODE,SP70
          CALL      RDFMXC1
          BRANCH    OVRCD,CKTC1000
.
          MOVE      ACCOUNT,KEY12
          MOVE      FMTSTACC,SUBJCODE
          CALL      BCOD0000
          DISPLAY   *P1:24,*B,*EF:
                    "Acct ",*V2LON,KEY12,*HOFF," Used In ",*V2LON:
                    LEDGER,SLASH,ACCOUNT,*HOFF," Calculation - ";
.
          MOVE      FMTSSACC,SUBJCODE  * reset SUBJCODE and ACCOUNT
          CALL      BCOD0000
.
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      CKTC9500 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKTC9000 IF EQUAL
          GOTO      CKTC9500
.
CKTC9000  MOVE      ZERO,EXIT
          GOTO      CKTC9999
.
CKTC9500  MOVE      ONE,EXIT
.
CKTC9999  RETURN
.******************************************************************************
.* DELT - Delete data                            Called by ML0000             *
.******************************************************************************
DELT0000  MATCH     "1",FMSASTYP       * total type subjective ?
          GOTO      DELT0100 IF NOT EQUAL
          CALL      CKSU0000           * check no add to subjectives
          BRANCH    EXIT,DELT9999
.
DELT0100  CALL      CKXC0000           * check no related cost centres
          BRANCH    EXIT,DELT9999
          CALL      CKTS0000           * check if calc details exist
          BRANCH    EXIT,DELT9999
.
DELT0500  DISPLAY   *P1:24,"Deleting Data ",*EL;
          PACK      KEY17,SAVLEDG,SAVSUBJ,SP70   * delete user def wp data
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
.
DELT1000  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,DELT3000               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      DELT3000 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      DELT1000
.
DELT3000  PACK      KEY26,SAVLEDG,SAVSUBJ,SP70
          PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
.
DELT4000  CALL      RSFMRF2                      * position file pointer
          CALL      RKFMRF2                      * get next record
          BRANCH    OVRCD,DELT5000               * no more records ?
.
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY14
          GOTO      DELT5000 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMRF2
          GOTO      DELT4000
.
DELT5000  
.
DELT9000  PACK      KEY14,SAVLEDG,SAVSUBJ,SP70
          DISPLAY   *P40:24,*V2LON,"Deleting ",SAVLEDG,SLASH,SAVSUBJ,*EL;
          CALL      DEFMSA1                 * delete old record (if possible)
          CALL      DEFMAM1                 * delete old record (if possible)
.
DELT9999  RETURN
.*****************************************************************************
. WAUD - Write Audit Record                           Called by ML0000
.    Requires - WAUDTYPE (1=write, 2=before change, 3=after change, 4=delete)
.*****************************************************************************
WAUD0000  PACK      FMAMAUDD,CCC,CYY,CMM,CDD     * set up vars for audit A
          REP       " 0",FMAMAUDD
          CLOCK     TIME,FMAMAUDT
          MOVE      PORT,FMAMAUDP
          LOAD      FMAMAUDR,WAUDTYPE,ANSA,ANSB,ANSC,ANSD
          MOVE      ONE,FMAMAUDS
          MOVE      PASSCODE,FMAMAUDO
          PACK      KEY19,FMAMAUDD,FMAMAUDT,FMAMAUDP,FMAMAUDR
          MOVE      KEY19,SAVKEY19
.
          MOVE      FMAMAUDD,FMSAAUDD            * set up vars for audit B
          MOVE      FMAMAUDT,FMSAAUDT
          MOVE      FMAMAUDP,FMSAAUDP
          MOVE      FMAMAUDR,FMSAAUDR
          MOVE      FMAMAUDS,FMSAAUDS
          MOVE      FMAMAUDO,FMSAAUDO
.
          COMPARE   TWO,WHICAUDI
          GOTO      WAUD1000 IF EQUAL         * write 2nd audit file record only
.
          COMPARE   ONE,FMSAUDA
          CALL      AWFMAM IF EQUAL              * write audit file record
.
          COMPARE   ONE,WHICAUDI
          GOTO      WAUD9999 IF EQUAL         * write 1st audit file record only
.
WAUD1000  COMPARE   ONE,FMSAUDB
          CALL      AWFMSA IF EQUAL              * write audit file record
.
WAUD9999  MOVE      ZERO,WHICAUDI
          RETURN
.*****************************************************************************
. DAUD - Delete Before Change Audit                    Called by ML0000
.*****************************************************************************
DAUD0000  MOVE      SAVKEY19,KEY19
          CALL      ADFMAM                       * delete audit file record
          CALL      ADFMSA                       * delete audit file record
.
DAUD9999  RETURN
.**********************************************************************
. PROC   GETDESC -  get subj description             Called By lots
.        Requires - TEMPSUB1 (subjective)
.        Returns  - TOTDESC  (subjective description)
.**********************************************************************
          DEFPROC   GETDESC
          INC       FMSSBAFD/INC
          OPEN      FMSSBAA1,"fmssbaaf"
.
          PACK      FMSADESC,NOADD,SP30
          PACK      KEY14,SAVLEDG,TEMPSUB1,SP30
          CALL      RDFMSA1
          MOVE      FMSADESC,TOTDESC
.
          GOTO      BOTTOM
          INC       FMSSBAIO/INC
          INC       IBAOVRIO/INC
BOTTOM
          ENDPROC
.**********************************************************************
. PROC   KSUBJECT -  get subj                         Called By lots
.        Requires - CVERT,CCOL    (screen address to get input)
.        Returns  - TEMPSUB1      (subjective)
.                   TOTDESC       (subjective description)
.**********************************************************************
          DEFPROC   KSUBJECT
          INC       FMSAMAFD/INC
          INC       FMSSBAFD/INC
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSSBAA1,"fmssbaaf"
          OPEN      FMSSBAA2,"fmssbaaf"
.
KSUB0000  MOVE      "1",CSUBJIND       * set for total subjectives
          CALL      KSBAFM00
          PACK      TEMPSUB1,FMSASUBJ,SP30
          PACK      TOTDESC,NOADD,SP30
          BRANCH    EXIT,KSUB1000,BOTTOM
.
          MATCH     FMSASUBJ,SAVSUBJ   * cannot be current subjective
          GOTO      KSUB0200 IF EQUAL
.
          MOVE      FMSADESC,TOTDESC
          DISPLAY   *PCCOL:CVERT,*V2LON,TEMPSUB1,*HOFF,*P44:CVERT,TOTDESC,*EL;
.
          MATCH     "1",FMSASTYP
          GOTO      KSUB0100 IF NOT EQUAL
.
          MATCH     FMSADLEV,DEFLEVEL
          GOTO      BOTTOM IF LESS
.
          DISPLAY   *P1:24,*B,*EL:
                    "Total to Subjective Must Have a Higher Level Code - ";
          CALL      HITENTER
          GOTO      KSUB0000
.
KSUB0100  DISPLAY   *P1:24,*B,*EL:
                    "Total to Subjective Must be a Total Type Subjective - ";
          CALL      HITENTER
          GOTO      KSUB0000
.
KSUB0200  DISPLAY   *P1:24,*B,*EL:
                    "Total to Subjective Cannot Be Current Subjective - ";
          CALL      HITENTER
          GOTO      KSUB0000
.
KSUB1000  DISPLAY   *P44:CVERT,NOADD;
          GOTO      BOTTOM
.
          INC       FMSAMAIO/INC
          INC       FMSSBAIO/INC
          INC       IBAOVRIO/INC
          INC       FMSSBAKY
BOTTOM
          ENDPROC
.**********************************************************************
. PROC   CKLV0000 - check if level is ok              Called By POST
.        Requires - CURLEVEL        (total acct level)
.                   DEFLEVEL        (default acct level)
.                   SAVLEDG/SAVADDT (add to subj)
.        Returns  - EXIT     (0=ok, 1=not ok)
.**********************************************************************
          DEFPROC   CKLV0000
          INC       FMSAMAFD/INC
          INC       FMSSBAFD/INC
.
          MATCH     CURLEVEL,DEFLEVEL
          GOTO      CKLV0500 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Default Level Must Be Lower Than Subjective Level - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
CKLV0500  OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSSBAA1,"fmssbaaf"
          PACK      KEY14,SAVLEDG,SAVADDT,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,CKLV1000
.
          MATCH     FMSADLEV,DEFLEVEL
          GOTO      CKLV1000 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Subjective Level Must Be Lower Than Add To Subjective - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
CKLV1000  MATCH     "1",SAVSTYP
          GOTO      CKLV2000 IF NOT EQUAL
          PACK      KEY14,SAVLEDG,SP70
          CALL      RSFMSA1
.
CKLV1100  CALL      RKFMSA1
          BRANCH    OVRCD,CKLV2000
          MATCH     FMSALEDG,SAVLEDG
          GOTO      CKLV2000 IF NOT EQUAL
          MATCH     FMSAADDT,SAVSUBJ
          GOTO      CKLV1100 IF NOT EQUAL
.
          MATCH     DEFLEVEL,FMSADLEV
          GOTO      CKLV1100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Default Level Must Be Higher Than Subj. ":
                    *V2LON,FMSASUBJ,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
CKLV2000  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMTS1
.
CKLV2100  CALL      RKFMTS1
          BRANCH    OVRCD,CKLV3000
          MATCH     SAVLEDG,FMTSTLED
          GOTO      CKLV3000 IF NOT EQUAL
          MATCH     SAVSUBJ,FMTSTACC
          GOTO      CKLV3000 IF NOT EQUAL
.
          PACK      KEY14,FMTSTLED,FMTSSACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLV2100
          MATCH     DEFLEVEL,FMAMCLEV
          GOTO      CKLV2100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Default Level Must Be Higher Than Subj. ":
                    *V2LON,FMTSSACC,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
CKLV3000  PACK      KEY31,SAVLEDG,SAVSUBJ,SP70
          CALL      RSFMTS2
.
CKLV3100  CALL      RKFMTS2
          BRANCH    OVRCD,CKLV9000
          MATCH     SAVLEDG,FMTSTLED
          GOTO      CKLV9000 IF NOT EQUAL
          MATCH     SAVSUBJ,FMTSSACC
          GOTO      CKLV9000 IF NOT EQUAL
.
          PACK      KEY14,FMTSTLED,FMTSTACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLV3100
          MATCH     FMAMCLEV,DEFLEVEL
          GOTO      CKLV3100 IF LESS
          DISPLAY   *P1:24,*B,*EL:
                    "Default Level Must Be Lower Than Subj. ":
                    *V2LON,FMTSTACC,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLV9500
.
          INC       FMSAMAIO/INC
          INC       FMSSBAIO/INC
          INC       IBAOVRIO/INC
.
CKLV9000  MOVE      ZERO,EXIT
          GOTO      BOTTOM
.
CKLV9500  MOVE      ONE,EXIT
.
BOTTOM
          ENDPROC
.**********************************************************************
.*                         SUBA0000                                   *
.*                      Add sub accounts                              *
.**********************************************************************
SUBA0000  MOVE      "5",SCRNO                    * screen number
.
SUBA1000  MOVE      ONE,SUBFLAG
          MOVE      ZERO,RECCOUNT
          MOVE      ONE,SCRNUMB
          MOVE      ZERO,NEXTSCRF
          CALL      DSSS0000              * display sub details screen
.
          COMPARE   ONE,ACCEPT
          GOTO      SUBA3000 IF NOT EQUAL
          MOVE      "8",ROW
          CALL      ISUB0000              * Insert sub accounts
          GOTO      SUBA4000
.
SUBA3000  PACK      KEY31,SAVLEDG,SAVSUBJ,SP20,SP5
          CALL      DSUB0000              * display the sub-acct's 
.
SUBA4000  CALL      SNPE0000             * handle the prompt
          BRANCH    EXIT,SUBA5000,SUBA6000,SUBA7000
          GOTO      SUBA9999
.
.----  item was selected -----
.
SUBA5000  CALL      MSUB0000             * modify a sub-account
          GOTO      SUBA4000
.
.----- Next Page was selected ----
.
SUBA6000  CALL      NPAG0000             * display next page
          GOTO      SUBA4000
.
.----- Previous Page Was Selected -----
.
SUBA7000  CALL      PPAG0000             * display previous page
          GOTO      SUBA4000
.
SUBA9999  MOVE      ZERO,SUBFLAG
          RETURN
.
.*********************************************************************
.*                         ISUB0000                                  *
.*                   Insert Sub accounts                             *
.*********************************************************************
.
ISUB0000
.
          ADD       ONE,ROW              * Increment the row
.
          COMPARE   "14",RECCOUNT        * test for a full screen
          GOTO      ISUB4000 IF EQUAL
.
          ADD       ONE,RECCOUNT         * add one to the record count
.
          DISPLAY   *P1:ROW,*V2LON,RECCOUNT,*HOFF,"."
.
ISUB2000
          CALL      KFUN0000             * keyin the function
          BRANCH    EXIT,ISUB9000
ISUB2500
          CALL      KTYP0000             * keyin the type
          BRANCH    EXIT,ISUB2000
ISUB3000
          MOVE      SP70,SUBACCT
          MATCH     "2",SUBTYPE
          GOTO      ISUB3100 IF EQUAL    * skip for cost centre
.
          CALL      KSAC0000             * keyin sub ledger/account
          BRANCH    EXIT,ISUB2500
          CALL      CHKS0000             * check valid record ie. lower
.                                          level, same report etc.
          BRANCH    VALIDFLG,ISUB3000      rekey if not valid
.
ISUB3100  CALL      KSEQ0000             * keyin the report sequence
.
          CALL      VSUB0000             * test if record exists
          BRANCH    EXIT,ISUB3100
.
ISUB3200  CALL      PSUB0000             * post sub accounts
.
ISUB3800  CALL      SSUB0000             * store sub- account
          GOTO      ISUB0000
.
.---- Screen is full  -----
.
ISUB4000  ADD       ONE,SCRNUMB          * increment screen number
          MOVE      "14",ITEM
          CALL      LSUB0000
          PACK      KEY31,SAVLEDG,SAVSUBJ,DIM17
          CALL      DSUB0000            * display any more records
.                                         (this is possible)
          GOTO      ISUB0000 
.
.----- end of insert mode -----
.
ISUB9000  SUB       ONE,RECCOUNT         * decrement record number
          DISPLAY   *P1:ROW,*EL          * clear the row
          SUB       ONE,ROW              * decrement row   
          CALL      RSUB0000             * Redisplay sub-accounts screen

ISUB9999  RETURN
.
.***********************************************************************
.*                        CHKS0000                                     *
.*                Check that its a valid sub- account                  *
.***********************************************************************
.
CHKS0000  MOVE      ZERO,VALIDFLG
.
.----- Check that sub-account has a lower level ----
.
          MATCH     DEFLEVEL,FMAMCLEV
          GOTO      CHKS9999 IF LESS
.
          BEEP
          DISPLAY   *P1:24,*EL,"Sub Account must have a lower level - ";
          CALL      HITENTER
          MOVE      ONE,VALIDFLG
          GOTO      CHKS9999
.
CHKS9999  RETURN
.
.***********************************************************************
.*                        PSUB0000                                     *
.*             Post the sub - account details                          *
.***********************************************************************
.
PSUB0000  CALL      WSSC0000
.
PSUB9999  RETURN
.
.***********************************************************************
.*                        VSUB0000                                     *
.*             Validate if a Entry Already Exists                      *
.***********************************************************************
.
VSUB0000  MOVE      ZERO,EXIT
.
          PACK      KEY31,SAVLEDG,SAVSUBJ,SUBSEQ,SUBACCT,SP70
          CALL      RDFMTS1
          BRANCH    OVRCD,VSUB9999
.
          MOVE      ONE,EXIT
          BEEP 
          DISPLAY   *P1:24,*EL,"Entry Already Exists - ";
          CALL      HITENTER
.
VSUB9999  RETURN
.
.***********************************************************************
.*                         MSUB0000                                    *
.*                 Modify a sub - account                              *
.***********************************************************************
.
MSUB0000  MOVE      DIM2,FORM2
.
          COMPARE   ZERO,RECCOUNT        * if no records goto insert
          GOTO      MSUB1000 IF EQUAL
.
.------   test if we are modifying an existing record ----
.
          COMPARE   RECCOUNT,FORM2       * if selection = record count
          GOTO      MSUB5000 IF EQUAL         modiffy existing record
.
          COMPARE   RECCOUNT,FORM2       * if selection < record count
          GOTO      MSUB5000 IF LESS         modiffy existing record
.
.-----  set next screen position and goto insert
.
MSUB1000  MOVE      RECCOUNT,ROW
          ADD       "8",ROW
          CALL      ISUB0000
          GOTO      MSUB9999
.
.-----  modify an existing record --------
.
MSUB5000  MOVE      FORM2,ITEM
          CALL      LSUB0000             * get records key
.
          CALL      DSSC0000
.
          SUB       ONE,RECCOUNT         * decrement record count
.
MSUB6000  MOVE      ONE,ITEM
          CALL      LSUB0000             * get 1st screen record key
.
          PACK      KEY31,SAVLEDG,SAVSUBJ,DIM17,SP70
          CALL      RDFMTS1
          CALL      RPFMTS1
          BRANCH    OVRCD,MSUB7000
.
.----- Set key for display routine ---
.
          PACK      KEY31,FMTSTLED,FMTSTACC,FMTSASEQ,FMTSSACC,SP70
          GOTO      MSUB8000
.
.-----   Start of file ----
.
MSUB7000  PACK      KEY31,SP30,SP10
.
MSUB8000  CALL      DSUB0000             * do display routine
.
          BRANCH    NEXTSCRF,MSUB8500    * branch if screen full
          GOTO      MSUB9000
.
.----- screen is full ----
.
MSUB8500  ADD       ONE,SCRNUMB          * increment screen number
          MOVE      "14",ITEM
          CALL      LSUB0000             * get last item key
          PACK      KEY31,SAVLEDG,SAVSUBJ,DIM17,SP70
          GOTO      MSUB8000             * goto display next record
.
MSUB9000  CALL      ISUB0000             * call insert routine
.
MSUB9999  RETURN
.
.
.----   THIS IS A ROUTINE TO SAVE THE VARIBLES IN MODIFY MODE ----
.
SAVS0000  MOVE      SUBSEQ,SAVESEQ
          MOVE      SUBACCT,SAVEACCT 
          MOVE      SUBFUNC,SAVEFUNC
          MOVE      SUBTYPE,SAVETYPE
          MOVE      SUBTOTAL,SAVETOTL
SAVS9999  RETURN
.
RAVS0000  MOVE      SAVESEQ,SUBSEQ
          MOVE      SAVEACCT,SUBACCT 
          MOVE      SAVEFUNC,SUBFUNC
          MOVE      SAVETYPE,SUBTYPE
          MOVE      SAVETOTL,SUBTOTAL
.
RAVS9999  RETURN
.
.*********************************************************************
.*                         KTYP0000                                  *
.*                    keyin the add to type                          *
.*********************************************************************
.
KTYP0000  MOVE      ZERO,EXIT
          MOVE      ZERO,SUBTYPE
          MATCH     "3",OLDSTYP
          GOTO      KTYP9999 IF EQUAL
          CALL      DTYP0000             * display valid types
.
          KEYIN     *P16:ROW,*EL,*DV,UNDLN1:
                    *P16:ROW,*V2LON,SUBTYPE:
                    *P16:ROW,*DV,SUBTYPE
.
          PACK      SUBTYPE,SUBTYPE,SP1
          MATCH     SP1,SUBTYPE
          GOTO      KTYP9000 IF EQUAL
.
          TYPE      SUBTYPE
          GOTO      KTYP1000 IF EQUAL
          BEEP
          GOTO      KTYP0000
.
KTYP1000  MOVE      SUBTYPE,FORM1
.
          COMPARE   ZERO,FORM1           * test if < 0
          GOTO      KTYP8000 IF LESS
.
          COMPARE   FORM1,TWO            * test if > 2
          GOTO      KTYP8000 IF LESS
.
          BRANCH    FORM1,KTYP1111,KTYP2222
.
.---- set up variable values and function description ----
.
          MOVE      "Acct    ",ATYPDESC
          DISPLAY   *P16:ROW,ATYPDESC
          GOTO      KTYP9999
.
KTYP1111  MOVE      "Subj    ",ATYPDESC
          DISPLAY   *P16:ROW,ATYPDESC
          GOTO      KTYP9999
.
KTYP2222  MOVE      "Cost    ",ATYPDESC
          DISPLAY   *P16:ROW,ATYPDESC
          GOTO      KTYP9999
.
.
KTYP8000  BEEP
          GOTO      KTYP0000
.
KTYP9000  MOVE      ONE,EXIT
.
KTYP9999  DISPLAY   *P1:24,*EL;
          RETURN
.*********************************************************************
.*                         KFUN0000                                  *
.*                    keyin the add to type                          *
.*********************************************************************
.
KFUN0000  CALL      DVAT0000             * display valid add types
          MOVE      ZERO,EXIT
.
          KEYIN     *P6:ROW,*EL,*DV,UNDLN1:
                    *P6:ROW,*V2LON,SUBFUNC:
                    *P6:ROW,*DV,SUBFUNC
.
          PACK      SUBFUNC,SUBFUNC,SP1
          MATCH     SP1,SUBFUNC
          GOTO      KFUN9000 IF EQUAL
.
          TYPE      SUBFUNC
          GOTO      KFUN1000 IF EQUAL
          BEEP
          GOTO      KFUN0000
.
KFUN1000  MOVE      SUBFUNC,FORM1
.
          COMPARE   ZERO,FORM1           * test if < 0
          GOTO      KFUN8000 IF LESS
.
          COMPARE   FORM1,THREE          * test if > 3
          GOTO      KFUN8000 IF LESS
.
          BRANCH    FORM1,KFUN1111,KFUN2222,KFUN3333
.
.---- set up variable values and function description ----
.
          MOVE      FORM1,ADDTYPE
          MOVE      "Add     ",ADTYDESC
          DISPLAY   *P6:ROW,ADTYDESC
          GOTO      KFUN9999
.
KFUN1111  MOVE      FORM1,ADDTYPE
          MOVE      "Subtract",ADTYDESC
          DISPLAY   *P6:ROW,ADTYDESC
          GOTO      KFUN9999
.
KFUN2222  MOVE      FORM1,ADDTYPE
          MOVE      "Divide  ",ADTYDESC
          DISPLAY   *P6:ROW,ADTYDESC
          GOTO      KFUN9999
.
KFUN3333  MOVE      FORM1,ADDTYPE
          MOVE      "Multiply",ADTYDESC
          DISPLAY   *P6:ROW,ADTYDESC
          GOTO      KFUN9999
.
.
KFUN8000  BEEP
          GOTO      KFUN0000
.
KFUN9000  MOVE      ONE,EXIT
.
KFUN9999  DISPLAY   *P1:24,*EL;
          RETURN
.        
.*********************************************************************
.*                         DVAT0000                                  *
.*                Display the valid add to types                     *
.*********************************************************************
.
DVAT0000  DISPLAY   *P1:24,*EL:
                    *V2LON,"0 ",*HOFF,"= Add, ":
                    *V2LON,"1 ",*HOFF,"= Subtract, ":
                    *V2LON,"2 ",*HOFF,"= Divide, ":
                    *V2LON,"3 ",*HOFF,"= Multiply";
.
DVAT9999  RETURN
.*********************************************************************
.*                         DTYP0000                                  *
.*                Display the valid types                            *
.*********************************************************************
.
DTYP0000  DISPLAY   *P1:24,*EL:
                    *V2LON,"0 ",*HOFF,"= Account, ":
                    *V2LON,"1 ",*HOFF,"= Subjective, ":
                    *V2LON,"2 ",*HOFF,"= Cost Centre";
.
DTYP9999  RETURN
.*********************************************************************
.*                          KSAC0000                                 *
.*                     Keyin sub account                             *
.*********************************************************************
.
KSAC0000  CLEAR     SUBACCT
          MOVE      ZERO,SUBTOTAL        * indicates wether a total acc
.
          MOVE      "22",CCOL
          MOVE      ROW,CVERT
          MOVE      ZERO,EXIT
.
          MATCH     "1",SUBTYPE
          GOTO      KSAC1000 IF EQUAL
.
.---- get account ----
.
          MOVE      "8",CACCTIND
          CALL      KAMAFM00           * Keyin  account       
          BRANCH    EXIT,KSAC9000,KSAC9000
          GOTO      KSAC2000
.
.---- get subjective ----
.
KSAC1000  MOVE      "3",CSUBJIND       * set for non head subjectives
          CALL      KSBAFM00           * not in insert mode
          BRANCH    EXIT,KSAC9000,KSAC9000
          PACK      FMAMACCT,FMSASUBJ,SP70
.
KSAC2000  MOVE      SP70,FMAMDESC
          PACK      KEY14,SAVLEDG,FMAMACCT,SP70
          CALL      RDFMAM1            * read account entered
          BRANCH    OVRCD,KSAC9000     * (note: OVRCD should not be set !!)
          MOVE      FMAMACCT,SUBACCT 
          DISPLAY   *P22:ROW,*V2LON,SUBACCT,*HOFF,*P36:ROW,FMAMDESC;
.
          MATCH     "6",FMAMTYPE         * test if a total account
          GOTO      KSAC6500 IF NOT EQUAL
          MOVE      ONE,SUBTOTAL
          GOTO      KSAC9999
.
KSAC6500  MATCH     "9",FMAMTYPE         * test if a total account
          GOTO      KSAC9999 IF NOT EQUAL
          MOVE      ONE,SUBTOTAL
          GOTO      KSAC9999
.
KSAC9000  MOVE      ONE,EXIT
.
KSAC9999  RETURN
.
.**********************************************************************
.*                         KSEQ0000                                   *
.*                 Keyin the account sequence                         *
.**********************************************************************
.
KSEQ0000  KEYIN     *P73:ROW,*DV,UNDLN5:
                    *P73:ROW,*DE,*JR,*ZF,*V2LON,SUBSEQ:
                    *P73:ROW,*DV,SUBSEQ
.
          PACK      SUBSEQ,SUBSEQ,SP10
.
          REP       " 0",SUBSEQ
          DISPLAY   *P73:ROW,*V2LON,SUBSEQ
.
KSEQ9999  RETURN
.
.**********************************************************************
.*                         SSUB0000                                   *
.*                 Store the sub-account details                      *
.**********************************************************************
.
SSUB0000  PACK      DIM17,SUBSEQ,SUBACCT,SP70
          STORE     DIM17,RECCOUNT,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                                   ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                                   ITEM11,ITEM12,ITEM13,ITEM14,ITEM15
SSUB9999  RETURN 
.
LSUB0000  LOAD      DIM17,ITEM,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                               ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                               ITEM11,ITEM12,ITEM13,ITEM14,ITEM15
LSUB9999  RETURN
.
CSUB0000  MOVE      ZERO,ITEM
.
CSUB1000  ADD       ONE,ITEM
          PACK      DIM17,SP20
          STORE     DIM17,ITEM,ITEM01,ITEM02,ITEM03,ITEM04,ITEM05:
                                   ITEM06,ITEM07,ITEM08,ITEM09,ITEM10:
                                   ITEM11,ITEM12,ITEM13,ITEM14,ITEM15
          COMPARE   "14",ITEM
          GOTO      CSUB9999 IF EQUAL
.
          GOTO      CSUB1000
.
CSUB9999  RETURN
.
.**********************************************************************
.*                         CLSB0000                                   *
.*                 clear the sub - account variable                   *
.**********************************************************************
.
CLSB0000  CLEAR     SUBACCT 
          CLEAR     SUBFUNC
          CLEAR     SUBTYPE
          CLEAR     SUBSEQ 
.
CLSB9999  RETURN
.
.**********************************************************************
.*                         DSSS0000                                   *
.*                 display sub accounts details screen                *
.**********************************************************************
.
DSSS0000  DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Subjective           : ":
                    *V2LON,SAVSUBJ,*HOFF,SP2,SAVDSUBJ,*EF:
                    *P28:7,*V2LON,"Subjective Calculation Details":
                    *P1:8,*ULON,"Item":
                    *P6:8,"Function";
.
          MATCH     "3",OLDSTYP
          GOTO      DSSS5000 IF EQUAL
          DISPLAY   *P16:8,*V2LON,*ULON,"Type":
                    *P22:8,"Subjective/Account":
                    *P73:8,"Acct Seq";
          GOTO      DSSS9999
.
DSSS5000  DISPLAY   *V2LON,*ULON:
                    *P22:8,"Account":
                    *P73:8,"Acct Seq";
.
DSSS9999  RETURN
.
.**********************************************************************
.*                        NPAG0000                                    *
.*               Display the next page                                *
.**********************************************************************
.
NPAG0000  MOVE      "14",ITEM
          CALL      LSUB0000
.
          PACK      KEY31,SAVLEDG,SAVSUBJ,DIM17,SP70
          CALL      DSUB0000
.
NPAG9999  RETURN
.
.**********************************************************************
.*                        PPAG0000                                    *
.*                Display the previous page                           *
.**********************************************************************
.
PPAG0000  MOVE      ONE,ITEM
          CALL      LSUB0000
.
          PACK      KEY31,SAVLEDG,SAVSUBJ,DIM17,SP70
.
          CALL      RAFMTS1
          MOVE      ZERO,ITEM
.
.-----  read 14 records back  -----
.
PPAG1000  CALL      RPFMTS1
          BRANCH    OVRCD,PPAG6000
          ADD       ONE,ITEM
.
          COMPARE   "15",ITEM
          GOTO      PPAG5000 IF EQUAL
.
          GOTO      PPAG1000
.
PPAG5000  PACK      KEY31,SAVLEDG,SAVSUBJ,FMTSASEQ,FMTSSACC,SP70
          CALL      DSUB0000
          GOTO      PPAG9999
.
PPAG6000  PACK      KEY31,SP20,SP20
          CALL      DSUB0000
.
PPAG9999  RETURN
.
.**********************************************************************
.*                        DSUB0000                                    *
.*                  Display the sub-accounts                          *
.**********************************************************************
.
.----  The key should already be passed correctly packed -----
.
DSUB0000  PACK      DIM31,SAVLEDG,SAVSUBJ,SP70
          LOAD      KEY31,SCRNUMB,DIM31     * clear key if on screen 1
.
          MOVE      ZERO,RECCOUNT
          MOVE      ZERO,NEXTSCRF
          MOVE      "8",ROW
          DISPLAY   *P1:9,*EF;
          CALL      CSUB0000
          CALL      RSFMTS1
.
DSUB1000  CALL      RKFMTS1
          BRANCH    OVRCD,DSUB9999
.
          MATCH     FMTSTLED,SAVLEDG      * test if same ledger
          GOTO      DSUB9999 IF NOT EQUAL
.
          MATCH     FMTSTACC,SAVSUBJ    * test if same account
          GOTO      DSUB9999 IF NOT EQUAL
.
          ADD       ONE,RECCOUNT
.
          ADD       ONE,ROW       
.
          COMPARE   "15",RECCOUNT
          GOTO      DSUB8000 IF EQUAL
.
DSUB4000  MOVE      FMTSADDT,SUBFUNC
          MOVE      FMTSSUBJ,SUBTYPE
          MOVE      FMTSSACC,SUBACCT
          MOVE      FMTSASEQ,SUBSEQ
          CALL      SSUB0000             * store the key
.
          CALL      DISS0000             * display the record
.
          GOTO      DSUB1000
.
DSUB8000  MOVE      ONE,NEXTSCRF
          CALL      RPFMTS1
          SUB       ONE,ROW
          SUB       ONE,RECCOUNT
.
DSUB9999  RETURN
.
.**********************************************************************
.*                          DISS0000                                  *
.*                Display a sub-account record                        *
.**********************************************************************
.
DISS0000  MOVE      ZERO,FORM1
          MOVE      SUBFUNC,FORM1
          BRANCH    FORM1,DISS1000,DISS1100,DISS1200 
          MOVE      "Add     ",ADTYDESC
          GOTO      DISS2000
.
DISS1000  MOVE      "Subtract",ADTYDESC
          GOTO      DISS2000
.
DISS1100  MOVE      "Divide  ",ADTYDESC
          GOTO      DISS2000
.
DISS1200  MOVE      "Multiply",ADTYDESC
.
DISS2000  MOVE      SP70,ATYPDESC
          MATCH     "3",OLDSTYP
          GOTO      DISS3000 IF EQUAL
.
          MOVE      ZERO,FORM1
          MOVE      SUBTYPE,FORM1
          BRANCH    FORM1,DISS2100,DISS2200
          MOVE      "Acct    ",ATYPDESC
          GOTO      DISS3000
.
DISS2100  MOVE      "Subj    ",ATYPDESC
          GOTO      DISS3000
.
DISS2200  MOVE      "Cost    ",ATYPDESC
          GOTO      DISS3000
.
DISS3000  MOVE      SP70,FMAMDESC
          PACK      KEY14,SAVLEDG,SUBACCT
          CALL      RDFMAM1
          DISPLAY   *P1:ROW,*V2LON,RECCOUNT,*HOFF,".":
                    *P6:ROW,ADTYDESC:
                    *P16:ROW,ATYPDESC:
                    *P22:ROW,*V2LON,SUBACCT,*HOFF:
                    *P36:ROW,FMAMDESC:
                    *P73:ROW,*V2LON,SUBSEQ
.
DISS9999 RETURN
.*********************************************************************
.*                        RSUB0000                                   *
.*                 Redsiply the sub-accounts screen                  *
.*********************************************************************
.
RSUB0000  MOVE      ONE,ITEM
          CALL      LSUB0000
          PACK      KEY31,SAVLEDG,SAVSUBJ,DIM17,SP70
          CALL      RAFMTS1
          BRANCH    OVRCD,RSUB5000
.
          CALL      RPFMTS1
          BRANCH    OVRCD,RSUB2000
.
          PACK      KEY31,FMTSTLED,FMTSTACC,FMTSASEQ,FMTSSACC,SP70
          GOTO      RSUB5000
.
RSUB2000  PACK      KEY31,SP30,SP10
.
RSUB5000  CALL      DSUB0000
.
RSUB9999  RETURN
.
.**********************************************************************
.*                         SNPE0000                                   *
.*         This handles the select, next, previous, exit prompts      *
.**********************************************************************
.
SNPE0000  BRANCH    NEXTSCRF,SNPE5000
.
          BRANCH    SCRNUMB,SNPE1000
.
.----- Prompt is - select, previous, exit -----
.
          CALL      PSPE0000
          GOTO      SNPE9999
.
.----  Prompt is - select, exit -----
.
SNPE1000  CALL      PSEE0000
          GOTO      SNPE9999
.
	
SNPE5000  BRANCH    SCRNUMB,SNPE6000
.
.----  Prompt is - select, next, previous, exit ----
.
          CALL      PALL0000
          GOTO      SNPE9999
.
.---- Prompt is - Select, next, exit ----
.
SNPE6000  CALL      PSNE0000
.
SNPE9999  RETURN
.
.*********************************************************************
.*                         PSEE0000                                  *
.*                handles select exit prompt                         *
.*********************************************************************
.
PSEE0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "e(",*V2LON,"X",*HOFF,")it : ";
.
PSEE1000  KEYIN     *P23:24,*DV,UNDLN2:
                    *P23:24,*V2LON,DIM2:
                    *P23:24,*DV,DIM2;
.
          TYPE      DIM2
          GOTO      PSEE8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2
          GOTO      PSEE9999 IF EQUAL
.
          BEEP
          GOTO      PSEE1000
.
PSEE8000  MOVE      ONE,EXIT
.
PSEE9999  RETURN
.
.*********************************************************************
.*                         PSNE0000                                  *
.*              handles select, next, exit prompt                    *
.*********************************************************************
.
PSNE0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "e(",*V2LON,"X",*HOFF,")it : ";
.
PSNE1000  KEYIN     *P31:24,*DV,UNDLN2:
                    *P31:24,*V2LON,DIM2:
                    *P31:24,*DV,DIM2;
.
          TYPE      DIM2
          GOTO      PSNE8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2
          GOTO      PSNE9999 IF EQUAL
.
          MATCH     "N ",DIM2
          GOTO      PSNE3000 IF NOT EQUAL
. 
          MOVE      TWO,EXIT 
          ADD       ONE,SCRNUMB
.
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PSNE9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PSNE9999
.
PSNE3000  BEEP
          GOTO      PSNE1000
.
PSNE8000  MOVE      ONE,EXIT
.
PSNE9999  RETURN
.
.*********************************************************************
.*                        PSPE0000                                   *
.*           handles select, previous, exit prompt                   *
.*********************************************************************
.
PSPE0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "e(",*V2LON,"X",*HOFF,")it : ";
.
PSPE1000  KEYIN     *P35:24,*DV,UNDLN2:
                    *P35:24,*V2LON,DIM2:
                    *P35:24,*DV,DIM2
.
          TYPE      DIM2
          GOTO      PSPE8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2
          GOTO      PSPE9999 IF EQUAL
.
          MATCH     "P ",DIM2
          GOTO      PSPE3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PSPE9999
.
PSPE3000  BEEP
          GOTO      PSPE1000
.
PSPE8000  MOVE      ONE,EXIT
.
PSPE9999  RETURN
.
.**********************************************************************
.*                         PALL0000                                   *
.*            Handles select, next, previous, exit, prompt            *
.**********************************************************************
.
PALL0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:24,*EL:
                    "Select Item, ":
                    "(",*V2LON,"P",*HOFF,")revious, ":
                    "(",*V2LON,"N",*HOFF,")ext, ":
                    "e(",*V2LON,"X",*HOFF,")it : ";
.
PALL1000  KEYIN     *P43:24,*DV,UNDLN2:
                    *P43:24,*V2LON,DIM2:
                    *P43:24,*DV,DIM2
.
          TYPE      DIM2
          GOTO      PALL8000 IF EQUAL
.
          REP       UPPLOW,DIM2
          MATCH     "X ",DIM2
          GOTO      PALL9999 IF EQUAL
.
          MATCH     "P ",DIM2
          GOTO      PALL3000 IF NOT EQUAL
.
          SUB       ONE,SCRNUMB
          MOVE      THREE,EXIT 
          GOTO      PALL9999
.
PALL3000  MATCH     "N ",DIM2
          GOTO      PALL4000 IF NOT EQUAL
          MOVE      TWO,EXIT
          ADD       ONE,SCRNUMB
          COMPARE   SCRNUMB,SCRCOUNT
          GOTO      PALL9999 IF NOT EQUAL
.
          ADD       ONE,SCRCOUNT
          GOTO      PALL9999
.
PALL4000  BEEP     
          GOTO      PALL1000
.
PALL8000  MOVE      ONE,EXIT
.
PALL9999  RETURN
.**********************************************************************
.  CDAT - Check for data on file                       Called By lots
.        Requires - KEY14    (ledger/account)
.                   NORMFIL1 & 2, STATFILE (filenames - blank if closed)
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CDAT0000  CALL      RDFMAM1
          BRANCH    OVRCD,CDAT9000     * account exists ?
.
          MATCH     "6",FMAMTYPE       * only check for posting accounts
          GOTO      CDAT1000 IF LESS
          MATCH     "8",FMAMTYPE
          GOTO      CDAT2000 IF EQUAL
          GOTO      CDAT9000
.
.---- check for normal data ----
.
CDAT1000  
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
.
. Current Year
.
          PACK      FILENAME,FMST,FMLACYRR,SP70
          MATCH     FILENAME,NORMFIL1
          GOTO      CDAT1100 IF EQUAL  * file open ?
.
          MOVE      SP70,NORMFIL1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,CDAT1200     * file missing ?
          MOVE      FILENAME,NORMFIL1
.
CDAT1100  PACK      KEY32,KEY14,SP70
          CALL      RSFMTR2
          CALL      RKFMTR2
          BRANCH    OVRCD,CDAT1200
          PACK      KEY15,FMTRLEDG,FMTRACCT,SP70
          MATCH     KEY15,KEY14
          GOTO      CDAT1200 IF NOT EQUAL
          GOTO      CDAT9500           * data exists
.
. Last Year
.
CDAT1200  MOVE      FMLACYRR,F4YEAR
          SUB       ONE,F4YEAR
          PACK      FILENAME,FMST,F4YEAR,SP70
          REP       " 0",FILENAME
          MATCH     FILENAME,NORMFIL2
          GOTO      CDAT1300 IF EQUAL  * file open ?
.
          MOVE      SP70,NORMFIL2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,CDAT9000     * file missing ?
          MOVE      FILENAME,NORMFIL2
.
CDAT1300  PACK      KEY32,KEY14,SP70
          CALL      RSFMCT2
          CALL      RKFMCT2
          BRANCH    OVRCD,CDAT9000
          PACK      KEY15,FMCTLEDG,FMCTACCT,SP70
          MATCH     KEY15,KEY14
          GOTO      CDAT9000 IF NOT EQUAL
          GOTO      CDAT9500           * data exists
.
.---- check for stat data ----
.
CDAT2000  
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
.
          PACK      FILENAME,FMSA,FMLACYRR,SP70
          MATCH     FILENAME,STATFILE
          GOTO      CDAT2100 IF EQUAL  * file open ?
.
          MOVE      SP70,STATFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,CDAT9000     * file missing ?
          MOVE      FILENAME,STATFILE
.
CDAT2100  PACK      KEY30,KEY14,SP70
          CALL      RSFMSR2
          CALL      RKFMSR2
          BRANCH    OVRCD,CDAT9000
          PACK      KEY15,FMSRLEDG,FMSRACCT,SP70
          MATCH     KEY15,KEY14
          GOTO      CDAT9000 IF NOT EQUAL
          GOTO      CDAT9500           * data exists
.
.
CDAT9000  MOVE      ZERO,EXIT          * continue
          GOTO      CDAT9999
.
CDAT9500  MOVE      ONE,EXIT           * quit
          DISPLAY   *P1:23,*B,*EF:
                    "Data Found In Transaction File ",*V2LON,FILENAME,*HOFF:
                    *P1:24:
                    "For Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*HOFF," - ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
          MATCH     "1426",PASSCODE
          GOTO      CDAT9999 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CDAT9000 IF EQUAL
.
CDAT9999  RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
RLMAFM00  BRANCH    SCRNO,RDISA000,RDISB000,RDISC000,RDISD000,RDISE0000
          DISPLAY   *P1:4,"    Ledger               : ",*EF;
          RETURN
.
RSBAFM00  BRANCH    SCRNO,RDISA000,RDISB000,RDISC000,RDISD000,RDISE0000
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,FMLALEDG,*HOFF,SP12,FMLADESC,*EL:
                    *P1:5,"    Subjective           : ",*EF;
          RETURN
.
RCCAFM00  
RAMAFM00  BRANCH    SCRNO,RDISA000,RDISB000,RDISC000,RDISD000,RDISE0000
          RETURN
.
RDISA000  CALL      SCRA0000           * redisplay for screen A data keyins
          CALL      DISA0000
          RETURN
.
RDISB000  CALL      SCRB0000           * redisplay for screen B data keyins
          CALL      DISB0000
          RETURN
.
RDISC000  CALL      SCRC0000           * redisplay for screen C data keyins
          CALL      DATC0000
          RETURN
.
RDISD000  CALL      SCRC0000           * redisplay for screen C range keyins
          CALL      DATC0000
          MOVE      "4",SCRNO          * ensure still set up for range
          DISPLAY   *P1:22,MODESC," From Cost Centre : ",*V2LON,FROMCOCE:
                    *HOFF,"  ",TEMPDESC,*EF;
          MATCH     SP70,FROMCOCE
          GOTO      RDISD999 IF EQUAL
          DISPLAY   *P1:23,"       To   Cost Centre : ";
RDISD999  RETURN
.
RDISE000  CALL      SAVS0000
          CALL      DSSS0000
.
          BRANCH    RECCOUNT,RDISE030
.
          MOVE      ONE,ITEM
          CALL      LSUB0000
          PACK      KEY31,SAVLEDG,SAVSUBJ,DIM17
          CALL      RSFMTS1
.
          CALL      RPFMTS1
          BRANCH    OVRCD,RDISE025
          PACK      KEY31,FMTSTLED,FMTSTACC,FMTSASEQ,FMTSSACC
          GOTO      RDISE030
RDISE025
          PACK      KEY31,SP30,SP10
RDISE030
          CALL      DSUB0000
RDISE040
          CALL      RAVS0000
          ADD       ONE,ROW
          ADD       ONE,RECCOUNT
          CALL      DISS0000
          RETURN
.
RCATFM00  
RCODFM00  
RLEVFM00  
RLMBFM00  
RONCFM00  
RPRCFM00  
RSECFM00  
          BRANCH    SCRNO,RCODFM10,RCODFM20,RCODFM30
.
RCODFM10  CALL      SCRA0000
          CALL      DISA0000
          GOTO      RCODFM99
.
RCODFM20  CALL      SCRB0000
          CALL      DISB0000
          GOTO      RCODFM99
.
RCODFM30  CALL      SCRC0000
          CALL      DATC0000
          GOTO      RCODFM99
.
RCODFM99  RETURN
.
          INC       FMSBPFIO/INC       * consolidated cost centre
          INC       FMSCCAIO/INC       * cost centre
          INC       FMSCCCIO/INC       * consolidated cost centre
          INC       FMSCODIO/INC       * codes file
          INC       FMSCTRIO/INC       * normal tran file
          INC       FMSLEVIO/INC       * level code
          INC       FMSLMBIO/INC       * ledger report desc.
          INC       FMSONCIO/INC       * oncost
          INC       FMSPRCIO/INC       * print code
          INC       FMSRSFIO/INC       * report seq file
          INC       FMSSBAIO/INC       * subjective
          INC       FMSSSCIO/INC
          INC       FMSSLBIO/INC
          INC       FMSSTRIO/INC       * stat tran file
          INC       FMSTRNIO/INC       * normal tran file
          INC       FMSUWPIO/INC       * user defined wp. file
          INC       FMSXCSIO/INC
.
          INC       FMSAMAKY           * account master file
          INC       FMSCCAKY           * cost centre
          INC       FMSCODKY           * codes file
          INC       FMSLEVKY           * level code
          INC       FMSLMAKY           * ledger[
          INC       FMSLMBKY           * ledger report desc.
          INC       FMSONCKY           * oncost
          INC       FMSPRCKY           * print code
          INC       FMSSBAKY           * subjective
.
          INC       FMSACCCD           * subj/cc creation routines
          INC       FMSUPDCD           * subj/cc creation routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * FMS audit update routines 
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
