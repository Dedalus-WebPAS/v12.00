.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.01.01  09.08.2000 Sandra Barcham
.           Print ABN & GST Registered
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.01  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
.-------------------------------------------------------
DHINV     DIM       1
DHCRD     DIM       1
DHPAY     DIM       1
DHORD     DIM       1
.
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS61
.   Function      :   Creditors Register                      
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSCNTFD/INC
          INC       APSCTSFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSPPDFD/INC
          INC       APSSNTFD/INC
.=========================
.Local Variable Definition
.-------------------------
REPTYPE   DIM      20 * Scr 00 Fld     1
REPSEQ    DIM      20 * Scr 00 Fld     2
CREDFROM  DIM      40 * Scr 00 Fld     3
CREDEND   DIM      40 * Scr 00 Fld     4
SORTFROM  DIM       6 * Scr 00 Fld     5
SORTEND   DIM       6 * Scr 00 Fld     6
TYPEFROM  DIM      40 * Scr 00 Fld     7
TYPEEND   DIM      40 * Scr 00 Fld     8
EXPORTYN  FORM      1 * Scr 00 Fld     9
FROMCRED  DIM       5 * Scr 00 Fld    13
ENDCRED   DIM       5 * Scr 00 Fld    14
FROMTYPE  DIM       3 * Scr 00 Fld    15
ENDTYPE   DIM       3 * Scr 00 Fld    16
FROMSORT  DIM       6 * Scr 00 Fld    17
ENDSORT   DIM       6 * Scr 00 Fld    18
REPTTYPE  FORM      1 * Scr 00 Fld    19
REPTSEQ   FORM      1 * Scr 00 Fld    20
INCHINV   FORM      1 * Scr 00 Fld    21
INCHCRD   FORM      1 * Scr 00 Fld    22
INCHPAY   FORM      1 * Scr 00 Fld    23
INCHORD   FORM      1 * Scr 00 Fld    24
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS61"
PRGNAM    INIT      "Creditors Register                      "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apscntaf";
          OPEN      APSCNTA1,"apscntaf"
          DISPLAY   *P56:24,"Opening apsctsaf";
          OPEN      APSCTSA1,"apsctsaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsppdaf";
          OPEN      APSPPDA1,"apsppdaf"
          DISPLAY   *P56:24,"Opening apssntaf";
          OPEN      APSSNTA1,"apssntaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Parameters for Report              
          ENDIF
          RETURN
.--------------------------------
. Screen - Parameters for Report              
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Parameters for Report              
.-------------------------------------------------------
CF00L000
          MOVE      SP70,REPTYPE 
          MOVE      SP70,REPSEQ  
          MOVE      SP70,CREDFROM
          MOVE      SP70,CREDEND 
          MOVE      SP70,SORTFROM
          MOVE      SP70,SORTEND 
          MOVE      SP70,TYPEFROM
          MOVE      SP70,TYPEEND 
          MOVE      ZERO,EXPORTYN
          MOVE      SP70,FROMCRED
          MOVE      SP70,ENDCRED 
          MOVE      SP70,FROMTYPE
          MOVE      SP70,ENDTYPE 
          MOVE      SP70,FROMSORT
          MOVE      SP70,ENDSORT 
          MOVE      ZERO,REPTTYPE
          MOVE      ZERO,REPTSEQ 
          MOVE      ZERO,INCHINV 
          MOVE      ZERO,INCHCRD 
          MOVE      ZERO,INCHPAY 
          MOVE      ZERO,INCHORD 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Parameters for Report              
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Parameters for Report              
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Parameters for Report              
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Parameters for Report              
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Parameters for Report              
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L101,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L999,PS00L999,PS00L999:
                            PS00L110,PS00L111,PS00L112,PS00L113:
                            PS00L114,PS00L115,PS00L116,PS00L117:
                            PS00L118,PS00L119,PS00L120,PS00L121
          GOTO     PS00L999
.
PS00L101
          MOVE      REPTYPE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      CREDEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SORTFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SORTEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      TYPEFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      TYPEEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      FROMCRED,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      ENDCRED,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      FROMTYPE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      ENDTYPE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      FROMSORT,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      ENDSORT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      REPTTYPE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCHINV,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCHCRD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCHPAY,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCHORD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Parameters for Report              
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L101,SF00L102,SF00L103,SF00L006:
                            SF00L104,SF00L006,SF00L105,SF00L006:
                            SF00L106,SF00L006,SF00L107,SF00L108:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L109,SF00L110,SF00L111,SF00L112
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L101,SF00L102,SF00L103,SF00L020:
                            SF00L104,SF00L020,SF00L105,SF00L020:
                            SF00L106,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L109,SF00L110,SF00L111,SF00L112
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KREPTY00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTYPE,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L102
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KREPSQ00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L103
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CREDEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFCRED00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CREDEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SORTEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFSORT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SORTFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SORTEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TYPEEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFTYPE00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      TYPEFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TYPEEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L108
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      REPT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L109
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,INCHINV 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCHINV,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,INCHCRD 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCHCRD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L111
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,INCHPAY 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCHPAY,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L112
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,INCHORD 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCHORD,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          MOVE      ZERO,INCHINV
          MOVE      ZERO,INCHCRD
          MOVE      ZERO,INCHPAY
          MOVE      ZERO,INCHORD
          MOVE      ZERO,EXPORTYN
          RETURN
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
.----------------------------------------------------------------------
. Enter Creditor Code
.----------------------------------------------------------------------
KREPTY00  MOVE       ZERO,EXIT
          KEYIN      *PCCOL:CVERT,*EL,*V2LON,ANS
          REP        UPPLOW,ANS
          MATCH      "S",ANS
          GOTO       KREPTY10 IF EQUAL
          MATCH      "C",ANS
          GOTO       KREPTY20 IF EQUAL
          MATCH      EXITCHAR,ANS
          GOTO       KREPTY95 IF EQUAL
.
          BEEP
          GOTO       KREPTY00
.
KREPTY10  MOVE       "Supplier Details",REPTYPE
          MOVE       ONE,REPTTYPE
          GOTO       KREPTY99
.
KREPTY20  MOVE       "Creditor Details",REPTYPE
          MOVE       TWO,REPTTYPE
          GOTO       KREPTY99
.
KREPTY95  MOVE       TWO,EXIT
.
KREPTY99  RETURN
.
.----------------------------------------------------------------------
. Enter Creditor Code
.----------------------------------------------------------------------
KREPSQ00  MOVE       ZERO,EXIT
          KEYIN      *PCCOL:CVERT,*EL,*V2LON,ANS
          REP        UPPLOW,ANS
          MATCH      "S",ANS
          GOTO       KREPSQ10 IF EQUAL
          MATCH      "C",ANS
          GOTO       KREPSQ20 IF EQUAL
          MATCH      "T",ANS
          GOTO       KREPSQ30 IF EQUAL
          MATCH      EXITCHAR,ANS
          GOTO       KREPSQ95 IF EQUAL
          BEEP
          GOTO       KREPSQ00
.
KREPSQ10  MOVE       "Sort Key Order",REPSEQ
          MOVE       ONE,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ20  MOVE       "Creditor Code Order",REPSEQ
          MOVE       TWO,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ30  MOVE       "Creditor Type Order",REPSEQ
          MOVE       THREE,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ95  MOVE       TWO,EXIT
.
KREPSQ99  RETURN
.
.----------------------------------------------------------------------
. Enter Creditor Code
.----------------------------------------------------------------------
KFCRED00  MOVE       "    3",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,KFCRED10,KFCRED99
          MOVE       APMACRD,FROMCRED
          PACK       CREDFROM,APMACRD,SP1,APMACN1
          GOTO       KFCRED20
.
KFCRED10  MOVE       SP70,FROMCRED
          MOVE       "Start                              ",CREDFROM
.
KFCRED20  MOVE       CREDFROM,VAR
          CALL       DISPITEM
.
KFCRED30  MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,KFCRED40,KFCRED99
          MOVE       APMACRD,ENDCRED
          PACK       CREDEND,APMACRD,SP1,APMACN1
          MATCH      FROMCRED,ENDCRED
          GOTO       KFCRED99 IF NOT LESS
.
          BEEP
          MOVE       "To Creditor Code Must Be > From Creditor Code - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFCRED00
.
KFCRED40  MOVE       "~~~~~",ENDCRED
          MOVE       "End                                   ",CREDEND
.
KFCRED99  RETURN
.
.----------------------------------------------------------------------
. Enter SORT Code
.----------------------------------------------------------------------
KFSORT00  MOVE       ZERO,EXIT
          MOVE       "    5",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          KEYIN      *PCCOL:CVERT,*V2LON,FROMSORT
          ENDSET     FROMSORT
          APPEND     SP70,FROMSORT
          RESET      FROMSORT
          MATCH      EXITCHAR,FROMSORT
          GOTO       KFSORT95 IF EQUAL
.
          MATCH      SP70,FROMSORT
          GOTO       KFSORT10 IF EQUAL
          MOVE       FROMSORT,SORTFROM
          GOTO       KFSORT20
.
KFSORT10  MOVE       "      ",FROMSORT
          MOVE       "Start ",SORTFROM
.
KFSORT20  MOVE       SORTFROM,VAR
          CALL       DISPITEM
.
          MOVE       "    6",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          KEYIN      *PCCOL:CVERT,*V2LON,ENDSORT
          ENDSET     ENDSORT
          APPEND     SP70,ENDSORT
          RESET      ENDSORT
          MATCH      EXITCHAR,ENDSORT
          GOTO       KFSORT95 IF EQUAL
.
          MATCH      SP70,ENDSORT
          GOTO       KFSORT30 IF EQUAL
          MOVE       ENDSORT,SORTEND
          MATCH      FROMSORT,ENDSORT
          GOTO       KFSORT99 IF NOT LESS
.
          BEEP
          MOVE       "To Sort Key Must Be > From Sort Key - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    6",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFSORT00
.
KFSORT30  MOVE       "~~~~~~",ENDSORT
          MOVE       "End   ",SORTEND
          GOTO       KFSORT99
.
KFSORT95  MOVE       TWO,EXIT
.
KFSORT99  RETURN
.
.----------------------------------------------------------------------
. Enter Type Code
.----------------------------------------------------------------------
KFTYPE00  MOVE       "    7",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPCTA00
          BRANCH     EXIT,KFTYPE10,KFTYPE99
          MOVE       APCTCODE,FROMTYPE
          PACK       TYPEFROM,APCTCODE,SP1,APCTDESC
          GOTO       KFTYPE20
.
KFTYPE10  MOVE       "   ",FROMTYPE
          MOVE       "Start                              ",TYPEFROM
.
KFTYPE20  MOVE       TYPEFROM,VAR
          CALL       DISPITEM
.
          MOVE       "    8",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPCTA00
          BRANCH     EXIT,KFTYPE30,KFTYPE99
          MOVE       APCTCODE,ENDTYPE
          PACK       TYPEEND,APCTCODE,SP1,APCTDESC
          MATCH      FROMTYPE,ENDTYPE
          GOTO       KFTYPE99 IF NOT LESS
.
          BEEP
          MOVE       "To Creditor Type Must Be > From Creditor Type - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    8",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFTYPE00
.
KFTYPE30  MOVE       "~~~",ENDTYPE
          MOVE       "End                                     ",TYPEEND
.
KFTYPE99  RETURN
.
.----------------------------------------------------------------------
. Print Creditors Register
.
. Parameters  : REPTTYPE  FORM 1  1=Supplier Details 2=Creditor Details
.               REPTSEQ   FORM 1  1=by Sort, 2=by Code, 3=by Type
.               FROMCRED  DIM  5  Creditor Range
.               ENDCRED   DIM  5
.               FROMSORT  DIM  5  Sort Key Range
.               ENDSORT   DIM  5
.               FROMTYPE  DIM  5  Type Range
.               ENDTYPE   DIM  5
.               EXPORTYN  FOEM 1  Export Details 0=No 1=Yes
.
.----------------------------------------------------------------------
REPT0000  MATCH     FROMSORT,ENDSORT
          GOTO      REPT0010 IF NOT LESS
          MOVE      "Last Sort Key must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0010  MATCH     FROMCRED,ENDCRED
          GOTO      REPT0020 IF NOT LESS
          MOVE      "Last Creditor must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0020  MATCH     FROMTYPE,ENDTYPE
          GOTO      REPT0030 IF NOT LESS
          MOVE      "Last Creditor Type must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0030  MOVE      "99",CLNO
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P1:24,*EL,"Printing : "
.
          CALL      MAKEXP00         * Create Export File
.
          BRANCH    REPTSEQ,REPT1000,REPT2000,REPT3000
.
. Report by Sort Key
.
REPT1000  PACK      KEY11,FROMSORT,SP70
          CALL      RSAPMA3
REPT1100  CALL      RKAPMA3
          BRANCH    OVRCD,REPT5000
          MATCH     APMASKY,ENDSORT
          GOTO      REPT5000 IF LESS
.
          MATCH     FROMCRED,APMACRD
          GOTO      REPT1100 IF LESS
          MATCH     APMACRD,ENDCRED
          GOTO      REPT1100 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          GOTO      REPT1100 IF LESS
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT1100 IF LESS
.
          IF        INCHINV<>0
            BRANCH    APMAHIN,REPT1200
            GOTO      REPT1100
          ENDIF
          IF        INCHCRD<>0
            BRANCH    APMAHCR,REPT1200
            GOTO      REPT1100
          ENDIF
          IF        INCHPAY<>0
            BRANCH    APMAHPY,REPT1200
            GOTO      REPT1100
          ENDIF
          IF        INCHORD<>0
            BRANCH    APMAHOR,REPT1200
            GOTO      REPT1100
          ENDIF
.
REPT1200  CALL      PCRED000          * Print Creditor
          GOTO      REPT1100
.
. Report by Code
.
REPT2000  PACK      KEY5,FROMCRED,SP70
          CALL      RDAPMA1
          IF        OVRCD=0
            CALL      RPAPMA1
          ENDIF
REPT2100  CALL      RKAPMA1
          BRANCH    OVRCD,REPT5000
          MATCH     APMACRD,ENDCRED
          GOTO      REPT5000 IF LESS
.
          MATCH     FROMSORT,APMASKY
          GOTO      REPT2100 IF LESS
          MATCH     APMASKY,ENDSORT
          GOTO      REPT2100 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          GOTO      REPT2100 IF LESS
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT2100 IF LESS
.
          IF        INCHINV<>0
            BRANCH    APMAHIN,REPT2200
            GOTO      REPT2100
          ENDIF
          IF        INCHCRD<>0
            BRANCH    APMAHCR,REPT2200
            GOTO      REPT2100
          ENDIF
          IF        INCHPAY<>0
            BRANCH    APMAHPY,REPT2200
            GOTO      REPT2100
          ENDIF
          IF        INCHORD<>0
            BRANCH    APMAHOR,REPT2200
            GOTO      REPT2100
          ENDIF
.
REPT2200  CALL      PCRED000          * Print Creditor
          GOTO      REPT2100
.
. Report by Type
.
REPT3000  PACK      KEY8,FROMTYPE,SP70
          CALL      RSAPMA2
REPT3100  CALL      RKAPMA2
          BRANCH    OVRCD,REPT5000
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT5000 IF LESS
.
          MATCH     FROMSORT,APMASKY
          GOTO      REPT3100 IF LESS
          MATCH     APMASKY,ENDSORT
          GOTO      REPT3100 IF LESS
.
          MATCH     FROMCRED,APMACRD
          GOTO      REPT3100 IF LESS
          MATCH     APMACRD,ENDCRED
          GOTO      REPT3100 IF LESS
.
          IF        INCHINV<>0
            BRANCH    APMAHIN,REPT3200
            GOTO      REPT3100
          ENDIF
          IF        INCHCRD<>0
            BRANCH    APMAHCR,REPT3200
            GOTO      REPT3100
          ENDIF
          IF        INCHPAY<>0
            BRANCH    APMAHPY,REPT3200
            GOTO      REPT3100
          ENDIF
          IF        INCHORD<>0
            BRANCH    APMAHOR,REPT3200
            GOTO      REPT3100
          ENDIF
.
REPT3200  MATCH     FROMTYPE,APMATYP
          IF        !@EQUAL
            MOVE      APMATYP,FROMTYPE    * Force Page Break of Type Change
            MOVE      "99",CLNO
          ENDIF
.
          CALL      PCRED000          * Print Creditor
          GOTO      REPT3100
.
. End of Report
.
REPT5000  CALL      TRAN0000
          MOVE      ZERO,EXIT
          GOTO      REPT9999
.
REPT9000  MOVE      ONE,EXIT * Return to Prompt
          GOTO      REPT9999
.
REPT9999  RETURN
.--------------------------------------------------
. Print Creditor Details
.--------------------------------------------------
PCRED000  CALL      WRTEXP00         * Write to Export File
.
          DISPLAY   *P12:24,*V2LON,APMACRD,"/",APMASKY,"/",APMATYP
          COMPARE   "55",CLNO
          CALL      PHEAD000 IF NOT LESS
.
          BRANCH    REPTTYPE,PCRED100,PCRED200
.
. Print Supplier Details
.
PCRED100  PRINT     *1,"!",APMACRD,*8,"!",APMASN1,*41,"!",APMASA1:
                    *69,"!",APMASPC:
                    *78,"!",APMASCON,*111,"!",APMASTEL,*132,"!":
                    *N,*1,"!",*8,"!",APMASN2,*41,"!",APMASA2:
                    *69,"!",*78,"!",*111,"!",*132,"!":
                    *N,*1,"!",*8,"!",*41,"!",APMASA3:
                    *69,"!",*78,"!",*111,"!",APMASFAX,*132,"!":
                    *N,*1,"!",*8,"!------------------------":
                    *33,"------------------------------":
                    *63,"------------------------------":
                    *93,"---------------------------------------!"
.
          ADD       FOUR,CLNO
          ADD       ONE,SECTOR
          CALL      PSNT0000   * Print Supplier Notes
          GOTO      PCRED900
.
. Print Creditor Details
.
PCRED200  MOVE      APMACON,KEY25
          PACK      KEY4,APMAHIN,APMAHCR,APMAHPY,APMAHOR
          REP       "0N",KEY4
          REP       "1Y",KEY4
          UNPACK    KEY4,DHINV,DHCRD,DHPAY,DHORD
.
          PRINT     "!",APMACRD,"!",APMATYP,"!",APMASKY,"!",APMACN1:
                    "!",APMACA1,"!",APMACPC,"!",KEY25,"!",APMACTEL:
                    "!",DHINV,SP1,DHCRD,SP1,DHPAY,SP1,DHORD,*132,"!"
.
          MOVE      SP70,APPPDES
          MOVE      APMAPPD,KEY2
          CALL      RDAPPP1
          PACK      KEY25,APMAPPD,SP1,APPPDES
          MOVE      ANSN,D1
          LOAD      D1,APMAGREG,ANSY
.
          PRINT     "!",*7,"!",*11,"!",*18,"!",APMACN2,*49,"!":
                    APMACA2,*75,"!",*82,"!",KEY25,*108,"!":
                    APMACFAX,*124,"!",*132,"!":
                    *N,"!",*7,"!",*11,"!",*18,"!",APMAABN,"  GST Reg. ",D1:
                    *49,"!":
                    APMACA3,*75,"!   ",APMAGMT,*82,"!",APMABSB:
                    *108,"!",APMABAC,*124,"!",*132,"!":
                    *N,*1,"!",*7,"!------------------------":
                    *32,"------------------------------":
                    *62,"------------------------------":
                    *92,"----------------------------------------!"
.
          ADD       ONE,SECTOR
          ADD       FOUR,CLNO
          CALL      PCNT0000
          GOTO      PCRED900
PCRED900
          RETURN
.--------------------------------------------------
. Print Supplier Notes
.--------------------------------------------------
PSNT0000  PACK      KEY8,APMACRD,SP70
          MOVE      ZERO,EXIT
          CALL      RSAPSN1
.
PSNT1000  CALL      RKAPSN1
          BRANCH    OVRCD,PSNT9000
          MATCH     APMACRD,APSNCRD
          GOTO      PSNT9000 IF NOT EQUAL
.
          COMPARE   "60",CLNO
          CALL      PHEAD000 IF NOT LESS
.
          BRANCH    EXIT,PSNT1100
          MATCH     SP70,APSNDAT
          GOTO      PSNT1000 IF EQUAL
          MOVE      ONE,EXIT
          ADD       ONE,CLNO
          PRINT     *1,"!",*8,"! Supplier Notes : ",APSNDAT,*132,"!"
          GOTO      PSNT1000
.
PSNT1100  ADD       ONE,CLNO
          PRINT     *1,"!",*8,"!                  ",APSNDAT,*132,"!"
          GOTO      PSNT1000
.
PSNT9000  COMPARE   ZERO,EXIT
          GOTO      PSNT9999 IF EQUAL
          ADD       ONE,CLNO
          PRINT     *1,"*--------------------------------":
                    *33,"------------------------------":
                    *63,"------------------------------":
                    *93,"---------------------------------------*"
PSNT9999  MOVE      ZERO,EXIT
          RETURN
.--------------------------------------------------
. Print Creditor Notes
.--------------------------------------------------
PCNT0000  PACK      KEY8,APMACRD,SP70
          MOVE      ZERO,EXIT
          CALL      RSAPCN1
.
PCNT1000  CALL      RKAPCN1
          BRANCH    OVRCD,PCNT9000
          MATCH     APMACRD,APCNCRD
          GOTO      PCNT9000 IF NOT EQUAL
          COMPARE   "55",CLNO
          CALL      PHEAD000 IF NOT LESS
          BRANCH    EXIT,PCNT1100
          MATCH     SP70,APCNDAT
          GOTO      PCNT1000 IF EQUAL
          MOVE      ONE,EXIT
          ADD       ONE,CLNO
          PRINT     *1,"!",*7,"! Creditor Notes : ",APCNDAT,*132,"!"
          GOTO      PCNT1000
.
PCNT1100  ADD       ONE,CLNO
          PRINT     *1,"!",*7,"!                  ",APCNDAT,*132,"!"
          GOTO      PCNT1000
.
PCNT9000  COMPARE   ZERO,EXIT
          GOTO      PCNT9999 IF EQUAL
          ADD       ONE,CLNO
          PRINT     *1,"*--------------------------------":
                    *33,"------------------------------":
                    *63,"------------------------------":
                    *93,"---------------------------------------*"
PCNT9999  MOVE      ZERO,EXIT
          RETURN
.------------------------------------------------------------
. Print Report Heading
.------------------------------------------------------------
PHEAD000  CALL      HEAD132
          BRANCH    REPTTYPE,PHEAD010,PHEAD020
PHEAD010  PRINT     "Supplier Details Printed in ";
          GOTO      PHEAD100
PHEAD020  PRINT     "Creditor Details Printed in ";
          GOTO      PHEAD100
PHEAD100  BRANCH    REPTSEQ,PHEAD110,PHEAD120,PHEAD130
PHEAD110  PRINT     "Alpha Sort Key Sequence"
          GOTO      PHEAD200
PHEAD120  PRINT     "Creditor Code Sequence"
          GOTO      PHEAD200
PHEAD130  PRINT     "Creditor Type Sequence"
          GOTO      PHEAD200
PHEAD200  PRINT     "Creditor Code From : ",CREDFROM," To : ",CREDEND:
                    *N,"Creditor Type From : ",TYPEFROM," To : ",TYPEEND:
                    *N,"Sort Key From      : ",SORTFROM," To : ",SORTEND
          BRANCH    REPTTYPE,PHEAD210,PHEAD220
.
PHEAD210  PRINT     *1,"*---------------------------------":
                    "----------------------------------------":
                    "--------------------------------------------":
                    "-------------*":
                    *N,"! Supp",*8,"!",*15,"Name",*41,"!",*45,"Address":
                    *69,"! Post",*78,"! Contact",*111,"! Telephone":
                    *132,"!":
                    *N,"! No.",*8,"!",*41,"!",*69,"! Code",*78,"!":
                       *111,"! Fax",*132,"!":
                    *N,"*---------------------------------------------------":
                    "--------------------------------------------------------":
                    "-----------------------*"
          MOVE      TEN,CLNO
          GOTO      PHEAD900
.
PHEAD220  PRINT     *1,"*--------------------------------------------------":
                    "---------------------------------------------------------":
                    "-----------------------*":
                    *N,"!Cred",*7,"!Typ",*11,"! Sort",*18,"!Name":
                       *49,"!Address",*75,"! Post",*82,"!Contact":
                       *108,"!Telephone",*124,"! Hold",*132,"!":
                    *N,"!Code ",*7,"!",*11,"! Key",*18,"!":
                       *49,"!",*75,"!",*82,"!Pay Period":
                       *108,"!Fax",*124,"!",*132,"!":
                    *N,"!",*7,"!",*11,"!",*18,"!ABN":
                       *49,"!",*75,"!Pay Me",*82,"!BSB":
                       *108,"!Account",*124,"!I C P O",*132,"!":
                    *N,"*-----------------------------------------------------":
                    "---------------------------------------------------------":
                    "--------------------*"
.
          MOVE      TEN1,CLNO
PHEAD900
          RETURN
.
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
          MOVE     "EXPORT",KEY6
          PACK     EXPORTFN,KEY6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
          BRANCH   REPTTYPE,MAKEXP10,MAKEXP20
MAKEXP10  WRITE    EXPORTFL,SEQ;"Code",TABDELM:
                                "Name Line 1",TABDELM:
                                "Name Line 2",TABDELM:
                                "Address Line 1",TABDELM:
                                "Address Line 2",TABDELM:
                                "Address Line 3",TABDELM:
                                "Post Code",TABDELM:
                                "Contact",TABDELM:
                                "Telephone",TABDELM:
                                "Fax"
          GOTO     MAKEXP99
.
MAKEXP20  WRITE    EXPORTFL,SEQ;"Code",TABDELM:
                                "Name Line 1",TABDELM:
                                "Name Line 2",TABDELM:
                                "Address Line 1",TABDELM:
                                "Address Line 2",TABDELM:
                                "Address Line 3",TABDELM:
                                "Post Code",TABDELM:
                                "Contact",TABDELM:
                                "Telephone",TABDELM:
                                "Fax",TABDELM:
                                "ABN Number",TABDELM:
                                "GST Registered"
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXP99 IF NOT EQUAL
          BRANCH   REPTTYPE,WRTEXP10,WRTEXP20
.
WRTEXP10  WRITE    EXPORTFL,SEQ;APMACRD,TABDELM:
                                APMASN1,TABDELM:
                                APMASN2,TABDELM:
                                APMASA1,TABDELM:
                                APMASA2,TABDELM:
                                APMASA3,TABDELM:
                                APMASPC,TABDELM:
                                APMASCON,TABDELM:
                                APMASTEL,TABDELM:
                                APMASFAX

          GOTO     WRTEXP99
.
WRTEXP20  WRITE    EXPORTFL,SEQ;APMACRD,TABDELM:
                                APMACN1,TABDELM:
                                APMACN2,TABDELM:
                                APMACA1,TABDELM:
                                APMACA2,TABDELM:
                                APMACA3,TABDELM:
                                APMACPC,TABDELM:
                                APMACON,TABDELM:
                                APMACTEL,TABDELM:
                                APMACFAX,TABDELM:
                                APMAABN,TABDELM:
                                D1
.
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9999 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCKIKY    
          INC       APSCNTIO/INC
          INC       APSCTSIO/INC
          INC       APSCTSKY    
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       APSPPDIO/INC
          INC       APSSNTIO/INC
.
          INC       STDGENCD
.
