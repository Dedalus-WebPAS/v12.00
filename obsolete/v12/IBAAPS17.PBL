.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
.V10.02.01  07/04/2011 Mike Laming for Jill CAR 239574
.           Remove CALL to ' IBAPRNT1,"ibaprntf" '
. V9.04.01  11.04.2005 Peter Vela    CAR 59696
.           Recompiled for SINORDUS
. V9.03.01  10.12.2003 Henry Son     CAR 14452
.           Added Creditor Exempt Bas code.
.-------------------------------------------------------
. V9.02.00 03.05.2002  Glenn Saunders
.          Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B02 25.05.2001 Dave Matthews
.           Amend account type check in routine WAPIN000 - SRF 8429
. VF.09.B01 17.11.2000 Sandra Barcham
.           Added BAS Code
.-------------------------------------------------------
. VF.01.04  30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
. VF.01.03  21.09.2000 Sandra Barcham
.           Fix write Date Credit Notes correctly into header file
.           srf 5117
. VF.01.02  17.08.2000 Sandra Barcham
.           Fix modification of credit notes
.           srf 5117
. VF.01.01  27.04.2000 Sandra Barcham
.           Added GST Changes
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           17.11.1999 Sandra Barcham
.           Stop transactions disappearing
.           srf 633548
.           Allow Cancelled direct debits
.           srf 635048
.           Fix payment date for year 2000
.           srf 636207
. VF.00.01  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
.-------------------------------------------------------
. V6.00.52  27.08.1998 Sandra Barcham
.           Changed new asset file
. V6.00.51  12.11.1997 Sandra Barcham
.           Recompiled for change to apscafaf (sort key added)
.           srf 621865
. V6.00.50  27.03.1997 Sandra Barcham
.           Change dsmaster to fmstdsaf
.           srf 619405
. V6.00.49  20.03.1997 Sandra Barcham
.           Check g/l batch file to see if in use
.           srf 619421
. V6.00.48  07.08.1996 B.G.Ackland
.           New Fields in APSAPYFD - Recompile
.           quote 8691
. V6.00.47  11.09.1996 Sandra Barcham
.           Fix I * C when updating after printing batch
.           srf 616745 & 641977
. V6.00.46  26.07.1996 Sandra Barcham
.           When changing credit note totals if not gst do not enter
. V6.00.45  01.04.1996 Sandra Barcham
.           Don't read new inventory if not available
.           srf 614760
. V6.00.44  15.11.1995 Sandra Barcham
.           Don't check control accounts if no posting accounts
.           srf 612430
. V6.00.43  01.08.1995 B.G.Ackland
.           Compiled with correct IBABATFD for Alphanumeric Dissections
. V6.00.42  19.04.1995 Robert Sumsion
.           Modified so that the batches such as Cancelled cheque,Reinstatements
.           which have a different batch number to the payments batch which is
.           entry method into the non-specific creditor details.  Therefore use
.           the fmsbnkaf file to get the payments batch and use this to read the
.           non-specific creditor details information.
.           srf 126263
. V6.00.41  06.04.1995 Robert Sumsion
.           Remove all use of APSTRN file.
.           srf 135628
. V6.00.40  03.04.1995 Robert Sumsion
.           Don't Open Indexes directly from SIN - Check the parameter first.
.           srf 133525  Quote 8285
. V6.00.39  22.03.1995 Robert Sumsion
.           Don't Allow Duplicate Invoice References to be entered if
.           FMCODUPI = 1 for yes.
.           srf 133525  Quote 8285
. V6.00.38  16.03.1995 Robert Sumsion
.           Problem with the modifcation of invoice quantities fixed -
.           required a new screen also.
. V6.00.37  10.06.1994 Robert Sumsion
.           Recompiled for changes to apsapyaf file includes
.           srf 129416
. V6.00.36  29.03.1994 Robert Sumsion
.           Fixed Day next month is not working correclty.
.           srf 123953
. V6.00.35  03.02.1994 Robert Sumsion
.           Recompiled.
. V6.00.34  02.02.1994 R.Sumsion
.           Recompiled for changes to the APS17CD include. ie. Allowing update
.           of batches when the period is locked.
.           srf 126933
. V6.00.33  08.10.1993 S.Barcham
.           Recompiled for APSMASKY search
.           srf 122963
. V6.00.32  10.08.1993 Neeriem Dye
.           Modified terms to work for day this/next month
.           Modified to handle transaction code = transaction description
. V6.00.31  19.07.1993 Neeriem Dye
.           Added update of FMFPCOM
.           srf 123713
. V6.00.30  08.07.1993 Neeriem Dye
.           Cleaned up S&I Interface
.           srf 123074
.-------------------------------------------------------
CHGTOT    FORM      1
F12P4     FORM      12.4
F12P4A    FORM      12.4
F12P4B    FORM      12.4
HASABN    FORM      1           * Has ABN Number                       *I-14452
NOGST     FORM      1
PAYASGO   FORM      1
SAVECGS   DIM       6
SAVEDESC  DIM       30
SAVEPAYG  DIM       1
SIUSGST   FORM      12.2
SP11      INIT      "           "                                      *I-14452
SP19      INIT      "                   "
SP22      INIT      "                      "
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS17
.   Function      :   Credit Note Input                       
.   Generated  On :   07/04/2011
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       AMSNEWFD/INC
          INC       APSAPYDF    
          INC       APSAPYFD/INC
          INC       APSBCHDF    
          INC       APSBMFFD/INC
          INC       APSCAFFD/INC
          INC       APSCIOFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSISLFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSNSCFD/INC
          INC       APSORDFD/INC
          INC       APSPPDFD/INC
          INC       APSSUBFD/INC
          INC       APSTMPDF    
          INC       FMSAMADF    
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSDISFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSRESFD/INC
          INC       FMSTDSFD/INC
          INC       FMSTUPFD/INC
          INC       IBABATFD/INC
          INC       IBACONFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       IBAPRNFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIHFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINORIFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSCMFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINWARFD/INC
.=========================
.Local Variable Definition
.-------------------------
BATCHCAL  FORM     12.2 * Scr 00 Fld    13
FLAGINST  FORM      1 * Scr 00 Fld    24
FLAGGST   FORM      1 * Scr 01 Fld     5
INVKEY40  DIM      40 * Scr 01 Fld    24
INVTOTAL  FORM     12.2 * Scr 01 Fld    28
LASTCRED  DIM      36 * Scr 01 Fld    30
LASTINV   DIM      15 * Scr 01 Fld    31
LASTTOT   FORM     10.2 * Scr 01 Fld    32
DOCTOTAL  FORM     12.2 * Scr 01 Fld    60
PAYASTOT  FORM     12.2 * Scr 01 Fld    62
TOTALALL  FORM     12.2 * Scr 02 Fld    23
.
.    Multi Item Key Fields Scr 02 Fld    29
.-------------------------------------------------------
APIN1NAM  INIT      "APIN1"
APIN1END  FORM      1   * End Display
APIN1SNO  FORM      5   * Number of Items on the Screen
APIN1MKY  DIM       127 * Match Key 
APIN1EKY  DIM       127 * End Key
APIN1SKY  DIM       127 * Start Key
APIN1IDX  INIT      " 132 UC1-5"
APIN1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
APIN1FNM  DIM       8  * Filename
APIN1CNT  FORM      3  * Number of Items on Screen
LEDACDES  DIM      50 * Scr 02 Fld    31
TRANDESC  DIM      75 * Scr 02 Fld    32
TRANDES2  DIM      40 * Scr 02 Fld    33
SUPDES1   DIM      60 * Scr 02 Fld    42
SUPDES2   DIM      60 * Scr 02 Fld    43
TRANAMT   FORM     12.2 * Scr 02 Fld    54
RECQTY    FORM     10.2 * Scr 04 Fld    26
INVQTY    FORM     10.2 * Scr 04 Fld    27
TOTALLOC  FORM     12.2 * Scr 06 Fld    30
QTYINVCD  FORM     10 * Scr 07 Fld     7
SINTOTAM  FORM     12.2 * Scr 07 Fld    51
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS17"
PRGNAM    INIT      "Credit Note Input                       "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      CKPPY000
          CALL      SC00L000
          CLOSE     APIN1FL1,DELETE
.
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA1,"apscioaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA2,"apscioaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsislaf";
          OPEN      APSISLA1,"apsislaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA1,"apsnscaf"
          DISPLAY   *P56:24,"Opening apsnscaf";
          OPEN      APSNSCA2,"apsnscaf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA1,"apsordaf"
          DISPLAY   *P56:24,"Opening apsppdaf";
          OPEN      APSPPDA1,"apsppdaf"
          DISPLAY   *P56:24,"Opening apssubaf";
          OPEN      APSSUBA1,"apssubaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsbcfaf";
          OPEN      FMSBCFA1,"fmsbcfaf"
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmsdisaf";
          OPEN      FMSDISA1,"fmsdisaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening fmsresaf";
          OPEN      FMSRESA1,"fmsresaf"
          DISPLAY   *P56:24,"Opening  fmstdsaf           ";
          OPEN      FMSTDSA1,"fmstdsaf"          
          DISPLAY   *P56:24,"Opening  fmstupaf           ";
          OPEN      FMSTUPA1,"fmstupaf"          
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
          DISPLAY   *P56:24,"Opening  ihapassf           ";
          OPEN      IHAPASS1,"ihapassf"          
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA4,"sincicaf"
.--------------------------------------------------------
. Initialise Batch Screen Unique ID                          
.--------------------------------------------------------
          MOVE     ZERO,APIN1SNO
          MOVE     "02   29",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,APIN1SNO
            ENDIF
          ENDIF
          PACK      APIN1FNM,ANST,APIN1NAM,PORT
          REP       " 0",APIN1FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      APIN1FL1,APIN1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     APIN1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,APIN1FNM,APIN1IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",APIN1FNM;
          EXECUTE   KEY80,TASKID
          OPEN      APIN1FL1,APIN1FNM
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Batch Header Details               
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Credit Note Header                 
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Credit Note Details                
          ENDIF
          MATCH     "04",SCRID
          IF         @EQUAL
            CALL       PS04L000   * Sundry Credit Details              
          ENDIF
          MATCH     "06",SCRID
          IF         @EQUAL
            CALL       PS06L000   * Credit Note Header                 
          ENDIF
          MATCH     "07",SCRID
          IF         @EQUAL
            CALL       PS07L000   * New Purchase Order Transaction     
          ENDIF
          RETURN
.--------------------------------
. Screen - Batch Header Details               
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      FMSCON00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Batch Header Details               
.-------------------------------------------------------
CF00L000
          MOVE      SP70,APIMBCH 
          MOVE      SP70,APBMADT 
          MOVE      ZERO,APBMTOT 
          MOVE      SP70,APBMLED 
          MOVE      SP70,APBMDIS 
          MOVE      SP70,APBMRES 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Batch Header Details               
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,BATCHCAL
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APBMDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SECUSER 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KAPBCH00
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      OVRCD,ACCEPT
          MOVE      APIMBCH,VAR      
          CALL      DISPITEM
          CALL      GBAT0000
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      BATCHCAL,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SECUSER,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Batch Header Details               
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Batch Header Details               
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Batch Header Details               
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Batch Header Details               
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L101,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L115
          GOTO     PS00L999
.
PS00L101
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          CALL      GBDES000
          MOVE      APBMLED,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      APBMDIS,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      APBMRES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      BATCHCAL,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          UNPACK    PERSDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      PERDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      SECUSER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      FLAGINST,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Batch Header Details               
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L108,SF00L109:
                            SF00L110,SF00L111,SF00L112,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      POSTHEAD
          GOTO      SF00L001
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELBCH00
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PEREDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERSDAT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,PERDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      APDATE00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    PERSDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      PERDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EBTOT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLAA00
          MOVE      FMLALEDG,APBMLED
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      GBDES000
          MOVE      APBMLED,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMDSA00
          MOVE      FMDSCODE,APBMDIS
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMDIS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMRSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMRSA00
          MOVE      FMRSCODE,APBMRES
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      APBMRES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMRSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      UPDT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L109
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      APSBCHPR
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
.
SF00L110
          CALL      UUAPBM1 
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L111
          CALL      UUAPBM1 
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L112
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      LSTBCH00
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          GOTO      SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Credit Note Header                 
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Credit Note Header                 
.-------------------------------------------------------
CF01L000
          MOVE      SP70,APIMCRD 
          MOVE      SP70,APIMDOC 
          MOVE      SP70,APIMDDT 
          MOVE      SP70,APIMREF 
          MOVE      SP70,APIMPDT 
          MOVE      SP70,APIMIDT 
          MOVE      SP70,APIMTER 
          MOVE      ZERO,APIMTOT 
          MOVE      ZERO,APIMGST 
          MOVE      SP70,APIMCM1 
          MOVE      SP70,APIMCM2 
          MOVE      SP70,APIMICM 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Credit Note Header                 
.--------------------------------------------------------
KY01L000
.
KY01L110
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACN2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACA1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACA2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACA3 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACPC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACTEL
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACFAX
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APMACON 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      DISPLAST
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KAPMA000
          BRANCH    EXIT,KY01L900,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      APIMCRD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACN2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACA1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACA2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACA3,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACPC,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACTEL,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACFAX,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APMACON,VAR      
            CALL      DISPITEM
          ENDIF
.
KY01L120
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EDOCR000
          BRANCH    EXIT,KY01L110,KY01L900
          MOVE      ZERO,ACCEPT
          MOVE      APIMDOC,VAR      
          CALL      DISPITEM
.
KY01L130
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      ECRDT000
          BRANCH    EXIT,KY01L120,KY01L900
          MOVE      ZERO,ACCEPT
          UNPACK    APIMDDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
KY01L140
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "2",CKEYTYP
          CALL      KAPIM000
          BRANCH    EXIT,KY01L130,KY01L900
          MOVE      OVRCD,ACCEPT
          MOVE      APIMREF,VAR      
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Credit Note Header                 
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Credit Note Header                 
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Credit Note Header                 
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Credit Note Header                 
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L101,PS01L999,PS01L102,PS01L103:
                            PS01L104,PS01L105,PS01L106,PS01L107:
                            PS01L108,PS01L109,PS01L110,PS01L999:
                            PS01L999,PS01L999,PS01L111,PS01L112:
                            PS01L113,PS01L114,PS01L115,PS01L116:
                            PS01L117,PS01L118,PS01L119,PS01L120:
                            PS01L121,PS01L122,PS01L123,PS01L124:
                            PS01L999,PS01L125,PS01L126,PS01L127:
                            PS01L128,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L129:
                            PS01L999,PS01L130
          GOTO     PS01L999
.
PS01L101
          MOVE      FLAGGST,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      APMACA1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      APMACA2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      APMACA3,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      APMACPC,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      APMACTEL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      APMACFAX,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      APMACON,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      APIMTER,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          MOVE      APPPDES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          CALL      HEDTOT00
          GOTO     PS01L999
.
PS01L116
          MOVE      INVKEY40,VAR     
          CALL      DISPITEM
          CALL      HEDTOT00
          GOTO     PS01L999
.
PS01L117
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          CALL      HEDTOT00
          GOTO     PS01L999
.
PS01L118
          MOVE      APIMCM1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      APIMCM2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L120
          MOVE      INVTOTAL,VAR     
          CALL      DISPITEM
          CALL      HEDTOT00
          GOTO     PS01L999
.
PS01L121
          MOVE      ALLTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L122
          MOVE      LASTCRED,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L123
          MOVE      LASTINV,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L124
          MOVE      LASTTOT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L125
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L126
          MOVE      BATCHCAL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L127
          MOVE      APBMBCH,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L128
          MOVE      APIMICM,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L129
          MOVE      DOCTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L130
          MOVE      PAYASTOT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Credit Note Header                 
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L104,SF01L105:
                            SF01L106,SF01L006,SF01L107,SF01L006:
                            SF01L108,SF01L109,SF01L110,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L111,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L104,SF01L105:
                            SF01L106,SF01L020,SF01L107,SF01L020:
                            SF01L108,SF01L109,SF01L110,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L111,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DAPIM000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L103
          CALL      WAPIM000
          MOVE      ONE,EXIT
          GOTO      SF01L999
.
SF01L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPYDT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EINDT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,APPPDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ETERM000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      APIMTER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APPPDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EITOT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          CALL      HEDTOT00
          GOTO     SF01L001
.
SF01L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGST0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
            BRANCH    EXIT,SF01L108,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          CALL      HEDTOT00
          GOTO     SF01L001
.
SF01L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EREM1000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L109
            ENDIF
            BRANCH    EXIT,SF01L109,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      APIMCM1,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L110
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EREM2000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L110
            ENDIF
            BRANCH    EXIT,SF01L110,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      APIMCM2,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L111
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KICM0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L111
            ENDIF
            BRANCH    EXIT,SF01L111,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      APIMICM,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Credit Note Details                
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Credit Note Details                
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Credit Note Details                
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Credit Note Details                
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Credit Note Details                
.---------------------------------------------------------
LM02L000
.---------------------------------------------------------
. Load for :    29 Unique ID                          
.---------------------------------------------------------
          UNPACK    SP70,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE      KEY51,APIN1EKY
          STRIP     APIN1SKY
          SETLPTR   APIN1EKY,40
          MOVE      APIN1EKY,APIN1SKY
          CALL      RDAPIN1 
          IF        OVRCD=0
            CALL      RPAPIN1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP02L000
          MOVE     ZERO,APIN1CNT
          MOVE     ZERO,APIN1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP02L600
          MATCH    PRGID,SCPSPID
          GOTO     DP02L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP02L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP02L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                           DP02L101,DP02L102,DP02L103,DP02L104:
                            DP02L105,DP02L010,DP02L106,DP02L107:
                            DP02L108,DP02L109,DP02L110,DP02L010:
                           DP02L010,DP02L111,DP02L112,DP02L010:
                           DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L010,DP02L010,DP02L010:
                            DP02L010,DP02L113
          GOTO      DP02L010
.
DP02L101
          PACK      APIN1MKY,SP70,SP70
          CALL      UPTAPIN1
          IF        APIN1END=0
            CALL      RKAPIN1 
            IF        OVRCD=0
              PACK      APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
              MATCH     APIN1EKY,APIN1MKY
              IF        @EQUAL
                MOVE      ZERO,APIN1END
                ADD       ONE,APIN1CNT
                CALL      UPTAPIN1
          CALL      RDET0000
                MOVE      APINLIN,VAR      
                CALL      DISPITEM
              ELSE
                MOVE      ONE,APIN1END
              ENDIF
            ELSE
              MOVE      ONE,APIN1END
            ENDIF
          ENDIF
          IF        APIN1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L102
          IF        APIN1END=0
            MOVE      APINORD,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L103
          IF        APIN1END=0
            MOVE      LEDACDES,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L104
          IF        APIN1END=0
            MOVE      TRANDESC,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L105
          IF        APIN1END=0
            MOVE      TRANDES2,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L106
          IF        APIN1END=0
            MOVE      APINDES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L107
          IF        APIN1END=0
            MOVE      APINCAT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L108
          IF        APIN1END=0
            MOVE      APINQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L109
          IF        APIN1END=0
            MOVE      APINUCT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L110
          IF        APIN1END=0
            MOVE      APINAMT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L111
          IF        APIN1END=0
            MOVE      SUPDES1,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L112
          IF        APIN1END=0
            MOVE      SUPDES2,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
.
DP02L113
          IF        APIN1END=0
            MOVE      TRANAMT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP02L010
DP02L600
          MATCH    "APIN1",NAMSSFFI
          GOTO     DP02L605 IF NOT EQUAL
          CALL      UPDTOT00
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SP1,VAR          
            CALL      DISPITEM
          ENDIF
          GOTO     DP02L999
DP02L605
DP02L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP02L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     FP02L105 IF NOT EQUAL
          PACK     KEY51,APIN1SKY,SP70
          CALL     RDAPIN1  * Start
          IF       OVRCD=0
            CALL     RPAPIN1  * Start
          ENDIF
          CALL     DP02L000
          GOTO     FP02L999
FP02L105
FP02L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP02L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     LP02L105 IF NOT EQUAL
          PACK     KEY51,APIN1SKY,Z70
          CALL     RSAPIN1  * End
          IF       OVRCD=1
            CALL     RPAPIN1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APIN1SNO
            CALL     RPAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP02L000
          GOTO     LP02L999
LP02L105
LP02L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP02L000
.
          MATCH    "APIN1",NAMSSFFI
          GOTO     PP02L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP02L105
          CALL      RFTAPIN1
          BRANCH   OVRCD,PP02L115
          MOVE      APIN1MKY,KEY51 
          CALL      RSAPIN1 
PP02L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=APIN1SNO
            CALL     RPAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP02L000
          GOTO     PP02L999
PP02L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<APIN1SNO
            CALL     RKAPIN1 
            IF       OVRCD=1
              MOVE     APIN1SNO,SECTOR
            ENDIF
            PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
            MATCH    APIN1EKY,APIN1MKY
            IF       !@EQUAL
              MOVE     APIN1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP02L999
PP02L120
PP02L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP02L000
          MATCH    "APIN1",NAMSSFFI
          GOTO     NP02L115 IF NOT EQUAL
NP02L105
          CALL     RKAPIN1 
          BRANCH   OVRCD,NP02L110
          PACK     APIN1MKY,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN                                
          MATCH    APIN1EKY,APIN1MKY
          GOTO     NP02L110 IF NOT EQUAL
          CALL     RPAPIN1 
          CALL     DP02L000
          GOTO     NP02L999
NP02L110
          CALL     RPAPIN1 
          BEEP
          GOTO     NP02L999
NP02L115
NP02L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT02L000
CT02L105
CT02L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Credit Note Details                
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    29 Unique ID                          
.---------------------------------------------------------
UPTAPIN1
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      APIN1FL1,KEY5;ANS
          IF        @OVER
            WRITE     APIN1FL1,KEY5;SCPSROW,SCPSCOL,APIN1MKY
          ELSE
            UPDATE    APIN1FL1;SCPSROW,SCPSCOL,APIN1MKY
          ENDIF
          RETURN
RDTAPIN1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      APIN1FL1,KEY5;SCPSROW,SCPSCOL,APIN1MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTAPIN1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      APIN1FL1,KEY5;;
          READKS    APIN1FL1;SCPSROW,SCPSCOL,APIN1MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,APIN1MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Credit Note Details                
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      FP02L000
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Credit Note Details                
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L103,PS02L104,PS02L105:
                            PS02L106,PS02L107,PS02L108,PS02L109:
                            PS02L110,PS02L111,PS02L112,PS02L113:
                            PS02L114,PS02L115,PS02L999,PS02L116:
                            PS02L117,PS02L118,PS02L119,PS02L120:
                            PS02L121,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                           PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999,PS02L999,PS02L999:
                            PS02L999,PS02L999
          GOTO     PS02L999
.
PS02L101
          MOVE      APIMCRD,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      APMACA1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      APMACA2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      APMACA3,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      APMACPC,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      APMACTEL,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      APMACFAX,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          MOVE      APMACON,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      APIMREF,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          UNPACK    APIMTDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          MOVE      APIMTER,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L116
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L117
          MOVE      APIMDIS,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L118
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L119
          CALL      CALCA000
          MOVE      TOTALALL,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L120
          CALL      UPDTOT00
          MOVE      SP1,VAR          
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L121
          MOVE      SIORNAME,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Credit Note Details                
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L103,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L006,SF02L006,SF02L006:
                           SF02L006,SF02L104,SF02L105,SF02L106:
                            SF02L006,SF02L006,SF02L107,SF02L108:
                            SF02L109,SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L103,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L020,SF02L020:
                           SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      FP02L000
          GOTO     SF02L001
.
SF02L101
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      SAVE0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L102
          CALL      DELORD00
          CALL      UPDTOT00
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L103
          CALL      SELECTED
          BRANCH    EXIT,SF02L001
          COMPARE   ONE,ACCEPT
          GOTO      SF02L001 IF EQUAL
          CALL      RDTAPIN1
          IF        OVRCD=1
            BEEP
            GOTO      SF02L001
          ENDIF
          MATCH     SP70,APIN1MKY
          IF        @EQUAL
            BEEP
            GOTO      SF02L001
          ENDIF
          MOVE      APIN1MKY,KEY51 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      DETS0000
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTAPIN1
          IF        OVRCD=1
            CALL      FP02L000
          ELSE
            MOVE      APIN1MKY,KEY51 
            CALL      RSAPIN1 
            CALL      RPAPIN1 
            CALL      DP02L000
          ENDIF
          GOTO     SF02L001
.
SF02L104
          CALL      DITEM000
          GOTO      SF02L001
.
SF02L105
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      NP02L000
          GOTO     SF02L001
.
SF02L106
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      PP02L000
          GOTO     SF02L001
.
SF02L107
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      FP02L000
          GOTO     SF02L001
.
SF02L108
          MOVE      "APIN1",NAMSSFFI
          MOVE      "   29",ITMSSFFI
          CALL      LP02L000
          GOTO     SF02L001
.
SF02L109
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      ADDORD00
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      DF02L000
          GOTO      SF02L001
SF02L990  MOVE      ONE,EXIT * Exit Char Restart
SF02L999  RETURN
.--------------------------------
. Screen - Sundry Credit Details              
.--------------------------------
SC04L000
SC04L100
          MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC04L200
          CALL      CF04L000 * Clear Fields
SC04L300
          CALL      KY04L000 * Enter Key Fields
          BRANCH    EXIT,SC04L999,SC04L999
SC04L400
          CALL      WP04L000 * Load any WP Details
SC04L500
          CALL      LM04L000 * Load any Batch Details
SC04L600
          CALL      DF04L000 * Display Fields
SC04L700
          CALL      SF04L000 * Select Fields
          BRANCH    EXIT,SC04L100,SC04L100,SC04L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC04L800
SC04L900
SC04L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Sundry Credit Details              
.-------------------------------------------------------
CF04L000
CF04L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Sundry Credit Details              
.--------------------------------------------------------
KY04L000
          MOVE      ZERO,EXIT
          GOTO      KY04L999
.
KY04L900  MOVE      ONE,EXIT
KY04L999  RETURN
.---------------------------------------------------------
. Load WP files for : Sundry Credit Details              
.---------------------------------------------------------
WP04L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Sundry Credit Details              
.---------------------------------------------------------
LM04L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Sundry Credit Details              
.---------------------------------------------------------
DF04L000
          BRANCH   ACCEPT,DF04L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF04L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF04L900
          MATCH    PRGID,SCPSPID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF04L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF04L010 IF NOT EQUAL
.
          CALL     PS04L000 * Display Field
          GOTO     DF04L010
DF04L900
DF04L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Sundry Credit Details              
.---------------------------------------------------------
PS04L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS04L999,PS04L999,PS04L101,PS04L102:
                            PS04L103,PS04L104,PS04L105,PS04L999:
                            PS04L999,PS04L999,PS04L106,PS04L107:
                            PS04L108,PS04L109,PS04L110,PS04L111:
                            PS04L112,PS04L113,PS04L114,PS04L999:
                           PS04L999,PS04L999,PS04L999,PS04L999:
                           PS04L999,PS04L115,PS04L116,PS04L117:
                            PS04L118,PS04L119,PS04L120,PS04L121:
                            PS04L122,PS04L123
          GOTO     PS04L999
.
PS04L101
          MOVE      APINLED,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L102
          MOVE      APINACC,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L103
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L104
          MOVE      APINRES,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L105
          MOVE      APINDES,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L106
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L107
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L108
          MOVE      FMAMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L109
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L110
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L111
          MOVE      FMCSBNK,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L112
          MOVE      BANKNAME,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L113
          MOVE      FMCSCRD,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L114
          MOVE      CREDNAME,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L115
          MOVE      RECQTY,VAR       
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L116
          MOVE      INVQTY,VAR       
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L117
          MOVE      FMCSDIS,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L118
          MOVE      DISCNAME,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L119
          MOVE      FMCSAGST,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L120
          MOVE      AGSTNAME,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L121
          MOVE      APINCGS,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L122
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS04L999
.
PS04L123
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     PS04L999
PS04L999
          RETURN
.---------------------------------------------------------
. Selections for : Sundry Credit Details              
.---------------------------------------------------------
SF04L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF04L001  BRANCH   ACCEPT,SF04L020
.
SF04L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L006,SF04L101,SF04L102,SF04L103:
                            SF04L104,SF04L105,SF04L106,SF04L107:
                            SF04L108,SF04L006,SF04L109,SF04L006:
                            SF04L006,SF04L006,SF04L006,SF04L006:
                            SF04L006,SF04L006,SF04L006,SF04L006:
                           SF04L006,SF04L006,SF04L006,SF04L006:
                           SF04L006,SF04L006,SF04L006,SF04L006:
                            SF04L006,SF04L006,SF04L006,SF04L110:
                            SF04L006,SF04L111
SF04L006  BEEP
          GOTO     SF04L005
SF04L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF04L090
          MATCH    PRGID,SCSLPID
          GOTO     SF04L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF04L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF04L020,SF04L020,SF04L102,SF04L103:
                            SF04L104,SF04L105,SF04L106,SF04L020:
                            SF04L020,SF04L020,SF04L109,SF04L020:
                            SF04L020,SF04L020,SF04L020,SF04L020:
                            SF04L020,SF04L020,SF04L020,SF04L020:
                           SF04L020,SF04L020,SF04L020,SF04L020:
                           SF04L020,SF04L020,SF04L020,SF04L020:
                            SF04L020,SF04L020,SF04L020,SF04L110:
                            SF04L020,SF04L111
          GOTO     SF04L020
SF04L090  MOVE     ZERO,ACCEPT
          GOTO     SF04L001
.
SF04L101
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L102
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMLADESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMLA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L102
            ENDIF
            BRANCH    EXIT,SF04L102,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINLED,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMLADESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L103
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMAMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSBNK 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,BANKNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSCRD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CREDNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSDIS 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DISCNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMCSAGST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,AGSTNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      FMAMTY01
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EACCT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L103
            ENDIF
            BRANCH    EXIT,SF04L103,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          CALL      GETCON00
          MOVE      APINACC,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMAMDESC,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSBNK,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      BANKNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSCRD,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CREDNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSDIS,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DISCNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMCSAGST,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      AGSTNAME,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L104
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMDS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L104
            ENDIF
            BRANCH    EXIT,SF04L104,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L105
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMRSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFMRS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L105
            ENDIF
            BRANCH    EXIT,SF04L105,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINRES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMRSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      INVDES00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L106
            ENDIF
            BRANCH    EXIT,SF04L106,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINDES,VAR      
          CALL      DISPITEM
          GOTO     SF04L001
.
SF04L107
          CALL      WAPIN000
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L108
          CALL      DAPIN000
          MOVE      ZERO,EXIT
          GOTO      SF04L999
.
SF04L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      K04AMT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L109
            ENDIF
            BRANCH    EXIT,SF04L109,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     SF04L001
.
SF04L110
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,IBGSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGSTC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L110
            ENDIF
            BRANCH    EXIT,SF04L110,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINCGS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      IBGSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF04L001
.
SF04L111
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      K04GST00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF04L111
            ENDIF
            BRANCH    EXIT,SF04L111,SF04L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF04L990 IF EQUAL
          ENDIF
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     SF04L001
SF04L990  MOVE      FOUR,EXIT * Exit Char Exit
SF04L999  RETURN
.--------------------------------
. Screen - Credit Note Header                 
.--------------------------------
SC06L000
SC06L100
          MOVE      "06",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          CALL      SBACK000 * Display Background
.
SC06L200
          CALL      CF06L000 * Clear Fields
SC06L300
          CALL      KY06L000 * Enter Key Fields
          BRANCH    EXIT,SC06L999,SC06L999
SC06L400
          CALL      WP06L000 * Load any WP Details
SC06L500
          CALL      LM06L000 * Load any Batch Details
SC06L600
          CALL      DF06L000 * Display Fields
SC06L700
          CALL      SF06L000 * Select Fields
          BRANCH    EXIT,SC06L100,SC06L100,SC06L200
SC06L800
SC06L900
SC06L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Credit Note Header                 
.-------------------------------------------------------
CF06L000
CF06L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Credit Note Header                 
.--------------------------------------------------------
KY06L000
          MOVE      ZERO,EXIT
          GOTO      KY06L999
.
KY06L900  MOVE      ONE,EXIT
KY06L999  RETURN
.---------------------------------------------------------
. Load WP files for : Credit Note Header                 
.---------------------------------------------------------
WP06L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Credit Note Header                 
.---------------------------------------------------------
LM06L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Credit Note Header                 
.---------------------------------------------------------
DF06L000
          BRANCH   ACCEPT,DF06L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF06L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF06L900
          MATCH    PRGID,SCPSPID
          GOTO     DF06L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF06L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF06L010 IF NOT EQUAL
.
          CALL     PS06L000 * Display Field
          GOTO     DF06L010
DF06L900
DF06L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Credit Note Header                 
.---------------------------------------------------------
PS06L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L101,PS06L102,PS06L103:
                            PS06L104,PS06L105,PS06L106,PS06L107:
                            PS06L108,PS06L109,PS06L999,PS06L110:
                            PS06L111,PS06L112,PS06L113,PS06L114:
                            PS06L115,PS06L116,PS06L117,PS06L999:
                           PS06L118,PS06L119,PS06L120,PS06L121:
                            PS06L122,PS06L123,PS06L124,PS06L999:
                           PS06L999,PS06L125,PS06L126,PS06L127:
                            PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L999:
                           PS06L999,PS06L999,PS06L999,PS06L128:
                            PS06L129
          GOTO     PS06L999
.
PS06L101
          MOVE      APIMCRD,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L102
          MOVE      APMACN1,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L103
          MOVE      APMACN2,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L104
          MOVE      APMACA1,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L105
          MOVE      APMACA2,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L106
          MOVE      APMACA3,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L107
          MOVE      APMACPC,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L108
          MOVE      APMACTEL,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L109
          MOVE      APMACFAX,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L110
          MOVE      APMACON,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L111
          MOVE      APIMREF,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L112
          UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L113
          UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L114
          UNPACK    APIMTDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L115
          MOVE      APIMTER,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L116
          MOVE      APPPDES,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L117
          MOVE      APIMTOT,VAR      
          CALL      DISPITEM
          CALL      ALLTOT00
          GOTO     PS06L999
.
PS06L118
          MOVE      APIMGST,VAR      
          CALL      DISPITEM
          CALL      ALLTOT00
          GOTO     PS06L999
.
PS06L119
          MOVE      APIMCM1,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L120
          MOVE      APIMCM2,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L121
          MOVE      INVTOTAL,VAR     
          CALL      DISPITEM
          CALL      ALLTOT00
          GOTO     PS06L999
.
PS06L122
          MOVE      ALLTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L123
          MOVE      TOTALLOC,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L124
          MOVE      APIMDOC,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L125
          MOVE      APBMTOT,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L126
          MOVE      BATCHCAL,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L127
          MOVE      APBMBCH,VAR      
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L128
          MOVE      DOCTOTAL,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
.
PS06L129
          MOVE      GSTALLOC,VAR     
          CALL      DISPITEM
          GOTO     PS06L999
PS06L999
          RETURN
.---------------------------------------------------------
. Selections for : Credit Note Header                 
.---------------------------------------------------------
SF06L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF06L001  BRANCH   ACCEPT,SF06L020
.
SF06L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                           SF06L006,SF06L006,SF06L006,SF06L006:
                            SF06L006
SF06L006  BEEP
          GOTO     SF06L005
SF06L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF06L090
          MATCH    PRGID,SCSLPID
          GOTO     SF06L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF06L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                           SF06L020,SF06L020,SF06L020,SF06L020:
                            SF06L020
          GOTO     SF06L020
SF06L090  MOVE     ZERO,ACCEPT
          GOTO     SF06L001
SF06L990  MOVE      ONE,EXIT * Exit Char Restart
SF06L999  RETURN
.--------------------------------
. Screen - New Purchase Order Transaction     
.--------------------------------
SC07L000
SC07L100
          MOVE      "07",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   21",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 7",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC07L200
          CALL      CF07L000 * Clear Fields
SC07L300
          CALL      KY07L000 * Enter Key Fields
          BRANCH    EXIT,SC07L999,SC07L999
SC07L400
          CALL      WP07L000 * Load any WP Details
SC07L500
          CALL      LM07L000 * Load any Batch Details
SC07L600
          CALL      DF07L000 * Display Fields
SC07L700
          CALL      SF07L000 * Select Fields
          BRANCH    EXIT,SC07L100,SC07L100,SC07L200
SC07L800
SC07L900
SC07L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : New Purchase Order Transaction     
.-------------------------------------------------------
CF07L000
CF07L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for New Purchase Order Transaction     
.--------------------------------------------------------
KY07L000
          MOVE      ZERO,EXIT
          GOTO      KY07L999
.
KY07L900  MOVE      ONE,EXIT
KY07L999  RETURN
.---------------------------------------------------------
. Load WP files for : New Purchase Order Transaction     
.---------------------------------------------------------
WP07L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : New Purchase Order Transaction     
.---------------------------------------------------------
LM07L000
          RETURN
.---------------------------------------------------------
. Display Fields for : New Purchase Order Transaction     
.---------------------------------------------------------
DF07L000
          BRANCH   ACCEPT,DF07L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF07L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF07L900
          MATCH    PRGID,SCPSPID
          GOTO     DF07L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF07L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF07L010 IF NOT EQUAL
.
          CALL     PS07L000 * Display Field
          GOTO     DF07L010
DF07L900
DF07L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : New Purchase Order Transaction     
.---------------------------------------------------------
PS07L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS07L101,PS07L102,PS07L103,PS07L104:
                            PS07L105,PS07L106,PS07L107,PS07L108:
                            PS07L109,PS07L110,PS07L111,PS07L112:
                            PS07L113,PS07L114,PS07L115,PS07L116:
                            PS07L117,PS07L999,PS07L999,PS07L999:
                            PS07L999,PS07L118,PS07L119,PS07L120:
                            PS07L121,PS07L122,PS07L123,PS07L124:
                            PS07L125,PS07L126,PS07L127,PS07L128:
                            PS07L129,PS07L130,PS07L131,PS07L132:
                            PS07L133,PS07L134,PS07L135,PS07L136:
                            PS07L137,PS07L138,PS07L139,PS07L140:
                            PS07L141,PS07L142,PS07L143,PS07L144:
                            PS07L145,PS07L146,PS07L147
          GOTO     PS07L999
.
PS07L101
          MOVE      APINLED,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L102
          MOVE      APINACC,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L103
          MOVE      APINDIS,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L104
          MOVE      APINRES,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L105
          MOVE      APINDES,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L106
          MOVE      APINCAT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L107
          MOVE      QTYINVCD,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L108
          MOVE      APINUCT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L109
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L110
          MOVE      FMLADESC,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L111
          MOVE      FMAMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L112
          MOVE      FMDSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L113
          MOVE      FMRSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L114
          MOVE      FMCSBNK,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L115
          MOVE      BANKNAME,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L116
          MOVE      FMCSCRD,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L117
          MOVE      CREDNAME,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L118
          MOVE      SIPFITM,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L119
          MOVE      SIPFREC,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L120
          UNPACK    SIPFDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L121
          MOVE      SIPFDEL,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L122
          MOVE      SIPFQTY,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L123
          MOVE      SIPFCST,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L124
          MOVE      SIPFSUT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L125
          UNPACK    SIPFNDD,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L126
          UNPACK    SIPFDUP,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L127
          MOVE      SIPFUDT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L128
          MOVE      SIPCCST,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L129
          MOVE      SIPCPRD,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L130
          MOVE      SIPCDAT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L131
          MOVE      SIPCWAR,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L132
          MOVE      SIPCCAT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L133
          MOVE      SIPCPN,VAR       
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L134
          MOVE      SIPCPD,VAR       
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L135
          MOVE      SIPCCON,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L136
          UNPACK    SIPCCDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L137
          MOVE      SIPCSUT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L138
          UNPACK    SIPCEDD,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L139
          MOVE      SIPCOQT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L140
          MOVE      SIPCECT,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L141
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L142
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L143
          MOVE      SISCDES,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L144
          MOVE      APINCGS,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L145
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L146
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     PS07L999
.
PS07L147
          MOVE      SINTOTAM,VAR     
          CALL      DISPITEM
          GOTO     PS07L999
PS07L999
          RETURN
.---------------------------------------------------------
. Selections for : New Purchase Order Transaction     
.---------------------------------------------------------
SF07L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF07L001  BRANCH   ACCEPT,SF07L020
.
SF07L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF07L006,SF07L006,SF07L006,SF07L006:
                            SF07L101,SF07L006,SF07L102,SF07L103:
                            SF07L104,SF07L006,SF07L006,SF07L006:
                            SF07L006,SF07L006,SF07L006,SF07L006:
                            SF07L006,SF07L105,SF07L106,SF07L107:
                            SF07L006,SF07L006,SF07L006,SF07L006:
                            SF07L006,SF07L006,SF07L006,SF07L006:
                            SF07L006,SF07L006,SF07L006,SF07L006:
                            SF07L006,SF07L006,SF07L006,SF07L006:
                            SF07L006,SF07L006,SF07L006,SF07L006:
                            SF07L006,SF07L006,SF07L006,SF07L006:
                            SF07L006,SF07L006,SF07L006,SF07L108:
                            SF07L006,SF07L109,SF07L006
SF07L006  BEEP
          GOTO     SF07L005
SF07L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF07L090
          MATCH    PRGID,SCSLPID
          GOTO     SF07L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF07L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L101,SF07L020,SF07L102,SF07L103:
                            SF07L104,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L020:
                            SF07L020,SF07L020,SF07L020,SF07L108:
                            SF07L020,SF07L109,SF07L020
          GOTO     SF07L020
SF07L090  MOVE     ZERO,ACCEPT
          GOTO     SF07L001
.
SF07L101
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FMDSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      INVDES00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF07L101
            ENDIF
            BRANCH    EXIT,SF07L101,SF07L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF07L990 IF EQUAL
          ENDIF
          MOVE      APINDES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FMDSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF07L001
.
SF07L102
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      SINQTY00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF07L102
            ENDIF
            BRANCH    EXIT,SF07L102,SF07L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF07L990 IF EQUAL
          ENDIF
          MOVE      QTYINVCD,VAR     
          CALL      DISPITEM
          GOTO     SF07L001
.
SF07L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      SINUCT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF07L103
            ENDIF
            BRANCH    EXIT,SF07L103,SF07L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF07L990 IF EQUAL
          ENDIF
          MOVE      APINUCT,VAR      
          CALL      DISPITEM
          GOTO     SF07L001
.
SF07L104
.
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SINTOTAM
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      SINAMT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF07L104
            ENDIF
            BRANCH    EXIT,SF07L104,SF07L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF07L990 IF EQUAL
          ENDIF
          MOVE      APINAMT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SINTOTAM,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF07L001
.
SF07L105
          CALL      POSAV000
          MOVE      ZERO,EXIT
          GOTO      SF07L999
.
SF07L106
          CALL      PODEL000
          MOVE      ZERO,EXIT
          GOTO      SF07L999
.
SF07L107
          MOVE      ZERO,EXIT
          GOTO      SF07L999
.
SF07L108
.
.
          MOVE      "   49",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,IBGSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGSTP000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF07L108
            ENDIF
            BRANCH    EXIT,SF07L108,SF07L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF07L990 IF EQUAL
          ENDIF
          MOVE      APINCGS,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   49",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      IBGSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF07L001
.
SF07L109
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      SINGST00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF07L109
            ENDIF
            BRANCH    EXIT,SF07L109,SF07L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF07L990 IF EQUAL
          ENDIF
          MOVE      APINGST,VAR      
          CALL      DISPITEM
          GOTO     SF07L001
SF07L990  MOVE      ONE,EXIT * Exit Char Restart
SF07L999  RETURN
.@@@@@ Function Restart Point @@@@@
.**********************************************************************
. Check if proposed payments in progress (Exit program if so)
. General Routine (nb : CKPPI000 + CKPPU000 is for Invoice Input)
.**********************************************************************
CKPPY000  OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*107,IBCNUBAS
          MOVE      IBCNUBAS,BASFLAG
          MOVE      SP3,BASDESC
          IF        BASFLAG=1
            MOVE      "BAS",BASDESC
          ENDIF
.
          MOVE      "9999999999999999999999999999999999999999",KEY40
          CALL      RDAPIM1            * check if proposed payments active
          BRANCH    OVRCD,CKPPY999
.
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO50
          PACK      FMCOTACC,FMCOTACC,SP70
          REP       " 0",FMCOTACC
.
          MATCH     "3",FMCOTACC       * full access allowed ?
          GOTO      CKPPY999 IF EQUAL
.
          MOVE      "ACCESS DENIED - Proposed Payments In Progress - ",DISPMSG
          CALL      MESSAGE1
.
          MATCH     "1426",PASSCODE    * sneaky delete of payments file
          GOTO      CKPPY900 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKPPY900 IF NOT EQUAL
.
          MOVE      "HELLO IBA - Delete Proposed Payments File ? ",DISPMSG
          CALL      MESSAGE4           * does iba want to delete auto pay file ?
          BRANCH    EXIT,CKPPY999
.
          CALL      DELAP000           * delete file if possible
          GOTO      CKPPY000
.
CKPPY900
          CLOCK      FORK,KEY2         * exit program
          MATCH      " 0",KEY2
          IF         @EQUAL
            CHAIN       PGM
          ELSE
            STOP
          ENDIF
.
CKPPY999  READ       CONTROLF,SIXTY3;*85,INCOSTYP
          RETURN
.
.----------------------------------------------------------------------
. Read FMS Control File Parameters
.----------------------------------------------------------------------
FMSCON00  CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CALL      RDFMCO66
.
          READ       CONTROLF,TWENTY3;*95,HACCNT
          READ       CONTROLF,ZERO;*85,IBCNUGST
.
          PACK       KEY2,SP70
          CALL       RSFMLA1
          CALL       RKFMLA1
          BRANCH     OVRCD,FMSERR01
.
FMSCON10  MATCH      SP70,FMLABNK
          GOTO       FMSERR02 IF EQUAL
          MATCH      SP70,FMLACRD
          GOTO       FMSERR03 IF EQUAL
          MATCH      SP70,FMLAAGST
          GOTO       FMSERR04 IF EQUAL
.
          CALL       RKFMLA1
          COMPARE    ZERO,OVRCD
          GOTO       FMSCON10 IF EQUAL
.
          RETURN
.
FMSERR01  DISPLAY    *P1:24,*EL,"No Ledgers Found - ";
          CALL       HITENTER
          GOTO       FATALERR
.
FMSERR02  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"Bank Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSERR03  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"Creditors Control Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSERR04  CALL       FMSCOS00
          BRANCH     EXIT,FMSCOS99
          DISPLAY    *P1:24,*EL,"G.S.T. Control Account Missing for Ledger ":
                     FMLALEDG," - ";
          CALL       HITENTER
          MATCH      "*",ANS
          IF         @EQUAL
            MATCH      "1426",PASSCODE
            RETURN     IF EQUAL
          ENDIF
          GOTO       FATALERR
.
FMSCOS00  MOVE       ONE,EXIT
          PACK       KEY15,FMLALEDG,ONE,SP70
          CALL       RSFMAM2
          CALL       RKFMAM2
          BRANCH     OVRCD,FMSCOS99
.
          MATCH      "6",FMAMTYPE
          RETURN     IF NOT LESS
.
          MOVE       ZERO,EXIT
.
FMSCOS99  RETURN
.----------------------------------------
. Read Batch Header Details
.----------------------------------------
GBAT0000
          PACK      KEY5,APBMBCH       * check if batch exists
          CALL      RDAPBM1
          BRANCH    OVRCD,GBAT5000
.
          MOVE      APBMLED,KEY2
          CALL      RDFMLA1
          MOVE      APBMDIS,KEY5
          CALL      RDFMDS1
          MOVE      APBMRES,KEY4
          CALL      RDFMRS1
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
          MOVE      APBMOPR,KEY4
          CALL      RDPASS1
.
. Calculate Batch Total
.----------------------
          MOVE      ZERO,ACCEPT
          MOVE      ZERO,OVRCD
          MOVE      ZERO,BATCHCAL
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
GBAT0150
          CALL      RKAPIM1
          BRANCH    OVRCD,GBAT9999
          MATCH     APBMBCH,APIMBCH
          GOTO      GBAT9999 IF NOT EQUAL
          ASSIGN    APIMTOT+APIMGST-APIMDIS+BATCHCAL,BATCHCAL
          GOTO      GBAT0150
.
. Insert Setup Defaults
.----------------------
GBAT5000  MOVE      ONE,ACCEPT
.
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMLALEDG,APBMLED
.
          MOVE      SP70,KEY5
          CALL      RSFMDS1
          CALL      RKFMDS1
          MOVE      FMDSCODE,APBMDIS
.
          MOVE      SP70,KEY4
          CALL      RSFMRS1
          CALL      RKFMRS1
          MOVE      FMRSCODE,APBMRES
.
GBAT9999  RETURN
.----------------------------------------
. Read Batch Header Details
.----------------------------------------
GBDES000
          BRANCH    ACCEPT,GBDES999         * skip if in accept mode
.
          MOVE      APBMLED,KEY2
          CALL      RDFMLA1
          MOVE      APBMDIS,KEY5
          CALL      RDFMDS1
          MOVE      APBMRES,KEY4
          CALL      RDFMRS1
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
.
GBDES999  RETURN
.----------------------------------------------------------------------
. Save Header Details
.----------------------------------------------------------------------
POSTHEAD  MATCH     "New  ",APBMBCH
          GOTO      PHED0100 IF NOT EQUAL
          MOVE      SP70,APBMUDT
PHED0010
          CALL      RDFMCOCR
          MOVE      FMBCRBAT,APBMBCH
          MATCH     "00000",APBMBCH
          GOTO      PHED0010 IF EQUAL
          PACK      KEY5,APBMBCH
          CALL      RAAPBM1
          COMPARE   ZERO,OVRCD
          GOTO      PHED0010 IF EQUAL         * Must not be on file
          CALL      RAFMBC1
          COMPARE   ZERO,OVRCD
          GOTO      PHED0010 IF EQUAL         * Must not be on file
.
PHED0100  MOVE     APBMBCH,APIMBCH
          PACK     KEY5,APBMBCH
          MOVE     "CR",APBMTYP
          MOVE     SP70,APBMUDT
          CALL     RAAPBM1
          IF       OVRCD=0
            CALL     UPAPBM1
          ELSE
            CALL     WRAPBM1
            CALL     RLAPBM1
          ENDIF
.
          CALL     SC01L000
.
          MOVE      ZERO,BATCHCAL
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
.
PHED1000  CALL      RKAPIM1
          BRANCH    OVRCD,PHED1100
          MATCH     APBMBCH,APIMBCH
          GOTO      PHED1100 IF NOT EQUAL
          ASSIGN    APIMTOT+APIMGST-APIMDIS+BATCHCAL,BATCHCAL
          GOTO      PHED1000
.
PHED1100  MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      APBMBCH,APIMBCH
          MOVE      APIMBCH,VAR
          CALL      DISPITEM
          CALL      DF00L000 * Display Fields
.
          RETURN
.----------------------------------------------------------------------
. Delete Batch
.----------------------------------------------------------------------
DELBCH00
          MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          CALL      DELQST
          COMPARE   ONE,CEXIT
          GOTO      DELBCH90 IF NOT EQUAL
.
          MOVE      APBMBCH,KEY5
          CALL      RDAPBM1
          IF        OVRCD=0
            CALL      DEAPBM1
          ENDIF
.
DELBCH10
          PACK      KEY40,APBMBCH,SP70
          CALL      RSAPIM1
          CALL      RKAPIM1
          BRANCH    OVRCD,DELBCH20
          MATCH     APIMBCH,APBMBCH
          GOTO      DELBCH20 IF NOT EQUAL
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL      DEAPIM1
          GOTO      DELBCH10
DELBCH20
          PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1
          CALL      RKAPIN1
          BRANCH    OVRCD,DELBCH30
          MATCH     APINBCH,APBMBCH
          GOTO      DELBCH30 IF NOT EQUAL
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL      DEAPIN1
          GOTO      DELBCH20
DELBCH30
          MOVE      TWO,EXIT
          GOTO      DELBCH99
.
DELBCH90  MOVE      ONE,EXIT
          CALL      MESSAGE3
          GOTO      DELBCH99
.
DELBCH99  RETURN
.----------------------------------------------------------------------
. Keyin Batch Number (enter=next batch)
.----------------------------------------------------------------------
KAPBCH00
          MOVE      ZERO,CKEYTYP
          MOVE      "CR",APBMTYP
          CALL      KAPBMZ00
          BRANCH    EXIT,KAPBC800,KAPBC999  * Exit 1=null 2=exitchar
KAPBC100  PACK      KEY5,APBMBCH            * Pack Key for Read Lock
          CALL      RLAPBM1                 * Lock Record if On File
          BRANCH    OVRCD,KAPBC999,KAPBC200 * OVRCD 1=Not on File 2=Locked
.                                           * Record Now Lock
          MATCH     "CR",APBMTYP
          GOTO      KAPBC300 IF NOT EQUAL
          MATCH     SP8,APBMUDT
          GOTO      KAPBC700 IF EQUAL
          MATCH     "00000000",APBMUDT
          GOTO      KAPBC700 IF EQUAL
          GOTO      KAPBC750
.
KAPBC200  MOVE      SP70,DISPMSG            * Save Line 24
          CALL      MESSAGE2                * and Prompt for Retry
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      KAPBC100 IF EQUAL       * Retry Read with Lock
          MATCH     ANSX,ANS
          GOTO      KAPBC200 IF NOT EQUAL   * Invalid Entry
          GOTO      KAPBCH00                * Return to Keyin
.
KAPBC300  CLEAR     DISPMSG                 * Save Line 24
          APPEND    "Batch Type Invalid. ",DISPMSG
          APPEND    APBMTYP,DISPMSG
          APPEND    " - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          GOTO      KAPBCH00                * Return to Keyin
.
KAPBC700  MOVE      ZERO,ACCEPT
          MOVE      ZERO,OVRCD
          GOTO      KAPBC900
.-------------------------------------------------
. Batch Already Updated
.-------------------------------------------------
KAPBC750  MOVE      SP70,DISPMSG
          UNPACK    APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          CLEAR     DISPMSG
          APPEND    "Batch Updated on the ",DISPMSG
          APPEND    CPCDATE,DISPMSG
          APPEND    " Changes NOT Possible - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          GOTO      KAPBCH00                * Return to Keyin
.---------------------------------------------------
. Get Next Batch Number (Null Entry)
.---------------------------------------------------
KAPBC800  MOVE      ZERO,EXIT
          MOVE      ZERO,BATCHCAL
          MOVE      "New  ",APBMBCH
          PACK      APBMDAT,CCC,CYY,CMM,CDD
          REP       " 0",APBMDAT              * Date Entered
          MOVE      PASSCODE,APBMOPR
          MOVE      APBMOPR,KEY4
          CALL      RDPASS1
.
          MOVE      SP70,KEY5               * Set up Defaults in case
          MOVE      SP70,KEY4               * They are not entered
          MOVE      SP70,KEY2
          CALL      RSFMDS1
          CALL      RKFMDS1
          CALL      RSFMRS1
          CALL      RKFMRS1
          CALL      RSFMLA1
          CALL      RKFMLA1
          MOVE      FMRSCODE,APBMRES
          MOVE      FMDSCODE,APBMDIS
          MOVE      FMLALEDG,APBMLED
          MOVE      SP70,FMLADESC
          MOVE      SP70,FMDSDESC
          MOVE      SP70,FMRSDESC
.
          MOVE      ONE,ACCEPT
          MOVE      ONE,OVRCD

.
KAPBC900  MOVE      APBMBCH,APIMBCH
          MOVE      SP70,LASTCRED
          MOVE      SP70,LASTINV
          MOVE      ZERO,LASTTOT
.
KAPBC999  RETURN
.
.----------------------------------------------------------------------
. Enter Accounting Period Date
.----------------------------------------------------------------------
APDATE00  MATCH     SP8,APBMADT             * any date entered yet
          IF        @EQUAL
            MOVE      CCC,CCENT
            MOVE      CYY,CYEAR
            MOVE      CMM,CMON
            MOVE      CDD,CDAY * default to todays date
            PACK      APBMADT,CCENT,CYEAR,CMON,CDAY
            REP       " 0",APBMADT
          ELSE
            UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          ENDIF
.
          CALL      KEYDATE                 * keyin posting date
          BRANCH    OVRCD,APDATE00
          BRANCH    CQUEST,APDATE00
          PACK      APBMADT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",APBMADT
.
          ENDSET    FMLALEDG
          APPEND    SP2,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP2,FMLALEDG
          IF        @EQUAL
            MOVE      SP2,KEY2
            CALL      RSFMLA1
            CALL      RKFMLA1
          ELSE
            MOVE      FMLALEDG,KEY2
            CALL      RDFMLA1
          ENDIF
.
          PACK      WORKDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CFYR0000
          IF        EXIT=0
            MOVE      PERDESC,WKDTDESC
            UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            IF        PERLOCK=1
              BEEP
              CLEAR     DISPMSG
              APPEND    "Period is Locked - ",DISPMSG
              RESET     DISPMSG
              CALL      MESSAGE1
              GOTO      APDATE00
            ENDIF
            MOVE      CPCDATE,WKDTPDAT
          ELSE
            MOVE      ERRMSG,DISPMSG
            CALL      MESSAGE1
            GOTO      APDATE00
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Enter Batch Total
.----------------------------------------------------------------------
EBTOT000  IF        ACCEPT=1
            MOVE      ZERO,APBMTOT
          ENDIF
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,APBMTOT
          RETURN
.**********************************************************************
. Batch print routine
.   Requires : APSBCHDF
.              IBACRAFD & IO and CREDMAST open
.              IHAPASSF open
.              IBACODFD & IO
.              IBAPRNFD & IO and IBAPRINT
.**********************************************************************
APSBCHPR  BRANCH    NOPRINT,APBCPR10   * no printer selection ?
          OPEN      IBACODE1,"ibacodef"
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
          CALL      OPNPRINT
.
APBCPR10  MOVE      ZERO,CPAGENO
          CALL      APBF0000           * format batch
          CALL      APBP0000           * print batch
          BRANCH    NOPRINT,APBCPR99   * no printer selection ?
.
          IF        CPAGENO>0
            CALL      SELPRINT
            CALL      CLSPRINT
          ELSE
            MOVE      "Nothing to Print !! - ",DISPMSG
            CALL      MESSAGE1
            CALL      CLSPRINT
          ENDIF
          CLOSE     IBACODE1
...       CLOSE     IBAPRNT1                                          *D-239574
.
          MOVE      ZERO,CPRTFLG    * Make Sure a New Spool File is
          MOVE      SP8,SPLFILE     * Allocated for the Next Print
APBCPR99  RETURN
.
.*********************************************************************
.*                         APBF0000                                  *
.*                  Format the batch data                            *
.*********************************************************************
.
APBF0000  CLEAR     BATDESC
          MATCH      "CR",APBMTYP
          GOTO       APBF1200 IF NOT EQUAL
          MOVE       "Credit Notes      ",BATDESC
          GOTO        APBF2000
.
APBF1200  MATCH      "IN",APBMTYP
          GOTO       APBF1300 IF NOT EQUAL
          MOVE       "Invoices          ",BATDESC
          GOTO        APBF2000
.
APBF1300  MATCH      "PY",APBMTYP
          GOTO       APBF1400 IF NOT EQUAL
          MOVE       "Payments          ",BATDESC
          GOTO        APBF2000
.
APBF1400  MATCH      "CC",APBMTYP
          GOTO       APBF1500 IF NOT EQUAL
          MOVE       "Cancelled Payments",BATDESC
          GOTO       APBF2000
.
APBF1500  MATCH      "PP",APBMTYP
          GOTO       APBF2000 IF NOT EQUAL
          MOVE       "Prompt Payments   ",BATDESC
          GOTO       APBF2000
.
APBF2000  CLEAR      DIM28
.
.----- Format the post date ----
.
          UNPACK     APBMADT,CCENT,CYEAR,CMON,CDAY
          PACK       POSTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          REP        " 0",POSTDATE
.
.----- get the financial period description and end date ----
.
          MOVE      APBMADT,WORKDATE
          PACK      KEY2,APBMLED
          CALL      RDFMLA1
          CALL      CFYR0000
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ENDDATE
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMDAT
          UNPACK     APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       ENTRDATE,CPCDATE,SP70
.
.----- Format the date of entry -----
.
          UNPACK     SP70,CCENT,CYEAR,CMON,CDAY
          REP        " 0",APBMUDT
          MOVE       "Batch Awaiting Update",STATDESC
.
          MATCH      "0000000000",APBMUDT
          GOTO       APBF5000 IF EQUAL
.
          MOVE       "Batch Updated ",STATDESC
          UNPACK     APBMUDT,CCENT,CYEAR,CMON,CDAY
          CALL       PACDATE
          PACK       STATDESC,STATDESC,CPCDATE,SP70
.
.----- get user description -----
.
APBF5000  CLEAR      SECUSER
          PACK       KEY4,APBMOPR
          CALL       RDPASS1
.
APBF9999  RETURN
.
.*********************************************************************
.*                          APBP0000                                 *
.*                     Print a single batch                          *
.*********************************************************************
APBP0000  CALL      IBACLOCK
.
          DISPLAY   *P1:24,*EL,"Printing Batch : ",*V2LON,APBMBCH;
.
          MOVE      ZERO,TOTDEBS       * initialise total debits
          MOVE      SP70,LASTCRD
          MOVE      SP70,LASTDOC
          MOVE      Z70,LASTREF
          CALL      HEAD0000           * print header
.
APBP3000  PACK      KEY51,APBMBCH,SP70
          CALL      RSAPIN1            * go to start of records
.
APBP3100  CALL      RKAPIN1            * go to start of records
          BRANCH    OVRCD,APBP7000     * no more records ?
          MATCH     APINBCH,APBMBCH
          GOTO      APBP7000 IF NOT EQUAL
.
          CALL      PGST0000
.
          MOVE      SP70,APIMTER
          MOVE      ZERO,APIMTOT
          MOVE      ZERO,APIMDIS
          MOVE      ZERO,APIMGST
          PACK      KEY40,APINBCH,APINCRD,APINREF,APINDOC,SP70
          CALL      RDAPIM1
.
          MOVE      APINCRD,LASTCRD
          MOVE      APINDOC,LASTDOC
          MOVE      APINREF,LASTREF
.
          CALL      PLIN0000             * print the report line
          GOTO      APBP3100
.
.---- print totals ----
.
APBP7000  MOVE      "~~~~~~~~~~~~~~~~~~~~",APINREF
          MOVE      "~~~~~~~~~~~~~~~~~~~~",APINDOC
          CALL      PGST0000
          MOVE      FORMAT2,OUTFORM2
          FEDIT     TOTDEBS,OUTFORM2
          PRINT     SP1
          CALL      UND132
          PRINT     *100,"Total : ",*113,OUTFORM2
          CALL      UND132
.
APBP9999  RETURN
.
.**********************************************************************
.  PGST - Print Gst Data                               Called By APBP
.**********************************************************************
PGST0000  MATCH     APINCRD,LASTCRD
          GOTO      PGST1000 IF NOT EQUAL
          MATCH     APINREF,LASTREF
          GOTO      PGST1000 IF NOT EQUAL
          MATCH     APINDOC,LASTDOC
          GOTO      PGST9999 IF EQUAL
.
PGST1000  MATCH     Z70,LASTREF
          GOTO      PGST9999 IF EQUAL
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          MATCH     ANSP,APIMPAYG
          IF        @EQUAL
            ASSIGN    APIMTOT-APIMDIS,APIMTOT
          ELSE
            ASSIGN    APIMTOT-APIMDIS+APIMGST,APIMTOT
          ENDIF
          ADD       APIMTOT,TOTDEBS        * add to debits
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APIMTOT,OUTFORM2
          PRINT     *113,OUTFORM2
.
PGST9999  RETURN
.**********************************************************************
.*                         HEAD0000                                   *
.*                  display the page heading                          *
.**********************************************************************
.
HEAD0000  MOVE      ONE,CNOUNDLN
          MOVE      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",LASTNAME
          PACK      CPHDROPT,SP70
          CALL      HEAD132
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APBMTOT,OUTFORM2
.
          PRINT        "Batch Number : ",APBMBCH:
                   *60,"Post to Date : ",POSTDATE,SP1,PERDESC,"Ending ",ENDDATE:
                    *N,"Batch Type   : ",APBMTYP,SP1,BATDESC:
                   *60,"Entered      : ",ENTRDATE," by ",SECUSER:
                    *N,"Batch Total  : ",OUTFORM2:
                   *60,"Status       : ",STATDESC
          CALL      UND132
.
          MOVE      "Document Ref   ",REFDESC1
          MOVE      "Invoice Number ",REFDESC2
          MATCH     "IN",APBMTYP
          IF        @EQUAL
            MOVE      "Invoice Number ",REFDESC1
            MOVE      "               ",REFDESC2
          ENDIF
          MATCH     "CR",APBMTYP
          IF        @EQUAL
            MOVE      "Credit Note    ",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
          MATCH     "PY",APBMTYP
          IF        @EQUAL
            MOVE      "Payment  Number",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
          MATCH     "CC",APBMTYP
          IF        @EQUAL
            MOVE      "Payment  Number",REFDESC1
            MOVE      "Invoice Number ",REFDESC2
          ENDIF
.
          PRINT     *1,"Creditor Code",*17,"Creditor Name",*50,REFDESC1:
                    *67,REFDESC2,*97,"        Posting":
                    *117,"    Transaction":
                    *N,*1,"Ledger/Account",*16,"Order No",*26,"Catalog":
                    *34,"Quantity":
                    *43," Diss",*49,"Resp",*54,BASDESC:
                    *65,"Transaction Description":
                    *97,"         Amount",*117,"         Amount"
.
          CALL      UND132
.
          ADD       FIVE,CLNO
.
HEAD9999  RETURN
.
.**********************************************************************
.*                         PLIN0000                                   *
.*                 Print the report lines                             *
.**********************************************************************
.
PLIN0000  COMPARE   "55",CLNO            * test for a full page
          CALL      UND132 IF NOT LESS
          COMPARE   "55",CLNO            * test for a full page
          CALL      HEAD0000 IF NOT LESS
.
.----- format the amount for printing ----
.
          CLEAR     DIM28
          PACK      KEY14,APINLED,APINACC
          UNPACK    SP70,FMAMDESC
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          MOVE      FMAMDESC,DIM28
.
          MOVE      APINQTY,IQUANT
.
.---- print supplier if desired ----
.
PLIN9100  PACK      APMACN1,SP70
          PACK      KEY5,APINCRD,SP70
          MATCH     "~~",KEY5
          GOTO      PLIN9150 IF NOT EQUAL
.
          CALL      GETBAT00            * Get Batch# for Non-Spec Cred Ret KEY8
          CALL      RDAPNS1
          MOVE      APNSNA1,APMACN1
          GOTO      PLIN9160
.
PLIN9150  CALL      RDAPMA1
.
PLIN9160  MATCH     APMACN1,LASTNAME
          GOTO      PLIN9200 IF EQUAL       * same as last creditor ?
.
          PACK      LASTNAME,APMACN1,SP70
          ADD       TWO,CLNO
          MATCH     SP70,REFDESC2           * print invoice ref ?
          IF        @EQUAL
            MOVE      SP70,INVREF
          ELSE
            MOVE      APINREF,INVREF
          ENDIF
          PRINT     *N,APINCRD,*17,APMACN1,*50,APINDOC,*67,INVREF;
          COMPARE   ZERO,APIMGST
          GOTO      PLIN9200 IF EQUAL
.
          MOVE      FORMAT2,OUTFORM2
          FEDIT     APIMGST,OUTFORM2
          MATCH     ANSP,APIMPAYG
          IF        @EQUAL
            PRINT     *83,"P.A.Y.G. :",*93,OUTFORM2;
          ELSE
            PRINT     *83,"G.S.T.   :",*93,OUTFORM2;
          ENDIF
.
PLIN9200  MOVE      FORMAT2,OUTFORM2
          FEDIT     APINAMT,OUTFORM2
.
          MATCH     "~~",KEY5
          GOTO      PLIN9210 IF EQUAL
.
          MATCH     "Cheque Print",APIMDOC
          GOTO      PLIN9250 IF EQUAL
.
PLIN9210  CALL      GETSIN00
          IF        BASFLAG=1
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*54,APINBASC,*58,APINDES:
                      *93,OUTFORM2;
          ELSE
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*58,APINDES:
                      *93,OUTFORM2;
          ENDIF
          ADD       ONE,CLNO             * increment the row
          GOTO      PLIN9999
.
PLIN9250  CALL      GETSIN00
          UNPACK    APINDES,KEY5,KEY15,KEY8,KEY3,KEY1
          MOVE      KEY1,F1
          CLEAR     KEY34
          IF        F1=0
            APPEND    "IN Batch ",KEY34
          ELSE
            APPEND    "CR Batch ",KEY34
          ENDIF
          APPEND    KEY5,KEY34
          APPEND    " Ref ",KEY34
          STRIP     KEY15
          APPEND    KEY15,KEY34
          RESET     KEY34
          IF        BASFLAG=1
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*54,APINBASC,*58,KEY34:
                      *93,OUTFORM2;
          ELSE
            PRINT     *N,*1,APINLED,SLASH,APINACC,*16,APINORD,*26,APINCAT:
                      *34,IQUANT:
                      *43,APINDIS,*49,APINRES,*58,KEY34:
                      *93,OUTFORM2;
          ENDIF
          ADD       ONE,CLNO             * increment the row
.
PLIN9999  RETURN
.
.----------------------------------------------------------------------
. Get Sin Catalog Code
.----------------------------------------------------------------------
GETSIN00  COMPARE   ONE,INCOSTYP
          GOTO      GETSIN99 IF NOT EQUAL
.
          MATCH     SP70,APINORD
          GOTO      GETSIN99 IF EQUAL
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1          * Read Inventory Directory
          BRANCH    OVRCD,GETSIN99
.
          MOVE      "sinpocaf",KEY8
          PACK      KEY80,APISDIR,KEY8
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SINPOCA1,KEY80
          TRAPCLR   IO
          BRANCH    OVRCD,GETSIN99
.
          MOVE      APINCAT,KEY3
          PACK      KEY10,KEY7,KEY3,SP70
          CALL      RDSIPC1
          BRANCH    OVRCD,GETSIN99
          MATCH     SP70,SIPCCAT
          IF        !@EQUAL
            MOVE      SIPCCAT,APINCAT
          ENDIF
.         CLOSE     SINPOCA1           srf 616745 & 641977
.
GETSIN99  RETURN
.----------------------------------------------------------------------
. Get the Payments Batch Number for Cancelled Cheques and Reinstatements
.----------------------------------------------------------------------
GETBAT00  UNPACK    KEY5,KEY2,KEY3
          PACK      KEY8,APINBCH,KEY3
.
          MATCH     "3",APIMTYP           * Cancelled Cheque
          CALL      IMSBCH00 IF EQUAL
.
          MATCH     "4",APIMTYP           * Reinstated Cheque
          CALL      IMSBCH00 IF EQUAL
.
GETBAT99  RETURN
.----------------------------------------------------------------------
. Get the Payments Batch Number from the apsimsaf file
. RETURNS   KEY8 set for reading non-spec. cred. apsnscaf file
.----------------------------------------------------------------------
. ------- Save Current Record Positions
IMSBCH00  PACK      KEY41,APINBCH,APINCRD,APINREF,APINDOC,SP70
          PACK      KEY52,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
.
. ------- Get Matching Payments Batch Number
          PACK      KEY40,APINCRD,APINDOC,APINREF,SP70
          CALL      RSAPIM4
.
IMSBCH10  CALL      RKAPIM4
          BRANCH    OVRCD,IMSBCH90
.
          PACK      KEY35,APINCRD,APINDOC,APINREF,SP70
          MATCH     KEY35,KEY40
          GOTO      IMSBCH90 IF NOT EQUAL
.
          MATCH     "2",APIMTYP
          GOTO      IMSBCH10 IF NOT EQUAL
.
          MOVE      APIMBCH,APINBCH         * Move in the payments batch number
          UNPACK    KEY5,KEY2,KEY3
          PACK      KEY8,APIMBCH,KEY3
.
. ------- Reset original position in the invoice files.
IMSBCH90  PACK      KEY40,KEY41
          CALL      RDAPIM1
.
          PACK      KEY51,KEY52
          CALL      RDAPIN1
.
IMSBCH99  RETURN
.----------------------------------------------------------------------
. List Batch - Summary
.----------------------------------------------------------------------
LSTBCH00
          CLOSE     FMSAMAA1
          CLOSE     FMSAMAA2
          CLOSE     FMSAMAA3
          CLOSE     FMSAMAA4
          OPEN      IBACODE1,"ibacodef"
...       OPEN      IBAPRNT1,"ibaprntf"                               *D-239574
          CALL      OPNPRINT
          MOVE      ZERO,CPAGENO
          MOVE      "88",CLNO
          CLOCK     TIME,CTIMEIS
          PACK      KEY40,APBMBCH,SP70
          MOVE      SP70,KEY5
          CALL      RSAPIM1
LSTBCH10
          CALL      RKAPIM1
          BRANCH    OVRCD,LSTBCH90
          MATCH     APIMBCH,APBMBCH
          GOTO      LSTBCH90 IF NOT EQUAL
          ASSIGN    APIMTOT-APIMDIS+APIMGST,INVTOTAL
          ADD       ONE,CLNO
          COMPARE   "55",CLNO
          CALL      HEDBCH00 IF NOT LESS
          MATCH     APIMCRD,KEY5
          IF        !@EQUAL
            MOVE    APIMCRD,KEY5
            CALL    RDAPMA1
            PRINT     "| ",APMACRD,SP1,APMACN1,*80,"|"
            ADD     ONE,CLNO
          ENDIF
          PRINT     "|",*32,APIMDOC,*48,APIMREF,*64,INVTOTAL," |"
          GOTO      LSTBCH10
.
LSTBCH90  IF        CPAGENO>0
            CALL      UND80
            PRINT     *25,"*** End of List ***"
            CALL      SELPRINT
            CALL      CLSPRINT
            MOVE      THREE,EXIT
          ELSE
            MOVE      "No Entries in That Batch - ",DISPMSG
            CALL      MESSAGE1
            CALL      CLSPRINT
            MOVE      ONE,EXIT
          ENDIF
          CLOSE     IBACODE1
...       CLOSE     IBAPRNT1
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
          OPEN      FMSAMAA4,"fmsamaaf"
          RETURN
.
HEDBCH00
          UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,KEY10
          UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      KEY12,CPCDATE,SP70
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          CALL      HEAD80
          PRINT     "Batch Number  : ",APBMBCH,*35,"Operator          : ":
                    SECUSER
          PRINT     "Date Entered  : ",KEY10,*35,"Accounting Period : ",KEY12:
                    PERDESC
          PRINT     "Total Entered : ",APBMTOT,*35,"Calculated Total  : ":
                    BATCHCAL
          CALL      UND80
          PRINT     "| Creditor                     Credit":
                    " Note     Invoice Ref.     Payment Credit |"
          CALL      UND80
          MOVE      "7",CLNO
          RETURN

.----------------------------------------------------------------------
. Save Header Details
.----------------------------------------------------------------------
DISPLAST
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      LASTCRED,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      LASTINV,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            IF        LASTTOT=0
              MOVE      SP70,VAR
            ELSE
              MOVE      LASTTOT,VAR
            ENDIF
            CALL      DISPITEM
          ENDIF
          MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APBMTOT,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   35",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            IF        BATCHCAL=0
              MOVE      SP70,VAR
            ELSE
              MOVE      BATCHCAL,VAR
            ENDIF
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   36",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APBMBCH,VAR
            CALL      DISPITEM
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Calculate Allocation Total
.----------------------------------------------------------------------
HEDTOT00  COMPARE   TWO,IBCNUGST
          GOTO      HEDTOT20 IF EQUAL
.
          ASSIGN    APIMTOT-APIMDIS+APIMGST,INVTOTAL
          MOVE      ALLTOTAL,DOCTOTAL
          ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
          GOTO      HEDTOT80
.
HEDTOT20  IF        PAYASGO=1
            ASSIGN    APIMTOT-APIMDIS-PAYASTOT,INVTOTAL
            ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
            MOVE      ALLTOTAL,DOCTOTAL
          ELSE
            ASSIGN    APIMTOT-APIMDIS,INVTOTAL
            MOVE      INVTOTAL,DOCTOTAL
            ASSIGN    APIMTOT-APIMDIS-APIMGST,ALLTOTAL
          ENDIF
.
HEDTOT80  MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      INVTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ALLTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   60",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DOCTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   61",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      GSTALLOC,VAR
            CALL      DISPITEM
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Delete Credit Note Details
.----------------------------------------------------------------------
DAPIM000  MOVE     "Delete Credit Note. ",DISPMSG
          CALL     MESSAGE4
          BRANCH   EXIT,DAPIM900
          SUB      SAVETOT,BATCHCAL
          PACK     KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC
          UNPACK   KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RDAPIM1
          IF       OVRCD=0
            CALL     DEAPIM1
          ENDIF
          PACK     KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC
          PACK     KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL     RSAPIN1
DAPIM100
          CALL     RKAPIN1
          BRANCH   OVRCD,DAPIM199
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH    KEY40,KEY51
          GOTO     DAPIM199 IF NOT EQUAL
.
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL     DEAPIN1
          CALL     RSAPIN1
          GOTO     DAPIM100
.
DAPIM199
          MOVE     "2",EXIT
          GOTO     DAPIM999
DAPIM900
          MOVE     "1",EXIT
DAPIM999
          RETURN
.
.----------------------------------------------------------------------
.     CREDIT NOTE ENTRY
.     -----------------
. Save Header Details and Input Details
.----------------------------------------------------------------------
WAPIM000  IF       IBCNUGST=2
            ASSIGN   (APIMTOT-APIMGST),APIMTOT
          ENDIF
.
          MOVE     SAVEPAYG,APIMPAYG
          MOVE     ZERO,APIMDIS     * No Discount on Credit Notes
          MOVE     ONE,APIMTYP      * Type (0=inv,1=Crd,2=Pay)
          MOVE     ZERO,APIMUPD     * Updated 0=No
          MOVE     ZERO,APIMOUT     * Outstanding 0=No
          MOVE     ZERO,APIMPAY     * Paid = 0
          PACK     KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC
          UNPACK   KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RAAPIM1
          IF       OVRCD=0
            MOVE     ONE,FLAGINST
            CALL     UPAPIM1
          ELSE
            MOVE     DOCDATE,APIMDDT   * srf 5117, VF.01.03
            MOVE     ZERO,FLAGINST
            CALL     WRAPIM1
          ENDIF
.
          BRANCH     FLAGINST,WAPIM090      * Dont Update Already on file
          MATCH      SP70,INVKEY40    * No Invoice Details
          GOTO       WAPIM090 IF EQUAL
.
          PACK       SKEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK       KEY40,APIMCRD,APIMREF,SP70
          PACK       KEY20,APIMCRD,APIMREF,SP70
          CALL       RSAPIM3
.
WAPIM010  CALL       RKAPIM3
          BRANCH     OVRCD,WAPIM080
          PACK       KEY40,APIMCRD,APIMREF,APIMDOC,APIMBCH,SP70
          MATCH      KEY40,KEY20
          GOTO       WAPIM080 IF NOT EQUAL
.
          MATCH      "0",APIMUPD
          GOTO       WAPIM010 IF EQUAL
.
          MATCH      "0",APIMOUT
          GOTO       WAPIM010 IF EQUAL
.
          MOVE       SP70,TEMPDES
          MOVE       SP70,DESC1
          MOVE       SP70,DESC2
          PACK       KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK       KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
.
WAPIM020  CALL       RSAPIN1
          CALL       RKAPIN1
          BRANCH     OVRCD,WAPIM010
          PACK       KEY52,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH      KEY52,KEY40
          GOTO       WAPIM010 IF NOT EQUAL
.
          MOVE       APIMTYP,F1   * 0=inv, 1=pay, 2=crd, 3=cc, 4=ri
          IF         F1=0
            MOVE       APINDES,DESC1
            MOVE       APINDIS,DESC2
            MOVE       APINRES,TEMPDES
          ENDIF
          IF         F1=1
            MULT       SEQ,APINAMT
            MULT       SEQ,APINGST
          ENDIF
          IF         F1=2
            MULT       SEQ,APINAMT
            MULT       SEQ,APINGST
          ENDIF
          IF         F1=3
            GOTO       WAPIM020
          ENDIF
          MOVE       APINAMT,TEMPAMT
          MOVE       APINGST,TEMPGST
.
          UNPACK     SKEY40,APINBCH,APINCRD,APINREF,APINDOC
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
          CALL       RDAPIN1
          IF         OVRCD=1
            MATCH      SP70,DESC1
            IF         @EQUAL
              MOVE       APINDES,DESC1
            ENDIF
            MATCH      SP70,DESC2
            IF         @EQUAL
              MOVE       APINDIS,DESC2
            ENDIF
            MATCH      SP70,TEMPDES
            IF         @EQUAL
              MOVE       APINRES,TEMPDES
            ENDIF
            MOVE       ZERO,APINUPD
            MOVE       ZERO,APINPAY
            MOVE       APBMDIS,APINDIS
            MOVE       APBMRES,APINRES
            MOVE       TEMPAMT,APINAMT
            MOVE       TEMPGST,APINGST
            MOVE       SAVEPAYG,APINPAYG
            CALL       WRAPIN1
          ELSE
            MATCH      SP70,DESC1
            IF         !@EQUAL
              PACK       APINDES,DESC1
            ENDIF
            MATCH      SP70,DESC2
            IF         !@EQUAL
              PACK       APINDIS,DESC2
            ENDIF
            MATCH      SP70,TEMPDES
            IF         !@EQUAL
              PACK       APINRES,TEMPDES
            ENDIF
            MOVE       ZERO,APINUPD
            MOVE       ZERO,APINPAY
            ADD        TEMPAMT,APINAMT
            ADD        TEMPGST,APINGST
            PACK       APINRES,APBMRES,SP70
            PACK       APINDIS,APBMDIS,SP70
            CALL       UPAPIN1
          ENDIF
          MOVE       KEY52,KEY51
          GOTO       WAPIM020
.
.---- restore old record ----
.
WAPIM080  PACK       KEY40,SKEY40
          CALL       RDAPIM1
          UNPACK     KEY40,APINBCH,APINCRD,APINREF,APINDOC
.
. Calculate Total Allocated
.--------------------------------------------------
WAPIM090  MOVE       ZERO,TOTALLOC
          MOVE       ZERO,GSTALLOC
          PACK       KEY40,APBMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK       KEY51,APBMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL       RSAPIN1
.
WAPIM100  CALL       RKAPIN1
          BRANCH     OVRCD,WAPIM200
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH      KEY40,KEY51
          GOTO       WAPIM200 IF NOT EQUAL
          ADD        APINAMT,TOTALLOC
          ADD        APINGST,GSTALLOC
          GOTO       WAPIM100
.
. Display Header Details Screen 06
.--------------------------------------------------
WAPIM200  MOVE     "06",SCRID
          CALL     SBACK000 * Display Background
          CALL     DF06L000 * Display Fields
.
. Enter Details Screen 02
.--------------------------------------------------
WAPIM300  MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
          IF        FLAGINST=1
            CALL      INSERT00
          ENDIF
.
WAPIM400  CALL      LM02L000 * Load any Batch Details
          CALL      DF02L000 * Display Fields
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,WAPIM300,WAPIM300,WAPIM400
.
. Adjust Totals and Last Entered Record
.--------------------------------------------------
          SUB      SAVETOT,BATCHCAL
          PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RAAPIM1
          IF       OVRCD=0
            MOVE     APMACN1,LASTCRED
            MOVE     APIMREF,LASTINV
            ASSIGN   APIMTOT+APIMGST,LASTTOT
            ADD      LASTTOT,BATCHCAL
          ENDIF
.
          RETURN
.--------------------------------------------------
. Enter New Details Accept=1
.--------------------------------------------------
INSERT00  MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      ADDORD00
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          RETURN
.----------------------------------------------------------------------
. Enter Creditor Code
.----------------------------------------------------------------------
KAPMA000  OPEN     APSMXRA1,"apsmxraf"
          OPEN     APSMXRA2,"apsmxraf"
          MOVE     ZERO,HASABN                                         *I-14452
          MOVE     SP11,APMAABN                                        *I-14452
          CALL     KAPMAA00
          CLOSE    APSMXRA1
          CLOSE    APSMXRA2
          LOAD     ACCEPT,EXIT,ZERO,ZERO  * clear accept if quiting screen
          BRANCH   EXIT,KAPMA999,KAPMA999
          IF       APMAHCR=1
            MOVE     "Creditor On Hold for Credit Note Input - ",DISPMSG
            CALL     MESSAGE1
            MOVE     SP70,APMACRD
            GOTO     KAPMA000
          ENDIF
          MATCH    SP11,APMAABN                                        *I-14452
          IF       !@EQUAL
            MOVE     ONE,HASABN                                        *I-14452
          ENDIF                                                        *I-14452
          MOVE     APMACRD,APIMCRD
.
KAPMA999  RETURN
.----------------------------------------------------------------------
. Enter Credit Note Reference
.----------------------------------------------------------------------
EDOCR000  MOVE     SP70,APIMREF
          MOVE     SP70,APIMDOC
          MOVE     TWO,CKEYTYP
          MOVE     APMACRD,APIMCRD
          CALL     KAPIMX00
          BRANCH   EXIT,EDOCR900,EDOCR900
          MOVE     APIMDOC,DOCREF
          MOVE     APBMBCH,APIMBCH
          MOVE     APMACRD,APIMCRD
          PACK     KEY20,APIMCRD,APIMDOC,SP70
          PACK     KEY40,APIMCRD,APIMDOC,SP70
          CALL     RSAPIM4
.
EDOCR100  CALL     RKAPIM4
          BRANCH   OVRCD,EDOCR200
          PACK     KEY40,APIMCRD,APIMDOC,APIMREF,APIMBCH
          MATCH    KEY20,KEY40
          GOTO     EDOCR200 IF NOT EQUAL
          MATCH    "1",APIMTYP
          GOTO     EDOCR100 IF NOT EQUAL
          MATCH    APBMBCH,APIMBCH
          GOTO     EDOCR300 IF EQUAL
          UNPACK   APIMDDT,CCENT,CYEAR,CMON,CDAY
          CALL     PACDATE
          CLEAR    DISPMSG
          APPEND   "Duplicate Credit Ref. in Batch ",DISPMSG
          APPEND   APIMBCH,DISPMSG
          APPEND   " Dated ",DISPMSG
          APPEND   CPCDATE,DISPMSG
          APPEND   " - ",DISPMSG
          MATCH    "1",FMCODUPI
          RESET    DISPMSG
          IF       @EQUAL
            CALL     MESSAGE1
            GOTO     EDOCR000
          ELSE
            CALL     MESSAGE4
            BRANCH   EXIT,EDOCR000
          ENDIF
.
EDOCR200  MOVE     APMACRD,APIMCRD
          MOVE     DOCREF,APIMDOC
          MOVE     SP70,INVREF
          MOVE     SP70,APIMREF
          MOVE     APBMBCH,APIMBCH
          PACK     KEY25,APIMBCH,APIMCRD,APIMREF
          MOVE     ONE,APIMTYP
          MOVE     ZERO,APIMUPD
          MOVE     SP70,APIMTER
          MOVE     SP70,APIMPDT
          MOVE     SP70,APIMDDT
          MOVE     SP70,DOCDATE
          MOVE     SP70,APIMTDT
          MOVE     ZERO,APIMTOT
          MOVE     ZERO,APIMDIS
          MOVE     ZERO,APIMGST
          MOVE     SP70,APIMCM1
          MOVE     SP70,APIMCM2
          MOVE     ZERO,APIMDIS
          MOVE     ZERO,APIMPAY
          MOVE     SP70,APIMSPA
          GOTO     EDOCR999
.
EDOCR300  MOVE     APIMDDT,DOCDATE
          GOTO     EDOCR999
.
EDOCR800  MOVE     DOCREF,APIMDOC
          MOVE     DOCDATE,APIMDDT
          MOVE     ZERO,EXIT
          GOTO     EDOCR999
.
EDOCR900  MOVE     SP70,APMACRD
          MOVE     SP70,INVREF
          MOVE     SP70,DOCREF
          MOVE     SP70,DOCDATE
          MOVE     ONE,EXIT
.
EDOCR999  RETURN
.----------------------------------------------------------------------
. Enter Credit Note Date
.----------------------------------------------------------------------
ECRDT000
          MATCH     "ZZZZZZZZ",DOCDATE
          GOTO      ECRDT900 IF EQUAL
          MATCH     SP70,DOCDATE
          GOTO      ECRDT800 IF NOT EQUAL
.
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      SP70,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,ECRDT900
          BRANCH    CQUEST,ECRDT000
          MATCH     SP70,CDAY
          GOTO      ECRDT900 IF EQUAL
.
          PACK      DOCDATE,CCENT,CYEAR,CMON,CDAY
          PACK      APIMDDT,CCENT,CYEAR,CMON,CDAY
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",APIMDDT
          REP       " 0",KEY8
          MATCH     APIMDDT,KEY8
          IF        @LESS
            MOVE      "Date in the Future. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            LOAD      DOCDATE,EXIT,SP70
            BRANCH    EXIT,ECRDT000
            GOTO      ECRDT800
          ENDIF
.
          UNPACK    APIMDDT,KEY4,KEY2
          MOVE      KEY4,TSTCCYY1
          MOVE      KEY2,TSTMM1
.
          UNPACK    KEY8,KEY4,KEY2
          MOVE      KEY4,TSTCCYY2
          MOVE      KEY2,TSTMM2
          IF        TSTCCYY2-TSTCCYY1>1
            MOVE      "Date Over 1 Year. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            LOAD      DOCDATE,EXIT,SP70
            BRANCH    EXIT,ECRDT000
            GOTO      ECRDT800
          ENDIF
          IF        TSTCCYY2=TSTCCYY1
            IF        TSTMM2-TSTMM1>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              LOAD      DOCDATE,EXIT,SP70
              BRANCH    EXIT,ECRDT000
              GOTO      ECRDT800
            ENDIF
          ELSE
            IF        TSTMM2-TSTMM1+12>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              LOAD      DOCDATE,EXIT,SP70
              BRANCH    EXIT,ECRDT000
              GOTO      ECRDT800
            ENDIF
          ENDIF
.
ECRDT800  MOVE      DOCDATE,APIMDDT
          MOVE      ZERO,EXIT
          GOTO      ECRDT999
.
ECRDT900  MOVE      ONE,EXIT
          MOVE      SP70,DOCREF
          MOVE      SP70,DOCDATE
          MOVE      SP70,APIMDDT
          MOVE      SP70,VAR
          CALL      DISPITEM
ECRDT999
          RETURN
.----------------------------------------------------------------------
. Enter Invoice Reference
.----------------------------------------------------------------------
KAPIM000  MOVE     SP70,INVKEY40
          MOVE     ZERO,PAYASGO
          MOVE     ZERO,NOGST
          MOVE     SP1,SAVEPAYG
          PACK     KEY70,APBMBCH,APMACRD,APIMDOC
          MOVE     ZERO,SAVETOT
          MOVE     APMACRD,APIMCRD
          MOVE     APBMBCH,APIMBCH
          CALL     KAPIMA00
          MOVE     APIMREF,INVREF
          BRANCH   EXIT,KAPIM900,KAPIM900
.--------------------------------------------------
. Check to see if existing record for batch
.--------------------------------------------------
          UNPACK   KEY70,APIMBCH,APIMCRD,APIMDOC
          PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          CALL     RAAPIM1
          IF       OVRCD=0
            CALL     RDAPIM1
            MOVE     APIMTER,KEY2
            CALL     RDAPPP1
            MOVE     APIMPAYG,SAVEPAYG
            MOVE     ZERO,ACCEPT
            MOVE     ZERO,OVRCD
            IF       IBCNUGST=2
              ASSIGN   APIMTOT+APIMGST,APIMTOT
            ENDIF
            ASSIGN   APIMTOT+APIMGST,SAVETOT
            GOTO     KAPIM999
          ENDIF
.--------------------------------------------------
. If not then get invoice details for default
.--------------------------------------------------
          PACK     KEY35,APIMCRD,APIMREF,APIMREF,SP70
          PACK     KEY40,APIMCRD,APIMREF,APIMREF,Z70
          CALL     RSAPIM3
.
KAPIM100  CALL     RPAPIM3
          BRANCH   OVRCD,KAPIM200          * No Invoice Found
          PACK     KEY40,APIMCRD,APIMREF,APIMDOC,SP70
          MATCH    KEY35,KEY40
          GOTO     KAPIM200 IF NOT EQUAL   * No Invoice Found
          MATCH    "0",APIMTYP
          GOTO     KAPIM100 IF NOT EQUAL
          MATCH    "0",APIMUPD
          GOTO     KAPIM150 IF EQUAL
.
          PACK     INVKEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC
          PACK     KEY20,APIMCRD,APIMREF,SP70
          PACK     KEY40,APIMCRD,APIMREF,SP70
          MOVE     ZERO,PAYTOTAL
          MOVE     ZERO,GSTTOTAL
          CALL     RSAPIM3
.
KAPIM110  CALL     RKAPIM3
          BRANCH   OVRCD,KAPIM120
          PACK     KEY40,APIMCRD,APIMREF,SP70
          MATCH    KEY20,KEY40
          GOTO     KAPIM120 IF NOT EQUAL
.
          MOVE     APIMTYP,F1
          IF       F1=3
            GOTO     KAPIM110
          ENDIF
.
          IF       F1=0 | F1=4
            ASSIGN   PAYTOTAL+APIMTOT-APIMDIS,PAYTOTAL
            ASSIGN   GSTTOTAL+APIMGST,GSTTOTAL
          ELSE
            ASSIGN   PAYTOTAL-APIMTOT,PAYTOTAL
            ASSIGN   GSTTOTAL-APIMGST,GSTTOTAL
          ENDIF
          GOTO     KAPIM110
.
KAPIM120  IF       PAYTOTAL+GSTTOTAL=0
            MOVE     "Zero Outstanding for Invoice. - ",DISPMSG
            CALL     MESSAGE4
            UNPACK   KEY70,APIMBCH,APIMCRD,APIMDOC
            BRANCH   EXIT,KAPIM000
            MOVE     ZERO,EXIT
          ENDIF
          MOVE     INVKEY40,KEY40
          CALL     RDAPIM1
          MOVE     ONE,APIMTYP
          MOVE     GSTTOTAL,APIMGST
          MOVE     PAYTOTAL,APIMTOT
          IF       IBCNUGST=2
            ASSIGN   APIMTOT+APIMGST,APIMTOT
          ENDIF
          MATCH    ANSZ,APIMPAYG
          IF       @EQUAL
            MOVE     ONE,PAYASGO
          ENDIF
          MATCH    ANSP,APIMPAYG
          IF       @EQUAL
            BEEP
            MOVE     "WARNING: Credit Note for PAYG Invoice - ",DISPMSG
            CALL     MESSAGE1
            MOVE     ONE,NOGST
          ENDIF
          MATCH    ANSN,APIMPAYG
          IF       @EQUAL
            MOVE     ONE,NOGST
          ENDIF
          MOVE     APIMPAYG,SAVEPAYG
          MOVE     ZERO,APIMDIS
          UNPACK   KEY70,APIMBCH,APIMCRD,APIMDOC
          MOVE     APIMTER,KEY2
          CALL     RDAPPP1
          MOVE     APIMPAYG,SAVEPAYG
          MOVE     ZERO,ACCEPT
          MOVE     ZERO,OVRCD
          GOTO     KAPIM999
.
KAPIM150  MOVE     "Invoice Has Not Been Updated - ",DISPMSG
          CALL     MESSAGE1
          UNPACK   KEY70,APIMBCH,APIMCRD,APIMDOC
          GOTO     KAPIM000
.
KAPIM200  MOVE     "Invoice Not Found - ",DISPMSG
          CALL     MESSAGE4
          UNPACK   KEY70,APIMBCH,APIMCRD,APIMDOC
          BRANCH   EXIT,KAPIM000
          MOVE     ZERO,EXIT
          UNPACK   KEY35,APIMCRD,APIMREF
          MOVE     ONE,APIMTYP
          MOVE     ZERO,APIMUPD
          MOVE     SP70,APIMTER
          MOVE     SP70,APIMPDT
          MOVE     SP70,APIMTDT
          MOVE     ZERO,APIMTOT
          MOVE     ZERO,APIMDIS
          MOVE     ZERO,APIMGST
          MOVE     SP70,APIMCM1
          MOVE     SP70,APIMCM2
          MOVE     ZERO,APIMDIS
          MOVE     ZERO,APIMPAY
          MOVE     SP70,APIMPAYG
          MOVE     SP70,APIMSPA
.
          MOVE     ONE,ACCEPT
          MOVE     ONE,OVRCD
          MOVE     ZERO,EXIT
          GOTO     KAPIM999
.
KAPIM900  MOVE     ONE,EXIT
          MOVE     SP70,DOCREF
          MOVE     "ZZZZZZZZ",DOCDATE
.
KAPIM999  RETURN
.
.----------------------------------------------------------------------
. Enter Date to Pay Invoice APIMPDT
.----------------------------------------------------------------------
EPYDT000
          CALL      PAYDAT00         * Determine Payment Date
          UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,EPYDT000
          BRANCH    CQUEST,EPYDT000
.
          PACK      APIMPDT,CCENT,CYEAR,CMON,CDAY
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",APIMPDT
          REP       " 0",KEY8
.
          MATCH     KEY8,APIMPDT
          IF        @LESS
            MOVE      "Date in the Past. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,EPYDT000
            GOTO      EPYDT800
          ENDIF
.
          UNPACK    APIMPDT,KEY4,KEY2
          MOVE      KEY4,TSTCCYY1
          MOVE      KEY2,TSTMM1
.
          UNPACK    KEY8,KEY4,KEY2
          MOVE      KEY4,TSTCCYY2
          MOVE      KEY2,TSTMM2
          IF        TSTCCYY1-TSTCCYY2>1
            MOVE      "Date Over 1 Year. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,EPYDT000
            GOTO      EPYDT800
          ENDIF
          IF        TSTCCYY2=TSTCCYY1
            IF        TSTMM1-TSTMM2>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,EPYDT000
              GOTO      EPYDT800
            ENDIF
          ELSE
            IF        TSTMM1-TSTMM2+12>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,EPYDT000
              GOTO      EPYDT800
            ENDIF
          ENDIF
EPYDT800
          MOVE      ZERO,EXIT
          GOTO      EPYDT999
.
EPYDT900  MOVE      TWO,EXIT
EPYDT999
          RETURN
.------------------------------------------------------
. Determine Payment Date from Terms Code
.------------------------------------------------------
PAYDAT00
          MATCH     SP70,APIMTER
          GOTO      PAYDAT99 IF EQUAL
          GOTO      PAYDAT10 IF EQUAL
.
          IF        APPPDA1=9999
            MOVE      "99990101",APIMPDT
            GOTO      PAYDAT99
          ENDIF
.
          BRANCH    APPPTYP,PAYDAT10,PAYDAT20,PAYDAT50,PAYDAT50
          GOTO      PAYDAT30
.
PAYDAT10  UNPACK    APBMDAT,CCENT,CYEAR,CMON,CDAY * Batch Entered Date
          GOTO      PAYDAT40
.
PAYDAT20  UNPACK    APBMADT,CCENT,CYEAR,CMON,CDAY * Batch Period Date
          GOTO      PAYDAT40
.
PAYDAT30  UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY * Invoice Date
.
PAYDAT40  MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
          ADD       APPPDA1,JULDAY                * Add First Level of Terms
.         SUB       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          GOTO      PAYDAT90
.
. Fixed Day of Month
.
PAYDAT50  UNPACK    APIMIDT,CCENT,CYEAR,CMON,CDAY
          PACK      DIM4,CCENT,CYEAR
          REP       " 0",DIM4
          MOVE      CMON,MM
          MOVE      APPPDA1,DD
          IF        APPPTYP=4
            ADD       ONE,MM
            IF        MM>12
              MOVE      ONE,MM
              MOVE      DIM4,FORM4
              ADD       ONE,FORM4
              MOVE      FORM4,DIM4
            ENDIF
          ENDIF
          IF        APPPTYP<>4 & CDD>APPPDA1
            ADD       ONE,MM
            IF        MM>12
              MOVE      ONE,MM
              MOVE      DIM4,FORM4
              ADD       ONE,FORM4
              MOVE      FORM4,DIM4
            ENDIF
          ENDIF
          UNPACK    DIM4,CCENT,CYEAR
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          CALL      DMLEAPYR                  * determine if a leap year
          BRANCH    MM,PAYDAT61,PAYDAT62,PAYDAT61,PAYDAT60,PAYDAT61,PAYDAT60:
                       PAYDAT61,PAYDAT61,PAYDAT60,PAYDAT61,PAYDAT60,PAYDAT61
PAYDAT60
          IF        DD>30
            MOVE      "30",DD
          ENDIF
          GOTO      PAYDAT90
PAYDAT61
          IF        DD>31
            MOVE      "31",DD
          ENDIF
          GOTO      PAYDAT90
PAYDAT62
          MOVE      "28",F2
          ADD       LEAPYR,F2
          IF        DD>F2
            MOVE      F2,DD
          ENDIF
.
PAYDAT90  PACK      APIMPDT,CC,YY,MM,DD,SP70
          REP       " 0",APIMPDT
.
PAYDAT99  RETURN
.----------------------------------------------------------------------
. Enter Invoice Date
.----------------------------------------------------------------------
EINDT000
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      SP70,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,EINDT900
          BRANCH    CQUEST,EINDT000
          MATCH     SP70,CDAY
          GOTO      EINDT900 IF EQUAL
.
          PACK      APIMIDT,CCENT,CYEAR,CMON,CDAY
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",APIMIDT
          REP       " 0",KEY8
          MATCH     APIMIDT,KEY8
          IF        @LESS
            MOVE      "Date in the Future. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,EINDT000
            GOTO      EINDT800
          ENDIF
.
          UNPACK    APIMIDT,KEY4,KEY2
          MOVE      KEY4,TSTCCYY1
          MOVE      KEY2,TSTMM1
.
          UNPACK    KEY8,KEY4,KEY2
          MOVE      KEY4,TSTCCYY2
          MOVE      KEY2,TSTMM2
          IF        TSTCCYY2-TSTCCYY1>1
            MOVE      "Date Over 1 Year. ",DISPMSG
            CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
            BRANCH    EXIT,EINDT000
            GOTO      EINDT800
          ENDIF
          IF        TSTCCYY2=TSTCCYY1
            IF        TSTMM2-TSTMM1>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,EINDT000
              GOTO      EINDT800
            ENDIF
          ELSE
            IF        TSTMM2-TSTMM1+12>6
              MOVE      "Date Over 6 Months. ",DISPMSG
              CALL      MESSAGE4   * Message Continue (Y/N) EXIT=1 No
              BRANCH    EXIT,EINDT000
              GOTO      EINDT800
            ENDIF
          ENDIF
EINDT800
          MOVE      ZERO,EXIT
          GOTO      EINDT999
.
EINDT900  MOVE      TWO,EXIT
EINDT999
          RETURN
.----------------------------------------------------------------------
. Enter Terms with Creditor Default
.----------------------------------------------------------------------
ETERM000  IF        ACCEPT=1
            MOVE      APMAPPD,APIMTER
          ENDIF
          MOVE      APIMTER,KEY2
          CALL      RDAPPP1
          IF        OVRCD=1
            MOVE      SP70,APPPDES
          ENDIF
          MATCH     SP70,APIMTER
          IF        @EQUAL
            MOVE      SP70,APPPDES
          ELSE
            MOVE      APIMTER,KEY2
            CALL      RDAPPP1
            IF        OVRCD=0
               MOVE      "   22",FLDID
               CALL      GETPOSIT
               IF        EXIT=0
                 MOVE      APPPDES,VAR
                 CALL      DISPITEM
               ENDIF
               MOVE      "   21",FLDID
               CALL      GETPOSIT
               IF        EXIT=0
                 MOVE      APPPTER,VAR
                 CALL      DISPITEM
               ENDIF
            ENDIF
          ENDIF
.
          MOVE      ZERO,CKEYTYP
          CALL      KAPPPZ00
          MOVE      APPPTER,APIMTER
          BRANCH    EXIT,ETERM999,ETERM999
          BRANCH    ACCEPT,ETERM999
          CALL      PAYDAT00
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    APIMPDT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   21",FLDID
          CALL      GETPOSIT
ETERM999
          RETURN
.
.---------------------------------------------------------------------------
.   System    :   Accounts Payable System
.   Include   :   APSPPDKY
.   Routine   :   KAPPPZ00 Keyin Terms
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KAPPPZ00 TOPIC     "APPPTER "
          KEYIN     *PCCOL:CVERT,*RV,APPPTER:
                    *PCCOL:CVERT,*DV,APPPTER
.
          ENDSET    APPPTER
          APPEND    SP70,APPPTER
          RESET     APPPTER
.
          MATCH     SP70,APPPTER
          GOTO      KAPPPZ90 IF EQUAL
.
          CMATCH    EXITCHAR,APPPTER
          GOTO      KAPPPZ95 IF EQUAL
.
          CMATCH    QUEST,APPPTER
          GOTO      KAPPPZ10 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HAPPPA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    APPPTER
          APPEND    SP70,APPPTER
          RESET     APPPTER
.
          MATCH     SP70,APPPTER
          GOTO      KAPPPZ00 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,APPPTER
KAPPPZ10
          PACK      KEY2,APPPTER
          CALL      RAAPPP1
          BRANCH    OVRCD,KAPPPZ80
          BRANCH    CKEYTYP,KAPPPZ75
          CALL      RDAPPP1
KAPPPZ70
          MOVE      ZERO,EXIT
          GOTO      KAPPPZ99
KAPPPZ75
          MOVE      "Terms Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KAPPPZ00
KAPPPZ80
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KAPPPZ99,KAPPPZ99
          MOVE      "Terms Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KAPPPZ00
KAPPPZ90
          MOVE      ONE,EXIT
          GOTO      KAPPPZ99
KAPPPZ95
          MOVE      TWO,EXIT
KAPPPZ99  TOPIC    PRGID
          RETURN
.
.----------------------------------------------------------------------
. Enter Invoice Total
.----------------------------------------------------------------------
EITOT000  MOVE      SP70,VAR
          CALL      DISPITEM
          BRANCH    ACCEPT,EITOT800  * Insert Mode
.
          KEYIN     *PCCOL:CVERT,*DV,SP20:
                    *PCCOL:CVERT,*V2LON,*RV,APIMTOT
          MOVE      APIMTOT,VAR
          CALL      DISPITEM
.
          MOVE      ZERO,APIMGST
          MOVE      ZERO,APIMDIS
          MOVE      ZERO,APIMPAY
.
          MOVE      "   25",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            CALL      EGST0000
            MOVE      APIMGST,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          GOTO      EITOT999
.
EITOT800  MOVE      ZERO,APIMTOT
          MOVE      ZERO,APIMGST
          MOVE      ZERO,APIMPAY
          MOVE      ZERO,APIMDIS
          KEYIN     *PCCOL:CVERT,*DV,SP20:
                    *PCCOL:CVERT,*V2LON,*RV,APIMTOT
          GOTO      EITOT999
.
EITOT999  RETURN
.----------------------------------------------------------------------
. Enter GST
.----------------------------------------------------------------------
EGST0000  BRANCH    CHGTOT,EGST5000
.
          MOVE      SP70,VAR
          CALL      DISPITEM
.
EGST0010  IF        NOGST=1
            MOVE      ZERO,APIMGST
            GOTO      EGST9999
          ENDIF
.
          COMPARE   ZERO,APIMGST
          GOTO      EGST5000 IF NOT EQUAL
.
          COMPARE   ZERO,APIMTOT
          GOTO      EGST5000 IF EQUAL
.
          MATCH     SP6,FMCOINGS
          GOTO      EGST5000 IF EQUAL
.
          IF        PAYASGO=1
            MOVE      FMCOPAYG,KEY6
          ELSE
            IF        HASABN=1 & APMAGREG = 0
              MOVE      FMCOXBAS,KEY6                                  *C-14452
            ELSE                                                       *C-14452
              MOVE      FMCOINGS,KEY6                                  *C-14452
            ENDIF                                                      *C-14452
          ENDIF
.
          PACK      KEY14,KEY6,APIMIDT,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      EGST3000 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,EGST5000
.
          MATCH     KEY6,IBGECODE
          GOTO      EGST5000 IF NOT EQUAL
.
EGST3000  ASSIGN    APIMTOT-APIMDIS,F12P2
.
          COMPARE     TWO,IBCNUGST
          GOTO        EGST4000 IF NOT EQUAL
.
          IF        PAYASGO=1
            ASSIGN    (F12P2/HUNDRED)*IBGEAMNT,PAYASTOT
            MOVE      ZERO,APIMGST
            GOTO      EGST9999
          ELSE
            IF        NOGST=1
              MOVE      ZERO,APIMGST
            ELSE
              ASSIGN    (F12P2-(F12P2/(ONE+(IBGEAMNT/HUNDRED)))),APIMGST
            ENDIF
          ENDIF
          GOTO      EGST5000
.
EGST4000  ASSIGN    (F12P2/HUNDRED)*IBGEAMNT,APIMGST
.
EGST5000  IF        ACCEPT=1
            KEYIN     *PCCOL:CVERT,*DV,SP19,*PCCOL:CVERT,*V2LON,*RV,APIMGST
          ELSE
            KEYIN     *PCCOL:CVERT,*DV,SP19,*PCCOL:CVERT,*V2LON,*RV,APIMGST
            BRANCH    CHGTOT,EGST9999
            MOVE      APIMGST,VAR
            CALL      DISPITEM
          ENDIF
.
EGST9999  RETURN
.--------------------------------------------------
. Enter Credit Note Remittance Note Line 1
.--------------------------------------------------
EREM1000  MOVE      ZERO,EXIT
          IF        ACCEPT=1
            MOVE      SP70,APIMCM1
          ENDIF
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,APIMCM1:
                    *PCCOL:CVERT
          ENDSET    APIMCM1
          APPEND    SP70,APIMCM1
          RESET     APIMCM1
          CMATCH    EXITCHAR,APIMCM1
          IF        @EQUAL
            MOVE      TWO,EXIT
          ENDIF
          MATCH     SP70,APIMCM1
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
EREM1999
          RETURN
.
.--------------------------------------------------
. Enter Credit Note Remittance Note Line 2
.--------------------------------------------------
EREM2000
          IF        ACCEPT=1
            MOVE      SP70,APIMCM2
          ENDIF
          MOVE      ZERO,EXIT
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,APIMCM2:
                    *PCCOL:CVERT
          ENDSET    APIMCM2
          APPEND    SP70,APIMCM2
          RESET     APIMCM2
          CMATCH    EXITCHAR,APIMCM2
          IF        @EQUAL
            MOVE      TWO,EXIT
          ENDIF
          MATCH     SP70,APIMCM2
          IF        @EQUAL
            MOVE      ONE,EXIT
          ENDIF
EREM2999
          RETURN
.
.--------------------------------------------------
. Keyin Invoice Description
.--------------------------------------------------
KICM0000  IF        ACCEPT=1
            MOVE      SP70,APIMICM
          ENDIF
KICM0005
          KEYIN     *PCCOL:CVERT,*RV,*V2LON,APIMICM
          MOVE      ZERO,EXIT
.
          ENDSET    APIMICM
          APPEND    SP70,APIMICM
          RESET     APIMICM
.
          MATCH     SP70,APIMICM
          GOTO      KICM9999 IF EQUAL
.
          CMATCH    QUEST,APIMICM
          GOTO      KICM0090 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMTDA00
          MOVE      SCCITEM,CCITEM
.
          MOVE      FMTDCODE,APIMICM
          ENDSET    APIMICM
          APPEND    SP70,APIMICM
          RESET     APIMICM
.
          MATCH     SP70,APIMICM
          GOTO      KICM0000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,APIMICM
KICM0090
          MOVE      ZERO,EXIT
          PACK      KEY4,APIMICM,SP70
          PACK      KEY50,KEY4,SP70
          MATCH     KEY50,APIMICM
          IF        @EQUAL
            CALL      RDFMTD1
            BRANCH    OVRCD,KICM9999
            MOVE      FMTDDESC,APIMICM
            MATCH     KEY50,APIMICM
            GOTO      KICM0005 IF NOT EQUAL
          ENDIF
.
KICM9999  RETURN
.
.
UPDTOT00  PACK     KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK     KEY52,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          PACK     KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE     ZERO,GSTALLOC
          MOVE     ZERO,TOTALLOC
          CALL     RSAPIN1
.
UPDTOT10  CALL     RKAPIN1
          BRANCH   OVRCD,UPDTOT90
          PACK     KEY51,APINBCH,APINCRD,APINREF,APINDOC
          MATCH    KEY40,KEY51
          GOTO     UPDTOT90 IF NOT EQUAL
          ADD      APINAMT,TOTALLOC
          ADD      APINGST,GSTALLOC
          GOTO     UPDTOT10
.
UPDTOT90  PACK     KEY51,KEY52
          CALL     RDAPIN1
          MOVE     "06",SCRID
          MOVE     "   30",FLDID
          CALL     GETPOSIT
          IF       EXIT=0
            MOVE     TOTALLOC,VAR
            CALL     DISPITEM
          ENDIF
          MOVE     "   61",FLDID
          CALL     GETPOSIT
          IF       EXIT=0
            MOVE     GSTALLOC,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE     "02",SCRID
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          RETURN
.
.----------------------------------------------------------------------
. Calculate Allocation Total
.----------------------------------------------------------------------
CALCA000  MOVE     APIMTOT,TOTALALL
          SUB      APIMGST,TOTALALL
          RETURN
.----------------------------------------------------------------------
. Read Line Item Details
.----------------------------------------------------------------------
RDET0000  IF        IBCNUGST=2
            ASSIGN    APINAMT+APINGST,TRANAMT
          ELSE
            MOVE      APINAMT,TRANAMT
          ENDIF
.
          PACK      KEY14,APINLED,APINACC
          CALL      RDFMAM1
          PACK      LEDACDES,APINLED,SLASH,APINACC,SP70
          STRIP     LEDACDES
          PACK      LEDACDES,LEDACDES,SP1,FMAMDESC,SP70
          PACK      TRANDES2,LEDACDES,SP70
.
          MATCH     SP6,APINCAT
          GOTO      RDET1000 IF NOT EQUAL
          PACK      TRANDESC,LEDACDES,SP70
          PACK      TRANDES2,APINDES,SP70
          GOTO      RDET9999
.
RDET1000  COMPARE   ZERO,HACCNT
          GOTO      RDET9000 IF EQUAL
.
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1
          BRANCH    OVRCD,RDET9000
.
          CALL      APISOPN1
          BRANCH    INCOSTYP,RDET5000
          GOTO      RDET9999
.
RDET5000  MOVE      SP70,SUPDES1
          MOVE      SP70,SUPDES2
          UNPACK    APINORD,KEY1,KEY7
.
          PACK      KEY12,KEY7,APINCAT
          CALL      RDSIPF1
          BRANCH    OVRCD,RDET9000
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          BRANCH    OVRCD,RDET9000
.
          CLEAR     TRANDESC
          APPEND    "P/N : ",TRANDESC
          APPEND    SIPCPN,TRANDESC
          APPEND    " Desc: ",TRANDESC
          APPEND    SIPCPD,TRANDESC
          RESET     TRANDESC
          GOTO      RDET9999
.
RDET9000  CLEAR     TRANDESC
          APPEND    "Inventory System Invalid. Order=",TRANDESC
          APPEND    APINORD,TRANDESC
          RESET     TRANDESC
          GOTO      RDET9999
.
RDET9999  RETURN
.----------------------------------------------------------------------
. Check for Balanced Credit Details and allow change to total
.----------------------------------------------------------------------
SAVE0000  PACK       KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK       KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          MOVE       ZERO,TOTALLOC
          MOVE       ZERO,GSTALLOC
          MOVE       ZERO,F3
          CALL       RSAPIN1
.
SAVE1000  CALL       RKAPIN1
          BRANCH     OVRCD,SAVE1100
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,SP70
          MATCH      KEY40,KEY51
          GOTO       SAVE1100 IF NOT EQUAL
          ADD        APINAMT,TOTALLOC
          ADD        APINGST,GSTALLOC
          ADD        ONE,F3
          GOTO       SAVE1000
.
SAVE1100  ASSIGN     APIMTOT,ALLTOTAL
          MOVE       "06",SCRID
          CALL       DF06L000
          MOVE       "02",SCRID
.
          COMPARE    ZERO,F3
          GOTO       SAVE5000 IF EQUAL
.
          COMPARE    TOTALLOC,ALLTOTAL
          GOTO       SAVE1150 IF NOT EQUAL   * Balanced so Exit Screen
.
          IF         IBCNUGST=2
            COMPARE    GSTALLOC,APIMGST
            GOTO       SAVE1150 IF NOT EQUAL
          ENDIF
          GOTO       SAVE6000
.--------------------------
. Totals Unbalanced
.--------------------------
SAVE1150  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
.
SAVE1200  KEYIN     *P1:24,*EL,"Credit Unbalanced. Change Totals (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          CALL      MESSAGE3
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      SAVE2000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      SAVE9000 IF EQUAL
          BEEP
          GOTO      SAVE1200
.
SAVE2000  MOVE      "15",HTOP
          MOVE      "1",HLEF
          MOVE      "80",HRIG
          MOVE      "24",HBOT
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HRIG
          MOVE      ZERO,HBOT
.
          CALL      CHTOT000
.
          CALL      PUTSCR00
          GOTO      SAVE1100
.-------------------------
. No Detail Delete Header
.-------------------------
SAVE5000  MOVE      "No Details for that Credit Note. Delete. ",DISPMSG
          CALL      MESSAGE4
          BRANCH    EXIT,SAVE9000
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RAAPIM1
          IF        OVRCD=0
            CALL      DEAPIM1
          ENDIF
          GOTO      SAVE9100
.
SAVE6000  GOTO      SAVE9100
.         ASSIGN    APIMTOT+APINGST-APIMDIS,XYZTOTAL
.         MOVE      APIMREF,LASTINV
.
SAVE9000  MOVE      TWO,EXIT   * Restart Screen
          GOTO      SAVE9999
.
SAVE9100  MOVE      ZERO,EXIT  * Exit Screen
          GOTO      SAVE9999
.
SAVE9200  MOVE      ONE,EXIT   * Return to Prompt
          GOTO      SAVE9999
.
SAVE9999  RETURN
.---------------------------------------
. Change Credit Note Total
.---------------------------------------
CHTOT000  DISPLAY   *P1:15,*EF
          HLINE     *G37,15,1,80
          DISPLAY   *P1:17,*V2LON," 1.",*HOFF," Credit Note Amount     : "
          DISPLAY   *P30:17,*V2LON,APIMTOT
          MOVE      "01",SCRID
          MOVE      "   25",FLDID
          MOVE      ZERO,FLAGGST
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ONE,FLAGGST
            DISPLAY   *P1:18,*V2LON," 2.",*HOFF," G.S.T.                 : "
            DISPLAY   *P30:18,*V2LON,APIMGST
          ENDIF
          MOVE      "02",SCRID
          ASSIGN    APIMTOT,ALLTOTAL
          DISPLAY   *P1:21,"    Amount to be Allocated : "
          DISPLAY   *P30:21,*V2LON,ALLTOTAL
          DISPLAY   *P1:22,"    Amount Allocated       : "
          DISPLAY   *P30:22,*V2LON,TOTALLOC
.
CHTOT100  ASSIGN    APIMTOT,ALLTOTAL
          DISPLAY   *P30:21,*V2LON,ALLTOTAL
          CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      CHTOT900 IF EQUAL  * Post
          COMPARE   SEQ,CCITEM
          GOTO      CHTOT950 IF EQUAL  * Cancel
          IF        FLAGGST=0
            BRANCH    CCITEM,CHTOT110
          ELSE
            BRANCH    CCITEM,CHTOT110,CHTOT120
          ENDIF
          BEEP
          GOTO      CHTOT100
.
CHTOT110  KEYIN     *P30:17,*V2LON,*RV,APIMTOT:
                    *P30:17,*DV,APIMTOT
          MOVE      "18",CVERT
          MOVE      "30",CCOL
.         MOVE      ZERO,APIMGST
          IF        FLAGGST=1
            IF      PAYASGO=1
              GOTO    CHTOT100
            ENDIF
            IF        NOGST=0
              MOVE      ONE,CHGTOT
              CALL      EGST0000      * enter gst
              MOVE      ZERO,CHGTOT
              DISPLAY   *PCCOL:CVERT,*V2LON,APIMGST
            ENDIF
          ENDIF
          GOTO      CHTOT100
.
CHTOT120  KEYIN     *P30:18,*V2LON,*RV,APIMGST:
                    *P30:18,*DV,APIMGST
          GOTO      CHTOT100
.
CHTOT900  PACK      KEY40,APBMBCH,APMACRD,APIMREF,APIMDOC,SP70
          MOVE      ZERO,APIMDIS
          MOVE      ZERO,APIMUPD
          CALL      RAAPIM1
          IF        OVRCD=0
            CALL      UPAPIM1
          ELSE
            CALL      WRAPIM1
          ENDIF
          GOTO      CHTOT999
.
CHTOT950  PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RDAPIM1
.
CHTOT999  RETURN
.
.----------------------------------------------------------------------
. Delete All Details from Credit Note
.----------------------------------------------------------------------
DELORD00
          PACK       KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL       RAAPIM1
          IF         OVRCD=0
            CALL       DEAPIM1
          ENDIF
          PACK       KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
DELORD10
          CALL       RSAPIN1
          CALL       RKAPIN1
          BRANCH     OVRCD,DELORD99
          PACK       KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MATCH      KEY40,KEY51
          GOTO       DELORD99 IF NOT EQUAL
          CALL       DEAPIN1
          GOTO       DELORD10
.
DELORD99  RETURN
.----------------------------------------------------------------------
. Transaction Detail Screen
.----------------------------------------------------------------------
DETS0000  CALL     RDAPIN1
          BRANCH   OVRCD,DETS9000
          MOVE     APINRES,KEY4
          CALL     RDFMRS1
          MOVE     APINDIS,KEY5
          CALL     RDFMDS1
.
          PACK     KEY14,APINLED,APINACC
          CALL     RDFMAM1
.
          MOVE     APINLED,KEY2
          CALL     RDFMLA1
.
          CALL     RFMCON00    * Get Control Account Details
.
          MOVE     SP70,IBGSDESC
          PACK     KEY6,APINCGS,SP70
          CALL     RDIBGS1
.
          MOVE     APINCGS,SAVECGS
          MOVE     IBGSDESC,SAVEDESC
.
          MATCH    SP70,APINCAT
          IF       @EQUAL
            IF       IBCNUGST=2
              ASSIGN   APINAMT+APINGST,APINAMT
            ENDIF
            CALL     SC04L000
            GOTO     DETS9999
          ENDIF
.
. Inventory System Related Item
.-------------------------------
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDAPIS1          * Read Inventory Directory Information
          BRANCH    OVRCD,DETS9999
.
          COMPARE   ONE,INCOSTYP
          GOTO      DETS9999 IF NOT EQUAL
.
          COMPARE   ZERO,HACCNT
          GOTO      DETS9999 IF EQUAL
.
          CALL      APISOPN1
.
DETS5000  UNPACK    APINORD,KEY1,KEY7
          PACK      KEY12,KEY7,APINCAT
          CALL      RDSIPF1
          BRANCH    OVRCD,DETS5100
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          BRANCH    OVRCD,DETS5100
.
          PACK      KEY7,SIPFPON
          CALL      RDSIPA1
          BRANCH    OVRCD,DETS5100
.
          MATCH     SP70,SIPCCAT
          IF        !(@EQUAL)
            MOVE      SIPCCAT,KEY7
            CALL      RDSIIA1
            PACK      KEY27,SIPCCAT,APIMCRD,SIPCSUT
            CALL      RDSIIC1
          ENDIF
          GOTO     DETS5200
.
DETS5100  MOVE     "Invalid",SIPCPD
          MOVE     "Invalid",SIPCPN
          MOVE     "Invalid",SIPCSUT
          MOVE     "Invalid",SIPCCAT
          MOVE     "Invalid",SIPCWAR
.
DETS5200  CALL      RECCAL00
          ASSIGN    APINAMT+APINGST,SINTOTAM
          MOVE      APINQTY,QTYINVCD
          CALL      SC07L000
          CALL      APISCLS1
          GOTO      DETS9999
.
DETS9000  BEEP
.
DETS9999  RETURN
.
RECCAL00  MOVE      SP70,LASTINV
          MOVE      ZERO,INVQTY
          MOVE      ZERO,RECQTY
          UNPACK    APINORD,KEY1,KEY7
          BRANCH    INCOSTYP,RECSIN00
          RETURN
.----------------------------------------------------------------------
. Recalculate for New Supply System.
.----------------------------------------------------------------------
RECSIN00  MOVE      SP70,LASTINV
          MOVE      ZERO,INVQTY
          MOVE      ZERO,RECQTY
          UNPACK    APINORD,KEY1,KEY7
          CALL      RDSIPA1
          IF        OVRCD=1
            MOVE      "Error ",SIPAPON
          ENDIF
.
          PACK      KEY10,KEY7,APINCAT
          CALL      RDSIPC1
          IF        OVRCD=1
            MOVE      "Error ",SIPCPN
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Delete Item From Credit Note
.----------------------------------------------------------------------
DITEM000
          MOVE      "Select Item to Delete   : ",DISPMSG
          CALL      MESSAGE2
DITEM005
          CALL      MDELQ000
          BRANCH    EXIT,DITEM900,DITEM900
          MOVE      SCSLITM,FIELDNO
          MATCH     "   29",SCSLITM
          GOTO      DITEM100 IF NOT EQUAL
          CALL      SELECTED
          MATCH     "APIN1",SCPSMTY
          GOTO      DITEM100 IF NOT EQUAL
.
          CALL      RDTAPIN11
          IF        OVRCD=1
            BEEP
            GOTO      DITEM005
          ENDIF
.
          PACK      KEY51,APIN1MKY,SP70
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      DEAPIN1
          ELSE
            BEEP
            GOTO      DITEM005
          ENDIF
.
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      APIN1FL1,KEY5;;
          READKS    APIN1FL1;SCPSROW,SCPSCOL,APIN1MKY
          IF        !@OVER
            MOVE      APIN1MKY,KEY51
            CALL      RDAPIN1
            IF        !@OVER
              CALL      RPAPIN1
            ENDIF
          ENDIF
          CALL      DP02L000
          CALL      UPDTOT00
          GOTO      DITEM005
.
DITEM100  MOVE      "Invalid Selection. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      DITEM005
.
DITEM900  CALL      MESSAGE3
          RETURN

.----------------------------------------------------------------------
. Add Sundry Items to an Order
.----------------------------------------------------------------------
ADDORD00  MOVE      "04",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
.
ADDORD10  MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      "11",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
          MOVE      ONE,ACCEPT
          MOVE      SP70,APINORD
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,Z70
          PACK      KEY48,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,SP70
          CALL      RSAPIN1
          CALL      RPAPIN1
          BRANCH    OVRCD,ADDORD30
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
          MATCH     KEY48,KEY51
          GOTO      ADDORD30 IF NOT EQUAL
.
          MOVE      ZERO,F3
          MOVE      APINLIN,F3
          ADD       ONE,F3
          MOVE      F3,APINLIN
          GOTO      ADDORD40
.
ADDORD30  MOVE      ONE,F3
          MOVE      F3,APINLIN
          MOVE      SP70,APINORD
.
ADDORD40  MOVE      SP70,APINLED
          MOVE      SP70,APINACC
          MOVE      SP70,APINDIS
          MOVE      SP70,APINRES
          MOVE      SP70,APINDES
          MOVE      ZERO,APINAMT
          MOVE      SP70,APINCAT
          MOVE      SP70,APINLIN
          MOVE      ZERO,APINQTY
          MOVE      ZERO,APINUCT
          CALL      SF04L000 * Select Fields
          BRANCH    EXIT,ADDORD50,ADDORD99,ADDORD99,ADDORD99,ADDORD99
          GOTO      ADDORD10
.
ADDORD50  MOVE      ZERO,EXIT
          MOVE      ZERO,ACCEPT
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
.
ADDORD99  RETURN
FMAMTY01  MOVE      ONE,CACCTIND
          RETURN
.
.--------------------------------------------------
. Get Control Accounts
.--------------------------------------------------
GETCON00
          CALL     RFMCON00
          RETURN
.
.----------------------------------------------------------------------
. Keyin Ledger With Default
.----------------------------------------------------------------------
KFMLA000  TOPIC     "FMLALEDG"
          MOVE      APBMLED,FMLALEDG
          KEYIN     *PCCOL:CVERT,*DV,FMLALEDG:
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,*RV,FMLALEDG:
                    *PCCOL:CVERT,*DV,FMLALEDG
          MOVE      FMLALEDG,FMAMLEDG
          MOVE      FMLALEDG,APINLED
.
          ENDSET    FMLALEDG
          APPEND    SP70,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP70,FMLALEDG
          GOTO      KFMLA090 IF EQUAL
.
          ENDSET    FMLALEDG
          CMATCH    EXITCHAR,FMLALEDG
          GOTO      KFMLA095 IF EQUAL
.
          CMATCH    QUEST,FMLALEDG
          GOTO      KFMLA010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMLAA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMLALEDG
          APPEND    SP70,FMLALEDG
          RESET     FMLALEDG
.
          MATCH     SP70,FMLALEDG
          GOTO      KFMLA000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG
KFMLA010
          RESET     FMLALEDG
          MOVE      FMLALEDG,FMAMLEDG
          MOVE      FMLALEDG,APINLED
          PACK      KEY2,FMLALEDG
          CALL      RAFMLA1
          BRANCH    OVRCD,KFMLA080
          BRANCH    CKEYTYP,KFMLA075
          CALL      RDFMLA1
KFMLA070
          MOVE      ZERO,EXIT
          GOTO      KFMLA099
KFMLA075
          MOVE      "Ledger Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMLA000
KFMLA080
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMLA099,KFMLA099
          MOVE      "Ledger Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMLA000
KFMLA090
          MOVE      ONE,EXIT
          GOTO      KFMLA099
KFMLA095
          MOVE      TWO,EXIT
KFMLA099  TOPIC     PRGID
          RETURN
EACCT000   CALL      KFMAMA00
           BRANCH    EXIT,EACCT999,EACCT999
.
           COMPARE   ZERO,FMAMSTAT
           GOTO      EACCT999 IF EQUAL
.
           BEEP
           MOVE      "Account Code Suspended -",DISPMSG
           CALL      MESSAGE1
           GOTO      EACCT000
.
EACCT999   MOVE      FMAMACCT,APINACC
           RETURN
.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSDISKY
.   Routine   :   KFMDS000 Keyin Dissection
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KFMDS000 TOPIC     "FMDSCODE"
          MOVE      APBMDIS,FMDSCODE
          KEYIN     *PCCOL:CVERT,*DV,FMDSCODE:
                    *PCCOL:CVERT,*V2LON,*RV,*JR,FMDSCODE:
                    *PCCOL:CVERT,*DV,FMDSCODE
          MOVE      FMDSCODE,APINDIS
.
          ENDSET    FMDSCODE
          APPEND    SP70,FMDSCODE
          RESET     FMDSCODE
.
          MATCH     SP70,FMDSCODE
          GOTO      KFMDS090 IF EQUAL
.
          ENDSET    FMDSCODE
          CMATCH    EXITCHAR,FMDSCODE
          GOTO      KFMDS095 IF EQUAL
.
          CMATCH    QUEST,FMDSCODE
          GOTO      KFMDS010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMDSA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMDSCODE
          APPEND    SP70,FMDSCODE
          RESET     FMDSCODE
.
          MATCH     SP70,FMDSCODE
          GOTO      KFMDS000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMDSCODE
KFMDS010
          RESET     FMDSCODE
          MOVE      FMDSCODE,APINDIS
          PACK      KEY5,FMDSCODE
          CALL      RAFMDS1
          BRANCH    OVRCD,KFMDS080
          BRANCH    CKEYTYP,KFMDS075
          CALL      RDFMDS1
KFMDS070
          MOVE      ZERO,EXIT
          GOTO      KFMDS099
KFMDS075
          MOVE      "Dissection Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMDS000
KFMDS080
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMDS099,KFMDS099
          MOVE      "Dissection Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMDS000
KFMDS090
          MOVE      ONE,EXIT
          GOTO      KFMDS099
KFMDS095
          MOVE      TWO,EXIT
KFMDS099 TOPIC    PRGID
          RETURN

.---------------------------------------------------------------------------
.   System    :   Financial Management System
.   Include   :   FMSRESKY
.   Routine   :   KFMRS000 Keyin Responsibility
.   Parameter :   CKEYTYP 0 = Keyin , 1 = Accept, 2 = Either
.   Return    :   EXIT = 1 null entry, 2 EXITCHAR entered
.-------------------------------------------------------------------------------
KFMRS000 TOPIC     "FMRSCODE"
          MOVE      APBMRES,FMRSCODE
          KEYIN     *PCCOL:CVERT,*DV,FMRSCODE:
                    *PCCOL:CVERT,*V2LON,*RV,FMRSCODE:
                    *PCCOL:CVERT,*DV,FMRSCODE
          MOVE      FMRSCODE,APINRES
.
          ENDSET    FMRSCODE
          APPEND    SP70,FMRSCODE
          RESET     FMRSCODE
.
          MATCH     SP70,FMRSCODE
          GOTO      KFMRS090 IF EQUAL
.
          CMATCH    EXITCHAR,FMRSCODE
          GOTO      KFMRS095 IF EQUAL
.
          CMATCH    QUEST,FMRSCODE
          GOTO      KFMRS010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMRSA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    FMRSCODE
          APPEND    SP70,FMRSCODE
          RESET     FMRSCODE
.
          MATCH     SP70,FMRSCODE
          GOTO      KFMRS000 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRSCODE
KFMRS010
          MOVE      FMRSCODE,APINRES
          PACK      KEY4,FMRSCODE
          CALL      RAFMRS1
          BRANCH    OVRCD,KFMRS080
          BRANCH    CKEYTYP,KFMRS075
          CALL      RDFMRS1
KFMRS070
          MOVE      ZERO,EXIT
          GOTO      KFMRS099
KFMRS075
          MOVE      "Responsibility Already Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMRS000
KFMRS080
          MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,KFMRS099,KFMRS099
          MOVE      "Responsibility Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFMRS000
KFMRS090
          MOVE      ONE,EXIT
          GOTO      KFMRS099
KFMRS095
          MOVE      TWO,EXIT
KFMRS099 TOPIC    PRGID
          RETURN
.--------------------------------------------------
. Keyin Invoice Description
.--------------------------------------------------
INVDES00  IF        ACCEPT=1
            MOVE      SP70,APINDES
          ENDIF
INVDES01
          KEYIN     *PCCOL:CVERT,*RV,*V2LON,APINDES
          MOVE      ZERO,EXIT
.
          ENDSET    APINDES
          APPEND    SP70,APINDES
          RESET     APINDES
.
          MATCH     SP70,APINDES
          GOTO      INVDES99 IF EQUAL
.
          CMATCH    QUEST,APINDES
          GOTO      INVDES10 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HFMTDA00
          MOVE      SCCITEM,CCITEM
.
          MOVE      FMTDCODE,APINDES
          ENDSET    APINDES
          APPEND    SP70,APINDES
          RESET     APINDES
.
          MATCH     SP70,APINDES
          GOTO      INVDES01 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,APINDES
INVDES10
          MOVE      ZERO,EXIT
          PACK      KEY4,APINDES
          CALL      RDFMTD1
          BRANCH    OVRCD,INVDES99
          MOVE      FMTDDESC,APINDES
          GOTO      INVDES01
.
INVDES99  RETURN
.
.----------------------------------------------------------------------
. Save Sundry Transaction Details
.----------------------------------------------------------------------
WAPIN000  PACK      KEY14,APINLED,APINACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            MOVE      "Invalid Ledger/Account - ",DISPMSG
            CALL      MESSAGE1
            GOTO      WAPIN980
          ELSE
            MOVE      FMAMTYPE,F1
            IF      F1<1|F1>5
              MOVE      "Invalid Ledger/Account - ",DISPMSG
              CALL      MESSAGE1
              GOTO      WAPIN980
            ENDIF
          ENDIF
.
          IF        IBCNUGST=2
            ASSIGN    (APINAMT-APINGST),APINAMT
          ENDIF
.
          MOVE      SP1,APINPAYG
          IF        PAYASGO=1
            MOVE      ANSP,APINPAYG
            GOTO      WAPIN050
          ENDIF
.
          PACK      KEY6,APINCGS,SP70
          CALL      RDIBGS1
          IF        OVRCD=1
            MOVE      SP3,APINBASC
          ELSE
            MOVE      IBGSBASC,APINBASC
          ENDIF
.
WAPIN050  MOVE      ZERO,F3
          MOVE      APINLIN,F3
          COMPARE   ZERO,F3
          GOTO      WAPIN500 IF NOT EQUAL * Must have been a selection
          MOVE      SP70,APINORD          * Must be an add
          MOVE      ZERO,F3
.
WAPIN100  ADD       ONE,F3
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,F3
          CALL      RAAPIN1
          COMPARE   ZERO,OVRCD
          GOTO      WAPIN100 IF EQUAL
.
WAPIN500  MOVE      F3,APINLIN
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,APINLIN
          UNPACK    KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MOVE      ZERO,APINUPD
          MOVE      APBMDIS,APINDIS
          MOVE      APBMRES,APINRES
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      UPAPIN1
          ELSE
            CALL      WRAPIN1
          ENDIF
.
          CALL      UPDTOT00
          MOVE      "04",SCRID
          GOTO      WAPIN999
.
WAPIN980  MOVE      ONE,EXIT
.
WAPIN999 RETURN
.----------------------------------------------------------------------
. Delete Sundry Transaction Details
.----------------------------------------------------------------------
DAPIN000  MOVE      ZERO,F3
          MOVE      APINLIN,F3
          COMPARE   ZERO,F3
          GOTO      DAPIN999 IF EQUAL
          MOVE      F3,APINLIN
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,APINORD,APINLIN
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      DEAPIN1
          ENDIF
.
DAPIN999  RETURN
K04AMT00  KEYIN     *PCCOL:CVERT,*DV,SP20:
                    *PCCOL:CVERT,*V2LON,*RV,APINAMT
          IF        APINAMT=0
            BRANCH    ACCEPT,K04AMT95  * in insert mode ?
            PROC      DELQST00         * ok to delete transaction ?
            SUB       ONE,CEXIT
            BRANCH    CEXIT,K04AMT00,K04AMT95
            CALL      DAPIN000
            GOTO      K04AMT95
          ELSE
            MOVE      SP70,APINCAT
            MOVE      ZERO,APINQTY
            MOVE      ZERO,APINUCT
          ENDIF
.
          IF        IBCNUGST=2
            MOVE      ZERO,APINGST
            IF        NOGST<>1
              CALL      CALTAX00
            ENDIF
          ENDIF
.
K04AMT90  MOVE      ZERO,EXIT
.
          MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APINGST,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          GOTO      K04AMT99
.
K04AMT95  MOVE      TWO,EXIT
.
K04AMT99  RETURN
.**********************************************************************
. DELQST00 - my routine wont kill line 24 or modify CVERT & CCOL
.**********************************************************************
          DEFPROC   DELQST00
CCOL      FORM      3
CVERT     FORM      3
LINE24A   DIM       80
ATTR24A   DIM       80
.
          GETVAR    LINE24A,ATTR24A,1,24    * save line 24
          CALL      DELQST                  * ok to delete transaction ?
          PUTVAR    LINE24A,ATTR24A,1,24    * restore line 24
          GOTO      BOTTOM
.
          INC       IBACOMN                 * need delqst routine
.
BOTTOM    ENDPROC
.
CALTAX00  COMPARE   ZERO,IBCNUGST
          GOTO      CALTAX90 IF EQUAL
.
          COMPARE   ZERO,APINAMT
          GOTO      CALTAX90 IF EQUAL
.
          MATCH     SP6,APINCGS
          GOTO      CALTAX90 IF EQUAL
.
          PACK      KEY14,APINCGS,APIMIDT,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     APINCGS,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  COMPARE   TWO,IBCNUGST
          GOTO      CALTAX90 IF NOT EQUAL
.
          IF        PAYASGO=1
            MOVE      ZERO,APINGST
          ELSE
            ASSIGN    (APINAMT-(APINAMT/(ONE+(IBGEAMNT/HUNDRED)))),APINGST
          ENDIF
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,APINGST
.
CALTAX99  RETURN
.------------------------------------------------------------
. Enter GST Code
.------------------------------------------------------------
EGSTC000  MOVE      SP6,APINCGS
          MOVE      SP3,APINBASC
          MOVE      SP6,IBGSCODE
          MOVE      SP3,IBGSBASC
          MOVE      SP70,IBGSDESC
.
          IF        IBCNUGST=0
            GOTO      EGSTC999
          ELSE
            IF        IBCNUGST=1
              MOVE      FMCOINGS,APINCGS
              GOTO      EGSTC200
            ENDIF
          ENDIF
.
          MOVE      FMCOINGS,APINCGS
.
          IF        PAYASGO=1
            MOVE      FMCOPAYG,APINCGS
            PACK      KEY6,APINCGS,SP70
            CALL      RDIBGS1
            MOVE      FMCOPBAS,APINBASC
            GOTO      EGSTC300
          ENDIF
.
          IF        NOGST=1
            MATCH     SAVECGS,FMCOPAYG
            IF        @EQUAL
              MOVE      SAVECGS,APINCGS
              MOVE      SAVEDESC,IBGSDESC
            ELSE
              MOVE      SP6,APINCGS
            ENDIF
            MOVE      ZERO,APINGST
            GOTO      EGSTC900
          ELSE
            IF        HASABN=1 & APMAGREG = 0
              MOVE      FMCOXBAS,APINCGS                               *I-14452
            ENDIF
          ENDIF
.
          MOVE      APINCGS,IBGSCODE
          MOVE      ZERO,CKEYTYP
          MOVE      ZERO,INACTV
          CALL      KIBGSA00
          BRANCH    EXIT,EGSTC300,EGSTC999
          MOVE      IBGSCODE,APINCGS
.
EGSTC200  PACK      KEY6,APINCGS,SP70
          CALL      RDIBGS1
          BRANCH    OVRCD,EGSTC000
          MOVE      IBGSBASC,APINBASC
          MOVE      ZERO,EXIT
.
EGSTC300  COMPARE   ZERO,APINAMT
          GOTO      EGSTC999 IF EQUAL
.
          BRANCH    PAYASGO,EGSTC900
.
          CALL      CALTAX00
.
EGSTC900  MOVE      "   34",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     APINGST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
.
EGSTC999  RETURN
.
.----------------------------------------------------------------------
. Enter GST
.----------------------------------------------------------------------
K04GST00  IF        NOGST=1
            MOVE      ZERO,APINGST
            GOTO      K04GST99
          ENDIF
.
          IF        PAYASGO=1
            MOVE      ZERO,APINGST
            GOTO      K04GST99
          ENDIF
.
          COMPARE   ZERO,APINGST
          GOTO      K04GST50 IF NOT EQUAL
.
          COMPARE   ZERO,APINAMT
          GOTO      K04GST50 IF EQUAL
.
          IF        IBCNUGST=2
            MOVE      ZERO,APINGST
            IF        NOGST<>1
              CALL      CALTAX00
            ENDIF
          ENDIF
.
K04GST50  KEYIN     *PCCOL:CVERT,*DV,SP20:
                    *PCCOL:CVERT,*V2LON,*RV,APINGST
.
K04GST99  RETURN
.----------------------------------------------------------------------
. Calculate Allocation Total
.----------------------------------------------------------------------
ALLTOT00  IF        PAYASGO=1
            ASSIGN    APIMTOT-APIMDIS-PAYASTOT,INVTOTAL
            ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
            MOVE      ALLTOTAL,DOCTOTAL
          ELSE
            ASSIGN    APIMTOT-APIMDIS+APIMGST,INVTOTAL
            ASSIGN    APIMTOT-APIMDIS,ALLTOTAL
          ENDIF
.
ALLTOT80  MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      INVTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ALLTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   60",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DOCTOTAL,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   61",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      GSTALLOC,VAR
            CALL      DISPITEM
          ENDIF
          RETURN
.--------------------------------------------------
. Keyin Quantity
.--------------------------------------------------
SINQTY00  KEYIN     *PCCOL:CVERT,*RV,*V2LON,QTYINVCD
          MOVE      QTYINVCD,APINQTY
.
          ASSIGN    APINUCT*APINQTY,F12P4
.
          IF        PAYASGO=1 | F12P4=0
            MOVE      F12P4,APINAMT
            MOVE      ZERO,APINGST
            GOTO      SINQTY90
          ENDIF
.
          CALL      SINTAX00
          ASSIGN    F12P4-F12P4A,F12P4B
          MOVE      F12P4A,APINGST
          MOVE      F12P4B,APINAMT
.
SINQTY90  ASSIGN    APINAMT+APINGST,SINTOTAM
          MOVE      "   50",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APINGST,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SINTOTAM,VAR
            CALL      DISPITEM
          ENDIF
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APINAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          RETURN
.--------------------------------------------------
. Keyin Unit Cost
.--------------------------------------------------
SINUCT00  KEYIN     *PCCOL:CVERT,*DV,SP22:
                    *PCCOL:CVERT,*RV,*V2LON,APINUCT
.
          IF        (APINUCT<0)
            MOVE      "Must not be less than zero - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SINUCT00
          ENDIF
.
          IF        (APINUCT=0)
            MOVE      "Are you sure the unit cost is zero - ",DISPMSG
            CALL      MESSAGE4
            BRANCH    EXIT,SINUCT00
          ENDIF
.
          ASSIGN    APINUCT*APINQTY,F12P4
.
          IF        PAYASGO=1 | F12P4=0
            MOVE      F12P4,APINAMT
            MOVE      ZERO,APINGST
            GOTO      SINUCT90
          ENDIF
.
          CALL      SINTAX00
          ASSIGN    F12P4-F12P4A,F12P4B
          MOVE      F12P4A,APINGST
          MOVE      F12P4B,APINAMT
.
SINUCT90  ASSIGN    APINAMT+APINGST,SINTOTAM
          MOVE      "   50",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APINGST,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SINTOTAM,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APINAMT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
.
SINUCT99  RETURN
.
.--------------------------------------------------
. Keyin Invoice Amount
.--------------------------------------------------
SINAMT00  KEYIN     *PCCOL:CVERT,*DV,SP20:
                    *PCCOL:CVERT,*RV,*V2LON,APINAMT
.
          IF        IBCNUGST=2
            MOVE      ZERO,APINGST
            IF        NOGST<>1
              MOVE      APINAMT,F12P4
              CALL      SINTAX00
              ASSIGN    F12P4-F12P4A,F12P4B
              MOVE      F12P4A,APINGST
              MOVE      F12P4B,APINAMT
            ENDIF
          ENDIF
.
          ASSIGN    (APINAMT+APINGST)/APINQTY,APINUCT
          ASSIGN    APINAMT+APINGST,SINTOTAM
.
          MOVE      "   50",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APINGST,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SINTOTAM,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APINUCT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
SINAMT99  RETURN
.--------------------------------------------------
. Save P/O Detail Line
.--------------------------------------------------
POSAV000
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          MOVE      ZERO,APINUPD
          MOVE      APBMDIS,APINDIS
          MOVE      APBMRES,APINRES
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      UPAPIN1
          ELSE
            CALL      WRAPIN1
          ENDIF
.
          RETURN
.
.--------------------------------------------------
. Delete P/O Detail Line
.--------------------------------------------------
PODEL000
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN
          CALL      RAAPIN1
          IF        OVRCD=0
            CALL      DEAPIN1
          ENDIF
          RETURN
.
.------------------------------------------------------------
. Enter GST Code
.------------------------------------------------------------
EGSTP000  MOVE      SP6,APINCGS
          MOVE      SP3,APINBASC
          MOVE      SP6,IBGSCODE
          MOVE      SP3,IBGSBASC
          MOVE      SP70,IBGSDESC
.
          IF        IBCNUGST=0
            GOTO       EGSTP999
          ELSE
            IF        IBCNUGST=1
              MOVE      FMCOINGS,APINCGS
              GOTO      EGSTP200
            ENDIF
          ENDIF
.
          MOVE      FMCOINGS,APINCGS
.
          IF        PAYASGO=1
            MOVE      FMCOPAYG,APINCGS
            PACK      KEY6,APINCGS,SP70
            CALL      RDIBGS1
            IF        OVRCD=1
              MOVE      SP3,APINBASC
            ELSE
              MOVE      IBGSBASC,APINBASC
            ENDIF
            GOTO      EGSTP900
          ENDIF
.
          IF        NOGST=1
            MOVE      ZERO,APINGST
            MOVE      SP6,APINCGS
            MOVE      SP3,APINBASC
            GOTO      EGSTP900
          ELSE
            IF        HASABN=1 & APMAGREG = 0
              MOVE      FMCOXBAS,APINCGS                               *I-14452
            ENDIF
          ENDIF
.
          MOVE      APINCGS,IBGSCODE
          MOVE      ZERO,CKEYTYP
          MOVE      ZERO,INACTV
          CALL      KIBGSA00
          BRANCH    EXIT,EGSTP300,EGSTP999
          MOVE      IBGSCODE,APINCGS
.
EGSTP200  PACK      KEY6,APINCGS,SP70
          CALL      RDIBGS1
          BRANCH    OVRCD,EGSTP000
          MOVE      IBGSBASC,APINBASC
          MOVE      ZERO,EXIT
.
EGSTP300  COMPARE   ZERO,APINAMT
          GOTO      EGSTP999 IF EQUAL
.
          BRANCH    PAYASGO,EGSTP900
.
          ASSIGN    APINQTY*APINUCT,F12P4
          CALL      SINTAX00
          ASSIGN    F12P4-F12P4A,F12P4B
          MOVE      F12P4A,APINGST
          MOVE      F12P4B,APINAMT
.
EGSTP900  MOVE      "   50",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     APINGST,VAR
            CALL     DISPITEM
          ENDIF
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     APINAMT,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   48",FLDID
          CALL      GETPOSIT
.
EGSTP999  RETURN
.
SINTAX00  COMPARE   ZERO,IBCNUGST
          GOTO      SINTAX90 IF EQUAL
.
          COMPARE   ZERO,F12P4
          GOTO      SINTAX90 IF EQUAL
.
          MATCH     SP6,APINCGS
          GOTO      SINTAX90 IF EQUAL
.
          PACK      KEY14,APINCGS,APIMIDT,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      SINTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,SINTAX90
.
          MATCH     APINCGS,IBGECODE
          GOTO      SINTAX90 IF NOT EQUAL
.
SINTAX10  COMPARE   TWO,IBCNUGST
          GOTO      SINTAX90 IF NOT EQUAL
.
          IF        PAYASGO=1
            MOVE      ZERO,F12P4A
          ELSE
            ASSIGN    (F12P4-(F12P4/(ONE+(IBGEAMNT/HUNDRED)))),F12P4A
          ENDIF
          GOTO      SINTAX99
.
SINTAX90  MOVE      ZERO,F12P4A
.
SINTAX99  RETURN
.
.--------------------------------------------------
. Keyin GST Amount
.--------------------------------------------------
SINGST00  MATCH      SP70,SIPCCON
          GOTO       SINGST10 IF EQUAL
          IF         FMCOINVP=1
            BEEP
            MOVE       "Contracted Price for this Item. - ",DISPMSG
            CALL       MESSAGE1
            GOTO       SINGST99
          ENDIF
.
SINGST10  KEYIN     *PCCOL:CVERT,*DV,SP20:
                      *PCCOL:CVERT,*RV,*V2LON,APINGST
          IF        (APINGST<0)
            MOVE      "Must not be less than zero - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SINGST10
          ENDIF
.
          ASSIGN    (APINAMT+APINGST)/APINQTY,APINUCT
          ASSIGN    APINAMT+APINGST,SINTOTAM
.
          MOVE      "   51",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SINTOTAM,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      APINUCT,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   50",FLDID
          CALL      GETPOSIT
SINGST99  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       AMSNEWIO/INC
          INC       APS17CD     
          INC       APSAPYCD    
          INC       APSAPYIO/INC
          INC       APSBMFIO/INC
          INC       APSBMFKY    
          INC       APSCAFIO/INC
          INC       APSCIOIO/INC
          INC       APSCIOKY    
          INC       APSCKIKY    
          INC       APSIMSIO/INC
          INC       APSIMSKY    
          INC       APSINPIO/INC
          INC       APSISLIO/INC
          INC       APSISLKY    
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       APSNSCIO/INC
          INC       APSOPNCD    
          INC       APSORDIO/INC
          INC       APSPPDIO/INC
          INC       APSPPDKY    
          INC       APSSUBIO/INC
          INC       FMSAMAIO/INC
          INC       FMSAMAKY    
          INC       FMSBCFIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSDISIO/INC
          INC       FMSDISKY    
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMAKY    
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSRESIO/INC
          INC       FMSRESKY    
          INC       FMSTDSIO/INC
          INC       FMSTDSKY    
          INC       FMSTUPIO/INC
          INC       IBABATIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGKIKY    
          INC       IBAGSTIO/INC
          INC       IBAGSTKY    
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIHIO/INC
          INC       SINFACIO/INC
          INC       SINORDUS    
          INC       SINORIIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSCMIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINWARIO/INC
.
          INC       STDGENCD
.
