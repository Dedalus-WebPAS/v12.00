. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAAPS88                                             *
. * Desc      :   Trial Balance Extract                                *
. **********************************************************************
. * Date      :   30.06.2005                                           *
. * Author    :   Sandra Barcham                                       *
. * Mods      :                                                        *
. *                                                                    *
. * V9.04.00 20.06.2006 Sandra Barcham                                 *
. *          Created Trial Balance Extract (Copied from IBAFMS46)      *
. **********************************************************************
.
          INC       FMSSTDDF
.
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCFD/INC
          INC       FMSSBAFD/INC
          INC       FMSORAFD/INC
          INC       FMSTRNFD/INC
.
.**********************************************************************
.*                   Data variables required                          *
.**********************************************************************
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
EXPORTYN  FORM      1                    * Export File Name
TABDELM   EQU       0x7C                 * Tab Delimiter
.
BANKNAME  DIM       35
CREDNAME  DIM       35
DEBTNAME  DIM       35
DISCNAME  DIM       35
PAYMNAME  DIM       35
AGSTNAME  DIM       35
CGSTNAME  DIM       35
ACCTTYPE  DIM       15
COUNT     FORM      2
FMST      INIT      "fmst"
FORMAT    INIT      "(999,999,999,999.99 "
FORMATT   INIT      "(99,999,999,999,999.99 "
FORM9     FORM      9
FORM12    FORM      12
FORM12P2  FORM      12.2
EFINDATE  DIM       10
ENDDATE    DIM       8
EPERDATE  DIM       10
FPSFILE   DIM       8
ITEM      FORM      1
MODIFLAG  FORM      1
NOTES     DIM       30
NETYEAR   FORM      12.2
PRTFLAG   DIM       2
TOTOUT    FORM      7
EXFLAG    DIM       3
YNFLAG    DIM       3
.
PERIDESC  DIM       15
FPERIOD   DIM       2
SAVETYPE  DIM       1
STARTDTE  DIM       8
TRNFILE   DIM       8
VALIDFLG  FORM      1
YEAREND   DIM       4
Z12       INIT      "zzzzzzzzzzzz"
ZEROBAL   FORM      1
.
ZERO6     INIT      "000000"
NINE6     INIT      "999999"
ACCOUNT   DIM       12
ACCOUNTC  DIM       6
ACCTDATE  DIM       8
ATOTCTRN  FORM      14.2
ATOTDTRN  FORM      14.2
COSTCENT  DIM       6
COSTCODE  DIM       12
INTERCOM  DIM       3
JOURDESC  DIM       35
LTOTCTRN  FORM      14.2
LTOTDTRN  FORM      14.2
OUTDTRN   DIM       20
OUTCTRN   DIM       20
SUBJCODE  DIM       12
TEMPDDIM  DIM       17
TEMPCDIM  DIM       17
TOTCTRN   DIM       23    *                 - Credit Transactions
TOTDTRN   DIM       23    *                 - Debit Transactions
.
APS88TMP  IFILE     SQL, FIXED=72, KEY="U1-2,3-14"
APS88REP  IFILE     SQL, FIXED=72, KEY="U68-68,1-2,3-14"
NAMEA     INIT      "aps88A"
FILENAMA  DIM       8
COMMAND   DIM       80
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
TEMPLEDG  DIM       2      2        1     Ledger Code
TEMPACCT  DIM       12     12       3     Account Code
TEMPDEBT  FORM      14.2   9        15    Debit Amount
TEMPCRED  FORM      14.2   9        24    Credit Amount
TEMPDESC  DIM       35     35       33    Account Description
TEMPTYPE  DIM       1      1        68    Account Type
.                                           0 - P/L
.                                           1 - Balance Sheet
TEMPINTR  DIM       3      3        69    Intercompany Code
.
.End of file                        72
.
PRGID     INIT      "IBAAPS88"
PRGNAM    INIT      "Trial Balance Extract"                   
VERSION   INIT      "V12.00.00"
.
.**********************************************************************
.*                           ML0000                                   *
.*                    Mainline  Code                                  *
.**********************************************************************
.
ML0000    CALL      INIT0000             * initialisation
.
ML1000    CALL      DSCR0000             * display the screen
.
          CALL      KRED0000             * keyin the report details
          BRANCH    EXIT,ML9999,ML9999

.
ML2000    CALL      SIPC0000             * select item run report exit
          BRANCH    EXIT,ML9999,ML9999   * cancel or exitchar selected
.
.----  Post selected -----
.

          CALL      MAKEXP00             * create export program
          CALL      OPEN0000             * open the relative files     
          BRANCH    EXIT,ML2000
.
          CALL      GENR0000             * Generate temporary table
          CALL      PRIN0000             * Print the report
          CALL      TRAN0000             * Transfer export file
.
ML9999    CHAIN     PGM
.
.*********************************************************************
.*                          INIT0000                                 *
.*                     initialisation                                *
.*********************************************************************
.
INIT0000  CALL      DISPHEAD
          DISPLAY   *P64:24,"fmsamaaf"
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmscsaaf"
          OPEN      FMSCSAA1,"fmscsaaf"
.
          DISPLAY   *P64:24,"fmslmaaf"
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf"
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmssbaaf"
          OPEN      FMSSBAA1,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmsoraaf"
          OPEN      FMSORAA1,"fmsoraaf"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
.
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO51
          CALL      RDFMCO65
          CALL      RDFMCO66
         
          MOVE      ZERO,MODIFLAG
          MOVE      SP70,YNFLAG
          MOVE      SP70,EXFLAG
.
INIT9999  RETURN

.**********************************************************************
.*                         DSCR0000                                   *
.*                     Display the screen                             *
.**********************************************************************
.
DSCR0000  DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,"1.",*HOFF," Ledger            : ":
                    *P2:5,*V2LON,"2.",*HOFF," Financial Year    : ":
                    *P2:6,*V2LON,"3.",*HOFF," Period            : ":
                    *P2:7,*V2LON,"4.",*HOFF," Export       (Y/N): "
.
DSCR9999  RETURN
.
.**********************************************************************
.*                         KRED0000                                   *
.*               Keyin the report details                             *
.**********************************************************************
.
KRED0000  MOVE      ZERO,ITEM
.
.-----  This routine keyins in the fields by incrementing a  -----
.-----  counter and callling the modify routine.             -----
.
KRED1000  ADD       ONE,ITEM
.
          COMPARE   FIVE,ITEM            * test if all details have been
          GOTO      KRED9999 IF EQUAL      entered
.
          MOVE      ITEM,CCITEM
          CALL      MRED0000             * call keyin routine
          BRANCH    EXIT,KRED2000,KRED9999      exit if exitchar
          GOTO      KRED1000
.
.----- spaces entered so keyin previous field ----
.
KRED2000  SUB       TWO,ITEM
          GOTO      KRED1000
.
KRED9999  RETURN
.
.**********************************************************************
.*                         MRED0000                                   *
.*                  Modify the report details                         *
.**********************************************************************
.
MRED0000  BRANCH    CCITEM,MRED1000,MRED2000,MRED3000,MRED4000
          BEEP
          GOTO      MRED9999
.
MRED1000  CALL      KLED0000             * keyin ledger           
          GOTO      MRED9999
.
MRED2000  CALL      KFIN0000             * keyin financial year
          BRANCH    MODIFLAG,MRED3000    * if in modify mode enforce
          GOTO      MRED9999               keyin of period
.
MRED3000  BRANCH    EXIT,MRED9999,MRED9999
          CALL      KPER0000             * keyin period        
          GOTO      MRED9999
.
MRED4000  CALL      KEXP0000
          GOTO      MRED9999
.
MRED9999  RETURN
.
.**********************************************************************
.*                         KLED0000                                   *
.*                      keyin the ledger                              *
.**********************************************************************
.
KLED0000  MOVE      ZERO,EXIT
          MOVE      FOUR,CVERT
          MOVE      TWENTY5,CCOL
.
          CALL      KLMAFM00
.
          BRANCH    EXIT,KLED9000,KLED9000  * if spaces or exitchar in
.                                                exit program
          DISPLAY   *P42:4,FMLADESC
          GOTO      KLED9999
.
KLED9000  MOVE      TWO,EXIT
    
KLED9999  RETURN
.
RLMAFM00  CALL      DSCR0000
          CALL      RDIS0000
          RETURN
.
.********************************************************************
.*                          KFIN0000                                *
.*                     keyin the finacial year                      *
.********************************************************************
.
KFIN0000  MOVE      ZERO,EXIT
.
KFIN0500  DISPLAY   *P25:5,*EL
          MOVE      TWENTY5,CCOL
          MOVE      FIVE,CVERT
.
          CALL      KLMCFM00             * keyin financial year
. 
          BRANCH    EXIT,KFIN9000,KFIN9999
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLCYEAR;
          CLEAR     EFINDATE
          CLEAR     YEAREND
          BRANCH    FMLAPERS,KFIN3000    * branch if thirteen periods
.
. 12 periods
.
          UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          PACK      EFINDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      YEAREND,CCENT,CYEAR  
          DISPLAY   *P32:5,"Ending ",*P42:5,*V2LON,EFINDATE
          GOTO      KFIN9999
.
. 13 periods
.
KFIN3000  UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          PACK      EFINDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      YEAREND,CCENT,CYEAR
          DISPLAY   *P32:5,"Ending ",*P42:5,*V2LON,EFINDATE
          GOTO      KFIN9999
.
KFIN9000  BRANCH    MODIFLAG,KFIN0000
.
KFIN9500  DISPLAY   *P25:5,*EL
.
KFIN9999  RETURN
.
RLMCFM00  CALL      DSCR0000
          CALL      RDIS0000
          RETURN
.
.
.********************************************************************
.*                          KPER0000                                *
.*                     keyin the finacial period                    *
.********************************************************************
.
KPER0000  CLEAR     STARTDTE
          CLEAR     ENDDATE
          CLEAR     PERIDESC
.
          DISPLAY   *P25:6,*EL
          MOVE      ZERO,EXIT
          KEYIN     *P25:6,*DV,UNDLN2:
                    *P25:6,*V2LON,FORM2:
                    *P25:6,*DV,FORM2
.
          COMPARE   ONE,FORM2           * exit if equal
          GOTO      KPER9000 IF LESS 
.
          BRANCH    FMLAPERS,KPER2000    * branch on number of periods
.
          COMPARE   TEN3,FORM2           * test for <= 12 periods
          GOTO      KPER5000 IF LESS
          BEEP 
          GOTO      KPER0000
.
KPER2000  COMPARE   TEN4,FORM2           * test for <= 13 periods
          GOTO      KPER5000 IF LESS
          BEEP 
          GOTO      KPER0000
.
KPER5000  MOVE      FORM2,FPERIOD        * set period variable
.
          BRANCH    FORM2,KPER5100,KPER5200,KPER5300,KPER5400,KPER5500:
                          KPER5600,KPER5700,KPER5800,KPER5900,KPER6000:
                          KPER6100,KPER6200,KPER6300
.
KPER5100  UNPACK    FMLC01TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC01TO,ENDDATE     * set end date
          MOVE      FMLC01FR,STARTDTE    * set period start date
          MOVE      FMLC01DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5200  UNPACK    FMLC02TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC02TO,ENDDATE     * set end date
          MOVE      FMLC02FR,STARTDTE    * set period start date
          MOVE      FMLC02DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5300  UNPACK    FMLC03TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC03TO,ENDDATE     * set end date
          MOVE      FMLC03FR,STARTDTE    * set period start date
          MOVE      FMLC03DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5400  UNPACK    FMLC04TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC04TO,ENDDATE     * set end date
          MOVE      FMLC04FR,STARTDTE    * set period start date
          MOVE      FMLC04DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5500  UNPACK    FMLC05TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC05TO,ENDDATE     * set end date
          MOVE      FMLC05FR,STARTDTE    * set period start date
          MOVE      FMLC05DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5600  UNPACK    FMLC06TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC06TO,ENDDATE     * set end date
          MOVE      FMLC06FR,STARTDTE    * set period start date
          MOVE      FMLC06DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5700  UNPACK    FMLC07TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC07TO,ENDDATE     * set end date
          MOVE      FMLC07FR,STARTDTE    * set period start date
          MOVE      FMLC07DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER5800  UNPACK    FMLC08TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC08TO,ENDDATE     * set end date
          MOVE      FMLC08DE,PERIDESC    * set period description
          MOVE      FMLC08FR,STARTDTE    * set period start date
          GOTO      KPER9999
.
KPER5900  UNPACK    FMLC09TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC09TO,ENDDATE     * set end date
          MOVE      FMLC09FR,STARTDTE    * set period start date
          MOVE      FMLC09DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER6000  UNPACK    FMLC10TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC10TO,ENDDATE     * set end date
          MOVE      FMLC10FR,STARTDTE    * set period start date
          MOVE      FMLC10DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER6100  UNPACK    FMLC11TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC11TO,ENDDATE     * set end date
          MOVE      FMLC11FR,STARTDTE    * set period start date
          MOVE      FMLC11DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER6200  UNPACK    FMLC12TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC12TO,ENDDATE     * set end date
          MOVE      FMLC12FR,STARTDTE    * set period start date
          MOVE      FMLC12DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER6300  UNPACK    FMLC13TO,CCENT,CYEAR,CMON,CDAY
          PACK      EPERDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          DISPLAY   *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE
          MOVE      FMLC13TO,ENDDATE     * set end date
          MOVE      FMLC13FR,STARTDTE    * set period start date
          MOVE      FMLC13DE,PERIDESC    * set period description
          GOTO      KPER9999
.
KPER9000  BRANCH    MODIFLAG,KPER0000
          MOVE      ONE,EXIT
          DISPLAY   *P25:6,*EL
.
KPER9999  UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          PACK      ACCTDATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",ACCTDATE
          RETURN
.
.**********************************************************************
.*                         KEXP0000                                   *
.*                       Export File Y/N
.**********************************************************************
KEXP0000  MOVE      "N",DEFYESNO
          MOVE      ZERO,EXIT
          MOVE      "25",CCOL
          MOVE      "7",CVERT
          CALL      YORN0000
          MOVE      FYESNO,EXPORTYN
          MOVE      YESNO,EXFLAG
          RETURN
.
.**********************************************************************
.*                         SIPC0000                                   *
.*               Select Item Post Cancel                              *
.**********************************************************************
.
SIPC0000  MOVE      ZERO,EXIT
          MOVE      ONE,MODIFLAG
.
          CALL      MQST0000             * select item run report exit
.
          COMPARE   ZERO,CCITEM
          GOTO      SIPC9999 IF EQUAL
          GOTO      SIPC9500 IF LESS
.
          CALL      MRED0000            * modify the field
          BRANCH    EXIT,SIPC9999,SIPC9999
.
          GOTO      SIPC0000
.
SIPC9500  MOVE      ONE,EXIT             * cancel selected
.
SIPC9999  RETURN
.
.**********************************************************************
.*                           GENR0000                                 *
.*                        Generate the report                         *
.**********************************************************************
.----- clear the account type totals ----
.
GENR0000  DISPLAY   *P1:24,"Generating : ",*EF;
.
.----- get starting account type ----
.
          PACK      KEY15,FMLALEDG,SP20      
          CALL      RSFMAM2              * position at start of ledger
.
GENR1000  CALL      RKFMAM2              * read next
          BRANCH    OVRCD,GENR9999       * end of report if over
.
          MATCH     FMLALEDG,FMAMLEDG    * test if same ledger
          GOTO      GENR9999 IF NOT EQUAL
.
GENR2000  MATCH     "6",FMAMTYPE
          GOTO      GENR9999 IF NOT LESS
.
.---- display the account being processed ---
.
          DISPLAY   *P14:24,*V2LON,FMAMLEDG,SLASH,FMAMACCT,*EF;
.
.
          MOVE      ZERO,ATOTDTRN 
          MOVE      ZERO,ATOTCTRN
.         
.-----  total the transactions for the period for this account ---
.
          PACK      KEY32,FMLALEDG,FMAMACCT,STARTDTE,SP20
          CALL      RSFMTR2
.
GENR3000  CALL      RKFMTR2
          BRANCH    OVRCD,GENR4000
.
          MATCH     FMLALEDG,FMTRLEDG    * test same ledger
          GOTO      GENR4000 IF NOT EQUAL
.
          MATCH     FMAMACCT,FMTRACCT    * test same account
          GOTO      GENR4000 IF NOT EQUAL
.
          MATCH     FMTRPDAT,ENDDATE     * test not past end of period
          GOTO      GENR4000 IF LESS
.
          CALL      FAMT0000             * Add Amounts to Totals
          GOTO      GENR3000
.
GENR4000  MOVE      FMAMACCT,ACCOUNT
          CALL      GCOD0000
.
          MOVE      FMAMTYPE,FORM1
          BRANCH    FORM1,GENR4500,GENR4500
.
.  Balance Sheet
.
          MOVE      FMLALEDG,TEMPLEDG
          MOVE      FMAMACCT,TEMPACCT
          MOVE      FMAMDESC,TEMPDESC
          MOVE      "1",TEMPTYPE
          PACK      KEY14,TEMPLEDG,TEMPACCT,SP70
          CALL      RDFMOR1
          IF        OVRCD=1
            MOVE      "000",TEMPINTR
          ELSE
            MOVE      FMORINTR,TEMPINTR
          ENDIF
          GOTO      GENR4600
.
.  P/L
.
GENR4500  MOVE      FMLALEDG,TEMPLEDG
          MOVE      SUBJCODE,TEMPACCT
          MOVE      "Invalid Subjective Code           ",FMSADESC
          PACK      KEY14,FMLALEDG,SUBJCODE,SP70
          CALL      RDFMSA1
          MOVE      FMSADESC,TEMPDESC
          MOVE      "0",TEMPTYPE
          PACK      KEY14,TEMPLEDG,TEMPACCT,SP70
          CALL      RDFMOR1
          IF        OVRCD=1
            MOVE      "000",TEMPINTR
          ELSE
            MOVE      FMORINTR,TEMPINTR
          ENDIF
.
GENR4600  PACK      KEY14,TEMPLEDG,TEMPACCT,SP70
          CALL      RDTEMP1
          BRANCH    OVRCD,GENR5000
.
          ADD       ATOTCTRN,TEMPCRED
          ADD       ATOTDTRN,TEMPDEBT
.
          CALL      UPTEMP1
          GOTO      GENR1000
.
GENR5000  MOVE      ATOTCTRN,TEMPCRED
          MOVE      ATOTDTRN,TEMPDEBT
          CALL      WRTEMP1
          GOTO      GENR1000
.
GENR9999  DISPLAY   *P1:24,*EL
          RETURN
.
.**********************************************************************
.*                           PRIN0000                                 *
.*                        Print the report                            *
.**********************************************************************
.
PRIN0000  CALL      IBACLOCK
          MOVE      "0",ZEROBAL
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,LTOTDTRN
          MOVE      ZERO,LTOTCTRN
          CALL      HEAD0000
          DISPLAY   *P1:24,"Printing   : ",*EF;
.
          PACK      KEY15,SP70
          CALL      RSTEMP2
.
PRIN1000  CALL      RKTEMP2
          BRANCH    OVRCD,PRIN9500
.
PRIN3000  COMPARE   FIFTY5,CLNO           * if the page is full
          CALL      HEAD0000 IF NOT LESS
.
.---- display the account being processed ---
.
          DISPLAY   *P14:24,*V2LON,TEMPLEDG,SLASH,TEMPACCT,*EF;
.
          CALL      PLIN0000             * print the report line
          GOTO      PRIN1000
.
.---- print grand total ----
.
PRIN9500  CALL      UND132
.
          MOVE      FORMATT,TOTDTRN
          FEDIT     LTOTDTRN,TOTDTRN
          MOVE      FORMATT,TOTCTRN
          FEDIT     LTOTCTRN,TOTCTRN
.
          PRINT     *1,"Ledger Total",*57,TOTCTRN,*77,TOTDTRN,*N
          CALL      UND132
.
PRIN9999  DISPLAY   *P1:24,*EL
          RETURN
.
.**********************************************************************
.*                         PLIN0000                                   *
.*                   Print a line on the report                       *
.**********************************************************************
.
.----- format the numeric totals ---
.
PLIN0000  
          MOVE      FORMAT,OUTDTRN
          FEDIT     TEMPDEBT,OUTDTRN
          MOVE      FORMAT,OUTCTRN
          FEDIT     TEMPCRED,OUTCTRN
.
          ADD       TEMPDEBT,LTOTDTRN
          ADD       TEMPCRED,LTOTCTRN
.
          COMPARE   ZERO,TEMPDEBT
          GOTO      PLIN1000 IF NOT EQUAL
          COMPARE   ZERO,TEMPCRED
          GOTO      PLIN9999 IF EQUAL
.
PLIN1000  PRINT     *1,TEMPACCT,SP1,TEMPDESC:
                    *55,TEMPINTR,*60,OUTDTRN,OUTCTRN
          ADD       ONE,CLNO
          CALL      WRTEXP00
.
PLIN9999  RETURN
.**********************************************************************
.*                         HEAD0000                                   *
.*                    print the page heading                          *
.**********************************************************************
.
.----- format the account type description for the heading ----
.
HEAD0000  CALL      HEAD132
          PRINT        "Ledger           : ",FMLALEDG,SP1,FMLADESC:
                    *N,"Financial Year   : ",FMLCYEAR," Ending ",EFINDATE:
                    *N,"Period           : ",FPERIOD," Ending ",EPERDATE
.
          CALL      UND132
.
          PRINT     *1,"Account      Description":
                    *49,"Intercompany",*74,"Debit",*93,"Credit"
.
          CALL      UND132
.
          ADD       THREE,CLNO
.
HEAD9999  RETURN
         
+
.***********************************************************************
.         Subroutine to SELECT ITEM, RUN REPORT, EXIT
.-----------------------------------------------------------------------
.
MQST0000  MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"R",*HOFF,")un ":
                    "Report, e(":
                    *V2LON,"X",*HOFF,")it ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MQST0000 IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  X",CCITEMD
          GOTO      MQST1000 IF EQUAL
.
          MATCH     "  R",CCITEMD
          GOTO      MQST2000 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      MQST0500 IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      MQST0500 IF LESS
.
          RETURN
.
MQST0500  BEEP
          GOTO      MQST0000
.
MQST1000  MOVE      "-1",CCITEM
          RETURN
.
MQST2000  MOVE      "0",CCITEM
          RETURN
+
.**********************************************************************
.                          OPEN0000
.                   Open the trn  files
.**********************************************************************
.
OPEN0000  CLEAR     TRNFILE
.
.----  set up the filenames ----
.
          PACK      TRNFILE,FMST,FMLCYEAR
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,TRNFILE    * open TRN file
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN7000       * if no file then no records
          GOTO      OPEN9999
.
OPEN7000  MOVE      ONE,EXIT
          DISPLAY   *P1:24,*EL,*B,"No transactions exist for this year. ";
          CALL      HITENTER
          GOTO      OPEN9999
.
OPEN9999  RETURN
.
.**********************************************************************
. FAMT0000 - Fix BCAMT as Debit/Credit
.**********************************************************************
FAMT0000  MATCH     "JC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CC",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CS",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "CR",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RF",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          MATCH     "RI",FMTRTYPE
          GOTO      FAMT1000 IF EQUAL
.
          ADD       FMTRAMT,ATOTDTRN
          GOTO      FAMT9999
.
FAMT1000  ADD       FMTRAMT,ATOTCTRN
.
FAMT9999  RETURN
.
RDIS0000  DISPLAY   *P25:4,*V2LON,FMLALEDG,*HOFF,*P42:4,FMLADESC
          DISPLAY   *P25:5,*V2LON,FMLCYEAR,*HOFF:
                    *P32:5,"Ending ",*P42:5,*V2LON,EFINDATE
          BRANCH    MODIFLAG,RDIS5000
          GOTO      RDIS9999
.
RDIS5000  DISPLAY   *P25:6,*V2LON,FPERIOD,*HOFF:
                    *P32:6,"Ending ",*P42:6,*V2LON,EPERDATE:
                    *P25:7,*V2LON,YNFLAG:
                    *P25:8,*V2LON,EXFLAG
RDIS9999  RETURN
.
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for 
.              creating and transfering TAB delimited 
.              export files to a PC using the unix script
.              keatran.  
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTTMP00  - Write Temporary Table
.              READTM00  - Read Temporary Table and create export file
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a 
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
.------------------------------------------------------------
. Create Temporary Table & Export File
.------------------------------------------------------------
MAKEXP00  PACK      FILENAMA,NAMEA,PORT
          REP       " 0",FILENAMA
.
          PACK      COMMAND,SP70,SP70
          CLEAR     COMMAND
          APPEND    "iserase ",COMMAND
          APPEND    FILENAMA,COMMAND
          RESET     COMMAND
          EXECUTE   COMMAND,TASKID
.
          PACK      COMMAND,SP70,SP70
          CLEAR     COMMAND
          APPEND    "isbuild ",COMMAND
          APPEND    FILENAMA,COMMAND
          APPEND    " 72 uc1-2,3-14 uc68-68,1-2,3-14",COMMAND
          RESET     COMMAND
          EXECUTE   COMMAND,TASKID
.
          OPEN      APS88TMP,FILENAMA
          OPEN      APS88REP,FILENAMA
.
          COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
          MOVE     "EXPORT",KEY6
          PACK     EXPORTFN,KEY6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
. 
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Temporary File
.------------------------------------------------------------
WRTEXP00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXP99 IF NOT EQUAL
.
          MOVE     TEMPACCT,ACCOUNTC
          MOVE     TEMPDESC,JOURDESC
.
WRTEXP10  MATCH    "0",TEMPTYPE
          GOTO     WRTEXP20 IF NOT EQUAL
.
          MOVE     NINE6,COSTCENT
          GOTO     WRTEXP30
.
WRTEXP20  MOVE     ZERO6,COSTCENT
          LOAD     COSTCENT,FORM1,NINE6,NINE6,ZERO6,ZERO6,ZERO6
.
WRTEXP30  MOVE     TEMPDEBT,TEMPDDIM
          SQUEEZE  TEMPDDIM
          MOVE     TEMPCRED,TEMPCDIM
          SQUEEZE  TEMPCDIM
          SQUEEZE  ACCOUNTC
          STRIP    JOURDESC
          WRITE    EXPORTFL,SEQ;FMCOEXTR,TABDELM:
                                "SCHS QLD",TABDELM:
                                "SCHS QLD",TABDELM:
                                ACCTDATE,TABDELM:
                                FMCOEXTR,FMAMLEDG,TABDELM:
                                COSTCENT,TABDELM:
                                *+,ACCOUNTC,*-,TABDELM:
                                "00000",TABDELM:
                                "00000",TABDELM:
                                TEMPINTR,TABDELM:
                                *+,TEMPDDIM,*-,TABDELM:
                                *+,TEMPCDIM,*-,TABDELM:
                                TABDELM:
                                TABDELM:
                                TABDELM:
                                *+,JOURDESC,*-,TABDELM
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9000 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9000 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keaoracl ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
.
TRAN9000  CLOSE    APS88TMP
          CLOSE    APS88REP,DELETE
.
TRAN9999  RETURN
.
.****************************************************************************
.  GCOD - get subjective and cost codes from account code    Called by lots
.        Requires - ACCOUNT   (account code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.****************************************************************************
GCOD0000  UNPACK    SP70,SUBJCODE,COSTCODE       * clear old vars
          BRANCH    FMSUUD4A,GCOD0100,GCOD0200,GCOD0300,GCOD0400:
                             GCOD0500,GCOD0600,GCOD0700,GCOD0800:
                             GCOD0900,GCOD1000,GCOD1100,GCOD1200
.
GCOD0100  BRANCH    FMSUUD2A,GCOD0110
          UNPACK    ACCOUNT,KEY1,SUBJCODE
          GOTO      GCOD90000
.
GCOD0110  UNPACK    ACCOUNT,KEY1,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0200  BRANCH    FMSUUD2A,GCOD0210
          UNPACK    ACCOUNT,KEY2,SUBJCODE
          GOTO      GCOD90000
.
GCOD0210  UNPACK    ACCOUNT,KEY2,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0300  BRANCH    FMSUUD2A,GCOD0310
          UNPACK    ACCOUNT,KEY3,SUBJCODE
          GOTO      GCOD90000
.
GCOD0310  UNPACK    ACCOUNT,KEY3,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0400  BRANCH    FMSUUD2A,GCOD0410
          UNPACK    ACCOUNT,KEY4,SUBJCODE
          GOTO      GCOD90000
.
GCOD0410  UNPACK    ACCOUNT,KEY4,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0500  BRANCH    FMSUUD2A,GCOD0510
          UNPACK    ACCOUNT,KEY5,SUBJCODE
          GOTO      GCOD90000
.
GCOD0510  UNPACK    ACCOUNT,KEY5,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0600  BRANCH    FMSUUD2A,GCOD0610
          UNPACK    ACCOUNT,KEY6,SUBJCODE
          GOTO      GCOD90000
.
GCOD0610  UNPACK    ACCOUNT,KEY6,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0700  BRANCH    FMSUUD2A,GCOD0710
          UNPACK    ACCOUNT,KEY7,SUBJCODE
          GOTO      GCOD90000
.
GCOD0710  UNPACK    ACCOUNT,KEY7,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0800  BRANCH    FMSUUD2A,GCOD0810
          UNPACK    ACCOUNT,KEY8,SUBJCODE
          GOTO      GCOD90000
.
GCOD0810  UNPACK    ACCOUNT,KEY8,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD0900  BRANCH    FMSUUD2A,GCOD0910
          UNPACK    ACCOUNT,KEY9,SUBJCODE
          GOTO      GCOD90000
.
GCOD0910  UNPACK    ACCOUNT,KEY9,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1000  BRANCH    FMSUUD2A,GCOD1010
          UNPACK    ACCOUNT,KEY10,SUBJCODE
          GOTO      GCOD90000
.
GCOD1010  UNPACK    ACCOUNT,KEY10,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1100  BRANCH    FMSUUD2A,GCOD1110
          UNPACK    ACCOUNT,KEY11,SUBJCODE
          GOTO      GCOD90000
.
GCOD1110  UNPACK    ACCOUNT,KEY11,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD1200  BRANCH    FMSUUD2A,GCOD1210
          UNPACK    ACCOUNT,KEY12,SUBJCODE
          GOTO      GCOD90000
.
GCOD1210  UNPACK    ACCOUNT,KEY12,ANS,SUBJCODE
          GOTO      GCOD90000
.
GCOD9000  LOAD      COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4:
                                      KEY5,KEY6,KEY7,KEY8:
                                      KEY9,KEY10,KEY11,KEY12
          PACK      SUBJCODE,SUBJCODE,SP70
          PACK      COSTCODE,COSTCODE,SP70
.
GCOD9999  RETURN
.
. FMSTEMPO    
. --------
. Filename     : aps88axx.dat
.
RSTEMP1   RESET     KEY14                                                       
          READ      APS88TMP,KEY14;;                                            
          RETURN
.
RATEMP1   RESET     KEY14                                                       
          MOVE      ZERO,OVRCD
          READ      APS88TMP,KEY14;ANS                                          
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   RESET     KEY14                                                       
          MOVE      ZERO,OVRCD
          READ      APS88TMP,KEY14;TEMPLEDG,TEMPACCT,TEMPDEBT,TEMPCRED:
                                   TEMPDESC,TEMPTYPE,TEMPINTR
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    APS88TMP;TEMPLEDG,TEMPACCT,TEMPDEBT,TEMPCRED:
                             TEMPDESC,TEMPTYPE,TEMPINTR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    APS88TMP;TEMPLEDG,TEMPACCT,TEMPDEBT,TEMPCRED:
                             TEMPDESC,TEMPTYPE,TEMPINTR
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMP1   UPDATE    APS88TMP;TEMPLEDG,TEMPACCT,TEMPDEBT,TEMPCRED:
                             TEMPDESC,TEMPTYPE,TEMPINTR
          RETURN
.
WRTEMP1   RESET     KEY14                                                       
          WRITE     APS88TMP,KEY14;TEMPLEDG,TEMPACCT,TEMPDEBT,TEMPCRED:
                                   TEMPDESC,TEMPTYPE,TEMPINTR
          RETURN
.
DETEMP1   RESET     KEY14                                                       
          DELETE    APS88TMP,KEY14                                              
          RETURN
.
RSTEMP2   RESET     KEY15                                                       
          READ      APS88REP,KEY15;;                                            
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    APS88REP;TEMPLEDG,TEMPACCT,TEMPDEBT,TEMPCRED:
                             TEMPDESC,TEMPTYPE,TEMPINTR
          GOTO      OVERCOND IF OVER
          RETURN
.
          INC       FMSSTDCD
          INC       FMSAMAIO/INC
          INC       FMSCSAIO/INC
          INC       FMSCONIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSORAIO/INC
          INC       FMSSBAIO/INC
          INC       FMSTRNIO/INC
          INC       FMSLMCKY
          INC       FMSLMAKY
