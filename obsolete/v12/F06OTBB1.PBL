.*****************************************************************************
.*    Program      : F06OTBB1                                                *
.*    Description  : Conversion outbb1af to new File layout                  *
.*                                                                           *
.*    Author       : Ebon Clements                                           *
.*    Date         : 16/03/2015                                              *
.*    Modifications: V10.06.01 16/03/2015 Ebon Clements    CAR 298291        *
.*                   Created program                                         *
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change F06OTBB1  eg F57PTDOC
.  Global change OUTBB1FD  eg PATDOCFD (new layout)
.  Global change outbb1af  eg patdoctf
.  Global change OUTBB1A1  eg PATDOCT1
.  Global change KEY8   eg KEY8
.  Global change KEY8  eg KEY9
.  Global change WRBOKB1  eg WRDOCT1
.  Global change sotbb1af  eg sptdoctf
.
.  Global changes if Oracle Option is required -
.
.  Global Change No  to Yes
.  Global change OFDUMYIO  eg RSPTDOC1
.  Global change OFDUMYIO  eg RKPTDOC1
.  Global change OFDUMYIO  eg UPPTDOC1
.
.  Global changes if Oracle Option is NOT required -

.  Global Change No  to No
.  Global change OFDUMYIO  to OFDUMYIO
.  Global change OFDUMYIO  to OFDUMYIO
.  Global change OFDUMYIO  to OFDUMYIO
.
          INC       STD001FD
.
          INC       OUTSITFD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
.
OLDFILE1  IFILE     SQL, FIXED=319, KEY="U1-8"
.
.NAME     TYPE    LENGTH  PHYSICAL  START  DESCRIPTION
.----     ----    ------  --------  -----  -----------
.DOBAOUTN DIM       8        8         1   Outpatient Number
.OBASRCR   DIM       3        3         9   Source of Referral (S)
.OBACOMP   DIM       3        3         12  Compensation Eligibility (CL)
.OBACLASS  DIM       3        3         15  Patient Classification (A )
.OBAINS    DIM       3        3         18  Insurance Status (U1)
.OBAATTN   DIM       3        3         21  Attendance Code (CA)
.OBADOCT   DIM       6        6         24  Doctor's Code
.OBACOMM   DIM       25       25        30  Comments
.OTBBFUND  DIM       6        6         55  Health fund code
.OTBBTBLE  DIM       8        8         61  Health fund table
.DOTBBPVI  DIM       3        3         69  No. of prev. visits charged
.OTBBCLAL  DIM       3        3         72  Clinic Allocation (OX) (Anne Caudle)
.OTBBSPAR  DIM       4        4         75  Spare variable
..OBADATE  DIM       8        8         79  Date (CCYYMMDD)
.OBACAT    DIM       3        3         87  Patient Category (P )
.OBAPRTY   DIM       3        3         90  Priority Code (PR)
.OBARSCHD  DIM       3        3         93  Reason for Reschedule (RR)
.OBBPORT   DIM       2        2         96  Port No. accessing this record
.OBBBOOK   DIM       1        1         98  Non-booked attendee flag
..                                          " " = Booked attendee
..                                          "N" = Non-booked attendee, no slot
..                                          "S" = Non-booked attendee with slot
.OBBCTYP   DIM       6        6         99  Clinic type for tracking NBA.s
.OBOUSR1   DIM       3        3        105  User Defined Field 1 (O1)
.OBOUSR2   DIM       3        3        108  User Defined Field 2 (O2)
.OBOUSR3   DIM       3        3        111  User Defined Field 3 (O3)
.OBOUSR4   DIM       3        3        114  User Defined Field 4 (O4)
.OBALADMN  DIM       8        8        117  Linked Outpatient Visit Number
..                                          from re-appointments module
.OTBBDEPT  DIM       3        3        125  Department code (Cat AC)
.OTBBTRAN  DIM       3        3        128  Transport Allocation (Cat OB)
.OTBBLNGI  DIM       3        3        131  Language of Interpreter (Cat OL)
.OTBBTMFS  DIM       8        8        134  Time First Seen
.OTBBTMBO  DIM       8        8        142  Time Booked Out
.OTBBGPFA  DIM       20       20       150  GPFH Approval Number
.OTBBECRA  DIM       20       20       170  ECR Approval Number
.OTBBRFGP  DIM       10       10       190  Referring GP
.OTBBGPPC  DIM       10       10       200  GP Practice Code
OLDDADCS  DIM       6        6        210  Actual Doctor Seen
.OTBBCITM  DIM       5        5        216  Check In Time
.OTBBASTM  DIM       5        5        221  Time Actually Seen
.OTBBDPTM  DIM       5        5        226  Time of Departure
.OTBBOUTC  DIM       3        3        231  Outcome    (CAT OZ)
.OTBBSNDL  DIM       1        1        234  Send Letter (Notify GP) (Y/N)
.OTBBGPPT  DIM       2        2        235  GP Practice count
.OTBBDOFR  DIM       3        3        237  District of Residence (Cat DA)
.OTBBOPER  DIM       4        4        240  Operator who made O/P Book/Re-app
.OBOUSR5   DIM       3        3        244  User Defined Field 5 (O5)
.OBOUSR6   DIM       3        3        247  User Defined Field 6 (O6)
.OBOUSR7   DIM       3        3        250  User Defined Field 7 (O7)
.OBOUSR8   DIM       3        3        253  User Defined Field 8 (O8)
.OTBBRANK  DIM       6        6        256  Patient Rank
.OTBBSPCA  DIM       3        3        262  Special Arrangements (Cat SA)
.OTBBCIND  DIM       3        3        265  Clinic Indicator (CI) M=MEDICAL
..                                                                N=NON-MEDICAL
.OTBBFLUP  DIM       1        1        268  Follow Up App. Made Flag 1=Yes
.OTBBSCAR  DIM       1        1        269  Send Correspondence to Carer
..                                          0=No 1=Yes
.OTBBGLDT  DIM       8        8        270  Generate Letter Date (ccyymmdd)
.OTBBSNGL  DIM       1        1        278  Send Generate Letter (Y/N)
..                                          0=No, 1=Yes, 2=N/A
.OTBBNMDS  DIM       3        3        279  NMDS Code (Category NM)
.OTBBCART  DIM       3        3        282  Care Type (Category CC)
.OTBBSRVD  DIM       3        3        285  Service Delivery Mode(Cat sd)
.OTBBCLHR  DIM       1        1        288  Clinical High Risk
..                                          0=No, 1=Yes
.OTBBCONT  DIM       3        3        289  Contract Code (Cat gb)
.OTBBTCOD  DIM       3        3        292  Tier 2 Code (category NC)
.OTBBPURC  DIM       3        3        295  Health Purchaser (Cat HP)
.OTBBSPR1  DIM       21       21       298
..
..End of Record                        319
.
.                                     ******** copy the new FD here *******
.
OUTBB1A1  IFILE     SQL, FIXED=369, KEY="U1-8"
OUTBB1A2  IFILE     SQL, FIXED=369, KEY="U79-86,1-8"
FILBB1A1  INIT      "bb1af"
FILBB1A2  INIT      "bb1af"
.
.NAME     TYPE    LENGTH  PHYSICAL  START  DESCRIPTION
.----     ----    ------  --------  -----  -----------
.DOBAOUTN DIM       8        8         1   Outpatient Number
OBASRCR   DIM       3        3         9   Source of Referral (S)
OBACOMP   DIM       3        3         12  Compensation Eligibility (CL)
OBACLASS  DIM       3        3         15  Patient Classification (A )
OBAINS    DIM       3        3         18  Insurance Status (U1)
OBAATTN   DIM       3        3         21  Attendance Code (CA)
OBADOCT   DIM       6        6         24  Doctor's Code
OBACOMM   DIM       25       25        30  Comments
OTBBFUND  DIM       6        6         55  Health fund code
OTBBTBLE  DIM       8        8         61  Health fund table
DOTBBPVI  DIM       3        3         69  No. of prev. visits charged
OTBBCLAL  DIM       3        3         72  Clinic Allocation (OX) (Anne Caudle)
OTBBSPAR  DIM       4        4         75  Spare variable
.OBADATE  DIM       8        8         79  Date (CCYYMMDD)
OBACAT    DIM       3        3         87  Patient Category (P )
OBAPRTY   DIM       3        3         90  Priority Code (PR)
OBARSCHD  DIM       3        3         93  Reason for Reschedule (RR)
OBBPORT   DIM       2        2         96  Port No. accessing this record
OBBBOOK   DIM       1        1         98  Non-booked attendee flag
.                                            " " = Booked attendee
.                                            "N" = Non-booked attendee, no slot
.                                            "S" = Non-booked attendee with slot
OBBCTYP   DIM       6        6         99  Clinic type for tracking NBA.s
OBOUSR1   DIM       3        3        105  User Defined Field 1 (O1)
OBOUSR2   DIM       3        3        108  User Defined Field 2 (O2)
OBOUSR3   DIM       3        3        111  User Defined Field 3 (O3)
OBOUSR4   DIM       3        3        114  User Defined Field 4 (O4)
OBALADMN  DIM       8        8        117  Linked Outpatient Visit Number
.                                          from re-appointments module
OTBBDEPT  DIM       3        3        125  Department code (Cat AC)
OTBBTRAN  DIM       3        3        128  Transport Allocation (Cat OB)
OTBBLNGI  DIM       3        3        131  Language of Interpreter (Cat OL)
OTBBTMFS  DIM       8        8        134  Time First Seen
OTBBTMBO  DIM       8        8        142  Time Booked Out
OTBBGPFA  DIM       20       20       150  GPFH Approval Number
OTBBECRA  DIM       20       20       170  ECR Approval Number
OTBBRFGP  DIM       10       10       190  Referring GP
OTBBGPPC  DIM       10       10       200  GP Practice Code
OTBBADCS  DIM       10       10       210  Actual Doctor Seen
OTBBCITM  DIM       5        5        220  Check In Time
OTBBASTM  DIM       5        5        225  Time Actually Seen
OTBBDPTM  DIM       5        5        230  Time of Departure
OTBBOUTC  DIM       3        3        235  Outcome    (CAT OZ)
OTBBSNDL  DIM       1        1        238  Send Letter (Notify GP) (Y/N)
OTBBGPPT  DIM       2        2        239  GP Practice count
OTBBDOFR  DIM       3        3        241  District of Residence (Cat DA)
OTBBOPER  DIM       4        4        244  Operator who made O/P Book/Re-app
OBOUSR5   DIM       3        3        248  User Defined Field 5 (O5)
OBOUSR6   DIM       3        3        251  User Defined Field 6 (O6)
OBOUSR7   DIM       3        3        254  User Defined Field 7 (O7)
OBOUSR8   DIM       3        3        257  User Defined Field 8 (O8)
OTBBRANK  DIM       6        6        260  Patient Rank
OTBBSPCA  DIM       3        3        266  Special Arrangements (Cat SA)
OTBBCIND  DIM       3        3        269  Clinic Indicator (CI) M=MEDICAL
.                                                                N=NON-MEDICAL
OTBBFLUP  DIM       1        1        272  Follow Up App. Made Flag 1=Yes
OTBBSCAR  DIM       1        1        273  Send Correspondence to Carer
.                                          0=No 1=Yes
OTBBGLDT  DIM       8        8        274  Generate Letter Date (ccyymmdd)
OTBBSNGL  DIM       1        1        282  Send Generate Letter (Y/N)
.                                          0=No, 1=Yes, 2=N/A
OTBBNMDS  DIM       3        3        283  NMDS Code (Category NM)
OTBBCART  DIM       3        3        286  Care Type (Category CC)
OTBBSRVD  DIM       3        3        289  Service Delivery Mode(Cat sd)
OTBBCLHR  DIM       1        1        292  Clinical High Risk
.                                          0=No, 1=Yes
OTBBCONT  DIM       3        3        293  Contract Code (Cat gb)
OTBBTCOD  DIM       3        3        296  Tier 2 Code (category NC)
OTBBPURC  DIM       3        3        299  Health Purchaser (Cat HP)
OTBBSPR1  DIM       67       67       302
.
.End of Record                        369
.
OTBBPVIS  FORM      3         * redefine for number of visits
DOBAOUTN  DIM       8
OBAOUTNO  FORM      8
OBADATE   DIM       8
.
. LOCAL VARIABLES
. ---------------
CFILEPRE  DIM       3   * Current Open File Prefix for Outpatient Files
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
VSITE     DIM       6
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION OUTBB1FD"
PRGID     INIT      "F06OTBB1"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KSIT0000                      * Keyin OP Site Code
          BRANCH    EXIT,MAIN0000
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9999
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
.
          DISPLAY   *P56:24,"Opening outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  MOVE      "No",USINGORC
          REP       "yYnN",USINGORC
          MOVE      USINGORC,KEY1
          REP       "Y-N-",KEY1
          MATCH     "-",KEY1
          GOTO      OPTN9200 IF NOT EQUAL
.
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
          MATCH     "Y",USINGORC
          IF        @EQUAL
            DISPLAY   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
          ENDIF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9200  DISPLAY   *P1:3,*EF,*P1:4," Oracle Option has not been set up ":
                          "correctly":
                    *P1:6," Program will terminate    - ";
          CALL      HITENTER
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                                KSIT0000             Called by: MAIN0000   *
.*  Keyin outpatient Site code to get file prefix                            *
.*****************************************************************************
.
KSIT0000  MOVE      SP70,VSITE
          KEYIN     *P1:9,*EL,"Outpatient Site Code : ",VSITE;
.
          PACK      VSITE,VSITE,SP70
.
          MATCH     SP6,VSITE           * Valid site ? Blank
          GOTO      KSIT9100 IF EQUAL   *
.
          MOVE      VSITE,KEY6          * Key for the site file
          CALL      RDSITA1             * Read the site record
          BRANCH    OVRCD,KSIT9000      * Invalid site.
.
          MOVE      OSTFILE,CFILEPRE    * Save Current File Prefix
.
          DISPLAY   *P35:9,"(Prefix: ",CFILEPRE,")";
          MOVE      ZERO,EXIT
          GOTO      KSIT9999
.
.         Invalid call to program. Common not set up with correct site info
.
KSIT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "Invalid Site Code Entered. ";
          CALL      HITENTER
          GOTO      KSIT0000
.
KSIT9100  MOVE      ONE,EXIT
          GOTO      KSIT9999
.
KSIT9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  PACK      INPFILE,CFILEPRE,FILBB1A1,SP70
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat ",CMDLINE
          APPEND    CFILEPRE,CMDLINE
          APPEND    "bb1af.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sotbb1af.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat ",CMDLINE
          APPEND    CFILEPRE,CMDLINE
          APPEND    "bb1af.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sotbb1af.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    CFILEPRE,CMDLINE
          APPEND    "bb1af",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sotbb1af",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    CFILEPRE,NEWFILE
          APPEND    "bb1af",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 369 UC1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC79-86,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      OUTBB1A1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY8,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
          PACK      OTBBADCS,OLDDADCS,SP70
          PACK      OTBBSPR1,SP70
.                                               * Pack key here
          PACK      KEY8,OBAOUTNO,SP70
          CALL      WRBOKB1                    * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     OUTBB1A1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sotbb1af*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not zipped or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "ldat ",CMDLINE
          APPEND    CFILEPRE,CMDLINE
          APPEND    "bb1af.dat > temp.txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding ",CFILEPRE,"bb1af.";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "OUTBB1FD"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,*EL,"Record No. :";
          OPEN      OUTBB1A1,"outbb1af"
.
          PACK      KEY8,SP70
          CALL      OFDUMYIO                      * position at start of file
OFIX0500  CALL      OFDUMYIO                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.         
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          CALL      OFDUMYIO
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     OUTBB1A1
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Update completed ",CDATE,SP1,CTIMEIS:
                    *P1:24;
          CALL      HITENTER
.
OFIX9999  RETURN
.
OFDUMYIO  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
.
READSOLD  RESET     KEY8
          READ      OLDFILE1,KEY8;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DOBAOUTN,OBASRCR,OBACOMP,OBACLASS:
                             OBAINS,OBAATTN,OBADOCT,OBACOMM:
                             OTBBFUND,OTBBTBLE,DOTBBPVI,OTBBCLAL,OTBBSPAR:
                             OBADATE,OBACAT,OBAPRTY,OBARSCHD:
                             OBBPORT,OBBBOOK,OBBCTYP,OBOUSR1,OBOUSR2:
                             OBOUSR3,OBOUSR4,OBALADMN,OTBBDEPT:
                             OTBBTRAN,OTBBLNGI,OTBBTMFS,OTBBTMBO:
                             OTBBGPFA,OTBBECRA,OTBBRFGP,OTBBGPPC:
                             OLDDADCS,OTBBCITM,OTBBASTM,OTBBDPTM:
                             OTBBOUTC,OTBBSNDL,OTBBGPPT,OTBBDOFR:
                             OTBBOPER,OBOUSR5,OBOUSR6,OBOUSR7:
                             OBOUSR8,OTBBRANK,OTBBSPCA,OTBBCIND,OTBBFLUP:
                             OTBBSCAR,OTBBGLDT,OTBBSNGL,OTBBNMDS:
                             OTBBCART,OTBBSRVD,OTBBCLHR,OTBBCONT,OTBBTCOD:
                             OTBBPURC,OTBBSPR1
          GOTO      OVERCOND IF OVER
          MOVE      DOBAOUTN,OBAOUTNO
          MOVE      DOTBBPVI,OTBBPVIS
          RETURN

.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRBOKB1   RESET     KEY8
          MOVE      OTBBPVIS,DOTBBPVI
          MOVE      PASSCODE,OTBBOPER
          WRITE     OUTBB1A1,KEY8;DOBAOUTN,OBASRCR,OBACOMP,OBACLASS:
                                  OBAINS,OBAATTN,OBADOCT,OBACOMM:
                                  OTBBFUND,OTBBTBLE,DOTBBPVI,OTBBCLAL,OTBBSPAR:
                                  OBADATE,OBACAT,OBAPRTY,OBARSCHD:
                                  OBBPORT,OBBBOOK,OBBCTYP,OBOUSR1,OBOUSR2:
                                  OBOUSR3,OBOUSR4,OBALADMN,OTBBDEPT:
                                  OTBBTRAN,OTBBLNGI,OTBBTMFS,OTBBTMBO:
                                  OTBBGPFA,OTBBECRA,OTBBRFGP,OTBBGPPC:
                                  OTBBADCS,OTBBCITM,OTBBASTM,OTBBDPTM:
                                  OTBBOUTC,OTBBSNDL,OTBBGPPT,OTBBDOFR:
                                  OTBBOPER,OBOUSR5,OBOUSR6,OBOUSR7:
                                  OBOUSR8,OTBBRANK,OTBBSPCA,OTBBCIND,OTBBFLUP:
                                  OTBBSCAR,OTBBGLDT,OTBBSNGL,OTBBNMDS:
                                  OTBBCART,OTBBSRVD,OTBBCLHR,OTBBCONT,OTBBTCOD:
                                  OTBBPURC,OTBBSPR1
          RETURN
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
          INC       STD001IO
.
          INC       OUTSITIO/INC
