.---------------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  04.07.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from r5.09
.---------------------------------------------------------------------------
. V5.09.01  08/08/2001  Davin
.           Recompiled for change to CCSEPSFD
.---------------------------------------------------------------------------
. V5.04.11  28.07.1996 B.G.Ackland
.           New Fields for Southern Health
. V5.04.10  14.03.1996 B.G.Ackland
.           Split Cost Model
. V5.04.09  11.02.1996 B.G.Ackland
.           Extend Episode file.
. V6.00.08  01.05.1996 B.G.Ackland
.           Fix Read on Extract File
. V6.00.07  03.05.1995 B.G.Ackland
.           Fix Extract Keyin EEID0000
. V6.00.06  16.12.1993 B.G.Ackland
.           Day Case Option
. V6.00.05  13.07.1993 B.G.Ackland
.           Extend Episode file.
.---------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACCR56
.   Function      :   Statistical Quality Control Chart       
.   Generated  On :   04/07/2002
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       CCR56TFD    
          INC       CCSCEAFD/INC
          INC       CCSCEBFD/INC
          INC       CCSCECFD/INC
          INC       CCSCEDFD/INC
          INC       CCSCEEFD/INC
          INC       CCSCEFFD/INC
          INC       CCSCEGFD/INC
          INC       CCSCMAFD/INC
          INC       CCSEPSFD/INC
          INC       CCSHCDFD/INC
          INC       CCSREPDF    
          INC       CCSSTYFD/INC
          INC       CCSXHDFD/INC
.=========================
.Local Variable Definition
.-------------------------
DOWNLOAD  FORM      1 * Scr 00 Fld     5
DOWNNAME  DIM      40 * Scr 00 Fld     6
ORDERBY   FORM      1 * Scr 00 Fld     7
USESTAT   FORM      1 * Scr 00 Fld     8
SIZESUBG  FORM      2 * Scr 00 Fld     9
DAYCDESC  DIM      25 * Scr 00 Fld    14
FROMCOD   DIM      10 * Scr 00 Fld    15
TOCOD     DIM      10 * Scr 00 Fld    16
FROMDD    DIM      10 * Scr 00 Fld    21
TODD      DIM      10 * Scr 00 Fld    22
FROMAD    DIM      10 * Scr 00 Fld    23
TOAD      DIM      10 * Scr 00 Fld    24
VISITDES  DIM      15 * Scr 00 Fld    25
FROMCMOD  DIM      35 * Scr 00 Fld    28
TOCMOD    DIM      35 * Scr 00 Fld    29
ORDERDES  DIM      30 * Scr 00 Fld    32
USESDESC  DIM      30 * Scr 00 Fld    33
PRINTEPS  FORM      1 * Scr 00 Fld    34
CALCSDEV  FORM      1 * Scr 00 Fld    35
PRTXBAR   FORM      1 * Scr 00 Fld    36
PRTRANG   FORM      1 * Scr 00 Fld    37
PRTSDEV   FORM      1 * Scr 00 Fld    38
CLV1DES   DIM      35 * Scr 00 Fld    42
CLV2DES   DIM      35 * Scr 00 Fld    43
CLV3DES   DIM      35 * Scr 00 Fld    44
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACCR56"
PRGNAM    INIT      "Statistical Quality Control Chart       "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening ccsceaaf";
          OPEN      CCSCEAA1,"ccsceaaf"
          DISPLAY   *P56:24,"Opening ccscmaaf";
          OPEN      CCSCMAA1,"ccscmaaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA1,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA2,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA3,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA4,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccsepsaf";
          OPEN      CCSEPSA5,"ccsepsaf"
          DISPLAY   *P56:24,"Opening ccshcdaf";
          OPEN      CCSHCDA1,"ccshcdaf"
          DISPLAY   *P56:24,"Opening ccshcdaf";
          OPEN      CCSHCDA2,"ccshcdaf"
          DISPLAY   *P56:24,"Opening ccsstyaf";
          OPEN      CCSSTYA1,"ccsstyaf"
          DISPLAY   *P56:24,"Opening ccsxhdaf";
          OPEN      CCSXHDA1,"ccsxhdaf"
          DISPLAY   *P56:24,"Opening ccsxhdaf";
          OPEN      CCSXHDA2,"ccsxhdaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      DEFPAR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
          MOVE      SP70,CCEAEID 
          MOVE      ZERO,DOWNLOAD
          MOVE      SP70,DOWNNAME
          MOVE      ZERO,ORDERBY 
          MOVE      ZERO,USESTAT 
          MOVE      ZERO,SIZESUBG
          MOVE      SP70,CCEADES 
          MOVE      SP70,CCEAINC 
          MOVE      SP70,CCEAVIS 
          MOVE      SP70,CCEADAY 
          MOVE      SP70,DAYCDESC
          MOVE      SP70,FROMCOD 
          MOVE      SP70,TOCOD   
          MOVE      SP70,CCEAFCM 
          MOVE      SP70,CCEAFYR 
          MOVE      SP70,CCEATCM 
          MOVE      SP70,CCEATYR 
          MOVE      SP70,FROMDD  
          MOVE      SP70,TODD    
          MOVE      SP70,FROMAD  
          MOVE      SP70,TOAD    
          MOVE      SP70,VISITDES
          MOVE      SP70,CCHCDES 
          MOVE      SP70,FROMCMOD
          MOVE      SP70,TOCMOD  
          MOVE      SP70,CCXHKEY 
          MOVE      SP70,CCXHDES 
          MOVE      SP70,ORDERDES
          MOVE      SP70,USESDESC
          MOVE      ZERO,PRINTEPS
          MOVE      ZERO,CALCSDEV
          MOVE      ZERO,PRTXBAR 
          MOVE      ZERO,PRTRANG 
          MOVE      ZERO,PRTSDEV 
          MOVE      SP70,CCEALV1 
          MOVE      SP70,CCEALV2 
          MOVE      SP70,CCEALV3 
          MOVE      SP70,CLV1DES 
          MOVE      SP70,CLV2DES 
          MOVE      SP70,CLV3DES 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106,PS00L107,PS00L108,PS00L109:
                            PS00L110,PS00L111,PS00L112,PS00L113:
                            PS00L114,PS00L115,PS00L116,PS00L117:
                            PS00L118,PS00L119,PS00L120,PS00L121:
                            PS00L122,PS00L999,PS00L123,PS00L124:
                            PS00L125,PS00L126,PS00L127,PS00L128:
                            PS00L129,PS00L130,PS00L131,PS00L132:
                            PS00L133,PS00L134,PS00L135,PS00L136:
                            PS00L137,PS00L138,PS00L139,PS00L140
          GOTO     PS00L999
.
PS00L101
          MOVE      CCEAEID,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DOWNLOAD,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      DOWNNAME,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      ORDERBY,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      USESTAT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIZESUBG,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      CCEADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CCEAINC,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      CCEAVIS,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      CCEADAY,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      DAYCDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      FROMCOD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      TOCOD,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      CCEAFCM,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      CCEAFYR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      CCEATCM,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      CCEATYR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      FROMDD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      TODD,VAR         
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      FROMAD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      TOAD,VAR         
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L122
          MOVE      VISITDES,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L123
          MOVE      CCHCDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L124
          MOVE      FROMCMOD,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L125
          MOVE      TOCMOD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L126
          MOVE      CCXHKEY,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L127
          MOVE      CCXHDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L128
          MOVE      ORDERDES,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L129
          MOVE      USESDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L130
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRINTEPS,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L131
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CALCSDEV,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L132
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTXBAR,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L133
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTRANG,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L134
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTSDEV,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L135
          MOVE      CCEALV1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L136
          MOVE      CCEALV2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L137
          MOVE      CCEALV3,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L138
          MOVE      CLV1DES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L139
          MOVE      CLV2DES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L140
          MOVE      CLV3DES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L105,SF00L106,SF00L107:
                            SF00L108,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L109,SF00L006,SF00L006:
                            SF00L006,SF00L110,SF00L111,SF00L112:
                            SF00L113,SF00L114,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L104,SF00L105,SF00L106,SF00L107:
                            SF00L108,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L109,SF00L020,SF00L020:
                            SF00L020,SF00L110,SF00L111,SF00L112:
                            SF00L113,SF00L114,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      REPT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCEADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCEAINC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCEAVIS 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMCOD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCOD   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODD    
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMAD  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOAD    
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   25",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,VISITDES
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCHCDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMCMOD
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCMOD  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   39",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCEALV1 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCEALV2 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCEALV3 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   42",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CLV1DES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   43",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CLV2DES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   44",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CLV3DES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EEID0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CCEAEID,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCEADES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NO,YESNO
            MOVE      ZERO,FORM2
            MOVE      CCEAINC,FORM2    
            LOAD      YESNO,FORM2,YES
            MOVE      YESNO,VAR
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCEAVIS,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMCOD,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCOD,VAR        
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   22",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODD,VAR         
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMAD,VAR       
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOAD,VAR         
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   25",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      VISITDES,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCHCDES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMCMOD,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCMOD,VAR       
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   39",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCEALV1,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCEALV2,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCEALV3,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   42",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CLV1DES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   43",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CLV2DES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   44",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CLV3DES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,DOWNLOAD
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      DOWNLOAD,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          STRIP     DOWNNAME
          SFORMAT   VAR,SCPSLEN
          MOVE      DOWNNAME,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DOWNNAME
          SFORMAT   VAR,127
          ENDSET    DOWNNAME
          APPEND    SP70,DOWNNAME
          RESET     DOWNNAME
          CMATCH    EXITCHAR,DOWNNAME
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DOWNNAME
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
          ENDIF
          MOVE      DOWNNAME,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,ORDERDES
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EORD0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      ORDERBY,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   32",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      ORDERDES,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,USESDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESTA0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      USESTAT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      USESDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESIZ0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIZESUBG,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCXHDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EXHD0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
            BRANCH    EXIT,SF00L109,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CCXHKEY,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   31",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCXHDES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L110
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRINTEPS
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRINTEPS,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L111
          CALL      DEFAULTY
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,CALCSDEV
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      CALCSDEV,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L112
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRTXBAR 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTXBAR,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L113
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRTRANG 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTRANG,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L114
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRTSDEV 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTSDEV,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
DEFPAR00  MOVE     ONE,ACCEPT
          MOVE     ONE,CALCSDEV    * Standard Deviation Calculation
.                                  * Population=0,  Sample=1
.
          RETURN
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
DEFAULTY    MOVE     ANSY,DEFYESNO
            RETURN
.-----------------------------------------------------------------------
. Create Statistical Process Control Chart for a Selected Casemix Code
.-----------------------------------------------------------------------
REPT0000  MOVE     ZERO,CPAGENO
          MOVE     "99",CLNO
          CLOCK    TIME,CTIMEIS
.
          MOVE      ZERO,EXIT
          COMPARE   ONE,DOWNLOAD
          CALL      OPEN0000 IF EQUAL     * Open Output File
          BRANCH    EXIT,REPT9900
.
          CALL     EXTR0000  * Extract Statistics to Temp Files
.
          CALL     LIST0000  * Print Statistical Details
.
          IF       PRINTEPS=1
            CALL     EPIS0000  * Print Episode Details
          ENDIF
.
          IF       PRTXBAR=1
            MOVE     ONE,SPCTYPE
            CALL     GRAPH000  * Graph Data
          ENDIF
.
          IF       PRTRANG=1
            MOVE     TWO,SPCTYPE
            CALL     GRAPH000  * Graph Data
          ENDIF
.
          IF       PRTSDEV=1
            MOVE     THREE,SPCTYPE
            CALL     GRAPH000  * Graph Data
          ENDIF
.
          CALL     CLOSE000  * Close and Delete Temp Files
.
REPT9900
          RETURN
.
.------------------------------------------------------------
. List Statistical Data
.------------------------------------------------------------
LIST0000  DISPLAY  *P1:24,*EL,"Printing Table Page : "
          MOVE      ZERO,MAXRANG
          MOVE      "9999999999",MINRANG
          MOVE      ZERO,MAXXBAR
          MOVE      "9999999999",MINXBAR
          MOVE      ZERO,MAXSDEV
          MOVE      "9999999999",MINSDEV
          PACK     KEY5,SP70
          CALL     RSCCTF1
LIST1000  CALL     RKCCTF1
          BRANCH   OVRCD,LIST9000
          COMPARE  "55",CLNO
          CALL     LHED0000 IF NOT LESS
.
          MOVE     SP70,F10TOT01
          MOVE     SP70,F10TOT02
          MOVE     SP70,F10TOT03
          MOVE     SP70,F10TOT04
          MOVE     SP70,F10TOT05
          MOVE     SP70,F10TOT06
          MOVE     SP70,F10TOT07
          MOVE     SP70,F10TOT08
          MOVE     SP70,F10TOT09
          MOVE     SP70,F10TOT10
          MOVE     ZERO,F2
          REPEAT
            ADD      ONE,F2
            LOAD     F12P2,F2,CCTFST01,CCTFST02,CCTFST03,CCTFST04,CCTFST05:
                              CCTFST06,CCTFST07,CCTFST08,CCTFST09
            MOVE     "9999999.99",KEY10
            FEDIT    F12P2,KEY10
            STORE    KEY10,F2,F10TOT01,F10TOT02,F10TOT03,F10TOT04,F10TOT05:
                              F10TOT06,F10TOT07,F10TOT08,F10TOT09
          UNTIL    (F2=SIZESUBG)
.
          MOVE     "9999999.99",F10TOT10
          MOVE     CCTFXBAR,F12P2
          FEDIT    F12P2,F10TOT10
.
          MOVE     "9999999.99",F10TOT11
          MOVE     CCTFRANG,F12P2
          FEDIT    F12P2,F10TOT11
.
          MOVE     "9999999.99",F10TOT12
          MOVE     CCTFSDEV,F12P2
          FEDIT    F12P2,F10TOT12
.
          PRINT    CCTFGRP," |",F10TOT01,F10TOT02,F10TOT03,F10TOT04,F10TOT05:
                                F10TOT06,F10TOT07,F10TOT08,F10TOT09:
                   " |",F10TOT10,F10TOT11,SP1,F10TOT12;
          IF       ((CCTFSDEV>LOWSDEV)&(CCTFSDEV<UPPSDEV))
            IF       ((CCTFXBAR>LOWXBAR)&(CCTFXBAR<UPPXBAR))
              IF       ((CCTFRANG>LOWRANG)&(CCTFRANG<UPPRANG))
                 PRINT   " |"                * In Range so Normal End to Line
              ELSE
                 PRINT   "**"                * Out Of Range so Flag
              ENDIF
            ELSE
               PRINT   "**"                * Out Of Range so Flag
            ENDIF
          ELSE
             PRINT   "**"
          ENDIF
          IF        DOWNLOAD=1
            WRITE     DOWNFILE,SEQ;QUOTE,CCTFGRP,QUOTE,COMMA:
                                   F10TOT10,COMMA,F10TOT11,COMMA,F10TOT12
          ENDIF
          IF        CCTFRANG>MAXRANG
            MOVE      CCTFRANG,MAXRANG
          ENDIF
          IF        CCTFRANG<MINRANG
            MOVE      CCTFRANG,MINRANG
          ENDIF
.
          IF        CCTFXBAR>MAXXBAR
            MOVE      CCTFXBAR,MAXXBAR
          ENDIF
          IF        CCTFXBAR<MINXBAR
            MOVE      CCTFXBAR,MINXBAR
          ENDIF
.
          IF        CCTFSDEV<MINSDEV
            MOVE      CCTFSDEV,MINSDEV
          ENDIF
          IF        CCTFSDEV>MAXSDEV
            MOVE      CCTFSDEV,MAXSDEV
          ENDIF
          GOTO      LIST1000
.
LIST9000  COMPARE   ZERO,CPAGENO
          CALL      LHED0000 IF EQUAL
          CALL      UND132
          MOVE      "9999999.99",F10TOT01
          MOVE      "9999999.99",F10TOT02
          MOVE      "9999999.99",F10TOT03
          MOVE      "9999999.99",F10TOT04
          MOVE      "9999999.99",F10TOT05
          MOVE      "9999999.99",F10TOT06
          MOVE      "9999999.99",F10TOT07
          MOVE      "9999999.99",F10TOT08
          MOVE      "9999999.99",F10TOT09
          FEDIT     AVGXBAR,F10TOT01
          FEDIT     AVGRANG,F10TOT02
          FEDIT     AVGSDEV,F10TOT03
          FEDIT     UPPXBAR,F10TOT04
          FEDIT     UPPRANG,F10TOT05
          FEDIT     UPPSDEV,F10TOT06
          FEDIT     LOWXBAR,F10TOT07
          FEDIT     LOWRANG,F10TOT08
          FEDIT     LOWSDEV,F10TOT09
          PRINT     *7,"|",*70,"Average":
                    *99,"|",F10TOT01,F10TOT02,SP1,F10TOT03," |"
          CALL      UND132
          PRINT     *7,"|",*70,"Upper Control Limit":
                    *99,"|",F10TOT04,F10TOT05,SP1,F10TOT06," |"
          PRINT     *7,"|",*70,"Lower Control Limit":
                    *99,"|",F10TOT07,F10TOT08,SP1,F10TOT09," |"
          CALL      UND132
          PRINT     "N.B. Sub-groups that are out of range are ":
                    "highlighted by ** in the Right hand column."
          PRINT     *50,"****** End of Data Chart  ******"
          IF        DOWNLOAD=1
            WRITE     DOWNFILE,SEQ;QUOTE,"Average",QUOTE,COMMA:
                                   F10TOT01,COMMA,F10TOT02,COMMA,F10TOT03
          ENDIF
          IF        DOWNLOAD=1
            WRITE     DOWNFILE,SEQ;QUOTE,"Upper Control Limit",QUOTE,COMMA:
                                   F10TOT04,COMMA,F10TOT05,COMMA,F10TOT06
          ENDIF
          IF        DOWNLOAD=1
            WRITE     DOWNFILE,SEQ;QUOTE,"Lower Control Limit",QUOTE,COMMA:
                                   F10TOT07,COMMA,F10TOT08,COMMA,F10TOT09
          ENDIF
.
LIST9999  RETURN
.
LHED0000  CALL      HEAD132
          DISPLAY   *P23:24,*V2LON,CPAGENO
          PRINT     "Casemix Extract   : ",CCEAEID,SP1,CCEADES:
                    *70,"Order by          : ",ORDERDES
          PRINT     "Sub-Groups        : ",SIZESUBG:
                    *70,"Statistic         : ",USESDESC
          IF       DOWNLOAD=1
            PRINT   "Export File       : ",DOWNNAME
            ADD      ONE,CLNO
          ENDIF
          CALL      UND132
          PRINT     SP20,CCSTDES,": ",CCXHKEY,CCXHDES
          CALL      UND132
          PRINT     " Sub  | Measurements                           ":
                    "                                               ":
                    "    |                       Standard |"
          PRINT     "Group |         1         2         3         4":
                    "         5         6         7         8       ":
                    "  9 |     Mean      Range  Deviation |"
          CALL      UND132
          ADD       "4",CLNO
          RETURN
.------------------------------------------------------------
. Print Episode Listing
.------------------------------------------------------------
EPIS0000  MOVE      "99",CLNO
          DISPLAY   *P1:24,*EL,"Printing Epiosde List Page : "
          PACK      KEY36,SP70
          CALL      RSCCSQ1
EPIS1000  CALL      RKCCSQ1
          BRANCH    OVRCD,EPIS9000
.
          COMPARE   "55",CLNO
          CALL      EHED0000 IF NOT LESS
          ADD       ONE,CLNO
.
          PACK      KEY18,CCEAHCD,CCSQEPS
          CALL      RDCCEC1
          CALL      RDCCEP1
          MOVE      CCEPGIV,ANS
          UNPACK    CCEPADAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,KEY10
          UNPACK    CCEPDDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      "99999999.99",F11TOT1
          MOVE      "99999999.99",F11TOT2
          MOVE      ".",KEY1
          MOVE      CCECFTC,F12P2
          FEDIT     F12P2,F11TOT1
          MOVE      CCECTTC,F12P2
          FEDIT     F12P2,F11TOT2
          PRINT     CCSQGRP,SP1,CCEPEPS,SP1,CCEPURN,SP1,ANS,KEY1,CCEPSUR,SP1:
                    CCEPARDC,SP1,CCEPATDC,SP2,CCEPSEX,SP2,CCEPAGEY,SP1,KEY10:
                    SP1,CPCDATE,SP1,CCECLOS,SP1,F11TOT1,SP1,F11TOT2
          GOTO      EPIS1000
.
EPIS9000  COMPARE   ZERO,CPAGENO
          CALL      EHED0000 IF EQUAL
          CALL      UND132
          PRINT     *40,"***** End of Episode Listing *****"
          RETURN
.------------------------------------------------------------
. Episode Listing Heading
.------------------------------------------------------------
EHED0000  CALL      HEAD132
          DISPLAY   *P30:24,*V2LON,CPAGENO
          PRINT     *40,"Episode Reference Listing by Sub Group"
          PRINT     CCSTDES,": ",CCXHKEY,CCXHDES
          CALL      UND132
          PRINT    "Group  Epsiode          UR Number  Name               ":
                   "    Ref.DR Tr. DR Sex Age Adm. Date  Dis. Date   L.O.S":
                   "      Cost 1      Cost 2"
          CALL      UND132
          ADD       ONE,CLNO
          RETURN
.------------------------------------------------------------
. Perform Extract
.------------------------------------------------------------
EXTR0000  CALL      CLEAR000  * Clear Files
.
. Extract Related Episodes to the Sequencing File
.
          DISPLAY   *P1:24,*EL,"Extracting Episodes : "
          PACK      KEY48,CCXHKEY,SP70
          CALL      RSCCEC2
EXTR1000  CALL      RKCCEC2
          BRANCH    OVRCD,EXTR2000
          MATCH     CCECLV1,CCXHKEY
          GOTO      EXTR2000 IF NOT EQUAL
.
          ADD       ONE,SECTOR
          IF        (SECTOR%10=0)
            DISPLAY   *P23:24,*V2LON,SECTOR
          ENDIF
.
          PACK      KEY18,CCEAHCD,CCECEPS
          CALL      RDCCEP1
          BRANCH    OVRCD,EXTR1000
.
          BRANCH    ORDERBY,EXTR1110,EXTR1120,EXTR1130
EXTR1110  PACK      CCSQSEQ,CCEPEPS,SP70
          GOTO      EXTR1200
EXTR1120  PACK      CCSQSEQ,CCEPADAT,SP70
          GOTO      EXTR1200
EXTR1130  PACK      CCSQSEQ,CCEPDDAT,SP70
.
EXTR1200  BRANCH    USESTAT,EXTR1210,EXTR1220,EXTR1230
EXTR1210  MOVE      CCECLOS,CCSQSTA
          GOTO      EXTR1900
EXTR1220  MOVE      CCECFTC,CCSQSTA
          GOTO      EXTR1900
EXTR1230  MOVE      CCECTTC,CCSQSTA
.
EXTR1900  PACK      KEY32,CCSQSEQ,CCEPEPS
          UNPACK    KEY32,CCSQSEQ,CCSQEPS
          MOVE      SP70,CCSQGRP
          CALL      RDCCSQ1
          IF        OVRCD=1
            CALL      WRCCSQ1
          ENDIF
          GOTO      EXTR1000
.
. Group Episodes
.
EXTR2000  PACK      KEY32,SP70
          MOVE      ZERO,F12P2
          MOVE      ZERO,SECTOR
          MOVE      ONE,GROUPNO
          MOVE      ZERO,TOTXBAR
          MOVE      ZERO,TOTRANG
          MOVE      ZERO,TOTSDEV
          DISPLAY   *P1:24,*EL,"Calculating Statistics : ",*V2LON,GROUPNO
          CALL      RSCCSQ1
EXTR3000  CALL      RKCCSQ1
          BRANCH    OVRCD,EXTR4000
          MOVE      GROUPNO,CCSQGRP
          CALL      UPCCSQ1
          PACK      KEY5,GROUPNO
          CALL      RDCCTF1
          IF        OVRCD=1
            MOVE      GROUPNO,CCTFGRP
            MOVE      ZERO,CCTFST01
            MOVE      ZERO,CCTFST02
            MOVE      ZERO,CCTFST03
            MOVE      ZERO,CCTFST04
            MOVE      ZERO,CCTFST05
            MOVE      ZERO,CCTFST06
            MOVE      ZERO,CCTFST07
            MOVE      ZERO,CCTFST08
            MOVE      ZERO,CCTFST09
            MOVE      ZERO,CCTFRANG
            MOVE      ZERO,CCTFXBAR
            MOVE      ZERO,CCTFSDEV
            CALL      WRCCTF1
            PACK      KEY5,GROUPNO
            CALL      RDCCTF1
          ENDIF
          ADD       ONE,SECTOR
          ADD       CCSQSTA,F12P2
          STORE     CCSQSTA,SECTOR,CCTFST01,CCTFST02,CCTFST03,CCTFST04:
                                   CCTFST05,CCTFST06,CCTFST07,CCTFST08:
                                   CCTFST09
          IF        SECTOR=SIZESUBG
            MOVE      ZERO,SECTOR
            ADD       ONE,GROUPNO
            DISPLAY   *P26:24,*V2LON,GROUPNO
            ASSIGN    F12P2/SIZESUBG,CCTFXBAR
            MOVE      ZERO,CCVARIAN
            MOVE      ZERO,F2
            MOVE      ZERO,MAXRANG
            MOVE      "9999999999",MINRANG
            REPEAT
              ADD       ONE,F2
              LOAD      F12P4,F2,CCTFST01,CCTFST02,CCTFST03,CCTFST04:
                                 CCTFST05,CCTFST06,CCTFST07,CCTFST08:
                                 CCTFST09
              IF        F12P4>MAXRANG
                MOVE      F12P4,MAXRANG
              ENDIF
              IF        F12P4<MINRANG
                MOVE      F12P4,MINRANG
              ENDIF
              ASSIGN    F12P4-CCTFXBAR,F12P4
              ASSIGN    CCVARIAN+(F12P4*F12P4),CCVARIAN
            UNTIL     (F2=SIZESUBG)
            ASSIGN    CCVARIAN/(SIZESUBG-CALCSDEV),CCVARIAN
            CALL      CALSD000
            ASSIGN    MAXRANG-MINRANG,CCTFRANG
            MOVE      CCSTDDEV,CCTFSDEV
            ADD       CCTFSDEV,TOTSDEV
            ADD       CCTFRANG,TOTRANG
            ADD       CCTFXBAR,TOTXBAR
            MOVE      ZERO,F12P2
          ENDIF
          CALL      UPCCTF1
          GOTO      EXTR3000
EXTR4000  MOVE      GROUPNO,KEY5
          CALL      RDCCTF1
          IF        OVRCD=0
            CALL      DECCTF1  * Delete Last Incomplete Group
          ENDIF
.
          SUB       ONE,GROUPNO
          ASSIGN    TOTSDEV/GROUPNO,AVGSDEV
          ASSIGN    TOTRANG/GROUPNO,AVGRANG
          ASSIGN    TOTXBAR/GROUPNO,AVGXBAR
          MOVE      SP70,KEY5
          MOVE      ZERO,VARXBAR
          MOVE      ZERO,VARSDEV
          MOVE      ZERO,VARRANG
          CALL      RSCCTF1
EXTR5000  CALL      RKCCTF1
          BRANCH    OVRCD,EXTR6000
          ASSIGN    (CCTFXBAR-AVGXBAR),F12P4
          ASSIGN    VARXBAR+(F12P4*F12P4),VARXBAR
          ASSIGN    (CCTFSDEV-AVGSDEV),F12P4
          ASSIGN    VARSDEV+(F12P4*F12P4),VARSDEV
          ASSIGN    (CCTFRANG-AVGRANG),F12P4
          ASSIGN    VARRANG+(F12P4*F12P4),VARRANG
          GOTO      EXTR5000
.
EXTR6000  ASSIGN    VARXBAR/(GROUPNO-CALCSDEV),VARXBAR
          MOVE      VARXBAR,CCVARIAN
          CALL      CALSD000
          MOVE      CCSTDDEV,SDVXBAR
.
          ASSIGN    VARSDEV/(GROUPNO-CALCSDEV),VARSDEV
          MOVE      VARSDEV,CCVARIAN
          CALL      CALSD000
          MOVE      CCSTDDEV,SDVSDEV
.
          ASSIGN    VARRANG/(GROUPNO-CALCSDEV),VARRANG
          MOVE      VARRANG,CCVARIAN
          CALL      CALSD000
          MOVE      CCSTDDEV,SDVRANG
.
          LOAD      CCFA3,SIZESUBG,ZERO,ZERO,CCFA303,CCFA304,CCFA305,CCFA306:
                                             CCFA307,CCFA308,CCFA309
          LOAD      CCFB3,SIZESUBG,ZERO,ZERO,CCFB303,CCFB304,CCFB305,CCFB306:
                                             CCFB307,CCFB308,CCFB309
          LOAD      CCFB4,SIZESUBG,ZERO,ZERO,CCFB403,CCFB404,CCFB405,CCFB406:
                                             CCFB407,CCFB408,CCFB409
          LOAD      CCFD3,SIZESUBG,ZERO,ZERO,CCFD303,CCFD304,CCFD305,CCFD306:
                                             CCFD307,CCFD308,CCFD309
          LOAD      CCFD4,SIZESUBG,ZERO,ZERO,CCFD403,CCFD404,CCFD405,CCFD406:
                                             CCFD407,CCFD408,CCFD409
.
          ASSIGN    AVGXBAR+(CCFA3*AVGSDEV),UPPXBAR
          ASSIGN    AVGXBAR-(CCFA3*AVGSDEV),LOWXBAR
.
          ASSIGN    AVGRANG*CCFD4,UPPRANG
          ASSIGN    AVGRANG*CCFD3,LOWRANG
.
          ASSIGN    AVGSDEV*CCFB4,UPPSDEV
          ASSIGN    AVGSDEV*CCFB3,LOWSDEV
.
          IF        LOWXBAR<0
            MOVE      ZERO,LOWXBAR
          ENDIF
          IF        LOWSDEV<0
            MOVE      ZERO,LOWSDEV
          ENDIF
          IF        LOWRANG<0
            MOVE      ZERO,LOWRANG
          ENDIF
.
EXTR9999  RETURN
.------------------------------------------------------------
. Delete Files
.------------------------------------------------------------
CLOSE000  DISPLAY  *P1:10;
          CLOSE    CCSSEQA1,DELETE
          CLOSE    CCSTEFA1,DELETE
          RETURN
.------------------------------------------------------------
. Clear Files and Open
.------------------------------------------------------------
CLEAR000  DISPLAY  *P1:10;
          CLEAR    FILENAME
          APPEND   "CCR56A",FILENAME
          APPEND   PORT,FILENAME
          RESET    FILENAME
          REP      " 0",FILENAME
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     CCSTEFA1,FILENAME
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    CCSTEFA1,DELETE
          ENDIF
.
          CLEAR    COMMAND
          APPEND   ISBUILD,COMMAND
          APPEND   FILENAME,COMMAND
          APPEND   " 102 U1-5",COMMAND
          RESET    COMMAND
          EXECUTE  COMMAND,TASKID
          OPEN     CCSTEFA1,FILENAME
.
          DISPLAY  *P1:10;
          CLEAR    FILENAME
          APPEND   "CCR56B",FILENAME
          APPEND   PORT,FILENAME
          RESET    FILENAME
          REP      " 0",FILENAME
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     CCSSEQA1,FILENAME
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    CCSSEQA1,DELETE
          ENDIF
.
          CLEAR    COMMAND
          APPEND   ISBUILD,COMMAND
          APPEND   FILENAME,COMMAND
          APPEND   " 46 U1-16,17-32",COMMAND
          RESET    COMMAND
          EXECUTE  COMMAND,TASKID
          OPEN     CCSSEQA1,FILENAME
.
          RETURN
.------------------------------------------------------------
. CALSD000 - Calculate Standard Deviation
.------------------------------------------------------------
. Routine to Calculate Standard Deviation (CCSTDDEV)
.          given the Statistical Variance (CCVARIAN)
.------------------------------------------------------------
CALSD000  MOVE      ZERO,CCSTDDEV
          COMPARE   ZERO,CCVARIAN
          GOTO      CALSD999 IF EQUAL
          GOTO      CALSD999 IF LESS
          COMPARE   "999999999999.9999",CCVARIAN  * Out of Bounds
          GOTO      CALSD999 IF EQUAL
.
          MOVE      "10000",CCFACTOR
.
CALSD100  ADD       CCFACTOR,CCSTDDEV
          ASSIGN    (CCSTDDEV*CCSTDDEV),CCTSTVAR
          COMPARE   CCVARIAN,CCTSTVAR
          GOTO      CALSD999 IF EQUAL           * have the root
          GOTO      CALSD100 IF LESS
.
          SUB       CCFACTOR,CCSTDDEV
.
          DIV       "10",CCFACTOR
          COMPARE   ".00001",CCFACTOR
          GOTO      CALSD100 IF NOT EQUAL
.
CALSD999  RETURN
.------------------------------------------------------------
. Open/Create Downlaod File
.------------------------------------------------------------
OPEN0000  ENDSET    DOWNNAME
          APPEND    SP70,DOWNNAME
          RESET     DOWNNAME
          MATCH     SP70,DOWNNAME
          GOTO      OPEN9000 IF EQUAL
.
          STRIP     DOWNNAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      DOWNFILE,DOWNNAME
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN1000
.
OPEN0100  BEEP
          KEYIN     *P1:24,*EL,"Export File Already Exists. Overwrite (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MOVE      ONE,EXIT
          MATCH     "N",ANS
          GOTO      OPEN9999 IF EQUAL
          MATCH     "Y",ANS
          GOTO      OPEN0100 IF NOT EQUAL
          CLOSE     DOWNFILE,DELETE
.
OPEN1000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PREP      DOWNFILE,DOWNNAME
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9000  BEEP
          MOVE      "Export Filename MUST be Specified - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      OPEN9999
.
OPEN9100  BEEP
          MOVE      "Unable to Create Export File - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      OPEN9999
.
OPEN9999  RETURN
.------------------------------------------------------------
. Print Graph
.------------------------------------------------------------
GRAPH000  MOVE      ZERO,CPAGENO
          MOVE      "99",CLNO
          CLOCK    TIME,CTIMEIS
          CALL     GSCAL000
          CALL     GHEAD000
.
          PACK     KEY5,SP70
          CALL     RSCCTF1
GRAPH100  CALL     RKCCTF1
          BRANCH   OVRCD,GRAPH900
.
          COMPARE  "55",CLNO
          CALL     GHEAD000 IF NOT LESS
.
          PRINT    CCTFGRP,"  |";
          IF       LCLPOS>9
            PRINT  *LCLPOS,":";
          ENDIF
          PRINT    *MEANPOS,"|";
          IF       UCLPOS<132
            PRINT    *UCLPOS,":";
          ENDIF
.
          LOAD     F12P2,SPCTYPE,CCTFXBAR,CCTFRANG,CCTFSDEV
          ASSIGN   (F12P2/SCALE)+OFFSET,CCOL
          PRINT    *CCOL,"*"
          ADD      ONE,CLNO
          GOTO     GRAPH100
.
GRAPH900  CALL     UND132
          RETURN
.------------------------------------------------------------
. Print Graph Heading
.------------------------------------------------------------
GHEAD000  CALL     HEAD132
          BRANCH   SPCTYPE,GHEAD100,GHEAD200,GHEAD300
.
GHEAD100  PRINT    SP20,"Statistical Quality Control Chart for the Mean"
          MOVE     MINXBAR,F5P1
          GOTO     GHEAD400
.
GHEAD200  PRINT    SP20,"Statistical Quality Control Chart for the Range"
          MOVE     MINRANG,F5P1
          GOTO     GHEAD400
.
GHEAD300  PRINT    SP20,"Statistical Quality Control Chart for the":
                   " Standard Deviation"
          MOVE     MINSDEV,F5P1
          GOTO     GHEAD400
.
GHEAD400  CALL     UND132
          PRINT    SP20,CCSTDES,": ",CCXHKEY,CCXHDES
          CALL     UND132
          ASSIGN   LCLPOS-1,CCOL
          PRINT    *CCOL,"LCL";
          ASSIGN   MEANPOS-2,CCOL
          PRINT    *CCOL,"MEAN";
          ASSIGN   UCLPOS-1,CCOL
          PRINT    *CCOL,"UCL"
.
          MOVE     ZERO,SECTOR
          PRINT    SP2,F5P1;
          REPEAT
            ADD      ONE,SECTOR
            ASSIGN   F5P1+(SCALE*10),F5P1
            PRINT    SP3,F5P1;
          UNTIL    (SECTOR=11)
.
          PRINT    " "
          PRINT    "Group  |---------+---------+---------+---------+":
                           "---------+---------+---------+---------+":
                           "---------+---------+---------+"
          RETURN
.
GSCAL000
          BRANCH   SPCTYPE,GSCAL100,GSCAL200,GSCAL300
GSCAL100
          IF       MAXXBAR<13
            MOVE     ".1",SCALE
            MOVE     ZERO,MINXBAR
            MOVE     "9",OFFSET
            GOTO     GSCAL110
          ENDIF
.
          ASSIGN   MINXBAR,F12
          MOVE     F12,MINXBAR
          ASSIGN   MAXXBAR,F12
          MOVE     F12,MAXXBAR
          ASSIGN   (MAXXBAR-MINXBAR)/100.0,SCALE
          ASSIGN   MINXBAR-SCALE-1.0,MINXBAR
          ASSIGN   MAXXBAR+SCALE+1.0,MAXXBAR
.
          ASSIGN   (MAXXBAR-MINXBAR)/100.0,SCALE
          ASSIGN   9.0-(MINXBAR/SCALE),OFFSET
.
GSCAL110  ASSIGN   (AVGXBAR/SCALE)+OFFSET,MEANPOS
          ASSIGN   (LOWXBAR/SCALE)+OFFSET,LCLPOS
          ASSIGN   (UPPXBAR/SCALE)+OFFSET,UCLPOS
.
          GOTO     GSCAL500
.
GSCAL200  IF       MAXRANG<13
            MOVE     ".1",SCALE
            MOVE     ZERO,MINRANG
            MOVE     "9",OFFSET
            GOTO     GSCAL210
          ENDIF
.
          ASSIGN   MINRANG,F12
          MOVE     F12,MINRANG
          ASSIGN   MAXRANG,F12
          MOVE     F12,MAXRANG
          ASSIGN   (MAXRANG-MINRANG)/100.0,SCALE
          ASSIGN   MINRANG-SCALE-1.0,MINRANG
          ASSIGN   MAXRANG+SCALE+1.0,MAXRANG
.
          ASSIGN   (MAXXBAR-MINRANG)/100.0,SCALE
          ASSIGN   9.0-(MINRANG/SCALE),OFFSET
.
GSCAL210  ASSIGN   (AVGRANG/SCALE)+OFFSET,MEANPOS
          ASSIGN   (LOWRANG/SCALE)+OFFSET,LCLPOS
          ASSIGN   (UPPRANG/SCALE)+OFFSET,UCLPOS
          GOTO     GSCAL500
.
GSCAL300  IF       MAXSDEV<13
            MOVE     ".1",SCALE
            MOVE     ZERO,MINSDEV
            MOVE     "9",OFFSET
            GOTO     GSCAL310
          ENDIF
.
          ASSIGN   MINSDEV,F12
          MOVE     F12,MINSDEV
          ASSIGN   MAXSDEV,F12
          MOVE     F12,MAXSDEV
          ASSIGN   (MAXSDEV-MINSDEV)/100.0,SCALE
          ASSIGN   MINSDEV-SCALE-1.0,MINSDEV
          ASSIGN   MAXSDEV+SCALE+1.0,MAXSDEV
.
          ASSIGN   (MAXSDEV-MINSDEV)/100.0,SCALE
          ASSIGN   9.0-(MINSDEV/SCALE),OFFSET
.
GSCAL310  ASSIGN   (AVGSDEV/SCALE)+OFFSET,MEANPOS
          ASSIGN   (LOWSDEV/SCALE)+OFFSET,LCLPOS
          ASSIGN   (UPPSDEV/SCALE)+OFFSET,UCLPOS
          GOTO     GSCAL500
GSCAL500
          RETURN
.
.----------------------------------------------------------------------
. Enter Casemix Extract ID
.----------------------------------------------------------------------
EEID0000  MOVE      ZERO,CKEYTYP
          CALL      CCSCOPCL         * Close Files
          CALL      KCCEAA00
          BRANCH    EXIT,EEID0000,EEID9999
          MATCH     "1",CCEAUST
          IF        !@EQUAL
            BEEP
            MOVE      "Statistics Not Calculated for Extract - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EEID0000
          ENDIF
          CALL      GETCME00
          CALL      CCSCOPOP         * Open Files
EEID9999  RETURN
.======================================================================
. Determine Display Values for a Valid Casemix Extract Code
.======================================================================
GETCME00  MATCH     SP70,CCEAFDD
          IF        @EQUAL
            MOVE      "Start     ",FROMDD
          ELSE
            UNPACK    CCEAFDD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,FROMDD
          ENDIF
.
          MATCH     "99999999",CCEATDD
          IF        @EQUAL
            MOVE      "Finish    ",TODD
          ELSE
            UNPACK    CCEATDD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,TODD
          ENDIF
.
          MATCH     SP70,CCEAFAD
          IF        @EQUAL
            MOVE      "Start     ",FROMAD
          ELSE
            UNPACK    CCEAFAD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,FROMAD
          ENDIF
.
          MATCH     "99999999",CCEATAD
          IF        @EQUAL
            MOVE      "Finish    ",TOAD
          ELSE
            UNPACK    CCEATAD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,TOAD
          ENDIF
.
          MOVE     CCEAVIS,F1
          BRANCH   F1,GETCME10,GETCME20,GETCME30
          MOVE     "All        ",VISITDES
          GOTO     GETCME40
GETCME10  MOVE     "A & E      ",VISITDES
          GOTO     GETCME40
GETCME20  MOVE     "Outpatients ",VISITDES
          GOTO     GETCME40
GETCME30  MOVE     "Inpatients",VISITDES
          GOTO     GETCME40
.
GETCME40  MOVE     SP70,CLV1DES
          MOVE     SP70,CLV2DES
          MOVE     SP70,CLV3DES
.
          MOVE     CCEALV1,KEY3
          CALL     RDCCST1
          MOVE     CCSTDES,CLV1DES
.
          MATCH    SP70,CCEALV2
          IF       !@EQUAL
            MOVE     CCEALV2,KEY3
            CALL     RDCCST1
            MOVE     CCSTDES,CLV2DES
          ENDIF
.
          MATCH    SP70,CCEALV3
          IF       !@EQUAL
            MOVE     CCEALV3,KEY3
            CALL     RDCCST1
            MOVE     CCSTDES,CLV3DES
          ENDIF
.
          MATCH    SP70,CCEAFCM
          IF       @EQUAL
            MOVE     "Actual Costs",FROMCMOD
          ELSE
            MOVE     CCEAFCM,KEY4
            CALL     RDCCMA1
            MOVE     CCMADES,FROMCMOD
          ENDIF
.
          MATCH    SP70,CCEATCM
          IF       @EQUAL
            MOVE     "Actual Costs",TOCMOD
          ELSE
            MOVE     CCEATCM,KEY4
            CALL     RDCCMA1
            MOVE     CCMADES,TOCMOD
          ENDIF
.
          MOVE     CCEAHCD,KEY2
          CALL     RDCCHC1
.
          MOVE       CCEADAY,F1
          IF         F1=0
            MOVE       "Exclude Day Cases",DAYCDESC
          ELSE
            IF         F1=2
              MOVE       "Day Cases Only",DAYCDESC
            ELSE
              MOVE       "Include Day Cases",DAYCDESC
            ENDIF
          ENDIF
.
          RETURN
.------------------------------------------------------------
. Enter Format
.------------------------------------------------------------
EORD0000  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EL,"Order By : ":
                    *V2LON,"1",*HOFF,". Episode, ":
                    *V2LON,"2",*HOFF,". Discharge Date, ":
                    *V2LON,"3",*HOFF,". Admission Date"
EORD1000  KEYIN     *PCCOL:CVERT,*V2LON,ORDERBY
          BRANCH    ORDERBY,EORD1100,EORD1200,EORD1300
          BEEP
          GOTO      EORD1000
.
EORD1100  MOVE      "Episode Code              ",ORDERDES
          GOTO      EORD9999
.
EORD1200  MOVE      "Discharge Date            ",ORDERDES
          GOTO      EORD9999
.
EORD1300  MOVE      "Admission Date            ",ORDERDES
          GOTO      EORD9999
.
EORD9999  CALL      MESSAGE3
          RETURN
.
.------------------------------------------------------------
. Enter Format
.------------------------------------------------------------
ESTA0000  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EL,"Statistic : ":
                    *V2LON,"1",*HOFF,". Length of Stay, ":
                    *V2LON,"2",*HOFF,". Comparision Cost 1, ":
                    *V2LON,"3",*HOFF,". Comparision Cost 2"
ESTA1000  KEYIN     *PCCOL:CVERT,*V2LON,USESTAT
          BRANCH    USESTAT,ESTA1100,ESTA1200,ESTA1300
          BEEP
          GOTO      ESTA1000
.
ESTA1100  MOVE      "Length of Stay            ",USESDESC
          GOTO      ESTA9999
.
ESTA1200  MOVE      FROMCMOD,USESDESC
          GOTO      ESTA9999
.
ESTA1300  MOVE      TOCMOD,USESDESC
          GOTO      ESTA9999
.
ESTA9999  CALL      MESSAGE3
          RETURN
.
.------------------------------------------------------------
. Enter Format
.------------------------------------------------------------
ESIZ0000  KEYIN     *PCCOL:CVERT,*V2LON,SIZESUBG
          IF        ((SIZESUBG<3)|(SIZESUBG>9))
            BEEP
            MOVE    "Group Size Should be between 4 and 9 - ",DISPMSG
            CALL    MESSAGE1
            GOTO    ESIZ0000
          ENDIF
          RETURN
.---------------------------------------------------------------------------
. Enter Casemix Code
.-------------------------------------------------------------------------------
EXHD0000  TOPIC     "CCXHKEY "
          MOVE      CCEALV1,CCXHSTY
          MOVE      CCEALV1,KEY3
          CALL      RDCCST1
          SFORMAT   VAR,CCSTLEN
          MATCH     "1",CCSTJR
          IF        @EQUAL
            KEYIN     *PCCOL:CVERT,*V2LON,*JR,VAR
          ELSE
            KEYIN     *PCCOL:CVERT,*V2LON,VAR
          ENDIF
.
          MATCH     "1",CCSTZF
          IF        @EQUAL
            REP       " 0",VAR
          ENDIF
.
          DISPLAY     *PCCOL:CVERT,*V2LON,VAR
.
          ENDSET    VAR
          APPEND    SP70,VAR
          RESET     VAR
.
          MATCH     SP70,VAR
          GOTO      EXHD0090 IF EQUAL
.
          MATCH     "1",CCSTJR
          IF        @EQUAL
            ENDSET    VAR
          ENDIF
          CMATCH    EXITCHAR,VAR
          GOTO      EXHD0095 IF EQUAL
.
          CMATCH    QUEST,VAR
          GOTO      EXHD0010 IF NOT EQUAL
.
          MOVE      CCITEM,SCCITEM
          CALL      HCCXHA00
          MOVE      SCCITEM,CCITEM
.
          ENDSET    CCXHKEY
          APPEND    SP70,CCXHKEY
          RESET     CCXHKEY
.
          MATCH     SP70,CCXHKEY
          GOTO      EXHD0000 IF EQUAL
          MOVE      CCXHKEY,VAR
.
          DISPLAY   *PCCOL:CVERT,*V2LON,VAR
EXHD0010
          RESET     VAR
          MATCH     "1",CCSTDE
          IF        @EQUAL
            TYPE      VAR
            GOTO      EXHD0015 IF EQUAL
            BEEP
            GOTO      EXHD0000
          ENDIF
EXHD0015
          MOVE      VAR,CCXHKEY
          PACK      KEY13,CCXHSTY,VAR
          CALL      RACCXH1
          BRANCH    OVRCD,EXHD0080
          CALL      RDCCXH1
          MOVE      ZERO,EXIT
          GOTO      EXHD0099
.
EXHD0080  MOVE      ZERO,EXIT
          BRANCH    CKEYTYP,EXHD0099,EXHD0099
          MOVE      "Code Does Not Exist - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EXHD0000
.
EXHD0085  MOVE      SP70,CCXHKEY
          MOVE      ZERO,EXIT
          GOTO      EXHD0099
.
EXHD0090  MOVE      SP70,CCXHKEY
          MOVE      ONE,EXIT
          GOTO      EXHD0099
.
EXHD0095  MOVE      TWO,EXIT
.
EXHD0099  SFORMAT   VAR,127
          TOPIC     PRGID
          RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       CCR56TIO    
          INC       CCSCEAIO/INC
          INC       CCSCEAKY    
          INC       CCSCEBIO/INC
          INC       CCSCECIO/INC
          INC       CCSCEDIO/INC
          INC       CCSCEEIO/INC
          INC       CCSCMAIO/INC
          INC       CCSCOPCD    
          INC       CCSEPSIO/INC
          INC       CCSHCDIO/INC
          INC       CCSSTYIO/INC
          INC       CCSXHDIO/INC
          INC       CCSXHDKY    
.
          INC       STDGENCD
.
