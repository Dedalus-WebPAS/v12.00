.*****************************************************************************
.*    Program      : IBAPCP05                                                *
.*    Description  : Patient Care Plans - Care Plan Editing Set-up           *
.*                                                                           *
.*    Author       : ROD     (07/04/92)                                      *
.*    Function     : Allow users to set up a condensed version of their      *
.*                   care plans database      (Extremely Sexy!)              *
.*    Modifications:                                                         *
.*       V10.11.01  15/09/2017 Ania P        CAR 261630                      *
.*                  Removed use of PORT                                      *
.*        V9.02.00  30/12/2002 Tracey Nguyen srf 23497                       *
.*                  r5.10 Care Plans Port to V9                              *
.*---------------------------------------------------------------------------*
.*        V5.01.002 25/03/1993    Justin Coates                              *
.*                  use SAVKEY13 to save key in KDIA0000                     *
.*****************************************************************************
.
          INC       STD001FD
          INC       PCPDBSFD/INC
          INC       PCPDSCFD/INC
          INC       PCPEDIFD/INC
          INC       PCPFRAFD/INC
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
CLSSCODE  DIM       9
CMDLINE   DIM       80
DIAGARRY  DIM       13[18]
DIAGCODE  DIM       9
DIAGDESC  DIM       70
DISPITEM  FORM      1
FNAME     DIM       8
FNHDR     INIT      "pcp05t"
FREQARRY  DIM       9[18]
HILITE    FORM      1
ITEM      DIM       2
ITEMFRM   FORM      2
ITEMNUM   FORM      2
LASTSC    FORM      1
PTMPTYPE  FORM      2
PTMPCODE  DIM       9
QSTTYPE   FORM      1
RECDISP1  DIM       20
RECTYPE   FORM      2
RELFCODE  DIM       9
RELFDESC  DIM       60
RFCTARRY  DIM       20[18]
SAVKEY13  DIM       13
SSEVEN    FORM      " 7"
SEIGHT    FORM      " 8"
SNINE     FORM      " 9"
STEN      FORM      "10"
SAVCODE   DIM       9
SAVCVERT  FORM      2
SCREEN    FORM      2
TMPTYPE   FORM      2
.
. temp file set up
.
TMPPCP05  IFILE     SQL, FIXED=21, KEY="U1-2,3-11,12-20"
.
DXTYPE    DIM       2       1      * Editting type   7=Related Factors/Def Char
.                                                    9=Def Char/Outcomes
.                                                   10=Outcomes/Intervent Plans
.                                                   11=Intervent Plans/Frequencs
XCOD1     DIM       9       3      * First code
XCOD2     DIM       9      12      * Second code
.          End of record   21
XTYPE     FORM      2
.
PRGID     INIT      "IBAPCP05"
PRGNAM    INIT      "Care Plans Editting Set Up"
VERSION   INIT      "V12.00.00"
.
.****************************************************************************
.*  ML0000  :  Mainline code                                                *
.****************************************************************************
ML0000    CALL      INIT0000                      * initialisation
.
ML1000    CALL      KDIA0000                      * keyin diagnosis code
          BRANCH    EXIT,ML9999                   * nothing input so exit
.
ML2000    CALL      MENU0000                      * get option from menu
          BRANCH    EXIT,ML1000                   * nothing input
.
          CALL      PROC0000                      * Do processing
          GOTO      ML2000
.
ML9999    CHAIN     PGM
+
.****************************************************************************
.*  INIT0000  :  Initialisation                                             *
.****************************************************************************
INIT0000  CALL      DISPHEAD
.
          OPEN      PCPDSCA1,"pcpdscaf"
          OPEN      PCPDBSA1,"pcpdbsaf"
          OPEN      PCPEDIA1,"pcpediaf"
          OPEN      PCPFRAA1,"pcpfraaf"
.
          CALL      TFILENAM
          MOVE      TFILNAME,FNAME
.
INIT9999  RETURN
+
.***************************************************************************
.*  MENU0000  :  Get Menu Options                                          *
.***************************************************************************
MENU0000  DISPLAY   *P1:4,*EF:
                    *P1:4,"Diagnosis Code : ",*V2LON,DIAGDESC:
                    *P2:6,*V2LON,"0",*HOFF,". Exit":
                    *P2:7,*V2LON,"1",*HOFF,". Related Factors":
                    *P30:7,"-> Defining Characteristics":
                    *P2:8,*V2LON,"2",*HOFF,". Defining Characteristics":
                    *P30:8,"-> Outcomes":
                    *P2:9,*V2LON,"3",*HOFF,". Outcomes":
                    *P30:9,"-> Intervention Plans":
                    *P2:10,*V2LON,"4",*HOFF,". Intervention Plans":
                    *P30:10,"-> Frequencies",*P1:12,"Select Option : "
.
MENU1000  KEYIN     *P17:12,*DV,UNDLN1:
                    *P17:12,*V2LON,MOPTION
.
          IF        (MOPTION < 0) | (MOPTION > 4)
            BEEP
            GOTO      MENU1000
          ENDIF
.
          IF        MOPTION = 0
            MOVE      ONE,EXIT                    * Exit
            GOTO      MENU9999
          ENDIF
.
          MOVE      ZERO,EXIT                     * valid input
.
MENU9999  RETURN
+
.****************************************************************************
.*  PROC0000  :  Do ALL Processing                                          *
.****************************************************************************
PROC0000  BRANCH    MOPTION,PROC1000,PROC3000,PROC5000,PROC7000
.
. --- Related Factors/Defining Characteristics ---
.
PROC1000  DISPLAY   *P1:5,*EF,*P5:6,*V2LON,*ULON,"Related Factors"
          MOVE      SEVEN,SAVCVERT
          MOVE      " 8",RECTYPE                  * Nursing diagnosis
          MOVE      ZERO,QSTTYPE                  * dont ask Post,Cancel
          CALL      RFAC0000                      * get related factor
          BRANCH    EXIT,PROC9999
.
          DISPLAY   *P1:5,"Related Factor : ",*V2LON,RELFDESC:
                    *P1:6,*EF,*P5:7,*V2LON,*ULON,"Defining Characteristics"
          MOVE      EIGHT,SAVCVERT
          MOVE      "10",RECTYPE                  * Defining Characteristics
          MOVE      ONE,QSTTYPE                   * ask Post,Cancel
          CALL      RFAC0000                      * get Defining Characteristics
          GOTO      PROC1000
.
. --- Defining Characteristics/Outcomes ---
.
PROC3000  DISPLAY   *P1:5,*EF,*P5:6,*V2LON,*ULON,"Defining Characteristics"
          MOVE      SEVEN,SAVCVERT
          MOVE      "10",RECTYPE                  * Defining Characteristics
          MOVE      ZERO,QSTTYPE                  * dont ask Post,Cancel
          CALL      RFAC0000                      * get Defining Characteristics
          BRANCH    EXIT,PROC9999
.
          DISPLAY   *P1:5,"Defining Characteristics : ",*V2LON,RELFDESC:
                    *P1:6,*EF,*P5:7,*V2LON,*ULON,"Outcomes"
          MOVE      EIGHT,SAVCVERT
          MOVE      "7",RECTYPE                   * Outcomes
          MOVE      ONE,QSTTYPE                   * ask Post,Cancel
          CALL      RFAC0000                      * get Outcomes
          GOTO      PROC3000        
.
. --- Outcomes/Intervention Plans ---
.
PROC5000  DISPLAY   *P1:5,*EF,*P5:6,*V2LON,*ULON,"Outcomes"
          MOVE      SEVEN,SAVCVERT
          MOVE      "7",RECTYPE                   * Outcomes
          MOVE      ZERO,QSTTYPE                  * dont ask Post,Cancel
          CALL      RFAC0000                      * get Outcomes
          BRANCH    EXIT,PROC9999
.
          DISPLAY   *P1:5,"Outcomes : ",*V2LON,RELFDESC:
                    *P1:6,*EF,*P5:7,*V2LON,*ULON,"Intervention Plans"
          MOVE      EIGHT,SAVCVERT
          MOVE      "9",RECTYPE                   * Intervention Plans
          MOVE      ONE,QSTTYPE                   * ask Post,Cancel
          CALL      RFAC0000                      * get Intervention Plans
          GOTO      PROC5000        
.
. --- Intervention Plans/Frequencies ---
.
PROC7000  DISPLAY   *P1:5,*EF,*P5:6,*V2LON,*ULON,"Intervention Plans"
          MOVE      SEVEN,SAVCVERT
          MOVE      "9",RECTYPE                   * Intervention Plans
          MOVE      ZERO,QSTTYPE                  * dont ask Post,Cancel
          CALL      RFAC0000                      * get Intervention Plans
          BRANCH    EXIT,PROC9999
.
          DISPLAY   *P1:5,"Intervention Plans : ",*V2LON,RELFDESC:
                    *P1:6,*EF,*P5:7,*V2LON,*ULON,"Frequency"
          MOVE      ONE,QSTTYPE
          MOVE      RELFCODE,PCDBCLSS
          CALL      SFRQ0000                      * select a frequency
          GOTO      PROC7000
.
PROC9999  RETURN
+
.*************************************************************************
.*  KDIA0000  :  Keyin a diagnosis code                                  *
.*************************************************************************
KDIA0000  DISPLAY   *P1:4,*EF:
                    *P5:4,*V2LON,*ULON,"Nursing Diagnosis"
.
KDIA0100  MOVE      FIVE,CVERT                    * init screen row
          MOVE      ONE,SCREEN                    * init screen no.
          MOVE      ONE,ITEMNUM                   * init stock no.
          MOVE      SP9,SAVCODE
.
          MOVE      " 6",RECTYPE                  * Nursing diagnosis
          PACK      KEY13,RECTYPE,SP20            * position at start
          CALL      RSPCDSC1
KDIA1000  CALL      RKPCDSC1                      * read next record
          BRANCH    OVRCD,KDIA5000                * no more records
          PACK      SAVKEY13,PCDSTYPE,PCDSCODE,PCDSLINE       * get record key
.
. check if same record type
.  
          COMPARE   RECTYPE,PCDSTYPE
          GOTO      KDIA5000 IF NOT EQUAL
.
. check if enough room for display
.
KDIA1500  MOVE      PCDSTYPE,PTMPTYPE
          MOVE      PCDSCODE,PTMPCODE
          PROC      EROOM000                      * enough room to display?
          BRANCH    EXIT,KDIA3000
.
. we need a new screen
.
          CALL      ST1K0000                      * ask question with Next scrn
          BRANCH    EXIT,KDIA9000:                * Exit
                         KDIA0000:                * First screen selected
                         KDIA2500                 * Next screen selected
          GOTO      KDIA8000                      * valid item selected
.
. Next screen was selected
.
KDIA2500  ADD       ONE,SCREEN                    * increment screen no.
.
. save the current key
.
          DISPLAY   *P1:5,*EF                     * erase screen
          MOVE      FIVE,CVERT                    * init screen row
          MOVE      ONE,ITEMNUM                   * init screen disp counter
.
. display record
.
KDIA3000  MATCH     PCDSCODE,SAVCODE              * same code?
          GOTO      KDIA3200 IF EQUAL
          DISPLAY   *P1:CVERT,*V2LON,ITEMNUM,". "
          MOVE      SAVKEY13,DIAGARRY[ITEMNUM]
          MOVE      PCDSCODE,SAVCODE              * save code
          ADD       ONE,ITEMNUM                   * increment counter
.
KDIA3200  DISPLAY   *P5:CVERT,*HOFF,PCDSDESC
.
          ADD       ONE,CVERT                     * update row pos
          GOTO      KDIA1000
.
. we have no more records to display
.
KDIA5000  CALL     ST2K0000
          BRANCH   EXIT,KDIA9000:                 * Exit selected
                        KDIA0000                  * First screen selected
.
. a valid item was entered (so get record selected)
.
KDIA8000  MOVE      DIAGARRY[ITEMFRM],KEY13
          CALL      RDPCDSC1                      * read selected record
          MOVE      PCDSCODE,DIAGCODE
          MOVE      PCDSDESC,DIAGDESC
          MOVE      ZERO,EXIT
          GOTO      KDIA9999
.
KDIA9000  MOVE      ONE,EXIT                      * Exit was selected
.
KDIA9999  RETURN
+
.**************************************************************************
.*                                STIK0000            Called by: KDIA0000 *
.*                 ask line 24 question with (N)ext                       *
.**************************************************************************
ST1K0000  
. check which screen we are on. If 1st dont' display First
.
          BRANCH    SCREEN,ST1K0500
.
. screen is not 1st screen so display First
.
          DISPLAY   *P1:24,*EL,"Select item, (",*V2LON:
                    "F",*HOFF,")irst, (",*V2LON,"N",*HOFF,")ext ?"
.
          MOVE      "32",CCOL                     * keyin position
          GOTO      ST1K1000                      * get keyin
.
. screen is 1st screen so don't display First
. 
ST1K0500  DISPLAY   *P1:24,*EL,"Select item, (",*V2LON:
                    "N",*HOFF,")ext ?"
.
          MOVE      "23",CCOL                     * keyin position
.
. now get keyin
.
ST1K1000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,ITEM:
                    *PCCOL:24,*DV,ITEM
.
          ENDSET    ITEM
          APPEND    SP2,ITEM
          RESET     ITEM
.
          MATCH     SP2,ITEM
          GOTO      ST1K2000 IF EQUAL
.
          REP       UPPLOW,ITEM                  * Change to lower case
.
          TYPE      ITEM                         * was a numeric entered
          GOTO      ST1K1200 IF EQUAL
.
. a character was entered
.
          REP       "F1N2",ITEM
.
          TYPE      ITEM                         * valid letter entered?
          GOTO      ST1K1500 IF NOT EQUAL         * No.
.
          MOVE      ITEM,ITEMFRM
          BRANCH    ITEMFRM,ST1K7000,ST1K4000
.
          BEEP 
          GOTO      ST1K1000
.
. a numeric was entered so validate
.
ST1K1200  MOVE      ITEM,ITEMFRM                * move to form field
          IF        (ITEMFRM > 0) & (ITEMFRM < ITEMNUM)
            GOTO      ST1K6500
          ENDIF
.
. error in input
.
ST1K1500  BEEP  
          GOTO      ST1K1000
.
ST1K2000  MOVE      ONE,EXIT                      * Exit was selected
          GOTO      ST1K9999
.
ST1K4000  MOVE      THREE,EXIT                     * Next was selected
          GOTO      ST1K9999
.
ST1K6500  MOVE      ZERO,EXIT                      * a number was entered
          GOTO      ST1K9999
.
. First was selected so check if it was asked
.
ST1K7000  BRANCH    SCREEN,ST1K7200
          MOVE      TWO,EXIT                    * Previous was selected
          GOTO      ST1K9999
.
. First was selected but wasn't asked so error
.
ST1K7200  BEEP
          GOTO      ST1K1000
.
ST1K9999  RETURN
+
.**************************************************************************
.*                                ST2K0000            Called by: KDIA0000 *
.*                 ask line 24 question without (N)ext                    *
.**************************************************************************
ST2K0000  
. check which screen we are on. If 1st dont' display First
.
          BRANCH    SCREEN,ST2K0500
.
. screen is not 1st screen so display First
.
          DISPLAY   *P1:24,*EL,"Select item, (",*V2LON:
                    "F",*HOFF,")irst ?"
.
          MOVE      "24",CCOL                   * keyin position
          GOTO      ST2K1000                      * get keyin
.
. screen is 1st screen so don't display First
. 
ST2K0500  DISPLAY   *P1:24,*EL,"Select item ?"
.
          MOVE      "15",CCOL                   * keyin position
.
. now get keyin
.
ST2K1000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,ITEM:
                    *PCCOL:24,*DV,ITEM
          GOTO      ST2K2000 IF EOS
.
          ENDSET    ITEM
          APPEND    SP2,ITEM
          RESET     ITEM
.
          MATCH     SP2,ITEM
          GOTO      ST2K2000 IF EQUAL
.
          REP       UPPLOW,ITEM              
.
          TYPE      ITEM                         * was a numeric entered
          GOTO      ST2K1200 IF EQUAL
.
. a character was entered
.
          REP       "F1",ITEM
.
          TYPE      ITEM                         * valid letter entered?
          GOTO      ST2K1500 IF NOT EQUAL         * No.
.
          MOVE      ITEM,ITEMFRM
          BRANCH    ITEMFRM,ST2K7000
. 
          BEEP
          GOTO      ST2K1000
.
. a numeric was entered so validate
.
ST2K1200  MOVE      ITEM,ITEMFRM                * move to form field
          IF        (ITEMFRM > 0) & (ITEMFRM < ITEMNUM)
            GOTO      ST1K6500
          ENDIF
.
. error in input
.
ST2K1500  BEEP  
          GOTO      ST2K1000
.
ST2K2000  MOVE      ONE,EXIT                      * Exit was selected
          GOTO      ST2K9999
.
ST2K6500  MOVE      ZERO,EXIT                      * a number was entered
          GOTO      ST2K9999
.
. First was selected so check if it was asked
.
ST2K7000  BRANCH    SCREEN,ST2K7200
          MOVE      TWO,EXIT                    * FIrst was selected
          GOTO      ST2K9999
.
. First was selected but wasn't asked so error
.
ST2K7200  BEEP
          GOTO      ST2K1000
.
ST2K9999  RETURN
+
.*************************************************************************
.*  LOAD0000  :  Load existing data into temp file                       *
.*************************************************************************
LOAD0000  IF        QSTTYPE=0
            GOTO      LOAD9999                    * displaying 1st codes!
          ENDIF
           
          MOVE      MOPTION,PCEDTYPE
.
          PACK      KEY20,PCEDTYPE,RELFCODE,SP20
          CALL      RSPCEDI1
LOAD1000  CALL      RKPCEDI1
          BRANCH    OVRCD,LOAD9999
.
          COMPARE   MOPTION,PCEDTYPE              * same type?
          GOTO      LOAD9999 IF NOT EQUAL
.
          MATCH     RELFCODE,PCEDCODE             * same 1st code?
          GOTO      LOAD9999 IF NOT EQUAL
.
          MOVE      PCEDTYPE,XTYPE
          MOVE      PCEDCODE,XCOD1
          MOVE      PCEDSUB,XCOD2
.
          LOAD      XTYPE,MOPTION,STEN,SSEVEN,SNINE,TEN1
.
          PACK      KEY20,XTYPE,XCOD1,XCOD2
          CALL      RATMPA1                       * should never be on file
          IF        OVRCD=1
            CALL      WRTMPA1
          ENDIF
          GOTO      LOAD1000
.
LOAD9999  RETURN
+
.*************************************************************************
.*  RFAC0000  :  Keyin a Related Factor                                  *
.*************************************************************************
RFAC0000  CALL      CRET0000                      * erase/create temp file
          CALL      LOAD0000                      * load file data on temp file
.
RFAC0500  MOVE      SAVCVERT,CVERT                * init screen row
          MOVE      ONE,SCREEN                    * init screen no.
          MOVE      ONE,ITEMNUM                   * init stock no.
          MOVE      SP9,SAVCODE
          PACK      RECDISP1,RECTYPE,DIAGCODE,SP20 * save 1st rec
.
          MOVE      DIAGCODE,CLSSCODE             * class. code
          PACK      KEY20,RECTYPE,CLSSCODE,SP20   * position at start
          CALL      RSPCDBS1
RFAC1000  CALL      RKPCDBS1                      * read next record
          BRANCH    OVRCD,RFAC5000                * no more records
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE       * get record key
.
          COMPARE   RECTYPE,PCDBTYPE              * same record type?
          GOTO      RFAC5000 IF NOT EQUAL
.
          MATCH     CLSSCODE,PCDBCLSS              * same classification?
          GOTO      RFAC5000 IF NOT EQUAL
.
. check if enough room for display
.
RFAC1500  MOVE      PCDBTYPE,PTMPTYPE
          MOVE      PCDBCODE,PTMPCODE
          PROC      EROOM000                      * enough room to display?
          BRANCH    EXIT,RFAC3000
.
. we need a new screen
.
RFAC1700  MOVE      TWO,LASTSC                    * not last screen flag
          BRANCH    QSTTYPE,RFAC2000              * Ask Post, Cancel?
.
          CALL      ST1K0000                      * ask question with Next scrn
          BRANCH    EXIT,RFAC9000:                * nothing input
                         RFAC0500:                * First screen selected
                         RFAC2500                 * Next screen selected
          GOTO      RFAC8000                      * valid item selected
.
RFAC2000  CALL      PS1C0000                      * ask question with Next scrn
          BRANCH    EXIT,RFAC9000:                * Exit
                         RFAC0500:                * First screen selected
                         RFAC2500:                * Next screen selected
                         RFAC7000                 * Post
          GOTO      RFAC8000                      * valid item selected
.
. Next screen was selected
.
RFAC2500  ADD       ONE,SCREEN                    * increment screen no.
          PACK      RECDISP1,PCDBTYPE,PCDBCLSS,PCDBCODE * save 1st rec on screen
.
          DISPLAY   *P1:SAVCVERT,*EF              * erase screen
          MOVE      SAVCVERT,CVERT                * init screen row
          MOVE      ONE,ITEMNUM                   * init screen disp counter
.
. display record
.
RFAC3000  CALL      HLIT0000                      * Hilite Yes or No?
.
          MOVE      ZERO,DISPITEM
          PACK      KEY13,PCDBTYPE,PCDBCODE,SP20
          CALL      RSPCDSC1
RFAC3100  CALL      RKPCDSC1
          BRANCH    OVRCD,RFAC1000
.
          COMPARE   PCDBTYPE,PCDSTYPE             * same record type
          GOTO      RFAC1000 IF NOT EQUAL
.
          MATCH     PCDBCODE,PCDSCODE
          GOTO      RFAC1000 IF NOT EQUAL
.
          PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE       * get record key
          BRANCH    DISPITEM,RFAC3200             * display the item number?
          DISPLAY   *P1:CVERT,*V2LON,ITEMNUM,*HOFF,". "
          MOVE      ONE,DISPITEM
          MOVE      KEY20,RFCTARRY[ITEMNUM]
          ADD       ONE,ITEMNUM                   * increment counter
RFAC3200  IF        HILITE=1
            DISPLAY   *P5:CVERT,*V2LON,PCDSDESC   * display desc in hilite
          ELSE
            DISPLAY   *P5:CVERT,*HOFF,PCDSDESC    * display desc in lowlite
          ENDIF
          ADD       ONE,CVERT                     * update row pos
          GOTO      RFAC3100
.
. we have no more records to display
.
RFAC5000  MOVE      ONE,LASTSC                    * last screen flag
          BRANCH    QSTTYPE,RFAC5200              * Ask Post, Cancel?
          CALL      ST2K0000
          BRANCH    EXIT,RFAC9000:                * Exit selected
                         RFAC0500                 * First screen selected
          GOTO      RFAC8000                      * an item was selected
.
RFAC5200  CALL      PS2C0000                      * Ask with Post,Cancel
          BRANCH    EXIT,RFAC0500:                * First screen selected
                         RFAC7000:                * Post
                         RFAC9000                 * Cancel
          GOTO      RFAC8000                      * an item was selected
.
. Post was selected
.
RFAC7000  CALL      POST0000                      * Post items selected
          IF        EXIT=1
            BRANCH    LASTSC,RFAC5000,RFAC1700    * ask approp line 24 options
          ELSE
            GOTO      RFAC9000                    * get new 1st code
          ENDIF
.
. a valid item was entered (so get record selected)
.
RFAC8000  MOVE      RFCTARRY[ITEMFRM],KEY20
          CALL      RDPCDBS1                      * read selected record
.
. If QSTTYPE = 0 then the 1st code has been selected so exit, otherwise
. hilite/de-hilite the selected item
.
          IF        QSTTYPE=0
            PACK      KEY13,PCDBTYPE,PCDBCODE,SP1,ONE
            CALL      RDPCDSC1
            MOVE      PCDSDESC,RELFDESC             * Related Factor description
            MOVE      PCDSCODE,RELFCODE             * Related Factor code
            MOVE      ZERO,EXIT
            GOTO      RFAC9999
          ENDIF
.
          CALL      UPDT0000                      * update temp file
.
. need to reposition on first record on screen or before
.
          PACK      KEY20,RECDISP1,SP20           * redisp from 1st rec again
          CALL      RDPCDBS1
          IF        OVRCD=0
            CALL      RPPCDBS1
          ELSE
            CALL    RSPCDBS1
          ENDIF
          MOVE      SAVCVERT,CVERT                * init screen row
          MOVE      ONE,ITEMNUM                   * init stock no.
          MOVE      SP9,SAVCODE
          MOVE      DIAGCODE,CLSSCODE             * class. code
          GOTO      RFAC1000
.
RFAC9000  MOVE      ONE,EXIT                      * Exit this screen
.
RFAC9999  RETURN
+
.*************************************************************************
.*  SFRQ0000  :  Display / Keyin a frequency                             *
.*************************************************************************
SFRQ0000  CALL      CRET0000                      * erase/create temp file
          CALL      LOAD0000                      * load file data on temp file
.
SFRQ0500  MOVE      "8",CVERT
          MOVE      ONE,SCREEN                    * init screen no.
          MOVE      ONE,ITEMNUM                   * init stock no.
          MOVE      SP9,SAVCODE
          MOVE      SP9,RECDISP1                  * save 1st rec
.
          PACK      KEY9,SP9                      * position at start
          CALL      RSPCFRA1
SFRQ1000  CALL      RKPCFRA1                      * read next record
          BRANCH    OVRCD,SFRQ5000                * no more records
          MOVE      PCFACODE,KEY9                 * get key
.
. check if enough room for display
.
SFRQ1500  COMPARE   TWENTY3,CVERT
          GOTO      SFRQ3000 IF LESS
.
. we need a new screen
.
SFRQ1700  MOVE      TWO,LASTSC                    * not last screen flag
.
SFRQ2000  CALL      PS1C0000                      * ask question with Next scrn
          BRANCH    EXIT,SFRQ9000:                * Exit
                         SFRQ0500:                * First screen selected
                         SFRQ2500:                * Next screen selected
                         SFRQ7000                 * Post
          GOTO      SFRQ8000                      * valid item selected
.
. Next screen was selected
.
SFRQ2500  ADD       ONE,SCREEN                    * increment screen no.
          MOVE      PCFACODE,RECDISP1             * save 1st rec on screen
.
          DISPLAY   *P1:8,*EF                     * erase screen
          MOVE      "8",CVERT                     * init screen row
          MOVE      ONE,ITEMNUM                   * init screen disp counter
.
. display record
.
SFRQ3000  MOVE      PCFACODE,PCDBCODE             * needed for hilite routine
          MOVE      TEN1,PCDBTYPE                 * needed for hilite routine
          CALL      HLIT0000                      * Hilite Yes or No?
.
          MOVE      PCFACODE,KEY9                          * get record key
          DISPLAY   *P1:CVERT,*V2LON,ITEMNUM,*HOFF,". "
          MOVE      KEY9,FREQARRY[ITEMNUM]
          ADD       ONE,ITEMNUM                   * increment counter
SFRQ3200  IF        HILITE=1
            DISPLAY   *P5:CVERT,*V2LON,PCFADESC   * display desc in hilite
          ELSE
            DISPLAY   *P5:CVERT,*HOFF,PCFADESC    * display desc in lowlite
          ENDIF
          ADD       ONE,CVERT                     * update row pos
          GOTO      SFRQ1000
.
. we have no more records to display
.
SFRQ5000  MOVE      ONE,LASTSC                    * last screen flag
.
SFRQ5200  CALL      PS2C0000                      * Ask with Post,Cancel
          BRANCH    EXIT,SFRQ0500:                * First screen selected
                         SFRQ7000:                * Post
                         SFRQ9000                 * Cancel
          GOTO      SFRQ8000                      * an item was selected
.
. Post was selected
.
SFRQ7000  CALL      POST0000                      * Post items selected
          IF        EXIT=1
            BRANCH    LASTSC,SFRQ5000,SFRQ1700    * ask approp line 24 options
          ELSE
            GOTO      SFRQ9000                    * get new 1st code
          ENDIF
.
. a valid item was entered (so get record selected)
.
SFRQ8000  MOVE      FREQARRY[ITEMFRM],KEY9
          CALL      RDPCFRA1                      * read selected record
.
          PACK      KEY20,TEN1,RELFCODE,PCFACODE
          CALL      UPDT0000                      * update temp file
.
. need to reposition on first record on screen or before
.
          MOVE      RECDISP1,KEY9                 * redisp from 1st rec again
          CALL      RDPCFRA1
          IF        OVRCD=0
            CALL      RPPCFRA1
          ELSE
            CALL      RSPCFRA1
          ENDIF
          MOVE      "8",CVERT                     * init screen row
          MOVE      ONE,ITEMNUM                   * init stock no.
          MOVE      SP9,SAVCODE
          GOTO      SFRQ1000
.
SFRQ9000  MOVE      ONE,EXIT                      * Exit this screen
.
SFRQ9999  RETURN
+
.**************************************************************************
.*  HLIT0000  :  Work out whether to Hilite or De-hilite description      *
.**************************************************************************
HLIT0000  IF        QSTTYPE=0
            MOVE      ZERO,HILITE
            GOTO      HLIT9999
          ENDIF
.
          PACK      KEY20,PCDBTYPE,RELFCODE,PCDBCODE       * get record key
          CALL      RDTMPA1
          IF        OVRCD=0
            MOVE      ONE,HILITE
          ELSE
            MOVE      ZERO,HILITE                 * dont hilite
          ENDIF
.
HLIT9999  RETURN
+
.**************************************************************************
.*  POST0000  :  Post selected (hi-lited) items                           *
.**************************************************************************
POST0000  DISPLAY   *P1:24,*EL,*P45:24,"Deleting... [         ]";
. 
. firstly delete ALL existing records for this OPTION & code
.
          MOVE      MOPTION,OPTION
          PACK      KEY20,OPTION,RELFCODE,SP20
          CALL      RSPCEDI1
          CALL      RKPCEDI1
          BRANCH    OVRCD,POST0800
.
          COMPARE   OPTION,PCEDTYPE
          GOTO      POST0800 IF NOT EQUAL
.
          MATCH     RELFCODE,PCEDCODE
          GOTO      POST0800 IF NOT EQUAL
.
          DISPLAY   *P58:24,PCEDSUB;
.
          PACK      KEY20,PCEDTYPE,PCEDCODE,PCEDSUB
          CALL      DEPCEDI1
          GOTO      POST0000
.
. now loop thru temp file and write a EDI record for each record found
.
POST0800  PACK      KEY20,SP20
          CALL      RSTMPA1
POST1000  CALL      RKTMPA1
          BRANCH    OVRCD,POST9000
          DISPLAY   *P1:24,*EL,*P45:24,"Writing... [         ]";
          GOTO      POST2000
.
POST1500  CALL      RKTMPA1
          BRANCH    OVRCD,POST8000
.
POST2000  MOVE      XCOD1,PCEDCODE
          MOVE      XCOD2,PCEDSUB
.
          MOVE      MOPTION,PCEDTYPE
.
          PACK      KEY20,PCEDTYPE,PCEDCODE,PCEDSUB
          CALL      RAPCEDI1
          IF        OVRCD=1
            DISPLAY   *P57:24,PCEDSUB;
            CALL      WRPCEDI1
          ENDIF
          GOTO      POST1500
.
POST8000  MOVE      ZERO,EXIT
          GOTO      POST9999
.
POST9000  DISPLAY   *P1:24,*EL,*B,"You haven't selected any items.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
POST9999  RETURN
+
.**************************************************************************
.*  UPDT0000  :  Post selected item to the temp file                      *
.**************************************************************************
UPDT0000  UNPACK    KEY20,DXTYPE,XCOD1,XCOD2
          PACK      KEY20,DXTYPE,RELFCODE,XCOD2
.     
          CALL      RATMPA1                 * check if item already on temp file
          BRANCH    OVRCD,UPDT5000                * not on temp file
.
. item has already been selected so delete 
.
          CALL      DETMPA1                       * delete this record
          GOTO      UPDT9999
.
. update temp file with item sel 
.
UPDT5000  UNPACK    KEY20,DXTYPE,XCOD1,XCOD2
          MOVE      DXTYPE,XTYPE
          PACK      KEY20,XTYPE,XCOD1,XCOD2
          CALL      WRTMPA1
.
UPDT9999  RETURN
+
.**************************************************************************
.*                                PS1C0000            Called by: KDIA0000 *
.*                 ask line 24 question with (N)ext                       *
.**************************************************************************
PS1C0000  
. check which screen we are on. If 1st dont' display First
.
          BRANCH    SCREEN,PS1C0500
.
. screen is not 1st screen so display First
.
          DISPLAY   *P1:24,*EL,"Select item, (",*V2LON:
                    "F",*HOFF,")irst, (",*V2LON,"N",*HOFF,")ext, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON,"C",*HOFF,")ancel ? "
.
          MOVE      "50",CCOL                     * keyin position
          GOTO      PS1C1000                      * get keyin
.
. screen is 1st screen so don't display First
. 
PS1C0500  DISPLAY   *P1:24,*EL,"Select item, (",*V2LON:
                    "N",*HOFF,")ext, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON,"C",*HOFF,")ancel ? "
.
          MOVE      "41",CCOL                     * keyin position
.
. now get keyin
.
PS1C1000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,ITEM:
                    *PCCOL:24,*DV,ITEM
.
          ENDSET    ITEM
          APPEND    SP2,ITEM
          RESET     ITEM
.
          REP       UPPLOW,ITEM                  * Change to lower case
.
          TYPE      ITEM                         * was a numeric entered
          GOTO      PS1C1200 IF EQUAL
.
. a character was entered
.
          REP       "F1N2P3C4",ITEM
.
          TYPE      ITEM                         * valid letter entered?
          GOTO      PS1C1500 IF NOT EQUAL         * No.
.
          MOVE      ITEM,ITEMFRM
          BRANCH    ITEMFRM,PS1C7000,PS1C4000,PS1C8000,PS1C2000
.
          BEEP 
          GOTO      PS1C1000
.
. a numeric was entered so validate
.
PS1C1200  MOVE      ITEM,ITEMFRM                * move to form field
          IF        (ITEMFRM > 0) & (ITEMFRM < ITEMNUM)
            GOTO      PS1C6500
          ENDIF
.
. error in input
.
PS1C1500  BEEP  
          GOTO      PS1C1000
.
PS1C2000  MOVE      ONE,EXIT                      * Exit was selected
          GOTO      PS1C9999
.
PS1C4000  MOVE      THREE,EXIT                     * Next was selected
          GOTO      PS1C9999
.
PS1C6500  MOVE      ZERO,EXIT                      * a number was entered
          GOTO      PS1C9999
.
. First was selected so check if it was asked
.
PS1C7000  BRANCH    SCREEN,PS1C7200
          MOVE      TWO,EXIT                    * Previous was selected
          GOTO      PS1C9999
.
. First was selected but wasn't asked so error
.
PS1C7200  BEEP
          GOTO      PS1C1000
.
PS1C8000  MOVE      FOUR,EXIT
.
PS1C9999  RETURN
+
.**************************************************************************
.*                                PS2C0000            Called by: KDIA0000 *
.*                 ask line 24 question without (N)ext                    *
.**************************************************************************
PS2C0000  
. check which screen we are on. If 1st dont' display First
.
          BRANCH    SCREEN,PS2C0500
.
. screen is not 1st screen so display First
.
          DISPLAY   *P1:24,*EL,"Select item, (",*V2LON:
                    "F",*HOFF,")irst, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON,"C",*HOFF,")ancel ? "
.
          MOVE      "42",CCOL                   * keyin position
          GOTO      PS2C1000                      * get keyin
.
. screen is 1st screen so don't display First
. 
PS2C0500  DISPLAY   *P1:24,*EL,"Select item, (",*V2LON:
                    "P",*HOFF,")ost, (",*V2LON,"C",*HOFF,")ancel ? "
.
          MOVE      "33",CCOL                   * keyin position
.
. now get keyin
.
PS2C1000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,ITEM:
                    *PCCOL:24,*DV,ITEM
.
          ENDSET    ITEM
          APPEND    SP2,ITEM
          RESET     ITEM
.
          REP       UPPLOW,ITEM              
.
          TYPE      ITEM                         * was a numeric entered
          GOTO      PS2C1200 IF EQUAL
.
. a character was entered
.
          REP       "F1P2C3",ITEM
.
          TYPE      ITEM                         * valid letter entered?
          GOTO      PS2C1500 IF NOT EQUAL         * No.
.
          MOVE      ITEM,ITEMFRM
          BRANCH    ITEMFRM,PS2C7000,PS2C3000,PS2C2000
. 
          BEEP
          GOTO      PS2C1000
.
. a numeric was entered so validate
.
PS2C1200  MOVE      ITEM,ITEMFRM                * move to form field
          IF        (ITEMFRM > 0) & (ITEMFRM < ITEMNUM)
            GOTO      PS2C6500
          ENDIF
.
. error in input
.
PS2C1500  BEEP  
          GOTO      PS2C1000
.
PS2C2000  MOVE      THREE,EXIT                      * Exit was selected
          GOTO      PS2C9999
.
PS2C3000  MOVE      TWO,EXIT                      * Post
          GOTO      PS2C9999
.
PS2C6500  MOVE      ZERO,EXIT                      * a number was entered
          GOTO      PS2C9999
.
. First was selected so check if it was asked
.
PS2C7000  BRANCH    SCREEN,PS2C7200
          MOVE      ONE,EXIT                    * FIrst was selected
          GOTO      PS2C9999
.
. First was selected but wasn't asked so error
.
PS2C7200  BEEP
          GOTO      PS2C1000
.
PS2C9999  RETURN
+
.*************************************************************************
.*                             KILL0000             Called by:           *
.*                   erase temporary file                                *
.*************************************************************************
KILL0000  CLOSE     TMPPCP05
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
KILL9999  RETURN
+
.*************************************************************************
.*                             CRET0000            Called by:            *
.*                      create temporary file                            *
.*************************************************************************
CRET0000  CALL      KILL0000 
          CLEAR     CMDLINE 
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME,CMDLINE
          APPEND    " 21 U1-2,3-11,12-20",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      TMPPCP05,FNAME
.
CRET9999  RETURN
+
.*************************************************************************
.*  Temp IO routines                                                     *
.*************************************************************************
RATMPA1   MOVE      ZERO,OVRCD
          RESET     KEY20
          READ      TMPPCP05,KEY20;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPA1   RESET     KEY20
          READ      TMPPCP05,KEY20;;
          RETURN
.
RDTMPA1   MOVE      ZERO,OVRCD
          RESET     KEY20
          READ      TMPPCP05,KEY20;DXTYPE,XCOD1,XCOD2
          GOTO      OVERCOND IF OVER
          MOVE      DXTYPE,XTYPE
          RETURN
.
RKTMPA1   MOVE      ZERO,OVRCD
          READKS    TMPPCP05;DXTYPE,XCOD1,XCOD2
          GOTO      OVERCOND IF OVER
          MOVE      DXTYPE,XTYPE
          RETURN
.
WRTMPA1   RESET     KEY20
          MOVE      XTYPE,DXTYPE
          WRITE     TMPPCP05,KEY20;DXTYPE,XCOD1,XCOD2
          RETURN
.
DETMPA1   RESET     KEY20
          DELETE    TMPPCP05,KEY20
          RETURN
+
.***************************************************************************
.*  EROOM000  :  Enough room on screen?                                    *
.***************************************************************************
          DEFPROC   EROOM000
.
          INC       PCPDSCFD/INC
CVERT1    FORM      2
LINES     FORM      2
.
. count no. of lines of description for current code
.
          OPEN      PCPDSCA1,"pcpdscaf"
          MOVE      ZERO,LINES
          MOVE      CVERT,CVERT1
          PACK      KEY13,PTMPTYPE,PTMPCODE,SP20
          CALL      RSPCDSC1
EROOM100  CALL      RKPCDSC1
          BRANCH    OVRCD,EROOM500
.
          COMPARE   PTMPTYPE,PCDSTYPE
          GOTO      EROOM500 IF NOT EQUAL
.
          MATCH     PTMPCODE,PCDSCODE
          GOTO      EROOM500 IF NOT EQUAL
.
          ADD       ONE,LINES
          GOTO      EROOM100
.
. check if enough lines to display
. 
EROOM500  ADD       LINES,CVERT1
          IF        CVERT1<24
            MOVE      ONE,EXIT
          ELSE
            DISPLAY   *P1:CVERT,*EF;
            MOVE      ZERO,EXIT
          ENDIF
          GOTO      EROOM999
.
          INC       PCPDSCIO/INC
          INC       IBAOVRIO/INC
EROOM999  ENDPROC
.

+
          INC       STD001IO
          INC       PCPDBSIO/INC
          INC       PCPDSCIO/INC
          INC       PCPEDIIO/INC
          INC       PCPFRAIO/INC
          INC       TFILENAM
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC

