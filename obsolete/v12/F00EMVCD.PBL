.*****************************************************************************
.*    Program      : F00EMVCD.PBL                                            *
.*    Description  : Conversion emrvcdaf to new File layout                  *
.*                                                                           *
.*    Author       : Steve Armstrong                                         *
.*    Date         : 14/04/2010                                              *
.*    Modifications:                                                         *
.*        V10.00.00 Steve Armstrong  CAR 219933                              *
.*                  Created program                                          *
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
OLDFILE   IFILE    SQL, FIXED=322, KEY="U1-8,9-11,12-14"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.EMVCVIST DIM       8      8        1     Visit Number
.EMVCTYPE DIM       3      3        9     Coding Type (cat wl)
.                                         004 - Procedure
.                                         005 - Diagnosis
.EMVCUNIQ DIM       3      3        12    Unique Record Number
.EMVCCSYS FORM      2      2        15    Coding System
.                                         1 - paticddf
.                                         2 - paticdof
.                                         3 - patitemn
.                                         4 - emrproaf
.                                         5 - emricdaf
.                                         6 - priitemf
.EMVCMNCD DIM       10     10       17    Main Code
.EMVCSEQU DIM       3      3        27    Sequencing
.EMVCDATE DIM       8      8        30    Date
.EMVCTIME DIM       8      8        38    Time
.EMVCUDC1 DIM       3      3        46    User Defined Code 1
.EMVCUDC2 DIM       3      3        49    User Defined Code 2
.EMVCUDC3 DIM       3      3        52    User Defined Code 3
.EMVCUDC4 DIM       3      3        55    User Defined Code 4
.EMVCUDR1 DIM       40     40       58    User Defined Reference 1
.EMVCUDR2 DIM       40     40       98    User Defined Reference 2
.EMVCUYN1 DIM       1      1        138   User Defined Y/N 1
.EMVCUYN2 DIM       1      1        139   User Defined Y/N 2
.EMVCUYN3 DIM       1      1        140   User Defined Y/N 3
.EMVCUYN4 DIM       1      1        141   User Defined Y/N 4
.EMVCUDA1 FORM      12.2   8        142   User Defined Amount 1
.EMVCUDA2 FORM      12.2   8        150   User Defined Amount 2
.EMVCUDA3 FORM      12.2   8        158   User Defined Amount 3
.EMVCUDA4 FORM      12.2   8        166   User Defined Amount 4
.EMVCUDD1 DIM       8      8        174   User Defined Date 1
.EMVCUDD2 DIM       8      8        182   User Defined Date 2
.EMVCUDD3 DIM       8      8        190   User Defined Date 3
.EMVCUDD4 DIM       8      8        198   User Defined Date 4
.EMVCUDT1 DIM       8      8        206   User Defined Time 1
.EMVCUDT2 DIM       8      8        214   User Defined Time 2
.EMVCUDT3 DIM       8      8        222   User Defined Time 3
.EMVCUDT4 DIM       8      8        230   User Defined Time 4
.EMVCEFLG DIM       1      1        238   Send in Extract Flag
.EMVCLUDT DIM       8      8        239   Last Update Date
.EMVCLUTM DIM       8      8        247   Last Update Time
.EMVCWUSR DIM       10     10       255   Last Update Web User
.EMVCDELE DIM       1      1        265   Delete Flag 1=Deleted
.EMVCCDAT DIM       8      8        266   Date Record Created (ccyymmdd)
.EMVCCTIM DIM       8      8        274   Time Record Created (hh:mm:ss)
.EMVCCUID DIM       10     10       282   WEB User ID Created (websecaf)
.EMVCSUBN DIM       3      3        292   Sub Item Number
.EMVCEDAD DIM       10     10       295   Attending Doctor
.EMVCSPAR DIM       17     17       305   Spare
.
.End of Record                      322
.
.
EMRVCDA1   IFILE    SQL, FIXED=430, KEY="U1-8,9-11,12-14"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
EMVCVIST  DIM       8      8        1     Visit Number
EMVCTYPE  DIM       3      3        9     Coding Type (Cat wl)
.                                         004 - Procedure
.                                         005 - Diagnosis
EMVCUNIQ  DIM       3      3        12    Unique Record Number
EMVCCSYS  FORM      2      2        15    Coding System
.                                         1 - paticddf
.                                         2 - paticdof
.                                         3 - patitemn
.                                         4 - emrproaf
.                                         5 - emricdaf
.                                         6 - priitemf
EMVCMNCD  DIM       10     10       17    Main Code
EMVCSEQU  DIM       3      3        27    Sequencing
EMVCDATE  DIM       8      8        30    Date
EMVCTIME  DIM       8      8        38    Time
EMVCUDC1  DIM       3      3        46    User Defined Code 1
EMVCUDC2  DIM       3      3        49    User Defined Code 2
EMVCUDC3  DIM       3      3        52    User Defined Code 3
EMVCUDC4  DIM       3      3        55    User Defined Code 4
EMVCUDR1  DIM       40     40       58    User Defined Reference 1
EMVCUDR2  DIM       40     40       98    User Defined Reference 2
EMVCUYN1  DIM       1      1        138   User Defined Y/N 1
EMVCUYN2  DIM       1      1        139   User Defined Y/N 2
EMVCUYN3  DIM       1      1        140   User Defined Y/N 3
EMVCUYN4  DIM       1      1        141   User Defined Y/N 4
EMVCUDA1  FORM      12.2   8        142   User Defined Amount 1
EMVCUDA2  FORM      12.2   8        150   User Defined Amount 2
EMVCUDA3  FORM      12.2   8        158   User Defined Amount 3
EMVCUDA4  FORM      12.2   8        166   User Defined Amount 4
EMVCUDD1  DIM       8      8        174   User Defined Date 1
EMVCUDD2  DIM       8      8        182   User Defined Date 2
EMVCUDD3  DIM       8      8        190   User Defined Date 3
EMVCUDD4  DIM       8      8        198   User Defined Date 4
EMVCUDT1  DIM       8      8        206   User Defined Time 1
EMVCUDT2  DIM       8      8        214   User Defined Time 2
EMVCUDT3  DIM       8      8        222   User Defined Time 3
EMVCUDT4  DIM       8      8        230   User Defined Time 4
EMVCEFLG  DIM       1      1        238   Send in Extract Flag
EMVCLUDT  DIM       8      8        239   Last Update Date
EMVCLUTM  DIM       8      8        247   Last Update Time
EMVCWUSR  DIM       10     10       255   Last Update Web User
EMVCDELE  DIM       1      1        265   Delete Flag 1=Deleted
EMVCCDAT  DIM       8      8        266   Date Record Created (ccyymmdd)
EMVCCTIM  DIM       8      8        274   Time Record Created (hh:mm:ss)
EMVCCUID  DIM       10     10       282   WEB User ID Created (websecaf)
EMVCSUBN  DIM       3      3        292   Sub Item Number
EMVCEDAD  DIM       10     10       295   Attending Doctor
EMVCFTXT  DIM       100    100      305   Free Format Text
EMVCSPAR  DIM       25     25       405   Spare
.
.End of Record                      430
.
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       100
.
DEFPATH   DIM       60
DIM60     DIM       60
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
. 
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION EMRVCDFD"
PRGID     INIT      "F00EMVCD"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                         MAIN0000                                          *
.*                      Mainline code                                        *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.*****************************************************************************
.*                          INIT0000               Called by: MAIN0000       *
.*  Display heading and check that the files needed exist & open them        *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                          KDIR0000               Called by: MAIN0000       *
.*                       Keyin directories                                   *
.*****************************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.*****************************************************************************
.*                          PREP0000               Called by: MAIN0000       *
.*                       Preparing files                                     *
.*****************************************************************************
.
PREP0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,"emrvcdaf"
          TRAPCLR   IO
          BRANCH    OVRCD,PREP5000       * Original file does not exist
          CLOSE     OLDFILE
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat emrvcdaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "semvcdaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat emrvcdaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "semvcdaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "emrvcdaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "semvcdaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "emrvcdaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 430 UC1-8,9-11,12-14",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC1-8,9-11,27-29,12-14",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      EMRVCDA1,NEWFILE
.
.         Set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.*****************************************************************************
.*                               READ0000          Called by: MAIN0000       *
.*             Loop thru old file and write each record                      *
.*****************************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY14,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
          PACK      EMVCFTXT,SP70,SP70
          CALL      WREMVCD1                      * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     EMRVCDA1                      * close new file
          CLOSE     OLDFILE                       * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
+
.*****************************************************************************
.*                               VALD0000          Called by: KDIR0000       *
.*                   Check if it a valid directory                           *
.*****************************************************************************
.
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.*****************************************************************************
.*                               ENDP0000          Called by: MAIN0000       *
.*                    Remove or compress save file                           *
.*****************************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "semvcdaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.*****************************************************************************
.*                               DEFT0000          Called by: KDIR0000       *
.*                      Get the default directory                            *
.*****************************************************************************
.
DEFT0000  EXECUTE   "ldat emrvcdaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding emrvcdaf.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
READSOLD  RESET     KEY14
          READ      OLDFILE,KEY14;;
          RETURN
.  
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE;EMVCVIST,EMVCTYPE,EMVCUNIQ,EMVCCSYS,EMVCMNCD:
                        EMVCSEQU,EMVCDATE,EMVCTIME,EMVCUDC1,EMVCUDC2,EMVCUDC3:
                        EMVCUDC4,EMVCUDR1,EMVCUDR2,EMVCUYN1,EMVCUYN2,EMVCUYN3:
                        EMVCUYN4,EMVCUDA1,EMVCUDA2,EMVCUDA3,EMVCUDA4,EMVCUDD1:
                        EMVCUDD2,EMVCUDD3,EMVCUDD4,EMVCUDT1,EMVCUDT2,EMVCUDT3:
                        EMVCUDT4,EMVCEFLG,EMVCLUDT,EMVCLUTM,EMVCWUSR,EMVCDELE:
                        EMVCCDAT,EMVCCTIM,EMVCCUID,EMVCSUBN,EMVCEDAD,EMVCSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
WREMVCD1  RESET     KEY14                                                     
          WRITE     EMRVCDA1,KEY14;EMVCVIST,EMVCTYPE,EMVCUNIQ,EMVCCSYS,EMVCMNCD:
                        EMVCSEQU,EMVCDATE,EMVCTIME,EMVCUDC1,EMVCUDC2,EMVCUDC3:
                        EMVCUDC4,EMVCUDR1,EMVCUDR2,EMVCUYN1,EMVCUYN2,EMVCUYN3:
                        EMVCUYN4,EMVCUDA1,EMVCUDA2,EMVCUDA3,EMVCUDA4,EMVCUDD1:
                        EMVCUDD2,EMVCUDD3,EMVCUDD4,EMVCUDT1,EMVCUDT2,EMVCUDT3:
                        EMVCUDT4,EMVCEFLG,EMVCLUDT,EMVCLUTM,EMVCWUSR,EMVCDELE:
                        EMVCCDAT,EMVCCTIM,EMVCCUID,EMVCSUBN,EMVCEDAD,EMVCFTXT:
                        EMVCSPAR
          RETURN
.
          INC       STD001IO
