.*    Program      : X02OTHED                                                *
.*    Description  : Conversion outhedaf to new File layout                  *
.*                                                                           *
.*    Author       : Thanh T                                                 *
.*    Date         : 07/02/2022                                              *
.*    Modifications:                                                         *
.*---------------------------------------------------------------------------*
.* V11.02.01 18/03/2022  Thanh T    TSK 0917817                              *
.*           Changed to allow file conversion other than "out" prefix        *
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change progname  eg F57PTDOC
.  Global change logfname  eg f57ptdoc
.  Global change filefdnm  eg PATDOCFD (new layout)
.  Global change tabnamaf  eg patdoctf
.  Global change tablidx1  eg PATDOCT1
.  Global change keyxxin   eg KEY8
.  Global change keyxxout  eg KEY9
.  Global change newwrite  eg WRDOCT1
.
.  Global change X02OTHED  eg F57PTDOC
.  Global change x02othed  eg f57ptdoc
.  Global change OUTHEDFD  eg PATDOCFD (new layout)
.  Global change outhedaf  eg patdoctf
.  Global change OUTHEDA1  eg PATDOCT1
.  Global change KEY8      eg KEY8
.  Global change KEY8      eg KEY9
.  Global change WROTHED1  eg WRDOCT1
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       OUTSITFD/INC
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1  IFILE    SQL, FIXED=425, KEY="U1-6,7-12,13-13,14-18,19-20,21-28"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.OTHESITE  DIM       6      6        1     SITE ID
.OTHECLIN  DIM       6      6        7     CLINIC ID
.OTHEWDAY  DIM       1      1        13    DAY INDICATOR
.OTHESTRT  DIM       5      5        14    SESSION START TIME (HH:MM)
.OTHESHNO  DIM       2      2        19    SCHEDULE NUMBER
.OTHESDAT  DIM       8      8        21    SCHEDULE DATE (CCYYMMDD)
.OTHEDTCC  DIM       8      8        29    DATE CLINIC CLOSED (CCYYMMDD)
.OTHECOM1  DIM       40     40       37    COMMENTS LINE 1
.OTHECOM2  DIM       40     40       77    COMMENTS LINE 2
.OTHEINS1  DIM       40     40       117   INSTRUCTIONS LINE 1
.OTHEINS2  DIM       40     40       157   INSTRUCTIONS LINE 2
.OTHEINS3  DIM       40     40       197   INSTRUCTIONS LINE 3
.OTHEDURN  FORM      3      3        237   SLOT DURATION (MINS)
.OTHEBFIN  DIM       5      5        240   BOOKING FINISH TIME (HH:MM)
.OTHESEND  DIM       5      5        245   END SESSION TIME (HH:MM)
.OTHELTYP  DIM       3      3        250   LOCATION TYPE (CATEGORY CT)
.OTHECLSE  DIM       6      6        253   CLINIC SESSION
.OTHEHOSP  DIM       3      3        259   HOSPITAL CODE
.OTHELOCN  DIM       4      4        262   LOCATION OF CLINIC
.OTHECTYP  DIM       6      6        266   CLINIC TYPE
.OTHECIND  DIM       3      3        272   CLINIC INDICATOR(CI)M=Med N=Non-Med
.OTHEGBOK  DIM       1      1        275   ALLOW GROUP BOOKINGS 0=NO 1=YES
.OTHEADEP  DIM       3      3        276   ALLIED HEALTH DEPARTMENT
.OTHECENC  DIM       1      1        279   COLLECT ENCOUNTER DETAILS
.                                         0=No 1=Yes 2=Yes plus DNA
.OTHEKDOC  DIM       1      1        280   KEYIN HCP ON ATTENDANCE (Y/N)
.OTHEDEFD  DIM       10     10       281   DEFAULT HCP CODE
.OTHECCAR  DIM       1      1        291   COLLECT CARER DETAILS
.                                         0=No 1=Yes
.OTHECTRN  DIM       1      1        292   COLLECT TRANSPORT DETAILS
.                                         0=No 1=Yes
.OTHENDPS  DIM       3      3        293   NUMBER OF DAYS PRIOR TO SEND LETTER
.OTHECPMI  DIM       1      1        296   USING CONFIRM PMI
.                                         0=No 1=Yes
.OTHECPAG  DIM       1      1        297   USING CHECK IN PAGE
.                                         0=No 1=Yes
.OTHECTEL  DIM       20     20       298   CLINIC TELEPHONE NUMBER
.OTHENMDS  DIM       3      3        318   NMDS CODE (CATEGORY NM)
.OTHECART  DIM       3      3        321   CARE TYPE (CATEGORY CC)
.OTHESRVD  DIM       3      3        324   SERVICE DELIVERY MODE(Cat sd)
.                                         0=No, 1=Yes
.OTHECLHR  DIM       1      1        327   CLINICAL HIGH RISK
.                                         0=No, 1=Yes
.OTHEMLTD  DIM       1      1        328   MULTIDISCIPLINARY CLINIC
.                                         0=No, 1=Yes
.OTHEXPUL  DIM       1      1        329   Exclude from Pulling List (N=0,Y=1)
.OTHEMREF  DIM       1      1        330   Mandatory Waiting/Active Referral
.OTHEHPIO  DIM       20     20       331   HPI-O Number
.OTHETCOD  DIM       3      3        351   Tier 2 Code (category NC)
.OTHETCED  DIM       8      8        354   Tier 2 Code Effective Date CCYYMMDD
.OTHEHCLI  DIM       20     20       362   HERO Clinic Identifier
.                                         (SERVICE_PROVIDER_ID)
.OTHEHCAI  DIM       20     20       382   HERO Campus Identifier
.                                         (SERVICE_EVENT_ATTRIBUTE_TYPE_CODE -
.                                         04 -
.                                         Service Location ID)
.OTHEAOPN  DIM       1      1        402   Auto Open Clinic
.                                         Blank or 0 = No, 1 = Yes
.OTHEAOFR  DIM       1      1        403   Auto Open Frequency
.                                         1 = Weekly, 2 = 2 Weekly, 4 = 4 Weekl
.                                         y
.OTHEAOWM  DIM       5      5        404   Auto Open Week of Month
.                                         Blank or 0 = No, 1 = Yes
.                                         Position 1 to 5 = Week 1 to 5
.OTHEAAOW  DIM       3      3        409   Auto Open Number of Weeks in Advance
.OTHEDATE  DIM       8      8        412   Last Session Open Date (CCYYMMDD)
.OTHESPAR  DIM       5      5        420   SPARE
.
.End of Record                      425
.
.                                     ******** copy the new FD here *******
.
OUTHEDA1  IFILE     SQL, FIXED=510, KEY="U1-6,7-12,13-13,14-18,19-20,21-28"
FILHEDA1  INIT      "hedaf"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
OTHESITE  DIM       6      6        1     SITE ID
OTHECLIN  DIM       6      6        7     CLINIC ID
OTHEWDAY  DIM       1      1        13    DAY INDICATOR
OTHESTRT  DIM       5      5        14    SESSION START TIME (HH:MM)
OTHESHNO  DIM       2      2        19    SCHEDULE NUMBER
OTHESDAT  DIM       8      8        21    SCHEDULE DATE (CCYYMMDD)
OTHEDTCC  DIM       8      8        29    DATE CLINIC CLOSED (CCYYMMDD)
OTHECOM1  DIM       40     40       37    COMMENTS LINE 1
OTHECOM2  DIM       40     40       77    COMMENTS LINE 2
OTHEINS1  DIM       40     40       117   INSTRUCTIONS LINE 1
OTHEINS2  DIM       40     40       157   INSTRUCTIONS LINE 2
OTHEINS3  DIM       40     40       197   INSTRUCTIONS LINE 3
OTHEDURN  FORM      3      3        237   SLOT DURATION (MINS)
OTHEBFIN  DIM       5      5        240   BOOKING FINISH TIME (HH:MM)
OTHESEND  DIM       5      5        245   END SESSION TIME (HH:MM)
OTHELTYP  DIM       3      3        250   LOCATION TYPE (CATEGORY CT)
OTHECLSE  DIM       6      6        253   CLINIC SESSION
OTHEHOSP  DIM       3      3        259   HOSPITAL CODE
OTHELOCN  DIM       4      4        262   LOCATION OF CLINIC
OTHECTYP  DIM       6      6        266   CLINIC TYPE
OTHECIND  DIM       3      3        272   CLINIC INDICATOR(CI)M=Med N=Non-Med
OTHEGBOK  DIM       1      1        275   ALLOW GROUP BOOKINGS 0=NO 1=YES
OTHEADEP  DIM       3      3        276   ALLIED HEALTH DEPARTMENT
OTHECENC  DIM       1      1        279   COLLECT ENCOUNTER DETAILS
.                                         0=No 1=Yes 2=Yes plus DNA
OTHEKDOC  DIM       1      1        280   KEYIN HCP ON ATTENDANCE (Y/N)
OTHEDEFD  DIM       10     10       281   DEFAULT HCP CODE
OTHECCAR  DIM       1      1        291   COLLECT CARER DETAILS
.                                         0=No 1=Yes
OTHECTRN  DIM       1      1        292   COLLECT TRANSPORT DETAILS
.                                         0=No 1=Yes
OTHENDPS  DIM       3      3        293   NUMBER OF DAYS PRIOR TO SEND LETTER
OTHECPMI  DIM       1      1        296   USING CONFIRM PMI
.                                         0=No 1=Yes
OTHECPAG  DIM       1      1        297   USING CHECK IN PAGE
.                                         0=No 1=Yes
OTHECTEL  DIM       20     20       298   CLINIC TELEPHONE NUMBER
OTHENMDS  DIM       3      3        318   NMDS CODE (CATEGORY NM)
OTHECART  DIM       3      3        321   CARE TYPE (CATEGORY CC)
OTHESRVD  DIM       3      3        324   SERVICE DELIVERY MODE(Cat sd)
.                                         0=No, 1=Yes
OTHECLHR  DIM       1      1        327   CLINICAL HIGH RISK
.                                         0=No, 1=Yes
OTHEMLTD  DIM       1      1        328   MULTIDISCIPLINARY CLINIC
.                                         0=No, 1=Yes
OTHEXPUL  DIM       1      1        329   Exclude from Pulling List (N=0,Y=1)
OTHEMREF  DIM       1      1        330   Mandatory Waiting/Active Referral
OTHEHPIO  DIM       20     20       331   HPI-O Number
OTHETCOD  DIM       3      3        351   Tier 2 Code (category NC)
OTHETCED  DIM       8      8        354   Tier 2 Code Effective Date CCYYMMDD
OTHEHCLI  DIM       20     20       362   HERO Clinic Identifier
.                                         (SERVICE_PROVIDER_ID)
OTHEHCAI  DIM       20     20       382   HERO Campus Identifier
.                                         (SERVICE_EVENT_ATTRIBUTE_TYPE_CODE -
.                                         04 -
.                                         Service Location ID)
OTHEAOPN  DIM       1      1        402   Auto Open Clinic
.                                         Blank or 0 = No, 1 = Yes
OTHEAOFR  DIM       1      1        403   Auto Open Frequency
.                                         1 = Weekly, 2 = 2 Weekly, 4 = 4 Weekl
.                                         y
OTHEAOWM  DIM       5      5        404   Auto Open Week of Month
.                                         Blank or 0 = No, 1 = Yes
.                                         Position 1 to 5 = Week 1 to 5
OTHEAAOW  DIM       3      3        409   Auto Open Number of Weeks in Advance
OTHEDATE  DIM       8      8        412   Last Session Open Date (CCYYMMDD)
OTHEHCP1  DIM       10     10       420   Additional HCP 1 Code
OTHEHCP2  DIM       10     10       430   Additional HCP 2 Code
OTHEHCP3  DIM       10     10       440   Additional HCP 3 Code
OTHEHCP4  DIM       10     10       450   Additional HCP 4 Code
OTHESPAR  DIM       50     50       460   SPARE
.
.End of Record                      510
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
CFILEPRE  DIM       3   * Current Open File Prefix for Outpatient Files
VSITE     DIM       6
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT    "--------------------------------------------------":
                  "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION OUTHEDFD"
PRGID     INIT      "X02OTHED"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000              * run c-isam fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KSIT0000                      * Keyin OP Site Code
          BRANCH    EXIT,MAIN0000
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
.
          DISPLAY   *P56:24,"Opening outsitaf";
          OPEN      OUTSITA1,"outsitaf" * Open the site file
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                                KSIT0000             Called by: MAIN0000   *
.*  Keyin outpatient Site code to get file prefix                            *
.*****************************************************************************
.
KSIT0000  MOVE      SP70,VSITE
          KEYIN     *P1:10,*EL,"Outpatient Site Code : ",VSITE;
.
          PACK      VSITE,VSITE,SP70
.
          MATCH     SP6,VSITE           * Valid site ? Blank
          GOTO      KSIT9100 IF EQUAL   *
.
          MOVE      VSITE,KEY6          * Key for the site file
          CALL      RDSITA1             * Read the site record
          BRANCH    OVRCD,KSIT9000      * Invalid site.
.
          MOVE      OSTFILE,CFILEPRE    * Save Current File Prefix
.
          DISPLAY   *P35:10,"(Prefix: ",CFILEPRE,")";
          MOVE      ZERO,EXIT
          GOTO      KSIT9999
.
.         Invalid call to program. Common not set up with correct site info
.
KSIT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "Invalid Site Code Entered. ";
          CALL      HITENTER
          GOTO      KSIT0000
.
KSIT9100  MOVE      ONE,EXIT
          GOTO      KSIT9999
.
KSIT9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:12,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  PACK      INPFILE,CFILEPRE,FILHEDA1,SP70
          CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:14,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:15,*EL,*DV,*RV,OLDPATH:
                    *P10:15,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:14,*EL,"Keyin path for saving original file: ":
                    *P10:15,*EL,*DV,*RV,OLDPATH:
                    *P10:15,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:15,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:17,*EL,"Keyin path for the new file: ":
                    *P10:18,*EL,*DV,*RV,NEWPATH:
                    *P10:18,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:18,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat ",CMDLINE
          APPEND    INPFILE,CMDLINE
          APPEND    ".dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "s",CMDLINE
          APPEND    INPFILE,CMDLINE
          APPEND    ".dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat ",CMDLINE
          APPEND    INPFILE,CMDLINE
          APPEND    ".idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "s",CMDLINE
          APPEND    INPFILE,CMDLINE
          APPEND    ".idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    INPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "s",DIM60
          APPEND    INPFILE,DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    INPFILE,NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 510 UC1-6,7-12,13-13,14-18,19-20,21-28",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
. Index 2
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isadd ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " UC1-6,259-261,7-12,13-13,14-18,19-20,21-28",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.
          OPEN      OUTHEDA1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY28,SP70
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
          PACK      OTHEHCP1,SP70               * Additional HCP 1 Code
          PACK      OTHEHCP2,SP70               * Additional HCP 2 Code
          PACK      OTHEHCP3,SP70               * Additional HCP 3 Code
          PACK      OTHEHCP4,SP70               * Additional HCP 4 Code
.
          CALL      WROTHED1                     * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     OUTHEDA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "s",DIM60
          APPEND    INPFILE,DIM60
          APPEND    "*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "ldat ",CMDLINE
          APPEND    INPFILE,CMDLINE
          APPEND    ".dat > temp.txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  CLEAR     ERORTEXT
          APPEND    "Error finding ",ERORTEXT
          APPEND    INPFILE,ERORTEXT
          APPEND    ".dat ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"x02othed.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"x02othed.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  MOVE      ZERO,OVRCD
          READ      OLDFILE1,KEY28;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;OTHESITE,OTHECLIN,OTHEWDAY,OTHESTRT,OTHESHNO:
                                   OTHESDAT,OTHEDTCC,OTHECOM1,OTHECOM2,OTHEINS1:
                                   OTHEINS2,OTHEINS3,OTHEDURN,OTHEBFIN,OTHESEND:
                                   OTHELTYP,OTHECLSE,OTHEHOSP,OTHELOCN,OTHECTYP:
                                   OTHECIND,OTHEGBOK,OTHEADEP,OTHECENC,OTHEKDOC:
                                   OTHEDEFD,OTHECCAR,OTHECTRN,OTHENDPS,OTHECPMI:
                                   OTHECPAG,OTHECTEL,OTHENMDS,OTHECART,OTHESRVD:
                                   OTHECLHR,OTHEMLTD,OTHEXPUL,OTHEMREF,OTHEHPIO:
                                   OTHETCOD,OTHETCED,OTHEHCLI,OTHEHCAI,OTHEAOPN:
                                   OTHEAOFR,OTHEAOWM,OTHEAAOW,OTHEDATE,OTHESPAR
.
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WROTHED1  RESET     KEY28
.
          WRITE     OUTHEDA1,KEY28;OTHESITE,OTHECLIN,OTHEWDAY,OTHESTRT,OTHESHNO:
                                   OTHESDAT,OTHEDTCC,OTHECOM1,OTHECOM2,OTHEINS1:
                                   OTHEINS2,OTHEINS3,OTHEDURN,OTHEBFIN,OTHESEND:
                                   OTHELTYP,OTHECLSE,OTHEHOSP,OTHELOCN,OTHECTYP:
                                   OTHECIND,OTHEGBOK,OTHEADEP,OTHECENC,OTHEKDOC:
                                   OTHEDEFD,OTHECCAR,OTHECTRN,OTHENDPS,OTHECPMI:
                                   OTHECPAG,OTHECTEL,OTHENMDS,OTHECART,OTHESRVD:
                                   OTHECLHR,OTHEMLTD,OTHEXPUL,OTHEMREF,OTHEHPIO:
                                   OTHETCOD,OTHETCED,OTHEHCLI,OTHEHCAI,OTHEAOPN:
                                   OTHEAOFR,OTHEAOWM,OTHEAAOW,OTHEDATE,OTHEHCP1:
                                   OTHEHCP2,OTHEHCP3,OTHEHCP4,OTHESPAR

.
         RETURN
.
          INC       STD001IO
.
          INC       OUTSITIO/INC

