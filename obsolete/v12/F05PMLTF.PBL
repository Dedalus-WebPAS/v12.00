.*****************************************************************************
.*    Program      : F05PMLTF                                                *
.*    Description  : Conversion pmsltfaf to new File layout                  *
.*                                                                           *
.*    Author       : J.Tan                                                   *
.*    Date         : 02/09/2014                                              *
.*    Modifications:                                                         *
.*                                                                           *
.*****************************************************************************
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
.
. Old File definition
.
OLDFILE1   IFILE    SQL, FIXED=269, KEY="U1-4"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.PMLTSEID  DIM       4      4        1     Selection ID.
.PMLTSEDC  DIM       35     35       5     Selection Description
.PMLTVDFR  DIM       8      8        40    Visit Date From (ccyymmdd)
.PMLTVDTO  DIM       8      8        48    Visit Date To (ccyymmdd)
.PMLTDDFR  DIM       8      8        56    Discharge Date From (ccyymmdd)
.PMLTDDTO  DIM       8      8        64    Discharge Date To (ccyymmdd)
.PMLTSNFR  DIM       20     20       72    Surname From
.PMLTSNTO  DIM       20     20       92    Surname To
.PMLTLLFR  DIM       3      3        112   Last Letter Sent Code From
.PMLTLLTO  DIM       3      3        115   Last Letter Sent Code To
.PMLTLDFR  DIM       8      8        118   Last Letter Date From (ccyymmdd)
.PMLTLDTO  DIM       8      8        126   Last Letter Date To (ccyymmdd)
.PMLTFCFR  DIM       3      3        134   Future Action From (category FA)
.PMLTFCTO  DIM       3      3        137   Future Action To (category FA)
.PMLTFDFR  DIM       8      8        140   Future Action Date From (ccyymmdd)
.PMLTFDTO  DIM       8      8        148   Future Action Date To (ccyymmdd)
.PMLTCCFR  DIM       3      3        156   Claim Code From (category CL)
.PMLTCCTO  DIM       3      3        159   Claim Code To (category CL)
.PMLTATFR  DIM       3      3        162   Admission Type From (category A)
.PMLTATTO  DIM       3      3        165   Admission Type To (category A)
.PMLTOAMT  FORM      7.2    6        168   Outstanding Amount Lower Limit
.PMLTIIIN  DIM       1      1        174   Ignore Insurance Invoices
.PMLTPDFR  DIM       8      8        175   Fund Payment Date From (ccyymmdd)
.PMLTPDTO  DIM       8      8        183   Fund Payment Date To (ccyymmdd)
.PMLTDSTT  DIM       1      1        191   Deceased Status
.PMLTSYST  DIM       1      1        192   System
.PMLTLCOD  DIM       3      3        193   Letter Code
.PMLTLDAT  DIM       8      8        196   Date of Letter
.PMLTRCNT  DIM       5      5        204   Number of Records (Right Justfied)
.PMLTMHOS  DIM       3      3        209   Hospital ID (pathspaf)
.PMLTHFUN  DIM       6      6        212   Health Fund
.PMLTINSR  DIM       6      6        218   Insurance Code
.PMLTMISC  DIM       9      9        224   Miscellaneous Charge Code
.PMLTUDAT  DIM       8      8        233   Date Record last updated
.PMLTUTIM  DIM       8      8        241   Time Record last Updated
.PMLTSPAR  DIM       20     20       249   Spare Variable
.
.End of Record                      269
.
. New File definition
.
PMSLTFA1   IFILE    SQL, FIXED=330, KEY="U1-4"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMLTSEID  DIM       4      4        1     Selection ID.
PMLTSEDC  DIM       35     35       5     Selection Description
PMLTVDFR  DIM       8      8        40    Visit Date From (ccyymmdd)
PMLTVDTO  DIM       8      8        48    Visit Date To (ccyymmdd)
PMLTDDFR  DIM       8      8        56    Discharge Date From (ccyymmdd)
PMLTDDTO  DIM       8      8        64    Dischrage Date To (ccyymmdd)
PMLTSNFR  DIM       20     20       72    Surname From
PMLTSNTO  DIM       20     20       92    Surname To
PMLTLLFR  DIM       3      3        112   Last Letter Sent Code From
PMLTLLTO  DIM       3      3        115   Last Letter Sent Code To
PMLTLDFR  DIM       8      8        118   Last Letter Date From (ccyymmdd)
PMLTLDTO  DIM       8      8        126   Last Letter Date To (ccyymmdd)
PMLTFCFR  DIM       3      3        134   Future Action From (category FA)
PMLTFCTO  DIM       3      3        137   Future Action To (category FA)
PMLTFDFR  DIM       8      8        140   Future Action Date From (ccyymmdd)
PMLTFDTO  DIM       8      8        148   Future Action Date To (ccyymmdd)
PMLTCCFR  DIM       3      3        156   Claim Code From (category CL)
PMLTCCTO  DIM       3      3        159   Claim Code To (category CL)
PMLTATFR  DIM       3      3        162   Admission Type From (category A)
PMLTATTO  DIM       3      3        165   Admission Type To (category A)
PMLTOAMT  FORM      7.2    6        168   Outstanding Amount Lower Limit
PMLTIIIN  DIM       1      1        174   Ignore Insurance Invoices
PMLTPDFR  DIM       8      8        175   Fund Payment Date From (ccyymmdd)
PMLTPDTO  DIM       8      8        183   Fund Payment Date To (ccyymmdd)
PMLTDSTT  DIM       1      1        191   Deceased Status
PMLTSYST  DIM       1      1        192   System
PMLTLCOD  DIM       3      3        193   Letter Code
PMLTLDAT  DIM       8      8        196   Date of Letter
PMLTRCNT  DIM       5      5        204   Number of Records (Right Justfied)
PMLTMHOS  DIM       3      3        209   Hospital ID (pathspaf)
PMLTHFUN  DIM       6      6        212   Health Fund
PMLTINSR  DIM       6      6        218   Insurance Code
PMLTMISC  DIM       9      9        224   Miscellaneous Charge Code
PMLTPPLN  DIM       1      1        233   Patient on a Payment Plan
.                                         0 or blank = Either
.                                         1 = Yes (Only print letters for patie
.                                         nts on a
.                                         payment plan)
.                                         2 = Exclude (Exclude patients on a pa
.                                         yment
.                                         plan)
PMLTUDAT  DIM       8      8        234   Date Record last updated
PMLTUTIM  DIM       8      8        242   Time Record last Updated
PMLTSPAR  DIM       80     80       250   Spare variable
.
.End of Record                      330
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
INPFILE   DIM       8
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT    "                                                            "
.
.
.
PRGNAM    INIT      "CONVERSION PMSLTFFD"
PRGID     INIT      "F05PMLTF"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000              * run c-isam fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9999
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run c-isam fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  MOVE      "pmsltfaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsltfaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmltfaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsltfaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmltfaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmsltfaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmltfaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmsltfaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
          APPEND    " 330 UC1-4",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSLTFA1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          MOVE      SP70,KEY4
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          MOVE      SP70,PMLTPPLN                 * Patient on Payment plan
.
          CALL      WRPMLTF1                      * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSLTFA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmltfaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not zipped or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat pmsltfaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'pmsltfaf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.         Old IO Routines
.
READSOLD  RESET     KEY4
          READ      OLDFILE1,KEY4;;
          RETURN
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;PMLTSEID,PMLTSEDC,PMLTVDFR,PMLTVDTO,PMLTDDFR:
                        PMLTDDTO,PMLTSNFR,PMLTSNTO,PMLTLLFR,PMLTLLTO,PMLTLDFR:
                        PMLTLDTO,PMLTFCFR,PMLTFCTO,PMLTFDFR,PMLTFDTO,PMLTCCFR:
                        PMLTCCTO,PMLTATFR,PMLTATTO,PMLTOAMT,PMLTIIIN,PMLTPDFR:
                        PMLTPDTO,PMLTDSTT,PMLTSYST,PMLTLCOD,PMLTLDAT,PMLTRCNT:
                        PMLTMHOS,PMLTHFUN,PMLTINSR,PMLTMISC,PMLTUDAT,PMLTUTIM:
                        PMLTSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
.         New IO Routines
.
WRPMLTF1  RESET     KEY4
          WRITE     PMSLTFA1,KEY4;PMLTSEID,PMLTSEDC,PMLTVDFR,PMLTVDTO,PMLTDDFR:
                        PMLTDDTO,PMLTSNFR,PMLTSNTO,PMLTLLFR,PMLTLLTO,PMLTLDFR:
                        PMLTLDTO,PMLTFCFR,PMLTFCTO,PMLTFDFR,PMLTFDTO,PMLTCCFR:
                        PMLTCCTO,PMLTATFR,PMLTATTO,PMLTOAMT,PMLTIIIN,PMLTPDFR:
                        PMLTPDTO,PMLTDSTT,PMLTSYST,PMLTLCOD,PMLTLDAT,PMLTRCNT:
                        PMLTMHOS,PMLTHFUN,PMLTINSR,PMLTPPLN,PMLTMISC,PMLTUDAT:
                        PMLTUTIM,PMLTSPAR
          RETURN
.
          INC       STD001IO
