.------------------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  04.07.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from r5.09
.------------------------------------------------------------------------------
. V6.00.06  01.11.1993 B.G.Ackland
.           Change "Procedure" to Patient Service
.------------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACCR12
.   Function      :   Allocation to Location Summary Report   
.   Generated  On :   04/07/2002
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       CCR12TFD    
          INC       CCSCALFD/INC
          INC       CCSCMAFD/INC
          INC       CCSCMBFD/INC
          INC       CCSCMCFD/INC
          INC       CCSCMDFD/INC
          INC       CCSCMEFD/INC
          INC       CCSCMFFD/INC
          INC       CCSCTYFD/INC
          INC       CCSDCOFD/INC
          INC       CCSDPTFD/INC
          INC       CCSHCDFD/INC
          INC       CCSPCDFD/INC
          INC       CCSPDPFD/INC
          INC       CCSPSDFD/INC
          INC       CCSPUDFD/INC
          INC       CCSTMPDF    
          INC       CCSUPDFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMPERD  DIM      20 * Scr 00 Fld     6
TOPERD    DIM      20 * Scr 00 Fld     7
FROMDEPT  DIM      43 * Scr 00 Fld     8
TODEPT    DIM      43 * Scr 00 Fld     9
INCIND    FORM      1 * Scr 00 Fld    10
SUMMREPT  FORM      1 * Scr 00 Fld    11
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACCR12"
PRGNAM    INIT      "Allocation to Location Summary Report   "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA1,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA2,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA3,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscmaaf";
          OPEN      CCSCMAA1,"ccscmaaf"
          DISPLAY   *P56:24,"Opening ccsctyaf";
          OPEN      CCSCTYA1,"ccsctyaf"
          DISPLAY   *P56:24,"Opening ccsctyaf";
          OPEN      CCSCTYA2,"ccsctyaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA1,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA2,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA3,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA4,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccshcdaf";
          OPEN      CCSHCDA1,"ccshcdaf"
          DISPLAY   *P56:24,"Opening ccshcdaf";
          OPEN      CCSHCDA2,"ccshcdaf"
          DISPLAY   *P56:24,"Opening ccspcdaf";
          OPEN      CCSPCDA1,"ccspcdaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA1,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA2,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA3,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA4,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA1,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA2,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA3,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspudaf";
          OPEN      CCSPUDA1,"ccspudaf"
          DISPLAY   *P56:24,"Opening ccsupdaf";
          OPEN      CCSUPDA1,"ccsupdaf"
          DISPLAY   *P56:24,"Opening ccsupdaf";
          OPEN      CCSUPDA2,"ccsupdaf"
          DISPLAY   *P56:24,"Opening ccsupdaf";
          OPEN      CCSUPDA3,"ccsupdaf"
          DISPLAY   *P56:24,"Opening ccsupdaf";
          OPEN      CCSUPDA4,"ccsupdaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Summary Comparsion                 
          ENDIF
          RETURN
.--------------------------------
. Screen - Summary Comparsion                 
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Summary Comparsion                 
.-------------------------------------------------------
CF00L000
          MOVE      SP70,CCMACOM 
          MOVE      SP70,CCHCHCD 
          MOVE      SP70,CCCAYEAR
          MOVE      SP70,CCMADES 
          MOVE      SP70,CCHCDES 
          MOVE      SP70,FROMPERD
          MOVE      SP70,TOPERD  
          MOVE      SP70,FROMDEPT
          MOVE      SP70,TODEPT  
          MOVE      ZERO,INCIND  
          MOVE      ZERO,SUMMREPT
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Summary Comparsion                 
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCMADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      ECMOD000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      CCMACOM,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCMADES,VAR      
            CALL      DISPITEM
          ENDIF
.
KY00L120
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCHCDES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KCCHCA00
          BRANCH    EXIT,KY00L110,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      CCHCHCD,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCHCDES,VAR      
            CALL      DISPITEM
          ENDIF
.
KY00L130
          MOVE      "    3",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      KCCCAB00
          BRANCH    EXIT,KY00L120,KY00L900
          MOVE      ZERO,ACCEPT
          CALL      MVACCEPT
          MOVE      CCCAYEAR,VAR     
          CALL      DISPITEM
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Summary Comparsion                 
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Summary Comparsion                 
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Summary Comparsion                 
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Summary Comparsion                 
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106,PS00L107,PS00L108,PS00L999:
                            PS00L999,PS00L999
          GOTO     PS00L999
.
PS00L101
          MOVE      CCMADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CCHCDES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FROMPERD,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      TOPERD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      FROMDEPT,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      TODEPT,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCIND,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SUMMREPT,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Summary Comparsion                 
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L101,SF00L006,SF00L102:
                            SF00L006,SF00L103,SF00L104,SF00L006:
                            SF00L105,SF00L106
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L101,SF00L020,SF00L102:
                            SF00L020,SF00L103,SF00L104,SF00L020:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPERD  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMPERD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPERD,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L102
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODEPT  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDEPT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMDEPT,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODEPT,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
          CALL      DEFAULTY
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,INCIND  
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCIND,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL      DEFAULTN
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,SUMMREPT
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SUMMREPT,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L106
          CALL      REPT0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
DEFAULTY    MOVE     ANSY,DEFYESNO
            RETURN
DEFAULTN    MOVE     ANSN,DEFYESNO
            RETURN
ECMOD000  MOVE      ZERO,CKEYTYP
          CALL      CCSMOPCL    * Close Model
          CALL      KCCMAA00
          BRANCH    EXIT,ECMOD999,ECMOD999
.
          CALL      CCSMOPOP    * Open Model
          IF        EXIT=1
            MOVE      "Unable to Open Cost Model Files. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ECMOD000
          ENDIF
ECMOD999  RETURN
EPERD000   MOVE     "    6",FLDID
           CALL     GETPOSIT
           CALL     KCCCAA00
           BRANCH   EXIT,EPERD100,EPERD999
           MOVE     CCCAPER,FPERIOD
           PACK     FROMPERD,CCCAPER,SP1,CCCADES
           MOVE     CCCAFDT,FROMDATE
           GOTO     EPERD150
EPERD100   MOVE     "Start             ",FROMPERD
           MOVE     SP70,FPERIOD
           MOVE     SP70,FROMDATE
.
EPERD150   MOVE     "    7",FLDID
           CALL     GETPOSIT
           CALL     KCCCAA00
           BRANCH   EXIT,EPERD200,EPERD999
           PACK     TOPERD,CCCAPER,SP1,CCCADES
           MOVE     CCCAPER,LPERIOD
           MOVE     CCCATDT,ENDDATE
           MATCH    FPERIOD,LPERIOD
           GOTO     EPERD999 IF EQUAL
           GOTO     EPERD999 IF NOT LESS
           BEEP
           MOVE     "To Period Must Be Greater Than From Period - ",DISPMSG
           CALL     MESSAGE1
           GOTO     EPERD000
EPERD200   MOVE     "Finish             ",TOPERD
           MOVE     "ZZ",LPERIOD
           MOVE     "ZZZZZZZZ",ENDDATE
.
EPERD999   MOVE     "    6",FLDID
           CALL     GETPOSIT
           RETURN
EDEPT000   MOVE     "    8",FLDID
           CALL     GETPOSIT
           MOVE     CCHCHCD,CCDPHCD
           CALL     KCCDPA00
           BRANCH   EXIT,EDEPT100,EDEPT999
           MOVE     CCDPDPT,FDEPART
           PACK     FROMDEPT,CCDPDPT,SP1,CCDPDES
           GOTO     EDEPT150
EDEPT100   MOVE     "Start             ",FROMDEPT
           MOVE     SP70,FDEPART
.
EDEPT150   MOVE     "    9",FLDID
           CALL     GETPOSIT
           MOVE     CCHCHCD,CCDPHCD
           CALL     KCCDPA00
           BRANCH   EXIT,EDEPT200,EDEPT999
           PACK     TODEPT,CCDPDPT,SP1,CCDPDES
           MOVE     CCDPDPT,LDEPART
           MATCH    FDEPART,LDEPART
           GOTO     EDEPT999 IF EQUAL
           GOTO     EDEPT999 IF NOT LESS
           BEEP
           MOVE     "To Department Must Be > From Department - ",DISPMSG
           CALL     MESSAGE1
           GOTO     EDEPT000
EDEPT200   MOVE     "Finish             ",TODEPT
           MOVE     "ZZZZZZZZ",LDEPART
.
EDEPT999   MOVE     "    8",FLDID
           CALL     GETPOSIT
           RETURN
.----------------------------------------
. Patient Service Usage Model Analysis
.----------------------------------------
REPT0000  CALL      EXTR0000      * Extract from the Patient Service Details
.
          DISPLAY   *P1:24,*EL,"Printing Location : "
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          MOVE      "99",CLNO
.
          MOVE      CCCAYEAR,KEY4
          PACK      KEY6,KEY4,FPERIOD
          CALL      RDCCCA1
          MATCH     "  ",FPERIOD
          IF        @EQUAL
            CALL      RKCCCA1
          ENDIF
          MOVE      CCCADES,FROMPNAM
          MOVE      KEY4,CCCAYEAR
.
          PACK      KEY6,KEY4,LPERIOD
          CALL      RDCCCA1
          MATCH     "ZZ",LPERIOD
          IF        @EQUAL
            CALL      RPCCCA1
          ENDIF
          MOVE      CCCADES,TOPNAM
          MOVE      KEY4,CCCAYEAR
.
          MOVE      ZERO,TOTALCST
          MOVE      ZERO,TOTALBUD
          MOVE      ZERO,TOTALQTY
          MOVE      ZERO,TOTALNPT
.
. Calculate Totals
.-----------------
          PACK      KEY4,SP70
          CALL      RDCCEX1
          IF        OVRCD=0
            CALL      RPCCEX1
          ENDIF
.
REPT0100  CALL      RKCCEX1
          BRANCH    OVRCD,REPT0200
          ADD       CCEXBUD,TOTALBUD
          ADD       CCEXCST,TOTALCST
          ADD       CCEXQTY,TOTALQTY
          ADD       CCEXNPT,TOTALNPT
          GOTO      REPT0100
.
REPT0200  MOVE      ZERO,GRANDCST
          MOVE      ZERO,GRANDBUD
          MOVE      ZERO,GRANDQTY
          MOVE      ZERO,GRANDNPT
          PACK      KEY4,SP70
          CALL      RDCCEX1
          IF        OVRCD=0
            CALL      RPCCEX1
          ENDIF
.
REPT1000  CALL      RKCCEX1
          BRANCH    OVRCD,REPT9000
          MOVE      "999,999",F7TOT1
          MOVE      "999,999",F7TOT2
          MOVE      "9999.99",F7TOT3
          MOVE      "9999.99",F7TOT4
          MOVE      "99,999,999.99",FTOTAL1
          MOVE      "99,999,999.99",FTOTAL2
          MOVE      "99,999,999.99",FTOTAL3
          MOVE      "99,999,999.99",FTOTAL4
.
          MATCH     SP70,CCEXLOC
          IF        @EQUAL
            MOVE      "Location Unknown (Blank)",CCPUDES
            GOTO      REPT1100
          ENDIF
.
          PACK      KEY5,FOUR,CCEXLOC
          CALL      RDCCPU1
          IF        OVRCD=1
            ADD       CCEXCST,GRANDCST
            ADD       CCEXBUD,GRANDBUD
            ADD       CCEXQTY,GRANDQTY
            ADD       CCEXNPT,GRANDNPT
            GOTO      REPT1000
          ENDIF
.
REPT1100
          MOVE      CCEXQTY,F12
          FEDIT     F12,F7TOT1
          MOVE      CCEXNPT,F12
          FEDIT     F12,F7TOT2
.
          MOVE      CCEXBUD,F12P2
          FEDIT     F12P2,FTOTAL1
          ASSIGN    (CCEXBUD/TOTALBUD)*100.0,F12P2
          FEDIT     F12P2,F7TOT3
.
          ASSIGN    CCEXBUD/CCEXNPT,F12P2
          FEDIT     F12P2,FTOTAL2
          IF        CCEXNPT=0
            MOVE      SP70,FTOTAL2
          ENDIF
.
          MOVE      CCEXCST,F12P2
          FEDIT     F12P2,FTOTAL3
          ASSIGN    (CCEXCST/TOTALCST)*100.0,F12P2
          FEDIT     F12P2,F7TOT4
.
          ASSIGN    CCEXCST/CCEXNPT,F12P2
          FEDIT     F12P2,FTOTAL4
          IF        CCEXNPT=0
            MOVE      SP70,FTOTAL4
          ENDIF
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
          ADD       "1",CLNO
          PRINT     "| ",CCEXLOC,SP1,CCPUDES:
                    *44,"|",F7TOT1," |",F7TOT2:
                    " |",FTOTAL1,FTOTAL2,F7TOT3," |",FTOTAL3,FTOTAL4,F7TOT4," |"
          GOTO      REPT1000
.
REPT9000  CALL      DPTOT000
          PRINT     *25,"*** End of Report ***"
          CALL      MESSAGE3
          MOVE      "Report Completed - ",DISPMSG
          CALL      MESSAGE1
          CLOSE     CCSEXTA1,DELETE
          CLOSE     CCSTMPA1,DELETE
          RETURN
.------------------------------------------------------------
. Print Report Heading
.------------------------------------------------------------
HEAD0000  CALL      HEAD132
          MOVE      "9",CLNO
          PRINT     "Department From  : ",FROMDEPT," to ",TODEPT
          ADD       "1",CLNO
          PRINT     "Costing Model    : ",CCMACOM,SP1,CCMADES
          IF        INCIND=0
            PRINT     *50,"***** NB :  Indirect Costs Excluded   *****"
            ADD       "1",CLNO
          ENDIF
          PRINT     "Hospital         : ",CCHCHCD,SP3,CCHCDES:
                    " Year   : ",CCCAYEAR
          PRINT     "Period     From  : ",FROMPNAM," to ",TOPNAM
.
          CALL      UND132
          PRINT     "| Department                               |Pat.Serv.|":
                    "  Epis. |          Flex Budget             |":
                    "            Actual                |"
          PRINT     "|                                          |        |":
                    "        |       Total   per Episode  Tot % |":
                    "        Total  per Episode  Tot % |"
          CALL      UND132
HEAD9999  RETURN
.
DPTOT000  MOVE      "99,999,999.99",FTOTAL1
          MOVE      "99,999,999.99",FTOTAL2
          MOVE      "99,999,999.99",FTOTAL3
          MOVE      "99,999,999.99",FTOTAL4
          MOVE      "999,999",F7TOT1
          MOVE      "999,999",F7TOT2
          MOVE      "9999.99",F7TOT3
          MOVE      "9999.99",F7TOT4
.
          MOVE      GRANDQTY,F12
          FEDIT     F12,F7TOT1
          MOVE      GRANDNPT,F12
          FEDIT     F12,F7TOT2
.
          MOVE      GRANDBUD,F12P2
          FEDIT     F12P2,FTOTAL1
          ASSIGN    (GRANDBUD/TOTALBUD)*100.0,F12P2
          FEDIT     F12P2,F7TOT3
.
          ASSIGN    GRANDBUD/GRANDNPT,F12P2
          FEDIT     F12P2,FTOTAL2
          IF        GRANDNPT=0
            MOVE      SP70,FTOTAL2
          ENDIF
.
          MOVE      GRANDCST,F12P2
          FEDIT     F12P2,FTOTAL3
          ASSIGN    (GRANDCST/TOTALCST)*100.0,F12P2
          FEDIT     F12P2,F7TOT4
.
          ASSIGN    GRANDCST/GRANDNPT,F12P2
          FEDIT     F12P2,FTOTAL4
          IF        GRANDNPT=0
            MOVE      SP70,FTOTAL4
          ENDIF
.
          PRINT     "| Location Code Invalid   ":
                    *44,"|",F7TOT1," |",F7TOT2:
                    " |",FTOTAL1,FTOTAL2,F7TOT3," |",FTOTAL3,FTOTAL4,F7TOT4," |"
          CALL      UND132
.
          MOVE      CCFED1,FTOTAL1
          MOVE      CCFED1,FTOTAL2
          MOVE      CCFED1,FTOTAL3
          MOVE      CCFED1,FTOTAL4
          MOVE      "999,999",F7TOT1
          MOVE      "999,999",F7TOT2
          MOVE      "9999.99",F7TOT3
          MOVE      "9999.99",F7TOT4
.
          MOVE      TOTALQTY,F12
          FEDIT     F12,F7TOT1
          MOVE      TOTALNPT,F12
          FEDIT     F12,F7TOT2
.
          MOVE      " 100.00",F7TOT3
          MOVE      " 100.00",F7TOT4
.
          MOVE      TOTALBUD,F12P2
          FEDIT     F12P2,FTOTAL1
          ASSIGN    TOTALBUD/TOTALNPT,F12P2
          FEDIT     F12P2,FTOTAL2
          IF        TOTALNPT=0
            MOVE      SP70,FTOTAL2
          ENDIF
.
          MOVE      TOTALCST,F12P2
          FEDIT     F12P2,FTOTAL3
          ASSIGN    TOTALCST/TOTALNPT,F12P2
          FEDIT     F12P2,FTOTAL4
          IF        TOTALNPT=0
            MOVE      SP70,FTOTAL4
          ENDIF
.
          PRINT     "|      Total ":
                    *44,"|",F7TOT1," |",F7TOT2:
                    " |",FTOTAL1,FTOTAL2,F7TOT3," |",FTOTAL3,FTOTAL4,F7TOT4," |"
          CALL      UND132
          MOVE      ZERO,TOTALCST
          MOVE      ZERO,TOTALBUD
          MOVE      ZERO,TOTALQTY
          MOVE      ZERO,TOTALNPT
          RETURN
.
.------------------------------------------------------------
. Extract Details from the Patient Service Details
.------------------------------------------------------------
EXTR0000  CALL      CLEAR000
.
          REP       " 0",ENDDATE
          REP       " 0",FROMDATE
          DISPLAY   *P1:24,"Extracting Department : "
          PACK      KEY10,CCHCHCD,FDEPART
          CALL      RDCCDP1
          IF        OVRCD=0
            CALL      RPCCDP1
          ENDIF
.
EXTR1000  CALL      RKCCDP1
          BRANCH    OVRCD,EXTR9000
          MATCH     CCHCHCD,CCDPHCD
          GOTO      EXTR9000 IF NOT EQUAL
          MATCH     CCDPDPT,LDEPART
          GOTO      EXTR9000 IF LESS
.
          MATCH     "1",CCDPDTY
          GOTO      EXTR1000 IF EQUAL
.
          DISPLAY   *P25:24,CCDPDPT
.
          CALL      EDPT0000        * Extract Department Details
.
          GOTO      EXTR1000
.
EXTR9000
EXTR9999  RETURN
.------------------------------------------------------------
. Extract Department Details
.------------------------------------------------------------
EDPT0000  PACK     KEY18,CCDPHCD,CCDPDPT,SP70
          CALL     RSCCPD1
EDPT1000  CALL     RKCCPD1
          BRANCH   OVRCD,EDPT9999
          PACK     KEY10,CCDPHCD,CCDPDPT,SP70
          PACK     KEY18,CCPDHCD,CCPDDPT,SP70
          MATCH    KEY10,KEY18
          GOTO     EDPT9999 IF NOT EQUAL
.
          CALL     CALC0000    * Calculate Average Cost Over the Period Range
.
          MOVE     ZERO,SECTOR
          PACK     KEY31,CCPDHCD,CCPDDPT,CCPDPCD,FROMDATE,SP70
          CALL     RSCCUP3
.
EDPT2000  CALL     RKCCUP3
          BRANCH   OVRCD,EDPT1000
          PACK     KEY18,CCPDHCD,CCPDDPT,CCPDPCD
          PACK     KEY31,CCUPHCD,CCUPDPT,CCUPPCD,SP70
          MATCH    KEY18,KEY31
          GOTO     EDPT1000 IF NOT EQUAL
          REP      " 0",CCUPDAT
          MATCH    CCUPDAT,ENDDATE
          GOTO     EDPT1000 IF LESS
          ADD      ONE,SECTOR
          IF       (SECTOR%100)=0
            DISPLAY  *P74:24,SECTOR
          ENDIF
.
          CALL     UPEXT000          * Update Extract File
.
          GOTO     EDPT2000
.
EDPT9999  RETURN
.------------------------------------------------------------
. Update Extract File
.------------------------------------------------------------
. CCSEXTA1  IFILE    SQL, FIXED=36, KEY="U1-4"
.
. CCEXLOC   DIM      4     4     1    Location Code
. CCEXQTY   FORM     12.2  8     5    Number of Patient Service Performed
. CCEXCST   FORM     12.2  8     13   Total Actual
. CCEXBUD   FORM     12.2  8     21   Total Budget
. CCEXNPT   FORM     10    6     29   Number of Patients
.
. End of Record                  35
.------------------------------------------------------------
UPEXT000  MOVE     ZERO,F1
          MATCH    SP70,CCUPURN
          GOTO     UPEXT100 IF EQUAL
          MATCH    SP70,CCUPENC
          GOTO     UPEXT100 IF EQUAL
          PACK     KEY20,CCUPCL4,CCUPENC
          CALL     RDCCTM1
          IF       OVRCD=1
            UNPACK   KEY20,CCTMLOC,CCTMEPS
            CALL     WRCCTM1
            MOVE     ONE,F1
          ENDIF
.
UPEXT100  PACK     KEY4,CCUPCL4
          CALL     RDCCEX1
          IF       OVRCD=0
            ADD      CCUPQTY,CCEXQTY
            ASSIGN   CCEXCST+(CCUPQTY*ACTCOST),CCEXCST
            ASSIGN   CCEXBUD+(CCUPQTY*BUDCOST),CCEXBUD
            ADD      F1,CCEXNPT
            CALL     UPCCEX1
          ELSE
            UNPACK   KEY4,CCEXLOC
            MOVE     CCUPQTY,CCEXQTY
            ASSIGN   (CCUPQTY*ACTCOST),CCEXCST
            ASSIGN   (CCUPQTY*BUDCOST),CCEXBUD
            MOVE     F1,CCEXNPT
            CALL     WRCCEX1
          ENDIF
          RETURN
.------------------------------------------------------------
. Create Extract Summary Files
.------------------------------------------------------------
CLEAR000  DISPLAY  *P1:10;
          CLEAR    FILENAME
          APPEND   "CCR12A",FILENAME
          APPEND   PORT,FILENAME
          RESET    FILENAME
          REP      " 0",FILENAME
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     CCSEXTA1,FILENAME
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    CCSEXTA1,DELETE
          ENDIF
.
          CLEAR    COMMAND
          APPEND   ISBUILD,COMMAND
          APPEND   FILENAME,COMMAND
          APPEND   " 35 U1-4",COMMAND
          RESET    COMMAND
          EXECUTE  COMMAND,TASKID
          OPEN     CCSEXTA1,FILENAME
.
          DISPLAY  *P1:10;
          CLEAR    FILENAME
          APPEND   "CCR12B",FILENAME
          APPEND   PORT,FILENAME
          RESET    FILENAME
          REP      " 0",FILENAME
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     CCSTMPA1,FILENAME
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    CCSTMPA1,DELETE
          ENDIF
.
          CLEAR    COMMAND
          APPEND   ISBUILD,COMMAND
          APPEND   FILENAME,COMMAND
          APPEND   " 21 U1-4,5-20",COMMAND
          RESET    COMMAND
          EXECUTE  COMMAND,TASKID
          OPEN     CCSTMPA1,FILENAME
.
          RETURN
.--------------------------------------------------------------------------
. Calculate Patient Service Unit Cost for Actual (ACTCOST) and Budget (BUDCOST)
. for the period specified.
.--------------------------------------------------------------------------
CALC0000  COMPARE   ZERO,INCIND          * Include Indirect 0=No 1=Yes
          GOTO      CALC9000 IF EQUAL
          PACK      KEY22,CCDPHCD,CCDPDPT,CCPDPCD,CCCAYEAR,SP70
          PACK      KEY24,CCDPHCD,CCDPDPT,CCPDPCD,CCCAYEAR,SP70
          MOVE      ZERO,TOTALCST
          MOVE      ZERO,TOTALQTY
          CALL      RSCCME2
CALC1000  CALL      RKCCME2
          BRANCH    OVRCD,CALC1900
          PACK      KEY24,CCMEHCD,CCMEDPT,CCMEPCD,CCMEYEAR,CCMEPER,SP70
          MATCH     KEY22,KEY24
          GOTO      CALC1900 IF NOT EQUAL
          MATCH     CCMEPER,LPERIOD
          GOTO      CALC1900 IF LESS
          MATCH     FPERIOD,CCMEPER
          GOTO      CALC1000 IF LESS
.
          ADD       CCMEQTY,TOTALQTY
          MOVE      CCMEQTY,F12P6
          ASSIGN    TOTALCST+(CCMECST*F12P6),TOTALCST
          GOTO      CALC1000
.
CALC1900  ASSIGN    TOTALCST/TOTALQTY,BUDCOST
.
          PACK      KEY22,CCDPHCD,CCDPDPT,CCPDPCD,CCCAYEAR,SP70
          PACK      KEY24,CCDPHCD,CCDPDPT,CCPDPCD,CCCAYEAR,SP70
          MOVE      ZERO,TOTALCST
          MOVE      ZERO,TOTALQTY
          CALL      RSCCPS2
CALC2000  CALL      RKCCPS2
          BRANCH    OVRCD,CALC2900
          PACK      KEY24,CCPSHCD,CCPSDPT,CCPSPCD,CCPSYEAR,CCPSPER,SP70
          MATCH     KEY22,KEY24
          GOTO      CALC2900 IF NOT EQUAL
          MATCH     CCPSPER,LPERIOD
          GOTO      CALC2900 IF LESS
          MATCH     FPERIOD,CCPSPER
          GOTO      CALC2000 IF LESS
.
          ADD       CCPSQTY,TOTALQTY
          MOVE      CCPSQTY,F12P6
          ASSIGN    TOTALCST+(CCPSCST*F12P6),TOTALCST
          GOTO      CALC2000
.
CALC2900  ASSIGN    TOTALCST/TOTALQTY,ACTCOST
          GOTO      CALC9999
.
CALC9000  CALL      CIND0000          * Calculate Costs Excluding Indirects
.
CALC9999  RETURN
.----------------------------------------------------------------------
. Calculate Costs Excluding Indirect Cost Components
.----------------------------------------------------------------------
CIND0000  PACK      KEY22,CCDPHCD,CCDPDPT,CCPDPCD,CCCAYEAR,SP70
          PACK      KEY24,CCDPHCD,CCDPDPT,CCPDPCD,CCCAYEAR,SP70
          MOVE      ZERO,TOTALCST
          MOVE      ZERO,TOTALQTY
          CALL      RSCCME2
CIND1000  CALL      RKCCME2
          BRANCH    OVRCD,CIND1900
          PACK      KEY24,CCMEHCD,CCMEDPT,CCMEPCD,CCMEYEAR,CCMEPER,SP70
          MATCH     KEY22,KEY24
          GOTO      CIND1900 IF NOT EQUAL
          MATCH     CCMEPER,LPERIOD
          GOTO      CIND1900 IF LESS
          MATCH     FPERIOD,CCMEPER
          GOTO      CIND1000 IF LESS
.
          ADD       CCMEQTY,TOTALQTY
.
          PACK      KEY28,CCMEHCD,CCMEDPT,CCMEYEAR,CCMEPER,CCMEPCD,SP70
          PACK      KEY24,CCMEHCD,CCMEDPT,CCMEYEAR,CCMEPER,CCMEPCD,SP70
          CALL      RSCCMD1
CIND1500  CALL      RKCCMD1
          BRANCH    OVRCD,CIND1000
          PACK      KEY28,CCMDHCD,CCMDDPT,CCMDYEAR,CCMDPER,CCMDPCD,SP70
          MATCH     KEY24,KEY28
          GOTO      CIND1000 IF NOT EQUAL
.
          MOVE      "0",CCCTIND
          MOVE      CCMDCTY,KEY4
          CALL      RDCCCT1
.
          MATCH     "1",CCCTIND       * Indirect 1=Yes
          GOTO      CIND1500 IF EQUAL
          ASSIGN    TOTALCST+(CCMDCST*CCMEQTY),TOTALCST
          GOTO      CIND1500
.
CIND1900  ASSIGN    TOTALCST/TOTALQTY,BUDCOST
.
          PACK      KEY22,CCDPHCD,CCDPDPT,CCPDPCD,CCCAYEAR,SP70
          PACK      KEY24,CCDPHCD,CCDPDPT,CCPDPCD,CCCAYEAR,SP70
          MOVE      ZERO,TOTALCST
          MOVE      ZERO,TOTALQTY
          CALL      RSCCPS2
CIND2000  CALL      RKCCPS2
          BRANCH    OVRCD,CIND2900
          PACK      KEY24,CCPSHCD,CCPSDPT,CCPSPCD,CCPSYEAR,CCPSPER,SP70
          MATCH     KEY22,KEY24
          GOTO      CIND2900 IF NOT EQUAL
          MATCH     CCPSPER,LPERIOD
          GOTO      CIND2900 IF LESS
          MATCH     FPERIOD,CCPSPER
          GOTO      CIND2000 IF LESS
.
          ADD       CCPSQTY,TOTALQTY
.
          PACK      KEY28,CCPSHCD,CCPSDPT,CCPSYEAR,CCPSPER,CCPSPCD,SP70
          PACK      KEY24,CCPSHCD,CCPSDPT,CCPSYEAR,CCPSPER,CCPSPCD,SP70
          CALL      RSCCPC1
CIND2500  CALL      RKCCPC1
          BRANCH    OVRCD,CIND2000
          PACK      KEY28,CCPCHCD,CCPCDPT,CCPCYEAR,CCPCPER,CCPCPCD,SP70
          MATCH     KEY24,KEY28
          GOTO      CIND2000 IF NOT EQUAL
.
          MOVE      "0",CCCTIND
          MOVE      CCPCCTY,KEY4
          CALL      RDCCCT1
.
          MATCH     "1",CCCTIND       * Indirect 1=Yes
          GOTO      CIND2500 IF EQUAL
          ASSIGN    TOTALCST+(CCPCCST*CCPSQTY),TOTALCST
          GOTO      CIND2500
.
CIND2900  ASSIGN    TOTALCST/TOTALQTY,ACTCOST
.
CIND9999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       CCR12TIO    
          INC       CCSCALIO/INC
          INC       CCSCALKY    
          INC       CCSCMAIO/INC
          INC       CCSCMAKY    
          INC       CCSCMBIO/INC
          INC       CCSCMCIO/INC
          INC       CCSCMDIO/INC
          INC       CCSCMEIO/INC
          INC       CCSCMFIO/INC
          INC       CCSCTYIO/INC
          INC       CCSDCOIO/INC
          INC       CCSDPTIO/INC
          INC       CCSDPTKY    
          INC       CCSHCDIO/INC
          INC       CCSHCDKY    
          INC       CCSMOPCD    
          INC       CCSPCDIO/INC
          INC       CCSPDPIO/INC
          INC       CCSPSDIO/INC
          INC       CCSPUDIO/INC
          INC       CCSUPDIO/INC
.
          INC       STDGENCD
.
