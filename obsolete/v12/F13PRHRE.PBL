.*****************************************************************************
.*    Program      : F13PRHRE                                                *
.*    Description  : Conversion prihreff to new File layout                  *
.*                                                                           *
.*    Author       : Richa Phogat                                            *
.*    Date         : 26/07/2018                                              *
.*    Modifications:                                                         *
.*        V10.13.00 26/07/2018  Richa Phogat   TSK 0848506                   *
.*                  Created Fixit Program to modify PRIHREFD                 *
.*                                                                           *
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change F13PRHRE  eg F57PTDOC
.  Global change f13prhre  eg f57ptdoc
.  Global change PRIHREFD  eg PATDOCFD (new layout)
.  Global change prihreff  eg patdoctf
.  Global change PRIHREF1  eg PATDOCT1
.  Global change KEY23   eg KEY8
.  Global change KEY27  eg KEY9
.  Global change WRPRHR1  eg WRDOCT1
.  Global change sprhreff  eg sptdoctf
.
.  Global changes if Oracle Option is required -
.
.  Global Change No  to Yes
.  Global change OFDUMYIO  eg RSPTDOC1
.  Global change OFDUMYIO  eg RKPTDOC1
.  Global change OFDUMYIO  eg UPPTDOC1
.
.  Global changes if Oracle Option is NOT required -

.  Global Change No  to No
.  Global change OFDUMYIO  to OFDUMYIO
.  Global change OFDUMYIO  to OFDUMYIO
.  Global change OFDUMYIO  to OFDUMYIO
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
OLDFILE1   IFILE SQL, FIXED=497, KEY="U1-8,9-14,15-20,21-23"
.PRIHREF2   IFILE SQL, FIXED=497, KEY="U88-88,1-8,9-14,15-20,21-23"
.PRIHREF3   IFILE SQL, FIXED=497, KEY="U9-14,15-20,21-23,1-8"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
DPRHRUNQ  DIM       8      8        1     Unique Identifier
PRHRPRAC  DIM       6      6        9     Medical Practice Code
OLDRDOCT  DIM       6      6        15    Service Doctor
PRHRPIND  DIM       3      3        21    Patient Indicator (Category GI)
.
OLDRREFD  DIM       6      6        24    Referring Doctor
PRHRRDAT  DIM       8      8        30    Referral Date (CCYYMMDD)
PRHRREFT  DIM       50     50       38    Referral Details
DPRHRPIN  DIM       1      1        88    Invoice to be printed
.                                             0 = No
.                                             1 = Yes
PRHRMESS  DIM       3      3        89    Message Code (PATMESG1)
PRHRBULK  DIM       3      3        92    Bulk Bill Code (Cat GB)
PRHRBCOD  DIM       6      6        95    Fund/Insurance Co./Govt Code
PRHROCOD  DIM       20     20       101   Operation Codes
PRHRUDF1  DIM       3      3        121   User Defined Field 1 (Category G1)
PRHRUDF2  DIM       3      3        124   User Defined Field 2 (Category G2)
PRHRUDF3  DIM       3      3        127   User Defined Field 3 (Category G3)
PRHRUDF4  DIM       3      3        130   User Defined Field 4 (Category G4)
.
PRHRNAME  DIM       45     45       133   Name of Person Responsible for A/C
PRHRADD1  DIM       35     35       178   P.R.A. Address Line 1
PRHRADD2  DIM       35     35       213   P.R.A. Address Line 2
PRHRADD3  DIM       35     35       248   P.R.A. Address Line 3
PRHRADD4  DIM       35     35       283   P.R.A. Address Line 4
PRHRPOST  DIM       8      8        318   P.R.A. Postcode
PRHRTELP  DIM       20     20       326   P.R.A. Private Telephone
PRHRTELB  DIM       20     20       346   P.R.A. Business Telephone
PRHRMPHN  DIM       20     20       366   P.R.A. Mobile Telephone
PRHRRELP  DIM       10     10       386   P.R.A. Relationship
.
PRHRUNCL  FORM      8      5        396   Unique claims number
PRHRADMN  DIM       3      3        401   Admission Class
PRHRRFPD  DIM       3      3        404   Referral Period (Cat RF)
PRHRTACC  DIM       3      3        407   Type of Account/Claim (Cat ta)
PRHRLVIS  DIM       8      8        410   Not Used
PRHRACCI  DIM       1      1        418   Accident Indicator
.                                          0 or Blank = No
.                                          1 = Yes
PRHRACPD  DIM       1      1        419   Account Paid
.                                          0 or Blank = No
.                                          1 = Yes
PRHRBASS  DIM       1      1        420   Benefit Assigned Authorised
.                                          0 or Blank = No
.                                          1 = Yes
PRHRISSC  DIM       3      3        421   IFC Issue Code (Cat ic)
PRHRSTCD  DIM       3      3        424   Service Type Code (Cat st)
PRHRFPID  DIM       40     40       427   Fund Payee ID
PRHRRPER  DIM       2      2        467   Referral Period (months, 1-98)
.                                          (R-Justified)
PRHRFIDI  DIM       1      1        469   Financial Interest Disclosure
.                                         Indicator
.                                           Blank or 0 = No
.                                           1 = Yes
PRHRSPAR  DIM       27     27       470   Spare Variable
.
.End of Record                      497
.
.
. Redefine FORM fields from key
. -----------------------------
PRHRUNIQ  FORM      8
PRHRPINV  FORM      1
.
.                                     ******** copy the new FD here *******
.
PRIHREF1   IFILE SQL, FIXED=505, KEY="U1-8,9-14,15-24,25-27"
PRIHREF2   IFILE SQL, FIXED=505, KEY="U96-96,1-8,9-14,15-24,25-27"
PRIHREF3   IFILE SQL, FIXED=505, KEY="U9-14,15-24,25-27,1-8"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.DPRHRUNQ  DIM       8      8        1     Unique Identifier
.PRHRPRAC  DIM       6      6        9     Medical Practice Code
PRHRDOCT  DIM       10     10       15    Service Doctor
.PRHRPIND  DIM       3      3        25    Patient Indicator (Category GI)
.
PRHRREFD  DIM       10     10       28    Referring Doctor
.PRHRRDAT  DIM       8      8        38    Referral Date (CCYYMMDD)
.PRHRREFT  DIM       50     50       46    Referral Details
.DPRHRPIN  DIM       1      1        96    Invoice to be printed
.                                             0 = No
.                                             1 = Yes
.PRHRMESS  DIM       3      3        97    Message Code (PATMESG1)
.PRHRBULK  DIM       3      3        100   Bulk Bill Code (Cat GB)
.PRHRBCOD  DIM       6      6        103   Fund/Insurance Co./Govt Code
.PRHROCOD  DIM       20     20       109   Operation Codes
.PRHRUDF1  DIM       3      3        129   User Defined Field 1 (Category G1)
.PRHRUDF2  DIM       3      3        132   User Defined Field 2 (Category G2)
.PRHRUDF3  DIM       3      3        135   User Defined Field 3 (Category G3)
.PRHRUDF4  DIM       3      3        138   User Defined Field 4 (Category G4)
.
.PRHRNAME  DIM       45     45       141   Name of Person Responsible for A/C
.PRHRADD1  DIM       35     35       186   P.R.A. Address Line 1
.PRHRADD2  DIM       35     35       221   P.R.A. Address Line 2
.PRHRADD3  DIM       35     35       256   P.R.A. Address Line 3
.PRHRADD4  DIM       35     35       291   P.R.A. Address Line 4
.PRHRPOST  DIM       8      8        326   P.R.A. Postcode
.PRHRTELP  DIM       20     20       334   P.R.A. Private Telephone
.PRHRTELB  DIM       20     20       354   P.R.A. Business Telephone
.PRHRMPHN  DIM       20     20       374   P.R.A. Mobile Telephone
.PRHRRELP  DIM       10     10       394   P.R.A. Relationship
.
.PRHRUNCL  FORM      8      5        404   Unique claims number
.PRHRADMN  DIM       3      3        409   Admission Class
.PRHRRFPD  DIM       3      3        412   Referral Period (Cat RF)
.PRHRTACC  DIM       3      3        415   Type of Account/Claim (Cat ta)
.PRHRLVIS  DIM       8      8        418   Not Used
.PRHRACCI  DIM       1      1        426   Accident Indicator
.                                          0 or Blank = No
.                                          1 = Yes
.PRHRACPD  DIM       1      1        427   Account Paid
.                                          0 or Blank = No
.                                          1 = Yes
.PRHRBASS  DIM       1      1        428   Benefit Assigned Authorised
.                                          0 or Blank = No
.                                          1 = Yes
.PRHRISSC  DIM       3      3        429   IFC Issue Code (Cat ic)
.PRHRSTCD  DIM       3      3        432   Service Type Code (Cat st)
.PRHRFPID  DIM       40     40       435   Fund Payee ID
.PRHRRPER  DIM       2      2        475   Referral Period (months, 1-98)
.                                          (R-Justified)
.PRHRFIDI  DIM       1      1        477   Financial Interest Disclosure
.                                         Indicator
.                                           Blank or 0 = No
.                                           1 = Yes
.PRHRSPAR  DIM       27     27       478   Spare Variable
.
.End of Record                      505
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION PRIHREFD"
PRGID     INIT      "F13PRHRE"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0500:               * no
                          MAIN9000                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9000
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  MOVE      "No",USINGORC
          REP       "yYnN",USINGORC
          MOVE      USINGORC,KEY1
          REP       "Y-N-",KEY1
          MATCH     "-",KEY1
          GOTO      OPTN9200 IF NOT EQUAL
.
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
          MATCH     "Y",USINGORC
          IF        @EQUAL
            DISPLAY   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
          ENDIF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9200  DISPLAY   *P1:3,*EF,*P1:4," Oracle Option has not been set up ":
                          "correctly":
                    *P1:6," Program will terminate    - ";
          MOVE      "Oracle Option has not been set up correctly",ERORTEXT
          WRITE     LOGFILE,SEQ;*+,ERORTEXT
          CALL      HITENTER
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          MOVE      "prihreff",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat prihreff.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sprhreff.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat prihreff.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sprhreff.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "prihreff",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sprhreff",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "prihreff",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 505 UC1-8,9-14,15-24,25-27",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC96-96,1-8,9-14,15-24,25-27",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC9-14,15-24,25-27,1-8",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      PRIHREF1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY23,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.                                               * Pack key here
          PACK      PRHRDOCT,OLDRDOCT,SP70
          PACK      PRHRREFD,OLDRREFD,SP70
          PACK      KEY27,DPRHRUNQ,PRHRPRAC,PRHRDOCT,PRHRPIND,SP70
          CALL      WRPRHR1                    * write to new file
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PRIHREF1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sprhreff*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat prihreff.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  MOVE      "Error finding 'prihreff'.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"f13prhre.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"f13prhre.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "PRIHREFD"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,*EL,"Record No. :";
.
          CALL      SLOG0000                      * write start to log file
.
          OPEN      PRIHREF1,"prihreff"
.
          PACK      KEY27,SP70
          CALL      OFDUMYIO                      * position at start of file
OFIX0500  CALL      OFDUMYIO                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.         
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          CALL      OFDUMYIO
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     PRIHREF1
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Update completed ",CDATE,SP1,CTIMEIS:
                    *P1:24;
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
OFIX9999  RETURN
.
OFDUMYIO  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  RESET     KEY23
          READ      OLDFILE1,KEY23;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DPRHRUNQ,PRHRPRAC,OLDRDOCT,PRHRPIND:
                                  OLDRREFD,PRHRRDAT,PRHRREFT,DPRHRPIN,PRHRMESS:
                                  PRHRBULK,PRHRBCOD,PRHROCOD,PRHRUDF1,PRHRUDF2:
                                  PRHRUDF3,PRHRUDF4,PRHRNAME,PRHRADD1,PRHRADD2:
                                  PRHRADD3,PRHRADD4,PRHRPOST,PRHRTELP,PRHRTELB:
                                  PRHRMPHN,PRHRRELP,PRHRUNCL,PRHRADMN,PRHRRFPD:
                                  PRHRTACC,PRHRLVIS,PRHRACCI,PRHRACPD,PRHRBASS:
                                  PRHRISSC,PRHRSTCD,PRHRFPID,PRHRRPER,PRHRFIDI:
                                  PRHRSPAR
          GOTO      OVERCOND IF OVER
          MOVE      DPRHRUNQ,PRHRUNIQ
          MOVE      DPRHRPIN,PRHRPINV
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRPRHR1   RESET     KEY27
          MOVE      PRHRUNIQ,DPRHRUNQ
          MOVE      PRHRPINV,DPRHRPIN
          WRITE     PRIHREF1,KEY27;KEY27:
                                  PRHRREFD,PRHRRDAT,PRHRREFT,DPRHRPIN,PRHRMESS:
                                  PRHRBULK,PRHRBCOD,PRHROCOD,PRHRUDF1,PRHRUDF2:
                                  PRHRUDF3,PRHRUDF4,PRHRNAME,PRHRADD1,PRHRADD2:
                                  PRHRADD3,PRHRADD4,PRHRPOST,PRHRTELP,PRHRTELB:
                                  PRHRMPHN,PRHRRELP,PRHRUNCL,PRHRADMN,PRHRRFPD:
                                  PRHRTACC,PRHRLVIS,PRHRACCI,PRHRACPD,PRHRBASS:
                                  PRHRISSC,PRHRSTCD,PRHRFPID,PRHRRPER,PRHRFIDI:
                                  PRHRSPAR
          RETURN
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
          INC       STD001IO
