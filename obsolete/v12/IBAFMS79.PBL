. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS79                                             *
. * Desc      :   Create Consolidated Ledger Report                    *
. **********************************************************************
. * Date      :   10.05.1991                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.01  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS79
.             open files and initialise variables
.             WHILE user wants to change data DO
.                  get desired option
.                  allow user to modify option
.             END WHILE
.             IF user wants to post data
.                  THEN write data
.             END IF
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * FMS audit update variables
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSBPFFD/INC      
          INC       FMSCNSFD/INC       * consolidated ledger report
          INC       FMSLEVFD/INC       * level
          INC       FMSLMBFD/INC       * report code
          INC       FMSRSFFD/INC       * report seq
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
ISBUILD   INIT      "isbuild "         * define temp file variables
ISERASE   INIT      "iserase "
TMP0ADAT  INIT      " 3 U1-2"
NEZTMP0A  IFILE     SQL, FIXED=3, KEY="U1-2"
NAMEA     INIT      "neztmA"
FILENAMA  DIM       8
KILLTMPA  DIM       80
MAKETMPA  DIM       80
.                            * temp file definition
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
NEZALEDG  DIM       2      2        1     ledger code
.
.End of file                        3
.
DSIX      INIT      "6"
DSEVEN    INIT      "7"
DNINE     INIT      "9"
MAXITEMA  FORM      "15"     * maximum no. of items on screen A + 1
ZERO5     INIT      "00000"  * zero account seq/print position
.
ACCEPT    FORM      1        * accept mode (1=on)
CURPAGE   FORM      3        * current page number
DIM26     DIM       26       * dim 26
ITEMNUM   FORM      2        * item number
MORE      FORM      1        * more data (1=yes)
OPTIONA   FORM      2        * screen A selection keyin var
PAGENO    FORM      3        * current page number
SCRNO     FORM      1        * current screen number
SAVITEM   FORM      2        * item number for Screen A
SAVDLEDG  DIM       35       * consolidated ledger description
SAVDREPT  DIM       35       * report description
SAVLEDG   DIM       2        * consolidated ledger
SAVREPT   DIM       2        * report
SAVTYPE   FORM      1        * acct type
SKEY      DIM       35       * key save for Screen A
SKEY14    DIM       14
SKEY33    DIM       33
PFORM5    FORM      5
SFORM5    FORM      5
.
PRGID     INIT      "IBAFMS79"
PRGNAM    INIT      "Create Consolidated Ledger Report"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      OPTN0000
          BRANCH    EXIT,ML9999
          BRANCH    OPTION,ML0200,ML0400
.
ML0200    CALL      PROC0000           * keyin ledg/report
          BRANCH    EXIT,ML0100        * exit program
.
          MOVE      ONE,ACCEPT         * into accept mode
          CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML0300        * exit screen
.
          CALL      POST0000           * save data
.
ML0300    CLOSE     NEZTMP0A           * delete temp file
          EXECUTE   KILLTMPA,TASKID
          MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
          GOTO      ML0100
.
ML0400    CALL      PRNT0000           * Print all consolidated ledger
          GOTO      ML0100
.
ML9999    CHAIN     PGM
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD                     * display screen
          CALL      OUPD0000                     * open files for update procs
.
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening fmsbpfaf";
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmscnsaf";  * consolidated ledger 
          OPEN      FMSCNSA1,"fmscnsaf"
.
          DISPLAY   *P64:24,"fmsrsfaf";  * report seq
          OPEN      FMSRSFA1,"fmsrsfaf"
          OPEN      FMSRSFA3,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmslevaf";  * level
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmslmbaf";  * report code
          OPEN      FMSLMBA1,"fmslmbaf"
.
INIT9999  DISPLAY   *P1:24,*EF;
          RETURN
.
.******************************************************************************
.  OPTN - Keyin  option                          Called by ML
.******************************************************************************
.
OPTN0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Create Consolidated Ledgers":
                    *P1:6,*V2LON,"2",*HOFF," = Print Consolidated Ledgers"
.
OPTN1000  KEYIN     *P1:8,*EL,"Select Option : ",*V2LON,OPTION
          COMPARE   ZERO,OPTION
          GOTO      OPTN9000 IF EQUAL
          BRANCH    OPTION,OPTN9999,OPTN9999
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ONE,EXIT
.
OPTN9999  RETURN
                    
.**********************************************************************
.  PROC - keyin ledg/report                            Called By ML
.        Returns  - EXIT     (1=quit)
.                   SAVLEDG  (ledger)
.                   SAVREPT  (report)
.**********************************************************************
PROC0000  UNPACK    SP70,SAVLEDG,SAVDLEDG
          UNPACK    SP70,SAVREPT,SAVDREPT
          CALL      HEAD0000           * display screem
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          CALL      KLMAFM00           * read in ledger
          BRANCH    EXIT,PROC9500,PROC9500
          PACK      SAVLEDG,FMLALEDG,SP70
          PACK      SAVDLEDG,FMLADESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,SAVLEDG,*HOFF,SP2,SP10,SAVDLEDG;
.
PROC1000  MOVE      "28",CCOL
          MOVE      "5",CVERT
          CALL      KLMBFM00           * read in report
          BRANCH    EXIT,PROC0000,PROC9500
          PACK      SAVREPT,FMLBRPNO,SP70
          PACK      SAVDREPT,FMLBDESC,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,SAVREPT,*HOFF,SP2,SP10,SAVDREPT;
.
PROC9000  CALL      CLRF0000           * clear temp file
          MOVE      ZERO,EXIT          * continue
          GOTO      PROC9999
.
PROC9500  MOVE      ONE,EXIT           * quit
.
PROC9999  RETURN
.**********************************************************************
.  CLRF - clear temp file                              Called By PROC
.**********************************************************************
CLRF0000  PACK      FILENAMA,NAMEA,PORT,SP70     * set up and open temp file
          REP       " 0",FILENAMA
          PACK      MAKETMPA,ISBUILD,FILENAMA,TMP0ADAT
          PACK      KILLTMPA,ISERASE,FILENAMA
          EXECUTE   KILLTMPA,TASKID
          EXECUTE   MAKETMPA,TASKID
          OPEN      NEZTMP0A,FILENAMA
.
CLRF9999  RETURN
.******************************************************************************
.  HEAD - Display Screen A                       Called by SELA, redisps
.******************************************************************************
HEAD0000  MOVE      "0",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Consolidated Ledger  : ":
                    *V2LON,SAVLEDG,*HOFF,SP2,SP10,SAVDLEDG,*EL:
                    *P1:5,"    Report Code          : ",*EF;
.
HEAD9999  RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  MOVE      "1",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Consolidated Ledger  : ":
                    *V2LON,SAVLEDG,*HOFF,SP2,SP10,SAVDLEDG,*EL:
                    *P1:5,"    Report Code          : ":
                    *V2LON,SAVREPT,*HOFF,SP2,SP10,SAVDREPT,*EF:
                    *P28:7,*V2LON,"Ledgers to Consolidate":
                    *P1:8,*ULON,"Item",*P7:8,"Ledger";
.
SCRA9999  RETURN
.******************************************************************************
.  SELA - Perform Screen A                       Called By ML
.******************************************************************************
SELA0000  CALL      SCRA0000           * display Screen A
          MOVE      "0",ITEMNUM
          MOVE      "1",PAGENO
          BRANCH    ACCEPT,SELA5000    * in accept mode
.
SELA1000  CALL      DATA0000           * display data
.
          CALL      MQSA0000           * get desired action
          BRANCH    EXIT,SELA9000,SELA9500  * quit screen ?
          MOVE      SP70,SKEY
          LOAD      SKEY,OPTIONA,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                 ST8,ST9,ST10,ST11,ST12,ST13: 
                                 ST14,ST15,ST16,ST17
.
          PACK      KEY2,SKEY,SP70
          CALL      RDNEZA1
          BRANCH    OVRCD,SELA5000     * in insert mode ?
.
.---- modify mode (delete chosen record) ----
.
          CALL      DENEZA1            * delete old record
          CALL      DATA0000           * display data
.
.---- insert mode ----
.
SELA5000  ADD       ONE,ITEMNUM
          COMPARE   MAXITEMA,ITEMNUM
          CALL      ADDA0000 IF NOT LESS         * get first free position
          MOVE      "8",LINENO
          ADD       ITEMNUM,LINENO               * get lineno
          MOVE      ITEMNUM,SAVITEM
.
SELA6000  DISPLAY   *P1:LINENO,*V2LON,SAVITEM,DOT,*EL;
.
          MOVE      "7",CCOL
          MOVE      LINENO,CVERT
          CALL      KLMAFM00
          BRANCH    EXIT,SELA1000,SELA9500
          DISPLAY   *PCCOL:CVERT,FMLALEDG,SP2,FMLADESC;
          MATCH     FMLALEDG,SAVLEDG
          GOTO      SELA6100 IF EQUAL            * check if same as cur ledger
          PACK      KEY2,FMLALEDG
          UNPACK    KEY2,NEZALEDG
          CALL      RDNEZA1                      * check if ledger exists
          BRANCH    OVRCD,SELA6200
.
          DISPLAY   *P1:24,*B,*EF,"Ledger Already Allocated - ";
          CALL      HITENTER
          GOTO      SELA6000
.
SELA6100  DISPLAY   *P1:24,*B,*EF,"Ledger Identical to Consolidated Ledger - ";
          CALL      HITENTER
          GOTO      SELA6000
.
SELA6200  CALL      WRNEZA1
          MOVE      SAVITEM,ITEMNUM
          GOTO      SELA5000                * get more entries
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.******************************************************************************
.  DATA - display Screen A data                  Called By MQSA,SELA
.        Requires - PAGENO   (page to display)
.                   MAXITEMA (maximum no. of items per page + 1)
.         Returns - ITEMNUM  (number of data items displayed)
.                   ST1..ST17 (save keys for displayed data)
.                   MORE     (1=more data)
.         Uses    - CURPAGE  (page counter)
.                   LINENO   (line to display data)
.******************************************************************************
DATA0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17
          PACK      KEY2,SP70
          CALL      RSNEZA1                      * go to start of records
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
DATA1000  CALL      RKNEZA1                      * get next record
          BRANCH    OVRCD,DATA9000               * no more records ?
.
          ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMA,ITEMNUM
          GOTO      DATA2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATA2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATA1000 IF LESS             * not up to current page ?
          GOTO      DATA9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          MOVE      SP70,FMLADESC
          PACK      KEY2,NEZALEDG,SP70
          CALL      RDFMLA1                      * get cost code description
.
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT:
                    *P7:LINENO,NEZALEDG,SP2,FMLADESC;
          PACK      KEY2,NEZALEDG,SP70           * save key
          STORE     KEY2,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATA1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATA9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATA9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATA9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMA,ITEMNUM
          GOTO      DATA9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATA9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                    * no more data
          GOTO      DATA9999
.
.---- reached EOP before EOF ----
.
DATA9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMA,ITEMNUM
.
DATA9999  RETURN
.******************************************************************************
.  ADDA - get first blank position               Called By SELA
.******************************************************************************
ADDA0000  ADD       ONE,PAGENO         * try next page
          CALL      DATA0000           * display next page
.
          ADD       ONE,ITEMNUM        * get next item
          COMPARE   MAXITEMA,ITEMNUM
          GOTO      ADDA0000 IF NOT LESS  * at end of page
.
ADDA9999  RETURN
.******************************************************************************
.  MQSA - Main question for Screen A             Called By SELA
.******************************************************************************
MQSA0000  DISPLAY   *P1:24,"Select Item":        * display prompt
                    ", (",*V2LON,"R",*HOFF,")un Consolidation";
          MOVE      "32",CCOL
.
          COMPARE   ONE,MORE
          GOTO      MQSA1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQSA1000  COMPARE   PAGENO,ONE
          GOTO      MQSA2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQSA2000  DISPLAY   ", e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "12",CCOL
.
MQSA3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQSA4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQSA4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATA0000
          GOTO      MQSA0000
.
MQSA4000  COMPARE   PAGENO,ONE
          GOTO      MQSA5000 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQSA5000 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATA0000
          GOTO      MQSA0000
.
MQSA5000  MATCH     " X",DIM2          * exit
          GOTO      MQSA9700 IF EQUAL
.
          MATCH     " R",DIM2          * run consolidation
          GOTO      MQSA9500 IF EQUAL
.
          MOVE      ZERO,OPTIONA
          MOVE      DIM2,OPTIONA
          COMPARE   OPTIONA,ZERO
          GOTO      MQSA9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQSA3000           * get another option
.
MQSA9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQSA9999
.
MQSA9500  MOVE      ONE,EXIT           * exit
          GOTO      MQSA9999
.
MQSA9700  MOVE      TWO,EXIT           * run consolidation
.
MQSA9999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.**********************************************************************
POST0000  DISPLAY   *P1:24,"Running Consolidation : ",*EF;
POST0100  PACK      KEY6,SAVLEDG,SAVREPT,SP70
          CALL      RSFMCN1
          CALL      RKFMCN1
          BRANCH    OVRCD,POST0200
.
          MATCH     SAVLEDG,FMCNCLED
          GOTO      POST0200 IF NOT EQUAL
          MATCH     SAVREPT,FMCNREPT
          GOTO      POST0200 IF NOT EQUAL
.
          PACK      KEY6,FMCNCLED,FMCNREPT,FMCNLEDG
          CALL      DEFMCN1
          GOTO      POST0100
.
POST0200  PACK      KEY2,SP70
          CALL      RSNEZA1
.
POST1000  CALL      RKNEZA1
          BRANCH    OVRCD,POST9999     * no more ledgers left ?
          DISPLAY   *P25:24,*V2LON,NEZALEDG,*EF;
.
          PACK      DIM26,NEZALEDG,SAVREPT,SP70
.
POST2000  PACK      KEY26,DIM26,SP70
          CALL      RSFMRF3
          CALL      RKFMRF3
          BRANCH    OVRCD,POST4000     * no more accounts left ?
          MATCH     FMRFLED,NEZALEDG
          GOTO      POST4000 IF NOT EQUAL
          MATCH     FMRFREP,SAVREPT
          GOTO      POST4000 IF NOT EQUAL
          PACK      DIM26,FMRFLED,FMRFREP,FMRFPOS,FMRFSEQ,FMRFACC,SP70
          DISPLAY   *P25:24,*V2LON,FMRFLED,SLASH,FMRFACC,*EF;
.
          PACK      SKEY14,FMRFLED,FMRFACC,SP70
          CALL      WRIT0000
.
          MOVE      "99999",PFORM5
          MOVE      FMRFPOS,PFORM5
          REP       " 0",FMRFPOS
          MOVE      "99999",SFORM5
          MOVE      FMRFSEQ,SFORM5
          REP       " 0",FMRFSEQ
.
          PACK      SKEY33,SKEY14,Z70
.
POST3000  
          PACK      KEY33,SKEY33,SP70
          CALL      RSFMTC1
          CALL      RPFMTC1
          BRANCH    OVRCD,POST2000
          PACK      SKEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC,SP70
          MATCH     SKEY33,SKEY14
          GOTO      POST2000 IF NOT EQUAL
.
          MATCH     FMTCTLED,FMTCSLED            * make sure same ledger
          GOTO      POST3000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC,SP70
          UNPACK    KEY14,FMRFLED,FMRFACC
          UNPACK    SP70,FMRFPRT,FMRFCRP
          IF        SFORM5>0
            SUB       "1",SFORM5
            MOVE      SFORM5,FMRFSEQ
            REP       " 0",FMRFSEQ
          ELSE
            IF        PFORM5>0
              MOVE      "09000",FMRFSEQ
              SUB       "1",PFORM5
              MOVE      PFORM5,FMRFPOS
              REP       " 0",FMRFPOS
            ENDIF
          ENDIF
.
          CALL      WRIT0000
          GOTO      POST3000
.
POST4000  PACK      KEY6,SAVLEDG,SAVREPT,NEZALEDG
          MOVE      SAVLEDG,FMCNCLED
          MOVE      SAVREPT,FMCNREPT
          MOVE      NEZALEDG,FMCNLEDG
          MOVE      SP10,FMCNSPAR
          CALL      RAFMCN1
          COMPARE   ZERO,OVRCD
          GOTO      POST1000 IF EQUAL
.
          CALL      WRFMCN1
          GOTO      POST1000
POST9999  RETURN
.**********************************************************************
.  WRIT - Write Data                                    Called By POST
.**********************************************************************
WRIT0000  
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,WRIT9999     * current account not found ?
.
          MOVE      FMAMTYPE,SAVTYPE   * save account type
.
          PACK      KEY3,FMAMCLEV,SP70 * get next level
          MOVE      "999",FMAMCLEV
          CALL      RSFMLV1
          CALL      RKFMLV1
          MOVE      FMLVCODE,FMAMCLEV
.
          PACK      KEY14,SAVLEDG,FMAMACCT,SP70
          UNPACK    KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMAM1
          BRANCH    OVRCD,WRIT3000     * consolidated account exists ?
.
          MATCH     FMLVCODE,FMAMCLEV
          CALL      UPFMAM1 IF LESS    * update lev if higher than current lev
          GOTO      WRIT4000
.
WRIT3000  LOAD      FMAMTYPE,SAVTYPE,DSIX,DSIX,DSIX,DSIX,DSIX:
                                     DSIX,DSEVEN,DNINE,DNINE
          CALL      WRFMAM1            * add account
.
          PACK      KEY26,FMRFREP,FMRFPOS,FMRFSEQ,SAVLEDG,FMRFACC,SP70
          UNPACK    KEY26,FMRFREP,FMRFPOS,FMRFSEQ,FMRFLED,FMRFACC
          CALL      DEFMRF1
          CALL      WRFMRF1
.
WRIT4000  COMPARE   "7",SAVTYPE
          GOTO      WRIT9999 IF EQUAL  * fmstcfaf rec not required for headings
.
          PACK      KEY33,FMRFLED,FMRFACC,KEY14,SP70
          PACK      KEY28,FMRFLED,FMRFACC,KEY14,SP70
.
WRIT5000  
          CALL      RSFMTC2
          CALL      RKFMTC2
          BRANCH    OVRCD,WRIT6000
          PACK      KEY33,FMTCSLED,FMTCSACC,FMTCTLED,FMTCTACC,FMTCASEQ,SP70
          MATCH     KEY28,KEY33
          GOTO      WRIT6000 IF NOT EQUAL
.
          CALL      DEFMTC2
          GOTO      WRIT5000
.
WRIT6000  
          LOAD      FMTCPOST,SAVTYPE,ONE,ONE,ONE,ONE,ONE:
                                     ZERO,ZERO,ONE,ZERO
          MOVE      ZERO,FMTCADDT
          UNPACK    DIM26,FMRFLED
          MOVE      SP70,FMTCASEQ
....      LOAD      FMTCASEQ,FMTCPOST,FMRFSEQ
          PACK      KEY33,KEY14,FMTCASEQ,FMRFLED,FMRFACC,SP70
          UNPACK    KEY33,FMTCTLED,FMTCTACC,FMTCASEQ,FMTCSLED,FMTCSACC
.
          CALL      DEFMTC1
          CALL      WRFMTC1
.
          MOVE      FMTCTLED,TOTLEDG
          MOVE      FMTCTACC,TOTACCNT
          CALL      SETU0000           * write record for total account update
.
WRIT9999  RETURN
.******************************************************************************
.* SETU - write record for total account update                               *
.******************************************************************************
SETU0000  COMPARE   ONE,FMCOCALC
          GOTO      SETU9999 IF NOT EQUAL
.
          PACK      KEY14,TOTLEDG,TOTACCNT,SP70
          CALL      RDFMAM1            * account exists ?
          BRANCH    OVRCD,SETU9999
.
          PACK      KEY20,PORT,SP4,TOTLEDG,TOTACCNT
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      SETU9999 IF EQUAL
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
SETU9999  RETURN
.
.**********************************************************************
.  PRNT - Print Data                                    Called By ML
.**********************************************************************
.
PRNT0000  MOVE      SP2,SAVLEDG
          MOVE      SP2,SAVREPT
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          PACK      KEY6,SP70
          CALL      RSFMCN1
.
PRNT1000  CALL      RKFMCN1
          BRANCH    OVRCD,PRNT9000
.
          MATCH     SAVLEDG,FMCNLEDG
          GOTO      PRNT2000 IF EQUAL
          MATCH     SAVREPT,FMCNREPT
          GOTO      PRNT2000 IF EQUAL
.
          MOVE      FMCNCLED,SAVLEDG
          MOVE      FMCNREPT,SAVREPT
          DISPLAY   *P20:24,"Consolidated Ledger : ",SAVLEDG:
                         "   Report Code : ",SAVREPT
          CALL      HEADG000
.
PRNT2000  MOVE      SP70,FMLADESC
          PACK      KEY2,FMCNLEDG
          CALL      RDFMLA1 
.
          COMPARE   "56",CLNO
          CALL      HEADG0000 IF NOT LESS
.
          PRINT     *1,"!",*7,FMLALEDG,*15,"! ",FMLADESC,*80,"!"
          ADD       ONE,CLNO
          GOTO      PRNT1000
.
PRNT9000  CALL      UND80
.
PRNT9999  RETURN
.
.**********************************************************************
.  HEADG - Print Heading                                 Called By PRNT
.**********************************************************************
.
HEADG000  CALL      HEAD80
.
          MOVE      SP70,FMLADESC
          MOVE      SAVLEDG,KEY2
          CALL      RDFMLA1
.
          MOVE      SP70,FMLBDESC
          MOVE      SAVREPT,KEY2
          CALL      RDFMLB1
.
          PRINT     "Consolidated Ledger : ",SAVLEDG,"   ",FMLADESC,*N:
                    "Report Code         : ",SAVREPT,"   ",FMLBDESC,*N
          CALL      UND80
          PRINT     "! Ledger Code ! Ledger Description",*80,"!"
          CALL      UND80
          ADD       FOUR,CLNO
          RETURN

.
.**********************************************************************
. NEZTMP0A IO routines                           Called by Lots
.**********************************************************************
.
RSNEZA1   RESET     KEY2
          READ      NEZTMP0A,KEY2;;
          RETURN
.
RANEZA1   RESET     KEY2
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY2;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDNEZA1   RESET     KEY2
          MOVE      ZERO,OVRCD
          READ      NEZTMP0A,KEY2;NEZALEDG
          GOTO      OVERCOND IF OVER
          RETURN
.
RKNEZA1   MOVE      ZERO,OVRCD
          READKS    NEZTMP0A;NEZALEDG
          GOTO      OVERCOND IF OVER
          RETURN
.
RPNEZA1   MOVE      ZERO,OVRCD
          READKP    NEZTMP0A;NEZALEDG
          GOTO      OVERCOND IF OVER
          RETURN
.
UPNEZA1   UPDATE    NEZTMP0A;NEZALEDG
          RETURN
.
WRNEZA1   RESET     KEY2
          WRITE     NEZTMP0A,KEY2;NEZALEDG
          RETURN
.
DENEZA1   RESET     KEY2
          DELETE    NEZTMP0A,KEY2
          RETURN
.
.******************************************************************************
.  Redisplays
.******************************************************************************
RLMAFM00  
RLMBFM00  
          BRANCH    SCRNO,DISA0000
          CALL      HEAD0000
          GOTO      RXXXFM00
.
DISA0000  CALL      SCRA0000
          CALL      DATA0000
.
RXXXFM00  RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSBPFIO/INC
          INC       FMSCNSIO/INC       * consolidated ledger
          INC       FMSLEVIO/INC       * level
          INC       FMSLMBIO/INC       * report code
          INC       FMSRSFIO/INC       * report seq
.
          INC       FMSLMAKY           * ledger
          INC       FMSLMBKY           * report code
.
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * FMS audit update routines 
