. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS88                                             *
. * Desc      :   Install Balances                                     *
. **********************************************************************
. * Date      :   22.04.1991                                           *
. * Author    :   Neeriem Dye (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filename (FILENAM1).              *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.02  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit File date                           *
. * VF.00.01  23.12.1999 Sandra Barcham                                *
. *           Recompiled for FMSCCAFD                                  *
. *           srf 646145                                               *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS88
.             open files and initialise variables
.             read filenames from extraction file into a temp file
.             FOR each filename in temp file DO
.                  IF filename ok
.                       THEN open files according to extraction file name
.                            FOR each record in the extraction file DO
.                                 update data im data files
.                            END FOR
.                            delete filename
.                  END IF
.             END FOR
.             run total and budget updates
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUDADF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSCCAFD/INC
          INC       FMSCCCFD/INC
          INC       FMSLEVFD/INC
          INC       FMSRSFFD/INC
          INC       FMSSBAFD/INC
          INC       FMSSLBFD/INC
          INC       FMSSSCFD/INC
          INC       FMSTUPFD/INC
          INC       FMSXCSFD/INC
.
          INC       FMSFPSFD/INC       * period summary file
          INC       FMSHCAFD/INC       * extraction file
          INC       FMSLMCFD/INC       * ledger calendar file
          INC       FMSSMAFD/INC       * stats summary file
.
          INC       FMSAMAFD/INC
          INC       FMSBTYFD/INC
....      INC       FMSCHIFD/INC
          INC       FMSCONFD/INC
          INC       FMSLMAFD/INC
          INC       FMSTCFFD/INC
          INC       FMSBUDFD/INC
          INC       FMSSBUFD/INC
          INC       FMSBPFFD/INC
          INC       FMSLBUFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
.
. Data Definitions for FMSACCCD
. -----------------------------
DSIX      INIT      "6"
DSEVEN    INIT      "7"
DEIGHT    INIT      "8"
DNINE     INIT      "9"
.
ACCOUNT   DIM       12       * account code
COSTCODE  DIM       12       * cc code
CCLEV     DIM       3        * cc level
DELALL    FORM      1        * 1=delete to top of tree
DESC1     DIM       127
DIM1E     DIM       1
DIMA14    DIM       14       * params for CCON0000
DIMB14    DIM       14
DIMC5     DIM       5
DIMD35    DIM       35
DIME5     DIM       5
FILENAME  DIM       8        * filename
LBUNAME   DIM       8        * filename
LEDGER    DIM       2        * ledger
OLDADDT   DIM       12       * old add to account
OLDDCOST  FORM      1        * 1=use old cc data
OLDPPOS   DIM       5        * old print pos
OLDDSUBJ  FORM      1        * 1=use old subj data
OLDSTAT   FORM      2        * old status type
OPTIONF1  FORM      1        * Global Chosen Option
POSTACCT  DIM       12       * account
RECNO     FORM      8
RESTFMSA  DIM       14       * restore subjective key
SAVECCC   DIM       50       * field to ccc data
SAVEDATA  DIM       50       * field to save data
SFMTS01   DIM       43
SFMTS02   DIM       43
SFMTS03   DIM       43
SFMTS04   DIM       43
SFMTS05   DIM       43
SFMTS06   DIM       43
SFMTS07   DIM       43
SFMTS08   DIM       43
SFMTS09   DIM       43
SFMTS10   DIM       43
SKEY27    DIM       27
SKEY31    DIM       31       * key save
SKEY43    DIM       43       * key save
SKIPFMTU  FORM      1        * 1=no total account update req
SLBNAME   DIM       8        * filename
SUBJCODE  DIM       12       * subj code
TEMPACCT  DIM       12       * cc
TEMPCOST  DIM       12       * cc
TEMPCPOS  DIM       5        * cc print position
TEMPSPOS  DIM       5        * subj print position
TEMPSUBJ  DIM       12       * subj
TOTACCNT  DIM       12       * account
TOTLEDG   DIM       12       * ledger
UTYPE     INIT      "    "   * Update Type
WRECLEV   FORM      1        * must be set to zero
.
FMSTMP01  FILE      ASCII,FIXED=127     * temp file
FILENAM1  DIM       8
NAME1     INIT      "fms88A"
.
FMSPDAT   INIT      "644 U1-2,3-14 "
FMSSDAT   INIT      "295 U1-2,3-14 "
ISERASE   INIT      "iserase "
ISBUILD   INIT      "isbuild "
LSCMD1    INIT      "ls -1 "
LSCMD2    INIT      " | grep \.txt > "
TXT       INIT      ".txt"
.
FMSPYYYY  DIM       8
FMSPLLLL  DIM       8
FMSSYYYY  DIM       8
FMSSLLLL  DIM       8
.
FMSB      INIT      "fmsb"
FMSD      INIT      "fmsd"
FMSL      INIT      "fmsl"
FMSO      INIT      "fmso"
FMSP      INIT      "fmsp"
FMSR      INIT      "fmsr"
FMSS      INIT      "fmss"
FMST      INIT      "fmst"
.
BRFWD     FORM      12.5     * temp br fwd
BUDTYPE   DIM       4        * budget type for budget update
CHKAMT    FORM      12.5     * temp amount
DIM127    DIM       127      * full path name
FINYEAR   DIM       4        * financial year for total account update
FYEAR     DIM       4        * year
HISCODE   DIM       4        * history year/budget
HISFLAG   DIM       1        * history flag
HOSP      DIM       2        * hospital code
PERD      DIM       2        * period (string)
PERNO     FORM      2        * period (numeric)
PATH      DIM       50       * file with path
PATHLEN   FORM      3        * path length
TMPAMT    FORM      12.5     * temp amount
STRING    DIM       40       * parameter for routine RMTB
UPDATEOK  FORM      1        * perform update (1=yes)
ZYEAR     DIM       4        * year
.
LINKONLY  FORM      1
SKIPLAST  FORM      1
XKEY14    DIM       14
UNKNOWND  INIT      "**** UNKNOWN ****                  "
.
PRGID     INIT      "IBAFMS88"
PRGNAM    INIT      "Install Balances"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
          BRANCH    EXIT,ML9999
.
ML0100    CALL      OPTN0000
          BRANCH    EXIT,ML9999
.
          CALL      POST0000           * install data
          GOTO      ML0100
.
ML9999    PREP      FMSTMP01,FILENAM1
          CLOSE     FMSTMP01,DELETE
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD
          CALL      OUDA0000                 * Open budget audit files
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
.
          DISPLAY   *P64:24,"fmsbpfaf";
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsbtyaf";
          OPEN      FMSBTYA1,"fmsbtyaf"
.
          DISPLAY   *P64:24,"fmsccaaf";
          OPEN      FMSCCAA1,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmscccaf";
          OPEN      FMSCCCA1,"fmscccaf"
          OPEN      FMSCCCA2,"fmscccaf"
.
          DISPLAY   *P64:24,"fmslevaf";
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmsrsfaf";
          OPEN      FMSRSFA1,"fmsrsfaf"
          OPEN      FMSRSFA2,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmssbaaf";
          OPEN      FMSSBAA1,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmstcfaf";
          OPEN      FMSTCFA1,"fmstcfaf"
          OPEN      FMSTCFA2,"fmstcfaf"
.
          DISPLAY   *P64:24,"fmssscaf";
          OPEN      FMSSSCA1,"fmssscaf"
.
          DISPLAY   *P64:24,"fmstupaf";
          OPEN      FMSTUPA1,"fmstupaf"
          OPEN      FMSTUPA2,"fmstupaf"
          OPEN      FMSTUPA3,"fmstupaf"
.
          DISPLAY   *P64:24,"fmsxcsaf";
          OPEN      FMSXCSA1,"fmsxcsaf"
.
....      DISPLAY   *P64:24,"fmschia1";
....      OPEN      FMSCHIA1,"fmschiaf"
.
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
          PACK      KEY2,FMCOLLED,SP70
          CALL      RDFMLA1
.
          MOVE      OVRCD,EXIT
          COMPARE   ONE,OVRCD
          GOTO      INIT9999 IF NOT EQUAL
.
          DISPLAY   *P1:24,*B,*EF:
                    "FATAL ERROR - Consolidated Ledger Not Set Up - ";
          CALL      HITENTER
.
INIT9999  RETURN
.**********************************************************************
.  OPTN - Get Option                                   Called By ML
.        Returns  - EXIT     (1=exit program)
.**********************************************************************
OPTN0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTIONF1
          DISPLAY   *P1:4,*EF:
                    *P01:04,*V2LON,"1. ",*HOFF,"Print Accounts to be added":
                    *P01:05,*V2LON,"2. ",*HOFF,"Load New Data"
          KEYIN     *P01:07,"Select Option: ",OPTIONF1
.
          IF        OPTIONF1=0
            MOVE      ONE,EXIT
            GOTO      OPTN9999
          ENDIF
          IF        OPTIONF1<0 | OPTIONF1>2
            DISPLAY   *P1:24,*EL,*B,"Invalid Option.  ";
            CALL      HITENTER
            GOTO      OPTN0000
          ENDIF
.
OPTN9999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.        Returns  - EXIT     (1=exit program)
.**********************************************************************
POST0000  MOVE      ZERO,RECNO
          IF        OPTIONF1=1
            CALL      HEAD0000                   * print the heading
            DISPLAY   *P1:10,*EL,"Records Printed: ",*P18:10,RECNO
          ENDIF
          PACK      STRING,FMCOLDIR,SP70         * create temp file
          CALL      RMTB0000     * remove trailing blanks from load directory
          MOVELPTR  STRING,PATHLEN               * get path length
          ADD       ONE,PATHLEN                  * move to start of file name
          CLEAR     CMDLINE
          PACK      CMDLINE,LSCMD1,STRING,LSCMD2,FILENAM1,TXT
          EXECUTE   CMDLINE,TASKID
.
          MOVE      ONE,UPDATEOK                 * default to no update req
          OPEN      FMSTMP01,FILENAM1
.
POST1000  READ      FMSTMP01,SEQ;DIM127          * read filename
          GOTO      POST9000 IF OVER             * at end of file
.
          UNPACK    DIM127,HOSP,ZYEAR,PERD
          TYPE      ZYEAR                        * year is numeric ?
          GOTO      POST1000 IF NOT EQUAL
          TYPE      PERD                         * period is numeric ?
          GOTO      POST1000 IF NOT EQUAL
          MATCH     "14",PERD                    * period is < 14 ?
          GOTO      POST1000 IF NOT LESS
          MATCH     "01",PERD                    * period is >= 01 ?
          GOTO      POST1000 IF LESS
.
          PACK      DIM127,STRING,HOSP,ZYEAR,PERD,TXT
          CALL      OPEN0000                     * open data files
          BRANCH    EXIT,POST1000,POST9000
.
          MOVE      ZERO,UPDATEOK                * set to update req
          MOVE      ZYEAR,FYEAR
.
POST5000  CALL      RKFMHC1                      * get next record
          BRANCH    OVRCD,POST8000               * no more records ?
.
          IF        OPTIONF1=2
            DISPLAY   *P1:24,"Loading : ",*V2LON,PERD,SLASH,FYEAR,SP1:
                                          FMHCLEDG,SLASH,FMHCACCT,*EL;
          ENDIF
          CALL      WRIT0000                     * write data
          GOTO      POST5000
.
POST8000  CLOSE     FMSHCAA1                     * delete extraction file
          IF        OPTIONF1=2
            PREP      FMSHCAA1,DIM127
            CLOSE     FMSHCAA1
          ENDIF
          GOTO      POST1000                     * get next file
.
.---- perform updates if required ----
.
POST9000  BRANCH    OPTIONF1,POST9999
          BRANCH    UPDATEOK,POST9500
.
          DISPLAY   *P1:23,"About to Perform Actual and Budget Updates",*EF;
          CALL      CONTQST
          SUB       ONE,CEXIT
          BRANCH    CEXIT,POST9999,POST9999
.
          MOVE      FYEAR,FINYEAR
          DISPLAY   *P1:23,"Update for Year ",*V2LON,FINYEAR,*EF;
          MOVE      "IBAFMS90",PRGID
          PROC      FMSTU0000                    * perform update
.
          BRANCH    SKIPLAST,POST9100            * skip last year
.
          MOVE      FYEAR,F4
          SUB       ONE,F4
          MOVE      F4,FINYEAR
          DISPLAY   *P1:23,"Update for Year ",*V2LON,FINYEAR,*EF;
          PROC      FMSTU0000                    * perform update
.
POST9100  MOVE      FMCOLCBU,BUDTYPE
          DISPLAY   *P1:23,"Update for Budget ",*V2LON,BUDTYPE,*EF;
          MOVE      "IBAFMS85",PRGID
          CALL      UPBU0000                    * perform update
.
          BRANCH    SKIPLAST,POST9999            * skip last year
.
          MOVE      FMCOLLBU,BUDTYPE
          DISPLAY   *P1:23,"Update for Budget ",*V2LON,BUDTYPE,*EF;
          CALL      UPBU0000                    * perform update
          MOVE      "IBAFMS88",PRGID
          GOTO      POST9999
.
POST9500  DISPLAY   *P1:24,*B,*EF,"No Extraction Files Awaiting Processing - ";
          CALL      HITENTER
.
POST9999  IF        OPTIONF1=1
            PRINT     *N,"Total Records Printed: ",RECNO,*N:
                      "*****  End of Report  *****"
            DISPLAY   *P1:24,*EL,"Process Completed .. All Records printed.  ";
            CALL      HITENTER
          ENDIF
          RETURN
.**********************************************************************
.  HEAD - Heading for the report                        Called By POST
.**********************************************************************
HEAD0000  CALL      HEAD80
          PRINT     *N,"Items automatically created.",*N,*N:
                    "Ledger  Account Code",*N:
                    "-----   --------------------"
          ADD       "6",CLNO
.
HEAD9999  RETURN
.**********************************************************************
.  WRIT - Read data from extraction file                Called By POST
.        Requires - FMHCLEDG, FMSHCAAF record
.**********************************************************************
WRIT0000  MOVE      PERD,PERNO
.
          MOVE      UNKNOWND,FMAMDESC
          PACK      KEY14,FMHCLEDG,FMHCACCT,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            IF        OPTIONF1=2
              DISPLAY   *P1:24,*EF,"WARNING - Ledger/Account ":
                        FMHCLEDG,SLASH,FMHCACCT," Doesn't Exist ":
                        *V2LON,"**** Creating ****";
              CALL      XACC0000              * create account
              DISPLAY   *P1:24,*EL,"WARNING - Ledger/Account ":
                        FMHCLEDG,SLASH,FMHCACCT," has been created.  ";
            ELSE 
              IF        CLNO>57
                 CALL      HEAD0000
              ENDIF
              PRINT     *1,FMHCLEDG,*9,FMHCACCT
              ADD       "1",RECNO
              DISPLAY   *P18:10,*EL,RECNO
              ADD       "1",CLNO
              GOTO      WRIT9999              * Just Printing
            ENDIF
          ELSE 
            IF        OPTIONF1=1
              GOTO      WRIT9999              * Just Printing
            ENDIF
          ENDIF
.
.---- get data from current years budget ----
.
          PACK      KEY14,FMHCLEDG,FMHCACCT,SP70
          UNPACK    KEY14,FMBUCULD,FMBUCUAC
          CALL      CLBU0000                * clear budget data
          CALL      RDFMBU1
.
          LOAD      TMPAMT,PERNO,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12,FMBUCA13
          MOVE      FMHCCBUD,CHKAMT
          PACK      HISCODE,FMCOLCBU,SP70
          MOVE      "0",HISFLAG             * set for cash
          MOVE      ZERO,BRFWD              * no brought forward
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          STORE     TMPAMT,PERNO,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12,FMBUCA13
          STORE     TMPAMT,PERNO,FMBUCB01,FMBUCB02,FMBUCB03,FMBUCB04:
                                FMBUCB05,FMBUCB06,FMBUCB07,FMBUCB08:
                                FMBUCB09,FMBUCB10,FMBUCB11,FMBUCB12,FMBUCB13
          DIV       "1000",TMPAMT
          STORE     TMPAMT,PERNO,FMBUCC01,FMBUCC02,FMBUCC03,FMBUCC04:
                                FMBUCC05,FMBUCC06,FMBUCC07,FMBUCC08:
                                FMBUCC09,FMBUCC10,FMBUCC11,FMBUCC12,FMBUCC13
          CALL      RAFMBU1
          IF        OVRCD=1
            MOVE      ONE,AUDTTYPE
            CALL      WAFMBU00
            CALL      WRFMBU1
          ELSE
            CALL      UPBUD000               * Update file and audit
          ENDIF
.
.---- get data from last years budget ----
.
          BRANCH    SKIPLAST,WRIT3000       * skip last year
.
          PACK      KEY14,FMHCLEDG,FMHCACCT,SP70
          UNPACK    KEY14,FMBUCULD,FMBUCUAC
          CALL      CLBU0000                * clear budget data
          CALL      RDFMBU3
.
          LOAD      TMPAMT,PERNO,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12,FMBUCA13
          MOVE      FMHCLBUD,CHKAMT
          PACK      HISCODE,FMCOLLBU,SP70
          MOVE      "0",HISFLAG             * set for cash
          MOVE      ZERO,BRFWD              * no brought forward
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          STORE     TMPAMT,PERNO,FMBUCA01,FMBUCA02,FMBUCA03,FMBUCA04:
                                FMBUCA05,FMBUCA06,FMBUCA07,FMBUCA08:
                                FMBUCA09,FMBUCA10,FMBUCA11,FMBUCA12,FMBUCA13
          STORE     TMPAMT,PERNO,FMBUCB01,FMBUCB02,FMBUCB03,FMBUCB04:
                                FMBUCB05,FMBUCB06,FMBUCB07,FMBUCB08:
                                FMBUCB09,FMBUCB10,FMBUCB11,FMBUCB12,FMBUCB13
          DIV       "1000",TMPAMT
          STORE     TMPAMT,PERNO,FMBUCC01,FMBUCC02,FMBUCC03,FMBUCC04:
                                FMBUCC05,FMBUCC06,FMBUCC07,FMBUCC08:
                                FMBUCC09,FMBUCC10,FMBUCC11,FMBUCC12,FMBUCC13
          CALL      RAFMBU1
          IF        OVRCD=1
            MOVE      ONE,AUDTTYPE
            CALL      WAFMBU00
            CALL      WRFMBU1
          ELSE
            CALL      UPBUD000               * Update file and audit
          ENDIF
.
.---- get data from current years period summary ----
.
WRIT3000  MATCH     "8",FMAMTYPE
          GOTO      WRIT4000 IF NOT LESS    * statistical type ?
.
          PACK      KEY14,FMHCLEDG,FMHCACCT,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      CLFP0000           * clear period data
          CALL      RDFMFP1
.
          LOAD      TMPAMT,PERNO,FMFPC01,FMFPC02,FMFPC03,FMFPC04:
                                FMFPC05,FMFPC06,FMFPC07,FMFPC08:
                                FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
          MOVE      FMHCCCPE,CHKAMT
          PACK      HISCODE,ZYEAR,SP70
          MOVE      "0",HISFLAG             * set for cash
          MOVE      ZERO,BRFWD
          LOAD      BRFWD,PERNO,FMHCCCBR
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          MOVE      BRFWD,FMFPCBF
          MOVE      FMFPCBF,BRFWD
          MOVE      BRFWD,FMFPCBFD
          DIV       "1000",BRFWD
          MOVE      BRFWD,FMFPCBFT
.
          STORE     TMPAMT,PERNO,FMFPC01,FMFPC02,FMFPC03,FMFPC04:
                                FMFPC05,FMFPC06,FMFPC07,FMFPC08:
                                FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
          STORE     TMPAMT,PERNO,FMFPC01D,FMFPC02D,FMFPC03D,FMFPC04D:
                                FMFPC05D,FMFPC06D,FMFPC07D,FMFPC08D:
                                FMFPC09D,FMFPC10D,FMFPC11D,FMFPC12D,FMFPC13D
          DIV       "1000",TMPAMT
          STORE     TMPAMT,PERNO,FMFPC01T,FMFPC02T,FMFPC03T,FMFPC04T:
                                FMFPC05T,FMFPC06T,FMFPC07T,FMFPC08T:
                                FMFPC09T,FMFPC10T,FMFPC11T,FMFPC12T,FMFPC13T
.
          LOAD      TMPAMT,PERNO,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                                FMFPA05,FMFPA06,FMFPA07,FMFPA08:
                                FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
          MOVE      FMHCCAPE,CHKAMT
          PACK      HISCODE,ZYEAR,SP70
          MOVE      "1",HISFLAG             * set for accrual
          MOVE      ZERO,BRFWD
          LOAD      BRFWD,PERNO,FMHCCABR
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          MOVE      BRFWD,FMFPABF
          MOVE      FMFPABF,BRFWD
          MOVE      BRFWD,FMFPABFD
          DIV       "1000",BRFWD
          MOVE      BRFWD,FMFPABFT
.
          STORE     TMPAMT,PERNO,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                                FMFPA05,FMFPA06,FMFPA07,FMFPA08:
                                FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
          STORE     TMPAMT,PERNO,FMFPA01D,FMFPA02D,FMFPA03D,FMFPA04D:
                                FMFPA05D,FMFPA06D,FMFPA07D,FMFPA08D:
                                FMFPA09D,FMFPA10D,FMFPA11D,FMFPA12D,FMFPA13D
          DIV       "1000",TMPAMT
          STORE     TMPAMT,PERNO,FMFPA01T,FMFPA02T,FMFPA03T,FMFPA04T:
                                FMFPA05T,FMFPA06T,FMFPA07T,FMFPA08T:
                                FMFPA09T,FMFPA10T,FMFPA11T,FMFPA12T,FMFPA13T
          CALL      DEFMFP1
          CALL      WRFMFP1
.
.---- get data from last years period summary ----
.
          BRANCH    SKIPLAST,WRIT6000       * skip last year
.
          PACK      KEY14,FMHCLEDG,FMHCACCT,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      CLFP0000           * clear period data
          CALL      RDFMFP2
.
          LOAD      TMPAMT,PERNO,FMFPC01,FMFPC02,FMFPC03,FMFPC04:
                                FMFPC05,FMFPC06,FMFPC07,FMFPC08:
                                FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
          MOVE      FMHCLCPE,CHKAMT
          MOVE      ZYEAR,F4
          SUB       ONE,F4
          PACK      HISCODE,F4,SP70
          MOVE      "0",HISFLAG             * set for cash
          MOVE      ZERO,BRFWD
          LOAD      BRFWD,PERNO,FMHCLCBR
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          MOVE      BRFWD,FMFPCBF
          MOVE      FMFPCBF,BRFWD
          MOVE      BRFWD,FMFPCBFD
          DIV       "1000",BRFWD
          MOVE      BRFWD,FMFPCBFT
.
          STORE     TMPAMT,PERNO,FMFPC01,FMFPC02,FMFPC03,FMFPC04:
                                FMFPC05,FMFPC06,FMFPC07,FMFPC08:
                                FMFPC09,FMFPC10,FMFPC11,FMFPC12,FMFPC13
          STORE     TMPAMT,PERNO,FMFPC01D,FMFPC02D,FMFPC03D,FMFPC04D:
                                FMFPC05D,FMFPC06D,FMFPC07D,FMFPC08D:
                                FMFPC09D,FMFPC10D,FMFPC11D,FMFPC12D,FMFPC13D
          DIV       "1000",TMPAMT
          STORE     TMPAMT,PERNO,FMFPC01T,FMFPC02T,FMFPC03T,FMFPC04T:
                                FMFPC05T,FMFPC06T,FMFPC07T,FMFPC08T:
                                FMFPC09T,FMFPC10T,FMFPC11T,FMFPC12T,FMFPC13T
.
          LOAD      TMPAMT,PERNO,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                                FMFPA05,FMFPA06,FMFPA07,FMFPA08:
                                FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
          MOVE      FMHCLAPE,CHKAMT
          MOVE      ZYEAR,F4
          SUB       ONE,F4
          PACK      HISCODE,F4,SP70
          MOVE      "1",HISFLAG             * set for accrual
          MOVE      ZERO,BRFWD              * no brought forward
          LOAD      BRFWD,PERNO,FMHCLABR
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          MOVE      BRFWD,FMFPABF
          MOVE      FMFPABF,BRFWD
          MOVE      BRFWD,FMFPABFD
          DIV       "1000",BRFWD
          MOVE      BRFWD,FMFPABFT
.
          STORE     TMPAMT,PERNO,FMFPA01,FMFPA02,FMFPA03,FMFPA04:
                                FMFPA05,FMFPA06,FMFPA07,FMFPA08:
                                FMFPA09,FMFPA10,FMFPA11,FMFPA12,FMFPA13
          STORE     TMPAMT,PERNO,FMFPA01D,FMFPA02D,FMFPA03D,FMFPA04D:
                                FMFPA05D,FMFPA06D,FMFPA07D,FMFPA08D:
                                FMFPA09D,FMFPA10D,FMFPA11D,FMFPA12D,FMFPA13D
          DIV       "1000",TMPAMT
          STORE     TMPAMT,PERNO,FMFPA01T,FMFPA02T,FMFPA03T,FMFPA04T:
                                FMFPA05T,FMFPA06T,FMFPA07T,FMFPA08T:
                                FMFPA09T,FMFPA10T,FMFPA11T,FMFPA12T,FMFPA13T
          CALL      DEFMFP2
          CALL      WRFMFP2
          GOTO      WRIT6000
.
.---- get data from current years stat period summary ----
.
WRIT4000  PACK      KEY14,FMHCLEDG,FMHCACCT,SP70
          UNPACK    KEY14,FMSSLEDG,FMSSACCT
          CALL      CLSS0000                * clear stat data
          CALL      RDFMSS1
.
          LOAD      TMPAMT,PERNO,FMSSC1,FMSSC2,FMSSC3,FMSSC4:
                                FMSSC5,FMSSC6,FMSSC7,FMSSC8:
                                FMSSC9,FMSSC10,FMSSC11,FMSSC12,FMSSC13
          MOVE      FMHCCCPE,CHKAMT
          PACK      HISCODE,ZYEAR,SP70
          MOVE      "0",HISFLAG             * set for cash
          MOVE      ZERO,BRFWD              * no brought forward
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          STORE     TMPAMT,PERNO,FMSSC1,FMSSC2,FMSSC3,FMSSC4:
                                FMSSC5,FMSSC6,FMSSC7,FMSSC8:
                                FMSSC9,FMSSC10,FMSSC11,FMSSC12,FMSSC13
.
          LOAD      TMPAMT,PERNO,FMSSA1,FMSSA2,FMSSA3,FMSSA4:
                                FMSSA5,FMSSA6,FMSSA7,FMSSA8:
                                FMSSA9,FMSSA10,FMSSA11,FMSSA12,FMSSA13
          MOVE      FMHCCAPE,CHKAMT
          PACK      HISCODE,ZYEAR,SP70
          MOVE      "1",HISFLAG             * set for accrual
          MOVE      ZERO,BRFWD              * no brought forward
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          STORE     TMPAMT,PERNO,FMSSA1,FMSSA2,FMSSA3,FMSSA4:
                                FMSSA5,FMSSA6,FMSSA7,FMSSA8:
                                FMSSA9,FMSSA10,FMSSA11,FMSSA12,FMSSA13
          CALL      DEFMSS1
          CALL      WRFMSS1
.
.---- get data from last years stat period summary ----
.
          BRANCH    SKIPLAST,WRIT6000       * skip last year
.
          PACK      KEY14,FMHCLEDG,FMHCACCT,SP70
          UNPACK    KEY14,FMSSLEDG,FMSSACCT
          CALL      CLSS0000                * clear stat data
          CALL      RDFMSS2
.
          LOAD      TMPAMT,PERNO,FMSSC1,FMSSC2,FMSSC3,FMSSC4:
                                FMSSC5,FMSSC6,FMSSC7,FMSSC8:
                                FMSSC9,FMSSC10,FMSSC11,FMSSC12,FMSSC13
          MOVE      FMHCLCPE,CHKAMT
          MOVE      ZYEAR,F4
          SUB       ONE,F4
          PACK      HISCODE,F4,SP70
          MOVE      "0",HISFLAG             * set for cash
          MOVE      ZERO,BRFWD              * no brought forward
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          STORE     TMPAMT,PERNO,FMSSC1,FMSSC2,FMSSC3,FMSSC4:
                                FMSSC5,FMSSC6,FMSSC7,FMSSC8:
                                FMSSC9,FMSSC10,FMSSC11,FMSSC12,FMSSC13
.
          LOAD      TMPAMT,PERNO,FMSSA1,FMSSA2,FMSSA3,FMSSA4:
                                FMSSA5,FMSSA6,FMSSA7,FMSSA8:
                                FMSSA9,FMSSA10,FMSSA11,FMSSA12,FMSSA13
          MOVE      FMHCLAPE,CHKAMT
          MOVE      ZYEAR,F4
          SUB       ONE,F4
          PACK      HISCODE,F4,SP70
          MOVE      "1",HISFLAG             * set for accrual
          MOVE      ZERO,BRFWD              * no brought forward
          CALL      GHIS0000                * check if posted before
.
          MOVE      CHKAMT,TMPAMT
          STORE     TMPAMT,PERNO,FMSSA1,FMSSA2,FMSSA3,FMSSA4:
                                FMSSA5,FMSSA6,FMSSA7,FMSSA8:
                                FMSSA9,FMSSA10,FMSSA11,FMSSA12,FMSSA13
          CALL      DEFMSS2
          CALL      WRFMSS2
.
WRIT6000  
.
WRIT9999  RETURN
.**********************************************************************
.  GHIS - get history amount (if exists)               Called By WRIT
.        Requires - HISCODE  (year/budget code)
.                   HISFLAG  (0=cash/budget, 1=accrual)
.                   FMSHCAAF record
.                   CHKAMT   (current amount)
.        Returns  - CHKAMT   (amount)
.                   CURBF    (brought forward)
.**********************************************************************
GHIS0000  
....          MOVE      ZERO,FMHIAMBF
....          MOVE      ZERO,FMHIAM01
....          MOVE      ZERO,FMHIAM02
....          MOVE      ZERO,FMHIAM03
....          MOVE      ZERO,FMHIAM04
....          MOVE      ZERO,FMHIAM05
....          MOVE      ZERO,FMHIAM06
....          MOVE      ZERO,FMHIAM07
....          MOVE      ZERO,FMHIAM08
....          MOVE      ZERO,FMHIAM09
....          MOVE      ZERO,FMHIAM10
....          MOVE      ZERO,FMHIAM11
....          MOVE      ZERO,FMHIAM12
....          MOVE      ZERO,FMHIAM13
.....
....          PACK      KEY21,HISCODE,HOSP,FMHCLEDG,FMHCACCT,HISFLAG,SP70
....          UNPACK    KEY21,FMHICODE,FMHIHOSP,FMHILEDG,FMHIACCT,FMHIFLAG
....          CALL      RDFMHI1
....          BRANCH    OVRCD,GHIS1000
.....
....          LOAD      F12P5,PERNO,FMHIAM01,FMHIAM02,FMHIAM03,FMHIAM04:
....                                FMHIAM05,FMHIAM06,FMHIAM07,FMHIAM08:
....                                FMHIAM09,FMHIAM10,FMHIAM11,FMHIAM12,FMHIAM13
.....
....          STORE     CHKAMT,PERNO,FMHIAM01,FMHIAM02,FMHIAM03,FMHIAM04:
....                                FMHIAM05,FMHIAM06,FMHIAM07,FMHIAM08:
....                                FMHIAM09,FMHIAM10,FMHIAM11,FMHIAM12,FMHIAM13
....          SUB       F12P5,CHKAMT
.....
....          MOVE      ZERO,F12P5
....          LOAD      F12P5,PERNO,FMHIAMBF
....          STORE     BRFWD,PERNO,FMHIAMBF
....          SUB       F12P5,BRFWD
.....
....          CALL      UPFMHI1
....          GOTO      GHIS9999
.....
....GHIS1000  STORE     CHKAMT,PERNO,FMHIAM01,FMHIAM02,FMHIAM03,FMHIAM04:
....                                FMHIAM05,FMHIAM06,FMHIAM07,FMHIAM08:
....                                FMHIAM09,FMHIAM10,FMHIAM11,FMHIAM12,FMHIAM13
....          STORE     BRFWD,PERNO,FMHIAMBF
....          CALL      WRFMHI1
.....
GHIS9999  RETURN
.**********************************************************************
.  XACC - Create Account                               Called By WRIT
.**********************************************************************
XACC0000  PACK      XKEY14,KEY14,SP70            * save code
.
.---- try to link account ----
.
          UNPACK    XKEY14,FMAMLEDG,FMAMACCT
          PACK      LEDGER,FMAMLEDG,SP70
          PACK      ACCOUNT,FMAMACCT,SP70
          CALL      GCOD0000
          CALL      WREC0000
          PACK      KEY14,XKEY14,SP70
          CALL      RDFMAM1
          COMPARE   ZERO,OVRCD
          GOTO      XACC9999 IF EQUAL
.
.---- create new account ----
.
          UNPACK    XKEY14,FMAMLEDG,FMAMACCT
          MATCH     "1",FMHCTYPE
          GOTO      XACC0100 IF EQUAL
.
          MOVE      "1",FMAMTYPE                 * normal posting
          GOTO      XACC1000
.
XACC0100  MOVE      "8",FMAMTYPE                 * stat posting
.
XACC1000  MOVE      UNKNOWND,FMAMDESC
          UNPACK    SP70,FMAMSEC
          UNPACK    SP70,FMAMREF1,FMAMREF2
          UNPACK    SP70,FMAMREF3,FMAMREF4
          UNPACK    SP70,FMAMDAT1,FMAMDAT2
          UNPACK    SP70,FMAMDAT3,FMAMDAT4
          UNPACK    SP70,FMAMCOD1,FMAMCOD2
          UNPACK    SP70,FMAMCOD3,FMAMCOD4
          MOVE      ZERO,FMAMAMT1
          MOVE      ZERO,FMAMAMT2
          MOVE      ZERO,FMAMAMT3
          MOVE      ZERO,FMAMAMT4
          MOVE      ZERO,FMAMSTAT
          MOVE      ZERO,FMAMCTRL
          MOVE      ZERO,FMAMASST
          MOVE      ZERO,FMAMPPT
          MOVE      ZERO,FMAMONC
          MOVE      SP70,FMAMONCC
          UNPACK    SP70,FMAMCHEQ,FMAMBDAT
          MOVE      ZERO,FMAMOBAL
          MOVE      "2",FMAMDPLA
          MOVE      SP70,FMAMUNIT
          MOVE      "0",FMAMAYTD
          MOVE      "1",FMAMMULT
          MOVE      "1",FMAMDIV
          MOVE      "000",FMAMCLEV
          UNPACK    SP70,FMAMDPRO,FMAMSPAR,FMAMLOCK
          PACK      KEY14,FMAMLEDG,FMAMACCT
          CALL      WRFMAM1
          IF        OVRCD=1          
            DISPLAY   *P1:24,*EL,*B,"Could not Add Account ",FMHCLEDG,SLASH:
                      FMHCACCT,". Please add manually.  ";
            CALL      HITENTER
          ENDIF
.
XACC9999  RETURN
.**********************************************************************
.  CLBU - Clear data for budget file              Called By WRIT
.**********************************************************************
CLBU0000  MOVE      SP70,FMBUCUPR
          MOVE      ZERO,FMBUCA01
          MOVE      ZERO,FMBUCA02
          MOVE      ZERO,FMBUCA03
          MOVE      ZERO,FMBUCA04
          MOVE      ZERO,FMBUCA05
          MOVE      ZERO,FMBUCA06
          MOVE      ZERO,FMBUCA07
          MOVE      ZERO,FMBUCA08
          MOVE      ZERO,FMBUCA09
          MOVE      ZERO,FMBUCA10
          MOVE      ZERO,FMBUCA11
          MOVE      ZERO,FMBUCA12
          MOVE      ZERO,FMBUCA13
.
          MOVE      ZERO,FMBUCB01
          MOVE      ZERO,FMBUCB02
          MOVE      ZERO,FMBUCB03
          MOVE      ZERO,FMBUCB04
          MOVE      ZERO,FMBUCB05
          MOVE      ZERO,FMBUCB06
          MOVE      ZERO,FMBUCB07
          MOVE      ZERO,FMBUCB08
          MOVE      ZERO,FMBUCB09
          MOVE      ZERO,FMBUCB10
          MOVE      ZERO,FMBUCB11
          MOVE      ZERO,FMBUCB12
          MOVE      ZERO,FMBUCB13
.
          MOVE      ZERO,FMBUCC01
          MOVE      ZERO,FMBUCC02
          MOVE      ZERO,FMBUCC03
          MOVE      ZERO,FMBUCC04
          MOVE      ZERO,FMBUCC05
          MOVE      ZERO,FMBUCC06
          MOVE      ZERO,FMBUCC07
          MOVE      ZERO,FMBUCC08
          MOVE      ZERO,FMBUCC09
          MOVE      ZERO,FMBUCC10
          MOVE      ZERO,FMBUCC11
          MOVE      ZERO,FMBUCC12
          MOVE      ZERO,FMBUCC13
.
CLBU9999  RETURN
.**********************************************************************
.  CLFP - Clear data for period file              Called By WRIT
.**********************************************************************
CLFP0000  MOVE      ZERO,FMFPCBF
          MOVE      ZERO,FMFPC01
          MOVE      ZERO,FMFPC02
          MOVE      ZERO,FMFPC03
          MOVE      ZERO,FMFPC04
          MOVE      ZERO,FMFPC05
          MOVE      ZERO,FMFPC06
          MOVE      ZERO,FMFPC07
          MOVE      ZERO,FMFPC08
          MOVE      ZERO,FMFPC09
          MOVE      ZERO,FMFPC10
          MOVE      ZERO,FMFPC11
          MOVE      ZERO,FMFPC12
          MOVE      ZERO,FMFPC13
.
          MOVE      ZERO,FMFPABF
          MOVE      ZERO,FMFPA01
          MOVE      ZERO,FMFPA02
          MOVE      ZERO,FMFPA03
          MOVE      ZERO,FMFPA04
          MOVE      ZERO,FMFPA05
          MOVE      ZERO,FMFPA06
          MOVE      ZERO,FMFPA07
          MOVE      ZERO,FMFPA08
          MOVE      ZERO,FMFPA09
          MOVE      ZERO,FMFPA10
          MOVE      ZERO,FMFPA11
          MOVE      ZERO,FMFPA12
          MOVE      ZERO,FMFPA13
          MOVE      ZERO,FMFPCOM
          MOVE      ZERO,FMFPCOM2
          MOVE      ZERO,FMFPCOMD
          MOVE      ZERO,FMFPCOMT
.
CLFP9999  RETURN
.**********************************************************************
.  CLSS - Clear data for stat period file              Called By WRIT
.**********************************************************************
CLSS0000  MOVE      ZERO,FMSSC1
          MOVE      ZERO,FMSSC2
          MOVE      ZERO,FMSSC3
          MOVE      ZERO,FMSSC4
          MOVE      ZERO,FMSSC5
          MOVE      ZERO,FMSSC6
          MOVE      ZERO,FMSSC7
          MOVE      ZERO,FMSSC8
          MOVE      ZERO,FMSSC9
          MOVE      ZERO,FMSSC10
          MOVE      ZERO,FMSSC11
          MOVE      ZERO,FMSSC12
          MOVE      ZERO,FMSSC13
.
          MOVE      ZERO,FMSSA1
          MOVE      ZERO,FMSSA2
          MOVE      ZERO,FMSSA3
          MOVE      ZERO,FMSSA4
          MOVE      ZERO,FMSSA5
          MOVE      ZERO,FMSSA6
          MOVE      ZERO,FMSSA7
          MOVE      ZERO,FMSSA8
          MOVE      ZERO,FMSSA9
          MOVE      ZERO,FMSSA10
          MOVE      ZERO,FMSSA11
          MOVE      ZERO,FMSSA12
          MOVE      ZERO,FMSSA13
.
CLSS9999  RETURN
.**********************************************************************
.  OPEN - open desired files                           Called By POST
.        Requires - ZYEAR    (financial year)
.                   PERNO    (financial period)
.                   HOSP     (hospital code)
.                   DIM127   (extraction file)
.        Returns  - EXIT     (1=quit, 2=exit program)
.**********************************************************************
OPEN0000  PACK      FILENAME,FMSB,FMCOLCBU,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FILENAME,*EF;
          MOVE      ZERO,OVRCD              * open current years budget file
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA1,FILENAME
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OPEN1000 IF NOT EQUAL
.
          DISPLAY   " - ERROR - Budget File Not Found - ";
          CALL      HITENTER
          GOTO      OPEN9700
.
OPEN1000  PACK      KEY4,FMCOLLBU,SP70
          CALL      RDFMBT1
          MOVE      OVRCD,SKIPLAST          * skip last year ?
          BRANCH    SKIPLAST,OPEN2000
.
          PACK      FILENAME,FMSB,FMCOLLBU,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FILENAME,*EF;
          MOVE      ZERO,OVRCD              * open last years budget file
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA3,FILENAME
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OPEN2000 IF NOT EQUAL
.
          DISPLAY   " - ERROR - Budget File Not Found - ";
          CALL      HITENTER
          GOTO      OPEN9700
.
OPEN2000  PACK      FMSPYYYY,FMSP,ZYEAR,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FMSPYYYY,*EF;
          MOVE      ZERO,OVRCD              * open current years summary file
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,FMSPYYYY
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OPEN2100 IF NOT EQUAL   * file found ?
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,FMSPDAT,FMSPYYYY
          EXECUTE   CMDLINE,TASKID
          OPEN      FMSFPSA1,FMSPYYYY
.
OPEN2100  PACK      FMSSYYYY,FMSS,ZYEAR,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FMSSYYYY,*EF;
          MOVE      ZERO,OVRCD              * open current years stat sumry file
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA1,FMSSYYYY
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OPEN2200 IF NOT EQUAL   * file found ?
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,FMSSDAT,FMSSYYYY
          EXECUTE   CMDLINE,TASKID
          OPEN      FMSSMAA1,FMSSYYYY
.
OPEN2200  MOVE      ZYEAR,F4
          SUB       ONE,F4                  * get last year
.
          PACK      FMSPLLLL,FMSP,F4,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FMSPLLLL,*EF;
          MOVE      ZERO,OVRCD              * open last years summary file
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA2,FMSPLLLL
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OPEN2300 IF NOT EQUAL   * file found ?
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,FMSSDAT,FMSPLLLL
          EXECUTE   CMDLINE,TASKID
          OPEN      FMSFPSA2,FMSPLLLL
.
OPEN2300  PACK      FMSSLLLL,FMSS,F4,SP70
          REP       " 0",FILENAME
          DISPLAY   *P1:24,"Opening ",FMSSLLLL,*EF;
          MOVE      ZERO,OVRCD              * open last years stat sumry file
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA2,FMSSLLLL
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OPEN2400 IF NOT EQUAL   * file found ?
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,FMSSDAT,FMSSLLLL
          EXECUTE   CMDLINE,TASKID
          OPEN      FMSSMAA2,FMSSLLLL
.
.---- open extraction file ----
.
OPEN2400  MOVE      ZERO,OVRCD         * check if extraction file exists
          TRAP      OVERCOND IF IO
          DISPLAY   *P1:24,"Opening ",*+,DIM127,*EF;
          OPEN      FMSHCAA1,DIM127
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9500
.
.
OPEN9000  MOVE      ZERO,EXIT          * continue
          GOTO      OPEN9999
.
OPEN9500  MOVE      ONE,EXIT           * quit
          GOTO      OPEN9999
.
OPEN9700  MOVE      TWO,EXIT           * quit program
.
OPEN9999  RETURN
.**********************************************************************
.  RMTB - Remove trailing blanks                       Called By lots
.        Requires - STRING   (input string)
.        Returns  - STRING   (output string without trailing blanks)
.**********************************************************************
RMTB0000  PACK      STRING,STRING,SP70      * Ensure string filled to end
          ENDSET    STRING                  * Move form ptr to end of string
.
RMTB1000  CMATCH    SP1,STRING              * Quit loop if char pointed to by
          GOTO      RMTB9000 IF NOT EQUAL   *    form pointer is blank
.
          BUMP      STRING,-1               * Decrement form pointer
          GOTO      RMTB1000 IF NOT EOS     * Quit loop if form ptr = 1
.
          SETLPTR   STRING,ZERO             * Set form and length pointers to 0
          GOTO      RMTB9999                *    since we are at start of string
.                                           *    and exit routine
.
RMTB9000  LENSET    STRING                  * Set length pointer to form pointer
          RESET     STRING                  * Set form pointer to one
.
RMTB9999  RETURN
.**********************************************************************
.  UPBU - Perform Budget Update                        Called By lots
.**********************************************************************
UPBU0000  PROC      FMSBU000           * up date budget data
.
          CLOSE     FMSBUDA1
          CLOSE     FMSSBUA1
          CLOSE     FMSLBUA2
.
          PACK      FILENAME,FMSL,BUDTYPE,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,UPBU9999
.
          PACK      FILENAME,FMSL,BUDTYPE,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSBUA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,UPBU9999
.
          PACK      FILENAME,FMSL,BUDTYPE,SP70
          REP       " 0",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSLBUA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,UPBU9999
.
          MOVE      "1",LINKONLY
          PROC      FMSBB000           * update for budget links
.
UPBU9999  RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
.
          INC       PRCFMSBU           * budget update
          INC       PRCFMSTU           * total account update
          INC       FMSACCCD           * account creation
          INC       FMSUDACD
.
          INC       FMSFPSIO/INC       * period summary file
          INC       FMSHCAIO/INC       * extraction file
          INC       FMSLMCIO/INC       * ledger calendar file
          INC       FMSSMAIO/INC       * stats summary file
.
          INC       FMSAMAIO/INC
          INC       FMSBTYIO/INC
....      INC       FMSCHIIO/INC
          INC       FMSLMAIO/INC
          INC       FMSTCFIO/INC
          INC       FMSBUDIO/INC
          INC       FMSSBUIO/INC
          INC       FMSBPFIO/INC
          INC       FMSCONIO/INC
.
          INC       FMSCCAIO/INC
          INC       FMSCCCIO/INC
          INC       FMSLEVIO/INC
          INC       FMSLBUIO/INC
          INC       FMSRSFIO/INC
          INC       FMSSBAIO/INC
          INC       FMSSLBIO/INC
          INC       FMSSSCIO/INC
          INC       FMSTUPIO/INC
          INC       FMSXCSIO/INC
.
          INC       PRCFMSBB
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
