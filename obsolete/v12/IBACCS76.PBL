.------------------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V10.03.01 08.03.2013 Sandra Barcham 281021
.           Stop unpacking into SP70
.-------------------------------------------------------
. V9.02.00  04.07.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from r5.09
.------------------------------------------------------------------------------
. V5.04.04  01.11.1993 B.G.Ackland
.           Change "Procedure" to Patient Service
.------------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBACCS76
.   Function      :   Actual - Patient Service Cost Generation
.   Generated  On :   08/03/2013
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       CCSCALFD/INC
          INC       CCSCTYFD/INC
          INC       CCSDCOFD/INC
          INC       CCSDPTFD/INC
          INC       CCSGNCFD/INC
          INC       CCSMSCFD/INC
          INC       CCSMTSFD/INC
          INC       CCSPCDFD/INC
          INC       CCSPDPFD/INC
          INC       CCSPSDFD/INC
          INC       CCSPVRFD/INC
          INC       CCSSDCFD/INC
          INC       CCSTMPDF    
.=========================
.Local Variable Definition
.-------------------------
PROCYEAR  DIM       4 * Scr 00 Fld     2
PROCPER   DIM       2 * Scr 00 Fld     3
FLAGALL   FORM      1 * Scr 00 Fld     7
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBACCS76"
PRGNAM    INIT      "Actual - Patient Service Cost Generation"
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      INITDATE
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA1,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA2,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccscalaf";
          OPEN      CCSCALA3,"ccscalaf"
          DISPLAY   *P56:24,"Opening ccsctyaf";
          OPEN      CCSCTYA1,"ccsctyaf"
          DISPLAY   *P56:24,"Opening ccsctyaf";
          OPEN      CCSCTYA2,"ccsctyaf"
          DISPLAY   *P56:24,"Opening ccsdcoaf";
          OPEN      CCSDCOA1,"ccsdcoaf"
          DISPLAY   *P56:24,"Opening ccsdcoaf";
          OPEN      CCSDCOA2,"ccsdcoaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA1,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA2,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA3,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsdptaf";
          OPEN      CCSDPTA4,"ccsdptaf"
          DISPLAY   *P56:24,"Opening ccsgncaf";
          OPEN      CCSGNCA1,"ccsgncaf"
          DISPLAY   *P56:24,"Opening ccsmscaf";
          OPEN      CCSMSCA1,"ccsmscaf"
          DISPLAY   *P56:24,"Opening ccsmtsaf";
          OPEN      CCSMTSA1,"ccsmtsaf"
          DISPLAY   *P56:24,"Opening ccspcdaf";
          OPEN      CCSPCDA1,"ccspcdaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA1,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA2,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA3,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspdpaf";
          OPEN      CCSPDPA4,"ccspdpaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA1,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA2,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspsdaf";
          OPEN      CCSPSDA3,"ccspsdaf"
          DISPLAY   *P56:24,"Opening ccspvraf";
          OPEN      CCSPVRA1,"ccspvraf"
          DISPLAY   *P56:24,"Opening ccspvraf";
          OPEN      CCSPVRA2,"ccspvraf"
          DISPLAY   *P56:24,"Opening ccssdcaf";
          OPEN      CCSSDCA1,"ccssdcaf"
          DISPLAY   *P56:24,"Opening ccssdcaf";
          OPEN      CCSSDCA2,"ccssdcaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Patient Service Cost Allocation    
          ENDIF
          RETURN
.--------------------------------
. Screen - Patient Service Cost Allocation    
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Patient Service Cost Allocation    
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,PROCYEAR
          MOVE      SP70,PROCPER 
          MOVE      ZERO,FLAGALL 
          MOVE      SP70,CCCADES 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Patient Service Cost Allocation    
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Patient Service Cost Allocation    
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Patient Service Cost Allocation    
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Patient Service Cost Allocation    
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Patient Service Cost Allocation    
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L101,PS00L102,PS00L999:
                            PS00L999,PS00L999,PS00L103,PS00L999:
                           PS00L104,PS00L999,PS00L999
          GOTO     PS00L999
.
PS00L101
          MOVE      PROCYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      PROCPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FLAGALL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      CCCADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Patient Service Cost Allocation    
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L103,SF00L104,SF00L006,SF00L006:
                           SF00L006,SF00L105,SF00L106
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L101,SF00L102,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                           SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      CCCACL00
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCCCAB00
          MOVE      CCCAYEAR,PROCYEAR
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      PROCYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L102
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CCCADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      PROCPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CCCADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL      PROC0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L105
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L106
          CALL      SUMM0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.-----------------------------------------------
. Date Initialization for KEYDATE/NEWDATE
.-----------------------------------------------
INITDATE
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          RETURN
.
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
.-----------------------------------------------
. Clinical Costing Clear Fields for Keyin Year
.-----------------------------------------------
CCCACL00  MOVE      SP70,CCCAYEAR
          MOVE      SP70,CCCAPER
          RETURN
.
.----------------------------------------
. Enter Costing Period
.----------------------------------------
EPERD000  MOVE      ZERO,CKEYTYP
          CALL      KCCCAA00
          BRANCH    EXIT,EPERD900
          MOVE      CCCAPER,PROCPER
          GOTO      EPERD999
.
EPERD900  MOVE      ZERO,EXIT
          MOVE      "All Periods",CCCADES
          MOVE      SP70,PROCPER
EPERD999  RETURN
.----------------------------------------------------
. Program - Patient Service Cost Allocation
.----------------------------------------------------
. Calculate Cost per Patient Service (RV = Relative Value)
.   Direct Department Cost Type Loop
.     Get Period Total For This Cost Type this Department
.       Move Zero to RV total
.       Patient Service RV Loop
.         RV Total = RV Total + (Patient Service RV * Total Quantity)
.       Next Patient Service RV
.
.     Cost per RV = Cost Type Period Total / RV Total
.       Patient Service RV Loop
.         Patient Service Cost= Pat. Serv. Cost + (Pat. Serv. RV * Cost per RV)
.         Update Patient Service Cost
.         Update Patient Service Cost Component Summary
.       Next Patient Service RV
.
.   Next Department Cost Type
.----------------------------------------
.  Mainline Code
.----------------------------------------
PROC0000  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          MATCH     SP70,PROCPER
          GOTO      PROC8000 IF NOT EQUAL
.
          PACK      KEY6,PROCYEAR,SP70
          CALL      RSCCCA1
PROC1000  CALL      RKCCCA1
          BRANCH    OVRCD,PROC9000
          MATCH     CCCAYEAR,PROCYEAR
          GOTO      PROC9000 IF NOT EQUAL
          MOVE      CCCAPER,PROCPER
          DISPLAY   *P1:24,*EL,"Period ",PROCPER," Calculating : ";
          CALL      CALC0000    * Allocate Patient Service Costs
          GOTO      PROC1000
.
PROC8000  DISPLAY   *P1:24,*EL,"Period ",PROCPER," Calculating : ";
          CALL      CALC0000    * Allocate Patient Service Costs
.
PROC9000  CALL      SUMM0000    * Summarize Patient Service Details
          CALL      MESSAGE3
          RETURN
.----------------------------------------
. Calculate Patient Service Costs
.----------------------------------------
CALC0000  PACK     KEY10,SP70
          CALL     RSCCDP1
.
. Department Loop
.-----------------
CALC1000  CALL     RKCCDP1          * Process Each Departments
          BRANCH   OVRCD,CALC9999
          MATCH    "1",CCDPDTY      * Ignore Indirect Departments
          GOTO     CALC1000 IF EQUAL
.
          DISPLAY  *P40:24,CCDPHCD,"/",CCDPDPT
.
          CALL     CLRDPT00
.
          PACK     KEY20,CCDPHCD,CCDPDPT,PROCYEAR,PROCPER,SP70
          CALL     RSCCDC1
.
. Cost Type Loop
.------------------
CALC2000  CALL     RKCCDC1          * For This Department/This Period
          BRANCH   OVRCD,CALC1000
          MATCH    CCDCHCD,CCDPHCD
          GOTO     CALC1000 IF NOT EQUAL
          MATCH    CCDCDPT,CCDPDPT
          GOTO     CALC1000 IF NOT EQUAL
          MATCH    CCDCYEAR,PROCYEAR
          GOTO     CALC1000 IF NOT EQUAL
          MATCH    CCDCPER,PROCPER
          GOTO     CALC1000 IF NOT EQUAL
.
          MOVE     ZERO,DIRRVI             * Zero Total Relative Value
          MOVE     ZERO,INDRVI             * Zero Total Relative Value
          PACK     KEY18,CCDCHCD,CCDCDPT,SP70
          CALL     RSCCPD1
CALC3000  CALL     RKCCPD1                   * Calculate Total RVI
          BRANCH   OVRCD,CALC4000
          MATCH    CCDCHCD,CCPDHCD
          GOTO     CALC4000 IF NOT EQUAL
          MATCH    CCDCDPT,CCPDDPT
          GOTO     CALC4000 IF NOT EQUAL
.
          PACK     KEY22,CCPDHCD,CCPDDPT,CCPDPCD,CCDCCTY
          CALL     RDCCPV1
          IF       OVRCD=1
            MOVE     ZERO,CCPVRVI
          ENDIF
.
          IF       ((CCPVRVI=0)&(CCPDRVI=0))
            GOTO      CALC3000
          ENDIF
          PACK     KEY24,CCPDHCD,CCPDDPT,PROCYEAR,PROCPER,CCPDPCD
          CALL     RDCCPS1
          BRANCH   OVRCD,CALC3000
.
          ASSIGN   DIRRVI+(CCPVRVI*CCPSQTY),DIRRVI
          ASSIGN   INDRVI+(CCPDRVI*CCPSQTY),INDRVI
          GOTO     CALC3000
.
CALC4000  ASSIGN   CCDCDIR/DIRRVI,DRVICOST   * Direct Cost per Relative Value
          ASSIGN   CCDCIND/INDRVI,IRVICOST   * Indirect Cost per Relative Value
.
. Loop to Update Patient Service Costs
.-------------------------------
          PACK     KEY24,CCDCHCD,CCDCDPT,PROCYEAR,PROCPER,SP70
          CALL     RSCCPS1
.
CALC5000  CALL     RKCCPS1
          BRANCH   OVRCD,CALC2000
          MATCH    CCPSHCD,CCDCHCD
          GOTO     CALC2000 IF NOT EQUAL
          MATCH    CCPSDPT,CCDCDPT
          GOTO     CALC2000 IF NOT EQUAL
          MATCH    CCPSYEAR,PROCYEAR
          GOTO     CALC2000 IF NOT EQUAL
          MATCH    CCPSPER,PROCPER
          GOTO     CALC2000 IF NOT EQUAL
.
          PACK     KEY18,CCPSHCD,CCPSDPT,CCPSPCD
          CALL     RDCCPD1
          IF       OVRCD=1
            MOVE     ZERO,CCPDRVI
            MOVE     ZERO,CCPDSTC
          ENDIF
.
          PACK     KEY22,CCPSHCD,CCPSDPT,CCPSPCD,CCDCCTY
          CALL     RDCCPV1
          IF       OVRCD=1
            MOVE     ZERO,CCPVRVI
          ENDIF
          IF       ((CCPVRVI=0)&(CCPDRVI=0))
            GOTO      CALC5000
          ENDIF
.
. Budget/Actual Cost Calculation
.--------------------------------
          ASSIGN    CCPSCST+(CCPVRVI*DRVICOST)+(CCPDRVI*IRVICOST),CCPSCST
          MOVE      CCPDSTC,CCPSSCT  * Update Standard with Current Cost
          CALL      UPCCPS1
.
          PACK      KEY28,CCDCHCD,CCDCDPT,PROCYEAR,PROCPER,CCPSPCD,CCDCCTY
          UNPACK    KEY28,CCPCHCD,CCPCDPT,CCPCYEAR,CCPCPER,CCPCPCD,CCPCCTY
          ASSIGN    (CCPVRVI*DRVICOST)+(CCPDRVI*IRVICOST),CCPCCST
.
          COMPARE   ZERO,CCPCCST
          GOTO      CALC5000 IF EQUAL
.
          IF        CCPDRVI*IRVICOST=0
            MOVE      CCPVRVI,CCPCRVI
          ELSE
            IF        CCPVRVI*DRVICOST=0
              MOVE      CCPDRVI,CCPCRVI
            ELSE
              ASSIGN    CCPDRVI+CCPVRVI,CCPCRVI
            ENDIF
          ENDIF
.
          CALL      RACCPC1
          IF        OVRCD=0
            CALL      UPCCPC1
          ELSE
            CALL      WRCCPC1
          ENDIF
          GOTO      CALC5000
.
CALC9999  RETURN
.
CLRDPT00  PACK      KEY24,CCDPHCD,CCDPDPT,PROCYEAR,PROCPER,SP70
          PACK      KEY16,CCDPHCD,CCDPDPT,PROCYEAR,PROCPER,SP70
          CALL      RSCCPS1
CLRDPT10  CALL      RKCCPS1
          BRANCH    OVRCD,CLRDPT50
          PACK      KEY24,CCPSHCD,CCPSDPT,CCPSYEAR,CCPSPER,SP70
          MATCH     KEY16,KEY24
          GOTO      CLRDPT50 IF NOT EQUAL
          MOVE      ZERO,CCPSCST * Cost
          MOVE      ZERO,CCPSBCT * Spare Variables
          MOVE      ZERO,CCPSFBU * Spare Variables
          MOVE      ZERO,CCPSBQT * Spare Variables
          MOVE      ZERO,CCPSSCT * Standard Cost
          MOVE      ZERO,CCPSCHG * Charges
          CALL      UPCCPS1
          GOTO      CLRDPT10
.
CLRDPT50  PACK      KEY28,CCDPHCD,CCDPDPT,PROCYEAR,PROCPER,SP70
          PACK      KEY16,CCDPHCD,CCDPDPT,PROCYEAR,PROCPER,SP70
          CALL      RSCCPC1
CLRDPT60  CALL      RKCCPC1
          BRANCH    OVRCD,CLRDPT99
          PACK      KEY28,CCPCHCD,CCPCDPT,CCPCYEAR,CCPCPER,CCPCPCD,CCPCCTY
          MATCH     KEY16,KEY28
          GOTO      CLRDPT99 IF NOT EQUAL
          CALL      DECCPC1
          CALL      RSCCPC1
          GOTO      CLRDPT60
CLRDPT99  RETURN
.--------------------------------------------------------------------------
. Generate Annual Summary Information for Patient Service (ccsmts & ccsmsc)
.--------------------------------------------------------------------------
SUMM0000  DISPLAY   *P1:24,*EL,"Generating Annual Summary Files"
.
          CALL      CLRSUM00   * Clear Summary File
.
. Calculate Annual Department/Patient Service Unit Costs
.------------------------------------------------------------
          DISPLAY   *P40:24,"Processing : "
          MOVE      ZERO,SECTOR
          PACK      KEY18,SP70
          CALL      RSCCPD1
SUMM1000  CALL      RKCCPD1
          BRANCH    OVRCD,SUMM5000
          ADD       ONE,SECTOR
          IF        (SECTOR%50=0)
            DISPLAY   *P53:24,*V2LON,SECTOR
          ENDIF
          PACK      KEY26,PROCYEAR,SP4,CCPDHCD,CCPDDPT,CCPDPCD,SP70
          UNPACK    KEY26,CCMTYEAR,CCMTCOM,CCMTHCD,CCMTDPT,CCMTPCD
          CALL      RDCCMT1
          MOVE      ZERO,CCMTQTY
          MOVE      ZERO,CCMTUCT
          MOVE      ZERO,CCMTCST
          IF        OVRCD=1
            MOVE      ZERO,CCMTFIX
            MOVE      ZERO,CCMTFUC
          ENDIF
.
          PACK      KEY22,CCPDHCD,CCPDDPT,CCPDPCD,PROCYEAR,SP70
          PACK      KEY24,CCPDHCD,CCPDDPT,CCPDPCD,PROCYEAR,SP70
          CALL      RSCCPS2
SUMM2000  CALL      RKCCPS2
          BRANCH    OVRCD,SUMM2900
          PACK      KEY24,CCPSHCD,CCPSDPT,CCPSPCD,CCPSYEAR,CCPSPER
          MATCH     KEY22,KEY24
          GOTO      SUMM2900 IF NOT EQUAL
          ADD       CCPSQTY,CCMTQTY
          ASSIGN    CCMTUCT+(CCPSQTY*CCPSCST),CCMTUCT
          GOTO      SUMM2000
SUMM2900  MOVE      CCMTUCT,CCMTCST
          IF        CCMTQTY=0
            MOVE      ZERO,CCMTUCT
          ELSE
            DIV       CCMTQTY,CCMTUCT
          ENDIF
          PACK      KEY26,PROCYEAR,SP4,CCPDHCD,CCPDDPT,CCPDPCD,SP70
          UNPACK    KEY26,CCMTYEAR,CCMTCOM,CCMTHCD,CCMTDPT,CCMTPCD
          CALL      RACCMT1
          IF        OVRCD=0
            CALL      UPCCMT1
          ELSE
            CALL      WRCCMT1
          ENDIF
          GOTO      SUMM1000
.
. Calculate Generic Patient Service Costs
.------------------------------------------------------------
SUMM5000  PACK      KEY10,SP70
          CALL      RSCCGN1
SUMM6000  CALL      RKCCGN1
          BRANCH    OVRCD,SUMM9000
          ADD       ONE,SECTOR
          IF        (SECTOR%50=0)
            DISPLAY   *P53:24,*V2LON,SECTOR
          ENDIF
.
          PACK      KEY18,PROCYEAR,SP4,CCGNHCD,CCGNGPC,SP70
          CALL      RDCCMS1
          MOVE      ZERO,CCMSQTY
          MOVE      ZERO,CCMSUCT
          MOVE      ZERO,CCMSCST
          PACK      KEY18,CCGNGPC,CCGNHCD,SP70
          CALL      RSCCPD3
SUMM6100  CALL      RKCCPD3
          BRANCH    OVRCD,SUMM6900
          MATCH     CCGNGPC,CCPDPCD
          GOTO      SUMM6900 IF NOT EQUAL
          MATCH     CCGNHCD,CCPDHCD
          GOTO      SUMM6900 IF NOT EQUAL
.
. Calculate Summary Details
.----------------------------
          PACK      KEY22,CCPDHCD,CCPDDPT,CCPDPCD,PROCYEAR,SP70
          PACK      KEY24,CCPDHCD,CCPDDPT,CCPDPCD,PROCYEAR,SP70
          CALL      RSCCPS2
SUMM6200  CALL      RKCCPS2
          BRANCH    OVRCD,SUMM6100
          PACK      KEY24,CCPSHCD,CCPSDPT,CCPSPCD,CCPSYEAR,CCPSPER
          MATCH     KEY22,KEY24
          GOTO      SUMM6100 IF NOT EQUAL
.
          ADD       CCPSQTY,CCMSQTY
          ASSIGN    CCMSUCT+(CCPSQTY*CCPSCST),CCMSUCT
          GOTO      SUMM6200
.
SUMM6900  MOVE      CCMSUCT,CCMSCST
          IF        CCMSQTY=0
            MOVE      ZERO,CCMSUCT
          ELSE
            DIV       CCMSQTY,CCMSUCT
          ENDIF
          PACK      KEY18,PROCYEAR,SP4,CCGNHCD,CCGNGPC,SP70
          UNPACK    KEY18,CCMSYEAR,CCMSCOM,CCMSHCD,CCMSPCD
          CALL      RACCMS1
          IF        OVRCD=0
            CALL      UPCCMS1
          ELSE
            MOVE      ZERO,CCMSFIX
            MOVE      ZERO,CCMSFUC
            CALL      WRCCMS1
          ENDIF
          GOTO      SUMM6000
.
SUMM9000
SUMM9999  RETURN
.
CLRSUM00  PACK      KEY26,PROCYEAR,SP4,SP70
          CALL      RSCCMT1
CLRSUM10  CALL      RKCCMT1
          BRANCH    OVRCD,CLRSUM40
          MATCH     PROCYEAR,CCMTYEAR
          GOTO      CLRSUM40 IF NOT EQUAL
          MATCH     SP4,CCMTCOM
          GOTO      CLRSUM40 IF NOT EQUAL
.
          IF        CCMTFIX=1
            MOVE      ZERO,CCMTQTY
            MOVE      ZERO,CCMTUCT
            MOVE      ZERO,CCMTCST
            CALL      UPCCMT1
          ELSE
            PACK      KEY26,CCMTYEAR,CCMTCOM,CCMTHCD,CCMTDPT,CCMTPCD,SP70
            CALL      DECCMT1
            CALL      RSCCMT1
          ENDIF
          GOTO      CLRSUM10
.
CLRSUM40  PACK      KEY18,PROCYEAR,SP4,SP70
          CALL      RSCCMS1
CLRSUM50  CALL      RKCCMS1
          BRANCH    OVRCD,CLRSUM90
          MATCH     PROCYEAR,CCMSYEAR
          GOTO      CLRSUM90 IF NOT EQUAL
          MATCH     SP4,CCMSCOM
          GOTO      CLRSUM90 IF NOT EQUAL
.
          IF        CCMSFIX=1
            MOVE      ZERO,CCMSQTY
            MOVE      ZERO,CCMSUCT
            MOVE      ZERO,CCMSCST
            CALL      UPCCMS1
          ELSE
            PACK      KEY18,CCMSYEAR,CCMSCOM,CCMSHCD,CCMSPCD,SP70
            CALL      DECCMS1
            CALL      RSCCMS1
          ENDIF
          GOTO      CLRSUM50
CLRSUM90
CLRSUM99  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       CCSCALIO/INC
          INC       CCSCALKY    
          INC       CCSCTYIO/INC
          INC       CCSDCOIO/INC
          INC       CCSDPTIO/INC
          INC       CCSGNCIO/INC
          INC       CCSMSCIO/INC
          INC       CCSMTSIO/INC
          INC       CCSPCDIO/INC
          INC       CCSPDPIO/INC
          INC       CCSPSDIO/INC
          INC       CCSPVRIO/INC
          INC       CCSSDCIO/INC
.
          INC       STDGENCD
.
