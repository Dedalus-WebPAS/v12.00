.*****************************************************************************
.*    Program      : F02MRMAS                                                *
.*    Description  : Conversion mrtmasaf to new File layout (add Hospital IDs)
.*                                                                           *
.*    Author       : Mike Laming                                             *
.*    Date         : 26 May 2011                                             *
.*    Modifications:                                                         *
.*        V10.03.03 03/04/2013  Ebon Clements CAR 283247                     *
.*                  Changed OFIX0000 to loop by index 2 - Unique key         *
.*        V10.03.02 26/03/2013  Ebon Clements CAR 283247                     *
.*                  Changed FINDLOCS to read mrtlocaf using index 4          *
.*        V10.03.01 08/11/2011  Davin         CAR xxxxxx                     *
.*                  Added oracle option (ofix0000)                           *
.*****************************************************************************
.*        V10.02.00 10/05/2011  Mike Laming   CAR 240707                     *
.*                  Fixit created to add Originating, Home & Current Hospital*
.*                  IDs.  Change Index 1, 3 and 4                            *
.*****************************************************************************
.
.  Global change F02MRMAS  eg F57PTDOC
.  Global change MRTMASFD  eg PATDOCFD (new layout)
.  Global change mrtmasaf  eg patdoctf
.  Global change MRTMASA1  eg PATDOCT1
.  Global change KEY17   eg KEY8
.  Global change KEY20  eg KEY9
.  Global change WRMRMAS1  eg WRDOCT1
.  Global change smrmasaf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1  IFILE     SQL, FIXED=144, KEY="U1-8,9-12,13-15,16-17"
.
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  -------------------
.MRMAURNO  DIM       8         8        1  Patient's U/R Number
.MRMAHLOC  DIM       4         4        9  Home Location
.MRMADOTY  DIM       3         3       13  Type of Document
.DMRMAVOL  DIM       2         2       16  Volume Number
.MRMASTAT  DIM       3         3       18  Status (Cat RS)
.MRMACOMM  DIM       20        20      21  Comments
.MRMAKEY   DIM       10        10      41  Key for History File
.MRMACLOC  DIM       4         4       51  Current Location
.MRMAFILM  DIM       25        25      55  MicroFilm Address
.MRMAEPDT  DIM       8         8       80  'Episode To' Date (CCYYMMDD)
.MRMADTCR  DIM       8         8       88  Date Created
.MRMATMCR  DIM       8         8       96  Time Created
.MRMACUID  DIM       10        10      104 Web User ID Created (websecaf)
.MRMADTUP  DIM       8         8       114 Date Updated
.MRMATMUP  DIM       8         8       122 Time Updated
.MRMAUUID  DIM       10        10      130 Web User ID Updated (websecaf)
OLDASPAR  DIM       4         4       140 Spare Variable
.End of Record                       144
.
.Redefined Variables
.-----------------------------------
.MRMAVOLN  FORM      2
.
.                                     ******** copy the new FD here *******
.
MRTMASA1   IFILE    SQL, FIXED=200, KEY="U1-8,9-11,12-15,16-18,19-20"
MRTMASA2   IFILE    SQL, FIXED=200, KEY="U44-53"
MRTMASA3   IFILE    SQL, FIXED=200, KEY="U1-8,19-20,9-11,12-15,16-18"
MRTMASA4   IFILE    SQL, FIXED=200, KEY="U1-8,16-18,19-20,9-11,12-15"
.
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  -------------------
MRMAURNO  DIM       8         8        1  Patient's U/R Number
MRMAHHOS  DIM       3         3        9  MR Home Hospital Id.      *** New
MRMAHLOC  DIM       4         4       12  MR Home Location
MRMADOTY  DIM       3         3       16  Type of Document
DMRMAVOL  DIM       2         2       19  Volume Number
MRMASTAT  DIM       3         3       21  Status (Cat RS)
MRMACOMM  DIM       20        20      24  Comments
MRMAKEY   DIM       10        10      44  Key for History File
MRMACHOS  DIM       3         3       54  MR Current Hospital Id.   *** New
MRMACLOC  DIM       4         4       57  MR Current Location
MRMAFILM  DIM       25        25      61  MicroFilm Address
MRMAEPDT  DIM       8         8       86  'Episode To' Date (CCYYMMDD)
MRMADTCR  DIM       8         8       94  Date Created
MRMATMCR  DIM       8         8       102 Time Created
MRMACUID  DIM       10        10      110 Web User ID Created (websecaf)
MRMADTUP  DIM       8         8       120 Date Updated
MRMATMUP  DIM       8         8       128 Time Updated
MRMAUUID  DIM       10        10      136 Web User ID Updated (websecaf)
MRMAOHOS  DIM       3         3       146 MR Originating Hospital Id.  *** New
MRMASPAR  DIM       51        51      149 Spare Variable
.End of Record                        200
.
.Redefined Variables
.-----------------------------------
MRMAVOLN  FORM      2
.
.         mrtlocaf File Definition
.
MRTLOCA4  IFILE     SQL, FIXED=165, KEY="U1-4,55-57"
.  
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ------------------
MRLOCODE  DIM       4          4       1  Location Code
MRLODESC  DIM       30        30       5  Description                    
MRLOTYPE  DIM       3          3      35  Type (Cat LT)
MRLOINDC  DIM       1          1      38  Indicator   1 = Internal       
.                                                     2 = External       
MRLOSTAT  FORM      1          2      39  Status Indicator 0 = Active    
.                                                          1 = Non Active
MRLOUSAG  FORM      1          2      41  Usage Indicator  0 = Not Used  
.                                                          1 = Used      
MRLOPRNT  DIM       6          6      43  Printer                        
MRLOSTCD  DIM       6          6      49  Stationery Code                
MRLOHOSP  DIM       3          3      55  Hospital ID (pathspaf)         
MRLOPRLC  DIM       1          1      58  Priority location (1=yes)      
MRLOBPRN  DIM       6          6      59  Bulk Record Request Printer
MRLOTREC  DIM       1          1      65  Using Tracking Receipt For This
.                                         Location  0=No, 1=Yes
MRLOSPAR  DIM       99         99     66  Spare
.
.End of Record                        165
.
.
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DISNUM    FORM      4
DDCENT    DIM       2
.
IBCNMHOS  FORM      1                       * Multi Hospital flag
INPFILE   DIM       8
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION MRTMASFD"
PRGID     INIT      "F02MRMAS"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0000:               * no
                          MAIN9999                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
          GOTO      MAIN9999
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":                   
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.         
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      "mrtmasaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat mrtmasaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "smrmasaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat mrtmasaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "smrmasaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "mrtmasaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "smrmasaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "mrtmasaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 200 UC1-8,9-11,12-15,16-18,19-20",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC44-53",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-8,19-20,9-11,12-15,16-18",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
           PACK      CMDLINE,SP60,SP60
           CLEAR     CMDLINE
           APPEND    "isadd ",CMDLINE
           APPEND    NEWFILE,CMDLINE
           APPEND    " UC1-8,16-18,19-20,9-11,12-15",CMDLINE
           APPEND    SP60,CMDLINE
           RESET     CMDLINE
           EXECUTE   CMDLINE,TASKID
.
          OPEN      MRTMASA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
.
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS   * used to populate Hospital IDs
          IF        IBCNMHOS = 1
            OPEN      MRTLOCA4,"mrtlocaf"
          ENDIF
.
          PACK      KEY17,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP50
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
          UNPACK    SP70,MRMAHHOS,MRMACHOS,MRMAOHOS
          MOVE      SP70,MRMASPAR
          IF        IBCNMHOS = 1
            CALL      FINDLOCS              * get Hospital IDs for each Location
          ENDIF
.                                               * Pack key here
          PACK      KEY20,MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY,DMRMAVOL,SP70
          CALL      WRMRMAS1                    * write to new file
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     MRTMASA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P15:20,*V2LON,RECNUM
.
READ9999  RETURN
.
.**********************************************************************
.*                               FINDLOCs                             *
.*        Read through Location records to get Hospital IDs           *
.**********************************************************************
FINDLOCS  MOVE      ZERO,EXIT
          PACK      KEY7,MRMAHLOC
          CALL      RSMRLOC4
          CALL      RKMRLOC4
          BRANCH    OVRCD,FINDLO10
.
          MATCH     MRLOCODE,MRMAHLOC       * is Location = MRTMAS.Home Locn?
          GOTO      FINDLO10 IF NOT EQUAL
.
          MOVE      MRLOHOSP,MRMAHHOS     * set Home Hospital
          MOVE      MRLOHOSP,MRMAOHOS     * set Originating Hospital
.
FINDLO10  PACK      KEY7,MRMACLOC
          CALL      RSMRLOC4
          CALL      RKMRLOC4
          BRANCH    OVRCD,FINDLO99

          MATCH     MRLOCODE,MRMACLOC       * is Location = MRTMAS.Current Locn?
          GOTO      FINDLO99 IF NOT EQUAL
.
          MOVE      MRLOHOSP,MRMACHOS     * set Current Hospital
.
FINDLO99  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "smrmasaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat mrtmasaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'mrtmasaf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*            Oracle fix to.......                                           *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:20,*EL,"Record No. :";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS   * used to populate Hospital IDs
          IF        IBCNMHOS = 1
            OPEN      MRTMASA2,"mrtmasaf"       
            OPEN      MRTLOCA4,"mrtlocaf"       
          ELSE
            GOTO      OFIX9999
          ENDIF     
.
          PACK      KEY10,SP70
          CALL      RSMRMAS2                      * position at start of file
OFIX0500  CALL      RKMRMAS2                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          UNPACK    SP70,MRMAHHOS,MRMACHOS,MRMAOHOS
          MOVE      SP70,MRMASPAR
.
          CALL      FINDLOCS              * get Hospital IDs for each Location
          CALL      UPMRMAS2
.
          GOTO      OFIX0500                     * get next record
.
OFIX9000  CLOSE     MRTMASA1
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:24,*EL,"Update completed.  ";
          CALL      HITENTER
.
OFIX9999  RETURN
+
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
.READSOLD  MOVE      ZERO,OVRCD
.          RESET     KEY6
.          PACK      KEY8,SP2,KEY6
.          READ      OLDFILE1,KEY8;;
.          RETURN
READSOLD  MOVE      ZERO,OVRCD
          RESET     KEY17
          READ      OLDFILE1,KEY17;;
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
.READKOLD  MOVE      ZERO,OVRCD
.          READKS    OLDFILE1;DDURNO,DDADMNO:
.                             DIM6,DTIME,DSTAT,DDEST:
.                             PTDSVOGU,DSPARE
.          GOTO      OVERCOND IF OVER
.          MOVE      QDURNO,DURNO
.          RETURN
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;MRMAURNO,MRMAHLOC,MRMADOTY,DMRMAVOL,MRMASTAT:
                                   MRMACOMM,MRMAKEY,MRMACLOC,MRMAFILM:
                                   MRMAEPDT,MRMADTCR,MRMATMCR,MRMACUID:
                                   MRMADTUP,MRMATMUP,MRMAUUID,OLDASPAR
          GOTO      OVERCOND IF OVER
          MOVE      DMRMAVOL,MRMAVOLN
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRMRMAS1  RESET     KEY20
          MOVE      MRMAVOLN,DMRMAVOL
          WRITE     MRTMASA1,KEY20;MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY,DMRMAVOL:
                        MRMASTAT,MRMACOMM,MRMAKEY,MRMACHOS,MRMACLOC,MRMAFILM:
                        MRMAEPDT,MRMADTCR,MRMATMCR,MRMACUID,MRMADTUP,MRMATMUP:
                        MRMAUUID,MRMAOHOS,MRMASPAR
          RETURN
.
UPMRMAS2  MOVE      MRMAVOLN,DMRMAVOL
          UPDATE    MRTMASA2;MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY,DMRMAVOL:
                        MRMASTAT,MRMACOMM,MRMAKEY,MRMACHOS,MRMACLOC,MRMAFILM:
                        MRMAEPDT,MRMADTCR,MRMATMCR,MRMACUID,MRMADTUP,MRMATMUP:
                        MRMAUUID,MRMAOHOS,MRMASPAR
          RETURN
.
RKMRMAS2  MOVE      ZERO,OVRCD
          READKS    MRTMASA2;MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY,DMRMAVOL:
                        MRMASTAT,MRMACOMM,MRMAKEY,MRMACHOS,MRMACLOC,MRMAFILM:
                        MRMAEPDT,MRMADTCR,MRMATMCR,MRMACUID,MRMADTUP,MRMATMUP:
                        MRMAUUID,MRMAOHOS,MRMASPAR
          GOTO      OVERCOND IF OVER
          MOVE      DMRMAVOL,MRMAVOLN
          RETURN
.
RSMRMAS2  MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      MRTMASA2,KEY10;;
          GOTO      OVERCOND IF OVER
          RETURN
.
.         mrtlocaf I/O routines
.
RSMRLOC4  MOVE     ZERO,OVRCD
          RESET    KEY7
          READ     MRTLOCA4,KEY7;;
          RETURN
.
RKMRLOC4  MOVE     ZERO,OVRCD
          READKS   MRTLOCA4;MRLOCODE,MRLODESC,MRLOTYPE,MRLOINDC,MRLOSTAT:
                            MRLOUSAG,MRLOPRNT,MRLOSTCD,MRLOHOSP,MRLOPRLC:
                            MRLOBPRN,MRLOTREC,MRLOSPAR
          GOTO     OVERCOND IF OVER
          RETURN
.
          INC       STD001IO
