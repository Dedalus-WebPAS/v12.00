.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.03  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
. VF.00.02  18.10.1999 Sandra Barcham
.           Fix Back dated report including payments in suspense
. VF.00.01  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBAAPS62
.   Function      :   Creditors Aged Analysis                 
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APS62DF     
          INC       APSBMFFD/INC
          INC       APSCTSFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSORDFD/INC
          INC       FMSCONFD/INC
          INC       FMSLMAFD/INC
.=========================
.Local Variable Definition
.-------------------------
REPSEQ    DIM      20 * Scr 00 Fld     2
CREDFROM  DIM      40 * Scr 00 Fld     3
CREDEND   DIM      40 * Scr 00 Fld     4
SORTFROM  DIM       6 * Scr 00 Fld     5
SORTEND   DIM       6 * Scr 00 Fld     6
TYPEFROM  DIM      40 * Scr 00 Fld     7
TYPEEND   DIM      40 * Scr 00 Fld     8
RECORDER  FORM      1 * Scr 00 Fld     9
FROMCRED  DIM       5 * Scr 00 Fld    13
ENDCRED   DIM       5 * Scr 00 Fld    14
FROMTYPE  DIM       3 * Scr 00 Fld    15
ENDTYPE   DIM       3 * Scr 00 Fld    16
FROMSORT  DIM       6 * Scr 00 Fld    17
ENDSORT   DIM       6 * Scr 00 Fld    18
REPTTYPE  FORM      1 * Scr 00 Fld    19
REPTSEQ   FORM      1 * Scr 00 Fld    20
REPTDATE  DIM       8 * Scr 00 Fld    22
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBAAPS62"
PRGNAM    INIT      "Creditors Aged Analysis                 "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsctsaf";
          OPEN      APSCTSA1,"apsctsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA1,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA2,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA3,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA4,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA5,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsimsaf";
          OPEN      APSIMSA6,"apsimsaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA1,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsinpaf";
          OPEN      APSINPA2,"apsinpaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA1,"apsordaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Parameter Input                    
          ENDIF
          RETURN
.--------------------------------
. Screen - Parameter Input                    
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      MVACCEPT
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Parameter Input                    
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,REPSEQ  
          MOVE      SP70,CREDFROM
          MOVE      SP70,CREDEND 
          MOVE      SP70,SORTFROM
          MOVE      SP70,SORTEND 
          MOVE      SP70,TYPEFROM
          MOVE      SP70,TYPEEND 
          MOVE      ZERO,RECORDER
          MOVE      SP70,FROMCRED
          MOVE      SP70,ENDCRED 
          MOVE      SP70,FROMTYPE
          MOVE      SP70,ENDTYPE 
          MOVE      SP70,FROMSORT
          MOVE      SP70,ENDSORT 
          MOVE      ZERO,REPTTYPE
          MOVE      ZERO,REPTSEQ 
          MOVE      ZERO,INCPURCH
          MOVE      SP70,REPTDATE
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Parameter Input                    
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Parameter Input                    
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Parameter Input                    
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Parameter Input                    
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Parameter Input                    
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L101,PS00L102,PS00L103:
                            PS00L104,PS00L105,PS00L106,PS00L107:
                            PS00L108,PS00L999,PS00L999,PS00L999:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L115,PS00L116:
                            PS00L117,PS00L118
          GOTO     PS00L999
.
PS00L101
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CREDEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      SORTFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SORTEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      TYPEFROM,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      TYPEEND,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      RECORDER,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      FROMCRED,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      ENDCRED,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      FROMTYPE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      ENDTYPE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      FROMSORT,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      ENDSORT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      REPTTYPE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCPURCH,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          UNPACK    REPTDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Parameter Input                    
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L103,SF00L006,SF00L104,SF00L006:
                            SF00L105,SF00L006,SF00L106,SF00L107:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L108,SF00L109
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L101,SF00L102,SF00L020:
                            SF00L103,SF00L020,SF00L104,SF00L020:
                            SF00L105,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L108,SF00L109
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KREPSQ00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPSEQ,VAR       
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L102
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CREDEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFCRED00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CREDFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CREDEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SORTEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFSORT00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SORTFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SORTEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TYPEEND 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFTYPE00
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      TYPEFROM,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TYPEEND,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,RECORDER
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      RECORDER,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L107
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      REPT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L108
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,INCPURCH
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      INCPURCH,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
          CALL      DATECURR
          CALL     SELECTED
          CALL      KEYDATE
          PACK      REPTDATE,CCENT,CYEAR,CMON,CDAY          
          UNPACK    REPTDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------
. Move one to accept to for insert mode
.----------------------------------------
MVACCEPT  MOVE      ONE,ACCEPT
          RETURN
DATECURR  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          REP       " 0",CYEAR
          REP       " 0",CMON
          REP       " 0",CDAY
          RETURN
.----------------------------------------------------------------------
. Enter Creditor Code
.----------------------------------------------------------------------
KREPSQ00  MOVE       ZERO,EXIT
          KEYIN      *PCCOL:CVERT,*EL,*V2LON,ANS
          REP        UPPLOW,ANS
          MATCH      "S",ANS
          GOTO       KREPSQ10 IF EQUAL
          MATCH      "C",ANS
          GOTO       KREPSQ20 IF EQUAL
          MATCH      "T",ANS
          GOTO       KREPSQ30 IF EQUAL
          MATCH      EXITCHAR,ANS
          GOTO       KREPSQ95 IF EQUAL
          BEEP
          GOTO       KREPSQ00
.
KREPSQ10  MOVE       "Sort Key Order",REPSEQ
          MOVE       ONE,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ20  MOVE       "Creditor Code Order",REPSEQ
          MOVE       TWO,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ30  MOVE       "Creditor Type Order",REPSEQ
          MOVE       THREE,REPTSEQ
          GOTO       KREPSQ99
.
KREPSQ95  MOVE       TWO,EXIT
.
KREPSQ99  RETURN
.
.----------------------------------------------------------------------
. Enter Creditor Code
.----------------------------------------------------------------------
KFCRED00  MOVE       "    3",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,KFCRED10,KFCRED99
          MOVE       APMACRD,FROMCRED
          PACK       CREDFROM,APMACRD,SP1,APMACN1
          GOTO       KFCRED20
.
KFCRED10  MOVE       SP70,FROMCRED
          MOVE       "Start                              ",CREDFROM
.
KFCRED20  MOVE       CREDFROM,VAR
          CALL       DISPITEM
.
KFCRED30  MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,KFCRED40,KFCRED99
          MOVE       APMACRD,ENDCRED
          PACK       CREDEND,APMACRD,SP1,APMACN1
          MATCH      FROMCRED,ENDCRED
          GOTO       KFCRED99 IF NOT LESS
.
          BEEP
          MOVE       "To Creditor Code Must Be > From Creditor Code - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFCRED00
.
KFCRED40  MOVE       "~~~~~",ENDCRED
          MOVE       "End                                   ",CREDEND
.
KFCRED99  RETURN
.
.----------------------------------------------------------------------
. Enter SORT Code
.----------------------------------------------------------------------
KFSORT00  MOVE       ZERO,EXIT
          MOVE       "    5",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          KEYIN      *PCCOL:CVERT,*V2LON,FROMSORT
          ENDSET     FROMSORT
          APPEND     SP70,FROMSORT
          RESET      FROMSORT
          MATCH      EXITCHAR,FROMSORT
          GOTO       KFSORT95 IF EQUAL
.
          MATCH      SP70,FROMSORT
          GOTO       KFSORT10 IF EQUAL
          MOVE       FROMSORT,SORTFROM
          GOTO       KFSORT20
.
KFSORT10  MOVE       "      ",FROMSORT
          MOVE       "Start ",SORTFROM
.
KFSORT20  MOVE       SORTFROM,VAR
          CALL       DISPITEM
.
          MOVE       "    6",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          KEYIN      *PCCOL:CVERT,*V2LON,ENDSORT
          ENDSET     ENDSORT
          APPEND     SP70,ENDSORT
          RESET      ENDSORT
          MATCH      EXITCHAR,ENDSORT
          GOTO       KFSORT95 IF EQUAL
.
          MATCH      SP70,ENDSORT
          GOTO       KFSORT30 IF EQUAL
          MOVE       ENDSORT,SORTEND
          MATCH      FROMSORT,ENDSORT
          GOTO       KFSORT99 IF NOT LESS
.
          BEEP
          MOVE       "To Sort Key Must Be > From Sort Key - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    6",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFSORT00
.
KFSORT30  MOVE       "~~~~~~",ENDSORT
          MOVE       "End   ",SORTEND
          GOTO       KFSORT99
.
KFSORT95  MOVE       TWO,EXIT
.
KFSORT99  RETURN
.
.----------------------------------------------------------------------
. Enter Type Code
.----------------------------------------------------------------------
KFTYPE00  MOVE       "    7",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPCTA00
          BRANCH     EXIT,KFTYPE10,KFTYPE99
          MOVE       APCTCODE,FROMTYPE
          PACK       TYPEFROM,APCTCODE,SP1,APCTDESC
          GOTO       KFTYPE20
.
KFTYPE10  MOVE       "   ",FROMTYPE
          MOVE       "Start                              ",TYPEFROM
.
KFTYPE20  MOVE       TYPEFROM,VAR
          CALL       DISPITEM
.
          MOVE       "    8",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPCTA00
          BRANCH     EXIT,KFTYPE30,KFTYPE99
          MOVE       APCTCODE,ENDTYPE
          PACK       TYPEEND,APCTCODE,SP1,APCTDESC
          MATCH      FROMTYPE,ENDTYPE
          GOTO       KFTYPE99 IF NOT LESS
.
          BEEP
          MOVE       "To Creditor Type Must Be > From Creditor Type - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "    8",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       KFTYPE00
.
KFTYPE30  MOVE       "~~~",ENDTYPE
          MOVE       "End                                     ",TYPEEND
.
KFTYPE99  RETURN
.
.----------------------------------------------------------------------
. Print Creditors Register
.
. Parameters  : REPTTYPE  FORM 1  1=Supplier Details 2=Creditor Details
.               REPTSEQ   FORM 1  1=by Sort, 2=by Code, 3=by Type
.               FROMCRED  DIM  5  Creditor Range
.               ENDCRED   DIM  5
.               FROMSORT  DIM  5  Sort Key Range
.               ENDSORT   DIM  5
.               FROMTYPE  DIM  5  Type Range
.               ENDTYPE   DIM  5
.
.----------------------------------------------------------------------
REPT0000  MATCH     FROMSORT,ENDSORT
          GOTO      REPT0010 IF NOT LESS
          MOVE      "Last Sort Key must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0010  MATCH     FROMCRED,ENDCRED
          GOTO      REPT0020 IF NOT LESS
          MOVE      "Last Creditor must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0020  MATCH     FROMTYPE,ENDTYPE
          GOTO      REPT0030 IF NOT LESS
          MOVE      "Last Creditor Type must be Higher than First - ",DISPMSG
          CALL      MESSAGE1
          GOTO      REPT9000
.
REPT0030  MOVE      "99",CLNO
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,STOT1
          MOVE      ZERO,STOT2
          MOVE      ZERO,STOT3
          MOVE      ZERO,RTOT1
          MOVE      ZERO,RTOT2
          MOVE      ZERO,RTOT3
.
          CALL      RDFMCO50                * get print totals parameter
          PACK      FMCOATOT,FMCOATOT,SP70
          REP       " 0",FMCOATOT
.
          PACK      FILENAME,APSTMP,PORT
          CLOSE     APSTMPA1
          PACK      COMMAND,ISERASE,FILENAME
          EXECUTE   COMMAND,TASKID
          PACK      COMMAND,ISBUILD,FILENAME,INDEX
          EXECUTE   COMMAND,TASKID
          OPEN      APSTMPA1,FILENAME
          OPEN      APSTMPA2,FILENAME
          OPEN      APSTMPA3,FILENAME
.
          CALL      DCON0000         * convert dates
.
          CALL      EXTA0000         * extract old data if required
.
          DISPLAY   *P1:24,*EL,"Printing : "
          BRANCH    REPTSEQ,REPT1000,REPT2000,REPT3000
.
. Report by Sort Key
.
REPT1000  PACK      KEY11,FROMSORT,SP70
          CALL      RSAPMA3
.
REPT1100  CALL      RKAPMA3
          BRANCH    OVRCD,REPT5000
          MATCH     APMASKY,ENDSORT
          GOTO      REPT5000 IF LESS
.
          MATCH     FROMCRED,APMACRD
          GOTO      REPT1100 IF LESS
          MATCH     APMACRD,ENDCRED
          GOTO      REPT1100 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          GOTO      REPT1100 IF LESS
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT1100 IF LESS
.
          CALL      PCRED000          * Print Creditor
          GOTO      REPT1100
.
. Report by Code
.
REPT2000  PACK      KEY5,FROMCRED,SP70
          CALL      RDAPMA1
          IF        OVRCD=0
            CALL      RPAPMA1
          ENDIF
.
REPT2100  CALL      RKAPMA1
          BRANCH    OVRCD,REPT5000
          MATCH     APMACRD,ENDCRED
          GOTO      REPT5000 IF LESS
.
          MATCH     FROMSORT,APMASKY
          GOTO      REPT2100 IF LESS
          MATCH     APMASKY,ENDSORT
          GOTO      REPT2100 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          GOTO      REPT2100 IF LESS
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT2100 IF LESS
.
          CALL      PCRED000          * Print Creditor
          GOTO      REPT2100
.
. Report by Type
.
REPT3000  PACK      KEY8,FROMTYPE,SP70
          CALL      RSAPMA2
.
REPT3100  CALL      RKAPMA2
          BRANCH    OVRCD,REPT3900
          MATCH     APMATYP,ENDTYPE
          GOTO      REPT3900 IF LESS
.
          MATCH     FROMSORT,APMASKY
          GOTO      REPT3100 IF LESS
          MATCH     APMASKY,ENDSORT
          GOTO      REPT3100 IF LESS
.
          MATCH     FROMCRED,APMACRD
          GOTO      REPT3100 IF LESS
          MATCH     APMACRD,ENDCRED
          GOTO      REPT3100 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          IF        !@EQUAL
            CALL      STOT0000            * Print Sub Total
            MOVE      APMATYP,FROMTYPE    * Force Page Break of Type Change
            MOVE      "88",CLNO
          ENDIF
.
          CALL      PCRED000          * Print Creditor
.
          GOTO      REPT3100
.
REPT3900  CALL      STOT0000            * Print Sub Total
.
. End of Report
.
REPT5000
          COMPARE   ZERO,CPAGENO
          IF        @EQUAL
            CALL      PHEAD000
          ELSE
            MATCH     "1",FMCOATOT
            IF        @EQUAL
              CALL      PHEAD000
              PRINT     "Ledger Totals :",*N
              ADD       "2",CLNO
              CALL      TLED0000
            ENDIF
          ENDIF
.
          CALL      PTOT0000
.
          CLOSE     APSTMPA1
          CLOSE     APSTMPA2
          CLOSE     APSTMPA3
          PACK      COMMAND,ISERASE,FILENAME
          EXECUTE   COMMAND,TASKID
.
          MOVE      ZERO,EXIT
          GOTO      REPT9999
.
REPT9000  MOVE      ONE,EXIT * Return to Prompt
          GOTO      REPT9999
.
REPT9999  RETURN
.--------------------------------------------------
. Print Creditor Details
.--------------------------------------------------
PCRED000  DISPLAY   *P12:24,*V2LON,APMACRD,"/",APMASKY,"/",APMATYP
.
          CALL      CCRD0000        * Calculate Creditor Total
.
PCRED999  RETURN
.--------------------------------------------------
. Print Creditor Details
.--------------------------------------------------
PDATA000
          IF        TOTAL0=0 & TOTAL1=0 & TOTAL2=0 & TOTAL3=0 & TOTAL4=0
            GOTO      PDATA999
          ENDIF
.
          MOVE      FORMAT,FTOTAL0
          MOVE      FORMAT,FTOTAL1
          MOVE      FORMAT,FTOTAL2
          MOVE      FORMAT,FTOTAL3
          MOVE      FORMAT,FTOTAL4
          FEDIT     TOTAL0,FTOTAL0
          FEDIT     TOTAL1,FTOTAL1
          FEDIT     TOTAL2,FTOTAL2
          FEDIT     TOTAL3,FTOTAL3
          FEDIT     TOTAL4,FTOTAL4
.
          MATCH     "**********",FTOTAL0
          IF        @EQUAL
            MOVE      TOTAL0,FTOTAL0
          ENDIF
          MATCH     "**********",FTOTAL1
          IF        @EQUAL
            MOVE      TOTAL1,FTOTAL1
          ENDIF
          MATCH     "**********",FTOTAL2
          IF        @EQUAL
            MOVE      TOTAL2,FTOTAL2
          ENDIF
          MATCH     "**********",FTOTAL3
          IF        @EQUAL
            MOVE      TOTAL3,FTOTAL3
          ENDIF
          MATCH     "**********",FTOTAL4
          IF        @EQUAL
            MOVE      TOTAL4,FTOTAL4
          ENDIF
.
          ADD       TOTAL0,STOT0
          ADD       TOTAL1,STOT1
          ADD       TOTAL2,STOT2
          ADD       TOTAL3,STOT3
          ADD       TOTAL4,STOT4
          ADD       TOTAL0,RTOT0
          ADD       TOTAL1,RTOT1
          ADD       TOTAL2,RTOT2
          ADD       TOTAL3,RTOT3
          ADD       TOTAL4,RTOT4
.
          COMPARE   "55",CLNO
          CALL      PHEAD000 IF NOT LESS
          PRINT     *2,SAPMACRD,SP1,SAPMACN1,SP1,LASTLED,SP2:
                    FTOTAL0,FTOTAL1,FTOTAL2,FTOTAL3,FTOTAL4
          ADD       "1",CLNO
.
          PACK      SAPMACRD,SP70
          PACK      SAPMACN1,SAPMACN2,SP70
          PACK      SAPMACN2,SP70
.
PDATA999  RETURN
.--------------------------------------------------
. Print Ledger Details
.--------------------------------------------------
PLEDG000
          MOVE      FORMAT,FTOTAL0
          MOVE      FORMAT,FTOTAL1
          MOVE      FORMAT,FTOTAL2
          MOVE      FORMAT,FTOTAL3
          MOVE      FORMAT,FTOTAL4
          FEDIT     TOTAL0,FTOTAL0
          FEDIT     TOTAL1,FTOTAL1
          FEDIT     TOTAL2,FTOTAL2
          FEDIT     TOTAL3,FTOTAL3
          FEDIT     TOTAL4,FTOTAL4
.
          MATCH     "**********",FTOTAL0
          IF        @EQUAL
            MOVE      TOTAL0,FTOTAL0
          ENDIF
          MATCH     "**********",FTOTAL1
          IF        @EQUAL
            MOVE      TOTAL1,FTOTAL1
          ENDIF
          MATCH     "**********",FTOTAL2
          IF        @EQUAL
            MOVE      TOTAL2,FTOTAL2
          ENDIF
          MATCH     "**********",FTOTAL3
          IF        @EQUAL
            MOVE      TOTAL3,FTOTAL3
          ENDIF
          MATCH     "**********",FTOTAL4
          IF        @EQUAL
            MOVE      TOTAL4,FTOTAL4
          ENDIF
.
          IF        TOTAL0=0
            GOTO      PLEDG999
          ENDIF
          COMPARE   "55",CLNO
          CALL      PHEAD000 IF NOT LESS
.
          MATCH     SP70,LASTLED
          IF        !@EQUAL
            MOVE      SP70,FMLADESC
            PACK      KEY2,LASTLED,SP70
            CALL      RDFMLA1
          ELSE
            MOVE      "Outstanding at Last Purge          ",FMLADESC
          ENDIF
.
          PRINT     *2,LASTLED,SP1,FMLADESC,SP3:
                    FTOTAL0,FTOTAL1,FTOTAL2,FTOTAL3,FTOTAL4
          ADD       "1",CLNO
.
          PRINT     SP1
          ADD       "1",CLNO
.
PLEDG999  RETURN
.
.------------------------------------------------------------
. Print Report Heading
.------------------------------------------------------------
PHEAD000  CALL      HEAD132
.
PHEAD100  BRANCH    REPTSEQ,PHEAD110,PHEAD120,PHEAD130
.
PHEAD110  PRINT     "Alpha Sort Key Sequence";
          GOTO      PHEAD200
.
PHEAD120  PRINT     "Creditor Code Sequence";
          GOTO      PHEAD200
.
PHEAD130  PRINT     "Creditor Type Sequence";
          GOTO      PHEAD200
.
PHEAD200
          MOVE     INCTYPE0,INCTYPE
          LOAD     INCTYPE,INCPURCH,INCTYPE1
          PRINT     *40,"Report As At : ",PTODATE1:
                   "                  ",INCTYPE:
                    *N,"Creditor Code From : ",CREDFROM,"  to : ",CREDEND:
                    *N,"Creditor Type From : ",TYPEFROM,"  to : ",TYPEEND:
                    *N,"Sort Key From      : ",SORTFROM," to : ",SORTEND
          MOVE      "4",CLNO
          CALL      UND132
.
          MATCH     "1",FMCOATOT
          IF        !@EQUAL
            MOVE      SP70,KEY4
          ELSE
            MOVE      "Ledg",KEY4
          ENDIF
          PRINT     " Code Description",*38,KEY4,*43,"Total Outstanding":
                                        *71,"Current",*89,"30 Days":
                                        *107,"60 Days",*125,"90 Days"
          ADD       "2",CLNO
          CALL      UND132
          RETURN
.----------------------------------------------------------------------
. Print Report Totals
.----------------------------------------------------------------------
PTOT0000  MOVE      FORMAT,FTOTAL0
          MOVE      FORMAT,FTOTAL1
          MOVE      FORMAT,FTOTAL2
          MOVE      FORMAT,FTOTAL3
          MOVE      FORMAT,FTOTAL4
          FEDIT     RTOT0,FTOTAL0
          FEDIT     RTOT1,FTOTAL1
          FEDIT     RTOT2,FTOTAL2
          FEDIT     RTOT3,FTOTAL3
          FEDIT     RTOT4,FTOTAL4
.
          MATCH     "**********",FTOTAL0
          IF        @EQUAL
            MOVE      RTOT0,FTOTAL0
          ENDIF
          MATCH     "**********",FTOTAL1
          IF        @EQUAL
            MOVE      RTOT1,FTOTAL1
          ENDIF
          MATCH     "**********",FTOTAL2
          IF        @EQUAL
            MOVE      RTOT2,FTOTAL2
          ENDIF
          MATCH     "**********",FTOTAL3
          IF        @EQUAL
            MOVE      RTOT3,FTOTAL3
          ENDIF
          MATCH     "**********",FTOTAL4
          IF        @EQUAL
            MOVE      RTOT4,FTOTAL4
          ENDIF
.
          CALL      UND132
          PRINT     *30,"Total :",*43,FTOTAL0,FTOTAL1,FTOTAL2,FTOTAL3:
                    FTOTAL4
          CALL      UND132
.
          MOVE      ZERO,RTOT0
          MOVE      ZERO,RTOT1
          MOVE      ZERO,RTOT2
          MOVE      ZERO,RTOT3
          MOVE      ZERO,RTOT4
.
          PACK      FDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",FDATE
          MATCH     FDATE,TODATE1
          GOTO      PTOT9000 IF LESS
.
          PRINT     *N,*40,"Warning: Post Dated Cheques are Included"
.
PTOT9000  PRINT     *N,*40,"*****  End of Report *****"
.
PTOT9999  RETURN
.----------------------------------------------------------------------
. Print Report Sub Totals
.----------------------------------------------------------------------
STOT0000  IF        STOT0+STOT1+STOT2+STOT3+STOT4=0
            GOTO      STOT9999
          ENDIF
          MOVE      FORMAT,FTOTAL0
          MOVE      FORMAT,FTOTAL1
          MOVE      FORMAT,FTOTAL2
          MOVE      FORMAT,FTOTAL3
          MOVE      FORMAT,FTOTAL4
          FEDIT     STOT0,FTOTAL0
          FEDIT     STOT1,FTOTAL1
          FEDIT     STOT2,FTOTAL2
          FEDIT     STOT3,FTOTAL3
          FEDIT     STOT4,FTOTAL4
.
          MATCH     "**********",FTOTAL0
          IF        @EQUAL
            MOVE      STOT0,FTOTAL0
          ENDIF
          MATCH     "**********",FTOTAL1
          IF        @EQUAL
            MOVE      STOT1,FTOTAL1
          ENDIF
          MATCH     "**********",FTOTAL2
          IF        @EQUAL
            MOVE      STOT2,FTOTAL2
          ENDIF
          MATCH     "**********",FTOTAL3
          IF        @EQUAL
            MOVE      STOT3,FTOTAL3
          ENDIF
          MATCH     "**********",FTOTAL4
          IF        @EQUAL
            MOVE      STOT4,FTOTAL4
          ENDIF
.
          CALL      UND132
          PRINT     "Creditor Type ",FROMTYPE," Total :":
                    *43,FTOTAL0,FTOTAL1,FTOTAL2,FTOTAL3:
                    FTOTAL4
          CALL      UND132
STOT9999
          MOVE      ZERO,STOT0
          MOVE      ZERO,STOT1
          MOVE      ZERO,STOT2
          MOVE      ZERO,STOT3
          MOVE      ZERO,STOT4
          RETURN
.----------------------------------------------------------------------
. Calculated dates from and to for year ranges
.----------------------------------------------------------------------
DCON0000  UNPACK    REPTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      TODATE1,CCENT,CYEAR,CMON,CDAY
          REP       " 0",TODATE1
          CALL      PACDATE
          MOVE      CPCDATE,PTODATE1
.
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
.
          SUB       "30",JULDAY
.
DCON0100  MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      FRDATE1,CC,YY,MM,DD
          REP       " 0",FRDATE1
          UNPACK    FRDATE1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,PFRDATE1
.
          UNPACK    TODATE1,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
.
          SUB       "60",JULDAY
.
DCON0200  MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      FRDATE2,CC,YY,MM,DD
          REP       " 0",FRDATE2
          UNPACK    FRDATE2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          UNPACK    TODATE1,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
.
          SUB       "90",JULDAY
.
DCON0300  MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      FRDATE3,CC,YY,MM,DD
          REP       " 0",FRDATE3
          UNPACK    FRDATE3,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,PFRDATE3
.
          RETURN
.----------------------------------------------------------------------
. Calculate Creditor Totals
.----------------------------------------------------------------------
CCRD0000
          CALL      EXTB0000
.                                      * add outstanding to first ledger
          PACK      FDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",FDATE
          MATCH     FDATE,TODATE1
          GOTO      CCRD0500 IF NOT LESS
.
          IF        APMAPOT<>0
            MOVE      "~~~~~~~~~~~~~~~",APTMDOCR
            MOVE      "zz",APTMLED
            PACK      KEY22,APMACRD,APTMDOCR,SP70
            UNPACK    KEY22,APTMCRED,APTMDOCR,APTMLED
            CALL      RDAPTM1
            IF        OVRCD=0
              MOVE      "00000000",APTMDATE
              ADD       APMAPOT,APTMAMT
              CALL      UPAPTM1
            ELSE
              MOVE      "00000000",APTMDATE
              MOVE      APMAPOT,APTMAMT
              CALL      WRAPTM1
            ENDIF
          ENDIF
.
CCRD0500  MOVE      ZERO,TOTAL0
          MOVE      ZERO,TOTAL1
          MOVE      ZERO,TOTAL2
          MOVE      ZERO,TOTAL3
          MOVE      ZERO,TOTAL4
          PACK      SAPMACRD,APMACRD,SP70
          PACK      SAPMACN1,APMACN1,SP70
          PACK      SAPMACN2,APMACN2,SP70
.
          MOVE      SP70,LASTLED
          PACK      KEY22,APMACRD,SP70
          CALL      RSAPTM2
.
CCRD1000  CALL      RKAPTM2
          BRANCH    OVRCD,CCRD9000
          MATCH     APTMCRED,APMACRD
          GOTO      CCRD9000 IF NOT EQUAL
.
          MATCH     Z70,APTMLED
          GOTO      CCRD1000 IF EQUAL
.
          MATCH     LASTLED,APTMLED
          IF        !@EQUAL
            CALL      PDATA0000
            MOVE      ZERO,TOTAL0
            MOVE      ZERO,TOTAL1
            MOVE      ZERO,TOTAL2
            MOVE      ZERO,TOTAL3
            MOVE      ZERO,TOTAL4
            PACK      LASTLED,APTMLED,SP70
          ENDIF
.
          ADD       APTMAMT,TOTAL0
          MATCH     FRDATE1,APTMDATE
          GOTO      CCRD2000 IF NOT LESS
.
          MATCH     FRDATE2,APTMDATE
          GOTO      CCRD3000 IF NOT LESS
.
          MATCH     FRDATE3,APTMDATE
          GOTO      CCRD4000 IF NOT LESS
.
          ADD       APTMAMT,TOTAL4
.
          GOTO      CCRD1000
.
CCRD2000  ADD       APTMAMT,TOTAL1
          GOTO      CCRD1000
.
CCRD3000  ADD       APTMAMT,TOTAL2
          GOTO      CCRD1000
.
CCRD4000  ADD       APTMAMT,TOTAL3
          GOTO      CCRD1000
.
CCRD9000
          CALL      PDATA0000     * print last data
          MATCH     SP70,SAPMACRD
          IF        @EQUAL
            MATCH     SP70,SAPMACN1
            IF        !@EQUAL
              PRINT     *8,SAPMACN1
              ADD       "1",CLNO
            ENDIF
            PRINT     SP1
            ADD       "1",CLNO
          ENDIF
.
CCRD9999  RETURN
.----------------------------------------------------------------------
. Calculate Creditor Totals
.----------------------------------------------------------------------
TLED0000
          MOVE      ZERO,TOTAL0
          MOVE      ZERO,TOTAL1
          MOVE      ZERO,TOTAL2
          MOVE      ZERO,TOTAL3
          MOVE      ZERO,TOTAL4
.
          MOVE      SP70,LASTLED
          PACK      KEY22,SP70
          CALL      RSAPTM3
.
TLED1000  CALL      RKAPTM3
          BRANCH    OVRCD,TLED9000
.
          MATCH     Z70,APTMLED
          GOTO      TLED1000 IF EQUAL
.
          MATCH     LASTLED,APTMLED
          IF        !@EQUAL
            CALL      PLEDG0000
            MOVE      ZERO,TOTAL0
            MOVE      ZERO,TOTAL1
            MOVE      ZERO,TOTAL2
            MOVE      ZERO,TOTAL3
            MOVE      ZERO,TOTAL4
            PACK      LASTLED,APTMLED,SP70
          ENDIF
.
          ADD       APTMAMT,TOTAL0
          MATCH     FRDATE1,APTMDATE
          GOTO      TLED2000 IF NOT LESS
.
          MATCH     FRDATE2,APTMDATE
          GOTO      TLED3000 IF NOT LESS
.
          MATCH     FRDATE3,APTMDATE
          GOTO      TLED4000 IF NOT LESS
.
          ADD       APTMAMT,TOTAL4
          GOTO      TLED1000
.
TLED2000  ADD       APTMAMT,TOTAL1
          GOTO      TLED1000
.
TLED3000  ADD       APTMAMT,TOTAL2
          GOTO      TLED1000
.
TLED4000  ADD       APTMAMT,TOTAL3
          GOTO      TLED1000
.
TLED9000
          CALL      PLEDG0000     * print last data
.
TLED9999  RETURN
.----------------------------------------------------------------------
. Extract Outstanding Creditor Information (Past Outstanding)
.----------------------------------------------------------------------
EXTA0000  DISPLAY   *P1:24,*EL,"Processing : "
.
          PACK      FDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",FDATE
          MATCH     FDATE,TODATE1
          GOTO      EXTA9999 IF NOT LESS
.
          MOVE      ZERO,SECTOR
          PACK      KEY5,SP70
          CALL      RSAPBM1
.
EXTA0100  CALL      RKAPBM1
          BRANCH    OVRCD,EXTA9999
.
          ADD       ONE,SECTOR         * display every 100th record
          IF        SECTOR%100=1
            DISPLAY   *P1:24,*V2LON,SECTOR," - ",APBMBCH,*EF;
          ENDIF
.
.         MATCH     APBMADT,FDATE      * in between current and entered date ?
.         GOTO      EXTA0100 IF LESS
          MATCH     APBMADT,TODATE1
          GOTO      EXTA0100 IF LESS
.
          PACK      SKEY5,APBMBCH,SP70
.
          PACK      KEY40,APBMBCH,FROMCRED,SP70
          CALL      RSAPIM1
.
EXTA1000  CALL      RKAPIM1
          BRANCH    OVRCD,EXTA0100
          MATCH     APIMBCH,APBMBCH    * check if in current batch
          GOTO      EXTA0100 IF NOT EQUAL
          MATCH     APIMCRD,ENDCRED    * check if in creditor range
          GOTO      EXTA0100 IF LESS
          MATCH     SP15,APIMREF
          GOTO      EXTA1000 IF EQUAL
.
EXTA1200  PACK      KEY5,APIMCRD,SP70  * read creditor info
          CALL      RDAPMA1
          BRANCH    OVRCD,EXTA1000
.
          MATCH     FROMSORT,APMASKY   * check ranges
          GOTO      EXTA1000 IF LESS
          MATCH     APMASKY,ENDSORT
          GOTO      EXTA1000 IF LESS
.
          MATCH     FROMTYPE,APMATYP
          GOTO      EXTA1000 IF LESS
          MATCH     APMATYP,ENDTYPE
          GOTO      EXTA1000 IF LESS
.
          CALL      EXTO0000           * extract all data for reference
.
          PACK      KEY5,SKEY5,SP70    * re-read batch
          CALL      RDAPBM1
.
          GOTO      EXTA1000
.
EXTA9999  RETURN
.----------------------------------------------------------------------
. Extract Outstanding Creditor Information (Current Outstanding)
.----------------------------------------------------------------------
EXTB0000  PACK      KEY41,ONE,APMACRD,SP70
          CALL      RSAPIM6
.
EXTB1000  CALL      RKAPIM6
          BRANCH    OVRCD,EXTB9999
          MATCH     "1",APIMOUT             * check if outstanding
          GOTO      EXTB9999 IF NOT EQUAL
          MATCH     APMACRD,APIMCRD
          GOTO      EXTB9999 IF NOT EQUAL
.
          MOVE      APIMBCH,KEY5
          CALL      RDAPBM1
          BRANCH    OVRCD,EXTB1000
.
          MATCH     APBMADT,TODATE1
          GOTO      EXTB1000 IF LESS
.
          CALL      EXTO0000           * extract all data for reference
.
          GOTO      EXTB1000
.
EXTB9999  RETURN
.----------------------------------------------------------------------
. Extract All Creditor Information
.       ************************************************
.          NB : CANNOT CHANGE APIM1 or APIM6 !!!!!!!
.       ************************************************
.----------------------------------------------------------------------
EXTO0000
          MOVE      Z70,KEY2           * check if alread extracted
          PACK      KEY22,APIMCRD,APIMREF,KEY2,SP70
          CALL      RDAPTM1
          IF        OVRCD=1
            MOVE      SP70,APTMDATE
            MOVE      APIMCRD,APTMCRED
            MOVE      APIMREF,APTMDOCR
            MOVE      ZERO,APTMAMT
            MOVE      KEY2,APTMLED
            CALL      WRAPTM1
          ELSE
            GOTO      EXTO9999
          ENDIF
.
          PACK      SKEY40,APIMCRD,APIMREF,SP70
          PACK      KEY40,SKEY40,SP70
          CALL      RSAPIM3
.
EXTO1000  CALL      RKAPIM3
          BRANCH    OVRCD,EXTO9999
          PACK      KEY20,APIMCRD,APIMREF,SP70
          MATCH     KEY20,SKEY40
          GOTO      EXTO9999 IF NOT EQUAL
.
          PACK      KEY5,APIMBCH,SP70
          CALL      RDAPBM1
          BRANCH    OVRCD,EXTO1000
.
          MATCH     APBMADT,TODATE1    * before entered date ?
          GOTO      EXTO1000 IF LESS
.
          CALL      GDAT0000           * extract data
.
          GOTO      EXTO1000
.
EXTO9999  RETURN
.----------------------------------------------------------------------
. Extract Creditor Information (Summarize by Reference to Match Payments)
.----------------------------------------------------------------------
GDAT0000
          PACK      KEY40,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          PACK      KEY51,APIMBCH,APIMCRD,APIMREF,APIMDOC,SP70
          CALL      RSAPIN1
.
GDAT2000  CALL      RKAPIN1
          BRANCH    OVRCD,GDAT9999
          PACK      KEY51,APINBCH,APINCRD,APINREF,APINDOC,APINORD,APINLIN,SP70
          MATCH     KEY40,KEY51
          GOTO      GDAT9999 IF NOT EQUAL
.
          CALL      FAMT0000
          BRANCH    EXIT,GDAT9999           * quit if invalid type
.
          COMPARE   SEQ,APINUCT
          GOTO      GDAT2000 IF EQUAL       * skip if TBA
.
          IF        INCPURCH=1
            MOVE      ZERO,APODAMT          * add purchases received if desired
            PACK      KEY14,APINORD,APINCAT,SP70
            CALL      RDAPOD1
            ADD       APODAMT,TRNAMT
          ENDIF
.
          MATCH     "1",FMCOATOT
          IF        !@EQUAL
            MOVE      SP70,APINLED     * clear if we dont care
          ELSE
            REP       " 0",APINLED     * make sure it is not blank
          ENDIF
.
          PACK      KEY22,APINCRD,APINREF,APINLED,SP70
          CALL      RDAPTM1
          IF        OVRCD=0
.                                      * update date if invoice record
            MATCH     "0",APIMTYP      * and > current invoice date
            IF        @EQUAL
              MATCH     APBMADT,APTMDATE
              IF        @LESS
                MOVE      APBMADT,APTMDATE
              ENDIF
            ENDIF
            ADD       TRNAMT,APTMAMT
            CALL      UPAPTM1
          ELSE
            MOVE      APBMADT,APTMDATE
            MOVE      APINCRD,APTMCRED
            MOVE      APINREF,APTMDOCR
            MOVE      TRNAMT,APTMAMT
            MOVE      APINLED,APTMLED
            CALL      WRAPTM1
          ENDIF
.
          GOTO      GDAT2000
.
GDAT9999  RETURN
.----------------------------------------------------------------------
. Format amount
.----------------------------------------------------------------------
FAMT0000  MOVE      ZERO,EXIT
.
          MOVE      APIMTYP,F1
          BRANCH    F1,FAMT2000,FAMT2000,FAMT3000,FAMT1000
.
FAMT1000  ASSIGN    APINAMT+APINGST,TRNAMT
          GOTO      FAMT9000
.
FAMT2000  ASSIGN    APINAMT+APINGST,TRNAMT
          MULT      SEQ,TRNAMT
          GOTO      FAMT9000
.
FAMT3000  MOVE      ONE,EXIT
.
FAMT9000
.
FAMT9999  RETURN
.
.--- temp file routines ----
.
RSAPTM1   RESET     KEY22
          READ      APSTMPA1,KEY22;;
          RETURN
.
RDAPTM1   MOVE      ZERO,OVRCD
          READ      APSTMPA1,KEY22;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          GOTO      OVERCOND IF OVER
          RETURN
.
RKAPTM1   MOVE      ZERO,OVRCD
          READKS    APSTMPA1;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          GOTO      OVERCOND IF OVER
          RETURN
.
UPAPTM1   UPDATE    APSTMPA1;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          RETURN
.
WRAPTM1   RESET     KEY22
          WRITE     APSTMPA1,KEY22;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          RETURN
.
RSAPTM2   RESET     KEY22
          READ      APSTMPA2,KEY22;;
          RETURN
.
RDAPTM2   MOVE      ZERO,OVRCD
          READ      APSTMPA2,KEY22;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          GOTO      OVERCOND IF OVER
          RETURN
.
RKAPTM2   MOVE      ZERO,OVRCD
          READKS    APSTMPA2;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          GOTO      OVERCOND IF OVER
          RETURN
.
UPAPTM2   UPDATE    APSTMPA2;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          RETURN
.
WRAPTM2   RESET     KEY22
          WRITE     APSTMPA2,KEY22;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          RETURN
.
RSAPTM3   RESET     KEY22
          READ      APSTMPA3,KEY22;;
          RETURN
.
RDAPTM3   MOVE      ZERO,OVRCD
          READ      APSTMPA3,KEY22;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          GOTO      OVERCOND IF OVER
          RETURN
.
RKAPTM3   MOVE      ZERO,OVRCD
          READKS    APSTMPA3;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          GOTO      OVERCOND IF OVER
          RETURN
.
UPAPTM3   UPDATE    APSTMPA3;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          RETURN
.
WRAPTM3   RESET     KEY22
          WRITE     APSTMPA3,KEY22;APTMCRED,APTMDOCR,APTMDATE,APTMAMT,APTMLED
          RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSBMFIO/INC
          INC       APSCKIKY    
          INC       APSCTSIO/INC
          INC       APSCTSKY    
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       APSORDIO/INC
          INC       FMSCONIO/INC
          INC       FMSLMAIO/INC
.
          INC       STDGENCD
.
