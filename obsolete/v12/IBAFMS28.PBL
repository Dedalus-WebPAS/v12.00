. ********************************************************************** 
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS28                                             *
. * Desc      :   Institution Code Maintenance                         *
. **********************************************************************
. * Date      :   16.09.1991                                           *
. * Author    :   Neeriem Dye                                          *
. * Mods      :                                                        *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.02  11.01.2000 Charles Handaya                               *
. *           Recompiled for Audit Files Date                          *
. * VF.00.01  29.04.1999 Sandra Barcham                                *
. *           Allow for new FMSDISKY & FMSRESKY                        *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS28
.             open files and initialise variables
.             WHILE user wants to execute program DO
.                  user inputs key
.                  CASE user option OF
.                       INSERT : key in initial fields
.                                modify as desired
.                                save data if desired
.                       MODIFY : display existing data
.                                modify as desired
.                                save data if desired
.                       DELETE : display existing data
.                                delete data if desired
.                  END
.             END
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
.
          INC       FMSAMAFD/INC       * Account
          INC       FMSBPFFD/INC       * Budget Profile
          INC       FMSBTYFD/INC       * Budget Type
          INC       FMSCONFD/INC       * Controlf
          INC       FMSDISFD/INC       * Dissection
          INC       FMSHCLFD/INC       * Inst Code
          INC       FMSLMAFD/INC       * Ledger
          INC       FMSLMCFD/INC       * Ledger Callendar
          INC       FMSRESFD/INC       * Responsibility
          INC       FMSSBAFD/INC       * Subjective
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
KOPT      INIT      "      "   * vars for KOPT
KOPT1     INIT      "Insert"
KOPT2     INIT      "Change"
KOPT3     INIT      "Delete"
KOPT4     INIT      "Copy  "
.
ACCEPT    FORM      1        * accept mode (1=on)
DESC1     DIM       35       * description
DESC2     DIM       35
DESC3     DIM       35
DESC4     DIM       35
DESC5     DIM       35
DESC6     DIM       35
DESC7     DIM       35
DESC8     DIM       35
DESC9     DIM       35
DESC10    DIM       35
DESC11    DIM       35
INST1     DIM       3        * institution
INST2     DIM       3
OPTIONA   FORM      2        * screen A selection keyin var
SCRNO     FORM      2        * screen number
.
PRGID     INIT      "IBAFMS28"
PRGNAM    INIT      "Institution Code Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.   MAINLINE - Controlling Logic
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      KOPT0000           * select option
          COMPARE   ZERO,COPTION
          GOTO      ML9999 IF EQUAL    * exit ?
          COMPARE   "4",COPTION
          GOTO      ML3000 IF EQUAL    * copy ?
.
ML0200    CALL      PROC0000           * get key
          BRANCH    EXIT,ML0100        * exit option
          BRANCH    COPTION,ML1000,ML1000,ML2000
.
.---- add/modify ----
.
ML1000    CALL      SELA0000           * perform screen A
          BRANCH    EXIT,ML0200        * exit option
.
          CALL      POST0000           * save data
          GOTO      ML0200             * get next selection
.
.---- delete ----
.
ML2000    CALL      SCRA0000           * display screen A
          CALL      DELQST             * ok to delete (y/n/c) ?
          SUB       ONE,CEXIT
          BRANCH    CEXIT,ML0200,ML0100 * exit option
.
          CALL      DELT0000           * delete data
          GOTO      ML0200             * get next selection
.
.---- copy ----
.
ML3000    CALL      SELB0000           * perform screen B
          GOTO      ML0100             * get next selection
.
ML9999    CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.  INIT - Open Files                             Called by ML
.******************************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          DISPLAY   *P56:24,"Opening controlf";  * controlf
          OPEN      CONTROLF,"controlf"
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
.
          DISPLAY   *P64:24,"fmsamaaf";  * Account
          OPEN      FMSAMAA1,"fmsamaaf"
          OPEN      FMSAMAA2,"fmsamaaf"
          OPEN      FMSAMAA3,"fmsamaaf"
          OPEN      FMSAMAA4,"fmsamaaf"
.
          DISPLAY   *P64:24,"fmsbtyaf";  * Budget Type
          OPEN      FMSBTYA1,"fmsbtyaf"
.
          DISPLAY   *P64:24,"fmsbpfaf";  * Budget Profile
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsdisaf";  * Dissection
          OPEN      FMSDISA1,"fmsdisaf"
.
          DISPLAY   *P64:24,"fmshclaf";  * Inst Code
          OPEN      FMSHCLA1,"fmshclaf"
.
          DISPLAY   *P64:24,"fmslmaaf";  * Ledger
          OPEN      FMSLMAA1,"fmslmaaf"
.
          DISPLAY   *P64:24,"fmslmcaf";  * Ledger Cal
          OPEN      FMSLMCA1,"fmslmcaf"
.
          DISPLAY   *P64:24,"fmsresaf";  * Responsibility
          OPEN      FMSRESA1,"fmsresaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * Subjective
          OPEN      FMSSBAA1,"fmssbaaf"
          OPEN      FMSSBAA2,"fmssbaaf"
.
INIT9999  DISPLAY   *P1:24,*EF;
          RETURN
.******************************************************************************
.  KOPT - Get desired function                    Called by ML                 
.        Displays option at *P50:2                                             
.        Display sub-option at *P65:2                                          
.        Requires : KOPT1, KOPT2, KOPT3 ....  (descriptions of options)        
.        Returns  : COPTION  (desired option)                                  
.******************************************************************************
KOPT0000  DISPLAY   *P1:3,*EF:             * display screen
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = ",KOPT1:
                    *P1:6,*V2LON,"2",*HOFF," = ",KOPT2:
                    *P1:7,*V2LON,"3",*HOFF," = ",KOPT3:
                    *P1:8,*V2LON,"4",*HOFF," = ",KOPT4
.
KOPT1000  KEYIN     *P1:10,"Select Option : _",*EL:
                    *P17:10,*V2LON,COPTION
          COMPARE   ZERO TO COPTION
          GOTO      KOPT9999 IF EQUAL       * exit ?
.
          MOVE      SP70,KOPT
          LOAD      KOPT,COPTION,KOPT1,KOPT2,KOPT3,KOPT4
          MATCH     SP70,KOPT
          GOTO      KOPT9000 IF NOT EQUAL   * valid option entered ?
          BEEP                              * illegal option, get another
          GOTO      KOPT1000
.
KOPT9000  DISPLAY   *P70:3,*V2LON,KOPT;     * display option
.
KOPT9999  RETURN
.******************************************************************************
.  PROC - Get Key                                Called by ML
.         Returns : EXIT     (1=exit)
.******************************************************************************
PROC0000  UNPACK    SP70,FMHLINST,FMHLDESC
          CALL      DHED0000                * display screen header
          MOVE      "28",CCOL               * set up keyin address
          MOVE      "4",CVERT
          MOVE      "0",SCRNO
.
PROC0100  COMPARE   ONE,COPTION             * insert ?
          CALL      AHCLFM00 IF EQUAL
          COMPARE   ONE,COPTION             * modify/delete ?
          CALL      KHCLFM00 IF NOT EQUAL
.
          BRANCH    EXIT,PROC9500,PROC9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
          LOAD      FMHLDESC,COPTION,SP70
          DISPLAY   *PCCOL:CVERT,*V2LON,FMHLINST;
          LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO
.
PROC9000  MOVE      ZERO,EXIT               * continue
          GOTO      PROC9999
.
PROC9500  MOVE      ONE,EXIT                * quit
.
PROC9999  RETURN
.******************************************************************************
.  DHED - Display Screen header                  Called by PROC, redisps
.******************************************************************************
DHED0000  DISPLAY   *P1:4,"   Institution Code      : ":
                          *V2LON,FMHLINST,*EF;
.
DHED9999  RETURN
.******************************************************************************
.  SCRA - Display Screen A                       Called by SELA, redisps
.******************************************************************************
SCRA0000  UNPACK    SP70,FMLADESC,FMLACYRR
          PACK      KEY2,FMHLPILE,SP70
          CALL      RDFMLA1
          MOVE      FMLACYRR,FMLCYEAR
.
          MOVE      SP70,FMSADESC
          PACK      KEY14,FMHLPILE,FMHLPIS1,SP70
          CALL      RDFMSA1
          MOVE      FMSADESC,DESC1
.
          MOVE      SP70,FMSADESC
          PACK      KEY14,FMHLPILE,FMHLPIS2,SP70
          CALL      RDFMSA1
          MOVE      FMSADESC,DESC2
.
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMHLPILE,FMHLPIS3,SP70
          CALL      RDFMAM1
          MOVE      FMAMDESC,DESC3
.
          MOVE      SP70,FMSADESC
          PACK      KEY14,FMHLPILE,FMHLPIS4,SP70
          CALL      RDFMSA1
          MOVE      FMSADESC,DESC4
.
          MOVE      SP70,FMSADESC
          PACK      KEY14,FMHLPILE,FMHLPIS5,SP70
          CALL      RDFMSA1
          MOVE      FMSADESC,DESC5
.
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMHLPILE,FMHLPIC1,SP70
          CALL      RDFMAM1
          MOVE      FMAMDESC,DESC6
.
          MOVE      SP70,FMAMDESC
          PACK      KEY14,FMHLPILE,FMHLPIC2,SP70
          CALL      RDFMAM1
          MOVE      FMAMDESC,DESC7
.
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMHLPIB1,SP70
          CALL      RDFMBT1
          MOVE      FMBTDESC,DESC8
.
          MOVE      SP70,FMBTDESC
          PACK      KEY4,FMHLPIB2,SP70
          CALL      RDFMBT1
          MOVE      FMBTDESC,DESC9
.
          MOVE      SP70,FMBPDESC
          PACK      KEY9,FMHLPILE,FMLCYEAR,FMHLPIP1,SP70
          CALL      RDFMBP1
          MOVE      FMBPDESC,DESC10
.
          MOVE      SP70,FMBPDESC
          PACK      KEY9,FMHLPILE,FMLCYEAR,FMHLPIP2,SP70
          CALL      RDFMBP1
          MOVE      FMBPDESC,DESC11
.
          MOVE      SP70,FMRSDESC
          PACK      KEY4,FMHLPIRS,SP70
          CALL      RDFMRS1
.
          MOVE      SP70,FMDSDESC
          PACK      KEY5,FMHLPIDS,SP70
          CALL      RDFMDS1
.
          DISPLAY   *P1:5,*EF,*V2LON:
                    *P1:6," 1",*HOFF,". Description          : ":
                          *V2LON,FMHLDESC:
                    *P1:7," 2",*HOFF,". Default Ledger       : ":
                          *V2LON,FMHLPILE,*HOFF,SP10,SP2,FMLADESC,*V2LON:
                    *P1:8," 3",*HOFF,". Debit Subj - Basic   : ":
                          *V2LON,FMHLPIS1,*HOFF,SP2,DESC1,*V2LON:
                    *P1:9," 4",*HOFF,".            - O'head  : ":
                          *V2LON,FMHLPIS2,*HOFF,SP2,DESC2,*V2LON:
                   *P1:10," 5",*HOFF,".            - Workcare: ":
                          *V2LON,FMHLPIS4,*HOFF,SP2,DESC4,*V2LON:
                   *P1:11," 6",*HOFF,".            - Accrual : ":
                          *V2LON,FMHLPIS5,*HOFF,SP2,DESC5,*V2LON:
                   *P1:12," 7",*HOFF,". Debit Acc  - LSL     : ":
                          *V2LON,FMHLPIS3,*HOFF,SP2,DESC3,*V2LON:
                   *P1:13," 8",*HOFF,". Credit Acc - Cash    : ":
                          *V2LON,FMHLPIC1,*HOFF,SP2,DESC6,*V2LON:
                   *P1:14," 9",*HOFF,".            - Accrual : ":
                          *V2LON,FMHLPIC2,*HOFF,SP2,DESC7,*V2LON:
                   *P1:15,"10",*HOFF,". Budget Typ - Cash    : ":
                          *V2LON,FMHLPIB1,*HOFF,SP10,DESC8,*V2LON:
                   *P1:16,"11",*HOFF,".            - Accrual : ":
                          *V2LON,FMHLPIB2,*HOFF,SP10,DESC9,*V2LON:
                   *P1:17,"12",*HOFF,". Csh Budg Prof- Basic : ":
                          *V2LON,FMHLPIP1,*HOFF,SP10,SP1,DESC10,*V2LON:
                   *P1:18,"13",*HOFF,".              - O'head: ":
                          *V2LON,FMHLPIP2,*HOFF,SP10,SP1,DESC11,*V2LON:
                   *P1:19,"14",*HOFF,". Dissection Code      : ":
                          *V2LON,FMHLPIDS,*HOFF,SP9,FMDSDESC,*V2LON:
                   *P1:20,"15",*HOFF,". Responsibiliy Code   : ":
                          *V2LON,FMHLPIRS,*HOFF,SP10,FMRSDESC,*V2LON:
                   *P1:21,"16",*HOFF,". Transaction Desc     : ":
                          *V2LON,FMHLPITD
.
SCRA9999  RETURN
.******************************************************************************
.  SELA - Perform Screen A                       Called by ML
.         Returns : EXIT     (1=exit)
.******************************************************************************
SELA0000  COMPARE   ONE,COPTION
          CALL      CLRD0000 IF EQUAL  * clear data if in insert mode
          MOVE      ZERO,OPTIONA       * reset item desired
          CALL      SCRA0000           * display screen A
          MOVE      "1",SCRNO
.
SELA0100  ADD       ONE,OPTIONA        * get next item
          BRANCH    ACCEPT,SELA0110    * in accept mode ?
          CALL      MAINQST            * get option if not in accept mode
          MOVE      CCITEM,OPTIONA
.
SELA0110  MOVE      "28",CCOL          * get screen address
          MOVE      "5",CVERT
          ADD       OPTIONA,CVERT
          MOVE      OPTIONA,F2         * adjust selection for quit/continue
          ADD       TWO,F2
          BRANCH    F2,SELA9500,SELA8000:                       * quit, continue
                       SELA1100,SELA1200,SELA1300,SELA1300:     * execute option
                       SELA1300,SELA1300,SELA1800,SELA1800:
                       SELA1800,SELA2000,SELA2000,SELA2200:
                       SELA2200,SELA2400,SELA2500,SELA2600
          BRANCH    ACCEPT,SELA0500    * at end of accept mode ?
          BEEP                         * illegal option
          GOTO      SELA0100           * get another option
.
SELA0500  MOVE      ZERO,ACCEPT        * clear accept mode
          GOTO      SELA0100
.
.---- option 1 ----
.
SELA1100  MATCH     FMHLDESC,SP70
          GOTO      SELA1150 IF NOT EQUAL        * description spaces ?
.
          PACK      FMHLDESC,UNDLN70
.
SELA1150  KEYIN     *PCCOL:CVERT,*DV,FMHLDESC:   * read in description
                    *PCCOL:CVERT,*V2LON,*RV,FMHLDESC;
          PACK      FMHLDESC,FMHLDESC,SP70
.
          MATCH     FMHLDESC,SP70
          GOTO      SELA1100 IF EQUAL            * description spaces ?
          MATCH     FMHLDESC,UNDLN70
          GOTO      SELA9500 IF EQUAL            * nothing entered ?
          MATCH     FMHLDESC,EXITCHAR
          GOTO      SELA9500 IF EQUAL            * EXITCHAR entered ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMHLDESC;
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  CALL      KLMAFM00                * get data
          BRANCH    EXIT,SELA1200,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
          MOVE      FMLALEDG,FMHLPILE
          MOVE      FMLACYRR,FMLCYEAR
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SP10,SP2,FMLADESC;
          GOTO      SELA0100
.
.---- option 3,4,5,6 ----
.
SELA1300  MOVE      "5",CSUBJIND
          CALL      KSBAFM00                * get data
          BRANCH    EXIT,SELA1300,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
          STORE     FMSASUBJ,OPTIONA,ANS,ANS,FMHLPIS1,FMHLPIS2:
                                     FMHLPIS4,FMHLPIS5
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSASUBJ,*HOFF,SP2,FMSADESC;
          GOTO      SELA0100
.
.---- option 7,8,9 ----
.
SELA1800  MOVE      "1",CACCTIND            * posting accounts only
          CALL      KAMAFM00                * get data
          BRANCH    EXIT,SELA1800,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
          STORE     FMAMACCT,OPTIONA,ANS,ANS,ANS,ANS,ANS,ANS,FMHLPIS3:
                                     FMHLPIC1,FMHLPIC2
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMACCT,*HOFF,SP2,FMAMDESC;
          GOTO      SELA0100
.
.---- option 10,11 ----
.
SELA2000  CALL      KBTYFM00                * get data
          BRANCH    EXIT,SELA2000,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
          STORE     FMBTCODE,OPTIONA,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS:
                                     FMHLPIB1,FMHLPIB2
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBTCODE,*HOFF,SP10,FMBTDESC;
          GOTO      SELA0100
.
.---- option 12,13 ----
.
SELA2200  CALL      KBPFFM00                * get data
          BRANCH    EXIT,SELA2250,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
.
SELA2250  LOAD      FMBPCODE,EXIT,SP70      * clear if no entry
          LOAD      FMBPDESC,EXIT,SP70
          STORE     FMBPCODE,OPTIONA,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS,ANS:
                                     ANS,ANS,FMHLPIP1,FMHLPIP2
          DISPLAY   *PCCOL:CVERT,*V2LON,FMBPCODE,*HOFF,SP10,SP1,FMBPDESC;
          GOTO      SELA0100
.
.---- option 14 ----
.
SELA2400  MOVE      ZERO,CKEYTYP
          CALL      KFMDSA00
.         CALL      KDISFM00                * get data
          BRANCH    EXIT,SELA2400,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
          MOVE      FMDSCODE,FMHLPIDS
          DISPLAY   *PCCOL:CVERT,*V2LON,FMDSCODE,*HOFF,SP9,FMDSDESC;
          GOTO      SELA0100
.
.---- option 15 ----
.
SELA2500  MOVE      ZERO,CKEYTYP
          CALL      KFMRSA00
.         CALL      KRESFM00                * get data
          BRANCH    EXIT,SELA2500,SELA9500  * entry ok ? (1=blank, 2=EXITCHAR)
          MOVE      FMRSCODE,FMHLPIRS
          DISPLAY   *PCCOL:CVERT,*V2LON,FMRSCODE,*HOFF,SP10,FMRSDESC;
          GOTO      SELA0100
.
.---- option 16 ----
.
SELA2600  MATCH     FMHLPITD,SP70
          GOTO      SELA2650 IF NOT EQUAL        * description spaces ?
.
          PACK      FMHLPITD,UNDLN70
.
SELA2650  KEYIN     *PCCOL:CVERT,*DV,FMHLPITD:   * read in description
                    *PCCOL:CVERT,*V2LON,*RV,FMHLPITD;
          PACK      FMHLPITD,FMHLPITD,SP70
.
          MATCH     FMHLPITD,SP70
          GOTO      SELA2600 IF EQUAL            * description spaces ?
          MATCH     FMHLPITD,UNDLN70
          GOTO      SELA2600 IF EQUAL            * nothing entered ?
          MATCH     FMHLPITD,EXITCHAR
          GOTO      SELA9500 IF EQUAL            * EXITCHAR entered ?
.
          DISPLAY   *PCCOL:CVERT,*V2LON,FMHLPITD;
          GOTO      SELA0100
.
.
SELA8000  CALL      CKLE0000                     * check if accounts valid
          BRANCH    EXIT,SELA0100
.
SELA9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT           * quit
.
SELA9999  RETURN
.**********************************************************************
.  CKLE - Check if accounts valid                      Called By SELA
.        Requires - FMSHCLAF record
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CKLE0000  PACK      KEY2,FMHLPILE,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,CKLE8000
          MOVE      FMLACYRR,FMLCYEAR
.
          PACK      KEY14,FMHLPILE,FMHLPIS1,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,CKLE8100
          MATCH     "0",FMSASTYP
          GOTO      CKLE8100 IF NOT EQUAL
.
          PACK      KEY14,FMHLPILE,FMHLPIS2,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,CKLE8100
          MATCH     "0",FMSASTYP
          GOTO      CKLE8100 IF NOT EQUAL
.
          PACK      KEY14,FMHLPILE,FMHLPIS4,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,CKLE8100
          MATCH     "0",FMSASTYP
          GOTO      CKLE8100 IF NOT EQUAL
.
          PACK      KEY14,FMHLPILE,FMHLPIS5,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,CKLE8100
          MATCH     "0",FMSASTYP
          GOTO      CKLE8100 IF NOT EQUAL
.
          PACK      KEY14,FMHLPILE,FMHLPIS3,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLE8200
          MATCH     "6",FMAMTYPE
          GOTO      CKLE8200 IF NOT LESS
.
          PACK      KEY14,FMHLPILE,FMHLPIC1,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLE8200
          MATCH     "6",FMAMTYPE
          GOTO      CKLE8200 IF NOT LESS
.
          PACK      KEY14,FMHLPILE,FMHLPIC2,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKLE8200
          MATCH     "6",FMAMTYPE
          GOTO      CKLE8200 IF NOT LESS
.
          PACK      KEY4,FMHLPIB1,SP70
          CALL      RDFMBT1
          BRANCH    OVRCD,CKLE8600
          MATCH     FMBTYEAR,FMLACYRR
          GOTO      CKLE8700 IF NOT EQUAL
          MATCH     "2",FMBTSTAT
          GOTO      CKLE8800 IF EQUAL
.
          PACK      KEY4,FMHLPIB2,SP70
          CALL      RDFMBT1
          BRANCH    OVRCD,CKLE8600
          MATCH     FMBTYEAR,FMLACYRR
          GOTO      CKLE8700 IF NOT EQUAL
          MATCH     "2",FMBTSTAT
          GOTO      CKLE8800 IF EQUAL
.
          MATCH     SP70,FMHLPIP1
          GOTO      CKLE1000 IF EQUAL
          PACK      KEY9,FMHLPILE,FMLCYEAR,FMHLPIP1,SP70
          CALL      RDFMBP1
          BRANCH    OVRCD,CKLE8300
.
CKLE1000  MATCH     SP70,FMHLPIP1
          GOTO      CKLE2000 IF EQUAL
          PACK      KEY9,FMHLPILE,FMLCYEAR,FMHLPIP2,SP70
          CALL      RDFMBP1
          BRANCH    OVRCD,CKLE8300
.
CKLE2000  MATCH     FMHLPIB1,FMHLPIB2
          GOTO      CKLE8500 IF EQUAL
.
          GOTO      CKLE9000                * data ok !!
.
.---- error messages ----
.
CKLE8000  DISPLAY   *P1:24,*B,*EF,"Invalid Ledger ",*V2LON,FMHLPILE,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLE9500
.
CKLE8100  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          DISPLAY   *P1:24,*B,*EF,"Invalid Subjective ",*V2LON:
                    FMAMLEDG,SLASH,FMAMACCT,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLE9500
.
CKLE8200  UNPACK    KEY14,FMAMLEDG,FMAMACCT
          DISPLAY   *P1:24,*B,*EF,"Invalid Account ",*V2LON:
                    FMAMLEDG,SLASH,FMAMACCT,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLE9500
.
CKLE8300  UNPACK    KEY9,FMBPLEDG,FMBPYEAR,FMBPCODE
          DISPLAY   *P1:24,*B,*EF,"Invalid Profile ",*V2LON:
                    FMBPCODE,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLE9500
.
CKLE8500  DISPLAY   *P1:24,*B,*EF:
                    "Cash And Accrual Budget Types Must Not Be Identical - ";
          CALL      HITENTER
          GOTO      CKLE9500
.
CKLE8600  DISPLAY   *P1:24,*B,*EF,"Invalid Budget Type ",*V2LON:
                    KEY4,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLE9500
.
CKLE8700  DISPLAY   *P1:24,*B,*EF:
                    "Budget Year and Ledger Year Mismatch For Budget ",*V2LON:
                    KEY4,*HOFF," - ";
          CALL      HITENTER
          GOTO      CKLE9500
.
CKLE8800  DISPLAY   *P1:24,*B,*EF,"Budget Type ",*V2LON:
                    KEY4,*HOFF," Locked - ";
          CALL      HITENTER
          GOTO      CKLE9500
.
.
CKLE9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKLE9999
.
CKLE9500  MOVE      ONE,EXIT           * quit
.
CKLE9999  RETURN
.**********************************************************************
.  CLRD - Clear data                                   Called By SELA
.**********************************************************************
CLRD0000  UNPACK    SP70,FMHLDESC,FMHLPILE,FMHLPIS1
          UNPACK    SP70,FMHLPIS2,FMHLPIS3,FMHLPIS4,FMHLPIS5,FMHLPIC1
          UNPACK    SP70,FMHLPIC2,FMHLPIB1,FMHLPIB2,FMHLPIRS,FMHLPIDS
          UNPACK    SP70,FMHLPIP1,FMHLPIP2,FMHLSPAR
          UNPACK    SP70,FMHLPITD
.
CLRD9999  RETURN
.**********************************************************************
.  SCRB - Display screen B                      Called By SELB, redisps
.**********************************************************************
SCRB0000  DISPLAY   *P1:4,"   From Institution Code : ":
                    *V2LON,INST1,*HOFF,SP2,DESC1,*EL:
                    *P1:5,"   To   Institution Code : ":
                    *V2LON,INST2,*HOFF,*EL:
                    *P1:6,"   To   Description      : ":
                    *V2LON,DESC2,*EF;
.
SCRB9999  RETURN
.**********************************************************************
.  SELB - Copy Data                                    Called By ML
.        Returns  - EXIT     (1=quit)
.**********************************************************************
SELB0000  UNPACK    SP70,INST1,DESC1
          UNPACK    SP70,INST2,DESC2
          MOVE      "2",SCRNO
          CALL      SCRB0000           * display screen
          MOVE      "28",CCOL
          MOVE      "4",CVERT
          CALL      KHCLFM00
          BRANCH    EXIT,SELB9999,SELB9999
          DISPLAY   *PCCOL:CVERT,*V2LON,FMHLINST,*HOFF,SP2,FMHLDESC;
          PACK      INST1,FMHLINST,SP70
          PACK      DESC1,FMHLDESC,SP70
.
SELB1000  UNPACK    SP70,INST2,DESC2
          MOVE      "28",CCOL
          MOVE      "5",CVERT
          CALL      AHCLFM00
          BRANCH    EXIT,SELB0000,SELB9999
          DISPLAY   *PCCOL:CVERT,*V2LON,FMHLINST;
          PACK      INST2,FMHLINST,SP70
.
SELB2000  UNPACK    SP70,DESC2
          MOVE      "28",CCOL
          MOVE      "6",CVERT
          KEYIN     *PCCOL:CVERT,*DV,DESC2:   * read in description
                    *PCCOL:CVERT,*V2LON,DESC2,*EL;
          PACK      DESC2,DESC2,SP70
.
          MATCH     DESC2,SP70
          GOTO      SELB1000 IF EQUAL            * description spaces ?
          MATCH     DESC2,UNDLN70
          GOTO      SELB1000 IF EQUAL            * nothing entered ?
          MATCH     DESC2,EXITCHAR
          GOTO      SELB9999 IF EQUAL            * EXITCHAR entered ?
.
          CALL      CONTQST            * ok to continue (y/n/c) ?
          SUB       ONE,CEXIT
          BRANCH    CEXIT,SELB9100,SELB9999
.
SELB9000  CALL      COPY0000           * copy data
.
SELB9100  UNPACK    SP70,INST2,DESC2
          CALL      SCRB0000           * display screen
          GOTO      SELB1000           * get next entry
.
SELB9999  RETURN
.**********************************************************************
.  COPY - Copy Data                                    Called By ML
.**********************************************************************
COPY0000  PACK      KEY3,INST1,SP70
          CALL      RDFMHL1
          BRANCH    OVRCD,COPY9999
.
          PACK      KEY3,INST2,SP70
          UNPACK    KEY3,FMHLINST
          UNPACK    DESC2,FMHLDESC
          CALL      DEFMHL1
          CALL      WRFMHL1
.
COPY9999  RETURN
.**********************************************************************
.  POST - Post Data                                    Called By ML
.**********************************************************************
POST0000  PACK      KEY3,FMHLINST,SP70
          CALL      DEFMHL1
          CALL      WRFMHL1
.
POST9999  RETURN
.**********************************************************************
.  DELT - Delete Data                                  Called By ML
.**********************************************************************
DELT0000  PACK      KEY3,FMHLINST,SP70
          CALL      DEFMHL1
.
DELT9999  RETURN
.******************************************************************************
.  Redisplays
.******************************************************************************
RAMAFM00  
RBPFFM00  
RBTYFM00  
RDISFM00  
RHCLFM00  
RLMAFM00  
RRESFM00  
RSBAFM00  
          BRANCH    SCRNO,RDISA000,RDISB000
          CALL      DHED0000
          GOTO      RZZZFM99
.
RDISA000  CALL      DHED0000
          CALL      SCRA0000
          GOTO      RZZZFM99
.
RDISB000  CALL      SCRB0000
          GOTO      RZZZFM99
.
RZZZFM99  RETURN
.******************************************************************************
.  INCLUDES FOR I/O'S
.******************************************************************************
.
          INC       FMSSTDCD           * FMS Acc. standard routines
.
          INC       FMSAMAIO/INC       * Account
          INC       FMSBPFIO/INC       * Budget Profile
          INC       FMSBTYIO/INC       * Budget Type
          INC       FMSCONIO/INC       * Controlf
          INC       FMSDISIO/INC       * Dissection
          INC       FMSHCLIO/INC       * Inst Code
          INC       FMSLMAIO/INC       * Ledger
          INC       FMSLMCIO/INC       * Ledger Callendar
          INC       FMSRESIO/INC       * Responsibility
          INC       FMSSBAIO/INC       * Subjective
.
          INC       FMSAMAKY           * Account
          INC       FMSBPFKY           * Budget Profile
          INC       FMSBTYKY           * Budget Type
          INC       FMSDISKY           * Dissection
          INC       FMSHCLKY           * Inst Code
          INC       FMSLMAKY           * Ledger
          INC       FMSRESKY           * Responsibility
          INC       FMSSBAKY           * Subjective
