.*****************************************************************************
.*    Program      : F02PMRES                                                *
.*    Description  : Conversion pmsresaf to new File layout                  *
.*                                                                           *
.*    Author       : J.Tan                                                   *
.*    Date         : 06/06/2011                                              *
.*    Modifications:                                                         *
.*        V10.02.02 20/07/2011  J.Tan         CAR 239592                     *
.*                  Added free format Name of School                         *
.*        V10.02.01 14/06/2011  J.Tan         CAR 239592                     *
.*                  Added user/date/time record updated and created          *
.*        V10.02.00 06/06/2011  J.Tan         CAR 239592                     *
.*                  Program created                                          *
.*****************************************************************************
.
.  Global change F02PMRES  eg F57PTDOC
.  Global change PMSRESFD  eg PATDOCFD (new layout)
.  Global change pmsresaf  eg patdoctf
.  Global change PMSRESA1  eg PATDOCT1
.  Global change KEY8    eg KEY8
.  Global change WRPMRES1  eg WRDOCT1
.  Global change spmresaf  eg sptdoctf
.
.  vi Global change command  :%s/FromString/ToString/g
.
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
OLDFILE1   IFILE    SQL, FIXED=255, KEY="U1-8"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.PMRSURNO  DIM       8      8        1     UR Number
.PMRSCONT  DIM       3      3        9     Country of Residence (Cat C)
.PMRSTEXP  DIM       8      8        12    Temp Residence Expiry Date CCYYMMDD
.PMRSGRDT  DIM       8      8        20    Residency Granted Date CCYYMMDD
.PMRSCOMM  DIM       127    127      28    Comments
.PMRSVISN  DIM       10     10       155   Visa Number
.PMRSVEXP  DIM       8      8        165   Visa Expiry Date (CCYYMMDD)
.PMRSVTYP  DIM       3      3        173   Visa Type (Cat vt)
.PMRSPNUM  DIM       20     20       176   Passport Number
.PMRSPEXP  DIM       8      8        196   Passport Expiry Date (CCYYMMDD)
.PMRSPCOU  DIM       3      3        204   Passport Country of Issue (Cat C)
.PMRSSPAR  DIM       48     48       207   Spare
.
.End of Record                      255
.
.                                     ******** copy the new FD here *******
.Data File Definition
.--------------------
.
PMSRESA1   IFILE    SQL, FIXED=1175, KEY="U1-8"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
PMRSURNO  DIM       8      8        1     UR Number
PMRSCONT  DIM       3      3        9     Country of Residence (Cat C)
PMRSTEXP  DIM       8      8        12    Temp Residence Expiry Date CCYYMMDD
PMRSGRDT  DIM       8      8        20    Residency Granted Date CCYYMMDD
PMRSCOMM  DIM       127    127      28    Comments
PMRSVISN  DIM       10     10       155   Visa Number
PMRSVEXP  DIM       8      8        165   Visa Expiry Date (CCYYMMDD)
PMRSVTYP  DIM       3      3        173   Visa Type (Cat vt)
PMRSPNUM  DIM       20     20       176   Passport Number
PMRSPEXP  DIM       8      8        196   Passport Expiry Date (CCYYMMDD)
PMRSPCOU  DIM       3      3        204   Passport Country of Issue (Cat C)
PMRSINCD  DIM       6      6        207   Insurance Code
PMRSINFM  DIM       20     20       213   Insurance Fund Membership Number
PMRSINEX  DIM       8      8        233   Insurance Expiry Date (ccyymmdd)
PMRSSTDN  DIM       20     20       241   Student Number
PMRSSCHL  DIM       6      6        261   Name of School (pateoraf)
PMRSECON  DIM       50     50       267   Employer Name
PMRSCAD1  DIM       35     35       317   Employer Address Line 1
PMRSCAD2  DIM       35     35       352   Employer Address Line 2
PMRSCAD3  DIM       35     35       387   Employer Address Line 3
PMRSCAD4  DIM       35     35       422   Employer Address Line 4
PMRSCPCD  DIM       8      8        457   Employer Postcode
PMRSSBIL  DIM       1      1        465   Send Bill to Local Address
PMRSTINS  DIM       1      1        466   Travel Insurance 0=No, 1=Yes
PMRSIPOL  DIM       20     20       467   Travel Insurance Policy Number
PMRSIEXD  DIM       8      8        487   Policy Number Expiry Date CCYYMMDD
PMRSUCM1  DIM       50     50       495   Comment 1
PMRSUCM2  DIM       50     50       545   Comment 2
PMRSUCM3  DIM       50     50       595   Comment 3
PMRSUCM4  DIM       50     50       645   Comment 4
PMRSUCM5  DIM       50     50       695   Comment 5
PMRSCCNT  DIM       50     50       745   Employer Contact Name
PMRSCPHN  DIM       20     20       795   Employer Phone
PMRSFSCH  DIM       30     30       815   Free Format Name of School
PMRSSAD1  DIM       35     35       845   School Address Line 1
PMRSSAD2  DIM       35     35       880   School Address Line 2
PMRSSAD3  DIM       35     35       915   School Address Line 3
PMRSSAD4  DIM       35     35       950   School Address Line 4
PMRSSPCD  DIM       8      8        985   School Postcode
PMRSSCNT  DIM       50     50       993   School Contact Name
PMRSSPHN  DIM       20     20       1043  School Phone
PMRSCUID  DIM       10     10       1063  WEB User ID Created (websecaf)
PMRSCDAT  DIM       8      8        1073  Date Record Created (CCYYMMDD)
PMRSCTIM  DIM       8      8        1081  Time Record Created (hh:mm:ss)
PMRSUUID  DIM       10     10       1089  WEB User ID Updated (websecaf)
PMRSUDAT  DIM       8      8        1099  Date Record Updated (CCYYMMDD)
PMRSUTIM  DIM       8      8        1107  Time Record Updated (hh:mm:ss)
PMRSSPAR  DIM       60     60       1115  Spare Variable
.
.End of Record                      1175
.
.
.                                           * standard Fixit variables
CMDLINE   DIM       100
DIM4      DIM       4
DIM4A     DIM       4
DIM6      DIM       6
DIM6A     DIM       6
DIM60     DIM       60
DIM48     DIM       48
DDCENT    DIM       2
.
FORM3     FORM      3
.
INPFILE   DIM       8
RECNUM    FORM      8
NEWFILE   DIM       60
NEWPATH   DIM       60
OLDPATH   DIM       60
DEFPATH   DIM       60
SAVEFLG   FORM      1
SP50      INIT    "                                                  "
SP60      INIT    "                                                            "
.
PRGNAM    INIT      "CONVERSION PMSRESFD"
PRGID     INIT      "F02PMRES"
VERSION   INIT      "V12.00.00"
.
. Start of Program
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9999
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN1000,MAIN0000,MAIN9999 * Yes, no, cancel
.
MAIN1000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9999
.
. Loop thru old file and write records to new file
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/compress saved file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          
INIT9999  RETURN
.
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
PREP0000 
. open old file
          MOVE      "pmsresaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
. Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsresaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmresaf.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat pmsresaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "spmresaf.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
. remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "pmsresaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove the original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "spmresaf",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Unable to open saved original file.  ";
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
. Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "pmsresaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
          APPEND    " 1175 UC1-8",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      PMSRESA1,NEWFILE
.
. set the flag to say we want to continue
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
          GOTO      PREP9999
.
PREP5000  DISPLAY   *P1:24,*EL,*B,"Old file not found.  ";
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  DISPLAY   *P1:24,*EL,*B,"Unable to copy original file.  ":
                    "(Error: ",TASKID,")  ";
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
            ELSE
              DISPLAY   "has caused an IO error - ";
            ENDIF
          ENDIF
          DISPLAY   "File will be bypassed"
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
.
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          MOVE      SP70,DIM48
          PACK      KEY8,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
          ADD       ONE,RECNUM                    * update record counter
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
          UNPACK    SP70,PMRSINCD,PMRSINFM,PMRSINEX
          UNPACK    SP70,PMRSSTDN,PMRSECON
          UNPACK    SP70,PMRSCAD1,PMRSCAD2
          UNPACK    SP70,PMRSCAD3,PMRSCAD4
          UNPACK    SP70,PMRSCPCD,PMRSSBIL,PMRSTINS
          MOVE      SP70,PMRSUCM1
          MOVE      SP70,PMRSUCM2
          MOVE      SP70,PMRSUCM3
          MOVE      SP70,PMRSUCM4
          MOVE      SP70,PMRSUCM5
          UNPACK    SP70,PMRSIPOL,PMRSIEXD,PMRSSCHL
          UNPACK    SP70,PMRSCUID,PMRSCDAT,PMRSCTIM
          UNPACK    SP70,PMRSUUID,PMRSUDAT,PMRSUTIM
          UNPACK    SP70,PMRSCCNT               * Employer Contact Name
          UNPACK    SP70,PMRSCPHN               * Employer Phone
          UNPACK    SP70,PMRSFSCH               * Free Format Name of School
          UNPACK    SP70,PMRSSAD1               * School Address Line 1
          UNPACK    SP70,PMRSSAD2               * School Address Line 2
          UNPACK    SP70,PMRSSAD3               * School Address Line 3
          UNPACK    SP70,PMRSSAD4               * School Address Line 4
          UNPACK    SP70,PMRSSPCD               * School Postcode
          UNPACK    SP70,PMRSSCNT               * School Contact Name
          UNPACK    SP70,PMRSSPHN               * School Phone
          PACK      PMRSSPAR,SP70,SP70
.                                               * Pack key here
          PACK      KEY8,PMRSURNO
          CALL      WRPMRES1                    * write to new file
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     PMSRESA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
READ9999  RETURN
.
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
VALD0000  MOVE      ZERO,EXIT
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Directory does not exist ";
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or compress save file                                *
.**********************************************************************
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "spmresaf*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "compress -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Saved file not compressed or removed.  ";
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          DISPLAY   *P1:24,*EL,*B,"Finish processing.  ";
          CALL      HITENTER
.
ENDP9999  RETURN
+
.**********************************************************************
.         Get the default directory
.**********************************************************************
DEFT0000  EXECUTE   "ldat pmsresaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  DISPLAY   *P1:24,*EL,*B,"Error finding 'pmsresaf'.  ";
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
DEFT9999  RETURN
+
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  RESET     KEY8
          READ      OLDFILE1,KEY8;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;PMRSURNO,PMRSCONT,PMRSTEXP,PMRSGRDT,PMRSCOMM:
                        PMRSVISN,PMRSVEXP,PMRSVTYP,PMRSPNUM,PMRSPEXP,PMRSPCOU:
                        DIM48
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
WRPMRES1  RESET     KEY8
          WRITE     PMSRESA1,KEY8;PMRSURNO,PMRSCONT,PMRSTEXP,PMRSGRDT,PMRSCOMM:
                        PMRSVISN,PMRSVEXP,PMRSVTYP,PMRSPNUM,PMRSPEXP,PMRSPCOU:
                        PMRSINCD,PMRSINFM,PMRSINEX,PMRSSTDN,PMRSSCHL,PMRSECON:
                        PMRSCAD1,PMRSCAD2,PMRSCAD3,PMRSCAD4,PMRSCPCD,PMRSSBIL:
                        PMRSTINS,PMRSIPOL,PMRSIEXD,PMRSUCM1,PMRSUCM2,PMRSUCM3:
                        PMRSUCM4,PMRSUCM5,PMRSCCNT,PMRSCPHN,PMRSFSCH,PMRSSAD1:
                        PMRSSAD2,PMRSSAD3,PMRSSAD4,PMRSSPCD,PMRSSCNT,PMRSSPHN:
                        PMRSCUID,PMRSCDAT,PMRSCTIM,PMRSUUID,PMRSUDAT,PMRSUTIM:
                        PMRSSPAR
          RETURN
.
          INC       STD001IO
