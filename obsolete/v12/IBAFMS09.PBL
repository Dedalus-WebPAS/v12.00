. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAFMS09                                             *
. * Desc      :   Cost Centre Maintenance                              *
. **********************************************************************
. * Date      :   03.10.1990                                           *
. * Author    :   Paul Duncan (IBA)                                    *
. * Mods      :                                                        *
. **********************************************************************
. * V10.13.01 05/12/2018  Don Nguyen        TSK 0838558                *
. *           Deleted temp file (FMSTMP01) on program exit.            *
. *           Removed PORT from temp filenames (FILENAM1 & FILENAM2).  *
. **********************************************************************
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.00.06  14.01.2000 Sandra Barcham                                *
. *           Recompiled for version change                            *
. * VF.00.05  09.11.1999 Charles Handaya                               *
. *           Fix Y2K of Audit Files Date (CCYYMMDD)                   *
. * VF.00.04  20.10.1999 Charles Handaya                               *
. *           For Change mode - Suspend All Accounts, Update CC status *
. *           and write to audit file as well, if necessary            *
. * VF.00.03  19.10.1999 Brian Ackland                                 *
. *           Fix Consolidated Cost Centre Descriptions in Normal Cost *
. * VF.00.02  30.06.1999 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. *           srf 632475                                               *
. * VF.00.01  29.04.1998 Sandra Barcham                                *
. *           Recompiled for FMSLEVKY                                  *
. **********************************************************************
.$$$$$$
.        PROGRAM IBAFMS09 
.             open files and initialise variables
.             WHILE user wants to add/modify DO
.                  get desired option (add, modify,delete)
.                  get option(reporting Details,related subjectives)
.                  CASE option OF
.                       INSERT  : 
.                                  WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       CHANGE  : 
.                                 WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.             delete temporary files
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       FMSSTDDF
          INC       FMSUPDDF           * standard update include
          INC       FMSUDADF           * FMS audit update variables
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       FMSBPFFD/INC
          INC       FMSCCAFD/INC
          INC       FMSCCCFD/INC       * consolidated cost centre
          INC       FMSCODFD/INC
          INC       FMSCTRFD/INC       * normal tran file
          INC       FMSLEVFD/INC
          INC       FMSPRCFD/INC
          INC       FMSRSFFD/INC       * report seq file
          INC       FMSSBAFD/INC       * subjective
          INC       FMSSLBFD/INC       * subjective budg link
          INC       FMSSSCFD/INC
          INC       FMSSTRFD/INC       * stat tran file
          INC       FMSTRNFD/INC       * normal tran file
          INC       FMSUWPFD/INC
          INC       FMSXCSFD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
SAVPPOS    DIM       5
SAVKEY19  DIM       19       * audit routine vars
WAUDTYPE  FORM      1
.
ACCEPT    FORM      1
ACCTDESC  DIM       35
AMOUNTNO  FORM      1
.
XLCNT     FORM      2
CHECKCC   DIM       12
CKEY14    DIM       14
.
MODE      FORM      1
.
MODESC    INIT      "      "                  * description type
MODESC1   INIT      "Insert"
MODESC2   INIT      "Delete"
.
OLDADES   DIM       35                 * old abbrev description
OLDDESC   DIM       35                 * old description
OLDPPOS   DIM       5                  * old print position
OPTNO     FORM      2
.
SELECT    FORM      2
SP12      INIT      "            "
SAVKEY14  DIM       14                 * key 14 save
SAVKEY31  DIM       31                 * key 31 save
SAVKEY33  DIM       33                 * key 33 save
.
TYPEDESC  DIM       10
.
FMSTMP01  FILE      ASCII,FIXED=70     * WP Holding File Def'n 1
FILENAM1  DIM       8
NAME1     INIT      "fmstm1"
.
FMSTMP02  FILE      ASCII,FIXED=70     * WP Holding File Def'n 2
FILENAM2  DIM       8
NAME2     INIT      "fmstm2"
.
DSIX      INIT      "6"
DSEVEN    INIT      "7"
DEIGHT    INIT      "8"
DESC1     DIM       127
DNINE     INIT      "9"
CCLEV     DIM       3        * cc level
DELALL    FORM      1        * delete all the way up data tree in DREC   1=yes
FILENAME  DIM       8
SLBNAME   DIM       8
FMSO      INIT      "fmso"
HEADSEQ   INIT      "00000"
TOTSEQ    INIT      "ZZZZZ"
.
CP        INIT      "cp "              * word processor variables
TXT       INIT      ".txt "
WHICAUDT  INIT      " "
WP        INIT      "wp "
WPDAT     INIT      ".txt 999 7 -1 70 14"
WPSTAT    FORM      2
.
MAXITEMS  FORM      "15"               * maximum no. of items on screen C + 1
.
ACCTSEQ   DIM       5                  * account sequence
COSTCODE  DIM       12                 * cost centre code
CURLEVEL  DIM       3                  * current report level
CREDITYN  DIM       1                  * current Credit Account Y/N
CURPRTC   DIM       3                  * current print code
CURPRTP   DIM       5                  * current print position
CURPAGE   FORM      3                  * current page number
DEFDATE   DIM       8                  * default date for new user defined dates
FROMCOCE  DIM       12                 * start of CC range
ITEMNUM   FORM      2                  * item number
MORE      FORM      1                  * more data (1=yes)
OPTIONC   FORM      2                  * screen selection keyin var
PAGENO    FORM      3                  * current page number
POSTACCT  DIM       12                 * posting account "add to account"
RANGFLAG  FORM      1
SAVCOCE   DIM       12                 * key save for cost centre
SAVDCOCE  DIM       35                 * key save for cost centre description
SAVDLEDG  DIM       35                 * key save for ledger description
SAVITEM   FORM      2                  * item number for screen C
SAVLEDG   DIM       2                  * key save for ledger
SAVPERS   FORM      1                  * save for no of periods (1=13,0=12)
SAVRPNO   DIM       2                  * key save for report number
SAVSUBJ   DIM       12                 * subjective code save
SCRNO     FORM      1                  * screen number
SKEY      DIM       35                 * key save for screen C
SKEY26    DIM       26                 * key save for screen C
SKEY27    DIM       27
SUBJCODE  DIM       12                 * subjective code
TEMPACCT  DIM       12                 * temp account
TEMPCPOS  DIM       5                  * temp cc print position
TEMPCOST  DIM       12                 * temp cc
TEMPDESC  DIM       35                 * temp description
TEMPSPOS  DIM       5                  * temp subj print position
TEMPSUBJ  DIM       12                 * temp subj
TOCOCE    DIM       12                 * end of CC range
.
OLDDCOST  FORM      1        * 1=use old cc data
OLDDSUBJ  FORM      1        * 1=use old subj data
OLDADDT   DIM       12       * old subj add to
OLDSTAT   FORM      2        * old status type
RESTFMSA  DIM       14
SFMTS01   DIM       43
SFMTS02   DIM       43
SFMTS03   DIM       43
SFMTS04   DIM       43
SFMTS05   DIM       43
SFMTS06   DIM       43
SFMTS07   DIM       43
SFMTS08   DIM       43
SFMTS09   DIM       43
SFMTS10   DIM       43
SKEY31    DIM       31
SKEY43    DIM       43
SKIPFMTU  FORM      1
SKIPLINE  FORM      1
SAVETIME  DIM       8
WRECLEV   FORM      2
.
DIM1E     DIM       1
DIMA14    DIM       14
DIMB14    DIM       14
DIMC5     DIM       5
DIMD35    DIM       35
DIME5     DIM       5
SAVEDATA  DIM       50
SAVECCC   DIM       50       * field to ccc data
IBAMODE   FORM      "0"
NORMFIL1  DIM       8                  * norm tran file
NORMFIL2  DIM       8                  * norm tran file
STATFILE  DIM       8                  * stat tran file
F4YEAR    FORM      4
FMST      INIT      "fmst"
FMSA      INIT      "fmsa"
NEWSTAT   FORM      1
DNEWSTAT  DIM       2
.
PRGID     INIT      "IBAFMS09"
PRGNAM    INIT      "Cost Centre Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
          BRANCH    EXIT,ML9999        * control file ok ?
.
ML0100    CALL      MENU0000           * select main option
          BRANCH    EXIT,ML9999
          COMPARE   THREE,OPTION       * delete mode?
          GOTO      ML3000 IF EQUAL
.
ML0200    CALL      KLDG0000           * keyin ledger
          BRANCH    EXIT,ML0100,ML0100
.
ML0300    CALL      KCCC0000           * keyin cost centre
          BRANCH    EXIT,ML0200,ML0100
          BRANCH    OPTION,ML0350,ML0400 * insert or modify ?
.
.
ML0350    CALL      CLRV0000           * clear variables
          MOVE      "1",SCRNO          * set redisplay for screen 1
          CALL      REPT0000           * Reporting Details
          BRANCH    EXIT,ML0300
.
          MOVE      ONE,ACCEPT         * modify mode
          MOVE      "2",SCRNO          * set redisplay for screen 2
          CALL      SELC0000           * Related Subjectives
          GOTO      ML0300             * get next entry
.
.
ML0400    CALL      OPTN0000           * get option
          BRANCH    EXIT,ML0300
          BRANCH    SELECT,ML1000,ML2000,ML2500
.
ML1000    MOVE      "1",SCRNO          * set redisplay for screen 1
          CALL      REPT0000           * Reporting Details
          GOTO      ML0400             * get next entry
.
ML2000    MOVE      ZERO,ACCEPT        * modify mode
          MOVE      "2",SCRNO          * set redisplay for screen 2
          CALL      SELC0000           * Related Subjectives
          GOTO      ML0400             * get next entry
.
ML2500    CALL      SUSPC000           * Suspend all Posting Accounts for CC
          GOTO      ML0400             * get next entry
.
ML3000    CALL      DELT0000           * delete cost centre
          GOTO      ML0100             * get next entry
.
ML9999    PREP      FMSTMP01,FILENAM1
          CLOSE     FMSTMP01,DELETE
.
          MOVE      PORT,PORTCODE
          CALL      CTUP0000           * Update all changed accounts
          CHAIN     PGM                * chain back to menu
.
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD                     * display screen
          CALL      OUPD0000
          CALL      OUDA0000
.
          DISPLAY   *P56:24,"Opening fmsbpfaf";  * report seq file
          OPEN      FMSBPFA1,"fmsbpfaf"
.
          DISPLAY   *P64:24,"fmsrsfaf";  * report seq file
          OPEN      FMSRSFA1,"fmsrsfaf"
          OPEN      FMSRSFA2,"fmsrsfaf"
          OPEN      FMSRSFA3,"fmsrsfaf"
.
          DISPLAY   *P64:24,"fmscccaf";  * consolidated cost centre file
          OPEN      FMSCCCA1,"fmscccaf"
          OPEN      FMSCCCA2,"fmscccaf"
.
          DISPLAY   *P64:24,"fmsccaaf";  * cost centre
          OPEN      FMSCCAA1,"fmsccaaf"
          OPEN      FMSCCAA2,"fmsccaaf"
.
          DISPLAY   *P64:24,"fmssbaaf";  * subjective
          OPEN      FMSSBAA1,"fmssbaaf"
          OPEN      FMSSBAA2,"fmssbaaf"
.
          DISPLAY   *P64:24,"fmscodaf";  * cost centre
          OPEN      FMSCODA1,"fmscodaf"
.
          DISPLAY   *P64:24,"fmslevaf";  * Level
          OPEN      FMSLEVA1,"fmslevaf"
.
          DISPLAY   *P64:24,"fmsprcaf";  * print code
          OPEN      FMSPRCA1,"fmsprcaf"
.
          DISPLAY   *P64:24,"fmsuwpaf";  * word processor
          OPEN      FMSUWPA1,"fmsuwpaf"
.
          DISPLAY   *P64:24,"fmssscaf";
          OPEN      FMSSSCA1,"fmssscaf"
          OPEN      FMSSSCA2,"fmssscaf"
.
          DISPLAY   *P64:24,"fmsaudam";  * account audit file
          OPEN      FMSAUDAM,"fmsaudam"
.
          DISPLAY   *P64:24,"fmsaudcc";  * cost centre audit file
          OPEN      FMSAUDCC,"fmsaudcc"
.
          DISPLAY   *P64:24,"fmsxcsaf";
          OPEN      FMSXCSA1,"fmsxcsaf"
          OPEN      FMSXCSA2,"fmsxcsaf"
          OPEN      FMSXCSA3,"fmsxcsaf"
.
.         PACK      FILENAM1,NAME1,PORT
.         REP       " 0",FILENAM1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM1
.
.         PACK      FILENAM2,NAME2,PORT
.         REP       " 0",FILENAM2
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAM2
.
          UNPACK    SP70,FILENAME,SLBNAME,LBUNAME,UTYPE
.
          MOVE      ONE,CCENTRY        * we want century in date keyins
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          PACK      DEFDATE,CCC,SP70
.
          COMPARE   ZERO,FMSUUD3A                * check params ok
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD4A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD5A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD6A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD7A
          GOTO      INIT9500 IF EQUAL
          COMPARE   ZERO,FMSUUD8A
          GOTO      INIT9500 IF EQUAL
.
          MOVE      FMSUUD8A,SAVRPNO   * set report number
          REP       " 0",SAVRPNO
          UNPACK    SP70,NORMFIL1,NORMFIL2,STATFILE
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
          DISPLAY   *P1:24,*B,*EF,"Incorrect System Parameter Set Up - ";
          CALL      HITENTER
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.* MENU - Select main SELECT                      Called by ML0000             *
.******************************************************************************
MENU0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF," = Exit":
                    *P1:5,*V2LON," 1",*HOFF," = Insert":
                    *P1:6,*V2LON," 2",*HOFF," = Change":
                    *P1:7,*V2LON," 3",*HOFF," = Delete":
                    *P1:9,"Select Option : ";
.
MENU1000  KEYIN     *P17:9,*DV,UNDLN1,*P17:9,*V2LON,FORM1
          COMPARE   ZERO,FORM1          * exit?
          GOTO      MENU9000 IF EQUAL
.
          MOVE      FORM1,OPTION
          BRANCH    OPTION,MENU2000,MENU3000,MENU4000
          BEEP
          GOTO      MENU1000
.
MENU2000  DISPLAY   *P70:3,*V2LON,"Insert"
          MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU3000  DISPLAY   *P70:3,*V2LON,"Change"
          MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU4000  DISPLAY   *P70:3,*V2LON,"Delete"
          MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU9000  MOVE      TRUE,EXIT
.
MENU9999  RETURN
.******************************************************************************
.* OPTN - Select main SELECT                      Called by ML0000            *
.******************************************************************************
OPTN0000  DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Cost Centre          : ":
                    *V2LON,SAVCOCE,*HOFF,SP2,SAVDCOCE,*EF:
                    *P1:7,*V2LON," 0",*HOFF," = Exit                 ":
                    *P1:8,*V2LON," 1",*HOFF," = Reporting Details    ":
                    *P1:9,*V2LON," 2",*HOFF," = Related Subjectives ":
                    *P1:10,*V2LON," 3",*HOFF," = Suspend All Accounts":
                    *P1:12,"Select Option : ";
.
OPTN1000  KEYIN     *P17:12,*EL,*DV,UNDLN1,*P17:12,*V2LON,FORM1
          COMPARE   ZERO,FORM1          * exit?
          GOTO      OPTN9500 IF EQUAL
.
          MOVE      FORM1,SELECT
          BRANCH    SELECT,OPTN9000,OPTN9000,OPTN9000
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
.*************************************************************************
.* CLRV - Clear Variables                    Called by OPTN0000          *
.*************************************************************************
CLRV0000  UNPACK   SP70,FMLALEDG,FMCCCOCE,FMCCDESC,FMCCSECC,FMCCPPOS
          UNPACK   SP70,FMLADESC,FMCCDESC
          UNPACK   SP70,FMCCADES
          UNPACK   SP70,FMAMCLEV
          UNPACK   SP70,FMPRDESC,FMLVDESC
          UNPACK   SP70,FMTCTLED,FMTCTACC,FMLVCODE,FMAMTYPE,FMRFPRT,FMRFCRP
          UNPACK   SP70,FMAMREF1,FMAMREF2,FMAMREF3,FMAMREF4,FMAMDAT1,FMAMDAT2: 
                        FMAMDAT3,FMAMDAT4,FMAMCOD1,FMAMCOD2,FMAMCOD3:
                        FMAMCOD4
          MOVE     ZERO,FMAMAMT1
          MOVE     ZERO,FMAMAMT2
          MOVE     ZERO,FMAMAMT3
          MOVE     ZERO,FMAMAMT4
.
CLRV9999  RETURN
.*************************************************************************
.* KLDG - Keyin the Ledger code                  Called by OPTN0000      *
.*        Returns: EXIT = 0 - valid code   1 - null  2 - exitchar        *
.*************************************************************************
KLDG0000  MOVE      "0",SCRNO          * set redisplay for screen 0
          CALL      RLMAFM00      * display screen
          MOVE      "28",CCOL
          MOVE      "4",CVERT
.
          CALL      KLMAFM00       * keyin ledger
          BRANCH    EXIT,KLDG9999,KLDG9999
.
          DISPLAY   *P28:4,*V2LON,FMLALEDG,*HOFF,SP12,FMLADESC
          MOVE      FMLALEDG,FMCCLEDG
          MOVE      FMLAPERS,SAVPERS        * save no. of periods
          MOVE      FMLALEDG,SAVLEDG        * save ledger
          MOVE      FMLADESC,SAVDLEDG       * save ledger description
.
KLDG9999  RETURN
.*************************************************************************
.* KCCC - Keyin the Cost Centre Code             Called by OPTN0000      *
.*        Returns: EXIT = 0 - valid code   1 - null  2 - exitchar        *
.*************************************************************************
KCCC0000  MOVE      "0",SCRNO          * set redisplay for screen 0
          PACK      KEY2,SAVLEDG
          CALL      RDFMLA1            * get ledger data
.
          CALL      RCCAFM00
          MOVE      "28",CCOL
          MOVE      "5",CVERT
          DISPLAY   *P28:5,*EF
.
          BRANCH    OPTION,KCCC0100,KCCC0200,KCCC0200
.                                     * insert mode
KCCC0100  CALL      ACCAFM00 
          BRANCH    EXIT,KCCC9999,KCCC9999
          PACK      KEY14,SAVLEDG,FMCCCOCE,SP70
          CALL      RAFMAM1           * does account exist ?
          BRANCH    OVRCD,KCCC1000
.
          DISPLAY   *P1:24,*EL,*B,"Identical To Existing Account Code - ";
          CALL      HITENTER
          GOTO      KCCC0100
.
.                                     * not insert mode
KCCC0200  CALL      KCCAFM00 
          BRANCH    EXIT,KCCC9999,KCCC9999
.
          DISPLAY   *P28:5,*V2LON,FMCCCOCE;
          COMPARE   OPTION,THREE      * dont display description in delete mode
          GOTO      KCCC1000 IF EQUAL
          DISPLAY   *P42:5,FMCCDESC;
.
KCCC1000  UNPACK    SP70,FMLALEDG,FMLADESC
          MOVE      FMCCCOCE,SAVCOCE        * save cost centre
          MOVE      FMCCDESC,SAVDCOCE       * save cost centre description
.
KCCC9999  RETURN
.******************************************************************************
.* REPT - Process reporting details              Called by ML1000             *
.******************************************************************************
REPT0000  MOVE      FALSE,EXIT
          COMPARE   TWO,OPTION        * change mode ?
          CALL      DRPT0000 IF EQUAL * display reporting info if in change
.
          COMPARE   ONE,OPTION        * insert mode ?
          CALL      IRPT0000 IF EQUAL * insert reporting info if in insert
          BRANCH    EXIT,REPT9500
.
          MOVE      "2",WAUDTYPE
          COMPARE   TWO,OPTION         * change mode ?
          CALL      WAUD0000 IF EQUAL  * write audit record data
.
REPT0100  CALL      QUES0000          * select item post cancel notes?
          COMPARE   "0",CCITEM        * post?
          GOTO      REPT9000 IF EQUAL
          COMPARE   "-1",CCITEM       * cancel?
          GOTO      REPT9500 IF EQUAL
.
REPT0200  BRANCH    CCITEM,REPT1000,REPT1100,REPT1300,REPT1400:
                           REPT1500,REPT1600,REPT1700
.
          MOVE      CCITEM,SELECT
          MOVE      CCITEM,CVERT
          ADD       "6",CVERT
          MOVE      "7",OPTNO        * start option number
          MOVE      "28",CCOL
          CALL      USRD0000          * do user defined's
          BRANCH    EXIT,REPT9500
          GOTO      REPT0100          * invalid selection
.
REPT1000  CALL      CCDS0000          * keyin cost centre description
          BRANCH    EXIT,REPT9500
          GOTO      REPT0100
.
REPT1100  CALL      CCAD0000          * keyin cost centre abbrev description
          BRANCH    EXIT,REPT9500
          GOTO      REPT0100
.
REPT1300  CALL      CCPP0000          * keyin cost centre Print position
          GOTO      REPT0100
.
REPT1400  CALL      CCAS0000          * keyin acct seq
          GOTO      REPT0100
.
REPT1500  CALL      CCPC0000          * keyin cost centre Print Code
          BRANCH    EXIT,REPT9500
          GOTO      REPT0100
.
REPT1600  CALL      CCLV0000          * keyin cost centre Level
          BRANCH    EXIT,REPT9500
          GOTO      REPT0100
.
REPT1700  MOVE      "28",CCOL
          MOVE      "13",CVERT
          MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,CREDITYN 
          GOTO      REPT0100
.
REPT9000  CALL      CKLV0000          * check level
          BRANCH    EXIT,REPT0100
.
          CALL      POST0000          * Write report details
          MOVE      FMCCDESC,SAVDCOCE * display new description
          MOVE      ZERO,EXIT
          GOTO      REPT9999
.
REPT9500  COMPARE   "2",OPTION
          CALL      DAUD0000 IF EQUAL  * delete audit record data
          MOVE      ONE,EXIT           * quit
.
REPT9999  RETURN
.*************************************************************************
.* IRPT - Input the reporting details in insert mode  Called by REPT0000 *
.*************************************************************************
IRPT0000  CALL      GETW0000          * get wp data
          UNPACK    SP70,FMTCTLED,FMTCTACC,FMLVCODE,FMRFPRT,FMRFCRP
          UNPACK    SP70,FMAMREF1,FMAMREF2,FMAMREF3,FMAMREF4: 
                         FMAMCOD1,FMAMCOD2,FMAMCOD3,FMAMCOD4
          PACK      FMCCADES,SP70
          PACK      FMCCSTAT,SP1,ZERO       * default to 0=open
          MOVE      DEFDATE,FMAMDAT1
          MOVE      DEFDATE,FMAMDAT2
          MOVE      DEFDATE,FMAMDAT3
          MOVE      DEFDATE,FMAMDAT4
          MOVE      ZERO,FMAMAMT1
          MOVE      ZERO,FMAMAMT2
          MOVE      ZERO,FMAMAMT3
          MOVE      ZERO,FMAMAMT4
          MOVE      SP70,OLDPPOS
          UNPACK    SP70,OLDADES,OLDDESC
          MOVE      TOTSEQ,ACCTSEQ
          CALL      SCRA0000          * Dipslay report details screen
          CALL      CCDS0000          * keyin cost centre description
          BRANCH    EXIT,IRPT2000
          CALL      CCAD0000          * keyin cost centre abbrev description
          BRANCH    EXIT,IRPT2000
          CALL      CCPP0000          * keyin cost centre Print position
          CALL      CCAS0000          * keyin account seq
          CALL      CCPC0000          * keyin cost centre Print Code
          BRANCH    EXIT,IRPT2000
          CALL      CCLV0000          * keyin cost centre Level
          BRANCH    EXIT,IRPT2000
.
          MOVE      "28",CCOL
          MOVE      "13",CVERT
          MOVE      "N",DEFYESNO
          CALL      YORN0000
          MOVE      FYESNO,CREDITYN 
.
          CALL      CCUD0000          * keyin User defined
.
IRPT1000  MOVE      FALSE,EXIT
          GOTO      IRPT9999
.
IRPT2000  MOVE      TRUE,EXIT
.
IRPT9999  RETURN
.*************************************************************************
.* CCUD - Keyin user defined feilds               Called by IRPT0000     *
.*************************************************************************
CCUD0000 
          MOVE      "7",SELECT
          MOVE      ONE,MODE          * insert mode
.
CCUD1000  ADD       ONE,SELECT
          MOVE      SELECT,CVERT
          ADD       "6",CVERT
          MOVE      "7",OPTNO         * used in user defined routines
          MOVE      "28",CCOL
          CALL      USRD0000
          COMPARE   "15",SELECT        * all done?
          GOTO      CCUD1000 IF NOT EQUAL
          MOVE      ZERO,MODE
.
CCUD9999  RETURN
.******************************************************************************
.* QUES - question select/post/cancel/notes ?    Called by SELA               *
.*        Returns : Selection (-1 = Cancel, 0 = Post, other = selection)      *
.******************************************************************************
QUES0000  DISPLAY   *P1:24,*EL,"Select, (",*V2LON,"P":
                    *HOFF,")ost, (",*V2LON,"C",*HOFF,")ancel";
          MOVE      "24",F2
          COMPARE   ONE,FMACW1ON
          GOTO      QUES0500 IF NOT EQUAL        * wp activated ?
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")otes";
          ADD       "9",F2
.
QUES0500  DISPLAY   " : ";
          ADD       "4",F2
.
QUES1000  KEYIN     *PF2:24,"__":
                    *PF2:24,*V2LON,*JR,DIM2,*EL;
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          MOVE      SEQ,CCITEM
          MATCH     " C",DIM2
          GOTO      QUES9999 IF EQUAL            * cancel ?
.
          MOVE      ZERO,CCITEM
          MATCH     " P",DIM2
          GOTO      QUES9999 IF EQUAL            * post ?
.
          MATCH     " *",DIM2
          GOTO      QUES9000 IF EQUAL            * iba mode ?
.
          COMPARE   ONE,FMACW1ON
          GOTO      QUES2000 IF NOT EQUAL        * notes active ?
          MATCH     " N",DIM2
          GOTO      QUES2000 IF NOT EQUAL        * notes ?
.
          CALL      NOTE0000                     * execute wp
          CALL      RCODFM00                     * redisplay screen
          GOTO      QUES0000
.
QUES2000  MOVE      ZERO,CCITEM                  * selection made
          MOVE      DIM2,CCITEM
          COMPARE   CCITEM,ZERO
          GOTO      QUES9999 IF LESS             * valid numeric ?
          BEEP
          GOTO      QUES1000
.
QUES9000  MATCH     "1426",PASSCODE              * go into iba mode
          GOTO      QUES2000 IF NOT EQUAL
          MOVE      "1",IBAMODE
          GOTO      QUES0000
.
QUES9999  RETURN
.******************************************************************************
.* GETW - read in wp data                        Called by who cares ?        *
.******************************************************************************
GETW0000  COMPARE   ONE,FMACW1ON
          GOTO      GETW9999 IF NOT EQUAL        * notes active ?
.
          PREP      FMSTMP01,FILENAM1            * clear and open temp file
          PACK      KEY17,SAVLEDG,SAVCOCE,SP70
          CALL      RSFMUW1                      * go to start of records
.
GETW1000  CALL      RKFMUW1                      * get next record
          BRANCH    OVRCD,GETW2000               * no more records ?
          PACK      KEY14,FMUWLEDG,FMUWACCT,SP70
          MATCH     KEY14,KEY17
          GOTO      GETW2000 IF NOT EQUAL        * no more records ?
.
          WRITE     FMSTMP01,SEQ;FMUWLINE
          GOTO      GETW1000
.
GETW2000  WEOF      FMSTMP01,SEQ
          CLOSE     FMSTMP01
.
GETW9999  RETURN
.******************************************************************************
.* NOTE - Execute word processor                 Called by QUES               *
.******************************************************************************
NOTE0000  
.         DISPLAY   *P1:24,"Initialising the Wordprocessor - ":
.                   *BLINKON,*V2LON,"Please Wait",*EL;
.
.         PREP      FMSTMP02,FILENAM2
.         WRITE     FMSTMP02,SEQ;PRGID,SP10,SP2,CNAME,SP10,SP5,CDATE
.         WRITE     FMSTMP02,SEQ;VERSION,SP10,SP5,PRGNAM
.         WRITE     FMSTMP02,SEQ;SP1
.         WRITE     FMSTMP02,SEQ;"    Ledger               : ":
.                   SAVLEDG,SP10,SP4,SAVDLEDG
.         WRITE     FMSTMP02,SEQ;"    Cost Centre          : ":
.                   SAVCOCE,SP4,SAVDCOCE
.         WRITE     FMSTMP02,SEQ;"    Notes"
.         WRITE     FMSTMP02,SEQ;SP1
.
.         OPEN      FMSTMP01,FILENAM1            * go to start of records
.
.OTE1000  READ      FMSTMP01,SEQ;FMUWLINE        * read in wp data
.         GOTO      NOTE2000 IF OVER
.
.         WRITE     FMSTMP02,SEQ;FMUWLINE
.         GOTO      NOTE1000
.
.OTE2000  CLEAR     CMDLINE
.         PACK      CMDLINE,WP,FILENAM2,WPDAT
.         EXECUTE   CMDLINE,TASKID               * initiate word processor
.
.         CALL      WEOF0000                     * make sure something in file
.         CLOSE     FMSTMP02
          CLOSE     FMSTMP01
.
.         CLEAR     CMDLINE                      * copy file to original
.         PACK      CMDLINE,CP,FILENAM2,TXT,FILENAM1,TXT 
.         EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    FILENAM1,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          MOVE      ONE,WPSTAT
.
          DISPLAY   *P42:5,SAVDCOCE
          WORD      CMDLINE,999,2,7,76,22,WPSTAT
          DISPLAY   *P42:5,*EL
.
.
NOTE9999  RETURN
.**********************************************************************
.  WEOF - Make sure wp file not empty                  Called By NOTE
.**********************************************************************
.EOF0000  CLOSE     FMSTMP02
.         MOVE      ZERO,OVRCD
.         TRAP      OVERCOND IF IO
.         OPEN      FMSTMP02,FILENAM2
.         TRAPCLR   IO
.         COMPARE   ONE,OVRCD
.         GOTO      WEOF9999 IF NOT EQUAL
.
.         PREP      FMSTMP02,FILENAM2
.         WEOF      FMSTMP02,SEQ
.
.EOF9999  RETURN
.*************************************************************************
.* POST - Write the reporting info to file.                              *
.*                     called by : REPT9000                              *
.*************************************************************************
POST0000  PACK      KEY14,SAVLEDG,SAVCOCE
          UNPACK    KEY14,FMCCLEDG,FMCCCOCE
.
          COMPARE   ONE,OPTION
          GOTO      POST1100 IF NOT EQUAL
          CALL      RAFMCC1                 * record exists ?
          BRANCH    OVRCD,POST1000
          DISPLAY   *P1:24,*B,*EF,"Cost Centre Code Has Just Been Entered - ";
          CALL      HITENTER
          GOTO      POST9999
.
POST1000  CALL      RAFMAM1                 * record exists ?
          BRANCH    OVRCD,POST1100
          DISPLAY   *P1:24,*B,*EF,"Account Code Has Just Been Entered - ";
          CALL      HITENTER
          GOTO      POST9999
.
POST1100  
          CALL      DEFMCC1
          CALL      WRFMCC1
.
POST2000  MOVE      FMCCLEDG,FMAMLEDG      * set up account master details
          MOVE      FMCCCOCE,FMAMACCT
          MOVE      FMCCDESC,FMAMDESC
          MOVE      SIX,FMAMTYPE           * set to a total record
          MOVE      ONE,FMAMMULT
          MOVE      ONE,FMAMDIV
          MOVE      ZERO,FMAMAYTD
          MOVE      ZERO,FMAMDPLA
          UNPACK    SP70,FMAMUNIT
          REP       " 0",CURLEVEL
          MOVE      CURLEVEL,FMAMCLEV
.
          CALL      RAFMAM1                * is the record already there?
          BRANCH    OVRCD,POST3000
.
          CALL      UPFMAM1                * yes - update it
          GOTO      POST4000
.
POST3000  CALL      WRFMAM1                * no - write it
.
POST4000  LOAD      WAUDTYPE,OPTION,ONE,THREE,FOUR
          CALL      WAUD0000               * write audit record data
.
          PACK      KEY26,SAVLEDG,SAVCOCE,SAVRPNO,SP70
          PACK      KEY16,SAVLEDG,SAVCOCE,SAVRPNO,SP70
.
POST5000  CALL      RSFMRF2            * delete rsf records
          CALL      RKFMRF2
          BRANCH    OVRCD,POST6000     * no more records ?
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY16
          GOTO      POST6000 IF NOT EQUAL
          CALL      DEFMRF2
          GOTO      POST5000
.
POST6000  MOVE      CURPRTC,FMRFPRT
          MOVE      CREDITYN,FMRFCRP
          MOVE      ACCTSEQ,FMRFSEQ
          PACK      KEY26,SAVLEDG,SAVCOCE,SAVRPNO,CURPRTP,FMRFSEQ,SP70
          UNPACK    KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ
          CALL      WRFMRF2
.
POST8000  COMPARE   ONE,FMACW1ON
          GOTO      POST9000 IF NOT EQUAL        * notes active ?
.
          PACK      KEY17,SAVLEDG,SAVCOCE,SP70
          PACK      KEY14,SAVLEDG,SAVCOCE,SP70
          MOVE      ZERO,F3
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTMP01,FILENAM1
          TRAPCLR   IO
          BRANCH    OVRCD,POST8400
.
POST8300  READ      FMSTMP01,SEQ;FMUWLINE        * save wp data
          GOTO      POST8400 IF OVER
.
          ADD       ONE,F3
          PACK      KEY17,SAVLEDG,SAVCOCE,F3,SP70
          UNPACK    KEY17,FMUWLEDG,FMUWACCT,FMUWLNO
          CALL      DEFMUW1                      * delete old record
          CALL      WRFMUW1                      * write new record
          GOTO      POST8300
.                                                * delete excess records
POST8400  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,POST9000               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      POST9000 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      POST8400
.
POST9000  MATCH     SP70,OLDPPOS
          GOTO      POST9999 IF EQUAL            * new record ?
          MATCH     CURPRTP,OLDPPOS
          GOTO      POST9020 IF NOT EQUAL        * print position changed ?
          MATCH     FMCCDESC,OLDDESC
          GOTO      POST9020 IF NOT EQUAL        * description changed ?
          MATCH     FMCCADES,OLDADES
          GOTO      POST9020 IF NOT EQUAL        * description changed ?
          BRANCH    IBAMODE,POST9020             * in iba mode
          GOTO      POST9999                     * no update required
.
POST9020  PACK      SAVKEY31,SAVLEDG,SAVCOCE,SP70
          PACK      SAVKEY14,SAVLEDG,SAVCOCE,SP70
.
POST9100  PACK      KEY31,SAVKEY31,SP70
          CALL      RSFMXC3                      * get next record
          CALL      RKFMXC3
          BRANCH    OVRCD,POST9200               * no more records ?
          PACK      SAVKEY31,FMXCLED,FMXCCOS,FMXCSPR,FMXCSUB,SP70
          MATCH     SAVKEY31,SAVKEY14
          GOTO      POST9200 IF NOT EQUAL        * at end of valid records ?
.
          DISPLAY   *P40:24,*V2LON,"Updating ",FMXCLED,SLASH,FMXCSUB,*EL;
          UNPACK    SAVKEY31,LEDGER,COSTCODE,KEY5,SUBJCODE
          CALL      BCOD0000                     * build account code
          MOVE      ONE,DELALL
          MOVE      ZERO,OLDDSUBJ
          MOVE      ONE,OLDDCOST
          MOVE      ONE,SKIPFMTU
          MOVE      SP70,UTYPE
          CALL      DREC0000                     * delete records
.
          UNPACK    SAVKEY31,LEDGER,COSTCODE,KEY5,SUBJCODE
          CALL      BCOD0000                     * build account code
          MOVE      ZERO,WRECLEV
          MOVE      ONE,SKIPFMTU
          MOVE      SP70,UTYPE
          CALL      WREC0000                     * write records
          GOTO      POST9100
.
POST9200  
.
POST9999  DISPLAY   *P1:24,*EL
          RETURN
.*************************************************************************
.* DRPT - Display Reporting Details Screen     Called by REPT0000        *
.*************************************************************************
DRPT0000  CALL      GETW0000                     * get wp data
          PACK      KEY26,SAVLEDG,SAVCOCE,SP70
          UNPACK    KEY26,FMCCLEDG,FMCCCOCE
          UNPACK    SP70,FMRFREP,FMRFPOS,FMRFPRT,FMRFCRP
          MOVE      TOTSEQ,ACCTSEQ
          CALL      RSFMRF2
          CALL      RKFMRF2
          BRANCH    OVRCD,DRPT1000
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          MATCH     KEY14,KEY26
          GOTO      DRPT2000 IF EQUAL
.
DRPT1000  DISPLAY   *P1:24,*B,"WARNING - fmsrsfaf file record not found - ",*EL;
          CALL      HITENTER
.
DRPT2000  MOVE      FMRFPOS,CURPRTP
          MOVE      FMRFPOS,OLDPPOS
          MOVE      FMRFPRT,CURPRTC
          MOVE      FMRFCRP,CREDITYN
          MOVE      FMRFSEQ,ACCTSEQ
          MOVE      SP70,FMAMCLEV
          PACK      KEY14,SAVLEDG,SAVCOCE,SP20
          UNPACK    KEY14,FMCCLEDG,FMCCCOCE
          CALL      RDFMCC1            * read current cc data
          MOVE      FMCCADES,OLDADES
          MOVE      FMCCDESC,OLDDESC
          CALL      RDFMAM1            * read total account cc data
          BRANCH    OVRCD,DRPT3000
          REP       " 0",FMAMCLEV
          MOVE      FMAMCLEV,CURLEVEL
          GOTO      DRPT6000
.
DRPT3000  DISPLAY   *P1:24,*B,"WARNING - fmsamaaf file record not found - ",*EL;
          CALL      HITENTER
.
DRPT6000  CALL      DRDS0000          * display screen
.
DRPT9999  RETURN
.*************************************************************************
.* DRDS - Display the reporting details screen     Called by IRPT0000    *
.*************************************************************************
DRDS0000  CALL      SCRA0000           * display screen
          CALL      CLRU0000           * clear user def variables
          CALL      DISA0000           * display data
.
DRDS9999  RETURN
.*************************************************************************
.* CLRU - Clear user defined variables            Called br DRDS0000     *
.*************************************************************************
CLRU0000  UNPACK    SP70,FMCDDESC
          RETURN
.*************************************************************************
.* CCDS - Keyin cost centre description      Called by IRPT0000,REPT1000 *
.*************************************************************************
CCDS0000  MATCH     SP70,FMCCDESC
          GOTO      CCDS1000 IF NOT EQUAL
          PACK      FMCCDESC,UNDLN30,UNDLN30
.
CCDS1000  KEYIN     *P28:7,*DV,FMCCDESC:    * read in description
                    *P28:7,*V2LON,*RV,FMCCDESC;
.
          PACK      FMCCDESC,FMCCDESC,SP70
.
          MATCH     EXITCHAR,FMCCDESC
          GOTO      CCDS9500 IF EQUAL       * exitchar
          MATCH     UNDLN30,FMCCDESC        * description is mandatory
          GOTO      CCDS9500 IF EQUAL       * quit if nothing entered
          MATCH     SP30,FMCCDESC           * description is mandatory
          GOTO      CCDS0000 IF EQUAL       * rekey if blank
.
          DISPLAY   *P28:7,*V2LON,FMCCDESC
.
CCDS9000  MOVE      ZERO,EXIT
          GOTO      CCDS9999
.
CCDS9500  MOVE      ONE,EXIT
.
CCDS9999  RETURN
.*************************************************************************
.* CCAD - Keyin abbrev description      Called by IPRT0000,REPT1100  *
.*************************************************************************
CCAD0000  PACK      FMCCADES,FMCCADES,SP70
          MATCH     SP70,FMCCADES
          GOTO      CCAD1250 IF NOT EQUAL
          SETLPTR   FMCCDESC,FMSUUD6A
          MOVE      FMCCDESC,FMCCADES            * set up default
          SETLPTR   FMCCDESC
.
CCAD1250  PACK      UNDLN70,FMCCADES,SP70
          MOVE      FMSUUD6A,CSTRLEN             * set up string length
          MOVE      "28",CCOL
          MOVE      "8",CVERT
          CALL      GSTR0000                     * get string
          PACK      UNDLN70,UNDLN30,UNDLN30,UNDLN30
.
          PACK      CSTRING,CSTRING,SP70
          MATCH     CSTRING,EXITCHAR
          GOTO      CCAD9500 IF EQUAL            * exitchar ?
.
          MATCH     CSTRING,SP70
          GOTO      CCAD1270 IF EQUAL            * nothing entered ?
          PACK      FMCCADES,CSTRING,SP70
.
CCAD1270  MATCH     FMCCADES,SP70
          GOTO      CCAD0000 IF EQUAL            * no abbrev desc ?
          DISPLAY   *PCCOL:CVERT,*V2LON,FMCCADES;
.
CCAD9000  MOVE      ZERO,EXIT
          GOTO      CCDS9999
.
CCAD9500  MOVE      ONE,EXIT
.
CCAD9999  RETURN
.*************************************************************************
.* CCPP - Keyin Print position              Called by IPRT0000,REPT1300  *
.*************************************************************************
CCPP0000  KEYIN     *P28:9,*DV,UNDLN5,*P28:9,*JR,*ZF,*DE,*V2LON,FMCCPPOS;
.
          PACK      FMCCPPOS,FMCCPPOS,SP10
          REP       " 0",FMCCPPOS
          DISPLAY   *P28:9,*V2LON,FMCCPPOS
          MOVE      FMCCPPOS,CURPRTP
.
CCPP9999  RETURN
.*************************************************************************
.* CCAS - Keyin Account Sequence            Called by IPRT0000,REPT1300  *
.*************************************************************************
CCAS0000  MOVE      TOTSEQ,ACCTSEQ
          KEYIN     *P28:10,*DV,ACCTSEQ:
                    *P28:10,*RV,*JR,*ZF,*DE,*V2LON,ACCTSEQ:
                    *P28:10,*DV,ACCTSEQ;
.
CCAS9999  RETURN
.*************************************************************************
.* CCPC - Keyin the print code               Called by IPRT0000,REPT1400 *
.*        Returns : EXIT = 0 - valid entry  1 - exitchar
.*************************************************************************
CCPC0000  MOVE      "28",CCOL
          MOVE      "11",CVERT
.
          MOVE      SP70,CURPRTC
          CALL      KPRCFM00               * keyin print code
          BRANCH    EXIT,CCPC8000,CCPC9000 
.
          DISPLAY   *P28:CVERT,*V2LON,FMPRCODE,*HOFF,*P44:CVERT,FMPRDESC
          MOVE      FMPRCODE,CURPRTC      * set up file variable
.
CCPC8000  MOVE      FALSE,EXIT
          GOTO      CCPC9999
.
CCPC9000  MOVE      TRUE,EXIT
.
CCPC9999  RETURN
.*************************************************************************
.* CCLV - Keyin the level code               Called by IPRT0000,REPT1400 *
.*        Returns : EXIT = 0 - valid entry  1 - exitchar                 *
.*************************************************************************
CCLV0000  MOVE      "28",CCOL
          MOVE      "12",CVERT
.
          MOVE      ZERO,CKEYTYP
          CALL      KFMLVA00
.         CALL      KLEVFM00               * keyin level code
          BRANCH    EXIT,CCLV0000,CCLV9000 
.
          REP       " 0",FMLVCODE
          DISPLAY   *P28:CVERT,*V2LON,FMLVCODE,*HOFF,*P44:CVERT,FMLVDESC
          MOVE      FMLVCODE,FMAMCLEV      * set up file variable
          MOVE      FMLVCODE,CURLEVEL      * save current level
.
CCLV8000  MOVE      FALSE,EXIT
          GOTO      CCLV9999
.
CCLV9000  MOVE      TRUE,EXIT
.
CCLV9999  RETURN
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.******************************************************************************
SCRA0000  DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Cost Centre          : ":
                    *V2LON,SAVCOCE,*EF:
                    *P1:7,*V2LON," 1",*HOFF,". Description          : ":
                    *P1:8,*V2LON," 2",*HOFF,". Abbreviated Desc.    : ":
                    *P1:9,*V2LON," 3",*HOFF,". Print Position       : ":
                   *P1:10,*V2LON," 4",*HOFF,". Account Sequence     : ":
                   *P1:11,*V2LON," 5",*HOFF,". Print Code           : ":
                   *P1:12,*V2LON," 6",*HOFF,". Level                : ":
                   *P1:13,*V2LON," 7",*HOFF,". Credit Print (Y/N)   : ";
.
SCRA1000  MOVE      "13",LINENO                  * starting line number
          MOVE      " 1",COLNO                   * fix collumn number
          MOVE      "7",OPTNO                    * starting option number
          COMPARE   ONE,FMACR1ON
          GOTO      SCRA1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR1NA," : ";
.
SCRA1100  COMPARE   ONE,FMACR2ON
          GOTO      SCRA1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR2NA," : ";
.
SCRA1200  COMPARE   ONE,FMACR3ON
          GOTO      SCRA1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR3NA," : ";
.
SCRA1300  COMPARE   ONE,FMACR4ON
          GOTO      SCRA2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACR4NA," : ";
.
SCRA2000  COMPARE   ONE,FMACD1ON
          GOTO      SCRA2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD1NA," : ";
.
SCRA2100  COMPARE   ONE,FMACD2ON
          GOTO      SCRA2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD2NA," : ";
.
SCRA2200  COMPARE   ONE,FMACD3ON
          GOTO      SCRA2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD3NA," : ";
.
SCRA2300  COMPARE   ONE,FMACD4ON
          GOTO      SCRA3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACD4NA," : ";
.
SCRA3000  COMPARE   ONE,FMACA1ON
          GOTO      SCRA3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA1NA," : ";
.
SCRA3100  COMPARE   ONE,FMACA2ON
          GOTO      SCRA3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA2NA," : ";
.
SCRA3200  COMPARE   ONE,FMACA3ON
          GOTO      SCRA3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA3NA," : ";
.
SCRA3300  COMPARE   ONE,FMACA4ON
          GOTO      SCRA4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMACA4NA," : ";
.
SCRA4000  COMPARE   ONE,FMACC1ON
          GOTO      SCRA4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC1NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRA4100  COMPARE   ONE,FMACC2ON
          GOTO      SCRA4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC2NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRA4200  COMPARE   ONE,FMACC3ON
          GOTO      SCRA4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC3NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRA4300  COMPARE   ONE,FMACC4ON
          GOTO      SCRA5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ADD       ONE,OPTNO                    * increment option number
          PACK      FMCDDESC,SP70
          PACK      KEY5,FMACC4NA,SP70
          CALL      RDFMCD1
          DISPLAY   *PCOLNO:LINENO,*V2LON,OPTNO,*HOFF,". ",FMCDDESC," : ";
.
SCRA5000  
.
SCRA9999  RETURN
.******************************************************************************
.* DISA - Display Screen A                       Called by SELA0000, redisps  *
.******************************************************************************
DISA0000  PACK      KEY3,CURPRTC,SP70
          MOVE      SP70,FMPRDESC
          CALL      RDFMPR1                      * get print code description
.
          PACK      KEY3,FMAMCLEV,SP70
          MOVE      SP70,FMLVDESC
          CALL      RDFMLV1                      * get level description
.
          MOVE      ZERO,FYESNO
          MOVE      CREDITYN,FYESNO
          ADD       ONE,FYESNO
          LOAD      YESNO,FYESNO,NO,YES          * get description
.
          DISPLAY   *P28:7,*V2LON,FMCCDESC:
                    *P28:8,FMCCADES:
                    *P28:9,FMCCPPOS:
                    *P28:10,ACCTSEQ:
                    *P28:11,CURPRTC,*HOFF,*P44:11,FMPRDESC,*V2LON:
                    *P28:12,FMAMCLEV,*HOFF,*P44:12,FMLVDESC,*V2LON:
                    *P28:13,YESNO;
.
.
DISA1000  MOVE      "13",LINENO                  * starting line number
          MOVE      "28",COLNO                   * fix collumn number
          COMPARE   ONE,FMACR1ON
          GOTO      DISA1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF1;
.
DISA1100  COMPARE   ONE,FMACR2ON
          GOTO      DISA1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF2;
.
DISA1200  COMPARE   ONE,FMACR3ON
          GOTO      DISA1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF3;
.
DISA1300  COMPARE   ONE,FMACR4ON
          GOTO      DISA2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMREF4;
.
DISA2000  COMPARE   ONE,FMACD1ON
          GOTO      DISA2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          RESET     FMAMDAT1
          GOTO      DISA2100 IF EOS
          UNPACK    FMAMDAT1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISA2100  COMPARE   ONE,FMACD2ON
          GOTO      DISA2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          ENDSET    FMAMDAT2
          APPEND    SP30,FMAMDAT2
          RESET     FMAMDAT2
          MATCH     SP8,FMAMDAT2
          GOTO      DISA2200 IF EQUAL
          UNPACK    FMAMDAT2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISA2200  COMPARE   ONE,FMACD3ON
          GOTO      DISA2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          RESET     FMAMDAT3
          GOTO      DISA2300 IF EOS
          UNPACK    FMAMDAT3,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISA2300  COMPARE   ONE,FMACD4ON
          GOTO      DISA3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          RESET     FMAMDAT4
          GOTO      DISA3000 IF EOS
          UNPACK    FMAMDAT4,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCOLNO:LINENO,*V2LON,CPCDATE;
.
DISA3000  COMPARE   ONE,FMACA1ON
          GOTO      DISA3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "1",AMOUNTNO
          CALL      DAMT0000
.
DISA3100  COMPARE   ONE,FMACA2ON
          GOTO      DISA3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "2",AMOUNTNO
          CALL      DAMT0000
.
DISA3200  COMPARE   ONE,FMACA3ON
          GOTO      DISA3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "3",AMOUNTNO
          CALL      DAMT0000
.
DISA3300  COMPARE   ONE,FMACA4ON
          GOTO      DISA4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MOVE      "4",AMOUNTNO
          CALL      DAMT0000
.
DISA4000  COMPARE   ONE,FMACC1ON
          GOTO      DISA4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD1
          GOTO      DISA4100 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMAMCOD1,SP70
          CALL      RDFMCD1
          ENDSET    FMAMCOD1
          APPEND    SP10,FMAMCOD1
          RESET     FMAMCOD1
          MATCH     SP3,FMAMCOD1          * any need to display?
          GOTO      DISA4100 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD1,*HOFF,*P44:LINENO,FMCDDESC;
.
DISA4100  COMPARE   ONE,FMACC2ON
          GOTO      DISA4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD2
          GOTO      DISA4200 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMAMCOD2,SP70
          CALL      RDFMCD1
          ENDSET    FMAMCOD2
          APPEND    SP10,FMAMCOD2
          RESET     FMAMCOD2
          MATCH     SP3,FMAMCOD2          * any need to display?
          GOTO      DISA4200 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD2,*HOFF,*P44:LINENO,FMCDDESC;
.
DISA4200  COMPARE   ONE,FMACC3ON
          GOTO      DISA4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD3
          GOTO      DISA4300 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMAMCOD3,SP70
          CALL      RDFMCD1
          ENDSET    FMAMCOD3
          APPEND    SP10,FMAMCOD3
          RESET     FMAMCOD3
          MATCH     SP3,FMAMCOD3          * any need to display?
          GOTO      DISA4300 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD3,*HOFF,*P44:LINENO,FMCDDESC;
.
DISA4300  COMPARE   ONE,FMACC4ON
          GOTO      DISA5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,LINENO                   * increment line number
          MATCH     SP70,FMAMCOD4
          GOTO      DISA5000 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMAMCOD4,SP70
          CALL      RDFMCD1
          ENDSET    FMAMCOD4
          APPEND    SP10,FMAMCOD4
          RESET     FMAMCOD4
          MATCH     SP3,FMAMCOD4          * any need to display?
          GOTO      DISA9999 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,FMAMCOD4,*HOFF,*P44:LINENO,FMCDDESC;
.
DISA5000  
.
DISA9999  RETURN
.******************************************************************************
.* USRD - User defined options                   Called by SELA               *
.*       Requires : SELECT     (option selected)                              *
.*                  OPTNO      (starting option number)                       *
.*                  CVERT,CCOL (screen address to get data)                   *
.*       Note : clears accept mode when completed last available option       *
.*       Returns  : EXIT = 2 if exitchar entered                              *
.******************************************************************************
USRD0000  
          COMPARE   ONE,FMACR1ON
          GOTO      USRD1100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD1100 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR1LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF1,CSTRING,SP70
          GOTO      USRD9999
.
USRD1100  COMPARE   ONE,FMACR2ON
          GOTO      USRD1200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD1200 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR2LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF2,CSTRING,SP70
          GOTO      USRD9999
.
USRD1200  COMPARE   ONE,FMACR3ON
          GOTO      USRD1300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD1300 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR3LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF3,CSTRING,SP70
          GOTO      USRD9999
.
USRD1300  COMPARE   ONE,FMACR4ON
          GOTO      USRD2000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD2000 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACR4LN,CSTRLEN
          CALL      GSTR0000           * get string
          PACK      FMAMREF4,CSTRING,SP70
          GOTO      USRD9999
.
USRD2000  COMPARE   ONE,FMACD1ON
          GOTO      USRD2100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD2100 IF NOT EQUAL        * desired option ?
.
          UNPACK    SP10,CCENT,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          BRANCH    MODE,USRD2050                * insert mode - no default
          UNPACK    FMAMDAT1,CCENT,CYEAR,CMON,CDAY
USRD2050  CALL      KEYDATE
          PACK      FMAMDAT1,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRD9999
.
USRD2100  COMPARE   ONE,FMACD2ON
          GOTO      USRD2200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD2200 IF NOT EQUAL        * desired option ?
.
          UNPACK    SP10,CCENT,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          BRANCH    MODE,USRD2150                * insert mode - no default
          UNPACK    FMAMDAT2,CCENT,CYEAR,CMON,CDAY
USRD2150  CALL      KEYDATE
          PACK      FMAMDAT2,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRD9999
.
USRD2200  COMPARE   ONE,FMACD3ON
          GOTO      USRD2300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD2300 IF NOT EQUAL        * desired option ?
.
          UNPACK    SP10,CCENT,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          BRANCH    MODE,USRD2250                * insert mode - no default
          UNPACK    FMAMDAT3,CCENT,CYEAR,CMON,CDAY
USRD2250  CALL      KEYDATE
          PACK      FMAMDAT3,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRD9999
.
USRD2300  COMPARE   ONE,FMACD4ON
          GOTO      USRD3000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD3000 IF NOT EQUAL        * desired option ?
.
          UNPACK    SP10,CCENT,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          BRANCH    MODE,USRD2950                * insert mode - no default
          UNPACK    FMAMDAT4,CCENT,CYEAR,CMON,CDAY
USRD2950  CALL      KEYDATE
          PACK      FMAMDAT4,CCENT,CYEAR,CMON,CDAY
.
          GOTO      USRD9999
.
USRD3000  COMPARE   ONE,FMACA1ON
          GOTO      USRD3100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD3100 IF NOT EQUAL        * desired option ?
.
          MOVE      "1",AMOUNTNO
          CALL      GAMT0000
          GOTO      USRD9999
.
USRD3100  COMPARE   ONE,FMACA2ON
          GOTO      USRD3200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD3200 IF NOT EQUAL        * desired option ?
.
          MOVE      "2",AMOUNTNO
          CALL      GAMT0000
          GOTO      USRD9999
.
USRD3200  COMPARE   ONE,FMACA3ON
          GOTO      USRD3300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD3300 IF NOT EQUAL        * desired option ?
.
          MOVE      "3",AMOUNTNO
          CALL      GAMT0000
          GOTO      USRD9999
.
USRD3300  COMPARE   ONE,FMACA4ON
          GOTO      USRD4000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD4000 IF NOT EQUAL        * desired option ?
.
          MOVE      "4",AMOUNTNO
          CALL      GAMT0000
          GOTO      USRD9999
.
USRD4000  COMPARE   ONE,FMACC1ON
          GOTO      USRD4100 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD4100 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC1NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD1
          MATCH     SP70,FMAMCOD1
          GOTO      USRD9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC1NA,FMAMCOD1,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD1,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRD9999
.
USRD4100  COMPARE   ONE,FMACC2ON
          GOTO      USRD4200 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD4200 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC2NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD2
          MATCH     SP70,FMAMCOD2
          GOTO      USRD9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC2NA,FMAMCOD2,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD2,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRD9999
.
USRD4200  COMPARE   ONE,FMACC3ON
          GOTO      USRD4300 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD4300 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC3NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD3
          MATCH     SP70,FMAMCOD3
          GOTO      USRD9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC3NA,FMAMCOD3,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD3,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRD9999
.
USRD4300  COMPARE   ONE,FMACC4ON
          GOTO      USRD5000 IF NOT EQUAL        * is this field activated ?
          ADD       ONE,OPTNO                    * increment option
          COMPARE   SELECT,OPTNO
          GOTO      USRD5000 IF NOT EQUAL        * desired option ?
.
          MOVE      FMACC4NA,CATEGORY
          CALL      KCODFM00                     * get code
          MOVE      FMCDCODE,FMAMCOD4
          MATCH     SP70,FMAMCOD4
          GOTO      USRD9999 IF EQUAL
.
          MOVE      SP70,FMCDDESC
          PACK      KEY5,FMACC4NA,FMAMCOD4,SP70
          CALL      RDFMCD1
          DISPLAY   *PCCOL:CVERT,*V2LON,FMAMCOD4,*HOFF,*P44:CVERT,FMCDDESC;
          GOTO      USRD9000                     * make sure accept mode cleared
.
.
USRD5000  BRANCH    ACCEPT,USRD9000              * in accept mode ?
          BRANCH    MODE,USRD9999
          BEEP                                   * illegal option
.
USRD9000  MOVE      ZERO,ACCEPT                  * clear accept mode
.
USRD9999  RETURN
.******************************************************************************
.* DAMT - Display amount                         Called by lots               *
.*       Requires : AMOUNTNO      (1=amount number)                           *
.*                  LINENO,COLNO  (screen address)                            *
.******************************************************************************
DAMT0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,DAMT0100,DAMT0200,DAMT0300,DAMT0400,DAMT0500,DAMT0600
.
.---- no decimal places ----
.
          LOAD      F12,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          COMPARE   ZERO,F12             * any amount entered
          GOTO      DAMT9999 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12;
          GOTO      DAMT9999
.
.---- 1 decimal places ----
.
DAMT0100  LOAD      F12P1,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          COMPARE   ZERO,F12P1           * any amount entered
          GOTO      DAMT9999 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P1;
          GOTO      DAMT9999
.
.---- 2 decimal places ----
.
DAMT0200  LOAD      F12P2,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          COMPARE   ZERO,F12P2           * any amount entered
          GOTO      DAMT9999 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P2;
          GOTO      DAMT9999
.
.---- 3 decimal places ----
.
DAMT0300  LOAD      F12P3,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          COMPARE   ZERO,F12P3           * any amount entered
          GOTO      DAMT9999 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P3;
          GOTO      DAMT9999
.
.---- 4 decimal places ----
.
DAMT0400  LOAD      F12P4,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          COMPARE   ZERO,F12P4           * any amount entered
          GOTO      DAMT9999 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P4;
          GOTO      DAMT9999
.
.---- 5 decimal places ----
.
DAMT0500  LOAD      F12P5,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          COMPARE   ZERO,F12P5           * any amount entered
          GOTO      DAMT9999 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P5;
          GOTO      DAMT9999
.
.---- 6 decimal places ----
.
DAMT0600  LOAD      F12P6,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          COMPARE   ZERO,F12P6           * any amount entered
          GOTO      DAMT9999 IF EQUAL
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P6;
          GOTO      DAMT9999
.
DAMT9999  RETURN
.******************************************************************************
.* GAMT - Get amount                             Called by lots               *
.*       Requires : AMOUNTNO      (1=amount number)                           *
.*                  CVERT,CCOL    (screen address)                            *
.******************************************************************************
GAMT0000  LOAD      F1,AMOUNTNO,FMACA1DP,FMACA2DP,FMACA3DP,FMACA4DP * dec places
          BRANCH    F1,GAMT0100,GAMT0200,GAMT0300,GAMT0400,GAMT0500,GAMT0600
.
.---- no decimal places ----
.
          KEYIN     *PCCOL:CVERT,"____________":
                    *PCCOL:CVERT,*V2LON,F12:
                    *PCCOL:CVERT,*DV,F12;
          STORE     F12,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 1 decimal places ----
.
GAMT0100  KEYIN     *PCCOL:CVERT,"____________._":
                    *PCCOL:CVERT,*V2LON,F12P1:
                    *PCCOL:CVERT,*DV,F12P1;
          STORE     F12P1,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 2 decimal places ----
.
GAMT0200  KEYIN     *PCCOL:CVERT,"____________.__":
                    *PCCOL:CVERT,*V2LON,F12P2:
                    *PCCOL:CVERT,*DV,F12P2;
          STORE     F12P2,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 3 decimal places ----
.
GAMT0300  KEYIN     *PCCOL:CVERT,"____________.___":
                    *PCCOL:CVERT,*V2LON,F12P3:
                    *PCCOL:CVERT,*DV,F12P3;
          STORE     F12P3,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 4 decimal places ----
.
GAMT0400  KEYIN     *PCCOL:CVERT,"____________.____":
                    *PCCOL:CVERT,*V2LON,F12P4:
                    *PCCOL:CVERT,*DV,F12P4;
          STORE     F12P4,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 5 decimal places ----
.
GAMT0500  KEYIN     *PCCOL:CVERT,"____________._____":
                    *PCCOL:CVERT,*V2LON,F12P5:
                    *PCCOL:CVERT,*DV,F12P5;
          STORE     F12P5,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
.---- 6 decimal places ----
.
GAMT0600  KEYIN     *PCCOL:CVERT,"____________.______":
                    *PCCOL:CVERT,*V2LON,F12P6:
                    *PCCOL:CVERT,*DV,F12P6;
          STORE     F12P6,AMOUNTNO,FMAMAMT1,FMAMAMT2,FMAMAMT3,FMAMAMT4
          GOTO      GAMT9999
.
GAMT9999  RETURN
.******************************************************************************
.* SELC - screen C                               Called By ML0000             *
.******************************************************************************
SELC0000  CALL      SCRC0000           * display screen C
          PACK      KEY14,SAVLEDG,SAVCOCE,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,SELC0100
          MOVE      FMAMCLEV,CURLEVEL   * save report level
          MOVE      SAVLEDG,LEDGER
          MOVE      "0",ITEMNUM       * audit routine vars
          MOVE      "1",PAGENO
          MOVE      "1",SKIPLINE 
          PACK      KEY26,SAVLEDG,SAVCOCE,SP70
          CALL      RSFMRF2            * read in report seq data
          CALL      RKFMRF2
          BRANCH    OVRCD,SELC0100     * record found ?
          PACK      KEY14,FMRFLED,FMRFACC,SP70
          MATCH     KEY14,KEY26
          GOTO      SELC0100 IF NOT EQUAL
          BRANCH    ACCEPT,SELC5000    * in accept mode
          GOTO      SELC1000
.
SELC0100  DISPLAY   *P1:24,*B,*EL,"WARNING - fmsrsfaf Record Missing - ";
          CALL      HITENTER
          GOTO      SELC9500
.
SELC0200  DISPLAY   *P1:24,*B,*EL,"WARNING - fmsamaaf Record Missing - ";
          CALL      HITENTER
          GOTO      SELC9500
.
SELC1000  CALL      DATC0000           * display data
.
SELC1010  CALL      MQST0000           * get desired action
          BRANCH    EXIT,SELC9500      * quit screen ?
          MOVE      SP70,SKEY
          LOAD      KEY26,OPTIONC,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
          CALL      RDFMXC1
          BRANCH    OVRCD,SELC5000
.
.---- modify mode ----
.
          PACK      SKEY26,KEY26,SP70
          UNPACK    SKEY26,LEDGER,SUBJCODE,COSTCODE
          PACK      KEY14,LEDGER,SUBJCODE,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,SELC4100
          MATCH     "1",FMSASTYP
          GOTO      SELC4100 IF NOT EQUAL
          DISPLAY   *P1:24,*B,*EF,"Total Type Subjectives Cannot Be Deleted - ";
          CALL      HITENTER
          GOTO      SELC1010
.
SELC4100  UNPACK    SKEY26,LEDGER,SUBJCODE,COSTCODE
          CALL      CKTC0000           * check if in calc details
          BRANCH    EXIT,SELC1010
.
          UNPACK    SKEY26,LEDGER,SUBJCODE,COSTCODE
          CALL      BCOD0000
          PACK      KEY14,LEDGER,ACCOUNT,SP70
          CALL      CDAT0000             * check for data
          BRANCH    EXIT,SELC1010
.
          DISPLAY   *P55:24,"Deleting : ",*V2LON,SUBJCODE,*EF;
          MOVE      ZERO,DELALL
          MOVE      ZERO,OLDDSUBJ
          MOVE      ZERO,OLDDCOST
          MOVE      ZERO,SKIPFMTU
          MOVE      SP70,UTYPE
          CALL      DREC0000           * delete old records
.
          MOVE      OPTIONC,ITEMNUM
          MOVE      OPTIONC,SAVITEM
          MOVE      "8",LINENO
          ADD       ITEMNUM,LINENO     * get lineno
          MOVE      "0",SKIPLINE 
          CALL      KDAT0000           * get data
          MOVE      "1",SKIPLINE 
          GOTO      SELC1000
.
.---- insert mode ----
.
SELC5000  ADD       ONE,ITEMNUM
          COMPARE   MAXITEMS,ITEMNUM
          CALL      ADDR0000 IF NOT LESS         * get first free position
.
          MOVE      "8",LINENO
          ADD       ITEMNUM,LINENO               * get lineno
          MOVE      ITEMNUM,SAVITEM
.
SELC6000  CALL      KDAT0000           * get data
          BRANCH    EXIT,SELC1000
.
          MOVE      SAVITEM,ITEMNUM
          GOTO      SELC5000           * get more entries
.
SELC9000  MOVE      ZERO,EXIT          * continue
          GOTO      SELC9999
.
SELC9500  MOVE      ONE,EXIT           * quit
.
SELC9999  RETURN
.**********************************************************************
.  KDAT - Keyin screen data                            Called By SELC
.        Requires - SAVLEDG  (current ledger)
.                   SAVCOCE  (current cc)
.                   LINENO   (current line)
.        Returns  - EXIT     (1=quit)
.**********************************************************************
KDAT0000  DISPLAY   *P1:LINENO,*V2LON,SAVITEM,DOT,*EL;
          MOVE      SAVLEDG,FMLALEDG
          MOVE      "7",CCOL
          MOVE      LINENO,CVERT
          MOVE      "2",CSUBJIND       * set for non total subjectives
          CALL      KSBAFM00           * get subjective
          BRANCH    EXIT,KDAT9500,KDAT9500
          MATCH     "1",FMSASTYP
          GOTO      KDAT0500 IF NOT EQUAL
          DISPLAY   *P1:24,*B,*EL,"Cannot be a Total Type Subjective - ";
          CALL      HITENTER
          GOTO      KDAT0000
.
KDAT0500  MOVE      SAVCOCE,COSTCODE
          MOVE      FMSASUBJ,SUBJCODE
          CALL      BCOD0000           * build account code
          DISPLAY   *PCCOL:CVERT,*V2LON,FMSASUBJ,*HOFF,SP2,FMSADESC:
                    *P68:CVERT,*V2LON,ACCOUNT;
.
          PACK      KEY26,SAVLEDG,SUBJCODE,COSTCODE,SP70
          CALL      RAFMXC1
          BRANCH    OVRCD,KDAT1000    * record exists ?
          DISPLAY   *P1:24,*B,*EL,"Subjective Already Linked - ";
          CALL      HITENTER
          GOTO      KDAT0000
.
KDAT1000  MOVE      SAVLEDG,LEDGER
          MOVE      ZERO,WRECLEV
          MOVE      ZERO,SKIPFMTU
          MOVE      SP70,UTYPE
          DISPLAY   *P55:24,"Writing  : ",*V2LON,SUBJCODE,*EF;
          CALL      WREC0000           * write records
.
.
KDAT9000  MOVE      ZERO,EXIT          * continue
          GOTO      KDAT9999
.
KDAT9500  MOVE      ONE,EXIT           * quit
.
KDAT9999  RETURN
.******************************************************************************
.* CKTC - Check whether included in any Calc Details      Called by lots      *
.*        Returns : EXIT     (0=ok, 1=calc det)                               *
.******************************************************************************
CKTC0000  CALL      BCOD0000
          PACK      KEY14,LEDGER,ACCOUNT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CKTC9000               * check if account exists
.
          PACK      KEY31,LEDGER,SUBJCODE,SP70
          CALL      RSFMTS2
.
CKTC1000  CALL      RKFMTS2
          BRANCH    OVRCD,CKTC9000
          PACK      KEY14,FMTSTLED,FMTSSACC,SP70
          MATCH     KEY14,KEY31
          GOTO      CKTC9000 IF NOT EQUAL
.
          PACK      KEY26,LEDGER,FMTSTACC,COSTCODE,SP70
          CALL      RDFMXC1
          BRANCH    OVRCD,CKTC1000
.
          MOVE      ACCOUNT,KEY12
          MOVE      FMTSTACC,SUBJCODE
          CALL      BCOD0000
          DISPLAY   *P1:24,*B,*EF:
                    "Acct ",*V2LON,KEY12,*HOFF," Used In ",*V2LON:
                    LEDGER,SLASH,ACCOUNT,*HOFF," Calculation - ";
.
          MOVE      FMTSSACC,SUBJCODE  * reset SUBJCODE and ACCOUNT
          CALL      BCOD0000
.
          CALL      HITENTER
          MATCH     "1426",PASSCODE
          GOTO      CKTC9500 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CKTC9000 IF EQUAL
          GOTO      CKTC9500
.
CKTC9000  MOVE      ZERO,EXIT
          GOTO      CKTC9999
.
CKTC9500  MOVE      ONE,EXIT
.
CKTC9999  RETURN
.******************************************************************************
.* DATC - display screen C data                  Called By MQST,SELC          *
.*       Requires - PAGENO   (page to display)                                *
.*                  MAXITEMS (maximum no. of items per page + 1)              *
.*                  SKIPLINE (0=dont display data on line cvert (redisplays)) *
.*        Returns - ITEMNUM  (number of data items displayed)                 *
.*                  ST1..ST17 (save keys for displayed data)                  *
.*        Uses    - CURPAGE  (page counter)                                   *
.*                  LINENO   (line to display data)                           *
.******************************************************************************
DATC0000  UNPACK    SP70,ST1,ST2                 * clear save keys
          UNPACK    SP70,ST3,ST4
          UNPACK    SP70,ST5,ST6
          UNPACK    SP70,ST7,ST8
          UNPACK    SP70,ST9,ST10
          UNPACK    SP70,ST11,ST12
          UNPACK    SP70,ST13,ST14
          UNPACK    SP70,ST15,ST16
          UNPACK    SP70,ST17,SKEY
          MOVE      "8",LINENO
          MOVE      "1",CURPAGE                  * start at page 1
          MOVE      "0",ITEMNUM                  * start at item 1
          DISPLAY   *P1:9,*EF;                   * clear data area on screen
.
          PACK      KEY31,SAVLEDG,SAVCOCE,SP70
          CALL      RSFMXC3                      * go to start of records
.
DATC1000  CALL      RKFMXC3                      * get next record
          BRANCH    OVRCD,DATC9000               * no more records ?
          MATCH     SAVLEDG,FMXCLED
          GOTO      DATC9000 IF NOT EQUAL        * not valid record ?
          MATCH     SAVCOCE,FMXCCOS
          GOTO      DATC9000 IF NOT EQUAL        * not valid record ?
.
DATC1500  ADD       "1",ITEMNUM                  * increment item number
          COMPARE   MAXITEMS,ITEMNUM
          GOTO      DATC2000 IF LESS             * at start of next screen ?
.
          MOVE      "1",ITEMNUM
          ADD       ONE,CURPAGE
.
DATC2000  COMPARE   PAGENO,CURPAGE
          GOTO      DATC1000 IF LESS             * not up to current page ?
          GOTO      DATC9500 IF NOT EQUAL        * past current page ?
.
.---- display data ----
.
          ADD       "1",LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
          BRANCH    SKIPLINE,DATC5000            * display line CVERT ?
          COMPARE   LINENO,CVERT
          GOTO      DATC1500 IF EQUAL            * get next line
.
DATC5000  MOVE      FMXCCOS,COSTCODE
          MOVE      FMXCSUB,SUBJCODE
          CALL      BCOD0000
.
          PACK      FMSADESC,SP70
          PACK      KEY14,FMXCLED,FMXCSUB,SP70
          CALL      RDFMSA1
.
          DISPLAY   *P7:LINENO,SUBJCODE,SP2,FMSADESC:
                    *P68:LINENO,ACCOUNT;
          PACK      KEY26,FMXCLED,FMXCSUB,FMXCCOS,SP70
          STORE     KEY26,ITEMNUM,ST1,ST2,ST3,ST4,ST5,ST6,ST7: 
                                  ST8,ST9,ST10,ST11,ST12,ST13: 
                                  ST14,ST15,ST16,ST17
.
          GOTO      DATC1000                     * get next record
.
.---- reached EOF before EOP ----
.
DATC9000  COMPARE   PAGENO,CURPAGE
          GOTO      DATC9100 IF NOT LESS          * not up to current page ?
          MOVE      ZERO,ITEMNUM                  * reset pointer
.
DATC9100  ADD       ONE,ITEMNUM                   * reached end of data
          COMPARE   MAXITEMS,ITEMNUM
          GOTO      DATC9200 IF NOT LESS          * at end of page ?
          ADD       ONE,LINENO
          DISPLAY   *P1:LINENO,*V2LON,ITEMNUM,*HOFF,DOT;
.
DATC9200  SUB       ONE,ITEMNUM
          MOVE      ZERO,MORE                     * no more data
          GOTO      DATC9999
.
.---- reached EOP before EOF ----
.
DATC9500  MOVE      ONE,MORE                      * more data
          MOVE      MAXITEMS,ITEMNUM
.
DATC9999  RETURN
.******************************************************************************
.* ADDR - get first blank position               Called By SCRC0000           *
.******************************************************************************
ADDR0000  ADD       ONE,PAGENO         * try next page
          CALL      DATC0000           * display next page
.
          ADD       ONE,ITEMNUM
          COMPARE   ITEMNUM,MAXITEMS
          GOTO      ADDR0000 IF LESS  * at end of page
          GOTO      ADDR9999 IF NOT EQUAL  * at end of page
          MOVE      ONE,ITEMNUM
.
ADDR9999  RETURN
.******************************************************************************
.* MQST - Main question for screen C             Called By SELC0000           *
.******************************************************************************
MQST0000  DISPLAY   *P1:24,"Select Item, (",*V2LON,"R":
                    *HOFF,")ange";               * display prompt
          MOVE      "20",CCOL
          COMPARE   ONE,MORE
          GOTO      MQST1000 IF NOT EQUAL
.
          DISPLAY   ", (",*V2LON,"N",*HOFF,")ext Page";
          ADD       "13",CCOL
.
MQST1000  COMPARE   PAGENO,ONE
          GOTO      MQST2000 IF EQUAL
.
          DISPLAY   ", (",*V2LON,"P",*HOFF,")revious Page";
          ADD       "17",CCOL
.
MQST2000  DISPLAY   ", e(",*V2LON,"X",*HOFF,")it :  ";
          ADD       "12",CCOL
.
MQST3000  KEYIN     *PCCOL:24,"__",*PCCOL:24,*JR,*V2LON,DIM2,*EL; * get option
          PACK      DIM2,DIM2,SP70
          REP       UPPLOW,DIM2
          COMPARE   ONE,MORE
          GOTO      MQST4000 IF NOT EQUAL
.
          MATCH     " N",DIM2
          GOTO      MQST4000 IF NOT EQUAL
          ADD       ONE,PAGENO         * get next page
          CALL      DATC0000
          GOTO      MQST0000
.
MQST4000  COMPARE   PAGENO,ONE
          GOTO      MQST4500 IF EQUAL
.
          MATCH     " P",DIM2
          GOTO      MQST4500 IF NOT EQUAL
          SUB       ONE,PAGENO         * get last page
          CALL      DATC0000
          GOTO      MQST0000
.
MQST4500  MATCH     " R",DIM2
          GOTO      MQST5000 IF NOT EQUAL
          CALL      RANG0000           * enter data for range
          CALL      DATC0000
          GOTO      MQST0000
.
MQST5000  MATCH     " X",DIM2
          GOTO      MQST9500 IF EQUAL
.
          MOVE      ZERO,OPTIONC
          MOVE      DIM2,OPTIONC
          COMPARE   OPTIONC,ZERO
          GOTO      MQST9000 IF LESS   * valid number input ?
          BEEP                         * illegal option
          GOTO      MQST3000           * get another option
.
MQST9000  MOVE      ZERO,EXIT          * continue
          GOTO      MQST9999
.
MQST9500  MOVE      ONE,EXIT           * quit
.
MQST9999  RETURN
.**********************************************************************
. RANG - create records for a range of cost centres   Called By MQST
.**********************************************************************
RANG0000  MOVE      "3",SCRNO          * set up redisplays for scr C range keyin
.
RANG0100  KEYIN     *P1:22,*EF,*P1:24,"(",*V2LON:
                    "A",*HOFF,")dd Range, (",*V2LON:
                    "D",*HOFF,")elete Range, e(",*V2LON:
                    "X",*HOFF,")it : _",*P39:24,*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       "1x2x3xa1A1d2D2x3X3",ANS
          MOVE      ZERO,RANGFLAG
          MOVE      ANS,RANGFLAG
          BRANCH    RANGFLAG,RANG0150,RANG0150,RANG9999
          BEEP
          GOTO      RANG0100
.
RANG0150  LOAD      MODESC,RANGFLAG,MODESC1,MODESC2
          MOVE      SAVLEDG,FMLALEDG
          UNPACK    SP70,FROMCOCE,TEMPDESC
          DISPLAY   *P1:22,MODESC," From Subjective  : ",*EF;
          MOVE      "27",CCOL
          MOVE      "22",CVERT
          MOVE      "2",CSUBJIND       * set for non total subjectives
          CALL      KSBAFM00           * get start of range
          BRANCH    EXIT,RANG0000,RANG9999
          MOVE      FMSASUBJ,FROMCOCE
          MOVE      FMSADESC,TEMPDESC
          DISPLAY   *P1:22,MODESC," From Subjective  : ",*V2LON:
                    FROMCOCE,*HOFF,"  ",TEMPDESC,*EL,*P1:23:
                    "       To   Subjective  :  ",*EF;
.
          MATCH     "1",FMSASTYP
          GOTO      RANG0200 IF NOT EQUAL
          DISPLAY   *P1:24,*B,*EL,"Cannot be a Total Type Subjective - ";
          CALL      HITENTER
          GOTO      RANG0000
.
RANG0200  MOVE      "27",CCOL
          MOVE      "23",CVERT
          MOVE      "2",CSUBJIND       * set for non total subjectives
          CALL      KSBAFM00           * get end of range
          BRANCH    EXIT,RANG0000,RANG9999
          MOVE      FMSASUBJ,TOCOCE
          DISPLAY   *P1:22,MODESC," From Subjective  : ",*V2LON:
                    FROMCOCE,*HOFF,"  ",TEMPDESC,*EL,*P1:23:
                    "       To   Subjective  : ",*V2LON,TOCOCE:
                    *HOFF,"  ",FMSADESC;
.
          MATCH     "1",FMSASTYP
          GOTO      RANG0250 IF NOT EQUAL
          DISPLAY   *P1:24,*B,*EL,"Cannot be a Total Type Subjective - ";
          CALL      HITENTER
          GOTO      RANG0200
.
RANG0250  MATCH     FROMCOCE,TOCOCE
          GOTO      RANG0300 IF NOT LESS
          DISPLAY   *P1:24,*B,*EL,"Illegal Range Entered - ";
          CALL      HITENTER
          GOTO      RANG0200
.
RANG0300  KEYIN     *P15:24,"  Ok (Y/N) ? ",*EF,*V2LON,ANS; * range is ok ?
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     "Y",ANS
          GOTO      RANG0400 IF EQUAL  * continue
          MATCH     "N",ANS
          GOTO      RANG0000 IF EQUAL  * rekey range
          BEEP
          GOTO      RANG0300
.
RANG0400  COMPARE   ONE,RANGFLAG
          CALL      DSTT0000 IF NOT EQUAL   * delete stat tot in range first
.
          PACK      KEY14,SAVLEDG,FROMCOCE,SP70
          CALL      RSFMSA1
          CALL      RPFMSA1
          MOVE      SAVCOCE,COSTCODE
          MOVE      SAVLEDG,LEDGER
          DISPLAY   *P1:24,*EL;
.
RANG0500  CALL      RKFMSA1            * create records
          BRANCH    OVRCD,RANG9999     * no more records
          MATCH     FMSALEDG,SAVLEDG
          GOTO      RANG9999 IF LESS   * past end of range
.
          MATCH     FMSASUBJ,TOCOCE
          GOTO      RANG9999 IF LESS   * past end of range
.
          MATCH     "1",FMSASTYP
          GOTO      RANG0500 IF EQUAL  * skip total type subjectives
.
          BRANCH    RANGFLAG,RANG0600  * deleting ?
          MATCH     "4",FMSASTYP
          GOTO      RANG0500 IF EQUAL  * skip stat total type subj (del in DSTT)
.
RANG0600  DISPLAY   *P55:24,"Processing : ",*V2LON,FMSASUBJ;
.
          MOVE      FMSASUBJ,SUBJCODE
          MOVE      SAVCOCE,COSTCODE
          CALL      BCOD0000           * build account code
          MOVE      ZERO,WRECLEV
          MOVE      ZERO,SKIPFMTU
          MOVE      SP70,UTYPE
          MOVE      ZERO,DELALL
          MOVE      ZERO,OLDDSUBJ
          MOVE      ZERO,OLDDCOST
.
          BRANCH    RANGFLAG,RANG2000       * add or delete ?
.
          CALL      CKTC0000                * check if in calc details
          BRANCH    EXIT,RANG0500
.
          CALL      BCOD0000
          PACK      KEY14,LEDGER,ACCOUNT,SP70
          CALL      CDAT0000             * check for data
          BRANCH    EXIT,RANG0500
.
          CALL      DREC0000                * delete required records
          GOTO      RANG0500
.
RANG2000  CALL      WREC0000                * create required records
          GOTO      RANG0500
.
RANG9999  MOVE      "2",SCRNO          * set up redisplays for scr C data keyins
          RETURN
.**********************************************************************
.  DSTT - Delete stat tot accts in range               Called By ML
.**********************************************************************
DSTT0000  PACK      KEY14,SAVLEDG,FROMCOCE,SP70
          CALL      RSFMSA1
          CALL      RPFMSA1
          MOVE      SAVCOCE,COSTCODE
          MOVE      SAVLEDG,LEDGER
          DISPLAY   *P1:24,*EL;
.
DSTT0500  CALL      RKFMSA1            * create records
          BRANCH    OVRCD,DSTT9999     * no more records
          MATCH     FMSALEDG,SAVLEDG
          GOTO      DSTT9999 IF LESS   * past end of range
.
          MATCH     FMSASUBJ,TOCOCE
          GOTO      DSTT9999 IF LESS   * past end of range
.
          MATCH     "4",FMSASTYP
          GOTO      DSTT0500 IF NOT EQUAL   * skip non stat total type subj
.
          DISPLAY   *P55:24,"Processing : ",*V2LON,FMSASUBJ;
.
          MOVE      FMSASUBJ,SUBJCODE
          MOVE      SAVCOCE,COSTCODE
          CALL      BCOD0000           * build account code
          MOVE      ZERO,WRECLEV
          MOVE      ZERO,SKIPFMTU
          MOVE      SP70,UTYPE
          MOVE      ZERO,DELALL
          MOVE      ZERO,OLDDSUBJ
          MOVE      ZERO,OLDDCOST
.
          CALL      CKTC0000                * check if in calc details
          BRANCH    EXIT,DSTT0500
.
          CALL      BCOD0000
          PACK      KEY14,LEDGER,ACCOUNT,SP70
          CALL      CDAT0000             * check for data
          BRANCH    EXIT,DSTT0500
.
          CALL      DREC0000                * delete required records
          GOTO      DSTT0500
.
DSTT9999  RETURN
.******************************************************************************
.* SCRC - Display screen C                       Called by SELC0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRC0000  MOVE      "2",SCRNO                    * screen number
          DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Cost Centre          : ":
                    *V2LON,SAVCOCE,*HOFF,SP2,SAVDCOCE,*EF:
                    *P28:7,*V2LON,"Related Subjectives":
                    *P1:8,*ULON,"Item",*P7:8,"Subjective":
                    *P68:8,"Account"
.
SCRC9999  RETURN
.*************************************************************************
.* DELT - Delete a cost centre if it has no related subjectives          *
.*                     called by : ML3000                                *
.*************************************************************************
DELT0000  CALL      KLDG0000             * keyin ledger
          BRANCH    EXIT,DELT9999,DELT9999
.
DELT1000  MOVE      SAVLEDG,FMCCLEDG
          MOVE      FMCCLEDG,FMLALEDG
          CALL      KCCC0000             * keyin cost centre
          BRANCH    EXIT,DELT0000,DELT9999
.
          UNPACK    SP70,FMAMCLEV
          PACK      KEY14,FMCCLEDG,FMCCCOCE
          CALL      RDFMAM1
          MOVE      FMCCCOCE,SAVCOCE
          CALL      DRPT0000             * display report
.
          CALL      DELQST               * ok to delete?
          BRANCH    CEXIT,DELT3000,DELT1000,DELT9999
.         
DELT3000  PACK      KEY31,SAVLEDG,SAVCOCE,SP70
          CALL      RSFMXC3                      * position file pointer
          CALL      RKFMXC3                      * get next record
          BRANCH    OVRCD,DELT3020               * no more records ?
.
          MATCH     FMXCLED,SAVLEDG
          GOTO      DELT3020 IF NOT EQUAL        * no more records ?
.
          MATCH     FMXCCOS,SAVCOCE
          GOTO      DELT3020 IF NOT EQUAL        * no more records ?
          DISPLAY   *P1:24,*B,*EF:
                    "Related Subjectives Exist for this Cost Centre - ";
          CALL      HITENTER
          GOTO      DELT0000
.
DELT3020  PACK      KEY26,SAVLEDG,SAVCOCE,SP70
          CALL      RSFMCF2                      * position file pointer
          CALL      RKFMCF2                      * get next record
          BRANCH    OVRCD,DELT3050               * no more records ?
.
          MATCH     FMCFLEDG,SAVLEDG
          GOTO      DELT3050 IF NOT EQUAL        * no more records ?
.
          MATCH     FMCFSCOS,SAVCOCE
          GOTO      DELT3050 IF NOT EQUAL        * no more records ?
          DISPLAY   *P1:23,*B,*EF:
                           "This Cost Centre is Allocated to Consolidated ":
                    *P1:24,"Cost Centre ",*V2LON,FMCFLEDG,SLASH,FMCFCCOS:
                    *HOFF," - ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
          GOTO      DELT0000
.
.
DELT3050  PACK      KEY17,SAVLEDG,SAVCOCE,SP70   * delete user def wp data
          PACK      KEY14,SAVLEDG,SAVCOCE,SP70
.
DELT3100  CALL      RSFMUW1                      * position file pointer
          CALL      RKFMUW1                      * get next record
.
          BRANCH    OVRCD,DELT3200               * no more records ?
          PACK      KEY17,FMUWLEDG,FMUWACCT,FMUWLNO,SP70
          MATCH     KEY14,KEY17
          GOTO      DELT3200 IF NOT EQUAL        * no more records ?
.
          CALL      DEFMUW1                      * delete old record
          GOTO      DELT3100
.
DELT3200  PACK      KEY26,SAVLEDG,SAVCOCE,SP70
          PACK      KEY14,SAVLEDG,SAVCOCE,SP70
.
DELT3500  CALL      RSFMRF2            * delete rsf records
          CALL      RKFMRF2
          BRANCH    OVRCD,DELT4000     * no more records ?
          PACK      KEY26,FMRFLED,FMRFACC,FMRFREP,FMRFPOS,FMRFSEQ,SP70
          MATCH     KEY26,KEY14
          GOTO      DELT4000 IF NOT EQUAL
          CALL      DEFMRF2
          GOTO      DELT3500
.
DELT4000  
.
DELT9000  PACK      KEY14,SAVLEDG,SAVCOCE,SP70
          DISPLAY   *P40:24,*V2LON,"Deleting ",SAVLEDG,SLASH,SAVCOCE,*EL;
          CALL      DEFMCC1                 * delete old record (if possible)
          CALL      DEFMAM1                 * delete old record (if possible)
          MOVE      "4",WAUDTYPE
          CALL      WAUD0000           * write audit record data
.
          GOTO      DELT1000           * get next item to delete
.
DELT9999  RETURN
.**********************************************************************
.  CKLV - Check CC level                               Called By lots
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CKLV0000  PACK      KEY31,SAVLEDG,SAVCOCE,SP70
          CALL      RSFMXC3                      * position file pointer
.
CKLV0100  CALL      RKFMXC3                      * get next record
          BRANCH    OVRCD,CKLV9000               * no more records ?
          MATCH     FMXCLED,SAVLEDG
          GOTO      CKLV9000 IF NOT EQUAL        * no more records ?
          MATCH     FMXCCOS,SAVCOCE
          GOTO      CKLV9000 IF NOT EQUAL        * no more records ?
.
          PACK      KEY14,FMXCLED,FMXCSUB,SP70
          CALL      RDFMSA1
          BRANCH    OVRCD,CKLV0100
          MATCH     "0",FMSASTYP
          GOTO      CKLV0100 IF EQUAL
          MATCH     "2",FMSASTYP
          GOTO      CKLV0100 IF EQUAL
          MATCH     "3",FMSASTYP
          GOTO      CKLV0100 IF EQUAL
          MATCH     "4",FMSASTYP
          GOTO      CKLV5000 IF EQUAL
.
          MATCH     CURLEVEL,FMSADLEV
          GOTO      CKLV0100 IF LESS
.
          DISPLAY   *P1:23,*B,*EF:
                    "ERROR - Subjective ",*V2LON,FMXCSUB,*HOFF," Has a Higher ":
                    *P1:24,"Default Level than this Cost Centre - ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
          GOTO      CKLV9500
.
CKLV5000  PACK      KEY31,SAVLEDG,FMSASUBJ,SP70
          CALL      RSFMTS1                      * position file pointer
.
CKLV5100  CALL      RKFMTS1                      * get next record
          BRANCH    OVRCD,CKLV0100               * no more records ?
          MATCH     FMTSTLED,SAVLEDG
          GOTO      CKLV0100 IF NOT EQUAL        * no more records ?
          MATCH     FMTSTACC,FMSASUBJ
          GOTO      CKLV0100 IF NOT EQUAL        * no more records ?
.
          MATCH     "2",FMTSSUBJ
          GOTO      CKLV5100 IF NOT EQUAL
.
          MATCH     FMSADLEV,CURLEVEL
          GOTO      CKLV0100 IF LESS
.
          DISPLAY   *P1:23,*B,*EF:
                    "ERROR - Subjective ",*V2LON,FMXCSUB,*HOFF," Has a Lower ":
                    *P1:24,"Default Level than this Cost Centre - ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
          GOTO      CKLV9500
.
CKLV9000  MOVE      ZERO,EXIT          * continue
          GOTO      CKLV9999
.
CKLV9500  MOVE      ONE,EXIT           * quit
.
CKLV9999  RETURN
.**********************************************************************
.  CDAT - Check for data on file                       Called By lots
.        Requires - KEY14    (ledger/account)
.                   NORMFIL1 & 2, STATFILE (filenames - blank if closed)
.        Returns  - EXIT     (1=quit)
.**********************************************************************
CDAT0000  CALL      RDFMAM1
          BRANCH    OVRCD,CDAT9000     * account exists ?
.
          MATCH     "6",FMAMTYPE       * only check for posting accounts
          GOTO      CDAT1000 IF LESS
          MATCH     "8",FMAMTYPE
          GOTO      CDAT2000 IF EQUAL
          GOTO      CDAT9000
.
.---- check for normal data ----
.
CDAT1000  
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
.
. Current Year
.
          PACK      FILENAME,FMST,FMLACYRR,SP70
          MATCH     FILENAME,NORMFIL1
          GOTO      CDAT1100 IF EQUAL  * file open ?
.
          MOVE      SP70,NORMFIL1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSTRNA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,CDAT1200     * file missing ?
          MOVE      FILENAME,NORMFIL1
.
CDAT1100  PACK      KEY32,KEY14,SP70
          CALL      RSFMTR2
          CALL      RKFMTR2
          BRANCH    OVRCD,CDAT1200
          PACK      KEY15,FMTRLEDG,FMTRACCT,SP70
          MATCH     KEY15,KEY14
          GOTO      CDAT1200 IF NOT EQUAL
          GOTO      CDAT9500           * data exists
.
. Last Year
.
CDAT1200  MOVE      FMLACYRR,F4YEAR
          SUB       ONE,F4YEAR
          PACK      FILENAME,FMST,F4YEAR,SP70
          REP       " 0",FILENAME
          MATCH     FILENAME,NORMFIL2
          GOTO      CDAT1300 IF EQUAL  * file open ?
.
          MOVE      SP70,NORMFIL2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSCTRA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,CDAT9000     * file missing ?
          MOVE      FILENAME,NORMFIL2
.
CDAT1300  PACK      KEY32,KEY14,SP70
          CALL      RSFMCT2
          CALL      RKFMCT2
          BRANCH    OVRCD,CDAT9000
          PACK      KEY15,FMCTLEDG,FMCTACCT,SP70
          MATCH     KEY15,KEY14
          GOTO      CDAT9000 IF NOT EQUAL
          GOTO      CDAT9500           * data exists
.
.---- check for stat data ----
.
CDAT2000  
          MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
.
          PACK      FILENAME,FMSA,FMLACYRR,SP70
          MATCH     FILENAME,STATFILE
          GOTO      CDAT2100 IF EQUAL  * file open ?
.
          MOVE      SP70,STATFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSTRA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,CDAT9000     * file missing ?
          MOVE      FILENAME,STATFILE
.
CDAT2100  PACK      KEY30,KEY14,SP70
          CALL      RSFMSR2
          CALL      RKFMSR2
          BRANCH    OVRCD,CDAT9000
          PACK      KEY15,FMSRLEDG,FMSRACCT,SP70
          MATCH     KEY15,KEY14
          GOTO      CDAT9000 IF NOT EQUAL
          GOTO      CDAT9500           * data exists
.
.
CDAT9000  MOVE      ZERO,EXIT          * continue
          GOTO      CDAT9999
.
CDAT9500  MOVE      ONE,EXIT           * quit
          DISPLAY   *P1:23,*B,*EF:
                    "Data Found In Transaction File ",*V2LON,FILENAME,*HOFF:
                    *P1:24:
                    "For Account ",*V2LON,FMAMLEDG,SLASH,FMAMACCT,*HOFF," - ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
          MATCH     "1426",PASSCODE
          GOTO      CDAT9999 IF NOT EQUAL
          MATCH     "*",ANS
          GOTO      CDAT9000 IF EQUAL
.
CDAT9999  RETURN
.*****************************************************************************
. WAUD - Write Audit Record                           Called by ML0000
.    Requires - WAUDTYPE (1=write, 2=before change, 3=after change, 4=delete)
.           WHICAUDT (blank=both audit files, 1=1st audit only, 2=2nd audit only
.*****************************************************************************
WAUD0000  CLOCK     TIME,SAVETIME
.
          MATCH     "2",WHICAUDT
          GOTO      WAUD0100 IF EQUAL
.
          PACK      FMAMAUDD,CCC,CYY,CMM,CDD     * set up vars for audit Accnt.
          REP       " 0",FMAMAUDD
          MOVE      SAVETIME,FMAMAUDT
          MOVE      PORT,FMAMAUDP
          LOAD      FMAMAUDR,WAUDTYPE,ANSA,ANSB,ANSC,ANSD
          MOVE      ONE,FMAMAUDS
          MOVE      PASSCODE,FMAMAUDO
          PACK      KEY19,FMAMAUDD,SAVETIME,FMAMAUDP,FMAMAUDR
          MOVE      KEY19,SAVKEY19
.
          COMPARE   ONE,FMSAUDA
          CALL      AWFMAM IF EQUAL              * write audit file record
.
          MATCH     "1",WHICAUDT
          GOTO      WAUD9999 IF EQUAL
.
WAUD0100  PACK      FMCCAUDD,CCC,CYY,CMM,CDD     * set up vars for audit CC
          REP       " 0",FMCCAUDD
          MOVE      SAVETIME,FMCCAUDT
          MOVE      PORT,FMCCAUDP
          LOAD      FMCCAUDR,WAUDTYPE,ANSA,ANSB,ANSC,ANSD
          MOVE      ONE,FMCCAUDS
          MOVE      PASSCODE,FMCCAUDO
          PACK      KEY19,FMCCAUDD,SAVETIME,FMCCAUDP,FMCCAUDR
          MOVE      KEY19,SAVKEY19
.
          COMPARE   ONE,FMSAUDC
          CALL      AWFMCC IF EQUAL              * write audit file record
.
WAUD9999  PACK      WHICAUDT,SP10
          RETURN
.*****************************************************************************
. DAUD - Delete Before Change Audit                    Called by ML0000
. Requires- WHICAUDT (blank=both audit files, 1=1st audit only, 2=2nd audit only
.*****************************************************************************
DAUD0000  MOVE      SAVKEY19,KEY19
.
          MATCH     "2",WHICAUDT
          GOTO      DAUD0100 IF EQUAL
.
          COMPARE   ONE,FMSAUDA
          CALL      ADFMAM IF EQUAL              * delete audit file record
.
          MATCH     "1",WHICAUDT
          GOTO      DAUD9999 IF EQUAL
.
DAUD0100  COMPARE   ONE,FMSAUDC
          CALL      ADFMCC IF EQUAL              * delete audit file record
.
DAUD9999  PACK      WHICAUDT,SP10
          RETURN
.*************************************************************************
.* REDISPLAY FOR STANDARD KEYINS                                         *
.*************************************************************************
RLMAFM00  BRANCH    SCRNO,RDISA000,RDISC000,RDISD000
          DISPLAY   *P1:4,*EF,*P5:4,"Ledger",*P26:4,":";
          RETURN
.
RCCAFM00  DISPLAY   *P1:4,"    Ledger               : ":
                    *V2LON,SAVLEDG,*HOFF,SP12,SAVDLEDG,*EL:
                    *P1:5,"    Cost Centre          : ",*EF;
          RETURN
.
RSBAFM00  BRANCH    SCRNO,RDISA000,RDISC000,RDISD000
          RETURN
.
RDISA000  CALL      DRDS0000           * redisplay reporting screen
          DISPLAY   *PCCOL:CVERT,*V2LON,FMLALEDG,*HOFF,SLASH,*EL;
          RETURN
.
RDISC000  CALL      SCRC0000           * redisplay for screen C data keyins
          CALL      DATC0000
          RETURN
.
RDISD000  CALL      SCRC0000           * redisplay for screen C range keyins
          CALL      DATC0000
          MOVE      "3",SCRNO          * ensure still set up for range keyins
          DISPLAY   *P1:22,MODESC," From Subjective  : ",*V2LON:
                    FROMCOCE,*HOFF,"  ",TEMPDESC,*EF;
          MATCH     SP70,FROMCOCE
          GOTO      RDISD999 IF EQUAL
          DISPLAY   *P1:23,"       To   Subjective  :";
RDISD999  RETURN
.
RCATFM00
RCODFM00
RSECFM00
RPRCFM00
RLEVFM00
RAMAFM00
          CALL      DRDS0000          * redisplay reporting screen
          RETURN
.
.------------------------------------------------------------
. Suspend All Posting Accounts for a Cost Centre
.------------------------------------------------------------
SUSPC000  DISPLAY     *P1:24,*EL,"0 = Open, 1 = Open for Journals Only,":
                                 " 2 = Closed"
          KEYIN      *P1:22,*EL,"Enter New Account Status : ",*V2LON,NEWSTAT
          COMPARE    ZERO,NEWSTAT
          GOTO       SUSPC100 IF EQUAL
          BRANCH     NEWSTAT,SUSPC100,SUSPC100
          BEEP
          GOTO       SUSPC000
.
SUSPC100  KEYIN      *P1:24,*EL,"Process Status Change (":
                     *V2LON,"Y",*HOFF,"/":
                     *V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          REP        "yYnN",ANS
          MATCH      ANSN,ANS
          GOTO       SUSPC900 IF EQUAL
          MATCH      ANSY,ANS
          GOTO       SUSPC100 IF NOT EQUAL
.
          PACK      DNEWSTAT,SP1,NEWSTAT
          CALL      SUSA0000
.
SUSPC900  DISPLAY    *P1:22,*EF
.
SUSPC999  RETURN
.------------------------------------------------------------
. Update Status Change
.------------------------------------------------------------
SUSA0000  PACK      KEY31,SAVLEDG,SAVCOCE,SP70
          CALL      RSFMXC3                      * go to start of records
SUSA1000  CALL      RKFMXC3                      * get next record
          BRANCH    OVRCD,SUSA9000               * no more records ?
          MATCH     SAVLEDG,FMXCLED
          GOTO      SUSA9000 IF NOT EQUAL        * not valid record ?
          MATCH     SAVCOCE,FMXCCOS
          GOTO      SUSA9000 IF NOT EQUAL        * not valid record ?
.
          MOVE      FMXCCOS,COSTCODE
          MOVE      FMXCSUB,SUBJCODE
          CALL      BCOD0000
.
          PACK      KEY14,FMXCLED,ACCOUNT,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,SUSA1000
          MOVE      FMAMTYPE,F1
          BRANCH    F1,SUSA1100,SUSA1100,SUSA1100,SUSA1100,SUSA1100
          GOTO      SUSA1000
.
SUSA1100  MOVE      ONE,WHICAUDT            * 1st audit file only
          MOVE      TWO,WAUDTYPE            * before change audit
          MOVE      FMAMSTAT,DIM2
          MATCH     DNEWSTAT,DIM2
          GOTO      SUSA1200 IF NOT EQUAL
.
          GOTO      SUSA1000
.
SUSA1200  CALL      WAUD0000                * write to selected audit file
          MOVE      NEWSTAT,FMAMSTAT
          CALL      UPFMAM1
          MOVE      ONE,WHICAUDT            * 1st audit file only
          MOVE      THREE,WAUDTYPE          * after change audit
          CALL      WAUD0000                * write to selected audit file
          GOTO      SUSA1000
.
. Change the Status for Cost Center Master file as well
.
SUSA9000  PACK      KEY14,SAVLEDG,SAVCOCE,SP70
          CALL      RDFMCC1
          IF        OVRCD=0
            MOVE      TWO,WHICAUDT          * 2nd audit file only
            MOVE      TWO,WAUDTYPE          * before change audit
            MATCH     DNEWSTAT,FMCCSTAT
            GOTO      SUSA9100 IF NOT EQUAL
          ENDIF
          GOTO      SUSA9500
.
SUSA9100  CALL      WAUD0000                * write to selected audit file
          MOVE      DNEWSTAT,FMCCSTAT
          CALL      UPFMCC1
          MOVE      TWO,WHICAUDT            * 2nd audit file only
          MOVE      THREE,WAUDTYPE          * after change audit
          CALL      WAUD0000                * write to selected audit file
          GOTO      SUSA9500
.
SUSA9500  DISPLAY   *P1:24,*EL,"Status Change Complete ";
          CALL      HITENTER
.
          PACK      KEY14,SAVLEDG,SAVCOCE,SP70
          CALL      RDFMAM1
.
SUSA9999  RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
.
          INC       FMSBPFIO/INC
          INC       FMSCCAIO/INC
          INC       FMSCCCIO/INC       * consolidated cost centre
          INC       FMSCODIO/INC
          INC       FMSCTRIO/INC       * normal tran file
          INC       FMSLEVIO/INC
          INC       FMSPRCIO/INC
          INC       FMSRSFIO/INC       * report seq file
          INC       FMSSBAIO/INC
          INC       FMSSLBIO/INC       * subjective budg link
          INC       FMSSSCIO/INC
          INC       FMSSTRIO/INC       * stat tran file
          INC       FMSTRNIO/INC       * normal tran file
          INC       FMSUWPIO/INC
          INC       FMSXCSIO/INC
.
          INC       FMSAMAKY
          INC       FMSCCAKY
          INC       FMSCODKY
          INC       FMSLEVKY
          INC       FMSLMAKY
          INC       FMSPRCKY
          INC       FMSSBAKY
.
          INC       FMSACCCD           * subj/cc creation routines
          INC       FMSUPDCD           * standard update routines
          INC       FMSSTDCD           * FMS Acc. standard routines
          INC       FMSUDACD           * FMS audit update routines 
.
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
          INC       TFILENAM
.
