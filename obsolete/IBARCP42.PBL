.******************************************************************************
.* System    :   CASH RECEIPTING                                              *
.* Program   :   IBARCP42                                                     *
.* Desc      :   Print Bulk Billing                                           *
.******************************************************************************
.* Date      :   1/9/88                                                       *
.* Author    :   Karin 'Twin' Peak                                            *
.* Comments  :                                                                *
.*       V10.13.01 26/07/2018  J.Tan            TSK 0848506                   *
.*                 Changed PP Doctor from DIM6 to DIM10                       *
.*       V10.11.01 22/11/2017  Ania P         TSK 0261630                     *
.*                 Moved TFILNAME to CFNAMEDP in INIT0000                     *
.*       V10.04.01 15/04/2014  J.Tan          CAR 261630                      *
.*                 Removed port number from temp file name                    *
.*       V10.00.01 23/08/2010  Steve Armstrong   CAR 228847                   *
.*                 Recompiled for changes to PATIN1IO                         *
.******************************************************************************
.*       V9.04.01  12/08/2005  Jeni Tan       CAR 62750                       *
.*                 Removed redefined variables                                *
.*       V9.03.01  03.03.2004  Lina Vo        CAR 47921                       *
.*                 Removed use of PRIDBTFD & IO.                              *
.*       V9.02.01  29.11.2001  B.G.Ackland                                    *
.*                 Remove pi's from Program                                   *
.******************************************************************************
.*        V5.08.04  25/10/2000  Dean Cramer   SRF 6710                        *
.*                  Recomplied for PATFNDDS                                   *
.*                  Changed for health fund table code size increase to       *
.*                  8 characters                                              *
.*        V5.08.03  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.02  16/08/2000  Jill Habasque                                 *
.*                  Fixed keyin position of doctor code                       *
.*        V5.08.01  06/06/2000  Tonii                                         *
.*                  Changed from KEY10 to KEY14 for the health fund file      *
.******************************************************************************
.*        V5.08.B01 02/03/2000  J.Tan                                         *
.*                  Recompiled for PATDTRFD                                   *
.*        V5.07.01  09/06/1999  Greg Horvat                                   *
.*                  Recompiled for PRIINVIO - Fixed problem with direct read  *
.*            V5.05.01 20/04/1998  Steve Armstrong   STH                      *
.*                     Recompiled for mods to PATDPTHV & PATDPATH             *
.******************************************************************************
.*               V4.01 16/12/88 DWJ Allow for both Patient & Private          *
.*                                  Practice invoices.                        *
.*             V5.01 05/05/89 Graeme Williams                                 *
.*             The PATINVFD has a new variable PINVCADM. This does not        *
.*               materially affect this program, but because of the           *
.*               change in program address, we've incremented the vers        *
.*             V5.02 03.06.89 S.Barcham                                       *
.*                   Recompiled for locking in PATIOMAS                       *
.*                   SRF 100809                                               *
.*                   06/06/89 Graeme Williams                                 *
.*                   Allow for 0 U/R numbers in surname searchs               *
.*                   SRF 4705                                                 *
.*             V5.51 23/05/90 J.Tan           SRF 104901                      *
.*                   Changes to INC       PATFN1FD                            *
.*             V5.52 19/09/90 D.Di.Paola      SRF 772                         *
.*                   Changes to RCPBULFD                                      *
.*             V6.00 23/05/91 Steve Armstrong                                 *
.*                   Health Fund Table increased to 8 chars.                  *
.*                   13/11/91 Steve Armstrong                                 *
.*                   Modified for new private practice system                 *
.*             V6.01 30/01/92 DIG                                             *
.*                   Converted to standard.                                   *
.*                   Re-Wrote for Private Practice Bulk Billing.              *
.*             V6.02 05/08/92 Peter Eddey                                     *
.*                   fixed opening codes file                                 *
.*          V6.00.03 07/08/92 Whirlpool                                       *
.*                   fixed bugs in printing                                   *
.*                   changed layout of medicare report                        *
.*          V6.00.04 07/10/92  Steve Armstrong                                *
.*                   Modified for alphanumeric debtor number                  *
.*          V6.00.05 17/11/92 J.Tan   SRF 118548                              *
.*                   Added summary report to option three and four            *
.*          V6.00.06 18/01/93 DIG                                             *
.*                   Changed for addition of PRBBITMN to PRIBULFD file.       *
.*          V6.00.07 01/03/93  DIG                SRF 120122  Quote 7558      *
.*                   Re-Compiled for changes to Bulk Billing.                 *
.*          V6.01.02 14/07/94 J.Tan     SRF 130759                            *
.*                   Fixing checking bactch size in printing completed        *
.*                   batches                                                  *
.*          V6.01.03 14/07/94 J.Tan     SRF 130781                            *
.*                   Removed the above modifications                          *
.*                   Changed the words of error messages                      *
.*          V6.01.04 26/07/94 J.Tan                                           *
.*                   Fixed printing completed batches                         *
.*          V6.01.05 28/07/94 J.Tan     SRF 131093                            *
.*                   Mods to fixed items with multiple number of services     *
.*        V6.03.01  29/03/1995  Greg Horvat      SRF 135835                   *
.*                  Fixed I*C on 6th index of bulk billing file               *
.*----------------------------------------------------------------------------*
.*        V5.03.01  19/07/1995  Steve Armstrong   SRF 610725                  *
.*                  Ported from rel 6.03                                      *
.*                  NB.  There is no code for looking across multiple         *
.*                  hospital databases and it was decided not to do add it    *
.*                  at this stage (see code in RCP43 if it needs to be        *
.*                  added later - will need hospital no. added to pribulkf)   *
.*        V5.03.02  20/07/1995  Steve Armstrong   SRF 610770                  *
.*                  Fixed to use "CALL OPPT" and open patmx1af                *
.*        V5.04.01  26/06/1997  Howellsy         505                          *
.*                  Use PATDOCKY instead of PATDOCDS                          *
.*                                                                            *
.******************************************************************************
.*                                                                            *
.*   NOTE: ANY CHANGES TO THIS PROGRAM NEED TO BE DONE IN IBARCP44 ALSO.      *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       RCPCIDFD/INC
          INC       RCPREGFD/INC
          INC       RCPCONFD/INC
          INC       PATCODFD/INC
          INC       PATDPTHV/INC
          INC       PATDTRFD/INC
          INC       PATFN1FD/INC
          INC       PATHOSFD/INC
          INC       PATIN1FD/INC
          INC       PATINVFD/INC
          INC       PATMA1FD/INC
          INC       PATGO1FD/INC
          INC       PMSHCPFD/INC
          INC       PRIBULFD/INC
          INC       PRICONFD/INC
          INC       PRIDTRFD/INC
          INC       PRIINVFD/INC
.
.**************************************************************************
.*                              TEMP FILES                                *
.**************************************************************************
RECTM1XX  IFILE     SQL, FIXED=47, KEY="U1-3,4-9,10-19,20-23"
RECTM2XX  IFILE     SQL, FIXED=47, KEY="U24-28,1-3,4-9,10-19,20-23"
.
. NAME    TYPE    LENGTH    PHYSICAL    START LOC.    DESCRIPTION
. ----    ----    ------    --------    ----------    -----------
TMPBULK   DIM       3          3            1         Bulk Bill Code (Cat GB)
TMPBCODE  DIM       6          6            4         Health Fund/Insurance Co.
.                                                     /Govt Code
TMPSDOCT  DIM       10         10          10         Service Doctor
DTMPBATC  DIM       4          4           20         Batch Number
TMPCLAIM  FORM      8          5           24         Claim Number
TMPAMNT   FORM      8.2        6           29         Total amount claimed for
.                                                     this batch
TMPSINV   DIM       8          8           35         Start invoice number for
.                                                     this batch
TMPSIZE   FORM      6          4           43         Size of this batch
.
.End of Record                             47
.
.  redefine form fields from key
.  -----------------------------
. NAME    TYPE    LENGTH    START LOC.    DESCRIPTION
.-----    ----    ------    ----------    -----------
TMPBATCH  FORM      4           16        Batch Number
.
.**************************************************************************
.*                              CONSTANTS                                 *
.**************************************************************************
CATGB     INIT      "GB"
.
FUNDEXT   INIT      "0000    "
.
HEAD1     INIT      " - Completed Batches"
HEAD2     INIT      " - Single Doctor"
HEAD3     INIT      " - Single Claim"
HEAD4     INIT      " - Re-Print Claims"
.
SL        INIT      "/"
SP12      INIT      "            "
SP14      INIT      "              "
.
.
UNDLN80   INIT      "*-------------------------------------------------":
                    "-----------------------------*"
UNDLN801  INIT      "*-------------------------------------------------":
                    "------------------------------"
UNDLN52   INIT      "---------------------------------------------------*"
.
ZEDS      INIT      "zzzzzzzzzzzzzzzzzzzz"
+
.**************************************************************************
.*                            GLOBAL VARIABLES                            *
.**************************************************************************
AMTTOT    FORM      8.2
.
BCODNAME  DIM       30
BULCODE   DIM       3
.
CFEETYP   FORM      1
CNTFLAG   FORM      1
CNTSIZE   FORM      6
CLAIMNO   DIM       8
CLAIMFM   FORM      8
CMDLINE   DIM       80
CODE      DIM       2
COUNT     FORM      6
COUNTR    FORM      1
.
DIM3      DIM       3
DIM17     DIM       17
DIM30     DIM       30
DISTOT    FORM      8.2
DOCCODE   DIM       10
DOCNAME   DIM       39
DOCTOR    DIM       10
.
FLAGCHNG  FORM      1
FLAGSOME  FORM      1
FNAME     DIM       8
FORM8     FORM      8
FORM62    FORM      6.2
FORM82    FORM      8.2
.
GOUTTOTL  FORM      8.2
GRECTOTL  FORM      8.2
GTOTAL    FORM      8.2
.
HEADER    DIM       20
HIGCODE   DIM       6
HIGDESC   DIM       30
.
INDICATR  DIM       1
INDXFLAG  FORM      1
INSCODE   DIM       6
INVTAMNT  FORM      8.2
.
KCOL      FORM      3
KVERT     FORM      2
.
TOFLAG    FORM      1
LNO       FORM      2
LINCNT    FORM      "60"
.
MRCNNOHS  FORM      2
.
OUTSTOTL  FORM      8.2
.
PAGENO    FORM      3
PAMTTOT   FORM      8.2
PATNAME   DIM       24
PAYTOT    FORM      8.2
PDISTOT   FORM      8.2
PNAME     DIM       39
PTCNDCQS  FORM      1
.
REPLAYT   FORM      2
REPTYPE   FORM      1
RECTOTL   FORM      8.2
RECFLAG   FORM      1
.
SAVAMNT   FORM      8.2
SAVBCODE  DIM       6
SAVBULK   DIM       3
SAVCLAIM  DIM       8
SAVINV    DIM       8
SAVKEY28  DIM       28
SAVKEY47  DIM       47
SAVMASS   DIM       10
SAVSDOCT  DIM       10
SAVINVNO  DIM       8
FROMFLAG  FORM      1
.
TEMPINDC  DIM       1
TIME      DIM       8
TMPFORM1  FORM      1
TOTAMNT   FORM      8.2
.
XXDPATH   DIM       120
.
PRGID     INIT      "IBARCP42"
PRGNAM    INIT      "Bulk Billing Printing"
VERSION   INIT      "V10.13.01"
+
.**************************************************************************
.*                              MAINLINE                                  *
.*                            Controlling Logic                           *
.**************************************************************************
ML0000    CALL      INIT0000                * Initialization
.
.------ keyin the option ------
.
ML0100    CALL      OPTN0000                * input users options
          BRANCH    EXIT,ML9999
          BRANCH    OPTION,ML1000,ML2000,ML3000,ML3000
.
.------ print completed batches ------
.
ML1000    CALL      KBUL0000                * keyin the Bulk Bill Code etc
          BRANCH    EXIT,ML0100               to print for
.
          CALL      CONTQST                 * see if O.K. to continue
          BRANCH    CEXIT,ML1100,ML1000,ML0100
.
.------ it is O.K. to continue ------
.
ML1100    CALL      CREA0000                * create the temp file
.
          CALL      LOAD0000                * load the temp file 
          BRANCH    EXIT,ML1200
.
          CALL      PRNC0000                * print all the completed batches
.
ML1200    CALL      KILL0000                * kill the temp file
          GOTO      ML1000
.
.------ print for a single doctor ------
.
ML2000    CALL      KDOC0000                * keyin the doctor for this batch
          BRANCH    EXIT,ML0100
.
          CALL      KBUL0000                * keyin the Bulk Bill Code etc
          BRANCH    EXIT,ML2000               to print for
.
          CALL      CONTQST                 * see if O.K. to continue
          BRANCH    CEXIT,ML2100,ML2000,ML0100
.
.------ it is O.K. to continue ------
.
ML2100    CALL      CREA0000                * create the temp file
.
          CALL      LOSD0000                * load the temp file 
          BRANCH    EXIT,ML2200
.
          CALL      PRNC0000                * print all the completed batches
.
ML2200    CALL      KILL0000                * kill the temp file
          GOTO      ML2000
.
.------ print or re-print for a single claim number ------
.
ML3000    CALL      KCLM0000                * keyin the claim number
          BRANCH    EXIT,ML0100
.
          CALL      CONTQST                 * see if O.K. to continue
          BRANCH    CEXIT,ML3100,ML3000,ML0100
.
ML3100    CALL      CREA0000                * create the temp file
          CALL      PRSC0000                * print a single claim
.
          CALL      KILL0000                * kill the temp file
          GOTO      ML3000
.
ML9999    SPLCLOSE
          CHAIN     PGM
          STOP
+
.**************************************************************************
.*                              INIT0000                                  *
.*                            Initialization                              *
.**************************************************************************
.
INIT0000  CALL      TFILENAM
          MOVE      TFILNAME,FNAME
          CALL      TFILENAM
          MOVE      TFILNAME,CFNAMEDP       * Must preceed CALL PATDPATH
.
          CALL      PATDPATH
          CALL      DISPHEAD                * display the screen header
.
          DISPLAY   *P50:24,"Opening ":
                    *P60:24,"rcpcidaf";
          OPEN      RCPCIDA1,"rcpcidaf"
          DISPLAY   *P60:24,"rcpregaf";
          OPEN      RCPREGA1,"rcpregaf"
          DISPLAY   *P60:24,"controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P60:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
          OPEN      PMSHCPA1,"pmshcpaf"
          DISPLAY   *P60:24,"patgo1af";
          OPEN      PATGO1A1,"patgo1af"
          DISPLAY   *P60:24,"patin1af";
          OPEN      PATIN1A1,"patin1af"
          DISPLAY   *P60:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          READ      CONTROLF,TWENTY1;*247,PTCNDCQS
          READ      CONTROLF,THIRTY6;*86,HSYS1,HSYS2,HSYS3,HSYS4,HSYS5:
                    HSYS6,HSYS7,HSYS8,HSYS9,HSYS10,HSYS11:
                    HSYS12,HSYS13,HSYS14,HSYS15,HSYS16:
                    HSYS17,HSYS18,HSYS19,HSYS20
.
          READ      CONTROLF,SIXTY;*129,MRCNNOHS
.
. ---- patient management ----
.
          COMPARE   "1",HSYS2
          GOTO      INIT1000 IF NOT EQUAL
.
          DISPLAY   *P60:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"
          DISPLAY   *P60:24,"patinvrf";
          OPEN      PATINVR1,"patinvrf"
          DISPLAY   *P60:24,"patinvrf";
          OPEN      PATINVR3,"patinvrf"
          DISPLAY   *P60:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
. ---- private practice ----
.
INIT1000  COMPARE   "1",HSYS3
          GOTO      INIT9999 IF NOT EQUAL
.
          DISPLAY   *P60:24,"pribulkf";
          OPEN      PRIBULK1,"pribulkf"
          OPEN      PRIBULK2,"pribulkf"
          OPEN      PRIBULK4,"pribulkf"
          OPEN      PRIBULK5,"pribulkf"
          OPEN      PRIBULK6,"pribulkf"
          DISPLAY   *P60:24,"pridtraf";
          OPEN      PRIDTRA1,"pridtraf"
          DISPLAY   *P60:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"
.
INIT9999  DISPLAY   *P1:24,*EL;
          MOVE      ONE,CNEWDS
.
          RETURN
+
.**************************************************************************
.*                              OPTN0000                                  *
.*                        Process Users Options                           *
.**************************************************************************
OPTN0000  HLINE     *G37,2,51,80
          MOVE      FALSE,EXIT
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Print Completed Batches":
                    *P1:6,*V2LON,"2",*HOFF," = Print Single Doctor":
                    *P1:7,*V2LON,"3",*HOFF," = Print Single Claim":
                    *P1:8,*V2LON,"4",*HOFF," = Re-Print Claims":
                    *P1:10,"Select Option : ";
.
.------ keyin the desired option ------
.
OPTN1000  MOVE      ZERO,OPTION
          KEYIN     *P17:10,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION             * see if exit was chosen
          GOTO      OPTN9000 IF EQUAL
.
          BRANCH    OPTION,OPTN9500,OPTN9500,OPTN9500,OPTN9500
.
          BEEP                              * invalid option
          GOTO      OPTN0000
.
.------ exit option chosen ------
.
OPTN9000  MOVE      ONE,EXIT
          GOTO      OPTN9999
.
.------ we have a valid option ------
.
OPTN9500  LOAD      HEADER,OPTION,HEAD1,HEAD2,HEAD3,HEAD4
          DISPLAY   *P51:2,*EL,*V2LON,HEADER
          HLINE     *G37,2,72,80
.
OPTN9999  RETURN
+
.**************************************************************************
.*                                  KBUL0000                              *
.*      Routine to keyin the Bulk Bill code and Insurance code, if        *
.*      appropriate                                                       *
.**************************************************************************
KBUL0000  MOVE      FALSE,EXIT
          MOVE      SP3,ACODE
          MOVE      SP6,HIGCODE
          MOVE      SP30,HIGDESC
.
.------ see which option we are running ------
.
          IF        OPTION = 1
            MOVE      TEN2,KVERT
          ELSE
            MOVE      TEN3,KVERT
          ENDIF
.
          MOVE      TEN9,KCOL
          DISPLAY   *P1:KVERT,*EF,"Bulk Bill Code  : ";
.
          CALL      PRIKYBUL                * keyin the bulk bill code
.
          MOVE      ACODE,BULCODE
.
.------ see if exitchar entered ------
.
          IF        EXIT = 1                
            GOTO      KBUL9999
          ENDIF
.
.------ see if nothing entered ------
.
          IF        EXIT = 2                
            DISPLAY   *PKCOL:KVERT,*EL,*V2LON,"All";
.
            GOTO      KBUL9999
          ENDIF
.
          DISPLAY   *PKCOL:KVERT,*EL,*V2LON,BULCODE:
                    *P30:KVERT,*HOFF,TDESC;
.
          MATCH     SP1,INDICATR            * see if we have a valid first 
          GOTO      KBUL9999 IF EQUAL         indicator
.
.------ see which option we are running ------
.
          IF        OPTION = 1
            MOVE      TEN3,KVERT
          ELSE
            MOVE      TEN4,KVERT
          ENDIF
.
          CMATCH    ANSI,THCSCOD            * see if we have an insurance
.                                             company bulk bill code
          IF        @EQUAL                    
            DISPLAY   *P1:KVERT,*EL,"Insurance Code  : ";
.
            GOTO      KBUL1000
.
          ENDIF
.
          CMATCH    ANSH,THCSCOD            * see if we have a health fund
.                                             bulk bill code
          IF        @EQUAL                    
            DISPLAY   *P1:KVERT,*EL,"Health Fund     : ";
.
            GOTO      KBUL1000
.
          ENDIF
.
          CMATCH    ANSG,THCSCOD            * see if we have a government code
          IF        @EQUAL
            DISPLAY   *P1:KVERT,*EL,"Government Code : ";
.
            GOTO      KBUL1000
.
          ELSE
            GOTO      KBUL9999              * we do not need to keyin an
          ENDIF                               insurance co./health fund/govt 
.                                             code
.------ keyin the insurance co./health fund/govt code ------
.
KBUL1000  CALL      PRIKYHIG                * keyin the insurance code
          BRANCH    EXIT,KBUL0000,KBUL2000
.
          DISPLAY   *PKCOL:KVERT,*EL,*V2LON,HIGCODE:
                    *P30:KVERT,*HOFF,HIGDESC;
.
          GOTO      KBUL9999
.
.------ no code entered ------
.
KBUL2000  DISPLAY   *PKCOL:KVERT,*EL,*V2LON,"All";
.
KBUL9999  RETURN
+
.**********************************************************************
.*                              CREA0000                              *
.*                   Create the Indexed Temp File                     *
.**********************************************************************
CREA0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Creating Temp File":
                           *HOFF," - Please Wait";
          CALL      KILL0000                       * kill existing temp file
.
.------ Build new indexed temp file ------
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME,CMDLINE
.
          APPEND   " 47 u1-3,4-9,10-19,20-23 u24-28,1-3,4-9,10-19,20-23",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      RECTM1XX,FNAME
          OPEN      RECTM2XX,FNAME
.
          DISPLAY   *P1:24,*EL;
.
CREA9999  RETURN
+
.**********************************************************************
.*                              KILL0000                              *
.*                  Kill the Tempfile if it Already Exists            *
.**********************************************************************
KILL0000  CLEAR     CMDLINE
          CLOSE     RECTM1XX
          CLOSE     RECTM2XX
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
+[
.**************************************************************************
.*                                 LOAD0000                               *
.*   Load the temp file with the details for each batch we are printing   *
.*   for option 1 - print completed batches                               *
.**************************************************************************
LOAD0000  DISPLAY   *P1:24,*EL,"Scanning : ":
                    *P30:24,"Loading : ";
          MOVE      SP3,SAVBULK
          MOVE      SP6,SAVBCODE
          MOVE      SP70,SAVSDOCT
          MOVE      SP8,TMPSINV
          MOVE      FALSE,FLAGSOME
          MOVE      FALSE,EXIT
          MOVE      ONE,CNTFLAG
          MOVE      SP8,SAVINVNO
          PACK      KEY47,BULCODE,HIGCODE,SP70
          CALL      RSPRBB2                 * position on the bulk billing file
.
.------ read through the bulk billing file ------
.
LOAD1000  CALL      RKPRBB2
          BRANCH    OVRCD,LOAD9000
.
LOAD1050  DISPLAY   *P12:24,*V2LON,PRBBINVN;
          COMPARE   ZERO,PRBBCLAM           * make sure we have a zero claim
          GOTO      LOAD1000 IF NOT EQUAL     number
.
          PACK      SAVKEY47,PRBBBULK,PRBBCODE,PRBBDOCT,PRBBINVN,PRBBCLAIM:
                          PRBBITMN,PRBBREGR
          MOVE      ONE,CNTFLAG
          MOVE      PRBBAMNT,SAVAMNT           * total amount of an invoice
          MOVE      PRBBINVN,SAVINVNO
.
LOAD1100  MATCH     PRBBINVN,SAVINVNO
          GOTO      LOAD1200 IF NOT EQUAL
.
          BRANCH    CNTFLAG,LOAD1150
          ADD       PRBBAMNT,SAVAMNT
.
LOAD1150  MOVE      ZERO,CNTFLAG
          CALL      RKPRBB2
          BRANCH    OVRCD,LOAD9000
          GOTO      LOAD1100
.
LOAD1200  BRANCH    CNTFLAG,LOAD1500
          MOVE      SAVKEY47,KEY47
          PACK      SAVKEY47,PRBBBULK,PRBBCODE,PRBBDOCT,PRBBINVN,PRBBCLAIM:
                          PRBBITMN,PRBBREGR
          CALL      RDPRBB2                 * reposition
.
LOAD1500  MOVE      PRBBINVN,SAVINVNO
.
          MATCH     SP3,BULCODE             * see if we are printing for a bulk
.                                             bill code
          IF        !@EQUAL                   
            MATCH     PRBBBULK,BULCODE      * see if we have the same code
            GOTO      LOAD9000 IF NOT EQUAL
.
            MATCH     SP6,HIGCODE           * see if we are printing for an
.                                             insurance code, etc, as well
            IF        !@EQUAL                 
              MATCH     PRBBCODE,HIGCODE    * see if we have the same govt code
              GOTO      LOAD9000 IF NOT EQUAL /insurance code/health fund
.
            ENDIF
          ENDIF
.
          MATCH     SP3,SAVBULK             * see if we have the first record
          GOTO      LOAD2000 IF EQUAL
.
          MATCH     PRBBBULK,SAVBULK        * see if we have the same bulk
          GOTO      LOAD2000 IF NOT EQUAL     bill codes
.
          MATCH     PRBBCODE,SAVBCODE       * see if we have the same govt code
          GOTO      LOAD2000 IF NOT EQUAL     /health fund/insurance code
.
          MATCH     PRBBDOCT,SAVSDOCT       * see if we have the same service
          GOTO      LOAD3000 IF EQUAL         doctor
.
.------ get the batch size for this bulk bill code, etc ------
.
LOAD2000  CALL      SIZE0000                * get the batch size 
          BRANCH    EXIT,LOAD9999             
          MOVE      ZERO,COUNT
          MOVE      ZERO,TMPBATCH
          MOVE      ZERO,TMPAMNT
          MOVE      SP8,TMPSINV
.
          MOVE      PRBBBULK,SAVBULK
          MOVE      PRBBCODE,SAVBCODE
          MOVE      PRBBDOCT,SAVSDOCT
.
.------ increment the count for this batch and see if it is the ------
.------ required size ------
.
LOAD3000  ADD       ONE,COUNT
          ADD       SAVAMNT,TMPAMNT
.
          MATCH     SP8,TMPSINV             * see if we need to set up the
.                                             start invoice for this batch
          IF        @EQUAL                    
            MOVE      PRBBINVN,TMPSINV
          ENDIF
.
          COMPARE   TCFORM6,COUNT           * see if we have reached the 
          GOTO      LOAD4000 IF NOT EQUAL     required size for this batch
.
          ADD       ONE,TMPBATCH
          MOVE      ZERO,TMPCLAIM
          MOVE      TCFORM6,TMPSIZE
          PACK      KEY23,PRBBBULK,PRBBCODE,PRBBDOCT,TMPBATCH
          CALL      WRTMPR1                 * write to the temp file
.
          DISPLAY   *P40:24,*V2LON,PRBBBULK,SP2,TMPBATCH;
          MOVE      TRUE,FLAGSOME
          MOVE      ZERO,COUNT
          MOVE      ZERO,TMPAMNT
          MOVE      SP8,TMPSINV
.
LOAD4000  BRANCH    CNTFLAG,LOAD1000
          MOVE      SAVKEY47,KEY47          * go to the start next invoice
          CALL      RDPRBB2
          GOTO      LOAD1050
.
.------ we have finished processing the bulk billing file so see if we ------
.------ actually found any batches to print ------
.
LOAD9000  BRANCH    FLAGSOME,LOAD9999
          DISPLAY   *P1:24,*EL,*B,"Not enough data for the batch size":
                           " - Hit <",*V2LON,"ENTER",*HOFF,"> to continue";
.
.         DISPLAY   *P1:24,*EL,*B,"No details found to print for this doctor ":
.                          " - Hit <",*V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          MOVE      TRUE,EXIT
.
LOAD9999  RETURN
+
.**************************************************************************
.*                                  SIZE0000                              *
.*            Get the batch size for the given bulk bill code             *
.**************************************************************************
SIZE0000  MOVE      FALSE,EXIT
          PACK      KEY5,CATGB,PRBBBULK
          CALL      RDCODE1                 * read the patient codes file
          BRANCH    OVRCD,SIZE9000
.
          COMPARE   ZERO,TCFORM6            * make sure we have a batch size
          GOTO      SIZE9999 IF NOT EQUAL
.
.------ invalid batch size ------
.
SIZE9000  DISPLAY   *P1:24,*EL,*B,"Invalid batch size found - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          MOVE      TRUE,EXIT
.
SIZE9999  RETURN
+
.**************************************************************************
.*                                PRNC0000                                *
.*             Routine to print all the completed batches                 *
.**************************************************************************
PRNC0000  MOVE      FALSE,FLAGSOME
          MOVE      ZERO,CPAGENO
          DISPLAY   *P1:14,*EF,"Bulk Bill Code               : ":
                    *P1:15,"Fund/Insurance Co./Govt Code : ":
                    *P1:16,"Service Doctor               : ":
                    *P1:17,"Claim Number                 : ":
                    *P1:18,"Register for this batch      : ";
          MOVE      SP70,KEY23
          CALL      RSTMPR1                 * position on the temp file
.
.------ read through the temp file ------
.
PRNC1000  CALL      RKTMPR1
          BRANCH    OVRCD,PRNC9000
.
          CALL      GIND0000                * get the indicator for which 
          BRANCH    EXIT,PRNC1000             institution we are bulk billing
.
          CALL      DISP0000                * display the screen details
.
          DISPLAY   *P32:17,*EL
          CALL      GREG0000                * get the register for the current
          BRANCH    EXIT,PRNC9000             batch
.
          DISPLAY   *P32:18,*V2LON,REGDESC;
.
          MOVE      " 33",PRXCODE   * System Lock Sector 33
          CALL      GETSLK00        * Get System Lock of Sector 33
          READ      CONTROLF,THIRTY3;*190,PRCNBBCL
          ADD       ONE,PRCNBBCL
          WRITAB    CONTROLF,THIRTY3;*190,PRCNBBCL
          CALL      RELSLK00        * Release System Lock of Sector 33
.
          SUB       ONE,PRCNBBCL
          DISPLAY   *P32:17,*V2LON,PRCNBBCL;
          MOVE      PRCNBBCL,TMPCLAIM
          MOVE      TMPCLAIM,CLAIMFM
.
          CALL      UPTMPR1                 * update the temp file
.
          MOVE      ZERO,COUNT
          MOVE      ZERO,TOTAMNT
          MOVE      ZERO,GTOTAL
          MOVE      ZERO,GOUTTOTL
          MOVE      ZERO,GRECTOTL
          MOVE      ZERO,CLNO
          MOVE      ONE,CNOUNDLN
          MOVE      SP20,CPHDROPT
          CLOCK     TIME,CTIMEIS
.
          CALL      HEAD0000                * print the bulk bill report header
          BRANCH    EXIT,PRNC1000
.
          PACK      KEY47,TMPBULK,TMPBCODE,TMPSDOCT,TMPSINV,SP70
          CALL      RSPRBB2                 * position on the first record on
          CALL      RKPRBB2                   the bulk bill file for this batch
          IF        OVRCD = 1
            MOVE      TMPSIZE,COUNT         * If end of file ensure that the 
.                                             total is printed
          ENDIF
.
.------ increment count ------
.
PRNC2000  ADD       ONE,COUNT
.
.------ see if we have reached the end of the batch ------
.
          IF        COUNT > TMPSIZE         
.
.------ skip if we have an insurance company or a health fund -----
.------ or a government code type report ------
.
            BRANCH    REPTYPE,PRNC3000,PRNC4000,PRNC5000   
.
            BRANCH    FORM1,PRNC2100        * branch on the indicator if the
.                                             REPTYPE field is not set
.------ print the end of the medicare bulk bill report ------
.
PRNC2100    
            PRINT     *N,*59,"=============",*73,"============",*87,"============":
                      *N,*42,"TOTAL : ",*60,GTOTAL,*74,GRECTOTL,*88,GOUTTOTL
.
            GOTO      PRNC1000
          ENDIF
.
          PACK      SAVKEY28,PRBBCLAM,PRBBINVN,PRBBITMN,PRBBREGR
          CALL      PRNT0000                * print the current record
.
          UNPACK    SAVKEY28,DPRBBCLM,PRBBINVN,PRBBITMN,PRBBREGR
          MOVE      DPRBBCLM,PRBBCLAM
          CALL      REPO0000                * re-position on the bulk bill file
.                                             and update the details
          GOTO      PRNC2000
.
.------ we are printing for an Insurance company ------
.
PRNC3000
.
.------ we are printing for a Health Fund ------
.
PRNC4000
.
.------ we are printing for a Government code ------
.
PRNC5000
.
          GOTO      PRNC1000
.
.------ we have finished processing so print the summary report if ------
.------ required ------
.
PRNC9000  COMPARE   ZERO,FLAGSOME
          GOTO      PRNC9999 IF EQUAL
.
          CALL      PSUM0000                * print the summary report
.
PRNC9999  RETURN
+
.**************************************************************************
.*                                 REPO0000                               *
.*     Routine to re-position on the bulk bill file. We want to get to    *
.*     the next invoice. This is because the PRNT0000 routine prints all  *
.*     the items for a given invoice.                                     *
.**************************************************************************
REPO0000  PACK      KEY28,PRBBCLAM,PRBBINVN,PRBBITMN,PRBBREGR
          CALL      RDPRBB1                 * read the bulk bill file
.
          IF        PRBBSTAT = 0
            MOVE      PRCNBBCL,PRBBCLAM
            PACK      PRBBDATE,CCC,CYY,CMM,CDD
            REP       " 0",PRBBDATE
            MOVE      ONE,PRBBSTAT
            MOVE      REGCODE,PRBBREGR
.
            CALL      UPPRBB1                 * update the bulk bill file
          ENDIF
.
          MOVE      TRUE,FLAGSOME
          MOVE      PRBBINVN,SAVINV
.
.-------  Re-position on current record in index 2 after update -----
.
          PACK      KEY47,PRBBBULK,PRBBCODE,PRBBDOCT,PRBBINVN,PRBBITMN:
                          PRBBCLAM,PRBBREGR
          CALL      RSPRBB4                 * position on the bulk bill file 
.
.------ get the next record on the bulk billing file ------
.
REPO1000  CALL      RKPRBB4  
          BRANCH    OVRCD,REPO9000
.
          MATCH     PRBBINVN,SAVINV         * see if we have the same invoice
          GOTO      REPO0000 IF EQUAL
.
          COMPARE   ZERO,PRBBCLAM           * make sure we don't get a claim
          GOTO      REPO1000 IF NOT EQUAL     already processed
.
          GOTO      REPO9999
.
REPO9000  MOVE      TMPSIZE,COUNT           * If end of file ensure that the 
.                                             total is printed
REPO9999  RETURN
+
.**************************************************************************
.*                                  GIND0000                              *
.*         Routine to get the indicator for which institution we are      *
.*         bulk billing.                                                  *
.**************************************************************************
GIND0000  MOVE      FALSE,EXIT
          MOVE      ZERO,REPLAYT
          MOVE      ZERO,REPTYPE
.
          MATCH     SP3,TMPBULK             * see if the bulk bill code exists
          GOTO      GIND9000 IF EQUAL
.
          PACK      KEY5,CATGB,TMPBULK
          CALL      RDCODE1                 * read the patient codes file
          BRANCH    OVRCD,GIND9000
.
          MOVE      ONE,COUNTR
.
          WHILE     COUNTR < SIX
             LOAD   TEMPINDC,COUNTR,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
.
             TYPE   TEMPINDC                * see if we have a number
             GOTO   GIND1000 IF EQUAL
.
             REP    "C1W2V3H4S5M6",TEMPINDC
.
             TYPE   TEMPINDC                * see if we have a number
             GOTO   GIND1000 IF NOT EQUAL
.
             MOVE   TEMPINDC,FORM1
.
.------ see if we have anything in the first character of the HDP ------
.------ equivalent ------
.
             CMATCH SP1,THCSCOD            
             IF     !@EQUAL
               MOVE   THCSCOD,ANS
               REP    "I1H2G3",ANS
               MOVE    ZERO,TMPFORM1
               MOVE   ANS,TMPFORM1
.
.------ see if the bulk billing institution found is an Insurance company -----
.------ or a health fund or a government code ------
.
               IF     TMPFORM1 = 1 | TMPFORM1 = 2 | TMPFORM1 = 3
                 MOVE   TMPFORM1,REPTYPE
                 RESET  THCSCOD
                 BUMP   THCSCOD
                 MOVE   THCSCOD,ANS
                 MOVE   ZERO,REPLAYT
                 MOVE   ANS,REPLAYT
               ELSE
                 GOTO   GIND9999
               ENDIF
             ENDIF
.
             GOTO   GIND9999
.
.------ increment the counter and continue loop ------
.
GIND1000     ADD    ONE,COUNTR
.
          DO
.
.------ we have no bulk bill code or the indicator is not set properly ------
.
GIND9000  MOVE      TRUE,EXIT
.
GIND9999  RETURN
+
.**************************************************************************
.*                                  DISP0000                              *
.*     Routine to dislay the details for the current bulk bill batch      *
.**************************************************************************
DISP0000  MOVE      "Unknown Code",TDESC
.
          MATCH     SP3,TMPBULK             * see if the bulk bill code exists
          GOTO      DISP1000 IF EQUAL
.
          PACK      KEY5,CATGB,TMPBULK
          CALL      RDCODE1                 * read the patient codes file
.
.------ set up the doctor name ------
.
DISP1000  MOVE      "Unknown Doctor",DOCNAME
          MOVE      TMPSDOCT,KEY10
          CALL      RDPMHCP1
          BRANCH    OVRCD,DISP2000
.
          MOVE      PMHCSNAM,PACSNAME
          MOVE      PMHCGNAM,PACGNAME
          MOVE      PMHCTITL,PACTITLE
          MOVE      ONE,PACFRMT
.
          CALL      PACNAME                 * pack the doctors name
.
          MOVE      PACFNAME,DOCNAME
.
.------ display the details ------
.
DISP2000  DISPLAY   *P32:14,*V2LON,TDESC:
                    *P32:15,TMPBCODE:
                    *P32:16,DOCNAME;
.
DISP9999  RETURN
+
.**************************************************************************
.*                                 GREG0000                               *
.*             Routine to get the register for the current batch          *
.**************************************************************************
GREG0000  MOVE      FALSE,EXIT
          DISPLAY   *P32:18,*EL,UNDLN3;
          KEYIN     *P32:18,*V2LON,REGCODE;
          DISPLAY   *P32:18,*V2LON,REGCODE;
.
          CALL      CHK0000                 * see what was entered
          BRANCH    EXIT,GREG9999:          * excitchar entered
                         GREG4000:          * ? entered
                         GREG8000           * nothing entered
.
          MOVE      REGCODE,KEY3
          CALL      RDREGA1                 * read the register  file
          BRANCH    OVRCD,GREG9000          
.
.------ see if we have a private practice register ------
.
          IF        REGIBACD <> TWO          
.
            DISPLAY   *P1:24,*EL,*B,"Invalid system for this register - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
            KEYIN     ANS;
            DISPLAY   *P1:24,*EL;
.
            GOTO      GREG0000
          ENDIF
.
          MOVE      ZERO,EXIT
.
          GOTO      GREG9999
.
.------ ? entered for register  ------
.
GREG4000  CALL      GETSCR00                * save the current screen
.
.------ do the ? display ------
.
GREG4100  CALL      RCPREGDS                * list codes on file
          COMPARE   ZERO,OVRCD              * see if codes existed
          GOTO      GREG4500 IF EQUAL
.
          MOVE      TRUE,EXIT
.
          GOTO      GREG9900
.
.------ keyin register code after a ? option ------
.
GREG4500  DISPLAY   *P1:24,*EL,"Register Code : ",UNDLN6;
          KEYIN     *P17:24,*V2LON,REGCODE;
          DISPLAY   *P17:24,*V2LON,REGCODE;
.
          CALL      CHK0000                 * see what was entered
          BRANCH    EXIT,GREG9900:          * exitchar entered
                         GREG4100:          * ? entered
                         GREG8500           * nothing entered
.
          MOVE      REGCODE,KEY3
          CALL      RDREGA1                 * read the register  file
          BRANCH    OVRCD,GREG9500          * code not on file
.
.------ see if we have a private practice register ------
.
          IF        REGIBACD <> TWO          
.
            DISPLAY   *P1:24,*EL,*B,"Invalid system for this register - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
            KEYIN     ANS;
            DISPLAY   *P1:24,*EL;
.
            GOTO      GREG4500
          ENDIF
.
          MOVE      ZERO,EXIT
.
          GOTO      GREG9800
.
.------ no register code entered ------
.
GREG8000  DISPLAY   *P1:24,*EL,*B,"Register code is mandatory - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
.
          GOTO      GREG0000
.
.------ no register code entered after ? option ------
.
GREG8500  DISPLAY   *P1:24,*EL,*B,"Register code is mandatory - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
.
          GOTO      GREG4500
.
.------ register code not on file ------
.
GREG9000  DISPLAY   *P1:24,*EL,*B,"Register code not on file - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
.
          GOTO      GREG0000
.
.------ register  code not on file after ? option ------
.
GREG9500  DISPLAY   *P1:24,*EL,*B,"Register code not on file - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
.
          GOTO      GREG4500
.
.------ we have a valid register code after a ? option ------
.
GREG9800  CALL      PUTSCR00                * re-display the current saved 
.                                             screen
          DISPLAY   *P32:18,*V2LON,REGCODE;
.
          GOTO      GREG9999
.
.------ Exitchar entered after a ? option ------
.
GREG9900  CALL      FRESCR00                * free the current saved screen
.
GREG9999  RETURN
+
.**************************************************************************
.*                                  CHK0000                               *
.*               Check what was entered for the Register Code             *
.* RETURNS - EXIT  = 0  Register code entered                             *
.*                 = 1  Exitchar entered                                  *
.*                 = 2  ? entered                                         *
.*                 = 3  Nothing Entered                                   *
.**************************************************************************
CHK0000   ENDSET    REGCODE
          APPEND    SP3,REGCODE
          RESET     REGCODE
.
          MATCH     SP3,REGCODE             * see if anything was entered 
          GOTO      CHK9500 IF EQUAL        * no
.
          MATCH     EXITCHAR,REGCODE        * see if exitchar was entered 
          GOTO      CHK9000 IF EQUAL        * yes
.
          MATCH     QUEST,REGCODE           * ? entered 
          GOTO      CHK8000 IF EQUAL        * yes
.
          MOVE      ZERO,EXIT               * code entered
.
          GOTO      CHK9999
.
.------ ? entered ------
.
CHK8000   MOVE      TWO,EXIT
.
          GOTO      CHK9999
.
.------ Exitchar entered ------
.
CHK9000   MOVE      ONE,EXIT
.
          GOTO      CHK9999
.
.------ Nothing entered ------
.
CHK9500   MOVE      THREE,EXIT
.
CHK9999   RETURN
+
.**************************************************************************
.*                                HEAD0000                                *
.*            Routine to print the bulk bill report header                *
.**************************************************************************
HEAD0000  
.------ skip if we have an insurance company or a health fund -----
.------ or a government code type report ------
.
          BRANCH    REPTYPE,HEAD2000,HEAD3000,HEAD4000   
.
          BRANCH    FORM1,HEAD0100          * if the above REPTYPE is not set
.                                             branch on the indicator
.------ we are doing the medicare type report ------
.
HEAD0100  COMPARE   ZERO,CPAGENO            * see if we have the first page
          GOTO      HEAD1000 IF EQUAL
.
          CALL      UND132        
.
.------ print the page header ------
.
HEAD1000  CALL      HEAD132                 * print the first 3 lines of the 
.                                             header
          MOVE      THREE,CLNO
.
.------ print the header for the medicare report ------
.
HEAD1100  REP       " 0",CDATE
          PRINT     *N,*N,*20,*+,DOCNAME,*-,SP2,PMHCPRV1:
                    *N,*N,*17,"MEDICARE BULK BILLING":
                          *42,"CLAIM NO:",CLAIMFM:
                          *60,"DATE:",CDATE:
                    *N,*N,*10,"ASSIGN.":
                          *42,"DATE OF":
                          *72,"TOTAL  ":
                          *86,"AMOUNT ":
                          *100,"INVOICE":
                    *N,*10,"FORM NO.":
                       *27,"NAME":
                       *42,"SERVICE":
                       *51,"ITEM NO.":
                       *62,"AMOUNT":
                       *72,"RECEIPTS":
                       *86,"OUTSTANDING":
                       *100,"NUMBER": 
                    *N;
          ADD       EIGHT,CLNO
.
          GOTO      HEAD9999
.
.------ we have an insurance report ------
.
HEAD2000  BRANCH    REPLAYT,HEAD2100        * branch on the report layout
.
.------ we are doing layout1 - Modbury ------
.
HEAD2100  COMPARE   ZERO,CPAGENO            * see if we have the first page
          GOTO      HEAD2150 IF EQUAL
.
          PRINT     *N,UNDLN801,UNDLN52
.
.------ print the page header ------
.
HEAD2150  CALL      HEAD132                 * print the first 3 lines of the 
.                                             header
          MOVE      THREE,CLNO
          PRINT     *N,*N,*50,"Claim Number : ",CLAIMFM:
                    *N,*N," Reg.     Name                                ":
                    "       U/R No       Invoice":
                    "      Amount   ":
                    "         Discount          Payable    ":
                    *N,"------   ----------------------------------------":
                    "   ----------   ----------   ---------------":
                    "   ---------------   ---------------",*N;
          ADD       FIVE,CLNO
.
          GOTO      HEAD9999
.
.------ we have a health fund report ------
.
HEAD3000
.
.------ we have a government code report ------
.
HEAD4000
.
HEAD9999  RETURN
+
.**************************************************************************
.*                                 PRNT0000                               *
.*           Routine to print a record on the bulk bill report            *
.**************************************************************************
PRNT0000  MOVE      ZERO,RECTOTL
          MOVE      ZERO,OUTSTOTL
          MOVE      ZERO,TOTAMNT
          COMPARE   "60",CLNO               * Test if paginating is required
          GOTO      PRNT1000 IF LESS
.
          CALL      HEAD0000                * Print the page header
.
.------ skip if we have an insurance company or a health fund -----
.------ or a government code type report ------
.
PRNT1000  BRANCH    REPTYPE,PRNT2000,PRNT3000,PRNT4000   
.
          BRANCH    FORM1,PRNT1100          * branch on the I.B.A. system
.                                             code
.------ we are bulk billing medicare ------
.------ read different files depending on which system the register ------
.------ is from ------
.
PRNT1100  MOVE      ZERO,RECFLAG
          BRANCH    REGIBACD,PRNT1300,PRNT1110
.
.------ we have a private practice register ------
.
PRNT1110  MOVE      PRBBINVN,KEY8
          CALL      RDPRIN1                 * read the private practice
          BRANCH    OVRCD,PRNT9999            invoice file
.
.------ see if we have a U/R number ------
.
          IF        PRINSCAN = ONE          
.
             MOVE      PRINDEBT,KEY8
             CALL      RDMAST1              * read the patient master file
             BRANCH    OVRCD,PRNT9999
.
             MOVE      PSNAME,PACSNAME
             MOVE      PGNAME,PACGNAME
             MOVE      PTITL,PACTITLE
             MOVE      TWO,PACFRMT
.
             CALL      PACNAME              * pack the patients name
.
             MOVE      PACFNAME,PATNAME
.
          ELSE
.
....         MOVE      PRINDEBT,KEY8
....         CALL      RDPRDB1              * read the debtor master file
....         BRANCH    OVRCD,PRNT9999
.
....         MOVE      PRDBSNAM,PACSNAME
....         MOVE      PRDBGNAM,PACGNAME
....         MOVE      PRDBTITL,PACTITLE
....         MOVE      TWO,PACFRMT
.
....         CALL      PACNAME              * pack the patients name
.
....         MOVE      PACFNAME,PATNAME
             MOVE      "Unknown Debtor",PATNAME
.
          ENDIF
.
          MOVE      SP10,SAVMASS
          MOVE      ZERO,INVTAMNT
          PACK      KEY22,PRINUNIQ,PRINNUMB,SP6
          CALL      RSPRDT1                 * position on the debtors 
.                                             transaction file
.------ read through the debtors transaction file ------
.
PRNT1200  CALL      RKPRDT1
          BRANCH    OVRCD,PRNT1299
.
          MATCH     PRDTINVN,PRINNUMB       * see if we have the same invoice
          IF        !@EQUAL
            CALL      CROT0000              * calculate recipts &outstanding
            CALL      PITO0000              *print invoice totals
            GOTO      PRNT9999
          ENDIF
.
          COMPARE   PRDTUNIQ,PRINUNIQ       * see if we have the same unique
          IF        !@EQUAL
            CALL      CROT0000              * calculate recipts &outstanding
            CALL      PITO0000              *print invoice totals
            GOTO      PRNT9999
          ENDIF
.
          COMPARE   ONE,PRDTRTYP            * make sure we have an item
          GOTO      PRNT1200 IF NOT EQUAL
.
          COMPARE   ZERO,PRDTAMNT           * make sure we are charging for
          GOTO      PRNT1200 IF EQUAL         this item
.
          PACK      KEY28,PRBBCLAM,PRDTINVN,PRDTITMN,PRBBREGR
          CALL      RDPRBB1
          BRANCH    OVRCD,PRNT1200
.
          IF        OPTION <> 4
            COMPARE   ZERO,PRBBSTAT
            GOTO      PRNT1200 IF NOT EQUAL
          ELSE
            COMPARE   ZERO,PRBBSTAT
            GOTO      PRNT1200 IF EQUAL
          ENDIF
.
          UNPACK    PRDTSDAT,CCENT,CYEAR,CMON,CDAY
.
          PRINT     *N;
.
          MATCH     SP10,SAVMASS            * see if this is the first record
.                                             for this assign form number
          IF        @EQUAL                    
            MOVE      COUNT,FORM4
            PRINT     *2,FORM4,*7,PRBBMEDN,*17,PATNAME,*102,PRDTINVN;
          ENDIF
.
          MOVE      PRDTAMNT,FORM82
          MULT      PRDTSERV,FORM82
          PRINT     *42,CDAY,DOT,CMON,DOT,CYEAR,*51,PRDTITMN,*60,FORM82;
          MOVE      PRBBMEDN,SAVMASS
          ADD       FORM82,TOTAMNT
          ADD       FORM82,INVTAMNT
          MOVE      ONE,RECFLAG
          GOTO      PRNT1200
.
PRNT1299  COMPARE   ZERO,RECFLAG
          GOTO      PRNT9999 IF EQUAL
          CALL      CROT0000              * calculate recipts &outstanding
          CALL      PITO0000              *print invoice totals
          GOTO      PRNT9999
.
.------ we have an inpatient register ------
.
PRNT1300  MOVE      PRBBINVN,KEY8
          CALL      RDINV1                  * read the patient invoice file
          BRANCH    OVRCD,PRNT9999            
.
          MOVE      PINVUR,KEY8
          CALL      RDMAST1              * read the patient master file
          BRANCH    OVRCD,PRNT9999
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
.
          CALL      PACNAME              * pack the patients name
.
          MOVE      PACFNAME,PATNAME
          MOVE      SP10,SAVMASS
          MOVE      ZERO,INVTAMNT
          PACK      KEY20,PINVADM,PINVNO,SP10
          CALL      RDSDTRN1                * position on the debtors 
.                                             transaction file
.------ read through the debtors transaction file ------
.
PRNT1350  CALL      RDKDTRN1
          BRANCH    OVRCD,PRNT1399
.
          MATCH     TREF,PINVNO             * see if we have the same invoice
          IF        !@EQUAL
            CALL      CROT0000              * calculate recipts &outstanding
            CALL      PITO0000              * print invoice total
            GOTO      PRNT9999
          ENDIF
.
          COMPARE   TADMNO,PINVADM          * see if we have the same admission
          IF        !@EQUAL
            CALL      CROT0000              * calculate recipts &outstanding
            CALL      PITO0000              * print invoice total
            GOTO      PRNT9999
          ENDIF
.
          IF        TRECTYPE = 1 | TRECTYPE = 4 | TRECTYPE = 5 | TRECTYPE = 6
            GOTO      PRNT1350
          ENDIF
.
          COMPARE   ZERO,TPATAMTT           * make sure we are charging for
          GOTO      PRNT1350 IF EQUAL         this item
.
          PRINT     *N;
.
          MATCH     SP10,SAVMASS            * see if this is the first record
.                                             for this assign form number
          IF        @EQUAL                    
            MOVE      COUNT,FORM4
            PRINT     *2,FORM4,*7,PRBBMEDN,*17,PATNAME,*102,TREF;
          ENDIF
.
          MOVE      TPATAMTT,FORM62
          PRINT     *42,TFDAY,DOT,TFMONTH,DOT,TFYEAR,*51,TITEMNO,*60,FORM62;
          MOVE      PRBBMEDN,SAVMASS
          ADD       TPATAMTT,TOTAMNT
          ADD       TPATAMTT,INVTAMNT
          MOVE      ONE,RECFLAG
          GOTO      PRNT1350
.
PRNT1399  COMPARE   ZERO,RECFLAG
          GOTO      PRNT9999 IF EQUAL
.
          CALL      CROT0000              * calculate recipts &outstanding
          CALL      PITO0000              *print invoice totals
          GOTO      PRNT9999
.
.------ we have an insurance report ------
.
PRNT2000  BRANCH    REPLAYT,PRNT2100
.
.------ we are printing insurance report layout 1 - Modbury ------
.
PRNT2100  BRANCH    REGIBACD,PRNT2120,PRNT2140  * branch on the I.B.A. system
.                                                 code
.------ we have a inpatient record ------
.
PRNT2120  PRINT     *3,PRBBREGR,*11,PNAME,*56,PURNO,*67,PRBBINVN,*83,PRBBAMNT:
                    *101,PRBBDISC,*119,PAMTTOT
          ADD       ONE,CLNO
.
          GOTO      PRNT9999
.
.------ we have a private practice record ------
.
PRNT2140  PRINT     *3,PRBBREGR,*11,PNAME,*54,PRINDEBT,*67,PRBBINVN:
                                *83,PRBBAMNT,*101,PRBBDISC,*119,PAMTTOT
          ADD       ONE,CLNO
.
          GOTO      PRNT9999
.
.------ we have a health fund report ------
.
PRNT3000
.
.------ we have a government code report ------
.
PRNT4000
.
PRNT9999  RETURN
+
.**************************************************************************
.*                                 PSUM0000                               *
.*   Routine to print the summary report of bulk billing batches printed  *
.**************************************************************************
.
PSUM0000 MOVE      ZERO,CLNO
          MOVE      ONE,CNOUNDLN
          MOVE      SP20,CPHDROPT
          CLOCK     TIME,CTIMEIS
.
          CALL      SHED0000                * print the summary report header
.
          PACK      KEY28,SP20,SP20
          CALL      RSTMPR2                 * position on the temp file
.
.------ read through the temp file ------
.
PSUM1000  CALL      RKTMPR2
          BRANCH    OVRCD,PSUM9000
.
          COMPARE   ZERO,TMPCLAIM           * make sure there is a claim number
          GOTO      PSUM1000 IF EQUAL       * no - ignore record
.
.
.------ Test if paginating is required ------
.
          IF        CLNO > 59               
            PRINT     *N,UNDLN801,UNDLN52;
.
            CALL      SHED0000              * Print the page header
          ENDIF
.
          CALL      PRNS0000                * print a summary report record
.
          GOTO      PSUM1000
.
.------ print the end of the summary report ------
.
PSUM9000  PRINT     *N,UNDLN801,UNDLN52:
                    *N,*N,"**** End of Report ****";
.
PSUM9999  RETURN
+
.**************************************************************************
.*                                  SHED0000                              *
.*            Routine to print the summary report header                  *
.**************************************************************************
SHED0000  COMPARE   ZERO,CPAGENO            * see if we need to paginate
          GOTO      SHED1000 IF EQUAL
.
          PRINT     *N,UNDLN801,UNDLN52
.
.------ print the summary report header ------
.
SHED1000  CALL      HEAD132                 * print the first 3 lines of the 
.                                             header
          PRINT     *N,*N,UNDLN801,UNDLN52:
                    *N,*1,"|",*4,"Claim",*12,"|",*14,"Bulk Bill Code":
                       *35,"|",*37,"Health Fund/Insurance Co./",*64,"|":
                       *66,"Service Doctor",*105,"|",*107,"Number of":
                       *118,"|",*120,"Total Amnt.",*132,"|":
                    *N,*1,"|",*4,"Number",*12,"|",*35,"|",*43,"Govt Code":
                       *64,"|",*105,"|",*107,"Invs. Sent",*118,"|":
                       *120,"Claimed",*132,"|":
                    *N,UNDLN801,UNDLN52;
          MOVE      EIGHT,CLNO
.
SHED9999  RETURN
+
.**************************************************************************
.*                                 PRNS0000                               *
.*       Routine to set up and print the details for a record on the      *
.*       summary report                                                   *
.**************************************************************************
PRNS0000  MOVE      "Unknown Code",TDESC
.
          MATCH     SP3,TMPBULK             * see if the bulk bill code exists
          GOTO      PRNS1000 IF EQUAL
.
          PACK      KEY5,CATGB,TMPBULK
          CALL      RDCODE1                 * read the patient codes file
.
.------ set up the doctors name ------
.
PRNS1000  MOVE      "Unknown Doctor",DOCNAME
          MOVE      TMPSDOCT,KEY10
          CALL      RDPMHCP1
          BRANCH    OVRCD,PRNS2000
.
          MOVE      PMHCSNAM,PACSNAME
          MOVE      PMHCGNAM,PACGNAME
          MOVE      PMHCTITL,PACTITLE
          MOVE      ONE,PACFRMT
.
          CALL      PACNAME                 * pack the doctors name
.
          MOVE      PACFNAME,DOCNAME
.
.------ set up the health fund/insurance co./government code ------
.
PRNS2000  MOVE      SP30,BCODNAME
.
          CMATCH    SP1,THCSCOD             * see if the HDP equivalent is set
          GOTO      PRNS3000 IF EQUAL
.
          CMATCH    ANSI,THCSCOD            * see if we have an insurance code
          IF        @EQUAL
            MOVE      "Unknown Insurance Code",INAME
            MOVE      TMPBCODE,KEY6
            CALL      RDINSR1               * read the insurance file
            MOVE      INAME,BCODNAME
          ENDIF
.
          CMATCH    ANSH,THCSCOD            * see if we have a helath fund
          IF        @EQUAL
            MOVE      "Unknown Health Fund",HFNAME
            PACK      KEY14,TMPBCODE,FUNDEXT,SP10
            CALL      RDFUND1               * read the health fund file
            MOVE      HFNAME,BCODNAME
          ENDIF
.
          CMATCH    ANSG,THCSCOD            * see if we have a government code
          IF        @EQUAL
            MOVE      "Unknown Government Code",GNAME
            MOVE      TMPBCODE,KEY6
            CALL      RDGOVR1               * read the government code
            MOVE      GNAME,BCODNAME
          ENDIF
.
.------ print the summary report record ------
.
PRNS3000  PRINT     *N,*1,"|",*3,TMPCLAIM,*12,"|",*14,TDESC,*35,"|":
                    *37,BCODNAME,*64,"|",*66,DOCNAME,*105,"| ",TMPSIZE,*118,"|":
                    *120,TMPAMNT,*132,"|";
          ADD       ONE,CLNO
.
PRNS9999  RETURN
+
.**************************************************************************
.*                                KDOC0000                                *
.*       Routine to keyin the doctor for option 2 - print single doctor   *
.**************************************************************************
KDOC0000  DISPLAY   *P1:12,*EF,"Service Doctor  : ";
          MOVE      SP70,PMHCSNAM
          MOVE      SP70,PMHCGNAM
          MOVE      SP10,PMHCTITL
.
          MOVE      "29",ECOL
          IF        OPTION = 2
            MOVE      "19",ECOL
          ENDIF
          MOVE      "12",EVERT
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYINACT           * don't check doctor status
          CALL      PMSHCPKY                * Keyin HCP code
.
          MOVE      ZERO,EXIT
          GOTO      KDOC9999
.
KDOC9999  RETURN
+
.**************************************************************************
.*                               CHKD0000                                 *
.*               Check what was entered for the Doctor                    *
.* RETURNS - EXIT  = 0  Doctor code entered                               *
.*                 = 1  Nothing or Exitchar entered                       *
.*                 = 2  ? entered                                         *
.**************************************************************************
CHKD0000  ENDSET    DOCTOR
          APPEND    SP6,DOCTOR
          RESET     DOCTOR
.
          MATCH     SP6,DOCTOR              * see if anything was entered 
          GOTO      CHKD9000 IF EQUAL       * no
.
          MATCH     EXITCHAR,DOCTOR         * see if exitchar was entered 
          GOTO      CHKD9000 IF EQUAL       * yes
.
          MATCH     QUEST,DOCTOR            * ? entered 
          GOTO      CHKD8000 IF EQUAL       * yes
.
          MOVE      ZERO,EXIT               * code entered
.
          GOTO      CHKD9999
.
.------ ? entered ------
.
CHKD8000  MOVE      TWO,EXIT
          GOTO      CHKD9999
.
.------ Nothing or Exitchar entered ------
.
CHKD9000  MOVE      ONE,EXIT
.
CHKD9999  RETURN
+
.**************************************************************************
.*                                 LOSD0000                               *
.*   load the temp file with the details for each batch we are printing   *
.*   for option 2 - single doctor                                         *
.**************************************************************************
LOSD0000  DISPLAY   *P1:24,*EL,"Scanning : ":
                    *P30:24,"Loading : ";
          MOVE      SP3,SAVBULK
          MOVE      SP6,SAVBCODE
          MOVE      SP8,TMPSINV
          MOVE      SP8,SAVINV
          MOVE      ZERO,TMPCLAIM
          MOVE      ZERO,TMPBATCH
          MOVE      ZERO,TMPAMNT
          MOVE      SP6,TMPBULK
          MOVE      SP70,TMPSDOCT
          MOVE      ZERO,TMPSIZE
          MOVE      ZERO,COUNT
          MOVE      FALSE,FLAGCHNG
          MOVE      FALSE,FLAGSOME
          MOVE      FALSE,EXIT
          PACK      KEY47,DOCTOR,BULCODE,HIGCODE,SP70
          CALL      RSPRBB5                 * position on the bulk billing file
.
.------ read through the bulk billing file ------
.
LOSD1000  CALL      RKPRBB5
          BRANCH    OVRCD,LOSD9000
.
          DISPLAY   *P12:24,*V2LON,PRBBINVN;
.
          COMPARE   ZERO,PRBBCLAM           * make sure we have a zero claim
          GOTO      LOSD1000 IF NOT EQUAL     number
.
          MATCH     DOCTOR,PRBBDOCT         * see if we have the same service
          GOTO      LOSD9000 IF NOT EQUAL     doctor
.
          MATCH     SP3,BULCODE             * see if we are printing for a bulk
.                                             bill code
          IF        !@EQUAL                   
            MATCH     PRBBBULK,BULCODE        * see if we have the same code
            GOTO      LOSD9000 IF NOT EQUAL
.
            MATCH     SP6,HIGCODE           * see if we are printing for a 
.                                             insurance code, etc, as well
            IF        !@EQUAL                 
              MATCH     PRBBCODE,HIGCODE    * see if we have the same govt code
              GOTO      LOSD9000 IF NOT EQUAL /insurance code/health fund
.
            ENDIF
          ENDIF
.
          MATCH     SP3,SAVBULK             * see if we have the first record
          GOTO      LOSD2000 IF EQUAL
.
          MATCH     PRBBBULK,SAVBULK
          IF        @EQUAL          
            MATCH     PRBBCODE,SAVBCODE
            IF        @EQUAL          
              GOTO      LOSD3000
            ENDIF
          ENDIF
.
.
LOSD2000  
.------   Get the allowable batch size for the new record -----
.
          CALL      SIZE0000
          BRANCH    EXIT,LOSD9999
.
          MOVE      PRBBBULK,SAVBULK
          MOVE      PRBBCODE,SAVBCODE
          MOVE      ZERO,COUNT
          MOVE      ZERO,TMPAMNT
          MOVE      SP8,TMPSINV
          MOVE      SP8,SAVINV
          ADD       ONE,TMPBATCH
.
LOSD3000
          MATCH     SP8,TMPSINV             * see if we need to set up the
.                                             start invoice for this batch
          IF        @EQUAL                    
            MOVE      PRBBINVN,TMPSINV
          ENDIF
.
          MATCH     SP8,SAVINV
          IF        @EQUAL
            MOVE      PRBBINVN,SAVINV
            ADD       ONE,COUNT
          ELSE
            MATCH     PRBBINVN,SAVINV
            IF        !@EQUAL
              ADD       ONE,COUNT
              MOVE      PRBBINVN,SAVINV
            ENDIF
          ENDIF
.
.------   We don't want to "send" more than the allowable Batch size ------
.------   So start a new batch if the count > allowable size         ------
.
          IF        COUNT > TCFORM6
            GOTO      LOSD2000
          ENDIF
.
          MOVE      PRBBBULK,TMPBULK
          MOVE      PRBBCODE,TMPBCODE
          MOVE      PRBBDOCT,TMPSDOCT
          PACK      KEY23,PRBBBULK,PRBBCODE,PRBBDOCT,TMPBATCH
          CALL      RDTMPR1
          BRANCH    OVRCD,LOSD4000
          MOVE      COUNT,TMPSIZE
          ADD       PRBBAMNT,TMPAMNT
          CALL      UPTMPR1
          GOTO      LOSD4500
.
LOSD4000  
          MOVE      COUNT,TMPSIZE
          ADD       PRBBAMNT,TMPAMNT
          CALL      WRTMPR1                 * write to the temp file
.
LOSD4500  DISPLAY   *P40:24,*V2LON,PRBBBULK,SP2,TMPBATCH;
          MOVE      TRUE,FLAGSOME
          GOTO      LOSD1000
.
.------ we have finished processing the bulk billing file so see if we ------
.------ actually found any batches to print ------
.
LOSD9000  BRANCH    FLAGSOME,LOSD9999
.
          DISPLAY   *P1:24,*EL,*B,"No complete batches found to print - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          MOVE      TRUE,EXIT
.
LOSD9999  RETURN
+
.**************************************************************************
.*                              KCLM0000                                  *
.*   Routine to keyin the Claim Number for options 3 + 4 - print single   *
.*   claim and re-print claims                                            *
.**************************************************************************
KCLM0000  MOVE      SP8,CLAIMNO
          MOVE      FALSE,EXIT
          DISPLAY   *P1:12,*EF,"Claim Number : ",UNDLN8;
          KEYIN     *P16:12,*V2LON,*JR,CLAIMNO;
.
          PACK      CLAIMNO,CLAIMNO,SP8
          MATCH     SP8,CLAIMNO             * see if a claim number was
          GOTO      KCLM9000 IF EQUAL         entered
.
          CMATCH    QUEST,CLAIMNO           * see if a ? was entered
          GOTO      KCLM1000 IF NOT EQUAL
.
          CALL      GETSCR00                * save the screen
.
.------ set the scan flag for the ? option ------
.
KCLM0100  IF        OPTION = 3 
            MOVE      ZERO,FROMFLAG
            MOVE      ZERO,TOFLAG
            MOVE      ZERO,INDXFLAG         * use index six
          ELSE
            MOVE      ONE,FROMFLAG
            MOVE      FIVE,TOFLAG
            MOVE      ONE,INDXFLAG          * use index one
          ENDIF
.
          CALL      PRICLMDS                * display all the claim numbers
          COMPARE   ZERO,EXIT
          GOTO      KCLM0200 IF EQUAL
.
          CALL      FRESCR00                * free the saved screen
          GOTO      KCLM9999
.
.------ keyin the claim number after a ? option ------
.
KCLM0200  DISPLAY   *P1:24,*EL,"Claim Number : ",UNDLN8;
          KEYIN     *P16:24,*V2LON,*JR,CLAIMNO;
          PACK      CLAIMNO,CLAIMNO,SP8
.
.------ see if the claim number was entered ------
.
          MATCH     SP8,CLAIMNO             
          IF        @EQUAL                 
            MOVE      TRUE,EXIT
            CALL      FRESCR00              * free the saved screen
            GOTO      KCLM9999
          ENDIF
.
          CMATCH    QUEST,CLAIMNO           * see if a ? was entered
          GOTO      KCLM0100 IF EQUAL
.
          TYPE      CLAIMNO                 * see if a number was entered
          GOTO      KCLM0900 IF NOT EQUAL
.
          MOVE      CLAIMNO,CLAIMFM
.
          COMPARE   ZERO,CLAIMFM            * make sure the claim number is 
          GOTO      KCLM0900 IF EQUAL         not zero
.
          DISPLAY   *P16:24,*V2LON,CLAIMFM;
          PACK      KEY28,CLAIMFM,SP20
          CALL      RSPRBB1                 * position on the bulk bill file
          CALL      RKPRBB1
          BRANCH    OVRCD,KCLM0900
.
          COMPARE   CLAIMFM,PRBBCLAM        * see if we have the first claim
          GOTO      KCLM0900 IF NOT EQUAL     number
.
          COMPARE   ZERO,PRBBSTAT           * see if we have a valid status
          IF        (OPTION = 3 & !@EQUAL) | (OPTION = 4 & @EQUAL)
            GOTO      KCLM0900 
          ENDIF
.
          CALL      PUTSCR00                * re-display the current screen
          DISPLAY   *P16:12,*V2LON,CLAIMFM;
          GOTO      KCLM9999
.
.------ invalid claim number was entered ------
.
KCLM0900  DISPLAY   *P1:24,*B,*EL,"Invalid Claim Number.  ";
          CALL      HITENTER
          GOTO      KCLM0200
.
.------ a claim number was entered with no ? option so see if it is ------
.------ a valid number ------
.
KCLM1000  TYPE      CLAIMNO
          GOTO      KCLM1900 IF NOT EQUAL
.
          MOVE      CLAIMNO,CLAIMFM
.
          COMPARE   ZERO,CLAIMFM            * make sure the claim number is not
          GOTO      KCLM1900 IF EQUAL         zero
.
          DISPLAY   *P16:12,*V2LON,CLAIMFM;
          PACK      KEY28,CLAIMFM,SP20
          CALL      RSPRBB1                 * position on the bulk billing file
          CALL      RKPRBB1
          BRANCH    OVRCD,KCLM1900
.
          COMPARE   CLAIMFM,PRBBCLAM        * see if we have the same claim 
          GOTO      KCLM1900 IF NOT EQUAL     number
.
          COMPARE   ZERO,PRBBSTAT           * check for a valid status
          IF        (OPTION = 3 & !@EQUAL) | (OPTION = 4 & @EQUAL)
            GOTO      KCLM1900
          ENDIF
.
          GOTO      KCLM9999 
.
.------ we have an invalid claim number ------
.
KCLM1900  DISPLAY   *P1:24,*B,*EL,"Invalid Claim Number.  ";
          CALL      HITENTER
          GOTO      KCLM0000
.
.------ no claim number was entered so set the exit flag ------
.
KCLM9000  MOVE      ONE,EXIT
.
KCLM9999  RETURN
+
.**************************************************************************
.*                                 PRSC0000                               *
.*       Routine to print for options 3 + 4 - a single claim number and   *
.*       re-print claims                                                  *
.**************************************************************************
PRSC0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Printing",*HOFF," - Please":
                           " Wait";
          MOVE      FALSE,FLAGSOME
          MOVE      ZERO,AMTTOT
          MOVE      ZERO,GTOTAL
          MOVE      ZERO,GOUTTOTL
          MOVE      ZERO,GRECTOTL
          MOVE      ZERO,DISTOT
          MOVE      ZERO,PAYTOT
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,CLNO
          MOVE      ZERO,COUNT
          MOVE      ZERO,CNTSIZE
          MOVE      SP8,SAVINV
          MOVE      SP10,SAVSDOCT
          MOVE      ZERO,TMPBATCH
          MOVE      ZERO,TMPAMNT
          MOVE      ONE,CNOUNDLN
          MOVE      SP20,CPHDROPT
          CLOCK     TIME,CTIMEIS
          MOVE      SP20,PMHCPRV1
          PACK      DOCNAME,SP20,SP20,SP10
.
          MATCH     SP6,PRBBDOCT            * see if the doctor code exists
          GOTO      PRSC0100 IF EQUAL
.
          MOVE      "Unknown Doctor",DOCNAME
          MOVE      PRBBDOCT,KEY10
          CALL      RDPMHCP1
          BRANCH    OVRCD,PRSC0100
.
          MOVE      PMHCSNAM,PACSNAME
          MOVE      PMHCGNAM,PACGNAME
          MOVE      PMHCTITL,PACTITLE
          MOVE      ONE,PACFRMT
.
          CALL      PACNAME                 * pack the doctors name
.
          MOVE      PACFNAME,DOCNAME
.
.------ print the page header ------
.
PRSC0100  CALL      HEAD0000                * print the page header
.
          MOVE      PRBBBULK,TMPBULK
          CALL      GIND0000                * get the report type
          BRANCH    EXIT,PRSC9000
.
          MOVE      SP3,SAVBULK
          MOVE      SP6,SAVBCODE
          MOVE      SP10,SAVSDOCT
          PACK      KEY28,CLAIMFM,SP20
          CALL      RSPRBB1                 * position on the bulk billing
.                                             file
.------ read through the bulk billing file ------
.
PRSC1000  CALL      RKPRBB1
          BRANCH    OVRCD,PRSC9000
.
          COMPARE   PRBBCLAM,CLAIMFM        * see if we have the same claim
          GOTO      PRSC9000 IF NOT EQUAL     number
.
.------ check the register for the current record ------
.
PRSC1100  MOVE      PRBBREGR,KEY3
          CALL      RDREGA1                 * read the register file
          BRANCH    OVRCD,PRSC1000
.
          BRANCH    REGIBACD,PRSC2000,PRSC3000   * branch on the I.B.A. 
.                                                  system code
          GOTO      PRSC1000
.
. ---- Patient Billing ----
.
PRSC2000  MOVE      PRBBINVN,KEY8
          CALL      RDINV1                  * read the patient invoice file
          MOVE      PINVUR,KEY8
          CALL      RDMAST1                 * read the patient master file
          MOVE      PGNAME,DIM17
          PACK      PNAME,PSNAME,SP1,COMMA,DIM17
.
          GOTO      PRSC5000
.
. ---- private practice ----
.
PRSC3000  MOVE      PRBBINVN,KEY8
          CALL      RDPRIN1                 * read the private practice invoice
          BRANCH    PRINSCAN,PRSC3100         file
.
. ---- name from debtor file ----
.
...       MOVE      PRINDEBT,KEY8
...       CALL      RDPRDB1                 * read the private practice debtor
...       BRANCH    OVRCD,PRSC3800            file
.
...       MOVE      PRDBRNAM,PNAME
          MOVE      "Unknow Debtor",PNAME
.
          GOTO      PRSC5000
.
. ---- name from PMI ----
.
PRSC3100  MOVE      PRINDEBT,KEY8
          CALL      RDMAST1                 * read the patient master file
          BRANCH    OVRCD,PRSC3800
.
          MOVE      PGNAME,DIM17
          PACK      PNAME,PSNAME,SP1,COMMA,DIM17
.
          GOTO      PRSC5000
.
. ---- name not on file ----
.
PRSC3800  MOVE      SP30,PNAME
.
.------ set up and print the current record ------
.
PRSC5000  MATCH     SP8,SAVINV
          IF        @EQUAL
            CALL      SIZE0000
            BRANCH    EXIT,PRSC9999
            MOVE      PRBBBULK,SAVBULK
            MOVE      PRBBCODE,SAVBCODE
            MOVE      PRBBINVN,SAVINV
            MOVE      ZERO,CNTSIZE
            ADD       ONE,COUNT
          ELSE
            MATCH     PRBBINVN,SAVINV
            IF        !@EQUAL
              ADD       ONE,COUNT
              MOVE      PRBBINVN,SAVINV
              MOVE      ZERO,CNTSIZE
              ADD       ONE,CNTSIZE
            ENDIF
          ENDIF
.
          ADD       PRBBAMNT,AMTTOT
          ADD       PRBBDISC,DISTOT
          MOVE      PRBBAMNT,PAMTTOT
          MOVE      PRBBDISC,PDISTOT
          SUB       PDISTOT,PAMTTOT
          MOVE      AMTTOT,PAYTOT
          SUB       DISTOT,PAYTOT
.
          PACK      SAVKEY28,PRBBCLAM,PRBBINVN,PRBBITMN,PRBBREGR
          CALL      PRNT0000                * print the record
.
          MOVE      SAVKEY28,KEY28
          CALL      RDPRBB1
          IF        PRBBSTAT = 0
            PACK      PRBBDATE,CCC,CYY,CMM,CDD
            REP       " 0",PRBBDATE
            MOVE      ONE,PRBBSTAT
.
            CALL      UPPRBB1                 * update the bulk billing file
          ENDIF
.
          MATCH     SP3,SAVBULK
          GOTO      PRSC6000 IF EQUAL
.
          MATCH     PRBBBULK,SAVBULK
          IF        @EQUAL
            MATCH     PRBBCODE,SAVBCODE
            IF        @EQUAL
              MATCH     PRBBDOCT,SAVSDOCT
              IF        @EQUAL
                GOTO      PRSC7000
              ELSE
                GOTO      PRSC6100
              ENDIF
            ENDIF
          ENDIF
.
.         Get the allowable batch size for the new record
.
PRSC6000  CALL      SIZE0000
          BRANCH    EXIT,PRSC9999
.
          MOVE      PRBBBULK,SAVBULK
          MOVE      PRBBCODE,SAVBCODE
          MOVE      SP8,TMPSINV
          MOVE      SP8,SAVINV
          ADD       ONE,TMPBATCH
          MOVE      ZERO,COUNT
.
PRSC6100  MOVE      PRBBDOCT,SAVSDOCT
          MOVE      ZERO,TMPAMNT
          MOVE      ZERO,TMPSIZE
.
PRSC7000  MATCH     SP8,TMPSINV
          IF        @EQUAL
            MOVE      PRBBINVN,TMPSINV
          ENDIF
.
          IF        COUNT > TCFORM6
            GOTO      PRSC6000
          ENDIF
.
          MOVE      TRUE,FLAGSOME
          MOVE      PRBBBULK,TMPBULK
          MOVE      PRBBCODE,TMPBCODE
          MOVE      PRBBDOCT,TMPSDOCT
          MOVE      PRBBCLAM,TMPCLAIM
          PACK      KEY23,PRBBBULK,PRBBCODE,PRBBDOCT,TMPBATCH
          CALL      RDTMPR1
          BRANCH    OVRCD,PRSC8000
          MOVE      COUNT,TMPSIZE
          ADD       PRBBAMNT,TMPAMNT
          CALL      UPTMPR1
.
          CALL      POSN0000                * position on the next record to 
          BRANCH    EXIT,PRSC9000             process
.
          GOTO      PRSC1100
.
PRSC8000  MOVE      COUNT,TMPSIZE
          ADD       PRBBAMNT,TMPAMNT
          CALL      WRTMPR1
.
          CALL      POSN0000                * position on the next record to 
          BRANCH    EXIT,PRSC9000             process
.
          GOTO      PRSC1100
.
.------ we have finished looping through the bulk billing file ------
.
PRSC9000  
.------ skip if we have an insurance company or a health fund -----
.------ or a government code type report ------
.
          BRANCH    REPTYPE,PRSC9500,PRSC9700,PRSC9900   
.
          BRANCH    FORM1,PRSC9100          * branch on the I.B.A. system
.                                             code
.------ we are bulk billing medicare ------
.
PRSC9100  
          PRINT     *N,*59,"=============",*73,"============",*87,"============":
                    *N,*42,"TOTAL : ",*60,GTOTAL,*74,GRECTOTL,*88,GOUTTOTL
.
          GOTO      PRSC9999
.
.------ we are printing an insurance company report ------
.
PRSC9500  BRANCH    REPLAYT,PRSC9510
.
.------ we are printing for layout 1 - Modbury ------
.
PRSC9510  PRINT     *N,*N,*83,"-----------",*101,"-----------":
                    *119,"-----------":
                    *N,*61,"GRAND TOTAL ",*83,AMTTOT,*101,DISTOT,*119,PAYTOT:
                    *N,*83,"-----------",*101,"-----------",*119,"-----------";
.
.------ we are printing a health fund report ------
.
PRSC9700
.
.------ we are printing a government code report ------
.
PRSC9900
.
PRSC9999  COMPARE   ZERO,FLAGSOME
          CALL      PSUM0000 IF NOT EQUAL   * print the summary report
          RETURN
+
.*****************************************************************************
.*                                  POSN0000                                 *
.*    Routine to position on the next record to process in the bulk billing  *
.*    file for options 3 + 4                                                 *
.*****************************************************************************
POSN0000  MOVE      FALSE,EXIT
          MOVE      PRBBINVN,SAVINV
.
.------ read through the bulk billing file ------
.
POSN1000  CALL      RKPRBB1                 * get the next record on the bulk
          BRANCH    OVRCD,POSN9000            billing file
.
          COMPARE   PRBBCLAM,CLAIMFM        * see if we have the same claim
          GOTO      POSN9000 IF NOT EQUAL     number
.
          MATCH     PRBBINVN,SAVINV         * match invoice numbers
          GOTO      POSN9999 IF NOT EQUAL
.
          IF        PRBBSTAT = 0
            PACK      PRBBDATE,CCC,CYY,CMM,CDD
            REP       " 0",PRBBDATE
            MOVE      ONE,PRBBSTAT
.
            CALL      UPPRBB1                 * update the bulk billing file
          ENDIF
.
          PACK      KEY23,PRBBBULK,PRBBCODE,PRBBDOCT,TMPBATCH
          CALL      RDTMPR1
          BRANCH    OVRCD,POSN2000
          ADD       PRBBAMNT,TMPAMNT
          CALL      UPTMPR1
.
          GOTO      POSN1000
.
POSN2000  ADD       PRBBAMNT,TMPAMNT
          CALL      WRTMPR1
.
          GOTO      POSN1000
.
.------ we have finished processing this claim ------
.
POSN9000  MOVE      TRUE,EXIT
.
POSN9999  RETURN
+
.*****************************************************************************
.*                             CROT0000                                      *
.*                        Calculate receipt and outstanding total            *
.*****************************************************************************
.
CROT0000
          BRANCH    REGIBACD,CROT5000,CROT1000
CROT1000
          ASSIGN    (PRINPAMT + PRINHAMT + PRINIAMT + PRINMAMT + PRINVAMT + PRINOTHA),RECTOTL
          ASSIGN    PRINITOT + RECTOTL,OUTSTOTL
          GOTO      CROT9999
.
CROT5000
          ASSIGN    PINVPATA + PINVHFDA + PINVOTHA,RECTOTL
          ASSIGN    PINVAMT + RECTOTL,OUTSTOTL
CROT9999  RETURN
+
.***************************************************************************
.*  OTRF0000  :  Open all required visit based files                       *
.***************************************************************************
.
OTRF0000  IF        FILENUM = 51
            CLOSE     PATINVR1
            OPEN      PATINVR1,PATH
          ENDIF
          IF        FILENUM = 52
            CLOSE     PRIINVO1
            OPEN      PRIINVO1,PATH
          ENDIF
          IF        FILENUM = 53
..          CLOSE     PRIDEBT1
..          OPEN      PRIDEBT1,PATH
          ENDIF
.
OTRF9999  RETURN
+
.*****************************************************************************
.*                             PITO0000                                      *
.*                  Print the invoice details                                *
.*****************************************************************************
.
PITO0000
          PRINT     *N,*59,"============",*73,"=============",*87,"=============":
                    *N,*34,"INVOICE TOTAL : ",*60,TOTAMNT,*74,RECTOTL,*88,OUTSTOTL 
          ADD       TOTAMNT,GTOTAL
          ADD       RECTOTL,GRECTOTL
          ADD       OUTSTOTL,GOUTTOTL
          MOVE      ZERO,RECTOTL
          MOVE      ZERO,OUTSTOTL
PITO9999  RETURN
.
.------ I/O Routines for temp file ------
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY23
          READ      RECTM1XX,KEY23;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY23
          READ      RECTM1XX,KEY23;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY23
          READ      RECTM1XX,KEY23;TMPBULK,TMPBCODE,TMPSDOCT,DTMPBATC,TMPCLAIM:
                                   TMPAMNT,TMPSINV,TMPSIZE
          GOTO      OVERCOND IF OVER
          MOVE      DTMPBATC,TMPBATCH
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY23
          READKS    RECTM1XX;TMPBULK,TMPBCODE,TMPSDOCT,DTMPBATC,TMPCLAIM:
                             TMPAMNT,TMPSINV,TMPSIZE
          GOTO      OVERCOND IF OVER
          MOVE      DTMPBATC,TMPBATCH
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY23
          READKP    RECTM1XX;TMPBULK,TMPBCODE,TMPSDOCT,DTMPBATC,TMPCLAIM:
                             TMPAMNT,TMPSINV,TMPSIZE
          GOTO      OVERCOND IF OVER
          MOVE      DTMPBATC,TMPBATCH
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY23
          WRITE     RECTM1XX,KEY23;KEY23,TMPCLAIM,TMPAMNT,TMPSINV:
                             TMPSIZE
          RETURN
.
UPTMPR1   MOVE      TMPBATCH,DTMPBATC 
          UPDATE    RECTM1XX;TMPBULK,TMPBCODE,TMPSDOCT,DTMPBATC,TMPCLAIM:
                             TMPAMNT,TMPSINV,TMPSIZE
          RETURN
.
DETMPR1   RESET     KEY23
          DELETE    RECTM1XX,KEY23
          RETURN
.
RATMPR2   MOVE      ZERO,OVRCD
          RESET     KEY28
          READ      RECTM2XX,KEY28;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY28
          READ      RECTM2XX,KEY28;;
          RETURN
.
RDTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY28
          READ      RECTM2XX,KEY28;TMPBULK,TMPBCODE,TMPSDOCT,DTMPBATC,TMPCLAIM:
                                   TMPAMNT,TMPSINV,TMPSIZE
          GOTO      OVERCOND IF OVER
          MOVE      DTMPBATC,TMPBATCH
          RETURN
.
RKTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY28
          READKS    RECTM2XX;TMPBULK,TMPBCODE,TMPSDOCT,DTMPBATC,TMPCLAIM:
                             TMPAMNT,TMPSINV,TMPSIZE
          GOTO      OVERCOND IF OVER
          MOVE      DTMPBATC,TMPBATCH
          RETURN
.
RPTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY28
          READKP    RECTM2XX;TMPBULK,TMPBCODE,TMPSDOCT,DTMPBATC,TMPCLAIM:
                             TMPAMNT,TMPSINV,TMPSIZE
          GOTO      OVERCOND IF OVER
          MOVE      DTMPBATC,TMPBATCH
          RETURN
.
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PATDPATH
          INC       PATCODDS
          INC       PATFNDDS
          INC       PATGOVDS
          INC       PATINSDS
          INC       PRIKYBUL
          INC       PRICLMDS
          INC       RCPREGDS
          INC       PMSHCPKY                * Keyin HCP code
.
          INC       RCPCIDIO/INC
          INC       RCPREGIO/INC
          INC       PATCODIO/INC
          INC       PATDTRIO/INC
          INC       PATFN1IO/INC
          INC       PATHOSIO/INC
          INC       PATIN1IO/INC
          INC       PATINVIO/INC
          INC       PATMA1IO/INC
          INC       PATGO1IO/INC
          INC       PMSHCPIO/INC
          INC       PRIBULIO/INC
          INC       PRIDTRIO/INC
          INC       PRIINVIO/INC
.
