.******************************************************************************
.* System         : Patient Care Plans                                        *
.* Program        : IBAPCP13                                                  *
.* Description    : Patient Care Plan Enquiry                                 *
.******************************************************************************
.* Date           :  25/01/90                                                 *
.* Programmer     :  Glen Hobby                                               *
.* Modifications  :                                                           *
.*        V10.02.01 25/06/2011 Steve Armstrong    CAR 240722                  *
.*                  Mods to cater for changes to PATLOCFD.                    *
.*                       - LSNAME & LGNAME extended to 40 chars.              *
.*                       - PTLCGNM2 added.                                    *
.*                  Added RDPMPX21 prior to calling PMIHEAD                   *
.******************************************************************************
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                      *
.*                  Added pmsvx1af                                            *
.******************************************************************************
.*        V9.02.00  30/12/2002 Tracey Nguyen srf 23497                        *
.*                  r5.10 Care Plans Port to V9                               *
.******************************************************************************
.*        V5.08.01  23/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund table variables to 8 chars            *
.*       V5.07.B02  07/01/1999  Jim Stathopoulos                              *
.*                  Display Changes                                           *
.*       V5.07.B01  04/11/1998  Jim Stathopoulos                              *
.*                  507 Changes                                               *
.******************************************************************************
.*        V5.03.01  29/06/1995    Justin Coates  SRF 131558                   *
.*                  set the printed line numbers correctly                    *
.*        V5.02.02  30/05/1995   Whirlpool                                    *
.*                  fixed printing/display of desired outcomes                *
.*                  Glenn "I have no clue " Hobby is a complete spastic.      *
.*        V5.02.01  11/05/1995   Whirlpool                                    *
.*                  fixed printing of characteristics and related factors     *
.*                  to use parameters                                         *
.*        V5.02.00  09/10/1994   ROD         SRF 132428                       *
.*                  fix printing of DOB  and  Nurse Class                     *
.******************************************************************************
.
.$$$$$$
.  Patient Care Plan Enquiry  (IBAPCP13)
.  -------------------------------------
.
.  - Open files
.  - Display screen layout
.
.  - Keyin surname and validate
.  - Display all similar surnames
.
.  - On the chosen patient, display the admission details
.
.  - Display Care plans, Discharge criteria or Print the details off
.
.
.$$$$$$
          INC       STD001FD
.
          INC       PATDHEAD/INC
          INC       PATCALAG/INC
          INC       PATCONFD/INC
.
          INC       PCPCONFD/INC
          INC       PCPDEFFD/INC             * Defining characteristics
          INC       PCPPDSFD/INC             * Patient Descriptions
          INC       PCPDSCFD/INC             * Description
          INC       PCPOUTFD/INC             * Outcome file
          INC       PCPRELFD/INC             * Related factors
          INC       PATMI1FD/INC             * Patient admissions 
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC             * Patient admissions 
          INC       PATMA1FD/INC             * Patient master file
          INC       PATDSCFD/INC             * Discharge file
          INC       PATDO1FD/INC             * Patient doctors file
          INC       PATNIDFD/INC             * National id file
          INC       PATNOBFD/INC             * No bed file
          INC       PATWR1FD/INC             * Ward/Bed file
          INC       PCPDIAFD/INC             * Nursing diagnosis
          INC       PCPDISFD/INC             * Discharges 
          INC       PCPFRAFD/INC             * Frequency header file
          INC       PATLOCFD/INC             * In-patient location
          INC       PATTRNFD/INC             * Patient bed transfer
          INC       PATNURFD/INC             * Nursing station
          INC       PATTERFD/INC             * Terminal location
          INC       PATCODFD/INC             * Code table file
          INC       PATALRFD/INC             * Medical Alerts
          INC       PCPNURFD/INC             * Nurse file
          INC       PCPINTFD/INC             * Interventions file
          INC       PCPEVAFD/INC             * Evaluations file
.
.***************************************************************************
.*                              CONSTANTS                                  *
.***************************************************************************
BJDAY     FORM      3
CJDAY     FORM      3
CHG       FORM      1
.
CODET     INIT      "T "
DASH20    INIT      "--------------------"
SP60      INIT   "                                                            " 
Z30       INIT      "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
.
PRGID     INIT      "IBAPCP13"               * program id
PRGNAM    INIT      "Patient Care Plan Enquiry"    * program name
VERSION   INIT      "V10.12.00"
.
.***************************************************************************
.*                            GLOBAL VARIABLES                             *
.***************************************************************************
ALLWARDS  FORM      1
ADM       DIM       10                       * Admission date
ADM1      DIM       10
ADM2      DIM       10 
ADM3      DIM       10
ADM4      DIM       10
ADM5      DIM       10 
ADM6      DIM       10
ADM7      DIM       10                    
ADM8      DIM       10                   
ADM9      DIM       10                  
ADM10     DIM       10                 
ADM11     DIM       10                
ADM12     DIM       10               
ADM13     DIM       10              
AD1       FORM      10
AD2       FORM      10 
AD3       FORM      10
AD4       FORM      10
AD5       FORM      10 
AD6       FORM      10
AD7       FORM      10                    
AD8       FORM      10                   
AD9       FORM      10                  
AD10      FORM      10                 
AD11      FORM      10                
AD12      FORM      10               
AD13      FORM      10              
AD14      FORM      10              
AD15      FORM      10
AD16      FORM      10
ADMI1     FORM       10
ADMI2     FORM       10 
ADMI3     FORM       10
ADMI4     FORM       10
ADMI5     FORM       10 
ADMI6     FORM       10
ADMI7     FORM       10                    
ADMI8     FORM       10                   
ADMI9     FORM       10                  
ADMI10    FORM       10                 
ADMI11    FORM       10                
ADMI12    FORM       10               
ADMI13    FORM       10              
CALLN     FORM      8                        * CHCK0000 call counter
CHCKA     DIM       8                        * Check on adm. no. - see PATS0000
COUNT     FORM      2
COUNTA    FORM      2
COUNTB    FORM      8
COUNTC    FORM      8
COUNTER   FORM      2
DATE      DIM       10
DATESP    DIM       8
DESCSP    DIM       4
DESC1     DIM       60
DESC2     DIM       60
DESC3     DIM       60
DESC4     DIM       60
DESC5     DIM       60
DESC6     DIM       60
DESC7     DIM       60
DESC8     DIM       60
DESC9     DIM       60
DESC10    DIM       60
DESC11    DIM       60
DESC12    DIM       60
DESC13    DIM       60
FINISH    DIM       3
FLAG1     FORM      1
FLAG2     FORM      1
FLAG3     FORM      1
FLAG4     FORM      1
FLAG5     FORM      1
FLAG6     FORM      1
FLAG7     FORM      1
FLAG8     FORM      1
FLAG10    FORM      1
FLAG11    FORM      1
FLAG12    FORM      1
HEAD      DIM       20                       * Header for print routine
HEADER19  DIM       19
NCOD1    DIM       6
NCOD2    DIM       6
NCOD3    DIM       6
NCOD4    DIM       6
NCOD5    DIM       6
NCOD6    DIM       6
NCOD7    DIM       6
NCOD8    DIM       6
NCOD9    DIM       6
NCOD10   DIM       6
NCOD11   DIM       6
NCOD12   DIM       6
NCOD13   DIM       6
NFORM     FORM      2
NUDIAG    DIM       9                        * Nursing diagnosis
NUMB      DIM       2
NUM1      DIM       4
NUM2      DIM       4
NUM3      DIM       4
NUM4      DIM       4
NUM5      DIM       4
NUM6      DIM       4
NUM7      DIM       4
NUM8      DIM       4
NUM9      DIM       4
NUM10     DIM       4
NUM11     DIM       4
NUM12     DIM       4
NUM13     DIM       4
NUNAME    DIM       20                       * Nurse name
NUCLSS    DIM       3                        * Nurse class
NUSTAT    DIM       3                        * Nursing station number
PCDIAGCT  DIM       20                       * Diagnosis Category for report
PFLAG1    FORM      1                        * Print flag
PFLAG2    FORM      1
SUNAME    DIM       20                       * Keyed in surname
TCC1      DIM       9
TCC2      DIM       9
TCC3      DIM       9
TCC4      DIM       9
TCC5      DIM       9
TCC6      DIM       9
TCC7      DIM       9
TCC8      DIM       9
TCC9      DIM       9
TCC10     DIM       9
TCC11     DIM       9
TCC12     DIM       9
TCC13     DIM       9
TDESCB    DIM       20
TDESCM    DIM       20
TDESCR    DIM       20
TIM1      DIM       8                        * Time care plan was made
TIM2      DIM       8
TIM3      DIM       8
TIM4      DIM       8
TIM5      DIM       8
TIM6      DIM       8
TIM7      DIM       8
TIM8      DIM       8
TIM9      DIM       8
TIM10     DIM       8
TIM11     DIM       8
TIM12     DIM       8
TIM13     DIM       8
TMP1      DIM       40
TMP2      FORM      8
TMP3      DIM       10
TMP4      FORM      2
TYPESP    FORM      1
UR1       DIM       8
UR2       DIM       8
UR3       DIM       8
UR4       DIM       8
UR5       DIM       8
UR6       DIM       8
UR7       DIM       8
UR8       DIM       8
UR9       DIM       8
UR10      DIM       8
UR11      DIM       8
UR12      DIM       8
UR13      DIM       8
UR14      DIM       8
UR15      DIM       8
UR16      DIM       8
UKEY1     DIM       10
UKEY2     DIM       10
UKEY3     DIM       10
UKEY4     DIM       10
UKEY5     DIM       10
UKEY6     DIM       10
UKEY7     DIM       10
UKEY8     DIM       10
UKEY9     DIM       10
UKEY10    DIM       10
UKEY11    DIM       10
UKEY12    DIM       10
UKEY13    DIM       10
YVAL      FORM       2
.
.***************************************************************************
.*                              MAINLINE                                   *
.*                            Controlling Logic                            *
.***************************************************************************
ML0000    CALL      INIT0000                 * display header and open files
          CALL      SECT0000                 * Run security check
.
ML1100    CALL      SCR0000                  * Validate patient 
          BRANCH    EXIT,ML9999              * User returned
          CALL      CLR0000                  * Clear variables
          CALL      PATS0000                 * Display all patients            
.
ML1111    BRANCH    EXIT,ML1100,ML2000,ML3000,ML4000,ML5000
.
.         Admission details
.
ML2000    CALL      ADMD0000                 * Get admission details
          CALL      DADM0000                 * Display admission details
          GOTO      ML1111
.
.         Care plans
.
ML3000    CALL      CARE0000                 * Display care plans
          BRANCH    FLAG1,ML1111
          CALL      CDET0000                 * Specific care plan details
          BRANCH    FLAG1,ML3000 
          CALL      EVAL0000                 * Evaluations
          GOTO      ML3000
.
.         Discharge
.
ML4000    CALL      DIS0000                  * Discharge
          GOTO      ML1111 
.
.         Print
.
ML5000    CALL      PRNT0000                 * Print off care plans
          GOTO      ML1100
.
ML9999    CHAIN     PGM                      * chain back to program
.
.*************************************************************************
.*                                  INIT0000                             *
.*                 Display screen headings and open files                *
.*************************************************************************
INIT0000  CALL      DISPHEAD                 * display screen headings
.
          DISPLAY   *P60:24,"patteraf";
          OPEN      PATTERA1,"patteraf"
.
          DISPLAY   *P60:24,"patnursm";
          OPEN      PATNURS1,"patnursm"
.
          DISPLAY   *P60:24,"pattranf";
          OPEN      PATTRAN1,"pattranf"
.
          DISPLAY   *P60:24,"patlocaf";
          OPEN      PATLOCA1,"patlocaf"
.
          DISPLAY   *P60:24,"pcpdisaf";
          OPEN      PCPDISA1,"pcpdisaf"
.
          DISPLAY   *P60:24,"pcpdscaf";
          OPEN      PCPDSCA1,"pcpdscaf"
.
          DISPLAY   *P60:24,"pcpdiaaf";
          OPEN      PCPDIAA1,"pcpdiaaf"
.
          DISPLAY   *P60:24,"pcpfraaf";
          OPEN      PCPFRAA1,"pcpfraaf"
.
          DISPLAY   *P60:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P60:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P60:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P60:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P60:24,"pcprelaf";
          OPEN      PCPRELA1,"pcprelaf"
.
          DISPLAY   *P60:24,"pcpoutaf";
          OPEN      PCPOUTA1,"pcpoutaf"
.
          DISPLAY   *P60:24,"pcppdsaf";
          OPEN      PCPPDSA1,"pcppdsaf"
.
          DISPLAY   *P60:24,"pcpdefaf";
          OPEN      PCPDEFA1,"pcpdefaf"
.
          DISPLAY   *P60:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P60:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FORTY1;*77,PCCNSSEC,*89,PCCNUREL,PCCNUDEF
          READ      CONTROLF,FIFTY9;*132,CALRDESC
.
          DISPLAY   *P60:24,"pcpnuraf";
          OPEN      PCPNURA1,"pcpnuraf"
.
          DISPLAY   *P60:24,"pcpintaf";
          OPEN      PCPINTA1,"pcpintaf"
.
          DISPLAY   *P60:24,"pcpevaaf";
          OPEN      PCPEVAA1,"pcpevaaf"
.
          DISPLAY   *P60:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P60:24,"patnobef";
          OPEN      PATNOBE1,"patnobef"
.
          DISPLAY   *P60:24,"patwr1af";
          OPEN      PATWR1A4,"patwr1af"
.
          MOVE      "11111101",ALRTMASK
.
INIT9999  RETURN
.
.**************************************************************************
.*                                  CLR0000                               *
.*                             Clear variables                            *
.**************************************************************************
CLR0000   MOVE      ZERO,CALLN 
          MOVE      ONE,COUNTER
.
CLR1000   STORE      SP20,COUNTER,UR1,UR2,UR3,UR4,UR5,UR6,UR7,UR8,UR9,UR10,UR11:
                              UR12,UR13,UR14 
          STORE      ZERO,COUNTER,AD1,AD2,AD3,AD4,AD5,AD6,AD7,AD8,AD9,AD10,AD11:
                              AD12,AD13,AD14 
          STORE      SP20,COUNTER,ADM1,ADM2,ADM3,ADM4,ADM5,ADM6,ADM7,ADM8,ADM9:
                              ADM10,ADM11,ADM12,ADM13
          STORE      ZERO,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                 ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13
          STORE      SP60,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                 DESC8,DESC9,DESC10,DESC11,DESC12,DESC13
          STORE      SP20,COUNTER,NCOD1,NCOD2,NCOD3,NCOD4,NCOD5,NCOD6,NCOD7:
                                 NCOD8,NCOD9,NCOD10,NCOD11,NCOD12,NCOD13
          STORE      SP20,COUNTER,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,NUM7,NUM8,NUM9:
                                 NUM10,NUM11,NUM12,NUM13
          STORE      SP20,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                 UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13
          STORE      SP20,COUNTER,TIM1,TIM2,TIM3,TIM4,TIM5,TIM6,TIM7:
                                 TIM8,TIM9,TIM10,TIM11,TIM12,TIM13
          ADD       ONE,COUNTER
          COMPARE   TEN5,COUNTER
          GOTO      CLR1000 IF LESS
.
CLR9999  RETURN
.
.************************************************************************
.*                                 SCR0000                              *
.*                               Display screen layout                  *
.*  Called by : ML1000                                                  *
.************************************************************************
SCR0000   MOVE      ZERO,EXIT
          BRANCH    ALLWARDS,SCR1000
.
          DISPLAY   *P60:2," Station:",*+,PTTENSTN,SP1
.
SCR1000   DISPLAY   *P1:3,*EF,*P6:4,"Patient Surname  :"
.
SCR2000   KEYIN     *P25:4,*EL,*V2LON,LSNAME:
                    *P25:4,*DV,LSNAME
.
.         Don't do ENDSET APPEND as we want to do partial surname keyins
.
          RESET     LSNAME
          GOTO      SCR9000 IF EOS           * Return 
.
.         Validate surname.  Two cases to consider, patient access restricted
.         and patient access not restricted.
.
SCR2100   MOVE      LSNAME,TMP1
          PACK      KEY88,LSNAME,SP70,SP70
          CALL      RDSLOCA1
          CALL      RDKLOCA1
          BRANCH    OVRCD,SCR3000            * Have we read to far?
.
          MATCH     TMP1,LSNAME
          GOTO      SCR3000 IF NOT EQUAL
.
          BRANCH    ALLWARDS,SCR9999         * Unlimited access
.
.         Restrictions apply so check that the patient's ward is in the
.         PATNURFD file.  If it isn't then get the next patient.
.
          CALL      PATC0000                 * Patient check
          BRANCH    EXIT,SCR3000             * Not in same file
          GOTO      SCR9999
.
SCR3000   DISPLAY   *P1:24,*B,"No patients with this name were found.  ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      SCR1000          
.
SCR9000   MOVE      ONE,EXIT
.
SCR9999   RETURN
.
.***************************************************************************
.*                                 SECT0000                                *
.*        Run security check to determine how many patients the user has   *
.*        access to.                                                       *
.*  Called by : ML0000                                                     *
.***************************************************************************
.
.         The users security level is given by SECLEV.  The variable PCCNSSEC
.         contains the security level to ignore nursing station restriction.
.
.         ALLWARDS =1 => unlimited access to wards
.
SECT0000  MOVE      ONE,ALLWARDS
          MOVE      CPORT,PTTEPORT           * Get users port
          PACK      KEY2,PTTEPORT
.
          CALL      RDPTTER1
          BRANCH    OVRCD,SCR9999       
.
.         Check security level
.
          COMPARE   SECLEV,PCCNSSEC
          GOTO      SECT9999 IF EQUAL
          GOTO      SECT9999 IF LESS          
.
          MOVE      PTTENSTN,NUSTAT           * Nursing station
          MOVE      ZERO,ALLWARDS
.
SECT9999  RETURN
.
.**************************************************************************
.*                               PATS0000                                 *
.*                Display all patients with a common surname              *
.*  Called by : ML1200                                                    *
.**************************************************************************
.
.         There are two cases to deal with here.  Patient access is either
.         restricted or not.
.         If restrictions apply, then after getting the patient from the 
.         PATLOCFD file, check that the patient's ward is in the PATNURFD file
.         If it isn't then get the next patient otherwise continue on.
.
PATS0000  MOVE      TMP1,LSNAME
          MOVE      SEVEN,YVAL               * Set Y-cord
          MOVE      ONE,COUNT                * Line counter
          MOVE      ZERO,EXIT
.
          DISPLAY   *P1:6,*V2LON,*ULON,"No.",*P6:6,"Patient's Name",SP30,SP2:
                    *P53:6,"U/R No. ",*P62:6," Adm Date ":
                    *P73:6,"Sex",*P77:6,"Age"
.
          PACK      KEY88,LSNAME,SP70,SP70
          CALL      RDSLOCA1
PATS1000  CALL      RDKLOCA1
          BRANCH    OVRCD,PATS1020           * Have we read too far?
          MATCH     TMP1,LSNAME              * Patient's surname
          GOTO      PATS1020 IF NOT EQUAL
.
          BRANCH    ALLWARDS,PATS1010        * No restrictions apply
.
.         Check that patient is in the same ward as the nursing station
.
          CALL      PATC0000                 * Patient check
          BRANCH    EXIT,PATS1000            * Not in same ward
.
.         Get patient's admission date, sex and age.
.
PATS1010  MOVE      LURNO,PURNO              * U/R number
          PACK      KEY8,PURNO
          CALL      RDMAST1
          BRANCH    OVRCD,PATS1000           * Get next patient
.
.         Patient's admission date is obtained from PATMI1FD file
.
          STORE     LADMNO,COUNT,AD1,AD2,AD3,AD4,AD5,AD6,AD7,AD8,AD9,AD10,AD11:
                                AD12,AD13,AD14,AD15,AD16
          MOVE      LADMNO,AADMNO          * Admission number
          PACK      KEY8,AADMNO
.
.         The trap is needed to fix an I*A error in case this read fails because
.         AADMNO had nothing in it.  This can happen if the user presses the
.         space bar once for the surname and there is some corrupt data in the
.         system which allows this then KEY8 will not be packed properly and the
.         read will fail with I*A.
.
.         This jump to a label inside another routine is a real no no but don't 
.         tell Ledge!
.
          TRAP      SCR3000 IF IO
          CALL      RDMISS1
          TRAPCLR   IO
          BRANCH    OVRCD,PATS1000           * Get next patient
.
          REP       " 0",ADATE
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ADM
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,ICENT
          MOVE      CYEAR,IYEAR         * Parameter for AGECHK
          MOVE      CMON,IMON           * Parameter for AGECHK
          MOVE      CDAY,IDAY           * Parameter for AGECHK
          CALL      AGECHK              * Calculate patients age
.
          DISPLAY   *P1:YVAL,*V2LON,COUNT,*HOFF,".": * Line number
                    *P6:YVAL,LSNAME:                 * Patient's surname
                    *P26:YVAL,LGNAME:                * Patient's given name 
                    *P53:YVAL,LURNO:                 * U/R No.
                    *P62:YVAL,ADM:                   * Admission date
                    *P74:YVAL,PSEX:                  * Patient's sex
                    *P77:YVAL,PSAGE                  * Patient's age
.
.         Save U/R No. so we can access patient when client selects a
.         number.
.
          STORE     LURNO,COUNT,UR1,UR2,UR3,UR4,UR5,UR6,UR7,UR8,UR9,UR10,UR11:
                                UR12,UR13,UR14,UR15,UR16
          ADD       ONE,COUNT                * Increment line number
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      PATS1000 IF LESS         * Get next patient
.
PATS1020  ADD       ONE,CALLN                * CHCK0000 call counter
.
.         CHCK0000 will return SP2 if the user returned, N, P or a valid
.         number that they have selected (1..16) for the patient.
.
          CALL      CHCK0000                 * Make a number of checks
.
          MATCH     SP2,NUMB                 * Return
          GOTO      PATS9000 IF EQUAL
.
.         We don't go back to PATS1000 because we have already done a valid
.         READKS in CHCK0000
.
          MATCH     " N",NUMB                * Next screen
          GOTO      PATS7000 IF EQUAL
.
          MATCH     " P",NUMB                * Previous screen
          GOTO      PATS1090 IF EQUAL
.
.         If we get to here then the user has selected a valid number for a
.         patient.  Grab the patient's U/R number and proceed.
.
          MOVE      NUMB,COUNTER
          LOAD      LURNO,COUNTER,UR1,UR2,UR3,UR4,UR5,UR6,UR7,UR8,UR9,UR10,UR11:
                                  UR12,UR13,UR14,UR15,UR16
          LOAD      AADMNO,COUNTER,AD1,AD2,AD3,AD4,AD5,AD6,AD7,AD8,AD9,AD10:
                                    AD11,AD12,AD13,AD14,AD15,AD16
          MOVE      LURNO,PURNO
          PACK      KEY8,PURNO
          CALL      RDMAST1                  * Master file
          CALL      RDPMPX21
          PACK      KEY8,AADMNO
          CALL      RDMISS1                  * Admissions file 
          CALL      PATHEAD                  * Display 3 line header
.
PATS1078  DISPLAY   *P1:7,"Admit. Diagnosis : ",*V2LON,ADIAG1
          CALL      AQST0000
          MOVE      FLAG5,EXIT
          GOTO      PATS9999
.
.         To go backwards one screen we READKP 32 times (16 times for the 
.         screen we are currently on and 16 times to get to the top of the 
.         previous screen).  When we have read back 32 times to get to the top
.         of the previous screen we then do READKS 16 times and display the data
.         down the screen.  
.
.         Restrictions may apply.  So for every patient read we need to check
.         that the patient is in the same ward as the nursing station if
.         restrictions are in force.
.
PATS1090  MOVE      ONE,COUNTER
.
PATS2000  CALL      RDPLOCA1                 * Key will be unchanged
.
          BRANCH    ALLWARDS,PATS2020        * Restrictions do not apply
.
.         Restrictions apply, so check patient
.
          CALL      PATC0000
          BRANCH    EXIT,PATS2000            * Not in same ward
.
PATS2020  ADD       ONE,COUNTER
          COMPARE   THIRTY3,COUNTER
          GOTO      PATS2000 IF LESS         * OVRCD will not occur     
.
          GOTO      PATS1000
.
PATS7000  DISPLAY   *P1:7,*EF
          MOVE      ONE,COUNT
          MOVE      SEVEN,YVAL
          GOTO      PATS1000

PATS9000  MOVE      ONE,EXIT
          GOTO      PATS9999
.
PATS9999  RETURN
.
.**************************************************************************
.*                               PATC0000                                 *
.*                    Check that patient is in the same ward as the       *
.*                    nursing station.                                    *
.*  Called by : PATS1000                                                  *
.**************************************************************************
.
.         Get patient's ward number
.
PATC0000  MOVE      ZERO,EXIT
.
          MOVE      DLADMNO,DTADMN           * Admission number
          PACK      KEY30,DTADMN,SP30
.
          CALL      RDSTRAN2
          CALL      RDKTRAN2
.
          BRANCH    OVRCD,PATC9000           * Have we read too far?
.
          MATCH     DTADMN,DLADMNO
          GOTO      PATC9000 IF EQUAL        * Not on file
.
.         We now have the patient's ward number (TWARD).
.         Now get the nursing ward number.  This is the ward numbers that the
.         nursing station has access to.  If TWARD is one of these numbers
.         then display that patient, else get another patient.
.         A nursing station can have access to more than one ward.
.
          MOVE      NUSTAT,NSTAT             * Nursing station
          PACK      KEY6,NSTAT,SP6
.
          CALL      RDSNURS1
.
PATC1000  CALL      RDKNURS1
.
          BRANCH    OVRCD,PATC9000           * Have we read too far?
.
          MATCH     NSTAT,NUSTAT
          GOTO      PATC9000 IF NOT EQUAL
.
          MATCH     NWARD,TWARD              * Ward comparison
          GOTO      PATC1000 IF NOT EQUAL
.
          GOTO      PATC9999                 * We have a valid patient
.
PATC9000  MOVE      ONE,EXIT
.
PATC9999  RETURN
.
.**************************************************************************
.*                               CHCK0000                                 *
.*            Run a number of checks on the display of the patients       *
.*  Called by : PATS1010                                                  *
.**************************************************************************
.
.         Check if we have only one screen of data to display
.
CHCK0000  SUB       ONE,COUNT 
          CALL      RDKLOCA1                 * Key will still be set up
.
          BRANCH    OVRCD,CHCK1000           * Only one screen of data
.
          MATCH     TMP1,LSNAME
          GOTO      CHCK1000 IF NOT EQUAL
.
          COMPARE   TWO,CALLN
          GOTO      CHCK0400 IF LESS         * Just displayed first screen
.
.         We have more than one screen of data to display and we have displayed
.         a previous screen.
.
CHCK0020  DISPLAY   *P1:24,*EL,"Input the number of the patient required, ":
                      "(",*V2LON,"N",*HOFF,")ext or (",*V2LON,"P",*HOFF:
                      ")revious screen : ";
          KEYIN     *P73:24,*DV,UNDLN2:
                    *P73:24,*V2LON,*JR,NUMB
.
          ENDSET    NUMB 
          APPEND    SP2,NUMB
          RESET     NUMB
.
          MATCH     SP2,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          MATCH     " N",NUMB
          GOTO      CHCK9000 IF EQUAL
.
          MATCH     " P",NUMB
          GOTO      CHCK9000 IF EQUAL
.
          MOVE      COUNT,DIM2
          REP       " 0",NUMB
          REP       " 0",DIM2
.
          MATCH     "01",NUMB
          GOTO      CHCK0021 IF LESS         * Must be > 0
.
          MATCH     NUMB,DIM2
          GOTO      CHCK0021 IF LESS
          GOTO      CHCK9000
.
CHCK0021  BEEP
          GOTO      CHCK0020 
.
.         More than one screen of data to display but we have just displayed
.         screen one so there is no previous screen
.
CHCK0400  DISPLAY   *P1:24,*EL,"Input the number of the patient required,":
                        " (",*V2LON,"N",*HOFF,")ext screen : ";
          KEYIN     *P59:24,*EL,*DV,UNDLN2:
                    *P59:24,*V2LON,*JR,NUMB
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
.
          MATCH     SP2,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          MATCH     " N",NUMB
          GOTO      CHCK9000 IF EQUAL
.
          MOVE      COUNT,DIM2
          REP       " 0",NUMB
          REP       " 0",DIM2
.
          MATCH     "01",NUMB
          GOTO      CHCK0501 IF LESS         * Must be > 0
.
          MATCH     NUMB,DIM2
          GOTO      CHCK0501 IF LESS         * Incorrect keyin
          GOTO      CHCK9000
.
CHCK0501  BEEP
          GOTO      CHCK0400
.
.         Only one screen of data to display
.
CHCK1000  DISPLAY   *P1:24,*EL,"Input the number of the patient required : ";
          KEYIN     *P44:24,*EL,*DV,UNDLN2:
                    *P44:24,*JR,*V2LON,NUMB
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
.
          MATCH     SP2,NUMB
          GOTO      CHCK9000 IF EQUAL
.
          REP       " 0",NUMB
.
          MOVE      COUNT,DIM2
          REP       " 0",DIM2
.
          MATCH     "01",NUMB
          GOTO      CHCK1002 IF LESS         * Must be > 0
.
          MATCH     NUMB,DIM2
          GOTO      CHCK1002 IF LESS         * Incorrect keyin
          GOTO      CHCK9000
.
CHCK1002  BEEP
          GOTO      CHCK1000
.
CHCK9000  ADD       ONE,COUNTER
.
CHCK9999  RETURN
.
.***************************************************************************
.*                               AQST0000                                  *
.*                Ask A/C/D/P/E question                                   *
.***************************************************************************
AQST0000  DISPLAY   *P1:24,*EL,"(",*V2LON,"A",*HOFF,")dmission Details, (":
                       *V2LON,"C",*HOFF,")are Plans, (",*V2LON,"D",*HOFF:
                       ")ischarge,"," (",*V2LON,"P",*HOFF,")rint, (",*V2LON:
                       "E",*HOFF,")xit ?";
.
AQST1000  KEYIN     *P67:24,*DV,UNDLN1,*P67:24,*V2LON,ANS
.
          REP       UPPLOW,ANS
.
          CMATCH    ANSE,ANS
          GOTO      AQST9000 IF EQUAL
.
          CMATCH    ANSA,ANS
          GOTO      AQST9001 IF EQUAL
.
          CMATCH    ANSC,ANS
          GOTO      AQST9002 IF EQUAL
.
          CMATCH    ANSD,ANS
          GOTO      AQST9003 IF EQUAL
.
          CMATCH    ANSP,ANS
          GOTO      AQST9004 IF EQUAL
.
          BEEP
          GOTO      AQST0000                 * Incorrect keyin
.
AQST9000  MOVE      ONE,FLAG5
          GOTO      AQST9999 
.
AQST9001  MOVE      TWO,FLAG5
          GOTO      AQST9999 
.
AQST9002  MOVE      THREE,FLAG5
          GOTO      AQST9999 
.
AQST9003  MOVE      FOUR,FLAG5
          GOTO      AQST9999 
.
AQST9004  MOVE      FIVE,FLAG5
.
AQST9999  RETURN
.
.**************************************************************************
.*        get the admission details
.**************************************************************************
ADMD0000  UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ADM
          REP       " 0",ADM                * Admission date
.
          MOVE      SP20,TDESCB
          MATCH     SP3,PCONT
          GOTO      ADMD1000 IF EQUAL       * no code
.
          MOVE      "C ",TCODE
          PACK      KEY5,TCODE,PCONT
          CALL      RDCODE1
          BRANCH    OVRCD,ADMD1000
.
          MOVE      TDESC,TDESCB            * country of birth
.
ADMD1000  MOVE      SP20,TDESCM
          MATCH     SP3,PMSTAT
          GOTO      ADMD2000 IF EQUAL       * no value
.
          MOVE      "M ",TCODE
          PACK      KEY5,TCODE,PMSTAT
          CALL      RDCODE1
          BRANCH    OVRCD,ADMD2000
.
          MOVE      TDESC,TDESCM            * marital status
.
ADMD2000  MOVE      SP20,TDESCR
          MATCH     SP3,PREG
          GOTO      ADMD9999 IF EQUAL       * no value
.
          MOVE      "R ",TCODE
          PACK      KEY5,TCODE,PREG
          CALL      RDCODE1
          BRANCH    OVRCD,ADMD2000
.
          MOVE      TDESC,TDESCR            * religon
.
ADMD9999  RETURN
.
.*********************************************************************
.*        display the admission details
.*********************************************************************
DADM0000  DISPLAY   *P1:8,*EF:
                    *P11:9,"Address        : ",*V2LON,PADD1,*HOFF:
                    *P26:10,": ",*V2LON,PADD2,*HOFF:
                    *P26:11,": ",*V2LON,PSUBRB,"      ",PPOST,*HOFF:
                    *P11:13,"Cntry of Birth : ",*V2LON,PCONT,"  ",TDESCB:
                    *P11:14,*HOFF,"Marital Status : ",*V2LON,PMSTAT,"  ",TDESCM:
                    *P11:15,*HOFF,"Religion       : ",*V2LON,PREG,"  ",TDESCR:
                    *P11:16,*HOFF,"Admission Date : ",*V2LON,ADM,*HOFF:
                    *P11:17,"Admission Time : ",*V2LON,ATIME
.
          CALL      AQST0000
          MOVE      FLAG5,EXIT
.
DADM9999  RETURN
.
.**************************************************************************
.*                               CARE0000                                 *
.*                Display care plans                                      *
.**************************************************************************
CARE0000  DISPLAY   *P1:8,*EF:               * Display screen layout
                    *P5:9,*V2LON,*ULON,"   Date   ":
                    *P17:9,"Nursing Diagnosis":
                    *P76:9,"Actv"
          MOVE      ZERO,FLAG1
          MOVE      ZERO,FLAG2
          MOVE      ZERO,FLAG12
          MOVE      ONE,TMP2
          MOVE      ZERO,COUNTER
          MOVE      TEN,YVAL
          MOVE      SP2,ANS
.
.         Read diagnosis file and display in reverse order.
.
          MOVE      ZERO,FLAG10
          MOVE      TEN,YVAL
          MOVE      AADMNO,PCDIADMN         * Admission number
          PACK      KEY33,PCDIADMN,Z30       * Get to end of file
          CALL      RSPCDIA1
.
CARE2000  CALL      RPPCDIA1                 * READKP
          BRANCH    OVRCD,CARE8999           * EOF
.
          COMPARE   PCDIADMN,AADMNO         * Have we read too far?
          GOTO      CARE8999 IF NOT EQUAL
.
          ADD       ONE,COUNTER 
          DISPLAY   *P1:YVAL,*V2LON,COUNTER,*HOFF,DOT * Line counter
          MOVE      ONE,FLAG10               * We have printed something
.
          REP       " 0",PCDIDATE
          UNPACK    PCDIDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,ADM
.
          DISPLAY   *P5:YVAL,ADM             * Date
.
.         Get nursing diagnosis description
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
.
          ENDSET    PCDIDCOD
          APPEND    SP4,PCDIDCOD
          RESET     PCDIDCOD
.
          MATCH     SP4,PCDIDCOD
          GOTO      CARE3000 IF EQUAL
.
          MOVE      ONE,FLAG11
          MOVE      ZERO,FLAG12
          MOVE      DLADMNO,PCPDADMN         * Admission number
          MOVE      PCDINURS,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20 
.
          CALL      RSPCPDS1
          BRANCH    FLAG11,CARE2500
.
CARE2400  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CARE5000 IF NOT LESS
.
CARE2500  CALL      RKPCPDS1
          BRANCH    OVRCD,CARE2000
.
          COMPARE   AADMNO,PCPDADMN
          GOTO      CARE2000 IF NOT EQUAL
.
          MATCH     PCDINURS,PCPDDCOD
          GOTO      CARE2000 IF NOT EQUAL
.
          DISPLAY   *P17:YVAL,PCPDDESC       * Description
.
          BRANCH    FLAG12,CARE2400
          MOVE      ONE,FLAG12
.
          GOTO      CARE3503
.
CARE3000  MOVE      ONE,FLAG2                * Set flag
          MOVE      ZERO,FLAG8
          MOVE      SIX,PCDSTYPE             * Nursing diagnosis
          MOVE      PCDIDIAG,PCDSCODE        * Description code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
.
          CALL      RSPCDSC1
          BRANCH    FLAG2,CARE3100
.
CARE3050  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL              
          GOTO      CARE5000 IF NOT LESS
.
CARE3100  CALL      RKPCDSC1
          BRANCH    OVRCD,CARE2000           * Not on file
.
          COMPARE   SIX,PCDSTYPE
          GOTO      CARE2000 IF NOT EQUAL
.
          MATCH     PCDIDIAG,PCDSCODE
          GOTO      CARE2000 IF NOT EQUAL
.
CARE3500  DISPLAY   *P17:YVAL,PCDSDESC       * Description
.
          BRANCH    FLAG8,CARE3050
          MOVE      ONE,FLAG8
.
CARE3503  BRANCH    PCDISTAT,CARE3504,CARE3505 * Activity status
.
CARE3504  DISPLAY   *P78:YVAL,ANSY           * Activity
          GOTO      CARE4000
.
CARE3505  DISPLAY   *P78:YVAL,ANSN
.
.         Diagnosis description
.
CARE4000  STORE     PCDSDESC,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13 
.
.         Date
.
          STORE     ADM,COUNTER,ADM1,ADM2,ADM3,ADM4,ADM5,ADM6,ADM7:
                                ADM8,ADM9,ADM10,ADM11,ADM12,ADM13 
.
.         Time
.
          STORE     PCDITIME,COUNTER,TIM1,TIM2,TIM3,TIM4,TIM5,TIM6,TIM7,TIM8:
                                     TIM9,TIM10,TIM11,TIM12,TIM13
.
.         Admission number
.
          STORE     PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13 
.
.         Nurse code
.
          STORE     PCDINURS,COUNTER,NCOD1,NCOD2,NCOD3,NCOD4,NCOD5,NCOD6,NCOD7:
                                     NCOD8,NCOD9,NCOD10,NCOD11,NCOD12,NCOD13 
.
.         Unique key
.
          STORE     PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
.
.         Description number
.
          STORE     PCDIDCOD,COUNTER,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,NUM7:
                                     NUM8,NUM9,NUM10,NUM11,NUM12,NUM13 
.
.         Clinic condition
.
          STORE     PCDICLIN,COUNTER,TCC1,TCC2,TCC3,TCC4,TCC5,TCC6,TCC7:
                                     TCC8,TCC9,TCC10,TCC11,TCC12,TCC13 
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CARE4100 IF NOT LESS         
.
.         Jump back to the appropriate loop
.
          BRANCH    FLAG12,CARE2500
          GOTO      CARE3100          
.
CARE4100  ADD       ONE,TMP2                 * Indicates we have filled a screen
.
CARE5000  DISPLAY   *P1:24,*EL,"Select the care plan you want to enquire on,":
                    " (",*V2LON,"N",*HOFF,")ext or (",*V2LON,"P",*HOFF:
                    ")revious screen : "; 
          KEYIN     *P76:24,*V2LON,*JR,NUMB:
                    *P76:24,*DV,NUMB
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
.
          MATCH     SP2,NUMB               * Return
          GOTO      CARE9200 IF EQUAL
.
          MATCH     " P",NUMB
          GOTO      CARE9002 IF EQUAL        * Previous screen
.
          MATCH     " N",NUMB
          GOTO      CARE9004 IF EQUAL        * Next screen
.
          TYPE      NUMB                     * Must be numeric if we get to here
          GOTO      CARE5100 IF NOT EQUAL
.
          MOVE      COUNT,DIM2
          MOVE      NUMB,NFORM
.
          COMPARE   ZERO,NFORM
          GOTO      CARE9200 IF EQUAL        * Exit out
.
          COMPARE   ONE,NFORM                * Must be > 0
          GOTO      CARE5100 IF LESS
. 
          COMPARE   COUNTER,NFORM
          GOTO      CARE9999 IF LESS 
          GOTO      CARE9999 IF EQUAL
.
CARE5100  BEEP
          GOTO      CARE5000
.
.         Determine what type of message to put on line 24
.
.         Last screen of data was displayed but check if this occured on the
.         first screen (if so then TMP2=1)
.
CARE8999  BRANCH    FLAG10,CARE9000
          DISPLAY   *P1:24,*EL,"No care plans on file.  ";
          CALL      HITENTER
          GOTO      CARE9200
. 
CARE9000  COMPARE   ONE,TMP2
          GOTO      CARE9005 IF EQUAL         
.
.         End of data occured but not on first screen
.
CARE9001  DISPLAY   *P1:24,*EL,"Select the care plan you want to enquire on,":
                      " (",*V2LON,"P",*HOFF,")revious screen : "; 
.
          KEYIN     *P66:24,*V2LON,*JR,NUMB:
                    *P66:24,*DV,NUMB
.
          ENDSET    NUMB
          APPEND    SP2,NUMB
          RESET     NUMB
.
          MATCH     SP2,NUMB               * Return
          GOTO      CARE9200 IF EQUAL
.
          MATCH     " P",NUMB
          GOTO      CARE9002 IF EQUAL        * Previous screen
.
          TYPE      NUMB                     * Must be numeric if we get to here
          GOTO      CARE901A IF NOT EQUAL
.
          MOVE      COUNT,DIM2
          MOVE      NUMB,NFORM
.
          COMPARE   ZERO,NFORM
          GOTO      CARE9200 IF EQUAL        * Exit out
.
          COMPARE   ONE,NFORM
          GOTO      CARE901A IF LESS         * Must be > 0          
.
          COMPARE   COUNTER,NFORM
          GOTO      CARE9999 IF LESS
          GOTO      CARE9999 IF EQUAL
.
CARE901A  BEEP
          GOTO      CARE9001
.
.         In order to get to the start of the previous screen we READKS 26 times
.         NOTE: We read forward because our main loop is reading backwards.
.
CARE9002  MOVE      ONE,COUNTER
.
CARE9003  CALL      RKPCDIA1
          BRANCH    OVRCD,CARE9004
.
          COMPARE   PCDIADMN,AADMNO
          GOTO      CARE9004 IF NOT EQUAL
.
          ADD       ONE,COUNTER    
          COMPARE   TWENTY7,COUNTER
          GOTO      CARE9003 IF LESS
.
CARE9004  MOVE      ZERO,COUNTER
          MOVE      TEN,YVAL
          DISPLAY   *P1:YVAL,*EF             * Clear part of screen
          GOTO      CARE2000                 * Display screen now
.
.         End of data occured on first screen
.
CARE9005  DISPLAY   *P1:24,*EL,"Select the care plan you want to enquire on : ";
          KEYIN     *P47:24,*DV,UNDLN2:
                    *P47:24,*V2LON,NFORM
.
          COMPARE   ZERO,NFORM              * Return
          GOTO      CARE9200 IF EQUAL
.
          COMPARE   NFORM,COUNTER
          GOTO      CARE9100 IF LESS
.
          BRANCH    NFORM,CARE9999,CARE9999,CARE9999,CARE9999,CARE9999:
                          CARE9999,CARE9999,CARE9999,CARE9999,CARE9999:
                          CARE9999,CARE9999,CARE9999
.
CARE9100  BEEP
          GOTO      CARE9005                 * Incorrect keyin
.
CARE9200  CALL      AQST0000
          MOVE      FLAG5,EXIT 
          MOVE      ONE,FLAG1
.
CARE9999  RETURN
.
.**************************************************************************
.*                                CDET000                                 *
.*                    Specific care plan details                          *
.*  Called by : ML3000                                                    *
.**************************************************************************
CDET0000  MOVE      ZERO,FLAG1
          DISPLAY   *P1:8,*EF
          MOVE      NFORM,COUNTER             * Care plan number selected
.
.         Get diagnosis category
.
          LOAD      PCDICLIN,COUNTER,TCC1,TCC2,TCC3,TCC4,TCC5,TCC6,TCC7:
                                     TCC8,TCC9,TCC10,TCC11,TCC12,TCC13 
          MOVE      SP20,PCDSDESC
          PACK      KEY13,SP1,TWO,PCDICLIN,SP1,ONE  * want line one of type two
          CALL      RDPCDSC1
          DISPLAY   *P1:8,*EL,"Diagns. Category : ",PCDSDESC
.          
.         Get diagnosis date and time
.
          LOAD      ADM,COUNTER,ADM1,ADM2,ADM3,ADM4,ADM5,ADM6,ADM7:
                                ADM8,ADM9,ADM10,ADM11,ADM12,ADM13 
          LOAD      PCDITIME,COUNTER,TIM1,TIM2,TIM3,TIM4,TIM5,TIM6,TIM7:
                                TIM8,TIM9,TIM10,TIM11,TIM12,TIM13 
          DISPLAY   *P1:9,"Diagnosis Date   : ",ADM,"   (",PCDITIME,")"
.
.         Get nursing diagnosis
.
          LOAD      PCDSDESC,COUNTER,DESC1,DESC2,DESC3,DESC4,DESC5,DESC6,DESC7:
                                     DESC8,DESC9,DESC10,DESC11,DESC12,DESC13 
          DISPLAY   *P1:10,"Nursing Diagnosis: ",PCDSDESC
.
.         Get nurse based upon the nurse code that was saved
.
          DISPLAY   *P1:11,"Nurse            : "
          LOAD      PCNUCODE,COUNTER,NCOD1,NCOD2,NCOD3,NCOD4,NCOD5,NCOD6,NCOD7:
                                     NCOD8,NCOD9,NCOD10,NCOD11,NCOD12,NCOD13 
          PACK      KEY6,PCNUCODE
.
          CALL      RDPCNUR1
          BRANCH    OVRCD,CDET0500 
.
          DISPLAY   *P20:11,PCNUNAME:
                    *P41:11,PCNUCLSS
.
.         Display   related factors
.
CDET0500  CALL      REL0000
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
.         Display   characteristics
.
          CALL      CHAR0000
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
.         Display desired outcomes
.
          CALL      DESI0000
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
.         Display interventions   
.
          CALL      INTE0000
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          DISPLAY   *P1:24,"(",*V2LON,"E",*HOFF,")valuations or (",*V2LON:
                       "R",*HOFF,")eturn : ";
.
CDET1000  KEYIN     *P29:24,*EL,*DV,UNDLN2,*P29:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP2,ANS
          RESET     ANS
.
          MATCH     ANSE,ANS
          GOTO      CDET9999 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      CDET9000 IF EQUAL
.
          MATCH     SP2,ANS
          GOTO      CDET9000 IF EQUAL
.
          BEEP
          GOTO      CDET1000
.
CDET9000  MOVE      ONE,FLAG1
. 
CDET9999  RETURN
.
.**************************************************************************
.*                                REL0000                                 *
.*                        Display related factors                         *
.*  Called by : ML4000                                                    *
.**************************************************************************
REL0000   MOVE      TEN2,YVAL
          MOVE      ONE,FLAG6
          BRANCH    PCCNUREL,REL0100         * using related factors ?
          GOTO      REL9999
.
REL0100   ADD       ONE,YVAL
          MOVE      ZERO,FLAG6
          DISPLAY   *P1:YVAL,*V2LON,"Related Factors  ",*HOFF,": "
.
          LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
.
          PACK      KEY19,PCDIUNIQ,SP20
          CALL      RSPCREL1
REL1000   CALL      RKPCREL1
          BRANCH    OVRCD,REL9999
.
          MATCH     PCREUNIQ,PCDIUNIQ
          GOTO      REL9999 IF NOT EQUAL
.
          PACK      PCREDCOD,PCREDCOD,SP4
.
          MATCH     SP4,PCREDCOD
          GOTO      REL2000 IF EQUAL
.
.         Description number is non blank so get description from PDS file
.
.         Admission number
.
          LOAD      PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13 
.
          PACK      KEY14,PCDIADMN,PCREDCOD,SP20
          CALL      RSPCPDS1
REL1100   CALL      RKPCPDS1
          BRANCH    OVRCD,REL1000
.
          MATCH     PCPDDCOD,PCREDCOD       * Have we read too far?
          GOTO      REL1000 IF NOT EQUAL
.
          COMPARE   PCPDADMN,PCDIADMN
          GOTO      REL1000 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCPDDESC       * Description
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      REL1100 IF LESS
.
          CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,REL1200            * Next screen
          GOTO      REL9999
.
REL1200   MOVE      TEN3,YVAL
          DISPLAY   *P20:YVAL,*EF            * Clear screen for next screen
          GOTO      REL1100 
.
.         Description number is blank so get description from DSC file
.         First get the related factor code from the PCPRELFD file.  We need
.         this code to access the PCPDSCFD file
.
.         Unique key
.
REL2000   MOVE      PCDIUNIQ,PCREUNIQ
          MOVE      EIGHT,PCDSTYPE
          MOVE      PCREFACT,PCDSCODE
.
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
REL2100   CALL      RKPCDSC1
          BRANCH    OVRCD,REL9999
.
          COMPARE   PCDSTYPE,EIGHT
          GOTO      REL1000 IF NOT EQUAL
.
          MATCH     PCREFACT,PCDSCODE
          GOTO      REL1000 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCDSDESC       * Description
          MOVE      ONE,FLAG6
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      REL2100 IF LESS
.
          CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,REL2200            * Next screen
          GOTO      REL9999
.
REL2200   MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Related Factors  ",*HOFF,": "
          GOTO      REL2100
.
REL9999   RETURN
.
.**************************************************************************
.*                               BOTM0000                                 *
.*                          Line 24 message                               *
.*  Called by : REL0000                                                   *
.**************************************************************************
BOTM0000  MOVE      ZERO,FLAG3
          DISPLAY   *P1:24,"(",*V2LON,"N",*HOFF,")ext screen, (",*V2LON,"E":
                    *HOFF,")valuations or (",*V2LON,"R",*HOFF,")eturn ? ";
.
BOTM1000  KEYIN     *P44:24,*V2LON,ANS
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS
          GOTO      BOTM8000 IF EQUAL        
.
          MATCH     ANSR,ANS
          GOTO      BOTM9999 IF EQUAL
.
          MATCH     ANSN,ANS              * Next screen
          GOTO      BOTM9000 IF EQUAL
.
          MATCH     ANSE,ANS
          GOTO      BOTM9999 IF EQUAL
.
          BEEP
          GOTO      BOTM1000                 * Incorrect keyin
.
BOTM8000  MOVE      ANSR,ANS
.
BOTM9000  MOVE      ONE,FLAG3
.
BOTM9999  RETURN
.
.**************************************************************************
.*                               CHAR0000                                 *
.*                          Display characteristics                       *
.*  Called by : CDET0000                                                  *
.**************************************************************************
CHAR0000  
          BRANCH    PCCNUDEF,CHAR0100    * using defining characteristics ?
          GOTO      CHAR9999
CHAR0100
          BRANCH    FLAG6,CHAR0500
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CHAR1000 IF EQUAL
. 
CHAR0500  MOVE      ZERO,FLAG6
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CHAR1000 IF EQUAL
          GOTO      CHAR3011
.
CHAR1000  CALL      BOTM0000
          BRANCH    FLAG3,CHAR2000
          GOTO      CHAR9999
.
CHAR2000  MOVE      TEN3,YVAL 
          DISPLAY   *P1:YVAL,*EF
.
CHAR3011  DISPLAY   *P1:YVAL,*V2LON,"Characteristics  ",*HOFF,": "
.         
          BRANCH    FLAG2,CHAR8200           * True if description no. is blank
.
.         Description number is non blank so get description from PDS file
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCDIDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
          CALL      RSPCDSC1
.
CHAR3100  CALL      RKPCDSC1
          BRANCH    OVRCD,CHAR9999
.
          MATCH     PCPDDCOD,PCDIDCOD       * Have we read too far?
          GOTO      CHAR9999 IF NOT EQUAL
.
          COMPARE   PCPDADMN,PCDIADMN
          GOTO      CHAR9999 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCPDDESC       * Description
          MOVE      ONE,FLAG1
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL 
          GOTO      CHAR3100 IF LESS
.
CHAR8000  CALL      BOTM0000
.
          MATCH     ANSN,ANS
          GOTO      CHAR8100 IF EQUAL
          GOTO      CHAR9999
.
CHAR8100  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF
          DISPLAY   *P1:YVAL,"Characteristics  : "
          GOTO      CHAR3100                 * Get next screen
.
.         Unique key
.
CHAR8200  LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
          MOVE      PCDIUNIQ,PCDEUNIQ
          PACK      KEY19,PCDEUNIQ,SP20
          CALL      RSPCDEF1
.
CHAR8205  CALL      RKPCDEF1
          BRANCH    OVRCD,CHAR9999
.
          MATCH     PCDEUNIQ,PCDIUNIQ        * Have we read too far?
          GOTO      CHAR9999 IF LESS
.
.         We have the characteristics code.  Now read the PCPDSCFD file to
.         get the description
.
          MOVE      TEN,PCDSTYPE
          MOVE      PCDECHAR,PCDSCODE
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20          
.
          CALL      RSPCDSC1
.
CHAR8210  CALL      RKPCDSC1
          BRANCH    OVRCD,CHAR9999
.
          COMPARE   PCDSTYPE,TEN
          GOTO      CHAR9999 IF NOT EQUAL    * Have we read too far?
.
          MATCH     PCDSCODE,PCDECHAR
          GOTO      CHAR9999 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCDSDESC       * Description
          MOVE      ONE,FLAG6
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      CHAR8205 IF LESS
.
          CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,CHAR8220           * Next screen
          GOTO      CHAR9999
.
CHAR8220  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Characteristics  ",*HOFF,": "
          GOTO      CHAR8205
.
CHAR9999  RETURN
.
.**************************************************************************
.*                               DESI0000                                 *
.*                          Display desired outcomes                      *
.*  Called by : ML4000                                                    *
.**************************************************************************
.
DESI0000  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI1000 IF EQUAL
          GOTO      DESI1010
.
DESI1000  CALL      BOTM0000
          BRANCH    FLAG3,DESI1001
          GOTO      DESI9999
.
DESI1001  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF             * Clear part of screen
.
DESI1010  DISPLAY   *P1:YVAL,*V2LON,"Desired Outcomes ",*HOFF,": "
.
.
.         Admission number
.
          LOAD      PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13 
.
.         Description number
.
          LOAD      PCDIDCOD,COUNTER,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,NUM7:
                                     NUM8,NUM9,NUM10,NUM11,NUM12,NUM13 
.
          LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
.
          MOVE      PCDIUNIQ,PCOTUNIQ
          PACK      KEY19,PCOTUNIQ,SP20
          CALL      RSPCOUT1
DESI1050  CALL      RKPCOUT1
          BRANCH    OVRCD,DESI9999
.
          MATCH     PCOTUNIQ,PCDIUNIQ        * Have we read too far?
          GOTO      DESI9999 IF NOT EQUAL
.
          MATCH    SP4,PCOTDCOD              * test if decription code is
          GOTO     DESI5000 IF EQUAL       blank
.
. Code is NOT blank so use pcpPDSaf file
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCOTDCOD,PCPDDCOD
.
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
          CALL      RSPCPDS1
DESI1100  CALL      RKPCPDS1
          BRANCH    OVRCD,DESI1105
.
          COMPARE   PCPDADMN,PCDIADMN       * Have we read too far?
          GOTO      DESI1105 IF NOT EQUAL
.
          MATCH     PCPDDCOD,PCOTDCOD
          GOTO      DESI1105 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCPDDESC       * Description
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI1100 IF LESS
.
          CALL      BOTM0000
          BRANCH    FLAG3,DESI1104           * Next screen
          GOTO      DESI9999 
.
DESI1104  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Desired Outcomes ",*HOFF,": "
          GOTO      DESI1100
.
DESI1105  BRANCH    PCOTTYPE,DESI1110,DESI1115,DESI1120,DESI1125
.
          DISPLAY   *P25:YVAL,"No Target Date"
          GOTO      DESI1130
.
DESI1110  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DATE
          DISPLAY   *P25:YVAL,"By ",DATE
          GOTO      DESI1130
.
DESI1115  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DATE
          DISPLAY   *P25:YVAL,"By ",PCOTDYWK," days (",DATE,")"
          GOTO      DESI1130
.
DESI1120  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DATE
          DISPLAY   *P25:YVAL,"By ",PCOTDYWK," weeks (",DATE,")"
          GOTO      DESI1130
.
DESI1125  DISPLAY   *P25:YVAL,"At all times"
.
DESI1130  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL 
          GOTO      DESI1050 IF LESS
.
          CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,DESI1200           * Next screen
          GOTO      DESI9999
.
DESI1200  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Desired Outcomes ",*HOFF,": "
          GOTO      DESI1050
.
.         Description number is blank so get description from DSC file
.         Unique key
.
DESI5000  MOVE      SEVEN,PCDSTYPE
          MOVE      PCOTCODE,PCDSCODE
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20          
          CALL      RSPCDSC1
.
DESI5150  CALL      RKPCDSC1
          BRANCH    OVRCD,DESI5202
.
          COMPARE   PCDSTYPE,SEVEN
          GOTO      DESI5202 IF NOT EQUAL    * Have we read too far?
.
          MATCH     PCDSCODE,PCOTCODE
          GOTO      DESI5202 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCDSDESC       * Description
          MOVE      ONE,FLAG6
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI5150 IF LESS
.
DESI5160  CALL      BOTM0000                 * Line 24 message
          BRANCH    FLAG3,DESI5170
          GOTO      DESI9999
.
DESI5170  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Desired Outcomes ",*HOFF,": "
          GOTO      DESI5150
.
DESI5202  BRANCH    PCOTTYPE,DESI5205,DESI5206,DESI5207,DESI5208
.
          DISPLAY   *P25:YVAL,"No Target Date"
          GOTO      DESI9000
.
DESI5205  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DATE
          DISPLAY   *P25:YVAL,"By ",DATE
          GOTO      DESI9000
.
DESI5206  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DATE
          DISPLAY   *P25:YVAL,"By ",PCOTDYWK," days (",DATE,")"
          GOTO      DESI9000
.
DESI5207  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DATE
          DISPLAY   *P25:YVAL,"By ",PCOTDYWK," weeks (",DATE,")"
          GOTO      DESI9000
.
DESI5208  DISPLAY   *P25:YVAL,"At all times"
.
DESI9000  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DESI1050 IF LESS 
.
          CALL      BOTM0000
          BRANCH    FLAG3,DESI9100
          GOTO      DESI9999
.
DESI9100  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Desired Outcomes ",*HOFF,": "
          GOTO      DESI1050
.
DESI9999  RETURN
.
.**************************************************************************
.*                               INTE0000                                 *
.*                          Display interventions                         *
.*  Called by : ML4000                                                    *
.**************************************************************************
.
.         With the unique key value, loop through the PCPINTFD file (partial
.         key - sequential read) and with each record found, check the 
.         description number.  If it is blank then get the description from
.         the dsc file else get it from the pds file.
.
INTE0000  BRANCH    FLAG6,INTE1010           * Move down a line?          
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      INTE1010 IF LESS
.
          CALL      BOTM0000
          BRANCH    FLAG3,INTE1001
          GOTO      INTE9999
.
INTE1001  MOVE      TEN3,YVAL
.
INTE1010  DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,": "
.
.         Now loop through the INT file.
.
          LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13
.
          MOVE      PCDIUNIQ,PCINUNIQ
          PACK      KEY19,PCINUNIQ,SP20
          CALL      RSPCINT1                 * Partial read through this file
.
INTE2000  CALL      RKPCINT1
          BRANCH    OVRCD,INTE9999
.
          MATCH     PCINUNIQ,PCDIUNIQ
          GOTO      INTE9999 IF NOT EQUAL    * Read too far
.
.         Check if this record has a description number
.
          MATCH     SP4,PCINDCOD
          GOTO      INTE6000 IF EQUAL
.
.         Description number is non-blank so get description from pds file.
. 
          LOAD      PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCINDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP10
          CALL      RSPCPDS1
.
INTE3000  CALL      RKPCPDS1
          BRANCH    OVRCD,INTE4500
.
          COMPARE   PCDIADMN,PCPDADMN
          GOTO      INTE4500 IF NOT EQUAL
.
          MATCH     PCPDDCOD,PCINDCOD
          GOTO      INTE4500 IF NOT EQUAL    * Get next description number 
.
          DISPLAY   *P20:YVAL,PCPDDESC       * Description
.
          ADD       ONE,YVAL
          COMPARE   TWENTY2,YVAL             * Reached bottom of screen?
          GOTO      INTE3000 IF LESS
.
          MOVE      TEN3,YVAL
          CALL      BOTM0000
          BRANCH    FLAG3,INTE4000           * Next screen?
          GOTO      INTE9999                 * No
.
INTE4000  DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,":"
          GOTO      INTE3000
.
INTE4500  DISPLAY   *P25:YVAL,"Frequency : ",PCINFREQ       * Frequency  
          MOVE      SP1,PCFAONCE
          MOVE      PCINFREQ,KEY9
          CALL      RDPCFRA1
          MATCH     ANSY,PCFAONCE
          IF        @EQUAL
            UNPACK    PCINODTE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            DISPLAY   *P50:YVAL,"Date : ",*V2LON,CPCDATE,*HOFF:
                      " Shift : ",*V2LON,PCINOSFT
          ENDIF
          ADD       ONE,YVAL
          COMPARE   TWENTY2,YVAL
          GOTO      INTE2000 IF LESS
.
          MOVE      TEN3,YVAL
          CALL      BOTM0000
          BRANCH    FLAG3,INTE5000
          GOTO      INTE9999
.
INTE5000  DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,":"
          GOTO      INTE2000
.
.         Description number is blank so get description from dsc file.
.
INTE6000  MOVE      NINE,PCDSTYPE
          MOVE      PCINCODE,PCDSCODE
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP10
          CALL      RSPCDSC1
.
INTE7000  CALL      RKPCDSC1
          BRANCH    OVRCD,INTE9000
.
          COMPARE   NINE,PCDSTYPE
          GOTO      INTE9000 IF NOT EQUAL
.
          MATCH     PCINCODE,PCDSCODE
          GOTO      INTE9000 IF NOT EQUAL
.
          DISPLAY   *P20:YVAL,PCDSDESC       * Description
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      INTE9000 IF LESS         * Reached bottom of screen?
.
          CALL      BOTM0000                 * Next screen?
          BRANCH    FLAG3,INTE8000           * Yes
          GOTO      INTE9999                 * No
.
INTE8000  MOVE      TEN3,YVAL
          DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,":"
          GOTO      INTE7000
.
INTE9000  DISPLAY   *P25:YVAL,"Frequency : ",PCINFREQ       * Frequency
          MOVE      SP1,PCFAONCE
          MOVE      PCINFREQ,KEY9
          CALL      RDPCFRA1
          MATCH     ANSY,PCFAONCE
          IF        @EQUAL
            UNPACK    PCINODTE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            DISPLAY   *P50:YVAL,"Date : ",*V2LON,CPCDATE,*HOFF:
                      " Shift : ",*V2LON,PCINOSFT
          ENDIF
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      INTE2000 IF LESS
.
          MOVE      TEN3,YVAL
          CALL      BOTM0000
          BRANCH    FLAG3,INTE9500
          GOTO      INTE9999
.
INTE9500  DISPLAY   *P1:YVAL,*EF,*V2LON,"Interventions    ",*HOFF,":"
          ADD       ONE,YVAL
          GOTO      INTE2000
.
INTE9999  RETURN
.
.**************************************************************************
.*                               EVAL0000                                 *
.*                            Display evaluations                         *
.*  Called by : ML4000                                                    *
.**************************************************************************
EVAL0000  DISPLAY   *P1:13,*EF:
                    *P3:13,*V2LON,"Date":
                    *P12:13,"Evaluation":
                    *P71:13,"Finished";
          MOVE      TEN3,YVAL                * Set Y co-ord
          MOVE      ZERO,FLAG1               * Initialise
.
.         The description is always obtained from the pds file 
.
.         Get date of evaluation and finished (Yes/No)
.
.         Unique key
.
          MOVE      COUNTER,TMP4             * Save COUNTER
.
          LOAD      PCDIUNIQ,COUNTER,UKEY1,UKEY2,UKEY3,UKEY4,UKEY5,UKEY6,UKEY7:
                                     UKEY8,UKEY9,UKEY10,UKEY11,UKEY12,UKEY13 
          MOVE      PCDIUNIQ,PCEVUNIQ
          PACK      KEY26,PCEVUNIQ,Z30       * Position at end of file
.
          CALL      RSPCEVA1
.
EVAL1000  CALL      RPPCEVA1
          BRANCH    OVRCD,EVAL8999
.
          MATCH     PCEVUNIQ,PCDIUNIQ        * Have we read too far?
          GOTO      EVAL8999 IF NOT EQUAL
.
          REP       " 0",PCEVDATE
          UNPACK    PCEVDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR 
.
.         Determine if finished or not
.
          BRANCH    PCEVSTAT,EVAL1005,EVAL1015  * Yes, No
          GOTO      EVAL1016                 * Should not occur
.
EVAL1005  MOVE      "No",FINISH
          GOTO      EVAL1016
.
EVAL1015  MOVE      "Yes",FINISH
.
.         Get nurse name and class
.
EVAL1016  MOVE      PCEVNURS,PCNUCODE
          PACK      KEY6,PCNUCODE
.
          CALL      RDPCNUR1
          BRANCH    OVRCD,EVAL2000
.
          GOTO      EVAL2001
.
EVAL2000  MOVE      SP20,PCNUNAME            * Set to blanks
          MOVE      SP3,PCNUCLSS
.
EVAL2001  ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      EVAL2003 IF LESS
.
          CALL      BOTB0000
          BRANCH    FLAG3,EVAL2002
          GOTO      EVAL9999
.
EVAL2002  MOVE      TEN4,YVAL
          DISPLAY   *P1:YVAL,*EF
. 
EVAL2003  DISPLAY   *P1:YVAL,DATE,"  (",PCEVTIME,")":           * Date & time
                    *P25:YVAL,PCNUNAME,SP1,PCNUCLSS:      * Nurse name & class
                    *P74:YVAL,FINISH         * Evaluation status
.
.         Get description
.
.         Admission number
.
EVAL2005  MOVE      TMP4,COUNTER
.
          LOAD      PCDIADMN,COUNTER,ADMI1,ADMI2,ADMI3,ADMI4,ADMI5,ADMI6,ADMI7:
                                     ADMI8,ADMI9,ADMI10,ADMI11,ADMI12,ADMI13 
          
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCEVDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
.         Get description from pds file
.
          CALL      RSPCPDS1
.
EVAL2006  CALL      RKPCPDS1
          BRANCH    OVRCD,EVAL1000
.
          MATCH     PCPDDCOD,PCEVDCOD
          GOTO      EVAL1000 IF NOT EQUAL
.
          COMPARE     PCPDADMN,PCDIADMN
          GOTO      EVAL1000 IF NOT EQUAL
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      EVAL3010 IF LESS
.
          CALL      BOTB0000
          BRANCH    FLAG3,EVAL3061
          GOTO      EVAL9999
.
EVAL3010  DISPLAY   *P12:YVAL,PCPDDESC       * Line description
          GOTO      EVAL2006                 * Get next description line
.
.         Put a blank line between entries
.
EVAL3050  ADD       TWO,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      EVAL1000 IF LESS
          GOTO      EVAL3060 
.
EVAL3060  CALL      BOTB0000
          BRANCH    FLAG3,EVAL3061
          GOTO      EVAL9999
. 
.         Clear screen and re-do heading.
.
EVAL3061  MOVE      TEN4,YVAL                * Set screen co-ord
          DISPLAY   *P1:YVAL,*EF,DATE,"  (",PCEVTIME,")": * Date & time
                    *P25:YVAL,PCNUNAME,SP1,PCNUCLSS:      * Nurse name & class
                    *P74:YVAL,FINISH         * Evaluation status
          ADD       ONE,YVAL
          GOTO      EVAL3010          
.
EVAL8999  DISPLAY   *P1:24,*EL;                  * Position cursor
          CALL      HITENTER
.
EVAL9000  MOVE      ONE,FLAG1
.
EVAL9999  RETURN
.
.**************************************************************************
.*                                BOTB0000                                *
.*                         Line 24 message for evaluations                *
.**************************************************************************
BOTB0000  MOVE      ZERO,FLAG3
          DISPLAY  *P1:24,"(",*V2LON,"N",*HOFF,")ext screen": 
                      " or (",*V2LON,"R",*HOFF,")eturn ? ";
.
BOTB1000  KEYIN    *P29:24,*EL,*DV,UNDLN1,*P29:24,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS
          GOTO      BOTB9999 IF EQUAL        
.
          MATCH     ANSR,ANS
          GOTO      BOTB9999 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      BOTB2000 IF EQUAL
. 
          BEEP
          GOTO      BOTB1000
.
BOTB2000  MOVE      ONE,FLAG3
.
BOTB9999  RETURN
.
.
.**************************************************************************
.*                                DIS0000                                 *
.*                               Discharge                                *
.*  Called by : ML4000                                                    *
.**************************************************************************
DIS0000   MOVE      ZERO,FLAG1
          DISPLAY   *P1:24,"Discharge (",*V2LON,"C",*HOFF,")riteria or (":
                       *V2LON,"P",*HOFF,")lanning : ";
.
DIS1000   KEYIN     *P38:24,*EL,*DV,UNDLN1,*P38:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS
          GOTO      DIS9000 IF EQUAL
.
          MATCH     ANSC,ANS
          GOTO      DIS2000 IF EQUAL
.
          MATCH     ANSP,ANS
          GOTO      DIS3000 IF EQUAL
.
          BEEP
          GOTO      DIS1000                  * Incorrect keyin 
.
.         Discharge criteria
.
DIS2000   MOVE      ONE,FLAG4 
          MOVE      ONE,PCDHTYPE
          CALL      DISC0000
          GOTO      DIS0000
.
.         Discharge planning
.
DIS3000   MOVE      TWO,FLAG4 
          MOVE      TWO,PCDHTYPE
          CALL      DISC0000
          GOTO      DIS0000
.
DIS9000   CALL      AQST0000
          MOVE      FLAG5,EXIT 
.
DIS9999   RETURN
.
.**************************************************************************
.*                               DISC0000                                 *
.*                           Discharge criteria/planning                  *
.*  Called by : ML5000                                                    *
.**************************************************************************
.
.         Admission number
.
DISC0000  DISPLAY   *P1:8,*EF
          BRANCH    FLAG4,DISC0001,DISC0002
.
DISC0001  DISPLAY   *P1:9,*V2LON,"Discharge Criteria:"
          GOTO      DISC0003
.
DISC0002  DISPLAY   *P1:9,*V2LON,"Discharge Planning:"
.
DISC0003  MOVE      AADMNO,PCDHADMN
          PACK      KEY9,PCDHADMN,PCDHTYPE
.
          CALL      RDPCDIS1                 * Get description number
          BRANCH    OVRCD,DISC9999
.
          MOVE      TEN,YVAL
.
          MOVE      AADMNO,PCPDADMN
          MOVE      PCDHDCOD,PCPDDCOD 
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20 * Get description 
.
          CALL      RSPCPDS1
.
DISC1000  CALL      RKPCPDS1
          BRANCH    OVRCD,DISC9999
.
          COMPARE   AADMNO,PCPDADMN
          GOTO      DISC9999 IF NOT EQUAL
.
          MATCH     PCDHDCOD,PCPDDCOD
          GOTO      DISC9999 IF NOT EQUAL
.
          DISPLAY   *P4:YVAL,PCPDDESC        * Description
.
          ADD       ONE,YVAL
          COMPARE   TWENTY3,YVAL
          GOTO      DISC1000 IF LESS         * Get next line of descrition
.
          CALL      BOTB0000
          BRANCH    FLAG3,DISC3000
          GOTO      DISC9999
.
DISC3000  MOVE      TEN,YVAL                 * Clear screen for next screen
          DISPLAY   *P4:YVAL,*EF
          GOTO      DISC1000
.
DISC9999  RETURN
.
.**************************************************************************
.*                               PRNT0000                                 *
.*                Print off care plans                                    *
.*  Called by : ML5000                                                    *
.**************************************************************************
PRNT0000  MOVE      ONE,PFLAG1  
          DISPLAY   *P1:24,*EL:
                    *P50:24,"*** ",*V2LON,*BLINKON,"Printing",*HOFF," ***";
          CLOCK     TIME,CTIMEIS             * Get time for HEAD132
.
          CALL      PADM0000                 * Print admission details
          CALL      ZCAR0000                 * Print care plan details
.
PRNT9999  RETURN
.
.***************************************************************************
.*                                PADM0000                                 *
.*                       Print admission details                           *
.*  Called by : PRNT0000                                                   *
.***************************************************************************
PADM0000  MOVE      ZERO,CPAGENO             * Initialize page number
          MOVE      "Admission Details",HEAD
          CALL      HEAD0000
          MOVE      NUMB,COUNTER
.
.         Get U/R number
.
          LOAD      LURNO,COUNTER,UR1,UR2,UR3,UR4,UR5,UR6,UR7,UR8,UR9,UR10,UR11:
                                  UR12,UR13,UR14,UR15,UR16
.
.         Get Admission number
.
          LOAD      AADMNO,COUNTER,AD1,AD2,AD3,AD4,AD5,AD6,AD7,AD8,AD9,AD10:
                                    AD11,AD12,AD13,AD14,AD15,AD16
.
.         Get patient's details
.
          MOVE      LURNO,PURNO
          PACK      KEY8,PURNO
          CALL      RDMAST1                  * Master file
          PACK      KEY8,AADMNO
          CALL      RDMISS1                  * Admissions file 
.
          REP       " 0",PBDATE              * Date of birth details
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY  * SRF 132428
          CALL      PACDATE
          MOVE      CPCDATE,DATE
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,ICENT
          MOVE      CYEAR,IYEAR         * Parameter for AGECHK
          MOVE      CMON,IMON           * Parameter for AGECHK
          MOVE      CDAY,IDAY           * Parameter for AGECHK
          CALL      AGECHK              * Calculate patients age
.
          CALL      ADMD0000                 * Get further details 
          REP       " 0",ADATE               * Get admission date
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          PACK      ADM,CDAY,SLASH,CMON,SLASH,CYEAR
.
.         We have the admission details so print them off
.
          PRINT     *9,"U/R Number     : ",LURNO
          PRINT     *9,"Admission No.  : ",AADMNO
          PRINT     *9,"Patient's Name : ",PSNAME,SP1,PGNAME
          PRINT     *9,"Address        : ",PADD1
          PRINT     *9,"               : ",PADD2
          PRINT     *9,"               : ",PSUBRB,SP6,PPOST
          PRINT     *9,"Date of birth  : ",DATE,SP2,"(",PSAGE,")"
          PRINT     *9,"Cntry of birth : ",PCONT,SP2,TDESCB
          PRINT     *9,"Marital status : ",PMSTAT,SP2,TDESCM
          PRINT     *9,"Religion       : ",PREG,SP2,TDESC
          PRINT     *N,*9,"Admission Date : ",ADM
          PRINT     *9,"Admission Time : ",ATIME
          PRINT     *9,"Ward           : ",AWARD
          PRINT     *9,"Doctor         : ",ADOCTA
          PRINT     *9,"Adm. Diagnosis : ",ADIAG1
          PRINT     *N 
          ADD       TEN9,CLNO
.
PADM9999  RETURN
.
.***************************************************************************
.*                               ZCARA0000                                 *
.*                      Print off care plans                               *
.***************************************************************************
ZCAR0000  MOVE      ONE,COUNTB
          MOVE      ONE,COUNTC
          PRINT     *1,"---------------------------  Care Plans  ----------":
                       "-----------------" 
          ADD       ONE,CLNO
.
ZCAR1000  CALL      GDAT0000                 * Get care plan date and nurse
          BRANCH    FLAG7,ZCAR9000
          CALL      GNUR0000                 * Get nursing diagnosis
          CALL      GDCT0000                 * Get diagnosis category
          CALL      GREL0000                 * Get related factors
          CALL      GCHR0000                 * Get characteristics
          CALL      GOUT0000                 * Get desired outcomes
          CALL      GEIN0000                 * Get interventions
          CALL      GEVL0000                 * Get evaluations
.
          ADD       ONE,COUNTB
          GOTO      ZCAR1000
.
ZCAR9000  PRINT     *N,"*** End of Report ***"
.
ZCAR9999  RETURN
.
.**************************************************************************
.*                               GDAT0000                                 *
.*                      Get care plan date, time  and nurse               *
.**************************************************************************
GDAT0000
.         We have to read the diagnosis file and for each care plan found
.         we then have print the details for that particular care plan
.
          CALL      GZZZ0000
          BRANCH    FLAG7,GDAT9999
.
          REP       " 0",PCDIDATE
          UNPACK    PCDIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      ADM,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
.         We have the date, now get the nurse and the nurse code
.
          MOVE      PCDINURS,PCNUCODE
          PACK      KEY6,PCNUCODE
.
          CALL      RDPCNUR1
          BRANCH    OVRCD,GDAT1050
          GOTO      GDAT1060
.
GDAT1050  MOVE      SP20,PCNUNAME
          MOVE      SP10,PCNUCLSS
.
.         Now print off the details - date, time, nurse and class
.
GDAT1060  PRINT    *N,*1,ADM,SP1,"(",PCDITIME,")",SP2,PCNUNAME,*45,PCNUCLSS
          ADD      TWO,CLNO
          CALL     LINE0000                  * Increment line number
.
GDAT9999  RETURN
.
.**************************************************************************
.*                               GZZZ0000                                 *
.*                      Loop through diagnosis file                       *
.**************************************************************************
.
.         This routine just loops back to the correct place in the dia file
.
GZZZ0000  MOVE      ZERO,FLAG7
.
.         Read the diagnosis file in reverse order so that the care plans
.         are printed off with the most recent one first
.
          MOVE      COUNTB,COUNTC
          MOVE      AADMNO,PCDIADMN
          PACK      KEY33,PCDIADMN,Z30
.
          CALL      RSPCDIA1
.
GZZZ1000  CALL      RPPCDIA1                 * READKP
          BRANCH    OVRCD,GZZZ9000           * EOF
.
          COMPARE   PCDIADMN,AADMNO         * Have we read too far?
          GOTO      GZZZ9000 IF NOT EQUAL
.
          SUB       ONE,COUNTC
          COMPARE   ZERO,COUNTC
          GOTO      GZZZ1000 IF NOT EQUAL
.
          GOTO      GZZZ9999
.
GZZZ9000  MOVE      ONE,FLAG7
.
GZZZ9999  RETURN
.
.**************************************************************************
.*                               GNUR0000                                 *
.*                      Get nursing diagnosis                             *
.**************************************************************************
GNUR0000  CALL      GZZZ0000
          BRANCH    FLAG7,GNUR9999           * EOF reached in dia file
.
.         Get nursing diagnosis description
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
          ENDSET    PCDIDCOD
          APPEND    SP4,PCDIDCOD
          RESET     PCDIDCOD
.
          PRINT     *1,"Nursing Diagnosis:";
.
          MATCH     SP4,PCDIDCOD
          GOTO      GNUR3000 IF EQUAL        
.
          MOVE      AADMNO,PCPDADMN         * Admission number
          MOVE      PCDIDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20 
.
          CALL      RSPCPDS1
.
GNUR1000  CALL      RKPCPDS1
          BRANCH    OVRCD,GNUR9999
.
          COMPARE   AADMNO,PCPDADMN
          GOTO      GNUR9999 IF NOT EQUAL
.
          MATCH     PCDIDCOD,PCPDDCOD
          GOTO      GNUR9999 IF NOT EQUAL
.
          PRINT     *20,PCDSDESC
          CALL      LINE0000
          MOVE      PCPDDESC,DESC1
          GOTO      GNUR1000
.
GNUR3000  MOVE      SIX,PCDSTYPE             * Nursing diagnosis
          MOVE      PCDIDIAG,PCDSCODE        * Description code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
.
          CALL      RSPCDSC1
.
GNUR3100  CALL      RKPCDSC1
          BRANCH    OVRCD,GNUR9999           * Not on file
.
          COMPARE   SIX,PCDSTYPE
          GOTO      GNUR9999 IF NOT EQUAL
.
          MATCH     PCDIDIAG,PCDSCODE
          GOTO      GNUR9999 IF NOT EQUAL
.
GNUR3500  PRINT     *20,PCDSDESC  
          CALL      LINE0000
          MOVE      PCDSDESC,DESC1
          GOTO      GNUR3100
.
GNUR9999  RETURN
.
.**************************************************************************
.*                               GDCT0000                                 *
.*                      Get diagnosis category                            *
.**************************************************************************
GDCT0000  MOVE      SP20,PCDIAGCT
          PRINT     *1,"Diagns. Category :";
.
          PACK      KEY13,SP1,TWO,PCDICLIN,SP1,ONE  * want line one of type two
          CALL      RDPCDSC1
          BRANCH    OVRCD,GDCT8000
.
          MOVE      PCDSDESC,PCDIAGCT
.
GDCT8000  PRINT     *20,PCDIAGCT
          CALL      LINE0000
.
GDCT9999  RETURN
.
.**************************************************************************
.*                               GREL0000                                 *
.*                      Get related factors                               *
.**************************************************************************
GREL0000  BRANCH    PCCNUREL,GREL0050       * using related factors
          GOTO      GREL9999
.
GREL0050  CALL      GZZZ0000
          BRANCH    FLAG7,GREL9999           * EOF reached in dia file
          MOVE      "Related Factors  : ",HEADER19
          MOVE      ZERO,PFLAG2               * Set print flag
.
          PRINT     HEADER19;
.
          PACK      KEY19,PCDIUNIQ,SP30
          CALL      RSPCREL1
GREL0100  CALL      RKPCREL1
          BRANCH    OVRCD,GREL9999
.
          MATCH     PCDIUNIQ,PCREUNIQ
          GOTO      GREL9999 IF NOT EQUAL
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
          PACK      PCREDCOD,PCREDCOD,SP4
.
          MATCH     SP4,PCREDCOD
          GOTO      GREL3000 IF EQUAL        
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCREDCOD,PCPDDCOD
.
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
          CALL      RSPCPDS1
GREL1000  CALL      RKPCPDS1
          BRANCH    OVRCD,GREL0100
.
          COMPARE   PCDIADMN,PCPDADMN
          GOTO      GREL0100 IF NOT EQUAL
.
          MATCH     PCPDDCOD,PCREDCOD
          GOTO      GREL0100 IF NOT EQUAL
.
          PRINT     *20,PCPDDESC
          MOVE      ONE,PFLAG2              * We have printed something
          CALL      LINE0000
          GOTO      GREL1000
.
GREL3000  MOVE      EIGHT,PCDSTYPE        
          MOVE      PCREFACT,PCDSCODE        * Description code
.
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
GREL3050  CALL      RKPCDSC1
          BRANCH    OVRCD,GREL0100           * Not on file
.
          COMPARE   EIGHT,PCDSTYPE
          GOTO      GREL0100 IF NOT EQUAL
.
          MATCH     PCREFACT,PCDSCODE
          GOTO      GREL0100 IF NOT EQUAL
.
          PRINT     *20,PCDSDESC
          MOVE      ONE,PFLAG2              * We have printed something
          CALL      LINE0000
          GOTO      GREL3050               
.
GREL9999  RETURN
.
.**************************************************************************
.*                               GCHR0000                                 *
.*                      Get characteristics                               *
.**************************************************************************
GCHR0000  BRANCH    PCCNUDEF,GCHR0005    * using definig characteristics ?
          GOTO      GCHR9999
.
GCHR0005  MOVE      "Characteristics  : ",HEADER19
.
.         Check if description number is blank.  If it is then get the 
.         description from the PCPDSCFD file else get it from the PCPPDSFD file
.
          ENDSET    PCDIDCOD
          APPEND    SP4,PCDIDCOD
          RESET     PCDIDCOD
.
.         If we haven't printed anything in related factors, then skip down to
.         the next line.
. 
          BRANCH    PFLAG2,GCHR0010          
          PRINT     *N
          ADD       TWO,CLNO
.
GCHR0010  PRINT     HEADER19;
          MOVE      ZERO,PFLAG2
.
          MATCH     SP4,PCDIDCOD
          GOTO      GCHR3000 IF EQUAL        
.
          MOVE      PCDIUNIQ,PCDEUNIQ
          MOVE      PCDIDIAG,PCDECHAR
          PACK      KEY19,PCDEUNIQ,PCDECHAR
.
          CALL      RDPCDEF1
          BRANCH    OVRCD,GCHR9999
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCREDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
          CALL      RSPCPDS1
.
GCHR1000  CALL      RKPCPDS1
          BRANCH    OVRCD,GCHR9999
.
          COMPARE     PCDIADMN,PCPDADMN
          GOTO      GCHR9999 IF NOT EQUAL
.
          MATCH   PCPDDCOD,PCREDCOD
          GOTO      GCHR9999 IF NOT EQUAL
.
          PRINT     *20,PCPDDESC
          MOVE      ZERO,PFLAG2              * We have printed something
          CALL      LINE0000
          GOTO      GCHR1000
.
GCHR3000  MOVE      PCDIUNIQ,PCDEUNIQ
          PACK      KEY19,PCDEUNIQ,SP20
          CALL      RSPCDEF1
.
GCHR3010  CALL      RKPCDEF1
          BRANCH    OVRCD,GCHR9999
.
          MATCH     PCDEUNIQ,PCDIUNIQ
          GOTO      GCHR9999 IF NOT EQUAL
.
.         Now look up desc. in PCPDSCFD file
. 
          MOVE      TEN,PCDSTYPE        
          MOVE      PCDECHAR,PCDSCODE        * Description code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
.
GCHR3050  CALL      RKPCDSC1
.
          BRANCH    OVRCD,GCHR3010           * Not on file
.
          COMPARE   TEN,PCDSTYPE
          GOTO      GCHR3010 IF NOT EQUAL
.
          MATCH     PCDECHAR,PCDSCODE
          GOTO      GCHR3010 IF NOT EQUAL
.
          PRINT     *20,PCDSDESC
          MOVE      ZERO,PFLAG2              * We have printed something
          CALL      LINE0000
          GOTO      GCHR3050
.
GCHR9999  RETURN
.
.**************************************************************************
.*                               GOUT0000                                 *
.*                      Get desired outcomes                              *
.**************************************************************************
GOUT0000
          MOVE      "Desired Outcomes : ",HEADER19
.
          MOVE      PCDIUNIQ,PCOTUNIQ
          PACK      KEY19,PCOTUNIQ,SP20
          CALL      RSPCOUT1
.
GOUT0500  CALL      RKPCOUT1
          BRANCH    OVRCD,GOUT9999
.
          MATCH     PCOTUNIQ,PCDIUNIQ
          GOTO      GOUT9999 IF NOT EQUAL
.
          MATCH     SP4,PCOTDCOD
          GOTO      GOUT3000 IF EQUAL 

          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCOTDCOD,PCPDDCOD
.
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
          CALL      RSPCPDS1
GOUT1000  CALL      RKPCPDS1
          BRANCH    OVRCD,GOUT4000
.
          COMPARE   PCDIADMN,PCPDADMN
          GOTO      GOUT4000 IF NOT EQUAL
.
          MATCH     PCPDDCOD,PCOTDCOD
          GOTO      GOUT4000 IF NOT EQUAL
.
          PRINT     *20,PCPDDESC
          CALL      LINE0000
          GOTO      GOUT1000
.
.         Now look up desc. in PCPDSCFD file
. 
GOUT3000  MOVE      SEVEN,PCDSTYPE        
          MOVE      PCOTCODE,PCDSCODE        * Description code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
.
          CALL      RSPCDSC1
.
GOUT3100  CALL      RKPCDSC1
          BRANCH    OVRCD,GOUT4000           * Not on file
.
          COMPARE   PCDSTYPE,SEVEN
          GOTO      GOUT4000 IF NOT EQUAL
.
          MATCH     PCOTCODE,PCDSCODE
          GOTO      GOUT4000 IF NOT EQUAL
.
          PRINT     HEADER19,PCDSDESC
          CALL      LINE0000
          MOVE      SP20,HEADER19
          GOTO      GOUT3100
.
GOUT4000  BRANCH    PCOTTYPE,GOUT5205,GOUT5206,GOUT5207,GOUT5208
.
          PRINT     *25,"No Target Date"
          GOTO      GOUT9000
.
GOUT5205  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PRINT     *25,"By ",DATE
          GOTO      GOUT9000
.
GOUT5206  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PRINT     *25,"By ",PCOTDYWK," days (",DATE,")"
          GOTO      GOUT9000
.
GOUT5207  UNPACK    PCOTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PRINT     *25,"By ",PCOTDYWK," weeks (",DATE,")"
          GOTO      GOUT9000
.
GOUT5208  PRINT     *25,"At all times"
.
GOUT9000  CALL      LINE0000
          GOTO      GOUT0500
.
GOUT9999  RETURN
.
.**************************************************************************
.*                               GEIN0000                                 *
.*                      Get interventions                                 *
.**************************************************************************
GEIN0000  MOVE      "Interventions    : ",HEADER19
.
.         Loop through the interventions file
.
          MOVE      PCDIUNIQ,PCINUNIQ        * Unique key
          PACK      KEY19,PCINUNIQ,SP20
          CALL      RSPCINT1
.
GEIN1000  CALL      RKPCINT1
          BRANCH    OVRCD,GEIN9999 
.
          MATCH     PCDIUNIQ,PCINUNIQ
          GOTO      GEIN9999 IF NOT EQUAL
.
.         Now check if the description number is blank or not.  If it is 
.         blank then get the intervention description from the DSC file else
.         get it from the PDS file.
.
          PACK      PCINDCOD,PCINDCOD,SP4
.
          MATCH     SP4,PCINDCOD             * Description no.
          GOTO      GEIN5000 IF EQUAL
.
.         Get description from the PDS file
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCINDCOD,PCPDDCOD
.
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
          CALL      RSPCPDS1
GEIN2000  CALL      RKPCPDS1
          BRANCH    OVRCD,GEIN3000
.
          COMPARE   PCDIADMN,PCPDADMN
          GOTO      GEIN3000 IF NOT EQUAL
.
          MATCH     PCINDCOD,PCPDDCOD
          GOTO      GEIN3000 IF NOT EQUAL
.
          PRINT     HEADER19,PCPDDESC
          CALL      LINE0000
          MOVE      SP20,HEADER19
          GOTO      GEIN2000
.
GEIN3000  PRINT     *24,"Frequency : ",PCINFREQ
          CALL      LINE0000
          GOTO      GEIN1000
.
.         Get description from the DSC file
.
GEIN5000  MOVE      NINE,PCDSTYPE            * Interventions
          MOVE      PCINCODE,PCDSCODE        * Intervention code
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP20
          CALL      RSPCDSC1
.
GEIN5100  CALL      RKPCDSC1
          BRANCH    OVRCD,GEIN6000
.
          COMPARE     NINE,PCDSTYPE
          GOTO      GEIN6000 IF NOT EQUAL 
.
          MATCH     PCINCODE,PCDSCODE
          GOTO      GEIN6000 IF NOT EQUAL 
.
          PRINT     HEADER19,PCDSDESC
          CALL      LINE0000
          MOVE      SP20,HEADER19
          GOTO      GEIN5100
.
GEIN6000  PRINT     *24,"Frequency : ",PCINFREQ
          CALL      LINE0000
          GOTO      GEIN1000
.
GEIN9999  RETURN
.
.**************************************************************************
.*                               GEVL0000                                 *
.*                            Get evaluations                             *
.**************************************************************************
GEVL0000  MOVE      "Evaluations     : ",HEADER19
.
          MOVE      PCDIUNIQ,PCEVUNIQ
          PACK      KEY26,PCEVUNIQ,Z30       * Position at end of file
.
          CALL      RSPCEVA1
.
GEVL1000  CALL      RPPCEVA1
          BRANCH    OVRCD,GEVL9999
.
          MATCH     PCEVUNIQ,PCDIUNIQ        * Have we read too far?
          GOTO      GEVL9999 IF NOT EQUAL
.
          REP       " 0",PCEVDATE
          UNPACK    PCEVDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR 
.
.         Determine if evaluation finished or not
.
          BRANCH    PCEVSTAT,GEVL1005,GEVL1015  * Yes, No
          GOTO      GEVL1016                 * Should not occur
.
GEVL1005  MOVE      "No",FINISH
          GOTO      GEVL1016
.
GEVL1015  MOVE      "Yes",FINISH
.
.         Get nurse name and class
.
GEVL1016  MOVE      PCEVNURS,PCNUCODE
          PACK      KEY6,PCNUCODE
.
          CALL      RDPCNUR1
          BRANCH    OVRCD,GEVL2000
          GOTO      GEVL2001
.
GEVL2000  MOVE      SP20,PCNUNAME            * Set to blanks
          MOVE      SP3,PCNUCLSS
.
GEVL2001  CALL      LINE0000
          PRINT     HEADER19,DATE," (",PCEVTIME,")",*43,PCNUNAME,SP1,PCNUCLSS:
                    *67,"Finished : ",FINISH
.
.         Admission number
.
          MOVE      PCDIADMN,PCPDADMN
          MOVE      PCEVDCOD,PCPDDCOD
          PACK      KEY14,PCPDADMN,PCPDDCOD,SP20
.
.         Get description from pds file
.
          CALL      RSPCPDS1
GEVL2006  CALL      RKPCPDS1
          BRANCH    OVRCD,GEVL1000
.
          MATCH     PCPDDCOD,PCEVDCOD
          GOTO      GEVL1000 IF NOT EQUAL
.
          COMPARE   PCPDADMN,PCDIADMN
          GOTO      GEVL1000 IF NOT EQUAL
.
GEVL3010  CALL      LINE0000
          PRINT     *20,PCPDDESC             * Line description
          GOTO      GEVL2006                 * Get next description line
.
GEVL9999  RETURN
+
.**************************************************************************
.*                                  LINE0000                              *
.*                        Check if we have reached the end of the page    *
.*  Called by : PCAR0000                                                  *
.**************************************************************************
LINE0000  ADD       ONE,CLNO
          COMPARE   "50",CLNO
          GOTO      LINE9999 IF LESS 
.
          MOVE      "Care Plans",HEAD
          CALL      HEAD0000
.
LINE9999  RETURN
.
.****************************************************************************
.*                                HEAD0000                                  *
.*                 Print starting page header                               *
.* Called by : PRNT0000                                                     *
.****************************************************************************
HEAD0000  MOVE      ONE,CNOUNDLN            * No underlines
          CALL      HEAD80                  * Print 1st three lines
          PRINT     *1,DASH20,SP1,HEAD,SP1,DASH20,*N
          ADD       TWO,CLNO                * Set line counter 
.
.         If PFLAG1=0 then we need to print a few more lines for the header
.
          BRANCH    PFLAG1,HEAD9999
.
          PRINT     *N,*1,ADM,SP9,PCNUNAME,SP1,PCNUCLSS
          PRINT     *N,*1,"Nursing Diagnosis: ",DESC1
........   PRINT     *N,*1,"Diagn. Category  : ",
.
          ADD       FOUR,CLNO               * Set line counter 
.
HEAD9999  RETURN
.
.
.---------------------------------------------------------------------------
          INC       STD001IO
          INC       CALCAGE
          INC       PATALERT
          INC       PATALRIO/INC             * Medical Alerts
          INC       PATHEAD
          INC       PATCODIO/INC             * Codes table file
          INC       PATDO1IO/INC             * Patient doctors file
          INC       PATDSCIO/INC             * Discharges file
          INC       PATLOCIO/INC             * In-patient location
          INC       PATMA1IO/INC             * Patient master file
          INC       PATMI1IO/INC             * Patient admissions 
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC             * Patient admissions 
          INC       PATNIDIO/INC             * National id file
          INC       PATNOBIO/INC             * No bed file
          INC       PATNURIO/INC             * Nursing station
          INC       PATTRNIO/INC             * Patient bed transfer
          INC       PATWR1IO/INC             * Ward/Bed file
          INC       PATTERIO/INC             * Patient terminal location file
          INC       PCPDEFIO/INC             * Defining characteristics
          INC       PCPDIAIO/INC             * Nursing diagnosis
          INC       PCPDISIO/INC             * Discharges 
          INC       PCPDSCIO/INC             * Description
          INC       PCPEVAIO/INC             * Evaluation file
          INC       PCPFRAIO/INC             * Frequency header file
          INC       PCPINTIO/INC             * Interventions file
          INC       PCPNURIO/INC             * Nurse file
          INC       PCPOUTIO/INC             * Outcome file
          INC       PCPPDSIO/INC             * Patient Descriptions
          INC       PCPRELIO/INC             * Related factors
          INC       PMIHEAD
          INC       AGECHK
..............................................................................
