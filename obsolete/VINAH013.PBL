.*****************************************************************************
.* System    :   Allied Health                                               *
.* Program   :   VINAH013                                                    *
.* Desc      :   VINAH13 Extraction Program                                  *
.*****************************************************************************
.* Date      :   15/03/2017                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will allow the user to select a date range     *
.*               and extract VINAH data for the period into a file for DHS   *
.*               submission.  Only messages relating to episodes and         *
.*               contacts will be sent.  The current extract conforms to     *
.*               the VINAH13 requirements for DHS reporting.                 *
.*                                                                           *
.* Definitions : REFERRAL-IN = VINAH Master Referral (allrefaf.alreuyn4 = 1) *
.*               EPISODE = VINAH Internal Referral (allrefaf.alreuyn4 = 0)   *
.*               CONTACT = VINAH Encounter (related directly to an EPISODE)  *
.*               REFERRAL-OUT = VINAH Referral Destination                   *
.*                                 (allrhlaf.alrhtype = 03)                  *
.*                                                                           *
.* Mods      :                                                               *
.*        V10.12.01 13/06/2018 Steve Armstrong   TSK 0854544                 *
.*                  Fixed sending of PV2 segment for PPP messages where      *
.*                  NDIS flag is populated but no other PV2 fields.          *
.*****************************************************************************
.*        V10.11.06 06/12/2017 Steve Armstrong   TSK 0846679                 *
.*                  Mods to check for back to back Episode and Referral-In   *
.*                  change records where the audit date/time and U/R are the *
.*                  same and where the visits are linked referrals.  For any *
.*                  matching cases where the Episode visit number is greater *
.*                  than the Referral-In visit number, the date/time of the  *
.*                  Referral-In record being loaded into allhdtaf is being   *
.*                  changed to 1 sec before the Episode date/time.  This     *
.*                  will result in the Referral-In being sent before the     *
.*                  Episode in the VINAH Extract file. When an Episode is    *
.*                  accepted via the front-end application, both the Episode *
.*                  and the Referral-In are updated at the same time and     *
.*                  previously, the Episode would have been sent first       *
.*                  causing an E412 error because the Referral-In hadn't     *
.*                  been accepted when the Episode was processed.            *
.*        V10.11.05 25/09/2017 Steve Armstrong   TSK 0845868                 *
.*                  Mods to ignore Referral In Received Date when validating *
.*                  NDIS Contact Account Class (PV1.20).                     *
.*        V10.11.04 28/08/2017 Steve Armstrong   TSK 0844521                 *
.*                  Mods to load current Referral In data fields when        *
.*                  creating a PPP-PCB message in VA030000.                  *
.*        V10.11.03 27/07/2017 Steve Armstrong   TSK 0842920                 *
.*                  Mods to check Referral In Received Date when using       *
.*                  Triage Status to determine Referral In Outcome.  Where   *
.*                  the Program Type is SOP, values "010" and "020" are only *
.*                  valid after 01/07/2015, otherwise "1" needs to be used.  *
.*        V10.11.02 20/07/2017 Steve Armstrong   TSK 0842314                 *
.*                  Mods to use Triage status where populated, regardless of *
.*                  of Referral In Received Date.                            *
.*        V10.11.01 14/07/2017 Steve Armstrong   TSK 0842166                 *
.*                  Mods to use STARTDAT (Episode Start Date) instead of     *
.*                  REFIRDAT (Referral In Received Date) when loading        *
.*                  Episode Advance Care Plan Alert (PTH.5).                 *
.*****************************************************************************
.*        V10.10.05 12/07/2017 Steve Armstrong   TSK 0842030                 *
.*                  Mods to only use Triage Status where Referral In         *
.*                  Received Date is on or after 01/07/2017.                 *
.*        V10.10.04 12/07/2017 Steve Armstrong   TSK 0841900                 *
.*                  Mods to use Triage Status for Episode Date (PV1.44)      *
.*                  where the Department is set to use Triage Status.        *
.*        V10.10.03 11/07/2017 Steve Armstrong   TSK 0841900                 *
.*                  Mods to use Triage Status for Referral Outcome (RF1.1)   *
.*                  where the Department is set to use Triage Status.        *
.*        V10.10.02 07/07/2017 Steve Armstrong   TSK 0841713                 *
.*                  Reinstated code for Barthel Assessment Date/Time (OBX.14)*
.*                  for TCP program type.                                    *
.*        V10.10.01 30/06/2017 Steve Armstrong   TSK 0841303                 *
.*                  Updated validation for Referral In Service Type (PRD.1)  *
.*                  and Referral Out Service Type (PRD.1) codes in the 600   *
.*                  range.                                                   *
.*                  30/06/2017 Steve Armstrong   TSK 0841306                 *
.*                  Mods to write Referral End Reson (RF1.10) for RRI        *
.*                  messages (was loading but not writing).                  *
.*        V10.10.00 21/03/2017 Steve Armstrong   TSK 0832066                 *
.*                  Mods to only use Concession Card file for DVA data       *
.*                  instead of PREPAT.                                       *
.*                  15/03/2016 Steve Armstrong   CAR 0833052                 *
.*                  2017/2018 Statutory Health Department changes.           *
.*                  Program created from a copy of VINAH012 (V10.00.00)      *
.*                  and modified accordingly.                                *
.*                  - Changed validation of extract date range from          *
.*                    2016/2017 to 2017/2018.                                *
.*                  - Changed population of FHS.5 from VINAH12 to VINAH13.   *
.*                  - Mods to handle NDIS Contact Account Class              *
.*                    (PV1.20 = "ND"), but only where the referral is on or  *
.*                    after 1/07/2017.                                       *
.*                  - Mods to populate PV2.18 with "ND" where the Episode    *
.*                    Special Purpose Flag (NDIS Flag) is set to "1".        *
.*                  - Mods to set Medicare Number (PID.3) to "N-E" for       *
.*                    Hospital Exempt (ME) and Asylum Seeker (MF) Account    *
.*                    Classes (PV1.20).                                      *
.*                  - Added population of Advance Care Plan Alert (PTH.5     *
.*                    990050) for SOP programs, but only where the episode   *
.*                    is on or after 1/07/2017.                              *
.*                  - Removed population of Episode Health Conditions        *
.*                    (OBX.3 990080) for HBPCCT and MH program types, but    *
.*                    only where the episode is on or after 1/07/2017.       *
.*                  - Added population of Episode Health Conditions          *
.*                    (OBX.3 990080) for SOP program types, but only where   *
.*                    the episode is on or after 1/07/2017.                  *
.*                  - Added new validation that Client Present Status        *
.*                    (PV2.7) must be "31" (not present) when Contact        *
.*                    Session Type (PR1.6) is "3" (Indirect contact) and     *
.*                    Contact Delivery Setting (PV1.3) is "98" - Palliative  *
.*                    Care only.                                             *
.*                  - Mods to determine Referral-In Outcome based on triage  *
.*                    code where populated, otherwise default back to using  *
.*                    Referral Status and Priority, but only if Referral was *
.*                    prior to 01/07/2017.                                   *
.*                  - Mods to only populate Episode Start Date (PV1.44)      *
.*                    where the Referral In has been accepted, but only for  *
.*                    Episodes on or after 1/07/2017.                        *
.*                  - Added new Referral End Reason field (RF1.10).          *
.*                  20/01/2017 Steve Armstrong   TSK 0829008                 *
.*                  Mods to not validate PRD.1 for REF^I14 messages.         *
.*                  13/01/2017 Steve Armstrong   TSK 0831918                 *
.*                  Mods to fix the checking of merged U/R's in PREV0000.    *
.***************************************************************************** 
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ALLBIAFD/INC
          INC       ALLCONFD/INC
          INC       ALLDEPFD/INC
          INC       ALLDIAFD/INC
          INC       ALLENCFD/INC
          INC       ALLHBTFD/INC
          INC       ALLHDTFD/INC
          INC       ALLHHDFD/INC
          INC       ALLITMFD/INC
          INC       ALLLNKFD/INC
          INC       ALLPRRFD/INC
          INC       ALLREFFD/INC
          INC       ALLRHLFD/INC
          INC       ALLRLNFD/INC
          INC       ALLRNWFD/INC
          INC       ALLSASFD/INC
          INC       ALLSEDFD/INC
          INC       ALLSERFD/INC
          INC       ALLVMPFD/INC
          INC       IBACONFD/INC
          INC       IBAPOSFD/INC
          INC       IBASEQFD/INC
          INC       OUTBOAFD/INC
          INC       OUTCANFD/INC
          INC       OUTSITFD/INC
          INC       PATCALAG/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDSCFD/INC
          INC       PATHSPFD/INC
          INC       PATLINFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATMRGFD/INC
          INC       PATWC1FD/INC
          INC       PATWMAFD/INC
          INC       PMSCCDFD/INC
          INC       PMSDAUFD/INC
          INC       PMSHCPFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PRIITMFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
          INC       WEBSECFD/INC
.
.         Temporary File Definitions
.         -------------------------
.
.         Temporary File A
.
VINTEMP1  IFILE SQL, FIXED=388, KEY="U1-8,49-50,9-22,23-30,31-38,39-39,40-40"
VINTEMP2  IFILE SQL, FIXED=388, KEY="U1-8,49-50,23-30,31-38,42-48,9-22,39-39,40-40"
VINTEMP3  IFILE SQL, FIXED=388, KEY="U1-8,49-50,23-30,31-38,9-22,42-48,39-39,40-40"
.
.NAME     TYPE    LENGTH  PHYSICAL  START  DESCRIPTION
.----     ----    ------  --------  -----  -----------
MISCURNO  DIM       8        8         1   Patient Identifier (alreurno)
MISCDTTM  DIM       14       14        9   Date/Time (ccyymmddhhmmss)
MISCVISN  DIM       8        8        23   Episode Identifier
.                                             (alrevisn/alenvisn)
MISCCONT  DIM       8        8        31   Contact Identifier (alenenct)
DMSCRTYP  DIM       1        1        39   Record Type
.                                                  0 = Referral In
.                                                  1 = Episode
.                                                  2 = Contact
.                                                  3 = Merge
.                                                  4 = PMI (A04 or A08)
.                                                  5 = Referral Out
MISCACTN  DIM       1        1        40   Action Type
.                                                  A = Addition
.                                                  C = Change
.                                                  D = Delete
MISCVFLG  DIM       1        1        41   VINAH Referral Flag (alreuyn4)
.                                                  0 = Internal Referral
.                                                  1 = Referral In
MISCMTYP  DIM       7        7        42   HL7 Message Type (eg ADT-A03)
DMSCSTAT  DIM       2        2        49   Record Status
.                                                  0 = Waiting
.                                                  1 = Ignore (printed error)
.                                                  2 = Ignore (non VINAH record)
.                                                  3 = Ignore (not required)
.                                                  4 = Ignore (later message)
.                                                  5 = Ignore (assoc. deletion)
MISCSRCE  FORM      1        2        51   Record Source
.                                                  0 = LDALLHDT
.                                                  1 = VINAH012
MISCDEPT  DIM       3        3        53   Department (alldepaf)
MISCPRGM  FORM      2        2        56   Program Type
.                                                  1 = HARP
.                                                  2 = HBPCCT
.                                                  3 = Medi-Hotel
.                                                  4 = Palliative Care
.                                                  5 = Post Acute Care
.                                                  6 = RIR
.                                                  7 = SACS
.                                                  8 = Specialist O/P Clinic
.                                                  9 = TCP
MISCWEBU  DIM       10       10       58   Web User Id
.
.
.                                          Patient Related Fields
.                                          ----------------------
PATNCRST  DIM       3        3        68   Patient Carer Residency Status
.                                             (alreuc35 Cat lI)
PATNCAVL  DIM       3        3        71   Patient Carer Availability
.                                             (alreuc36 Cat lJ)
PATNLARR  DIM       3        3        74   Patient Living Arrangement
.                                             (alreuc38 Cat lL)
PATNUACC  DIM       3        3        77   Patient Usual Accommodation Type
.                                             (alreuc39 Cat lM)
PATNMREL  DIM       3        3        80   Patient Main Carer's Relationship
.                                          to Patient (alreuc31 - Cat lE)
PATNDTHP  DIM       3        3        83   Patient Death Place
.                                             (alreuc10 - Cat lj)
.PATNOURN DIM       8        8        86   Old U/R Number (A40 only)
.
.
.                                          Referral In Related Fields
.                                          --------------------------
REFIRDAT  DIM       8        8        94   Referral In Received Date
.                                             (alredrec - ccyymmdd)
REFIOTRR  DIM       3        3       102   Referral In Outcome Rejection Reason
.                                             (alresrej - Cat rr)
REFIOTRC  DIM       3        3       105   Referral In Outcome Cancellation
.                                          Reason (alrercan - Cat LN)
REFIOUTC  DIM       1        1       108   Referral In Outcome (alrestat)
.                                                  0 = On Waiting List
.                                                  1 = Active
.                                                  2 = Closed
.                                                  3 = Inactive
.                                                  4 = Cancelled
.                                                  5 = Rejected
REFICLUC  DIM       3        3       109   Referral In Clinical Urgency Category
.                                             (alreprty - Cat PR)
REFICRDT  DIM       8        8       112   Referral In Clinical Referral Date
.                                             (alreudt3 - ccyymmdd)
REFIRADT  DIM       8        8       120   Referral In Receipt Acknowledgement
.                                          Date (alreudt5)
REFILINK  DIM       8        8       128   Linked Referral Visit Number
REFITRGS  DIM       3        3       136   Triage Status (alretrgs - Cat ts)
.
.
.                                          Episode Related Fields
.                                          ----------------------
EPISTRGD  DIM       8        8       139   Triage Date
.                                             (alretrgd - ccyymmdd)
EPISSDAT  DIM       8        8       147   Episode Start Date
.                                             (alreudt1, alreudt5 or alredrec)
EPISEDAT  DIM       8        8       155   Episode End Date
.                                             (alredclo - ccyymmdd)
EPISFCFL  DIM       1        1       163   Episode First Consultancy Flag
.                                            (alreuyn5 - 0=No,1=Yes)
EPISCPPT  DIM       3        3       164   Episode Completion of Proposed
.                                          Program of Treatment
.                                            (alreuc33 Cat lG)
EPISIODT  DIM       8        8       167   Episode Impairment Onset Date
.                                             (alreeiod - ccyymmdd)
.                                             (No Longer in use)
EPISACDD  DIM       8        8       175   Episode Advanced Care Plan Documented
.                                          Date (alreacdd - ccyymmdd)
EPISCPDD  DIM       8        8       183   Episode Care Plan Documented Date
.                                             (alreudt4 - ccyymmdd)
EPISFABD  DIM       8        8       191   Episode First Appointment Booked Date
.                                             (alreudt8 - ccyymmdd)
EPISHDDT  DIM       8        8       199   Episode Hospital Discharge Date
.                                             (alreud10 - ccyymmdd)
EPISFNAD  DIM       8        8       207   Episode Patient First Notified of
.                                          Appointment Date
.                                             (alreudt9 - ccyymmdd)
EPISENDR  DIM       3        3       215   Episode End Reason
.                                             (alrerclo - Cat LL)
EPISMFLG  DIM       1        1       218   Episode Malignancy Flag
.                                             (alreyn10, 0=No, 1=Yes)
EPISCTYP  DIM       6        6       219   Episode Clinic Type (alrectyp)
EPISCLID  DIM       6        6       225   Episode Clinic ID (alreclid)
EPISEVPR  DIM       3        3       231   Episode Event Program
.                                             (alreevpr - Cat zG)
EPISDTAC  DIM       8        8       234   Episode Date Referral Accepted
.                                             (alreudt1 - ccyymmdd)
.
.
.                                          Contact Related Fields
.                                          ----------------------
CONTCOMP  DIM       3        3       242   Account Class (alencomp Cat - CL)
CONTPGRP  DIM       10      10       245   Contact Prof. Group 0 (alenhcp)
CONTPGR1  DIM       10      10       255   Contact Prof. Group 1 (alenuhc1)
CONTPGR2  DIM       10      10       265   Contact Prof. Group 2 (alenuhc2)
CONTPGR3  DIM       10      10       275   Contact Prof. Group 3 (alenuhc3)
CONTPGR4  DIM       10      10       285   Contact Prof. Group 4 (alenuhc4)
CONTDATE  DIM       8        8       295   Contact Date (alensdat - ccyymmdd)
CONTTIME  DIM       8        8       303   Contact Time (alenstim - hh:mm:ss)
CONTPURP  DIM       3        3       311   Contact Purpose (alenuc34 - Cat zH)
CONTSTYP  DIM       3        3       314   Contact Session Type
.                                             (alenuc35 - Cat zI)
CONTPRES  DIM       3        3       317   Client Present Status
.                                             (alenuc37 - Cat zK)
CONTDMOD  DIM       3        3       320   Contact Delivery Mode
.                                             (alenuc38 - Cat zL)
CONTDSET  DIM       3        3       323   Contact Delivery Setting
.                                             (alenuc40 - Cat zN)
CONTPOFC  DIM       3        3       326   Contact Phase of Care
.                                             (alenuc31 - Cat zE)
CONTPDPL  DIM       3        3       329   Contact Preferred Death Place
.                                             (alenuc08 - Cat zh)
CONTCMOD  DIM       3        3       332   Contact Care Model
.                                             (alenuc06 - Cat zf)
CONTIFLG  DIM       8        8       335   Contact Inpatient Flag (alenlink)
CONTSPCP  DIM      10       10       343   Contact Specialist Palliative Care
.                                          Provider (alenuhc1)
CONTCSET  DIM       3        3       353   Contact Preferred Care Setting
.                                             (alenuc07 - Cat zg)
CONTEVPR  DIM       3        3       356   Contact Event Program
.                                             (alenuc33 - Cat zG)
.
.
.                                          Referral Out Related Fields
.                                          -------------------------- -
REFORODT  DIM       8        8       359   Referral Out Date
.                                             (allrhlaf.alrhdate)
REFOSERT  DIM       9        9       367   Referral Out Service Type
.                                             (alrhcode - Cat zU)
REFOPLAC  DIM       9        9       376   Referral Out Place
.                                             (alrhcod2 - Cat zV)
REFORCNT  DIM       3        3       385   Referral Out Record Counter
.
.End of Record                       388
.
.Redefine FORM fields from key
.-----------------------------
MISCRTYP  FORM      1
MISCSTAT  FORM      2
.
.
.         Temporary File B
.
VINTEMP4  IFILE SQL, FIXED=17, KEY="U1-8,9-16"
VINTEMP5  IFILE SQL, FIXED=17, KEY="U9-16,1-8"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
PATNOURN  DIM       8           8           1       Old U/R Number
PATNNURN  DIM       8           8           9       New U/R Number
.
.End of Record                             17
.
.
.         Temporary File C
.
VINTEMP6  IFILE SQL, FIXED=10, KEY="U1-8"
VINTEMP7  IFILE SQL, FIXED=10, KEY="U9-9,1-8"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
MRGURNUM  DIM       8           8           1       Old U/R Number
MRGURFLG  DIM       1           1           9       Merge U/R Flag
.                                                     0 = U/R not checked
.                                                     1 = U/R checked
.
.End of Record                             10
.
.
EXTRFILE  FILE      ASCII,FIXED=4096
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACKNDATE  DIM       8
ALTKEY42  DIM       42
AMESFLAG  FORM      1             * Accepted message flag
.                                      0 = check waiting and accepted messages
.                                      1 = check previous messages only
ASSCOUNT  FORM      4                            * asessment counter
.
BATCHCNT  FORM      10
BATCHIDN  DIM       20
BHS001    DIM       1
BHS002    DIM       4
BHS003    DIM       227
BHS004    DIM       227
BHS005    DIM       227
BHS006    DIM       227
BHS007    DIM       26
BHS008    DIM       40
BHS009    DIM       20
BHS010    DIM       80
BHS011    DIM       20
BJDAY     FORM      3
BTS001    DIM       10
.
CATEGORY  DIM       2
CHRCOUNT  FORM      1
CJDAY     FORM      3
CMDLINE   DIM       200
CONDFLAG  FORM      1             * Condition Flag
.                                    1 = Health Condition
.                                    2 = Others Factors Affecting Health
COUNTER   FORM      4
COUNTRY   DIM       4
CURGENCY  DIM       3
CURRDATE  DIM       8
.
DATETIME  DIM       14
DATEVAR   DATE      8
DEPTCODE  DIM       3
DEATHFLG  FORM      1             * Death Flag
.                                    0 = Using Date of Death (pdecdte)
.                                    1 = Using Deceased Audit Date (pmdecdat)
DIGCOUNT  FORM      1
DIM2A     DIM       2
DIM2B     DIM       2
DIM2C     DIM       2
DIM2D     DIM       2
DIM2E     DIM       2
DIM2F     DIM       2
DIM2G     DIM       2
DIM3      DIM       3
DIM3A     DIM       3
DIM3B     DIM       3
DIM4      DIM       4
DIM5      DIM       5
DIM6      DIM       6
DIM8      DIM       8
DIM10     DIM       10
DIM14     DIM       14
DIM15     DIM       15
DIM20     DIM       20
DIM40     DIM       40
.
ENDDATE   DIM       8
ENDDAY    FORM      2
ENDYEAR   FORM      4
ENDMONTH  FORM      2
EOSFLAG   FORM      1             * end of string flag
.                                     0 = not end of string
.                                     1 = end of string
ERRORCNT  FORM      8             * Error count
ERORFLAG  FORM      1             * Error flag
.                                   0 = No errors while processing a message
.                                   1 = Errors occurred while processing a messg
.
FHS001    DIM       1
FHS002    DIM       4
FHS003    DIM       227
FHS004    DIM       227
FHS005    DIM       227
FHS006    DIM       227
FHS007    DIM       26
FHS008    DIM       40
FHS009    DIM       20
FHS010    DIM       80
FHS011    DIM       20
FILENAME  DIM       8
FILENAMO  DIM       8
FORM2A    FORM      2
FORM2B    FORM      2
FORM3     FORM      3
FORM8     FORM      8
FORM20    FORM      20
FTS001    DIM       10
.
HCEIDENT  DIM       3
HOURTM    DIM       2
.
IGNORFLG  FORM      1             * Ignore record flag
                                     0 = Valid record - don't ignore
                                     1 = Invalid record - ignore
.
LASTURNO  DIM       8             * last U/R to be merged
LINKFLAG  FORM      1             * linked U/R flag
.                                    0 = no linked U/R used
.                                    1 = linked U/R used
.
MAPEDATE  DIM       8
MAPPFLAG  FORM      1             * mapped code flag
.                                    0 = no mapping of code
.                                    1 = mapping of code
MAXCOUNT  FORM      1
MESSCODE  DIM       7             * Full Message code
MESSGCNT  FORM      8             * Batch HL7 message count
MESSGTOT  FORM      8             * File HL7 message count
MESSMTYP  DIM       7
MESSNUMB  FORM      2             * Message number
.                                    1 = ADT-A04
.                                    2 = ADT-A08
.                                    3 = ADT-A40
.                                    4 = PPP-PCB
.                                    5 = PPP-PCC (Update or Complete)
.                                    6 = PPP-PCC (Complete) No longer in use
.                                    7 = PPP-PCD
.                                    8 = ADT-A03
.                                    9 = ADT-A13
.                                   10 = RRI-I12 (VINAH Ref. Received - Add)
.                                   11 = RRI-I13 (VINAH Ref. Received - Reject)
.                                   12 = RRI-I14 (VINAH Ref. Received - Cancel)
.                                   13 = REF-I12 (Referral Out - Add)
.                                   14 = REF-I13 No longer in use
.                                   15 = REF-I14 (Referral Out - Delete)
MINTIME   DIM       2
MRG001    DIM       250
MSH001    DIM       1
MSH002    DIM       4
MSH003    DIM       227
MSH004    DIM       227
MSH005    DIM       227
MSH006    DIM       227
MSH007    DIM       26
MSH008    DIM       40
MSH009    DIM       15
MSH010    DIM       20
MSH011    DIM       3
MSH012    DIM       60
MSH013    DIM       15
MSH014    DIM       180
MSH015    DIM       2
MSH016    DIM       2
MSH017    DIM       3
MSH018    DIM       16
.
NK1001    DIM       4
NK1002    DIM       250
NK1003    DIM       250
NK1004    DIM       250
NK1005    DIM       250
NK1006    DIM       250
NK1007    DIM       250
NK1008    DIM       8
NK1009    DIM       8
NK1010    DIM       60
NK1011    DIM       20
NK1012    DIM       250
NK1013    DIM       250
NK1014    DIM       250
NK1015    DIM       1
NK1016    DIM       26
NK1017    DIM       2
NK1018    DIM       2
NK1019    DIM       250
NK1020    DIM       250
NK1021    DIM       2
.
OBX001    DIM       4
OBX002    DIM       3
OBX003    DIM       80
OBX004    DIM       20
OBX005    DIM       900
OBX006    DIM       60
OBX007    DIM       60
OBX008    DIM       5
OBX009    DIM       5
OBX010    DIM       2
OBX011    DIM       1
OBX012    DIM       26
OBX013    DIM       20
OBX014    DIM       26
.
PARTLFLG  FORM      1             * Partial extract flag
.                                     0 = full extract
.                                     1 = partial extract for same day
PDA001    DIM       250
PDA002    DIM       80
PD1001    DIM       2
PD1002    DIM       2
PD1003    DIM       250
PD1004    DIM       250
PD1005    DIM       2
PD1006    DIM       2
PD1007    DIM       2
PD1008    DIM       2
PD1009    DIM       1
PD1010    DIM       250
PD1011    DIM       250
PD1012    DIM       1
PD1013    DIM       8
PD1014    DIM       250
PD1015    DIM       250
PID001    DIM       4
PID002    DIM       20
PID003    DIM       250
PID004    DIM       20
PID005    DIM       250
PID006    DIM       250
PID007    DIM       26
PID008    DIM       1
PID009    DIM       250
PID010    DIM       250
PID011    DIM       250
PID012    DIM       4
PID013    DIM       250
PID014    DIM       250
PID015    DIM       250
PID016    DIM       250
PID017    DIM       250
PID018    DIM       250
PID019    DIM       16
PID020    DIM       25
PID021    DIM       250
PID022    DIM       250
PID023    DIM       250
PID024    DIM       1
PID025    DIM       2
PID026    DIM       250
PID027    DIM       250
PID028    DIM       250
PID029    DIM       26
PID030    DIM       1
PID031    DIM       1
PID032    DIM       20
PMESFLAG  FORM      1             * Previous message accepted flag
.                                   0 = Previous message accepted for old U/R
.                                   1 = No previous message accepted for old U/R
PMIFLAG   FORM      1             * PMI Flag
.                                    0 = A04/A08 sent
.                                    1 = A04/A08 not sent
PR1001    DIM       4
PR1002    DIM       3
PR1003    DIM       250
PR1004    DIM       40
PR1005    DIM       26
PR1006    DIM       2
PRD001    DIM       250
PRD002    DIM       250
PRD003    DIM       250
PRD004    DIM       60
PREVSTAT  FORM      1             * Previous Message status
PREVURNO  DIM       8             * previous U/R number
PRGARRAY  FORM      1[9]          * program type array
.                                    each array element, 0 = not applicable
.                                                        1 = applicable
.                                    element 1 = HARP
.                                    element 2 = HBPCCT
.                                    element 3 = Medi-Hotel
.                                    element 4 = Palliative Care
.                                    element 5 = Post Acute Care
.                                    element 6 = RIR
.                                    element 7 = SACS
.                                    element 8 = Specialist O/P Clinic
.                                    element 9 = TCP
PRGMSTRM  FORM      1
PRINDESC  DIM       100
PRINDTTM  DIM       19
PRINENCT  DIM       8
PRINEROR  DIM       9
PRINURNO  DIM       8
PRINVISN  DIM       8
PSAGECON  DIM       3
PSAGETYP  DIM       3
PTH001    DIM       2
PTH002    DIM       250
PTH003    DIM       60
PTH004    DIM       26
PTH005    DIM       1
.
PURGFLAG  FORM      1             * DHS Data Purge Flag
.                                        0 = don't purge data at DHS
.                                        1 = purge data at DHS
.
PV1001    DIM       4
PV1002    DIM       1
PV1003    DIM       80
PV1004    DIM       2
PV1005    DIM       250
PV1006    DIM       80
PV1007    DIM       250
PV1008    DIM       250
PV1009    DIM       250
PV1010    DIM       4
PV1011    DIM       80
PV1012    DIM       2
PV1013    DIM       2
PV1014    DIM       6
PV1015    DIM       2
PV1016    DIM       2
PV1017    DIM       250
PV1018    DIM       2
PV1019    DIM       250
PV1020    DIM       50
PV1021    DIM       2
PV1022    DIM       2
PV1023    DIM       2
PV1024    DIM       2
PV1025    DIM       8
PV1026    DIM       12
PV1027    DIM       3
PV1028    DIM       2
PV1029    DIM       4
PV1030    DIM       8
PV1031    DIM       10
PV1032    DIM       12
PV1033    DIM       12
PV1034    DIM       1
PV1035    DIM       8
PV1036    DIM       3
PV1037    DIM       47
PV1038    DIM       250
PV1039    DIM       4
PV1040    DIM       1
PV1041    DIM       2
PV1042    DIM       80
PV1043    DIM       80
PV1044    DIM       26
PV1045    DIM       26
PV1046    DIM       12
PV1047    DIM       12
PV1048    DIM       12
PV1049    DIM       12
PV1050    DIM       250
PV1051    DIM       1
.
PV2001    DIM       80
PV2002    DIM       250
PV2003    DIM       250
PV2004    DIM       250
PV2005    DIM       25
PV2006    DIM       25
PV2007    DIM       2
PV2008    DIM       26
PV2009    DIM       26
PV2010    DIM       3
PV2011    DIM       3
PV2012    DIM       50
PV2013    DIM       250
PV2014    DIM       8
PV2015    DIM       1
PV2016    DIM       1
PV2017    DIM       8
PV2018    DIM       2
PV2019    DIM       1
PV2020    DIM       1
PV2021    DIM       1
PV2022    DIM       1
PV2023    DIM       250
PV2024    DIM       2
PV2025    DIM       1
PV2026    DIM       8
PV2027    DIM       2
PV2028    DIM       8
PV2029    DIM       8
PV2030    DIM       250
PV2031    DIM       2
PV2032    DIM       1
PV2033    DIM       26
PV2034    DIM       1
PV2035    DIM       1
PV2036    DIM       1
PV2037    DIM       1
PV2038    DIM       250
PV2039    DIM       250
PV2040    DIM       250
.
RF1001    DIM       250
RF1002    DIM       250
RF1003    DIM       250
RF1004    DIM       250
RF1005    DIM       250
RF1006    DIM       30
RF1007    DIM       26
RF1008    DIM       26
RF1009    DIM       26
RF1010    DIM       250
RF1011    DIM       30
ROL001    DIM       60
ROL002    DIM       2
ROL003    DIM       250
ROL004    DIM       250
ROL005    DIM       26
ROL006    DIM       26
ROL007    DIM       250
ROL008    DIM       250
ROL009    DIM       250
ROL010    DIM       250
.
SAMDYFLG  FORM      1             * sameday flag
.                                     0 = sameday
.                                     1 = not same day
SAVDTTM1  DIM       14
SAVDTTM2  DIM       14
SAVEACTN  DIM       1
SAVEBNUM  DIM       20            * saved batch number for REF^I12 messages only
SAVECAVL  DIM       3
SAVECONT  DIM       8
SAVECRST  DIM       3
SAVEDATE  DIM       8
SAVEDEPT  DIM       3
SAVEDTHP  DIM       3
SAVEDTTM  DIM       14
SAVEEVPR  DIM       3
SAVEFLNK  DIM       8
SAVEHDPD  DIM       4
SAVEKEY9  DIM       9
SAVELARR  DIM       3
SAVELINK  DIM       8             * Linked to Master VINAH referral #
SAVEMREL  DIM       3
SAVEMTYP  DIM       7
SAVENBAT  FORM      20            * save variable for next batch number
SAVENMES  FORM      20            * save variable for message id
SAVENURN  DIM       8             * saved new U/R for merges
SAVEOURN  DIM       8             * saved old U/R for merges
SAVEOUTC  DIM       1
SAVERDAT  DIM       8
SAVERTYP  FORM      1
SAVESDAT  DIM       8
SAVEUACC  DIM       3
SAVEUDT1  DIM       8
SAVEURNO  DIM       8
SAVEVISN  DIM       8
SAVEPRGM  FORM      1
SAVIND02  DIM       1
SAVKEY42  DIM       42
SAVKEY49  DIM       49
SAVLDTTM  DIM       14
SAVMNUMB  FORM      2
SAVMTYP1  DIM       7
SAVMTYP2  DIM       7
SAVPDTTM  DIM       14
SAVPURNO  DIM       8
SAVPVISN  DIM       8
SECTIME   DIM       2
.
.>>>>>> A validation is listed in Section 4 of the VINAH specifications
.>>>>>> which indicates that a single HL7 submission line cannot contain
.>>>>>> more than 1000 characters, although it appears to not be required for
.>>>>>> VINAH8.
.>>>>>> The SEGSTRNG variable below has been added, along with equivalent
.>>>>>> sample code in WMSH0000, to check this, although at this stage
.>>>>>> it is all commented out.  If implementing for a later version of VINAH,
.>>>>>> this code would need to be added for each segment sent.
.
.>>>>>>SEGSTRNG  DIM       4000
SENTFLAG  FORM      1             * RRI Sent Message Flag
.                                    0 = no previous RRI message sent
.                                    1 = previous RRI message sent
STARTDAT  DIM       8
STATFORM  FORM      2
STATUS    DIM       2
STRTDATE  DIM       8
STRTDAY   FORM      2
STRTMON   FORM      4
STRTYEAR  FORM      4
SVKEY42A  DIM       42
SVKEY42B  DIM       42
.
TEMPACTN  DIM       1
TEMPDTTM  DIM       14
TEMPFILA  DIM       8
TEMPFILB  DIM       8
TEMPFILC  DIM       8
TEMPCONT  DIM       8
TEMPRTYP  DIM       1
TEMPURNO  DIM       8
TEMPVISN  DIM       8
.
URLDFLAG  FORM      1             * "merged from" UR load flag
.                                    0 = not yet loaded
.                                    1 = already loaded
.
VALDFLAG  FORM      1                  * validation flag
.                                          0 = extraction phase
.                                          1 = validation phase
VISITNUM  DIM       8
.
WORKDATE  DIM       8
WORKDTTM  DIM       14
.
.
.
.PROGRAM CONSTANTS
.-----------------
ADTA03    INIT      "ADT-A03"
ADTA04    INIT      "ADT-A04"
ADTA13    INIT      "ADT-A13"
ALPHABET  INIT      "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
BHSSEGMT  INIT      "BHS"
BTSSEGMT  INIT      "BTS"
CARET     INIT      "^"
CATTS     INIT      "ts"
CRETURN   INIT      015                * carriage return character
DVACHAR1  INIT      "QNVTSW"
ERASE     INIT      "iserase "
FHSSEGMT  INIT      "FHS"
FIFTYTHO  FORM      "50000"
FORTY990  FORM      "49900"
FTSSEGMT  INIT      "FTS"
HYPHEN    INIT      "-"
ISBUILD   INIT      "isbuild "
LOWCASEC  INIT      "c"
LOWCASEF  INIT      "f"
LOWCASEG  INIT      "g"
LOWCASEH  INIT      "h"
LOWCASEJ  INIT      "j"
LOWCASEL  INIT      "l"
LOWCASET  INIT      "t"
LOWCASEZ  INIT      "z"
MESTYP01  INIT      "ADT^A04^ADT_A01"
MESTYP02  INIT      "ADT^A08^ADT_A01"
MESTYP03  INIT      "ADT^A40^ADT_A39"
MESTYP04  INIT      "PPP^PCB^PPP_PCB"
MESTYP05  INIT      "PPP^PCC^PPP_PCG"
MESTYP06  INIT      "PPP^PCC^PPP_PCG"
MESTYP07  INIT      "PPP^PCD^PPP_PCB"
MESTYP08  INIT      "ADT^A03^ADT_A01"
MESTYP09  INIT      "ADT^A13^ADT_A01"
MESTYP10  INIT      "RRI^I12^REF_I12"
MESTYP11  INIT      "RRI^I13^REF_I12"
MESTYP12  INIT      "RRI^I14^REF_I12"
MESTYP13  INIT      "REF^I12^REF_I12"
MESTYP14  INIT      "REF^I13^REF_I12"
MESTYP15  INIT      "REF^I14^REF_I12"
MRGSEGMT  INIT      "MRG"
MSHSEGMT  INIT      "MSH"
NK1SEGMT  INIT      "NK1"
OBXSEGMT  INIT      "OBX"
PDASEGMT  INIT      "PDA"
PD1SEGMT  INIT      "PD1"
PIDSEGMT  INIT      "PID"
PIPE      INIT      "|"
PPPPCB    INIT      "PPP-PCB"
PPPPCC    INIT      "PPP-PCC"
PPPPCD    INIT      "PPP-PCD"
PR1SEGMT  INIT      "PR1"
PRDSEGMT  INIT      "PRD"
PTHSEGMT  INIT      "PTH"
PV1SEGMT  INIT      "PV1"
PV2SEGMT  INIT      "PV2"
REFI12    INIT      "REF-I12"
REFI14    INIT      "REF-I14"
RF1SEGMT  INIT      "RF1"
RRII12    INIT      "RRI-I12"
RRII13    INIT      "RRI-I13"
RRII14    INIT      "RRI-I14"
ROLSEGMT  INIT      "ROL"
VINEXTNM  INIT      "vinext"
SP100     INIT      "                                                  ":
                    "                                                  "
TILDA50   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
UKEYA     INIT      " 388 U1-8,49-50,9-22,23-30,31-38,39-39,40-40":
                    " U1-8,49-50,23-30,31-38,42-48,9-22,39-39,40-40":
                    " U1-8,49-50,23-30,31-38,9-22,42-48,39-39,40-40"
UKEYB     INIT      " 17 U1-8,9-16 U9-16,1-8"
UKEYC     INIT      " 10 U1-8 U9-9,1-8"
UPPTOLOW  INIT      "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
ZERO51    INIT      "000001"
ZERO52    INIT      "000002"
ZERO53    INIT      "000003"
ZERO54    INIT      "000004"
ZERO6     INIT      "000000"
.
.
PRGID     INIT      "VINAH013"
PRGNAM    INIT      "VINAH Extraction Program"
VERSION   INIT      "V10.14.00"
+
.**************************************************************************
.*                              MAIN0000                                  *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          BRANCH    EXIT,MAIN9999          * parameter not set
.
          CALL      CREA0000               * create temporary files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9000          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with extract
.
MAIN1000  CALL      REPH0000               * print report header
          CALL      CLRE0000               * clear error records
.
          CALL      CHKS0000               * check for incomplete records
          BRANCH    EXIT,MAIN8000          * incomplete records found
.
MAIN2000  CALL      SDAT0000               * get start date for extract period
          BRANCH    EXIT,MAIN8000          * nothing entered
.
          CALL      EDAT0000               * get end date for extract period
          BRANCH    EXIT,MAIN8000          * nothing entered
.
          CALL      CHKW0000               * waiting records for prev. period ?
          BRANCH    EXIT,MAIN8000          * yes
.
          CALL      VDAT0000               * validate the date range
          BRANCH    EXIT,MAIN8000          * invalid date range
.
          CALL      PURG0000               * see if data to be purged
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:        * yes
                          MAIN8000:        * no
                          MAIN8000         * cancel
.
MAIN5000  CALL      CLER0000               * clear temp file records
          CALL      SETV0000               * set variables
          CALL      PROC0000               * process
.
MAIN8000  CALL      REPT0000               * print report tail
          GOTO      MAIN0100
.
MAIN9000  CALL      KILL0000               * erase temp file
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: MAIN0000  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
          OPEN      ALLREFA2,"allrefaf"
.
          DISPLAY   *P64:24,"allbiaaf";
          OPEN      ALLBIAA1,"allbiaaf"
.
          DISPLAY   *P64:24,"allencaf";
          OPEN      ALLENCA1,"allencaf"
.
          DISPLAY   *P64:24,"allhbtaf";
          OPEN      ALLHBTA1,"allhbtaf"
.
          DISPLAY   *P64:24,"allhhdaf";
          OPEN      ALLHHDA1,"allhhdaf"
.
          DISPLAY   *P64:24,"allitmaf";
          OPEN      ALLITMA1,"allitmaf"
.
          DISPLAY   *P64:24,"alllnkaf";
          OPEN      ALLLNKA1,"alllnkaf"
.
          DISPLAY   *P64:24,"allprraf";
          OPEN      ALLPRRA1,"allprraf"
.
          DISPLAY   *P64:24,"allrhlaf";
          OPEN      ALLRHLA1,"allrhlaf"
.
          DISPLAY   *P64:24,"allrlnaf";
          OPEN      ALLRLNA1,"allrlnaf"
          OPEN      ALLRLNA2,"allrlnaf"
.
          DISPLAY   *P64:24,"allrnwaf";
          OPEN      ALLRNWA1,"allrnwaf"
.
          DISPLAY   *P64:24,"allsasaf";
          OPEN      ALLSASA1,"allsasaf"
.
          DISPLAY   *P64:24,"allseraf";
          OPEN      ALLSERA1,"allseraf"
.
          DISPLAY   *P64:24,"alldiaaf";
          OPEN      ALLDIAA1,"alldiaaf"
.
          DISPLAY   *P64:24,"alldepaf";
          OPEN      ALLDEPA1,"alldepaf"
.
          DISPLAY   *P64:24,"allhdtaf";
          OPEN      ALLHDTA1,"allhdtaf"
          OPEN      ALLHDTA2,"allhdtaf"
          OPEN      ALLHDTA3,"allhdtaf"
          OPEN      ALLHDTA4,"allhdtaf"
          OPEN      ALLHDTA5,"allhdtaf"
          OPEN      ALLHDTA6,"allhdtaf"
.
          DISPLAY   *P64:24,"allsedaf";
          OPEN      ALLSEDA1,"allsedaf"
.
          DISPLAY   *P64:24,"allvmpaf";
          OPEN      ALLVMPA1,"allvmpaf"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patwc1af";
          OPEN      PATWC1A1,"patwc1af"
.
          DISPLAY   *P64:24,"patwmabf";
          OPEN      PATWMAB1,"patwmabf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patlinkf";
          OPEN      PATLINK1,"patlinkf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A8,"patmi1af"
.
          DISPLAY   *P64:24,"patmrgaf";
          OPEN      PATMRGG1,"patmrgaf"
          OPEN      PATMRGG2,"patmrgaf"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"pmsdauaf";
          OPEN      PMSDAUA2,"pmsdauaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"priitemf";
          OPEN      PRIITEM1,"priitemf"
.
          DISPLAY   *P64:24,"websecaf";
          OPEN      WEBSECA1,"websecaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS:  * get multi hospital indicator
                                  *201,IBCNHSID: * get health service identifier
                                  *206,IBCNHCEN  * get health care establishment
          READ      CONTROLF,HUND06;*57,ALCNSACO: * Outbound File path
                                  *177,ALCNSPID: * get processing id
                                  *225,ALCNDEVP: * using event program for VINAH
                                  *247,ALCNCIEP  * Clinic Identifier population
.
          MATCH     SP70,ALCNSACO                * blank outbound path ?
          IF        !@EQUAL
            MATCH     ZERO6,ALCNSACO             * yes - zero filled ?
            IF        !@EQUAL
              STRIP     ALCNSACO                 * no
              GOTO      INIT1000
            ENDIF
          ENDIF
.
          MATCH     "IBARSH",PGM
          IF        @EQUAL
            PRINT     *1,"Outbound path not set up."
          ELSE
            DISPLAY   *P1:24,*EL,*B,"Outbound path not set up.  ";
          ENDIF
          CALL      HITENTER
          GOTO      INIT9100
.
INIT1000  MOVE      ONE,VALDFLAG
.
          MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9100  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: MAIN0000  *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run extract                            *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Extract"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run extract
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                             SDAT0000                Called by: MAIN0000  *
.*                       Set starting date                                  *
.* Returns: STRTDATE - starting date (ccyymmdd)                             *
.*          EXIT  0 = valid date entered                                    *
.*                1 = nothing entered                                       *
.****************************************************************************
.
SDAT0000  DISPLAY   *P1:11,*EF,"From Date :"
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      TEN1,CVERT
          MOVE      TEN3,CCOL
.
          CALL      IBACLOCK                     * get current date
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
.         Set the default start date to the 1st of the previous month
.
          MOVE      CMM,FORM2A
          MOVE      CYY,FORM2B
          IF        FORM2A = 1
            MOVE      TEN2,FORM2A
            SUB       ONE,FORM2B
          ELSE
            SUB       ONE,FORM2A
          ENDIF
          MOVE      "01",CDAY
          MOVE      "20",CCENT
          MOVE      FORM2A,CMON
          MOVE      FORM2B,CYEAR
.
          CALL      KEYDATE
          BRANCH    OVRCD,SDAT9100
          PACK      STRTDATE,CCENT,CYEAR,CMON,CDAY
.
.         Check that start date is not in the future
.
          MATCH     STRTDATE,CURRDATE
          IF        @LESS
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            MOVE      "GEN.11   ",PRINEROR
            MOVE      "Start Date cannot be in the future",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Start Date cannot be in the future.  ";
            CALL      HITENTER
            GOTO      SDAT9100
          ENDIF
.
.         VINAH13 will be used to report all data from 01/07/2017
.         through to 30/06/2018.
.
          MATCH     "20170701",STRTDATE        * start date prior to 1/7/2017
          IF        @LESS
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            MOVE      "GEN.12   ",PRINEROR
            MOVE      "Start Date is prior to VINAH13",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Start Date is prior to VINAH13.  ";
            CALL      HITENTER
            GOTO      SDAT9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      SDAT9999
.
SDAT9100  MOVE      ONE,EXIT
.
SDAT9999  RETURN
+
.****************************************************************************
.*                             EDAT0000                Called by: MAIN0000  *
.*                          Get ending date                                 *
.* Returns: ENDDATE - ending date (ccyymmdd)                                *
.*          EXIT  0 = valid date entered                                    *
.*                1 = nothing entered                                       *
.*          FHS.11  - extract period end date                               *
.****************************************************************************
.
EDAT0000  DISPLAY   *P1:13,*EL,"To   Date :"
          MOVE      TEN3,CVERT
          MOVE      TEN3,CCOL
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,EDAT9100               
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY  
.
.         Check that end date is not in the future
.
          MATCH     ENDDATE,CURRDATE
          IF        @LESS
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            MOVE      "GEN.13   ",PRINEROR
            MOVE      "End Date cannot be in the future",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"End Date cannot be in the future.  ";
            CALL      HITENTER
            GOTO      EDAT9100
          ENDIF
.
.         Check that end date is not less than start date
.         
          MATCH     STRTDATE,ENDDATE
          IF        @LESS
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            MOVE      "GEN.14   ",PRINEROR
            MOVE      "Start date greater than end date",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Start date greater than end date.  ";
            CALL      HITENTER
            GOTO      EDAT9100
          ENDIF
.
.         Check that end date is not greater than 30/06/2018
.
          MATCH     "20180701",ENDDATE           * end date after 30/6/2018
          IF        !@LESS
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            MOVE      "GEN.22   ",PRINEROR
            MOVE      "End Date is after VINAH13",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"End Date is after VINAH13.  ";
            CALL      HITENTER
            GOTO      EDAT9100
          ENDIF
.
          MOVE      SP20,FHS011
          CLEAR     FHS011
          MOVE      ENDDATE,FHS011               * load period end date
.
          MATCH     STRTDATE,ENDDATE             * same date ?
          IF        @EQUAL
            MOVE      ZERO,SAMDYFLG              * yes
          ELSE
            MOVE      ONE,SAMDYFLG               * no
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EDAT9999
.
EDAT9100  MOVE      ONE,EXIT
.
EDAT9999  RETURN            
+
.*****************************************************************************
.*                                CHKW0000             Called by: MAIN0000   *
.*    Check that there are no waiting records from the previous date range   *
.*    (which may happen if a sameday extract with > 50,000 records).         *
.* Requires: STRTDATE - starting date for extract                            *
.* Returns:  EXIT  0 = Ok to continue                                        *
.*                 1 = Error                                                 *
.*****************************************************************************
.
CHKW0000  PACK      KEY42,SP1,ZERO,STRTDATE,SP70
          CALL      RSALHDT4                     * position before start date
          CALL      RPALHDT4                     * read previous record
          BRANCH    OVRCD,CHKW9000               * eof - ok
.
          MATCH     " 0",ALHDSTAT                * waiting status ?
          GOTO      CHKW9000 IF NOT EQUAL        * no - ok
.
          GOTO      CHKW9100                     * yes - error
.
CHKW9000  MOVE      ZERO,EXIT
          GOTO      CHKW9999
.
CHKW9100  MOVE      SP8,PRINURNO
          MOVE      SP8,PRINVISN
          MOVE      SP8,PRINENCT
          MOVE      SP20,DIM14
          MOVE      "GEN.7   ",PRINEROR
          MOVE      "Previous date range has unextracted records",PRINDESC
          CALL      PERR0000
.
          DISPLAY   *P1:24,*EL,*B,"Previous date range has unextracted ":
                    "records.  ";
          CALL      HITENTER
.
          MOVE      ONE,EXIT
.
CHKW9999  RETURN
+
.*****************************************************************************
.*                               SETV0000              Called by: MAIN0000   *
.*           Set variables for the first pass of processing                  *
.*****************************************************************************
.
SETV0000  MOVE      ONE,VALDFLAG                 * set for validation phase
          MOVE      "- Validation",CPHDROPT      * set report option heading
.
          MOVE      ZERO,PARTLFLG
.
SETV9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*           Extract all the VINAH referral related records for the          *
.*           selected period                                                 *
.*           Phase 1 = Validation                                            *
.*           Phase 2 = Extraction                                            *
.*****************************************************************************
.
PROC0000  MOVE      ZERO,MESSGTOT                * init. file HL7 message count
.
          DISPLAY   *P1:21,*EF,"Successful message count:":
                    *P27:21,*V2LON,MESSGTOT,*HOFF:
                    *P1:22,"Error message count     :":
                    *P27:22,*V2LON,ERRORCNT;
.
          MOVE      ZERO,MESSNUMB                * init. message number
          MOVE      ZERO,BATCHCNT                * initialise batch count
.
.         Check if we need to adjust any Referral-In Date/Time's to avoid
.         an E412 error.
.
          CALL      CB2B0000
.
          CALL      LTMP0000                     * load temp file
          BRANCH    EXIT,PROC9999                * period already processed
.
          CALL      GTYP0000                     * set HL7 message types
.
          CALL      VMES0000                     * perform message validation
          BRANCH    EXIT,PROC9999                * fatal error
.
          CALL      CEXT0000                     * create extract file
.
          CALL      WFHS0000                     * load & write FHS segment
          BRANCH    EXIT,PROC9999                * error - finished
.
.         Now loop through the temporary file A processing each patient's
.         VINAH transactions as a separate batch
.
          MOVE      ZERO,MESSNUMB                * init. message number
          MOVE      SP8,SAVEURNO                 * initialise saved U/R variable
.
          PACK      KEY42,SP30,SP20
PROC5400  CALL      RSTEMP1                      * position at start of table
PROC5500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          PACK      SAVKEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                             MISCRTYP,MISCACTN            * save temp file key
          DISPLAY   *P13:24,*EL,*V2LON,SAVKEY42;
.
          COMPARE   ZERO,MISCSTAT                * waiting status ?
          GOTO      PROC6000 IF EQUAL            * yes
.
          BRANCH    VALDFLAG,PROC5500            * validation only
.
          CALL      UPST0000                     * update allhdtaf
          GOTO      PROC5500
.
PROC6000  MATCH     SAVEURNO,MISCURNO            * same U/R still ?
          IF        !@EQUAL
            IF        BATCHCNT <> 0
.
              IF        PARTLFLG = 1 & VALDFLAG = 0
                COMPARE   MESSGTOT,FORTY990      * no - record limit reached ?
                GOTO      PROC9000 IF LESS       * yes - finish
              ENDIF
.
              CALL      WBTS0000                 * load & write BTS segment
              CALL      WBAT0000                 * write batch record (allhbtaf)
            ENDIF
.
            ADD       ONE,BATCHCNT               * increment batch count
            MOVE      ZERO,MESSGCNT              * initialise HL7 message count
            MOVE      ZERO,PMIFLAG               * initialise PMI flag
            MOVE      MISCURNO,SAVEURNO          * save new U/R number
            CALL      WBHS0000                   * load & write BHS segment
.
.           Initialise the program type array for the new batch (patient)
.
            MOVE        ZERO,COUNTER
            WHILE       COUNTER < 9
              ADD         ONE,COUNTER
              MOVE        ZERO,PRGARRAY[COUNTER]
            DO
.
.           Initialise the saved referral based PMI fields
.
            MOVE      SP3,SAVECRST
            MOVE      SP3,SAVECAVL
            MOVE      SP3,SAVEUACC
            MOVE      SP3,SAVEMREL
            MOVE      SP3,SAVELARR
            MOVE      SP3,SAVEDTHP
.
.           Get the program types and default PMI values ready for the
.           A04/A08 message
.
            CALL      PTYP0000
            BRANCH    EXIT,PROC9700
          ENDIF
.
          MOVE      ZERO,MESSNUMB                * init. message number
          CALL      FMES0000                     * format the HL7 message
          BRANCH    EXIT,PROC9700                * fatal error
          GOTO      PROC5500                     * get next record
.
.         Finished processing each patient (batch), so now write the final
.         Batch Trailer Segment and the File Trailer Segment
.
PROC9000  CALL      WBTS0000                     * load & write BTS segment
          CALL      WBAT0000                     * write batch record (allhbtaf)
          CALL      WFTS0000                     * load & write FTS segment
.
.         If this is the validation phase, then display the error count
.         and see if the user wants to continue with the final extraction.
.
          IF        VALDFLAG = 1
            COMPARE   ZERO,ERRORCNT              * any validation errors ?
            IF        !@EQUAL
              CALL      WRBK0000                 * write recs back to allhdtaf
              GOTO      PROC9700                 * yes - finish
            ENDIF
.
            COMPARE   ZERO,MESSGTOT              * any records to process ?
            GOTO      PROC9500 IF EQUAL          * no - finish
.
            COMPARE   MESSGTOT,FIFTYTHO          * too many records to process ?
            GOTO      PROC9100 IF NOT LESS       * no - ok to extract
.
.           There are too many messages for submission.  If not a single day,
.           then the user will need to reduce the date range.  If a single
.           day, then do a partial extract for the day.
.
            IF        SAMDYFLG = 0
              MOVE      ONE,PARTLFLG
              DISPLAY   *P1:23,*EF,*B,"Warning: Too many messages for selected":
                        " day.  Extract will be partial.";
.
            ELSE
              DISPLAY   *P1:24,*EL,*B,"Too many messages in date range.  ";
              CALL      HITENTER
.
              MOVE      SP8,PRINURNO
              MOVE      SP8,PRINVISN
              MOVE      SP8,PRINENCT
              MOVE      SP20,DIM14
              MOVE      "GEN.9   ",PRINEROR
              MOVE      "Too many messages in date range",PRINDESC
              CALL      PERR0000
              GOTO      PROC9999
            ENDIF
.
PROC9100    KEYIN     *P1:24,*EL,"Extract now (",*V2LON,*DV,ANSY,*HOFF:
                      *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,"):":
                      *P20:24,*V2LON,ANS
.
            PACK      ANS,ANS,SP1
            REP       UPPLOW,ANS
            MATCH     ANSY,ANS
            IF        @EQUAL
              CALL      REPT0000
              MOVE      ZERO,VALDFLAG            * set for extraction phase
              CALL      REPH0000
              MOVE      "- Extraction",CPHDROPT * set report option heading
              MOVE      ZERO,ERRORCNT            * re-initialise error count
              GOTO      PROC0000                 * extract
            ENDIF
.
            MATCH     ANSN,ANS                   * "N" entered ?
            GOTO      PROC9999 IF EQUAL          * yes - finished
.
            GOTO      PROC9100                   * invalid input
          ELSE
            CALL      MVFL0000                   * rename & move extract file
            DISPLAY   *P1:24,*EL,"Extraction Complete.  ";
            GOTO      PROC9900
          ENDIF
.
PROC9500  DISPLAY   *P1:24,*EL,"No valid records for extraction.  ";
          GOTO      PROC9900
.
PROC9700  MATCH     "IBARSH",PGM
          IF        @EQUAL
            PRINT     *1,"Validation errors require fixing before ":
                            "extraction."
          ELSE
            DISPLAY   *P1:24,*EL,"Validation errors require fixing before ":
                      "extraction.  ";
          ENDIF
PROC9900  CALL      HITENTER
.
PROC9999  RETURN
+
.*****************************************************************************
.*                           VDAT0000              Called by: MAIN0000       *
.*             Validate the date range of the extract                        *
.*    Note: The following VINAH versions are handled:                        *
.*               VINAH13 (01/07/2017 - 30/06/2018)                           *
.* Returns:  EXIT  0 = valid date range entered                              *
.*                 1 = invalid date range entered                            *
.*****************************************************************************
.
VDAT0000  UNPACK    STRTDATE,DIM4,DIM2A,DIM2B
          MOVE      DIM4,STRTYEAR
          MOVE      DIM2A,STRTMON
          MOVE      DIM2B,STRTDAY
.
          IF        STRTMON > 6
            ADD       ONE,STRTYEAR
          ENDIF
          PACK      WORKDATE,STRTYEAR,ZERO,SIX,THIRTY
          IF        STRTMON > 6
            SUB       ONE,STRTYEAR
          ENDIF
.
          MATCH     ENDDATE,WORKDATE
          IF        @LESS
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            MOVE      "GEN.15   ",PRINEROR
            MOVE      "Extract period crosses calendar years",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Extract period crosses financial years.  ";
            CALL      HITENTER
            GOTO      VDAT9100
          ENDIF
.
.>>>>>>>  Need to think about what happens to codes for VINAH13.
.>>>>>>>  Do we use alternate patcodes field for alternate years like PRS/2?
.
.         Check if the period is in the same year
.
          UNPACK    ENDDATE,DIM4,DIM2A,DIM2B
          MOVE      DIM4,ENDYEAR
          MOVE      DIM2A,ENDMONTH
          MOVE      DIM2B,ENDDAY
.
          COMPARE   STRTYEAR,ENDYEAR
          IF        !@EQUAL
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            MOVE      "GEN.17   ",PRINEROR
            MOVE      "Extract covers multiple periods",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Extract covers multiple periods.  ";
            CALL      HITENTER
            GOTO      VDAT9100
          ENDIF
.
.         The extract period is in the same year, so check if the period
.         is in the same month
.
          COMPARE   STRTMON,ENDMONTH
          IF        !@EQUAL
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            MOVE      "GEN.18   ",PRINEROR
            MOVE      "Extract covers multiple periods",PRINDESC
            CALL      PERR0000
.
            DISPLAY   *P1:24,*EL,*B,"Extract covers multiple periods.  ";
            CALL      HITENTER
            GOTO      VDAT9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      VDAT9999
.
VDAT9100  MOVE      ONE,EXIT
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            UPST0000             Called by: PROC0000       *
.*       We are processing (extracting) a record which is not going to be    *
.*       included in the extract, so all we need to do is update the         *
.*       status of the record on allhdtaf, or write a record if it doesn't   *
.*       already exist.                                                      *
.*****************************************************************************
.
.         See if the record already exists on allhdtaf
.
UPST0000  PACK      KEY42,SP1,ZERO,MISCURNO,MISCVISN,MISCCONT,MISCDTTM:
                          MISCRTYP,MISCACTN
          CALL      RDALHDT1                     * record on allhdtaf ?
          IF        OVRCD = 0
            MOVE      MISCSTAT,ALHDSTAT          * yes - load status
            CALL      LHDT0000                   * load allhdtaf fields
            MOVE      SP20,ALHDMESI
            MOVE      SP20,ALHDBNUM
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      UPALHDT1                   * update
            TRAPCLR   IO
            BRANCH    OVRCD,UPST9000
          ELSE
            MOVE      MISCSTAT,ALHDSTAT          * yes - load status
            CALL      LHDT0000                   * load allhdtaf fields
            MOVE      SP20,ALHDMESI
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRALHDT1                   * write
            TRAPCLR   IO
            BRANCH    OVRCD,UPST9000
          ENDIF
          GOTO      UPST9999
.
.         A record already exists on allhdtaf with the values we are trying
.         to update/write with, so just delete this record from the temp
.         file and waiting record in allhdtaf.
.
UPST9000  PACK      KEY42,SP1,ZERO,MISCURNO,MISCVISN,MISCCONT,MISCDTTM:
                          MISCRTYP,MISCACTN
          CALL      DEALHDT1
.
          PACK      KEY42,MISCSTAT,MISCURNO,MISCVISN,MISCCONT,MISCDTTM:
                          MISCRTYP,MISCACTN
          CALL      DETEMP1
.
          MOVE      SAVKEY42,KEY42               * reposition after delete
          CALL      RSTEMP1
.
UPST9999  RETURN
+
.*****************************************************************************
.*                            WRBK0000             Called by: PROC0000       *
.*         Validation failed, so we need to write all the error records      *
.*         back to allhdtaf to be fixed.                                     *
.*****************************************************************************
.
WRBK0000  PACK      KEY42,SP30,SP20
          CALL      RSTEMP1                      * position at start of file
WRBK0500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,WRBK9999               * eof - finished
.
.         We are only writing back those messages which now have a status
.         of "1" (printed errors) or "0" (waiting)
.
          COMPARE   TWO,MISCSTAT                 * waiting or error status ?
          GOTO      WRBK0500 IF NOT LESS         * no - ignore record
.
.         ADT-A40, ADT-A04, ADT-A08, PPP-PCD, RRI-I13, RRI-I14 and REF
.         messages are only written back to allhdtaf where the record has
.         errors.  All other records are written to allhdtaf.
.
          MATCH     "REF",MISCMTYP               * referral dest. message ?
          GOTO      WRBK1000 IF EQUAL            * yes - check for error status
.
          COMPARE   THREE,MISCRTYP               * merge/PMI ?
          GOTO      WRBK1000 IF NOT LESS         * yes - check for error status
.
          GOTO      WRBK2000
.
WRBK1000  COMPARE   ONE,MISCSTAT                 * error record ?
          GOTO      WRBK5000 IF EQUAL            * yes - write allhdtaf record
.
          GOTO      WRBK0500                     * no - ignore record
.
WRBK2000  PACK      KEY42,SP1,ZERO,MISCURNO,MISCVISN,MISCCONT,MISCDTTM:
                          MISCRTYP,MISCACTN
          CALL      RDALHDT1                     * record on file ?
          BRANCH    OVRCD,WRBK5000               * no - write new record
.
          IF        MISCSTAT = 0
            MOVE      " 0",ALHDSTAT              * load status (waiting)
          ELSE
            MOVE      " 1",ALHDSTAT              * load status (error)
          ENDIF
          CALL      LHDT0000                     * load allhdtaf fields
          CALL      UPALHDT1                     * update record
          GOTO      WRBK0500                     * get next temp A record
.
WRBK5000  IF        MISCSTAT = 0
            MOVE      " 0",ALHDSTAT              * load status (waiting)
          ELSE
            MOVE      " 1",ALHDSTAT              * load status (error)
          ENDIF
          CALL      LHDT0000                     * load allhdtaf fields
          CALL      WRALHDT1                     * write record
          GOTO      WRBK0500                     * get next temp A record
.
WRBK9999  RETURN
+
.*****************************************************************************
.*                            CKST0000             Called by: Various        *
.*            Check the message status and update accordingly                *
.* Requires: ERORFLAG - 0 = no errors                                        *
.*                      1 = errors occurred                                  *
.*           SAVKEY42   saved key for current record in temp file A          *
.*****************************************************************************
.
CKST0000  BRANCH    ERORFLAG,CKST5000            * error occurred
.
.         No errors occurred for the current message, so update the message
.         counts
.
          ADD       ONE,MESSGCNT                 * incr. batch HL7 mess. count
          ADD       ONE,MESSGTOT                 * incr. file HL7 mess. count
          DISPLAY   *P27:21,*EL,*V2LON,MESSGTOT;
          GOTO      CKST9999
.
.         Errors occurred.
.         For A04, A08 & A40 messages the error handling is done in CKUR0000
.         as there is no allhdtaf record for this yet
.
CKST5000  MATCH     "ADT-A04",MISCMTYP           * A04 message error ?
          GOTO      CKST9999 IF EQUAL            * yes - ignore
.
          MATCH     "ADT-A08",MISCMTYP           * A08 message error ?
          GOTO      CKST9999 IF EQUAL            * yes - ignore
.
          MATCH     "ADT-A40",MISCMTYP           * A40 message error ?
          GOTO      CKST9999 IF EQUAL            * yes - ignore
.
.         Update the status of the record due to the error
.
          MOVE      ONE,MISCSTAT                 * set status "Ignore-error"
          CALL      UPTEMP1                      * update record
.
.         Reposition in temp file A where updated record was
.
          MOVE      SAVKEY42,KEY42
          CALL      RSTEMP1                      * reposition in temp file
.
CKST9999  RETURN
+
.*****************************************************************************
.*                               CHKS0000              Called by: MAIN0000   *
.*      Check if there are any incomplete records in the holding file.       *
.*      All previously extracted records must be either "Ignore" or          *
.*      "Accepted" records before another extract can be done.               *
.*      (The incomplete statuses include 1, 6, 7 & 8).                       *
.*          STATUS -   0 = Waiting                                           *
.*                     1 = Error on extract validation                       *
.*                     2 = Ignore (non VINAH record)                         *
.*                     3 = Ignore (not required)                             *
.*                     4 = Ignore (later message)                            *
.*                     5 = Ignore (associated deletion)                      *
.*                     6 = Extracted                                         *
.*                     7 = Submitted                                         *
.*                     8 = Rejected                                          *
.*                     9 = Resubmitted                                       *
.*                    10 = Accepted                                          *
.* Returns:  EXIT 0 = Ok to continue                                         *
.*                1 = Error occurred                                         *
.*****************************************************************************
.
CHKS0000  MOVE      ONE,STATFORM                 * initialise counter
.
CHKS0500  COMPARE   TEN,STATFORM                 * last status checked ?
          GOTO      CHKS9000 IF NOT LESS         * yes - finished
.
          MOVE      STATFORM,STATUS              * load status to be checked
.
          PACK      KEY42,STATUS,SP70
          CALL      RSALHDT4                     * position on status
CHKS1000  CALL      RKALHDT4                     * read next record
          BRANCH    OVRCD,CHKS9000               * eof - finished
.
          MATCH     STATUS,ALHDSTAT              * same status still ?
          GOTO      CHKS9100 IF EQUAL            * yes - error
.
          IF        STATFORM = 1
            MOVE      SIX,STATFORM
          ENDIF
          ADD       ONE,STATFORM                 * increment counter
          GOTO      CHKS0500                     * check next status
.
CHKS9000  MOVE      ZERO,EXIT
          GOTO      CHKS9999
.
CHKS9100  MOVE      SP8,PRINURNO
          MOVE      SP8,PRINVISN
          MOVE      SP8,PRINENCT
          MOVE      SP20,DIM14
          MOVE      "GEN.19   ",PRINEROR
          MOVE      "Incomplete extracted records still exist",PRINDESC
          CALL      PERR0000
.
          DISPLAY   *P1:24,*EL,*B,"Incomplete extracted records still exist.  ";
          CALL      HITENTER
.
          MOVE      ONE,EXIT
          GOTO      CHKS9999
.
CHKS9999  RETURN
+
.*****************************************************************************
.*                            FMES0000             Called by: PROC0000       *
.*               Process and format a single VINAH message                   *
.*****************************************************************************
.
FMES0000  MOVE      MISCURNO,PRINURNO            * load error variables
          MOVE      MISCVISN,PRINVISN
          MOVE      MISCCONT,PRINENCT
          MOVE      MISCMTYP,SAVEMTYP
.
.         Get the PMI record for the patient
.
          MOVE      MISCURNO,KEY8
          CALL      RDMAST1                      * PMI record found ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "GEN.1    ",PRINEROR
            MOVE      "PMI master record not found",PRINDESC
            GOTO      FMES8100
          ENDIF
.
          MOVE      MISCURNO,KEY8
          CALL      RDPMPX21                     * PMI record found ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "GEN.2    ",PRINEROR
            MOVE      "PMI master extension record not found",PRINDESC
            GOTO      FMES8100
          ENDIF
.
.         Check if using multi hospital, and if so get pathspaf details
.
          IF        IBCNMHOS = 1
            MOVE      MISCVISN,KEY8
            CALL      RDPMVX11                   * visit ext. record on file ?
            IF        OVRCD = 1
              MOVE      MISCDTTM,DIM14
              CALL      FDTM0000
              MOVE      "GEN.3    ",PRINEROR
              MOVE      "Visit extension record not found for visit",PRINDESC
              GOTO      FMES8100
            ENDIF
.
.           Get hospital id
.
            MATCH     SP3,PMVXMHOS               * hospital id blank ?
            IF        @EQUAL
              MATCH     SP3,PMPXIHOS
              IF        @EQUAL
                MOVE      MISCDTTM,DIM14
                CALL      FDTM0000
                MOVE      "GEN.4    ",PRINEROR
                MOVE      "Hospital id not set for visit",PRINDESC
                GOTO      FMES8100
              ELSE
                MOVE      PMPXIHOS,KEY3
              ENDIF
            ELSE
              MOVE      PMVXMHOS,KEY3
            ENDIF
.
.           Get hospital record
.
            CALL      RDPTHSP1                   * hospital on file ?
            IF        OVRCD = 1
              MOVE      MISCDTTM,DIM14
              CALL      FDTM0000
              MOVE      "GEN.5    ",PRINEROR
              MOVE      "Hospital id not on file",PRINDESC
              GOTO      FMES8100
            ENDIF
          ENDIF
.
.         If this is an A04 or A08 message and this is the extraction
.         phase, then we don't need to check if the U/R has been sent previously
.         as this was done in the validation phase
.
          COMPARE   ZERO,VALDFLAG                * extraction phase ?
          GOTO      FMES2000 IF EQUAL            * yes - bypass U/R check
.
.         If this is the first HL7 message for the batch, we need
.         to send either an A04 or an A08 message, depending on whether
.         the patient has previously been registered with DHS.
.
          BRANCH    PMIFLAG,FMES2000             * A04/A08 already sent
          CALL      CKUR0000                     * send A04 or A08
          BRANCH    EXIT,FMES9100                * error with A04 or A08
.
.         Process the message according to the HL7 message type
.
FMES2000  MATCH     "RRI-I12",MISCMTYP
          IF        @EQUAL
            MOVE      TEN,MESSNUMB
            CALL      WI120000                   * write RRI-I12 message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "RRI-I13",MISCMTYP
          IF        @EQUAL
            MOVE      TEN1,MESSNUMB
            CALL      WI130000                   * write RRI-I13 message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "RRI-I14",MISCMTYP
          IF        @EQUAL
            MOVE      TEN2,MESSNUMB
            CALL      WI140000                   * write RRI-I14 message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "PPP-PCB",MISCMTYP
          IF        @EQUAL
            CALL      WPCB0000                   * write PPP-PCB message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "PPP-PCC",MISCMTYP
          IF        @EQUAL
            CALL      WPCC0000                   * write PPP-PCC message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "PPP-PCD",MISCMTYP
          IF        @EQUAL
            CALL      WPCD0000                   * write PPP-PCD message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "REF-I12",MISCMTYP
          IF        @EQUAL
            MOVE      TEN3,MESSNUMB
            CALL      WI120000                   * write REF-I12 message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "REF-I14",MISCMTYP
          IF        @EQUAL
            MOVE      TEN5,MESSNUMB
            CALL      WI140000                   * write REF-I14 message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "ADT-A03",MISCMTYP
          IF        @EQUAL
            CALL      WA030000                   * write ADT-A03 message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "ADT-A13",MISCMTYP
          IF        @EQUAL
            CALL      WA130000                   * write ADT-A13 message
            GOTO      FMES5000
          ENDIF
.
.         If we are validating, then CKUR0000 has already handled the
.         A04, A08 or A40 record.
.
          BRANCH    VALDFLAG,FMES5000            * validation phase only
.
          MATCH     "ADT-A04",MISCMTYP
          IF        @EQUAL
            CALL      WA040000                   * write ADT-A04 message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "ADT-A08",MISCMTYP
          IF        @EQUAL
            CALL      WA080000                   * write ADT-A08 message
            GOTO      FMES5000
          ENDIF
.
          MATCH     "ADT-A40",MISCMTYP
          IF        @EQUAL
            CALL      WA400000                   * write ADT-A40 message
            GOTO      FMES5000
          ENDIF
.
.         If this is the processing phase, then write/update this record
.         back to allhdtaf
.
FMES5000  BRANCH    VALDFLAG,FMES9000            * validation phase only
.
          IF        PURGFLAG = 0
            PACK      KEY42,SP1,ZERO,MISCURNO,MISCVISN,MISCCONT,MISCDTTM:
                            MISCRTYP,MISCACTN
            CALL      RDALHDT1                   * record on allhdtaf ?
            IF        OVRCD = 0
              MOVE      " 6",ALHDSTAT            * yes - load status
              CALL      LHDT0000                 * load allhdtaf fields
              CALL      UPALHDT1                 * update
            ELSE
              MOVE      " 6",ALHDSTAT            * yes - load status
              CALL      LHDT0000                 * load allhdtaf fields
              CALL      WRALHDT1                 * write
            ENDIF
          ENDIF
          GOTO      FMES9000
.
.         An error occurred before the relevant message formatting routine
.         was called.
.
FMES8100  CALL      PERR0000
          CALL      CKST0000                     * check message status
.
FMES9000  MOVE      ZERO,EXIT
          GOTO      FMES9999
.
FMES9100  MOVE      ONE,EXIT
.
FMES9999  RETURN
+
.*****************************************************************************
.*                            LHDT0000             Called by: FMES0000       *
.*                                                            WRBK0000       *
.*               Load the temp file A variables into the allhdtaf fields     *
.*   (except for status)                                                     *
.* Requires: ALHDSTAT (record status) to be set already                      *
.*****************************************************************************
.
LHDT0000  MOVE      MISCURNO,ALHDURNO            * load U/R number
          MOVE      MISCDTTM,ALHDDTTM            * load date/time of processing
          MOVE      MISCVISN,ALHDVISN            * load visit number
          MOVE      MISCCONT,ALHDCONT            * load contact number
          MOVE      MISCRTYP,ALHDRTYP            * load record type
          MOVE      MISCACTN,ALHDACTN            * load action record type
          MOVE      MISCVFLG,ALHDVFLG            * load VINAH flag
          MOVE      MISCMTYP,ALHDMTYP            * load message type
          MOVE      MISCSRCE,ALHDSRCE            * load record source
          MOVE      MISCDEPT,ALHDDEPT            * load department
          MOVE      MISCPRGM,ALHDPRGM            * load program type
          MOVE      MISCWEBU,ALHDWEBU            * load web user id
.
          MOVE      PATNCRST,ALHDCRST            * load carer residency status
          MOVE      PATNCAVL,ALHDCAVL            * load carer availability
          MOVE      PATNLARR,ALHDLARR            * load living arrangement
          MOVE      PATNUACC,ALHDUACC            * load usual accommodation
          MOVE      PATNMREL,ALHDMREL            * load carer's rel. to patient
          MOVE      PATNDTHP,ALHDDTHP            * load death place
          MOVE      PATNOURN,ALHDOURN            * old U/R number
.
          MOVE      REFIRDAT,ALHDRDAT            * load referral-in rec. date
          MOVE      REFIOTRR,ALHDOTRR            * load ref-in reason code (rej)
          MOVE      REFIOTRC,ALHDOTRC            * load ref-in reason code (can)
          MOVE      REFIOUTC,ALHDOUTC            * load referral status
          MOVE      REFICLUC,ALHDCLUC            * load clinical urgency cat.
          MOVE      REFICRDT,ALHDCRDT            * load clin. referral date
          MOVE      REFIRADT,ALHDRADT            * load Received Ack. Date
          MOVE      REFILINK,ALHDLINK            * linked referral visit no.
          MOVE      REFITRGS,ALHDTRGS            * load triage status
.         
          MOVE      EPISTRGD,ALHDTRGD            * load triage date
          MOVE      EPISSDAT,ALHDSDAT            * load episode start date
          MOVE      EPISEDAT,ALHDEDAT            * load episode end date
          MOVE      EPISFCFL,ALHDFCFL            * load first consultancy flag
          MOVE      EPISCPPT,ALHDCPPT            * load compl. of treatment
          MOVE      EPISIODT,ALHDIODT            * load impairment onset date
          MOVE      EPISACDD,ALHDACDD            * load adv. care plan doc date
          MOVE      EPISCPDD,ALHDCPDD            * load epd. care plan doc. date
          MOVE      EPISFABD,ALHDFABD            * load epd. first app. bkd date
          MOVE      EPISHDDT,ALHDHDDT            * load epd. hospital disch date
          MOVE      EPISFNAD,ALHDFNAD            * load eps not. 1st appt date
          MOVE      EPISENDR,ALHDENDR            * load episode end reason
          MOVE      EPISMFLG,ALHDMFLG            * load malignancy flag
          MOVE      EPISCTYP,ALHDCTYP            * load clinic type
          MOVE      EPISCLID,ALHDCLID            * load clinic id
          MOVE      EPISEVPR,ALHDEEPR            * load episode event program
          MOVE      EPISDTAC,ALHDUDT1            * load date referral accepted
.
          MOVE      CONTCOMP,ALHDCOMP            * load enct. account class
          MOVE      CONTPGRP,ALHDPGRP            * load contact prof. group 0
          MOVE      CONTPGR1,ALHDPGR1            * load contact prof. group 1
          MOVE      CONTPGR2,ALHDPGR2            * load contact prof. group 2
          MOVE      CONTPGR3,ALHDPGR3            * load contact prof. group 3
          MOVE      CONTPGR4,ALHDPGR4            * load contact prof. group 4
          MOVE      CONTDATE,ALHDDATE            * load contact date
          MOVE      CONTTIME,ALHDTIME            * load contact time
          MOVE      CONTPURP,ALHDPURP            * load contact purpose
          MOVE      CONTSTYP,ALHDSTYP            * load contact session type
          MOVE      CONTPRES,ALHDPRES            * load client present status
          MOVE      CONTDMOD,ALHDDMOD            * load contact delivery mode
          MOVE      CONTDSET,ALHDDSET            * load contact delivery setting
          MOVE      CONTPOFC,ALHDPOFC            * load phase of care
          MOVE      CONTPDPL,ALHDPDPL            * load pref. death place
          MOVE      CONTCMOD,ALHDCMOD            * load contact care model
          MOVE      CONTIFLG,ALHDIFLG            * load contact linked visit
          MOVE      CONTSPCP,ALHDSPCP            * load contact spec. pall.
.                                                       care provider
          MOVE      CONTCSET,ALHDCSET            * load contact pref. care
.                                                       setting
          MOVE      CONTEVPR,ALHDCEPR            * load contact event program
          MOVE      REFORODT,ALHDRODT            * load referral-out date
          MOVE      REFOSERT,ALHDSERT            * load referral-out serv. type
          MOVE      REFOPLAC,ALHDPLAC            * load referral-out place
          MOVE      REFORCNT,ALHDRCNT            * load referral-out count
.
          MOVE      MSH010,ALHDMESI              * load message id
          MOVE      BATCHIDN,ALHDBNUM            * load batch number
          PACK      ALHDSPAR,SP30,SP10
.
LHDT9999  RETURN
+
.*****************************************************************************
.*                            MRGW0000             Called by: LTMP0000       *
.*      Perform a U/R merge for any "waiting" records in allhdtaf for a      *
.*      given patient                                                        *
.* Requires:  SAVEOURN - old U/R                                             *
.*            SAVENURN - new U/R                                             *
.*            PMESFLAG - previous message accepted flag                      *
.*                         0 = Previous message accepted for old U/R         *
.*                         1 = No previous message accepted for old U/R      *
.*****************************************************************************
.
MRGW0000  PACK      KEY42,SAVEOURN,SP1,ZERO,SP70
          CALL      RSALHDT3                     * position on U/R-Status
          CALL      RKALHDT3                     * read next record
          BRANCH    OVRCD,MRGW9999               * eof - finished
.
          MATCH     SAVEOURN,ALHDURNO            * same old U/R still ?
          GOTO      MRGW9999 IF NOT EQUAL        * no - finished
.
          MATCH     " 0",ALHDSTAT                * status "waiting" ?
          GOTO      MRGW9999 IF NOT EQUAL        * no - finished
.
.         A "waiting" record exists on allhdtaf with the old patient U/R
.         number, so update the record with the new U/R number.
.         If DHS has never received records for this U/R, then we don't
.         need to send a merge, so just set the old U/R to zero.
.
          MOVE      SAVENURN,ALHDURNO            * load new U/R
          IF        PMESFLAG = 1
            MOVE      "       0",ALHDOURN        * no need for merge
          ELSE
            MOVE      SAVEOURN,ALHDOURN          * save old U/R for merge
          ENDIF
          CALL      UPALHDT3                     * update record
          GOTO      MRGW0000                     * get next record
.
MRGW9999  RETURN
+
.*****************************************************************************
.*                            UPDW0000             Called by: LTMP0000       *
.*      For a given U/R, update all the waiting records to have a zero       *
.*      "old U/R" to indicate the U/R has not been merged                    *
.* Requires:  PATNOURN - old U/R                                             *
.*****************************************************************************
.
UPDW0000  PACK      KEY42,PATNOURN,SP1,ZERO,SP70
          CALL      RSALHDT3                     * position on U/R-Status
UPDW0500  CALL      RKALHDT3                     * read next record
          BRANCH    OVRCD,UPDW9999               * eof - finished
.
          MATCH     PATNOURN,ALHDURNO            * same old U/R still ?
          GOTO      UPDW9999 IF NOT EQUAL        * no - finished
.
          MATCH     " 0",ALHDSTAT                * status "waiting" ?
          GOTO      UPDW9999 IF NOT EQUAL        * no - finished
.
.         A "waiting" record exists on allhdtaf for the patient U/R
.         number, so update the "old U/R" to zero to indicate no merge
.         has occurred, but only do this if the old U/R is blank.
.
          MATCH     SP8,ALHDOURN                 * blank old U/R ?
          GOTO      UPDW0500 IF NOT EQUAL        * no - ignore record
.
          MOVE      "       0",ALHDOURN          * update old U/R
          CALL      UPALHDT3                     * update record
          GOTO      UPDW0500                     * get next record
.
UPDW9999  RETURN
+
.*****************************************************************************
.*                            LTMP0000             Called by: PROC0000       *
.*         Load the VINAH records for the period into the temporary file A.  *
.*         Load any U/R merges for the period into the temporary file B.     *
.* Returns:  EXIT  0 = Ok to continue.                                       *
.*                 1 = Date range has already been extracted or has          *
.*                     validation errors.                                    *
.*****************************************************************************
.
LTMP0000  COMPARE   ZERO,VALDFLAG                * extraction phase ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,"Extracting:";
            GOTO      LTMP9050
          ENDIF
.
          CALL      LMRG0000                     * load U/R merges
.
.         Now, loop through the VINAH history file looking for VINAH episode
.         related records in the period selected.
.
LTMP5000  DISPLAY   *P1:24,*EL,"Loading referral related data:";
.
          PACK      KEY42,SP1,ZERO,STRTDATE,SP30,SP20
          CALL      RSALHDT4                     * position at start of period
LTMP5500  CALL      RKALHDT4                     * read next record
          BRANCH    OVRCD,LTMP9000               * eof - get merge records
.
          MOVE      ALHDDTTM,DIM8
          MATCH     DIM8,ENDDATE                 * still in date range ?
          GOTO      LTMP9000 IF LESS             * no - finished
.
          MATCH     " 0",ALHDSTAT                * waiting record ?
          GOTO      LTMP9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P31:24,*V2LON,ALHDVISN,SP2,ALHDCONT;
.
.         A record has been found within the period selected that is waiting.
.         Load temp file variables straight from the history file.
.
          MOVE      ALHDURNO,MISCURNO            * load U/R number
          MOVE      ALHDDTTM,MISCDTTM            * load date/time of processing
          MOVE      ALHDVISN,MISCVISN            * load visit number
          MOVE      ALHDCONT,MISCCONT            * set contact number
          MOVE      ALHDRTYP,MISCRTYP            * set record type
          MOVE      ALHDACTN,MISCACTN            * load action record type
          MOVE      ALHDVFLG,MISCVFLG            * load VINAH flag
          MOVE      ALHDMTYP,MISCMTYP            * load message type
          MOVE      ALHDSTAT,MISCSTAT            * load status
          MOVE      ALHDSRCE,MISCSRCE            * load record source
          MOVE      ALHDDEPT,MISCDEPT            * load department
          MOVE      ALHDPRGM,MISCPRGM            * load program type
          MOVE      ALHDWEBU,MISCWEBU            * load web user id
.
          MOVE      ALHDCRST,PATNCRST            * load carer residency status
          MOVE      ALHDCAVL,PATNCAVL            * load carer availability
          MOVE      ALHDLARR,PATNLARR            * load living arrangement
          MOVE      ALHDUACC,PATNUACC            * load usual accommodation
          MOVE      ALHDMREL,PATNMREL            * load carer's rel. to patient
          MOVE      ALHDDTHP,PATNDTHP            * load death place
          MOVE      ALHDOURN,PATNOURN            * initialise old u/r
.
          MOVE      ALHDRDAT,REFIRDAT            * load ref-in received date
          MOVE      ALHDOTRR,REFIOTRR            * load ref-in reason code (rej)
          MOVE      ALHDOTRC,REFIOTRC            * load ref-in reason code (can)
          MOVE      ALHDOUTC,REFIOUTC            * load referral status
          MOVE      ALHDCLUC,REFICLUC            * load clinical urgency cat.
          MOVE      ALHDCRDT,REFICRDT            * load clinical referral date
          MOVE      ALHDRADT,REFIRADT            * load received ack. date
          MOVE      ALHDLINK,REFILINK            * load linked referral #
          MOVE      ALHDTRGS,REFITRGS            * load triage status
.
          MOVE      ALHDTRGD,EPISTRGD            * load triage date
          MOVE      ALHDSDAT,EPISSDAT            * load episode start date
          MOVE      ALHDEDAT,EPISEDAT            * load episode end date
          MOVE      ALHDFCFL,EPISFCFL            * load first consultancy flag
          MOVE      ALHDCPPT,EPISCPPT            * load compl. of treatment
          MOVE      ALHDIODT,EPISIODT            * load impairment onset date
          MOVE      ALHDACDD,EPISACDD            * load adv. care plan doc date
          MOVE      ALHDCPDD,EPISCPDD            * load epd. care plan doc. date
          MOVE      ALHDFABD,EPISFABD            * load epd. first appt bkd date
          MOVE      ALHDHDDT,EPISHDDT            * load epd. hospital disch date
          MOVE      ALHDFNAD,EPISFNAD            * load epd. not. 1st appt. date
          MOVE      ALHDENDR,EPISENDR            * load episode end reason
          MOVE      ALHDMFLG,EPISMFLG            * load malignancy flag
          MOVE      ALHDCTYP,EPISCTYP            * load clinic type
          MOVE      ALHDCLID,EPISCLID            * load clinic id
          MOVE      ALHDEEPR,EPISEVPR            * load episode event program
          MOVE      ALHDUDT1,EPISDTAC            * date date referral accepted
.
          MOVE      ALHDCOMP,CONTCOMP            * load contact account class
          MOVE      ALHDPGRP,CONTPGRP            * load contact prof. group 0
          MOVE      ALHDPGR1,CONTPGR1            * load contact prof. group 1
          MOVE      ALHDPGR2,CONTPGR2            * load contact prof. group 2
          MOVE      ALHDPGR3,CONTPGR3            * load contact prof. group 3
          MOVE      ALHDPGR4,CONTPGR4            * load contact prof. group 4
          MOVE      ALHDDATE,CONTDATE            * load contact date
          MOVE      ALHDTIME,CONTTIME            * load contact time
          MOVE      ALHDPURP,CONTPURP            * load contact main purpose
          MOVE      ALHDSTYP,CONTSTYP            * load contact session type
          MOVE      ALHDPRES,CONTPRES            * load client present status
          MOVE      ALHDDMOD,CONTDMOD            * load contact delivery mode
          MOVE      ALHDDSET,CONTDSET            * load contact delivery setting
          MOVE      ALHDPOFC,CONTPOFC            * load phase of care
          MOVE      ALHDPDPL,CONTPDPL            * load phase of care
          MOVE      ALHDCMOD,CONTCMOD            * load contact care model
          MOVE      ALHDIFLG,CONTIFLG            * load contact linked visit
          MOVE      ALHDSPCP,CONTSPCP            * load contact spec. pall.
.                                                       care provider
          MOVE      ALHDCSET,CONTCSET            * load contact pref. care
.                                                       setting
          MOVE      ALHDCEPR,CONTEVPR            * load contact event program
.
          MOVE      ALHDRODT,REFORODT            * load referral-out date
          MOVE      ALHDSERT,REFOSERT            * load referral-out serv. type
          MOVE      ALHDPLAC,REFOPLAC            * load referral-out place
          MOVE      ALHDRCNT,REFORCNT            * load referral-out count
          PACK      ALHDSPAR,SP70,SP30
.
.         We have a valid record, so write a record to the temp file
.
LTMP8000  CALL      WRTEMP1                      * write temp file record
          GOTO      LTMP5500                     * get next referral record
.
LTMP9000  DISPLAY   *P1:24,*EL,"Validating:";
LTMP9050  MOVE      ZERO,EXIT
          GOTO      LTMP9999
.
LTMP9100  MOVE      ONE,EXIT
.
LTMP9999  RETURN
+
.*****************************************************************************
.*                          GTYP0000               Called by: PROC0000       *
.*        Determine the HL7 message type for each record in the temp file    *
.*        and update the relevant field accordingly.                         *
.*****************************************************************************
.
GTYP0000  COMPARE   ZERO,VALDFLAG                * validation phase ?
          GOTO      GTYP9999 IF EQUAL            * no - finished
.
          DISPLAY   *P13:24,*EL,"GTYP0000 - ";
.
          PACK      KEY42,SP30,SP20
          CALL      RSTEMP1                      * position at start of file
GTYP0500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,GTYP9999               * eof - finished
.
          PACK      SAVKEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                             MISCRTYP,MISCACTN            * save temp file key
.
          DISPLAY   *P24:24,*EL,SAVKEY42;
.
          MATCH     SP7,MISCMTYP                 * message type already loaded ?
          GOTO      GTYP0500 IF NOT EQUAL        * yes - ignore
.
          COMPARE   TWO,MISCRTYP                 * contact record ?
          GOTO      GTYP5000 IF EQUAL            * yes
.
.         We have a referral record, so check if it's a referral-in or
.         and episode record.
.
          MATCH     "0",MISCVFLG                 * episode ?
          GOTO      GTYP1000 IF EQUAL            * yes
.
.         We have a referral-in record
.
          MATCH     ANSA,MISCACTN                * add record ?
          IF        @EQUAL
            MOVE      "RRI-I12",MISCMTYP         * yes
            GOTO      GTYP9000
          ENDIF
.
          MATCH     ANSC,MISCACTN                * change record ?
          IF        @EQUAL
            MOVE      "RRI-I13",MISCMTYP         * yes
            GOTO      GTYP9000
          ENDIF
.
          MOVE      "RRI-I14",MISCMTYP           * delete record
          GOTO      GTYP9000
.
.         We have an episode record, so see what action type it was.
.
GTYP1000  MATCH     ANSA,MISCACTN                * add record ?
          IF        @EQUAL
            MOVE      "PPP-PCB",MISCMTYP         * yes
            GOTO      GTYP9000
          ENDIF
.
          MATCH     ANSC,MISCACTN                * change record ?
          IF        @EQUAL
            MOVE      "PPP-PCC",MISCMTYP         * yes
.
            MATCH     "4",REFIOUTC               * cancelled ?
            IF        @EQUAL
              MOVE      "PPP-PCD",MISCMTYP       * yes
            ENDIF
.
            MATCH     "5",REFIOUTC               * rejected ?
            IF        @EQUAL
              MOVE      "PPP-PCD",MISCMTYP       * yes
            ENDIF
            GOTO      GTYP9000
          ENDIF
.
          MOVE      "PPP-PCD",MISCMTYP           * delete record
          GOTO      GTYP9000
.
.         We have a contact record, so see what action type it was
.
GTYP5000  MATCH     ANSA,MISCACTN                * add record ?
          IF        @EQUAL
            MOVE      "ADT-A03",MISCMTYP         * yes
            GOTO      GTYP9000
          ENDIF
.
.         Normally, contacts are only logically updated for deletion, not
.         physically deleted, and as there is no update facility for contact
.         data, we should treat the change record as a deletion.
.         If the contact was compensable and the user cancels out of the
.         claim screen, then the contact will actually be physically deleted,
.         so we also need to check for a "D" type record.
.
          MATCH     ANSC,MISCACTN                * delete record ?
          IF        @EQUAL
            MOVE      "ADT-A13",MISCMTYP         * yes
            GOTO      GTYP9000
          ENDIF
.
          MATCH     ANSD,MISCACTN                * delete record ?
          IF        @EQUAL
            MOVE      "ADT-A13",MISCMTYP         * yes
            GOTO      GTYP9000
          ENDIF
.
.         Invalid message type
.
          MOVE      MISCURNO,PRINURNO
          MOVE      MISCVISN,PRINVISN
          MOVE      MISCCONT,PRINENCT
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "GEN.6    ",PRINEROR
          MOVE      "Message type is not valid",PRINDESC
          CALL      PERR0000
          MOVE      ONE,MISCSTAT                 * set status to "Ignore-error"
.
GTYP9000  CALL      UPTEMP1                      * update record
          GOTO      GTYP0500                     * get next record
.
GTYP9999  RETURN
+
.*****************************************************************************
.*                            WA040000             Called by: CKUR0000       *
.*         Write an ADT-A04 (Patient Registration) message                   *
.*****************************************************************************
.
WA040000  MOVE      ONE,MESSNUMB
          MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WPID0000
.
          CALL      WPD10000
.
          CALL      WNK10000
.
          CALL      WPV10000
.
          CALL      WPDA0000
.
          CALL      CKST0000                     * check message status
.
WA049999  RETURN
+
.*****************************************************************************
.*                            WA080000             Called by: CKUR0000       *
.*         Write an ADT-A08 (Update Patient Information) message             *
.*****************************************************************************
.
WA080000  MOVE      TWO,MESSNUMB
          MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WPID0000
.
          CALL      WPD10000
.
          CALL      WNK10000
.
          CALL      WPV10000
.
          CALL      WPDA0000
.
          CALL      CKST0000                     * check message status
.
WA089999  RETURN
+
.*****************************************************************************
.*                            WA400000             Called by: CKUR0000       *
.*         Write an ADT-A40 (Merge Patient Information) message              *
.*****************************************************************************
.
WA400000  MOVE      THREE,MESSNUMB
          MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WPID0000
.
          CALL      WMRG0000
.
          CALL      CKST0000                     * check message status.
.
WA409999  RETURN
+
.*****************************************************************************
.*                            WPCB0000             Called by: FMES0000       *
.*         Write a PPP-PCB (Patient Pathway - Add) message                   *
.*****************************************************************************
.
WPCB0000  MOVE      FOUR,MESSNUMB
          MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WPID0000
.
          CALL      WPV10000
.
          CALL      WPV20000
.
          CALL      WPTH0000
.
          CALL      WOBX0000
.
          CALL      CKST0000                     * check message status
.
WPCB9999  RETURN
+
.*****************************************************************************
.*                            WPCC0000             Called by: FMES0000       *
.*         Write a PPP-PCC (Patient Pathway - Update/Complete) message       *
.*****************************************************************************
.
WPCC0000  MOVE      FIVE,MESSNUMB
          MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WPID0000
.
          CALL      WPV10000
.
          CALL      WPV20000
.
          CALL      WPTH0000
.
          CALL      WOBX0000
.
          CALL      CKST0000                     * check message status
.
WPCC9999  RETURN
+
.*****************************************************************************
.*                            WPCD0000             Called by: FMES0000       *
.*         Write a PPP-PCD (Patient Pathway - Delete) message                *
.*****************************************************************************
.
WPCD0000  MOVE      SEVEN,MESSNUMB
          MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WPID0000
.
          CALL      WPV10000
.
          CALL      WPV20000
.
          CALL      WPTH0000
.
          CALL      WOBX0000
.
          CALL      CKST0000                     * check message status
.
WPCD9999  RETURN
+
.*****************************************************************************
.*                            WA030000             Called by: FMES0000       *
.*         Write an ADT-A03 (Discharge/End Visit) message                    *
.*****************************************************************************
.
WA030000  MOVE      EIGHT,MESSNUMB
          MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WPID0000
.
          CALL      WPD10000
.
          CALL      WPV10000                                                 
.
          CALL      WPV20000                                                 
.
          CALL      WROL0000                                                 
.
          CALL      WPR10000                                                 
.
          CALL      CKST0000                     * check message status
.
WA039999  RETURN
+
.*****************************************************************************
.*                            WA130000             Called by: FMES0000       *
.*         Write an ADT-A13 (Cancel Discharge/End Visit) message             *
.*****************************************************************************
.
WA130000  MOVE      NINE,MESSNUMB
          MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WPID0000
.
          CALL      WPD10000
.
          CALL      WPV10000
.
          CALL      WPV20000                                                 
.
          CALL      WROL0000                                                 
.
          CALL      WPR10000                                                 
.
          CALL      CKST0000                     * check message status
.
WA139999  RETURN    
+
.*****************************************************************************
.*                            WI120000             Called by: FMES0000       *
.*         Write an RRI/REF-I12 (Patient Referral) message                   *
.*****************************************************************************
.
WI120000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000
.
          CALL      WRF10000
.
          CALL      WPRD0000
.
          CALL      WPID0000
.
          IF        MESSNUMB = 10
            CALL      WPV10000                   * for RRI-I12 only
          ENDIF
.
          CALL      CKST0000                     * check message status
.
WI129999  RETURN    
+
.*****************************************************************************
.*                            WI130000             Called by: FMES0000       *
.*         Write an RRI-I13  (Reject Patient Referral) message               *
.*****************************************************************************
.
WI130000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000    
.
          CALL      WRF10000
.
          CALL      WPRD0000
.
          CALL      WPID0000
.
          IF        MESSNUMB = 11
            CALL      WPV10000                   * for RRI-I13 only
          ENDIF
.
          CALL      CKST0000                     * check message status
.
WI139999  RETURN
+
.*****************************************************************************
.*                            WI140000             Called by: FMES0000       *
.*         Write an RRI-I14 or REF-I14 (Cancel Patient Referral) message     *
.*****************************************************************************
.
WI140000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
          CALL      WMSH0000    
.
          CALL      WRF10000
.
          CALL      WPRD0000
.
          CALL      WPID0000
.
          IF        MESSNUMB = 12
            CALL      WPV10000                   * for RRI-I14 only
          ENDIF
.
          CALL      CKST0000                     * check message status
.
WI149999  RETURN
+
.*****************************************************************************
.*                              CEXT0000           Called by: PROC0000       *
.*                 Create and open the extract file                          *
.*****************************************************************************
.
CEXT0000  BRANCH    VALDFLAG,CEXT9999            * validation phase only
.
          PACK      FILENAME,VINEXTNM,PORT
          REP       " 0",FILENAME
          PREP      EXTRFILE,FILENAME
          CLOSE     EXTRFILE,DELETE              * remove previous file
.
          PREP      EXTRFILE,FILENAME            * create new extract file
.
CEXT9999  RETURN
+
.*****************************************************************************
.*                              WFHS0000           Called by: PROC0000       *
.*            Load and write the FHS segment variables                       *
.* Returns:  EXIT  0 = Ok to continue                                        *
.*                 1 = Error occurred so finish                              *
.*****************************************************************************
.
WFHS0000  CALL      CFHS0000                     * clear FHS variables
.
          MOVE      PIPE,FHS001                  * load file field separator
          MOVE      "^~\&",FHS002                * load file encoding characters
          MOVE      "IBA",FHS003                 * load file sending application
.
WFHS1000  MATCH     SP5,IBCNHSID                 * health service ident. blank ?
          IF        !@EQUAL
            MATCH     IBCNHSID,ZERO6             * no - zero filled ?
            IF        !@EQUAL
              MOVE      IBCNHSID,FHS004          * no-load file sending facility
              STRIP     FHS004                   * (HL70362)
              GOTO      WFHS2000
            ENDIF
          ENDIF
.
          MOVE      SP8,PRINURNO                 * blank or zeros - print error
          MOVE      SP8,PRINVISN
          MOVE      SP8,PRINENCT
          MOVE      SP20,DIM14
          CALL      FDTM0000
          MOVE      "FHS.4.1  ",PRINEROR
          MOVE      "Health Service Identifier is blank",PRINDESC
          CALL      PERR0000                   * yes - error
.
WFHS2000  BRANCH    VALDFLAG,WFHS9000            * validation phase only
.
          MOVE      "VINAH13",FHS005             * set for VINAH13
          MOVE      "AUSDHSV",FHS006             * load file receiving facility
.                                                  (HL70362)
          CALL      GTDTTM00                     * get current date/time
          MOVE      DATETIME,FHS007              * load file creation date/time
.
.         Load the extract file name
.
          MOVE      FHS004,FHS009                * load hospital prefix
          REP       UPPTOLOW,FHS009
          ENDSET    FHS009
          APPEND    UNDLN1,FHS009
          MOVE      FHS007,DIM8                  * load date of extract
          APPEND    DIM8,FHS009
          APPEND    UNDLN1,FHS009
          RESET     FHS009
          CALL      SETF0000                     * complete file name
          BRANCH    EXIT,WFHS9100                * error - finished
.
          CALL      WHED0000                     * write header rec. (allhhdaf)
.
          WRITE     EXTRFILE,SEQ;FHSSEGMT,*+,FHS001,FHS002,PIPE,FHS003,PIPE:
                                             FHS004,PIPE,FHS005,PIPE,FHS006:
                                             PIPE,FHS007,PIPE,FHS008,PIPE:
                                             FHS009,PIPE,FHS010,PIPE,FHS011:
                                             CRETURN;
.
WFHS9000  MOVE      ZERO,EXIT
          GOTO      WFHS9999
.
WFHS9100  MOVE      ONE,EXIT
.
WFHS9999  RETURN
+
.*****************************************************************************
.*                              WBHS0000           Called by: PROC0000       *
.*            Load and write the BHS segment variables                       *
.*****************************************************************************
.
WBHS0000  CALL      CBHS0000                     * clear BHS variables
.
          BRANCH    VALDFLAG,WBHS9999            * validation phase only
.
          MOVE      PIPE,BHS001                  * load batch field separator
          MOVE      "^~\&",BHS002                * load batch encoding chars
          MOVE      FHS004,BHS004                * load batch sending facility
.                                                  (HL70362)
          MOVE      "AUSDHSV",BHS006             * load receiving facility
.                                                  (HL70362)
          CALL      GTDTTM00                     * get current date/time
          MOVE      DATETIME,BHS007              * load creation date/time
.
          BRANCH    VALDFLAG,WBHS9000            * validation phase only
.
.         Get next batch id from controlf.
.         If the purge flag is one, then increment the local variable for
.         batch number, as we don't want to update the control file field.
.         If the purge flag is zero, then we get the next number from
.         the control file and update the value.
.
          IF        PURGFLAG = 1
            ADD       ONE,SAVENBAT               * increment batch number
            MOVE      SAVENBAT,BATCHIDN
          ELSE
            MOVE      "106",PRXCODE              * System Lock Sector 106
            CALL      GETSLK00                   * Get System Lock-Sector 106
            READ      CONTROLF,HUND06;*37,ALCNBATI * next batch id
            MOVE      ALCNBATI,FORM20
            IF        FORM20 = 0
              MOVE      ONE,FORM20               * start at "1" if field is "0"
              MOVE      FORM20,ALCNBATI
            ENDIF
            MOVE      ALCNBATI,BATCHIDN
            ADD       ONE,FORM20
            MOVE      FORM20,ALCNBATI
            WRITAB    CONTROLF,HUND06;*37,ALCNBATI
            CALL      RELSLK00                   * Release System Lock-Sector
          ENDIF
.
          MOVE      BATCHIDN,BHS011              * load batch ID
          SQUEEZE   BHS011
.
WBHS9000  WRITE     EXTRFILE,SEQ;BHSSEGMT,*+,BHS001,BHS002,PIPE,BHS003,PIPE:
                                          BHS004,PIPE,BHS005,PIPE,BHS006,PIPE:
                                          BHS007,PIPE,BHS008,PIPE,BHS009,PIPE:
                                          BHS010,PIPE,BHS011,CRETURN;
.
WBHS9999  RETURN
+
.*****************************************************************************
.*                              WBTS0000           Called by: PROC0000       *
.*            Load and write the BTS segment variables                       *
.*****************************************************************************
.
WBTS0000  CALL      CBTS0000                     * clear BTS variables
.
          BRANCH    VALDFLAG,WBTS9999            * validation phase only
.
          MOVE      MESSGCNT,BTS001              * load message count
          SQUEEZE   BTS001
.
          WRITE     EXTRFILE,SEQ;BTSSEGMT,PIPE,*+,BTS001,CRETURN;
.
WBTS9999  RETURN
+
.*****************************************************************************
.*                              WFTS0000           Called by: PROC0000       *
.*            Load and write the FTS segment variables                       *
.*****************************************************************************
.
WFTS0000  CALL      CFTS0000                     * clear FTS variables
.
          BRANCH    VALDFLAG,WFTS9999            * validation phase only
.
          MOVE      BATCHCNT,FTS001              * load batch count
          SQUEEZE   FTS001
.
          WRITE     EXTRFILE,SEQ;FTSSEGMT,PIPE,*+,FTS001,CRETURN;
.
          CLOSE     EXTRFILE
.
WFTS9999  RETURN
+
.*****************************************************************************
.*                              WMSH0000           Called by: All messages   *
.*            Load and write the MSH segment variables                       *
.* Sent in: All messages.                                                    *
.* Requires:  IBCNMHOS - multi hospital parameter (0 = No, 1 = Yes)          *
.*            Valid read on pathspaf where multi hospital is turned on.      *
.*****************************************************************************
.
WMSH0000  CALL      CMSH0000                     * clear MSH variables
.
          BRANCH    VALDFLAG,WMSH1000            * validation phase only
.
          MOVE      PIPE,MSH001                  * load field separator
          MOVE      "^~\&",MSH002                * load encoding characters
          MOVE      FHS003,MSH003                * load sending application
.                                                  (HL70361)
          MOVE      FHS004,MSH004                * load sending facility
.                                                  (HL70362)
          MOVE      FHS006,MSH006                * load receiving facility
.                                                  (HL70362)
          CALL      GTDTTM00                     * get current date/time
          MOVE      DATETIME,MSH007              * load creation date/time
.
.         Load message type (HL70076^HL70003^HL70354)
.
          LOAD      MSH009,MESSNUMB,MESTYP01,MESTYP02,MESTYP03,MESTYP04:
                                    MESTYP05,MESTYP06,MESTYP07,MESTYP08:
                                    MESTYP09,MESTYP10,MESTYP11,MESTYP12:
                                    MESTYP13,MESTYP14,MESTYP15
.
.         If the purge flag is one, then increment the local variable for
.         message id, as we don't want to update the control file field.
.         If the purge flag is zero, then we get the next id from
.         the control file and update the value.
.
          IF        PURGFLAG = 1
            ADD       ONE,SAVENMES
            MOVE      SAVENMES,MSH010
          ELSE
            CALL      GTMESSID                     * load message control ID
          ENDIF
          SQUEEZE   MSH010
.
.         Check for standard or multi hospital environment for MSH.11
.
WMSH1000  IF        IBCNMHOS = 1
            MOVE      PTHSSPID,MSH011
          ELSE
            MOVE      ALCNSPID,MSH011            * load processing ID (HL70103)
          ENDIF
          MATCH     SP1,MSH011                   * proc. id blank ?
          IF        !@EQUAL
            MATCH     MSH011,ZERO6               * no - zero filled ?
            GOTO      WMSH1100 IF NOT EQUAL      * no
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "MSH.11.1 ",PRINEROR
          MOVE      "Processing Id is blank",PRINDESC
          CALL      PERR0000
.
WMSH1100  BRANCH    VALDFLAG,WMSH9999            * validation phase only
.
          MOVE      "2.5",MSH012                 * load version ID (HL70104)
          MOVE      "NE",MSH015                  * load accept ack. type
.                                                  (HL70155)
          MOVE      "NE",MSH016                  * load application ack. type
.                                                  (HL70155)
          MOVE      "AUS",MSH017                 * load country code (HL70399)
          MOVE      "ASCII",MSH018               * load character set (HL70211)
.
.>>>>>>   Need to check VALDFLAG (everywhere) as all fields need to be populated
.>>>>>    to check final length.  So best to go through all the VALDFLAG
.>>>>>    occurrences and make sure that all the fields are populated,
.>>>>>    then it will be valid to PACK up SEGSTRNG and check the length.
.>>>>>>   PACK       SEGSTRNG,MSHSEGMT,MSH001,MSH002,PIPE,MSH003,PIPE:
.                                      MSH004,PIPE,MSH005,PIPE,MSH006,PIPE:
.                                      MSH007,PIPE,MSH008,PIPE,MSH009,PIPE:
.                                      MSH010,PIPE,MSH011,PIPE,MSH012,PIPE:
.                                      MSH013,PIPE,MSH014,PIPE,MSH015,PIPE:
.                                      MSH016,PIPE,MSH017,PIPE,MSH018:
.                                      CRETURN
.
.         MOVELPTR  SEGSTRNG,FORM4
.         IF        FORM4 > 1000
.           MOVE      MISCDTTM,DIM14
.           CALL      FDTM0000
.           MOVE      "MSH.??.??",PRINEROR
.           MOVE      "HL7 record more than 1000 characters",PRINDESC
.           CALL      PERR0000
.         ENDIF
.
          WRITE     EXTRFILE,SEQ;MSHSEGMT,*+,MSH001,MSH002,PIPE,MSH003,PIPE:
                                          MSH004,PIPE,MSH005,PIPE,MSH006,PIPE:
                                          MSH007,PIPE,MSH008,PIPE,MSH009,PIPE:
                                          MSH010,PIPE,MSH011,PIPE,MSH012,PIPE:
                                          MSH013,PIPE,MSH014,PIPE,MSH015,PIPE:
                                          MSH016,PIPE,MSH017,PIPE,MSH018:
                                          CRETURN;
.
WMSH9999  RETURN
+
.*****************************************************************************
.*                              WPID0000           Called by: All messages   *
.*            Load and write the PID segment variables                       *
.* Sent in: All messages.                                                    *
.* Requires:  IBCNMHOS - multi hospital parameter (0 = No, 1 = Yes)          *
.*            Valid read on pathspaf where multi hospital is turned on.      *
.*****************************************************************************
.
WPID0000  CALL      CPID0000                     * clear PID variables
.
.         Clear PV1 variables here as we need to load some of the
.         fields for DVA status in PID.03/05.
.
          CALL      CPV10000                     * clear PV1 variables
.
          MOVE      ONE,PID001                   * load set ID
.
.         ** Note: Load the funding status for the visit (PV1.20) as we need to
.                  know the DVA status for the population of PID.03/05 and
.                  we need to know for the population of Medicare Number
.                  for prisoners and ineligible patients.
.
          CALL      GCLS0000                     * get contact account class
.
.         Load Health care establishment
.
          MOVE      IBCNHCEN,HCEIDENT
          MATCH     SP3,HCEIDENT                 * Health Care Est. blank ?
          IF        !@EQUAL
            MATCH     HCEIDENT,ZERO6             * no - zero filled ?
            IF        !@EQUAL
              STRIP     HCEIDENT                 * no - valid field
              GOTO      WPID1100
            ENDIF
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.3.1  ",PRINEROR
          MOVE      "Health Care Establishment is blank",PRINDESC
          CALL      PERR0000
.
.         Load Patient Identifier (PID.3)
.
WPID1100  MOVE      PURNO,PID003
          SQUEEZE   PID003
          ENDSET    PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          STRIP     HCEIDENT
          APPEND    HCEIDENT,PID003
          APPEND    CARET,PID003
          APPEND    ANSL,PID003
.
          IF        MESSNUMB <> 8 & MESSNUMB <> 9
            GOTO      WPID2000                     * not A03 or A13
          ENDIF
.
.         If A03 or A13 message, then load the patient Medicare number
.         (PID.3) for all Program Types except TCP.
.
          BRANCH    MISCPRGM,WPID1110:           * HARP
                             WPID1110:           * HBPCCT
                             WPID1110:           * Medi-Hotel
                             WPID1110:           * Palliative Care
                             WPID1110:           * Post Acute Care
                             WPID1110:           * RIR
                             WPID1110:           * SACS
                             WPID1110:           * Specialist O/P Clinic
                             WPID1170            * TCP
.
.         If this is Non-compensable (XX, ME & MF), then set the Medicare
.         number to "N-E"
.
WPID1110  MATCH     "XX",PV1020                  * Other Non-compensable ?
          GOTO      WPID1115 IF EQUAL            * yes - set to N-E
.
          MATCH     "20170701",REFIRDAT          * pre VINAH 13 ?
          GOTO      WPID1118 IF LESS             * yes - check next claim type
.
          MATCH     "ME",PV1020                  * Ineligible: Hospital Exempt ?
          GOTO      WPID1115 IF EQUAL            * yes - set to N-E
.
          MATCH     "MF",PV1020                  * Ineligible: Asylum Seeker ?
          GOTO      WPID1118 IF NOT EQUAL        * no
.
WPID1115  APPEND    "~",PID003
          APPEND    CARET,PID003
          APPEND    "N-E",PID003
          GOTO      WPID1150
.
.         If this is a prisoner, then set the Medicare number to "P-N"
.
WPID1118  MATCH     "JP",PV1020
          IF        @EQUAL
            APPEND    "~",PID003
            APPEND    CARET,PID003
            APPEND    "P-N",PID003
            GOTO      WPID1150
          ENDIF
.
.         If this is a reciprocal health care agreement, then set the
.         Medicare number to "C-U"
.
          MATCH     "MA",PV1020
          GOTO      WPID1140 IF EQUAL
.
          MOVE      ZERO,LINKFLAG                * initialise linked flag
.
          MATCH     SP10,PMEDI                   * Medicare number blank ?
          GOTO      WPID1130 IF NOT EQUAL        * no
.
.         The Medicare Number is blank, so check if this is an unamed baby
.
          MATCH     "Baby of",PMPXFNAM           * unnamed baby ?
          GOTO      WPID1140 IF NOT EQUAL        * yes
.
.         This is an unnamed baby, so check if the baby is
.         linked to a mother and if so, use the mother's Medicare Number
.         with a suffix of "BAB" and a Medicare Reference Number of "0"
.
          PACK      KEY16,PURNO,SP20
          CALL      RDSLINK1                     * position before U/R
WPID1120  CALL      RDKLINK1                     * read next record
          BRANCH    OVRCD,WPID1140               * eof - no link found
.
          MATCH     PURNO,LINKFUR                * same U/R still ?
          GOTO      WPID1140 IF NOT EQUAL        * no - no link found
.
          MATCH     SP3,LINKREA                  * blank reason for link ?
          GOTO      WPID1120 IF EQUAL            * yes - ignore record
.
          PACK      KEY5,ANSL,ANSU,LINKREA
          CALL      RDCODE1                      * link reason on file ?
          BRANCH    OVRCD,WPID1120               * no - ignore record
.
          MATCH     ANSM,TCINDC1                 * is Indicator 1 = "M" ?
          GOTO      WPID1120 IF NOT EQUAL        * no - ignore record
.
.         We have a mother-baby link, so get the mother's PMI details
.
          MOVE      ONE,LINKFLAG                 * set linked flag
.
          MOVE      LINKTUR,KEY8
          CALL      RDMAST1                      * mother's PMI on file ?
          IF        OVRCD = 1
            MOVE      LINKFUR,KEY8
            CALL      RDMAST1                    * re-read original PMI record
            IF        OVRCD = 1
              MOVE      MISCDTTM,DIM14            
              CALL      FDTM0000
              MOVE      "PID.3.16 ",PRINEROR
              MOVE      "Unable to reposition on patient PMI Master",PRINDESC
              CALL      PERR0000
              GOTO      WPID1140
            ENDIF
            GOTO      WPID1120
          ENDIF
.
          MATCH     SP10,PMEDI                   * blank mother's medicare # ?
          GOTO      WPID1140 IF EQUAL            * yes
.
WPID1130  APPEND    "~",PID003
          APPEND    PMEDI,PID003                 * load Medicare No.
.
          BRANCH    LINKFLAG,WPID1135            * using linked mother's m'care
.
.         We are using the patient's medicare number, so load the refererence
.         number
.
          MATCH     SP2,PTMXMCCD                 * m/care ref. number blank ?
          IF        !@EQUAL
            MOVE      PTMXMCCD,KEY2              * no
            SQUEEZE   KEY2
            APPEND    KEY2,PID003
          ENDIF
          APPEND    CARET,PID003
          MOVE      PMPXFNAM,KEY3                * load 1st 3 chars. g'name
          APPEND    KEY3,PID003
          GOTO      WPID1150
.
.         Using linked mother's medicare number
.
WPID1135  APPEND    "0",PID003                   * hard-code Medicare Ref No.
          APPEND    CARET,PID003
          APPEND    "BAB",PID003
.
.         Restore the original patient's PMI details if we had to read a linked
.         mother's PMI record
.
          MOVE      LINKFUR,KEY8
          CALL      RDMAST1                      * re-read original PMI record
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14            
            CALL      FDTM0000
            MOVE      "PID.3.15 ",PRINEROR
            MOVE      "Unable to reposition on patient PMI Master",PRINDESC
            CALL      PERR0000
          ENDIF
.
          GOTO      WPID1150
.
WPID1140  APPEND    "~",PID003
          APPEND    CARET,PID003
          APPEND    "C-U",PID003
.
WPID1150  APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "AUSHIC",PID003
          APPEND    CARET,PID003
          APPEND    ANSE,PID003
.
.         Load compensable claim identifiers (PID.3).
.         Compensable claim identifiers are only sent for A03 & A13 messages
.         (contacts) and for all program types other than Medi-Hotel & HBPCCT
.
WPID1170  BRANCH    MISCPRGM,WPID1200:           * HARP
                             WPID2000:           * HBPCCT
                             WPID2000:           * Medi-Hotel
                             WPID1200:           * Palliative Care
                             WPID1200:           * Post Acute Care
                             WPID1200:           * RIR
                             WPID1200:           * SACS
                             WPID1200:           * Specialist O/P Clinic
                             WPID1200            * TCP
.
.         If compensable patient with Account Class of VX and
.         A03 or A13 message, then load DVA identifier
.
WPID1200  MATCH     "VX",PV1020                  * DVA compensable ?
          IF        @EQUAL
            CALL      GDVA0000                   * yes - get DVA card number
            GOTO      WPID1400
          ENDIF
.
.         If compensable patient with Account Class of WC and
.         A03 or A13 message, then load WC identifier unless TCP
.
          COMPARE   NINE,MISCPRGM                * TCP ?
          GOTO      WPID2000 IF EQUAL            * yes - ignore
.
          MATCH     "WC",PV1020                  * Workers compensation ?
          GOTO      WPID1300 IF NOT EQUAL        * no
.
          MOVE      SP20,WCCLMNO                 * yes - default claim no.
          MOVE      MISCVISN,KEY8
          CALL      RDWCOM1
.
          APPEND    "~",PID003
          MATCH     SP20,WCCLMNO
          IF        @EQUAL
            APPEND    "C-U",PID003
          ELSE
            MOVE      WCCLMNO,DIM20
            CALL      VWCO0000                   * validate claim number
            APPEND    DIM20,PID003
          ENDIF
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "AUSVWA",PID003
          APPEND    CARET,PID003
          APPEND    ANSE,PID003
          GOTO      WPID1400
.
.         If compensable patient with Account Class of TA and
.         A03 or A13 message, then load TAC identifier unless TCP
.
WPID1300  MATCH     "TA",PV1020                  * TAC compensable ?
          GOTO      WPID2000 IF NOT EQUAL        * no
.
          MOVE      SP20,MREFNO                  * initialise claim number
          MOVE      MISCVISN,KEY8                * yes
          CALL      RDWMAB1
.
          APPEND    "~",PID003
          MATCH     SP20,MREFNO
          IF        @EQUAL
            APPEND    "C-U",PID003
          ELSE
            MOVE      MREFNO,DIM20
            CALL      VTAC0000                   * validate TAC claim no.
            APPEND    MREFNO,PID003
          ENDIF
          RESET     PID003
          STRIP     PID003
          ENDSET    PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "AUSTACV",PID003
          APPEND    CARET,PID003
          APPEND    ANSE,PID003
.
.         Load patient name (PID.5 name type - HL70200) for A03 and A13
.         messages and for compensable account class only (DVA, Workers Comp
.         or TAC).
.
WPID1400  BRANCH    MISCPRGM,WPID1500:           * HARP
                             WPID2000:           * HBPCCT
                             WPID2000:           * Medi-Hotel
                             WPID1500:           * Palliative Care
                             WPID1500:           * Post Acute Care
                             WPID1500:           * RIR
                             WPID1500:           * SACS
                             WPID1500:           * Specialist O/P Clinic
                             WPID2000            * TCP
.
WPID1500  MOVE      PTMASNAM,DIM40               * load surname
          STRIP     DIM40
          MOVE      DIM40,PID005
          APPEND    CARET,PID005
          MOVE      PMPXFNAM,DIM40               * load first given name
          STRIP     DIM40
          APPEND    DIM40,PID005
          APPEND    SP1,PID005
          MOVE      PMPXSNAM,DIM40               * load second given name
          STRIP     DIM40
          APPEND    DIM40,PID005
          APPEND    CARET,PID005
          APPEND    CARET,PID005
          APPEND    CARET,PID005
          APPEND    CARET,PID005
          APPEND    CARET,PID005
          APPEND    ANSL,PID005
          RESET     PID005
.
WPID2000  RESET     PID003
          COMPARE   FOUR,MESSNUMB                * PMI Message ?
          GOTO      WPID2100 IF NOT LESS         * no
.
.         Load Patient Date of Birth (PID.7) for ADT-A04, ADT-A08 and ADT-A40
.         only.
.
          MOVE      PBDATE,PID007

          COMPARE   THREE,MESSNUMB               * A40 Message ?
          GOTO      WPID2100 IF EQUAL            * yes
.
.         Load patient sex (PID.8 HL70001) for ADT-A04, and ADT-A08 only
.
          MATCH     SP1,PSEX                     * sex blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PID.8.2  ",PRINEROR
            MOVE      "Gender is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPID2100
          ENDIF
.
          MOVE      PSEX,PID008
          REP       "M1F2U0I3R4",PID008
          MATCH     "0",PID008                   * valid sex for VINAH ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PID.8.1  ",PRINEROR
            MOVE      "Gender is not valid",PRINDESC
            CALL      PERR0000
          ENDIF
.
WPID2100  IF        MESSNUMB <> 8 & MESSNUMB <> 9
            GOTO      WPID2500
          ENDIF
.
.         Load Indigenous Status (PID.10 HL70005) for ADT-A03 and ADT-A13
.
          BRANCH    MISCPRGM,WPID2200:           * HARP
                             WPID2200:           * HBPCCT
                             WPID2500:           * Medi-Hotel
                             WPID2200:           * Palliative Care
                             WPID2200:           * Post Acute Care
                             WPID2200:           * RIR
                             WPID2200:           * SACS
                             WPID2200:           * Specialist O/P Clinic
                             WPID2200            * TCP
.
WPID2200  MATCH     SP3,PMPXABRG                 * blank code ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PID.10.1 ",PRINEROR
            MOVE      "Indigenous Status is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPID2500
          ENDIF
.
          PACK      KEY5,ANSV,ANSA,PMPXABRG
          CALL      RDCODE1                      * code found ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PID.10.2 ",PRINEROR
            MOVE      "Indigenous Status (Cat VA/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PMPXABRG,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPID2500
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PID.10.3 ",PRINEROR
            MOVE      "Indigenous Status (Cat VA/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PMPXABRG,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPID2500
          ENDIF
.
          UNPACK    THCSCOD,ANS,ANS              * use 2nd character
          TYPE      ANS                          * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PID.10.4 ",PRINEROR
            MOVE      "Indigenous Status (Cat VA/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PMPXABRG,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPID2500
          ENDIF
.
.         Check if HDP default is valid
.
          MOVE      ANS,FORM1
          BRANCH    FORM1,WPID2400:              * Aboriginal
                          WPID2400:              * Torres Strait Islander
                          WPID2400:              * Aboriginal & TSI
                          WPID2400:              * Not indigenous
                          WPID2300:              * Not valid
                          WPID2300:              * Not valid
                          WPID2300:              * Not valid
                          WPID2400:              * unable to ask
                          WPID2400               * refused to answer
.
WPID2300  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.10.5 ",PRINEROR
          MOVE      "Indigenous Status (Cat VA/",PRINDESC
          ENDSET    PRINDESC
          APPEND    PMPXABRG,PRINDESC
          APPEND    ") HDP Default not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPID2500
.
WPID2400  MOVE      ANS,PID010                   * load aboriginality
.
WPID2500  COMPARE   FOUR,MESSNUMB                * PMI Message ?
          GOTO      WPID3000 IF NOT LESS         * no
.
.         Load address (PID.11 990025) for A04, A08 & A40 messages only
.
          MATCH     PSUBRB,SP70                  * blank suburb ?
          GOTO      WPID2800 IF EQUAL            * yes
.
          MATCH     PADD4,SP70                   * blank state ?
          GOTO      WPID2600 IF EQUAL            * yes
.
.         Check if the postcode/suburb/state combination is valid
.
          PACK      KEY45,PSUBRB,SP70
          PACK      KEY56,PPOST,KEY45,PADD4
          CALL      RDIBPOS1                     * pcode/suburb/state on file ?
          COMPARE   ZERO,OVRCD
          GOTO      WPID2900 IF EQUAL            * yes
.
.         Check if the postcode/suburb combination is valid
.
WPID2600  PACK      KEY56,PPOST,PSUBRB,SP70
          CALL      RDIBPOS1                     * postcode/suburb on file ?
          COMPARE   ZERO,OVRCD
          GOTO      WPID2900 IF EQUAL            * yes - valid
.
          CALL      RKIBPOS1                     * no - get next record
          BRANCH    OVRCD,WPID2700
.
          MATCH     PPOST,IBPOPCOD               * same postcode still ?
          GOTO      WPID2700 IF NOT EQUAL        * no - error
.
          MATCH     PSUBRB,IBPOSUBR              * same suburb still ?
          GOTO      WPID2900 IF EQUAL            * yes
.
WPID2700  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.11.1  ",PRINEROR
          MOVE      "Postcode/Suburb not valid",PRINDESC
          CALL      PERR0000
          GOTO      WPID3000
.
WPID2800  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.11.2  ",PRINEROR
          MOVE      "Suburb is not populated",PRINDESC
          CALL      PERR0000
          GOTO      WPID3000
.
.         We have a valid suburb/postcode combination, so check if it
.         is an overseas address
.
WPID2900  MATCH     "OS ",IBPOSTAT               * overseas address ?
          IF        @EQUAL
            PACK      PID011,CARET,CARET,IBPOPCOD
            STRIP     PID011
            ENDSET    PID011
            APPEND    CARET,PID011
            APPEND    CARET,PID011
            APPEND    "8888",PID011
          ELSE
            PACK      PID011,CARET,CARET,PSUBRB  * no
            STRIP     PID011
            ENDSET    PID011
            APPEND    CARET,PID011
            APPEND    CARET,PID011
            APPEND    PPOST,PID011
          ENDIF
          RESET     PID011
          STRIP     PID011
.
.         Load preferred language (PID.15 HL70296)
.
WPID3000  IF        MESSNUMB <> 8 & MESSNUMB <> 9
            GOTO      WPID4000
          ENDIF
.
          BRANCH    MISCPRGM,WPID3100:           * HARP
                             WPID3100:           * HBPCCT
                             WPID4000:           * Medi-Hotel
                             WPID3100:           * Palliative Care
                             WPID3100:           * Post Acute Care
                             WPID3100:           * RIR
                             WPID3100:           * SACS
                             WPID3100:           * Specialist O/P Clinic
                             WPID4000            * TCP
.
WPID3100  MATCH     SP3,PMPXLNG1                 * blank preferred language ?
          IF        @EQUAL
            MOVE      "0002",PID015              * yes
            GOTO      WPID4000
          ENDIF
.
          PACK      KEY5,ANSL,ANSA,PMPXLNG1
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PID.15.1 ",PRINEROR
            MOVE      "Preferred Language (Cat LA/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PMPXLNG1,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPID4000
          ENDIF
.
          MATCH     SP4,PTCDNHCP                 * HCP Equiv. blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PID.15.2 ",PRINEROR
            MOVE      "Preferred Language (Cat LA/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PMPXLNG1,PRINDESC
            APPEND    ") HCP Equiv. is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPID4000
          ENDIF
.
          MOVE      PTCDNHCP,PID015
          STRIP     PID015
.
          TYPE      PID015                       * HCP Equiv. numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PID.15.3 ",PRINEROR
            MOVE      "Preferred Language (Cat LA/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PMPXLNG1,PRINDESC
            APPEND    ") HCP Equiv. not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPID4000
          ENDIF
.
          MOVELPTR  PID015,FORM1                 * HCP Equiv. valid ?
          IF        FORM1 <> 4
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PID.15.4 ",PRINEROR
            MOVE      "Preferred Language (Cat LA/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PMPXLNG1,PRINDESC
            APPEND    ") HCP Equiv. not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
WPID4000  COMPARE   FOUR,MESSNUMB                * PMI Message ?
          GOTO      WPID7000 IF NOT LESS         * no
.
.         Load country of birth (PID.23 990032) for A04, A08 and A40 only
.
          MATCH     SP3,PCONT                    * country of birth blank ?
          GOTO      WPID4500 IF NOT EQUAL        * no
.
.         CAR 308962 - If this patient has a temporary U/R and the
.                      COB is blank, autopopulate the field with "0003"
.                      (Unknown)
.
          MATCH     "T-",PURNO                   * temporary U/R number ?
          IF        @EQUAL
            MOVE      "0003",PID023              * yes - set to not stated
            GOTO      WPID5000
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.23.1 ",PRINEROR
          MOVE      "Country of Birth is blank",PRINDESC
          CALL      PERR0000
          GOTO      WPID5000
.
WPID4500  PACK      KEY5,ANSC,SP1,PCONT
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PID.23.2 ",PRINEROR
            MOVE      "Country of Birth (Cat C/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PCONT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPID5000
          ENDIF
.
          MATCH     SP4,PTCDNHCP                 * HCP Equiv. blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PID.23.3 ",PRINEROR
            MOVE      "Country of Birth (Cat C/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PCONT,PRINDESC
            APPEND    ") HCP Equiv. is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPID5000
          ENDIF
.
          MOVE      PTCDNHCP,PID023
          STRIP     PID023
.           
          TYPE      PID023                       * HCP Equiv. numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PID.23.4 ",PRINEROR
            MOVE      "Country of Birth (Cat C/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PCONT,PRINDESC
            APPEND    ") HCP Equiv. not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
.         Load the DOB Accuracy field (PID.32) for A04, A08 and A40 only
.         (HL70445)
.
WPID5000  BRANCH    MISCPRGM,WPID5100:           * HARP
                             WPID6000:           * HBPCCT
                             WPID5100:           * Medi-Hotel
                             WPID5100:           * Palliative Care
                             WPID5100:           * Post Acute Care
                             WPID5100:           * RIR
                             WPID5100:           * SACS
                             WPID5100:           * Specialist O/P Clinic
                             WPID5100            * TCP
.
WPID5100  MATCH     "1",PMPXEDOB                 * unknown DOB ?
          IF        !@EQUAL
            MOVE      "AAA",PID032               * no
            GOTO       WPID6000
          ENDIF
.
.         VINAH does not accept a Year component of "U" (Unknown), so
.         always set this to "E".
.
          MOVE      ANSE,PID032                  * no
          ENDSET    PID032
.
.         Check if the month is unknown (01)
.
          UNPACK    PBDATE,ANS,ANS,ANS,ANS,DIM2
          MATCH     "01",DIM2                    * month unknown ?
          IF        @EQUAL
            APPEND    ANSU,PID032                * yes
          ELSE
            APPEND    ANSE,PID032                * no
          ENDIF
.
.         Check if the day is unknown (01)
.
          UNPACK    PBDATE,ANS,ANS,ANS,ANS,ANS,ANS,DIM2
          MATCH     "01",DIM2                    * day unknown ?
          IF        @EQUAL
            APPEND    ANSU,PID032                * yes
          ELSE
            APPEND    ANSE,PID032                * no
          ENDIF
          RESET     PID032
.
.         Load Death Date (PID.29) for A04, A08 and A40 only
.
WPID6000  COMPARE   ONE,PCEASE                   * patient deceased ?
          GOTO      WPID7000 IF NOT EQUAL        * no
.
          MOVE      ZERO,DEATHFLG                * initialise death flag
.
          MATCH     SP8,PDECDTE                  * yes - blank date of death ?
          IF        !@EQUAL
            MOVE      PDECDTE,PID029             * no - use date of death
            GOTO      WPID6500
          ENDIF
.
.         The date of death is blank, so check if there is a deceased audit
.         record for the patient
.
          PACK      KEY27,PURNO,ZERO,ZERO,ONE,TILDA50
          CALL      RSPMDAU2                     * position after U/R
          CALL      RPPMDAU2                     * read previous record
          BRANCH    OVRCD,WPID6300               * eof - error
.
          MATCH     PURNO,PMDEURNO               * same U/R still ?
          GOTO      WPID6300 IF NOT EQUAL        * no - error
.
          MATCH     "001",PMDERTYP               * death record type still ?
          GOTO      WPID6300 IF NOT EQUAL        * no - error
.
          MOVE      ONE,DEATHFLG
          MOVE      PMDECDAT,PID029              * load deceased audit date
          GOTO      WPID6500
.
WPID6300  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.29.1 ",PRINEROR
          MOVE      "Deceased Audit Date not found",PRINDESC
          RESET     PRINDESC
          GOTO      WPID7000
.
WPID6500  MOVE      MISCDTTM,DIM8
          MATCH     PID029,DIM8                  * trigger date < death date ?
          GOTO      WPID7000 IF LESS             * yes
.
          MATCH     PBDATE,PID029                * death date < birth date ?
          IF        @LESS
            MOVE      MISCDTTM,DIM14             * yes - error
            CALL      FDTM0000
            MOVE      "PID.29.2 ",PRINEROR
            MOVE      "Date of Death is less than Date of Birth",PRINDESC
            RESET     PRINDESC
            GOTO      WPID7000
          ENDIF
.
.         Load the DOD Accuracy (PID.32) field for A04, A08 and A40 only
.         (HL70445)
.
          ENDSET    PID032
          APPEND    "~",PID032
.
.         If we're using the deceased audit date, then we always send this
.         as "EUU"
.
          IF        DEATHFLG = 1
            APPEND    "EUU",PID032
            GOTO      WPID6900
          ENDIF
.
.         We're using the date of death, so determine how the accuracy
.         field is set
.
          MATCH     "Y",PTMAUKDD                 * unknown DOD ?
          IF        !@EQUAL
            APPEND    "AAA",PID032               * no
            GOTO      WPID6900
          ENDIF
.
.         VINAH does not accept a Year component of "U" (Unknown), so
.         always set this to "E".
.
          APPEND    ANSE,PID032
.
.         Check if the month is unknown (01)
.
          UNPACK    PDECDTE,ANS,ANS,ANS,ANS,DIM2
          MATCH     "01",DIM2                    * month unknown ?
          IF        @EQUAL
            APPEND    ANSU,PID032                * yes
          ELSE
            APPEND    ANSE,PID032                * no
          ENDIF
.
.         Check if the day is unknown (01)
.
          UNPACK    PDECDTE,ANS,ANS,ANS,ANS,ANS,ANS,DIM2
          MATCH     "01",DIM2                    * day unknown ?
          IF        @EQUAL
            APPEND    ANSU,PID032                * yes
          ELSE
            APPEND    ANSE,PID032                * no
          ENDIF
WPID6900  RESET     PID032
.
WPID7000  BRANCH    VALDFLAG,WPID9999            * validation phase only
.
          IF        MESSNUMB < 4
            WRITE     EXTRFILE,SEQ;PIDSEGMT,PIPE,*+,PID001,PIPE,PID002,PIPE:
                                   PID003,PIPE,PID004,PIPE,PID005,PIPE:
                                   PID006,PIPE,PID007,PIPE,PID008,PIPE:
                                   PID009,PIPE,PID010,PIPE,PID011,PIPE:
                                   PID012,PIPE,PID013,PIPE,PID014,PIPE:
                                   PID015,PIPE,PID016,PIPE,PID017,PIPE:
                                   PID018,PIPE,PID019,PIPE,PID020,PIPE:
                                   PID021,PIPE,PID022,PIPE,PID023,PIPE:
                                   PID024,PIPE,PID025,PIPE,PID026,PIPE:
                                   PID027,PIPE,PID028,PIPE,PID029,PIPE:
                                   PID030,PIPE,PID031,PIPE,PID032,CRETURN;
          ELSE
            IF        MESSNUMB = 8 | MESSNUMB = 9
              WRITE     EXTRFILE,SEQ;PIDSEGMT,PIPE,*+,PID001,PIPE,PID002,PIPE:
                                     PID003,PIPE,PID004,PIPE,PID005,PIPE:
                                     PID006,PIPE,PID007,PIPE,PID008,PIPE:
                                     PID009,PIPE,PID010,PIPE,PID011,PIPE:
                                     PID012,PIPE,PID013,PIPE,PID014,PIPE:
                                     PID015,CRETURN;
            ELSE
              WRITE     EXTRFILE,SEQ;PIDSEGMT,PIPE,*+,PID001,PIPE,PID002,PIPE:
                                     PID003,PIPE,PID004,PIPE,PID005,PIPE:
                                     PID006,PIPE,PID007,PIPE,PID008,PIPE:
                                     PID009,PIPE,PID010,PIPE,PID011,CRETURN;
            ENDIF
          ENDIF
.
WPID9999  RETURN
+
.*****************************************************************************
.*                              WPDA0000           Called by: WA040000       *
.*            Load and write the PDA segment variables        WA080000       *
.* Sent in: A04 & A08 only.                                                  *
.*****************************************************************************
.
WPDA0000  CALL      CPDA0000                     * clear PDA variables
.
.         Load death place (PDA.2 990034) for A04 & A08 only
.         If there are messages relating to Palliative Care, then this
.         field is required to be populated.
.
          COMPARE   ZERO,PRGARRAY[4]
          GOTO      WPDA9999 IF EQUAL
.
.         Check if the patient is deceased
.
          COMPARE   ONE,PCEASE                   * patient deceased ?
          GOTO      WPDA9999 IF NOT EQUAL        * no - finished
.
          MOVE      MISCDTTM,DIM8
          MATCH     PDECDTE,DIM8                 * trigger date < death date
          GOTO      WPDA9999 IF LESS             * yes
.
          MATCH     SP3,PATNDTHP                 * blank code ?
          GOTO      WPDA1000 IF NOT EQUAL        * no
.
.         If the patient death place value is blank, then use the saved
.         variable to load the latest value for the batch
.
          MATCH     SP3,SAVEDTHP
          IF        !@EQUAL
            MOVE      SAVEDTHP,PATNDTHP
            GOTO      WPDA1000
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PDA.2.1  ",PRINEROR
          MOVE      "Patient Death Place is blank",PRINDESC
          CALL      PERR0000
          GOTO      WPDA9000
.
WPDA1000  PACK      KEY5,LOWCASEL,LOWCASEJ,PATNDTHP
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PDA.2.2  ",PRINEROR
            MOVE      "Patient Death Place (Cat lj/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNDTHP,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPDA9000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PDA.2.3  ",PRINEROR
            MOVE      "Patient Death Place (Cat lj/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNDTHP,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPDA9000
          ENDIF
.
          MOVE      THCSCOD,DIM4
          STRIP     DIM4
.
          TYPE      DIM4                         * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PDA.2.4  ",PRINEROR
            MOVE      "Patient Death Place (Cat lj/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNDTHP,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPDA9000
          ENDIF
.
          MOVELPTR  DIM4,FORM1                   * 2-digit code ?
          IF        FORM1 <> 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PDA.2.5  ",PRINEROR
            MOVE      "Patient Death Place (Cat lj/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNDTHP,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPDA9000
          ENDIF
.
.         Check for valid values
.
          MOVE      DIM4,DIM2
          MOVE      DIM2,FORM2                   * HDP Default valid ?
          IF        FORM2 <> 10 & FORM2 <> 21 & FORM2 <> 22 & FORM2 <> 30 & FORM2 <> 41 & FORM2 <> 42 & FORM2 <> 99
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PDA.2.6  ",PRINEROR
            MOVE      "Patient Death Place (Cat lj/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNDTHP,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
          PACK      PDA002,CARET,CARET,CARET,CARET,CARET,DIM4
.
WPDA9000  BRANCH    VALDFLAG,WPDA9999            * validation phase only
.
          WRITE     EXTRFILE,SEQ;PDASEGMT,PIPE,*+,PDA001,PIPE,PDA002,CRETURN;
.
WPDA9999  RETURN
+
.*****************************************************************************
.*                              WPD10000           Called by: WA040000       *
.*            Load and write the PD1 segment variables        WA080000       *
.* Sent in: A04, A08, A03 & A13 only.                         WA030000       *
.*                                                            WA130000       *
.*****************************************************************************
.
WPD10000  CALL      CPD10000                     * clear PD1 variables
.
          COMPARE   THREE,MESSNUMB               * PMI Message (A04 or A08)?
          GOTO      WPD12000 IF NOT LESS         * no
.
.         Load living arrangement (PD1.2 HL70220) for A04 & A08 only.
.         If there are messages relating to HARP, PC, PAC, SACS
.         or TCP, then this field is required to be populated.
.
          IF        !(PRGARRAY[1] = 1 | PRGARRAY[4] = 1 | PRGARRAY[5] = 1 | PRGARRAY[7] = 1 | PRGARRAY[9] = 1)
            GOTO      WPD19000
          ENDIF
.
          MATCH     SP3,PATNLARR                 * blank code ?
          GOTO      WPD11200 IF NOT EQUAL        * no
.
.         If the living arrangement value is blank, then use the saved
.         variable to load the latest value for the batch
.
          MATCH     SP3,SAVELARR
          IF        !@EQUAL
            MOVE      SAVELARR,PATNLARR
            GOTO      WPD11200
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PD1.2.1  ",PRINEROR
          MOVE      "Living Arrangement is blank",PRINDESC
          CALL      PERR0000
          GOTO      WPD19000
.
WPD11200  PACK      KEY5,LOWCASEL,ANSL,PATNLARR
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PD1.2.2  ",PRINEROR
            MOVE      "Living Arrangement (Cat lL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNLARR,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPD19000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PD1.2.3  ",PRINEROR
            MOVE      "Living Arrangement (Cat lL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNLARR,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPD19000
          ENDIF
.
          MOVE      THCSCOD,PD1002
          STRIP     PD1002
.
          TYPE      PD1002                       * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PD1.2.4  ",PRINEROR
            MOVE      "Living Arrangement (Cat lL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNLARR,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPD19000
          ENDIF
.
          MOVELPTR  PD1002,FORM1                 * 1-digit code ?
          IF        FORM1 <> 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PD1.2.5  ",PRINEROR
            MOVE      "Living Arrangement (Cat lL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNLARR,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPD19000
          ENDIF
.
.         Check for valid values
.
          MOVE      PD1002,FORM1                 * HDP Default valid ?
          IF        FORM1 < 1 | (FORM1 > 3 & FORM1 <> 9)
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PD1.2.6  ",PRINEROR
            MOVE      "Living Arrangement (Cat lL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNLARR,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
          GOTO      WPD19000
.
.         Load Contact Preferred Death Place (PD1.15 HL70435)
.         for A03 & A13 messages only.
.         Check which program types require the field to be populated.
.
WPD12000  BRANCH    MISCPRGM,WPD19999:           * HARP
                             WPD19999:           * HBPCCT
                             WPD19999:           * Medi-Hotel
                             WPD12500:           * Palliative Care
                             WPD19999:           * Post Acute Care
                             WPD19999:           * RIR
                             WPD19999:           * SACS
                             WPD19999:           * Specialist O/P Clinic
                             WPD19999            * TCP
.
WPD12500  MATCH     SP3,CONTPDPL                 * blank pref. death place ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PD1.15.1 ",PRINEROR
            MOVE      "Preferred Death Place is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
          PACK      KEY5,LOWCASEZ,LOWCASEH,CONTPDPL
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PD1.15.2 ",PRINEROR
            MOVE      "Preferred Death Place (Cat zh/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPDPL,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPD19000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PD1.15.3 ",PRINEROR
            MOVE      "Preferred Death Place (Cat zh/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPDPL,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPD19000
          ENDIF
.
          MOVE      THCSCOD,PD1015
          STRIP     PD1015
.
          TYPE      PD1015                       * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PD1.15.4 ",PRINEROR
            MOVE      "Preferred Death Place (Cat zh/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPDPL,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPD19000
          ENDIF
.
          MOVELPTR  PD1015,FORM1                 * 2-digit code ?
          IF        FORM1 <> 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PD1.15.5 ",PRINEROR
            MOVE      "Preferred Death Place (Cat zh/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPDPL,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPD19000
          ENDIF
.
.         Check for valid values
.
          MOVE      PD1015,FORM2                 * HDP default valid ?
          IF        FORM2 <> 10 & FORM2 <> 21 & FORM2 <> 22 & FORM2 <> 30 & FORM2 <> 41 & FORM2 <> 42 & FORM2 <> 97 & FORM2 <> 98 & FORM2 <> 99
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PD1.15.6 ",PRINEROR
            MOVE      "Preferred Death Place (Cat zh/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPDPL,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
WPD19000  BRANCH    VALDFLAG,WPD19999            * validation phase only
.
          IF        MESSNUMB < 4
            WRITE     EXTRFILE,SEQ;PD1SEGMT,PIPE,*+,PD1001,PIPE,PD1002,CRETURN;
          ELSE
            WRITE     EXTRFILE,SEQ;PD1SEGMT,PIPE,*+,PD1001,PIPE,PD1002,PIPE:
                                   PD1003,PIPE,PD1004,PIPE,PD1005,PIPE,PD1006:
                                   PIPE,PD1007,PIPE,PD1008,PIPE,PD1009,PIPE:
                                   PD1010,PIPE,PD1011,PIPE,PD1012,PIPE,PD1013:
                                   PIPE,PD1014,PIPE,PD1015,CRETURN;
          ENDIF
.
WPD19999  RETURN
+
.*****************************************************************************
.*                              WNK10000           Called by: WA040000       *
.*            Load and write the NK1 segment variables        WA080000       *
.* Sent in: A04 & A08 only.                                                  *
.*****************************************************************************
.
WNK10000  CALL      CNK10000                     * clear NK1 variables
.
          MOVE      ONE,NK1001                   * load set ID
.
.         Load main carer's relationship to the patient (NK1.3 HL70063)
.         A04 & A08 only.
.         If there are messages relating to HARP, PC, PAC, RIR, SACS
.         or TCP, then this field is required to be populated.
.
          IF        !(PRGARRAY[1] = 1 | PRGARRAY[4] = 1 | PRGARRAY[5] = 1 | PRGARRAY[6] = 1 | PRGARRAY[7] = 1 | PRGARRAY[9] = 1)
            GOTO      WNK12000
          ENDIF
.
          MATCH     SP3,PATNMREL                 * code blank ?
          GOTO      WNK11000 IF NOT EQUAL        * no
.
.         If the main carer relationship value is blank, then use the saved
.         variable to load the latest value for the batch
.
          MATCH     SP3,SAVEMREL
          GOTO      WNK12000 IF EQUAL
.
          MOVE      SAVEMREL,PATNMREL
.
WNK11000  PACK      KEY5,LOWCASEL,ANSE,PATNMREL
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.3.1  ",PRINEROR
            MOVE      "Main Carer's Relationship (Cat lE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNMREL,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK12000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "NK1.3.2  ",PRINEROR
            MOVE      "Main Carer's Relationship (Cat lE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNMREL,PRINDESC
            APPEND    ") HDP default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK12000
          ENDIF
.
          MOVE      THCSCOD,NK1003
          STRIP     NK1003
.
          TYPE      NK1003                       * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.3.3  ",PRINEROR
            MOVE      "Main Carer's Relationship (Cat lE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNMREL,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK12000
          ENDIF
.
          MOVELPTR  NK1003,FORM1                 * 2-digit code ?
          IF        FORM1 <> 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.3.4  ",PRINEROR
            MOVE      "Main Carer's Relationship (Cat lE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNMREL,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK12000
          ENDIF
.
.         Check for valid values
.
          MOVE      NK1003,FORM2                 * HDP Default valid ?
          IF        FORM2 <> 10 & FORM2 <> 20 & FORM2 <> 30 & FORM2 <> 40 & FORM2 <> 50 & FORM2 <> 60 & FORM2 <> 70
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.3.5  ",PRINEROR
            MOVE      "Main Carer's Relationship (Cat lE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNMREL,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
.         Load carer availability (NK1.7 HL70131 - Contact Role) A04 & A08 only.
.         If there are messages relating to HARP, PC, PAC, RIR, SACS
.         or TCP, then this field is required to be populated.
.
WNK12000  IF        !(PRGARRAY[1] = 1 | PRGARRAY[4] = 1 | PRGARRAY[5] = 1 | PRGARRAY[6] = 1 | PRGARRAY[7] = 1 | PRGARRAY[9] = 1)
            GOTO      WNK13000
          ENDIF
.
          MATCH     SP3,PATNCAVL                 * code blank ?
          GOTO      WNK12550 IF NOT EQUAL        * no
.
.         If the carer availability value is blank, then use the saved
.         variable to load the latest value for the batch
.
          MATCH     SP3,SAVECAVL
          IF        !@EQUAL
            MOVE      SAVECAVL,PATNCAVL
            GOTO      WNK12550
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "NK1.7.1  ",PRINEROR
          MOVE      "Carer Availability is blank",PRINDESC
          CALL      PERR0000
          GOTO      WNK13000
.
WNK12550  PACK      KEY5,LOWCASEL,ANSJ,PATNCAVL
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.7.2  ",PRINEROR
            MOVE      "Carer Availability (Cat lJ/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCAVL,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK13000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "NK1.7.3  ",PRINEROR
            MOVE      "Carer Availability (Cat lJ/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCAVL,PRINDESC
            APPEND    ") HDP default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK13000
          ENDIF
.
          MOVE      THCSCOD,NK1007
          STRIP     NK1007
.
          TYPE      NK1007                       * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.7.4  ",PRINEROR
            MOVE      "Carer Availability (Cat lJ/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCAVL,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK13000
          ENDIF
.
          MOVELPTR  NK1007,FORM1                 * 1-digit code ?
          IF        FORM1 <> 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.7.5  ",PRINEROR
            MOVE      "Carer Availability (Cat lJ/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCAVL,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK13000
          ENDIF
.
.         Check for valid values
.
          MOVE      NK1007,FORM1                 * HDP Default valid ?
          IF        FORM1 <> 1 & FORM1 <> 2 & FORM1 <> 9
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.7.6  ",PRINEROR
            MOVE      "Carer Availability (Cat lJ/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCAVL,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
          MATCH     "1",NK1007                   * does patient have carer ?
          GOTO      WNK13000 IF NOT EQUAL        * no
.
.         Patient has a carer, so make sure that there is a value
.         in Main Carer's Relationship
.
          MOVELPTR  NK1003,FORM1
          IF        FORM1 = 0
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "NK1.7.7  ",PRINEROR
            MOVE      "Carer Availability (Cat lJ/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCAVL,PRINDESC
            APPEND    ") HDP Default not compatible",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
.         Load carer residency status (NK1.21 990014) if patient has a carer
.         available, for A04 and A08 only.
.         If there are messages relating to HARP, PC, PAC, RIR, SACS
.         or TCP, then this field is required to be populated.
.
WNK13000  IF        !(PRGARRAY[1] = 1 | PRGARRAY[4] = 1 | PRGARRAY[5] = 1 | PRGARRAY[6] = 1 | PRGARRAY[7] = 1 | PRGARRAY[9] = 1)
            GOTO      WNK19000
          ENDIF
.         
          MATCH     "1",NK1007                   * does patient have carer ?
          GOTO      WNK19000 IF NOT EQUAL        * no - this field not required
.
          MATCH     SP3,PATNCRST                 * code blank ?
          GOTO      WNK13550 IF NOT EQUAL        * no
.
.         If the carer residency status value is blank, then use the saved
.         variable to load the latest value for the batch
.
          MATCH     SP3,SAVECRST
          IF        !@EQUAL
            MOVE      SAVECRST,PATNCRST
            GOTO      WNK13550
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "NK1.21.1 ",PRINEROR
          MOVE      "Carer Residency Status is blank",PRINDESC
          CALL      PERR0000
          GOTO      WNK19000
.
WNK13550  PACK      KEY5,LOWCASEL,ANSI,PATNCRST
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.21.2 ",PRINEROR
            MOVE      "Carer Residency Status (Cat lI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCRST,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK19000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "NK1.21.3 ",PRINEROR
            MOVE      "Carer Residency Status (Cat lI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCRST,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK19000
          ENDIF
.
          MOVE      THCSCOD,NK1021
          STRIP     NK1021
.
          TYPE      NK1021                       * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.21.4 ",PRINEROR
            MOVE      "Carer Residency Status (Cat lI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCRST,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK19000
          ENDIF
.
          MOVELPTR  NK1021,FORM1                 * 1-digit code ?
          IF        FORM1 <> 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.21.5 ",PRINEROR
            MOVE      "Carer Residency Status (Cat lI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCRST,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WNK19000
          ENDIF
.
.         Check for valid values
.
          MOVE      NK1021,FORM1                 * HDP Default valid ?
          IF        FORM1 <> 1 & FORM1 <> 2 & FORM1 <> 9 
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "NK1.21.6 ",PRINEROR       
            MOVE      "Carer Residency Status (Cat lI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCRST,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
          IF        FORM1 = 9
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "NK1.21.7 ",PRINEROR       
            MOVE      "Carer Residency Status (Cat lI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNCRST,PRINDESC
            APPEND    ") HDP Default not compatible",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
WNK19000  BRANCH    VALDFLAG,WNK19999            * validation phase only
.
          MATCH     "1",NK1007                   * does patient have carer ?
          IF        @EQUAL
            WRITE     EXTRFILE,SEQ;NK1SEGMT,PIPE,*+,NK1001,PIPE,NK1002,PIPE:
                                            NK1003,PIPE,NK1004,PIPE,NK1005,PIPE:
                                            NK1006,PIPE,NK1007,PIPE,NK1008,PIPE:
                                            NK1009,PIPE,NK1010,PIPE,NK1011,PIPE:
                                            NK1012,PIPE,NK1013,PIPE,NK1014,PIPE:
                                            NK1015,PIPE,NK1016,PIPE,NK1017,PIPE:
                                            NK1018,PIPE,NK1019,PIPE,NK1020,PIPE:
                                            NK1021,CRETURN;
          ELSE
            WRITE     EXTRFILE,SEQ;NK1SEGMT,PIPE,*+,NK1001,PIPE,NK1002,PIPE:
                                            NK1003,PIPE,NK1004,PIPE,NK1005,PIPE:
                                            NK1006,PIPE,NK1007,CRETURN;
          ENDIF
.
WNK19999  RETURN
+
.*****************************************************************************
.*                              WPV10000           Called by: Lots           *
.*            Load and write the PV1 segment variables                       *
.* Sent in: ADT-A03, ADT-A04, ADT-A08, ADT-A13, PPP-PCB, PPP-PCC, PPP-PCD,   *
.*          RRI-I12 ,RRI-I13 & RRI-I14 only.                                 *
.*****************************************************************************
.
WPV10000  MOVE      ONE,PV1001                   * load set ID
.
          COMPARE   THREE,MESSNUMB               * A04 or A08 ?
          GOTO      WPV10400 IF LESS             * yes
.
          COMPARE   MESSNUMB,TEN2                * REF message ?
          GOTO      WPV19000 IF LESS             * yes - finished
.
          IF        MESSNUMB > 9 & MESSNUMB < 13
            GOTO      WPV10600                   * RRI message
          ENDIF   
.
.         This is either an Episode (PPP) or Contact (ADT) record,
.         so determine the correct episode start date
.
          CALL      GSDT0000
.
          IF        MESSNUMB <> 8 & MESSNUMB <> 9
            GOTO      WPV10310                   * PPP message
          ENDIF
.
.         Load contact inpatient flag (PV1.2 HL70004) for A03 & A13 only.
.         Check which program types require the field to be populated.
.
          BRANCH    MISCPRGM,WPV10020:           * HARP
                             WPV10100:           * HBPCCT
                             WPV10100:           * Medi-Hotel
                             WPV10020:           * Palliative Care
                             WPV10020:           * Post Acute Care
                             WPV10020:           * RIR
                             WPV10020:           * SACS
                             WPV10020:           * Specialist O/P Clinic
                             WPV10020            * TCP
.
WPV10020  MOVE      ANSO,PV1002                  * set default to O/P
.
          MATCH     SP8,CONTIFLG                 * blank link ?
          GOTO      WPV10100 IF EQUAL            * yes
.
          CALL      GADM0000                     * no - see if pt was admitted
.
.         Load contact delivery setting (PV1.3 HL70305) for A03 & A13 only.
.         Check which program types require the field to be populated.
.
WPV10100  BRANCH    MISCPRGM,WPV10200:           * HARP
                             WPV10200:           * HBPCCT
                             WPV10300:           * Medi-Hotel
                             WPV10200:           * Palliative Care
                             WPV10200:           * Post Acute Care
                             WPV10200:           * RIR
                             WPV10200:           * SACS
                             WPV10200:           * Specialist O/P Clinic
                             WPV10300            * TCP
.
WPV10200  MATCH     SP3,CONTDSET                 * blank field ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.3.1  ",PRINEROR
            MOVE      "Contact Delivery Setting is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV10300
          ENDIF
.
          PACK      KEY5,LOWCASEZ,ANSN,CONTDSET
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.3.2  ",PRINEROR
            MOVE      "Contact Delivery Setting (Cat zN/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTDSET,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV10300
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.3.3  ",PRINEROR
            MOVE      "Contact Delivery Setting (Cat zN/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTDSET,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV10300
          ENDIF
.
          STRIP     THCSCOD
.
          TYPE      THCSCOD                      * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.3.4  ",PRINEROR
            MOVE      "Contact Delivery Setting (Cat zN/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTDSET,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV10300
          ENDIF
.
.         Check for general valid values
.
          MOVE      THCSCOD,DIM3
          RJUSTIFY  DIM3
          MOVE      DIM3,FORM3                   * HDP Default value ?
          IF        FORM3 <> 11 & FORM3 <> 12 & FORM3 <> 13 & FORM3 <> 14 & FORM3 <> 15 & FORM3 <> 18 & FORM3 <> 21 & FORM3 <> 22 & FORM3 <> 23 & FORM3 <> 24 & FORM3 <> 31 & FORM3 <> 41 & FORM3 <> 98 & FORM3 <> 99
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.3.5  ",PRINEROR
            MOVE      "Contact Delivery Setting (Cat zN/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTDSET,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV10300
          ENDIF
.
.         Check for valid values for specific programs
.
          IF        FORM3 = 11 & MISCPRGM = 8
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.3.6  ",PRINEROR
            MOVE      "Contact Delivery Setting (Cat zN/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTDSET,PRINDESC
            APPEND    ") HDP Default not valid for O/P",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV10300
          ENDIF
.
          PACK      PV1003,CARET,CARET,CARET,CARET,CARET,THCSCOD
.
.         Load episode identifier (PV1.5) for ADT-A03 & ADT-A13.
.         Applies to all program types.
.
WPV10300  MOVE      MISCVISN,PV1005              * load episode visit number
          SQUEEZE   PV1005
          ENDSET    PV1005
          APPEND    CARET,PV1005
          APPEND    CARET,PV1005
          APPEND    CARET,PV1005
          APPEND    CARET,PV1005
          APPEND    ANSA,PV1005
          RESET     PV1005
          GOTO      WPV10500
.
.         Load Preadmit Number.
.         For PPP messages, load the linked master referral visit number
.         (PV1.5).
.         Applies to all program types.
.
WPV10310  MOVE      REFILINK,PV1005              * PPP Messages
          SQUEEZE   PV1005
          ENDSET    PV1005
          APPEND    CARET,PV1005
          APPEND    CARET,PV1005
          APPEND    CARET,PV1005
          APPEND    CARET,PV1005
          APPEND    ANSA,PV1005
          RESET     PV1005
          GOTO      WPV10610
.
.         Load patient usual accommodation type (PV1.6 990027) for
.         A04 & A08 only.
.         If there are messages relating to HARP, PAC, RIR, SACS
.         or TCP, then this field is required to be populated.
.
WPV10400  IF        !(PRGARRAY[1] = 1 | PRGARRAY[5] = 1 | PRGARRAY[6] = 1 | PRGARRAY[7] = 1 | PRGARRAY[9] = 1)
            GOTO      WPV19000
          ENDIF
.
          MATCH     SP3,PATNUACC                 * blank code ?
          GOTO      WPV10440 IF NOT EQUAL        * no
.
.         If the patient usual accommodation value is blank, then use the saved
.         variable to load the latest value for the batch
.
          MATCH     SP3,SAVEUACC
          IF        !@EQUAL
            MOVE      SAVEUACC,PATNUACC
            GOTO      WPV10440
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV1.6.1  ",PRINEROR
          MOVE      "Patient Usual Accommodation Type is blank",PRINDESC
          CALL      PERR0000
          GOTO      WPV19000
.
WPV10440  PACK      KEY5,LOWCASEL,ANSM,PATNUACC
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.6.2  ",PRINEROR
            MOVE      "Patient Usual Accommodation Type (Cat lM/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNUACC,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV19000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.6.3  ",PRINEROR
            MOVE      "Patient Usual Accommodation Type (Cat lM/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNUACC,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV19000
          ENDIF
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.6.4  ",PRINEROR
            MOVE      "Patient Usual Accommodation Type (Cat lM/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNUACC,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV19000
          ENDIF
.
          MOVELPTR  THCSCOD,FORM1                * 4-digit code ?
          IF        FORM1 <> 4
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.6.5  ",PRINEROR
            MOVE      "Patient Usual Accommodation Type (Cat lM/",PRINDESC
            ENDSET    PRINDESC
            APPEND    PATNUACC,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV19000
          ENDIF
.
.         Check for valid values
.
          MOVE      THCSCOD,FORM4                * HDP Default valid ?
          IF        FORM4 = 1000 | FORM4 = 2100 | FORM4 = 2200 | FORM4 = 2300 | FORM4 = 2402 | FORM4 = 3101 | FORM4 = 3400 | FORM4 = 4100 | FORM4 = 9999
            GOTO      WPV10480
          ENDIF
.
          MATCH     "20150701",REFIRDAT
          IF        @LESS
            IF        FORM4 = 3200 | FORM4 = 3201 | FORM4 = 3202
              GOTO      WPV10480                                  * CAR 320848
            ENDIF
          ELSE
            IF        FORM4 = 3203
              GOTO      WPV10480
            ENDIF
          ENDIF
.
.         Invalid value
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV1.6.6  ",PRINEROR
          MOVE      "Patient Usual Accommodation Type (Cat lM/",PRINDESC
          ENDSET    PRINDESC
          APPEND    PATNUACC,PRINDESC
          APPEND    ") HDP Default not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPV19000
.
WPV10480  PACK      PV1006,CARET,CARET,CARET,CARET,CARET,THCSCOD
          GOTO      WPV19000
.
.         Load contact specialist palliative care provider (PV1.7 990035) 
.         for A03 & A13 only.
.         Check which program types require the field to be populated.
.
WPV10500  BRANCH    MISCPRGM,WPV10610:           * HARP
                             WPV10610:           * HBPCCT
                             WPV10610:           * Medi-Hotel
                             WPV10520:           * Palliative Care
                             WPV10610:           * Post Acute Care
                             WPV10610:           * RIR
                             WPV10610:           * SACS
                             WPV10610:           * Specialist O/P Clinic
                             WPV10610            * TCP
.
WPV10520  MATCH     SP10,CONTSPCP                * blank provider ?
          IF        @EQUAL
            MOVE      TWO,PV1007                 * yes
          ELSE
            MOVE      ONE,PV1007                 * no
          ENDIF
          GOTO      WPV10610
.
.         Load referral-in program/stream (PV1.10 990086) for RRI messages only.
.         Applies to all program types.
.
.         We need to get the first linked episode for the Referral In and
.         use the Program/Stream from that.
.
WPV10600  MATCH     SP8,SAVEFLNK                 * 1st linked episode blank ?
          GOTO      WPV19000 IF EQUAL            * yes
.
          MOVE      SAVEFLNK,KEY8
          CALL      RDALREF1                     * linked episode on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.10.16",PRINEROR
            MOVE      "Linked episode not on file",PRINDESC
            CALL      PERR0000
            GOTO      WPV19000
          ENDIF
.
          MOVE      ALREDEPT,SAVEDEPT            * load department
          MOVE      ALREEVPR,SAVEEVPR            * load event program
.
.         Load Start Date
.
          MATCH     SP8,ALREUDT1
          IF        !@EQUAL
            MOVE      ALREUDT1,SAVESDAT          * load date referral accepted
          ELSE
            MATCH     SP8,ALREUDT5
            IF        !@EQUAL
              MOVE      ALREUDT5,SAVESDAT        * load date acknowledged
            ELSE
              MOVE      ALREDREC,SAVESDAT        * load date received
            ENDIF
          ENDIF
          CALL      LPGR0000                     * load program/stream
.
          GOTO      WPV19000
.
.         Load episode program/stream (PV1.10 HL70069) for PPP messages
.         (applies to all program types)
.         OR
.         Load contact program/stream (PV1.10 990086) for A03 & A08
.         messages (only applies to SOP program type)
.
.         Check if the "Display Event Program on VINAH Internal Referral
.         and Encounter Screens" (ALCNDEVP) parameter is turned on and if it
.         is, then use Cat zG instead of department to determine program stream.
.         In such a scenario, if Cat zG is not set up for program stream,
.         then default back to using department to source program stream.
.
WPV10610  IF        MESSNUMB = 8 | MESSNUMB = 9
            BRANCH    MISCPRGM,WPV10800:           * HARP
                               WPV10800:           * HBPCCT
                               WPV10800:           * Medi-Hotel
                               WPV10800:           * Palliative Care
                               WPV10800:           * Post Acute Care
                               WPV10800:           * RIR
                               WPV10800:           * SACS
                               WPV10615:           * Specialist O/P Clinic
                               WPV10800            * TCP
          ENDIF
.
WPV10615  MATCH     "1",ALCNDEVP
          GOTO      WPV10620 IF NOT EQUAL
.
          IF        MESSNUMB = 8 | MESSNUMB = 9
            MATCH     SP3,CONTEVPR               * blank event program ?
            GOTO      WPV10620 IF EQUAL          * yes - use department
            MOVE      CONTEVPR,DIM3
          ELSE
            MATCH     SP3,EPISEVPR               * blank event program ?
            GOTO      WPV10620 IF EQUAL          * yes - use department
            MOVE      EPISEVPR,DIM3
          ENDIF
.
          PACK      KEY5,LOWCASEZ,ANSG,DIM3
          CALL      RDCODE1                      * event program code on file ?
          BRANCH    OVRCD,WPV10620               * no - use department
.
          MATCH     SP4,THCSCOD                  * blank HDP Default ?
          GOTO      WPV10620 IF EQUAL            * yes - use department
.
.         The HDP Default has a value, so now proceed to get the program
.         stream value from the Cat lF record
.
          MOVE      THCSCOD,DIM3
          GOTO      WPV10630
.
WPV10620  MATCH     SP3,MISCDEPT                 * blank field ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.10.1 ",PRINEROR
            MOVE      "Department is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11010
          ENDIF
.
          MOVE      MISCDEPT,KEY3
          CALL      RDALDEP1                     * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.10.2 ",PRINEROR
            MOVE      "Department (",PRINDESC
            ENDSET    PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11010
          ENDIF
          MOVE      ALDEPRGS,DIM3                * load def. program/stream code
.
.         Now see if there is a mapped code which we need to use instead
.
WPV10630  MOVE      MISCDEPT,DEPTCODE
          PACK      CATEGORY,LOWCASEL,ANSF
          MOVE      STARTDAT,MAPEDATE            * CAR 313984
          CALL      CMAP0000
.
          MATCH     SP3,DIM3                     * program/stream blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.10.3 ",PRINEROR
            IF        MESSNUMB = 8 | MESSNUMB = 9
              MOVE      "Contact Program/Stream is blank",PRINDESC
            ELSE
              MOVE      "Episode Program/Stream is blank",PRINDESC
            ENDIF
            CALL      PERR0000
            GOTO      WPV11010
          ENDIF
.
          PACK      KEY5,LOWCASEL,ANSF,DIM3
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.10.4 ",PRINEROR
            IF        MESSNUMB = 8 | MESSNUMB = 9
              MOVE      "Contact Program/Stream (Cat lF/",PRINDESC
            ELSE
              MOVE      "Episode Program/Stream (Cat lF/",PRINDESC
            ENDIF
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11010
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.10.5 ",PRINEROR
            IF        MESSNUMB = 8 | MESSNUMB = 9
              MOVE      "Contact Program/Stream (Cat lF/",PRINDESC
            ELSE
              MOVE      "Episode Program/Stream (Cat lF/",PRINDESC
            ENDIF
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11010
          ENDIF
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.10.6 ",PRINEROR
            IF        MESSNUMB = 8 | MESSNUMB = 9
              MOVE      "Contact Program/Stream (Cat lF/",PRINDESC
            ELSE
              MOVE      "Episode Program/Stream (Cat lF/",PRINDESC
            ENDIF
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11010
          ENDIF
.
.         If there has been mapping of the code, then don't validate the
.         code - assume that the mapping set up is correct.  If this doesn't
.         work out, may need to provide common validation routines for all
.         VINAH versions and include across all extract programs for backward
.         mapping and validation.
.
          BRANCH    MAPPFLAG,WPV10690
.
.         Check values based on program type.
.         ** Note: "0" is a valid generic value for all program types, so
.                  check for this first.
.
          MOVE      THCSCOD,DIM4
          RJUSTIFY  DIM4
          MOVE      DIM4,FORM4
          COMPARE   ZERO,FORM4                   * generic code ?
          GOTO      WPV10690 IF EQUAL            * yes
.
          BRANCH    MISCPRGM,WPV10640:           * HARP
                             WPV10645:           * HBPCCT
                             WPV10650:           * Medi-Hotel
                             WPV10655:           * Palliative Care
                             WPV10660:           * Post Acute Care
                             WPV10665:           * RIR
                             WPV10670:           * SACS
                             WPV10675:           * Specialist O/P Clinic
                             WPV10680            * TCP
.
.         Check valid values for HARP
.
WPV10640  MATCH     "20150701",REFIRDAT
          IF        @LESS
            IF        FORM4 < 21 | (FORM4 > 27 & FORM4 <> 29)
              GOTO      WPV10685
            ENDIF
          ELSE
            IF        FORM4 <> 27 & FORM4 <> 28
              GOTO      WPV10685
            ENDIF
          ENDIF
          GOTO      WPV10690
.
.         Check valid values for HBPCCT
.
WPV10645  IF        FORM4 < 1300 | FORM4 > 1315
            GOTO      WPV10685
          ENDIF
          GOTO      WPV10690
.
.         Check valid values for Medi-Hotel
.
WPV10650  IF        FORM4 <> 91
            GOTO      WPV10685
          ENDIF
          GOTO      WPV10690
.
.         Check valid values for Palliative Care
.
WPV10655  IF        FORM4 <> 41
            GOTO      WPV10685
          ENDIF
          GOTO      WPV10690
.
.         Check valid values for Post Acute Care
.
WPV10660  IF        FORM4 <> 31
            GOTO      WPV10685
          ENDIF
          GOTO      WPV10690
.
.         Check valid values for Residential In-Reach
.
WPV10665  IF        FORM4 <> 1201
            GOTO      WPV10685
          ENDIF
          GOTO      WPV10690
.
.         Check valid values for SACS
.
WPV10670  IF        FORM4 < 1 | (FORM4 > 9 & FORM4 <> 11 & FORM4 <> 19)
            GOTO      WPV10685
          ENDIF
          GOTO      WPV10690
.
.         Check valid values for Specialist O/P Clinics
.
WPV10675  IF        FORM4 = 101 | FORM4 = 103 | FORM4 = 301 | FORM4 = 350 | FORM4 = 402 | FORM4 = 403 | FORM4 = 406
            GOTO      WPV10690                   * valid single values
          ENDIF
          IF        FORM4 > 105 & FORM4 < 115
            GOTO      WPV10690                   * 106 - 114 valid
          ENDIF
          IF        FORM4 > 115 & FORM4 < 120
            GOTO      WPV10690                   * 116 - 119 valid
          ENDIF
          IF        FORM4 > 200 & FORM4 < 210
            GOTO      WPV10690                   * 201 - 209 valid
          ENDIF
          IF        FORM4 > 309 & FORM4 < 314
            GOTO      WPV10690                   * 310 - 313 valid
          ENDIF
          GOTO      WPV10685
.
.         Check valid values for TCP
.
WPV10680  IF        FORM4 <> 1101
            GOTO      WPV10685
          ENDIF
          GOTO      WPV10690
.
.         Invalid program/stream for program type
.
WPV10685  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV1.10.7 ",PRINEROR
          IF        MESSNUMB = 8 | MESSNUMB = 9
            MOVE      "Contact Program/Stream (Cat lF/",PRINDESC
          ELSE
            MOVE      "Episode Program/Stream (Cat lF/",PRINDESC
          ENDIF
          ENDSET    PRINDESC
          APPEND    DIM3,PRINDESC
          APPEND    ") HDP Default not valid for program type",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPV11010
.
WPV10690  MOVE      THCSCOD,PV1010
.
          IF        MESSNUMB <> 8 & MESSNUMB <> 9
            GOTO      WPV11010
          ENDIF
.
.         Load contact interpreter required (PV1.15 HL70009) for A03 & A13 only
.         Check which program types require the field to be populated.
.
WPV10800  BRANCH    MISCPRGM,WPV10820:           * HARP
                             WPV10820:           * HBPCCT
                             WPV11000:           * Medi-Hotel
                             WPV11000:           * Palliative Care
                             WPV10820:           * Post Acute Care
                             WPV10820:           * RIR
                             WPV10820:           * SACS
                             WPV10820:           * Specialist O/P Clinic
                             WPV11000            * TCP
.
WPV10820  MOVE      NINE,PV1015                  * set default
.
          MATCH     ANSU,PMPXINTR                * Unknown ?
          GOTO      WPV10900 IF EQUAL            * yes - use default value
.
          MATCH     SP1,PMPXINTR                 * blank ?
          GOTO      WPV10900 IF EQUAL            * yes - use default value
.
          TYPE      PMPXINTR
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.15.2 ",PRINEROR
            MOVE      "Interpreter Required not numeric",PRINDESC
            CALL      PERR0000
            GOTO      WPV11000
          ENDIF
.
          MOVE      PMPXINTR,FORM1
          IF        FORM1 > 1
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.15.3 ",PRINEROR
            MOVE      "Interpreter Required not valid",PRINDESC
            CALL      PERR0000
            GOTO      WPV11000
          ENDIF
.
          IF        FORM1 = 1
            MOVE      "1",PV1015                 * "Yes"
          ELSE
            MOVE      "2",PV1015                 * "No"
          ENDIF
.
.         If the preferred language is English, make sure that the Interpreter
.         Required is "2" (Interpreter not needed).
.
WPV10900  MATCH     "1201",PID015                * preferred language English ?
          GOTO      WPV11000 IF NOT EQUAL        * no
.
          MATCH     "2",PV1015                   * yes - Interpreter not needed
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.15.4 ",PRINEROR
            MOVE      "Interpreter Required not consistent",PRINDESC
            CALL      PERR0000
          ENDIF
.
.         Load the contact identifier (PV1.19) for A03 & A13 messages only.
.         Load the identifier for all program types.
.
WPV11000  BRANCH    VALDFLAG,WPV11300            * validation phase only
.
          MOVE      MISCVISN,PV1019
          SQUEEZE   PV1019
          ENDSET    PV1019
          APPEND    "-",PV1019
          MOVE      MISCCONT,DIM8
          SQUEEZE   DIM8
          APPEND    DIM8,PV1019
          APPEND    CARET,PV1019
          APPEND    CARET,PV1019
          APPEND    CARET,PV1019
          APPEND    CARET,PV1019
          APPEND    "A",PV1019
          RESET     PV1019
          GOTO      WPV11300
.
.         Load the episode identifier (PV1.19) for PPP messages only.
.         Load the identifier for all program types.
.
WPV11010  BRANCH    VALDFLAG,WPV11100            * validation phase only
.
          MOVE      MISCVISN,PV1019
          SQUEEZE   PV1019
          ENDSET    PV1019
          APPEND    CARET,PV1019
          APPEND    CARET,PV1019
          APPEND    CARET,PV1019
          APPEND    CARET,PV1019
          APPEND    "A",PV1019
          RESET     PV1019
.
.         ** Note:  PV1.20 is populated already (GCLS0000) as it is 
.                   required to determine DVA/VA/WC status for PID.03/05
.                   population
.
.         Load episode end reason (PV1.36 HL70112) for PPP messages only
.         Check which program types require the field to be populated.
.
WPV11100  BRANCH    MISCPRGM,WPV11200:           * HARP
                             WPV11120:           * HBPCCT
                             WPV11200:           * Medi-Hotel
                             WPV11120:           * Palliative Care
                             WPV11200:           * Post Acute Care
                             WPV11200:           * RIR
                             WPV11200:           * SACS
                             WPV11200:           * Specialist O/P Clinic
                             WPV11200            * TCP
.
WPV11120  MATCH     SP8,EPISEDAT                 * blank episode end date ?
          GOTO      WPV11200 IF EQUAL            * yes - don't populate field
.
          MATCH     SP3,EPISENDR                 * blank field ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.36.1 ",PRINEROR
            MOVE      "Episode End Reason is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11200
          ENDIF
.
          PACK      KEY5,ANSL,ANSL,EPISENDR
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.36.2 ",PRINEROR
            MOVE      "Episode End Reason (Cat LL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISENDR,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11200
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.36.3 ",PRINEROR
            MOVE      "Episode End Reason (Cat LL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISENDR,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11200
          ENDIF
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.36.4 ",PRINEROR
            MOVE      "Episode End Reason (Cat LL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISENDR,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11200
          ENDIF
.
          MOVELPTR  THCSCOD,FORM1                * 1-digit code ?
          IF        FORM1 <> 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.36.5 ",PRINEROR
            MOVE      "Episode End Reason (Cat LL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISENDR,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11200
          ENDIF
.
.         Check for valid values
.
          MOVE      THCSCOD,FORM1
          IF        FORM1 < 1 | FORM1 > 4
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.36.6 ",PRINEROR
            MOVE      "Episode End Reason (Cat LL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISENDR,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11200
          ENDIF
.
          MOVE      THCSCOD,PV1036
.
.         Load episode campus code (PV1.39 HL70115) for PPP messages only.
.         Applies to all program types.
.
WPV11200  MATCH     SP3,MISCDEPT                 * blank field ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.39.1 ",PRINEROR
            MOVE      "Department is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11400
          ENDIF
.
          MOVE      MISCDEPT,KEY3
          CALL      RDALDEP1                     * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.39.2 ",PRINEROR
            MOVE      "Department (",PRINDESC
            ENDSET    PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11400
          ENDIF
.
          MATCH     SP6,ALDEVECC                 * campus code blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.39.3 ",PRINEROR
            MOVE      "Episode Campus Code is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11400
          ENDIF
.
          MOVE      ALDEVECC,PV1039              * load campus code
          SQUEEZE   PV1039
          TYPE      PV1039                       * campus code numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.39.4 ",PRINEROR
            MOVE      "Episode Campus Code not numeric",PRINDESC
            CALL      PERR0000
          ENDIF
          GOTO      WPV11400
.
.         Load contact preferred care setting (PV1.42 990039) for A03 & A13
.         messages only.
.         Check which program types require the field to be populated.
.
WPV11300  BRANCH    MISCPRGM,WPV11450:           * HARP
                             WPV11450:           * HBPCCT
                             WPV11450:           * Medi-Hotel
                             WPV11320:           * Palliative Care
                             WPV11450:           * Post Acute Care
                             WPV11450:           * RIR
                             WPV11450:           * SACS
                             WPV11450:           * Specialist O/P Clinic
                             WPV11450            * TCP
.
WPV11320  MATCH     SP3,CONTCSET                 * blank code ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.42.1 ",PRINEROR
            MOVE      "Contact Preferred Care Setting is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11450
          ENDIF
.
          PACK      KEY5,LOWCASEZ,LOWCASEG,CONTCSET
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.42.2 ",PRINEROR
            MOVE      "Contact Preferred Care Setting (Cat zg/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCSET,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11450
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.42.3 ",PRINEROR
            MOVE      "Contact Preferred Care Setting (Cat zg/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCSET,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11450
          ENDIF
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.42.4 ",PRINEROR
            MOVE      "Contact Preferred Care Setting (Cat zg/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCSET,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11450
          ENDIF
.
          MOVELPTR  THCSCOD,FORM1
          IF        FORM1 <> 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.42.5 ",PRINEROR
            MOVE      "Contact Preferred Care Setting (Cat zg/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCSET,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11450
          ENDIF
.
.         Check for valid values
.
          MOVE      THCSCOD,FORM2                * HDP Default valid ?
          IF        FORM2 > 10 & FORM2 < 16
            GOTO      WPV11350                   * 11 - 15 valid
          ENDIF
.
          IF        FORM2 > 20 & FORM2 < 25
            GOTO      WPV11350                   * 21 - 24 valid
          ENDIF
.
          IF        FORM2 > 96
            GOTO      WPV11350                   * 96 - 99 valid
          ENDIF
.
          IF        FORM2 <> 31 & FORM2 <> 41
            MOVE      MISCDTTM,DIM14             * invalid
            CALL      FDTM0000
            MOVE      "PV1.42.6 ",PRINEROR
            MOVE      "Contact Preferred Care Setting (Cat zg/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCSET,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11450
          ENDIF
.
WPV11350  PACK      PV1042,CARET,CARET,CARET,CARET,CARET,THCSCOD
          GOTO      WPV11450
.
.         Load episode date (PV1.44) for PPP messages only.
.         Applies to all program types.
.         From 01/07/2017 onwards, the field is mandatory once the referral
.         is accepted ("010", "020", "1" or "3") unless the program type is
.         SOP, in which case it remains mandatory regardless.
.
WPV11400  BRANCH    MISCPRGM,WPV11405:           * HARP
                             WPV11405:           * HBPCCT
                             WPV11405:           * Medi-Hotel
                             WPV11405:           * Palliative Care
                             WPV11405:           * Post Acute Care
                             WPV11405:           * RIR
                             WPV11405:           * SACS
                             WPV11410:           * Specialist O/P Clinic
                             WPV11405            * TCP
.
WPV11405  MATCH     "20170701",REFIRDAT          * pre-VINAH 13 ?
          GOTO      WPV11410 IF LESS             * yes
.
          MATCH     SP3,REFITRGS                 * blank triage status ?
          GOTO      WPV11407 IF NOT EQUAL        * no - proceed to validate
.
.         We have no triage status, so check if the department is using 
.         triage status
.
          MOVE      MISCDEPT,KEY3
          CALL      RDALDEP1                     * department on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no - error
            CALL      FDTM0000
            MOVE      "PV1.44.10",PRINEROR
            MOVE      "Department (",PRINDESC
            ENDSET    PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11500
          ENDIF
.
          MATCH     "1",ALDEUTRS                 * using triage status ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes - error
            CALL      FDTM0000
            MOVE      "PV1.44.8 ",PRINEROR
            MOVE      "Triage Status is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11500
          ENDIF
.
.         Not using triage status, so make the Episode Date mandatory
.
          GOTO      WPV11410
.
WPV11407  PACK      KEY5,CATTS,REFITRGS
          CALL      RDCODE1                      * triage status code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.44.9 ",PRINEROR
            MOVE      "Triage Status not on file",PRINDESC
            CALL      PERR0000
            GOTO      WPV11500
          ENDIF
.
.         If the Referral-In is not accepted, then this field is not required
.         for VINAH 13
.
          MATCH     "99  ",THCSCOD               * waiting for triage  ?
          GOTO      WPV11500 IF EQUAL            * yes - not accepted
.
          MATCH     "98  ",THCSCOD               * insufficient info ?
          GOTO      WPV11500 IF EQUAL            * yes - not accepted
.
WPV11410  MATCH     SP8,STARTDAT                 * episode start date blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.44.1 ",PRINEROR
            MOVE      "Episode Start Date is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11500
          ENDIF
.
          MOVE      STARTDAT,PV1044
.
.         Palliative Care allows an Episode Start Date before the Date of Birth
.
          COMPARE   FOUR,MISCPRGM                * Palliative Care ?
          GOTO      WPV11440 IF EQUAL            * yes
.
          MATCH     PID007,STARTDAT
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.44.2 ",PRINEROR
            MOVE      "Episode Start Date prior to Date of Birth",PRINDESC
            CALL      PERR0000
            GOTO      WPV11500
          ENDIF
.
.         Episode Start Date must not be less than the Referral In Received Date
.
WPV11440  MATCH     REFIRDAT,STARTDAT
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.44.7 ",PRINEROR
            MOVE      "Episode Start Date less than Referral In Received Date",PRINDESC
            CALL      PERR0000
            GOTO      WPV11500
          ENDIF
.
.         Make sure the age is not greater than 120 years.
.         Age = (Episode Start Date - Patient Date of Birth).
.
          MOVE      STARTDAT,AGEDATE
          CALL      CALCAGE
          COMPARE   PSAGEYRS,HUND20
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.44.5  ",PRINEROR
            MOVE      "Patient age greater than 120 years",PRINDESC
            CALL      PERR0000
          ENDIF
          GOTO      WPV11500
.
.         Load contact date/time (PV1.44) for A03 or A13 only.
.         Applies to all program types.
.
WPV11450  MATCH     SP8,CONTDATE
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.44.3 ",PRINEROR
            MOVE      "Contact Date is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11600
          ENDIF
.
.         The episode start date cannot be after the contact date
.
          MATCH     STARTDAT,CONTDATE
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.44.6 ",PRINEROR
            MOVE      "Contact Date less than Episode Start Date",PRINDESC
            CALL      PERR0000
          ENDIF
.
          MATCH     SP8,CONTTIME
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.44.4 ",PRINEROR
            MOVE      "Contact Time is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11600
          ENDIF
.
          MOVE      CONTDATE,PV1044
          ENDSET    PV1044
          MOVE      CONTTIME,DIM5
          REP       ": ",DIM5
          SQUEEZE   DIM5
          APPEND    DIM5,PV1044
          RESET     PV1044
          REP       " 0",PV1044
          GOTO      WPV11600
.
.         Load episode end date (PV1.45) for all PPP messages
.         Applies to all program types.
.
WPV11500  MATCH     "2",REFIOUTC                 * episode closed ?
          GOTO      WPV19000 IF NOT EQUAL        * no
.
          MATCH     SP8,EPISEDAT                 * yes - end date blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.45.1 ",PRINEROR
            MOVE      "Episode End Date is blank",PRINDESC
            CALL      PERR0000
          ELSE
            MOVE      EPISEDAT,PV1045            * no
          ENDIF
          GOTO      WPV19000
.
.         ** Note: contact session type (PR1.6) needs to be populated
.                  here so that it can be used to validate contact
.                  group session identifier (PV1.50).
.         Load contact session type (990024) for A03 & A13 only.
.         Check which program types require the field to be populated.
.
WPV11600  MOVE      SP100,PR1006                 * clear field first (0823521)
.
          BRANCH    MISCPRGM,WPV11620:           * HARP
                             WPV11700:           * HBPCCT
                             WPV11700:           * Medi-Hotel
                             WPV11620:           * Palliative Care
                             WPV11620:           * Post Acute Care
                             WPV11620:           * RIR
                             WPV11620:           * SACS
                             WPV11620:           * Specialist O/P Clinic
                             WPV11700            * TCP
.         
WPV11620  MATCH     SP3,CONTSTYP                 * session type blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PR1.6.1  ",PRINEROR
            MOVE      "Contact Session Type is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV11700
          ENDIF
.
          PACK      KEY5,LOWCASEZ,ANSI,CONTSTYP
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PR1.6.2  ",PRINEROR
            MOVE      "Contact Session Type (Cat zI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTSTYP,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11700
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PR1.6.3  ",PRINEROR
            MOVE      "Contact Session Type (Cat zI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTSTYP,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11700
          ENDIF
.
          MOVE      THCSCOD,PR1006
          STRIP     PR1006
.
          TYPE      PR1006                       * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PR1.6.4  ",PRINEROR
            MOVE      "Contact Session Type (Cat zI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTSTYP,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11700
          ENDIF
.
          MOVELPTR  PR1006,FORM1                 * 1-digit code ?
          IF        FORM1 <> 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PR1.6.5  ",PRINEROR
            MOVE      "Contact Session Type (Cat zI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTSTYP,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11700
          ENDIF
.
          MOVE      PR1006,FORM1                 * HDP Default valid ?
          IF        FORM1 < 1 | FORM1 > 4
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PR1.6.6  ",PRINEROR
            MOVE      "Contact Session Type (Cat zI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTSTYP,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11700
          ENDIF
.
.         A value of 3 (N/A - Indirect contact) is only valid for PC
.
          IF        MISCPRGM <> 4 & FORM1 = 3
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PR1.6.7  ",PRINEROR
            MOVE      "Contact Session Type (Cat zI/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTSTYP,PRINDESC
            APPEND    ") HDP Default not valid for program type",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV11700
          ENDIF
.
.         Load contact group session identifier (PV1.50) for A03 or A13 only.
.         Check which program types require the field to be populated.
.
WPV11700  BRANCH    MISCPRGM,WPV19000:           * HARP
                             WPV19000:           * HBPCCT
                             WPV19000:           * Medi-Hotel
                             WPV19000:           * Palliative Care
                             WPV19000:           * Post Acute Care
                             WPV19000:           * RIR
                             WPV19000:           * SACS
                             WPV11720:           * Specialist O/P Clinic
                             WPV19000            * TCP
.
WPV11720  MATCH     "2",PR1006                   * group session ?
          GOTO      WPV19000 IF NOT EQUAL        * no - ignore field
.
          MATCH     SP8,CONTIFLG                 * blank linked visit number ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.50.1 ",PRINEROR
            MOVE      "Contact Group Session linked visit blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV19000
          ENDIF
.
          PACK      KEY16,MISCVISN,CONTIFLG
          CALL      RDALLNK1                     * linked ref. record on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.50.2 ",PRINEROR
            MOVE      "Contact Group Session linked visit record not found",PRINDESC
            CALL      PERR0000
            GOTO      WPV19000
          ENDIF
.
.         Set the contact group session identifier using the following:
.          - O/P site
.          - Clinic ID
.          - Clinic date (ccyymmdd)
.          - Clinic start time (hh:mm)
.
WPV11750  PACK      PV1050,ALLNSITE,ALLNCLIN,ALLNDATE,ALLNSTRT
          REP       ": ",PV1050
          SQUEEZE   PV1050
.
WPV19000  BRANCH    VALDFLAG,WPV19999            * validation phase only
.
.         Load visit indicator (HL70326) for RRI, REF, PPP, A03 & A13 messages.
.         Applies to all program types.
.
          IF        MESSNUMB > 3
            LOAD      PV1051,MESSNUMB,ANS,ANS,ANS,ANSE,ANSE,ANSE,ANSE,ANSO:
                                      ANSO,ANSE,ANSE,ANSE,ANSE,ANSE,ANSE
.
            WRITE     EXTRFILE,SEQ;PV1SEGMT,PIPE,*+,PV1001,PIPE,PV1002,PIPE:
                                            PV1003,PIPE,PV1004,PIPE,PV1005,PIPE:
                                            PV1006,PIPE,PV1007,PIPE,PV1008,PIPE:
                                            PV1009,PIPE,PV1010,PIPE,PV1011,PIPE:
                                            PV1012,PIPE,PV1013,PIPE,PV1014,PIPE:
                                            PV1015,PIPE,PV1016,PIPE,PV1017,PIPE:
                                            PV1018,PIPE,PV1019,PIPE,PV1020,PIPE:
                                            PV1021,PIPE,PV1022,PIPE,PV1023,PIPE:
                                            PV1024,PIPE,PV1025,PIPE,PV1026,PIPE:
                                            PV1027,PIPE,PV1028,PIPE,PV1029,PIPE:
                                            PV1030,PIPE,PV1031,PIPE,PV1032,PIPE:
                                            PV1033,PIPE,PV1034,PIPE,PV1035,PIPE:
                                            PV1036,PIPE,PV1037,PIPE,PV1038,PIPE:
                                            PV1039,PIPE,PV1040,PIPE,PV1041,PIPE:
                                            PV1042,PIPE,PV1043,PIPE,PV1044,PIPE:
                                            PV1045,PIPE,PV1046,PIPE,PV1047,PIPE:
                                            PV1048,PIPE,PV1049,PIPE,PV1050,PIPE:
                                            PV1051,CRETURN;
          ELSE
            WRITE     EXTRFILE,SEQ;PV1SEGMT,PIPE,*+,PV1001,PIPE,PV1002,PIPE:
                                            PV1003,PIPE,PV1004,PIPE,PV1005,PIPE:
                                            PV1006,CRETURN;
          ENDIF
.
WPV19999  RETURN
+
.*****************************************************************************
.*                           GCLS0000              Called by: WPID0000       *
.*             Get contact account class                                     *
.* Requires:  CONTCOMP - visit compensable status                            *
.*            MESSNUMB - message number                                      *
.* Returns:   PV1020 - Contact Account Class                                 *
.*****************************************************************************
.
GCLS0000  IF        MESSNUMB <> 8 & MESSNUMB <> 9
            GOTO      GCLS9999                   * not A03 or A13 message
          ENDIF
.
.         Load contact account class (PV1.20 HL70064) for A03 & A13 only.
.         Check which program types require the field to be populated.
.
          BRANCH    MISCPRGM,GCLS1000:           * HARP
                             GCLS9999:           * HBPCCT
                             GCLS9999:           * Medi-Hotel
                             GCLS1000:           * Palliative Care
                             GCLS1000:           * Post Acute Care
                             GCLS1000:           * RIR
                             GCLS1000:           * SACS
                             GCLS1000:           * Specialist O/P Clinic
                             GCLS1000            * TCP
.
.         Set default values for compensable related fields
.
GCLS1000  MATCH     SP3,CONTCOMP                 * cont. account class blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.20.1 ",PRINEROR
            MOVE      "Account Class is blank",PRINDESC
            CALL      PERR0000
            GOTO      GCLS9999
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,CONTCOMP
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.20.2 ",PRINEROR
            MOVE      "Account Class (Cat CL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCOMP,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      GCLS9999
          ENDIF
.
          MATCH     SP1,TCINDC12                 * blank indicator ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.20.3 ",PRINEROR
            MOVE      "Account Class (Cat CL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCOMP,PRINDESC
            APPEND    ") Indicator 12 blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSA,TCINDC12                * armed services ?
          IF        @EQUAL
            MOVE      "AS",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSC,TCINDC12                * Other Compensables ?
          IF        @EQUAL
            MOVE      "OO",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
.         NDIS only applies to HARP, PAC, RIR and SACS
.
          BRANCH    MISCPRGM,GCLS2000:           * HARP
                             GCLS9999:           * HBPCCT
                             GCLS9999:           * Medi-Hotel
                             GCLS3000:           * Palliative Care
                             GCLS2000:           * Post Acute Care
                             GCLS2000:           * RIR
                             GCLS2000:           * SACS
                             GCLS3000:           * Specialist O/P Clinic
                             GCLS3000            * TCP
.
GCLS2000  MATCH     ANSD,TCINDC12                * no - NDIS A/C class ?
          GOTO      GCLS3000 IF NOT EQUAL        * no
.
          MOVE      "ND",PV1020                  * yes
.
          MATCH     " 1",PTMXESPF                * NDIS patient ?
          IF        !@EQUAL
            CALL      FDTM0000                   * no - error
            MOVE      "PV1.20.5 ",PRINEROR
            MOVE      "NDIS Flag inconsistency",PRINDESC
            CALL      PERR0000
          ENDIF
          GOTO      GCLS9999
.
GCLS3000  MATCH     ANSE,TCINDC12                * Ineligible: Hospital Exempt ?
          IF        @EQUAL
            MOVE      "ME",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSF,TCINDC12                * Ineligible: Asylum Seeker ?
          IF        @EQUAL
            MOVE      "MF",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSI,TCINDC12                * Private Patient:  Insured ?
          IF        @EQUAL
            MOVE      "PI",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSJ,TCINDC12                * Prisoner ?
          IF        @EQUAL
            MOVE      "JP",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSL,TCINDC12                * Common Law Recoveries ?
          IF        @EQUAL
            MOVE      "CL",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSM,TCINDC12                * Private Clinic: MBS Funding ?
          IF        @EQUAL
            MOVE      "QM",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSN,TCINDC12                * Seamen ?
          IF        @EQUAL
            MOVE      "SS",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSO,TCINDC12                * Private Patient: Other Payer?
          IF        @EQUAL
            MOVE      "PO",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSP,TCINDC12                * Public Eligible ?
          IF        @EQUAL
            MOVE      "MP",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSQ,TCINDC12                * C'wealth Funded:  TCP ?
          IF        @EQUAL
            MOVE      "QT",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSR,TCINDC12                * Reciprocal Agreement ?
          IF        @EQUAL
            MOVE      "MA",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSS,TCINDC12                * Private Patient: Self Funded?
          IF        @EQUAL
            MOVE      "PS",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANST,TCINDC12                * TAC ?
          IF        @EQUAL
            MOVE      "TA",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSV,TCINDC12                * DVA ?
          IF        @EQUAL
            MOVE      "VX",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSW,TCINDC12                * workersafe victoria ?
          IF        @EQUAL
            MOVE      "WC",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
          MATCH     ANSX,TCINDC12                * Other Non-compensable ?
          IF        @EQUAL
            MOVE      "XX",PV1020                * yes
            GOTO      GCLS9999
          ENDIF
.
.         Invalid Indicator 12
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV1.20.4 ",PRINEROR
          MOVE      "Account Class (Cat CL/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTCOMP,PRINDESC
          APPEND    ") Indicator 12 not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
.
GCLS9999  RETURN
+
.*****************************************************************************
.*                              WPV20000           Called by: WA030000       *
.*            Load and write the PV2 segment variables        WA130000       *
.* Sent in: PCC, PCD, A03 & A13 only.                         WPCC0000       *
.*                                                            WPCD0000       *
.*****************************************************************************
.
WPV20000  CALL      CPV20000                     * clear PV2 variables
.
          IF        MESSNUMB > 3 & MESSNUMB < 8
            GOTO      WPV25000                   * PPP - go straight to PV2.24
          ENDIF
.
.         Load contact client present status (PV2.7 HL70130) for A03 & A13 only.
.         Check which program types require the field to be populated
.
          BRANCH    MISCPRGM,WPV20200:           * HARP
                             WPV20200:           * HBPCCT
                             WPV29999:           * Medi-Hotel
                             WPV20200:           * Palliative Care
                             WPV20200:           * Post Acute Care
                             WPV20200:           * RIR
                             WPV20200:           * SACS
                             WPV20200:           * Specialist O/P Clinic
                             WPV21000            * TCP
.
.
WPV20200  MATCH     SP3,CONTPRES                 * field blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.7.1  ",PRINEROR
            MOVE      "Contact Client Present Status is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV21000
          ENDIF
.
          PACK      KEY5,LOWCASEZ,ANSK,CONTPRES
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.7.2  ",PRINEROR
            MOVE      "Contact Client Present Status (Cat zK/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPRES,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV21000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.7.3  ",PRINEROR
            MOVE      "Contact Client Present Status (Cat zK/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPRES,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV21000
          ENDIF
.
          MOVE      THCSCOD,PV2007
          STRIP     PV2007
.
          TYPE      PV2007                       * HDP Default numeric value ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.7.4  ",PRINEROR
            MOVE      "Contact Present Status (Cat zK/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPRES,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV21000
          ENDIF
.
          MOVELPTR  PV2007,FORM1                 * 2-digit code ?
          IF        FORM1 <> 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.7.5  ",PRINEROR
            MOVE      "Contact Present Status (Cat zK/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPRES,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV21000
          ENDIF
.
.         Check for general valid values first
.
          MOVE      PV2007,FORM2
          IF        FORM2 <> 10 & FORM2 <> 11 & FORM2 <> 12 & FORM2 <> 13 & FORM2 <> 20 & FORM2 <>31 & FORM2 <> 32
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV2.7.6  ",PRINEROR
            MOVE      "Contact Present Status (Cat zK/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPRES,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV21000
          ENDIF
.
.         Check for specific program values
.
          IF        (FORM2 = 10 | FORM2 = 32) & MISCPRGM = 4
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV2.7.7  ",PRINEROR
            MOVE      "Contact Present Status (Cat zK/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPRES,PRINDESC
            APPEND    ") HDP Default not valid for program",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV21000
          ENDIF
.
          IF        FORM2 = 31 & (MISCPRGM <> 4 & MISCPRGM <> 6)
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV2.7.8  ",PRINEROR
            MOVE      "Contact Present Status (Cat zK/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPRES,PRINDESC
            APPEND    ") HDP Default not valid for program",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV21000
          ENDIF
.
.         If Contact Session Type (PR1.6) is "3" (Not Applicable
.         - indirect contact), then Client Present Status (PV2.7) must
.         be "31" (Patient/Client/Carer(s)/Relative(s) not present: Indirect
.         contact) and Contact Delivery Setting (PV1.3) must be "98"
.         (Not Applicable) if program type is Palliative Care.
.         (BR-DAT-CNT-025, E368)
.
          COMPARE   FOUR,MISCPRGM                * palliative care ?
          GOTO      WPV20500 IF NOT EQUAL        * no - bypass check
.
          MATCH     "3",PR1006                   * Indirect contact ?
          GOTO      WPV20500 IF NOT EQUAL        * no
.
          MATCH     "31",PV2007                  * yes - patient present ?
          GOTO      WPV20300 IF NOT EQUAL        * yes - not valid
.
          MATCH     "^^^^^98",PV1003             * yes - delivery setting N/A ?
          GOTO      WPV20300 IF NOT EQUAL        * no - not valid
.
          GOTO      WPV20500
.
WPV20300  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.7.9  ",PRINEROR
          MOVE      "Indirect Contact inconsistency",PRINDESC
          CALL      PERR0000
.
.         If Contact Preferred Death Place is "98" (Not Applicable - Client/
.         Patient not present), then Client Present Status (PV2.7) must be
.         "20" or "31"  (BR-DAT-CNT-015)
.
WPV20500  MATCH     "98",PD1015                  * PD1.15 set to "98" ?
          GOTO      WPV20800 IF NOT EQUAL        * no
.
          MATCH     "20",PV2007                  * carer/relative of pt only ?
          GOTO      WPV20800 IF EQUAL            * yes - valid
.
          MATCH     "31",PV2007                  * no - indirect contact ?
          GOTO      WPV20800 IF EQUAL            * yes
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.7.10 ",PRINEROR
          MOVE      "Contact Preferred Death Place (Cat zh/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTPDPL,PRINDESC
          APPEND    ") HDP Default inconsistent",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPV20800
.
.         If Contact Preferred Death Place is "98" (Not Applicable
.         - Patient not present) then Client Present Status (PV2.7) must
.         not be "11", "12" or "13".  (BR-DAT-CNT-011)
.
WPV20600  MATCH     "11",PV2007                  * patient present only ?
          GOTO      WPV20700 IF EQUAL            * yes - not valid
.
          MATCH     "12",PV2007                  * patient present with carer ?
          GOTO      WPV20700 IF EQUAL            * yes - not valid
.
          MATCH     "13",PV2007                  * patient present with carer ?
          GOTO      WPV20800 IF NOT EQUAL        * no - valid
.
WPV20700  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.7.11 ",PRINEROR
          MOVE      "Contact Preferred Death Place (Cat zh/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTPDPL,PRINDESC
          APPEND    ") HDP Default inconsistent",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
.
.         If Contact Preferred Care Setting is "98" (Not Applicable - Client/
.         Patient not present), then Client Present Status (PV2.7) must be
.         "20" or "31"  (BR-DAT-CNT-016)
.
WPV20800  UNPACK    PV1042,DIM5,DIM2
          MATCH     "98",DIM2                    * PV1.42/6 set to "98" ?
          GOTO      WPV21000 IF NOT EQUAL        * yes
.
          MATCH     "20",PV2007                  * carer/relative of pt only ?
          GOTO      WPV21000 IF EQUAL            * yes - valid
.
          MATCH     "31",PV2007                  * no - indirect contact ?
          GOTO      WPV21000 IF EQUAL            * yes - valid
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.7.12 ",PRINEROR
          MOVE      "Contact Preferred Care Setting (Cat zg/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTCSET,PRINDESC
          APPEND    ") HDP Default inconsistent",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPV21000
.
.         If Contact Preferred Care Setting is "98" (Not Applicable
.         - Patient not present) then Client Present Status (PV2.7) must
.         not be "11", "12" or "13" if program type is Palliative Care.
.         (BR-DAT-CNT-012)
.
WPV20900  MATCH     "11",PV2007                  * patient present only ?
          GOTO      WPV20910 IF EQUAL            * yes - not valid
.
          MATCH     "12",PV2007                  * patient present with carer ?
          GOTO      WPV20910 IF EQUAL            * yes - not valid
.
          MATCH     "13",PV2007                  * patient present with carer ?
          GOTO      WPV21000 IF NOT EQUAL        * no - valid
.
WPV20910  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.7.13 ",PRINEROR
          MOVE      "Contact Preferred Care Setting (Cat zg/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTCSET,PRINDESC
          APPEND    ") HDP Default inconsistent",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
.
.         Load contact care model (PV2.18 HL70214) for A03 & A13 only
.         Check which program types require the field to be populated
.
WPV21000  BRANCH    MISCPRGM,WPV22000:           * HARP
                             WPV24000:           * HBPCCT
                             WPV29999:           * Medi-Hotel
                             WPV21200:           * Palliative Care
                             WPV22000:           * Post Acute Care
                             WPV22000:           * RIR
                             WPV22000:           * SACS
                             WPV22000:           * Specialist O/P Clinic
                             WPV22000            * TCP
.
WPV21200  MATCH     SP3,CONTCMOD                 * blank code ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.18.1 ",PRINEROR
            MOVE      "Contact Care Model is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV22000
          ENDIF
.
          PACK      KEY5,LOWCASEZ,LOWCASEF,CONTCMOD
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.18.2 ",PRINEROR
            MOVE      "Contact Care Model (Cat zf/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCMOD,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV22000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.18.3 ",PRINEROR
            MOVE      "Contact Care Model (Cat zf/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCMOD,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV22000
          ENDIF
.
          MOVE      THCSCOD,ANS
.
          TYPE      ANS                          * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.18.4 ",PRINEROR
            MOVE      "Contact Care Model (Cat zf/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCMOD,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV22000
          ENDIF
.
.         Check for valid values
.
          MOVE      ANS,FORM1                    * HDP Default valid ?
          IF        FORM1 <> 1 & FORM1 <> 2 & FORM1 <> 3 & FORM1 <> 4 & FORM1 <> 8 & FORM1 <> 9
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.18.5 ",PRINEROR
            MOVE      "Contact Care Model (Cat zf/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTCMOD,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV22000
          ENDIF
.
.         If the Contact Care Model is "9" (Not Applicable - Client/Patient
.         not present), then the Client Present Status (PV2.7) must be "20"
.         or "31"  (BR-DAT-CNT-014)
.
          MATCH     "9",ANS                      * patient present ?
          GOTO      WPV21900 IF NOT EQUAL        * yes
.
          MATCH     "20",PV2007                  * carer/relative of pt only ?
          GOTO      WPV21900 IF EQUAL            * yes - valid
.
          MATCH     "31",PV2007                  * no - indirect contact ?
          GOTO      WPV21900 IF EQUAL            * yes - valid
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.18.6 ",PRINEROR
          MOVE      "Contact Care Model (Cat zf/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTCMOD,PRINDESC
          APPEND    ") HDP Default inconsistent",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPV22000
.
.         If Contact Care Model is "9" (Not Applicable - Patient not
.         present) then Client Present Status (PV2.7) must not be "11", "12"
.         or "13"  (BR-DAT-CNT-010)
.
WPV21700  MATCH     "11",PV2007                  * patient present only ?
          GOTO      WPV21800 IF EQUAL            * yes - not valid
.
          MATCH     "12",PV2007                  * patient present with carer ?
          GOTO      WPV21800 IF EQUAL            * yes - not valid
.
          MATCH     "13",PV2007                  * via telehealth ?
          GOTO      WPV21900 IF NOT EQUAL        * no - valid
.
WPV21800  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.18.7 ",PRINEROR
          MOVE      "Contact Care Model (Cat zf/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTCMOD,PRINDESC
          APPEND    ") HDP Default inconsistent",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPV22000
.
WPV21900  MOVE      ANS,PV2018
.
.         Load contact clinic identifier (PV2.23) for A03 & A13 only
.         Check which program types require the field to be populated
.
WPV22000  BRANCH    MISCPRGM,WPV23000:           * HARP
                             WPV24000:           * HBPCCT
                             WPV24000:           * Medi-Hotel
                             WPV23000:           * Palliative Care
                             WPV23000:           * Post Acute Care
                             WPV23000:           * RIR
                             WPV23000:           * SACS
                             WPV22100:           * Specialist O/P Clinic
                             WPV23000            * TCP
.
.         First, determine which method we are using to populate this field
.
WPV22100  MOVE      ALCNCIEP,FORM1
          BRANCH    FORM1,WPV22300:              * use clinic id
                          WPV22200               * use Cat CG (BHS-CAR 285465)
          GOTO      WPV22800                     * use clinic type
.
.         Try to use Cat CG to determine if we are using clinic type
.         or clinic id to populate contact clinic identifier
.
WPV22200  CALL      CTCG0000
          BRANCH    EXIT,WPV23000:               * error getting CG assoc. #
                         WPV22400                * use linked appointment
          GOTO      WPV22900                     * clinic id/type returned
.
.         Use Clinic ID to populate this field
.
WPV22300  MATCH     SP8,CONTIFLG                 * linked visit blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.23.7 ",PRINEROR
            MOVE      "Linked visit is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV23000
          ENDIF
.
.         Try getting the clinic id from the linked visit file.
.
WPV22400  PACK      KEY16,MISCVISN,CONTIFLG
          CALL      RDALLNK1                     * linked visit record on file ?
          IF        OVRCD = 1
            CALL      GCID0000                   * no - try outbokaf/outcanaf
            BRANCH    EXIT,WPV23000              * error
            GOTO      WPV22900
          ENDIF
.
          MATCH     SP6,ALLNCLIN                 * clinic id blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.23.2 ",PRINEROR
            MOVE      "Linked visit Clinic ID is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV23000
          ENDIF
.
          MOVE      ALLNCLIN,PV2023              * load clinic id 
          GOTO      WPV22900
.
.         Use Clinic Type to populate this field
.
WPV22800  MATCH     SP6,EPISCTYP                 * clinic type blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.23.3 ",PRINEROR
            MOVE      "Contact Clinic Type is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV23000
          ENDIF
.
          MOVE      EPISCTYP,PV2023              * load clinic type
WPV22900  SQUEEZE   PV2023
.
.         Load contact provider (PV2.23 990012) for A03 & A13 only
.         Check which program types require the field to be populated
.
WPV23000  BRANCH    MISCPRGM,WPV23200:           * HARP
                             WPV24000:           * HBPCCT
                             WPV29999:           * Medi-Hotel
                             WPV23200:           * Palliative Care
                             WPV23200:           * Post Acute Care
                             WPV23200:           * RIR
                             WPV23200:           * SACS
                             WPV23200:           * Specialist O/P Clinic
                             WPV23200            * TCP
.
WPV23200  MATCH     SP3,MISCDEPT                 * blank field ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.23.4 ",PRINEROR
            MOVE      "Department is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV24000
          ENDIF
.
          MOVE      MISCDEPT,KEY3
          CALL      RDALDEP1                     * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.23.5 ",PRINEROR
            MOVE      "Department (",PRINDESC
            ENDSET    PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV24000
          ENDIF
.
          MATCH     SP3,ALDECSEP
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV2.23.6 ",PRINEROR
            MOVE      "Contact Provider (",PRINDESC
            ENDSET    PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV24000
          ENDIF
.
          ENDSET    PV2023
          APPEND    CARET,PV2023
          APPEND    CARET,PV2023
          APPEND    CARET,PV2023
          APPEND    CARET,PV2023
          APPEND    CARET,PV2023
          APPEND    CARET,PV2023
          APPEND    CARET,PV2023
          APPEND    CARET,PV2023
          APPEND    CARET,PV2023
          APPEND    ALDECSEP,PV2023
          RESET     PV2023
          STRIP     PV2023
.
.         Load contact care phase (PV2.40 HL70432) for A03 & A13.
.         Check which program types require the field to be populated.
.
WPV24000  BRANCH    MISCPRGM,WPV29000:           * HARP
                             WPV29000:           * HBPCCT
                             WPV29999:           * Medi-Hotel
                             WPV24500:           * Palliative Care
                             WPV29000:           * Post Acute Care
                             WPV29000:           * RIR
                             WPV29000:           * SACS
                             WPV29000:           * Specialist O/P Clinic
                             WPV29000            * TCP
.
WPV24500  MATCH     SP3,CONTPOFC                 * blank code ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.40.1 ",PRINEROR
            MOVE      "Contact Care Phase is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
          PACK      KEY5,LOWCASEZ,ANSE,CONTPOFC
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.40.2 ",PRINEROR
            MOVE      "Contact Care Phase (Cat zE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPOFC,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.40.3 ",PRINEROR
            MOVE      "Contact Care Phase (Cat zE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPOFC,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
          MOVE      THCSCOD,ANS
.
          TYPE      ANS                          * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.40.4 ",PRINEROR
            MOVE      "Contact Care Phase (Cat zE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPOFC,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
.         Check for valid values
.
          MOVE      ANS,FORM1                    * HDP Default valid ?
          IF        FORM1 <> 1 & FORM1 <> 2 & FORM1 <> 3 & FORM1 <> 4 & FORM1 <> 5 & FORM1 <> 8 & FORM1 <> 9
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.40.5 ",PRINEROR
            MOVE      "Contact Care Phase (Cat zE/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPOFC,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
.         If Contact Care Phase is "9" (Not Applicable - Patient not
.         present) or "5" (Bereavement Phase), then Client Present Status
.         (PV2.7) must be "20" or "31"  (BR-DAT-CNT-013)
.
WPV24600  MATCH     "9",ANS                      * client present ?
          IF        !@EQUAL
            MATCH     "5",ANS                    * yes - bereavement phase ?
            GOTO      WPV24900 IF NOT EQUAL      * no
          ENDIF
.
          MATCH     "20",PV2007                  * carer/relative of pt only ?
          GOTO      WPV24900 IF EQUAL            * yes - valid
.
          MATCH     "31",PV2007                  * indirect contact ?
          GOTO      WPV24900 IF EQUAL            * yes - valid
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.40.6 ",PRINEROR
          MOVE      "Contact Care Phase (Cat zE/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTPOFC,PRINDESC
          APPEND    ") HDP Default inconsistent",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPV29000
.
.         If Contact Care Phase is "9" (Not Applicable - Patient not
.         present) or "5" (Bereavement Phase), then Client Present Status
.         (PV2.7) must not be "11", "12" or "13" (BR-DAT-CNT-009)
.
WPV24700  MATCH     "11",PV2007                  * patient present only ?
          GOTO      WPV24800 IF EQUAL            * yes - not valid
.
          MATCH     "12",PV2007                  * patient present with carer ?
          GOTO      WPV24800 IF EQUAL            * yes - not valid
.
          MATCH     "13",PV2007                  * via telehealth ?
          GOTO      WPV24900 IF NOT EQUAL        * no - valid
.
WPV24800  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
           MOVE      "PV2.40.7 ",PRINEROR
          MOVE      "Contact Care Phase (Cat zE/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTPOFC,PRINDESC
          APPEND    ") HDP Default inconsistent",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPV29000
.
WPV24900  MOVE      ANS,PV2040
          GOTO      WPV29000
.
.         Load episode special purpose (NDIS) flag (PV2.18 990090)
.         for PPP messages.
.         Check which program types require the field to be populated.
.
WPV25000  BRANCH    MISCPRGM,WPV25200:           * HARP
                             WPV26000:           * HBPCCT
                             WPV26000:           * Medi-Hotel
                             WPV26000:           * Palliative Care
                             WPV25200:           * Post Acute Care
                             WPV25200:           * RIR
                             WPV25200:           * SACS
                             WPV26000:           * Specialist O/P Clinic
                             WPV26000            * TCP
.
WPV25200  MATCH     "20170701",REFIRDAT          * pre VINAH 13 ?
          GOTO      WPV26000 IF LESS             * yes - ignore
.
          MATCH     " 1",PTMXESPF                * NDIS patient ?
          IF        @EQUAL
            MOVE      "ND",PV2018                * yes - load flag
          ENDIF
.
.         Load episode proposed treatment plan completion (PV2.24 HL70216)
.         for PPP messages only where episode is closed.
.         Check which program types require the field to be populated.
.
WPV26000  BRANCH    MISCPRGM,WPV26200:           * HARP
                             WPV29999:           * HBPCCT
                             WPV29999:           * Medi-Hotel
                             WPV29999:           * Palliative Care
                             WPV26200:           * Post Acute Care
                             WPV26200:           * RIR
                             WPV26200:           * SACS
                             WPV29999:           * Specialist O/P Clinic
                             WPV29999            * TCP
.
WPV26200  MATCH     "2",REFIOUTC                 * episode closed ?
          IF        !@EQUAL
            MATCH     " 1",PTMXESPF              * NDIS flag populated ?
            GOTO      WPV29000 IF EQUAL          * yes - send segment
            GOTO      WPV29999                   * no - don't send segment
          ENDIF
.
.         ** Note: The episode may be closed even on a PCB message where the
.                  extract is creating a Referral In record based on the
.                  current data.
.
          MATCH     SP3,EPISCPPT                 * blank code ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.24.1 ",PRINEROR
            MOVE      "Proposed Treatment Plan Completion is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
          PACK      KEY5,LOWCASEL,ANSG,EPISCPPT
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV2.24.2 ",PRINEROR
            MOVE      "Proposed Treatment Plan Completion (Cat lG/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISCPPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
          MATCH     SP4,THCSCOD
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV2.24.3 ",PRINEROR
            MOVE      "Proposed Treatment Plan Completion (Cat lG/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISCPPT,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
          MOVE      THCSCOD,PV2024
          STRIP     PV2024
.
          TYPE      PV2024                       * numeric value ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.24.4 ",PRINEROR
            MOVE      "Proposed Treatment Plan Completion (Cat lG/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISCPPT,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
          MOVELPTR  PV2024,FORM1                 * 2-digit code ?
          IF        FORM1 <> 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.24.5 ",PRINEROR
            MOVE      "Proposed Treatment Plan Completion (Cat lG/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISCPPT,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPV29000
          ENDIF
.
.         Check for valid values
.
          MOVE      PV2024,FORM2                 * HDP Default valid ?
          IF        FORM2 <> 10 & FORM2 <> 21 & FORM2 <> 22 & FORM2 <> 25 & FORM2 <> 27 & FORM2 <> 31 & FORM2 <> 33 & FORM2 <> 35 & FORM2 <> 41 & FORM2 <> 43 & FORM2 <> 51 & FORM2 <> 53
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.24.6 ",PRINEROR
            MOVE      "Proposed Treatment Plan Completion (Cat lG/",PRINDESC
            ENDSET    PRINDESC
            APPEND    EPISCPPT,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
WPV29000  BRANCH    VALDFLAG,WPV29999            * validation phase only
.
          IF        MESSNUMB = 8 | MESSNUMB = 9
            WRITE     EXTRFILE,SEQ;PV2SEGMT,PIPE,*+,PV2001,PIPE,PV2002,PIPE:
                                            PV2003,PIPE,PV2004,PIPE,PV2005,PIPE:
                                            PV2006,PIPE,PV2007,PIPE,PV2008,PIPE:
                                            PV2009,PIPE,PV2010,PIPE,PV2011,PIPE:
                                            PV2012,PIPE,PV2013,PIPE,PV2014,PIPE:
                                            PV2015,PIPE,PV2016,PIPE,PV2017,PIPE:
                                            PV2018,PIPE,PV2019,PIPE,PV2020,PIPE:
                                            PV2021,PIPE,PV2022,PIPE,PV2023,PIPE:
                                            PV2024,PIPE,PV2025,PIPE,PV2026,PIPE:
                                            PV2027,PIPE,PV2028,PIPE,PV2029,PIPE:
                                            PV2030,PIPE,PV2031,PIPE,PV2032,PIPE:
                                            PV2033,PIPE,PV2034,PIPE,PV2035,PIPE:
                                            PV2036,PIPE,PV2037,PIPE,PV2038,PIPE:
                                            PV2039,PIPE,PV2040,CRETURN;
          ELSE
            WRITE     EXTRFILE,SEQ;PV2SEGMT,PIPE,*+,PV2001,PIPE,PV2002,PIPE:
                                            PV2003,PIPE,PV2004,PIPE,PV2005,PIPE:
                                            PV2006,PIPE,PV2007,PIPE,PV2008,PIPE:
                                            PV2009,PIPE,PV2010,PIPE,PV2011,PIPE:
                                            PV2012,PIPE,PV2013,PIPE,PV2014,PIPE:
                                            PV2015,PIPE,PV2016,PIPE,PV2017,PIPE:
                                            PV2018,PIPE,PV2019,PIPE,PV2020,PIPE:
                                            PV2021,PIPE,PV2022,PIPE,PV2023,PIPE:
                                            PV2024,CRETURN;
          ENDIF
.
WPV29999  RETURN
+
.*****************************************************************************
.*                              WMRG0000           Called by: WA400000       *
.*            Load and write the MRG segment variables                       *
.* Sent in: A40 only.                                                        *
.*****************************************************************************
.
WMRG0000  CALL      CMRG0000                     * clear MRG variables
.
          BRANCH    VALDFLAG,WMRG9999            * validation phase only
.
.         Load old U/R (MRG.1 ^^^HL70300^) - A40 only
.         Applies to all program types.
.
          MOVE      PATNOURN,MRG001
          SQUEEZE   MRG001
          ENDSET    MRG001
          APPEND    CARET,MRG001
          APPEND    CARET,MRG001
          APPEND    CARET,MRG001
          APPEND    HCEIDENT,MRG001
          APPEND    CARET,MRG001
          APPEND    ANSL,MRG001
          RESET     MRG001
.
          WRITE     EXTRFILE,SEQ;MRGSEGMT,PIPE,*+,MRG001,CRETURN;
.
WMRG9999  RETURN
+
.*****************************************************************************
.*                              WROL0000           Called by: WA030000       *
.*            Load and write the ROL segment variables        WA130000       *
.* Sent in: A03 & A13 only.                                                  *
.*****************************************************************************
.
WROL0000  MOVE      ZERO,COUNTER                 * initialise counter
WROL0100  WHILE     COUNTER < 5
            ADD       ONE,COUNTER                * increment counter
            CALL      CROL0000                   * clear ROL variables
.
            LOAD      DIM10,COUNTER,CONTPGRP,CONTPGR1,CONTPGR2,CONTPGR3,CONTPGR4
.
            MATCH     SP10,DIM10                 * blank HCP ?
            GOTO      WROL0100 IF EQUAL          * yes - get next HCP field
.
            MOVE      COUNTER,ROL001             * load contact provider seq. #
            SQUEEZE   ROL001
.
.           Load contact professional group (ROL.9 990013) for
.           A03 & A13 only
.           Check which program types require the field to be populated.
.
            BRANCH    MISCPRGM,WROL1000:         * HARP
                               WROL1000:         * HBPCCT
                               WROL2000:         * Medi-Hotel
                               WROL1000:         * Palliative Care
                               WROL1000:         * Post Acute Care
                               WROL1000:         * RIR
                               WROL1000:         * SACS
                               WROL1000:         * Specialist O/P Clinic
                               WROL1000          * TCP
.
WROL1000    MOVE      DIM10,KEY10
            CALL      RDPMHCP1                   * HCP on file ?
            IF        OVRCD = 1
              MOVE      MISCDTTM,DIM14           * no
              CALL      FDTM0000
              MOVE      "ROL.9.1  ",PRINEROR
              MOVE      "HCP (",PRINDESC
              ENDSET    PRINDESC
              APPEND    DIM10,PRINDESC
              APPEND    ") not on file",PRINDESC
              RESET     PRINDESC
              CALL      PERR0000
              GOTO      WROL2000
            ENDIF
.
            MATCH     SP3,PMHCSPC1               * speciality blank ?
            IF        @EQUAL
              MOVE      MISCDTTM,DIM14           * yes
              CALL      FDTM0000
              MOVE      "ROL.9.2  ",PRINEROR
              MOVE      "HCP Speciality is blank",PRINDESC
              CALL      PERR0000
              GOTO      WROL2000
            ENDIF
.
            PACK      KEY5,ANSD,ANST,PMHCSPC1
            CALL      RDCODE1                    * code on file ?
            IF        OVRCD = 1
              MOVE      MISCDTTM,DIM14           * no
              CALL      FDTM0000
              MOVE      "ROL.9.3  ",PRINEROR
              MOVE      "HCP Speciality Code (Cat DT/",PRINDESC
              ENDSET    PRINDESC
              APPEND    PMHCSPC1,PRINDESC
              APPEND    ") not on file",PRINDESC
              RESET     PRINDESC
              CALL      PERR0000
              GOTO      WROL2000
            ENDIF
.
            COMPARE   ZERO,TCFORM6               * Assoc. # zero ?
            IF        @EQUAL         
              MOVE      MISCDTTM,DIM14           * yes
              CALL      FDTM0000
              MOVE      "ROL.9.4  ",PRINEROR
              MOVE      "HCP Speciality (Cat DT/",PRINDESC
              ENDSET    PRINDESC
              APPEND    PMHCSPC1,PRINDESC
              APPEND    ") Assoc. no. not valid",PRINDESC
              RESET     PRINDESC
              CALL      PERR0000
              GOTO      WROL2000
            ENDIF
.
.           ** Note: too many values to validate individually
.
            MOVE      TCFORM6,DIM6
            SQUEEZE   DIM6        
.
.           If the value starts with "9", then prefix with a "0"
.
            MATCH     "9",DIM6
            IF        @EQUAL
              PACK      ROL009,ZERO,DIM6
            ELSE
              MOVE      DIM6,ROL009
            ENDIF
.
.           Load contact delivery mode (ROL.10 HL70406) for A03 & A13 only
.           Check which program types require the field to be populated.
.
WROL2000    BRANCH    MISCPRGM,WROL2500:         * HARP
                               WROL2500:         * HBPCCT
                               WROL8000:         * Medi-Hotel
                               WROL2500:         * Palliative Care
                               WROL2500:         * Post Acute Care
                               WROL2500:         * RIR
                               WROL2500:         * SACS
                               WROL2500:         * Specialist O/P Clinic
                               WROL2500          * TCP
.
WROL2500    MATCH     SP3,CONTDMOD               * delivery mode blank ?
            IF        @EQUAL
              MOVE      MISCDTTM,DIM14           * yes
              CALL      FDTM0000
              MOVE      "ROL.10.1 ",PRINEROR
              MOVE      "Contact Delivery Mode is blank",PRINDESC
              CALL      PERR0000
              GOTO      WROL8000
            ENDIF
.
            PACK      KEY5,LOWCASEZ,ANSL,CONTDMOD
            CALL      RDCODE1                    * code on file ?
            IF        OVRCD = 1
              MOVE      MISCDTTM,DIM14           * no
              CALL      FDTM0000
              MOVE      "ROL.10.2 ",PRINEROR
              MOVE      "Contact Delivery Mode (Cat zL/",PRINDESC
              ENDSET    PRINDESC
              APPEND    CONTDMOD,PRINDESC
              APPEND    ") not on file",PRINDESC
              RESET     PRINDESC
              CALL      PERR0000
              GOTO      WROL8000
            ENDIF
.
            MATCH     SP4,THCSCOD                * HDP Default blank ?
            IF        @EQUAL         
              MOVE      MISCDTTM,DIM14           * yes
              CALL      FDTM0000
              MOVE      "ROL.10.3 ",PRINEROR
              MOVE      "Contact Delivery Mode (Cat zL/",PRINDESC
              ENDSET    PRINDESC
              APPEND    CONTDMOD,PRINDESC
              APPEND    ") HDP Default is blank",PRINDESC
              RESET     PRINDESC
              CALL      PERR0000
              GOTO      WROL8000
            ENDIF
.
            MOVE      THCSCOD,ROL010
            STRIP     ROL010
.
            TYPE      ROL010                     * HDP Default numeric ?
            IF        !@EQUAL
              MOVE      MISCDTTM,DIM14           * no
              CALL      FDTM0000
              MOVE      "ROL.10.4 ",PRINEROR
              MOVE      "Contact Delivery Mode (Cat zL/",PRINDESC
              ENDSET    PRINDESC
              APPEND    CONTDMOD,PRINDESC
              APPEND    ") HDP Default not numeric",PRINDESC
              RESET     PRINDESC
              CALL      PERR0000
              GOTO      WROL8000
            ENDIF
.
            MOVELPTR  ROL010,FORM1               * 1-digit code ?
            IF        FORM1 <> 1
              MOVE      MISCDTTM,DIM14           * no
              CALL      FDTM0000
              MOVE      "ROL.10.5 ",PRINEROR
              MOVE      "Contact Delivery Mode (Cat zL/",PRINDESC
              ENDSET    PRINDESC
              APPEND    CONTDMOD,PRINDESC
              APPEND    ") HDP Default not correct length",PRINDESC
              RESET     PRINDESC
              CALL      PERR0000
              GOTO      WROL8000
            ENDIF
.
.           First check all valid values
.
            MOVE      ROL010,FORM1               * HDP Default valid ?
            IF        FORM1 < 1 | (FORM1 > 5 & FORM1 <> 9)
              GOTO      WROL7000                 * no
            ENDIF
.
.           Now check specific program type values
.
            IF        (FORM1 = 9 & MISCPRGM = 4)
              GOTO      WROL7000
            ENDIF
.
            COMPARE   FORM1,THREE                * telehealth ?  CAR 319511
            GOTO      WROL8000 IF EQUAL          * no
.
.           The Contact Client Present Status (PV2.7) cannot have a value
.           of "13" (Patient/Client Present by Telehealth) unless the
.           Contact Delivery Mode is "3" (Telehealth)
.
            MATCH     "13",PV2007                * pt. present via telehealth ?
            IF        @EQUAL
              MOVE      MISCDTTM,DIM14
              CALL      FDTM0000
              MOVE      "ROL.10.7 ",PRINEROR
              MOVE      "Contact Delivery Mode (Cat zL/",PRINDESC
              ENDSET    PRINDESC
              APPEND    CONTDMOD,PRINDESC
              APPEND    ") not compatible with Contact Client Present Status",PRINDESC
              RESET     PRINDESC
              CALL      PERR0000
            ENDIF
            GOTO      WROL8000
.
WROL7000    MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "ROL.10.6 ",PRINEROR
            MOVE      "Contact Delivery Mode (Cat zL/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTDMOD,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
.         
WROL8000    IF        VALDFLAG = 0
              WRITE     EXTRFILE,SEQ;ROLSEGMT,PIPE,*+,ROL001,PIPE,ROL002,PIPE:
                                          ROL003,PIPE,ROL004,PIPE,ROL005,PIPE:
                                          ROL006,PIPE,ROL007,PIPE,ROL008,PIPE:
                                          ROL009,PIPE,ROL010,CRETURN;
            ENDIF
          DO
.
WROL9999  RETURN
+
.*****************************************************************************
.*                              WPR10000           Called by: WA030000       *
.*            Load and write the PR1 segment variables        WA130000       *
.* Sent in: A03 & A13 only.                                                  *
.*****************************************************************************
.
WPR10000  CALL      CPR10000                     * clear PR1 variables
.
          MOVE      ONE,PR1001                   * load set id
.
.         Load contact purpose (PR1.3 HL70230) for A03 & A13 only
.         Applies to all program types
.
          MATCH     SP3,CONTPURP                 * purpose blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PR1.3.1  ",PRINEROR
            MOVE      "Contact Purpose is blank",PRINDESC
            CALL      PERR0000
            GOTO      WPR15000
          ENDIF
.
          PACK      KEY5,LOWCASEZ,ANSH,CONTPURP
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PR1.3.2  ",PRINEROR
            MOVE      "Contact Purpose (Cat zH/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPURP,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPR15000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PR1.3.3  ",PRINEROR
            MOVE      "Contact Purpose (Cat zH/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPURP,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPR15000
          ENDIF
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PR1.3.4  ",PRINEROR
            MOVE      "Contact Purpose (Cat zH/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPURP,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPR15000
          ENDIF
.
          MOVELPTR  THCSCOD,FORM1                * 2-digit code ?
          IF        FORM1 <> 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PR1.3.5  ",PRINEROR
            MOVE      "Contact Purpose (Cat zH/",PRINDESC
            ENDSET    PRINDESC
            APPEND    CONTPURP,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPR15000
          ENDIF
.
.         First check all valid values
.
          MOVE      THCSCOD,FORM2                * HDP Default valid ?
          IF        FORM2 <> 11 & FORM2 <> 12 & FORM2 <> 13 & FORM2 <> 21 & FORM2 <> 22 & FORM2 <> 23 & FORM2 <> 24 & FORM2 <> 25 & FORM2 <> 26 & FORM2 <> 27 & FORM2 <> 28 & FORM2 <> 29 & FORM2 <> 31 & FORM2 <> 32 & FORM2 <> 41 & FORM2 <> 42 & FORM2 <> 61 & FORM2 <> 71 & FORM2 <> 72 & FORM2 <> 99
            GOTO      WPR11500
          ENDIF
.
.         Now check values for specific program types
.
          IF        FORM2 = 29 & MISCPRGM <> 2
            GOTO      WPR11500
          ENDIF
.
          IF        FORM2 = 61 & MISCPRGM <> 8
            GOTO      WPR11500
          ENDIF
.
          IF        FORM2 = 72 & MISCPRGM <> 8
            GOTO      WPR11500
          ENDIF
.
.         If this is a Specialist O/P Clinic contact, then
.         the contact purpose can only be "71" or "72".
.
          COMPARE   EIGHT,MISCPRGM             * Specialist O/P Clinic ?
          GOTO      WPR11400 IF NOT EQUAL      * no
.
          IF        FORM2 <> 71 & FORM2 <> 72
            GOTO      WPR11500
          ENDIF
.
WPR11400  MOVE      THCSCOD,PR1003
          ENDSET    PR1003
          APPEND    CARET,PR1003
          APPEND    CARET,PR1003
          APPEND    "HL70230",PR1003
          RESET     PR1003
          GOTO      WPR15000
.
WPR11500  MOVE      MISCDTTM,DIM14             * no
          CALL      FDTM0000
          MOVE      "PR1.3.6  ",PRINEROR
          MOVE      "Contact Purpose (Cat zH/",PRINDESC
          ENDSET    PRINDESC
          APPEND    CONTPURP,PRINDESC
          APPEND    ") HDP Default not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000

.         ** Note:  Contact Session Type (PR1.6 - 990024) for A03 & A13 is
.                   loaded in WPV10000 routine as its value is needed in the
.                   validation of PV1.50.
.
WPR15000  BRANCH    VALDFLAG,WPR16000            * validation phase only
.
          WRITE     EXTRFILE,SEQ;PR1SEGMT,PIPE,*+,PR1001,PIPE,PR1002,PIPE:
                                          PR1003,PIPE,PR1004,PIPE,PR1005,PIPE:
                                          PR1006,CRETURN;
.
.         Load contact CMBS item numbers (PR1.3 990084) for A03 & A13 only
.         Check which program types require the field to be populated
.
WPR16000  BRANCH    MISCPRGM,WPR19999:           * HARP
                             WPR19999:           * HBPCCT
                             WPR19999:           * Medi-Hotel
                             WPR19999:           * Palliative Care
                             WPR19999:           * Post Acute Care
                             WPR19999:           * RIR
                             WPR19999:           * SACS
                             WPR17000:           * Specialist O/P Clinic
                             WPR19999            * TCP
.
.         Only report CMBS items where Contact Account Class is "QM"
.
WPR17000  MATCH     "QM",PV1020                  * Private Clinic MBS Funded ?
          GOTO       WPR19999 IF NOT EQUAL       * no - finished
.
.         If we are only validating, then we don't need to proceed any
.         further as there is no validation for CMBS codes.
.
          BRANCH    VALDFLAG,WPR19999            * validation phase only
.
          MOVE      ONE,COUNTER                  * initialise counter
.
.         Check if there are any CMBS items on file for this contact.
.         First, check if the linked O/P booking was a DNA and if it was,
.         then don't send any MBS items (this has been put in place
.         to ignore "DNA" items recorded at RCH against the contact while the
.         entry of CMBS code was mandatory - it may be able to be removed
.         later on)
.
          CALL      CDNA0000                     * DNA status on linked O/P ?
          BRANCH    EXIT,WPR19999                * yes - finished
.
          PACK      KEY18,MISCVISN,MISCCONT,SP20
          CALL      RSALITM1                     * position at start of contact
WPR17500  CALL      RKALITM1                     * read next record
          BRANCH    OVRCD,WPR19999               * eof - finished
.
          MATCH     MISCVISN,ALITVISN            * same referral still ?
          GOTO      WPR19999 IF NOT EQUAL        * no - finished
.
          MATCH     MISCCONT,ALITENCN            * same contact still ?
          GOTO      WPR19999 IF NOT EQUAL        * no - finished
.
.         We need to check if the CMBS item is to be excluded from
.         the VINAH extract (CAR 319874)
.
          PACK      KEY22,SP1,ZERO,ALITITMN,SP3,CONTDATE
          CALL      RDPRIT1                      * item on file for date ?
          IF        OVRCD = 1
            CALL      RPPRIT1                    * no - read previous record
            BRANCH    OVRCD,WPR17500             * eof - ignore record
.
            COMPARE   ZERO,PRITFLAG              * CMBS item still ?
            GOTO      WPR17500 IF NOT EQUAL      * no - ignore record
.
            MATCH     ALITITMN,PRITITMN          * same CMBS item still ?
            GOTO      WPR17500 IF NOT EQUAL      * no - ignore record
.
            MATCH     SP3,PRITSUBN               * same subitem still ?
            GOTO      WPR17500 IF NOT EQUAL      * no - ignore record
          ENDIF
.
          MATCH     SP3,PRITSETC                 * blank set group ?
          GOTO      WPR17500 IF EQUAL            * yes
.
          PACK      KEY5,ANSP,ANSG,PRITSETC
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,WPR17500               * no
.
          MATCH     ANSE,TCINDC2                 * exclude item from extract ?
          GOTO      WPR17500 IF EQUAL            * yes
.
.         CMBS item found for the contact so write a PR1 segment for it
.
WPR18000  CALL      CPR10000                     * clear PR1 variables
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,PR1001               * load set id
          SQUEEZE   PR1001
.
          MOVE      ALITITMN,PR1003              * load CMBS item
          STRIP     PR1003
          ENDSET    PR1003
          APPEND    CARET,PR1003
          APPEND    CARET,PR1003
          APPEND    "990084",PR1003
          RESET     PR1003
.
WPR19000  BRANCH    VALDFLAG,WPR17500            * validation phase only
.
          WRITE     EXTRFILE,SEQ;PR1SEGMT,PIPE,*+,PR1001,PIPE,PR1002,PIPE:
                                          PR1003,PIPE,PR1004,PIPE,PR1005,PIPE:
                                          PR1006,CRETURN;
.
WPR19999  RETURN
+
.*****************************************************************************
.*                              CDNA0000           Called by: WPR10000       *
.*        Check if the linked O/P booking has a status of DNA                *
.* Requires: CONTIFLG - linked O/P visit number for record being processed   *
.* Returns:  EXIT  0 = not DNA                                               *
.*                 1 = DNA                                                   *
.*****************************************************************************
.
.         First see if there is a booking record for the linked
.         O/P booking (outbokaf)
.
CDNA0000  MATCH     SP8,CONTIFLG                 * blank linked O/P visit ?
          GOTO      CDNA9000 IF EQUAL            * yes - finished
.
          MOVE      SP6,KEY6
          CALL      RDSSITA1                     * position at start of file
CDNA0500  CALL      RDKSITA1                     * read next record
          BRANCH    OVRCD,CDNA9000               * end of file - error
.
          MATCH     SP3,OSTFILE                  * file prefix blank ?
          GOTO      CDNA0500 IF EQUAL            * yes - get next record
.
          PACK      FILENAMO,OSTFILE,FILBOKA6    * open outbokaf
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTBOKA6,FILENAMO
          TRAPCLR   IO
          BRANCH    OVRCD,CDNA0500
.
          PACK      KEY36,CONTIFLG,SP30
          CALL      RDSBOKA6                     * position on visit #
          CALL      RDKBOKA6                     * read next record
          IF        OVRCD = 1
            CLOSE     OUTBOKA6                   * eof - check outcanaf
            GOTO      CDNA0500
          ENDIF
.
          MOVE      CONTIFLG,FORM8
          COMPARE   FORM8,OBAOUTNO               * same visit still ?
          IF        !@EQUAL
            CLOSE     OUTBOKA6                   * no - finished
            GOTO      CDNA0500
          ENDIF
.
.         We have found a matching O/P booking record, so check if the
.         status is DNA
.
          COMPARE   FIVE,OBASTAT                 * DNA ?
          IF        @EQUAL
            CLOSE     OUTBOKA6                   * yes - finished
            GOTO      CDNA9100
          ENDIF
          CLOSE     OUTBOKA6
.
CDNA9000  MOVE      ZERO,EXIT
          GOTO      CDNA9999
.
CDNA9100  MOVE      ONE,EXIT
.
CDNA9999  RETURN
+
.*****************************************************************************
.*                              WPTH0000           Called by: WPCB0000       *
.*            Load and write the PTH segment variables        WPCC0000       *
.* Sent in: PCB, PCC & PCD only.                              WPCD0000       *
.*****************************************************************************
.
.         First set the message action code (PTH.1)
.
WPTH0000  IF        MESSNUMB = 4
            MOVE      "AD",PTH001                * load action code for PCB
          ELSE
            IF        MESSNUMB = 5 | MESSNUMB = 6
              MOVE      "UP",PTH001              * load action code for PCC
            ELSE
              MOVE      "DE",PTH001              * load action code for PCD
            ENDIF
          ENDIF
.
.         Load episode care plan documentation date (PTH.4) for PCB,
.         PCC & PCD only
.         Check which program types require the field to be populated
.
          BRANCH    MISCPRGM,WPTH1500:           * HARP
                             WPTH3000:           * HBPCCT
                             WPTH3000:           * Medi-Hotel
                             WPTH3000:           * Palliative Care
                             WPTH1500:           * Post Acute Care
                             WPTH1500:           * RIR
                             WPTH1500:           * SACS
                             WPTH3000:           * Specialist O/P Clinic
                             WPTH1500            * TCP
.
WPTH1500  CALL      CPTH0000                     * clear PTH variables
.
          MOVE      "CPD",PTH002                 * load pathway id
.
          MATCH     SP8,EPISCPDD                 * blank date ?
          GOTO      WPTH3000 IF EQUAL            * yes
.
          MOVE      EPISCPDD,PTH004              * load epd. care plan doc. date
.
          BRANCH    VALDFLAG,WPTH3000
.                   
          WRITE     EXTRFILE,SEQ;PTHSEGMT,PIPE,*+,PTH001,PIPE,PTH002,PIPE:
                                 PTH003,PIPE,PTH004,CRETURN;
.
.         Load episode advance care plan alert (PTH.5 990050) for PCB,
.         PCC & PCD only and only where the Episode Start Date is on or
.         after 01/07/2016.
.         Check which program types require the field to be populated
.
WPTH3000  MATCH     "20160701",STARTDAT
          GOTO      WPTH4000 IF LESS
.
          BRANCH    MISCPRGM,WPTH3500:           * HARP
                             WPTH3500:           * HBPCCT
                             WPTH4000:           * Medi-Hotel
                             WPTH3500:           * Palliative Care
                             WPTH3500:           * Post Acute Care
                             WPTH3500:           * RIR
                             WPTH3500:           * SACS
                             WPTH3500:           * Specialist O/P Clinic
                             WPTH3500            * TCP
.
.         For SOP, only reported for VINAH 13 and onwards
.
WPTH3500  IF        MISCPRGM = 8
            MATCH     "20170701",STARTDAT        * pre VINAH 13 ? (0842166)
            GOTO      WPTH4000 IF LESS           * yes - ignore field
          ENDIF
.
          CALL      CPTH0000                     * clear PTH variables
.
          MOVE      "ACPA",PTH002                * load pathway id
.
          MOVE      "1",PTH005                   * set default value
.
          MATCH     SP3,PMPXUSR9                 * blank alert flag code ?
          GOTO      WPTH3700 IF EQUAL            * yes - use default value
.
          PACK      KEY5,ANSP,NINE,PMPXUSR9
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,WPTH3700               * no - use default value
.
          MOVE      THCSCOD,ANS                  * load pos'n 1 of HDP Default
.
          MATCH     SP1,ANS                      * blank HDP Default ?
          GOTO      WPTH3700 IF EQUAL            * yes - use default value
.
          TYPE      ANS
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PTH.5.1  ",PRINEROR
            MOVE      "Episode Advance Care Plan Alert not numeric",PRINDESC
            CALL      PERR0000
          ENDIF
.
          MOVE      ZERO,FORM1
          MOVE      ANS,FORM1
          IF        FORM1 < 1 | FORM1 > 4
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PTH.5.2  ",PRINEROR
            MOVE      "Episode Advance Care Plan Alert not valid",PRINDESC
            CALL      PERR0000
          ENDIF
.
          MOVE      ANS,PTH005                   * load epd. care plan alert
.
WPTH3700  BRANCH    VALDFLAG,WPTH4000
.                   
          WRITE     EXTRFILE,SEQ;PTHSEGMT,PIPE,*+,PTH001,PIPE,PTH002,PIPE:
                                 PTH003,PIPE,PTH004,PIPE,PTH005,CRETURN;
.
.         Load episode first appointment booked date (PTH.4) for PCB,
.         PCC & PCD only
.         Check which program types require the field to be populated
.
WPTH4000  BRANCH    MISCPRGM,WPTH5000:           * HARP
                             WPTH5000:           * HBPCCT
                             WPTH5000:           * Medi-Hotel
                             WPTH5000:           * Palliative Care
                             WPTH5000:           * Post Acute Care
                             WPTH5000:           * RIR
                             WPTH5000:           * SACS
                             WPTH4500:           * Specialist O/P Clinic
                             WPTH5000            * TCP
.
WPTH4500  CALL      CPTH0000                     * clear PTH variables
.
          MOVE      "AB1",PTH002                 * load pathway id
.
          MATCH     SP8,EPISFABD                 * blank date ?
          GOTO      WPTH5000 IF EQUAL            * yes
.
.         Check that the Episode First Appointment Booked Date is not prior
.         to the Episode Start Date.
.
          MATCH     STARTDAT,EPISFABD
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PTH.4.1  ",PRINEROR
            MOVE      "First Appointment Booked Date inconsistency",PRINDESC
            CALL      PERR0000
          ENDIF
.
          MOVE      EPISFABD,PTH004              * load epd. 1st appt bkd. date
.
          BRANCH    VALDFLAG,WPTH5000
.
          WRITE     EXTRFILE,SEQ;PTHSEGMT,PIPE,*+,PTH001,PIPE,PTH002,PIPE:
                                 PTH003,PIPE,PTH004,CRETURN;
.
.         Load episode hospital discharge date (PTH.4) for PCB, PCC & PCD only
.         Check which program types require the field to be populated
.
WPTH5000  BRANCH    MISCPRGM,WPTH6000:           * HARP
                             WPTH6000:           * HBPCCT
                             WPTH6000:           * Medi-Hotel
                             WPTH6000:           * Palliative Care
                             WPTH5500:           * Post Acute Care
                             WPTH5500:           * RIR
                             WPTH5500:           * SACS
                             WPTH6000:           * Specialist O/P Clinic
                             WPTH5500            * TCP
.
WPTH5500  CALL      CPTH0000                     * clear PTH variables
.
          MOVE      "HD",PTH002                  * load pathway id
.
          MATCH     SP8,EPISHDDT                 * blank date ?
          GOTO      WPTH6000 IF EQUAL            * yes
.
          MOVE      EPISHDDT,PTH004              * load epd. hosp discharge date
.
          BRANCH    VALDFLAG,WPTH6000
.
          WRITE     EXTRFILE,SEQ;PTHSEGMT,PIPE,*+,PTH001,PIPE,PTH002,PIPE:
                                 PTH003,PIPE,PTH004,CRETURN;
.
.         Load episode patient notified of first appointment date (PTH.4) for
.         PCB, PCC & PCD only
.         Check which program types require the field to be populated
.
WPTH6000  BRANCH    MISCPRGM,WPTH7000:           * HARP
                             WPTH7000:           * HBPCCT
                             WPTH7000:           * Medi-Hotel
                             WPTH7000:           * Palliative Care
                             WPTH7000:           * Post Acute Care
                             WPTH7000:           * RIR
                             WPTH7000:           * SACS
                             WPTH6500:           * Specialist O/P Clinic
                             WPTH7000            * TCP
.
WPTH6500  CALL      CPTH0000                     * clear PTH variables
.
          MOVE      "PNAB1",PTH002               * load pathway id
.
          MATCH     SP8,EPISFNAD                 * blank date ?
          GOTO      WPTH7000 IF EQUAL            * yes
.
          MATCH     SP8,EPISFABD                 * blank 1st appt. booked date ?
          GOTO      WPTH6600 IF EQUAL            * yes
.
.         Episode First Appointment Booked Date and Episode Patient
.         Notified of First Appointment Date are both populated, so check
.         that Episode First Appointment Booked Date is not before Episode
.         Patient Notified of First Appointment Date.
.
          MATCH     EPISFNAD,EPISFABD
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PTH.4.2  ",PRINEROR
            MOVE      "First Appointment Booked Date inconsistency",PRINDESC
            CALL      PERR0000
          ENDIF
.
WPTH6600  MOVE      EPISFNAD,PTH004              * load epd. not. 1st appt. date
.
          BRANCH    VALDFLAG,WPTH7000
.
          WRITE     EXTRFILE,SEQ;PTHSEGMT,PIPE,*+,PTH001,PIPE,PTH002,PIPE:
                                 PTH003,PIPE,PTH004,CRETURN;
.
.         Load episode TCP bed-based care transition (PTH.4) for PCB,
.         PCC & PCD only
.         Check which program types require the field to be populated
.
WPTH7000  BRANCH    MISCPRGM,WPTH9999:           * HARP
                             WPTH9999:           * HBPCCT
                             WPTH9999:           * Medi-Hotel
                             WPTH9999:           * Palliative Care
                             WPTH9999:           * Post Acute Care
                             WPTH9999:           * RIR
                             WPTH9999:           * SACS
                             WPTH9999:           * Specialist O/P Clinic
                             WPTH7500            * TCP
.
WPTH7500  PACK      KEY13,MISCVISN,ZERO,FIVE,SP20
          CALL      RSALRHL1                     * position on TCP records
WPTH7600  CALL      RKALRHL1                     * read next record
          BRANCH    OVRCD,WPTH9999               * eof - finished
.
          MATCH     MISCVISN,ALRHVISN            * same referral still ?
          GOTO      WPTH9999 IF NOT EQUAL        * no - finished
.
          MATCH     "05",ALRHTYPE                * TCP type still ?
          GOTO      WPTH9999 IF NOT EQUAL        * no - finished
.
.         TCP record found for this referral, so check if it's
.         Bed-based or Home-based
.
          PACK      KEY5,LOWCASEZ,ANSW,ALRHCODE
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PTH.4.3  ",PRINEROR
            MOVE      "Transition Type (Cat zW/",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPTH7600
          ENDIF
.
          CALL      CPTH0000                     * clear PTH variables
.
          MATCH     ANSB,TCINDC1                 * bed-based ?
          IF        @EQUAL
            MOVE      "TCPTB",PTH002             * yes - load pathway id
          ELSE
            MATCH     ANSH,TCINDC1               * home-based ?
            IF        @EQUAL
              MOVE      "TCPTH",PTH002           * yes - load pathway id
            ELSE
              GOTO      WPTH7600                 * no - ignore record
            ENDIF
          ENDIF
.
          MATCH     SP8,ALRHDATE                 * blank date ?
          GOTO      WPTH7600 IF EQUAL            * yes
.
          MOVE      ALRHDATE,PTH004              * load epd. TCP care date
.
          BRANCH    VALDFLAG,WPTH9999
.
          WRITE     EXTRFILE,SEQ;PTHSEGMT,PIPE,*+,PTH001,PIPE,PTH002,PIPE:
                                 PTH003,PIPE,PTH004,CRETURN;
          GOTO      WPTH7600
.
WPTH9999  RETURN          
+
.*****************************************************************************
.*                              WOBX0000           Called by: WPCB0000       *
.*            Load and write the OBX segment variables        WPCC0000       *
.* Sent in: PCB, PCC & PCD only.                              WPCD0000       *
.*****************************************************************************
.
WOBX0000  MOVE      ZERO,COUNTER                 * initialise OBX segment count
.
.         Load episode malignancy flag (OBX.3 990033) for PCB, PCC & PCD only.
.         Check which program types require the field to be populated.
.
          BRANCH    MISCPRGM,WOBX1000:           * HARP
                             WOBX0200:           * HBPCCT
                             WOBX9999:           * Medi-Hotel
                             WOBX0200:           * Palliative Care
                             WOBX1000:           * Post Acute Care
                             WOBX1000:           * RIR
                             WOBX1000:           * SACS
                             WOBX9999:           * Specialist O/P Clinic
                             WOBX3000            * TCP
.
WOBX0200  CALL      COBX0000                     * clear OBX variables
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,OBX001
          SQUEEZE   OBX001
.
          MATCH     "1",EPISMFLG                 * malignancy flag set ?
          IF        @EQUAL
            MOVE      ONE,OBX003                 * yes
          ELSE
            MOVE      TWO,OBX003                 * no
          ENDIF
          ENDSET    OBX003
          APPEND    CARET,OBX003
          APPEND    CARET,OBX003
          APPEND    "990033",OBX003              * set for malignancy flag
          RESET     OBX003
.
          BRANCH    VALDFLAG,WOBX1000            * validation phase only
.
          WRITE     EXTRFILE,SEQ;OBXSEGMT,PIPE,*+,OBX001,PIPE,OBX002,PIPE:
                                          OBX003,CRETURN;
.
.         Load Episode Health Conditions (OBX.3 990080) and Episode
.         Other Factors Affecting Health (OBX.3 990036) for PCB, PCC & PCD only.
.         Check which program types require the field to be populated.
.
WOBX1000  BRANCH    MISCPRGM,WOBX1200:           * HARP
                             WOBX1200:           * HBPCCT
                             WOBX1200:           * Medi-Hotel
                             WOBX1200:           * Palliative Care
                             WOBX1200:           * Post Acute Care
                             WOBX1200:           * RIR
                             WOBX1200:           * SACS
                             WOBX1200:           * Specialist O/P Clinic
                             WOBX9999            * TCP
.
.         For SOP, only reported for VINAH 13 and onwards
.
WOBX1200  IF        MISCPRGM = 8
            MATCH     "20170701",REFIRDAT        * pre VINAH 13 ?
            GOTO      WOBX9999 IF LESS           * yes - ignore field
          ENDIF
.
.         For HBPCCT and MH, only reported for pre-VINAH 13
.
          IF        MISCPRGM = 2 | MISCPRGM = 3
            MATCH     "20170701",REFIRDAT        * pre VINAH 13 ?
            GOTO      WOBX9999 IF NOT LESS       * no - ignore field
          ENDIF
.
          MOVE      ONE,CONDFLAG                 * initialise for health cond.
.
.         First, load all the Health Conditions (990080)
.
          PACK      KEY13,MISCVISN,ZERO,ONE,SP20
          CALL      RSALRHL1                     * position on health conditions
WOBX1300  CALL      RKALRHL1                     * read next record
          BRANCH    OVRCD,WOBX1900               * eof
.
          MATCH     MISCVISN,ALRHVISN            * same visit still ?
          GOTO      WOBX1900 IF NOT EQUAL        * no - finished health cond.
.
          MATCH     "01",ALRHTYPE                * health condition still ?
          GOTO      WOBX1900 IF NOT EQUAL        * no - finished health cond.
.
.         We have found a valid health condition
.
          CALL      COBX0000                     * clear OBX variables
.
          PACK      KEY12,MISCDEPT,ALRHCODE
          CALL      RDALDIA1                     * diagnosis on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "OBX.3.1  ",PRINEROR
            MOVE      "Health Condition (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") for dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
          MATCH     SP4,ALDIMHDP                 * HDP Equivalent blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "OBX.3.2  ",PRINEROR
            MOVE      "HDP Equiv. for Health Condition (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") and dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
          SQUEEZE   ALDIMHDP
          TYPE      ALDIMHDP                     * numeric value ?
          GOTO      WOBX1600 IF EQUAL            * yes - valid
.
          MATCH     ANSA,ALDIMHDP                * prefix "A" ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "OBX.3.11 ",PRINEROR
            MOVE      "HDP Equiv. for Health Condition (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") and dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") prefix invalid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
          UNPACK    ALDIMHDP,ANS,DIM3
          TYPE      DIM3                         * suffix numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "OBX.3.12 ",PRINEROR
            MOVE      "HDP Equiv. for Health Condition (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") and dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
          MOVELPTR  DIM3,FORM1                   * valid length ?
          IF        FORM1 < 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "OBX.3.13 ",PRINEROR
            MOVE      "HDP Equiv. for Health Condition (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") and dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
          GOTO      WOBX1700                     * valid code
.
WOBX1600  MOVELPTR  ALDIMHDP,FORM1
          IF        FORM1 < 3
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "OBX.3.4  ",PRINEROR
            MOVE      "HDP Equiv. for Health Condition (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") and dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
WOBX1700  MOVE      ALDIMHDP,OBX003
          STRIP     OBX003
          ENDSET    OBX003
          APPEND    CARET,OBX003
          APPEND    CARET,OBX003
          APPEND    "990080",OBX003
          RESET     OBX003
.
          GOTO      WOBX2500                     * write OBX segment
.
.         We have finished processing all the health conditions.  Check that
.         if the episode is closed, there is at least one health condition
.         reported.
.
WOBX1900  COMPARE   ZERO,COUNTER                 * any health conditions ?
          GOTO      WOBX2000 IF NOT EQUAL        * yes
.
          MATCH     "2",REFIOUTC                 * no - episode closed ?
          GOTO      WOBX2000 IF NOT EQUAL        * no
.
          MOVE      MISCDTTM,DIM14               * yes - field is mandatory
          CALL      FDTM0000
          MOVE      "OBX.3.5  ",PRINEROR
          MOVE      "Main Health Condition missing for visit (",PRINDESC
          ENDSET    PRINDESC
          APPEND    MISCVISN,PRINDESC
          APPEND    ")",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
.
WOBX2000  BRANCH    MISCPRGM,WOBX2050:           * HARP
                             WOBX9999:           * HBPCCT
                             WOBX9999:           * Medi-Hotel
                             WOBX9999:           * Palliative Care
                             WOBX2050:           * Post Acute Care
                             WOBX2050:           * RIR
                             WOBX2050:           * SACS
                             WOBX9999:           * Specialist O/P Clinic
                             WOBX9999            * TCP
.
WOBX2050  ADD       ONE,CONDFLAG
.
.         Now, load all the Other Factors Affecting Health (990036)
.
          PACK      KEY13,MISCVISN,ZERO,TWO,SP20
          CALL      RSALRHL1                     * position on other factors
WOBX2100  CALL      RKALRHL1                     * read next record
          BRANCH    OVRCD,WOBX9999               * eof
.
          MATCH     MISCVISN,ALRHVISN            * same visit still ?
          GOTO      WOBX9999 IF NOT EQUAL        * no - finished other factors
.
          MATCH     "02",ALRHTYPE                * other factor still ?
          GOTO      WOBX9999 IF NOT EQUAL        * no - finished other factors
.
.         We have found a valid other factor
.
          CALL      COBX0000                     * clear OBX variables
.         
          PACK      KEY12,MISCDEPT,ALRHCODE
          CALL      RDALPRR1                     * problem on file ?
          IF        OVRCD = 1                    
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "OBX.3.6  ",PRINEROR
            MOVE      "Other Factor (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") for dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.         
          MATCH     SP4,ALPRMHDP                 * HDP Equivalent blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "OBX.3.7  ",PRINEROR
            MOVE      "HDP Equiv. for Other Factor (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") and dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
          SQUEEZE   ALPRMHDP
          TYPE      ALPRMHDP
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "OBX.3.8  ",PRINEROR
            MOVE      "HDP Equiv. for Other Factor (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") and dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
          MOVELPTR  ALPRMHDP,FORM1
          IF        FORM1 <> 4
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "OBX.3.9  ",PRINEROR
            MOVE      "HDP Equiv. for Other Factor (",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") and dept.(",PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WOBX2500
          ENDIF
.
          MOVE      ALPRMHDP,OBX003
          STRIP     OBX003
          ENDSET    OBX003
          APPEND    CARET,OBX003
          APPEND    CARET,OBX003
          APPEND    "990036",OBX003
          RESET     OBX003
.
.         Load common variables and write OBX Segment
        
WOBX2500  ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,OBX001               * load set id
          SQUEEZE   OBX001
.
          BRANCH    VALDFLAG,WOBX2900            * validation phase only
.
          WRITE     EXTRFILE,SEQ;OBXSEGMT,PIPE,*+,OBX001,PIPE,OBX002,PIPE:
                                          OBX003,CRETURN;
.
WOBX2900  BRANCH    CONDFLAG,WOBX1300:           * Health Conditions
                             WOBX2100            * Other Fact. Affecting Health
.
.         Load Episode Assessment - Barthel Date/Time (OBX.14)
.         for PCB, PCC & PCD only.
.         Applies only to TCP which is the only program type to reach
.         this point.
.
.         Loop through allbiaaf to find all the assessment records for the
.         visit and write a messsage for each one found.
.
WOBX3000  MOVE      ZERO,ASSCOUNT                * initialise assessment counter
.
          PACK      KEY24,MISCVISN,SP30
          CALL      RSALBIA1                     * position on visit
WOBX3100  CALL      RKALBIA1                     * read next record
          BRANCH    OVRCD,WOBX3900               * eof
.
          MATCH     MISCVISN,ALBAVISN            * same visit still ?
          GOTO      WOBX3900 IF NOT EQUAL        * no - finished
.
          MATCH     "1",ALBADELF                 * deleted record ?
          GOTO      WOBX3100 IF EQUAL            * yes - ignore record
.
          CALL      COBX0000                     * clear OBX variables
.
          ADD       ONE,COUNTER                  * increment segment counter
          ADD       ONE,ASSCOUNT                 * increment assessment counter
          MOVE      COUNTER,OBX001
          SQUEEZE   OBX001
.
.         Load Barthel Score Date/Time (OBX.14)
.
          PACK      OBX014,ALBADATE,ALBATIME     * load assessment date/time
          REP       " 0",OBX014
          REP       ": ",OBX014
          SQUEEZE   OBX014
.
          BRANCH    VALDFLAG,WOBX3100            * validation phase only
.
          WRITE     EXTRFILE,SEQ;OBXSEGMT,PIPE,*+,OBX001,PIPE,OBX002,PIPE:
                                          OBX003,PIPE,OBX004,PIPE,OBX005,PIPE:
                                          OBX006,PIPE,OBX007,PIPE,OBX008,PIPE:
                                          OBX009,PIPE,OBX010,PIPE,OBX011,PIPE:
                                          OBX012,PIPE,OBX013,PIPE,OBX014,CRETURN;
          GOTO      WOBX3100
.
.         For TCP, check that there was at least 2 assessment scores
.         where there is an episode end date.
.
WOBX3900  MOVELPTR  PV1045,FORM1
          COMPARE   ZERO,FORM1                   * end date populated ?
          GOTO      WOBX9999 IF EQUAL            * no
.
          COMPARE   TWO,ASSCOUNT
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "OBX.3.10 ",PRINEROR
            MOVE      "Insufficient Barthel Scores",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
          ENDIF
.
WOBX9999  RETURN
+
.*****************************************************************************
.*                              WRF10000           Called by: WI120000       *
.*            Load and write the RF1 segment variables        WI140000       *
.* Sent in: RRI-I12, RRI-I13, RRI-I14, REF-I12 & REF-I14 only.               *
.*****************************************************************************
.
WRF10000  CALL      CRF10000                     * clear RF1 variables
          MOVE      SP6,SAVEHDPD                 * clear saved HDP default
.
          IF        MESSNUMB > 12
            GOTO      WRF16000                   * process REF messages
          ENDIF
.
.         Load Referral In Outcome (RF1.1 HL70283) for RRI-I12, RRI-I13
.         & RRI-I14 messages only.
.
.         Find the first linked episode referral.
.         Note:  This is also needed for the program/stream to be determined
.                later (PV1.10) for the Referral-In, so we need to get this
.                regardless of the program type.
.
          CALL      FLEP0000                     * get 1st linked episode
.
.         Check which program types require the field to be populated.
.
          BRANCH    MISCPRGM,WRF11200:           * HARP
                             WRF13000:           * HBPCCT
                             WRF18000:           * Medi-Hotel
                             WRF11200:           * Palliative Care
                             WRF11200:           * Post Acute Care
                             WRF11200:           * RIR
                             WRF11200:           * SACS
                             WRF11200:           * Specialist O/P Clinic
                             WRF11200            * TCP
.
.         First check if the outcome is cancelled or rejected
.
WRF11200  MATCH     "5",REFIOUTC                 * status rejected ?
          IF        @EQUAL
            MOVE      "rr",DIM2
            MOVE      REFIOTRR,DIM3              * yes - load rejection reason
            GOTO      WRF11300
          ENDIF
.
          MATCH     "4",REFIOUTC                 * status cancelled ?
          IF        @EQUAL
            MOVE      "LN",DIM2
            MOVE      REFIOTRC,DIM3              * yes - load cancellation reas.
            GOTO      WRF11300
          ENDIF
.
          GOTO      WRF11400                     * not cancelled or rejected
.
.         The outcome is cancelled or rejected, so get the reason.
.
WRF11300  MATCH     SP3,DIM3                     * blank field ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "RF1.1.1  ",PRINEROR
            MATCH     "5",REFIOUTC
            IF        @EQUAL
              MOVE      "Referral In outcome rejection reason blank",PRINDESC
            ELSE
              MOVE      "Referral In outcome cancellation reason blank",PRINDESC
            ENDIF
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
          PACK      KEY5,DIM2,DIM3
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.1.2  ",PRINEROR
            MATCH     "5",REFIOUTC
            IF        @EQUAL
              MOVE      "Referral In outcome rejection reason (Cat rr/",PRINDESC
            ELSE
              MOVE      "Referral In outcome cancellation reason (Cat LN/",PRINDESC
            ENDIF
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "RF1.1.3  ",PRINEROR
            MATCH     "5",REFIOUTC
            IF        @EQUAL
              MOVE      "Referral In outcome rejection reason (Cat rr/",PRINDESC
            ELSE
              MOVE      "Referral In outcome cancellation reason (Cat LN/",PRINDESC
            ENDIF
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
          STRIP     THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.1.4  ",PRINEROR
            MATCH     "5",REFIOUTC
            IF        @EQUAL
              MOVE      "Referral In outcome rejection reason (Cat rr/",PRINDESC
            ELSE
              MOVE      "Referral In outcome cancellation reason (Cat LN/",PRINDESC
            ENDIF
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
          MOVELPTR  THCSCOD,FORM1                * 1 or 2-digit code ?
          IF        FORM1 > 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.1.5  ",PRINEROR
            MATCH     "5",REFIOUTC
            IF        @EQUAL
              MOVE      "Referral In outcome rejection reason (Cat rr/",PRINDESC
            ELSE
              MOVE      "Referral In outcome cancellation reason (Cat LN/",PRINDESC
            ENDIF
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
.         Check for general valid values
.
          MOVE      THCSCOD,DIM2
          RJUSTIFY  DIM2
          MOVE      DIM2,FORM2                   * HDP Default value ?
          IF        FORM2 > 20 & FORM2 < 26
            MOVE      THCSCOD,RF1001
            GOTO      WRF13000                   * 21 - 25 valid
          ENDIF
.
          IF        FORM2 > 29 & FORM2 < 37
            MOVE      THCSCOD,RF1001
            GOTO      WRF13000                   * 30 - 36 valid
          ENDIF
.
          IF        FORM2 = 3 | FORM2 = 40 | FORM2 = 41 | FORM2 = 99
            MOVE      THCSCOD,RF1001
            GOTO      WRF13000                   * 3, 40, 41 or 99 valid
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "RF1.1.6  ",PRINEROR
          MATCH     "5",REFIOUTC
          IF        @EQUAL
            MOVE      "Referral In outcome rejection reason (Cat rr/",PRINDESC
          ELSE
            MOVE      "Referral In outcome cancellation reason (Cat LN/",PRINDESC
          ENDIF
          ENDSET    PRINDESC
          APPEND    DIM3,PRINDESC
          APPEND    ") HDP Default not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WRF13000
.
.         The outcome is not rejected or cancelled, so first check what the
.         triage status is set to
.
WRF11400  MATCH     SP3,REFITRGS                 * triage status blank ?
          GOTO      WRF11450 IF NOT EQUAL        * no - proceed to validate
.
          MATCH     "20170701",REFIRDAT          * pre-VINAH 13 ?
          GOTO      WRF11430 IF LESS             * yes
.
.         We have no triage status, so check if the department is using 
.         triage status
.
          MOVE      MISCDEPT,KEY3
          CALL      RDALDEP1                     * department on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no - error
            CALL      FDTM0000
            MOVE      "RF1.1.15 ",PRINEROR
            MOVE      "Department (",PRINDESC
            ENDSET    PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF12000
          ENDIF
.
          MATCH     "1",ALDEUTRS                 * using triage status ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes - error
            CALL      FDTM0000
            MOVE      "RF1.1.10 ",PRINEROR
            MOVE      "Triage Status code (Cat ts/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFITRGS,PRINDESC
            APPEND    ") is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF12000
          ENDIF
.
.         The department is not using triage status, so use the old
.         outcome logic
.
WRF11430  CALL      OLDO0000
          GOTO      WRF13000
.
.         Triage Status is populated so get the HDP Equivalent value
.
WRF11450  PACK      KEY5,CATTS,REFITRGS
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "RF1.1.11 ",PRINEROR
            MOVE      "Triage Status code (Cat ts/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFITRGS,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF12000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "RF1.1.12 ",PRINEROR
            MOVE      "Triage Status code (Cat ts/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFITRGS,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF12000
          ENDIF
.
          STRIP     THCSCOD
          TYPE      THCSCOD                      * saved HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.1.13 ",PRINEROR
            MOVE      "Triage Status (Cat ts/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFITRGS,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF12000
          ENDIF
.
.         We have a HDP Triage Status Value, so validate it.
.
          MATCH     "98",THCSCOD                 * Insufficient details ?
          GOTO      WRF11900 IF EQUAL            * yes
.
          MATCH     "99",THCSCOD                 * Awaiting triage ?
          GOTO      WRF11900 IF EQUAL            * yes
.
          MATCH     "1",THCSCOD                  * Accepted ?
          GOTO      WRF11900 IF EQUAL            * yes
.
          MATCH     "3",THCSCOD                  * Renewed MBS ?
          GOTO      WRF11900 IF EQUAL            * yes
.
          COMPARE   EIGHT,MISCPRGM               * SOP ?
          GOTO      WRF11500 IF NOT EQUAL        * no - invalid
.
.         There are additional valid values for SOP only, so check these
.
          MATCH     "010",THCSCOD                * Accepted - New Appointment ?
          IF        !@EQUAL
            MATCH     "020",THCSCOD              * Accepted - Rev. Appointment ?
            GOTO      WRF11500 IF NOT EQUAL
          ENDIF
.
.         SOP values of "010" and "020" are only valid for referrals after
.         01/07/2015, so anything prior to that needs to be sent as "1" instead
.
          MATCH     "20150701",REFIRDAT          * pre-VINAH 11 ?
          IF        @LESS
            MOVE      "1",RF1001
            GOTO      WRF12000
          ELSE
            GOTO      WRF11900
          ENDIF
.
.         Invalid Referral-In Outcome
.
WRF11500  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "RF1.1.14 ",PRINEROR
          MOVE      "Triage Status (Cat ts/",PRINDESC
          ENDSET    PRINDESC
          APPEND    REFITRGS,PRINDESC
          APPEND    ") HDP Default not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WRF12000
.
WRF11900  MOVE      THCSCOD,RF1001
.
.         Load Referral In Clinical Urgency Category (RF1.2 HL70280) for
.         SOP RRI-I12, RRI-I13 & RRI-I14 messages only.
.
WRF12000  BRANCH    MISCPRGM,WRF13000:           * HARP
                             WRF13000:           * HBPCCT
                             WRF13000:           * Medi-Hotel
                             WRF13000:           * Palliative Care
                             WRF13000:           * Post Acute Care
                             WRF13000:           * RIR
                             WRF13000:           * SACS
                             WRF12010:           * Specialist O/P Clinic
                             WRF13000            * TCP
.
.         If the Referral Outcome is "accepted", then this field is mandatory
.         for SOP
.
WRF12010  MATCH     SP3,REFICLUC                 * blank priority ?
          GOTO      WRF12020 IF NOT EQUAL        * no - validate value
.
          MATCH     "010",RF1001                 * Accepted new appt. ?
          GOTO       WRF12015 IF EQUAL           * yes
.
          MATCH     "020",RF1001                 * Accepted review appt. ?
          GOTO       WRF12015 IF EQUAL           * yes
.
          MATCH     "3",RF1001                   * Renewed MBS ?
          GOTO       WRF13000 IF NOT EQUAL       * yes
.
WRF12015  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "RF1.2.1  ",PRINEROR
          MOVE      "Priority is blank",PRINDESC
          CALL      PERR0000
          GOTO      WRF13000
.
WRF12020  PACK      KEY5,ANSP,ANSR,REFICLUC
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "RF1.2.2  ",PRINEROR
            MOVE      "Priority code (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * saved HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "RF1.2.3  ",PRINEROR
            MOVE      "Referral In Clinical Urgency Category (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
          STRIP     THCSCOD
          TYPE      THCSCOD                      * saved HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.2.4  ",PRINEROR
            MOVE      "Referral In Clinical Urgency Category (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
          MOVELPTR  THCSCOD,FORM1                * 1-digit code ?
          IF        FORM1 <> 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.2.5  ",PRINEROR
            MOVE      "Referral In Clinical Urgency Category (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
.         Check for valid values
.
          MOVE      THCSCOD,FORM1                * Valid HDP value ?
          IF        FORM1 < 1 | FORM1 > 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.2.6  ",PRINEROR
            MOVE      "Referral In Clinical Urgency Category (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WRF13000
          ENDIF
.
          MOVE      THCSCOD,RF1002
.
.         Load Referral Identifier (RF1.6) for RRI-I12 ,RRI-I13 & RRI-I14
.         messages
.         Check which program types require the field to be populated.
.
WRF13000  BRANCH    MISCPRGM,WRF13200:           * HARP
                             WRF13200:           * HBPCCT
                             WRF13200:           * Medi-Hotel
                             WRF13200:           * Palliative Care
                             WRF13200:           * Post Acute Care
                             WRF13200:           * RIR
                             WRF13200:           * SACS
                             WRF13200:           * Specialist O/P Clinic
                             WRF13200            * TCP
.
WRF13200  MOVE      MISCVISN,RF1006
          SQUEEZE   RF1006
.
.         Load Referral In Received Date (RF1.7) for RRI-I12 ,RRI-I13
.         & RRI-I14 messages
.         Check which program types require the field to be populated.
.
WRF14000  BRANCH    MISCPRGM,WRF14200:           * HARP
                             WRF14200:           * HBPCCT
                             WRF14200:           * Medi-Hotel
                             WRF14200:           * Palliative Care
                             WRF14200:           * Post Acute Care
                             WRF14200:           * RIR
                             WRF14200:           * SACS
                             WRF14200:           * Specialist O/P Clinic
                             WRF14200            * TCP
.
WRF14200  MATCH     SP8,REFIRDAT                 * referral-in date blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "RF1.7.1  ",PRINEROR
            MOVE      "Referral In Received Date is blank",PRINDESC
            CALL      PERR0000
          ELSE
            MOVE      REFIRDAT,RF1007            * no
          ENDIF
.
.         Load Referral In Receipt Acknowledgement Date and
.         Referral In Clinical Referral Date (RF1.9) (as repeating fields)
.         for RRI-I12, RRI-I13 & RRI-I14 messages.
.         Check which program types require the field to be populated.
.
WRF15000  BRANCH    MISCPRGM,WRF15200:           * HARP
                             WRF18000:           * HBPCCT
                             WRF18000:           * Medi-Hotel
                             WRF18000:           * Palliative Care
                             WRF15200:           * Post Acute Care
                             WRF15200:           * RIR
                             WRF15200:           * SACS
                             WRF15200:           * Specialist O/P Clinic
                             WRF15200            * TCP
.
.         First load the Referral In Receipt Acknowledgement Date
.
WRF15200  MATCH     SP8,REFIRADT                 * acknowledgement date blank ?
          GOTO      WRF15250 IF NOT EQUAL        * no
.
          MATCH     "0",REFIOUTC                 * status waiting ?
          GOTO      WRF15300 IF EQUAL            * yes
.
          MOVE      MISCDTTM,DIM14               * error
          CALL      FDTM0000
          MOVE      "RF1.9.1  ",PRINEROR
          MOVE      "Referral In receipt acknowledgement date is blank",PRINDESC
          CALL      PERR0000
          GOTO      WRF15300
.
WRF15250  MOVE      REFIRADT,RF1009
.
.         Check that the Referral In Received Date is not after the
.         Referral In Receipt Acknowledgement Date
.
          MATCH     REFIRDAT,REFIRADT
          IF        @LESS
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "RF1.9.2  ",PRINEROR
            MOVE      "Referral In receipt acknowledgement date is inconsistent",PRINDESC
            CALL      PERR0000
          ENDIF
.
.         Now load the Referral In Clinical Referral Date for
.         Specialist O/P Clinics only
.
WRF15300  BRANCH    MISCPRGM,WRF18000:           * HARP
                             WRF18000:           * HBPCCT
                             WRF18000:           * Medi-Hotel
                             WRF18000:           * Palliative Care
                             WRF18000:           * Post Acute Care
                             WRF18000:           * RIR
                             WRF18000:           * SACS
                             WRF15500:           * Specialist O/P Clinic
                             WRF18000            * TCP
.
WRF15500  ENDSET    RF1009
          APPEND    "~",RF1009
.
          MATCH     SP8,REFICRDT                 * clin. referral date blank ?
          IF        @EQUAL
            APPEND    "NP",RF1009                * set as "not present"
            GOTO      WRF15600
          ENDIF
.
.         Check that the Referral In Clinical Referral Date is not
.         after the Referral In Received Date
.
          MATCH     REFICRDT,REFIRDAT
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "RF1.9.3  ",PRINEROR
            MOVE      "Referral In clinical referral date is inconsistent",PRINDESC
            CALL      PERR0000
            GOTO      WRF15700
          ENDIF
.
          APPEND    REFICRDT,RF1009
WRF15600  RESET     RF1009
.
.         Populate Referral End Reason (RF1.10 - 990095).
.         Check which program types require the field to be populated.
.
WRF15700  BRANCH    MISCPRGM,WRF18000:           * HARP
                             WRF18000:           * HBPCCT
                             WRF18000:           * Medi-Hotel
                             WRF18000:           * Palliative Care
                             WRF18000:           * Post Acute Care
                             WRF18000:           * RIR
                             WRF18000:           * SACS
                             WRF15800:           * Specialist O/P Clinic
                             WRF18000            * TCP
.
          GOTO      WRF18000
.
WRF15800  MATCH     "5",REFIOUTC                 * status rejected ?
          IF        !@EQUAL
            MATCH     "4",REFIOUTC               * no - status cancelled ?
            GOTO      WRF15810 IF NOT EQUAL      * no
          ENDIF
.
.         The status is either cancelled or rejected, so check if this
.         referral was accepted or not, using the referral outcome.
.         If it wasn't accepted, then leave the field unpopulated.
.
          MATCH     "98",RF1001                  * yes - insufficient info ?
          IF        !@EQUAL
            MATCH     "99",RF1001
            IF        !@EQUAL
              MOVE      "2",RF1010
            ENDIF
          ENDIF
          GOTO      WRF18000
.
WRF15810  MATCH     "2",REFIOUTC                 * status closed
          IF        @EQUAL
            MOVE      "1",RF1010                 * yes
          ENDIF
.
          GOTO      WRF18000
.
.         Process REF messages.
.         Load Referral Identifier for (RF1.6) REF-I12 ,REF-I13 & REF-I14
.         messages.
.         Check which program types require the field to be populated.
.
WRF16000  BRANCH    MISCPRGM,WRF16200:           * HARP
                             WRF16200:           * HBPCCT
                             WRF17000:           * Medi-Hotel
                             WRF19999:           * Palliative Care
                             WRF16200:           * Post Acute Care
                             WRF16200:           * RIR
                             WRF16200:           * SACS
                             WRF16200:           * Specialist O/P Clinic
                             WRF16200            * TCP
.
WRF16200  PACK      RF1006,MISCVISN,HYPHEN,REFORCNT
          SQUEEZE   RF1006
.
.         Load referral out date (RF1.7) for REF-I12 ,REF-I13 & REF-I14
.         messages.
.         Check which program types require the field to be populated.
.
WRF17000  BRANCH    MISCPRGM,WRF17200:           * HARP
                             WRF18000:           * HBPCCT
                             WRF18000:           * Medi-Hotel
                             WRF19999:           * Palliative Care
                             WRF17200:           * Post Acute Care
                             WRF17200:           * RIR
                             WRF17200:           * SACS
                             WRF17200:           * Specialist O/P Clinic
                             WRF17200            * TCP
.
WRF17200  MATCH     SP8,REFORODT                 * referral out date blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "RF1.7.2  ",PRINEROR
            MOVE      "Referral Out Date is blank",PRINDESC
            CALL      PERR0000
          ELSE
            MOVE      REFORODT,RF1007            * no
          ENDIF
.
.         Load episode identifier (RF1.11) for all RRI and REF messages.
.         Applies to all program types.
.
WRF18000  MOVE      MISCVISN,RF1011
          SQUEEZE   RF1011
.
          BRANCH    VALDFLAG,WRF19999            * validation phase only
.
          IF        MESSNUMB > 9 & MESSNUMB < 13
            WRITE     EXTRFILE,SEQ;RF1SEGMT,PIPE,*+,RF1001,PIPE,RF1002,PIPE:
                                            RF1003,PIPE,RF1004,PIPE,RF1005,PIPE:
                                            RF1006,PIPE,RF1007,PIPE,RF1008,PIPE:
                                            RF1009,PIPE,RF1010,CRETURN;
          ELSE
.
            WRITE     EXTRFILE,SEQ;RF1SEGMT,PIPE,*+,RF1001,PIPE,RF1002,PIPE:
                                            RF1003,PIPE,RF1004,PIPE,RF1005,PIPE:
                                            RF1006,PIPE,RF1007,PIPE,RF1008,PIPE:
                                            RF1009,PIPE,RF1010,PIPE,RF1011:
                                            CRETURN;
          ENDIF
.         
WRF19999  RETURN
+
.*****************************************************************************
.*                              WPRD0000           Called by: WI120000       *
.*            Load and write the PRD segment variables        WI130000       *
.* Sent in: RRI-I12, RRI-I13, RRI-I14, REF-I12 & REF-I14 only.WI140000       *
.*****************************************************************************
.
WPRD0000  CALL      CPRD0000                     * clear PRD variables
.
          IF        MESSNUMB > 12
            GOTO      WPRD5000                   * REF message
          ENDIF
.
.         Load Referral In Service Type (PRD.1 990082) for RRI messages.
.         Check which program types require the field to be populated.
.
          BRANCH    MISCPRGM,WPRD1200:           * HARP
                             WPRD1200:           * HBPCCT
                             WPRD9999:           * Medi-Hotel
                             WPRD1200:           * Palliative Care
                             WPRD1200:           * Post Acute Care
                             WPRD1200:           * RIR
                             WPRD1200:           * SACS
                             WPRD1200:           * Specialist O/P Clinic
                             WPRD1200            * TCP
.
.         There should only be one Referral In service type for the Master
.         referral, so get this from allrhlaf (type "04" record)
.
WPRD1200  PACK      KEY13,MISCVISN,ZERO,FOUR,SP20
          CALL      RSALRHL1                     * position on ref-in recs
          CALL      RKALRHL1                     * read next record
          BRANCH    OVRCD,WPRD1900               * eof
.           
          MATCH     MISCVISN,ALRHVISN            * same visit still ?
          GOTO      WPRD1900 IF NOT EQUAL        * no - finished
.           
          MATCH     "04",ALRHTYPE                * ref-in rec still ?
          GOTO      WPRD1900 IF NOT EQUAL        * no - finished
.
          MATCH     SP3,ALRHCODE                 * blank field ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PRD.1.1  ",PRINEROR
            MOVE      "Referral In Service Type blank",PRINDESC
            CALL      PERR0000
            GOTO      WPRD9000
          ENDIF
.
          PACK      KEY5,LOWCASEZ,ANSU,ALRHCODE
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PRD.1.2  ",PRINEROR
            MOVE      "Referral In Service Type (Cat zU/",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPRD9000
          ENDIF
.
          MATCH     ANSO,TCINDC1                 * Referral Out only code ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PRD.1.3  ",PRINEROR
            MOVE      "Referral In Service Type (Cat zU/",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPRD9000
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PRD.1.4  ",PRINEROR
            MOVE      "Referral In Service Type (Cat zU/",PRINDESC
            ENDSET    PRINDESC
            APPEND    ALRHCODE,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPRD9000
          ENDIF
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          GOTO      WPRD1300 IF EQUAL            * yes
.
          MATCH     "OTH",THCSCOD                * no
          GOTO      WPRD1500 IF EQUAL
.
          MATCH     "NA",THCSCOD
          GOTO      WPRD1500 IF EQUAL
.
          MATCH     "UNK",THCSCOD
          GOTO      WPRD1500 IF EQUAL
          GOTO      WPRD1400
.
.         Check all the numeric values.
.
WPRD1300  MOVE      THCSCOD,DIM3
          RJUSTIFY  DIM3
          MOVE      DIM3,FORM3
.
          IF        (FORM3 > 10 & FORM3 < 15) | FORM3 = 19 | FORM3 = 30
            GOTO      WPRD1500
          ENDIF
.
          IF        FORM3 = 201 | FORM3 = 202 | FORM3 = 206
            GOTO      WPRD1500
          ENDIF
.
          IF        (FORM3 > 296 & FORM3 < 300) | (FORM3 > 300 & FORM3 < 303)
            GOTO      WPRD1500
          ENDIF
.
          IF        FORM3 = 399 | FORM3 = 615 | FORM3 = 616 | FORM3 = 618 | FORM3 = 619
            GOTO      WPRD1500
          ENDIF
.
          IF        (FORM3 > 49 & FORM3 < 54) | (FORM3 > 635 & FORM3 < 641)
            GOTO      WPRD1500
          ENDIF
.
          MATCH     "20150701",REFIRDAT
          IF        @LESS
            IF        (FORM3 > 600 & FORM3 < 606) | (FORM3 > 606 & FORM3 < 614) | (FORM3 > 614 & FORM3 < 617) | (FORM3 > 617 & FORM3 < 620) | (FORM3 > 635 & FORM3 < 641)
              GOTO      WPRD1500
            ENDIF
          ELSE
            IF        (FORM3 > 600 & FORM3 < 606) | FORM3 = 607 | (FORM3 > 609 & FORM3 < 614) | (FORM3 > 614 & FORM3 < 617) | (FORM3 > 617 & FORM3 < 620) | (FORM3 > 635 & FORM3 < 641) | FORM3 = 650 | (FORM3 > 660 & FORM3 < 663)
              GOTO      WPRD1500
            ENDIF
          ENDIF
.
.         While "400" series values are not valid for SOP as of VINAH9 and
.         "700" or "800" series values should be used instead, it appears
.         that DoH are still accepting "400" series values where the
.         Referral In Received Date is pre 01/07/2013.  To avoid the numerous
.         errors being generated at extract time for this field, this change
.         will allow "400" series values for SOP records where the Referral
.         In Received Date value is pre 01/07/2013, otherwise it will allow
.         "700" or "800" series values.
.
          COMPARE   EIGHT,MISCPRGM               * Specialist O/P ?
          GOTO      WPRD1350 IF NOT EQUAL        * no
.
          MATCH     "20130701",REFIRDAT
          IF        @LESS
            IF        (FORM3 > 402 & FORM3 < 409) | FORM3 = 498 | FORM3 = 499
              MOVE      MISCDTTM,DIM14
              CALL      FDTM0000
              MOVE      "PRD.1.10 ",PRINEROR
              MOVE      "Warning: Referral In Service Type (Cat zU/",PRINDESC
              ENDSET    PRINDESC
              APPEND    ALRHCODE,PRINDESC
              APPEND    ") HDP Default not valid",PRINDESC
              RESET     PRINDESC
              CALL      WARN0000
              GOTO      WPRD1500
            ENDIF
          ELSE
            IF        (FORM3 > 700 & FORM3 < 706) | (FORM3 > 800 & FORM3 < 806)
              GOTO      WPRD1500
            ENDIF
          ENDIF
          GOTO      WPRD1400
.
.         Not Specialist O/P, so check for "400" series values
.
WPRD1350  IF        (FORM3 > 402 & FORM3 < 409) | FORM3 = 498 | FORM3 = 499
            GOTO      WPRD1500
          ENDIF
.
WPRD1400  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PRD.1.5  ",PRINEROR
          MOVE      "Referral In Service Type (Cat zU/",PRINDESC
          ENDSET    PRINDESC
          APPEND    ALRHCODE,PRINDESC
          APPEND    ") HDP Default not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPRD9000
.
WPRD1500  PACK      PRD001,CARET,CARET,CARET,THCSCOD
          GOTO      WPRD9000
.
WPRD1900  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PRD.1.6  ",PRINEROR
          MOVE      "Referral In Service Type not found",PRINDESC
          CALL      PERR0000
          GOTO      WPRD9000
.
.         Load for REF messages.
.         Load Referral Out Service Type (PRD.1 990082) for REF messages.
.         Check which program types require the field to be populated.
.
WPRD5000  BRANCH    MISCPRGM,WPRD5200:           * HARP
                             WPRD9000:           * HBPCCT
                             WPRD9999:           * Medi-Hotel
                             WPRD5200:           * Palliative Care
                             WPRD5200:           * Post Acute Care
                             WPRD5200:           * RIR
                             WPRD5200:           * SACS
                             WPRD5200:           * Specialist O/P Clinic
                             WPRD5200            * TCP
.
WPRD5200  PACK      KEY5,LOWCASEZ,ANSU,REFOSERT
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PRD.1.7  ",PRINEROR
            MOVE      "Referral Out Service Type (Cat zU/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFOSERT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPRD6000
          ENDIF
.
          MATCH     ANSI,TCINDC1                 * Referral In only code ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PRD.1.8  ",PRINEROR
            MOVE      "Referral Out Service Type (Cat zU/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFOSERT,PRINDESC
            APPEND    ") not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPRD6000
          ENDIF
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          GOTO      WPRD5300 IF EQUAL            * yes
.
          MATCH     "OTH",THCSCOD                * no
          GOTO      WPRD5500 IF EQUAL
.
          MATCH     "NA",THCSCOD
          GOTO      WPRD5500 IF EQUAL
.
          MATCH     "UNK",THCSCOD
          GOTO      WPRD5500 IF EQUAL
          GOTO      WPRD5400
.
.         Check all the numeric values.
.         In the VINAH 8 extract (VINAHEXT), there was no validation
.         of the values for this field and as such, some values were input
.         which were only valid for subsequent VINAH versions (VINAH 9 and
.         onwards).  These values were then causing validation issues if
.         delete messages were being sent later on.  As such, the validation
.         has been removed for REF^I14 messages given that DHS must have
.         accepted them when they were originally sent as a REF^I12, so
.         there should be no need to change them. (TSK 0829008)
.
WPRD5300  COMPARE   TEN5,MESSNUMB                * Referral-out delete message ?
          GOTO      WPRD5500 IF EQUAL            * don't validate
.
          MOVE      THCSCOD,DIM3
          RJUSTIFY  DIM3
          MOVE      DIM3,FORM3
.
          IF        (FORM3 > 10 & FORM3 < 15) | FORM3 = 19 | FORM3 = 30
            GOTO      WPRD5500
          ENDIF
.
          IF        FORM3 = 201 | FORM3 = 202
            GOTO      WPRD5500
          ENDIF
.
          IF        (FORM3 > 296 & FORM3 < 300) | (FORM3 > 300 & FORM3 < 303)
            GOTO      WPRD5500
          ENDIF
.
          IF        FORM3 = 399 | FORM3 = 616 | FORM3 = 618 | FORM3 = 619 | FORM3 = 626
            GOTO      WPRD5500
          ENDIF
.
          IF        (FORM3 > 49 & FORM3 < 54) | (FORM3 > 635 & FORM3 < 646)
            GOTO      WPRD5500
          ENDIF
.
          MATCH     "20150701",REFIRDAT
          IF        @LESS
            IF        (FORM3 > 600 & FORM3 < 606) | (FORM3 > 606 & FORM3 < 614) | (FORM3 > 614 & FORM3 < 617) | (FORM3 > 617 & FORM3 < 620) | FORM3 = 626 | (FORM3 > 635 & FORM3 < 646) | FORM3 = 650
              GOTO      WPRD5500
            ENDIF
          ELSE
            IF        (FORM3 > 600 & FORM3 < 606) | FORM3 = 607 | (FORM3 > 609 & FORM3 < 614) | (FORM3 > 614 & FORM3 < 617) | (FORM3 > 617 & FORM3 < 620) | FORM3 = 626 | (FORM3 > 635 & FORM3 < 646) | FORM3 = 650 | (FORM3 > 660 & FORM3 < 663)
              GOTO      WPRD5500
            ENDIF
          ENDIF
.
.         While "400" series values are not valid for SOP as of VINAH9 and
.         "700" or "800" series values should be used instead, it appears
.         that DoH are still accepting "400" series values where the
.         Referral Out Date is pre 01/07/2013.  To avoid the numerous
.         errors being generated at extract time for this field, this change
.         will allow "400" series values for SOP records where the Referral
.         Out Date value is pre 01/07/2013, otherwise it will allow
.         "700" or "800" series values.
.
          COMPARE   EIGHT,MISCPRGM               * Specialist O/P ?
          GOTO      WPRD5350 IF NOT EQUAL        * no
.
          MATCH     "20130701",REFORODT
          IF        @LESS
            IF        (FORM3 > 402 & FORM3 < 409) | FORM3 = 498 | FORM3 = 499
              MOVE      MISCDTTM,DIM14
              CALL      FDTM0000
              MOVE      "PRD.1.11 ",PRINEROR
              MOVE      "Warning: Referral Out Service Type (Cat zU/",PRINDESC
              ENDSET    PRINDESC
              APPEND    ALRHCODE,PRINDESC
              APPEND    ") HDP Default not valid",PRINDESC
              RESET     PRINDESC
              CALL      WARN0000
              GOTO      WPRD5500
            ENDIF
          ELSE
            IF        (FORM3 > 700 & FORM3 < 706) | (FORM3 > 800 & FORM3 < 806)
              GOTO      WPRD5500
            ENDIF
          ENDIF
          GOTO      WPRD5400
.
.         Not Specialist O/P, so check for "400" series values
.
WPRD5350  IF        (FORM3 > 402 & FORM3 < 409) | FORM3 = 498 | FORM3 = 499
            GOTO      WPRD5500
          ENDIF
.
WPRD5400  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PRD.1.9  ",PRINEROR
          MOVE      "Referral Out Service Type (Cat zU/",PRINDESC
          ENDSET    PRINDESC
          APPEND    REFOSERT,PRINDESC
          APPEND    ") HDP Default not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPRD6000
.
WPRD5500  PACK      PRD001,CARET,CARET,CARET,THCSCOD
.
.         Load Referral Out Place (PRD.4 HL70306) for REF messages.
.         Check which program types require the field to be populated.
.
WPRD6000  BRANCH    MISCPRGM,WPRD9000:           * HARP
                             WPRD9000:           * HBPCCT
                             WPRD9999:           * Medi-Hotel
                             WPRD9000:           * Palliative Care
                             WPRD9000:           * Post Acute Care
                             WPRD9000:           * RIR
                             WPRD9000:           * SACS
                             WPRD9000:           * Specialist O/P Clinic
                             WPRD6200            * TCP
.
WPRD6200  PACK      KEY5,LOWCASEZ,ANSV,REFOPLAC
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PRD.4.1  ",PRINEROR
            MOVE      "Referral Out Place (Cat zV/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFOPLAC,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPRD9000
          ENDIF
.
.         Check for valid values
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * numeric value ?
          GOTO      WPRD6400 IF NOT EQUAL        * no
.
          MOVELPTR  THCSCOD,FORM1                * 2-digit code ?
          IF        FORM1 <> 2
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PRD.4.3  ",PRINEROR
            MOVE      "Referral Out Place (Cat zV/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFOPLAC,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      WPRD9000
          ENDIF
.
.         Check for valid numeric values
.
.
          MOVE      THCSCOD,FORM2
.
          MATCH     "20150701",REFIRDAT
          IF        @LESS
            IF        FORM2 > 20 & FORM2 < 29
              GOTO      WPRD6900
            ENDIF
          ELSE
            IF        FORM2 > 23 & FORM2 < 30
              GOTO      WPRD6900
            ENDIF
          ENDIF
.
          IF        (FORM2 > 30 & FORM2 < 36) | FORM2 = 39
            GOTO      WPRD6900
          ENDIF
.
          IF        FORM2 = 41 | FORM2 = 42 | FORM2 = 61
            GOTO      WPRD6900
          ENDIF
.
          GOTO      WPRD6500
.
.         Check for valid character values
.
WPRD6400  MATCH     "OTH",THCSCOD
          GOTO      WPRD6900 IF EQUAL
.
          MATCH     "UNK",THCSCOD
          GOTO      WPRD6900 IF EQUAL
.
          MATCH     "NA",THCSCOD
          GOTO      WPRD6900 IF EQUAL
.
WPRD6500  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PRD.4.4  ",PRINEROR
          MOVE      "Referral Out Place (Cat zV/",PRINDESC
          ENDSET    PRINDESC
          APPEND    REFOPLAC,PRINDESC
          APPEND    ") HDP Default not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      WPRD9000
.
WPRD6900  PACK      PRD004,CARET,CARET,CARET,CARET,THCSCOD
.
WPRD9000  BRANCH    VALDFLAG,WPRD9999            * validation phase only
.
          IF        MISCPRGM = 9 & MESSNUMB > 12
            WRITE     EXTRFILE,SEQ;PRDSEGMT,PIPE,*+,PRD001,PIPE,PRD002:
                                   PIPE,PRD003,PIPE,PRD004,CRETURN;
          ELSE
            WRITE     EXTRFILE,SEQ;PRDSEGMT,PIPE,*+,PRD001,CRETURN;
          ENDIF
.
WPRD9999  RETURN
+
.******************************************************************************
.*                                 GTMESSID                                   *
.*                      Get next HL7 message ID (MSH.10)                      *
.******************************************************************************
.
GTMESSID  BRANCH    VALDFLAG,GTMESS99             * validation phase only
.
          MOVE      "106",PRXCODE                 * System Lock Sector 106
          CALL      GETSLK00                      * Get System Lock-Sector 106
          READ      CONTROLF,HUND06;*227,ALCNMESI * load next message id
          MOVE      ALCNMESI,DIM20
          ADD       ONE,ALCNMESI
          WRITAB    CONTROLF,HUND06;*227,ALCNMESI    
          CALL      RELSLK00                    * Release System Lock-Sector 106
          MOVE      DIM20,MSH010
.
.         Remove the leading zeros from the message id
.
.TMESS50  MOVE      DIM20,ANS
.         MATCH     "0",ANS                      * "0" ?
.>>>>>>>  GOTO      GTMESS90 IF NOT EQUAL        * no - first valid character
.
.         BUMP      DIM20
.         GOTO      GTMESS50
.
.TMESS90  MOVE      DIM20,MSH010
.         
GTMESS99  RETURN
+
.*****************************************************************************
.*                              GTDTTM00           Called by: VARIOUS        *
.*        Get the datetime the message is being sent                         *
.*****************************************************************************
.         
GTDTTM00  CALL      IBACLOCK
          UNPACK    CTIMEIS,HOURTM,ANS,MINTIME,ANS,SECTIME
          PACK      DATETIME,CCC,CYY,CMM,CDD,HOURTM,MINTIME,SECTIME
          REP       " 0",DATETIME
.         
GTDTTM99  RETURN    
+
.*****************************************************************************
.*                           CFHS0000              Called by: WFHS0000       *
.*                      Clear all the FHS variables                          *
.*****************************************************************************
.
CFHS0000  MOVE      SP100,FHS001
          MOVE      SP100,FHS002
          PACK      FHS003,SP100,SP100,SP30
          PACK      FHS004,SP100,SP100,SP30
          PACK      FHS005,SP100,SP100,SP30
          PACK      FHS006,SP100,SP100,SP30
          MOVE      SP100,FHS007
          MOVE      SP100,FHS008
          MOVE      SP100,FHS009
.>>>>>>   MOVE      SP100,FHS010              * already loaded so don't clear
.>>>>>>   MOVE      SP100,FHS011              * already loaded so don't clear
.
          CLEAR     FHS001
          CLEAR     FHS002
          CLEAR     FHS003
          CLEAR     FHS004
          CLEAR     FHS005
          CLEAR     FHS006
          CLEAR     FHS007
          CLEAR     FHS008
          CLEAR     FHS009
.>>>>>>   CLEAR     FHS010
.>>>>>>   CLEAR     FHS011
.
CFHS9999  RETURN
+
.*****************************************************************************
.*                           CBHS0000              Called by: WBHS0000       *
.*                      Clear all the BHS variables                          *
.*****************************************************************************
.
CBHS0000  MOVE      SP100,BHS001
          MOVE      SP100,BHS002
          PACK      BHS003,SP100,SP100,SP30
          PACK      BHS004,SP100,SP100,SP30
          PACK      BHS005,SP100,SP100,SP30
          PACK      BHS006,SP100,SP100,SP30
          MOVE      SP100,BHS007
          MOVE      SP100,BHS008
          MOVE      SP100,BHS009
          MOVE      SP100,BHS010
          MOVE      SP100,BHS011
.
          CLEAR     BHS001
          CLEAR     BHS002
          CLEAR     BHS003
          CLEAR     BHS004
          CLEAR     BHS005
          CLEAR     BHS006
          CLEAR     BHS007
          CLEAR     BHS008
          CLEAR     BHS009
          CLEAR     BHS010
          CLEAR     BHS011
.
CBHS9999  RETURN
+
.*****************************************************************************
.*                           CBTS0000              Called by: WBTS0000       *
.*                      Clear all the BTS variables                          *
.*****************************************************************************
.
CBTS0000  MOVE      SP100,BTS001
.
          CLEAR     BTS001
.
CBTS9999  RETURN
+
.*****************************************************************************
.*                           CFTS0000              Called by: WFTS0000       *
.*                      Clear all the FTS variables                          *
.*****************************************************************************
.
CFTS0000  MOVE      SP100,FTS001
.
          CLEAR     FTS001
.
CFTS9999  RETURN
+
.*****************************************************************************
.*                           CMSH0000              Called by: WMSH0000       *
.*                      Clear all the MSH variables                          *
.*****************************************************************************
.
CMSH0000  MOVE      SP100,MSH001
          MOVE      SP100,MSH002
          PACK      MSH003,SP100,SP100,SP30
          PACK      MSH004,SP100,SP100,SP30
          PACK      MSH005,SP100,SP100,SP30
          PACK      MSH006,SP100,SP100,SP30
          MOVE      SP100,MSH007
          MOVE      SP100,MSH008
          MOVE      SP100,MSH009
          MOVE      SP100,MSH010
          MOVE      SP100,MSH011
          MOVE      SP100,MSH012
          MOVE      SP100,MSH013
          PACK      MSH014,SP100,SP100,SP30
          MOVE      SP100,MSH015
          MOVE      SP100,MSH016
          MOVE      SP100,MSH017
          MOVE      SP100,MSH018
.
          CLEAR     MSH001
          CLEAR     MSH002
          CLEAR     MSH003
          CLEAR     MSH004
          CLEAR     MSH005
          CLEAR     MSH006
          CLEAR     MSH007
          CLEAR     MSH008
          CLEAR     MSH009
          CLEAR     MSH010
          CLEAR     MSH011
          CLEAR     MSH012
          CLEAR     MSH013
          CLEAR     MSH014
          CLEAR     MSH015
          CLEAR     MSH016
          CLEAR     MSH017
          CLEAR     MSH018
.
CMSH9999  RETURN
+
.*****************************************************************************
.*                           CPID0000              Called by: WPID0000       *
.*                      Clear all the PID variables                          *
.*****************************************************************************
.
CPID0000  MOVE      SP100,PID001
          MOVE      SP100,PID002
          PACK      PID003,SP100,SP100,SP100
          MOVE      SP100,PID004
          PACK      PID005,SP100,SP100,SP100
          PACK      PID006,SP100,SP100,SP100
          MOVE      SP100,PID007
          MOVE      SP100,PID008
          PACK      PID009,SP100,SP100,SP100
          PACK      PID010,SP100,SP100,SP100
          PACK      PID011,SP100,SP100,SP100
          MOVE      SP100,PID012
          PACK      PID013,SP100,SP100,SP100
          PACK      PID014,SP100,SP100,SP100
          PACK      PID015,SP100,SP100,SP100
          PACK      PID016,SP100,SP100,SP100
          PACK      PID017,SP100,SP100,SP100
          PACK      PID018,SP100,SP100,SP100
          MOVE      SP100,PID019
          MOVE      SP100,PID020
          PACK      PID021,SP100,SP100,SP100
          PACK      PID022,SP100,SP100,SP100
          PACK      PID023,SP100,SP100,SP100
          MOVE      SP100,PID024
          MOVE      SP100,PID025
          PACK      PID026,SP100,SP100,SP100
          PACK      PID027,SP100,SP100,SP100
          PACK      PID028,SP100,SP100,SP100
          MOVE      SP100,PID029
          MOVE      SP100,PID030
          MOVE      SP100,PID031
          MOVE      SP100,PID032
.
          CLEAR     PID001
          CLEAR     PID002
          CLEAR     PID003
          CLEAR     PID004
          CLEAR     PID005
          CLEAR     PID006
          CLEAR     PID007
          CLEAR     PID008
          CLEAR     PID009
          CLEAR     PID010
          CLEAR     PID011
          CLEAR     PID012
          CLEAR     PID013
          CLEAR     PID014
          CLEAR     PID015
          CLEAR     PID016
          CLEAR     PID017
          CLEAR     PID018
          CLEAR     PID019
          CLEAR     PID020
          CLEAR     PID021
          CLEAR     PID022
          CLEAR     PID023
          CLEAR     PID024
          CLEAR     PID025
          CLEAR     PID026
          CLEAR     PID027
          CLEAR     PID028
          CLEAR     PID029
          CLEAR     PID030
          CLEAR     PID031
          CLEAR     PID032
.
CPID9999  RETURN
+
.*****************************************************************************
.*                           CPDA0000              Called by: WPDA0000       *
.*                      Clear all the PDA variables                          *
.*****************************************************************************
.
CPDA0000  PACK      PDA001,SP100,SP100,SP100
          MOVE      SP100,PDA002
.
          CLEAR     PDA001
          CLEAR     PDA002
.
CPDA9999  RETURN
+
.*****************************************************************************
.*                           CPD10000              Called by: WPD10000       *
.*                      Clear all the PD1 variables                          *
.*****************************************************************************
.
CPD10000  MOVE      SP100,PD1001
          MOVE      SP100,PD1002
          PACK      PD1003,SP100,SP100,SP100
          PACK      PD1004,SP100,SP100,SP100
          MOVE      SP100,PD1005
          MOVE      SP100,PD1006
          MOVE      SP100,PD1007
          MOVE      SP100,PD1008
          MOVE      SP100,PD1009
          PACK      PD1010,SP100,SP100,SP100
          PACK      PD1011,SP100,SP100,SP100
          MOVE      SP100,PD1012
          MOVE      SP100,PD1013
          PACK      PD1014,SP100,SP100,SP100
          PACK      PD1015,SP100,SP100,SP100
.
          CLEAR     PD1001
          CLEAR     PD1002
          CLEAR     PD1003
          CLEAR     PD1004
          CLEAR     PD1005
          CLEAR     PD1006
          CLEAR     PD1007
          CLEAR     PD1008
          CLEAR     PD1009
          CLEAR     PD1010
          CLEAR     PD1011
          CLEAR     PD1012
          CLEAR     PD1013
          CLEAR     PD1014
          CLEAR     PD1015
.
CPD19999  RETURN
+
.*****************************************************************************
.*                           CNK10000              Called by: WNK10000       *
.*                      Clear all the NK1 variables                          *
.*****************************************************************************
.
CNK10000  MOVE      SP100,NK1001
          PACK      NK1002,SP100,SP100,SP100
          PACK      NK1003,SP100,SP100,SP100
          PACK      NK1004,SP100,SP100,SP100
          PACK      NK1005,SP100,SP100,SP100
          PACK      NK1006,SP100,SP100,SP100
          PACK      NK1007,SP100,SP100,SP100
          MOVE      SP100,NK1008
          MOVE      SP100,NK1009
          MOVE      SP100,NK1010
          MOVE      SP100,NK1011
          PACK      NK1012,SP100,SP100,SP100
          PACK      NK1013,SP100,SP100,SP100
          PACK      NK1014,SP100,SP100,SP100
          MOVE      SP100,NK1015
          MOVE      SP100,NK1016
          MOVE      SP100,NK1017
          MOVE      SP100,NK1018
          PACK      NK1019,SP100,SP100,SP100
          PACK      NK1020,SP100,SP100,SP100
          MOVE      SP100,NK1021
.
          CLEAR     NK1001
          CLEAR     NK1002
          CLEAR     NK1003
          CLEAR     NK1004
          CLEAR     NK1005
          CLEAR     NK1006
          CLEAR     NK1007
          CLEAR     NK1008
          CLEAR     NK1009
          CLEAR     NK1010
          CLEAR     NK1011
          CLEAR     NK1012
          CLEAR     NK1013
          CLEAR     NK1014
          CLEAR     NK1015
          CLEAR     NK1016
          CLEAR     NK1017
          CLEAR     NK1018
          CLEAR     NK1019
          CLEAR     NK1020
          CLEAR     NK1021
.
CNK19999  RETURN
+
.*****************************************************************************
.*                           CPV10000              Called by: WPV10000       *
.*                      Clear all the PV1 variables                          *
.*****************************************************************************
.
CPV10000  MOVE      SP100,PV1001
          MOVE      SP100,PV1002
          MOVE      SP100,PV1003
          MOVE      SP100,PV1004
          PACK      PV1005,SP100,SP100,SP100
          MOVE      SP100,PV1006
          PACK      PV1007,SP100,SP100,SP100
          PACK      PV1008,SP100,SP100,SP100
          PACK      PV1009,SP100,SP100,SP100
          MOVE      SP100,PV1010
          MOVE      SP100,PV1011
          MOVE      SP100,PV1012
          MOVE      SP100,PV1013
          MOVE      SP100,PV1014
          MOVE      SP100,PV1015
          MOVE      SP100,PV1016
          PACK      PV1017,SP100,SP100,SP100
          MOVE      SP100,PV1018
          PACK      PV1019,SP100,SP100,SP100
          MOVE      SP100,PV1020
          MOVE      SP100,PV1021
          MOVE      SP100,PV1022
          MOVE      SP100,PV1023
          MOVE      SP100,PV1024
          MOVE      SP100,PV1025
          MOVE      SP100,PV1026
          MOVE      SP100,PV1027
          MOVE      SP100,PV1028
          MOVE      SP100,PV1029
          MOVE      SP100,PV1030
          MOVE      SP100,PV1031
          MOVE      SP100,PV1032
          MOVE      SP100,PV1033
          MOVE      SP100,PV1034
          MOVE      SP100,PV1035
          MOVE      SP100,PV1036
          MOVE      SP100,PV1037
          PACK      PV1038,SP100,SP100,SP100
          MOVE      SP100,PV1039
          MOVE      SP100,PV1040
          MOVE      SP100,PV1041
          MOVE      SP100,PV1042
          MOVE      SP100,PV1043
          MOVE      SP100,PV1044
          MOVE      SP100,PV1045
          MOVE      SP100,PV1046
          MOVE      SP100,PV1047
          MOVE      SP100,PV1048
          MOVE      SP100,PV1049
          PACK      PV1050,SP100,SP100,SP100
          MOVE      SP100,PV1051
.
          CLEAR     PV1001
          CLEAR     PV1002
          CLEAR     PV1003
          CLEAR     PV1004
          CLEAR     PV1005
          CLEAR     PV1006
          CLEAR     PV1007
          CLEAR     PV1008
          CLEAR     PV1009
          CLEAR     PV1010
          CLEAR     PV1011
          CLEAR     PV1012
          CLEAR     PV1013
          CLEAR     PV1014
          CLEAR     PV1015
          CLEAR     PV1016
          CLEAR     PV1017
          CLEAR     PV1018
          CLEAR     PV1019
          CLEAR     PV1020
          CLEAR     PV1021
          CLEAR     PV1022
          CLEAR     PV1023
          CLEAR     PV1024
          CLEAR     PV1025
          CLEAR     PV1026
          CLEAR     PV1027
          CLEAR     PV1028
          CLEAR     PV1029
          CLEAR     PV1030
          CLEAR     PV1031
          CLEAR     PV1032
          CLEAR     PV1033
          CLEAR     PV1034
          CLEAR     PV1035
          CLEAR     PV1036
          CLEAR     PV1037
          CLEAR     PV1038
          CLEAR     PV1039
          CLEAR     PV1040
          CLEAR     PV1041
          CLEAR     PV1042
          CLEAR     PV1043
          CLEAR     PV1044
          CLEAR     PV1045
          CLEAR     PV1046
          CLEAR     PV1047
          CLEAR     PV1048
          CLEAR     PV1049
          CLEAR     PV1050
          CLEAR     PV1051
.
CPV19999  RETURN
+
.*****************************************************************************
.*                           CPV20000              Called by: WPV20000       *
.*                      Clear all the PV2 variables                          *
.*****************************************************************************
.
CPV20000  MOVE      SP100,PV2001
          PACK      PV2002,SP100,SP100,SP100
          PACK      PV2003,SP100,SP100,SP100
          PACK      PV2004,SP100,SP100,SP100
          MOVE      SP100,PV2005
          MOVE      SP100,PV2006
          MOVE      SP100,PV2007
          MOVE      SP100,PV2008
          MOVE      SP100,PV2009
          MOVE      SP100,PV2010
          MOVE      SP100,PV2011
          MOVE      SP100,PV2012
          PACK      PV2013,SP100,SP100,SP100
          MOVE      SP100,PV2014
          MOVE      SP100,PV2015
          MOVE      SP100,PV2016
          MOVE      SP100,PV2017
          MOVE      SP100,PV2018
          MOVE      SP100,PV2019
          MOVE      SP100,PV2020
          MOVE      SP100,PV2021
          MOVE      SP100,PV2022
          PACK      PV2023,SP100,SP100,SP100
          MOVE      SP100,PV2024
          MOVE      SP100,PV2025
          MOVE      SP100,PV2026
          MOVE      SP100,PV2027
          MOVE      SP100,PV2028
          MOVE      SP100,PV2029
          PACK      PV2030,SP100,SP100,SP100
          MOVE      SP100,PV2031
          MOVE      SP100,PV2032
          MOVE      SP100,PV2033
          MOVE      SP100,PV2034
          MOVE      SP100,PV2035
          MOVE      SP100,PV2036
          MOVE      SP100,PV2037
          PACK      PV2038,SP100,SP100,SP100
          PACK      PV2039,SP100,SP100,SP100
          PACK      PV2040,SP100,SP100,SP100
.
          CLEAR     PV2001
          CLEAR     PV2002
          CLEAR     PV2003
          CLEAR     PV2004
          CLEAR     PV2005
          CLEAR     PV2006
          CLEAR     PV2007
          CLEAR     PV2008
          CLEAR     PV2009
          CLEAR     PV2010
          CLEAR     PV2011
          CLEAR     PV2012
          CLEAR     PV2013
          CLEAR     PV2014
          CLEAR     PV2015
          CLEAR     PV2016
          CLEAR     PV2017
          CLEAR     PV2018
          CLEAR     PV2019
          CLEAR     PV2020
          CLEAR     PV2021
          CLEAR     PV2022
          CLEAR     PV2023
          CLEAR     PV2024
          CLEAR     PV2025
          CLEAR     PV2026
          CLEAR     PV2027
          CLEAR     PV2028
          CLEAR     PV2029
          CLEAR     PV2030
          CLEAR     PV2031
          CLEAR     PV2032
          CLEAR     PV2033
          CLEAR     PV2034
          CLEAR     PV2035
          CLEAR     PV2036
          CLEAR     PV2037
          CLEAR     PV2038
          CLEAR     PV2039
          CLEAR     PV2040
.
CPV29999  RETURN
+
.*****************************************************************************
.*                           CMRG0000              Called by: WMRG0000       *
.*                      Clear all the MRG variables                          *
.*****************************************************************************
.
CMRG0000  PACK      MRG001,SP100,SP100,SP100
.
          CLEAR     MRG001
.
CMRG9999  RETURN
+
.*****************************************************************************
.*                           CROL0000              Called by: WROL0000       *
.*                      Clear all the ROL variables                          *
.*****************************************************************************
.
CROL0000  MOVE      SP100,ROL001
          MOVE      SP100,ROL002
          PACK      ROL003,SP100,SP100,SP100
          PACK      ROL004,SP100,SP100,SP100
          MOVE      SP100,ROL005
          MOVE      SP100,ROL006
          PACK      ROL007,SP100,SP100,SP100
          PACK      ROL008,SP100,SP100,SP100
          PACK      ROL009,SP100,SP100,SP100
          PACK      ROL010,SP100,SP100,SP100
.
          CLEAR     ROL001
          CLEAR     ROL002
          CLEAR     ROL003
          CLEAR     ROL004
          CLEAR     ROL005
          CLEAR     ROL006
          CLEAR     ROL007
          CLEAR     ROL008
          CLEAR     ROL009
          CLEAR     ROL010
.
CROL9999  RETURN
+
.*****************************************************************************
.*                           CPR10000              Called by: WPR10000       *
.*                      Clear all the PR1 variables                          *
.*****************************************************************************
.
CPR10000  MOVE      SP100,PR1001
          MOVE      SP100,PR1002
          PACK      PR1003,SP100,SP100,SP100
          MOVE      SP100,PR1004
          MOVE      SP100,PR1005
.         MOVE      SP100,PR1006                * don't clear as set in WPV10000
.
          CLEAR     PR1001
          CLEAR     PR1002
          CLEAR     PR1003
          CLEAR     PR1004
          CLEAR     PR1005
.         CLEAR     PR1006
.
CPR19999  RETURN
+
.*****************************************************************************
.*                           CPTH0000              Called by: WPTH0000       *
.*                      Clear all the PTH variables                          *
.*****************************************************************************
.
CPTH0000  PACK      PTH002,SP100,SP100,SP100
.         MOVE      SP100,PTH001                * don't clear as set in WPTH0000
          MOVE      SP100,PTH003
          MOVE      SP100,PTH004
          MOVE      SP100,PTH005
.
.         CLEAR     PTH001
          CLEAR     PTH002
          CLEAR     PTH003
          CLEAR     PTH004
          CLEAR     PTH005
.
CPTH9999  RETURN
+
.*****************************************************************************
.*                           COBX0000              Called by: WOBX0000       *
.*                      Clear all the OBX variables                          *
.*****************************************************************************
.
COBX0000  MOVE      SP100,OBX001
          MOVE      SP100,OBX002
          PACK      OBX003,SP100,SP100,SP100
          MOVE      SP100,OBX004
          PACK      OBX005,SP100,SP100,SP100,SP100,SP100,SP100,SP100,SP100,SP100
          PACK      OBX006,SP100,SP100,SP100
          MOVE      SP100,OBX007
          MOVE      SP100,OBX008
          MOVE      SP100,OBX009
          MOVE      SP100,OBX010
          MOVE      SP100,OBX011
.
          CLEAR     OBX001
          CLEAR     OBX002
          CLEAR     OBX003
          CLEAR     OBX004
          CLEAR     OBX005
          CLEAR     OBX006
          CLEAR     OBX007
          CLEAR     OBX008
          CLEAR     OBX009
          CLEAR     OBX010
          CLEAR     OBX011
.
COBX9999  RETURN
+
.*****************************************************************************
.*                           CRF10000              Called by: WRF10000       *
.*                      Clear all the RF1 variables                          *
.*****************************************************************************
.
CRF10000  PACK      RF1001,SP100,SP100,SP100
          PACK      RF1002,SP100,SP100,SP100
          PACK      RF1003,SP100,SP100,SP100
          PACK      RF1004,SP100,SP100,SP100
          PACK      RF1005,SP100,SP100,SP100
          MOVE      SP100,RF1006
          MOVE      SP100,RF1007
          MOVE      SP100,RF1008
          MOVE      SP100,RF1009
          PACK      RF1010,SP100,SP100,SP100
          MOVE      SP100,RF1011
.
          CLEAR     RF1001
          CLEAR     RF1002
          CLEAR     RF1003
          CLEAR     RF1004
          CLEAR     RF1005
          CLEAR     RF1006
          CLEAR     RF1007
          CLEAR     RF1008
          CLEAR     RF1009
          CLEAR     RF1010
          CLEAR     RF1011
.
CRF19999  RETURN
+
.*****************************************************************************
.*                           CPRD0000              Called by: WPRD0000       *
.*                      Clear all the PRD variables                          *
.*****************************************************************************
.
CPRD0000  PACK      PRD001,SP100,SP100,SP100
          PACK      PRD002,SP100,SP100,SP100
          PACK      PRD003,SP100,SP100,SP100
          MOVE      SP100,PRD004
.
          CLEAR     PRD001
          CLEAR     PRD002
          CLEAR     PRD003
          CLEAR     PRD004
.
CPRD9999  RETURN
+
.*****************************************************************************
.*                           MVFL0000              Called by: PROC0000       *
.*               Rename & move the extract file to the Outbound directory    *
.*****************************************************************************
.
MVFL0000  MOVE      "mv ",CMDLINE
          ENDSET    CMDLINE
          APPEND    FILENAME,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    ALCNSACO,CMDLINE
          APPEND    FHS009,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          MATCH     "0       ",TASKID
          IF        !@EQUAL
            MATCH     "IBARSH",PGM
            IF        @EQUAL
              PRINT     *1,"Error moving extract file."
            ELSE
              DISPLAY   *P1:24,*EL,*B,"Error moving extract file.  ";
            ENDIF
            CALL      HITENTER
          ELSE
            DISPLAY   *P1:17,*EL,"Created extract file: ",*V2LON,FHS009;
            IF        PARTLFLG = 1
              DISPLAY   *P1:19,*EL,*V2LON,"Partial extract for date range";
            ENDIF
          ENDIF
.
MVFL9999  RETURN
+
.*****************************************************************************
.*                              CKUR0000               Called by: PROC0000   *
.*          Check the VINAH history file to see if this patient has          *
.*          previously been registered via VINAH.  If so, send an A08,       *
.*          otherwise, send an A04.                                          *
.*          This is only called in validation phase.                         *
.* Requires: MISCURNO - U/R being processed                                  *
.* Returns:  EXIT  0 = Ok to continue                                        *
.*                 1 = Fatal error                                           *
.*****************************************************************************
.
CKUR0000  MOVE      MISCURNO,TEMPURNO
.
.         First, check if a message for this U/R has previously been accepted
.
CKUR0500  PACK      KEY42,TEMPURNO,TEN,SP30,SP20
          CALL      RSALHDT3                     * position on U/R number
          CALL      RKALHDT3                     * read next record
          BRANCH    OVRCD,CKUR5000               * eof - send register
.
          MATCH     TEMPURNO,ALHDURNO            * same U/R still ?
          GOTO      CKUR5000 IF NOT EQUAL        * no - send register
.
          MATCH     "10",ALHDSTAT                * same status still ?
          GOTO      CKUR5000 IF NOT EQUAL        * no - send register
.
.         A message has previously been accepted by DHS for this U/R number,
.         so we only need to send a PMI update (A08)
.
          MOVE      "ADT-A08",MISCMTYP
          PACK      MISCDTTM,STRTDATE,ZERO6
          CALL      WA080000                     * send update
          GOTO      CKUR6000
.
.         There have not been any messages previously accepted by DHS for
.         this U/R number, so we need to send an ADT-A04 message.
.
CKUR5000  MOVE      "ADT-A04",MISCMTYP
          PACK      MISCDTTM,STRTDATE,ZERO6
          CALL      WA040000                     * send register
.
.         Write an A04/A08 record to the temp A table.  The bulk of the
.         fields will default to the value of the current record
.
CKUR6000  IF        ERORFLAG = 1
            MOVE      ONE,MISCSTAT
          ELSE
            MOVE      ZERO,MISCSTAT
          ENDIF
          MOVE      ONE,MISCSRCE
          MOVE      FOUR,MISCRTYP
          MOVE      ANSA,MISCACTN
          MOVE      ZERO,MISCPRGM
.
          CALL      WRTEMP1                      * write new record
.
.         We have sent an A04 or A08 message, so now we need to check
.         if we need to send a merge message (based on the old U/R field
.         being populated)
.
          MATCH     "       0",PATNOURN          * merge required ?
          GOTO      CKUR9000 IF EQUAL            * no - finished
.
.         We need to send a merge message to merge an old U/R to this U/R.
.         If we have sent an A04, then DHS need to get this first, before
.         a merge message, otherwise they will reject the A40 as an unknown
.         patient.  As such, add 1 second to the time from the PMI message.
.
          MOVE      "ADT-A40",MISCMTYP
          PACK      MISCDTTM,STRTDATE,ZERO51
          CALL      WA400000                     * send merge
.
.         Write an A40 record to the temp A table.  The bulk of the
.         fields will default to the value of the current record
.
          IF        ERORFLAG = 1
            MOVE      ONE,MISCSTAT
          ELSE
            MOVE      ZERO,MISCSTAT
          ENDIF
          MOVE      ONE,MISCSRCE
          MOVE      THREE,MISCRTYP
          MOVE      ANSA,MISCACTN
          MOVE      ZERO,MISCPRGM
.
          CALL      WRTEMP1                      * write new record
.
.         Reposition back on to the original record we were processing
.
CKUR9000  MOVE      SAVKEY42,KEY42
          CALL      RDTEMP1                      * reposition on index 1
          IF        OVRCD = 1
            UNPACK    SAVKEY42,DIM10,DIM14
            CALL      FDTM0000
            MOVE      "GEN.20   ",PRINEROR
            MOVE      "Unable to re-position on temp file record",PRINDESC
            CALL      PERR0000                   * print error message
            GOTO      CKUR9100
          ENDIF
.
          MOVE      ONE,PMIFLAG                  * set flag for sent A04/A08
          MOVE      ZERO,EXIT
          GOTO      CKUR9999
.
CKUR9100  MOVE      ONE,EXIT
.
CKUR9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      TFILENAM                     * get new tempfile A name
          MOVE      TFILNAME,TEMPFILA
.
          CALL      TFILENAM                     * get new tempfile B name
          MOVE      TFILNAME,TEMPFILB
.
          CALL      TFILENAM                     * get new tempfile C name
          MOVE      TFILNAME,TEMPFILC
.
          CALL      KILL0000                     * remove existing file
.
          PACK      CMDLINE,ISBUILD,TEMPFILA,UKEYA
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      VINTEMP1,TEMPFILA            * open temp index files
          OPEN      VINTEMP2,TEMPFILA
          OPEN      VINTEMP3,TEMPFILA
.
          PACK      CMDLINE,ISBUILD,TEMPFILB,UKEYB
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      VINTEMP4,TEMPFILB            * open temp index files
          OPEN      VINTEMP5,TEMPFILB
.
          PACK      CMDLINE,ISBUILD,TEMPFILC,UKEYC
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      VINTEMP6,TEMPFILC            * open temp index files
          OPEN      VINTEMP7,TEMPFILC
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               close and erase the temporary file               CREA0000  *
.****************************************************************************
.
KILL0000  CLOSE     VINTEMP1                     * close files
          CLOSE     VINTEMP2
          CLOSE     VINTEMP3
          CLOSE     VINTEMP4
          CLOSE     VINTEMP5
          CLOSE     VINTEMP6
          CLOSE     VINTEMP7
.
          PACK      CMDLINE,ERASE,TEMPFILA       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
          PACK      CMDLINE,ERASE,TEMPFILB       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
          PACK      CMDLINE,ERASE,TEMPFILC       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.*****************************************************************************
.*                               CLER0000          Called by: MAIN0000       *
.*            Clear all records from the temporary tables                    *
.*****************************************************************************
.
.         Clear temporary file A
.
CLER0000  PACK      KEY42,SP30,SP20
          CALL      RSTEMP1                      * position at start of table
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLER5000               * eof - finished
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      DETEMP1                      * delete record
          GOTO      CLER0000                     * get next record
.
.         Clear temporary file B
.
CLER5000  MOVE      SP20,KEY16
          CALL      RSTEMP4                      * position at start of table
          CALL      RKTEMP4                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          PACK      KEY16,PATNOURN,PATNNURN
          CALL      DETEMP4                      * delete record
          GOTO      CLER5000                     * get next record
.
CLER9999  RETURN
+
.****************************************************************************
.*                            CLRC0000                 Called by: WPRD0000  *
.*                    Clear temporary file C                                *
.****************************************************************************
.
CLRC0000  MOVE      SP10,KEY8
          CALL      RSTEMP6                      * position at start of table
          CALL      RKTEMP6                      * read next record
          BRANCH    OVRCD,CLRC9999               * eof - finished
.
          MOVE      PATNOURN,KEY8
          CALL      DETEMP6                      * delete record
          GOTO      CLRC0000                     * get next record
.
CLRC9999  RETURN
+
.****************************************************************************
.*                            WARN0000                 Called by: WPRD0000  *
.*               Print warning for current record                           *
.****************************************************************************
.
WARN0000  COMPARE   CLNO,FIFTY5                  * page full ?
          CALL      HEAD0000 IF LESS             * yes - new page
.
          IF        MESSNUMB <> 0
            LOAD      DIM15,MESSNUMB,MESTYP01,MESTYP02,MESTYP03,MESTYP04:
                                     MESTYP05,MESTYP06,MESTYP07,MESTYP08:
                                     MESTYP09,MESTYP10,MESTYP11,MESTYP12:
                                     MESTYP13,MESTYP14,MESTYP15
            UNPACK    DIM15,ANS,ANS,ANS,ANS,DIM3
            PACK      DIM4,DIM3,SLASH
          ELSE
            MOVE      SP4,DIM4
          ENDIF
.
          PRINT     *1,PIPE,*3,PRINURNO,*12,PIPE,*14,PRINVISN:
                    *23,PIPE,*25,PRINENCT,*34,PIPE,*36,PRINDTTM:
                    *56,PIPE,*58,DIM4,PRINEROR,*73,PIPE,*75,PRINDESC,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
WARN9999  RETURN
+
.****************************************************************************
.*                            PERR0000                 Called by: VARIOUS   *
.*               Print error for current record                             *
.****************************************************************************
.
PERR0000  COMPARE   CLNO,FIFTY5                  * page full ?
          CALL      HEAD0000 IF LESS             * yes - new page
.
          IF        MESSNUMB <> 0
            LOAD      DIM15,MESSNUMB,MESTYP01,MESTYP02,MESTYP03,MESTYP04:
                                     MESTYP05,MESTYP06,MESTYP07,MESTYP08:
                                     MESTYP09,MESTYP10,MESTYP11,MESTYP12:
                                     MESTYP13,MESTYP14,MESTYP15
          ELSE
            PACK      DIM15,SAVEMTYP,SP20        * for mesg validation routines
          ENDIF
          UNPACK    DIM15,ANS,ANS,ANS,ANS,DIM3
          PACK      DIM4,DIM3,SLASH
.
          PRINT     *1,PIPE,*3,PRINURNO,*12,PIPE,*14,PRINVISN:
                    *23,PIPE,*25,PRINENCT,*34,PIPE,*36,PRINDTTM:
                    *56,PIPE,*58,DIM4,PRINEROR,*73,PIPE,*75,PRINDESC,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
          ADD       ONE,ERRORCNT                 * increment error count
          DISPLAY   *P27:22,*EL,*V2LON,ERRORCNT
          MOVE      ONE,ERORFLAG                 * set error flag
.
          CALL      WERR0000                     * write error record
.
PERR9999  RETURN
+
.*****************************************************************************
.*                         WERR0000                Called by: PERR0000       *
.*    Write a record to the VINAH extract error details table (allsedaf)     *
.*****************************************************************************
.
WERR0000  MOVE      PRINURNO,ALSEURNO            * load U/R #
          MOVE      PRINVISN,ALSEVISN            * load visit #
          MOVE      PRINENCT,ALSEENCT            * load contact #
.
          UNPACK    PRINDTTM,DIM2A,ANS,DIM2B,ANS,DIM2C,DIM2D,ANS,DIM2E,ANS:
                             DIM2F,ANS,DIM2G
          PACK      ALSEDTTM,DIM2C,DIM2D,DIM2B,DIM2A,DIM2E,DIM2F,DIM2G
.
          UNPACK    DIM15,DIM3A,ANS,DIM3B
          PACK      ALSEMTYP,DIM3A,HYPHEN,DIM3B  * load HL7 message type
.
          MOVE      PRINEROR,ALSEERID            * load error id
          MOVE      PRINDESC,ALSEDESC            * load error description
          MOVE      ZERO,ALSEECNT                * initialise counter
          MOVE      SP20,ALSESPAR                * load spare
.
WERR9000  ADD       ONE,ALSEECNT                 * increment counter
.
          PACK      KEY57,ALSEURNO,ALSEVISN,ALSEENCT,ALSEDTTM,ALSEMTYP,ALSEERID:
                          ALSEECNT
          CALL      RAALSED1
          IF        OVRCD = 1
            CALL      WRALSED1                   * write record
          ELSE
            GOTO      WERR9000
          ENDIF
.
WERR9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PROC0000  *
.*                       print page heading                       WARN0000  *
.*                                                                PERR0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          IF        VALDFLAG = 0
            UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PRINT     *40,"Extract Period from ",CPCDATE;
            UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PRINT     *71,"to ",CPCDATE,*N
          ELSE
            PRINT     *N
          ENDIF
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"U/R ##",*12,PIPE:
                    *14,"Visit ##",*23,PIPE,*25,"Enc. ##":
                    *34,PIPE,*36,"Trigger Date/Time":
                    *56,PIPE,*58,"Identifier",*73,PIPE,*75,"Description":
                    *132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      EIGHT,CLNO                   * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: PROC0000  *
.*                      draw line across page                     LTMP0000  *
.*                                                                HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.*****************************************************************************
.*                               VMES0000          Called by: PROC0000       *
.*         Perform validation checks, for all records that are waiting to    *
.*         be sent, based on the message type                                *
.* Returns:   EXIT  0 = Ok to continue                                       *
.*                  1 = Fatal error                                          *
.*****************************************************************************
.
VMES0000  COMPARE   ZERO,VALDFLAG                * validation phase ?
          GOTO      VMES9999 IF EQUAL            * no - finished
.
          DISPLAY   *P13:24,*EL,"VMES0000 - ";
.
          MOVE      ZERO,MESSNUMB
          MOVE      SP8,SAVEURNO                 * init. saved U/R
.
          PACK      KEY42,SP30,SP20
VMES0500  CALL      RSTEMP1                      * position at start of file
VMES1000  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,VMES9000               * eof - finished
.
          PACK      SAVKEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                             MISCRTYP,MISCACTN            * save temp file key
.
          DISPLAY   *P24:24,*EL,SAVKEY42;
.
          COMPARE   ZERO,MISCSTAT                * waiting status ?
          GOTO      VMES1000 IF NOT EQUAL        * no - ignore
.
          MATCH     SP8,SAVEURNO                 * saved U/R blank ?
          IF        !@EQUAL
            MATCH     MISCURNO,SAVEURNO          * same U/R still ?
            GOTO      VMES2000 IF EQUAL          * yes
          ENDIF
.
.         This is a new U/R, so reset the flag to indicate
.         that we need to load merged U/R's for this new patient if
.         we need to look for previous messages (LURC0000)
.
          MOVE      ZERO,URLDFLAG
.
.         Save the current record values
.
          MOVE      MISCURNO,SAVEURNO            * save current U/R
VMES2000  MOVE      MISCVISN,SAVEVISN            * save current visit
          MOVE      MISCCONT,SAVECONT            * save current contact
          MOVE      MISCDTTM,SAVEDTTM            * save trigger date/time
          MOVE      REFILINK,SAVELINK            * save linked referral
          MOVE      MISCRTYP,SAVERTYP            * save record type
          MOVE      MISCACTN,SAVEACTN            * save action
          MOVE      MISCPRGM,SAVEPRGM            * save program type
          MOVE      MISCMTYP,SAVEMTYP            * save message type
          MOVE      SP20,SAVEBNUM                * clear saved batch number
          MOVE      REFIOUTC,SAVEOUTC            * save outcome
.
.         Check if we are using event program to exclude episodes/contacts
.         and if so, whether this record needs to be excluded.
.         If the record is not being excluded, then process as normal.
.         If the record is being excluded, then update the status to
.         "2" (Ignore non-VINAH record) and no further processing of the
.         record is required.
.         If an error occurred and we can't determine if the record is to
.         be excluded or not, then update the status to "1" and don't
.         process any further.
.
          CALL      CKEP0000                     * exclude based on event pgm ?
          BRANCH    EXIT,VMES5000                * no
          IF        EXIT = 0
            MOVE      TWO,MISCSTAT               * update to ignore (exclude)
          ELSE
            MOVE      ONE,MISCSTAT               * update to error
          ENDIF
.
          CALL      UPTEMP1                      * update record status
          MOVE      SAVKEY42,KEY42               * reposition for key
          GOTO      VMES0500
.
VMES5000  MATCH     RRII12,MISCMTYP              * add referral-in ?
          IF        @EQUAL
            CALL      VI120000                   * yes - validate RRI-I12
            BRANCH    EXIT,VMES9100              * fatal error
            GOTO      VMES1000                   * get next record
          ENDIF
.
          MATCH     RRII13,MISCMTYP              * update referral-in ?
          IF        @EQUAL
            CALL      VI130000                   * yes - validate RRI-I13
            BRANCH    EXIT,VMES9100              * fatal error
            GOTO      VMES1000                   * get next record
          ENDIF
.
          MATCH     RRII14,MISCMTYP              * delete referral-in ?
          IF        @EQUAL
            CALL      VI140000                   * yes - validate RRI-I14
            BRANCH    EXIT,VMES9100              * fatal error
            GOTO      VMES1000                   * get next record
          ENDIF
.
          MATCH     PPPPCB,MISCMTYP              * add episode ?
          IF        @EQUAL
            CALL      VPCB0000                   * yes - validate PCB
            BRANCH    EXIT,VMES9100              * fatal error
            GOTO      VMES1000                   * get next record
          ENDIF
.
          MATCH     PPPPCC,MISCMTYP              * update/complete episode ?
          IF        @EQUAL
            CALL      VPCC0000                   * yes - validate PCC
            BRANCH    EXIT,VMES9100              * fatal error
.
.           No need to send REF messages for Palliative Care
.
            COMPARE   FOUR,MISCPRGM              * palliative care ?
            GOTO      VMES1000 IF EQUAL          * yes get next record
.
.           Check to see if it's the last PCC message waiting to be sent
.           for the visit.  If it is, then we need to delete/create any
.           related REF messages.
.
            MOVE      "PPP-PCC",MESSCODE
            CALL      SPCC0000                   * last PCC for visit ?
            BRANCH    EXIT,VMES1000:             * no - get next record
                           VMES9100              * fatal error
.
.           Get the episode start date before we position on this record
.           (as it is required for RDST0000)
.
            CALL      GSDT0000                   * get episode start date
.
            CALL      PREF0000                   * process related REF messages
            BRANCH    EXIT,VMES9100              * fatal error
            GOTO      VMES1000                   * get next record
          ENDIF
.
          MATCH     PPPPCD,MISCMTYP              * delete episode ?
          IF        @EQUAL
            CALL      VPCD0000                   * yes - validate PCD
            BRANCH    EXIT,VMES9100              * fatal error
            GOTO      VMES1000                   * get next record
          ENDIF
.
          MATCH     ADTA03,MISCMTYP              * add contact ?
          IF        @EQUAL
            CALL      VA030000                   * yes - validate A03
            BRANCH    EXIT,VMES9100              * fatal error
            GOTO      VMES1000                   * get next record
          ENDIF
.
          MATCH     ADTA13,MISCMTYP              * delete contact ?
          IF        @EQUAL
            CALL      VA130000                   * yes - validate A13
            BRANCH    EXIT,VMES9100              * fatal error
            GOTO      VMES1000                   * get next record
          ENDIF
.
.         The following messages need no validation
.
          MATCH     REFI12,MISCMTYP              * add referral destination ?
          GOTO      VMES1000 IF EQUAL            * yes
.
          MATCH     REFI14,MISCMTYP              * cancel referral destination ?
          GOTO      VMES1000 IF EQUAL            * yes
.
          MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "GEN.21   ",PRINEROR
          MOVE      "Invalid Message type found",PRINDESC
          CALL      PERR0000                   * print error message
          GOTO      VMES9100
.
VMES9000  MOVE      ZERO,EXIT
          GOTO      VMES9999
.
VMES9100  MOVE      ONE,EXIT
.
VMES9999  RETURN
+
.*****************************************************************************
.*                             VI120000            Called by: VMES0000       *
.*                Validate the RRI-I12 (add) message.                        *
.* Requires: SAVEURNO - saved U/R for current message being processed        *
.*           SAVEVISN - saved visit # for current message being processed    *
.*           SAVECONT - saved contact # for current message being processed  *
.*           SAVEDTTM - saved date/time for current message being processed  *
.*           SAVERTYP - saved record type for current message being processed*
.*           SAVEACTN - saved action type for current message being processed*
.*           SAVEMTYP - save message type                                    *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = fatal error occurred                                  *
.*****************************************************************************
.
.         Check if the previous RRI message was valid for this message.
.
VI120000  MOVE      SAVEURNO,TEMPURNO            * load variables for curr. key
          MOVE      SAVEVISN,TEMPVISN
          MOVE      SP8,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      RRII12,MESSCODE
          MOVE      SAVERTYP,TEMPRTYP
          MOVE      SAVEACTN,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous RRI found ?
          BRANCH    EXIT,VI129000                * no - valid
.
          MATCH     "RRI-I14",MESSMTYP           * previous RRI a delete ?
          GOTO      VI129000 IF EQUAL            * yes - valid
.
          MATCH     "RRI-I13",MESSMTYP           * previous RRI a change ?
          GOTO      VI125000 IF EQUAL            * yes - not valid
.
.         The previous RRI message must have been an RRI-I12 (create),
.         so we need to reset the status of this record to "Ignore".
.         This is due to the fact that a Referral In record may be created
.         after the episode, which will result in the extract program creating
.         an RRI-I12 record prior to the episode, as well as the RRI-I12
.         record after the episode was created.  This would be rejected by DHS,
.         so the latter record needs to be ignored.
.
.         Reposition on the original RRI-I12 record we were processing.
.
          MOVE      "VI12.2   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VI129100                * error repositioning
.
          MOVE      THREE,MISCSTAT               * set status "Ignore-not req'd"
          CALL      UPTEMP1
.
          MOVE      SAVKEY42,KEY42               * reposition after key change
          CALL      RSTEMP1
          GOTO      VI129000
.
.         Previous RRI message must have been an RRI-I13 (change),
.         so check if that message was for an outcome of
.         rejected or cancelled.  If it was, then create a new RRI^I14
.         to be sent before this RRI^I12, otherwise, the current message
.         we are processing is not valid.
.
VI125000  IF        !(PREVSTAT = 4 | PREVSTAT = 5)
            GOTO      VI126000
          ENDIF
.
.         The RRI^I12 was valid given that the previous RRI^I13 was
.         a cancellation or rejection, so we just need to send an RRI^I14
.         before the RRI^I12.  First, re-position back on the RRI^I12 we
.         are processing.
.
          MOVE      "VI12.2   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VI129100                * error repositioning
.
.         Load data fields
.
          PACK      MISCDTTM,STRTDATE,ZERO52
          MOVE      ANSD,MISCACTN
          MOVE      "RRI-I14",MISCMTYP
          MOVE      ONE,MISCSRCE
.
.         Check if the referral receipt acknowledgement date is populated
.         and if not, then use default values according to logic rules
.
          MATCH     SP8,REFIRADT
          IF        @EQUAL
.
.           First get the date referral accepted from the first linked episode
.
            MOVE      MISCVISN,VISITNUM          * load referral in visit no.
            MOVE      MISCPRGM,PRGMSTRM          * load program stream
            MOVE      REFICLUC,CURGENCY          * load priority
            CALL      FRSTLINK
            MOVE      CURGENCY,REFICLUC          * load priority
.
.           Now use the relevant logic to default populate the field
.
            CALL      DEFRACKN
            MOVE      ACKNDATE,REFIRADT          * load referral ack. date
          ENDIF
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 0
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VI12.2   ",PRINEROR
            MOVE      "Referral In record already exists",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VI129100
            CALL      UERR0000                   * update error status
            GOTO      VI129000
          ENDIF
.
          CALL      WRTEMP1                      * write new record
.
.         Reposition on the original RRI-I12 record we were processing
.
          MOVE      "VI12.3   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VI129100                * error repositioning
.
          GOTO      VI129000
.
.         Invalid previous message
.
VI126000  MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VI12.1   ",PRINEROR
          MOVE      "Referral In I12 out of sequence",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VI129100
          CALL      UERR0000                     * update error status
.
VI129000  MOVE      ZERO,EXIT
          GOTO      VI129999
.
VI129100  MOVE      ONE,EXIT
.
VI129999  RETURN
.
.*****************************************************************************
.*                             VI130000            Called by: VMES0000       *
.*              Validate an RRI-I13 (change) message.                        *
.* Requires: SAVEURNO - saved U/R for current message being processed        *
.*           SAVEVISN - saved visit # for current message being processed    *
.*           SAVECONT - saved contact # for current message being processed  *
.*           SAVEDTTM - saved date/time for current message being processed  *
.*           SAVERTYP - saved record type for current message being processed*
.*           SAVEACTN - saved action type for current message being processed*
.*           SAVEMTYP - save message type                                    *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = fatal error occurred                                  *
.*****************************************************************************
.
.         Check if the previous RRI message was valid for this message.
.
VI130000  MOVE      SAVEURNO,TEMPURNO            * load variables for curr. key
          MOVE      SAVEVISN,TEMPVISN
          MOVE      SAVECONT,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      RRII13,MESSCODE
          MOVE      SAVERTYP,TEMPRTYP
          MOVE      SAVEACTN,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous RRI found ?
          BRANCH    EXIT,VI131000                * no - create RRI-I12
.
.         If the previous RRI message was valid, then we need to check
.         if the current message is to cancel or reject the Referral In
.         and if so, send a PCD to delete any previously accepted linked
.         episodes
.
          MATCH     "RRI-I12",MESSMTYP           * previous RRI a create ?
          IF        @EQUAL
.           CALL      CLNK0000                   * yes - check linked episodes
            GOTO      VI139000
          ENDIF
.
          MATCH     "RRI-I13",MESSMTYP           * previous RRI a change ?
          IF        @EQUAL
.           CALL      CLNK0000                   * yes - check linked episodes
            GOTO      VI139000
          ENDIF
.
.         Previous RRI message must have been an RRI-I14 (delete), so
.         the current message we are processing is not valid.
.
          MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VI13.1   ",PRINEROR
          MOVE      "Referral In I13 out of sequence",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VI139100
          CALL      UERR0000                     * update error status
          GOTO      VI139000
.
.         There has been no previous RRI message so we need to
.         create an RRI-I12 message for the referral-in based on the current
.         RRI-I13 record we are processing, so reposition on the RRI-I13
.         message.
.
VI131000  MOVE      "VI13.2   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VI139100                * error repositioning
.
.         Load data fields
.
          PACK      MISCDTTM,STRTDATE,ZERO53
          MOVE      ANSA,MISCACTN
          MOVE      "RRI-I12",MISCMTYP
          MOVE      ONE,MISCSRCE
.
.         Check if the referral receipt acknowledgement date is populated
.         and if not, then use default values according to logic rules
.
          MATCH     SP8,REFIRADT
          IF        @EQUAL
.
.           First get the date referral accepted from the first linked episode
.
            MOVE      MISCVISN,VISITNUM          * load referral in visit no.
            MOVE      MISCPRGM,PRGMSTRM          * load program stream
            MOVE      REFICLUC,CURGENCY          * load priority
            CALL      FRSTLINK
            MOVE      CURGENCY,REFICLUC          * load priority
.
.           Now use the relevant logic to default populate the field
.
            CALL      DEFRACKN
            MOVE      ACKNDATE,REFIRADT          * load referral ack. date
          ENDIF
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 0
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VI13.3   ",PRINEROR
            MOVE      "Referral In record already exists",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VI139100
            CALL      UERR0000                   * update error status
            GOTO      VI139000
          ENDIF
.
          CALL      WRTEMP1                      * write new record
.
.         Reposition on the original RRI-I13 record we were processing
.
          MOVE      "VI13.4   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VI139100                * error repositioning
.
VI139000  MOVE      ZERO,EXIT
          GOTO      VI139999
.
VI139100  MOVE      ONE,EXIT
.
VI139999  RETURN
+
.*****************************************************************************
.*                             VI140000            Called by: VMES0000       *
.*              Validate an RRI-I14 (delete) message.                        *
.* Requires: SAVEURNO - saved U/R for current message being processed        *
.*           SAVEVISN - saved visit # for current message being processed    *
.*           SAVECONT - saved contact # for current message being processed  *
.*           SAVEDTTM - saved date/time for current message being processed  *
.*           SAVERTYP - saved record type for current message being processed*
.*           SAVEACTN - saved action type for current message being processed*
.*           SAVEMTYP - save message type                                    *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = fatal error occurred                                  *
.*****************************************************************************
.
.         Check if the previous RRI message was valid for this message.
.
VI140000  MOVE      SAVEURNO,TEMPURNO
          MOVE      SAVEVISN,TEMPVISN
          MOVE      SAVECONT,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      RRII14,MESSCODE
          MOVE      SAVERTYP,TEMPRTYP
          MOVE      SAVEACTN,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous RRI found ?
          BRANCH    EXIT,VI142000                * no - update to ignore
.
          MATCH     "RRI-I12",MESSMTYP           * previous RRI a create ?
          GOTO      VI149000 IF EQUAL            * yes - valid
.
          MATCH     "RRI-I13",MESSMTYP           * previous RRI a change ?
          GOTO      VI149000 IF EQUAL            * yes - valid
.
.         Previous RRI message must have been an RRI-I14 (delete), so 
.         the current message we are processing is not valid.
.
VI141000  MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VI14.1   ",PRINEROR
          MOVE      "Referral In I14 out of sequence",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VI149100
          CALL      UERR0000                     * update error status
          GOTO      VI149000
.
.         Reposition on the original RRI-I14 record we were processing
.
VI142000  MOVE      "VI14.2   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VPCB9100                * error repositioning
.
          MOVE      THREE,MISCSTAT               * set status "Ignore-not req'd"
          CALL      UPTEMP1
.
          MOVE      SAVKEY42,KEY42               * reposition after key change
          CALL      RSTEMP1
.
VI149000  MOVE      ZERO,EXIT
          GOTO      VI149999
.
VI149100  MOVE      ONE,EXIT
.
VI149999  RETURN
+
.*****************************************************************************
.*                             VPCB0000            Called by: VMES0000       *
.*                 Validate a PPP-PCB (add) message.                         *
.* Requires: SAVEURNO - saved U/R for current message being processed        *
.*           SAVEVISN - saved visit # for current message being processed    *
.*           SAVECONT - saved contact # for current message being processed  *
.*           SAVEDTTM - saved date/time for current message being processed  *
.*           SAVERTYP - saved record type for current message being processed*
.*           SAVEACTN - saved action type for current message being processed*
.*           SAVEMTYP - save message type                                    *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = fatal error occurred                                  *
.*****************************************************************************
.
.         Check if the previous RRI message was valid for this message.
.
VPCB0000  MATCH     SP8,SAVELINK                 * linked referral blank ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCB.1   ",PRINEROR
            MOVE      "Referral In visit number blank",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCB9100
            CALL      UERR0000                   * update error status
            GOTO      VPCB9000
          ENDIF
.
          MOVE      SAVEURNO,TEMPURNO
          MOVE      SAVELINK,TEMPVISN
          MOVE      SP8,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      RRII14,MESSCODE
          MOVE      ZERO,TEMPRTYP
          MOVE      ANSZ,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous RRI found ?
          BRANCH    EXIT,VPCB5000                * no - valid
.
          MATCH     "RRI-I12",MESSMTYP           * previous RRI a create ?
          GOTO      VPCB9000 IF EQUAL            * yes - valid
.
          MATCH     "RRI-I13",MESSMTYP           * previous RRI a change ?
          GOTO      VPCB9000 IF EQUAL            * yes - valid
.
.         Previous RRI message must have been a RRI-I14 (delete), so the
.         current message we are processing is not valid.
.
          MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VPCB.2   ",PRINEROR
          MOVE      "Episode PCB out of sequence",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VPCB9100
          CALL      UERR0000                     * update error status
          GOTO      VPCB9000
.
.         There was no previous RRI-I12 message, so we need to create
.         an RRI-I12 message based on the current linked referral-in
.         record for the PPP-PCB we are processing
.
VPCB5000  MOVE      SAVELINK,KEY8
          CALL      RDALREF1                     * referral-in record found ?
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCB.3   ",PRINEROR
            MOVE      "Current Referral In record not found",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCB9100
            CALL      UERR0000                   * update error status
            GOTO      VPCB9000
          ENDIF
.
.         Load data fields
.
          MOVE      SAVEURNO,MISCURNO            * load default U/R
.
          MATCH     ALREURNO,SAVEURNO            * U/R same as Referral In ?
          GOTO      VPCB6000 IF EQUAL            * yes
.
          MOVE      SAVEDTTM,DIM14               * no - error
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VPCB.10  ",PRINEROR
          MOVE      "Linked Referral In U/R doesnt match.",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VPCB9100
          CALL      UERR0000                     * update error status
          GOTO      VPCB9000
.
VPCB6000  PACK      MISCDTTM,STRTDATE,ZERO53
          MOVE      ALREVISN,MISCVISN
          MOVE      SP8,MISCCONT
          MOVE      ZERO,MISCRTYP
          MOVE      ANSA,MISCACTN
          MOVE      ONE,MISCVFLG
          MOVE      "RRI-I12",MISCMTYP
          MOVE      ZERO,MISCSTAT
          MOVE      ONE,MISCSRCE
          MOVE      ALREDEPT,MISCDEPT
.
.         We need to validate that the referral-in is for a valid VINAH
.         program using the department
.
          MATCH     SP3,MISCDEPT                 * blank department ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCB.4   ",PRINEROR
            MOVE      "Referral In department is blank",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCB9100
            CALL      UERR0000                   * update error status
            GOTO      VPCB9000
          ENDIF
.
          PACK      KEY5,ANSC,ANSG,MISCDEPT
          CALL      RDCODE1                      * department code on file ?
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCB.5   ",PRINEROR
            MOVE      "Referral In department (Cat CG) code not found",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCB9100
            CALL      UERR0000                   * update error status
            GOTO      VPCB9000
          ENDIF
.
          MOVE      TCINDC8,ANS
          TYPE      ANS                          * indicator 8 numeric ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCB.6   ",PRINEROR
            MOVE      "Referral In department (Cat CG) indicator not valid",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCB9100
            CALL      UERR0000                   * update error status
            GOTO      VPCB9000
          ENDIF
.
          MOVE      ZERO,FORM1
          REP       "A5H2S7O8M3P4R6T9I1",ANS
          MOVE      ANS,FORM1
          COMPARE   ZERO,FORM1                   * VINAH program type ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCB.7   ",PRINEROR
            MOVE      "Referral In department (Cat CG) not VINAH related",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCB9100
            CALL      UERR0000                   * update error status
            GOTO      VPCB9000
          ENDIF
.
          MOVE      FORM1,MISCPRGM               * load program type
          MOVE      SP10,MISCWEBU
.
          MOVE      ALREUC35,PATNCRST 
          MOVE      ALREUC36,PATNCAVL 
          MOVE      ALREUC38,PATNLARR 
          MOVE      ALREUC39,PATNUACC 
          MOVE      ALREUC31,PATNMREL 
          MOVE      ALREUC10,PATNDTHP 
.
          MOVE      ALREDREC,REFIRDAT
          MOVE      ALRESREJ,REFIOTRR
          MOVE      ALRERCAN,REFIOTRC
          MOVE      ALRESTAT,REFIOUTC
          MOVE      ALREPRTY,REFICLUC
          MOVE      ALREUDT3,REFICRDT
          MOVE      ALREUDT5,REFIRADT
          MOVE      SP8,REFILINK
          MOVE      ALRETRGS,REFITRGS
.
          MOVE      SP8,EPISTRGD
          MOVE      SP8,EPISSDAT
          MOVE      SP8,EPISEDAT
          MOVE      SP1,EPISFCFL
          MOVE      SP3,EPISCPPT
          MOVE      SP8,EPISIODT
          MOVE      SP8,EPISACDD
          MOVE      SP8,EPISCPDD
          MOVE      SP8,EPISFABD
          MOVE      SP8,EPISHDDT
          MOVE      SP8,EPISFNAD
          MOVE      SP3,EPISENDR
          MOVE      SP1,EPISMFLG
          MOVE      SP6,EPISCTYP
          MOVE      SP6,EPISCLID
          MOVE      SP3,EPISEVPR
          MOVE      SP8,EPISDTAC
.                     
          MOVE      SP3,CONTCOMP
          MOVE      SP10,CONTPGRP
          MOVE      SP10,CONTPGR1
          MOVE      SP10,CONTPGR2
          MOVE      SP10,CONTPGR3
          MOVE      SP10,CONTPGR4
          MOVE      SP8,CONTDATE
          MOVE      SP8,CONTTIME
          MOVE      SP3,CONTPURP
          MOVE      SP3,CONTSTYP
          MOVE      SP3,CONTPRES
          MOVE      SP3,CONTDMOD
          MOVE      SP3,CONTDSET
          MOVE      SP3,CONTPOFC
          MOVE      SP3,CONTPDPL
          MOVE      SP3,CONTCMOD
          MOVE      SP8,CONTIFLG
          MOVE      SP10,CONTSPCP
          MOVE      SP3,CONTCSET
          MOVE      SP3,CONTEVPR
.
          MOVE      SP8,REFORODT
          MOVE      SP9,REFOSERT
          MOVE      SP9,REFOPLAC
          MOVE      SP3,REFORCNT
.
.         Check if the referral receipt acknowledgement date is populated
.         and if not, then use default values according to logic rules
.
          MATCH     SP8,REFIRADT
          IF        @EQUAL
.
.           First get the date referral accepted from the first linked episode
.
            MOVE      SAVELINK,VISITNUM          * load referral in visit no.
            MOVE      MISCPRGM,PRGMSTRM          * load program stream
            MOVE      REFICLUC,CURGENCY          * load priority
            CALL      FRSTLINK
            MOVE      CURGENCY,REFICLUC          * load priority
.
.           Now use the relevant logic to default populate the field
.
            CALL      DEFRACKN
            MOVE      ACKNDATE,REFIRADT          * load referral ack. date
          ENDIF
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 0
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCB.8   ",PRINEROR
            MOVE      "Referral In record already exists",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCB9100
            CALL      UERR0000                   * update error status
            GOTO      VPCB9000
          ENDIF
.
          CALL      WRTEMP1                      * write new record
.
.         Re-position back on the PPP-PCB we are currently processing
.
          MOVE      "VPCB.9   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VPCB9100                * error repositioning
.
VPCB9000  MOVE      ZERO,EXIT
          GOTO      VPCB9999
.
VPCB9100  MOVE      ONE,EXIT
.
VPCB9999  RETURN
+
.*****************************************************************************
.*                             VPCC0000            Called by: VMES0000       *
.*                 Validate a PPP-PCC (change) message.                      *
.* Requires: SAVEURNO - saved U/R for current message being processed        *
.*           SAVEVISN - saved visit # for current message being processed    *
.*           SAVECONT - saved contact # for current message being processed  *
.*           SAVEDTTM - saved date/time for current message being processed  *
.*           SAVERTYP - saved record type for current message being processed*
.*           SAVEACTN - saved action type for current message being processed*
.*           SAVEMTYP - save message type                                    *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = fatal error occurred                                  *
.*****************************************************************************
.
.         Check if the previous PPP message was valid for this message.
.
VPCC0000  MOVE      SAVEURNO,TEMPURNO
          MOVE      SAVEVISN,TEMPVISN
          MOVE      SAVECONT,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      PPPPCC,MESSCODE
          MOVE      SAVERTYP,TEMPRTYP
          MOVE      SAVEACTN,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous PPP found ?
          BRANCH    EXIT,VPCC5000                * no - valid
.
          MATCH     "PPP-PCB",MESSMTYP           * previous PPP an add ?
          GOTO      VPCC9000 IF EQUAL            * yes - valid
.
          MATCH     "PPP-PCC",MESSMTYP           * previous PPP a change ?
          GOTO      VPCC9000 IF EQUAL            * yes - valid
.
.         Previous PPP message must have been a PPP-PCD (delete) which
.         was then subsequently reactivated.  Given that a change (PPP-PCC)
.         cannot follow a delete (PPP-PCD), we need to send DoH an add record
.         (PPP-PCB) again before we send the change (PPP-PCC) record.
.         First re-read the current record we are processing.
.
          MOVE      "VPCC.9   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VPCC9100                * error repositioning
.
.         Now subtract one second from the time and create an add (PPP-PCB)
.         record
.
          CALL      SSEC0000
          MOVE      ANSA,MISCACTN
          MOVE      "PPP-PCB",MISCMTYP
          MOVE      ONE,MISCSRCE
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT,MISCRTYP:
                          MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 1
            CALL      WRTEMP1
            GOTO      VPCC8000
          ELSE
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCC.1   ",PRINEROR
            MOVE      "Unable to create PCB message",PRINDESC
            CALL      PERR0000                     * print error message
            GOTO      VPCC9100
          ENDIF
.
.         There was no previous PPP-PCB message, so check if there was
.         a previous RRI-I12 message (which may have been sent for a different
.         episode).
.
VPCC5000  MOVE      ZERO,SENTFLAG                * Initialise RRI sent flag
.
          MATCH     SP8,SAVELINK                 * linked referral blank ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCC.15  ",PRINEROR
            MOVE      "Referral In visit number blank",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCC9100
            CALL      UERR0000                   * update error status
            GOTO      VPCC9000
          ENDIF
.
          MOVE      SAVEURNO,TEMPURNO            * load variables for curr. key
          MOVE      SAVELINK,TEMPVISN
          MOVE      SP8,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      RRII14,MESSCODE
          MOVE      ZERO,TEMPRTYP
          MOVE      ANSZ,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous RRI found ?
          BRANCH    EXIT,VPCC5500                * no - valid
.
          MATCH     "RRI-I14",MESSMTYP           * previous RRI a delete ?
          GOTO      VPCC5500 IF EQUAL            * yes - valid
.
.         The previous RRI message must have been an RRI-I12 (create),
.         or an RRI^I13 (update) message, so we don't need to send an
.         RRI^I12, only a PPP^PCB message.
.
          MOVE      ONE,SENTFLAG                 * previous RRI found
.
.         First we need to create a PPP-PCB message based on the fields
.         in the PPP-PCC message we are currently processing, so reposition
.         on the record.
.
VPCC5500  MOVE      "VPCC.2   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VPCC9100                * error repositioning
.
.         Load data fields
.
          MOVE      ANSA,MISCACTN
          MOVE      "PPP-PCB",MISCMTYP
          MOVE      ONE,MISCSRCE
.
.         Check if the PCC status was "Cancelled" or "Rejected" and if
.         so, set the PCB status back to "Accepted" (Task: 0814100)
.
          MATCH     "4",REFIOUTC
          IF        !@EQUAL
            MATCH     "5",REFIOUTC
            GOTO      VPCC5600 IF NOT EQUAL
          ENDIF
          MOVE      ONE,REFIOUTC
.
VPCC5600  PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 0
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCC.3   ",PRINEROR
            MOVE      "Episode record already exists",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCC9100
            CALL      UERR0000                   * update error status
            GOTO      VPCC9000
          ENDIF
.
          CALL      WRTEMP1                      * write new record
.
.         Now we need to create an RRI-I12 message (if required),
.         based on the current linked referral-in record for the PPP-PCC
.         we are processing
.
          BRANCH    SENTFLAG,VPCC8000            * previously sent
.
          MOVE      SAVELINK,KEY8
          CALL      RDALREF1                     * referral-in record found ?
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCC.4   ",PRINEROR
            MOVE      "Current Referral In record not found",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCC9100
            CALL      UERR0000                   * update error status
            GOTO      VPCC9000
          ENDIF
.
.         Load data fields
.
          MOVE      SAVEURNO,MISCURNO            * load default U/R
.
          MATCH     ALREURNO,SAVEURNO            * U/R same as Referral In ?
          GOTO      VPCC6000 IF EQUAL            * yes
.
          MOVE      SAVEDTTM,DIM14               * no - error
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VPCC.14  ",PRINEROR
          MOVE      "Linked Referral In U/R doesnt match.",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VPCC9100
          CALL      UERR0000                     * update error status
          GOTO      VPCC9000
.
VPCC6000  PACK      MISCDTTM,STRTDATE,ZERO53
          MOVE      ALREVISN,MISCVISN
          MOVE      SP8,MISCCONT
          MOVE      ZERO,MISCRTYP
          MOVE      ANSA,MISCACTN
          MOVE      ONE,MISCVFLG
          MOVE      "RRI-I12",MISCMTYP
          MOVE      ZERO,MISCSTAT
          MOVE      ONE,MISCSRCE
          MOVE      ALREDEPT,MISCDEPT
.
.         We need to validate that the referral-in is for a valid VINAH
.         program using the department
.
          MATCH     SP3,MISCDEPT                 * blank department ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCC.5   ",PRINEROR
            MOVE      "Referral In department is blank",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCC9100
            CALL      UERR0000                   * update error status
            GOTO      VPCC9000
          ENDIF
.
          PACK      KEY5,ANSC,ANSG,MISCDEPT
          CALL      RDCODE1                      * department code on file ?
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCC.6   ",PRINEROR
            MOVE      "Referral In department (Cat CG) code not found",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCC9100
            CALL      UERR0000                   * update error status
            GOTO      VPCC9000
          ENDIF
.
          MOVE      TCINDC8,ANS
          TYPE      ANS                          * indicator 8 numeric ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCC.7   ",PRINEROR
            MOVE      "Referral In department (Cat CG) indicator not valid",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCC9100
            CALL      UERR0000                   * update error status
            GOTO      VPCC9000
          ENDIF
.
          MOVE      ZERO,FORM1
          REP       "A5H2S7O8M3P4R6T9I1",ANS
          MOVE      ANS,FORM1
          COMPARE   ZERO,FORM1                   * VINAH program type ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VPCC.8   ",PRINEROR
            MOVE      "Referral In department (Cat CG) not VINAH related",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VPCC9100
            CALL      UERR0000                   * update error status
            GOTO      VPCC9000
          ENDIF
.
          MOVE      FORM1,MISCPRGM               * load program type
          MOVE      SP10,MISCWEBU
.
          MOVE      ALREUC35,PATNCRST 
          MOVE      ALREUC36,PATNCAVL 
          MOVE      ALREUC38,PATNLARR 
          MOVE      ALREUC39,PATNUACC 
          MOVE      ALREUC31,PATNMREL 
          MOVE      ALREUC10,PATNDTHP 
.
          MOVE      ALREDREC,REFIRDAT
          MOVE      ALRESREJ,REFIOTRR
          MOVE      ALRERCAN,REFIOTRC
          MOVE      ALRESTAT,REFIOUTC
          MOVE      ALREPRTY,REFICLUC
          MOVE      ALREUDT3,REFICRDT
          MOVE      ALREUDT5,REFIRADT
          MOVE      SP8,REFILINK
          MOVE      ALRETRGS,REFITRGS
.
          MOVE      SP8,EPISTRGD
          MOVE      SP8,EPISSDAT
          MOVE      SP8,EPISEDAT
          MOVE      SP1,EPISFCFL
          MOVE      SP3,EPISCPPT
          MOVE      SP8,EPISIODT
          MOVE      SP8,EPISACDD
          MOVE      SP8,EPISCPDD
          MOVE      SP8,EPISFABD
          MOVE      SP8,EPISHDDT
          MOVE      SP8,EPISFNAD
          MOVE      SP3,EPISENDR
          MOVE      SP1,EPISMFLG
          MOVE      SP6,EPISCTYP
          MOVE      SP6,EPISCLID
          MOVE      SP3,EPISEVPR
          MOVE      SP8,EPISDTAC
.                     
          MOVE      SP3,CONTCOMP
          MOVE      SP10,CONTPGRP
          MOVE      SP10,CONTPGR1
          MOVE      SP10,CONTPGR2
          MOVE      SP10,CONTPGR3
          MOVE      SP10,CONTPGR4
          MOVE      SP8,CONTDATE
          MOVE      SP8,CONTTIME
          MOVE      SP3,CONTPURP
          MOVE      SP3,CONTSTYP
          MOVE      SP3,CONTPRES
          MOVE      SP3,CONTDMOD
          MOVE      SP3,CONTDSET
          MOVE      SP3,CONTPOFC
          MOVE      SP3,CONTPDPL
          MOVE      SP3,CONTCMOD
          MOVE      SP8,CONTIFLG
          MOVE      SP10,CONTSPCP
          MOVE      SP3,CONTCSET
          MOVE      SP3,CONTEVPR
.
          MOVE      SP8,REFORODT
          MOVE      SP9,REFOSERT
          MOVE      SP9,REFOPLAC
          MOVE      SP3,REFORCNT
.
.         Check if the referral receipt acknowledgement date is populated
.         and if not, then use default values according to logic rules
.
          MATCH     SP8,REFIRADT
          IF        @EQUAL
.
.           First get the date referral accepted from the first linked episode
.
            MOVE      SAVELINK,VISITNUM          * load referral in visit no.
            MOVE      MISCPRGM,PRGMSTRM          * load program stream
            MOVE      REFICLUC,CURGENCY          * load priority
            CALL      FRSTLINK
            MOVE      CURGENCY,REFICLUC          * load priority
.
.           Now use the relevant logic to default populate the field
.
            CALL      DEFRACKN
            MOVE      ACKNDATE,REFIRADT          * load referral ack. date
          ENDIF
.
.         CAR 282744 - A Referral In record can be associated with more
.         than one episode, so the Referral In record may have already been
.         created for a different episode,  Therefore, if the Referral In
.         already exists, then this is not an error, so proceed as normal,
.         otherwise write the Referral In record.
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 1
            CALL      WRTEMP1                    * write new RRI-I12 record
          ENDIF
.
.         Re-position back on the PPP-PCC we are currently processing
.
VPCC8000  MOVE      "VPCC.10  ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VPCC9100                * error repositioning
.
VPCC9000  MOVE      ZERO,EXIT
          GOTO      VPCC9999
.
VPCC9100  MOVE      ONE,EXIT
.
VPCC9999  RETURN
+
.*****************************************************************************
.*                 Validate a PPP-PCD (delete) message.                      *
.* Requires: SAVEURNO - saved U/R for current message being processed        *
.*           SAVEVISN - saved visit # for current message being processed    *
.*           SAVECONT - saved contact # for current message being processed  *
.*           SAVEDTTM - saved date/time for current message being processed  *
.*           SAVERTYP - saved record type for current message being processed*
.*           SAVEACTN - saved action type for current message being processed*
.*           SAVEMTYP - save message type                                    *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = fatal error occurred                                  *
.*****************************************************************************
.
.         Check if the previous PPP message was valid for this message.
.
VPCD0000  MOVE      SAVEURNO,TEMPURNO
          MOVE      SAVEVISN,TEMPVISN
          MOVE      SAVECONT,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      PPPPCD,MESSCODE
          MOVE      SAVERTYP,TEMPRTYP
          MOVE      SAVEACTN,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous PPP found ?
          BRANCH    EXIT,VPCD5000                * no - ignore record
.
          MATCH     "PPP-PCB",MESSMTYP           * previous PPP an add ?
          GOTO      VPCD9000 IF EQUAL            * yes - valid
.
          MATCH     "PPP-PCC",MESSMTYP           * previous PPP a change ?
          GOTO      VPCD9000 IF EQUAL            * yes - valid
.
.         Previous PPP message must have been a PPP-PCD (delete),
.         so the current message we are processing is not valid.
.         
          MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VPCD.1   ",PRINEROR
          MOVE      "Episode PCD out of sequence",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VPCD9100
          CALL      UERR0000                     * update error status
          GOTO      VPCD9000
.
.         There was no previous PPP message, so we can ignore this message.
.         Reposition on the original PPP-PCD record we were processing and then
.         update the status
.
VPCD5000  MOVE      "VPCD.2   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VPCD9100                * error repositioning
.
          MOVE      THREE,MISCSTAT               * set status "Ignore-not req'd"
          CALL      UPTEMP1
.
          MOVE      SAVKEY42,KEY42               * reposition after key change
          CALL      RSTEMP1
.
VPCD9000  MOVE      ZERO,EXIT
          GOTO      VPCD9999
.
VPCD9100  MOVE      ONE,EXIT
.
VPCD9999  RETURN
+
.*****************************************************************************
.*                 Validate an ADT-A03 (add) message.                        *
.* Requires: SAVEURNO - saved U/R for current message being processed        *
.*           SAVEVISN - saved visit # for current message being processed    *
.*           SAVECONT - saved contact # for current message being processed  *
.*           SAVEDTTM - saved date/time for current message being processed  *
.*           SAVERTYP - saved record type for current message being processed*
.*           SAVEACTN - saved action type for current message being processed*
.*           SAVEMTYP - save message type                                    *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = fatal error occurred                                  *
.*****************************************************************************
.
.         Check if the previous PPP message was a valid message
.
VA030000  MOVE      SAVEURNO,TEMPURNO
          MOVE      SAVEVISN,TEMPVISN
          MOVE      SP8,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      PPPPCD,MESSCODE
          MOVE      ONE,TEMPRTYP
          MOVE      ANSZ,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous PPP found ?
          BRANCH    EXIT,VA035000                * no - valid
.
          MATCH     "PPP-PCB",MESSMTYP           * previous PPP an add ?
          GOTO      VA039000 IF EQUAL            * yes - valid
.
          MATCH     "PPP-PCC",MESSMTYP           * previous PPP a change ?
          GOTO      VA039000 IF EQUAL            * yes - valid
.
.         Previous PPP message must have been a PPP-PCD (delete),
.         so the current message we are processing is not valid.
.         
          MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VA03.1   ",PRINEROR
          MOVE      "Contact A03 out of sequence",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VA039100
          CALL      UERR0000                     * update error status
          GOTO      VA039000
.
.         There was no previous PPP-PCB message, so first we need
.         to create a PPP-PCB message based on the current Episode
.         that is linked to the contact we are processing.
.
VA035000  MOVE      SAVEVISN,KEY8
          CALL      RDALREF1
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.2   ",PRINEROR
            MOVE      "Internal Referral not found",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000
          ENDIF
.
.         Load data fields
.
          MOVE      SAVEURNO,MISCURNO            * load default U/R
.
          MATCH     ALREURNO,SAVEURNO            * U/R same as Episode ?
          GOTO      VA036000 IF EQUAL            * yes
.
          MOVE      SAVEDTTM,DIM14               * no - error
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VA03.15  ",PRINEROR
          MOVE      "Current Episode U/R doesnt match.",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VA039100
          CALL      UERR0000                     * update error status
          GOTO      VA039000
.
VA036000  PACK      MISCDTTM,STRTDATE,ZERO54
          MOVE      ALREVISN,MISCVISN
          MOVE      SP8,MISCCONT
          MOVE      ONE,MISCRTYP
          MOVE      ANSA,MISCACTN
          MOVE      ZERO,MISCVFLG
          MOVE      "PPP-PCB",MISCMTYP
          MOVE      ZERO,MISCSTAT
          MOVE      ONE,MISCSRCE
          MOVE      ALREDEPT,MISCDEPT
.
.         We need to validate that the episode is for a valid VINAH
.         program using the department
.
          MATCH     SP3,MISCDEPT                 * blank department ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.11  ",PRINEROR
            MOVE      "Episode department is blank",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000
          ENDIF
.
.         If the "Display Event Program on VINAH Internal Referral and
.         Encounter Screens" (ALCNDEVP) parameter is turned on, then use
.         Event Program (Cat zG) instead of Cat CG to determine program type.
.         In such a scenario, if Indicator 8 is not set up for the Cat zG
.         code, or if the parameter is turned off, then default back to using
.         Cat CG.
.
          MATCH     "1",ALCNDEVP                 * using Cat zG ?
          GOTO      VA036100 IF NOT EQUAL        * no
.
          MATCH     SP3,ALREEVPR                 * yes - blank event program ?
          GOTO      VA036100 IF EQUAL            * yes - use Cat CG
.
          PACK      CATEGORY,LOWCASEZ,ANSG       * no - use Cat zG
          PACK      KEY5,CATEGORY,ALREEVPR
          GOTO      VA036200
.
VA036100  PACK      CATEGORY,ANSC,ANSG           * use Cat CG
          PACK      KEY5,CATEGORY,MISCDEPT
VA036200  CALL      RDCODE1                      * code on file ?
          COMPARE   ONE,OVRCD
          GOTO      VA036300 IF NOT EQUAL        * yes
.
          MATCH     "zG",CATEGORY                * no - using Cat zG ?
          GOTO      VA036100 IF EQUAL            * yes - use Cat CG instead
.
          MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VA03.12  ",PRINEROR
          MOVE      "Episode department (Cat CG) code not found",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VA039100
          CALL      UERR0000                     * update error status
          GOTO      VA039000                     * yes - ignore record
.
VA036300  MOVE      TCINDC8,ANS
          TYPE      ANS                          * indicator 8 numeric ?
          GOTO      VA036400 IF NOT EQUAL        * no
.
          MATCH     "zG",CATEGORY                * no - using Cat zG ?
          GOTO      VA036100 IF EQUAL            * yes - use Cat CG instead
.
          MOVE      SAVEDTTM,DIM14               * yes
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VA03.13  ",PRINEROR
          MOVE      "Episode department (Cat CG) indicator not valid",PRINDESC
          CALL      PERR0000                   * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VA039100
          CALL      UERR0000                   * update error status
          GOTO      VA039000
.
VA036400  MOVE      ZERO,FORM1
          REP       "A5H2S7O8M3P4R6T9I1",ANS
          MOVE      ANS,FORM1
          COMPARE   ZERO,FORM1                   * VINAH program type ?
          GOTO      VA036500 IF NOT EQUAL        * yes
.
          MATCH     "zG",CATEGORY                * no - using Cat zG ?
          GOTO      VA036100 IF EQUAL            * yes - use Cat CG instead
.
          MOVE      SAVEDTTM,DIM14               * no
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VA03.14  ",PRINEROR
          MOVE      "Episode department (Cat CG) not VINAH related",PRINDESC
          CALL      PERR0000                   * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VA039100
          CALL      UERR0000                   * update error status
          GOTO      VA039000
.
VA036500  MOVE      FORM1,MISCPRGM               * load program type
          MOVE      SP10,MISCWEBU
.
          MOVE      ALREUC35,PATNCRST 
          MOVE      ALREUC36,PATNCAVL 
          MOVE      ALREUC38,PATNLARR 
          MOVE      ALREUC39,PATNUACC 
          MOVE      ALREUC31,PATNMREL 
          MOVE      ALREUC10,PATNDTHP 
.
          MOVE      ALRETRGD,EPISTRGD
          MOVE      ALREDACT,EPISSDAT
          MOVE      ALREDCLO,EPISEDAT
          MOVE      ALREUYN5,EPISFCFL
          MOVE      ALREUC33,EPISCPPT
          MOVE      ALREEIOD,EPISIODT
          MOVE      ALREACDD,EPISACDD
          MOVE      ALREUDT4,EPISCPDD
          MOVE      ALREUDT8,EPISFABD
          MOVE      ALREUD10,EPISHDDT
          MOVE      ALREUDT9,EPISFNAD
          MOVE      ALRERCLO,EPISENDR
          MOVE      ALREYN10,EPISMFLG
          MOVE      ALRECTYP,EPISCTYP
          MOVE      ALRECLID,EPISCLID
          MOVE      ALREEVPR,EPISEVPR
          MOVE      ALREUDT1,EPISDTAC
.
.         Check that Episode Start Date is set correctly
.
          CALL      CESD0000
.
.         Load current linked Referral-In details
.
          MOVE      SAVELINK,KEY8
          CALL      RDALREF1
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.16  ",PRINEROR
            MOVE      "Linked Referral not found",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000
          ENDIF
.
          MOVE      ALREDREC,REFIRDAT
          MOVE      ALRESREJ,REFIOTRR
          MOVE      ALRERCAN,REFIOTRC
          MOVE      ALRESTAT,REFIOUTC
          MOVE      ALREPRTY,REFICLUC
          MOVE      ALREUDT3,REFICRDT
          MOVE      ALREUDT5,REFIRADT
          MOVE      SAVELINK,REFILINK
          MOVE      ALRETRGS,REFITRGS
.                     
          MOVE      SP3,CONTCOMP
          MOVE      SP10,CONTPGRP
          MOVE      SP10,CONTPGR1
          MOVE      SP10,CONTPGR2
          MOVE      SP10,CONTPGR3
          MOVE      SP10,CONTPGR4
          MOVE      SP8,CONTDATE
          MOVE      SP8,CONTTIME
          MOVE      SP3,CONTPURP
          MOVE      SP3,CONTSTYP
          MOVE      SP3,CONTPRES
          MOVE      SP3,CONTDMOD
          MOVE      SP3,CONTDSET
          MOVE      SP3,CONTPOFC
          MOVE      SP3,CONTPDPL
          MOVE      SP3,CONTCMOD
          MOVE      SP8,CONTIFLG
          MOVE      SP10,CONTSPCP
          MOVE      SP3,CONTCSET
          MOVE      SP3,CONTEVPR

          MOVE      SP8,REFORODT
          MOVE      SP9,REFOSERT
          MOVE      SP9,REFOPLAC
          MOVE      SP3,REFORCNT
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 0
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.3   ",PRINEROR
            MOVE      "Episode record already exists",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000
          ENDIF
.
          CALL      WRTEMP1                      * write new record
.
.         We now need to check if there was a previous RRI-I12 message
.         sent, given that it may have already been sent for a different
.         linked episode.
.
          MOVE      SAVEURNO,TEMPURNO
          MOVE      SAVELINK,TEMPVISN
          MOVE      SP8,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      RRII14,MESSCODE
          MOVE      ZERO,TEMPRTYP
          MOVE      ANSZ,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous RRI found ?
          BRANCH    EXIT,VA036900                * no - valid
.
          MATCH     "RRI-I12",MESSMTYP           * previous RRI a create ?
          GOTO      VA038900 IF EQUAL            * yes - valid
.
          MATCH     "RRI-I13",MESSMTYP           * previous RRI a change ?
          GOTO      VA038900 IF EQUAL            * yes - valid
.
.         Previous RRI message must have been a RRI-I14 (delete), so
.         continue to create the RRI-I12 message based on the current linked
.         referral-in record for the message we are currently processing
.
VA036900  MOVE      SAVELINK,KEY8
          CALL      RDALREF1                     * referral-in found ?
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.4   ",PRINEROR
            MOVE      "Current Referral In record not found",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000
          ENDIF
.
.         Load data fields
.
          MOVE      SAVEURNO,MISCURNO            * load default U/R
.
          MATCH     ALREURNO,SAVEURNO            * U/R same as Referral In ?
          GOTO      VA037000 IF EQUAL            * yes
.
          MOVE      SAVEDTTM,DIM14               * no - error
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VA03.9   ",PRINEROR
          MOVE      "Linked Referral In U/R doesnt match.",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VA039100
          CALL      UERR0000                     * update error status
          GOTO      VA039000
.
VA037000  PACK      MISCDTTM,STRTDATE,ZERO53
          MOVE      ALREVISN,MISCVISN
          MOVE      SP8,MISCCONT
          MOVE      ZERO,MISCRTYP
          MOVE      ANSA,MISCACTN
          MOVE      ONE,MISCVFLG
          MOVE      "RRI-I12",MISCMTYP
          MOVE      ZERO,MISCSTAT
          MOVE      ONE,MISCSRCE
          MOVE      ALREDEPT,MISCDEPT
.
.         We need to validate that the referral-in is for a valid VINAH
.         program using the department
.
          MATCH     SP3,MISCDEPT                 * blank department ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.5   ",PRINEROR
            MOVE      "Referral In department is blank",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000
          ENDIF
.
          PACK      KEY5,ANSC,ANSG,MISCDEPT
          CALL      RDCODE1                      * department code on file ?
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.6   ",PRINEROR
            MOVE      "Referral In department (Cat CG) code not found",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000                   * yes - ignore record
          ENDIF
.
          MOVE      TCINDC8,ANS
          TYPE      ANS                          * indicator 8 numeric ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.7   ",PRINEROR
            MOVE      "Referral In department (Cat CG) indicator not valid",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000
          ENDIF
.
          MOVE      ZERO,FORM1
          REP       "A5H2S7O8M3P4R6T9I1",ANS
          MOVE      ANS,FORM1
          COMPARE   ZERO,FORM1                   * VINAH program type ?
          IF        @EQUAL
            MOVE      SAVEDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA03.8   ",PRINEROR
            MOVE      "Referral In department (Cat CG) not VINAH related",PRINDESC
            CALL      PERR0000                   * print error message
            CALL      RPOS0000
            BRANCH    EXIT,VA039100
            CALL      UERR0000                   * update error status
            GOTO      VA039000
          ENDIF
.
          MOVE      FORM1,MISCPRGM               * load program type
          MOVE      SP10,MISCWEBU
.
          MOVE      ALREUC35,PATNCRST 
          MOVE      ALREUC36,PATNCAVL 
          MOVE      ALREUC38,PATNLARR 
          MOVE      ALREUC39,PATNUACC 
          MOVE      ALREUC31,PATNMREL 
          MOVE      ALREUC10,PATNDTHP 
.
          MOVE      ALREDREC,REFIRDAT
          MOVE      ALRESREJ,REFIOTRR
          MOVE      ALRERCAN,REFIOTRC
          MOVE      ALRESTAT,REFIOUTC
          MOVE      ALREPRTY,REFICLUC
          MOVE      ALREUDT3,REFICRDT
          MOVE      ALREUDT5,REFIRADT
          MOVE      SP8,REFILINK
          MOVE      ALRETRGS,REFITRGS
.
          MOVE      SP8,EPISTRGD
          MOVE      SP8,EPISSDAT
          MOVE      SP8,EPISEDAT
          MOVE      SP1,EPISFCFL
          MOVE      SP3,EPISCPPT
          MOVE      SP8,EPISIODT
          MOVE      SP8,EPISACDD
          MOVE      SP8,EPISCPDD
          MOVE      SP8,EPISFABD
          MOVE      SP8,EPISHDDT
          MOVE      SP8,EPISFNAD
          MOVE      SP3,EPISENDR
          MOVE      SP1,EPISMFLG
          MOVE      SP6,EPISCTYP
          MOVE      SP6,EPISCLID
          MOVE      SP3,EPISEVPR
          MOVE      SP8,EPISDTAC
.                     
          MOVE      SP3,CONTCOMP
          MOVE      SP10,CONTPGRP
          MOVE      SP10,CONTPGR1
          MOVE      SP10,CONTPGR2
          MOVE      SP10,CONTPGR3
          MOVE      SP10,CONTPGR4
          MOVE      SP8,CONTDATE
          MOVE      SP8,CONTTIME
          MOVE      SP3,CONTPURP
          MOVE      SP3,CONTSTYP
          MOVE      SP3,CONTPRES
          MOVE      SP3,CONTDMOD
          MOVE      SP3,CONTDSET
          MOVE      SP3,CONTPOFC
          MOVE      SP3,CONTPDPL
          MOVE      SP3,CONTCMOD
          MOVE      SP8,CONTIFLG
          MOVE      SP10,CONTSPCP
          MOVE      SP3,CONTCSET
          MOVE      SP3,CONTEVPR
.
          MOVE      SP8,REFORODT
          MOVE      SP9,REFOSERT
          MOVE      SP9,REFOPLAC
          MOVE      SP3,REFORCNT
.
.         Check if the referral receipt acknowledgement date is populated
.         and if not, then use default values according to logic rules
.
          MATCH     SP8,REFIRADT
          IF        @EQUAL
.
.           First get the date referral accepted from the first linked episode
.
            MOVE      SAVELINK,VISITNUM          * load referral in visit no.
            MOVE      MISCPRGM,PRGMSTRM          * load program stream
            MOVE      REFICLUC,CURGENCY          * load priority
            CALL      FRSTLINK
            MOVE      CURGENCY,REFICLUC          * load priority
.
.           Now use the relevant logic to default populate the field
.
            CALL      DEFRACKN
            MOVE      ACKNDATE,REFIRADT          * load referral ack. date
          ENDIF
.
.         CAR 283991 - A Referral In record can be associated with more
.         than one episode, so the Referral In record may have already been
.         created for a different episode,  Therefore, if the Referral In
.         already exists, then this is not an error, so proceed as normal,
.         otherwise write the Referral In record.
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 1
            CALL      WRTEMP1                    * write new record
          ENDIF
.
.         Re-position back on the ADT-A03 we are currently processing
.
VA038900  MOVE      "VA03.10  ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,VA039100                * error repositioning
.
VA039000  MOVE      ZERO,EXIT
          GOTO      VA039999
.
VA039100  MOVE      ONE,EXIT
.
VA039999  RETURN
+
.*****************************************************************************
.*                               VA130000          Called by: VMES0000       *
.*                 Validate an ADT-A13 (delete) message.                     *
.* Requires: SAVEURNO - saved U/R for current message being processed        *
.*           SAVEVISN - saved visit # for current message being processed    *
.*           SAVECONT - saved contact # for current message being processed  *
.*           SAVEDTTM - saved date/time for current message being processed  *
.*           SAVERTYP - saved record type for current message being processed*
.*           SAVEACTN - saved action type for current message being processed*
.*           SAVEMTYP - save message type                                    *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = fatal error occurred                                  *
.*****************************************************************************
.
.         Check if the previous ADT message was valid for this message.
.
VA130000  MOVE      SAVEURNO,TEMPURNO
          MOVE      SAVEVISN,TEMPVISN
          MOVE      SAVECONT,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      ADTA13,MESSCODE
          MOVE      SAVERTYP,TEMPRTYP
          MOVE      SAVEACTN,TEMPACTN
          MOVE      ZERO,AMESFLAG
          CALL      PREV0000                     * previous ADT found ?
          BRANCH    EXIT,VA135000                * no - valid
.
          MATCH     "ADT-A03",MESSMTYP           * previous ADT an add ?
          GOTO      VA131000 IF NOT EQUAL        * no - invalid
.
.         The previous message was an ADT^A03, so check if the flag is set to
.         ignore the record if both ADT^A03 and ADT^A13 are in this extract
.
          COMPARE   ZERO,IGNORFLG                * ignore record ?
          GOTO      VA139000 IF EQUAL            * no
.
.         We need to ignore both the ADT^A03 and ADTA13 messages in this
.         extract.  First, update the ADT^A03 message.
.
          MOVE      ALTKEY42,KEY42
          CALL      RDTEMP1
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VA13.3   ",PRINEROR
            MOVE      "Unable to find previous A03 temp file record",PRINDESC
            CALL      PERR0000                   * print error message
            GOTO      VA139100
          ENDIF
.
          MOVE      THREE,MISCSTAT               * set status "Ignore-not req'd"
          CALL      UPTEMP1                      * update ADT^A03 record
          GOTO      VA135000                     * update ADT^A13 message
.
.         Previous ADT message must have been an ADT-A13 (delete),
.         so the current message we are processing is not valid.
.         
VA131000  MOVE      SAVEDTTM,DIM14
          CALL      FDTM0000
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      "VA13.1   ",PRINEROR
          MOVE      "Contact A13 out of sequence",PRINDESC
          CALL      PERR0000                     * print error message
          CALL      RPOS0000
          BRANCH    EXIT,VA139100
          CALL      UERR0000                     * update error status
          GOTO      VA139000
.
.         Either the ADT^A03 and the ADT^A13 are both in this extract, or
.         there was no previous ADT (contact related) message, so there's
.         no point in sending the delete message.  As such, we simply
.         need to reposition on the ADT-A13 message we were processing
.         and update the status to "not required".
.
VA135000  MOVE      "VA13.2   ",PRINEROR
          CALL      RPOS0000                     * reposition on original record
          BRANCH    EXIT,VA139100
.
          MOVE      THREE,MISCSTAT               * set status "Ignore-not req'd"
          CALL      UPTEMP1
.
          MOVE      SAVKEY42,KEY42               * reposition after key change
          CALL      RSTEMP1
.
VA139000  MOVE      ZERO,EXIT
          GOTO      VA139999
.
VA139100  MOVE      ONE,EXIT
.
VA139999  RETURN
+
.*****************************************************************************
.*                                 RPOS0000        Called by: Lots           *
.*               Reposition back on the original temp file record            *
.* Requires:  SAVKEY42 - saved temp file key 1                               *
.*            SAVEDTTM - saved transaction date/time                         *
.*            SAVEURNO - saved U/R number                                    *
.*            SAVECONT - saved contact number                                *
.*            PRINEROR - error number                                        *
.* Returns:   EXIT   0 = Ok to continue                                      *
.*                   1 = Error repositioning                                 *
.*****************************************************************************
.
RPOS0000  MOVE      SAVKEY42,KEY42
          CALL      RDTEMP1                      * reposition on index 1
          IF        OVRCD = 1
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "Unable to re-position on temp file record",PRINDESC
            CALL      PERR0000                   * print error message
            GOTO      RPOS9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      RPOS9999
.
RPOS9100  MOVE      ONE,EXIT
.
RPOS9999  RETURN
+
.*****************************************************************************
.*                               UERR0000          Called by: Lots           *
.*     Update the status of the record to "1" (Error) and reposition to      *
.*     read the next waiting record.                                         *
.*****************************************************************************
.
UERR0000  MOVE      ONE,MISCSTAT                 * set status "Ignore-error"
          CALL      UPTEMP1                      * update record
.
.         Reposition in temp file where updated record was
.
          MOVE      SAVKEY42,KEY42
          CALL      RSTEMP1                      * reposition in temp file
.
UERR9999  RETURN
+
.*****************************************************************************
.*                            RDST0000             Called by: VPCC0000       *
.*        Send one REF-I12 message for each allrhlaf record where the        *
.*        alrhtype is "03" (Referral Destination).                           *
.* Requires: WORKDTTM: Date/Time for last PCC related message                *
.            Valid read on PCC record.                                       *
.*****************************************************************************
.         
.         Load all the Referral Destinations (990023)
.           
RDST0000  MOVE      WORKDTTM,MISCDTTM
          MOVE      ZERO,FORM3                   * initialise counter
.
          PACK      KEY13,SAVEVISN,ZERO,THREE,SP20
          CALL      RSALRHL1                     * position on ref. destinations
RDST0500  CALL      RKALRHL1                     * read next record
          BRANCH    OVRCD,RDST9999               * eof
.           
          MATCH     SAVEVISN,ALRHVISN            * same visit still ?
          GOTO      RDST9999 IF NOT EQUAL        * no - finished
.           
          MATCH     "03",ALRHTYPE                * ref. destination still ?
          GOTO      RDST9999 IF NOT EQUAL        * no - finished
.
.         Referral Out Date must not be less than the Episode Start Date
.
          MATCH     STARTDAT,ALRHDATE
          IF        @LESS
            MOVE      "REF.1    ",PRINEROR
            MOVE      "Referral Out Date less than Episode Start Date",PRINDESC
            MOVE      ONE,MISCSTAT
            GOTO      RDST1100
          ENDIF
.
          MATCH     SP8,EPISEDAT                 * blank episode end date ?
          GOTO      RDST1000 IF EQUAL            * yes
.
.         Episode End Date must not be less than the Referral Out Date
.
          MATCH     ALRHDATE,EPISEDAT
          IF        @LESS
            MOVE      "REF.2    ",PRINEROR
            MOVE      "Episode End Date less than Referral Out Date",PRINDESC
            MOVE      ONE,MISCSTAT
            GOTO      RDST1100
          ENDIF
.
RDST1000  MOVE      ZERO,MISCSTAT
RDST1100  MOVE      SAVEURNO,MISCURNO
          MOVE      SAVEVISN,MISCVISN
          MOVE      SAVECONT,MISCCONT
          MOVE      ZERO,MISCVFLG
          MOVE      REFI12,MISCMTYP
          MOVE      FIVE,MISCRTYP
          MOVE      ANSA,MISCACTN
          MOVE      ONE,MISCSRCE
          MOVE      SP8,MISCCONT
          MOVE      ALRHCODE,REFOSERT            * load ref-out service type
          MOVE      ALRHCOD2,REFOPLAC            * load ref-out place
          ADD       ONE,FORM3                    * increment counter
          MOVE      FORM3,REFORCNT               * load counter
          MOVE      ALRHDATE,REFORODT            * load referral out date
RDST2000  CALL      ASEC0000                     * add 1 sec to date/time
          MOVE      MISCDTTM,WORKDTTM            * save new date/time
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 1
            CALL      WRTEMP1                    * write new REF-I12 record
          ELSE
            GOTO      RDST2000
          ENDIF
.
          COMPARE   ONE,MISCSTAT                 * was this an error record ?
          GOTO      RDST0500 IF NOT EQUAL        * no - get next record
.
.         There was a validation error, so process the error now that
.         we have all the data for the REF^I12 record in allhdtaf (as they
.         must match for the error to appear against the record in the
.         front-end error screens).
.
          MOVE      SAVEURNO,PRINURNO
          MOVE      SAVEVISN,PRINVISN
          MOVE      SAVECONT,PRINENCT
          MOVE      WORKDTTM,DIM14
          MOVE      MESSNUMB,SAVMNUMB            * save original message no.
          MOVE      TEN3,MESSNUMB
          CALL      FDTM0000
          CALL      PERR0000
          MOVE      SAVMNUMB,MESSNUMB            * restore original message no.
.
          GOTO      RDST0500                     * get next record
.
RDST9999  RETURN
+
.*****************************************************************************
.*                            PREV0000             Called by; VA030000       *
.*                                                            VA130000       *
.*                                                            VPCC0000       *
.*                                                            VPCD0000       *
.*          For a given visit/contact, see if a previous particular message  *
.*          (RRI, PPP, ADT or REF) type is waiting to be sent or has already *
.*          been sent.                                                       *
.* Requires: MESSCODE - Full message code (eg ADT-A03)                       *
.*           TEMPURNO - U/R for visit/contact                                *
.*           TEMPVISN - Visit number                                         *
.*           TEMPCONT - contact for visit                                    *
.*           TEMPDTTM - trigger date/time                                    *
.*           TEMPRTYP - record type (0 = Referral In)                        *
.*                                  (1 = Episode)                            *
.*                                  (2 = Contact)                            *
.*                                  (3 = Merge)                              *
.*                                  (4 = PMI)                                *
.*                                  (5 = Referral In)                        *
.*           TEMPACTN - action type (A = Addition)                           *
.*                                  (C = Change)                             *
.*                                  (D = Deletion)                           *
.*           AMESFLAG - checking waiting & accepted or accepted only         *
.*                      0 = waiting & accepted                               *
.*                      1 = accepted only                                    *
.* Returns : EXIT  0 =  Message is waiting to be sent                        *
.*                 1 =  Message is not waiting to be sent                    *
.*           MESSMTYP - The last message type sent or to be sent             *
.*           IGNORFLG - Ignore record flag (for ADT^A13 messages only)       *
.*                        0 = Valid record - don't ignore                    *
.*                            ADT^A03 sent in a previous extract and accepted*
.*                        1 = Invalid record - ignore                        *
.*                            Set the status of the previous ADT^A03 and the *
.*                            ADT^A13 we are processing to "Ignore" as they  *
.*                            are in the same extract and therefore there's  *
.*                            no point in sending them                       *
.*           ALTKEY42 - Key for previous ADT^A03 message (ADT^A13 messages   *
.*                      only)                                                *
.*           PREVSTAT - Previous Message status                              *
.*****************************************************************************
.
PREV0000  MOVE      MESSCODE,DIM3                * save message type
          BRANCH    AMESFLAG,PREV7000            * only checking accepted mssgs
.
          MOVE      ZERO,IGNORFLG                * initialise ignore record flag
.
          MOVE      SP20,SAVDTTM1                * initialise date/time 1
          MOVE      SP20,SAVDTTM2                * initialise date/time 2
          MOVE      SP7,SAVMTYP1                 * initialise message type 1
          MOVE      SP7,SAVMTYP2                 * initialise message type 2
.
.         First, we need to see if there is a previous waiting message of the
.         same message type (ie RRI) for this U/R, Visit & Contact where
.         the status is zero (waiting).
.
          PACK      KEY49,TEMPURNO,SP1,ZERO,TEMPVISN,TEMPCONT,TEMPDTTM,MESSCODE:
                          TEMPRTYP,TEMPACTN
          CALL      RSTEMP3                      * position on current record
PREV0500  CALL      RPTEMP3                      * read previous record
          BRANCH    OVRCD,PREV5000               * eof - finished
.
          MATCH     MISCURNO,TEMPURNO            * same U/R still ?
          GOTO      PREV5000 IF NOT EQUAL        * no - finished
.
          COMPARE   ZERO,MISCSTAT                * same status still ?
          GOTO      PREV5000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCVISN,TEMPVISN            * same visit no. still ?
          GOTO      PREV5000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCCONT,TEMPCONT            * same contact no. still ?
          GOTO      PREV5000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCMTYP,DIM3                * same message type still ?
          GOTO      PREV0500 IF NOT EQUAL        * no - get next record
.
          MOVE      MISCRTYP,ANS
          MATCH     ANS,TEMPRTYP                 * same type still ?
          GOTO      PREV0500 IF NOT EQUAL        * no - get next record
.
          MOVE      MISCDTTM,SAVDTTM1            * save date/time
          MOVE      MISCMTYP,SAVMTYP1            * save last message type
          PACK      SVKEY42A,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                             MISCRTYP,MISCACTN
.
.         Next, we need to see if there is a previous waiting message of the
.         same message type (ie RRI) for this U/R, Visit & Contact, where
.         the status is one (error).
.
PREV5000  PACK      KEY49,TEMPURNO,SP1,ONE,TEMPVISN,TEMPCONT,TEMPDTTM,MESSCODE:
                          TEMPRTYP,TEMPACTN
          CALL      RSTEMP3                      * position on current record
PREV5500  CALL      RPTEMP3                      * read previous record
          BRANCH    OVRCD,PREV6000               * eof - finished
.
          MATCH     MISCURNO,TEMPURNO            * same U/R still ?
          GOTO      PREV6000 IF NOT EQUAL        * no - finished
.
          COMPARE   ONE,MISCSTAT                 * same status still ?
          GOTO      PREV6000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCVISN,TEMPVISN            * same visit no. still ?
          GOTO      PREV6000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCCONT,TEMPCONT            * same contact no. still ?
          GOTO      PREV6000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCMTYP,DIM3                * same message type still ?
          GOTO      PREV5500 IF NOT EQUAL        * no - get next record
.
          MOVE      MISCRTYP,ANS
          MATCH     ANS,TEMPRTYP                 * same type still ?
          GOTO      PREV5500 IF NOT EQUAL        * no - get next record
.
          MOVE      MISCDTTM,SAVDTTM2            * save date/time
          MOVE      MISCMTYP,SAVMTYP2            * save last message type
          PACK      SVKEY42B,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                             MISCRTYP,MISCACTN
.
.         Check if we found a previous message with a status of waiting
.         and/or error, and if so, use the most recent.
.
PREV6000  MATCH     SAVDTTM1,SP20
          IF        @EQUAL
            MATCH     SAVDTTM2,SP20
            GOTO      PREV7000 IF EQUAL
            MOVE      SAVMTYP2,MESSMTYP          * only error record
            MOVE      SVKEY42B,ALTKEY42
            MOVE      ONE,IGNORFLG
            GOTO      PREV9000
          ELSE
            MATCH     SAVDTTM2,SP20
            GOTO      PREV6500 IF NOT EQUAL
            MOVE      SAVMTYP1,MESSMTYP          * only waiting record
            MOVE      SVKEY42A,ALTKEY42
            MOVE      ONE,IGNORFLG
            GOTO      PREV9000
          ENDIF
.
.         Both are populated, so check which is most recent
.
PREV6500  MATCH     SAVDTTM1,SAVDTTM2
          IF        @LESS
            MOVE      SAVMTYP1,MESSMTYP          * load waiting message type
            MOVE      SVKEY42A,ALTKEY42
            MOVE      ONE,IGNORFLG
          ELSE
            MOVE      SAVMTYP2,MESSMTYP          * load error message type
            MOVE      SVKEY42B,ALTKEY42
            MOVE      ONE,IGNORFLG
          ENDIF
          GOTO      PREV9000
.
.         There is no previous waiting message of the same message type,
.         so now check to see if there was a previous accepted message of the
.         same message type
.
PREV7000  CALL      PACC0000                     * previously sent rec. found ?
          BRANCH    EXIT,PREV7500                * no - try old U/R's
.
          MOVE      ALHDMTYP,MESSMTYP            * save last message type
          MOVE      ALHDBNUM,SAVEBNUM            * save last batch number
          GOTO      PREV9000
.
.         No previous message under the current U/R, so check if there was one
.         under an old U/R which was ultimately merged to the current U/R.
.         First we need to load all the U/R numbers that have ultimately
.         been merged to the current U/R number.
.
PREV7500  MOVE      SP20,SAVLDTTM                * init. last saved date/time
          BRANCH    URLDFLAG,PREV7700            * merged U/R's already loaded
.
          CALL      LURC0000                     * load merged from U/R #'s
          MOVE      ONE,URLDFLAG                 * set flag as not first record
.
.         Now loop through the "merged from" U/R numbers and see if a previous
.         message was sent under one of the "merged from" U/R numbers
.
PREV7700  PACK      KEY9,ONE,SP10
          CALL      RSTEMP7                      * pos'n at start of "unchecked"
PREV8000  CALL      RKTEMP7                      * read next record
          BRANCH    OVRCD,PREV8500               * eof - finished
.
.         Use the "merged from" U/R to check if any of the relevant
.         messages were previously sent under that U/R
.
          MOVE      MRGURNUM,TEMPURNO            * load old U/R
          CALL      PACC0000                     * previously sent rec. found ?
          BRANCH    EXIT,PREV8000                * no - try next old U/R
.
          MATCH     SAVLDTTM,SP20                * last date/time blank ?
          IF        @EQUAL
            MOVE      ALHDMTYP,MESSMTYP          * save last message type
            MOVE      ALHDBNUM,SAVEBNUM          * save last batch number
            MOVE      ALHDDTTM,SAVLDTTM          * save last message date/time
            MOVE      ALHDOUTC,PREVSTAT          * load previous status
            MOVE      ALHDURNO,PREVURNO          * save previous U/R
            GOTO      PREV8000                   * get next record
          ENDIF
.
          MATCH     ALHDDTTM,SAVLDTTM
          IF        @LESS
            MOVE      ALHDMTYP,MESSMTYP          * save last message type
            MOVE      ALHDBNUM,SAVEBNUM          * save last batch number
            MOVE      ALHDDTTM,SAVLDTTM          * save last message date/time
            MOVE      ALHDOUTC,PREVSTAT          * load previous status
            MOVE      ALHDURNO,PREVURNO          * save previous U/R
          ENDIF
.
          GOTO      PREV8000                     * get next record
.
.         Check if there was a previous message found for an old U/R number
.
PREV8500  MATCH     SAVLDTTM,SP20                * previous message found ?
          GOTO      PREV9100 IF EQUAL            * no
.
          GOTO      PREV9050
.
PREV9000  MOVE      ALHDOUTC,PREVSTAT            * load previous status
PREV9050  MOVE      ZERO,EXIT                    * previous message found
          GOTO      PREV9999
.
PREV9100  MOVE      ONE,EXIT                     * no previous message found
.
PREV9999  RETURN
+
.*****************************************************************************
.*                               PACC0000          Called by: PREV0000       *
.*        Check for a previously accepted message of the same, type for a    *
.*        given U/R                                                          *
.* Requires: TEMPURNO - U/R number                                           *
.*           TEMPVISN - Visit number                                         *
.*           TEMPCONT - contact/encounter number                             *
.* Returns: EXIT  0 = previously sent message found                          *
.*                1 = no previously sent message found                       *
.*****************************************************************************
.
PACC0000  PACK      KEY49,TEMPURNO,TEN,TEMPVISN,TEMPCONT,TILDA50
          CALL      RSALHDT6                     * position on U/R
PACC0500  CALL      RPALHDT6                     * read previous record
          BRANCH    OVRCD,PACC9100               * eof - finished
.
          MATCH     ALHDURNO,TEMPURNO            * same U/R still ?
          GOTO      PACC9100 IF NOT EQUAL        * no - finished
.
          MATCH     "10",ALHDSTAT                * same status still ?
          GOTO      PACC9100 IF NOT EQUAL        * no - finished
.
          MATCH     ALHDVISN,TEMPVISN            * same visit still ?
          GOTO      PACC9100 IF NOT EQUAL        * no - finished
.
          MATCH     ALHDCONT,TEMPCONT            * same contact still ?
          GOTO      PACC9100 IF NOT EQUAL        * no - finished
.
          MATCH     DIM3,ALHDMTYP                * same message type still ?
          GOTO      PACC0500 IF NOT EQUAL        * no - finished
.
          MOVE      ZERO,EXIT
          GOTO      PACC9999
.
PACC9100  MOVE      ONE,EXIT
.
PACC9999  RETURN
+
.*****************************************************************************
.*                               LURC0000          Called by: PREV0000       *
.*        Load all the previously merged U/R numbers for the current         *
.*        U/R being processed.                                               *
.*****************************************************************************
.
LURC0000  CALL      CLRC0000                     * clear temp file
.
.         Load all "merged from" U/R numbers for the current U/R for the
.         message we are processing
.
          CALL      LURP0000
.
.         The temp file has been loaded with all "merged from" U/R numbers,
.         so now check each of those "merged from" U/R numbers to find any
.         further "merged from" U/R numbers.
.
LURC0500  PACK      KEY9,ZERO,SP10
          CALL      RSTEMP7                      * pos'n at start of "unchecked"
          CALL      RKTEMP7                      * read next record
          BRANCH    OVRCD,LURC9999               * eof - finished
.
          MATCH     "0",MRGURFLG                 * zero flag still ?
          GOTO      LURC9999 IF NOT EQUAL        * no - finished
.
          MOVE      MRGURNUM,TEMPURNO            * load U/R for checking
          PACK      SAVEKEY9,MRGURFLG,MRGURNUM
          CALL      LURP0000                     * check for "merges from"
.
          MOVE      SAVEKEY9,KEY9
          CALL      RDTEMP7                      * reposition on loaded U/R
          BRANCH    OVRCD,LURC9999               * record not found
.
          MOVE      "1",MRGURFLG                 * set U/R as "checked"
          CALL      UPTEMP7
.
          GOTO      LURC0500                     * get next "unchecked" U/R #
.
LURC9999  RETURN
+
.*****************************************************************************
.*                             LURP0000            Called by: LURC0000       *
.*    Load any U/R numbers that have been merged to the parsed U/R number    *
.* Requires: TEMPURNO - U/R number                                           *
.*****************************************************************************
.
LURP0000  PACK      KEY17,THREE,TEMPURNO,SP20
          CALL      RSPTMRG2                     * position on current U/R
LURP0500  CALL      RKPTMRG2                     * read next record
          BRANCH    OVRCD,LURP9999               * eof - finished
.
          COMPARE   THREE,PTMRSTAT               * merge processed ?
          GOTO      LURP9999 IF NOT EQUAL        * no - finished
.
          MATCH     TEMPURNO,PTMRNWUR            * same U/R still ?
          GOTO      LURP9999 IF NOT EQUAL        * no - finished
.
.         A merge record has been found for the parsed U/R, so load the
.         old U/R number into the temp file
.
          MOVE      PTMROLUR,MRGURNUM
          MOVE      MRGURNUM,KEY8
          CALL      RDTEMP6
          IF        OVRCD = 1
            MOVE      "0",MRGURFLG               * set flag to "unchecked"
            CALL      WRTEMP6                    * write record
          ENDIF
.
          GOTO      LURP0500                     * get next record
.
LURP9999  RETURN
+
.*****************************************************************************
.*                            ASEC0000             Called by: VA030000       *
.*                                                            CANR0000       *
.*               Add one second to date/time                  VPCD0000       *
.* Requires: MISCDTTM - Date/time value (ccyymmddhhmmss)                     *
.* Returns : MISCDTTM - Date/time value (ccyymmddhhmmss) incremented by 1 sec*
.*****************************************************************************
.
ASEC0000  UNPACK    MISCDTTM,DIM8,HOURTM,MINTIME,SECTIME
          MATCH     "59",SECTIME
          IF        !@EQUAL
            MOVE      SECTIME,FORM2              * just increment seconds
            ADD       ONE,FORM2
            MOVE      FORM2,SECTIME
            REP       " 0",SECTIME
            PACK      MISCDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      ASEC9999
          ENDIF
.
.         The seconds were "59", so reset these to "00" and increment the
.         minutes
.
          MOVE      "00",SECTIME
          MATCH     "59",MINTIME
          IF        !@EQUAL
            MOVE      MINTIME,FORM2              * just increment minutes
            ADD       ONE,FORM2
            MOVE      FORM2,MINTIME
            REP       " 0",MINTIME
            PACK      MISCDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      ASEC9999
          ENDIF
.
.         The minutes were "59", so reset these to "00" and increment the
.         hours
.
          MOVE      "00",SECTIME
          MOVE      "00",MINTIME
          MATCH     "23",HOURTM
          IF        !@EQUAL
            MOVE      HOURTM,FORM2              * just increment hours
            ADD       ONE,FORM2
            MOVE      FORM2,HOURTM
            REP       " 0",HOURTM
            PACK      MISCDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      ASEC9999
          ENDIF
.
.         The hours were "59", so reset these to "00" and increment the
.         date
.
          MOVE      "00",SECTIME
          MOVE      "00",MINTIME
          MOVE      "00",HOURTM
.
.         We need to increment the date by 1 day
.
          UNPACK    DIM8,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON                       * get julian day
          ADD       ONE,JULDAY                   * increment julian day
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                       * get new date
          PACK      MISCDTTM,CC,YY,MM,DD,ZERO6
          REP       " 0",MISCDTTM
.
ASEC9999  RETURN
+
.*****************************************************************************
.*                             FDTM0000            Called by: lots           *
.*                       Format the record date-time                         *
.* Returns: PRINDTTM - record date/time "dd/mm/ccyy hh:mm:ss"                *
.*****************************************************************************
.
FDTM0000  MOVE      SP20,PRINDTTM                * initialise date/time
.
          MATCH     DIM14,SP20                   * date present ?
          GOTO      FDTM9999 IF EQUAL            * no - finished
.
          UNPACK    SP6,HOURTM,MINTIME,SECTIME
          UNPACK    DIM14,CCENT,CYEAR,CMON,CDAY,HOURTM,MINTIME,SECTIME
          CALL      PACDATE
.
          MATCH     SP2,HOURTM                   * time present ?
          IF        @EQUAL
            PACK      PRINDTTM,CPCDATE,SP20      * no
          ELSE
            PACK      PRINDTTM,CPCDATE,SP1,HOURTM,COLON,MINTIME,COLON,SECTIME
          ENDIF
.
FDTM9999  RETURN
+
.*****************************************************************************
.*                          SETF0000               Called by: WFHS0000       *
.* Requires: FHS009: The incomplete file identifier based on:                *
.*                      -health service code (site)                          *
.*                      -date of extract                                     *
.*                      Eg: "rch_20070422_"                                  *
.* Returns:  FHS009: The full file identifier which includes the trailing    *
.*                   sequential site count for the date and the file ext.    *
.*                      Eg: "rch_20070422_01.hl7"                            *
.*           EXIT  0 = Ok to continue                                        *
.*                 1 = Error occurred so finish                              *
.*****************************************************************************
.
.         Make sure that the file name doesn't exceed the maximum length of 
.         of 14 characters, otherwise by the time we add the sequence
.         number and the extension, FHS009 will exceed 20 characters, which
.         is the size limit for this field.
.
SETF0000  MOVELPTR  FHS009,FORM2
          IF        FORM2 > 14
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            CALL      FDTM0000
            MOVE      "FHS.9.1  ",PRINEROR
            MOVE      "Problem creating extract filename",PRINDESC
            CALL      PERR0000                   * yes - error
            GOTO      SETF9100
          ENDIF
.
.         Get the last extract file produced by the site on the current date
.
          PACK      KEY20,FHS009,TILDA50
          CALL      RSALHHD1                     * posn for sites last extract
          CALL      RPALHHD1                     * read previous record
          BRANCH    OVRCD,SETF8000               * eof - set to "01"
.
          MATCH     FHS009,ALHHFNAM              * same site/date still ?
          GOTO      SETF8000 IF NOT EQUAL        * no - set to "01"
.
.         An extract has already been created today, so add one to the
.         previous sequential count to create the new filename
.
          SCAN      ".hl7",ALHHFNAM
          IF        @EOS
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            CALL      FDTM0000
            MOVE      "FHS.9.2  ",PRINEROR
            MOVE      "Problem creating filename",PRINDESC
            CALL      PERR0000
            GOTO      SETF9100
          ENDIF
          BUMP      ALHHFNAM,-2
          MOVE      ALHHFNAM,DIM2
          TYPE      DIM2
          IF        !@EQUAL
            MOVE      SP8,PRINURNO
            MOVE      SP8,PRINVISN
            MOVE      SP8,PRINENCT
            MOVE      SP20,DIM14
            CALL      FDTM0000
            MOVE      "FHS.9.3  ",PRINEROR
            MOVE      "Problem creating filename",PRINDESC
            CALL      PERR0000
            GOTO      SETF9100
          ENDIF
.
          MOVE      DIM2,FORM2
          ADD       ONE,FORM2
          MOVE      FORM2,DIM2
          REP       " 0",DIM2
          GOTO      SETF9000
.
.         This is the first extract file for today
.
SETF8000  MOVE      "01",DIM2
.
SETF9000  ENDSET    FHS009
          APPEND    DIM2,FHS009
          APPEND    ".hl7",FHS009
          RESET     FHS009
.
          MOVE      ZERO,EXIT
          GOTO      SETF9999
.
SETF9100  MOVE      ONE,EXIT
.
SETF9999  RETURN
+
.*****************************************************************************
.*                           WBAT0000              Called by: PROC0000       *
.*                 Write a batch record to allhbtaf                          *
.*****************************************************************************
.
WBAT0000  BRANCH    VALDFLAG,WBAT9999            * validation only
.
          IF        PURGFLAG = 0
            PACK      ALHBFNAM,FHS009,SP20       * set batch fields
            MOVE      BATCHIDN,ALHBBNUM
            MOVE      ZERO,ALHBSTAT
            MOVE      SAVEURNO,ALHBURNO
            MOVE      SP20,ALHBNBTN
            MOVE      SP20,ALHBPBTN
            MOVE      SP20,ALHBSPAR
.
            CALL      WRALHBT1                   * write batch record
          ENDIF
.
WBAT9999  RETURN
+
.*****************************************************************************
.*                           WHED0000              Called by: WFHS0000       *
.*                 Write a header record to allhhdaf                         *
.* Requires:  PURGFLAG   0 = normal (live) transmission                      *
.*                       1 = Data to be purged by DHS.                       *
.*****************************************************************************
.
WHED0000  PACK     ALHHFNAM,FHS009,SP20          * set header fields
          MOVE     STRTDATE,ALHHSDAT
          MOVE     ENDDATE,ALHHEDAT
          IF       PURGFLAG = 0
            MOVE     ZERO,ALHHSTAT               * extracted
          ELSE
            MOVE     SIX,ALHHSTAT                * purged
          ENDIF
          MOVE     SP30,ALHHSPAR
.
          CALL     WRALHHD1                      * write header record
.
WHED9999  RETURN
+
.*****************************************************************************
.*                              CLRE0000           Called by: MAIN0000       *
.*        Remove any existing error records before running a new extract     *
.*****************************************************************************
.
CLRE0000  PACK      KEY57,SP30,SP30
          CALL      RSALSED1                     * position at start of file
          CALL      RKALSED1                     * read next record
          BRANCH    OVRCD,CLRE9999               * eof - finished
.
          PACK      KEY57,ALSEURNO,ALSEVISN,ALSEENCT,ALSEDTTM,ALSEMTYP,ALSEERID:
                          ALSEECNT
          CALL      DEALSED1                     * delete record
          GOTO      CLRE0000                     * get next record
.
CLRE9999  RETURN
+
.*****************************************************************************
.*                           PURG0000              Called by: MAIN0000       *
.*           See if extract data is to be purged after processing by DHS     *
.* Returns: PURGFLAG   1 = purge data                                        *
.*                     0 = do not purge data (normal live transmission)      *
.*          SAVENMES  - save variable for last message id                    *
.*          SAVENBAT  - save variable for last batch number                  *
.*          FHS010    - purge flag                                           *
.*****************************************************************************
.
PURG0000  KEYIN     *P1:16,*EL,"Data to be purged by DHS after validation (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ")? : ",*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          MATCH     SP1,ANS
          GOTO      PURG1000 IF EQUAL
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      "PurgeAfterLoad=True;",FHS010
            GOTO      PURG9100
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      SP100,FHS010
            CLEAR     FHS010
            GOTO      PURG9000
          ENDIF
.
PURG1000  BEEP
          GOTO      PURG0000
.
PURG9000  MOVE      ZERO,PURGFLAG
          GOTO      PURG9999
.
.         We want DHS to purge this data, so get the next message id
.         and batch id, so that we can increment without updating the 
.         database
.
PURG9100  READ      CONTROLF,HUND06;*37,ALCNBATI: * get next batch id
                                    *227,ALCNMESI * get next message id
          MOVE      ALCNBATI,SAVENBAT            * load batch id
          SUB       ONE,SAVENBAT                 * reset to last batch number
          MOVE      ALCNMESI,SAVENMES            * load message id
          SUB       ONE,SAVENMES                 * reset to last message id
          MOVE      ONE,PURGFLAG
.
PURG9999  RETURN
+
.*****************************************************************************
.*                              GDVA0000           Called by: WPID0000       *
.*            See if the patient has DVA concession card                     *
.* Requires: PURNO - U/R number                                              *
.* Returns:  PID.3 - Appended DVA Concession Card Number                     *
.*****************************************************************************
.
GDVA0000  PACK      KEY19,PURNO,TILDA50
          CALL      RSPMCCD1                     * position on U/R
GDVA0500  CALL      RPPMCCD1                     * read previous record
          BRANCH    OVRCD,GDVA9100               * eof - nothing found
.
          MATCH     PURNO,PMCDURNO               * same U/R still ?
          GOTO      GDVA9100 IF NOT EQUAL        * no - nothing found
.
.         Check if the card type is DVA
.
          PACK      KEY5,LOWCASEC,LOWCASET,PMCDCTYP
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,GDVA0500               * no - ignore record
.
          MATCH     SP1,TCINDC1                  * blank indicator 1 ?
          GOTO      GDVA0500 IF EQUAL            * yes - ignore record
.
          TYPE      TCINDC1                      * numeric indicator 1 ?
          GOTO      GDVA0500 IF NOT EQUAL        * no - ignore record
.
          MOVE      TCINDC1,FORM1
          COMPARE   FORM1,THREE                  * DVA concession card type ?
          GOTO      GDVA0500 IF NOT EQUAL        * no - ignore record
.
.         A concession card of the same type has been found, so check
.         if there is an expiry date
.
          MATCH     SP8,PMCDEXDT                 * expiry date blank ?
          GOTO      GDVA1000 IF EQUAL            * yes - assume valid
.
.         There is an expiry date for the card, so check that the
.         card was current for the contact
.
.>>>>>>   MOVE      DATETIME,DIM8
.>>>>>>   MATCH     DIM8,PMCDEXDT                * card valid for date ?
.>>>>>>   GOTO      GDVA5000 IF LESS             * no
.
.         Concession card record is current
.
GDVA1000  MATCH     SP20,PMCDCNUM                * card number blank ?
          GOTO      GDVA9100 IF EQUAL            * yes - nothing found
.
          MOVE      PMCDCNUM,DIM20               * load concession card number
          STRIP     DIM20
.
          CALL      VDVA0000                     * validate DVA number
.
          APPEND    "~",PID003
          APPEND    DIM20,PID003
          RESET     PID003
          STRIP     PID003
          ENDSET    PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    CARET,PID003
          APPEND    "AUSDVA",PID003
          APPEND    CARET,PID003
          APPEND    ANSE,PID003
          GOTO      GDVA9999
.
GDVA9100  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.3.2  ",PRINEROR
          MOVE      "Veterans' Affair number not on file",PRINDESC
          CALL      PERR0000
.
GDVA9999  RETURN
+
.*****************************************************************************
.*                              VDVA0000               Called by: WPID0000   *
.*                      Validate the DVA Number                              *
.* Requires:  DIM20 - DVA Number                                             *
.*****************************************************************************
.
.     DVA Number format:
.       - A valid state indicator
.       - A valid war code (one only).  War codes are between 1 and 3
.                          characters (A-Z). A one character war code can
.                          also be a space.
.       - A valid numeric number (up to 6 digits for a one character war code,
.                                 up to 5 digits for a 2 character war code,
.                                 or up to 4 digits for a 3 character war code).
.       - A valid dependent indicator ('space' or 'A' through 'Z')
.
.     In addition:
.       - The war code can be a single space but the space can be omitted in the
.         received number - either format is valid. Eg. 'N 123456A' is
.         equivalent to 'N123456A' and both are considered valid.
.       - The length of the war code component plus the numeric component
.         should be 7 characters.  However, the numeric component can be
.         padded out with leading zeros which may or may not be present
.         in the received DVA number - either format is valid. Eg. VSS00151A is
.         equivalent to VSS151A and both are considered valid.
.
VDVA0000  MOVELPTR  DIM20,FORM3
          IF        FORM3 > 9
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.3  ",PRINEROR
            MOVE      "DVA Number too long",PRINDESC
            CALL      PERR0000
            GOTO      VDVA9999
          ENDIF
.
          UNPACK    DIM20,KEY1,KEY8
.
.         Make sure that the first character represents the state
.            N = NSW/ACT
.            V = VIC
.            Q = QLD
.            S = SA/NT
.            W = WA
.            T = TAS
.
          RESET     DVACHAR1                     * reset from previous SCAN
          SCAN      KEY1,DVACHAR1
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.4  ",PRINEROR
            MOVE      "State Indicator not valid",PRINDESC
            CALL      PERR0000
            GOTO      VDVA9999
          ENDIF
.
.         Check to see if character 2 is an alpha (A-Z), a space or a numeric.
.         ** Note: CHRCOUNT is initialised to "1" given that if a war code
.                  is not present, we are assuming that it is actually a single
.                  space.
.                  Also, there is no need to check if a space is present, as
.                  the field has already been SQUEEZEd
.
VDVA1000  MOVE      ONE,CHRCOUNT                 * initialise character count
          MOVE      ZERO,DIGCOUNT                * initialise digit count
          MOVE      ZERO,EOSFLAG                 * initialise eos flag
.
          MOVE      KEY8,ANS                     * load character 2
.
          RESET     ALPHABET                     * reset from previous SCAN
          SCAN      ANS,ALPHABET                 * A-Z or space ?
          GOTO      VDVA2000 IF EQUAL            * yes
.
          TYPE      ANS                          * no - numeric ?
          GOTO      VDVA5000 IF EQUAL            * yes
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.3.5  ",PRINEROR
          MOVE      "DVA Number contains invalid character",PRINDESC
          CALL      PERR0000
          GOTO      VDVA9999
.
.         We have a war code present
.
VDVA2000  BUMP      KEY8                         * move to next character
          IF        @EOS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.6  ",PRINEROR
            MOVE      "DVA Number has no numeric component",PRINDESC
            CALL      PERR0000
            GOTO      VDVA9999
          ENDIF
.
          MOVE      KEY8,ANS                     * load next character
          TYPE      ANS                          * digit ?
          GOTO      VDVA5000 IF EQUAL            * yes
.
          RESET     ALPHABET                     * reset after previous SCAN
          SCAN      ANS,ALPHABET                 * A-Z ?
          IF        @EQUAL
            ADD       ONE,CHRCOUNT               * yes - incr. character count
            GOTO      VDVA2000
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.3.7  ",PRINEROR
          MOVE      "DVA Number contains invalid character",PRINDESC
          CALL      PERR0000
          GOTO      VDVA9999
.
.
.         We have processed the war code, so check the character count
.         for the code
.
VDVA5000  ADD       ONE,DIGCOUNT
.
          IF        CHRCOUNT > 3
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.8  ",PRINEROR
            MOVE      "DVA Number war code too long",PRINDESC
            CALL      PERR0000
            GOTO      VDVA9999
          ENDIF
.
.         We now need to process the numeric component of the DVA number.
.
VDVA5100  BUMP      KEY8                         * move to next character
          IF        @EOS
            MOVE      ONE,EOSFLAG                * eos - set eos flag
            GOTO      VDVA7500
          ENDIF
.
          MOVE      KEY8,ANS                     * load next character
          TYPE      ANS                          * digit ?
          GOTO      VDVA7500 IF NOT EQUAL        * no
.
          ADD       ONE,DIGCOUNT                 * increment digit count
          GOTO      VDVA5100
.
.         Make sure that the number of digits is valid for the size of
.         the war code
.
VDVA7500  LOAD      MAXCOUNT,CHRCOUNT,SIX,FIVE,FOUR
.
          COMPARE   DIGCOUNT,MAXCOUNT
          IF        @LESS
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.9  ",PRINEROR
            MOVE      "DVA Number has too many digits",PRINDESC
            CALL      PERR0000
            GOTO      VDVA9999
          ENDIF
.
.         Check this is the last character and it is a space or A-Z and that
.         there are no further characters
.
          BRANCH    EOSFLAG,VDVA9999             * no last character
.
          RESET     ALPHABET                     * reset after previous SCAN
          SCAN      ANS,ALPHABET                 * A-Z ?
          IF        @EQUAL
            BUMP      KEY8                       * eos ?
            GOTO      VDVA9999 IF EOS            * yes - finished
          ENDIF
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PID.3.10 ",PRINEROR
          MOVE      "DVA Number has invalid last character",PRINDESC
          CALL      PERR0000
.
VDVA9999  RETURN
+
.*****************************************************************************
.*                              VWCO0000               Called by: WPID0000   *
.*            Validate the Workers Compensation Claim Number                 *
.* Requires:  DIM20 - WC Claim Number                                        *
.*****************************************************************************
.
VWCO0000  MOVELPTR  DIM20,FORM3
          IF        FORM3 <> 11
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.11 ",PRINEROR
            MOVE      "Incorrect WC Claim Number length",PRINDESC
            CALL      PERR0000
            GOTO      VWCO9999
          ENDIF
.
          TYPE      DIM20
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.12 ",PRINEROR
            MOVE      "WC Claim Number not numeric",PRINDESC
            CALL      PERR0000
          ENDIF
.
VWCO9999  RETURN
+
.*****************************************************************************
.*                              VTAC0000               Called by: WPID0000   *
.*                   Validate the TAC Claim Number                           *
.* Requires:  DIM20 - TAC Claim Number                                       * .*****************************************************************************
.
VTAC0000  STRIP     DIM20                        * task 0815173
          MOVELPTR  DIM20,FORM3
          IF        FORM3 <> 7
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.13 ",PRINEROR
            MOVE      "Incorrect TAC Claim Number length",PRINDESC
            CALL      PERR0000
            GOTO      VTAC9999
          ENDIF
.
          TYPE      DIM20
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PID.3.14 ",PRINEROR
            MOVE      "TAC Claim Number not numeric",PRINDESC
            CALL      PERR0000
          ENDIF
.
VTAC9999  RETURN
+
.*****************************************************************************
.*                             CMAP0000            Called by: WPV10000       *
.* Check if there is a category code mapping record for dept/category/date   *
.* Requires: DEPTCODE - Department Code                                      *
.*           CATEGORY - Category                                             *
.*           MAPEDATE - End Date                                             *
.* Returns:  DIM3 - Category/Code                                            *
.*           MAPPFLAG - Mapped code flag                                     *
.*                 0 = no code mapping                                       *
.*                 1 = code mapping                                          *
.*****************************************************************************
.
CMAP0000  MOVE      ZERO,MAPPFLAG                * initialise mapped code flag
.
          PACK      KEY13,DEPTCODE,CATEGORY,MAPEDATE
          CALL      RDALVMP1                     * dept/category/date on file ?
          COMPARE   ZERO,OVRCD
          GOTO      CMAP1000 IF EQUAL            * yes
.
          CALL      RKALVMP1                     * no - read next record
          BRANCH    OVRCD,CMAP9999               * eof - finished
.
          MATCH     DEPTCODE,ALVMDEPT            * same department still ?
          GOTO      CMAP9999 IF NOT EQUAL        * no - finished
.
          MATCH     CATEGORY,ALVMCATG            * same category still ?
          GOTO      CMAP9999 IF NOT EQUAL        * no - finished
.
.         We have a valid mapping record
.
CMAP1000  MOVE      ALVMCODE,DIM3                * load mapped code
          MOVE      ONE,MAPPFLAG                 * set mapped code flag
.
CMAP9999  RETURN
+
.*****************************************************************************
.*                            SPCC0000             Called by: VMES0000       *
.*    Check if there is another subsequent PCC message waiting to be sent    *
.*    for this visit number.                                                 *
.* Requires: MESSCODE - Full message code (PPP-PCC)                          *
.*           SAVEURNO - U/R for visit/contact                                *
.*           SAVEVISN - Visit number                                         *
.*           SAVECONT - contact for visit                                    *
.*           SAVEDTTM - trigger date/time                                    *
.*           SAVERTYP - record type (1 = Episode)                            *
.*           SAVEACTN - action type                                          *
.*           SAVEPRGM - program type                                         *
.* Returns : EXIT  0 =  Subsequent message not found                         *
.*                 1 =  Subsequent message found                             *
.*                 2 =  Error repositioning                                  *
.*****************************************************************************
.
SPCC0000  BRANCH    SAVEPRGM,SPCC0100:             1 = HARP
                             SPCC0100:             2 = HBPCCT
                             SPCC8000:             3 = Medi-Hotel
                             SPCC0100:             4 = Palliative Care
                             SPCC0100:             5 = Post Acute Care
                             SPCC0100:             6 = RIR
                             SPCC0100:             7 = SACS
                             SPCC0100:             8 = Specialist O/P Clinic
                             SPCC0100              9 = TCP
.
SPCC0100  MOVE      SAVEDTTM,WORKDTTM            * save the date/time of PCC
.
          PACK      KEY49,SAVEURNO,SP1,ZERO,SAVEVISN,SAVECONT,MESSCODE:
                          SAVEDTTM,SAVERTYP,SAVEACTN
          CALL      RSTEMP2                      * position on U/R
SPCC0500  CALL      RKTEMP2                      * read next record
          BRANCH    OVRCD,SPCC9000               * eof - finished
.
          MATCH     MISCURNO,SAVEURNO            * same U/R still ?
          GOTO      SPCC9000 IF NOT EQUAL        * no - finished
.
          COMPARE   ZERO,MISCSTAT                * same status still ?
          GOTO      SPCC9000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCVISN,SAVEVISN            * same visit no. still ?
          GOTO      SPCC9000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCCONT,SAVECONT            * same contact no. still ?
          GOTO      SPCC9000 IF NOT EQUAL        * no - finished
.
          MATCH     MISCMTYP,MESSCODE            * same message still ?
          GOTO      SPCC9000 IF NOT EQUAL        * no - finished
.
          COMPARE   MISCRTYP,SAVERTYP            * same record type still ?
          GOTO      SPCC9000 IF NOT EQUAL        * no - finished
.
          MATCH     ANSC,MISCACTN                * change record ?
          GOTO      SPCC0500 IF NOT EQUAL        * no - get next record
.
.         We have found a subsequent PPP-PCC message to the one we are
.         processing.
.         First, reposition on the original PPP-PCC record we were processing.
.
SPCC8000  MOVE      "VPCC.11  ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,SPCC9200                * error repositioning
.
          MOVE      ONE,EXIT                     * yes - subsequent message
          GOTO      SPCC9999
.
SPCC9000  MOVE      "VPCC.12  ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,SPCC9200                * error repositioning
.
          MOVE      ZERO,EXIT                    * no subsequent message
          GOTO      SPCC9999
.
SPCC9200  MOVE      TWO,EXIT                     * fatal error
.
SPCC9999  RETURN
+
.*****************************************************************************
.*                               PREF0000          Called by: VMES0000       *
.*        Check for the last PPP message accepted, as REF messages are only  *
.*        sent in association with a PPP-PCC message and always with a       *
.*        datetime stamp after the PPP-PCC.                                  *
.*        If it was a PPP-PCB, then we only need to send REF-I12             *
.*        messages for any related referral-out records currently on         *
.*        allrhlaf.                                                          *
.*        If it was a PPP-PCD, then this would be invalid as a PPP-PCC       *
.*        can only follow a PPP-PCB or a PPP-PCC message (and an error       *
.*        would have been produced in VPCC0000).                             *
.*        If it was a PPP-PCC, then we need to check if any REF messages     *
.*        were sent in the batch and then either send REF-I14's followed by  *
.*        REF-I12 messages, or just send REF-I12 messages.                   *
.* Requires: WORKDTTM - date/time of the PPP-PCC message we are currently    *
.*                      processing.                                          *
.*****************************************************************************
.
PREF0000  MOVE      WORKDTTM,MISCDTTM            * load PPP-PCC date/time
.
.         Get the last PPP message accepted
.
          MOVE      SAVEURNO,PREVURNO
          MOVE      SAVEURNO,TEMPURNO
          MOVE      SAVEVISN,TEMPVISN
          MOVE      SP8,TEMPCONT
          MOVE      SAVEDTTM,TEMPDTTM
          MOVE      FIVE,TEMPRTYP
          MOVE      PPPPCC,MESSCODE
          MOVE      ONE,AMESFLAG                 * check accepted messages only
          CALL      PREV0000                     * PPP previously accepted ?
          BRANCH    EXIT,PREF5000                * no - send REF-I12's only
.
.         There was a previously accepted PPP message
.
          MATCH     "PPP-PCB",MESSMTYP           * previous PPP an add ?
          GOTO      PREF5000 IF EQUAL            * yes - send REF-I12's only
.
          MATCH     "PPP-PCD",MESSMTYP           * previous PPP a delete ?
          GOTO      PREF9000 IF EQUAL            * yes - finished
.
.         The previously accepted PPP message was a PPP-PCC, so now
.         check to see if any REF messages were sent in the same batch,
.         and if so, if the last message(s) was a REF-I12 or a REF-I14.
.
.         Given that we don't know if any of the previous referral-out data
.         has changed, been deleted or if new records have been added, we
.         need to send a REF-I14 message for each REF-I12 message that was
.         accepted in the batch, then send a REF-I12 message for each of the
.         current referral-out records on allrhlaf. We need to use PREVURNO
.         here as the last message sent may have been under a previous U/R and
.         hence TEMPURNO may have been changed in PREV0000.
.         
          PACK      KEY62,SAVEBNUM,TEN,PREVURNO,SAVEVISN,SP8,TILDA50
          CALL      RSALHDT2                     * position on batch number
PREF0500  CALL      RPALHDT2                     * read previous record
          BRANCH    OVRCD,PREF5000               * eof - finished
.
          MATCH     SAVEBNUM,ALHDBNUM            * same batch still ?
          GOTO      PREF5000 IF NOT EQUAL        * no - finished
.
          MATCH     "10",ALHDSTAT                * accepted status ?
          GOTO      PREF5000 IF NOT EQUAL        * no - finished
.
          MATCH     PREVURNO,ALHDURNO            * same U/R still ?
          GOTO      PREF5000 IF NOT EQUAL        * no - finished
.
          MATCH     SAVEVISN,ALHDVISN            * same visit ?
          GOTO      PREF5000 IF NOT EQUAL        * no - finished
.
          MATCH     REFI14,ALHDMTYP              * REF-I14 message ?
          GOTO      PREF5000 IF EQUAL            * yes - send REF-I12's only
.
          MATCH     REFI12,ALHDMTYP              * REF-I12 message ?
          GOTO      PREF2000 IF EQUAL            * yes - send REF-I14/REF-I12's
.
          GOTO      PREF0500
.
.         We have found a REF-I12 message which was sent and accepted
.         and now needs to be reversed with a REF-I14 message
.
PREF2000  MOVE      SAVEURNO,MISCURNO            * load saved U/R number
.                                                  in case U/R has been merged
          MOVE      WORKDTTM,MISCDTTM
          MOVE      ALHDVISN,MISCVISN            * load visit number
          MOVE      ALHDCONT,MISCCONT            * set contact number
          MOVE      ALHDRTYP,MISCRTYP            * set record type
          MOVE      ANSD,MISCACTN                * load action record type
          MOVE      ALHDVFLG,MISCVFLG            * load VINAH flag
          MOVE      REFI14,MISCMTYP              * load message type
          MOVE      ZERO,MISCSTAT                * load status
          MOVE      ONE,MISCSRCE                 * load record source
          MOVE      ALHDDEPT,MISCDEPT            * load department
          MOVE      ALHDPRGM,MISCPRGM            * load program type
          MOVE      ALHDWEBU,MISCWEBU            * load web user id
.
          MOVE      ALHDCRST,PATNCRST            * load carer residency status
          MOVE      ALHDCAVL,PATNCAVL            * load carer availability
          MOVE      ALHDLARR,PATNLARR            * load living arrangement
          MOVE      ALHDUACC,PATNUACC            * load usual accommodation
          MOVE      ALHDMREL,PATNMREL            * load carer's rel. to patient
          MOVE      ALHDDTHP,PATNDTHP            * load death place
          MOVE      ALHDOURN,PATNOURN            * initialise old U/R
.
          MOVE      ALHDRDAT,REFIRDAT            * load ref-in received date
          MOVE      ALHDOTRR,REFIOTRR            * load ref-in reason code (rej)
          MOVE      ALHDOTRC,REFIOTRC            * load ref-in reason code (can)
          MOVE      ALHDOUTC,REFIOUTC            * load referral status
          MOVE      ALHDCLUC,REFICLUC            * load clinical urgency cat.
          MOVE      ALHDCRDT,REFICRDT            * load clinical referral date
          MOVE      ALHDRADT,REFIRADT            * load received ack. date
          MOVE      SP8,REFILINK                 * initialise linked referral #
          MOVE      ALHDTRGS,REFITRGS            * load triage status
.
          MOVE      ALHDTRGD,EPISTRGD            * load triage date
          MOVE      ALHDSDAT,EPISSDAT            * load epsiode start date
          MOVE      ALHDEDAT,EPISEDAT            * load episode end date
          MOVE      ALHDFCFL,EPISFCFL            * load first consultancy flag
          MOVE      ALHDCPPT,EPISCPPT            * load compl. of treatment
          MOVE      ALHDIODT,EPISIODT            * load impairment onset date
          MOVE      ALHDACDD,EPISACDD            * load adv. care plan doc date
          MOVE      ALHDCPDD,EPISCPDD            * load epd. care plan doc. date
          MOVE      ALHDFABD,EPISFABD            * load epd. first appt bkd date
          MOVE      ALHDHDDT,EPISHDDT            * load epd. hospital disch date
          MOVE      ALHDFNAD,EPISFNAD            * load epd. not. 1st appt. date
          MOVE      ALHDENDR,EPISENDR            * load episode end reason
          MOVE      ALHDMFLG,EPISMFLG            * load malignancy flag
          MOVE      ALHDCTYP,EPISCTYP            * load clinic type
          MOVE      ALHDCLID,EPISCLID            * load clinic id
          MOVE      ALHDEEPR,EPISEVPR            * load episode event program
          MOVE      ALHDUDT1,EPISDTAC            * load date referral accepted
.
          MOVE      ALHDCOMP,CONTCOMP            * load enct. funding source
          MOVE      ALHDPGRP,CONTPGRP            * load contact prof. group 0
          MOVE      ALHDPGR1,CONTPGR1            * load contact prof. group 1
          MOVE      ALHDPGR2,CONTPGR2            * load contact prof. group 2
          MOVE      ALHDPGR3,CONTPGR3            * load contact prof. group 3
          MOVE      ALHDPGR4,CONTPGR4            * load contact prof. group 4
          MOVE      ALHDDATE,CONTDATE            * load contact date
          MOVE      ALHDTIME,CONTTIME            * load contact time
          MOVE      ALHDPURP,CONTPURP            * load contact purpose
          MOVE      ALHDSTYP,CONTSTYP            * load contact session type
          MOVE      ALHDPRES,CONTPRES            * load client present status
          MOVE      ALHDDMOD,CONTDMOD            * load contact delivery mode
          MOVE      ALHDDSET,CONTDSET            * load contact delivery setting
          MOVE      ALHDPOFC,CONTPOFC            * load phase of care
          MOVE      ALHDPDPL,CONTPDPL            * load pref. death place
          MOVE      ALHDCMOD,CONTCMOD            * load contact care model
          MOVE      ALHDIFLG,CONTIFLG            * load contact linked visit
          MOVE      ALHDSPCP,CONTSPCP            * load contact spec. pall.
.                                                       care provider
          MOVE      ALHDCSET,CONTCSET            * load contact pref. care
.                                                       setting
          MOVE      ALHDCEPR,CONTEVPR            * load contact event program
.
          MOVE      ALHDRODT,REFORODT            * load referral-out date
          MOVE      ALHDSERT,REFOSERT            * load referral-out serv. type
          MOVE      ALHDPLAC,REFOPLAC            * load referral-out place
          MOVE      ALHDRCNT,REFORCNT            * load referral-out count
PREF2500  CALL      ASEC0000                     * add 1 sec to PCC date/time
          MOVE      MISCDTTM,WORKDTTM            * save new date/time
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 1
            CALL      WRTEMP1                    * write new temp record
          ELSE
            GOTO      PREF2500
          ENDIF
.
          GOTO      PREF0500                     * get previous batch record
.
.         Create new REF-I12 messages for each "03" referral out
.         record on allrhlaf
.
PREF5000  CALL      RDST0000
.
.         Reposition on the original record we were processing
.
PREF9000  MOVE      "VPCC.13  ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,PREF9100                * error repositioning
.
          MOVE      ZERO,EXIT
          GOTO      PREF9999
.
PREF9100  MOVE      ONE,EXIT
.
PREF9999  RETURN
+
.*****************************************************************************
.*                             CKEP0000            Called by: PROC0000       *
.*    If using Event Program, check if this record is to be excluded from    *
.*    the extract (applies to all program types).                            *
.* Returns:   EXIT   0 = Exclude record from extract                         *
.*                   1 = Don't exclude record from extract                   *
.*                   2 = An error occurred so we can't determine yet if we   *
.*                       need to exclude or not.                             *
.*****************************************************************************
.
CKEP0000  IF        MISCRTYP <> 1 & MISCRTYP <> 2
            GOTO      CKEP9100                   * not episode or contact
          ENDIF
.
          MATCH     "1",ALCNDEVP                 * using event pgm parameter ?
          GOTO      CKEP9100 IF NOT EQUAL        * no
.
          MOVE      MISCURNO,PRINURNO
          MOVE      MISCVISN,PRINVISN
          MOVE      MISCCONT,PRINENCT
.
          MATCH     SP3,EPISEVPR                 * yes - eps. event pgm blank ?
          IF        @EQUAL
            MOVE      SP1,TCINDC2                * include event
            MOVE      SP1,SAVIND02
            GOTO      CKEP0500
          ENDIF
.
          PACK      KEY5,LOWCASEZ,ANSG,EPISEVPR
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "GEN.23   ",PRINEROR
            MOVE      "Episode Event Program is not on file",PRINDESC
            CALL      PERR0000
            GOTO      CKEP9200
          ENDIF
.
          MOVE      TCINDC2,SAVIND02             * save episode exclusion flag
.
.         Check if the record is an episode or a contact
.
CKEP0500  COMPARE   TWO,MISCRTYP                 * contact ?
          GOTO      CKEP5000 IF EQUAL            * yes
.
.         The record is for an episode, so check the episode level indicator
.         for exclusion.
.
CKEP1000  MATCH     ANSE,TCINDC2                 * exclude ?
          GOTO      CKEP9000 IF EQUAL            * yes
          GOTO      CKEP9100                     * no
.
.         We have a contact record, so see if it is to be included
.         or excluded and make sure it is compatible with the episode
.         event program value.
.
CKEP5000  MATCH     SP3,CONTEVPR                 * contact event pgm blank ?
          GOTO      CKEP9100 IF EQUAL            * yes - default to include
.
          PACK      KEY5,LOWCASEZ,ANSG,CONTEVPR
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "GEN.25   ",PRINEROR
            MOVE      "Contact Event Program is not on file",PRINDESC
            CALL      PERR0000
            GOTO      CKEP9200
          ENDIF
.
.         If the contact is set for exclusion, then this is fine as it is
.         compatible with the episode being set for either inclusion or 
.         exclusion.
.
          MATCH     ANSE,TCINDC2                 * exclude ?
          GOTO      CKEP9000 IF EQUAL            * yes
.
.         The contact is set for inclusion, so the episode must NOT be
.         set for exclusion, as a contact will always need a related
.         episode sent prior to it in the extract.
.
          MATCH     ANSE,SAVIND02                * episode excluded ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "GEN.26   ",PRINEROR
            MOVE      "Contact Event Program inconsistent with Episode",PRINDESC
            CALL      PERR0000
            GOTO      CKEP9200
          ENDIF
          GOTO      CKEP9100
.
CKEP9000  MOVE      ZERO,EXIT
          GOTO      CKEP9999
.
CKEP9100  MOVE      ONE,EXIT
          GOTO      CKEP9999
.
CKEP9200  MOVE      TWO,EXIT
.
CKEP9999  RETURN
+
.*****************************************************************************
.*                            REPH0000             Called by: MAIN0000       *
.*         Initialise print variables and print report header                *
.*****************************************************************************
.
REPH0000  MOVE      ZERO,ERRORCNT                * initialise error count
          MOVE      ZERO,CPAGENO                 * initalise print variables
          MOVE      ZERO,CNOUNDLN
          CALL      IBACLOCK                     * get current date/time
.
          CALL      HEAD0000                     * print report header
.
REPH9999  RETURN
+
.*****************************************************************************
.*                            REPT0000             Called by: MAIN0000       *
.*                    Print report tail                                      *
.*****************************************************************************
.
REPT0000  CALL      LINE0000
          PRINT     *N,*1,"Number of errors: ",ERRORCNT,*N,*N;
.
          IF        PARTLFLG = 1
            PRINT   *1,"Partial extract for same day period",*N,*N;
          ENDIF
.
          PRINT     *1,"*** End of Report ***";
.
          IF        VALDFLAG = 1
            UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PRINT     *40,"Extract Period from ",CPCDATE;
            UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PRINT     *71,"to ",CPCDATE
          ELSE
            PRINT     *N
          ENDIF
.
REPT9999  RETURN
+
.*****************************************************************************
.*                            SSEC0000             Called by: VPCB0000       *
.*               Subtract one second from date/time                          *
.* Requires: MISCDTTM - Date/time value (ccyymmddhhmmss)                     *
.* Returns : MISCDTTM - Date/time value (ccyymmddhhmmss) decremented by 1 sec*
.*****************************************************************************
.
SSEC0000  UNPACK    MISCDTTM,DIM8,HOURTM,MINTIME,SECTIME
          MATCH     "00",SECTIME
          IF        !@EQUAL
            MOVE      SECTIME,FORM2              * just decrement seconds
            SUB       ONE,FORM2
            MOVE      FORM2,SECTIME
            REP       " 0",SECTIME
            PACK      MISCDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      SSEC9999
          ENDIF
.
.         The seconds were "00", so reset these to "59" and decrement the
.         minutes
.
          MOVE      "59",SECTIME
          MATCH     "00",MINTIME
          IF        !@EQUAL
            MOVE      MINTIME,FORM2              * just decrement minutes
            SUB       ONE,FORM2
            MOVE      FORM2,MINTIME
            REP       " 0",MINTIME
            PACK      MISCDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      SSEC9999
          ENDIF
.
.         The minutes were "00", so reset these to "59" and decrement the
.         hours
.
          MOVE      "59",MINTIME
          MATCH     "00",HOURTM
          IF        !@EQUAL
            MOVE      HOURTM,FORM2              * just decrement hours
            SUB       ONE,FORM2
            MOVE      FORM2,HOURTM
            REP       " 0",HOURTM
            PACK      MISCDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      SSEC9999
          ENDIF
.
.         The hours were "00", so reset these to "23" and decrement the
.         date
.
          MOVE      "23",HOURTM
.
.         We need to decrement the date by 1 day
.
          UNPACK    DIM8,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON                       * get julian day
          SUB       ONE,JULDAY                   * decrement julian day
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                       * get new date
          PACK      MISCDTTM,CC,YY,MM,DD,ZERO6
          REP       " 0",MISCDTTM
.
SSEC9999  RETURN
+
.*****************************************************************************
.*                               GADM0000          Called by: WPV10000       *
.*        See if the patient was an inpatient at the time of the contact     *
.* Requires: CONTDATE - contact date (ccyymmdd)                              *
.*           CONTTIME - contact time (hh:mm:ss)                              *
.*           MISCURNO - patient U/R                                          *
.* Returns:  PV1002 - contact inpatient flag                                 *
.*****************************************************************************
.
GADM0000  PACK      KEY17,MISCURNO,SP20
          CALL      RSPTMI18                     * position on U/R
GADM0500  CALL      RKPTMI18                     * read next record
          BRANCH    OVRCD,GADM9999               * eof - finished
.
          MATCH     MISCURNO,AURNO               * same U/R still ?
          GOTO      GADM9999 IF NOT EQUAL        * no - finished
.
.         Check if the contact was prior to the admission (CAR 301450
.         added time check as well for same day)
.
          MATCH     ADATE,CONTDATE               * contact date < adm. date ?
          GOTO      GADM0500 IF LESS             * yes - get next record
          IF        @EQUAL
            MATCH     ATIME,CONTTIME             * contact time < adm. time ?
            GOTO      GADM0500 IF LESS           * yes - get next record
          ENDIF
.
.         The contact is on or after the admission, so check if the
.         patient was admitted when the contact took place.
.
          BRANCH    ASTAT,GADM0500:              * pre-admission
                          GADM9000:              * current admission
                          GADM1000:              * discharged
                          GADM9000:              * on-leave
                          GADM0500               * cancelled
.
          GOTO      GADM0500                     * shouldn't happen
.
GADM1000  MOVE      AADMNO,KEY8
          CALL      RDDSCH1                      * discharge record found ?
          BRANCH    OVRCD,GADM0500               * no - get next record
.
          MATCH     CONTDATE,DDATE               * discharge before contact ?
          GOTO      GADM0500 IF LESS             * yes - get next record
          GOTO      GADM9000 IF NOT EQUAL        * discharge date greater
.
.         Same day, so check times
.
          MATCH     CONTTIME,DTIME               * discharge before contact ?
          GOTO      GADM0500 IF LESS             * yes - get next record
.
.         Patient was admitted when contact took place
.
GADM9000  MOVE      ANSI,PV1002
.
GADM9999  RETURN
+
.*****************************************************************************
.*                             FLEP0000            Called by: WPV10000       *
.*       Find the earliest linked episode referral for the Referral In       *
.*       as the program/stream will default from the episode level.          *
.* Requires: MISCVISN - referral in visit number                             *
.* Returns:  SAVEFLNK - earliest linked episode visit number                 *
.*           EXIT  0 = Ok to continue                                        *
.*                 1 = Error                                                 *
.*****************************************************************************
.
FLEP0000  MOVE      SP8,SAVEDATE                 * initialise save date
          MOVE      SP8,SAVEFLNK                 * initialise first linked visit
.
          PACK      KEY16,MISCVISN,SP20
          CALL      RSALRLN1                     * position on referral in
FLEP0500  CALL      RKALRLN1                     * read next record
          BRANCH    OVRCD,FLEP8000               * eof - finished
.
          MATCH     MISCVISN,ALRLVISN            * same referral in still ?
          GOTO      FLEP8000 IF NOT EQUAL        * no - error
.
          MATCH     SP8,SAVEDATE                 * blank save date ?
          GOTO      FLEP5000 IF NOT EQUAL        * no - check if earliest date
.
.         First linked episode found
.
          MOVE      ALRLLNKV,SAVEFLNK            * save linked episode visit #
          MOVE      ALRLCDAT,SAVEDATE            * save linked date
.
.         See if this episode was the earliest linked episode and if so,
.         save the date and the visit number
.
FLEP5000  MATCH     SAVEDATE,ALRLCDAT
          GOTO      FLEP0500 IF NOT LESS
.
          MOVE      ALRLLNKV,SAVEFLNK            * save linked episode visit #
          MOVE      ALRLCDAT,SAVEDATE            * save linked date
          GOTO      FLEP0500
.
FLEP8000  MATCH     SP8,SAVEFLNK                 * linked visit found ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV1.10.8 ",PRINEROR
            MOVE      "No linked episodes for Referral In record",PRINDESC
            CALL      PERR0000
            GOTO      FLEP9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      FLEP9999
.
FLEP9100  MOVE      ONE,EXIT
.
FLEP9999  RETURN
+
.*****************************************************************************
.*                            LPGR0000             Called by: WPV10000       *
.*  Load program/stream for Referral In based on linked episode referral     *
.* Requires: SAVEDEPT - saved department                                     *
.*                      ALREDEPT for RRI messages (from 1st linked referral) *
.*           SAVEEVPR - saved episode program event (Cat zG)                 *
.*           SAVESDAT - saved episode start date                             *
.*                      ALREDACT or ALREUDT1 (from 1st linked referral)      *
.*           MISCDTTM - date and time of message being processed             *
.*****************************************************************************
.
.         Load Referral In program/stream (PV1.10 990086) for RRI messages.
.         Applies to all program types.
.
.         Check if the "Display Event Program on VINAH Internal Referral
.         and Encounter Screens" (ALCNDEVP) parameter is turned on and if it
.         is turned on, then use Cat zG instead of department to determine
.         program stream.  In such a scenario, if Cat zG is not set up for
.         program stream, then default back to using department to source
.         program stream.
.
LPGR0000  MATCH     "1",ALCNDEVP
          GOTO      LPGR0500 IF NOT EQUAL
.
          MATCH     SP3,SAVEEVPR                 * blank event program ?
          GOTO      LPGR0500 IF EQUAL            * yes - use department
.
          PACK      KEY5,LOWCASEZ,ANSG,SAVEEVPR
          CALL      RDCODE1                      * event program code on file ?
          BRANCH    OVRCD,LPGR0500               * no - use department
.
          MATCH     SP4,THCSCOD                  * blank HDP Default ?
          GOTO      LPGR0500 IF EQUAL            * yes - use department
.
.         The HDP Default has a value, so now proceed to get the program
.         stream value from the Cat lF record
.
          MOVE      THCSCOD,DIM3
          GOTO      LPGR1000
.
.         Either the "Display Event Program on VINAH Internal Referral
.         and Encounter Screens" (ALCNDEVP) parameter was turned on, but
.         Cat zG was not set up, or the parameter was turned off.  Therefore
.         use the department to source the program stream value.
.
LPGR0500  MATCH     SP3,SAVEDEPT                 * blank field ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.10.9 ",PRINEROR
            MOVE      "Department is blank",PRINDESC
            CALL      PERR0000
            GOTO      LPGR9999
          ENDIF
.
          MOVE      SAVEDEPT,KEY3
          CALL      RDALDEP1                     * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.10.10",PRINEROR
            MOVE      "Department (",PRINDESC
            ENDSET    PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      LPGR9999
          ENDIF
          MOVE      ALDEPRGS,DIM3                * load def. program/stream code
.
.         Now see if there is a mapped code which we need to use instead
.
LPGR1000  MOVE      SAVEDEPT,DEPTCODE
          PACK      CATEGORY,LOWCASEL,ANSF
          MOVE      SAVESDAT,MAPEDATE
          CALL      CMAP0000
.
          MATCH     SP3,DIM3                     * program/stream blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.10.11",PRINEROR
            MOVE      "Episode Program/Stream is blank",PRINDESC
            CALL      PERR0000
            GOTO      LPGR9999
          ENDIF
.
          PACK      KEY5,LOWCASEL,ANSF,DIM3
          CALL      RDCODE1                      * code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.10.12",PRINEROR
            MOVE      "Episode Program/Stream (Cat lF/",PRINDESC
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      LPGR9999
          ENDIF
.
          MATCH     SP4,THCSCOD                  * HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV1.10.13",PRINEROR
            MOVE      "Episode Program/Stream (Cat lF/",PRINDESC
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      LPGR9999
          ENDIF
.
          SQUEEZE   THCSCOD
          TYPE      THCSCOD                      * HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV1.10.14",PRINEROR
            MOVE      "Episode Program/Stream (Cat lF/",PRINDESC
            ENDSET    PRINDESC
            APPEND    DIM3,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      LPGR9999
          ENDIF
.
.         Check values based on program type.
.         ** Note: "0" is a valid generic value for all program types, so
.                  check for this first.
.
          MOVE      THCSCOD,DIM4
          RJUSTIFY  DIM4
          MOVE      DIM4,FORM4
          COMPARE   ZERO,FORM4                   * generic code ?
          GOTO      LPGR9000 IF EQUAL            * yes
.
          BRANCH    MISCPRGM,LPGR1100:           * HARP
                             LPGR1200:           * HBPCCT
                             LPGR1300:           * Medi-Hotel
                             LPGR1400:           * Palliative Care
                             LPGR1500:           * Post Acute Care
                             LPGR1600:           * RIR
                             LPGR1700:           * SACS
                             LPGR1800:           * Specialist O/P Clinic
                             LPGR1900            * TCP
.
.         Check valid values for HARP
.
LPGR1100  MATCH     "20150701",REFIRDAT
          IF        @LESS
            IF        FORM4 < 21 | (FORM4 > 27 & FORM4 <> 29)
              GOTO      LPGR8000
            ENDIF
          ELSE
            IF        FORM4 <> 27 & FORM4 <> 28
              GOTO      LPGR8000
            ENDIF
          ENDIF
          GOTO      LPGR9000
.
.         Check valid values for HBPCCT
.
LPGR1200  IF        FORM4 < 1300 | FORM4 > 1315
            GOTO      LPGR8000
          ENDIF
          GOTO      LPGR9000
.
.         Check valid values for Medi-Hotel
.
LPGR1300  IF        FORM4 <> 91
            GOTO      LPGR8000
          ENDIF
          GOTO      LPGR9000
.
.         Check valid values for Palliative Care
.
LPGR1400  IF        FORM4 <> 41
            GOTO      LPGR8000
          ENDIF
          GOTO      LPGR9000
.
.         Check valid values for Post Acute Care
.
LPGR1500  IF        FORM4 <> 31
            GOTO      LPGR8000
          ENDIF
          GOTO      LPGR9000
.
.         Check valid values for Residential In-Reach
.
LPGR1600  IF        FORM4 <> 1201
            GOTO      LPGR8000
          ENDIF
          GOTO      LPGR9000
.
.         Check valid values for SACS
.
LPGR1700  IF        FORM4 < 1 | (FORM4 > 9 & FORM4 <> 11 & FORM4 <> 19)
            GOTO      LPGR8000
          ENDIF
          GOTO      LPGR9000
.
.         Check valid values for Specialist O/P Clinics
.
LPGR1800  IF        FORM4 = 101 | FORM4 = 103 | FORM4 = 301 | FORM4 = 350 | FORM4 = 402 | FORM4 = 403 | FORM4 = 406
            GOTO      LPGR9000                   * valid single values
          ENDIF
          IF        FORM4 > 105 & FORM4 < 115
            GOTO      LPGR9000                   * 106 - 114 valid
          ENDIF
          IF        FORM4 > 115 & FORM4 < 120
            GOTO      LPGR9000                   * 116 - 119 valid
          ENDIF
          IF        FORM4 > 200 & FORM4 < 210
            GOTO      LPGR9000                   * 201 - 209 valid
          ENDIF
          IF        FORM4 > 309 & FORM4 < 314
            GOTO      LPGR9000                   * 310 - 313 valid
          ENDIF
          GOTO      LPGR8000
.
.         Check valid values for TCP
.
LPGR1900  IF        FORM4 <> 1101
            GOTO      LPGR8000
          ENDIF
          GOTO      LPGR9000
.
.         Invalid program/stream for program type
.
LPGR8000  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV1.10.15",PRINEROR
          MOVE      "Referral In Program/Stream (Cat lF/",PRINDESC
          ENDSET    PRINDESC
          APPEND    DIM3,PRINDESC
          APPEND    ") HDP Default not valid for program type",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      LPGR9999
.
LPGR9000  MOVE      THCSCOD,PV1010
.
LPGR9999  RETURN
+
.*****************************************************************************
.*                              GCID0000           Called by: WPV20000       *
.*   Get the clinic id from outbokaf or outcanaf, based on the visit number  *
.* Requires: MISCVISN - visit number of record being processed               *
.* Returns:  PV2023 - Contact Clinic Identifier                              *
.*           EXIT  0 = Clinic ID found                                       *
.*                 1 = Clinic ID not found                                   *
.*****************************************************************************
.
.         First see if there is a booking record for the visit (outbokaf)
.
GCID0000  MOVE      SP6,KEY6
          CALL      RDSSITA1                     * position at start of file
GCID0500  CALL      RDKSITA1                     * read next record
          BRANCH    OVRCD,GCID9100               * end of file - error
.
          MATCH     SP3,OSTFILE                  * file prefix blank ?
          GOTO      GCID0500 IF EQUAL            * yes - get next record
.
          PACK      FILENAMO,OSTFILE,FILBOKA6    * open outbokaf
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTBOKA6,FILENAMO
          TRAPCLR   IO
          BRANCH    OVRCD,GCID5000
.
          PACK      KEY36,MISCVISN,SP30
          CALL      RDSBOKA6                     * position on visit #
          CALL      RDKBOKA6                     * read next record
          IF        OVRCD = 1
            CLOSE     OUTBOKA6                   * eof - check outcanaf
            GOTO      GCID5000
          ENDIF
.
          MOVE      MISCVISN,FORM8
          COMPARE   FORM8,OBAOUTNO               * same visit still ?
          IF        !@EQUAL
            CLOSE     OUTBOKA6                   * no - check outcanaf
            GOTO      GCID5000
          ENDIF
.
          MATCH     SP6,OBACLIN                  * yes - blank clinic id ?
          IF        @EQUAL
            CLOSE     OUTBOKA6                   * yes - error
            GOTO      GCID9100
          ENDIF
.
.         A matching record has been found, so use this clinic id
.
          MOVE      OBACLIN,PV2023
          CLOSE     OUTBOKA6
          GOTO      GCID9000
.
.         There was no booking record for the visit, so check if it was
.         cancelled (outcanaf)
.
GCID5000  PACK      FILENAMO,OSTFILE,FILCANA1    * open outcanaf
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTCANA1,FILENAMO
          TRAPCLR   IO
          BRANCH    OVRCD,GCID0500
.
          MOVE      MISCVISN,KEY8
          CALL      RDOTCAN1                     * cancelled visit on file ?
          IF        OVRCD = 1
            CLOSE     OUTCANA1                   * no
            GOTO      GCID0500
          ENDIF
.
          MATCH     SP6,OPCNCLIN                 * yes - blank clinic id ?
          IF        @EQUAL
            CLOSE     OUTCANA1                   * yes - error
            GOTO      GCID9100
          ENDIF
.
.         A booking cancellation record was found, so use this clinic id
.
          MOVE      OPCNCLIN,PV2023
          CLOSE     OUTCANA1
.
GCID9000  MOVE      ZERO,EXIT
          GOTO      GCID9999
.
GCID9100  MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.23.1 ",PRINEROR
          MOVE      "Contact Clinic Identifier linked visit not found",PRINDESC
          CALL      PERR0000
          MOVE      ONE,EXIT
.
GCID9999  RETURN
+
.*****************************************************************************
.*                              GSDT0000           Called by: WPV10000       *
.*                     Get start date                         RDST0000       *
.* Requires: EPISDTAC - Date Referral Accepted (ccyymmdd)                    *
.*           REFIRADT - Receipt Acknowledgement Date (ccyymmdd)              *
.*           REFIRDAT - Referral Received Date (ccyymmdd)                    *
.* Returns:  STARTDAT - Episode Start Date (ccyymmdd)                        *
.*****************************************************************************
.
.         Use the date referral accepted field if populated, otherwise
.         use the referral receipt acknowledgement date, otherwise
.         use the date referral received
.
GSDT0000  MOVE      SP8,STARTDAT               * clear start date (CAR 301349)
.
.         If not SOP, and the referral is on or after 01/07/2017, then
.         use the triage date as the start date
.
          COMPARE   EIGHT,MISCPRGM             * SOP ?
          GOTO      GSDT1000 IF EQUAL          * yes - bypass
.
          MATCH     "20170701",REFIRDAT
          IF        !@LESS
            MATCH     SP8,EPISTRGD             * blank triage date ?
            GOTO      GSDT1000 IF EQUAL        * yes - bypass
.
            MOVE      EPISTRGD,STARTDAT        * no
            GOTO      GSDT9999
          ENDIF
.
GSDT1000  MATCH     SP8,EPISDTAC               * date referral accepted blank ?
          IF        !@EQUAL
            MOVE      EPISDTAC,STARTDAT        * no
            GOTO      GSDT9999
          ENDIF
.
          MATCH     SP8,REFIRADT               * receipt ackn. date blank ?
          IF        !@EQUAL
            MOVE      REFIRADT,STARTDAT        * no
            GOTO      GSDT9999
          ENDIF
.
          MATCH     SP8,REFIRDAT               * referral received date blank ?
          IF        !@EQUAL
            MOVE      REFIRDAT,STARTDAT        * no
          ENDIF
.
GSDT9999  RETURN
+
.*****************************************************************************
.*                              CTCG0000           Called by: WPV20000       *
.*        Use Cat CG to determine whether to use Clinic Id or Clinic Type    *
.*        to populate PV2.23 (Contact Clinic Identifier).                    *
.* Requires: MISCDEPT - department code                                      *
.* Returns : EXIT  0 = Clinic Id/Clinic Type found                           *
.*                 1 = Error - Unable to get valid Cat CG code and no linked *
.*                             appointment available to use                  *
.*                 2 = Unable to get valid Cat CG code so use linked appt.   *
.*           PV2023 - Clinic ID/Clinic Type    (where EXIT = 0)              *
.*****************************************************************************
.
.         Get the Cat CG record associated with the department
.
CTCG0000  MATCH     SP3,MISCDEPT                 * department code blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "PV2.23.8 ",PRINEROR
            MOVE      "Department is blank",PRINDESC
            CALL      PERR0000
            GOTO      CTCG9100
          ENDIF
.
          PACK      KEY5,ANSC,ANSG,MISCDEPT
          CALL      RDCODE1                      * department code on file ?
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "PV2.23.9 ",PRINEROR
            MOVE      "Category CG code (",PRINDESC
            ENDSET    PRINDESC
            APPEND    MISCDEPT,PRINDESC
            APPEND    ") not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      CTCG9100
          ENDIF
.
.         If associated number is set to "1", then use clinic type from
.         the Episode referral as the Contact Clinic Identifier
.
          COMPARE   ONE,TCFORM6
          GOTO      CTCG1000 IF NOT EQUAL
.
          MATCH     SP6,EPISCTYP
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV2.23.10",PRINEROR
            MOVE      "Clinic Type is blank",PRINDESC
            CALL      PERR0000
            GOTO      CTCG9100
          ENDIF
.
          MOVE      EPISCTYP,PV2023
          GOTO      CTCG9000
.
.         If associated number is set to "2", then use clinic id from
.         the Episode referral as the Contact Clinic Identifier
.
CTCG1000  COMPARE   TWO,TCFORM6
          GOTO      CTCG2000 IF NOT EQUAL
.
          MATCH     SP6,EPISCLID
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "PV2.23.11",PRINEROR
            MOVE      "Clinic ID is blank",PRINDESC
            CALL      PERR0000
            GOTO      CTCG9100
          ENDIF
.
          MOVE      EPISCLID,PV2023
          GOTO      CTCG9000
.
.         The associated number is not valid for clinic id or clinic
.         type, so check if there is a linked appointment.  If there
.         is, we can get the clinic id via the appointment, otherwise,
.         generate an error
.
CTCG2000  MATCH     SP8,CONTIFLG
          GOTO      CTCG9200 IF NOT EQUAL
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "PV2.23.12",PRINEROR
          MOVE      "Category CG (",PRINDESC
          ENDSET    PRINDESC
          APPEND    MISCDEPT,PRINDESC
          APPEND    ") Assoc. no. not valid",PRINDESC
          RESET     PRINDESC
          CALL      PERR0000
          GOTO      CTCG9100
.
CTCG9000  MOVE      ZERO,EXIT
          GOTO      CTCG9999
.
CTCG9100  MOVE      ONE,EXIT
          GOTO      CTCG9999
.
CTCG9200  MOVE      TWO,EXIT
.
CTCG9999  RETURN
+
.*****************************************************************************
.*                              CESD0000           Called by: VA030000       *
.*        Check that the Referral Accepted Date is populated and valid,      *
.*        as this value will be used for the Episode Start Date.             *
.*        If the Referral Accepted Date is also blank, then use the          *
.*        linked Receipt Acknowledgement Date.  If that is also              *
.*        blank, then use the linked Referral In Received Date.              *
.*        In addition, the Referral Accepted Date cannot be less than the    *
.*        Referral In Received Date, so if it is, then just use the          *
.*        Referral In Received Date to populate the field.                   *
.*        Note: This logic has been ported from the LDALLHDT program         *
.*        and performs the same function.                                    *
.* Requires: SAVELINK - The associated linked Referral In record for the     *
.*                      Episode.                                             *
.*           EPISDTAC - Referral Accepted Date                               *
.* Returns:  EPISDTAC - Referral Accepted Date                               *
.*****************************************************************************
.
.         First we need to get the associated Referral In record so that
.         we can use the Referral in Receipt Acknowledgement Date or the
.         Referral In Received Date as default values should they be required.
.
CESD0000  MOVE      SAVELINK,KEY8
          CALL      RDALREF1                     * Referral In record found ?
          BRANCH    OVRCD,CESD9999               * no
.
          MATCH     SP8,EPISDTAC                 * blank referral acc. date ?
          GOTO      CESD7000 IF NOT EQUAL        * no
.
          MOVE      ALREUDT5,EPISDTAC            * yes - load Rec Ackn Date
          MATCH     SP8,EPISDTAC                 * blank ref. accepted date ?
          GOTO      CESD8000 IF EQUAL            * yes
.
CESD7000  MATCH     ALREDREC,EPISDTAC            * valid date ?
          GOTO      CESD9999 IF NOT LESS         * yes
.
CESD8000  MOVE      ALREDREC,EPISDTAC            * no - load Ref. In Rec. Date
.
CESD9999  RETURN
+
.*****************************************************************************
.*                              PTYP0000           Called by: PROC0000       *
.*          Get the program types for this patient's messages as well as     *
.*          the relevant default PMI values for referral based fields.       *
.* Requires: Valid read of first temp file 1 record for a patient            *
.*           SAVKEY42 - saved key for the patient's first temp file record   *
.*           SAVEURNO - saved U/R for the patient                            *
.* Returns:  PRGARRAY - array of program types for the patient's messages    *
.*           SAVECRST - saved latest carer residency status value            *
.*           SAVECAVL - saved latest carer availability value                *
.*           SAVEUACC - saved latest patient's usual accommodation type value*
.*           SAVEMREL - saved latest main carer's relationship value         *
.*           SAVELARR - saved latest living arrangement value                *
.*           SAVEDTHP - saved latest death place value                       *
.*           EXIT  0 = Ok to continue                                        *
.*                 1 = Error repositioning                                   *
.*****************************************************************************
.
.         We are processing a new U/R number, so we need to loop through
.         all the records for this patient and record the program types
.         for all this patient's messages, as well as the latest values
.         for any referral level PMI fields which will be used to create
.         the A04 or A08 message.
.         We are already on the first record for the patient, so process
.         that, then loop through the rest of this patient's records.
.
PTYP0000  COMPARE   ZERO,MISCPRGM                * PMI record ?
          GOTO      PTYP8000 IF EQUAL            * yes - ignore
.
.         Check to see if the status of the Referral-In, or the associated
.         Referral-In was either Rejected or Cancelled and if so, then
.         ignore these records as the fields are not mandatory for these
.         statuses.
.
          BRANCH    MISCRTYP,PTYP1000:           * Episode
                             PTYP1000:           * Contact
                             PTYP8000:           * Merge
                             PTYP8000:           * PMI
                             PTYP8000            * Referral Out
                            
PTYP1000  MATCH     "5",REFIOUTC                 * rejected
          GOTO      PTYP8000 IF EQUAL            * yes
.
          MATCH     "4",REFIOUTC                 * cancelled ?
          GOTO      PTYP8000 IF EQUAL            * yes
.
          MOVE      ONE,PRGARRAY[MISCPRGM]       * load program type
.
          MATCH     SP3,PATNCRST                 * blank Carer Residency Status?
          IF        !@EQUAL
            MOVE      PATNCRST,SAVECRST          * no - save value
          ENDIF
.
          MATCH     SP3,PATNCAVL                 * blank Carer Availability ?
          IF        !@EQUAL
            MOVE      PATNCAVL,SAVECAVL          * no - save value
          ENDIF
.
          MATCH     SP3,PATNUACC                 * blank Usual Accomm. Type ?
          IF        !@EQUAL
            MOVE      PATNUACC,SAVEUACC          * no - save value
          ENDIF
.
          MATCH     SP3,PATNMREL                 * blank Main Carer's Rel'ship ?
          IF        !@EQUAL
            MOVE      PATNMREL,SAVEMREL          * no - save value
          ENDIF
.
          MATCH     SP3,PATNLARR                 * blank Living Arrangement ?
          IF        !@EQUAL
            MOVE      PATNLARR,SAVELARR          * no - save value
          ENDIF
.
          MATCH     SP3,PATNDTHP                 * blank Death Place ?
          IF        !@EQUAL
            MOVE      PATNDTHP,SAVEDTHP          * no - save value
          ENDIF
.
.         Finished processing this record, so get the next
.
PTYP8000  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PTYP9000               * eof - finished
.
          MATCH     SAVEURNO,MISCURNO            * same U/R still ?
          GOTO      PTYP0000 IF EQUAL            * yes
.
.         Reposition back on the first temp file 1 record for this patient
.
PTYP9000  MOVE      "PTYP.1   ",PRINEROR
          CALL      RPOS0000
          BRANCH    EXIT,PTYP9100                * error repositioning
.
          MOVE      ZERO,EXIT
          GOTO      PTYP9999
.
PTYP9100  MOVE      ONE,EXIT
.
PTYP9999  RETURN
+
.*****************************************************************************
.*                             LMRG0000            Called by: LTMP0000       *
.*       Load all the U/R numbers from waiting records into a temp file      *
.*       and determine if a merge record is required to be sent              *
.*****************************************************************************
.
.         We only need to execute this routine in the validation phase
.
LMRG0000  COMPARE   ZERO,VALDFLAG                * extraction phase ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,"Extracting:";  * yes
            GOTO      LMRG9999
          ENDIF
.
          DISPLAY   *P1:24,*EL,"Updating Merged U/R Numbers:";
.
.         Check if we are loading the temp file from scratch, or using
.         the old/new U/R fields from a previous load
.
          CALL      LOAD0000                     * temp file load completed ?
          BRANCH    EXIT,LMRG9999                * yes
.
          PACK      KEY42,SP1,ZERO,SP70
          CALL      RSALHDT1                     * position on waiting records
LMRG0500  CALL      RKALHDT1                     * read next record
          BRANCH    OVRCD,LMRG9999               * eof - finished
.
          MATCH     " 0",ALHDSTAT                * status still "waiting" ?
          GOTO      LMRG9999 IF NOT EQUAL        * no - finished
.
          MOVE      ALHDURNO,SAVEURNO
.
.         There may be records for both the old and the new U/R in an extract
.         if the merge occurred during the extract period.
.         Therefore if the new U/R is greater than the old U/R, we still
.         need to populate these records with zero in the old U/R, so
.         we can't just bypass the original new U/R records
.
          MATCH     SP8,ALHDOURN                 * U/R already processed ?
          GOTO      LMRG0500 IF NOT EQUAL        * yes - ignore
.
.         Load the temp file variables and write a record.
.         Just load the old U/R for now as we will determine later if we
.         need to merge to a new U/R
.
          MOVE      ALHDURNO,PATNOURN            * load old U/R
          MOVE      ALHDURNO,LASTURNO            * default last U/R merge
          MOVE      SP8,PATNNURN                 * clear new U/R
.
.         Initialise flag to indicate that no previous message has been
.         accepted by DHS for this U/R
.
          MOVE      ONE,PMESFLAG
.
.         Check if the old U/R number has been previously accepted by DHS
.
          PACK      KEY42,PATNOURN,TEN,TILDA50
          CALL      RSALHDT3                     * position on U/R number
          CALL      RPALHDT3                     * read previous record
          BRANCH    OVRCD,LMRG1000               * eof - no need for merge
.
          MATCH     PATNOURN,ALHDURNO            * same U/R still ?
          GOTO      LMRG1000 IF NOT EQUAL        * no - no need for merge
.
          MATCH     "10",ALHDSTAT                * same status still ?
          GOTO      LMRG1000 IF NOT EQUAL        * no - no need for merge
.
.         Set flag to indicate that a previous message has been
.         accepted by DHS for this U/R
.
          MOVE      ZERO,PMESFLAG
.
.         A previous message has been accepted by DHS under the old U/R
.         so see if this U/R has been merged and if so, get the current U/R
.
LMRG1000  MOVE      PATNOURN,SAVEOURN
          MOVE      PATNOURN,SAVENURN
.
LMRG1500  PACK      KEY17,THREE,SAVENURN,SP20
          CALL      RSPTMRG1                     * position on old U/R
          CALL      RKPTMRG1                     * read next record
          BRANCH    OVRCD,LMRG2000               * eof - finished
.
          COMPARE   THREE,PTMRSTAT               * same status still ?
          GOTO      LMRG2000 IF NOT EQUAL        * no - finished
.
          MATCH     SAVENURN,PTMROLUR            * same old U/R still ?
          GOTO      LMRG2000 IF NOT EQUAL        * no - finished
.
          MOVE      PTMRNWUR,SAVENURN            * load new U/R number
          IF        PMESFLAG = 0
            CALL      CSNT0000                   * see if merge already sent
          ENDIF
          GOTO      LMRG1500
.
LMRG2000  MATCH     SAVEOURN,SAVENURN            * has U/R changed ?
          GOTO      LMRG7000 IF EQUAL            * no - write temp file record
.
.         Now we need to update all the records with this old U/R to use
.         the new U/R
.
          CALL      MRGW0000
.
          BRANCH    PMESFLAG,LMRG8000            * no merge message required
.
          MATCH     LASTURNO,SAVENURN            * merge already sent ?
          IF        !@EQUAL
            MOVE      SAVENURN,PATNNURN          * no - load new U/R
            MOVE      LASTURNO,PATNOURN          * load last old U/R
          ENDIF
.
.         If the new U/R is not blank, then we need to send a merge message,
.         so write a record to the temp file for processing later.
.         If the new U/R is blank, then we need to set the old U/R field
.         (ALHDOURN) to zero to indicate this U/R has not been merged.
.
LMRG7000  MATCH     SP8,PATNNURN                 * merged U/R ?
          IF        !@EQUAL
            CALL      WRTEMP4                    * yes - write temp file record
          ELSE
            CALL      UPDW0000                   * no - update old U/R to zero
          ENDIF
.
.         Now we have finished processing this U/R, so position for the next
.         "Waiting" U/R number
.
LMRG8000  PACK      KEY42,SP1,ZERO,SAVEURNO,TILDA50
          CALL      RSALHDT1
          GOTO      LMRG0500
.
LMRG9999  RETURN
+
.*****************************************************************************
.*                             CSNT0000            Called by: LMRG0000       *
.*        The U/R has been merged, so check to see if a merge record         *
.*        (ADT-A40) has already been sent and if so, for which U/R's         *
.*                                                                           *
.* Requires: LASTURNO - last "merged to" U/R number                          *
.*           PTMRNWUR - new U/R read from patmrgaf record                    *
.* Returns:  LASTURNO - last "merged to" U/R number                          *
.*****************************************************************************
.
CSNT0000  MOVE      "ADT-A40",MESSCODE
          PACK      KEY49,PTMRNWUR,TEN,SP8,SP8,MESSCODE,ENDDATE,TILDA50
          CALL      RSALHDT5                     * position on U/R
CSNT1000  CALL      RPALHDT5                     * read previous record
          BRANCH    OVRCD,CSNT9999               * eof - finished
.
          MATCH     PTMRNWUR,ALHDURNO            * same new U/R still ?
          GOTO      CSNT9999 IF NOT EQUAL        * no - finished
.
          MATCH     "10",ALHDSTAT                * same status still ?
          GOTO      CSNT9999 IF NOT EQUAL        * no - finished
.
          MATCH     SP8,ALHDVISN                 * same visit still ?
          GOTO      CSNT9999 IF NOT EQUAL        * no - finished
.
          MATCH     SP8,ALHDCONT                 * same contact still ?
          GOTO      CSNT9999 IF NOT EQUAL        * no - finished
.
          MATCH     MESSCODE,ALHDMTYP            * same message type still ?
          GOTO      CSNT1000 IF NOT EQUAL        * no - get previous record
.
          MATCH     LASTURNO,ALHDOURN            * same old U/R number ?
          GOTO      CSNT1000 IF NOT EQUAL        * no - get previous record
.
.         We have a merge record, so save the last "merged to" U/R number
.
          MOVE      ALHDURNO,LASTURNO
.
CSNT9999  RETURN
+
.*****************************************************************************
.*                                LOAD0000       Called by: LTMP0000         *
.*        Check to see if we are loading the merged U/R's into the temp file *
.*        from scratch for the first time, or whether we can load using the  *
.*        old U/R field.                                                     *
.*        If the merged U/R's have already been processed, then the old U/R  *
.*        field (ALHDOURN) will be populated with "       0" (if there was   *
.*        no U/R merge) or with the old U/R (if a merge has occurred).       *
.*        If the merged U/R's haven't already been processed, then the old   *
.*        U/R field will be blank.                                           *
.* Returns: EXIT  0 = Need to load temp file from scratch                    *
.*                1 = Temp file already loaded from old/new U/R fields       *
.*****************************************************************************
.
LOAD0000  PACK      KEY42,SP1,ZERO,SP70
          CALL      RSALHDT1                     * position on U/R-Status
LOAD0500  CALL      RKALHDT1                     * read next record
          BRANCH    OVRCD,LOAD9100               * eof - finished
.
          MATCH     " 0",ALHDSTAT                * status "waiting" still ?
          GOTO      LOAD9100 IF NOT EQUAL        * no - finished
.
.         We have a waiting record so check if merges have been processed
.         (all the old U/R's will have a value)
.
          MATCH     SP8,ALHDOURN                 * U/R merges processed ?
          GOTO      LOAD9000 IF EQUAL            * no - finished
.
.         The merges have already been processed, so check if this U/R
.         has been merged (valid U/R in ALHDOURN) or not (zero U/R in
.         ALHDOURN)
.
          MATCH     "       0",ALHDOURN          * merged U/R ?
          GOTO      LOAD0500 IF EQUAL            * no - ignore record
.
.         This U/R has been merged, so load the temp file using
.         the old and new U/R number fields (ALHDOURN & ALHDURNO)
.         More than one old U/R can be merged to a single new U/R, so
.         we need to check each record for merges
.
          MOVE      ALHDOURN,PATNOURN            * load old U/R
          MOVE      ALHDURNO,PATNNURN            * load new U/R
          PACK      KEY16,PATNOURN,PATNNURN
          CALL      RATEMP4
          IF        OVRCD = 1
            CALL      WRTEMP4
          ENDIF
.
          GOTO      LOAD0500
.
LOAD9000  MOVE      ZERO,EXIT
          GOTO      LOAD9999
.
LOAD9100  MOVE      ONE,EXIT
.
LOAD9999  RETURN
+
.*****************************************************************************
.*                               CLNK0000          Called by: VI130000       *
.*     Where an RRI-I13 has a status of cancelled/rejected, we need to       *
.*     make sure that any linked Episode which is still active from a DHS    *
.*     perspective, is removed with a PCD prior to sending the RRI-I13.      *
.* Requires: SAVKEY24: key for the current referral record being processed   *
.*           SAVEOUTC: saved referral outcome                                *
.*****************************************************************************
.
.         Check if the status of the Referral In we are validating is
.         cancelled or rejected
.
CLNK0000  UNPACK    SAVKEY42,KEY8,DIM2,DIM14
          MOVE      REFIOUTC,FORM1
.
          IF        FORM1 <> 4 & FORM1 <> 5
            GOTO      CLNK9999
          ENDIF
.
.         The status is cancelled or rejected, so loop through the linked
.         episodes and check the last accepted PPP message sent to see if
.         it had a status of accepted
.
          PACK      KEY16,SAVEVISN,SP20
          CALL      RSALRLN1                     * position before Referral In
CLNK1500  CALL      RKALRLN1                     * read next record
          BRANCH    OVRCD,CLNK9999               * eof - finished
.
          MATCH     SAVEVISN,ALRLVISN            * same Referral In still ?
          GOTO      CLNK9999 IF NOT EQUAL        * no - finished
.
          MOVE      SAVEURNO,TEMPURNO
          MOVE      ALRLLNKV,TEMPVISN
          MOVE      SP8,TEMPCONT
          PACK      TEMPDTTM,STRTDATE,ZERO,ZERO,ZERO,ZERO,ZERO,ZERO
          MOVE      PPPPCD,MESSCODE
          MOVE      ONE,TEMPRTYP
          MOVE      ANSD,TEMPACTN
          MOVE      ONE,AMESFLAG                 * accepted messages only
          CALL      PREV0000                     * previous PPP found ?
          BRANCH    EXIT,CLNK1500                * no - check next episode
.
          MATCH     "PPP-PCD",MESSMTYP           * previous PPP a delete ?
          GOTO      CLNK1500 IF EQUAL            * yes - check next episode
.
          MATCH     "PPP-PCB",MESSMTYP           * previous PPP an add ?
          GOTO      CLNK2000 IF EQUAL            * yes - check status
.
          MATCH     "PPP-PCC",MESSMTYP           * previous PPP a change ?
          GOTO      CLNK2000 IF EQUAL            * yes - check status
.
.         Check the outcome of the previous PPP-PCB or PPP-PCC message
.         to see if it is still active
.
CLNK2000  BRANCH    PREVSTAT,CLNK3000:           * Active
                             CLNK3000:           * Closed
                             CLNK3000:           * Inactive
                             CLNK1500:           * Cancelled
                             CLNK1500            * Rejected
          GOTO      CLNK1500                     * Waiting
.
.         There is an active accepted Episode, so we need to send a PPP-PCD
.         before the RRI-I13.
.
CLNK3000  MOVE      ALHDURNO,MISCURNO
          MOVE      ZERO,MISCSTAT
          MOVE      DIM14,MISCDTTM
          CALL      SSEC0000
          MOVE      ALRLLNKV,MISCVISN
          MOVE      SP8,MISCCONT
          MOVE      ONE,MISCRTYP
          MOVE      ANSD,MISCACTN
          MOVE      "PPP-PCD",MISCMTYP
          MOVE      ONE,MISCSRCE
.
          PACK      KEY42,MISCURNO,MISCSTAT,MISCDTTM,MISCVISN,MISCCONT:
                          MISCRTYP,MISCACTN
          CALL      RATEMP1
          IF        OVRCD = 0
            MOVE      SAVEDTTM,DIM14
            CALL      FDTM0000
            MOVE      SAVEURNO,PRINURNO
            MOVE      SAVEVISN,PRINVISN
            MOVE      SAVECONT,PRINENCT
            MOVE      "VI13.5   ",PRINEROR
            MOVE      "Episode record already exists",PRINDESC
            CALL      PERR0000                   * print error message
            GOTO      VI139000
          ENDIF
.
.         Load the remainder of the episode fields based on the last record
.         accepted by DHS
.
          MOVE      ALHDCRST,PATNCRST
          MOVE      ALHDCAVL,PATNCAVL
          MOVE      ALHDLARR,PATNLARR
          MOVE      ALHDUACC,PATNUACC
          MOVE      ALHDMREL,PATNMREL
          MOVE      ALHDDTHP,PATNDTHP
.
          MOVE      ALHDRDAT,REFIRDAT
          MOVE      ALHDOTRR,REFIOTRR
          MOVE      ALHDOTRC,REFIOTRC
          MOVE      ALHDOUTC,REFIOUTC
          MOVE      ALHDCLUC,REFICLUC
          MOVE      ALHDCRDT,REFICRDT
          MOVE      ALHDRADT,REFIRADT
          MOVE      ALHDLINK,REFILINK
          MOVE      ALHDTRGS,REFITRGS
.
          MOVE      ALHDTRGD,EPISTRGD
          MOVE      ALHDSDAT,EPISSDAT
          MOVE      ALHDEDAT,EPISEDAT
          MOVE      ALHDFCFL,EPISFCFL
          MOVE      ALHDCPPT,EPISCPPT
          MOVE      ALHDIODT,EPISIODT
          MOVE      ALHDACDD,EPISACDD
          MOVE      ALHDCPDD,EPISCPDD
          MOVE      ALHDFABD,EPISFABD
          MOVE      ALHDHDDT,EPISHDDT
          MOVE      ALHDFNAD,EPISFNAD
          MOVE      ALHDENDR,EPISENDR
          MOVE      ALHDMFLG,EPISMFLG
          MOVE      ALHDCTYP,EPISCTYP
          MOVE      ALHDCLID,EPISCLID
          MOVE      ALHDEEPR,EPISEVPR
          MOVE      ALHDUDT1,EPISDTAC
.
          MOVE      SP3,CONTCOMP
          MOVE      SP10,CONTPGRP
          MOVE      SP10,CONTPGR1
          MOVE      SP10,CONTPGR2
          MOVE      SP10,CONTPGR3
          MOVE      SP10,CONTPGR4
          MOVE      SP8,CONTDATE
          MOVE      SP8,CONTTIME
          MOVE      SP3,CONTPURP
          MOVE      SP3,CONTSTYP
          MOVE      SP3,CONTPRES
          MOVE      SP3,CONTDMOD
          MOVE      SP3,CONTDSET
          MOVE      SP3,CONTPOFC
          MOVE      SP3,CONTPDPL
          MOVE      SP3,CONTCMOD
          MOVE      SP8,CONTIFLG
          MOVE      SP10,CONTSPCP
          MOVE      SP3,CONTCSET
          MOVE      SP3,CONTEVPR
.
          MOVE      SP8,REFORODT
          MOVE      SP9,REFOSERT
          MOVE      SP9,REFOPLAC
          MOVE      SP3,REFORCNT
.
          CALL      WRTEMP1                      * write new record
.
          GOTO      CLNK1500                     * get next linked episode
.
CLNK9999  RETURN
+
.*****************************************************************************
.*                                 OLDO0000        Called by: WRF10000       *
.*                        Old Outcome Logic                                  *
.*         Where triage code is not populated and referral is prior to       *
.*         01/07/2017, use both Referral Status and Priority to determine    *
.*         Referral Outcome (rather than triage code).                       *
.* Returns: EXIT  0 = Continue to populate Clinical Urgency (RF1.2)          *
.*                1 = Continue to populate Referral Identifier (RF1.6)       *
.*****************************************************************************
.
.         The status is either Waiting or Active, so use Priority to determine
.         if accepted or not.
.
OLDO0000  MATCH     SP3,REFICLUC
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "RF1.1.8  ",PRINEROR
            MOVE      "Priority is blank",PRINDESC
            CALL      PERR0000
            GOTO      OLDO9999
          ENDIF
.
          PACK      KEY5,ANSP,ANSR,REFICLUC
          CALL      RDCODE1
          IF        OVRCD = 1
            MOVE      MISCDTTM,DIM14
            CALL      FDTM0000
            MOVE      "RF1.1.9  ",PRINEROR
            MOVE      "Priority code (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") not on file",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      OLDO9999
          ENDIF
          MOVE      THCSCOD,SAVEHDPD             * save HDP Default
.
.         If Indicator 3 has a value of "A", then the referral is waiting
.         for additional information before being accepted, so set
.         Outcome to "98".
.
          MATCH     ANSA,TCINDC3
          IF        @EQUAL
            MOVE      NINTY8,RF1001              * ref. waiting additional info
            GOTO      OLDO9999
          ENDIF
.
.         If Indicator 2 has a value of "T", then the referral is being
.         triaged, so set Outcome to "99".
.
          MATCH     ANST,TCINDC2
          IF        @EQUAL
            MOVE      NINTY9,RF1001              * ref. processing in progress
            GOTO      OLDO9999
          ENDIF
.
.         We have an accepted referral, so we need to determine what value
.         to use for accepted.
.         For SOP post 30/06/2015, use the visit type from the first
.                 linked episode to determine if new (010) or revisit (020).
.         For non-SOP or SOP pre 01/07/2015, check if there is a dated renewal
.                 record (allrnwaf) for the visit.  Set to "3" (Renewal) if
.                 there is, otherwise, set to "1" (Accepted).
.
          MOVE      ONE,RF1001                   * accepted (default)
.
.         Check for a renewal audit record
.
          PACK      KEY24,MISCVISN,TILDA50
          CALL      RSALRNW1                     * position after visit
          CALL      RPALRNW1                     * read previous record
          IF        OVRCD = 1
            COMPARE   EIGHT,MISCPRGM             * eof - SOP ?
            GOTO      OLDO1000 IF EQUAL          * yes
            GOTO      OLDO2000                   * no - use default value
          ENDIF
.
          MATCH     MISCVISN,ALRNVISN            * same visit still ?
          IF        !@EQUAL
            COMPARE   EIGHT,MISCPRGM             * no - SOP ?
            GOTO      OLDO1000 IF EQUAL          * yes
            GOTO      OLDO2000                   * no - use default value
          ENDIF
.
          IF        MISCPRGM = 8
            MATCH     "20150701",REFIRDAT        * pre VINAH 11 ?
            GOTO      OLDO2000 IF LESS           * yes - use default value
.
            MOVE      "020",RF1001               * yes - set to Renewed
          ELSE
            MOVE      "3",RF1001                 * accepted renewed referral
          ENDIF
          GOTO      OLDO2000
.
.         This is an SOP referral, so get the visit type from the linked
.         episode record (alrestyp)
.
OLDO1000  MATCH     "20150701",REFIRDAT          * pre VINAH 11 ?
          GOTO      OLDO2000 IF LESS             * yes - use default value
.
          MOVE      "010",RF1001                 * accepted new appt (default)
.
          MATCH     SP8,SAVEFLNK                 * first linked episode blank ?
          GOTO      OLDO2000 IF EQUAL            * yes - use default value
.
.         Get the visit type from the linked episode allrefaf record
.
          MOVE      SAVEFLNK,KEY8
          CALL      RDALREF1                     * record on file ?
          BRANCH    OVRCD,OLDO2000               * no - reread original record
.
          MATCH     SP3,ALRESTYP                 * blank slot type ?
          GOTO      OLDO2000 IF EQUAL            * yes - reread original record
.
          PACK      KEY5,ANSC,ANSV,ALRESTYP
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,OLDO2000               * no - reread original record
.
          MATCH     SP1,TCINDC1                  * Indicator 1 blank ?
          GOTO      OLDO2000 IF EQUAL            * yes - reread original record
.
          MATCH     ANSN,TCINDC1                 * new visit ?
          IF        @EQUAL
            MOVE      "010",RF1001               * yes - set to New
            GOTO      OLDO2000
          ENDIF
.
          MATCH     ANSR,TCINDC1                 * revisit ?
          IF        @EQUAL
            MOVE      "020",RF1001               * yes - set to Renewed
            GOTO      OLDO2000
          ENDIF
.
.         SOP visit type not valid
.
          MOVE      MISCDTTM,DIM14
          CALL      FDTM0000
          MOVE      "RF1.1.7  ",PRINEROR
          MOVE      "Visit Type invalid for episode",PRINDESC
          CALL      PERR0000
.
.         Load Referral In Clinical Urgency Category (RF1.2 HL70280) for
.         SOP RRI-I12, RRI-I13 & RRI-I14 messages only.
.
OLDO2000  BRANCH    MISCPRGM,OLDO9999:           * HARP
                             OLDO9999:           * HBPCCT
                             OLDO9999:           * Medi-Hotel
                             OLDO9999:           * Palliative Care
                             OLDO9999:           * Post Acute Care
                             OLDO9999:           * RIR
                             OLDO9999:           * SACS
                             OLDO2050:           * Specialist O/P Clinic
                             OLDO9999            * TCP
.
.         The Referral Outcome is set to "010" or "020" (post 30/06/2015) or
.         "1" (pre 01/07/2015), or "3" for either date range, so this field
.         is mandatory given that it is an accepted SOP referral.
.
OLDO2050  MATCH     SP4,SAVEHDPD                 * saved HDP Default blank ?
          IF        @EQUAL
            MOVE      MISCDTTM,DIM14             * yes
            CALL      FDTM0000
            MOVE      "RF1.2.3  ",PRINEROR
            MOVE      "Referral In Clinical Urgency Category (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") HDP Default is blank",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      OLDO9999
          ENDIF
.
          STRIP     SAVEHDPD
          TYPE      SAVEHDPD                     * saved HDP Default numeric ?
          IF        !@EQUAL
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.2.4  ",PRINEROR
            MOVE      "Referral In Clinical Urgency Category (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") HDP Default not numeric",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      OLDO9999
          ENDIF
.
          MOVELPTR  SAVEHDPD,FORM1               * 1-digit code ?
          IF        FORM1 <> 1
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.2.5  ",PRINEROR
            MOVE      "Referral In Clinical Urgency Category (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") HDP Default not correct length",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      OLDO9999
          ENDIF
.
.         Check for valid values
.
          MOVE      SAVEHDPD,FORM1               * Valid HDP value ?
          IF        FORM1 < 1 | FORM1 > 2
            MOVE      MISCDTTM,DIM14             * no
            CALL      FDTM0000
            MOVE      "RF1.2.6  ",PRINEROR
            MOVE      "Referral In Clinical Urgency Category (Cat PR/",PRINDESC
            ENDSET    PRINDESC
            APPEND    REFICLUC,PRINDESC
            APPEND    ") HDP Default not valid",PRINDESC
            RESET     PRINDESC
            CALL      PERR0000
            GOTO      OLDO9999
          ENDIF
.
          MOVE      SAVEHDPD,RF1002
.
OLDO9999  RETURN
+
.*****************************************************************************
.*                                 CB2B0000        Called by: MAIN0000       *
.*                   Check Back-to-Back referral audit records               *
.*    Where the Episode has had the triage status updated from "not accepted"*
.*    to "accepted via the front-end and the triage status is subsequently   *
.*    cascaded through to update the linked Referral-In, the Episode audit   *
.*    record will always occur before the Referral-In audit record, even     *
.*    though they have the same date/time.                                   *
.*                                                                           *
.*    In this scenario, the Episode visit number may be less than the        *
.*    Referral-In visit number.  This will always be the case for Delacy     *
.*    records (STV only - where the Episode is created first via a HL7       *
.*    inbound message and then the Referral-In is created via the webPAS     *
.*    front-end from the Episode record), but may also happen from front-end *
.*    linking of previously unrelated referral records.                      *
.*                                                                           *
.*    Extracting these back to back records with the same audit date/time    *
.*    will result in the Episode preceeding the Referral-In, which means     *
.*    that DHS will receive an "accepted" Episode before they receive the    *
.*    "accepted" Referral-In. As such, they will return this as an E412      *
.*    error in the response XML file.                                        *
.*                                                                           *
.*    To avoid this situation, we need to check for back to back Episode and *
.*    Referral-In change records where the audit date/time, port and         *
.*    operator id are the same and where the visits are linked referrals.    *
.*    For any matching cases where the Episode visit number is greater than  *
.*    the Referral-In visit number, the date/time of the Referral-In record  *
.*    being loaded into allhdtaf is being changed to 1 sec before the        *
.*    Episode date/time.                                                     *
.*                                                                           *
.*    This will result in the Referral-In being sent before the Episode in   *
.*    the VINAH Extract file, thus avoiding the E412 error.                  *
.*****************************************************************************
.
.         This only needs to be run in validation phase
.
CB2B0000  COMPARE   ONE,VALDFLAG                 * validation phase ?
          GOTO      CB2B9999 IF NOT EQUAL        * no - finished
.
.         Clear all the save variables used for checking back-to-back records
.
          MOVE      SP20,SAVPDTTM
          MOVE      SP8,SAVPURNO
          MOVE      SP8,SAVPVISN
.
          DISPLAY   *P1:24,*EL,"Fixing potential E412 errors:";
.
          PACK      KEY42,SP1,ZERO,STRTDATE,SP70
CB2B0100  CALL      RSALHDT4                     * position at start of period
CB2B0500  CALL      RKALHDT4                     * read next record
          BRANCH    OVRCD,CB2B9999               * eof - get merge records
.
          MOVE      ALHDDTTM,DIM8
          MATCH     DIM8,ENDDATE                 * still in date range ?
          GOTO      CB2B9999 IF LESS             * no - finished
.
          MATCH     " 0",ALHDSTAT                * waiting record ?
          GOTO      CB2B9999 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P31:24,*V2LON,ALHDVISN,SP2,ALHDCONT;
.
.         We only need to execute this routine once for the date range,
.         so check if we have a message type in the first record and if so,
.         then we must have already run a previous validation run where
.         GTYP0000 populated this field and so we don't need to do this again.
.
          MATCH     SP7,ALHDMTYP                 * message type populated ?
          GOTO      CB2B9999 IF NOT EQUAL        * yes - finished
.
.         The scenario this routine is fixing only relates to change records,
.         where triage status is changed on the Episode from "not accepted"
.         to "accepted".  This applies to both the Episode and the linked
.         Referral-In record. So check if this is a change record.
.
          MATCH     "C",ALHDACTN                 * change record ?
          GOTO      CB2B0500 IF NOT EQUAL        * no - get next record
.
          MATCH     "0",ALHDRTYP                 * Referral-In record ?
          GOTO      CB2B1000 IF EQUAL            * yes - check if back-to-back
.
          MATCH     "1",ALHDRTYP                 * Episode record ?
          GOTO      CB2B0500 IF NOT EQUAL        * no - get next record
.
.         We have an Episode change record, so double check that it's an
.         internal referral record
.
          MATCH     "0",ALHDVFLG                 * Internal referral ?
          GOTO      CB2B0500 IF NOT EQUAL        * no - get next record
.
.         We have a valid Episode change record, so save the relevant data
.         variables and continue
.
          MOVE      ALHDURNO,SAVPURNO
          MOVE      ALHDDTTM,SAVPDTTM
          MOVE      ALHDVISN,SAVPVISN
          GOTO      CB2B0500
.
.         We have a Referral-In change record, so double check that it's a
.         master referral record
.
CB2B1000  MATCH     "1",ALHDVFLG                 * master referral ?
          GOTO      CB2B0500 IF NOT EQUAL        * no - get next record
.
.         Now check that all the relevant fields match up between
.         the Referral-In change record and the previous Episode change record
.
          MATCH     SAVPURNO,ALHDURNO            * same U/R number ?
          GOTO      CB2B0500 IF NOT EQUAL        * no - get next record
.
          MATCH     SAVPDTTM,ALHDDTTM            * same date/time ?
          GOTO      CB2B0500 IF NOT EQUAL        * no - get next record
.
.         The current change Referral-In record and the previous change
.         Episode records match, so now we need to check if the Episode visit
.         number is less than the Referral-In visit number.  This will always
.         be the case for Delacy records (STV only), but may also happen from
.         front-end linking of previously unrelated referral records.
.         Where the Episode visit number is less than the Referral-In visit
.         number, we will end up with an "accepted" Episode record appearing
.         before the "accepted" Referral-In record in the VINAH extract.  DHS
.         will see this as an Episode "accepted" when the Referral-In is
.         still not accepted and will therefore reject the record with an
.         E412 error.
.
          MATCH     ALHDVISN,SAVPVISN            * Episode visit < Ref-In visit?
          GOTO      CB2B0500 IF NOT LESS         * no - get next record
.
.         The Episode visit number is less than the Referral-In visit
.         number, so check that the Referral-In and Episode visits are linked
.
          PACK      KEY16,ALHDVISN,SAVPVISN
          CALL      RAALRLN1                     * linked visits ?
          BRANCH    OVRCD,CB2B0500               * no - get next record
.
.         Save the current record key so we can reposition after the update
.
          PACK      SAVKEY42,ALHDSTAT,ALHDDTTM,ALHDURNO,ALHDVISN,ALHDCONT:
                             ALHDRTYP,ALHDACTN
.
.         Subtract one second from the date/time of the Referral-In record
.         so that it will be extracted before the Episode record.
.
          UNPACK    ALHDDTTM,DIM8,HOURTM,MINTIME,SECTIME
          MATCH     "00",SECTIME
          IF        !@EQUAL
            MOVE      SECTIME,FORM2              * just decrement seconds
            SUB       ONE,FORM2
            MOVE      FORM2,SECTIME
            REP       " 0",SECTIME
            PACK      ALHDDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      CB2B9000
          ENDIF
.
.         The seconds were "00", so reset these to "59" and decrement the
.         minutes
.
          MOVE      "59",SECTIME
          MATCH     "00",MINTIME
          IF        !@EQUAL
            MOVE      MINTIME,FORM2              * just decrement minutes
            SUB       ONE,FORM2
            MOVE      FORM2,MINTIME
            REP       " 0",MINTIME
            PACK      ALHDDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      CB2B9000
          ENDIF
.
.         The minutes were "00", so reset these to "59" and decrement the
.         hours
.
          MOVE      "59",MINTIME
          MATCH     "00",HOURTM
          IF        !@EQUAL
            MOVE      HOURTM,FORM2              * just decrement hours
            SUB       ONE,FORM2
            MOVE      FORM2,HOURTM
            REP       " 0",HOURTM
            PACK      ALHDDTTM,DIM8,HOURTM,MINTIME,SECTIME
            GOTO      CB2B9000
          ENDIF
.
.         The hours were "00", so reset these to "23" and decrement the
.         date
.
          MOVE      "23",HOURTM
.
.         We need to decrement the date by 1 day
.
          UNPACK    ALHDDTTM,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON                       * get julian day
          SUB       ONE,JULDAY                   * decrement julian day
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON                       * get new date
          PACK      ALHDDTTM,CC,YY,MM,DD,HOURTM,MINTIME,SECTIME
          REP       " 0",ALHDDTTM
.
CB2B9000  CALL      UPALHDT4                     * update the Ref-In record
.
          MOVE      SAVKEY42,KEY42               * reposition after update
          GOTO      CB2B0100
.
CB2B9999  RETURN
+
.*****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                     *
.*****************************************************************************
.
.         Temporary File A - Index 1
.
RATEMP1   MOVE      ZERO,OVRCD
          READ      VINTEMP1,KEY42;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   READ      VINTEMP1,KEY42;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      VINTEMP1,KEY42;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                                   MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                                   MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                                   PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                                   REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                                   REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                                   EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                                   EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                                   EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                                   EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                                   CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                                   CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                                   CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                                   CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
.
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    VINTEMP1;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    VINTEMP1;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
WRTEMP1   MOVE      MISCRTYP,DMSCRTYP
          MOVE      MISCSTAT,DMSCSTAT
          WRITE     VINTEMP1,KEY42;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                                   MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                                   MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                                   PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                                   REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                                   REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                                   EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                                   EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                                   EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                                   EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                                   CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                                   CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                                   CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                                   CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          RETURN
.
UPTEMP1   MOVE      MISCRTYP,DMSCRTYP
          MOVE      MISCSTAT,DMSCSTAT
          UPDATE    VINTEMP1;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          RETURN
.
DETEMP1   DELETE    VINTEMP1,KEY42
          RETURN
.
.         Temporary File A - Index 2
.
RSTEMP2   READ      VINTEMP2,KEY49;;
          RETURN
.
RDTEMP2   MOVE      ZERO,OVRCD
          READ      VINTEMP2,KEY49;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                                   MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                                   MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                                   PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                                   REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                                   REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                                   EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                                   EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                                   EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                                   EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                                   CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                                   CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                                   CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                                   CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    VINTEMP2;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
RPTEMP2   MOVE      ZERO,OVRCD
          READKP    VINTEMP2;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
UPTEMP2   MOVE      MISCRTYP,DMSCRTYP
          MOVE      MISCSTAT,DMSCSTAT
          UPDATE    VINTEMP2;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          RETURN
.
.         Temporary File A - Index 3
.
RSTEMP3   READ      VINTEMP3,KEY49;;
          RETURN
.
RDTEMP3   MOVE      ZERO,OVRCD
          READ      VINTEMP3,KEY49;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                                   MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                                   MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                                   PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                                   REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                                   REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                                   EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                                   EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                                   EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                                   EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                                   CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                                   CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                                   CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                                   CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
RKTEMP3   MOVE      ZERO,OVRCD
          READKS    VINTEMP3;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
RPTEMP3   MOVE      ZERO,OVRCD
          READKP    VINTEMP3;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          GOTO      OVERCOND IF OVER
          MOVE      DMSCRTYP,MISCRTYP
          MOVE      DMSCSTAT,MISCSTAT
          RETURN
.
UPTEMP3   MOVE      MISCRTYP,DMSCRTYP
          MOVE      MISCSTAT,DMSCSTAT
          UPDATE    VINTEMP3;MISCURNO,MISCDTTM,MISCVISN,MISCCONT,DMSCRTYP:
                             MISCACTN,MISCVFLG,MISCMTYP,DMSCSTAT,MISCSRCE:
                             MISCDEPT,MISCPRGM,MISCWEBU,PATNCRST,PATNCAVL:
                             PATNLARR,PATNUACC,PATNMREL,PATNDTHP,PATNOURN:
                             REFIRDAT,REFIOTRR,REFIOTRC,REFIOUTC,REFICLUC:
                             REFICRDT,REFIRADT,REFILINK,REFITRGS,EPISTRGD:
                             EPISSDAT,EPISEDAT,EPISFCFL,EPISCPPT,EPISIODT:
                             EPISACDD,EPISCPDD,EPISFABD,EPISHDDT,EPISFNAD:
                             EPISENDR,EPISMFLG,EPISCTYP,EPISCLID,EPISEVPR:
                             EPISDTAC,CONTCOMP,CONTPGRP,CONTPGR1,CONTPGR2:
                             CONTPGR3,CONTPGR4,CONTDATE,CONTTIME,CONTPURP:
                             CONTSTYP,CONTPRES,CONTDMOD,CONTDSET,CONTPOFC:
                             CONTPDPL,CONTCMOD,CONTIFLG,CONTSPCP,CONTCSET:
                             CONTEVPR,REFORODT,REFOSERT,REFOPLAC,REFORCNT
          RETURN
.
.         Temporary File B - Index 1
.
RATEMP4   MOVE      ZERO,OVRCD
          READ      VINTEMP4,KEY16;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP4   READ      VINTEMP4,KEY16;;
          RETURN
.
RDTEMP4   MOVE      ZERO,OVRCD
          READ      VINTEMP4,KEY16;PATNOURN,PATNNURN
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP4   MOVE      ZERO,OVRCD
          READKS    VINTEMP4;PATNOURN,PATNNURN
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP4   MOVE      ZERO,OVRCD
          READKP    VINTEMP4;PATNOURN,PATNNURN
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP4   WRITE     VINTEMP4,KEY16;PATNOURN,PATNNURN
          RETURN
.
UPTEMP4   UPDATE    VINTEMP4;PATNOURN,PATNNURN
          RETURN
.
DETEMP4   DELETE    VINTEMP4,KEY16
          RETURN
.
.         Temporary File B - Index 2
.
RSTEMP5   READ      VINTEMP5,KEY16;;
          RETURN
.
RKTEMP5   MOVE      ZERO,OVRCD
          READKS    VINTEMP5;PATNOURN,PATNNURN
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Temporary File C - Index 1
.
RDTEMP6   MOVE      ZERO,OVRCD
          READ      VINTEMP6,KEY8;MRGURNUM,MRGURFLG
          GOTO      OVERCOND IF OVER
.
RSTEMP6   READ      VINTEMP6,KEY8;;
          RETURN
.
RKTEMP6   MOVE      ZERO,OVRCD
          READKS    VINTEMP6;MRGURNUM,MRGURFLG
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP6   WRITE     VINTEMP6,KEY8;MRGURNUM,MRGURFLG
          RETURN
.
DETEMP6   MOVE      MRGURNUM,KEY8
          DELETE    VINTEMP6,KEY8
          RETURN
.
.         Temporary File C - Index 2
.
RSTEMP7   READ      VINTEMP7,KEY9;;
          RETURN
.
RKTEMP7   MOVE      ZERO,OVRCD
          READKS    VINTEMP7;MRGURNUM,MRGURFLG
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP7   MOVE      ZERO,OVRCD
          READ      VINTEMP7,KEY9;MRGURNUM,MRGURFLG
          GOTO      OVERCOND IF OVER
.
UPTEMP7   UPDATE    VINTEMP7;MRGURNUM,MRGURFLG
          RETURN
+
.*****************************************************************************
.*        I/O Includes                                                       *
.*****************************************************************************
.
          INC       STD001IO
.
          INC       CALCAGE
          INC       CLALLREF
          INC       TFILENAM
          INC       VINAHCOM
.
          INC       ALLBIAIO/INC
          INC       ALLDEPIO/INC
          INC       ALLDIAIO/INC
          INC       ALLENCIO/INC
          INC       ALLHBTIO/INC
          INC       ALLHHDIO/INC
          INC       ALLHDTIO/INC
          INC       ALLITMIO/INC
          INC       ALLLNKIO/INC
          INC       ALLPRRIO/INC
          INC       ALLREFIO/INC
          INC       ALLRHLIO/INC
          INC       ALLRLNIO/INC
          INC       ALLRNWIO/INC
          INC       ALLSASIO/INC
          INC       ALLSEDIO/INC
          INC       ALLSERIO/INC
          INC       ALLVMPIO/INC
          INC       IBAPOSIO/INC
          INC       IBASEQIO/INC
          INC       OUTBOAIO/INC
          INC       OUTCANIO/INC
          INC       OUTSITIO/INC
          INC       PATCODIO/INC
          INC       PATDSCIO/INC
          INC       PATLINIO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATMRGIO/INC
          INC       PATWC1IO/INC
          INC       PATWMAIO/INC
          INC       PMSCCDIO/INC
          INC       PMSDAUIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PRIITMIO/INC
          INC       WEBERRIO/INC
          INC       WEBSECIO/INC
