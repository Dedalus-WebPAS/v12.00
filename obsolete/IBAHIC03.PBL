.******************************************************************************
.* System         : HIC Claims                                                *
.* Program        : IBAHIC03.PBL                                              *
.* Name           : Health Insurance Commission Claims Extract                *
.******************************************************************************
.* Date           : 29/04/2005                                                *
.* Author         : Steve Armstrong                                           *
.* Function       : Extract HIC Medclaims for a given batch number.           *
.*                  An extract file is created and then moved to the          *
.*                  appropriate directory for Messenger to pick up and send   *
.*                  to HIC.                                                   *
.*                                                                            *
.*                  Due to the fact that the claim header and voucher records *
.*                  contain fields for totals, we need to extract the data    *
.*                  out to temp files in the first instance. This will also   *
.*                  allow us to sort the items according to U/R number.       *
.*                  Once all the data has been written to the temp files, we  *
.*                  can then extract the data into the final extract file.    *
.*                                                                            *
.* Modifications  :                                                           *
.*                                                                            *
.*                                                                            *
.*   Note:     HIC      |  PAS                                                *
.*             ------   |  ------                                             *
.*             Claim    |  Batch                                              *
.*             Voucher  |  Patient Details                                    *
.*             Item     |  Item                                               *
.*                                                                            *
.*       V10.13.01 26/07/2018  Tracey Nguyen    TSK 0848506                   *
.*                 Matched PRPRPDOC with SP70 instead of SP6                  *
.*                 30/07/201   Richa Phogat     TSK 0848506                   *
.*                 Updated keylength for RSPRDO3 & RKPRDO3 from KEY28 to KEY32*
.*                 Matched PRDODOCT with SP70 instead of SP6                  *
.*       V10.05.01 21/10/2014  Ebon Clements    CAR 268970                    *
.*                 Change to use OUTCLIFD index 1 instead of index 2          *
.*       V10.02.02 08/04/2011  Steve Armstrong  CAR 241202                    *
.*                 Changes to cater for Indicator 1 of Cat RI (ALRERTYP)      *
.*                 to be "I" (Indefinite).                                    *
.*       V10.02.01 22/03/2011  Jill Parkinson    CAR 239574                   *
.*                 Increased printer variables                                *
.******************************************************************************
.*        V9.06.01 28/04/2006   J.Tan             CAR 99609                   *
.*                 Mods to set extension to 001 instead of 000                *
.*        V9.05.01 12/04/2006   J.Tan             CAR 99609                   *
.*                 Mods Test transmission to do Re-Extract                    *
.*        V9.05.B02 20/02/2006  Ebon Clements     CAR 76341                   *
.*                  Added referral and encounter file audit                   *
.*        V9.04.15 17/11/2005   J.Tan             CAR 77215                   *
.*                 Mods to batch status - EFT payment prior Action            *
.*        V9.04.14 17/08/2005   J.Tan             CAR 71442                   *
.*                 Recompile for HICPRCLM - mods to consolidation report      *
.*        V9.04.13 26/08/2005  Steve Armstrong    CAR 71173                   *
.*                 Mods to cater for voucher number allocation at batching.   *
.*                 Also added new batch statuses.                             *
.*                 Also added descriptions for service and payee providers.   *
.*                 17/08/2005   J.Tan             CAR 71442                   *
.*                 Recompile for HICPRCLM - mods to consolidation report      *
.*        V9.04.12 15/08/2005   Davin             CAR 71442                   *
.*                 Recomplie for HICPRCLM - mods to consolidation report      *
.*        V9.04.11 01/08/2005 J.Tan  CAR 69062                                *
.*                 Changed claim index 7 to include voucher no                *
.*        V9.04.10 22/07/2005   Davin             CAR 68623                   *
.*                 Added printer keyin for DB1N form print                    *
.*        V9.04.09 07/07/2005   J.Tan             CAR 64493                   *
.*                 Recompiled for HICPRCLM - Fixed printing free format prov  *
.*        V9.04.08 22/06/2005   J.Tan             CAR 64295                   *
.*                 Mods to use HCP Provider number if the Medical prac not set*
.*        V9.04.07 20/06/2005   J.Tan             CAR 56701                   *
.*                 Mods to print U/R no with msg of Provider number not found *
.*        V9.04.06 14/06/2005   Davin             CAR 56698                   *
.*                 Schedule DB1N form print if extract successful             *
.*                 Added keyin of web user id                                 *
.*                 14/06/2005   J.Tan             CAR 56701                   *
.*                 Mods to write to batch history file                        *
.*                 Mods to update transmission date                           *
.*        V9.04.05 08/06/2005   J.Tan             CAR 56701                   *
.*                 Mods to print consolidation report even not extracted      *
.*                 Mods to print all errors                                   *
.*        V9.04.04 06/06/2005   J.Tan             CAR 56701                   *
.*                 Fixed P*K on tempfile                                      *
.*        V9.04.03 01/06/2005   J.Tan             CAR 56701                   *
.*                 Recompiled for HICPRCLM                                    *
.*        V9.04.02 26/05/2005   J.Tan             CAR 56699                   *
.*                 Mods to print batch report                                 *
.*        V9.04.01 16/05/2005   Steve Armstrong   CAR 61331                   *
.*                 Mods to change from "General Services" format to           *
.*                 "Specialist Services" format.                              *
.******************************************************************************

          INC       STD001FD
          INC       RSHWEBDF
          INC       ALLCONFD/INC
          INC       ALLLNKFD/INC
          INC       ALLREFFD/INC
          INC       HICBTCFD/INC
          INC       HICCLMFD/INC
          INC       HICCITFD/INC
          INC       HICMCIFD/INC
          INC       HICHISFD/INC
          INC       IBACONFD/INC
          INC       IBAPRTFD/INC
          INC       OUTCLIFD/INC
          INC       OUTSITFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSHCPFD/INC
          INC       PMSHCLFD/INC
          INC       PRIDOCFD/INC
          INC       PRIPRAFD/INC
          INC       WEBCONFD/INC
	  INC       WEBSECFD/INC
          INC       WEBSCHFD/INC
.
.
MEDCLAIM  FILE      ASCII,FIXED=4096
.
.
. Transmission Header Segment
. ---------------------------
HEDSEG01  INIT      "*"           * Segment start flag
HEDSEG02  INIT      "T"           * Segment identifier (transmission header)
HEDSEG03  INIT      "S"           * Transmission group (general services)
HEDSEG04  INIT      "001"         * Number of Claims
HEDSEG05  DIM       6             * Date of transmission (ddmmyy)
HEDSEG06  INIT      "TP"          * Customer class
HEDSEG07  DIM       8             * Customer ID
HEDSEG08  INIT      "        "    * Filler 1
HEDSEG09  INIT      "M"           * Function ID (medicare)
HEDSEG10  DIM       1             * Test flag (live)
HEDSEG11  INIT      "        "    * Filler 2
.
.
. Claim Header Segment
. --------------------
CLMSEG01  INIT      "*"           * Segment start flag
CLMSEG02  INIT      "C"           * Segment identifier (claim header)
CLMSEG03  DIM       2             * Voucher count
CLMSEG04  DIM       1             * Claim ID - Prefix
CLMSEG05  DIM       4             * Claim ID - Number
CLMSEG06  INIT      "@"           * Claim ID - Suffix
CLMSEG07  DIM       6             * Claim Date (ddmmyy)
CLMSEG08  DIM       8             * Payee Provider
CLMSEG09  DIM       8             * Servicing Provider
CLMSEG10  DIM       8             * Total benefit amount
CLMSEG11  INIT      "     "       * Filler
.
.
. Voucher Type 2 Segment - Medicare Number
. ----------------------------------------
. (only used when medicare card number is known)
.
VCHSEG01  INIT      "*"           * Segment start flag
VCHSEG02  INIT      "V"           * Segment identifier (voucher)
VCHSEG03  INIT      "M"           * Voucher type (medicare number)
VCHSEG04  DIM       2             * No of items in voucher
.
VCHSEG05  DIM       6             * Referral request date (ddmmyy)
VCHSEG06  DIM       1             * Referral period Indicator
VCHSEG07  DIM       8             * Referring provider
.
VCHSEG08  DIM       9             * Medicare Number
VCHSEG09  DIM       1             * Issue # (Last digit of medicare number)
VCHSEG10  DIM       12            * First name OR Subnumerate medicare no.
.
VCHSEG11  INIT      "      "      * Location specific practice number
.
VCHSEG12  INIT      "            "       * Filler
.
.
. Item Segment
. ------------
ITMSEG01  INIT      "*"           * Segment start flag
ITMSEG02  INIT      "I"           * Segment identifier (item)
ITMSEG03  DIM       5             * Item Number
ITMSEG04  DIM       6             * Date of service (ddmmyy)
ITMSEG05  DIM       7             * Benefit assigned
ITMSEG06  INIT      "00"          * Filler 1
ITMSEG07  INIT      "  "          * Self determined
ITMSEG08  INIT      " "           * Filler 2
.
.
. LOCAL VARIABLES
. ---------------
BATCHKEY  DIM       33
BATCHNUM  DIM       5
BENEFITA  DIM       7
.
CALLPOSN  FORM      1
CMDLINE   DIM       80
CFILEPRE  DIM       3   * Current Open File Prefix for Outpatient Files
CLMCOUNT  FORM      3
.
DIM5      DIM       5
DIM6      DIM       6
DIM9      DIM       9
DIM15     DIM       15
DIM25     DIM       25
.
FIELD     FORM      2
.
ERRFLAG   FORM      1
EFILENAM  DIM       8
.
FILEEXTN  DIM       3
.
ITMCOUNT  FORM      2
ITMNUMBR  DIM       5
.
PYEEPROV   DIM       30
.
REFPROV   DIM       20
.
SELPRINT  DIM       6
SERVDATE  DIM       6
SERVPROV  DIM       30
.
TMPKEY    DIM       35[17]
.
USERID    DIM       10
.
VAR       DIM       127
VCHCOUNT  FORM      2
.
.
. PROGRAM CONSTANTS
. -----------------
SP60      INIT      "                              ":
                    "                              "
TILDA15   INIT      "~~~~~~~~~~~~~~~"
.
EXTRACT   INIT      "Extracted"
SENT      INIT      "Sent"
ACKNOW    INIT      "Acknowledged"
NACK      INIT      "Nack"
RECEIVOK  INIT      "Received-Ok"
RECEIVER  INIT      "Received-Error"
ACTIONED  INIT      "Actioned"
PAYMENT   INIT      "EFT Payment Received"
DEPVERF   INIT      "Deposit Verified"
CLOSED    INIT      "Closed"
.
PRGID     INIT      "IBAHIC03"
PRGNAM    INIT      "HIC Claims Extraction"
VERSION   INIT      "V10.13.01"
+
.******************************************************************************
.*                                  MAIN0000                                  *
.*                                 Main Module                                *
.******************************************************************************
.
MAIN0000  CALL      INIT0000                * Initialise variables & open files
          BRANCH    EXIT,MAIN9999           * not using medclaims
.
MAIN0500  CALL      OPTN0000                * select options
          BRANCH    EXIT,MAIN9999           * exit selected
          BRANCH    COPTION,MAIN1000:       * batch no. input
                            MAIN2000:
                            MAIN1000
.
.         Batch number input
.
MAIN1000  CALL      GBAT0000                * get batch number
          BRANCH    EXIT,MAIN0500           * nothing input
.
          GOTO      MAIN3000
.
.         Batch list selection
.
MAIN2000  CALL      DSPP0000                * Choose main option
          BRANCH    EXIT,MAIN0500           * EXIT
.
MAIN3000  CALL      PROC0000                * Process extraction
          BRANCH    COPTION,MAIN1000:       * go back to batch number input
                            MAIN2000:       * go back to batch list selection
                            MAIN1000
.
MAIN9999  CHAIN     PGM
          STOP
+
.*****************************************************************************
.*                                  INIT0000       Called by: MAIN0000       *
.*                       Initialise Variable & Open Files                    *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"allrefaf"
          OPEN      ALLREFA1,"allrefaf"
.
          DISPLAY   *P64:24,"alllnkaf"
          OPEN      ALLLNKA2,"alllnkaf"
.
          DISPLAY   *P64:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"pmshcpaf"
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmshclaf"
          OPEN      PMSHCLA1,"pmshclaf"
.
          DISPLAY   *P64:24,"hicbtcaf"
          OPEN      HICBTCA1,"hicbtcaf"
          OPEN      HICBTCA5,"hicbtcaf"
.
          DISPLAY   *P64:24,"hicclmaf"
          OPEN      HICCLMA1,"hicclmaf"
          OPEN      HICCLMA7,"hicclmaf"
.
          DISPLAY   *P64:24,"hiccitaf"
          OPEN      HICCITA1,"hiccitaf"
.
          DISPLAY   *P64:24,"hicmciaf"
          OPEN      HICMCIA1,"hicmciaf"
.
          DISPLAY   *P64:24,"hichisaf"
          OPEN      HICHISA1,"hichisaf"
.
          DISPLAY   *P64:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"outsitaf"
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"pmspx2af"
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pridoctf"
          OPEN      PRIDOCT3,"pridoctf"
.
          DISPLAY   *P64:24,"pripracf"
          OPEN      PRIPRAC1,"pripracf"
.
          DISPLAY   *P64:24,"websecaf"
          OPEN      WEBSECA1,"websecaf"
.
          DISPLAY   *P64:24,"ibaprtaf"
          OPEN      IBAPRTA1,"ibaprtaf"
.
          READ      CONTROLF,ZERO;*132,IBCNUMCI
          READ      CONTROLF,HUND03;*63,PTCNHICO
.
          MATCH     "1",IBCNUMCI
          IF        !@EQUAL
            DISPLAY   *P1:24,"Hospital not using Medclaims Interface.  "; 
            PRINT     *5,"Hospital not using Medclaims Interface.  "
            CALL      HITENTER
            GOTO      INIT9100
          ENDIF
.
INIT9000  MOVE      ZERO,EXIT
.         CALL      OPNPRINT
          GOTO      INIT9999
.
INIT9100  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*                                                                           *
.*    Returns:  EXIT    = FALSE (0)  exit selected                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION   1 = Input batch number                             *
.*                        2 = Batch list selection                           *
.*                        3 = Re-Extract                                     *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Batch Number Input":
                    *P1:6,*V2LON,TWO,*HOFF,". Batch List Selection":
                    *P1:7,*V2LON,THREE,*HOFF,". Re-Extract"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option :":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * batch number input
                            OPTN9000:            * batch list selection
                            OPTN9000             * Re-extract
.
          BEEP                                   * invalid input
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                        GBAT0000                 Called by: MAIN0000       *
.*            Get a valid batch number for extracting                        *
.* Returns:   EXIT  0 = Valid batch input                                    *
.*                  1 = Nothing entered                                      *
.*****************************************************************************
.
GBAT0000  KEYIN     *P1:12,*EF,"Batch Number    : ":
                    *P19:12,*V2LON,BATCHNUM
.
          PACK      BATCHNUM,BATCHNUM,SP5
          MATCH     SP5,BATCHNUM                 * anything entered ?
          GOTO      GBAT9100 IF EQUAL            * no - exit
.
          PACK      KEY33,BATCHNUM,SP30,SP10
          CALL      RSHCBTC1                     * position on batch no.
          CALL      RKHCBTC1                     * read next record
          BRANCH    OVRCD,GBAT8000               * eof - error
.
          MATCH     BATCHNUM,HCBTBTCH            * same batch number still ?
          GOTO      GBAT8000 IF NOT EQUAL        * no - error
.
          PRINT     *N,*1,"**** Batch Number: ",BATCHNUM,*N
          PACK      BATCHKEY,HCBTBTCH,HCBTPSRV,HCBTPMCI,HCBTPYEE
.
.         The batch record has been found, check for batch status
.
          COMPARE   THREE,COPTION
          GOTO      GBAT0200 IF NOT EQUAL
.
.         For Re-extract, batch status must not be still 'batched'
.
          MATCH     " 0",HCBTSTAT                * status "batched" ?
          GOTO      GBAT0400 IF NOT EQUAL
.
          PRINT     *5,"Batch status not valid - ",HCBTSTAT," - ",KEY20
          GOTO      GBAT8500
.
.         For Extract, batch status must be  still "batched".
.
GBAT0200  MATCH     " 0",HCBTSTAT                * status "batched" ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Batch status not valid.  ";
            UNPACK    SP70,KEY1,DIM1
            UNPACK    HCBTSTAT,KEY1,DIM1
            MOVE      ZERO,FORM1
            MOVE      DIM1,FORM1
            MOVE      SP70,KEY20
            MOVE      "Batched",KEY20
            LOAD      KEY20,FORM1,EXTRACT,SENT,ACKNOW,NACK,RECEIVOK,RECEIVER:
                                  PAYMENT,ACTIONED,DEPVERF,CLOSED
            PRINT     *5,"Batch status not valid - ",HCBTSTAT," - ",KEY20
            GOTO      GBAT8500
          ENDIF
.
.         Get the service provider description
.
GBAT0400  CALL      OPNOUT00                     * open outcliaf
.
          MOVE      SP30,SERVPROV                * init. serv. prov. desc.
          MATCH     SP6,HCBTCLID                 * clinic id blank ?
          IF        !@EQUAL
            PACK      KEY20,HCBTSITE,HCBTCLID,TILDA15     * no
            CALL      RDSCLIA1                   * posn on clinic id
            CALL      RDPCLIA1                   * read previous record
            IF        OVRCD = 0
              MATCH     HCBTSITE,OCASITE
              IF        @EQUAL
                MATCH     HCBTCLID,OCACLIN         * same clinic id still ?
                IF        @EQUAL
                  MOVE      OCADESC,SERVPROV       * yes - load def. serv. prov.
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          PACK      KEY32,HCBTPSRV,SP30
          CALL      RSPRDO3                      * posn on service provider
          CALL      RKPRDO3                      * read next record
          BRANCH    OVRCD,GBAT1000               * eof
.
          MATCH     HCBTPSRV,PRDOPROV            * same provider still ?
          IF        @EQUAL
            MATCH     SP70,PRDODOCT               * yes - dr, code blank ?
            IF        !@EQUAL
              PACK      KEY10,PRDODOCT,SP70      * no
              CALL      RDPMHCP1                 * pmshcpaf record found ?
              IF        OVRCD = 0
                MOVE      ONE,PACFRMT            * yes - format dr name
                MOVE      PMHCTITL,PACTITLE
                MOVE      PMHCSNAM,PACSNAME
                MOVE      PMHCGNAM,PACGNAME
                CALL      PACNAME
                MOVE      PACFNAME,SERVPROV
              ENDIF
            ENDIF
          ENDIF
.
.         Get the payee provider description
.
GBAT1000  MATCH     HCBTPYEE,HCBTPSRV            * payee prov same as serv prov?
          IF        @EQUAL
            MOVE      SERVPROV,PYEEPROV          * yes - load description
            GOTO      GBAT5000
          ENDIF
.
          MOVE      SP30,PYEEPROV                * init. payee prov. desc.
.
          MATCH     SP6,HCBTMPRA                 * blank medical practice ?
          GOTO      GBAT5000 IF EQUAL            * yes - leave desc. blank
.
          MOVE      HCBTMPRA,KEY6
          CALL      RDPRPR1                      * med. practice record found ?
          BRANCH    OVRCD,GBAT5000               * no
.
          MATCH     SP70,PRPRPDOC                * primary dr. blank ?
          GOTO      GBAT5000 IF EQUAL            * yes
.
          MOVE      PRPRPDOC,KEY10               * no
          CALL      RDPMHCP1                     * pmshcpaf record found ?
          IF        OVRCD = 0
            MOVE      "1",PACFRMT                * yes
            MOVE      PMHCTITL,PACTITLE
            MOVE      PMHCSNAM,PACSNAME
            MOVE      PMHCGNAM,PACGNAME
            CALL      PACNAME
            MOVE      PACFNAME,PYEEPROV
          ENDIF
.
GBAT5000  DISPLAY   *P1:13,"MCI             : ",*V2LON,HCBTPMCI,*HOFF:
                    *P1:14,"Payee Provider  : ",*V2LON,HCBTPYEE,*HOFF:
                    *P35:14,PYEEPROV:
                    *P1:15,"Service Provider: ",*V2LON,HCBTPSRV,*HOFF:
                    *P35:15,SERVPROV
.
          PRINT     *5,"MCI             : ",HCBTPMCI:
                    *N,*5,"Payee Provider  : ",HCBTPYEE:
                    *40,PYEEPROV:
                    *N,*5,"Service Provider: ",HCBTPSRV:
                    *40,SERVPROV,*N
.
.         Position on index 5 for this record as this is used for extracting
.
          PACK      KEY35,HCBTSTAT,HCBTPSRV,HCBTPMCI,HCBTPYEE,HCBTBTCH
          CALL      RDHCBTC5
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Batch record not found.  ";
            PRINT     *5,"Batch record not found - ",KEY35
            GOTO      GBAT8500
          ENDIF
          GOTO      GBAT9000                     * valid batch found
.
GBAT8000  DISPLAY   *P1:24,*EL,*B,"Batch number not on file.  ";
          PRINT     *5,"Batch number not on file."
.
GBAT8500  CALL      HITENTER
          GOTO      GBAT0000
.
GBAT9000  MOVE      ZERO,EXIT
          GOTO      GBAT9999
.
GBAT9100  MOVE      ONE,EXIT
.
GBAT9999  RETURN
+
.*****************************************************************************
.*                             DSPP0000               Called by:             *
.*               Display all the "Batched" claims                            *
.*****************************************************************************
.
DSPP0000  DISPLAY   *P1:3,*EF,*P1:5,*V2LON,*ULON,"Itm",*P5:5,"Batch Number":
                    *P11:5,"MCI     ",*P20:5,"Payee     ":
                    *P31:5,"Ser. Prov."
          MOVE      ONE,CPAGENO                  * initialise page count
          MOVE      FIVE,CVERT                   * Reset line number
          MOVE      ZERO,FIELD                   * Reset record count
.
          PACK      KEY35,SP1,ZERO,SP30,SP5
          CALL      RSHCBTC5                     * position in file
DSPP1000  CALL      RKHCBTC5                     * read next record
          BRANCH    OVRCD,DSPP5000               * end of file
.
          MATCH     " 0",HCBTSTAT                * status still "batched" ?
          GOTO      DSPP5000 IF NOT EQUAL        * no - finished display
.
          ADD       ONE,CVERT                    * increment line count
.
          COMPARE   TWENTY3,CVERT                * page full ?
          GOTO      DSPP4000 IF NOT LESS         * yes
.
DSPP3000  ADD       ONE,FIELD   
          DISPLAY   *P1:CVERT,*V2LON,FIELD,*HOFF,SP2,HCBTBTCH,SP1,HCBTPMCI:
                    SP1,HCBTPYEE,SP1,HCBTPSRV
          PACK      TMPKEY[FIELD],HCBTSTAT,HCBTPSRV,HCBTPMCI,HCBTPYEE,HCBTBTCH
          GOTO      DSPP1000
.
.         new page needed 
.
DSPP4000  BRANCH    CPAGENO,DSPP4500
.
.         in middle pages : Next & First options
.
DSPP4100  MOVE      "1",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPP9999:               * exit
                         DSPP7000:               * next
                         DSPP8000                * previous
          GOTO      DSPP6000                     * number entered
.
.         on first page : Next option
.
DSPP4500  MOVE      "2",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPP9999:               * exit
                         DSPP7000:               * next
                         DSPP5900                * previous
          GOTO      DSPP6000                     * number entered
.
.         end of data
.
DSPP5000  BRANCH    CPAGENO,DSPP5500
.
.         in middle pages : First option
.
DSPP5100  MOVE      "3",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPP9999:               * exit
                         DSPP5900:               * next
                         DSPP8000                * prev
          GOTO      DSPP6000                     * number entered
.
.         on first page : No options
.
DSPP5500  MOVE      "4",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPP9999:               * exit
                         DSPP5900:               * next
                         DSPP5900                * previous
          GOTO      DSPP6000                     * number entered
.
DSPP5900  BEEP
DSPP5910  BRANCH    CALLPOSN,DSPP4100,DSPP4500,DSPP5100,DSPP5500
.
.         number entered
.
DSPP6000  MOVE      TMPKEY[FORM2],KEY35
          CALL      RDHCBTC5
          BRANCH    OVRCD,DSPP5900
.
          PACK      BATCHKEY,HCBTBTCH,HCBTPSRV,HCBTPMCI,HCBTPYEE
.
          CALL      PROC0000                     * process extraction
.
          GOTO      DSPP0000
.
.         next screen selected
.
DSPP7000  MOVE      SIX,CVERT
          ADD       ONE,CPAGENO
          DISPLAY   *P1:CVERT,*EF
          MOVE      ZERO,FIELD
          GOTO      DSPP3000
.
.         previous screen selected
.
DSPP8000  MOVE      TMPKEY[1],KEY35
          CALL      RDHCBTC5                     * reread first record on screen
          MOVE      ZERO,FORM2                   * initialise count
          WHILE     FORM2 <= 16
            CALL      RPHCBTC5                   * read previous record
.
            MATCH     "0",HCBTSTAT               * status still "batched" ?
            GOTO      DSPP0000 IF NOT EQUAL      * no - start from 1st page
.
            ADD       ONE,FORM2                  * increment count
          DO
.
          MOVE      SIX,CVERT                    * reset line position
          SUB       ONE,CPAGENO                  * decrement page number
          MOVE      ZERO,FIELD                   * reset record counter
          DISPLAY   *P1:CVERT,*EF
          GOTO      DSPP3000
.
DSPP9999  RETURN
+
.*****************************************************************************
.*                  KEYA0000                    Called by : DSPP0000         *
.*        Keyin response to question                                         *
.*        Returns : EXIT = 0      Number entered                             *
.*                  EXIT = 1      Exit   entered                             *
.*                  EXIT = 2      Next   entered                             *
.*                  EXIT = 3      Prev   entered                             *
.*****************************************************************************
.
KEYA0000  DISPLAY   *P1:24,*EL,"Select item, e(",*V2LON,ANSX,*HOFF,")it";
          MOVE      TEN9,CCOL
          IF        CALLPOSN = 1 | CALLPOSN = 2
            DISPLAY   ", (",*V2LON,ANSN,*HOFF,")ext";
            ADD       EIGHT,CCOL
          ENDIF
          IF        CALLPOSN = 1 | CALLPOSN = 3
            DISPLAY   ", p(",*V2LON,ANSR,*HOFF,")evious";
            ADD       TEN2,CCOL
          ENDIF
.
          DISPLAY   " :  ";
          ADD       FOUR,CCOL
.
KEYA1000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
          PACK      DIM2,DIM2,SP2
          UNPACK    DIM2,ANS,ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSX,ANS                * exit selected ?
          GOTO      KEYA9100 IF EQUAL       * yes
.
          MATCH     ANSN,ANS                * next page selected ?
          GOTO      KEYA9200 IF EQUAL       * yes
.
          MATCH     ANSR,ANS                * previous page selected ?
          GOTO      KEYA9300 IF EQUAL       * yes
.
          TYPE      DIM2
          GOTO      KEYA5000 IF EQUAL       * a number entered
.
KEYA1500  BEEP
          GOTO      KEYA1000
.
.         number entered directly
.
KEYA5000  MOVE      DIM2,FORM2
.
          COMPARE   FORM2,ZERO              * number < 1 ?
          GOTO      KEYA1500 IF NOT LESS    * yes - invalid
.
          COMPARE   FORM2,FIELD             * number in range ?
          GOTO      KEYA1500 IF LESS        * no - too high
.
.         set the exit flag
.
          MOVE      ZERO,EXIT               * number selected
          GOTO      KEYA9999
.
KEYA9100  MOVE      ONE,EXIT                * exit
          GOTO      KEYA9999
.
KEYA9200  MOVE      TWO,EXIT                * next
          GOTO      KEYA9999
.
KEYA9300  MOVE      THREE,EXIT              * previous
          GOTO      KEYA9999
.
KEYA9999  RETURN
+
.*****************************************************************************
.*                             PROC0000          Called by: MAIN0000         *
.*          Process a Medclaims extraction                                   *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:23,*EF,"Extracting batch ",*V2LON,HCBTBTCH,*HOFF,"...";
          CALL      CONTQST                      * Ok to continue ?
          BRANCH    CEXIT,PROC1000:              * Yes
                          PROC9999:              * No
                          PROC9999               * Cancel
.
.         Keyin WEB User ID for DB1N print scheduling (ibahic06)
.
PROC1000  KEYIN     *P1:24,*EL,"WEB User ID for DB1N print: ",*V2LON,USERID
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      PROC0000 IF EQUAL
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          IF        OVRCD=1
            DISPLAY    *P1:24,*EL,"Invalid User ID  ";
            CALL       HITENTER
            GOTO       PROC1000
          ENDIF
.
.         Keyin Printer for DB1N print scheduling (ibahic06)
.
PROC1500  MOVE      "S  ",SELPRINT
          KEYIN     *P1:24,*EL,"Printer for DB1N print: ",*V2LON,*RV,SELPRINT
          PACK      SELPRINT,SELPRINT,SP70
          MATCH     SP70,SELPRINT
          GOTO      PROC1000 IF EQUAL
.
.         See if this is a "Test" or "Live" transmission
.
PROC1700  KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANST,*HOFF,")est or (",*V2LON:
                    *DV,ANSL,*HOFF,")ive transmission?":
                    *P32:24,*V2LON,HEDSEG10;
.
          PACK      HEDSEG10,HEDSEG10,SP1
          REP       UPPLOW,HEDSEG10
.
          MATCH     ANST,HEDSEG10                * test ?
          GOTO      PROC2000 IF EQUAL            * yes
.
          MATCH     ANSL,HEDSEG10                * live ?
          IF        @EQUAL
            MOVE      SP1,HEDSEG10               * yes
            GOTO      PROC2000
          ENDIF
.
          GOTO      PROC1500                     * invalid input
.
.         Start processing the extract file
.
PROC2000  DISPLAY   *P1:24,*EL,"Processing:";
.
          MOVE      ZERO,ERRFLAG
.
.         Create and open the extract file, then close and delete it.  This
.         will remove the file if it already exists. Then create and open it
.         again.
.
          PACK      EFILENAM,HCBTPMCI,SP8
          REP       " 0",EFILENAM
          PREP      MEDCLAIM,EFILENAM            * create/open extract file
          CLOSE     MEDCLAIM,DELETE              * delete extract file
          PREP      MEDCLAIM,EFILENAM            * create/open extract file
.
.         All the extract data has been loaded, so write the extract file.
.
          CALL      FHED0000                     * write batch details
          BRANCH    ERRFLAG,PROC9100             * error occurred
.
          CLOSE     MEDCLAIM                     * close extract file
.
.         Move the file to the Messenger outbound directory
.
          CALL      MFIL0000                     * move file to outbound dir.
          BRANCH    EXIT,PROC9100                * file move failed
.
.         Only update hicbtcaf fields for a live transmission
.
          MATCH     SP1,HEDSEG10                 * live transmission ?
          IF        @EQUAL
            PACK      HCBTSTAT,SP1,ONE           * yes - update status to "sent"
            PACK      HCBTEFNM,EFILENAM,DOT,FILEEXTN * record extract filename
            PACK      HCBTTDAT,CCC,CYY,CMM,CDD
            REP       " 0",HCBTTDAT
            CALL      UPHCBTC5
            CALL      WRTHIS00
          ENDIF
.
          DISPLAY   *P1:23,*EF,*P1:24,"Extraction completed.  ";
          PRINT     *5,"Extraction Completed. ",*N
          CALL      HITENTER
.
          CALL      SDB10000                     * Schedule DB1N print
          CALL      HICPRCLM                     * Print Consolidation report
          GOTO      PROC9999
.
PROC9100  DISPLAY   *P1:23,*EF,*P1:24,"Extract not created.  ";
          PRINT     *5,"Extract not created. "
          CALL      HITENTER
          CALL      HICPRCLM                     * Print Consolidation report
.
PROC9999  
.         CALL      CLSPRINT
          RETURN
+
.*****************************************************************************
. Write record to batch history audit file
.*****************************************************************************
WRTHIS00  MOVE      HCBTBTCH,HCHSBTCH            * Batch Number
          MOVE      HCBTPMCI,HCHSPMCI            * MCI
          MOVE      HCBTPYEE,HCHSPYEE            * Payee Provider No
          MOVE      HCBTPSRV,HCHSPSRV            * Service Provider No
.
          PACK      HCHSTDAT,CCC,CYY,CMM,CDD     * Transaction Date
          REP       " 0",HCHSTDAT
          CLOCK     TIME,HCHSTTIM                * Transaction Time
.
          MOVE      USERID,HCHSTUID              * Web user id
          MOVE      HCBTSTAT,HCHSSTAT
          MOVE      SP70,HCHSSPAR                * Spare
.
          PACK      KEY49,HCHSBTCH,HCHSPSRV,HCHSPMCI,HCHSPYEE,HCHSTDAT:
                          HCHSTTIM,SP70
          CALL      RAHCHIS1
          IF        OVRCD=1
            CALL      WRHCHIS1                   * Write History Record
          ENDIF
.
WRTHIS99  RETURN
+
.*****************************************************************************
.*                            GITM0000             Called by: FITM0000       *
.*            Format the item details                                        *
.* Requires:  Valid read on hiccitaf record                                  *
.* Returns:   ITMNUMBR - 5 character item number (right just., zero filled)  *
.*            SERVDATE - Service date (ddmmyy)                               *
.*            BENEFITA - Benefit assigned                                    *
.*****************************************************************************
.
GITM0000  MOVE      HCCIITMN,DIM9
          STRIP     DIM9
          MOVELPTR  DIM9,FORM1                   * get length of item number
          BRANCH    FORM1,GITM1000:              * 1 character long
                          GITM2000:              * 2 characters long
                          GITM3000:              * 3 characters long
                          GITM4000:              * 4 characters long
                          GITM5000               * 5 characters long
.
GITM1000  PACK      ITMNUMBR,SP4,DIM9            * 00009 format
          GOTO      GITM6000
.
GITM2000  PACK      ITMNUMBR,SP3,DIM9            * 00099 format
          GOTO      GITM6000
.
GITM3000  PACK      ITMNUMBR,SP2,DIM9            * 00999 format
          GOTO      GITM6000
.
GITM4000  PACK      ITMNUMBR,SP1,DIM9            * 09999 format
          GOTO      GITM6000
.
GITM5000  MOVE      DIM9,ITMNUMBR                * 99999 format
.
GITM6000  REP       " 0",ITMNUMBR                * update with leading zeroes
.
          UNPACK    HCCIIDAT,CCENT,CYEAR,CMON,CDAY  * load & format service date
          PACK      SERVDATE,CDAY,CMON,CYEAR
          REP       " 0",SERVDATE
.
          MOVE      HCCICAMT,DIM15
          UNPACK    DIM15,ANS,ANS,ANS,ANS,ANS,ANS,ANS,DIM5,ANS,DIM2
          PACK      BENEFITA,DIM5,DIM2           * load benefit assigned
          REP       " 0",BENEFITA
.
GITM9999  RETURN
+
.*****************************************************************************
.*                            FHED0000             Called by: PROC0000       *
.*            Format the transmission header record                          *
.* Returns:   ERRFLAG  0 = Ok to continue                                    *
.*                     1 = Error occurred                                    *
.*****************************************************************************
.
FHED0000  CALL      IBACLOCK                     * load extract date
          PACK      HEDSEG05,CDD,CMM,CYY
          REP       " 0",HEDSEG05
.
          MOVE      HCBTPMCI,HEDSEG07            * load customer id
.
.         Write transmission header record
.
          MATCH     ANST,HEDSEG10                * test ?
          IF        @EQUAL
            MOVE      SP70,KEY1                  * re-extract
            WRITE     MEDCLAIM,SEQ;HEDSEG01,HEDSEG02,HEDSEG03,HEDSEG04:
                                   HEDSEG05,HEDSEG06,HEDSEG07,HEDSEG08:
                                   HEDSEG09,KEY1,HEDSEG11;
          ELSE
            WRITE     MEDCLAIM,SEQ;HEDSEG01,HEDSEG02,HEDSEG03,HEDSEG04:
                                   HEDSEG05,HEDSEG06,HEDSEG07,HEDSEG08:
                                   HEDSEG09,HEDSEG10,HEDSEG11;
          ENDIF
.
          CALL      FCLM0000                     * format claims for this batch
.
FHED9999  RETURN
+
.*****************************************************************************
.*                            FCLM0000             Called by: FHED0000       *
.*                   Format the claim header                                 *
.* Returns:   ERRFLAG  0 = Ok to continue                                    *
.*                     1 = Error occurred                                    *
.*****************************************************************************
.
FCLM0000  CALL      VCNT0000                     * get voucher count
          BRANCH    EXIT,FCLM9999                * error
.
          MOVE      VCHCOUNT,CLMSEG03            * load voucher count
          REP       " 0",CLMSEG03
.
          UNPACK    HCBTBTCH,CLMSEG04,CLMSEG05   * load claim id number
.
          UNPACK    HCBTDATE,CCENT,CYEAR,CMON,CDAY
          PACK      CLMSEG07,CDAY,CMON,CYEAR     * load claim date
          REP       " 0",CLMSEG07
.
          PACK      CLMSEG08,HCBTPYEE,SP8        * load payee provider
.
          PACK      CLMSEG09,HCBTPSRV,SP8        * load servicing provider
.
          MOVE      HCBTCAMT,DIM15
          UNPACK    DIM15,ANS,ANS,ANS,ANS,ANS,ANS,DIM6,ANS,DIM2
          PACK      CLMSEG10,DIM6,DIM2           * load tot. benefit amount
          REP       " 0",CLMSEG10
.
          WRITE     MEDCLAIM,SEQ;CLMSEG01,CLMSEG02,CLMSEG03,CLMSEG04:
                                 CLMSEG05,CLMSEG06,CLMSEG07,CLMSEG08:
                                 CLMSEG09,CLMSEG10,CLMSEG11;
.
          CALL      FITM0000                     * get and format batch items
.
FCLM9999  RETURN
+
.*****************************************************************************
.*                            FITM0000             Called by: FCLM0000       *
.*        Get the voucher records and format the item data                   *
.* Returns:   ERRFLAG  0 = Ok to continue                                    *
.*                     1 = Error occurred                                    *
.*****************************************************************************
.
FITM0000  PACK      KEY15,HCBTBTCH,SP20
          CALL      RSHCCLM7                     * position at start of batch
FITM0500  CALL      RKHCCLM7                     * read next record
          BRANCH    OVRCD,FITM9999               * eof - finished
.
          MATCH     HCBTBTCH,HCCLBTCH            * same batch still ?
          GOTO      FITM9999 IF NOT EQUAL        * no - finished
.
.         Each claim record is treated as a new voucher
.
          MOVE      ZERO,ITMCOUNT                * initialise item count
.
.         Loop through the hiccitaf file for this voucher number to get the
.         item count (ITMCOUNT) as we have to write the item count in the
.         voucher record first.
.
          PACK      KEY18,HCCLCLMN,SP20
          CALL      RSHCCIT1                     * position for first claim item
FITM1000  CALL      RKHCCIT1                     * read next record
          BRANCH    OVRCD,FITM2000               * eof - finished items
.
          MATCH     HCCLCLMN,HCCICLMN            * same claim still ?
          GOTO      FITM2000 IF NOT EQUAL        * no - finished
.
          ADD       ONE,ITMCOUNT                 * increment item count
          GOTO      FITM1000                     * get next item
.
.         We have counted all the items for this voucher, so write the
.         voucher record
.
FITM2000  CALL      FVCH0000                     * write voucher record
.
          MOVE      ZERO,ITMCOUNT                * reset item counter after
.
          PACK      KEY18,HCCLCLMN,SP20
          CALL      RSHCCIT1                     * position for first claim item
FITM3000  CALL      RKHCCIT1                     * read next record
          BRANCH    OVRCD,FITM0500               * eof - finished items
.
          MATCH     HCCLCLMN,HCCICLMN            * same claim still ?
          GOTO      FITM0500 IF NOT EQUAL        * no - finished
.                                                  patient record writen
.         Load item data
.
FITM5000  ADD       ONE,ITMCOUNT                 * increment item count
.
          CALL      GITM0000                     * format the item number
.
          MOVE      ITMNUMBR,ITMSEG03            * load item number
.
          MOVE      SERVDATE,ITMSEG04            * load service date
.
          MOVE      BENEFITA,ITMSEG05            * load benefit amount
.
.         We need to record the item position in the extract file, as
.         this will be returned to us in the reconciliation message from HIC
.         and will enable us to identify the exact item. Only applies to live
.         transmissions.
.
          MATCH     SP1,HEDSEG10                 * live transmission ?
          IF        @EQUAL
.
.           Record the item's position in the extract file
.
            MOVE      ITMCOUNT,HCCIIPOS          * item position
            CALL      UPHCCIT1
          ENDIF
.
.         Write the item segment
.
          WRITE     MEDCLAIM,SEQ;ITMSEG01,ITMSEG02,ITMSEG03,ITMSEG04:
                                 ITMSEG05,ITMSEG06,ITMSEG07,ITMSEG08;
          GOTO      FITM3000                   * get next item
.
FITM9999  RETURN
+
.*****************************************************************************
.*                            FVCH0000             Called by: FITM0000       *
.*                   Format the medicare details                             *
.* Returns:   ERRFLAG  0 = Ok to continue                                    *
.*                     1 = Error occurred                                    *
.*****************************************************************************
.
FVCH0000  MOVE      HCCLURNO,KEY8
          CALL      RDMAST1                      * record on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"PMI record not found.  ";
            PRINT     *5,"PMI record not found. U/R No: ",HCCLURNO
            CALL      HITENTER
            MOVE      ONE,ERRFLAG
          ENDIF
.
          MOVE      ITMCOUNT,VCHSEG04            * load item count
          REP       " 0",VCHSEG04
.
          UNPACK    PMEDI,VCHSEG08,VCHSEG09      * load medicare no./issue no.
.
          MATCH     SP2,PTMXMCCD                 * medicare ref. blank ?
          IF        !@EQUAL
            MOVE      PTMXMCCD,DIM2
            SQUEEZE   DIM2
            PACK      VCHSEG10,DIM2,SP20         * no - load med. ref. no.
          ELSE
            CALL      GGIV0000                   * yes - load first given name
          ENDIF
.
.         Use the claim visit number to get the referral details
.
          PACK      KEY16,HCCLVISN,SP20
          CALL      RSALLNK2
          CALL      RKALLNK2
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Referral link record not found.  ";
            PRINT     *5,"Referral link record not found. - Visit No: ",HCCLVISN
            CALL      HITENTER
            MOVE      ONE,ERRFLAG
          ENDIF
.
          MATCH     HCCLVISN,ALLNLNKV            * same visit still ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Referral link record not found.  ";
            PRINT     *5,"Referral link record not found. - Visit No: ",HCCLVISN
            CALL      HITENTER
            MOVE      ONE,ERRFLAG
          ENDIF
.
          MOVE      ALLNVISN,KEY8
          CALL      RDALREF1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Referral record not found.  ";
            PRINT     *5,"Referral record not found. Visit No: ",ALLNVISN
            CALL      HITENTER
            MOVE      ONE,ERRFLAG
          ENDIF
.
.         Load the referral request date
.
          UNPACK    ALRERDAT,CCENT,CYEAR,CMON,CDAY
          PACK      VCHSEG05,CDAY,CMON,CYEAR
          REP       " 0",VCHSEG05
.
.         Get the referral period indicator based on Category RI (Type of
.         referral).
.
          MOVE      SP1,VCHSEG06                 * default to "standard period"
          PACK      KEY5,ANSR,ANSI,ALRERTYP
          CALL      RDCODE1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Type of referral not found.  ";
            PRINT     *5,"Type of referral not found. Referral Type: ",ALRERTYP
            CALL      HITENTER
            MOVE      ONE,ERRFLAG
            GOTO      FVCH1000
          ENDIF
          MATCH     ANSN,TCINDC1                 * non-std referral ?
          IF        @EQUAL
            MOVE      ANSY,VCHSEG06              * yes
            GOTO      FVCH1000
          ENDIF
          MATCH     ANSI,TCINDC1                 * indefinite referral ?
          IF        @EQUAL
            MOVE      ANSI,VCHSEG06              * yes
          ENDIF
.
.         Get the referring provider from either the referring HCP/Practice
.         (if not blank), or the free format referring HCP field.
.
FVCH1000  MATCH     SP10,ALRERHCP                * referring HCP blank ?
          IF        !@EQUAL
            MATCH     SP10,ALRERHCR              * no - ref. HCP Practice blank?
            IF        !@EQUAL
              PACK      KEY20,ALRERHCP,ALRERHCR  * no
              CALL      RDPMHCL1                 * HCP link record found ?
              BRANCH    OVRCD,FVCH8000           * no - error
.
              MATCH     SP10,PMHLPRV1
              IF        !@EQUAL
                MOVE      PMHLPRV1,VCHSEG07
                GOTO      FVCH9000
              ENDIF
.
              MATCH     SP10,PMHLPRV2
              IF        !@EQUAL
                MOVE      PMHLPRV2,VCHSEG07
                GOTO      FVCH9000
              ENDIF
.
              MATCH     SP10,PMHLPRV3
              IF        !@EQUAL
                MOVE      PMHLPRV3,VCHSEG07
                GOTO      FVCH9000
              ENDIF
.
              MATCH     SP10,PMHLPRV4
              IF        !@EQUAL
                MOVE      PMHLPRV4,VCHSEG07
                GOTO      FVCH9000
              ENDIF
.
              MATCH     SP10,PMHLPRV5
              IF        !@EQUAL
                MOVE      PMHLPRV5,VCHSEG07
                GOTO      FVCH9000
              ENDIF
            ELSE
              PACK      KEY10,ALRERHCP,SP70
              CALL      RDPMHCP1
              BRANCH    OVRCD,FVCH8000
              MATCH     SP10,PMHCPRV1            * HCP Provider number
              GOTO      FVCH8000 IF EQUAL
.
              MOVE      PMHCPRV1,VCHSEG07
              GOTO      FVCH9000
            ENDIF
          ENDIF
.
          MATCH     SP60,ALREHCPP
          IF        !@EQUAL
            MOVE      ALREHCPP,VCHSEG07
            GOTO      FVCH9000
          ENDIF
.
.         Can't find a provider number.
.
FVCH8000  DISPLAY   *P1:24,*EL,*B,"Provider number not found.  ";
          PRINT     *5,"U/R No.:",HCCLURNO:
                    " Provider number not found - ",ALRERHCP,"/",ALRERHCR
          CALL      HITENTER
          MOVE      ONE,ERRFLAG
.
.         Write a voucher record
.
FVCH9000  WRITE     MEDCLAIM,SEQ;VCHSEG01,VCHSEG02,VCHSEG03,VCHSEG04:
                                 VCHSEG05,VCHSEG06,VCHSEG07,VCHSEG08:
                                 VCHSEG09,VCHSEG10,VCHSEG11,VCHSEG12;
.
          GOTO      FVCH9999
.
FVCH9999  RETURN
+
.*****************************************************************************
.*                             MFIL0000            Called by: PROC0000       *
.*    Move the extract file to Messenger's Outbound directory                *
.* Returns:   EXIT  0 = Ok to continue                                       *
.*                  1 = Error occurred                                       *
.*****************************************************************************
.
.         Read the MCI file to get the counter for the extract filename
.         extension
.
MFIL0000  MOVE      EFILENAM,KEY8
          CALL      RDHCMCI1                     * MCI on file ?
          IF        OVRCD = 1
            MOVE      "001",FILEEXTN             * no - set to "000"
            MOVE      EFILENAM,HCMCMCID          * create new record
.
            CALL      EXEC0000                   * move file
            BRANCH    EXIT,MFIL9100              * move failed
.
            MOVE      ONE,HCMCCNTR               * increment counter
.
.           Only update counter for a live transmission
.
            MATCH     SP1,HEDSEG10               * live transmission ?
            IF        @EQUAL
              CALL      WRHCMCI1                 * yes - write new record
            ENDIF
          ELSE
            MOVE      HCMCCNTR,FILEEXTN          * yes - load counter
            REP       " 0",FILEEXTN
.
            CALL      EXEC0000                   * move file
            BRANCH    EXIT,MFIL9100              * move failed
.
.           The counter only goes up to 999, so if it reaches this number,
.           reset it back to zero.  This number is only unique in the short
.           term.
.
            IF        HCMCCNTR = 999
              MOVE      ZERO,HCMCCNTR            * reset number
            ELSE
              ADD       ONE,HCMCCNTR             * increment counter
            ENDIF
.
.           Only update counter for a live transmission
.
            MATCH     SP1,HEDSEG10               * live transmission ?
            IF        @EQUAL
              CALL      UPHCMCI1                 * yes - update record
            ENDIF
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      MFIL9999
.
MFIL9100  MOVE      ONE,EXIT
.
MFIL9999  RETURN
+
.*****************************************************************************
.*                               EXEC0000        Called by: MFIL0000         *
.*                  Execute file move                                        *
.* Returns:  EXIT  0 = Move executed successfully.                           *
.*                 1 = Move unsuccessful                                     *
.*****************************************************************************
.
EXEC0000  MOVE      ZERO,HLEF
          CALL      GETSCR00
          STRIP     PTCNHICO
          CLEAR     CMDLINE
          APPEND    "mv ",CMDLINE
          APPEND    EFILENAM,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    PTCNHICO,CMDLINE
          APPEND    EFILENAM,CMDLINE
          APPEND    DOT,CMDLINE
          APPEND    FILEEXTN,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          CALL      PUTSCR00
.
          MATCH     "0       ",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to move extract file.  ";
            PRINT     *5,"Unable to move extract file.  ":
                      *N,*10,CMDLINE
            CALL      HITENTER
            MOVE      ONE,EXIT
          ELSE
            MOVE      ZERO,EXIT
          ENDIF
.
EXEC9999  RETURN
+
.*****************************************************************************
.*                           GGIV0000              Called by: FVCH0000       *
.*               Get the patient's first name                                *
.*****************************************************************************
.
GGIV0000  MOVE      SP20,VCHSEG10                * clear first name variable
          CLEAR     VCHSEG10
.
.         Get the first given name
.
          MOVE      PGNAME,DIM25
GGIV0500  MATCH     SP1,DIM25                    * space found in given name?
          IF        !@EQUAL
            MOVE      DIM25,ANS                  * no - load character
            APPEND    ANS,VCHSEG10
            BUMP      DIM25                      * get next character
            GOTO      GGIV9000 IF EOS            * eos - finished
            GOTO      GGIV0500                   * check next character
          ENDIF
.
GGIV9000  RESET     VCHSEG10
          PACK      VCHSEG10,VCHSEG10,SP20
.
GGIV9999  RETURN
+
.****************************************************************************
.*                           VCNT0000              Called by: FCLM0000      *
.*              Get the voucher (patient) count                             *
.* Requires: HCBTBTCH - batch number                                        *
.* Returns:  VCHCOUNT - voucher (patient) count for a batch                 *
.*           EXIT   0 = Ok to continue.                                     *
.*                  1 = error occurred.                                     *
.*           ERRFLAG  0 = Ok to continue                                     *
.*                    1 = Error occurred                                   *
.****************************************************************************
.
.         Get the last voucher record for the batch
.
VCNT0000  PACK      KEY15,HCBTBTCH,TILDA15
          CALL      RSHCCLM7                     * position after last record
          CALL      RPHCCLM7                     * read previous record
          BRANCH    OVRCD,VCNT9100               * eof - error
.
          MATCH     HCBTBTCH,HCCLBTCH            * same batch still ?
          GOTO      VCNT9100 IF NOT EQUAL        * no - error
.
          TYPE      HCCLVPOS                     * numeric voucher value ?
          GOTO      VCNT9100 IF NOT EQUAL        * no - error
.
.         The last record has been found, so save the voucher number
.
          MOVE      HCCLVPOS,VCHCOUNT            * load voucher count
.
          MOVE      ZERO,EXIT
          GOTO      VCNT9999
.
VCNT9100  DISPLAY   *P1:24,*EL,*B,"Voucher count not determined.  ";
          CALL      HITENTER
          MOVE      ONE,ERRFLAG
          MOVE      ONE,EXIT
.
VCNT9999  RETURN
+
PROFLD00
SETPAR00
CLRPAR00  RETURN
+
.*****************************************************************************
.*                          OPNOUT00               Called by: GBAT0000       *
.*          Open outcliaf using the approriate file prefix                   *
.*****************************************************************************
.
OPNOUT00  CLOSE     OUTCLIA1                     * close any existing open file
.
          MOVE      "out",CFILEPRE               * set default site prefix
          MATCH     SP6,HCBTSITE                 * blank O/P site code ?
          IF        !@EQUAL
            MOVE      HCBTSITE,KEY6
            CALL      RDSITA1                    * site on file ?
            IF        OVRCD = 0
              MOVE      OSTFILE,CFILEPRE         * yes - load site prefix
            ENDIF
          ENDIF
.
          PACK      CFNAME,CFILEPRE,FILCLIA1     * load file name
          OPEN      OUTCLIA1,CFNAME              * open outcliaf
.
OPNOUT99  RETURN
+
.*******************************************************************************
.   Schedule DB1N Print be run via Program Scheduler
.*******************************************************************************
SDB10000  MOVE      "IBAHIC06",SCHDPGID
          MOVE      "DB1N HIC Claim Form",SCHDDESC
          PACK      SCHDDATE,CCC,CYY,CMM,CDD
          REP       " 0",SCHDDATE
          CLOCK     TIME,SCHDTIME
          PACK      SCHDPRNT,ANSS,SP70       * Spool File
          MATCH     SP70,SELPRINT
          IF        !@EQUAL
            MOVE      SELPRINT,SCHDPRNT      * printer code
          ENDIF
.
.         Write Keyin parameters for Extract
.
          MOVE      BATCHKEY,KEYSTARR[1]     * Batch Key
          MOVE      "Y",KEYSTARR[2]
          MOVE      SP1,KEYSTARR[3]
          MOVE      THREE,KEYSTCNT           * Number of Keyins
.
          CALL      SCHPRO00   * Schedule Extract
.
SDB19999  RETURN
+
.*****************************************************************************
.*        I/O Includes                                                       *
.*****************************************************************************
.
          INC       STD001IO
          INC       HICPRCLM
          INC       RSHWEBCD
.
          INC       ALLLNKIO/INC
          INC       ALLREFIO/INC
          INC       HICBTCIO/INC
          INC       HICCLMIO/INC
          INC       HICCITIO/INC
          INC       HICMCIIO/INC
          INC       HICHISIO/INC
          INC       IBAPRTIO/INC
          INC       OUTCLIIO/INC
          INC       OUTSITIO/INC
          INC       PATCODIO/INC
          INC       PATMA1IO/INC
          INC       PMSHCLIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       PRIDOCIO/INC
          INC       PRIPRAIO/INC
          INC       WEBSCHIO/INC
          INC       WEBSECIO/INC
+
