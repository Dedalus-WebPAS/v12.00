.*******************************************************************************
.* System         : Theatre System
.* Include Name   : OPCRTSES.PBL
.* Description    : Create an Extra session.
.*******************************************************************************
.* Date           : 08/10/1990 Almost the end of a good year's programming.
.* Author         : Bill Dew
.* Modifications  : 
.*            V5.07.04  24/03/2000  J.Tan             
.*                      Mods to save the expected end date             
.*            V5.07.03  09/11/1999  J.Tan   SRF 635141
.*                      Added actual start and end date to session file
.*            V5.07.02  27/09/1999  Jill Habasque 
.*                      Added test for inactive code (Cat S)
.*            V5.07.01  01/03/1999  Jill Habasque 
.*                      Added test for active/inactive theatre code
.*            V5.05.01  06/01/1998  Steve Armstrong   SRF 643654
.*                      Removed display of doctor code in GDOCT000 after call
.*                      call to PATDOCKY.
.*******************************************************************************
.*                  24/07/91  ROD          SRF 109233   Quote 6995
.*                  Added extra doctor field
.*                  16/10/1991    Justin Coates 
.*                  Check for clashing of sessions and give warning.
.*                  07/10/92 J.Tan    SRF 117386
.*                  Fixed routine to validate if the new session will clash
.*                  14/12/1992  Graeme Williams            SRF 118921
.*                  Fixed validation against previous session.
.*                  14/10/1994  Rob Leonard    SRF 441109         
.*                  Fixed patient name defaulting in Anaethetist field
.*******************************************************************************
.
.    FUNCTION DESCRIPTION.
.    The function obtains basic details concerning the session and writes
.    the details to OPRSESFD
.
.    INCLUDES AND FILES.
.    FD's  : OPR001FD, OPRCONFD, OPRSESFD, OPROPRFD,  PATCODFD
.                                1         1 2       1         1
.            PATDO1FD
.            1 2
.    I/O's : OPRSESIO, OPROPRIO, PATIOYER, PATIODOC, PATIOCOD
.    PBL's : STDOPR01, PATDOCDS, PATCODDS, OPROPRDS, DATECONV
.  
.    PARAMETERS.
.    SESNCODE, SESNDATE and SESNTIME must be set to the clinic/doctor, session
.    date and session time respectively regarding the extra session. 
.
.    RETURN PARAMETERS.
.    EXIT = 0 : Extra session posted to oprsesaf
.    EXIT = 1 : Extra session Not posted ( cancel selected ) or EXITCHAR
.
.*******************************************************************************
.                   OPCRTSES
.         ML : MAIN LINE
.*******************************************************************************
OPCRTSES  CALL      DESCVARS           * clear description vars
          CALL      CLRSESFD           * clear session details
          CALL      DANOP000           * display Anaes/Op room
          CALL      DPSED777           * display session prompts only
.
          CALL      CRSES000           * insert extra session details
          BRANCH    EXIT,CRTSES99
.
CRTSES50  CALL      MDSES000           * modify session details
          BRANCH    EXIT,CRTSES99      * Exit=0 post   Exit=1 cancel
.
          CALL      VALEX000           * validate for clashes
          BRANCH    EXIT,CRTSES99:     * dont continue with session 
                         CRTSES50      * allow changes
.
          CALL      WRSES000           * Write extra session to files
.
CRTSES99  RETURN
+
.*******************************************************************************
.                   DESCVARS
.         clear the description variables
.*******************************************************************************
DESCVARS  MOVE      SP30,CDESC30A
          MOVE      SP30,CDESC30B
          MOVE      SP20,CDESC20A
          MOVE      SP20,CDESC20B
          PACK      CDESC40A,SP20,SP20
          PACK      CDESC40B,SP20,SP20
          PACK      CDESC40C,SP20,SP20
          RETURN
+
.*******************************************************************************
.                   CRSES000
.         Create extra session details
.*******************************************************************************
CRSES000  MOVE      ONE,MODEFLAG       * set insert mode
          CALL      DURTN000           * get session booking duration
          BRANCH    EXIT,CRSES999
.
          CALL      RESTM000           * get rest time in OR 
          CALL      PREPT000           * get prep time in OR 
          CALL      ANAES000           * get anaesthetist
          CALL      TMPER000           * get time period
          BRANCH    EXIT,CRSES999      * exit char exit
.
          CALL      SESTP000           * get session type
          BRANCH    EXIT,CRSES999      * exit char exit
.
          CALL      OROOM000           * get operating room  
.
          MOVE      "16",YPOS          * keyin vert position
          COMPARE   ONE,OPCNSESS       * test using session coordinator
          GOTO      CRSES200 IF NOT EQUAL
          CALL      SCORD000           * get session coordinator
          ADD       ONE,YPOS           * update keyin vert position
.
CRSES200  COMPARE   ONE,OPCNUSAN       * using extra anaesthetist
          GOTO      CRSES800 IF NOT EQUAL
          CALL      XTRAN000           * get extra anaesthetist
.
CRSES800  MOVE      ZERO,EXIT
.
CRSES999  RETURN
+
.*******************************************************************************
.                   CLRSESFD
.         Clear the variables to be keyed in
.*******************************************************************************
CLRSESFD  MOVE      ZERO,OPSEDURA
          MOVE      ZERO,OPSETPER
          MOVE      ZERO,OPSEPREP
          MOVE      SP3,OPSETPER
          MOVE      SP3,OPSETYPE
          MOVE      SP6,OPSETHET
          MOVE      SP6,OPSECORD
          MOVE      SP6,OPSEANAE
          MOVE      TWO,OPSESUSP
          MOVE      SP6,OPSEXDOC
          RETURN
+
.*********************************************************************
.*                  DANOP000                    Called by : OPCRTSES *
.*        Display Anaesthetist/Co-ordinator, Op room                 *
.*********************************************************************
DANOP000
.    Display on line 7 either the Session Coordinator if using session 
.    coordinator OPCNSESS or the default Anaesthetist for that session
.
          COMPARE   ONE,OPCNSESS       * test if using session coordinator
          GOTO      DANOP955 IF NOT EQUAL   * usnig anaesthetist
.
          PACK      KEY6,OPSECORD,SP6
          DISPLAY   *P5:7,"Session Co-ord.  : ",*EL;
          GOTO      DANOP990
.
DANOP955  DISPLAY   *P5:7,"Anaesthetist     : ",*EL;
.
DANOP990  DISPLAY   *P50:7,OPCNODSC,*P62:7," : ",*EL;
.
DANOP999  RETURN
+
.*******************************************************************************
.                   DPSED0000
.         Display session details after a ? mark
.*******************************************************************************
DPSED000  BRANCH    SCRNFLAG,DPSED999       * no need to redisplay
.
          MOVE      ONE,SCRNFLAG
          CALL      OPDSPSHD                * redisplay header
          MOVE      SAVEXPD,OPSEDURA        * restore duration
          CALL      DPSED777                * display fields
.
          COMPARE   ZERO,OPSEDURA
          GOTO      DPSED133 IF EQUAL       * no session duration
.
          DISPLAY   *P24:9,*V2LON,OPSEDURA,*P51:9,OPSEENDT
.
DPSED133  MOVE      SP30,DESC25
          MATCH     SP6,OPSEANAE
          GOTO      DPSED135 IF EQUAL       * no doct code
.
          PACK      CDESC40A,SP20,SP20
          PACK      KEY6,OPSEANAE,SP6
          CALL      RDDOCT1            * check for valid doctor
          BRANCH    OVRCD,DPSED135     * invalid code
          CALL      DOCNM000           * setup doctors name DESC40.
          MOVE      DESC40,CDESC40A
.
.         display the data
.
DPSED135  DISPLAY   *P24:10,*V2LON,OPSEBRKT:
                    *P24:11,OPSEPREP:
                    *P24:12,OPSEANAE,*HOFF,*P32:12,CDESC40A,*V2LON:
                    *P24:13,OPSETPER:
                    *P24:14,OPSETYPE:
                    *P24:15,OPSETHET:
                    *HOFF,*P32:13,CDESC20A,*P32:14,CDESC20B:
                    *P32:15,CDESC30A
.
          MOVE      TEN6,CVERT
.         
          COMPARE   ONE,OPCNSESS       * test using session coordinator
          GOTO      DPSED200 IF NOT EQUAL
.
          PACK      CDESC40B,SP20,SP20
          PACK      KEY6,OPSECORD,SP6
          CALL      RDDOCT1            * check for valid doctor
          BRANCH    OVRCD,DPSED200     * invalid code
          CALL      DOCNM000           * setup doctors name DESC40.
          MOVE      DESC40,CDESC40B
          DISPLAY   *P24:CVERT,*V2LON,OPSECORD,*HOFF,*P32:CVERT,CDESC40B
          ADD       ONE,CVERT
.
DPSED200  COMPARE   ONE,OPCNUSAN                  * using 2nd anaesthetist?
          GOTO      DPSED999 IF NOT EQUAL
.
          PACK      CDESC40C,SP20,SP20
          PACK      KEY6,OPSEXDOC,SP6
          CALL      RDDOCT1            * check for valid doctor
          BRANCH    OVRCD,DPSED999     * invalid code
          CALL      DOCNM000           * setup doctors name DESC40.
          MOVE      DESC40,CDESC40C
          DISPLAY   *P24:CVERT,*V2LON,OPSEXDOC,*HOFF,*P32:CVERT,CDESC40C
          GOTO      DPSED999
+
.*******************************************************************************
.                   DPSED777
.         display the data fields
.*******************************************************************************
DPSED777  DISPLAY   *P1:9,*EF:
                    *P2:9,*V2LON,"1",*HOFF,". Duration         :":
                    *P29:9,"minutes",*P40:9,"End Time :":
                    *P2:10,*V2LON,"2",*HOFF,". Time for Breaks  :":
                    *P29:10,"minutes":
                    *P2:11,*V2LON,"3",*HOFF,". Prep Time per Pat:":
                    *P29:11,"minutes":
                    *P2:12,*V2LON,"4",*HOFF,". Anaesthetist     :":
                    *P2:13,*V2LON,"5",*HOFF,". Time Period      :":
                    *P2:14,*V2LON,"6",*HOFF,". Session Type     :":
                    *P2:15,*V2LON,"7",*HOFF,". ",OPCNODSC,"  :" 
.
. now display fields that may be turned on or off
.
          MOVE      EIGHT,FORM2                   * next field no.
          MOVE      TEN6,CVERT                    * next display pos.
.
          COMPARE   ONE,OPCNSESS      * test if using session coordinator
          GOTO      DPSED800 IF NOT EQUAL
          DISPLAY   *P1:CVERT,*V2LON,FORM2,*HOFF,". Session Co-ord.  :"
          ADD       ONE,FORM2 
          ADD       ONE,CVERT
.
DPSED800  COMPARE   ONE,OPCNUSAN                  * using 2nd anaesthetist?
          GOTO      DPSED999 IF NOT EQUAL
.
          DISPLAY   *P1:CVERT,*V2LON,FORM2,*HOFF,". ",OPCNDSAN:
                    *P22:CVERT,": "
.
DPSED999  RETURN
+
.*****************************************************************************
.                   MDSES000
.         Modify extra session details
.*****************************************************************************
MDSES000
          MOVE      ZERO,MODEFLAG      * set change mode
          CALL      MAINQST            * select Post or Cancel
          COMPARE   ZERO,CCITEM        * test for POST
          GOTO      MDSES900 IF EQUAL
          COMPARE   "-1",CCITEM        * test for CANCEL
          GOTO      MDSES990 IF EQUAL
.
          BRANCH    CCITEM,MDSES111,MDSES222,MDSES333,MDSES444:
                           MDSES555,MDSES666,MDSES777,MDSES888,MDSES890
MDSES100                   
          BEEP
          GOTO      MDSES000           * invalid range get another option
MDSES111
          CALL      DURTN000           * change duration
          MOVE      ZERO,OPSEBRKT
          MOVE      ZERO,OPSEPREP
          CALL      RESTM000           * change breaks in sessions
          CALL      PREPT000           * change breaks in sessions
          GOTO      MDSES000
MDSES222
          CALL      RESTM000           * change breaks in sessions
          GOTO      MDSES000
MDSES333
          CALL      PREPT000           * change breaks in sessions
          GOTO      MDSES000
MDSES444
          CALL      ANAES000           * change anaesthtist
          GOTO      MDSES000
MDSES555
          CALL      TMPER000           * change period
          BRANCH    EXIT,MDSES999      * exit char hit
          GOTO      MDSES000
MDSES666
          CALL      SESTP000           * change session type
          BRANCH    EXIT,MDSES999      * exit char hit
          GOTO      MDSES000
MDSES777  CALL      OROOM000           * change operating room
          GOTO      MDSES000
.
MDSES888  MOVE      TEN6,YPOS         * next row position
.
          COMPARE   ONE,OPCNSESS      * test if using session coordinator
          GOTO      MDSES895 IF NOT EQUAL
          CALL      SCORD000           * change Session co-ordinator
          GOTO      MDSES000
.
MDSES890  COMPARE   ONE,OPCNSESS      * test if using session coordinator
          GOTO      MDSES100 IF NOT EQUAL
          MOVE      TEN7,YPOS         * next row position
MDSES895  COMPARE   ONE,OPCNUSAN      * test if using 2nd anaesthetist
          GOTO      MDSES100 IF NOT EQUAL
          CALL      XTRAN000           * change 2nd anaesthetist
          GOTO      MDSES000
.
MDSES900  MOVE      ZERO,EXIT          * exit=0 Post
          GOTO      MDSES999
MDSES990  MOVE      ONE,EXIT           * exit=1 cancel
.
MDSES999  RETURN
+
.*****************************************************************************
.                   DURTN000
.         Get session booking duration
.         exit=0 for valid booking duration
.         exit=1 if insert mode abd return hit
.*****************************************************************************
DURTN000
          DISPLAY   *P24:9,UNDLN4,*P24:9;
DURTN222
          KEYIN     *V2LON,OPSEDURA
.
          COMPARE   ZERO,OPSEDURA      * test for negative or zero input
          GOTO      DURTN888 IF EQUAL
          GOTO      DURTN000 IF LESS
.
          COMPARE   OPSEDURA,OPCNMDUR  * test for maximum duration allowed
          GOTO      DURTN800 IF LESS 
.
          MOVE      OPSEDURA,SAVEXPD       * save duration (changed in opdspshd)
          DISPLAY   *P24:9,*V2LON,OPSEDURA
          CALL      ENDTM000           * Calculate end time
          MOVE      ZERO,EXIT          * duration valid exit=0
          GOTO      DURTN999
DURTN800
          DISPLAY   *P1:24,*B,*EL,"Duration cannot exceed ",*V2LON,OPCNMDUR:
                    *HOFF," mins.  ";
          CALL      HITENTER
          GOTO      DURTN000
DURTN888
          BRANCH    MODEFLAG,DURTN899
          DISPLAY   *P1:24,*B,*EL,"Session Duration Cannot be Zero time.  ";
          CALL      HITENTER
          GOTO      DURTN000
DURTN899
          DISPLAY   *P24:9,SP4,*P51:8,SP5   * clear endtime from screen
          MOVE      ONE,EXIT
.
DURTN999  RETURN
+
.*****************************************************************************
.                   ENDTM000 
.         Calculate the end time by adding the duration to the start time
.*****************************************************************************
ENDTM000  UNPACK    SESNDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
.
          UNPACK    SESNTIME,CHOUR,ANS,CMIN
          MOVE      CHOUR,CCOL2        * get the start time hours in CCOL2
          MOVE      CMIN,SAVEF10
.
          ADD       OPSEDURA,SAVEF10   * add duration to the startime minutes
          MOVE      SAVEF10,FORM4      * save the total minutes
          DIV       "60",SAVEF10       * divide total minutes to get extra hours
          ADD       SAVEF10,CCOL2      * add extra hours to startime hours
ENDTM100  COMPARE   "24",CCOL2         * test if greater than 12pm night
          GOTO      ENDTM555 IF LESS
          SUB       "24",CCOL2         * reset time to morning hours
          ADD       ONE,JULDAY
          GOTO      ENDTM100
ENDTM555
          MULT      "60",SAVEF10       * work out the remaining minutes
          SUB       SAVEF10,FORM4
          MOVE      FORM4,CCOL1
          PACK      OPSEENDT,CCOL2,COLON,CCOL1
          REPLACE   " 0",OPSEENDT
          DISPLAY   *P51:9,*V2LON,OPSEENDT
.
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      OPSEENDD,CC,YY,MM,DD
          REP       " 0",OPSEENDD
.
ENDTM999  RETURN
+
.*****************************************************************************
.                   RESTM000
.    Get rest time allocated in session, cannot be negative or greater than
.    session duration.
.*****************************************************************************
RESTM000
          DISPLAY   *P24:10,UNDLN3,*P24:10;
RESTM222
          KEYIN     *V2LON,OPSEBRKT
.
          COMPARE   ZERO,OPSEBRKT      * test for -ve
          GOTO      RESTM000 IF LESS
.
          MOVE      OPSEDURA,FORM3
          SUB       OPSEPREP,FORM3
          COMPARE   FORM3,OPSEBRKT
          GOTO      RESTM800 IF NOT LESS 
RESTM777
          DISPLAY   *P24:10,*V2LON,OPSEBRKT
          MOVE      ZERO,EXIT
          GOTO      RESTM999
RESTM800
          DISPLAY   *P1:24,*B,*EL,"Break period is too Long.  ";
          CALL      HITENTER
          GOTO      RESTM000
.
RESTM999  RETURN
+
.*****************************************************************************
.                   PREPT000
.    Get PREPT time allocated in session, cannot be negative or greater than
.    session duration.
.*****************************************************************************
PREPT000
          DISPLAY   *P24:11,UNDLN2,*P24:11;
PREPT222
          KEYIN     *V2LON,OPSEPREP
.
          COMPARE   ZERO,OPSEPREP      * test for return hit
          GOTO      PREPT000 IF LESS
          MOVE      OPSEDURA,FORM3
          SUB       OPSEBRKT,FORM3
          COMPARE   FORM3,OPSEPREP
          GOTO      PREPT800 IF NOT LESS 
PREPT777
          DISPLAY   *P24:11,*V2LON,OPSEPREP
          MOVE      ZERO,EXIT
          GOTO      PREPT999
PREPT800
          DISPLAY   *P1:24,*B,*EL,"Preparation time is too long.  ";
          CALL      HITENTER
          GOTO      PREPT000
.
PREPT999  RETURN
+
.*****************************************************************************
.                   ANAES000
.         Get Anaesthetist 
.*****************************************************************************
ANAES000  MOVE      "12",YPOS
          MOVE      "24",XPOS
          MOVE      "32",XPOS1
          MOVE      OPSEANAE,DOCTCODE
          MOVE      CDESC40A,DESC40
          MOVE      DESC40,DESC25
          CALL      GDOCT000
          MOVE      DOCTCODE,OPSEANAE
          MOVE      DESC40,CDESC40A   
          DISPLAY   *P24:12,*V2LON,OPSEANAE,*HOFF,*P32:12,CDESC40A
.
.         If we are not using session co-ord. then re-display anaesthetist in
.         the standard heading
.
          BRANCH    OPCNSESS,ANAES999
.
          DISPLAY   *P24:7,*V2LON,DESC25    * redisplay in header
.
ANAES999  RETURN
+
.*****************************************************************************
.                   SCORD000
.         Get Session coordinator
.*****************************************************************************
SCORD000  MOVE      "24",XPOS
          MOVE      "32",XPOS1
          MOVE      OPSECORD,DOCTCODE
          MOVE      CDESC40B,DESC40
          MOVE      DESC40,DESC25
          CALL      GDOCT000
          MOVE      DESC40,CDESC40B
          MOVE      DOCTCODE,OPSECORD
          DISPLAY   *P24:YPOS,*V2LON,DOCTCODE,*HOFF,*P32:YPOS,CDESC40B
.
          DISPLAY   *P24:7,*V2LON,DESC25    * redisplay in header
.
SCORD999  RETURN
+
.*****************************************************************************
.                   XTRAN000
.         Get extra anaesthetist
.*****************************************************************************
XTRAN000  MOVE      "24",XPOS
          MOVE      "32",XPOS1
          MOVE      OPSEXDOC,DOCTCODE
          MOVE      CDESC40C,DESC40
          CALL      GDOCT000
          MOVE      DESC40,CDESC40C
          MOVE      DOCTCODE,OPSEXDOC
          DISPLAY   *P24:YPOS,*V2LON,DOCTCODE,*HOFF,*P32:YPOS,CDESC40C
.
XTRAN999  RETURN
+
.*****************************************************************************
.                   OROOM000
.         get operating room code
.*****************************************************************************
OROOM000
          MOVE      ONE,SCRNFLAG       * set the redisplay flag
          DISPLAY   *P24:15,*EL,UNDLN6,*P24:15;
OROOM111  
          KEYIN     *V2LON,OPSETHET    * get operating room code
          ENDSET    OPSETHET
          APPEND    SP6,OPSETHET
          RESET     OPSETHET
.
          MATCH     SP6,OPSETHET       * test for return hit
          GOTO      OROOM777 IF EQUAL
.
          CMATCH    "?",OPSETHET       * test for ? routine
          GOTO      OROOM666 IF NOT EQUAL
          CALL      OPROPRDS           * codes ? routine
          MOVE      ZERO,SCRNFLAG      * set flag to redisplay
OROOM444
          DISPLAY   *P1:24,*EL,*+,OPCNODSC," : ",UNDLN6
          MOVELPTR  OPCNODSC,CCOL           * get length
          ADD       FOUR,CCOL
          DISPLAY   *PCCOL:24;
          GOTO      OROOM111
OROOM666
          PACK      KEY6,OPSETHET,SP6
          CALL      RDOPOPR1           * check for valid operating room
          BRANCH    OVRCD,OROOM800     * tell user his code not on file
          COMPARE   ONE,OPRMSTAT       * active/inactive
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*V2LON,"Inactive Code ",*HOFF;
            CALL      HITENTER
            GOTO      OROOM111
          ENDIF
          MOVE      OPRMDESC,CDESC30A
          CALL      DPSED000           * do redisplay if needed
          DISPLAY   *P24:15,*V2LON,OPSETHET,*HOFF,*P32:15,CDESC30A
          DISPLAY   *P65:7,*V2LON,OPSETHET
          MOVE      ZERO,EXIT          * if alls well EXIT with 0
          GOTO      OROOM999
OROOM777  
          BRANCH    SCRNFLAG,OROOM788
          CALL      DPSED000           * do redisplay if needed
          GOTO      OROOM000
OROOM788
          DISPLAY   *P24:15,*EL        * clear this region
          PACK      CDESC30A,SP30       * clear description
          MOVE      SP10,OPSETHET
          MOVE      ONE,EXIT
          GOTO      OROOM999
OROOM800  
          DISPLAY   *P1:24,*B,*EL,*+,OPCNODSC," code not on file.  ";
          CALL      HITENTER
          BRANCH    SCRNFLAG,OROOM000
          GOTO      OROOM444
.
OROOM999  RETURN
+
.*****************************************************************************
.                   TMPER000
.         get time period code this is found on the codes file
.         Time period code is mandatory.
.*****************************************************************************
TMPER000
          MOVE      ONE,SCRNFLAG      * set the screen flag
          DISPLAY   *P24:13,*EL,UNDLN3,*P24:13;
TMPER111  
          KEYIN     *V2LON,OPSETPER
          ENDSET    OPSETPER
          APPEND    SP3,OPSETPER
          RESET     OPSETPER
.
          MATCH     SP3,OPSETPER       * test for return hit
          GOTO      TMPER777 IF EQUAL
          MATCH     EXITCHAR,OPSETPER  * test for exitchar
          GOTO      TMPER990 IF EQUAL
.
          CMATCH    "?",OPSETPER
          GOTO      TMPER666 IF NOT EQUAL
          PACK      CODE,ANSS,ANSP
          CALL      PATCODDS
          MOVE      ZERO,SCRNFLAG      * set flag to redisplay
TMPER444
          DISPLAY   *P1:24,*EL,"Time Period : ",UNDLN3,*P15:24;
          GOTO      TMPER111
TMPER666
          PACK      KEY5,ANSS,ANSP,OPSETPER,SP5
          CALL      RDCODE1            * read code file for entered code
          BRANCH    OVRCD,TMPER800     * tell user his code not on file
          MOVE      TDESC,CDESC20A      * copy the description
          CALL      DPSED000
          DISPLAY   *P24:13,*V2LON,OPSETPER,*HOFF,*P32:13,CDESC20A
          MOVE      ZERO,EXIT          * if alls well EXIT with 0
          GOTO      TMPER999
TMPER777  
          DISPLAY   *P1:24,*B,*EL,"Time Period code is Mandatory.  ";
          CALL      HITENTER
          BRANCH    SCRNFLAG,TMPER000
          GOTO      TMPER444
TMPER800 
          DISPLAY   *P1:24,*B,*EL,"Time Period code not on file.  ";
          CALL      HITENTER
          BRANCH    SCRNFLAG,TMPER000
          GOTO      TMPER444
TMPER990
          MOVE      SP3,OPSETPER
          MOVE      ONE,EXIT           * exit char hit
.
TMPER999  RETURN
+
.*****************************************************************************
.                   SESTP000
.         get session type from codes file
.*****************************************************************************
SESTP000
          MOVE      ONE,SCRNFLAG      * set the screen flag
          DISPLAY   *P24:14,*EL,UNDLN3,*P24:14;
SESTP111  
          KEYIN     *V2LON,OPSETYPE
          ENDSET    OPSETYPE
          APPEND    SP3,OPSETYPE
          RESET     OPSETYPE
.
          MATCH     SP3,OPSETYPE       * test for return hit
          GOTO      SESTP777 IF EQUAL
          MATCH     EXITCHAR,OPSETYPE  * test for exitchar hit
          GOTO      SESTP990 IF EQUAL
.
          CMATCH    "?",OPSETYPE
          GOTO      SESTP666 IF NOT EQUAL
          PACK      CODE,ANSS,ANST
          CALL      PATCODDS
          MOVE      ZERO,SCRNFLAG      * set flag to redisplay
SESTP444
          DISPLAY   *P1:24,*EL,"Session Type : ",UNDLN3,*P16:24;
          GOTO      SESTP111
SESTP666
          PACK      KEY5,ANSS,ANST,OPSETYPE,SP5
          CALL      RDCODE1            * read code file for entered code
          BRANCH    OVRCD,SESTP800     * tell user his code not on file
          MATCH     "I",PTCOACTV
          GOTO      SESTP810 IF EQUAL   * Inactive code
          MOVE      TDESC,CDESC20B      * copy the description
          CALL      DPSED000
          DISPLAY   *P24:14,*V2LON,OPSETYPE,*HOFF,*P32:14,CDESC20B 
          MOVE      ZERO,EXIT          * if alls well EXIT with 0
          GOTO      SESTP999
SESTP777  
          DISPLAY   *P1:24,*B,*EL,"Session Type code is Mandatory.  ";
          CALL      HITENTER
          BRANCH    SCRNFLAG,SESTP000
          GOTO      SESTP444
SESTP800 
          DISPLAY   *P1:24,*B,*EL,"Session Type code not on file.  ";
          CALL      HITENTER
          BRANCH    SCRNFLAG,SESTP000
          GOTO      SESTP444
.
SESTP810  DISPLAY   *P1:24,*B,*EL,"Inactive Code. ";
          CALL      HITENTER
          BRANCH    SCRNFLAG,SESTP000
          GOTO      SESTP444
.
SESTP990  DISPLAY   *P1:3,*EF,*P5:4,"Booking Type     :":
                    *V2LON,*P24:4,CURBKTYP,*HOFF,*P32:4,BOOKDESC;
          MOVE      SP3,OPSETYPE
          MOVE      ONE,EXIT           * exitchar hit
.
SESTP999  RETURN
+
.*****************************************************************************
.                   WRSES0000
.         WRite extra SESsion record
.*****************************************************************************
WRSES000
          PACK      KEY19,SESNDATE,SESNTIME,SESNCODE
          UNPACK    KEY19,OPSEDATE,OPSETIME,OPSECLIN
          CALL      RAOPSES1           * check session doesnt exist
          COMPARE   ZERO,OVRCD         ** this will aviod any I * D's
          GOTO      WRSES990 IF EQUAL
.
          MOVE      TWO,OPSESUSP
          PACK      OPSEBOOK,TODAY
          MOVE      TWO,OPSESTAT
          MOVE      ZERO,OPSETIMB
          MOVE      SP5,OPSEACTS
          MOVE      SP5,OPSEACTE
          MOVE      SP10,OPSEACDS
          MOVE      SP10,OPSEACDE
          MOVE      ZERO,OPSEACTD
          UNPACK    SP30,OPSEOVER,OPSEDELA,OPSECANC
          UNPACK    SP30,OPSETYD1,OPSETYD2,OPSETYD3,OPSETYD4
          UNPACK    SP30,OPSETYD5,OPSETYD6,OPSETYD7,OPSETYD8
          UNPACK    SP30,OPSEDCC1,OPSEDCC2,OPSEDCC3,OPSEDCC4
          UNPACK    SP30,OPSEDCC5,OPSEDCC6,OPSEDCC7,OPSEDCC8
          UNPACK    SP30,OPSELVD1,OPSELVD2,OPSELVD3,OPSELVD4
          UNPACK    SP30,OPSELVD5,OPSELVD6,OPSELVD7,OPSELVD8
          UNPACK    SP30,OPSETYN1,OPSETYN2,OPSETYN3,OPSETYN4
          UNPACK    SP30,OPSETYN5,OPSETYN6
          UNPACK    SP30,OPSENUC1,OPSENUC2,OPSENUC3,OPSENUC4
          UNPACK    SP30,OPSENUC5,OPSENUC6
          UNPACK    SP30,OPSEUSR1,OPSEUSR2,OPSEUSR3,OPSEUSR4
.
          UNPACK    SESNDATE,CCENT,CYEAR,CMON,CDAY
          CALL      DATECONV
          MOVE      WEEKDAY,OPSEDAY
.          
          CALL      WROPSES1
.
          MOVE      ONE,AUDIFLAG       * write add audit
          CALL      AUSES000
.
          MOVE      ZERO,EXIT
          GOTO      WRSES999
.
WRSES990  DISPLAY   *P1:24,*EL,*B,"Session Already Exists.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
WRSES999  RETURN
+
.*****************************************************************************
.                   GDOCT000
.         get doctor code with setup ? routines 
.         YPOS  : keyin line
.         XPOS  : x position for keyin
.         XPOS1 : column for description 
.*****************************************************************************
GDOCT000  MOVE      SP10,DOCTCODE
          MOVE      XPOS,ECOL
          MOVE      YPOS,EVERT
          MOVE      ZERO,CKYIMAND
          MOVE      SP6,CKYIDEF6
          CALL      PATDOCKY
          BRANCH    EXIT,GDOCT7777,GDOCT0000
.
          MOVE      DCODE,DOCTCODE
          DISPLAY   *PXPOS:YPOS,*V2LON,DCODE
          PACK      KEY6,DOCTCODE,SP6
          CALL      RDDOCT1            * check for valid doctor
          CALL      DOCNM000           * setup doctors name DESC40.
          PACK      DESC25,DESC40
.
GDOCT669  DISPLAY   *PXPOS1:YPOS,DESC25
          MOVE      ZERO,EXIT          * if alls well EXIT with 0
          GOTO      GDOCT999
.
GDOCT777  DISPLAY   *PXPOS:YPOS,*EL
          PACK      DESC40,SP20,SP20   * clear description
          MOVE      ONE,EXIT           * exit=1 return hit
          GOTO      GDOCT999
.
GDOCT999  RETURN
+
.*********************************************************************
.*                  VALEX000                    Called by : CRTSES00 *
.*        check if to validate if the new session will clash with    *
.*        existing sessions                                          *
.*        Returns : EXIT = 0      contine with session creation      *
.*                  EXIT = 1      Cancel the new session             *
.*                  EXIT = 2      Re-enter details                   *
.*********************************************************************
VALEX000  MOVE      ZERO,EXIT
          COMPARE   ONE,OPCNCLSH
          GOTO      VALEX999 IF NOT EQUAL   * dont check for clash
.
          MATCH     SP6,OPSETHET
          GOTO      VALEX999 IF EQUAL       * no theatre code so dont validate
.
          MOVE      SESNDATE,KEY8           * save session date
          MOVE      SESNTIME,EXPSTART       * save session start time
          MOVE      SESNCODE,KEY6           * save session clinic code
          MOVE      OPSEENDT,EXPEND         * save expected end time
          MOVE      OPSETHET,SAVTHET        * save theatre code
          PACK      CDESC40A,OPSEDURA,OPSEENDT,OPSEBRKT,OPSEPREP,OPSEANAE,SP20
          PACK      CDESC40B,OPSETPER,OPSETYPE,OPSETHET,OPSECORD,OPSEXDOC,SP20
          PACK      KEY10,OPSEENDD,SP10
.
. --------------------------------------------------------------
. ------- check if new session clashes with next session -------
. --------------------------------------------------------------
.
          PACK      KEY19,SESNDATE,SESNTIME,SESNCODE
          CALL      RSOPSES1
.
VALEX100  CALL      RKOPSES1
          BRANCH    OVRCD,VALEX500          * no next session
.
          MATCH     OPSEDATE,SESNDATE
          GOTO      VALEX500 IF NOT EQUAL   * different date
.
          MATCH     EXPEND,OPSETIME
          GOTO      VALEX500 IF NOT LESS    * start of next >= end of extra
.
          COMPARE   ZERO,OPSESTAT
          GOTO      VALEX100 IF EQUAL       * session cancelled
.
          MATCH     SESNCODE,OPSECLIN       * same clinic/surgeon ?
          GOTO      VALEX100 IF EQUAL
.
          MATCH     SAVTHET,OPSETHET        * different theatre ?
          GOTO      VALEX100 IF NOT EQUAL
.
VALEX200  DISPLAY   *P1:24,*B,"Extra session's end time clashes.  ":
                    "OK to continue (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    "/",*V2LON,"C",*HOFF,") ? ",*EL;
          KEYIN     *P59:24,*DV,UNDLN1:
                    *P59:24,*V2LON,ANS
          REP       UPPLOW,ANS
.
          MOVE      ZERO,EXIT               * continue
          MATCH     ANSY,ANS
          GOTO      VALEX800 IF EQUAL       * Yes
.
          MOVE      TWO,EXIT                * change
          MATCH     ANSN,ANS
          GOTO      VALEX800 IF EQUAL       * No
.
          MATCH     ANSC,ANS
          GOTO      VALEX910 IF EQUAL       * Cancel
.
          BEEP
          GOTO      VALEX200
.
. ------------------------------------------------------------------
. ------- check if new session clashes with previous session -------
. ------------------------------------------------------------------
.
VALEX500  MOVE      ZERO,EXIT
          PACK      KEY19,SESNDATE,SESNTIME,SESNCODE
          CALL      RSOPSES1
.
VALEX510  CALL      RPOPSES1
          BRANCH    OVRCD,VALEX800          * no previous session
.
          MATCH     OPSEDATE,SESNDATE
          GOTO      VALEX800 IF NOT EQUAL   * different date
.
          COMPARE   ZERO,OPSESTAT
          GOTO      VALEX510 IF EQUAL       * session cancelled
.
          MATCH     SESNCODE,OPSECLIN       * same clinic/surgeon ?
          GOTO      VALEX510 IF EQUAL
.
          MATCH     SAVTHET,OPSETHET        * different theatre ?
          GOTO      VALEX510 IF NOT EQUAL
.
          MATCH     OPSEENDT,EXPSTART
          GOTO      VALEX510 IF NOT LESS    * start of extra >= end of prev
.
VALEX600  DISPLAY   *P1:24,*B,"Extra session's start time clashes.  ":
                    "OK to continue (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    "/",*V2LON,"C",*HOFF,") ? ",*EL;
          KEYIN     *P61:24,*DV,UNDLN1:
                    *P61:24,*V2LON,ANS
          REP       UPPLOW,ANS
.
          MOVE      ZERO,EXIT               * continue
          MATCH     ANSY,ANS
          GOTO      VALEX800 IF EQUAL       * Yes
.
          MOVE      TWO,EXIT                * change
          MATCH     ANSN,ANS
          GOTO      VALEX800 IF EQUAL       * No
.
          MATCH     ANSC,ANS
          GOTO      VALEX910 IF EQUAL       * Cancel
.
          BEEP
          GOTO      VALEX600
.
.         restore the session values entered
.
VALEX800  UNPACK    CDESC40A,KEY4,OPSEENDT,KEY3,TCODE,OPSEANAE
          UNPACK    CDESC40B,OPSETPER,OPSETYPE,OPSETHET,OPSECORD,OPSEXDOC
          MOVE      KEY4,OPSEDURA
          MOVE      KEY3,OPSEBRKT
          MOVE      TCODE,OPSEPREP
          UNPACK    KEY10,OPSEENDD
          GOTO      VALEX999
.
.         set exit flags
.
VALEX910  MOVE      ONE,EXIT                * CANCEL
.
VALEX999  RETURN
...............................................................................
