.******************************************************************************
.* System         : Patient Care Plans / Order Communications                 *
.*                                                                            *
.* Include Name   : PCPCPLAN.PBL                                              *
.*                                                                            *
.* Function       : This will be the controlling logic for Care Plans once the*
.*                  patient has been identified.  This include requires the   *
.*                  UR and Admission Number from the calling program and then *
.*                  does all the Care Plan maintenance itself.                *
.*                  This will be used by IBAPCP11 and IBAPOE26 and was done   *
.*                  so that both programs will work identically.              *
.*                                                                            *
.* Author         : Justin Coates      08/08/1995                             *
.*                                                                            *
.* Parameters     : The calling program must have FD's etc defined for PMIHEAD*
.*                  and the Master file must have been read.                  *
.*                  KEY22              UR Number,Admission Number, Nurse Code *
.*                                                                            *
.* Modifications  :                                                           *
.*       V10.10.01  26/05/2017  Ania P          CAR 261630                    *
.*                  Removed use of PORT                                       *
.*        V9.03.01  20/11/2003  Steve Armstrong CAR 44631                     *
.*                  Removed PI command                                        *
.*----------------------------------------------------------------------------*
.*        V9.02.00  30/12/2002  Tracey Nguyen  srf 23497                      *
.*                  r5.10 Care Plans Port to V9                               *
.*----------------------------------------------------------------------------*
.*                  22/09/1999 J Habasque SRF 644907                          *
.*                  Added error "Blank Description" to stop I*D               *
.*                  06/10/1995 Whirlpool                                      *
.*                  fixed small bug when displaying current screen after      *
.*                  deleting an intervention                                  *
.*                  02/11/1995    Whirlpool                                   *
.*                  made changes to PCPCPLAN so that it displays all word     *
.*                  processor data in ADD mode once you have entered it !!    *
.*                  06/12/1995   Whirlpool    srf 641021                      *
.*                  Fixed copy option when copying a previous careplan        *
.*                  this now effectively means word processor information     *
.*                  ( e.g entered in 'specify') will not come across from     *
.*                  previous admissions                                       *
.*                  10/09/1996  Steve Armstrong   STH Mods                    *
.*                  Added validation of security level for reactivate option  *
.*                                                                            *
.* NOTE : IF YOU DO NOT UNDERSTAND THE SCREEN HANDLING DO NOT TOUCH           *
.*        ROUTINES LIKE D2OP0000, APSN0000 and DDDD0000 - see lofty           *
.*        or whirlpool or your life expectancy will suddenly decrease         *
.*        after you have spent your remaining few days fixing it again        *
.******************************************************************************
.
          DEFPROC   PCPCPLAN
.
. ------- FD's required -------
.
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC       
          INC       PATMI1FD/INC       
          INC       PATNOBFD/INC       
          INC       PATVISFD/INC
          INC       PATWR1FD/INC
          INC       PCPCONFD/INC
          INC       PCPCRLFD/INC       
          INC       PCPDBSFD/INC       
          INC       PCPDEFFD/INC       
          INC       PCPDIAFD/INC       
          INC       PCPDISFD/INC       
          INC       PCPDSCFD/INC       
          INC       PCPEDIFD/INC       
          INC       PCPEVAFD/INC       
          INC       PCPFRAFD/INC       
          INC       PCPIDPFD/INC       
          INC       PCPINTFD/INC       
          INC       PCPNURFD/INC       
          INC       PCPOUTFD/INC       
          INC       PCPPDSFD/INC       
          INC       PCPRELFD/INC       
          INC       IBASEQFD/INC 
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
. ------  File Definition for temporary files  ------
.
SEQTEMP   FILE      ASCII,FIXED=256
WORKFILE  FILE      ASCII,FIXED=256
.
.         Temporary file 1
.
TEMP1     IFILE     SQL, FIXED=14, KEY="U1-9"
KEYA      INIT      " 14 U1-9"
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ---------------
XRECODE   DIM       9         9        1  Related factor code
XREDESC   DIM       4         4       10  Related factor description code
.End of Record                        14
.
.         Temporary file 2
.
TEMP2     IFILE     SQL, FIXED=14, KEY="U1-9"
KEYB      INIT      " 14 U1-9"
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ---------------
XDECODE   DIM       9         9        1  Defining characteristic code
XDEDESC   DIM       4         4       10  Defining characteristic desc.code
.End of Record                        14
.
.         Temporary file 3
.
TEMP3     IFILE     SQL, FIXED=27, KEY="U1-9"
KEYC      INIT      " 27 U1-9"
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ---------------
XOTCODE   DIM       9         9        1  Outcome code
XOTDESC   DIM       4         4       10  Outcome description code
XOTDATE   DIM       8         8       14  Target date (CCYYMMDD)
XOTTYPE   FORM      1         2       22  Target type
.                                            0 = No Target Date
.                                            1 = By a given date
.                                            2 = Number of days
.                                            3 = Number of weeks
.                                            4 = At all times
XOTDYWK   FORM      3         3       24  Target number of days of weks
.End of Record                        27
.
.         Temporary file 4
.
TEMP4     IFILE     SQL, FIXED=70, KEY="U1-9"
KEYD      INIT      " 70 U1-9"
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ---------------
XINCODE   DIM       9         9        1  Intervention code
XINDESC   DIM       4         4       10  Intervention description code
XINFREQ   DIM       9         9       14  Frequency of intervention
XINFQDSC  DIM       30        30      23  Frequency description
XINTIME   FORM      4         3       53  Time
XINSTAF   DIM       3         3       56  Staff Code (Cat SD)
XINDATE   DIM       8         8       59  Once off date
XINSHFT   DIM       3         3       67  Once off shift (Cat DS)
.End of Record                        70
.
.         Temporary file 5
.
TPFL5     IFILE     SQL, FIXED=67, KEY="U1-4,5-6"
KEYE      INIT      " 67 U1-4,5-6"
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ---------------
XPDCODE   DIM       4         4        1  Description code
DXPDLIN   DIM       2         2        5  Line number
XPDDESC   DIM       60        60       7  This line of the description
.End of Record                        67
XPDLINE   FORM      2
+
. ------- variables required -------
.
ACTIVE    FORM      1           * care plan to display 1=active, 2=inactive
ACTIVITY  DIM       1           * patient care plan activity
ADCHFLAG  FORM      1           * "add or change" flag (0=add, 1=change)
ADDTOCHG  FORM      1           * "Add to Change" flag (0=off, 1=on)
AFTER     DIM       55          * temp storage for data after "_____" string
AFTRFLAG  FORM      1           * data after string flag (0=no, 1=yes)
BEFOFLAG  FORM      1           * data befor string flag (0=no, 1=yes)
BEFORE    DIM       55          * temp storage for data before "_____" string
CALLPOSN  FORM      1
CAREPLAN  FORM      1           * flag (1 = Care plan, 0 = No Care plan)
CATCODE   DIM       9           * temp storage for diagnostic category code
CATDESC   DIM       60          * temp storage for diagnostic category descriptn
CATFLAG   FORM      1           * used in DESC0000 for re-displaying headings
CATTYPE   FORM      2           * temp storage for diagnostic category rec type
CHARCNT   FORM      2           * character count - used in "_____" replacement
CHCKCODE  DIM       9           * code to check for
CHGFLAG   FORM      1
CLINCOND  DIM       9           * temp storage for clinic condition code
CLINE     FORM      2           
CLINFLAG  FORM      1           * clinic cond. flag for using routine SDIA0000
CMDLINE   DIM       60          * TBL command line
CNTITEM   FORM      2
CODE      DIM       2           * patdscod
CODED     DIM       9           * for pcpdscds
CODEE     DIM       9           * for pcpdscds
COPYITMS  DIM       33[13]      * array for copy option
CPFLAG    FORM      1
CURDATE   DIM       8           * current date
DCHGFLAG  FORM      1           * discharge criteria/planning flag (0=off, 1=on)
DDCHGCOD  DIM       4           * nursing diagnosis description change code
DESCCODE  DIM       4           * description code work variable 
DESCFLAG  FORM      1           * desc flag (0=not yet displayed, 1=displayed)
DESCFPTR  FORM      2           * line description form pointer
DIAGCAT   DIM       25          * diagnostic category for display - see ADIA0000
DIAGCODE  DIM       9           * for saving nursing diagnosis code
DIAGDESC  DIM       60          * for saving nursing diagnosis description
DIFFDIAG  FORM      1           * flag to indicate if differential diagnosis is 
DIM25     DIM       25          * for PCPFRADS
DISPFRST  DIM       13          * first item displayed on current page
DISPHALF  FORM      1           * 0 = all of the descriptions displayed
DISPLAST  DIM       13          * last  item displayed on current page
DONEPOSN  FORM      1           * done positional read
DPCNCARE  FORM      1           * using care plans interface
DSCTYPE   FORM      2           * value for pcpdscfd
EVENTNO   FORM      8           * Event number of patient
EXLNFLAG  FORM      1           * extra line flag - used during "_____" rplmt
FLAGCOND  FORM      1           * clinic cond. flag (0=no c/c, 1=yes c/c)
FNAMEI    DIM       8           * file name for temp index files
FNAMES1   DIM       8           * file name for temp word processing file 1
FNAMES2   DIM       8           * file name for temp word processing file 2
FNAMEW    DIM       8           * file name for work file
FNIHDR    DIM       6           * header for temp index file
FREQUNCY  DIM       9           * frequency for nursing intervention
GOTNAME   FORM      1
HDRFLAG   FORM      1           * header flag (0=display, 1=don't display)
LINE      FORM      2           * display line number
LINE60    DIM       60          * variable for word processor temp file
LINECNT   FORM      2           * previous screen line count
LINECNT1  FORM      2           * previous screen line count
LINEDESC  DIM       60          * temp w/p file variable for description line
LINEHDR   DIM       19          * display/print line header for temp index files
LKEY13    DIM       13          * last display key for PCPDSCFD file/temp files
LKEY33    DIM       33          * last display key for PATDIAFD file
OLDKEY33  DIM       33
MODE      DIM       1
NEWDESC   DIM       60          * storage for new desc during "_____" replacemt
NEWEDIT   FORM      1           * = 1 ; use PCPEDIFD for editing
NEWREC    FORM      2           * new number for rectype
NEWUNIQ   DIM       10          * new unique code
NEXTCODE  DIM       9           * the next code to be displayed (pcpdscfd)
NODATA    FORM      1
NOSTFLAG  FORM      1           * "no string" flag (0=false, 1=true)
NUMDYWK   FORM      3           * number of days/weeks for Desired Outcome
NUMLINES  FORM      2           * no. of lines var used in previous screen optn
NUMOPTN   DIM       33          * variable to load selected option
NURSCODE  DIM       6           * Nursing code input
OLDUNIQ   DIM       10          * old unique code
OPTNFLAG  FORM      1
OTHERFLG  FORM      1           * "Other" string flag (0=not found, 1=found)
OVER5FLG  FORM      1           * replace string > 5 chars flag (0=no, 1=yes)
PREVADMN  FORM      1           * flag for copy option previous admission
PRDATE    DIM       10
PRINFLAG  FORM      1           * print care plan flag (0=display, 1=print)
PRSTAT    DIM       3
RDSPHALF  FORM      1           * what disphalf was on entering screen
RECCODE   DIM       9           * temp storage of code from selected option
RECTYPE   FORM      2           * temp storage of rec type from selected option
REDISP    FORM      1           * 1 = redisplaying after a selection
REPLSTRG  DIM       15          * "_____" string replacement input 
REPLYD    DIM       2           * user response - DIM field
REPLYF    FORM      2           * user response - FORM field
REST      DIM       60          * 2nd work variable used in replacing "_____"(s)
RESTLINE  DIM       60          * 1st work variable used in replacing "_____"(s)
SAVECOND  DIM       33          * saved key of selected clinic condition
SAVEDIAG  DIM       33          * saved key of selected diagnosis category
SAVKEY19  DIM       19
SAVKEY33  DIM       33
SCREENA   FORM      2           * screen counter for add care plan
SCREENNO  FORM      4
SCRNFLAG  FORM      1           * screen flag (0=EOF, 1=full screen)
SELECT01  DIM       33
SELECT02  DIM       33
SELECT03  DIM       33
SELECT04  DIM       33
SELECT05  DIM       33
SELECT06  DIM       33
SELECT07  DIM       33
SELECT08  DIM       33
SELECT09  DIM       33
SELECT10  DIM       33
SELECT11  DIM       33
SELECT12  DIM       33
SELECT13  DIM       33
SELECTED  FORM      2           * no. of selections counter
SP59      DIM       59          * 59 spaces
SPACECNT  FORM      3           * space count - use in "_____" replacement
SPYFLAG   FORM      1           * "(specify)" string flag (0=not found, 1=found)
STATION   DIM       3           * nursing station for display on screen
STRGFPTR  FORM      2           * string form pointer
STRGLPTR  FORM      2           * string length pointer
STTOPRNT  FORM      1           * 1 = print immed. in accp0000
STVAR     FORM      2           * status for word processor
SURNAME   DIM       20          * patient surname input
TEMP5     DIM       9           * for pcpdscds
TEMPCODE  FORM      4           * temp storage for new description code
TEMPFILE  FORM      1           * temp file indicator
SAVORDSC  FORM      1
TMPORDSC  FORM      1           * temp or PCPDSCFD file indicator(0=DSC, 1=temp)
TODAY     DIM       8
TYPE      DIM       2           * temp storage for record type (RECTYPE)
TYPECOND  DIM       9           * for saving Type of Condition code
TYPENAME  DIM       24          * selected option name - used in re-display
UDLFLAG   FORM      1           * "_____" string flag (0=not found, 1=found)
UNIQUE    DIM       10
URNUMBER  DIM       8           * UR number of patient
WORKCODE  DIM       4           * work file description code variable
WORKDESC  DIM       60          * work file description variable
WORKLINE  FORM      2           * work file description line number variable
.
. ------- constants required -------
.
CATSD     INIT      "SD"
CHOOZ     FORM      "2"         * set for change mode
DFCHAR    INIT      "Defining Characteristics"
DSOUTC    INIT      "Desired Outcomes"
FLAGZ     FORM      "5"
MAXLINES  FORM      "55"
NINES     FORM      "99"
NSINTV    INIT      "Nursing Interventions"
PRFIXA    INIT      "CPLANA"
PRFIXB    INIT      "CPLANB"
PRFIXC    INIT      "CPLANC"
PRFIXD    INIT      "CPLAND"
PRFIXE    INIT      "CPLANE"
PRFIXQ    INIT      "CPLANQ"
PRFIXS    INIT      "CPLANS"
PRFIXW    INIT      "CPLANW"
RLFACT    INIT      "Related Factors"
SP33      INIT      "                                 "
SP60      INIT      "                              ":
                    "                              "
TXT       INIT      ".txt"
Z25       INIT      "ZZZZZZZZZZZZZZZZZZZZZZZZZ"
Z6        INIT      "ZZZZZZ"
.
.*********************************************************************
.         mainline code - CPLAN
.*********************************************************************
CPLAN000  UNPACK    KEY22,URNUMBER,KEY8,NURSCODE
          MOVE      KEY8,EVENTNO
          CALL      INIT0000
.
          MOVE      URNUMBER,KEY8
          CALL      RDMAST1 
          MOVE      EVENTNO,KEY8
          CALL      RDMISS1 
          MOVE      NURSCODE,KEY6
          CALL      RDPCNUR1
.
CPLAN200  CALL      GPLN0000
          BRANCH    EXIT,CPLAN300,CPLAN999  * 1=change care plan, 2=null input
.
          CALL      APLN0000              * add a new care plan
          BRANCH    EXIT,CPLAN300         * go to change mode
          GOTO      CPLAN200
.
CPLAN300  CALL      CPLN0000              * change a care plan
          GOTO      CPLAN200
.
.*********************************************************************
.         open the files needed and read parameters needed
.*********************************************************************
INIT0000  DISPLAY   *P58:23,"pcpnuraf"
          OPEN      PCPNURA1,"pcpnuraf"
          DISPLAY   *P58:23,"pcpdiaaf"
          OPEN      PCPDIAA1,"pcpdiaaf"
          DISPLAY   *P58:23,"pcpevaaf"
          OPEN      PCPEVAA1,"pcpevaaf"
          DISPLAY   *P58:23,"pcpcrlaf";
          OPEN      PCPCRLA1,"pcpcrlaf"
          DISPLAY   *P58:23,"pcpdbsaf";
          OPEN      PCPDBSA1,"pcpdbsaf"
          DISPLAY   *P58:23,"pcpfraaf";
          OPEN      PCPFRAA1,"pcpfraaf"
          DISPLAY   *P58:23,"pcpdefaf";
          OPEN      PCPDEFA1,"pcpdefaf"
          DISPLAY   *P58:23,"pcpidpaf";
          OPEN      PCPIDPA1,"pcpidpaf"
          DISPLAY   *P58:23,"pcpdiaaf";
          OPEN      PCPDIAA1,"pcpdiaaf"
          DISPLAY   *P58:23,"pcpdisaf";
          OPEN      PCPDISA1,"pcpdisaf"
          DISPLAY   *P58:23,"pcpdscaf";
          OPEN      PCPDSCA1,"pcpdscaf"
          DISPLAY   *P58:23,"pcpintaf";
          OPEN      PCPINTA1,"pcpintaf"
          DISPLAY   *P58:23,"pcpoutaf";
          OPEN      PCPOUTA1,"pcpoutaf"
          DISPLAY   *P58:23,"pcppdsaf";
          OPEN      PCPPDSA1,"pcppdsaf"
          DISPLAY   *P58:23,"pcprelaf";
          OPEN      PCPRELA1,"pcprelaf"
          DISPLAY   *P58:23,"patcodes";
          OPEN      PATCODE1,"patcodes"
          DISPLAY   *P58:23,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
          DISPLAY   *P58:23,"patnobef";
          OPEN      PATNOBE1,"patnobef"
          DISPLAY   *P58:23,"patvisaf";
          OPEN      PATVISA2,"patvisaf"
          DISPLAY   *P58:23,"patwr1af";
          OPEN      PATWR1A4,"patwr1af"
          DISPLAY   *P58:23,"pcpediaf";
          OPEN      PCPEDIA1,"pcpediaf"
          DISPLAY   *P58:23,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          DISPLAY   *P58:23,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          DISPLAY   *P58:23,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          CALL      TFILENAM
          MOVE      TFILNAME,FNAMEW
.
          CALL      TFILENAM
          MOVE      TFILNAME,FNAMES1
.
          CALL      TFILENAM
          MOVE      TFILNAME,FNAMES2
.
          DISPLAY   *P58:23,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FORTY1;*78,PCCNDCAT:
                                    *79,PCCNUNIQ,*89,PCCNUREL,PCCNUDEF:
                    *91,PCCNEREL,PCCNEDEF,PCCNEOUT,PCCNEINT,*95,PCCNFEVA:
                    *96,PCCNSECL
          READ      CONTROLF,SIXTY3;*86,DPCNCARE
.
INIT9999  RETURN
+
.*********************************************************************
.         display all care plans for the patient
.*********************************************************************
GPLN0000  CALL      PATHEAD                   * display 3-line header
          DISPLAY   *P1:7,"Admit. Diagnosis : ",*V2LON,ADIAG1,*P20:8,*EL;
          MOVE      SP1,MODE
          MOVE      ONE,ACTIVE              * search for active care plans
.
. ------  check if a care plan already exist for this patient !  ------
.         go to input a new plan if one does not exist
.
GPLN2050  PACK      KEY33,AADMNO,SP30
          CALL      RSPCDIA1                  * position read PCPDIAFD file
          CALL      RKPCDIA1                  * read next PCPDIAFD record
          BRANCH    OVRCD,GPLN2100
.
          COMPARE   AADMNO,PCDIADMN           * same Admission Number ?
          GOTO      GPLN2200 IF EQUAL         * yes
.
GPLN2100  DISPLAY   *P1:24,*EL,*B,"No care plan for this patient. (",*V2LON:
                    "A",*HOFF,")dd Care Plan, (",*V2LON,"C",*HOFF,")opy Care ":
                    "Plan ? ";
GPLN2150  MOVE      "A",ANS
          DISPLAY   *P68:24,*V2LON,ANS;
          KEYIN     *P68:24,*RV,*V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     ANSA,ANS
          IF        @EQUAL
            MOVE      FALSE,CAREPLAN          * Care Plan Does not Exist
            GOTO      GPLN7000
          ENDIF
.
          MATCH     ANSC,ANS
          IF        @EQUAL
            MOVE      "I",MODE
            CALL      COPY0000                * Copy Care Plan
            BRANCH    EXIT,GPLN9000
.
            GOTO      GPLN2200
          ENDIF
.
          BEEP
          GOTO      GPLN2150
.
. ------  display patient's care plan(s)  ------
.
GPLN2200  IF        ACTIVE = TWO
            DISPLAY   *P20:8,*V2LON,*HON,"In-Active Care Plans",*EL;
          ELSE
            DISPLAY   *P20:8,*EL;
          ENDIF
          DISPLAY   *P1:9,*EF,*P5:9,*V2LON,*ULON,"   Date   ":
                    *P16:9,"Diagnosis                               ":
                    *P76:9,"Actv"
.
          MOVE      TRUE,CAREPLAN           * Care Plans Exists
          MOVE      ONE,SCREENA             * initialize no. of screens to 1
          PACK      KEY33,AADMNO,Z25
          MOVE      ONE,NODATA              * default to no data
.
GPLN2300  CALL      DPLN0000                * display patient's care plan(s)
          BRANCH    SCRNFLAG,GPLN5000       * 1 = full screen
.
          COMPARE   SCREENA,ONE             * more than one screen ?
          GOTO      GPLN4000 IF LESS        * yes
.
. ------  only one screen  ------
.
GPLN3000  MOVE      FOUR,CALLPOSN
.
GPLN3100  PERFORM   ACTIVE,KEYG0000,KEYR0000
          BRANCH    EXIT,GPLN3200:          * 1 = alpha input,
                         GPLN3000:          * 2 = invalid numeric input,
                         GPLN9000:          * 3 = null input
                         GPLN8500:          * complete
                         GPLN8600:          * re-print
                         GPLN8700:          * copy
                         GPLN8800:          * re-activate
                         GPLN2200           * redisplay data
          GOTO      GPLN8000                * 0 = valid numeric input
.
GPLN3200  BRANCH    REPLYF,GPLN5900,GPLN5900,GPLN7000 * 1,2=invalid alpha input
          GOTO      GPLN5900
.
. ------  more than one screen - on last screen  ------
.
GPLN4000  MOVE      THREE,CALLPOSN
.
GPLN4100  PERFORM   ACTIVE,KEYG0000,KEYR0000
          BRANCH    EXIT,GPLN4200:          * 1 = alpha input,
                         GPLN4000:          * 2 = invalid numeric input,
                         GPLN9000:          * 3 = null input
                         GPLN8500:          * complete
                         GPLN8600:          * re-print
                         GPLN8700:          * copy
                         GPLN8800:          * re-activate
                         GPLN2200           * redisplay data
          GOTO      GPLN8000                * 0 = valid numeric input
.
GPLN4200  BRANCH    REPLYF,GPLN5900:        * 1 = invalid alpha input,
                           GPLN6100:        * 2 = previous screen,
                           GPLN7000         * 3 = add a new care plan
          GOTO      GPLN5900
.
. ------  more than one screen ------
.
.      *  on first screen
.
GPLN5000  COMPARE   SCREENA,ONE             * screen counter > 1 ?
          GOTO      GPLN5500 IF LESS        * yes
.
GPLN5100  MOVE      TWO,CALLPOSN
.
GPLN5200  PERFORM   ACTIVE,KEYG0000,KEYR0000
          BRANCH    EXIT,GPLN5300:          * 1 = alpha input,
                         GPLN5100:          * 2 = invalid numeric input,
                         GPLN9000:          * 3 = null input
                         GPLN8500:          * complete
                         GPLN8600:          * re-print
                         GPLN8700:          * copy
                         GPLN8800:          * re-activate
                         GPLN2200           * redisplay data
          GOTO      GPLN8000                * 0 = valid numeric input
.
GPLN5300  BRANCH    REPLYF,GPLN6000:        * 1 = next screen,
                           GPLN5900:        * 2 = invalid alpha input,
                           GPLN7000         * 3 = add a new care plan
          GOTO      GPLN5900
.
.      *  in-between screen(s)
.
GPLN5500  MOVE      ONE,CALLPOSN
.
GPLN5600  PERFORM   ACTIVE,KEYG0000,KEYR0000
          BRANCH    EXIT,GPLN5700:          * 1 = alpha input,
                         GPLN5500:          * 2 = invalid numeric input,
                         GPLN9000:          * 3 = null input
                         GPLN8500:          * complete
                         GPLN8600:          * re-print
                         GPLN8700:          * copy
                         GPLN8800:          * re-activate
                         GPLN2200           * redisplay data
          GOTO      GPLN8000                * 0 = valid numeric input
.
GPLN5700  BRANCH    REPLYF,GPLN6000:        * 1 = next screen,
                           GPLN6100:        * 2 = previous screen,
                           GPLN7000         * 3 = add a new care plan
.
GPLN5900  BEEP
GPLN5910  BRANCH    CALLPOSN,GPLN5500,GPLN5100,GPLN4000,GPLN3000
          GOTO      GPLN0000
.
. ------  display next screen  ------
.
GPLN6000  MOVE      LKEY33,KEY33
          ADD       ONE,SCREENA               * increase screen counter by 1
          GOTO      GPLN2300
.
. ------  display previous screen  ------
.
GPLN6100  CALL      CPPS0000                  * previous screen option routine
          SUB       ONE,SCREENA               * decrease screen counter by 1
          GOTO      GPLN2300
.
. ------  (A)dd a new care plan selected  ----
.
GPLN7000  MOVE      ZERO,EXIT                 * set EXIT = 0
          GOTO      GPLN9999
.
. ------  valid numeric value entered  ------
.
GPLN8000  MOVE      FALSE,ADDTOCHG            * set "Add to Change" flag off
          MOVE      ONE,EXIT                  * set EXIT = 1
          GOTO      GPLN9999
.
. ------- (D)eactivate care plan chosen -------
.
GPLN8500  CALL      CTCP0000                * complete the care plan
          GOTO      GPLN2050
.
. ------ re-(P)rint option chosen -------
.
GPLN8600  CALL      RPRT0000                * re-print care plan
          GOTO      GPLN5910
.
. ------- Copy option -------
.
GPLN8700  MOVE      SP1,MODE
          CALL      COPY0000
          GOTO      GPLN0000
.
. ------- Re-activate option -------
.
GPLN8800  MOVE      TWO,ACTIVE              * display in-active care plans
          GOTO      GPLN2200
.
. ------  master files error/null input  ------
.
GPLN9000  IF        ACTIVE = TWO
            MOVE      ONE,ACTIVE
            GOTO      GPLN2200
          ENDIF
          CALL      RDSP0000                  * re-display nursing code
          MOVE      TWO,EXIT                  * set EXIT = 2
.
GPLN9999  RETURN
.
.*******************************************************************************
.*                                GDID0000                                     *
.*                Get diagnosis description for printing on heading            *
.*******************************************************************************
GDID0000  PACK      DIAGDESC,SP30,SP30
          MATCH     SP4,PCDIDCOD                 * is description number blank ?
          GOTO      GDID2000 IF NOT EQUAL        * no
.
. ------  get Diagnosis description from the PCPDSCFD file  ------
.
          MOVE      SIX,FORM2
          PACK      KEY13,FORM2,PCDIDIAG
          CALL      RSPCDSC1                     * position read PCPDSCFD file
          CALL      RKPCDSC1                     * read next PCPDSCFD record
          BRANCH    OVRCD,GDID9999               * end-of-file
.
          COMPARE   FORM2,PCDSTYPE               * correct type of record ?
          GOTO      GDID9999 IF NOT EQUAL        * no
          MATCH     PCDIDIAG,PCDSCODE            * same Nursing Diagnosis code ?
          GOTO      GDID9999 IF NOT EQUAL        *  no
.
          MOVE      PCDSDESC,DIAGDESC            * save line desc for display
          GOTO      GDID9999
.
. ------  get Diagnosis description(s) from PCPPDSFD file  ------
.
GDID2000  PACK      KEY14,PCDIADMN,PCDIDCOD,SP2
          CALL      RSPCPDS1                     * position read PCPPDSFD file
          CALL      RKPCPDS1                     * read next PCPPDSFD record
          BRANCH    OVRCD,GDID9999               * end-of -file
.
          COMPARE   PCDIADMN,PCPDADMN            * same Admission Number ?
          GOTO      GDID9999 IF NOT EQUAL        * no
          MATCH     PCDIDCOD,PCPDDCOD            * same description number ?
          GOTO      GDID9999 IF NOT EQUAL        * no
.
          MOVE      PCPDDESC,DIAGDESC            * save line desc for display
.
GDID9999  RETURN
+
.*******************************************************************************
.*                                CRTI0000                                     *
.*                create and open temporary index files                        *
.*                                                                             *
.*              called by : SDIA0000, ADIF0000, ACCP0000, CPLN0000             *
.*******************************************************************************
CRTI0000  CALL      KLLI0000                  * delete existing temp index files
          CALL      CRTW0000                  * create and open temp work file
.
. ------  create temporary index files  ------
.
          MOVE      ONE,FORM1
.
CRTI1000  LOAD      FNIHDR,FORM1,PRFIXA,PRFIXB,PRFIXC,PRFIXD,PRFIXE
          PACK      FNAMEI,FNIHDR,PORT
          REP       " 0",FNAMEI
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMEI,CMDLINE
          BRANCH    FORM1,CRTI2000,CRTI2000,CRTI3000,CRTI4000,CRTI5000
.
CRTI2000  APPEND    KEYA,CMDLINE
          GOTO      CRTI6000
CRTI3000  APPEND    KEYC,CMDLINE
          GOTO      CRTI6000
CRTI4000  APPEND    KEYD,CMDLINE
          GOTO      CRTI6000
CRTI5000  APPEND    KEYE,CMDLINE
.
CRTI6000  RESET     CMDLINE
          WRITE     WORKFILE,SEQ;CMDLINE
.
          COMPARE   FIVE,FORM1
          GOTO      CRTI7000 IF EQUAL
          ADD       ONE,FORM1
          GOTO      CRTI1000
.
CRTI7000  CLOSE     WORKFILE                          * close temp work file
.
          CLEAR     CMDLINE
          APPEND    "sh ",CMDLINE
          APPEND    FNAMEW,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CALL      KLLW0000                          * delete temp work file
.
. ------  open temporary index files  ------
.
          PACK      FNAMEI,PRFIXA,PORT
          REP       " 0",FNAMEI
          OPEN      TEMP1,FNAMEI                      * open temp index file 1
.
          PACK      FNAMEI,PRFIXB,PORT
          REP       " 0",FNAMEI
          OPEN      TEMP2,FNAMEI                      * open temp index file 2
.
          PACK      FNAMEI,PRFIXC,PORT
          REP       " 0",FNAMEI
          OPEN      TEMP3,FNAMEI                      * open temp index file 3
.
          PACK      FNAMEI,PRFIXD,PORT
          REP       " 0",FNAMEI
          OPEN      TEMP4,FNAMEI                      * open temp index file 4
.
          PACK      FNAMEI,PRFIXE,PORT
          REP       " 0",FNAMEI
          OPEN      TPFL5,FNAMEI                      * open temp index file 5
.
CRTI9999  RETURN
+
.*******************************************************************************
.*                                CRTW0000                                     *
.*        create and open temporary work file            called by : CRTI0000  *
.*                                                                   URPT0000  *
.*******************************************************************************
CRTW0000  CALL      KLLW0000               * routine to delete work file
          PREPARE   WORKFILE,FNAMEW
.
CRTW9999  RETURN
+
.*******************************************************************************
.*                                DPLN0000                                     *
.*        display patient care plan                      called by : GPLN0000  *
.*******************************************************************************
DPLN0000  CALL      CL2V0000                     * clear variables routine no. 2
.
          DISPLAY   *P1:10,*EF
          MOVE      TEN,CVERT
          CALL      RSPCDIA1                     * position read PCPDIAFD file
.
DPLN1000  CALL      RPPCDIA1                     * read previous PCPDIAFD record
          BRANCH    OVRCD,DPLN9000               * end-of-file
.
          COMPARE   AADMNO,PCDIADMN              * same Admission NUmber ?
          GOTO      DPLN8000 IF NOT EQUAL        * no
.
          MOVE      TRUE,CAREPLAN                * Care Plans Exist
          IF        ACTIVE = ONE
            COMPARE   ONE,PCDISTAT
            GOTO      DPLN1000 IF NOT EQUAL   * not an active care plan
          ELSE
            COMPARE   TWO,PCDISTAT
            GOTO      DPLN1000 IF NOT EQUAL   * not an in-active care plan
          ENDIF
.
. ------  set up Date and Activity variables for display  ------
.
          UNPACK    PCDIDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      ZERO,NODATA             * Care Plans Exist
.
. ------  active care plan  ------
.
DPLN1100  IF        ACTIVE = 1
            MOVE      "Y",ACTIVITY
          ELSE
            MOVE      "N",ACTIVITY
          ENDIF
.
.         check if description number in PCPDIAFD file is blank or not.
.         if yes, program will get description from PCPDSCFD file.
.         if not, will get description from PCPPDSFD file.
.
          MOVE      FALSE,DESCFLAG               * set description flag to 0
          MATCH     SP4,PCDIDCOD                 * is description number blank ?
          GOTO      DPLN2000 IF NOT EQUAL        * no
.
. ------  get Diagnosis description from the PCPDSCFD file  ------
.
          MOVE      SIX,FORM2
          PACK      KEY13,FORM2,PCDIDIAG
          CALL      RSPCDSC1                     * position read PCPDSCFD file
.
DPLN1300  CALL      RKPCDSC1                     * read next PCPDSCFD record
          BRANCH    OVRCD,DPLN1000               * end-of-file
.
          COMPARE   FORM2,PCDSTYPE               * correct type of record ?
          GOTO      DPLN1000 IF NOT EQUAL        * no
          MATCH     PCDIDIAG,PCDSCODE            * same Nursing Diagnosis code ?
          GOTO      DPLN1000 IF NOT EQUAL        *  no
.
          MOVE      PCDSDESC,DIAGDESC            * save line desc for display
          CALL      DLIN0000                     * display one line of care plan
          BRANCH    EXIT,DPLN9999                * 1 = screen full
          GOTO      DPLN1300
.
. ------  get Diagnosis description(s) from PCPPDSFD file  ------
.
DPLN2000  PACK      KEY14,PCDIADMN,PCDIDCOD,SP2
          CALL      RSPCPDS1                     * position read PCPPDSFD file
.
DPLN2100  CALL      RKPCPDS1                     * read next PCPPDSFD record
          BRANCH    OVRCD,DPLN1000               * end-of -file
.
          COMPARE   PCDIADMN,PCPDADMN            * same Admission Number ?
          GOTO      DPLN1000 IF NOT EQUAL        * no
          MATCH     PCDIDCOD,PCPDDCOD            * same description number ?
          GOTO      DPLN1000 IF NOT EQUAL        * no
.
          MOVE      PCPDDESC,DIAGDESC            * save line desc for display
          CALL      DLIN0000                     * display one line of care plan
          BRANCH    EXIT,DPLN9999                * 1 = screen full
          GOTO      DPLN2100
.
. ------  key does not match  ------
.
DPLN8000  MOVE      FALSE,SCRNFLAG               * reset screen flag
          PACK      LKEY33,PCDIADMN,PCDIDATE,PCDITIME,PCDIDIAG
          GOTO      DPLN9999
.
. ------  EOF of PCPDIAFD file has reached  ------
.
DPLN9000  MOVE      FALSE,SCRNFLAG               * reset screen flag
          PACK      LKEY33,SP30,SP3
.
DPLN9999  RETURN
+
.*******************************************************************************
.*                                CL2V0000                                     *
.*                   clear work variables routine no. 2                        *
.*                                                                             *
.*******************************************************************************
CL2V0000  MOVE      ZERO,LINE            * initialize display line number
          MOVE      ZERO,LINECNT1        * initialize previous screen line count
          MOVE      ONE,FORM2
.
CL2V1000  STORE     SP33,FORM2,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                               SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                               SELECT11,SELECT12,SELECT13
          COMPARE   TEN3,FORM2
          GOTO      CL2V9000 IF EQUAL
          ADD       ONE,FORM2
          GOTO      CL2V1000
.
CL2V9000  MOVE      ZERO,FORM2
.
CL2V9999  RETURN
+
.*******************************************************************************
.*                                DLIN0000                                     *
.*      display 1 detail line of a patient care plan     called by : DPLN0000  *
.*******************************************************************************
DLIN0000  COMPARE   TWENTY3,CVERT                * screen overflow ?
          GOTO      DLIN1000 IF LESS             * no
.
          CALL      RKPCDIA1                     * read next PCPDIAFD record
          PACK      LKEY33,PCDIADMN,PCDIDATE,PCDITIME,PCDIDIAG * save record key
          MOVE      ONE,SCRNFLAG                 * set screen flag on
          MOVE      TRUE,EXIT                    * set EXIT = 1
          GOTO      DLIN9999
.
DLIN1000  BRANCH    DESCFLAG,DLIN2000
          ADD       ONE,LINE                     * increment display line number
.
          DISPLAY   *P1:CVERT,*V2LON,LINE,*HOFF,". ",CPCDATE,SP1,DIAGDESC,SP2:
                                                                 ACTIVITY
          PACK      NUMOPTN,PCDIADMN,PCDIDATE,PCDITIME,PCDIDIAG
          STORE     NUMOPTN,LINE,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                 SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                 SELECT11,SELECT12,SELECT13
          GOTO      DLIN3000
.
DLIN2000  DISPLAY   *P16:CVERT,DIAGDESC
.
DLIN3000  ADD       ONE,CVERT
          ADD       ONE,LINECNT1          * increment previous screen line count
          MOVE      TRUE,DESCFLAG         * set description flag to 1
          MOVE      FALSE,EXIT            * set EXIT = 0
.
DLIN9999  RETURN
+
.*******************************************************************************
.*                                CPPS0000                                     *
.*    previous screen routine for displaying care plan    called by : GPLN0000 *
.*******************************************************************************
CPPS0000  MOVE      ZERO,LINECNT               * initialize line count
          BRANCH    SCRNFLAG,CPPS1000          * 1=last screen was a full screen
.
          ADD       TEN3,LINECNT1   * increment previous screen line count by 13
          MOVE      LINECNT1,NUMLINES          * set no. of lines to previous
          GOTO      CPPS1100                     screen line count
.
CPPS1000  MOVE      TWENTY5,NUMLINES           * set no. of lines to 25
.
CPPS1100  MOVE      LKEY33,KEY33
          CALL      RSPCDIA1                   * position read PCPDIAFD file
.
CPPS2000  CALL      RKPCDIA1                   * read next PCPDIAFD record
          BRANCH    OVRCD,CPPS9100             * end-of-file
.
          COMPARE   AADMNO,PCDIADMN            * same Admission Number ?
          GOTO      CPPS9000 IF NOT EQUAL      * no
.
          IF        ACTIVE = ONE
            COMPARE   ONE,PCDISTAT
            GOTO      CPPS2000 IF NOT EQUAL   * not an active care plan
          ELSE
            COMPARE   TWO,PCDISTAT
            GOTO      CPPS2000 IF NOT EQUAL   * not an in-active care plan
          ENDIF
.
          MATCH     SP4,PCDIDCOD               * blank description number ?
          GOTO      CPPS3000 IF NOT EQUAL      * no
.
. ------  get Diagnosis description line(s) from PCPDSCFD file  ------
.
          MOVE      SIX,FORM2
          PACK      KEY13,FORM2,PCDIDIAG
          CALL      RSPCDSC1                   * position read PCPDSCFD file
.
CPPS2100  CALL      RKPCDSC1                   * read next PCPDSCFD record
          BRANCH    OVRCD,CPPS2000             * end-of-file
.
          COMPARE   FORM2,PCDSTYPE             * same type of record ?
          GOTO      CPPS2000 IF NOT EQUAL      * no
          MATCH     PCDIDIAG,PCDSCODE          * same Nursing Diagnosis code ?
          GOTO      CPPS2000 IF NOT EQUAL      * no
.
          ADD       ONE,LINECNT                * increment line count by 1
          COMPARE   LINECNT,NUMLINES           * line count > no. of lines ?
          GOTO      CPPS8000 IF LESS           * yes
          GOTO      CPPS2000                   * no
.
. ------  get Diagnosis description(s) from PCPPDSFD file  ------
.
CPPS3000  PACK      KEY14,PCDIADMN,PCDIDCOD,SP2
          CALL      RSPCPDS1                   * position read PCPPDSFD file
.
CPPS3100  CALL      RKPCPDS1                   * read next PCPPDSFD record
          BRANCH    OVRCD,CPPS2000             * end-of-file
.
          COMPARE   PCDIADMN,PCPDADMN          * same Admission Number ?
          GOTO      CPPS2000 IF NOT EQUAL      * no
          MATCH     PCDIDCOD,PCPDDCOD          * same description number ?
          GOTO      CPPS2000 IF NOT EQUAL      * no
.
          ADD       ONE,LINECNT                * increment line count by 1
          COMPARE   LINECNT,NUMLINES           * line count > no. of lines ?
          GOTO      CPPS8000 IF LESS           * yes
          GOTO      CPPS3100                   * no
.
. ------  max. no. of lines reached  ------
.
CPPS8000  CALL      RKPCDIA1                   * read previous PCPDIAFD record
.
.      +  difference in key
.
CPPS9000  PACK      KEY33,PCDIADMN,PCDIDATE,PCDITIME,PCDIDIAG
          GOTO      CPPS9999
.
. ------  EOF of PCPDIAFD file reached  ------
.
CPPS9100  PACK      KEY33,Z25,Z25
.
CPPS9999  RETURN
+
.*******************************************************************************
.*                                RDSP0000                                     *
.*                         re-display nursing code                             *
.*******************************************************************************
RDSP0000  DISPLAY   *P1:3,*EF,*P5:4,"Input your user id : ",*V2LON:
                               NURSCODE,*HOFF,*P52:4,PCNUNAME,*P78:4,PCNUCLSS
RDSP9999  RETURN
+
.*******************************************************************************
.*                                APLN0000                                     *
.*        add a new care plan                            called by : MAINLINE  *
.*******************************************************************************
APLN0000  MOVE      ZERO,ADCHFLAG             * set "Add/Change" flag to 0
.
APLN1000  CALL      ADIA0000                  * display diag. category option(s)
          BRANCH    EXIT,APLN8000             * 1=null input
.
APLN1100  CALL      LOFT0000                  * display & select nursing diag. 
          BRANCH    EXIT,APLN1200             * 1=null input
          GOTO      APLN2000                  * valid nursing diag. selection
.
APLN1200  BRANCH    PCCNDCAT,APLN1300         * 1=redisplay clinic condition(s)
          GOTO      APLN1000                  * redisplay diag. category optn(s)
.
APLN1300  MOVE      SAVECOND,NUMOPTN          * use saved diagnosis category
          MOVE      TRUE,CLINFLAG             * set temp clinic cond. flag on
          CALL      SDIA0000                  * display clinic cond. option(s)
          BRANCH    EXIT,APLN1000             * 1=null input
          MOVE      FALSE,CLINFLAG            * set temp clinic cond. flag off
          GOTO      APLN1100
.
APLN2000  CALL      AREL0000                  * related factor option(s)
          BRANCH    EXIT,APLN1100:            * 1=re-select nursing diagnosis
                         APLN2000             * 2=re-select related factor(s)
.
          CALL      ADEF0000                  * defining characteristic optn(s)
          BRANCH    EXIT,APLN1100:            * 1=re-select nursing diagnosis
                         APLN2000             * 2=re-select related factor(s)
.
          CALL      AOUT0000                  * desired outcome option(s)
          BRANCH    EXIT,APLN1100:            * 1=re-select nursing diagnosis
                         APLN2000             * 2=re-select related factor(s)
.
          CALL      AINT0000                  * nursing intervention option(s)
          BRANCH    EXIT,APLN1100:            * 1=re-select nursing diagnosis
                         APLN2000             * 2=re-select related factor(s)
.
          MOVE      ZERO,STTOPRNT             * display care plan first
          CALL      ACCP0000                  * accept care plan ?
          BRANCH    EXIT,APLN1100:            * 1=ask for nursing diagnosis
                         APLN2000:            * 2=ask for related factors
                         APLN9000             * 3=change mode
.
          CALL      POST0000                  * post to appropriate files
          CALL      DSCP0000                  * input discharge criteria
.                                               or planning ?
          GOTO      APLN0000
.
APLN8000  CALL      RDSP0000                  * redisplay screen header
          MOVE      ZERO,EXIT                 * input patient name (set EXIT=0)
          GOTO      APLN9999
.
APLN9000  MOVE      ONE,EXIT                  * go into change mode (set EXIT=1)
          MOVE      TRUE,ADDTOCHG             * set "Add to Change" flag on
.
APLN9999  RETURN
+
.*******************************************************************************
.*                                ADIA0000                                     *
.*        add a new care plan                            called by : APLN0000  *
.*******************************************************************************
ADIA0000  MOVE      SP30,DIAGCAT
          BRANCH    PCCNDCAT,ADIA1000,ADIA1000,ADIA1100,ADIA1200,ADIA1300
.
ADIA1000  MOVE      "Type of Clinic Conditions",DIAGCAT
          MOVE      ONE,RECTYPE               * set record type to 1
          GOTO      ADIA1400
.
ADIA1100  MOVE      "Health Patterns",DIAGCAT
          MOVE      THREE,RECTYPE             * set record type to 3
          GOTO      ADIA1400
.
ADIA1200  MOVE      "Response Patterns",DIAGCAT
          MOVE      FOUR,RECTYPE              * set record type to 4
          GOTO      ADIA1400
.
ADIA1300  MOVE      "ABC PRN REST",DIAGCAT
          MOVE      FIVE,RECTYPE              * set record type to 5
.
ADIA1400  DISPLAY   *P1:9,*EF,*P5:9,*V2LON,DIAGCAT
.
          MOVE      ONE,SCREENA               * initialize screen counter to 1
          MOVE      SP9,RECCODE               * initialize temp record code
          PACK      KEY13,RECTYPE,SP20
.
ADIA2000  CALL      DDIA0000                  * display diag. category option(s)
          CALL      S1OP0000                  * select option
          BRANCH    EXIT,ADIA2100,ADIA9000    * 1=alpha option, 2=null input
          GOTO      ADIA7000                  * valid numeric option
.
ADIA2100  BRANCH    REPLYF,ADIA3000,ADIA4000  * 1=next screen, 2=previous screen
.
. ------  next screen option chosen  ------
.
ADIA3000  MOVE      LKEY13,KEY13              * use saved last key
          ADD       ONE,SCREENA               * increment screen counter by 1
          GOTO      ADIA2000
.
. ------  previous screen option chosen  ------
.
ADIA4000  CALL      DCPS0000                  * previous screen option routine
          SUB       ONE,SCREENA               * decrease screen counter by 1
          GOTO      ADIA2000
.
. ------  valid numeric value entered  ------
.
ADIA7000  CALL      VNUM0000                  * get selected numeric option
          BRANCH    PCCNDCAT,ADIA7100         * system parameter PCCNDCAT = 1
          MOVE      FALSE,FLAGCOND            * set clinic cond. flag to no
          GOTO      ADIA8000
.
ADIA7100  MOVE      TRUE,CLINFLAG             * set temp clinic cond. flag on
          CALL      SDIA0000                 ** display clinic cond. option(s)
          BRANCH    EXIT,ADIA1000             * 1 = null input
.
ADIA8000  MOVE      FALSE,CLINFLAG            * set temp clinic cond. flag off
          MOVE      NUMOPTN,SAVEDIAG          * save diagnosis category selected
          MOVE      ZERO,EXIT                 * set EXIT = 0
          GOTO      ADIA9999
.
. ------  null input  ------
.
ADIA9000  MOVE      ONE,EXIT                  * set EXIT = 1
.
ADIA9999  RETURN
+
.*******************************************************************************
.*                                DDIA0000                                     *
.*        display diagnostic category options            called by : ADIA0000  *
.*******************************************************************************
DDIA0000  CALL      CL2V0000              * clear variables routine 2
.
          DISPLAY   *P1:10,*EF            * clear screen from row 10
          MOVE      TEN,CVERT
          CALL      RSPCDSC1              * position read PCPDSCFD file
.
DDIA1000  CALL      RKPCDSC1              * read next PCPDSCFD record
          BRANCH    OVRCD,DDIA9000        * end-of-file
.
          COMPARE   RECTYPE,PCDSTYPE      * same type or record ?
          GOTO      DDIA9000 IF NOT EQUAL * no
.
          MATCH     RECCODE,PCDSCODE      * same record code ?
          GOTO      DDIA2000 IF EQUAL     * yes
          MOVE      PCDSCODE,RECCODE      * no - initialize record code
          MOVE      FALSE,DESCFLAG        * set description flag to 0
.
DDIA2000  COMPARE   TWENTY3,CVERT         * screen overflow ?
          GOTO      DDIA3000 IF LESS      * no
.
          MOVE      TRUE,SCRNFLAG         * set screen flag on
          CALL      RPPCDSC1              * read previous PCPDSCFD record
          PACK      LKEY13,PCDSTYPE,PCDSCODE,PCDSLINE * save key of record read
          GOTO      DDIA9999
.
DDIA3000  BRANCH    DESCFLAG,DDIA3100
          ADD       ONE,LINE              * increment display line number by 1
.
          DISPLAY   *P1:CVERT,*V2LON,LINE,*HOFF,". ",PCDSDESC
.
          PACK      NUMOPTN,PCDSTYPE,PCDSCODE,PCDSLINE,SP30
          STORE     NUMOPTN,LINE,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                 SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                 SELECT11,SELECT12,SELECT13
          GOTO      DDIA4000
.
DDIA3100  DISPLAY   *P5:CVERT,PCDSDESC
.
DDIA4000  ADD       ONE,CVERT
          ADD       ONE,LINECNT1          * increment previous screen line count
          MOVE      TRUE,DESCFLAG         * set description flag to 1
          GOTO      DDIA1000
.
DDIA9000  MOVE      FALSE,SCRNFLAG        * set screen flag to off
          PACK      LKEY13,PCDSTYPE,PCDSCODE,PCDSLINE
.
DDIA9999  RETURN
+
.*******************************************************************************
.*                                DCPS0000                                     *
.*    previous screen routine for displaying diagnosis    called by : ADIA0000 *
.*    category                                                                 *
.*******************************************************************************
DCPS0000  MOVE      ZERO,LINECNT             * initialize line count
          BRANCH    SCRNFLAG,DCPS1000        * 1=last screen was full screen
.
          ADD       TEN3,LINECNT1
          MOVE      LINECNT1,NUMLINES        * set no. of lines to previous
          GOTO      DCPS1100                   screen line count
.
DCPS1000  MOVE      TWENTY5,NUMLINES         * set no. of lines to 25
.
DCPS1100  MOVE      LKEY13,KEY13
          CALL      RSPCDSC1                 * position read PCPDSCFD file
.
DCPS2000  CALL      RPPCDSC1                 * read previous PCPDSCFD record
          BRANCH    OVRCD,DCPS9000           * end-of-file
.
          COMPARE   RECTYPE,PCDSTYPE         * same type of record ?
          GOTO      DCPS9000 IF NOT EQUAL    * no
.
          ADD       ONE,LINECNT              * increment line count
          COMPARE   LINECNT,NUMLINES         * line count > no. of lines ?
          GOTO      DCPS9000 IF LESS         * yes
          GOTO      DCPS2000                 * no
.
DCPS9000  PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
.
DCPS9999  RETURN
+
.*******************************************************************************
.*                                S1OP0000                                     *
.*                  select option, next or previous screen                     *
.*                                                                             *
.*                  called by :ADIA0000, SDIA0000, ADIF0000                    *
.*******************************************************************************
S1OP0000  BRANCH    SCRNFLAG,S1OP3000         * 1 = full screen
.                                               0 = no more records
. ------  no more records  ------
.
          COMPARE   SCREENA,ONE               * more than one screen ?
          GOTO      S1OP2000 IF LESS          * yes
.
.         only one screen
.         ---------------
.
S1OP1000  DISPLAY   *P1:24,*EL,"Select the option you wish to use : "
          MOVE      "37",CCOL
.
S1OP1100  CALL      KEYI0000
          BRANCH    EXIT,S1OP1200:            * 1=alpha input,
                         S1OP1000:            * 2=invalid numeric input,
                         S1OP9000             * 3=null input
          GOTO      S1OP7000                  * valid numeric input
.
S1OP1200  BEEP
          GOTO      S1OP1100
.
.         more than one screen
.         --------------------
.
.         * on last screen
.
S1OP2000  DISPLAY   *P1:24,*EL,"Select the option you wish to use, (":
                               *V2LON,"P",*HOFF,")revious screen : "
          MOVE      "56",CCOL
.
S1OP2100  CALL      KEYI0000
          BRANCH    EXIT,S1OP2200:            * 1=alpha input,
                         S1OP2000:            * 2=invalid numeric input,
                         S1OP9000             * 3=null input
          GOTO      S1OP7000                  * valid numeric input
.
S1OP2200  BRANCH    REPLYF,S1OP2300,S1OP8000  * 1=error, 2=previous screen
.
S1OP2300  BEEP
          GOTO      S1OP2100
.
. ------  full screen ------
.
S1OP3000  COMPARE   SCREENA,ONE               * more than one screen ?
          GOTO      S1OP4000 IF LESS          * yes
.
.         * on first screen
.
S1OP3100  DISPLAY   *P1:24,*EL,"Select the option you wish to use, (":
                               *V2LON,"N",*HOFF,")ext screen : "
          MOVE      "52",CCOL
.
S1OP3200  CALL      KEYI0000
          BRANCH    EXIT,S1OP3300:            * 1=alpha input,
                         S1OP3100:            * 2=invalid numeric input,
                         S1OP9000             * 3=null input
          GOTO      S1OP7000                  * valid numeric input
.
S1OP3300  BRANCH    REPLYF,S1OP8000           * 1=next screen
          BEEP
          GOTO      S1OP3200
.
.         * in-between screen(s)
.
S1OP4000  DISPLAY   *P1:24,*EL,"Select the option you wish to use, (":
                               *V2LON,"N",*HOFF,")ext screen or (":
                               *V2LON,"P",*HOFF,")revious screen : "
          MOVE      "73",CCOL
.
S1OP4100  CALL      KEYI0000
          BRANCH    EXIT,S1OP4200:            * 1=alpha input,
                         S1OP4000:            * 2=invalid numeric input,
                         S1OP9000             * 3=null input
          GOTO      S1OP7000                  * valid numeric input
.
S1OP4200  BRANCH    REPLYF,S1OP8000,S1OP8000  * 1=next screen, 2=previous screen
          BEEP
          GOTO      S1OP4100
.
. ------  valid numeric input  ------
.
S1OP7000  MOVE      ZERO,EXIT                 * set EXIT = 0
          GOTO      S1OP9999
.
. ------  valid alpha input  ------
.
S1OP8000  MOVE      ONE,EXIT                  * set EXIT = 1
          GOTO      S1OP9999
.
. ------  null input  ------
.
S1OP9000  MOVE      TWO,EXIT                  * set EXIT = 2
.
S1OP9999  RETURN
+
.*******************************************************************************
.*                                VNUM0000                                     *
.*                 valid numeric entry - get selected option                   *
.*                                                                             *
.*        called by : ADIA0000, SDIA0000, SNUR0000, SREL0000, SDEF0000         *
.*                    SOUT0000, SINT0000, CREL0000, CDEF0000, COUT0000         *
.*                    OUTC0000, CINT0000, INTC0000                             *
.*******************************************************************************
VNUM0000  LOAD      NUMOPTN,REPLYF,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                   SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                   SELECT11,SELECT12,SELECT13
.
VNUM9999  RETURN
+
.*******************************************************************************
.*                                SDIA0000                                     *
.*     add a new care plan - selected Diag. Category     called by : APLN0000  *
.*                                                                   ADIA0000  *
.*******************************************************************************
SDIA0000  UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      TYPE,RECTYPE
          MOVE      NUMOPTN,KEY13
          CALL      RDPCDSC1                    * read PCPDSCFD record
          BRANCH    CLINFLAG,SDIA1100           * clinic cond. flag on
.
          MOVE      PCDSTYPE,CATTYPE            * save type of record
          MOVE      PCDSCODE,CATCODE            * save record code
          MOVE      PCDSDESC,CATDESC            * save line description
.
SDIA1000  DISPLAY   *P1:8,*EF,"Diag.  Category  : ",*V2LON,CATDESC:
                    *P5:10,"Nursing Diagnosis"
          GOTO      SDIA2000
.
SDIA1100  DISPLAY   *P1:8,*EF,"Condition Type   : ",*V2LON,PCDSDESC:
                    *P5:10,"Clinic Conditions"
          MOVE      RECCODE,TYPECOND          * save Type of Condition code
          MOVE      NUMOPTN,SAVECOND          * save selected Condition Type key
.
SDIA2000  MOVE      ONE,SCREENA                 * initialize screen counter to 1
          PACK      KEY20,RECTYPE,RECCODE,SP9   * set key for PCPDBSFD file
.
SDIA3000  DISPLAY   *P1:11,*EF                  * clear screen from row 11
          MOVE      TEN1,CVERT
          CALL      D1OP0000                    * display options
          CALL      S1OP0000                    * select option
          BRANCH    EXIT,SDIA3100,SDIA9000      * 1=alpha option, 2=null option
          GOTO      SDIA8000                    * numeric option
.
SDIA3100  BRANCH    REPLYF,SDIA4000,SDIA5000  * 1=next screen, 2=previous screen
.
. ------  next screen option chosen  ------
.
SDIA4000  MOVE      LKEY33,KEY20
          ADD       ONE,SCREENA                 * increase screen counter by 1
          GOTO      SDIA3000
.
. ------  previous screen option chosen  ------
.
SDIA5000  CALL      SDPS0000                    * previous screen option routine
          SUB       ONE,SCREENA                 * decrease screen counter by 1
          GOTO      SDIA3000
.
. ------  valid numeric value entered  ------
.
SDIA8000  BRANCH    CLINFLAG,SDIA8100      * 1 = temp clinic cond. flag is on
.
          DISPLAY   *P1:24,*EL,*V2LON,*BLINKON:
                    "Building temporary data base.  Please wait ... ";
.
          CALL      CRTI0000                  * create and open temp index files
.
          MOVE      FALSE,CATFLAG          * set category  display flag off
          CALL      SNUR0000               * check description line(s) for
.                                            "(specify)" and/or "_____" strings
          BRANCH    EXIT,SDIA8300          * Cancel option of W/P selected
.
          MOVE      PCDSCODE,DIAGCODE      * save nursing diagnosis code
          MOVE      PCDSDESC,DIAGDESC      * save nursing diagnosis description
          MOVE      FALSE,DIFFDIAG         * set differential diagnosis flag off
          GOTO      SDIA8200
.
SDIA8100  CALL      VNUM0000               * get valid selected option
          UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      RECCODE,CLINCOND       * save clinic condition code
          MOVE      TRUE,FLAGCOND          * yes, there is clinic cond. set flag
.                                            to yes
SDIA8200  MOVE      FALSE,EXIT             * set EXIT = 0
          GOTO      SDIA9999
.
. ------  Cancel option of Word Processor selected  ------
.
SDIA8300  MOVE      CATTYPE,RECTYPE       * use saved record type
          MOVE      CATCODE,RECCODE       * use saved diagnosis category code
          GOTO      SDIA1000
.
. ------  null input  ------
.
SDIA9000  MOVE      TRUE,EXIT             * set EXIT = 1
.
SDIA9999  RETURN
+
.*******************************************************************************
.*                                D1OP0000                                     *
.*        display options                                called by : SDIA0000  *
.*                                                                   ADIF0000  *
.*******************************************************************************
D1OP0000  CALL      CL2V0000              * clear work variables routine no. 2
          CALL      RSPCDBS1              * position read PCPDBSFD file
.
D1OP1000  CALL      RKPCDBS1              * read next PCPDBSFD record
          BRANCH    OVRCD,D1OP8000        * end-of-file
.
          COMPARE   RECTYPE,PCDBTYPE      * same type of record ?
          GOTO      D1OP8100 IF NOT EQUAL * no
          MATCH     RECCODE,PCDBCLSS      * same classification code ?
          GOTO      D1OP8100 IF NOT EQUAL * no
.
          BRANCH    RECTYPE,D1OP1100      * type of record = 1
          MOVE      SIX,FORM2
          GOTO      D1OP1200
.
D1OP1100  MOVE      TWO,FORM2
.
D1OP1200  MOVE      FALSE,DESCFLAG        * set decription flag to 0
          PACK      KEY13,FORM2,PCDBCODE,SP2
          CALL      RSPCDSC1              * position read PCPDSCFD file
.
D1OP2000  CALL      RKPCDSC1              * read next PCPDSCFD record
          BRANCH    OVRCD,D1OP1000        * end-of-file
.
          COMPARE   FORM2,PCDSTYPE        * same type of record ?
          GOTO      D1OP1000 IF NOT EQUAL * no
          MATCH     PCDBCODE,PCDSCODE     * same record code ?
          GOTO      D1OP1000 IF NOT EQUAL * no
.
          COMPARE   TWENTY3,CVERT         * screen overflow ?
          GOTO      D1OP3000 IF LESS      * no
          GOTO      D1OP9000              * yes
.
D1OP3000  BRANCH    DESCFLAG,D1OP3100
          ADD       ONE,LINE              * increment display line number
.
          DISPLAY   *P1:CVERT,*EL,*V2LON,LINE,*HOFF,". ";
.
          PACK      NUMOPTN,PCDSTYPE,PCDSCODE,PCDSLINE,SP20
          STORE     NUMOPTN,LINE,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                 SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                 SELECT11,SELECT12
.
D1OP3100  DISPLAY   *P5:CVERT,PCDSDESC
.
D1OP4000  ADD       ONE,CVERT
          ADD       ONE,LINECNT1          * increment previous screen line count
          MOVE      TRUE,DESCFLAG         * set description flag to 1
          GOTO      D1OP2000
.
. ------  PCPDBSFD's end-of-file/change in type of record or classification code
.
D1OP8000  MOVE      FALSE,SCRNFLAG        * set screen flag off
          PACK      LKEY33,PCDBTYPE,PCDBCLSS,Z25     * save last key
          GOTO      D1OP9999
.
D1OP8100  MOVE      FALSE,SCRNFLAG        * set screen flag off
          GOTO      D1OP9100
.
. ------  screen full  ------
.
D1OP9000  MOVE      TRUE,SCRNFLAG         * set screen flag on
          CALL      RPPCDBS1              * read previous PCPDBSFD record
.
. ------  save last key of PCPDBSFD file  ------
.
D1OP9100  PACK      LKEY33,PCDBTYPE,PCDBCLSS,PCDBCODE,SP30
.
D1OP9999  RETURN
+
.*******************************************************************************
.*                                SDPS0000                                     *
.*        diagnosis category previous screen routine     called by : SDIA0000  *
.*                                                                   ADIF0000  *
.*******************************************************************************
SDPS0000  MOVE      ZERO,LINECNT               * initialize line count
          BRANCH    SCRNFLAG,SDPS1000          * 1=last screen was a full screen
.
          ADD       TEN2,LINECNT1
          MOVE      LINECNT1,NUMLINES          * set no. of lines to previous
          GOTO      SDPS1100                     screen line count
.
SDPS1000  MOVE      TWENTY4,NUMLINES           * set no. of lines to 24
.
SDPS1100  MOVE      LKEY33,KEY20               * use saved last key
          CALL      RSPCDBS1                   * position read PCPDBSFD record
          CALL      RPPCDBS1                   * read previous PCPDBSFD record
.
SDPS2000  BRANCH    PCDBTYPE,SDPS2100          * type of record = 1
          MOVE      PCDBTYPE,FORM2
          GOTO      SDPS2200
.
SDPS2100  MOVE      TWO,FORM2
.
SDPS2200  PACK      KEY13,FORM2,PCDBCODE,SP2
          CALL      RSPCDSC1                   * position read PCPDSCFD file
.
SDPS2300  CALL      RKPCDSC1                   * read next PCPDSCFD record
          BRANCH    OVRCD,SDPS3000             * end-of-file
.
          COMPARE   FORM2,PCDSTYPE             * same type of record ?
          GOTO      SDPS3000 IF NOT EQUAL      * no
          MATCH     PCDBCODE,PCDSCODE          * same record code ?
          GOTO      SDPS3000 IF NOT EQUAL      * no
.
          ADD       ONE,LINECNT                * increment line count
          COMPARE   LINECNT,NUMLINES           * line count > no. of lines ?
          GOTO      SDPS9000 IF LESS           * yes
          GOTO      SDPS2300                   * no
.
SDPS3000  COMPARE   TWO,FORM2                  * type of record = 2 ?
          GOTO      SDPS3100 IF NOT EQUAL      * no
          MOVE      ONE,FORM2                  * yes - set type of record = 1
.
SDPS3100  CALL      RPPCDBS1                   * read previous PCPDBSFD record
          BRANCH    OVRCD,SDPS8000             * end-of-file
.
          COMPARE   FORM2,PCDBTYPE             * same type of record ?
          GOTO      SDPS9000 IF NOT EQUAL      * no
          MATCH     RECCODE,PCDBCLSS           * same classification code ?
          GOTO      SDPS9000 IF NOT EQUAL      * no
          GOTO      SDPS2000
.
. ------  end of PCPDBSFD file  ------
.
SDPS8000  PACK      KEY20,PCDBTYPE,PCDBCLSS,SP9
          GOTO      SDPS9999
.
. ------  reach desired no. of lines/difference in record key  ------
.
SDPS9000  PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
.
SDPS9999  RETURN
+
.*******************************************************************************
.*                                SNUR0000                                     *
.*    selected option of Nursing Diagnosis/Differential Diagnosis - check      *
.*    description line(s) for "(specify)" and/or "_____" strings               *
.*                      called by : SDIA0000, ADIF0000                         *
.*******************************************************************************
SNUR0000  CALL      VNUM0000            * get valid selected option
          UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      TYPE,RECTYPE
.
          MOVE      NUMOPTN,KEY13
          CALL      RDPCDSC1            * read PCPDSCFD record
.
SNUR1000  CALL      DESC0000            * check for & replace strings routine
.
          BRANCH    EXIT,SNUR2000:      * 1 = either or both string found,
                         SNUR9000       * 2 = cancel after invoking W/Processor 
          MOVE      SP4,DDCHGCOD        * 0 = no strings found - set description
.                                             change code to spaces
          GOTO      SNUR8000
.
SNUR2000  CALL      ARPL0000            * accept "_____" string replacement(s) ?
          BRANCH    CEXIT,SNUR1000      * no
          MOVE      TEMPCODE,DDCHGCOD   * set desc change code to temp desc code
.
SNUR8000  MOVE      FALSE,EXIT          * set EXIT = 0
          GOTO      SNUR9999
.
SNUR9000  MOVE      TRUE,EXIT           * set EXIT = 1
.
SNUR9999  RETURN
+
.*******************************************************************************
.*                                DESC0000                                     *
.*        routine to check if there is any detail to be inputted by the        *
.*        user.  Will invoke the word processor if a "(specify)" string is     *
.*        found. On the other hand, a "_____" string found will be replaced    *
.*        with a DIM 15 field.                                                 *
.*                                                                             *
.*        called by : SNUR0000, SREL0000, SDEF0000, SOUT0000, SINT0000         *
.*                    CDEF0000, CREL0000, OUTC0000, INTC0000                   *
.*******************************************************************************
DESC0000  
          BRANCH    CHGFLAG,DESC2000
.
          CALL      CSPY0000            * check for "(specify)" string
.
          CALL      CUDL0000            * check for "_____" string
.
          BRANCH    SPYFLAG,DESC2000    * "(specify)" string found
.
          BRANCH    UDLFLAG,DESC3000    * "_____" string found
.
. ------  neither string found  ------
.
          BRANCH    ADCHFLAG,DESC1000   * change care plan option
          GOTO      DESC1100            * add care plan option
.
DESC1000  MOVE      TRUE,NOSTFLAG       * set "no string" flag to 1 to
.                                         indicate string is not found
DESC1100  MOVE      ZERO,EXIT           * set EXIT = 0
          GOTO      DESC9999
.
. ______  "(specify)" string found - invoke word processor  ______
.
DESC2000  CALL      WORD0000            * invoke word processor
          CALL      D1WP0000            * display header 1 after invoking W/P 
          BRANCH    EXIT,DESC2200       * cancel option chosen
.
          BRANCH    CATFLAG,DESC2100
.
          DISPLAY   *P1:8,*EF,"Diag.  Category  : ",*V2LON,CATDESC:
                    *P5:10,"Nursing Diagnosis"
          GOTO      DESC4000
.
DESC2100  CALL      D2WP0000            * display header 2 after invoking W/P
          DISPLAY   *P5:11,TYPENAME
          GOTO      DESC4000            * post option chosen
.
DESC2200  BRANCH    UDLFLAG,DESC3000    * "_____" string found - replace
          MOVE      TWO,EXIT            * set EXIT = 2
          GOTO      DESC9999            * exit
.
. ------   "_____" string found  ------
.
.         but no "(specify)" string - copy description line(s) from PCPDSCFD
.         file to temporary file
.
DESC3000  CALL      CRTS0000            * create and open temp. seq. file 1
.
DESC3100  MOVE      PCDSDESC,LINEDESC
          WRITE     SEQTEMP,SEQ;LINEDESC      * write a record to temp file
.
          CALL      RKPCDSC1                  * read previous PCPDSCFD record
          BRANCH    OVRCD,DESC3200            * end-of-file
.
          COMPARE   RECTYPE,PCDSTYPE          * same type of record ?
          GOTO      DESC3200 IF NOT EQUAL     * no
.
          MATCH     RECCODE,PCDSCODE          * same record ?
          GOTO      DESC3200 IF NOT EQUAL     * no
          GOTO      DESC3100
.
DESC3200  WEOF      SEQTEMP,SEQ          * write end-of-file marker to temp file
          CLOSE     SEQTEMP              * close temp file
.
          CALL      RDSC0000             * routine to reset KEY13 for PCPDSCFD
.
.         display description line(s) from temporary file
.
          DISPLAY   *P1:12,*EF           * clear screen from row 12
          MOVE      TEN2,CVERT
.
          CALL      DTMP0000          * routine to display rec(s) from temp file
.
.         check for and replace "_____" string + posting to temp desc file
.
DESC4000  CALL      URPT0000          * routine to check for & replace "_____"
.                                       string
          MOVE      ONE,EXIT          * set EXIT = 1
.
DESC9999  RETURN
+
.*******************************************************************************
.*                                URPT0000                                     *
.*        check for & replace "_____" string + posting   called by : DESC0000  *
.*        to temp description file                                             *
.*******************************************************************************
URPT0000
          BRANCH    ADCHFLAG,URPT1000      * change care plan option
          GOTO      URPT2000               * add care plan option
.
.         change Care Plan only
.         ---------------------
.
URPT1000  MOVE      FALSE,NOSTFLAG         * set "no string" flag to 0 to
.                                            indicate string is found.  This
.                                            will cause data fr work file to
.                                            be written to appropriate temp file
          CALL      CRTW0000               * create and open work file
          WEOF      WORKFILE,SEQ
          CLOSE     WORKFILE
. ______________________________________________________________________________
.
.         add/change Care Plan
.         --------------------
.
.         get new description code from temp. description file
.
URPT2000  MOVE      Z25,KEY6
          CALL      RS5T0000               * position read temp desc file
          CALL      RP5T0000               * read previous temp desc file record
          BRANCH    OVRCD,URPT2100         * end-of-file
.
          MOVE      XPDCODE,TEMPCODE       * set temp code = description code
          GOTO      URPT2200
.
URPT2100  MOVE      ZERO,TEMPCODE          * set temp code = 0
.
URPT2200  ADD       ONE,TEMPCODE           * increase temp code by 1
          MOVE      TEMPCODE,XPDCODE       * set description code = temp code
          MOVE      ZERO,XPDLINE           * initialize description line no to 0
.
.         read and process record(s) from temp. word processor file
.
          OPEN      SEQTEMP,FNAMES1        * open temp w/p file
.
URPT3000  READ      SEQTEMP,SEQ;LINEDESC   * read temp w/p file record
          GOTO      URPT9000 IF OVER       * end-of-file
.
          RESET     LINEDESC
          GOTO      URPT3000 IF EOS
          MATCH     SP59,LINEDESC          * record = spaces ?
          GOTO      URPT3000 IF EQUAL      * yes
.
          ADD       ONE,XPDLINE            * increase description line no by 1
          BRANCH    UDLFLAG,URPT3100       *  "_____" string found
          MOVE      FALSE,EXLNFLAG         *  "_____" string not found - set
.                                             extra line flag off
          GOTO      URPT4100
.
URPT3100  ADD       ONE,CVERT
.
URPT4000  CALL      SRPL0000               * routine to replace "_____" string
          DISPLAY   *P10:CVERT,LINEDESC
.
URPT4100  MOVE      LINEDESC,XPDDESC
          BRANCH    ADCHFLAG,URPT4200      * change care plan option
          PACK      KEY6,XPDCODE,XPDLINE   * add care plan option
          CALL      WR5T0000               * write a temp desc file record
          GOTO      URPT4300
.
URPT4200  CALL      WTMP0000           * if change care plan, write to work file
.
URPT4300  BRANCH    EXLNFLAG,URPT5000    * there is an extra line of description
          GOTO      URPT3000

URPT5000  ADD       ONE,XPDLINE            * increment description line no. by 1
          MOVE      RESTLINE,LINEDESC
          ADD       ONE,CVERT
          DISPLAY   *P10:CVERT,LINEDESC
.
          BRANCH    AFTRFLAG,URPT4000   * there is data after the "_____" string
          MOVE      LINEDESC,XPDDESC
.
          BRANCH    ADCHFLAG,URPT5100      * change care plan option
          PACK      KEY6,XPDCODE,XPDLINE   * add care plan option
          CALL      WR5T0000               * write a temp desc file record
          GOTO      URPT3000
.
URPT5100  CALL      WTMP0000           * if change care plan, write to work file
          GOTO      URPT3000
.
. ------  end of sequential temp file  ------
.
URPT9000  CALL      KLLS0000               * delete temp sequential file
.
URPT9999  RETURN
+
.*******************************************************************************
.*                                DTMP0000                                     *
.*   display description line(s) from temp w/p file      called by : DESC0000  *
.*******************************************************************************
DTMP0000  BRANCH    ADCHFLAG,DTMP1100
.
DTMP1000  DISPLAY   *P5:CVERT,*EL,*V2LON,"Description before underline(s)":
                                         " replacement ..."
          GOTO      DTMP2000
.
DTMP1100  BRANCH    FORM1,DTMP1000
          DISPLAY   *P5:CVERT,*EL,*V2LON,"Description before change ..."
.
DTMP2000  OPEN      SEQTEMP,FNAMES1
.
DTMP2100  ADD       ONE,CVERT
          READ      SEQTEMP,SEQ;LINEDESC         * read temp sequential file
          GOTO      DTMP3000 IF OVER             * end-of-file
.
          DISPLAY   *P10:CVERT,LINEDESC
          GOTO      DTMP2100
.
DTMP3000  CLOSE     SEQTEMP                      * close temp sequential file
          ADD       ONE,CVERT
.
          BRANCH    ADCHFLAG,DTMP3200
DTMP3100  DISPLAY   *P5:CVERT,*EL,*V2LON,"Description after underline(s)":
                                         " replacement ..."
          GOTO      DTMP9999
.
DTMP3200  BRANCH    FORM1,DTMP3100
          DISPLAY   *P5:CVERT,*EL,*V2LON,"Description after change ..."
.
DTMP9999  RETURN
+
.*******************************************************************************
.*                                CSPY0000                                     *
.*   check description line(s) for "(specify)" string    called by : DESC0000  *
.*                                                                             *
.*******************************************************************************
CSPY0000  MOVE      FALSE,SPYFLAG           * initialize "(specify)" string flag
          MOVE      FALSE,OTHERFLG          * initialize "Other" string flag
.
CSPY1000  SCAN      "(specify)",PCDSDESC    * search for "(specify)" string
          GOTO      CSPY2000 IF NOT EQUAL   * string not found
          MOVE      TRUE,SPYFLAG            * string found, set flag to 1
          RESET     PCDSDESC
.
          SCAN      "Other",PCDSDESC        * search for "Other" string
          GOTO      CSPY2000 IF NOT EQUAL   * string not found
          MOVE      TRUE,OTHERFLG           * string found, set flag to 1
.
CSPY2000  CALL      RKPCDSC1                * read next PCPDSCFD record
          BRANCH    OVRCD,CSPY9000          * end-of-file
.
          COMPARE   RECTYPE,PCDSTYPE        * same type of record ?
          GOTO      CSPY9000 IF NOT EQUAL   * no
          MATCH     RECCODE,PCDSCODE        * same record code ?
          GOTO      CSPY9000 IF NOT EQUAL   * no
          GOTO      CSPY1000
.
CSPY9000  CALL      RDSC0000                * reset KEY13 for PCPDSCFD file
.
CSPY9999  RETURN
+
.*******************************************************************************
.*                                RDSC0000                                     *
.*    reset PCPDSCFD's Key after scanning for "(specify)" & "_____" strings    *
.*                                                                             *
.*        called by : CSPY0000, CUDL0000, DESC0000, DSEL0000, WORD0000         *
.*******************************************************************************
RDSC0000  CALL      RPPCDSC1                  * read previous PCPDSCFD record
          PACK      KEY13,PCDSTYPE,PCDSCODE,SP2
          CALL      RSPCDSC1                  * position read PCPDSCFD file
          CALL      RKPCDSC1                  * read record PCPDSCFD record
.
RDSC9999  RETURN
+
.*******************************************************************************
.*                                CUDL0000                                     *
.*     check description line(s) for "_____" string      called by : DESC0000  *
.*                                                                             *
.*******************************************************************************
CUDL0000  MOVE      FALSE,UDLFLAG             * initialize "_____" string flag
.
CUDL1000  SCAN      "_____",PCDSDESC          * search for "_____" string
          GOTO      CUDL2000 IF NOT EQUAL     * string not found
          MOVE      TRUE,UDLFLAG              * string found, set flag to 1
.
CUDL2000  CALL      RKPCDSC1                  * read next PCPDSCFD record
          BRANCH    OVRCD,CUDL9000            * end-of-file
.
          COMPARE   RECTYPE,PCDSTYPE          * same type of record ?
          GOTO      CUDL9000 IF NOT EQUAL     * no
          MATCH     RECCODE,PCDSCODE          * same record code ?
          GOTO      CUDL9000 IF NOT EQUAL     * no
          GOTO      CUDL1000
.
CUDL9000  CALL      RDSC0000                  * reset KEY13 for PCPDSCFD file
.
CUDL9999  RETURN
+
.*******************************************************************************
.*                                WORD0000                                     *
.*        invoke word processor                          called by : DESC0000  *
.*******************************************************************************
WORD0000  CALL      SETW0000                   * set up temp w/p file and screen
.                                                header before invoking word
.                                                processor
. ------  set up original data (description line(s)) for display in w/p  -------
.
WORD1000  BRANCH    CHGFLAG,WORD1050
          BRANCH    OTHERFLG,WORD1900          * "Other" string flag on
          BRANCH    SPYFLAG,WORD1900          * "Other" string flag on
.
. ---- insert mode ----
.
          MOVE      PCDSDESC,LINEDESC
          WRITE     SEQTEMP,SEQ;LINEDESC       * write a record to temp w/p file
.
          CALL      RKPCDSC1                   * read next PCPDSCFD record
          BRANCH    OVRCD,WORD1800             * end-of-file
.
          COMPARE   RECTYPE,PCDSTYPE           * same type of record ?
          GOTO      WORD1800 IF NOT EQUAL      * no
          MATCH     RECCODE,PCDSCODE           * same record code ?
          GOTO      WORD1800 IF NOT EQUAL      * no
          GOTO      WORD1000
.
. ---- change mode ----
.
WORD1050  CALL      SWTF0000                * set up for change mode
.
WORD1800  CALL      RDSC0000                   * reset KEY13 for PCPDSCFD file
.
WORD1900  WEOF      SEQTEMP,SEQ                * write end-of-file marker
          CLOSE     SEQTEMP                    * close  temp w/p file
.
. ------  word processor  ------
.
WORD2000  CLEAR     CMDLINE
          APPEND    FNAMES1,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE                    * cmdline contains file name
          MOVE      TEN,STVAR
          WORD      CMDLINE,150,9,8,70,23,STVAR
.
. ------  ask the "O.K. to post ?" question  ------
.
WORD3000  CALL      POSTQST
          BRANCH    CEXIT,WORD8000,WORD4000,WORD9000     * 1=Yes, 2=No, 3=Cancel
          BEEP
          GOTO      WORD3000                   * invalid input, re-ask question
.
. ------  No option chosen  ------
.
WORD4000  MOVE      FALSE,DCHGFLAG             * set discharge criteria flag off
          CALL      STST0000                   * set up 2nd temp sequential file
          GOTO      WORD2000
.
. ------  Post option chosen  ------
.
WORD8000  CALL      ALIT0000                * see if any lines in temp file
          BRANCH    EXIT,WORD9000           * nothing in temp file -> cancel
.
          MOVE      FALSE,EXIT                 * set EXIT = 0
          GOTO      WORD9999
.
. ------  Cancel option chosen  ------
.
WORD9000  MOVE      TRUE,EXIT                  * set EXIT = 1
.
WORD9999  RETURN
+
.*******************************************************************************
.*                                SETW0000                                     *
.*        set up temp file and screen header for w/p     called by : WORD0000  *
.*                                                                   DSCP0000  *
.*******************************************************************************
SETW0000  CALL      CRTS0000             * create & open temp sequent file 1
.
SETW9999  RETURN
+
.*******************************************************************************
.*                                CRTS0000                                     *
.*      create and open temporary sequential w/p file    called by : SETW0000  *
.*                                                                   DESC0000  *
.*******************************************************************************
CRTS0000  CALL      KLLS0000            * routine to delete temp sequential file
          PREPARE   SEQTEMP,FNAMES1
.
CRTS9999  RETURN
+
.*******************************************************************************
.*                                STST0000                                     *
.*        set up 2nd temp sequential file                called by : WORD0000  *
.*                                                                   DSCP0000  *
.*******************************************************************************
STST0000  PREPARE   SEQTEMP,FNAMES2
.
STST1100  WEOF      SEQTEMP,SEQ              * write end-of-file marker
          CLOSE     SEQTEMP                  * close 2nd temp sequential file
.
. ------  append data from temp w/p file to 2nd temp file  ------
.
STST2000  CLEAR     CMDLINE
          APPEND    "cat ",CMDLINE           * use cat rather than mv
          APPEND    FNAMES1,CMDLINE
          APPEND    ".txt>>",CMDLINE
          APPEND    FNAMES2,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID           * cat sqtmp1>>sqtmp2
.
.         Now copy 2nd temp file back to temp w/p file.  Word Processor only
.         work with temp w/p file.
.
          CLEAR     CMDLINE
          APPEND    "mv ",CMDLINE            * mv is quicker than cat
          APPEND    FNAMES2,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    FNAMES1,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID           * mv sqtmp2.txt sqtmp1.txt
.
STST9999  RETURN
+
.*******************************************************************************
.*                                D1WP0000                                     *
.*    display header 1 after invoking word processor     called by : DESC0000  *
.*******************************************************************************
D1WP0000  CALL      DISPHEAD
          DISPLAY   *P66:2,"Station : ",*V2LON,STATION
          CALL      PATHEAD
          DISPLAY   *P1:7,"Admit. Diagnosis : ",*V2LON,ADIAG1,*HOFF:
                    *P1:8,"Diag.  Category  : ",*V2LON,CATDESC
.
D1WP9999  RETURN
+
.*******************************************************************************
.*                                D2WP0000                                     *
.*             display header 2 after invoking word processor                  *
.*                                                                             *
.*        called by : AREL0000, ADEF0000, AOUT0000, AINT0000, DESC0000         *
.*******************************************************************************
D2WP0000  BRANCH    DIFFDIAG,D2WP1000
          DISPLAY   *P1:9,*EF,"Nursing Diagnosis: ",*V2LON,DIAGDESC
          GOTO      D2WP9999
.
D2WP1000  DISPLAY   *P1:9,*EF,"Differ. Diagnosis: ",*V2LON,DIAGDESC
.
D2WP9999  RETURN
+
.*******************************************************************************
.*                                SRPL0000                                     *
.*        "_____" string replacement                     called by : URPT0000  *
.*******************************************************************************
SRPL0000  MOVE      FALSE,EXLNFLAG           * set extra line flag to off
.
SRPL1000  SCAN      "_____",LINEDESC         * search for "_____" string
          GOTO      SRPL9999 IF NOT EQUAL
.
          MOVEFPTR  LINEDESC,STRGFPTR     * save start of string form pointer
. ______________________________________________________________________________
.
.         input replacement string
.         ------------------------
.
          DISPLAY   *P1:24,*EL,"Please input your response to replace the ":
                               "underlines : "
.
SRPL1100  KEYIN     *P56:24,*DV,UNDLN15,*P56:24,*V2LON,REPLSTRG
.
          ENDSET    REPLSTRG
          APPEND    SP20,REPLSTRG
          RESET     REPLSTRG
.
          MATCH     SP20,REPLSTRG         * null input ?
          GOTO      SRPL1100 IF EQUAL
          DISPLAY   *P56:24,*V2LON,REPLSTRG
.
.         set replace string logical length pointer to physical length
.
          ENDSET    REPLSTRG
.
SRPL1200  CMATCH    SP1,REPLSTRG
          GOTO      SRPL1300 IF NOT EQUAL
          BUMP      REPLSTRG,-1
          GOTO      SRPL1200 IF NOT EOS
.
SRPL1300  LENSET    REPLSTRG
          RESET     REPLSTRG
.
.         check if replace string is more than 5 characters long
.
          MOVELPTR  REPLSTRG,STRGLPTR    * store l/ptr of replace string
          SUB       "5",STRGLPTR
          COMPARE   STRGLPTR,ZERO
          GOTO      SRPL1400 IF NOT LESS
.
          MOVE      TRUE,OVER5FLG        * set "over 5 chars" flag to 1 if more
          GOTO      SRPL2000               than 5 chars
.
SRPL1400  MOVE      FALSE,OVER5FLG       * set "over 5 chars" flag to 0 if equal
.                                          or less than 5 chars
. ______________________________________________________________________________
.
.         check if there is any data BEFORE the "_____" string
.         ----------------------------------------------------
.
SRPL2000  BUMP      LINEDESC,-1
          GOTO      SRPL2100 IF EOS
.
.         ** there is data
.
          LENSET    LINEDESC
          RESET     LINEDESC
          MOVE      LINEDESC,BEFORE       * save data to variable BEFORE
          MOVE      TRUE,BEFOFLAG         * set "Before" flag to 1
          GOTO      SRPL2200
.
.         ** there is no data
.
SRPL2100  MOVE      FALSE,BEFOFLAG      * set "Before" flag to 0
.
.         check if there is any data AFTER the "_____" string
.         ---------------------------------------------------
.
SRPL2200  SETLPTR   LINEDESC            * move l/p to max length of variable
          RESET     LINEDESC,STRGFPTR
          BUMP      LINEDESC,6
          GOTO      SRPL2300 IF EOS
.
          CMATCH    SP1,LINEDESC
          GOTO      SRPL2400 IF NOT EQUAL
SRPL2300
          BUMP      LINEDESC,-1
          CMATCH    SP1,LINEDESC
          GOTO      SRPL2400 IF NOT EQUAL
.
          MOVE      FALSE,AFTRFLAG      * set "After" flag to 0 if there is no
          GOTO      SRPL2500              data
.
SRPL2400  MOVE      TRUE,AFTRFLAG       * set "After" flag to 1 if there is data
. ______________________________________________________________________________
.
.         if "over 5 chars" flag = 1 then check if the description line has
.         sufficient space to fit in the extra chars of the replace string.
.         Otherwise, replace "_____" with replace string input
.
SRPL2500  BRANCH    OVER5FLG,SRPL3000
          GOTO      SRPL5000
.
.         "over 5 chars"  flag = 1
.         ------------------------
.
SRPL3000  MOVE      ZERO,SPACECNT       * initialize space count to 0
          ENDSET    LINEDESC
.
.         *** count spaces left at the end of description line
.
SRPL3100  CMATCH    SP1,LINEDESC
          GOTO      SRPL3200 IF NOT EQUAL
          ADD       ONE,SPACECNT        * increment space count by 1
          BUMP      LINEDESC,-1
          GOTO      SRPL9000 IF EOS     * display error message
          GOTO      SRPL3100
.
.         *** check if spaces available is sufficient to cover extra characters
.             of replace string
.
SRPL3200  SUB       STRGLPTR,SPACECNT
          COMPARE   ZERO,SPACECNT
          GOTO      SRPL5000 IF NOT LESS
.
.         *** insufficient spaces
.
          BRANCH    AFTRFLAG,SRPL3500
.
.             "After" flag = 0 (no data after "_____" string)
.             ----------------
.
          MOVE      BEFORE,LINEDESC
          DISPLAY   *P10:CVERT,LINEDESC
.
          BRANCH    EXLNFLAG,SRPL3300
.
.                Extra Line flag = off
.
          PACK      RESTLINE,REPLSTRG,SP30,SP30
          GOTO      SRPL3400
.
.                Extra Line flag = on
.
SRPL3300  PACK      REST,RESTLINE,SP30,SP30
          PACK      RESTLINE,REPLSTRG,SP1,REST
          MOVE      TRUE,AFTRFLAG       * set "After" flag to 1
SRPL3400
          MOVE      TRUE,EXLNFLAG       * set extra line flag to on
          GOTO      SRPL9999
.
.             "After" flag = 1 (there is data after "_____" string)
.             ----------------
.
.             check if no. of chars in word before end of description line is 
.             sufficient to cover extra characters of replace string.
.
SRPL3500  LENSET    LINEDESC
.
SRPL3600  MOVE      ONE,CHARCNT         * initialize character count to 1
.
SRPL3700  BUMP      LINEDESC,-1
          GOTO      SRPL9000 IF EOS
          MOVEFPTR  LINEDESC,DESCFPTR
          COMPARE   DESCFPTR,STRGFPTR
          GOTO      SRPL3800 IF EQUAL
.
          CMATCH    SP1,LINEDESC
          GOTO      SRPL4000 IF EQUAL
          ADD       ONE,CHARCNT         * increment character count by 1
          GOTO      SRPL3700
.
SRPL3800  BUMP      LINEDESC,5
          MOVE      LINEDESC,AFTER
          PACK      RESTLINE,REPLSTRG,AFTER,SP30,SP30
          MOVE      BEFORE,LINEDESC
          DISPLAY   *P10:CVERT,LINEDESC
.
          MOVE      TRUE,EXLNFLAG       * set Extra Line flag to on
          MOVE      FALSE,AFTRFLAG      * set "After" flag to 0
          GOTO      SRPL9999
.
.             If there is not sufficient characters, back count another
.             word
.
SRPL4000  ADD       CHARCNT,SPACECNT
          COMPARE   ZERO,SPACECNT
          GOTO      SRPL3600 IF LESS
.
.             sufficient characters to cover
.
          BUMP      LINEDESC,1
          BRANCH    EXLNFLAG,SRPL4100
.
          PACK      RESTLINE,LINEDESC,SP30,SP30
          GOTO      SRPL4200
.
SRPL4100  PACK      REST,RESTLINE,SP30,SP30
          PACK      RESTLINE,LINEDESC,SP1,REST
.
SRPL4200  MOVE      TRUE,EXLNFLAG        * set Extra Line flag to on
          BUMP      LINEDESC,-2
          LENSET    LINEDESC
. ______________________________________________________________________________
.
SRPL5000  BRANCH    AFTRFLAG,SRPL6200
.
.         data does not exists after the "_____" string
.         ---------------------------------------------
.
SRPL6000  BRANCH    BEFOFLAG,SRPL6100
          PACK      LINEDESC,REPLSTRG
          DISPLAY   *P10:CVERT,LINEDESC
          GOTO      SRPL9999
.
SRPL6100  PACK      LINEDESC,BEFORE,REPLSTRG
          DISPLAY   *P10:CVERT,LINEDESC
          GOTO      SRPL9999
.
.         data exists after the "_____" string
.         ------------------------------------
.
SRPL6200  RESET     LINEDESC,STRGFPTR
          BUMP      LINEDESC,5
          GOTO      SRPL6400 IF EOS
          MOVE      LINEDESC,AFTER
.
          BRANCH    BEFOFLAG,SRPL6300
          PACK      NEWDESC,REPLSTRG,AFTER
          GOTO      SRPL7000
.
SRPL6300  PACK      NEWDESC,BEFORE,REPLSTRG,AFTER,SP30,SP30
          GOTO      SRPL7000
.
SRPL6400  PACK      LINEDESC,BEFORE,REPLSTRG,SP30,SP30
          DISPLAY   *P10:CVERT,LINEDESC
          GOTO      SRPL9999
.
.         *** set description line to the new description
.
SRPL7000  MOVE      NEWDESC,LINEDESC
          DISPLAY   *P10:CVERT,LINEDESC
          GOTO      SRPL1000              * continue to check for "_____" string
. ______________________________________________________________________________
.
.         error message
.         -------------
.
SRPL9000  DISPLAY   *P1:24,*EL,*B,"Error in temporary file.  Contact I.B.A.  ";
          CALL      HITENTER
.
SRPL9999  RETURN
+
.*******************************************************************************
.*                                WTMP0000                                     *
.*     change a care plan - write to work temp file      called by : URPT0000  *
.*******************************************************************************
WTMP0000  OPEN      WORKFILE,FNAMEW                  * open temp work file
.
WTMP1000  READ      WORKFILE,SEQ;WORKCODE,WORKLINE,WORKDESC
          GOTO      WTMP1000 IF NOT OVER             * not end-of-file
.
. ------  end of temp work file  ------
.
          MOVE      XPDCODE,WORKCODE                 * set up record description
          MOVE      XPDLINE,WORKLINE                 * set up record description
          MOVE      XPDDESC,WORKDESC                 * set up record description
          WRITE     WORKFILE,SEQ;WORKCODE,WORKLINE,WORKDESC
.
          WEOF      WORKFILE,SEQ                     * write end-of-file marker
          CLOSE     WORKFILE                         * close temp work file
.
WTMP9999  RETURN
+
.*******************************************************************************
.*                                ACHG0000                                     *
.*        add a care plan - accept "_____" replacement(s) ?                    *
.*                                                                             *
.*              called by : SREL0000, SDEF0000, SOUT0000, SINT0000             *
.*******************************************************************************
ARPL0000  BRANCH    UDLFLAG,ARPL1000        * "_____" string flag on
          GOTO      ARPL8000
.
ARPL1000  DISPLAY   *P1:24,*EL,"Underline(s) replacement accepted (":
                                *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? "
.
ARPL1100  KEYIN     *P43:24,*DV,UNDLN1,*P43:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * null input ?
          GOTO      ARPL1200 IF EQUAL       * yes
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P43:24,*V2LON,ANS
.
          MATCH     ANSY,ANS                * input = "Y" ?
          GOTO      ARPL8000 IF EQUAL       * yes
          MATCH     ANSN,ANS                * input = "N" ?
          GOTO      ARPL9000 IF EQUAL       * yes
.
ARPL1200  BEEP
          GOTO      ARPL1100
.
. ------  replacement(s) accepted  ------
.
ARPL8000  MOVE      FALSE,CEXIT              * set EXIT = 0
          GOTO      ARPL9999
.
. ------  replacement(s) not accepted  ------
.
ARPL9000  MOVE      TRUE,CEXIT               * set EXIT = 1
.
ARPL9999  RETURN
+
.*********************************************************************
.*                  AREL0000                    Called by : APLN0000 *
.*        add a care plan - select Related Factor(s)        CREL0000 *
.*********************************************************************
AREL0000  CALL      D2WP0000              * display header 2
          BRANCH    PCCNUREL,AREL0100
          GOTO      AREL8000
.
AREL0100  DISPLAY   *P5:11,*V2LON,*ULON,RLFACT
.
          MOVE      ZERO,TMPORDSC         * Initialis temp or dsc file flag
          MOVE      ONE,SCREENA           * initialize screen counter
          MOVE      ZERO,SELECTED         * initialize no. of selections counter
          MOVE      ONE,TEMPFILE          * set temp file indicator to 1
          MOVE      EIGHT,RECTYPE         * set type of record to 8
          MOVE      ZERO,DISPHALF           * clear half displayed flag 
          MOVE      ZERO,RDSPHALF           * clear redisplay half disp. flag
          MOVE      SP20,DISPLAST           * clear last displayed key
          MOVE      SP20,DISPFRST           * clear first displayed key
          PACK      KEY20,RECTYPE,DIAGCODE,SP9
.
AREL1000  CALL      EDIC0000              * display Related Factor option(s)
.
AREL1100  CALL      S2OP0000              * select option
          BRANCH    EXIT,AREL1200         * 1 = alpha input
          GOTO      AREL6000              * 0 = valid numeric input
.
AREL1200  BRANCH    REPLYF,AREL2000:      * 1 = Next screen,
                           AREL3000:      * 2 = Previous screen,
                           AREL4000:      * 3 = Abort,
                           AREL5000       * 4 = Finished
.
. ------  next screen option chosen  ------
.
AREL2000  MOVE      LKEY33,KEY20          * use last saved key
          ADD       ONE,SCREENA           * increase screen counter by 1
          GOTO      AREL1000
.
. ------  previous screen option chosen  ------
.
AREL3000  CALL      EDID0000              * previous screen option routine 
          SUB       ONE,SCREENA           * decrease screen counter by 1
          GOTO      AREL1000
.
. ------  abort option chosen  ------
.
AREL4000  BRANCH    ADCHFLAG,AREL4100     * change care plan option
          CALL      EDIE0000              * implement abort routine
          BRANCH    EXIT,AREL9000         * ask for nursing diag. again
          GOTO      AREL7000              * display differential diagnoses
.
AREL4100  COMPARE   ONE,SELECTED          * has selection been made ?
          GOTO      AREL9999 IF LESS      * no - exit
.
          DISPLAY   *P1:24,*EL,*B,"Cannot abort once a Related Factor is ":
                                  "selected.   ";
          CALL      HITENTER
          GOTO      AREL1100
.
. ------  finished option chosen  ------
.
AREL5000  COMPARE   ONE,SELECTED          * no. of selections > 1 ?
          GOTO      AREL8000 IF NOT LESS  * yes
.
          DISPLAY   *P1:24,*EL,*B,"You haven't entered any related factors.  ":
                               "Do you want to abort (",*V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
.
AREL5100  KEYIN     *P72:24,*DV,UNDLN1,*P72:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS               * null input ?
          GOTO      AREL5200 IF EQUAL     * yes
          REP       UPPLOW,ANS            * no - replace lower case with upper
          DISPLAY   *P72:24,*V2LON,ANS
.
          MATCH     ANSY,ANS              * input = "Y" ?
          GOTO      AREL4000 IF EQUAL     * yes
          MATCH     ANSN,ANS              * input = "N" ?
          GOTO      AREL1100 IF EQUAL     * yes
.
AREL5200  BEEP
          GOTO      AREL5100              * invalid input - re-enter
.
. ------  valid numeric selection ------
.
AREL6000  MOVE      TRUE,CATFLAG          * set category display flag on
          MOVE      RLFACT,TYPENAME       * set type of record name
.
          CALL      SREL0000              * check description line(s) for
.                                           "(specify)" and/or "_____" strings
          BRANCH    EXIT,AREL0000:        * 1 = cancel after invoking W/P
                         AREL1000         * 2 = option has already been selected
.
          ADD       ONE,SELECTED          * increase selected counter by 1
          GOTO      AREL1000
.
. ------  display differential diagnoses for current nursing diagnosis  ------
.
AREL7000  CALL      ADIF0000              * display available option(s) & select
          BRANCH    EXIT,AREL9000         * 1 = null input
          MOVE      TWO,EXIT              * set EXIT = 2
          GOTO      AREL9999
.
. ------  proceed to ask for defining characteristics  ------
.
AREL8000  MOVE      ZERO,EXIT             * set EXIT = 0
          GOTO      AREL9999
.
. ------  no differential diagnoses/don't wish to look at differential diagnoses
.
AREL9000  MOVE      ONE,EXIT              * set EXIT = 1
          MOVE      SAVEDIAG,NUMOPTN      * use saved diagnosis category
.
AREL9999  RETURN
+
.*******************************************************************************
.                   D2OP0000
.         display options 
.         Para's  : KEY20              key for DBS file
.                   DISPHALF = 0       display first code from DBS
.                   DISPHALF = 1       display middle codes from DSC
.                   DISPHALF = 2       display middle codes from TEMP5
.                     DISPLAST         the last displayed item on prev page
.*******************************************************************************
D2OP0000  CALL      CL2V0000                * clear variables routine 2
          DISPLAY   *P1:12,*EF              * clear screen from row 12
          MOVE      TEN2,CVERT
          CALL      RDPCDBS1                * position read PCPDBSFD file
          BRANCH    DISPHALF,D2OP1500,D2OP1500 * dont go to next record yet
.
D2OP1000  CALL      RKPCDBS1                * read next PCPDBSFD record
          BRANCH    OVRCD,D2OP7000          * end-of-file
.
          COMPARE   RECTYPE,PCDBTYPE        * same type of record ?
          GOTO      D2OP8000 IF NOT EQUAL   * no
          MATCH     DIAGCODE,PCDBCLSS       * same record code ?
          GOTO      D2OP8000 IF NOT EQUAL   * no
.
D2OP1500  MOVE      ZERO,EXIT               * set EXIT = 0
          MOVE      ZERO,DESCFLAG           * display item number     
.
          IF        DISPHALF = ZERO
            PACK      KEY13,RECTYPE,PCDBCODE,SP2
            CALL      RSPCDSC1                * position read PCDSCFD file
            ADD       ONE,LINE                * increment display line number
          ENDIF
          IF        DISPHALF = ONE  
            MOVE      DISPLAST,KEY13
            CALL      RDPCDSC1                * position read PCDSCFD file
            PERFORM   REDISP,RPPCDSC1         * do a previous read
            MOVE      ONE,RDSPHALF            * set for redisplay
            MOVE      ZERO,DISPHALF           * clear flag
            MOVE      SP20,DISPLAST           * clear key 
            MOVE      ONE,DESCFLAG            * dont display item number
            MOVE      ZERO,REDISP             * clear redisplay flag
          ENDIF
          IF        DISPHALF = 2
            MOVE      DISPLAST,KEY6
            CALL      RD5T0000
            PERFORM   REDISP,RP5T0000         * do a previous read
            MOVE      TWO,RDSPHALF            * set for redisplay
            MOVE      ZERO,DISPHALF           * clear flag
            MOVE      SP20,DISPLAST           * clear key 
            MOVE      ONE,DESCFLAG            * dont display item number
            MOVE      ZERO,REDISP             * clear redisplay flag
            MOVE      ONE,TMPORDSC
          ENDIF
.
D2OP2000  BRANCH    TMPORDSC,D2OP5100         
          CALL      RKPCDSC1                * read next PCDSCFD record
          BRANCH    OVRCD,D2OP1000          * end-of-file
.
          COMPARE   RECTYPE,PCDSTYPE        * same type of record ?
          GOTO      D2OP1000 IF NOT EQUAL   * no
          MATCH     PCDBCODE,PCDSCODE       * same record code ?
          GOTO      D2OP1000 IF NOT EQUAL   * no
.
          COMPARE   TWENTY3,CVERT           * screen overflow ?
          GOTO      D2OP3000 IF LESS        * no
.
          MOVE      PCDSCODE,NEXTCODE       * save the next code
          MOVE      ZERO,TMPORDSC           * set "temp or DSC file" to DSC(0)
          GOTO      D2OP9000
.
D2OP3000  BRANCH    DESCFLAG,D2OP4000
          BRANCH    FLAGCOND,D2OP3100       * clinic cond flag on-check PCPCRLFD
          GOTO      D2OP3200
.
. ------  clinic condition used - check if type of condition,  ------
.         clinic condition and related factor combination exists in
.         PCPCRLFD file.  If yes, option line number will be displayed
.         in reverse video.
.
D2OP3100  PACK      KEY36,TYPECOND,CLINCOND,DIAGCODE,PCDSCODE
          CALL      RDPCCRL1                * read PCPCRLFD record
          BRANCH    OVRCD,D2OP3200          * no record found
.
          DISPLAY   *P1:CVERT,*HON,LINE,*HOFF,". ";
          GOTO      D2OP3300
. ___________________________________________________________________________
.
D2OP3200  DISPLAY   *P1:CVERT,*V2LON,LINE,*HOFF,". ";
.
D2OP3300  PACK      NUMOPTN,PCDSTYPE,PCDSCODE,PCDSLINE,SP20
          STORE     NUMOPTN,LINE,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                 SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                 SELECT11,SELECT12
.
D2OP4000  BRANCH    EXIT,D2OP6000,D2OP6100
          MOVE      PCDSCODE,KEY9
          CALL      GDES0000               * get description code from temp file
          BRANCH    EXIT,D2OP6000:         * 1 = blank description code
                         D2OP6100          * 2 = record not found in temp file
.
D2OP5000  PACK      KEY6,DESCCODE,SP2
          PACK      LKEY33,PCDBTYPE,PCDBCLSS,PCDBCODE,SP20
          MOVE      LKEY33,OLDKEY33
          CALL      RS5T0000
.
D2OP5100  CALL      RK5T0000
          BRANCH    OVRCD,D2OP1000
          MATCH     XPDCODE,DESCCODE
          GOTO      D2OP1000 IF NOT EQUAL
.
          COMPARE   TWENTY3,CVERT
          GOTO      D2OP5200 IF LESS
          MOVE      ONE,TMPORDSC        * set "temp or DSC file" to temp (1)
          MOVE      TWO,DISPHALF
          MOVE      ONE,SCRNFLAG
          GOTO      D2OP9999
.
. ------  display description from temp index file 5  ------
.
D2OP5200  DISPLAY   *P5:CVERT,*V2LON,XPDDESC
          ADD       ONE,CVERT
          ADD       ONE,LINECNT1
          MOVE      TRUE,DESCFLAG
          PACK      DISPLAST,XPDCODE,XPDLINE,SP20
          STORE     DISPLAST,LINECNT1,DISPFRST    * save first displayed
          MOVE      ZERO,DISPHALF
          MOVE      ZERO,TMPORDSC
          MOVE      ONE,SAVORDSC              * in case of overcond on other
          GOTO      D2OP5100                    files 
.
. ------  display description from PCPDSCFD file  ------
.
D2OP6000  DISPLAY   *P5:CVERT,*V2LON,PCDSDESC    * record found in temp file
.                                                  display desc. in highlight
          GOTO      D2OP6200
.
D2OP6100  DISPLAY   *P5:CVERT,PCDSDESC           * record not found in temp file
.                                                  display desc. in normal video
D2OP6200  ADD       ONE,CVERT
          ADD       ONE,LINECNT1          * increment previous screen line count
          MOVE      TRUE,DESCFLAG
          PACK      DISPLAST,PCDSTYPE,PCDSCODE,PCDSLINE
          STORE     DISPLAST,LINECNT1,DISPFRST    * save first displayed
          PACK      LKEY33,PCDBTYPE,PCDBCLSS,PCDBCODE,SP20
          MOVE      ZERO,SAVORDSC
          GOTO      D2OP2000
.
. ------  end of PCPDBSFD file  ------
.
D2OP7000  MOVE      FALSE,SCRNFLAG               * set screen flag off
          PACK      LKEY33,Z25,Z25
          MOVE      ZERO,DISPHALF           * clear flag
          MOVE      SAVORDSC,TMPORDSC       * last value
          GOTO      D2OP9999
.
. ------  key does not match  ------
.
D2OP8000  MOVE      FALSE,SCRNFLAG          * set screen flag off
          MOVE      ZERO,DISPHALF           * clear flag
          MOVE      SAVORDSC,TMPORDSC       * last value
          GOTO      D2OP9999
.
. ------  full screen  ------
.
D2OP9000  MOVE      TRUE,SCRNFLAG                * set screen flag on
          CALL      RPPCDBS1                     * read previous PCPDBSFD record
.
.         this will work out if we have more of the current desc to display
.
D2OP9100  MOVE      ZERO,DISPHALF           * finished the current code
          CALL      RPPCDSC1
          BRANCH    OVRCD,D2OP9999
          MATCH     NEXTCODE,PCDSCODE
          IF        @EQUAL
            MOVE      ONE,DISPHALF            * have more of current code
          ENDIF
.
D2OP9999  RETURN
+
.*******************************************************************************
.*                                GDES0000                                     *
.*     routine to get desc code from temp file           called by : D2OP0000  *
.*                                                                             *
.*******************************************************************************
GDES0000  BRANCH    TEMPFILE,GDES1000,GDES2000,GDES3000,GDES4000
.
GDES1000  CALL      RD1T0000                     * read temp file 1 record
          BRANCH    OVRCD,GDES9000               * record not found
          MATCH     SP4,XREDESC                  * blank description code ?
          GOTO      GDES8000 IF EQUAL            * yes
          MOVE      XREDESC,DESCCODE             * no
          GOTO      GDES7000
.
GDES2000  CALL      RD2T0000                     * read temp file 2 record
          BRANCH    OVRCD,GDES9000               * record not found
          MATCH     SP4,XDEDESC                  * blank description code ?
          GOTO      GDES8000 IF EQUAL            * yes
          MOVE      XDEDESC,DESCCODE             * no
          GOTO      GDES7000
.
GDES3000  CALL      RD3T0000                     * read temp file 3 record
          BRANCH    OVRCD,GDES9000               * record not found
          MATCH     SP4,XOTDESC                  * blank description code ?
          GOTO      GDES8000 IF EQUAL            * yes
          MOVE      XOTDESC,DESCCODE             * no
          GOTO      GDES7000
.
GDES4000  CALL      RD4T0000                     * read temp file 4 record
          BRANCH    OVRCD,GDES9000               * record not found
          MATCH     SP4,XINDESC                  * blank description code ?
          GOTO      GDES8000 IF EQUAL            * yes
          MOVE      XINDESC,DESCCODE             * no
.
. ------  description code found  ------
.
GDES7000  MOVE      ZERO,EXIT                    * set EXIT = 0
          GOTO      GDES9999
.
. ------  blank description code  ------
.
GDES8000  MOVE      ONE,EXIT                     * set EXIT = 1
          GOTO      GDES9999
.
. ------  record not found  ------
.
GDES9000  MOVE      TWO,EXIT                     * set EXIT = 2
.
GDES9999  RETURN
+
.*******************************************************************************
.*                                S2OP0000                                     *
.*      enter the desired option, abort, finished, next or previous screen     *
.*                                                                             *
.*                called by : AREL0000, ADEF0000, AOUT0000, AINT0000           *
.*******************************************************************************
S2OP0000  MOVE      ZERO,REDISP             * clear redisplay flag
.
.******** Please Leave this Debug here as it is helpfull when debugging *****
.******** the screen handling                                           *****
.DISPLAY *P1:3,*DBON,"DISPFRST=",DISPFRST," DISPLAST=",DISPLAST,*EL;
.DISPLAY *P1:4,*DBON,"DISPHALF=",DISPHALF," RDSPHALF=",RDSPHALF,*EL;
.DISPLAY *P1:5,*DBON,"TMPORDSC=",TMPORDSC," LKEY33  =",LKEY33,*EL;
.KEYIN ANS
          BRANCH    SCRNFLAG,S2OP3000               * 1 = full screen
.                                                     0 = no more records
. ------  no more records  ------
.
          COMPARE   SCREENA,ONE                     * more than one screen ?
          GOTO      S2OP2000 IF LESS                * yes
.
.         only one screen
.         ---------------
.
S2OP1000  DISPLAY   *P1:24,*EL,"Enter the desired option, (",*V2LON,"A":
                               *HOFF,")bort, (",*V2LON,"F",*HOFF,")inished : "
          MOVE      "49",CCOL
.
S2OP1100  CALL      KEYI0000
          BRANCH    EXIT,S2OP1200:                  * 1 = alpha input,
                         S2OP1000:                  * 2 = invalid numeric input,
                         S2OP1300                   * 3 = null input
          GOTO      S2OP8000                        * valid numeric input
.
S2OP1200  BRANCH    REPLYF,S2OP1300,S2OP1300:       * 1&2 = invalid alpha input
                           S2OP9000,S2OP9000        * 3&4 = valid alpha input
.
S2OP1300  BEEP
          GOTO      S2OP1100
.
.         more than one screen
.         --------------------
.
.         * on last screen
.
S2OP2000  DISPLAY   *P1:24,*EL,"Enter the desired option, (",*V2LON,"A":
                               *HOFF,")bort, (",*V2LON,"F",*HOFF,")inished, (":
                               *V2LON,"P",*HOFF,")revious screen : "
          MOVE      "68",CCOL
.
S2OP2100  CALL      KEYI0000
          BRANCH    EXIT,S2OP2200:                  * 1 = alpha input,
                         S2OP2000:                  * 2 = invalid numeric input,
                         S2OP2300                   * 3 = null input
          GOTO      S2OP8000                        * valid numeric input
.
S2OP2200  BRANCH    REPLYF,S2OP2300:                * 1 = invalid alpha input
                           S2OP9000,S2OP9000,S2OP9000  * 2,3,4=valid alpha input
.
S2OP2300  BEEP
          GOTO      S2OP2100
.
. ------  full screen ------
.
S2OP3000  COMPARE   SCREENA,ONE
          GOTO      S2OP4000 IF LESS
.
.         * on first screen
.
S2OP3100  DISPLAY   *P1:24,*EL,"Enter the desired option, (",*V2LON,"A":
                               *HOFF,")bort, (",*V2LON,"F",*HOFF,")inished, (":
                               *V2LON,"N",*HOFF,")ext screen : "
          MOVE      "64",CCOL
.
S2OP3200  CALL      KEYI0000
          BRANCH    EXIT,S2OP3300:                  * 1 = alpha input,
                         S2OP3100:                  * 2 = invalid numeric input,
                         S2OP3400                   * 3 = null input
          GOTO      S2OP8000                        * valid numeric input
.
S2OP3300  BRANCH    REPLYF,S2OP9000:                * 1 = alpha input,
                           S2OP3400:                * 2 = invalid alpha input,
                           S2OP9000,S2OP9000        * 3 & 4 = valid alpha input
.
S2OP3400  BEEP
          GOTO      S2OP3200
.
.         * in-between screen(s)
.
S2OP4000  DISPLAY   *P1:24,*EL,"Enter the desired option, (",*V2LON,"A":
                               *HOFF,")bort, (",*V2LON,"F",*HOFF,")inished, (":
                               *V2LON,"N",*HOFF,")ext or (":
                               *V2LON,"P",*HOFF,")revious screen : "
          MOVE      "78",CCOL
.
S2OP4100  CALL      KEYI0000
          BRANCH    EXIT,S2OP4200:                  * 1 = alpha input,
                         S2OP4000:                  * 2 = invalid numeric input,
                         S2OP4300                   * 3 = null input
          GOTO      S2OP8000                        * valid numeric input
.
S2OP4200  BRANCH    REPLYF,S2OP9000,S2OP9000,S2OP9000,S2OP9000
.
S2OP4300  BEEP
          GOTO      S2OP4100
.
. ------  valid numeric input  ------
.
S2OP8000  MOVE      FALSE,EXIT              * set EXIT = 0
          MOVE      RDSPHALF,DISPHALF       * set to redisplay correctly
          MOVE      DISPFRST,DISPLAST       * set the first disp
          MOVE      ONE,REDISP              * set to redisplay
          MOVE      ZERO,TMPORDSC           * Reset cause D2OP will work it out
          GOTO      S2OP9999
.
. ------  valid alpha input  ------
.
S2OP9000  MOVE      TRUE,EXIT               * set EXIT = 1
.
S2OP9999  RETURN
+
.*******************************************************************************
.*                                APSN0000                                     *
.*        add a care plan - routine to handle previous screen option           *
.*             called by : AREL0000, ADEF0000, AOUT0000, AINT0000              *
.*******************************************************************************
APSN0000  MOVE      ZERO,LINECNT             * initialize line count
          BRANCH    SCRNFLAG,APSN1000        * 1 = last screen was a full screen
.
          ADD       TEN1,LINECNT1
          MOVE      LINECNT1,NUMLINES        * set no. of lines to previous
.                                              screen line count
          GOTO      APSN1100
.
APSN1000  MOVE      TWENTY2,NUMLINES         * set no. of lines to 22
.
.         lkey33 will contain the key to pcpdbsaf for the last displayed item on
.         the current screen, therefore an exact read is done to get the 
.         correct details
.
APSN1100  MOVE      LKEY33,KEY20             * use saved last key
          CALL      RDPCDBS1                 * read PCPDBSFD file
          MOVE      DISPLAST,KEY13           * set key 13
          COMPARE   ZERO,OVRCD
          GOTO      APSN2050 IF EQUAL        * read succeeded
.
. ------- loop over DBS file backwards -------
.
APSN2000  CALL      RPPCDBS1                 * read previous PCPDBSFD record
          BRANCH    OVRCD,APSN9000           * end-of-file
.
          COMPARE   RECTYPE,PCDBTYPE         * same type of record ?
          GOTO      APSN8500 IF NOT EQUAL    * no
          MATCH     DIAGCODE,PCDBCLSS        * same nursing diagnosis ?
          GOTO      APSN8500 IF NOT EQUAL    * no
.
          COMPARE   LINECNT,NUMLINES         * line count > no. of lines ?
          GOTO      APSN8000 IF LESS         * yes
.
          PACK      KEY13,RECTYPE,PCDBCODE,NINES
          MOVE      ZERO,TMPORDSC
.
. ------- start loop over pcpdscaf -------
.
APSN2050  BRANCH    TMPORDSC,APSN3000        * determine temp or DSC file
.
. ------  last display was from DSC file, Key 13 has been set ------
.
          CALL      RDPCDSC1                * read last item
          BRANCH    OVRCD,APSN2100          * incorrect read
.
          ADD       ONE,LINECNT             * add to line count
.
APSN2100  CALL      RPPCDSC1                * read previous PCPDSCFD record
          BRANCH    OVRCD,APSN2000          * end-of-file
          COMPARE   RECTYPE,PCDSTYPE        * same type of record ?
          GOTO      APSN2000 IF NOT EQUAL   * no
          MATCH     PCDBCODE,PCDSCODE       * same record code ?
          GOTO      APSN2000 IF NOT EQUAL   * no
.
.         valid record, set the record displayed variable
.
          PACK      DISPLAST,PCDSTYPE,PCDSCODE,PCDSLINE
          MOVE      ZERO,TMPORDSC
.
. ------  last display was from temp file  ------
.
APSN3000  MOVE      PCDBCODE,KEY9
          CALL      GDES0000           * routine to get desc code from temp file
          IF        EXIT > 0
            ADD         ONE,LINECNT
            COMPARE     LINECNT,NUMLINES
            GOTO        APSN8000 IF LESS
            GOTO        APSN2100
          ENDIF
.
.  Exit = 0 from GDES0000 so use tempfile stuff
.
APSN3050  IF        TMPORDSC = 1
            UNPACK    DISPLAST,XPDCODE,DIM2
            MOVE      DIM2,XPDLINE
            ADD       ONE,XPDLINE
            PACK      KEY6,XPDCODE,XPDLINE
          ELSE
            PACK      KEY6,DESCCODE,NINES
          ENDIF
          CALL      RS5T0000                 * position read temp file 5
.
APSN3100  CALL      RP5T0000                 * read previous temp file record
          BRANCH    OVRCD,APSN2000
          MATCH     DESCCODE,XPDCODE         * same description code ?
          GOTO      APSN2000 IF NOT EQUAL    * no
.
. ------  increment line count and check if over max no. of lines  -----
.
APSN4000  ADD       ONE,LINECNT              * increment line count
          PACK      DISPLAST,XPDCODE,XPDLINE,SP30
          IF        NUMLINES < LINECNT
       
            MOVE      ONE,TMPORDSC
            MOVE      TWO,DISPHALF
            MOVE      ZERO,RDSPHALF
            PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
            MOVE      OLDKEY33,LKEY33
            GOTO      APSN9999
          ENDIF
          GOTO      APSN3100
.
.----------------------------------------------------------------------------
.         max no. of lines reached
.         this has already got DISPLAST set
.         NOTE: KEY20 is set to the previous records values for DBS,
.               but we must set DISPHALF to one no matter what. Even if it 
.               should be zero, D2OP0000 manages to fix everything up
.               when the screen is redisplayed
.----------------------------------------------------------------------------
APSN8000  PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE
          MOVE      ONE,DISPHALF            * set so d2op0000 doesnt next read
          MOVE      ZERO,RDSPHALF           * doesnt matter as it will get 
.                                             set to one by d2op0000
          GOTO      APSN9999
.
.----------------------------------------------------------------------------
.         different codes on previous read for DBS  
.         so when get to d2op0000, want it to read and next read
.         on pcpdbsaf and start from the beginning for pcpdcsaf
.         NOTE: KEY20 is set to the previous records values for DBS, but 
.               D2OP0000 will do a read then a next read to get back to 
.               the correct details
.----------------------------------------------------------------------------
APSN8500  PACK      KEY20,PCDBTYPE,PCDBCLSS,PCDBCODE  * key for pcpdbsaf
          MOVE      ZERO,DISPHALF           * make d2op0000 do a next read
          MOVE      ZERO,RDSPHALF           * not half way through on first page
          GOTO      APSN9999
.
. -------------------------------------------------------------------------
.         EOF for DBS,
.         so when get to d2op0000, want it to read and next read
.         on pcpdbsaf and start from the beginning for pcpdcsaf
. -------------------------------------------------------------------------
APSN9000  MOVE      SP20,KEY20              * key for pcpdbsaf
          MOVE      ZERO,DISPHALF           * make d2op0000 do a next read
          MOVE      ZERO,RDSPHALF           * not half way through on first page
.
APSN9999  RETURN
+
.*******************************************************************************
.*                                ABRT0000                                     *
.*                         abort option routine                                *
.*                                                                             *
.*        called by : AREL0000, ADEF0000, AOUT0000, AINT0000, ACCP0000         *
.*******************************************************************************
ABRT0000  MOVE      SIX,FORM2                   * initialize type of record to 6
          PACK      KEY20,FORM2,DIAGCODE,SP9
          CALL      RSPCDBS1                    * position read PCPDBSFD file
          CALL      RKPCDBS1                    * read next PCPDBSFD record
          BRANCH    OVRCD,ABRT9000              * end-of-file
.
          COMPARE   FORM2,PCDBTYPE              * same type of record ?
          GOTO      ABRT9000 IF NOT EQUAL       * no
          MATCH     DIAGCODE,PCDBCLSS           * same nursing diagnosis ?
          GOTO      ABRT9000 IF NOT EQUAL       * no
.
          DISPLAY   *P1:24,*EL,"Do you wish to look at the differential ":
                               "diagnoses (",*V2LON,"Y",*HOFF,"/",*V2LON:
                               "N",*HOFF,") ? "
.
ABRT1000  KEYIN     *P59:24,*DV,UNDLN1,*P59:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                     * null input ?
          GOTO      ABRT2000 IF EQUAL           * yes
.
          REP       UPPLOW,ANS                  * replace lower case with u/case
          DISPLAY   *P59:24,*V2LON,ANS
.
          MATCH     ANSY,ANS                    * input = "Y" ?
          GOTO      ABRT8000 IF EQUAL           * no
          MATCH     ANSN,ANS                    * input = "N" ?
          GOTO      ABRT9000 IF EQUAL           * no
.
ABRT2000  BEEP
          GOTO      ABRT1000                    * invalid input - re-enter
.
. ------  yes - want to look at differential diagnoses  ------
.
ABRT8000  MOVE      FALSE,EXIT                  * set EXIT = 0
          GOTO      ABRT9999
.
. ------  no - don't want to look at differential diagnoses  ------
.
ABRT9000  MOVE      TRUE,EXIT                   * set EXIT = 1
.
ABRT9999  RETURN
+
.*******************************************************************************
.*                                SREL0000                                     *
.*        selected option of Related Factor              called by : AREL0000  *
.*******************************************************************************
SREL0000  CALL      VNUM0000            * get valid selected option
          UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      TYPE,RECTYPE
          MOVE      ONE,TEMPFILE        * set temp file indicatior to 1
.
          CALL      CHKS0000            * was option already selected ?
          BRANCH    EXIT,SREL9000       * yes
.
          MOVE      NUMOPTN,KEY13       * no - set key for accessing PCPDSCFD
          CALL      RDPCDSC1            * read PCPDSCFD record
.
SREL1000  CALL      DESC0000            * check for & replace strings routine
          BRANCH    EXIT,SREL1100:      * 1=either or both strings found,
                         SREL8000       * 2=cancel after invoking W/Processor
          GOTO      SREL1200
.                                               
SREL1100  CALL      ARPL0000            * accept "_____" string replacement(s) ?
          BRANCH    CEXIT,SREL1000      * no
.
SREL1200  MOVE      PCDSCODE,XRECODE    * set temp related factor code
          BRANCH    EXIT,SREL2000       * either or both strings found
          MOVE      SP4,XREDESC         * no string found - set temp related
.                                         factor description code blank
          GOTO      SREL2100
.
SREL2000  MOVE      XPDCODE,XREDESC     * set temp related factor description
.                                         code to temp file 5 desc code
SREL2100  MOVE      XRECODE,KEY9
          CALL      WR1T0000            * write a temp related factor record
.
          BRANCH    ADCHFLAG,SREL2200   * change care plan option
          GOTO      SREL7000            * add care plan option
.
SREL2200  BRANCH    NOSTFLAG,SREL7000   * no string found
          CALL      WKTP0000            * string found - write from temp work
.                                         file to temp desc file (file 5)
.
SREL7000  MOVE      ZERO,EXIT           * set EXIT = 0
          GOTO      SREL9999
.
. ------  Cancel option selected after invoking Word Processor  ------
.
SREL8000  MOVE      ONE,EXIT            * set EXIT = 1
          GOTO      SREL9999
.
. ------  option has already been selected  ------
.
SREL9000  MOVE      TWO,EXIT            * set EXIT = 2
.
SREL9999  RETURN
+
.*******************************************************************************
.                   CHKS0000
.         check for already selected option - if found, toggle selection
.*******************************************************************************
CHKS0000  MOVE      RECCODE,KEY9
          BRANCH    TEMPFILE,CHKS1000,CHKS2000,CHKS3000,CHKS4000
.
CHKS1000  CALL      RD1T0000                  * read temp file 1 record
          BRANCH    OVRCD,CHKS9000            * record not found
.
          MATCH     SP4,XREDESC
          GOTO      CHKS7000 IF EQUAL         * cant change description
.
          MOVE      XREDESC,DESCCODE          * set description code
          GOTO      CHKS5000
.
CHKS2000  CALL      RD2T0000                  * read temp file 2 record
          BRANCH    OVRCD,CHKS9000            * record not found
.
          MATCH     SP4,XDEDESC               * blank description code ?
          GOTO      CHKS7000 IF EQUAL         * no
          MOVE      XDEDESC,DESCCODE          * yes
          GOTO      CHKS5000
.
CHKS3000  CALL      RD3T0000                  * read temp file 3 record
          BRANCH    OVRCD,CHKS9000            * record not found
.
          MATCH     SP4,XOTDESC               * blank description code ?
          GOTO      CHKS7000 IF EQUAL         * no
          MOVE      XOTDESC,DESCCODE          * yes
          GOTO      CHKS5000
.
CHKS4000  CALL      RD4T0000                  * read temp file 4 record
          BRANCH    OVRCD,CHKS9000            * record not found
.
          MATCH     SP4,XINDESC               * blank description code ?
          GOTO      CHKS7000 IF EQUAL         * no
          MOVE      XINDESC,DESCCODE          * yes
.
. ------  description code not blank so can Modify description ------
.         ask the user if they want to Modify details or Delete item
.
CHKS5000  KEYIN     *P1:24,*EL,"(",*V2LON,"M",*HOFF,")odify details or (":
                    *V2LON,"D",*HOFF,")elete item ? ",*V2LON,ANS
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
          MATCH     ANSD,ANS
          GOTO      CHKS6000 IF EQUAL
          MATCH     ANSM,ANS
          GOTO      CHKS5000 IF NOT EQUAL   * invalid
.
.         modify the details in the temp file
.
          CALL      MWPD0000                * modify word processer details
          ADD       ONE,SELECTED
          GOTO      CHKS8300
.
.         delete description record(s) in temp desc file (index file 5)
.
CHKS6000  CALL      CLT50000                * clear out temp file 5 
          PACK      KEY6,DESCCODE,SP2
          CALL      RS5T0000
          CALL      RK5T0000
          BRANCH    OVRCD,CHKS7000
.
          MATCH     XPDCODE,DESCCODE          * same description code 
          GOTO      CHKS7000 IF NOT EQUAL     * no
.
          PACK      KEY6,XPDCODE,XPDLINE
          CALL      DE5T0000                  * delete temp desc file record
          GOTO      CHKS6000
.
. ------  delete temp index file record read  ------
.
CHKS7000  BRANCH    TEMPFILE,CHKS7100,CHKS7200,CHKS7300,CHKS7400
.
CHKS7100  CALL      DE1T0000                  * delete temp index file 1 record
          GOTO      CHKS8000
.
CHKS7200  CALL      DE2T0000                  * delete temp index file 2 record
          GOTO      CHKS8000
.
CHKS7300  CALL      DE3T0000                  * delete temp index file 3 record
          GOTO      CHKS8000
.
CHKS7400  CALL      DE4T0000                  * delete temp index file 4 record
.
. ------  record found  ------
.
CHKS8000  BRANCH    ADCHFLAG,CHKS8100         * change care plan option
          GOTO      CHKS8200                  * add care plan option
.
CHKS8100  COMPARE   ZERO,SELECTED             * no. of selections = 0 ?
          GOTO      CHKS8300 IF EQUAL         * yes
.
CHKS8200  SUB       ONE,SELECTED              * decrease no. of selections by  1
.
CHKS8300  MOVE      TRUE,EXIT                 * set EXIT = 1
          GOTO      CHKS9999
.
. ------  record not found  ------
.
CHKS9000  MOVE      FALSE,EXIT                 * set EXIT = 0
.
CHKS9999  RETURN
+
.*******************************************************************************
.*                                ADIF0000                                     *
.*             add a care plan - select Differential Diagnoses                 *
.*                                                                             *
.*        called by : AREL0000, ADEF0000, AOUT0000, AINT0000, ACCP0000         *
.*******************************************************************************
ADIF0000  DISPLAY   *P1:11,*EL,*P5:11,*V2LON,"Differential Diagnoses"
.
          MOVE      ONE,SCREENA             * initialize screen counter
          MOVE      SIX,RECTYPE             * initialize type of record to 6
          MOVE      DIAGCODE,RECCODE        * initialize record code to nursing
.                                             diagnosis code
          PACK      KEY20,RECTYPE,DIAGCODE,SP9
.
ADIF1000  DISPLAY   *P1:12,*EF              * clear screen from row 12
          MOVE      TEN2,CVERT
          CALL      D1OP0000                * display Diff. Diagnoses option(s)
.
          CALL      S1OP0000                * select option
          BRANCH    EXIT,ADIF1100:          * 1 = alpha input
                         ADIF9000           * 2 = null input
          GOTO      ADIF8000                * valid numeric input
.
ADIF1100  BRANCH    REPLYF,ADIF2000:        * 1 = next screen
                           ADIF3000         * 2 = previous screen
.
. ------  next screen option chosen  ------
.
ADIF2000  MOVE      LKEY33,KEY20            * use last saved key
          ADD       ONE,SCREENA             * increase screen counter by 1
          GOTO      ADIF1000
.
. ------  previous screen option chosen  ------
.
ADIF3000  CALL      SDPS0000                * previous screen option routine
          SUB       ONE,SCREENA             * decrease screen counter by 1
          GOTO      ADIF1000
.
. ------  valid numeric value entered  ------
.
ADIF8000  CALL      CRTI0000                * delete and re-create temp files
          MOVE      TRUE,CATFLAG            * set category display flag on
          CALL      SNUR0000                * check selected option for strings
          BRANCH    EXIT,ADIF8100           * 1=cancel selected after W/P has
.                                               been invoked
          MOVE      PCDSCODE,DIAGCODE       * save new diagnosis code
          MOVE      PCDSDESC,DIAGDESC       * save new diagnosis description
.
          MOVE      TRUE,DIFFDIAG           * set differential diagnosis flag on
          MOVE      FALSE,EXIT              * set EXIT = 0
          GOTO      ADIF9999
.
ADIF8100  DISPLAY   *P1:9,"Nursing Diagnosis: ",*V2LON,DIAGDESC
          GOTO      ADIF0000
.
. ------  null input  ------
.
ADIF9000  MOVE      TRUE,EXIT               * set EXIT = 1
.
ADIF9999  RETURN
+
.*********************************************************************
.*                  ADEF0000                    Called by : APLN0000 *
.*        add a care plan - select Def. Characteristic(s)   CDEF0000 *
.*********************************************************************
ADEF0000  BRANCH    PCCNUDEF,ADEF0100
          GOTO      ADEF8000
.
ADEF0100  DISPLAY   *P1:11,*EF,*P5:11,*V2LON,*ULON,DFCHAR
.
          MOVE      ZERO,TMPORDSC         * initialize tmp or dsc file flag
          MOVE      ONE,SCREENA           * initialize screen counter
          MOVE      ZERO,SELECTED         * initialize no. of selections counter
          MOVE      TWO,TEMPFILE          * set temp file indicator to 2
          MOVE      TEN,RECTYPE           * set type of record to 10
          MOVE      ZERO,DISPHALF           * clear half displayed flag 
          MOVE      ZERO,RDSPHALF           * clear redisplay half disp. flag
          MOVE      SP20,DISPLAST           * clear last displayed key
          MOVE      SP20,DISPFRST           * clear first displayed key
          PACK      KEY20,RECTYPE,DIAGCODE,SP9
.
ADEF1000  CALL      EDIC0000              * display Defining Char. option(s)
.
ADEF1100  CALL      S2OP0000              * select option
          BRANCH    EXIT,ADEF1200         * 1 = alpha input
          GOTO      ADEF6000              * 0 = valid numeric input
.
ADEF1200  BRANCH    REPLYF,ADEF2000:      * 1 = Next screen,
                           ADEF3000:      * 2 = Previous screen,
                           ADEF4000:      * 3 = Abort,
                           ADEF5000       * 4 = Finished
.
. ------  next screen option chosen  ------
.
ADEF2000  MOVE      LKEY33,KEY20          * use last saved key
          ADD       ONE,SCREENA           * increase screen counter by 1
          GOTO      ADEF1000
.
. ------  previous screen option chosen  ------
.
ADEF3000  CALL      EDID0000              * previous screen option routine 
          SUB       ONE,SCREENA           * decrease screen counter by 1
          GOTO      ADEF1000
.
. ------  abort option chosen  ------
.
ADEF4000  BRANCH    ADCHFLAG,ADEF4100     * change care plan option
          CALL      EDIE0000              * implement abort routine
          BRANCH    EXIT,ADEF9000         * ask for nursing diag. again
          GOTO      ADEF7000              * display differential diagnoses
.
ADEF4100  COMPARE   ONE,SELECTED          * has selection been made ?
          GOTO      ADEF9999 IF LESS      * no - exit
.
          DISPLAY   *P1:24,*EL,*B,"Cannot abort once a Related Factor is ":
                                  "selected.   ";
          CALL      HITENTER
          GOTO      ADEF1100
.
. ------  finished option chosen  ------
.
ADEF5000  COMPARE   ONE,SELECTED          * no. of selections > 1 ?
          GOTO      ADEF8000 IF NOT LESS  * yes
.
          DISPLAY   *P1:22,*EL,*P1:23,*EL,*B,*V2LON:
                    "You haven't entered any characteristics.  ",*HOFF:
                    *P1:24,"Do you want to (":
                    *V2LON,ANSA,*HOFF,")bort, (":
                    *V2LON,ANSC,*HOFF,")ontinue or (":
                    *V2LON,ANSE,*HOFF,")nter characteristics ? ";
.
ADEF5100  KEYIN     *P65:24,*DV,UNDLN1:
                    *P65:24,*V2LON,ANS
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS            * no - replace lower case with uppper 
          MATCH     ANSA,ANS
          GOTO      ADEF4000 IF EQUAL       * ABORT
          MATCH     ANSE,ANS
          GOTO      ADEF0000 IF EQUAL       * ENTER DETAILS
          MATCH     ANSC,ANS
          GOTO      ADEF8000 IF EQUAL       * CONTINUE
          BEEP
          GOTO      ADEF5100              * invalid input - re-enter
.
. ------  valid numeric value entered  ------
.
ADEF6000  MOVE      TRUE,CATFLAG          * set category display flag on
          MOVE      DFCHAR,TYPENAME       * set type of record name
.
          CALL      SDEF0000              * check description line(s) for
.                                           "(specify)" and/or "_____" strings
          BRANCH    EXIT,ADEF6100:        * 1 = cancel after invoking W/P
                         ADEF1000         * 2 = option has already been selected
.
          ADD       ONE,SELECTED          * increase no. of selections by 1
          GOTO      ADEF1000
.
ADEF6100  CALL      D2WP0000              * display header 2
          GOTO      ADEF0000
.
. ------  display differential diagnoses for current nursing diagnosis  ------
.
ADEF7000  CALL      ADIF0000              * display available option(s) & select
          BRANCH    EXIT,ADEF9000         * 1 = null input
          MOVE      TWO,EXIT              * set EXIT = 2
          GOTO      ADEF9999
.
. ------  proceed to ask for desired outcome  ------
.
ADEF8000  MOVE      ZERO,EXIT             * set EXIT = 0
          GOTO      ADEF9999
.
. ------  no differential diagnoses/don't wish to look at differential diagnoses
.
ADEF9000  MOVE      ONE,EXIT              * set EXIT = 1
          MOVE      SAVEDIAG,NUMOPTN      * use saved diagnosis category
.
ADEF9999  RETURN
+
.*******************************************************************************
.*                                SDEF0000                                     *
.*        selected option of Defining Characteristics    called by : ADEF0000  *
.*******************************************************************************
SDEF0000  CALL      VNUM0000            * get valid selected option
          UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      TYPE,RECTYPE
          MOVE      TWO,TEMPFILE        * set temp file indicator to 2
.
          CALL      CHKS0000            * was option already selected ?
          BRANCH    EXIT,SDEF9000       * yes
.
          MOVE      NUMOPTN,KEY13       * no - set key for accessing PCPDSCFD
          CALL      RDPCDSC1            * read PCPDSCFD record
.
SDEF1000  CALL      DESC0000            * check for and replace strings routine
          BRANCH    EXIT,SDEF1100:      * 1 = either or both strings found,
                         SDEF8000         2 = cancel after invoking W/Processor
          GOTO      SDEF1200
.
SDEF1100  CALL      ARPL0000            * accept "_____" string replacement(s) ?
          BRANCH    CEXIT,SDEF1000      * no
.
SDEF1200  MOVE      PCDSCODE,XDECODE    * set temp defining characteristic code
          BRANCH    EXIT,SDEF2000       * either or both strings found
          MOVE      SP4,XDEDESC         * no string found - set temp defining
.                                         characteristic desc code blank
          GOTO      SDEF2100
.
SDEF2000  MOVE      XPDCODE,XDEDESC     * set temp def. characteristic desc
.                                         code to temp file 5 description code
SDEF2100  MOVE      XDECODE,KEY9
          CALL      WR2T0000            * write a temp def. characteristic rec
.
          BRANCH    ADCHFLAG,SDEF2200   * change care plan option
          GOTO      SDEF7000            * add care plan option
.
SDEF2200  BRANCH    NOSTFLAG,SDEF7000   * no string found
          CALL      WKTP0000            * string found - write from temp work
.                                         file to temp desc file (file 5)
.
SDEF7000  MOVE      ZERO,EXIT           * set EXIT = 0
          GOTO      SDEF9999
.
. ------  Cancel option selected after invoking Word Processor  ------
.
SDEF8000  MOVE      ONE,EXIT            * set EXIT = 1
          GOTO      SDEF9999
.
. ------  option has already been selected  ------
.
SDEF9000  MOVE      TWO,EXIT            * set EXIT = 2
.
SDEF9999  RETURN
+
.*******************************************************************************
.*                                AOUT0000                                     *
.*        add a care plan - select Desired Outcome(s)    called by : APLN0000  *
.*                                                                   COUT0000  *
.*******************************************************************************
AOUT0000  DISPLAY   *P1:11,*EF,*P5:11,*V2LON,*ULON,DSOUTC
.
          MOVE      ZERO,TMPORDSC         * initialize temp or dsc file
          MOVE      ONE,SCREENA           * initialize screen counter
          MOVE      ZERO,SELECTED         * set select flag off
          MOVE      THREE,TEMPFILE        * set temp file indicator to 3
          MOVE      SEVEN,RECTYPE         * set type of record to 7
          MOVE      ZERO,DISPHALF           * clear half displayed flag 
          MOVE      ZERO,RDSPHALF           * clear redisplay half disp. flag
          MOVE      SP20,DISPLAST           * clear last displayed key
          MOVE      SP20,DISPFRST           * clear first displayed key
          PACK      KEY20,RECTYPE,DIAGCODE,SP9
.
AOUT1000  CALL      EDIC0000              * display Desired Outcome option(s)
.
AOUT1100  CALL      S2OP0000              * select option
          BRANCH    EXIT,AOUT1200         * 1 = alpha input
          GOTO      AOUT6000              * 0 = valid numeric input
.
AOUT1200  BRANCH    REPLYF,AOUT2000:      * 1 = Next screen,
                           AOUT3000:      * 2 = Previous screen,
                           AOUT4000:      * 3 = Abort,
                           AOUT5000       * 4 = Finished
.
. ------  next screen option chosen  ------
.
AOUT2000  MOVE      LKEY33,KEY20          * use last saved key
          ADD       ONE,SCREENA           * increase screen counter by 1
          GOTO      AOUT1000
.
. ------  previous screen option chosen  ------
.
AOUT3000  CALL      EDID0000              * previous screen option routine 
          SUB       ONE,SCREENA           * decrease screen counter by 1
          GOTO      AOUT1000
.
. ------  abort option chosen  ------
.
AOUT4000  BRANCH    ADCHFLAG,AOUT4100     * change care plan option
          CALL      EDIE0000              * implement abort routine
          BRANCH    EXIT,AOUT9000         * ask for nursing diag. again
          GOTO      AOUT7000              * display differential diagnoses
.
AOUT4100  COMPARE   ONE,SELECTED          * has selection been made ?
          GOTO      AOUT9999 IF LESS      * no - exit
.
          DISPLAY   *P1:24,*EL,*B,"Cannot abort once a Related Factor is ":
                                  "selected.   ";
          CALL      HITENTER
          GOTO      AOUT1100
.
. ------  finished option chosen  ------
.
AOUT5000  COMPARE   ONE,SELECTED          * no. of selections > 1 ?
          GOTO      AOUT5300 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"You haven't entered any desired outcomes.  ":
                               "Do you want to abort (",*V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
.
AOUT5100  KEYIN     *P73:24,*DV,UNDLN1,*P73:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS               * null input ?
          GOTO      AOUT5200 IF EQUAL     * yes
          REP       UPPLOW,ANS            * no - replace lower case with upper
          DISPLAY   *P73:24,*V2LON,ANS
.
          MATCH     ANSY,ANS              * input = "Y" ?
          GOTO      AOUT4000 IF EQUAL     * yes
          MATCH     ANSN,ANS              * input = "N" ?
          GOTO      AOUT1100 IF EQUAL     * yes
.
AOUT5200  BEEP
          GOTO      AOUT5100              * invalid input - re-enter
.
AOUT5300  BRANCH    ADCHFLAG,AOUT9999     * change care plan option - exit
          CALL      ATAR0000              * add care plan option - ask for
.                                           target date
          GOTO      AOUT8000
.
. ------  valid numeric value entered  ------
.
AOUT6000  MOVE      TRUE,CATFLAG          * set category dispplay flag on
          MOVE      DSOUTC,TYPENAME       * set type of record name
.
          CALL      SOUT0000              * check description line(s) for
.                                           "(specify)" and/or "_____" strings
          BRANCH    EXIT,AOUT6100:        * 1 = cancel after invoking W/P
                         AOUT1000         * 2 = option has already been selected
.
          ADD       ONE,SELECTED          * increase no. of selections by 1
          GOTO      AOUT1000
.
AOUT6100  CALL      D2WP0000              * display header 2
          GOTO      AOUT0000
.
. ------  display differential diagnoses for current nursing diagnosis  ------
.
AOUT7000  CALL      ADIF0000              * display available option(s) & select
          BRANCH    EXIT,AOUT9000         * 1=null input
          MOVE      TWO,EXIT              * set EXIT = 2
          GOTO      AOUT9999
.
. ------  proceed to ask for nursing interventions  ------
.
AOUT8000  MOVE      ZERO,EXIT             * set EXIT = 0
          GOTO      AOUT9999
.
. ------  no differential diagnoses/don't wish to look at differential diagnoses
.
AOUT9000  MOVE      ONE,EXIT              * set EXIT = 1
          MOVE      SAVEDIAG,NUMOPTN      * use saved diagnosis category
.
AOUT9999  RETURN
+
.*******************************************************************************
.*                                ATAR0000                                     *
.*        routine to ask for target date                 called by : AOUT0000  *
.*******************************************************************************
ATAR0000  DISPLAY   *P1:11,*EF,"Desired Outcome  : ";
          MOVE      TEN1,CVERT
.
          MOVE      SP9,KEY9
          CALL      RS3T0000              * position read temp file 3
.
ATAR1000  CALL      RK3T0000              * read next temp file 3 record
          BRANCH    OVRCD,ATAR9999        * end-of-file
.
          MATCH     SP4,XOTDESC           * blank description code ?
          GOTO      ATAR2000 IF EQUAL     * yes
.
          PACK      KEY6,XOTDESC,SP2
          CALL      RS5T0000              * position read temp desc file(file 5)
.
ATAR1100  CALL      RK5T0000              * read next temp desc record
          BRANCH    OVRCD,ATAR3000        * end-of-file
.
          MATCH     XOTDESC,XPDCODE       * same description code ?
          GOTO      ATAR3000 IF NOT EQUAL * no
.
          DISPLAY   *P20:CVERT,*EL,XPDDESC
.
          ADD       ONE,CVERT
          GOTO      ATAR1100
.
. ------  blank description code - get description line(s) from PCPDSCFD  ------
.
ATAR2000  MOVE      SEVEN,FORM2
          PACK      KEY13,FORM2,XOTCODE,SP2
          CALL      RSPCDSC1              * position read PCPDSCFD file
.
ATAR2100  CALL      RKPCDSC1              * read next PCPDSCFD record
          BRANCH    OVRCD,ATAR3000        * end-of-file
.
          COMPARE   FORM2,PCDSTYPE        * same type of record ?
          GOTO      ATAR3000 IF NOT EQUAL * no
          MATCH     XOTCODE,PCDSCODE      * same record code ?
          GOTO      ATAR3000 IF NOT EQUAL * no
.
          DISPLAY   *P20:CVERT,*EL,PCDSDESC
.
          ADD       ONE,CVERT
          GOTO      ATAR2100
.
. ------  end of file or key does not match  ------
.
ATAR3000  CALL      UPTD0000              * routine to update target date
          DISPLAY   *P20:11,*EF
          MOVE      TEN1,CVERT
          GOTO      ATAR1000              * ask for another target date
.
ATAR9999  RETURN
+
.*******************************************************************************
.*                                UPTD0000                                     *
.*        routine to update target date                  called by : ATAR0000  *
.*                                                                   OUTC0000  *
.*******************************************************************************
UPTD0000  DISPLAY   *P1:16,*EF:
                    *P4:16,*V2LON,*ULON,"Target Date",*HOFF:
                    *P1:17,*V2LON,ZERO,*HOFF,". No Target Date":
                    *P1:18,*V2LON,ONE,*HOFF,". By a certain date":
                    *P1:19,*V2LON,TWO,*HOFF,". In days":
                    *P1:20,*V2LON,THREE,*HOFF,". In weeks":
                    *P1:21,*V2LON,FOUR,*HOFF,". At all times"
.
UPTD1000  DISPLAY   *P1:23,*EL,"Enter the desired option : _";
          KEYIN     *P28:23,*V2LON,FORM1:
                    *P28:23,*DV,FORM1
.
          MOVE      SP8,XOTDATE             * clear date
          MOVE      ZERO,XOTDYWK            * clear days
          MOVE      ZERO,XOTTYPE            * default to no target date
          COMPARE   ZERO,FORM1
          GOTO      UPTD6000 IF EQUAL       * no target date
.
          BRANCH    FORM1,UPTD2000,UPTD3000,UPTD4000,UPTD5000
.
UPTD1100  BEEP
          GOTO      UPTD1000
.
. ------  By a certain date  ------
.
UPTD2000  DISPLAY   *P34:23,*EL,"Enter the date : ";
          PACK      CURDATE,CCC,CYY,CMM,CDD           * get today's date
          REP       " 0",CURDATE
.
          UNPACK    XOTDATE,CCENT,CYEAR,CMON,CDAY
          MATCH     SP2,CCENT
          GOTO      UPTD2050 IF NOT EQUAL
.
          MOVE      CCC,CCENT
.
UPTD2050  MOVE      "51",CCOL
          MOVE      "23",CVERT
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      KEYDATE         
          BRANCH    OVRCD,UPTD2000
.
          PACK      XOTDATE,CCENT,CYEAR,CMON,CDAY     * get target date
          REP       " 0",XOTDATE
.
          MATCH     CURDATE,XOTDATE            * target date >= today's date ?
          GOTO      UPTD2100 IF NOT LESS       * yes
.
          DISPLAY   *P1:24,*EL,*B,"Date must be today's date or future date. ";
          CALL      HITENTER
          DISPLAY   *P1:23,*EL,"Enter the desired option : ",*V2LON,FORM1;
          GOTO      UPTD2000
.
UPTD2100  MOVE      ONE,XOTTYPE                * set target type to 1
          MOVE      ZERO,XOTDYWK               * set target no. of days or weeks
          GOTO      UPTD6000                     to input
.
. ------  In days  ------
.
UPTD3000  DISPLAY   *P34:23,*EL,"Enter the number of days : ";
          KEYIN     *P61:23,*DV,UNDLN3,*P61:23,*V2LON,NUMDYWK
          DISPLAY   *P61:23,*V2LON,NUMDYWK
.
          CALL      CLTD0000                  * routine to calculate target date
          MOVE      TWO,XOTTYPE               * set target type to 2
          MOVE      NUMDYWK,XOTDYWK           * set target no. of days or weeks 
          GOTO      UPTD6000                    to days input
.
. ------  In weeks  ------
.
UPTD4000  DISPLAY   *P34:23,*EL,"Enter the number of weeks : ";
          KEYIN     *P62:23,*DV,UNDLN3,*P62:23,*V2LON,NUMDYWK
          DISPLAY   *P62:23,*V2LON,NUMDYWK
.
          MOVE      NUMDYWK,XOTDYWK           * set target no. of days or weeks 
.                                               to weeks input
          MULT      SEVEN,NUMDYWK             * convert weeks into no. of days
          CALL      CLTD0000                  * routine to calculate target date
          MOVE      THREE,XOTTYPE             * set target type to 3
          GOTO      UPTD6000
.
. ------  At all times  ------
.
UPTD5000  MOVE      FOUR,XOTTYPE              * set target type to 4
.
. ------  update temp file 3  ------
.
UPTD6000  CALL      UP3T0000
.
UPTD9999  RETURN
+
.*******************************************************************************
.*                                CLTD0000                                     *
.*        routine to calculate target date               called by : UPTD0000  *
.*******************************************************************************
CLTD0000  MOVE      CDD,DD             * set input day for DMYCON to current day
          MOVE      CMM,MM             * set input mth for DMYCON to current mth
          MOVE      CYY,YY             * set input yr for DMYCON to current year
          MOVE      CCC,CC             * set input yr for DMYCON to current year
          CALL      DMYCON
.
          ADD       NUMDYWK,JULDAY     * add no. of days/weeks to JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      XOTDATE,CC,YY,MM,DD
          REP       " 0",XOTDATE
.
CLTD9999  RETURN
+
.*******************************************************************************
.*                                SOUT0000                                     *
.*        selected option of Desired Outcomes            called by : AOUT0000  *
.*******************************************************************************
SOUT0000  CALL      VNUM0000            * get valid selected option
          UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      TYPE,RECTYPE
          MOVE      THREE,TEMPFILE      * set temp file indicator to 3
.
          CALL      CHKS0000            * was option already selected ?
          BRANCH    EXIT,SOUT9000       * yes
.
          MOVE      NUMOPTN,KEY13       * no - set key for accessing PCPDSCFD
          CALL      RDPCDSC1            * read PCPDSCFD record
.
SOUT1000  CALL      DESC0000            * check for & replace strings routine
          BRANCH    EXIT,SOUT1100:      * 1 = either or both strings found,
                         SOUT8000         2 = cancel after invoking W/P
          GOTO      SOUT1200
.
SOUT1100  CALL      ARPL0000            * accept "_____" string replacement(s) ?
          BRANCH    CEXIT,SOUT1000      * no
.
SOUT1200  MOVE      PCDSCODE,XOTCODE    * set temp desired outcome code
          BRANCH    EXIT,SOUT2000       * either or both strings found
          MOVE      SP4,XOTDESC         * no string found - set temp desired
.                                         outcome description code blank
          GOTO      SOUT2100
.
SOUT2000  MOVE      XPDCODE,XOTDESC     * set temp desired outcome descriptn
.                                         code to temp file 5 descriptn code
SOUT2100  MOVE      XOTCODE,KEY9
          MOVE      SP8,XOTDATE         * initialize temp file 3 target date
          MOVE      ZERO,XOTTYPE        * initialize temp file 3 target type
          MOVE      ZERO,XOTDYWK        * initialize temp file 3 target day/wk
          CALL      WR3T0000            * write a temp desired outcome record
.
          BRANCH    ADCHFLAG,SOUT3000   * change care plan option
          GOTO      SOUT7000            * add care plan option
.
SOUT3000  BRANCH    NOSTFLAG,SOUT3100   * no string found
          CALL      WKTP0000            * string found - write from temp work
.                                         file to temp desc file (file 5)
SOUT3100  CALL      RD3T0000            * read temp file 3 record
          CALL      CTAR0000            * update Target Date
.
SOUT7000  MOVE      ZERO,EXIT           * set EXIT = 0
          GOTO      SOUT9999
.
. ------  Cancel option selected after invoking Word Processor  ------
.
SOUT8000  MOVE      ONE,EXIT            * set EXIT = 1
          GOTO      SOUT9999
.
. ------  option has already been selected  ------
.
SOUT9000  MOVE      TWO,EXIT            * set EXIT = 2
.
SOUT9999  RETURN
+
.*******************************************************************************
.*                                AINT0000                                     *
.*    add a care plan - select Nursing Intervention(s)   called by : APLN0000  *
.*                                                                   CINT0000  *
.*******************************************************************************
AINT0000  DISPLAY   *P1:11,*EF,*P5:11,*V2LON,*ULON,NSINTV
.
          MOVE      ZERO,TMPORDSC         * initialize temp or dsc file flag
          MOVE      ONE,SCREENA           * initialize screen counter
          MOVE      ZERO,SELECTED         * set select flag off
          MOVE      FOUR,TEMPFILE         * set temp file indicator to 4
          MOVE      NINE,RECTYPE          * set type of record to 9
          MOVE      ZERO,DISPHALF           * clear half displayed flag 
          MOVE      ZERO,RDSPHALF           * clear redisplay half disp. flag
          MOVE      SP20,DISPLAST           * clear last displayed key
          MOVE      SP20,DISPFRST           * clear first displayed key
          PACK      KEY20,RECTYPE,DIAGCODE,SP9
.
AINT1000  CALL      EDIC0000            * display Nursing Intervention option(s)
.
AINT1100  CALL      S2OP0000              * select option
          BRANCH    EXIT,AINT1200         * 1 = alpha input
          GOTO      AINT6000              * 0 = valid numeric input
.
AINT1200  BRANCH    REPLYF,AINT2000:      * 1 = Next screen,
                           AINT3000:      * 2 = Previous screen,
                           AINT4000:      * 3 = Abort,
                           AINT5000       * 4 = Finished
.
. ------  next screen option chosen  ------
.
AINT2000  MOVE      LKEY33,KEY20          * use last saved key
          ADD       ONE,SCREENA           * increase screen counter by 1
          GOTO      AINT1000
.
. ------  previous screen option chosen  ------
.
AINT3000  CALL      EDID0000              * previous screen option routine 
          SUB       ONE,SCREENA           * decrease screen counter by 1
          GOTO      AINT1000
.
. ------  abort option chosen  ------
.
AINT4000  BRANCH    ADCHFLAG,AINT4100     * change care plan option
          CALL      EDIE0000              * implement abort routine
          BRANCH    EXIT,AINT9000         * ask for nursing diagnosis again
          GOTO      AINT7000              * display differential diagnoses
.
AINT4100  COMPARE   ONE,SELECTED          * has selection been made ?
          GOTO      AINT9999 IF LESS      * no - exit
.
          DISPLAY   *P1:24,*EL,*B,"Cannot abort once a Related Factor is ":
                                  "selected.   ";
          CALL      HITENTER
          GOTO      AINT1100
.
. ------  finished option chosen  ------
.
AINT5000  COMPARE    ONE,SELECTED         * no. of selections > 1 ?
          GOTO       AINT5300 IF NOT LESS * yes
.
          DISPLAY   *P1:24,*EL,*B,"You haven't entered any interventions.  ":
                               "Do you want to abort (",*V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
.
AINT5100  KEYIN     *P70:24,*DV,UNDLN1,*P70:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS               * null input ?
          GOTO      AINT5200 IF EQUAL     * yes
          REP       UPPLOW,ANS            * no - replace lower case with upper
          DISPLAY   *P70:24,*V2LON,ANS
.
          MATCH     ANSY,ANS              * input = "Y" ?
          GOTO      AINT4000 IF EQUAL     * yes
          MATCH     ANSN,ANS              * input = "N" ?
          GOTO      AINT1100 IF EQUAL     * yes
.
AINT5200  BEEP
          GOTO      AINT5100              * invalid input - re-enter
.
AINT5300  BRANCH    ADCHFLAG,AINT9999     * change care plan option
          CALL      AFRQ0000              * add care plan option - ask for
          GOTO      AINT8000                frequency
.
. ------  valid numeric value entered  ------
.
AINT6000  MOVE      TRUE,CATFLAG          * set category display flag on
          MOVE      NSINTV,TYPENAME       * set type of record name
.
          CALL      SINT0000              * check description line(s) for
.                                           "(specify)" and/or "_____" strings
          BRANCH    EXIT,AINT6100:        * 1 = cancel after invoking W/P
                         AINT1000         * 2 = option has already been selected
.
          CALL      KXIF0000              * keyin extra info if required
          ADD       ONE,SELECTED          * increase no. of selections by 1
          GOTO      AINT1000
.
AINT6100  CALL      D2WP0000              * display header 2
          GOTO      AINT0000
.
. ------  display differential diagnoses for current nursing diagnosis  ------
.
AINT7000  CALL      ADIF0000              * display available option(s) & select
          BRANCH    EXIT,AINT9000         * 1 = null input
          MOVE      TWO,EXIT              * set EXIT = 2
          GOTO      AINT9999
.
. ------  proceed to ask for nursing interventions  ------
.
AINT8000  MOVE      ZERO,EXIT             * set EXIT = 0
          GOTO      AINT9999
.
. ------  no differential diagnoses/don't wish to look at differential diagnoses
.
AINT9000  MOVE      ONE,EXIT              * set EXIT = 1
          MOVE      SAVEDIAG,NUMOPTN      * use saved diagnosis category
.
AINT9999  RETURN
+
.*******************************************************************************
.*                                AFRQ0000                                     *
.*     routine to ask for frequency of intervention      called by : AINT0000  *
.*******************************************************************************
AFRQ0000  DISPLAY   *P1:11,*EF,"Intervention     : ";
          MOVE      TEN1,CVERT
.
          MOVE      SP9,KEY9
          CALL      RS4T0000              * position read temp file 4
.
AFRQ1000  CALL      RK4T0000              * read next temp file 4 record
          BRANCH    OVRCD,AFRQ9999        * end-of-file
.
          MATCH     SP4,XINDESC           * blank description code ?
          GOTO      AFRQ2000 IF EQUAL     * yes
.
          PACK      KEY6,XINDESC,SP2
          CALL      RS5T0000              * position read temp desc file(file 5)
.
AFRQ1100  CALL      RK5T0000              * read next temp desc file record
          BRANCH    OVRCD,AFRQ3000        * end-of-file
.
          MATCH     XINDESC,XPDCODE       * same description code ?
          GOTO      AFRQ3000 IF NOT EQUAL * no
.
          DISPLAY   *P20:CVERT,*EL,XPDDESC
.
          ADD       ONE,CVERT
          GOTO      AFRQ1100
.
. ------  blank description code - get description line(s) from PCPDSCFD  ------
.
AFRQ2000  MOVE      NINE,FORM2
          PACK      KEY13,FORM2,XINCODE,SP2
          CALL      RSPCDSC1              * position read PCPDSCFD file
.
AFRQ2100  CALL      RKPCDSC1              * read next PCPDSCFD record
          BRANCH    OVRCD,AFRQ3000        * end-of-file
.
          COMPARE   FORM2,PCDSTYPE        * same type of record ?
          GOTO      AFRQ3000 IF NOT EQUAL * no
          MATCH     XINCODE,PCDSCODE      * same record code ?
          GOTO      AFRQ3000 IF NOT EQUAL * no
.
          DISPLAY   *P20:CVERT,*EL,PCDSDESC
.
          ADD       ONE,CVERT
          GOTO      AFRQ2100
.
. ------  end of file or key does not match  ------
.
AFRQ3000  CALL      KFRQ0000                * routine to update frequency
          DISPLAY   *P20:11,*EF           * clear screen from row 11 col 20
          MOVE      TEN1,CVERT
          GOTO      AFRQ1000              * ask for another frequency
.
AFRQ9999  RETURN
+
.*******************************************************************************
.*                                SINT0000                                     *
.*        selected option of Desired Outcomes            called by : AINT0000  *
.*******************************************************************************
SINT0000  CALL      VNUM0000            * get valid selected option
          UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      TYPE,RECTYPE
          MOVE      FOUR,TEMPFILE       * set temp file indicator to 4
.
          CALL      CHKS0000            * was option already selected ?
          BRANCH    EXIT,SINT9000       * yes
.
          MOVE      NUMOPTN,KEY13       * no - set key for accessing PCPDSCFD
          CALL      RDPCDSC1            * read PCPDSCFD record
.
SINT1000  CALL      DESC0000            * check for & replace strings routine;
          BRANCH    EXIT,SINT1100:      * 1 = either or both strings found,
                         SINT8000         2 = cancel after invoking W/P
          GOTO      SINT1200
.
SINT1100  CALL      ARPL0000            * accept "_____" string replacement(s) ?
          BRANCH    CEXIT,SINT1000      * no
.
SINT1200  MOVE      PCDSCODE,XINCODE    * set temp nursing intervention code
          BRANCH    EXIT,SINT2000       * either or both strings found
          MOVE      SP4,XINDESC         * no string found - set temp nursing
.                                         intervention description code blank
          GOTO      SINT2100
.
SINT2000  MOVE      XPDCODE,XINDESC     * set temp nursing intervention desc
.                                         code to temp file 5 desc code
SINT2100  MOVE      XINCODE,KEY9
          MOVE      SP9,XINFREQ             * initialize temp file 4 frequency
          MOVE      SP30,XINFQDSC           * clear desc
          MOVE      SP8,XINDATE             * clear date
          MOVE      SP3,XINSHFT             * clear shift
          MOVE      ZERO,PCPITIME
          MOVE      SP3,PCPISTAF
          CALL      RDPCIDP1                * read int. depend. file
          MOVE      PCPITIME,XINTIME        * default time
          MOVE      PCPISTAF,XINSTAF        * default staff
          CALL      WR4T0000                * write temp nursing interventn rec
.
          BRANCH    ADCHFLAG,SINT3000   * change care plan option
          GOTO      SINT7000            * add care plan option
.
SINT3000  BRANCH    NOSTFLAG,SINT3100   * no string found
          CALL      WKTP0000            * string found - write from temp work
.                                         file to temp desc file (file 5)
.
SINT3100  CALL      RD4T0000            * read temp file 4 record
          CALL      CFRQ0000            * update frequency
.
SINT7000  MOVE      ZERO,EXIT           * set EXIT = 0
          GOTO      SINT9999
.
. ------  Cancel option selected after invoking Word Processor  ------
.
SINT8000  MOVE      ONE,EXIT            * set EXIT = 1
          GOTO      SINT9999
.
. ------  option has already been selected  ------
.
SINT9000  MOVE      TWO,EXIT            * set EXIT = 2
.
SINT9999  RETURN
+
.*******************************************************************************
.*                                ACCP0000                                     *
.*       display and check if user wants to accept and print care plan         *
.*                          called by : APLN0000                               *
.*******************************************************************************
ACCP0000  BRANCH    STTOPRNT,ACCP0500        * got straight to print
.
          DISPLAY   *P1:11,*EF               * clear screen from row 11
          MOVE      TEN1,CVERT
          MOVE      FALSE,PRINFLAG           * set print flag off
.
ACCP0500  MOVE      SP9,KEY9                 * set temp files key
.
. ------  display Related Factors  ------
.
          MOVE      ZERO,HDRFLAG             * set header flag to display (0)
          BRANCH    PCCNUREL,ACCP0600        * are we using related 
          GOTO      ACCP2000                   factors ?
ACCP0600
          MOVE      "Related Factors  : ",LINEHDR
          CALL      RS1T0000                 * position read temp file 1
.
ACCP1000  CALL      RK1T0000                 * read next temp file 1 record
          BRANCH    OVRCD,ACCP2000           * end-of-file
.
          MATCH     SP4,XREDESC              * blank description code ?
          GOTO      ACCP1100 IF EQUAL        * yes
.
          MOVE      XREDESC,DESCCODE         * no
          CALL      DXPD0000                 * display description line(s) from
.                                              temp description file (file 5)
          GOTO      ACCP1000
.
ACCP1100  MOVE      XRECODE,RECCODE
          MOVE      EIGHT,FORM2
          PACK      KEY13,FORM2,XRECODE,SP2
          CALL      DDSC0000                 * display description line(s) from
.                                              PCPDSCFD file
          GOTO      ACCP1000
.
. ------  display Defining Characteristics  ------
.
ACCP2000 
          BRANCH    PCCNUDEF,ACCP2050        * are we using defining chars ?
          GOTO      ACCP3000
ACCP2050
          BRANCH    PRINFLAG,ACCP2100        * print care plan
          DISPLAY   *P1:CVERT,*EL            * display care plan - space a line
          ADD       ONE,CVERT
          GOTO      ACCP2200
.
ACCP2100  PRINT     *N;                      * print blank line
          ADD       ONE,CLNO                 * increment current line number
.
ACCP2200  MOVE      ZERO,HDRFLAG             * set header flag to display (0)
          MOVE      "Characteristics  : ",LINEHDR
          CALL      RS2T0000                 * position read temp file 2
.
ACCP2300  CALL      RK2T0000                 * read next temp file 2 record
          BRANCH    OVRCD,ACCP3000           * end-of-file
.
          MATCH     SP4,XDEDESC              * blank description code ?
          GOTO      ACCP2400 IF EQUAL        * yes
.
          MOVE      XDEDESC,DESCCODE
          CALL      DXPD0000                 * display description line(s) from
.                                              temp description file (file 5)
          GOTO      ACCP2300
.
ACCP2400  MOVE      XDECODE,RECCODE
          MOVE      TEN,FORM2
          PACK      KEY13,FORM2,XDECODE,SP2
          CALL      DDSC0000                 * display description line(s) from
.                                              PCPDSCFD file
          GOTO      ACCP2300
.
. ------  display Desired Outcomes  ------
.
ACCP3000  BRANCH    PRINFLAG,ACCP3100        * print care plan
          DISPLAY   *P1:CVERT,*EL            * display care plan - space a line
          ADD       ONE,CVERT
          GOTO      ACCP3200
.
ACCP3100  PRINT     *N;                      * print a blank line
          ADD       ONE,CLNO                 * increment current line number
.
ACCP3200  MOVE      ZERO,HDRFLAG             * set header flag to display (0)
          MOVE      "Desired Outcomes : ",LINEHDR
          CALL      RS3T0000                 * position read temp file 3
.
ACCP3300  CALL      RK3T0000                 * read next temp file 3 record
          BRANCH    OVRCD,ACCP4000           * end-of-file
.
          MATCH     SP4,XOTDESC              * blank description code ?
          GOTO      ACCP3400 IF EQUAL        * yes
.
          MOVE      XOTDESC,DESCCODE
          CALL      DXPD0000                 * display description line(s) from
.                                              temp description file (file 5)
          CALL      DOTG0000                 * display target date(s)
          GOTO      ACCP3300
.
ACCP3400  MOVE      XOTCODE,RECCODE
          MOVE      SEVEN,FORM2
          PACK      KEY13,FORM2,XOTCODE,SP2
          CALL      DDSC0000                 * display description line(s) from
.                                              PCPDSCFD file
          CALL      DOTG0000                 * display target date(s)
          GOTO      ACCP3300
.
. ------  display Interventions  ------
.
ACCP4000  BRANCH    PRINFLAG,ACCP4100        * print care plan
          DISPLAY   *P1:CVERT,*EL            * display care plan - space a line
          ADD       ONE,CVERT
          GOTO      ACCP4200
.
ACCP4100  PRINT     *N;                      * print a blank line
          ADD       ONE,CLNO                 * increment current line number
.
ACCP4200  MOVE      ZERO,HDRFLAG             * set header flag to display (0)
          MOVE      "Interventions    : ",LINEHDR
          CALL      RS4T0000                 * position read temp file 4
.
ACCP4300  CALL      RK4T0000                 * read next temp file 4 record
          BRANCH    OVRCD,ACCP5000           * end-of-file
.
          MATCH     SP4,XINDESC              * blank description code ?
          GOTO      ACCP4400 IF EQUAL        * yes
.
          MOVE      XINDESC,DESCCODE
          CALL      DXPD0000                 * display description line(s) from
.                                              temp description file (file 5)
          CALL      DFRQ0000                 * display frequency
          GOTO      ACCP4300
.
ACCP4400  MOVE      XINCODE,RECCODE
          MOVE      NINE,FORM2
          PACK      KEY13,FORM2,XINCODE,SP2
          CALL      DDSC0000                 * display description line(s) from
.                                              PCPDSCFD file
          CALL      DFRQ0000                 * display frequency
          GOTO      ACCP4300
.
. ------  accept Care Plan ?  ------
.
ACCP5000  BRANCH    PRINFLAG,ACCP6350        * print care plan
.
          DISPLAY   *P1:24,*EL,"Do you want to accept this care plan (":
                               *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,"/":
                               *V2LON,"C",*HOFF,") ? "
.
ACCP5100  KEYIN     *P48:24,*DV,UNDLN1,*P48:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * null input ?
          GOTO      ACCP5200 IF EQUAL       * yes
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P48:24,*V2LON,ANS
.
          REP       "Y1N2C3",ANS            * replace alpha with number
          MOVE      ANS,FORM1
          BRANCH    FORM1,ACCP6000,ACCP9000,ACCP7000
.
ACCP5200  BEEP
          GOTO      ACCP5100                * invalid input - re-enter
.
. ------  Yes option chosen  ------
.
ACCP6000  DISPLAY   *P1:24,*EL,"Do you want to print the care plan (":
                               *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? "
.
ACCP6100  KEYIN     *P44:24,*DV,UNDLN1,*P44:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * null input ?
          GOTO      ACCP6200 IF EQUAL       * yes
.
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P44:24,*V2LON,ANS
.
          MATCH     ANSY,ANS                * input = "Y" ?
          GOTO      ACCP6300 IF EQUAL       * yes
          MATCH     ANSN,ANS                * input = "N" ?
          GOTO      ACCP6400 IF EQUAL       * yes
.
ACCP6200  BEEP
          GOTO      ACCP6100                * invalid input - re-enter
.
ACCP6300  MOVE      TRUE,PRINFLAG           * set print flag to print (1)
          MOVE      ZERO,CPAGENO            * initialize page number
          CLOCK     TIME,CTIMEIS            * get current time
          CALL      HEAD0000                * perform headings routine
          GOTO      ACCP0500
.
ACCP6350  PRINT     *N,"*** End of Care Plan ***",*N
.
ACCP6400  MOVE      ZERO,EXIT               * set EXIT = 0
          GOTO      ACCP9999
.
. ------  Cancel option chosen  ------
.
ACCP7000  CALL      EDIE0000                * check if user want to look at
          BRANCH    EXIT,ACCP8000             differential diagnoses
          CALL      ADIF0000                * display differential diagnoses
          BRANCH    EXIT,AOUT8000           * 1 = null input
          MOVE      TWO,EXIT                * ask for related factors again
          GOTO      ACCP9999
.
. ------  ask for nursing diagnosis again  ------
.
ACCP8000  MOVE      ONE,EXIT                * set EXIT = 1
          MOVE      SAVEDIAG,NUMOPTN        * use saved diagnosis category
          GOTO      ACCP9999
.
. ------  No option chosen  ------
.
ACCP9000  MOVE      THREE,EXIT              * set EXIT = 3
.
ACCP9999  RETURN
+
.*******************************************************************************
.*                                DXPD0000                                     *
.*      display description line(s) from temp descriptions file (file 5)       *
.*                          called by : ACCP0000                               *
.*******************************************************************************
DXPD0000  PACK      KEY6,DESCCODE,SP2
          CALL      RS5T0000               * position read temp file 5
.
DXPD1000  CALL      RK5T0000               * read next temp file 5 record
          BRANCH    OVRCD,DXPD9999         * end-of-file
.
          MATCH     DESCCODE,XPDCODE       * same description code ?
          GOTO      DXPD9999 IF NOT EQUAL  * no
.
          BRANCH    PRINFLAG,DXPD3000      * print flag on
.
. ------  print flag off - display a description line ------
.
          COMPARE   TWENTY3,CVERT          * screen overflow ?
          GOTO      DXPD2000 IF LESS       * no
          CALL      NPGE0000               * yes - see next page
          DISPLAY   *P1:11,*EF             * clear screen from row 11
          MOVE      TEN1,CVERT
          MOVE      ZERO,HDRFLAG           * set header flag to display (0)
.
DXPD2000  BRANCH    HDRFLAG,DXPD2100
          DISPLAY   *P1:CVERT,*EL,LINEHDR;
.
DXPD2100  DISPLAY   *P20:CVERT,*EL,XPDDESC
.
          ADD       ONE,CVERT
          MOVE      ONE,HDRFLAG            * set header flag to don't display(1)
          GOTO      DXPD1000
.
. ------  print flag on - print a description line ------
.
DXPD3000  COMPARE   MAXLINES,CLNO          *page overflow ?
          CALL      HEAD0000 IF NOT LESS   * yes - print headings
.
          BRANCH    HDRFLAG,DXPD3100
          PRINT     LINEHDR;
.
DXPD3100  PRINT     *20,XPDDESC
.
          ADD       ONE,CLNO               * increment current line number
          MOVE      ONE,HDRFLAG            * set header flag to don't display(1)
          GOTO      DXPD1000
.
DXPD9999  RETURN
+
.*******************************************************************************
.*                                NPGE0000                                     *
.*                    display next page of care plan                           *
.*                                                                             *
.*             called by : DXPD0000, DDSC0000, DOTG0000, DFRQ0000              *
.*******************************************************************************
NPGE0000  DISPLAY   *P1:24,*EL,"Hit <",*V2LON,"ENTER",*HOFF,"> to look at ":
                               "the next page of the care plan ... ";
.
NPGE1000  KEYIN     *P59:24,*EL,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                      * null input ?
          GOTO      NPGE9999 IF EQUAL            * yes
          BEEP                                   * no - invalid.
          GOTO      NPGE1000                            Re-enter.
.
NPGE9999  RETURN
+
.*******************************************************************************
.*                                DDSC0000                                     *
.*    display description line(s) from PCPDSCFD file     called by : ACCP0000  *
.*******************************************************************************
DDSC0000  CALL      RSPCDSC1               * position read PCPDSCFD file
.
DDSC1000  CALL      RKPCDSC1               * read next PCPDSCFD record
          BRANCH    OVRCD,DDSC9999         * end-of-file
.
          COMPARE   FORM2,PCDSTYPE         * same type of record ?
          GOTO      DDSC9999 IF NOT EQUAL  * no
          MATCH     RECCODE,PCDSCODE       * same record code ?
          GOTO      DDSC9999 IF NOT EQUAL  * no
.
          BRANCH    PRINFLAG,DDSC3000
.
. ------  display a description line ------
.
          COMPARE   TWENTY3,CVERT          * screen overflow ?
          GOTO      DDSC2000 IF LESS       * no
          CALL      NPGE0000               * yes - see next page
          DISPLAY   *P1:11,*EF             * clear screen from row 11
          MOVE      TEN1,CVERT
          MOVE      ZERO,HDRFLAG           * set header flag to display (0)
.
DDSC2000  BRANCH    HDRFLAG,DDSC2100
          DISPLAY   *P1:CVERT,LINEHDR;
.
DDSC2100  DISPLAY   *P20:CVERT,*EL,PCDSDESC
.
          ADD       ONE,CVERT
          MOVE      ONE,HDRFLAG            * set header flag to don't display(1)
          GOTO      DDSC1000
.
. ------  print a description line ------
.
DDSC3000  COMPARE   MAXLINES,CLNO          * page overflow ?
          CALL      HEAD0000 IF NOT LESS   * yes - print headings
.
          BRANCH    HDRFLAG,DDSC3100
          PRINT     LINEHDR;
.
DDSC3100  PRINT     *20,PCDSDESC
.
          ADD       ONE,CLNO               * increment current line number
          MOVE      ONE,HDRFLAG            * set header flag to don't display(1)
          GOTO      DDSC1000
.
DDSC9999  RETURN
+
.*******************************************************************************
.*                                DOTG0000                                     *
.*        display patient Outcomes' target date          called by : ACCP0000  *
.*******************************************************************************
DOTG0000  MATCH     SP4,XOTDATE            * blank target date ?
          GOTO      DOTG1000 IF EQUAL      * yes
.
          UNPACK    XOTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
DOTG1000  BRANCH    PRINFLAG,DOTG4000      * print target date
.
. ------  display Target Date  ------
.
          COMPARE   TWENTY3,CVERT          * screen overflow ?
          GOTO      DOTG2000 IF LESS       * no
          CALL      NPGE0000               * yes - see next page
          DISPLAY   *P1:11,*EF             * clear screen from row 11
          MOVE      TEN1,CVERT
          MOVE      ZERO,HDRFLAG           * set header flag to display(0)
.
DOTG2000  BRANCH    HDRFLAG,DOTG2100
          DISPLAY   *P1:CVERT,*EL,LINEHDR;
.
DOTG2100  BRANCH    XOTTYPE,DOTG3000,DOTG3100,DOTG3100,DOTG3300
.
          DISPLAY   *P24:CVERT,*EL,"No Target Date"
          GOTO      DOTG3400
.
.      *  Target Type = By a given date (1)
.
DOTG3000  DISPLAY   *P24:CVERT,*EL,"By ",CPCDATE
          GOTO      DOTG3400
.
.      *  Target Type = Number of days (2) or Number of weeks (3)
.
.         Number of Days
.
DOTG3100  DISPLAY   *P24:CVERT,*EL,"In ",XOTDYWK;
          COMPARE   TWO,XOTTYPE
          GOTO      DOTG3200 IF NOT EQUAL
          DISPLAY   *P31:CVERT,"days (",CPCDATE,")"
          GOTO      DOTG3400
.
.         Number of Weeks
.
DOTG3200  DISPLAY   *P31:CVERT,"weeks (",CPCDATE,")"
          GOTO      DOTG3400
.
.      *  Target Type = At all Times (4)
.
DOTG3300  DISPLAY   *P24:CVERT,*EL,"At all times"
.
.      *  increment the display line counter
.
DOTG3400  ADD       ONE,CVERT
          MOVE      ONE,HDRFLAG            * set header flag to don't display(1)
          GOTO      DOTG9999
.
. ------  print Target Date  ------
.
DOTG4000  COMPARE   MAXLINES,CLNO          * page overflow ?
          CALL      HEAD0000 IF NOT LESS   * yes - print headings
.
          BRANCH    HDRFLAG,DOTG4100
          PRINT     LINEHDR;
.
DOTG4100  BRANCH    XOTTYPE,DOTG5000,DOTG5100,DOTG5100,DOTG5300
.
          PRINT     *24,"No Target Date"
          GOTO      DOTG5400
.
.      *  Target Type = By a given date (1)
.
DOTG5000  PRINT     *24,"By ",CPCDATE
          GOTO      DOTG5400
.
.      *  Target Type = Number of days (2) or Number of weeks (3)
.
.         Number of Days
.
DOTG5100  PRINT     *24,"In ",XOTDYWK;
          COMPARE   TWO,XOTTYPE
          GOTO      DOTG5200 IF NOT EQUAL
          PRINT     *31,"days (",CPCDATE,")"
          GOTO      DOTG5400
.
.         Number of Weeks
.
DOTG5200  PRINT     *31,"weeks (",CPCDATE,")"
          GOTO      DOTG5400
.
.      *  Target Type = At all Times (4)
.
DOTG5300  PRINT     *24,"At all times"
.
.      *  increment the display line counter
.
DOTG5400  ADD       ONE,CLNO               * increment current line number
          MOVE      ONE,HDRFLAG            * set header flag to don't display(1)
.
DOTG9999  RETURN
+
.*******************************************************************************
.*                                DFRQ0000                                     *
.*        display patient Interventions' frequency       called by : ACCP0000  *
.*******************************************************************************
DFRQ0000  BRANCH    PRINFLAG,DFRQ2000      * print flag on
.
. ------  display a description line ------
.
          COMPARE   TWENTY3,CVERT          * screen overflow ?
          GOTO      DFRQ1000 IF LESS       * no
          CALL      NPGE0000               * yes - see next page
          DISPLAY   *P1:11,*EF             * clear screen from row 11
          MOVE      TEN1,CVERT
          MOVE      ZERO,HDRFLAG           * set header flag to display(0)
.
DFRQ1000  BRANCH    HDRFLAG,DFRQ1100
          DISPLAY   *P1:CVERT,*EL,LINEHDR;
.
DFRQ1100  DISPLAY   *P24:CVERT,*EL,"Frequency : ",XINFREQ,SP1,XINFQDSC
          ADD       ONE,CVERT
          MOVE      ONE,HDRFLAG            * set header flag to don't display(1)
          GOTO      DFRQ9999
.
. ------  print a description line ------
.
DFRQ2000  COMPARE   MAXLINES,CLNO          * page overlow ?
          CALL      HEAD0000 IF NOT LESS   * yes - print headings
.
          BRANCH    HDRFLAG,DFRQ2100
          PRINT     LINEHDR;
.
DFRQ2100  PRINT     *24,"Frequency : ",XINFREQ,SP1,XINFQDSC,*N
          ADD       TWO,CLNO
          MOVE      ONE,HDRFLAG            * set header flag to don't display(1)
.
DFRQ9999  RETURN
+
.*******************************************************************************
.*                                HEAD0000                                     *
.*                      print care plan page headings                          *
.*                                                                             *
.*        called by : DXPD0000, DDSC0000, DOTG0000, DFRQ0000, ACCP0000         *
.*******************************************************************************
HEAD0000  CALL      HEAD80
          PRINT     *1,"U/R Number   : ",PURNO,SP1,*26,"Name : ",PATHDNAM
          PRINT     *1,"Admission No : ",AADMNO:
                    *26,"Sex  : ",PATHDSEX,*42,"Born : ",PATHDDOB:
                    *61,"Age : ",PSAGE:
                    *N,PATHDADM,*26,"Ward : ",PATHDWB,*42,"Doct : ",PATHDDOC:
                    *N,"Admit. Diagnosis : ",ADIAG1:
                    *N,"Diag.  Category  : ",CATDESC:
                    *N,"Nurse Responsible: ",PCNUNAME:
                    *N,"Nursing Diagnosis: ",DIAGDESC,*N
.
          MOVE      "11",CLNO              * set current line number to 11
          MOVE      ZERO,HDRFLAG           * set header flag to display (0)
          MOVE      SP20,CPHDROPT          * set option
.
HEAD9999  RETURN
+
.*******************************************************************************
.*                                POST0000                                     *
.*    post details of care plan to appropriate files     called by : APLN0000  *
.*                                                                   CPLN0000  *
.*******************************************************************************
POST0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON:
                    "Posting Care Plan now.  Please wait ...";
          MOVE      TRUE,CAREPLAN            * Care Plan Exists
.
. ------  post to PCPDIAFD (Patient Nursing Diagnosis) file  ------
.
          CALL      IBACLOCK
          MOVE      AADMNO,PCDIADMN           * set Admission Number
          PACK      PCDIDATE,CCC,CYY,CMM,CDD
          REP       " 0",PCDIDATE             * set Plan date
          CLOCK     TIME,PCDITIME             * set Plan time
          MOVE      DIAGCODE,PCDIDIAG         * set Nursing Diagnosis
.
          MOVE      " 41",PRXCODE             * set sector for locking
          CALL      GETSLK00                  * lock sector
          READ      CONTROLF,FORTY1;*79,PCCNUNIQ
          ADD       ONE,PCCNUNIQ
          WRITAB    CONTROLF,FORTY1;*79,PCCNUNIQ
          CALL      RELSLK00                  * release lock
          MOVE      PCCNUNIQ,PCDIUNIQ         * set Unique Key
.
          BRANCH    PCCNDCAT,POST1000         * System parameter PCCNDCAT = 1
          MOVE      SP9,PCDICTYP
          MOVE      CATCODE,PCDICLIN          * set this as the Health pattern..
          GOTO      POST1100
.
POST1000  MOVE      TYPECOND,PCDICTYP         * set Type of Clinic Condition
          MOVE      CLINCOND,PCDICLIN         * set Clinic Condition
.
POST1100  MOVE      NURSCODE,PCDINURS         * set Nurse Code
.
          MATCH     SP4,DDCHGCOD              * blank descripion change code ?
          GOTO      POST1200 IF NOT EQUAL     * no
          MOVE      SP4,PCDIDCOD              * yes - set Description No. blank
          GOTO      POST1300
.
POST1200  MOVE      DDCHGCOD,DESCCODE
          CALL      GCOD0000                  * get descriptn no. from PCPPDSFD
          MOVE      TEMPCODE,PCDIDCOD         * set Description No.
.
POST1300  MOVE      ONE,PCDISTAT              * set Care Plan status active
          PACK      KEY33,PCDIADMN,PCDIDATE,PCDITIME,PCDIDIAG
          MOVE      KEY33,SAVKEY33
          CALL      RAPCDIA1
          IF        OVRCD=1
            CALL      WRPCDIA1                * write a record to PCPDIAFD file
          ELSE
            CALL      UPPCDIA1
          ENDIF
.
. ------  post to PCPRELFD (Patient Related Factors) file  ------
.
          MOVE      PCDIUNIQ,PCREUNIQ         * set Unique Key
          MOVE      SP9,KEY9
          CALL      RS1T0000                  * position read temp file 1
.
POST2000  CALL      RK1T0000                  * read next temp file 1 record
          BRANCH    OVRCD,POST3000            * end-of-file
.
          MOVE      XRECODE,PCREFACT          * set Related Factor code
          MATCH     SP4,XREDESC               * blank temp description code ?
          GOTO      POST2100 IF NOT EQUAL     * no
          MOVE      SP4,PCREDCOD              * yes - set Description No. blank
          GOTO      POST2200
.
POST2100  MOVE      XREDESC,DESCCODE
          CALL      GCOD0000                  * get descriptn no. from PCPPDSFD
          MOVE      TEMPCODE,PCREDCOD         * set Description No.
.
POST2200  PACK      KEY19,PCREUNIQ,PCREFACT
          CALL      WRPCREL1                  * write a record to PCPRELFD file
          GOTO      POST2000
.
. ------  post to PCPDEFFD file  ------
.
POST3000  MOVE      PCDIUNIQ,PCDEUNIQ         * set Unique Key
          MOVE      SP9,KEY9
          CALL      RS2T0000                  * position read temp file 2
.
POST3100  CALL      RK2T0000                  * read next temp file 2 record
          BRANCH    OVRCD,POST4000            * end-of-file
.
          MOVE      XDECODE,PCDECHAR          * set Defining Characteristic code
          MATCH     SP4,XDEDESC               * blank temp description code ?
          GOTO      POST3200 IF NOT EQUAL     * no
          MOVE      SP4,PCDEDCOD              * yes - set Description No. blank
          GOTO      POST3300
.
POST3200  MOVE      XDEDESC,DESCCODE
          CALL      GCOD0000                  * get descriptn no. from PCPPDSFD
          MOVE      TEMPCODE,PCDEDCOD         * set Description No.
.
POST3300  PACK      KEY19,PCDEUNIQ,PCDECHAR
          CALL      WRPCDEF1                  * write a record to PCPDEFFD file
          GOTO      POST3100
.
. ------  post to PCPOUTFD (Patient Outcome) file  ------
.
POST4000  MOVE      PCDIUNIQ,PCOTUNIQ         * set Unique key
          MOVE      SP9,KEY9
          CALL      RS3T0000                  * position read temp file 3
.
POST4100  CALL      RK3T0000                  * read next temp file 3 record
          BRANCH    OVRCD,POST5000            * end-of-file
.
          MOVE      XOTCODE,PCOTCODE          * set Outcome code
          MATCH     SP4,XOTDESC               * blank temp description code ?
          GOTO      POST4200 IF NOT EQUAL     * no
          MOVE      SP4,PCOTDCOD              * yes - set Description No. blank
          GOTO      POST4300
.
POST4200  MOVE      XOTDESC,DESCCODE
          CALL      GCOD0000                  * get descriptn no. from PCPPDSFD
          MOVE      TEMPCODE,PCOTDCOD         * set Description No.
.
POST4300  MOVE      XOTDATE,PCOTDATE          * set Target Date
          MOVE      XOTTYPE,PCOTTYPE          * set Target Type
          MOVE      XOTDYWK,PCOTDYWK          * set Target number of days or wks
.
          PACK      KEY19,PCOTUNIQ,PCOTCODE
          CALL      WRPCOUT1                  * write a record to PCPOUTFD file
          GOTO      POST4100
.
. ------  post to PCPINTFD file  ------
.
POST5000  MOVE      PCDIUNIQ,PCINUNIQ         * set Unique Key
          MOVE      SP9,KEY9
          CALL      RS4T0000                  * position read temp file 4
.
POST5100  CALL      RK4T0000                  * read next temp file 4 record
          BRANCH    OVRCD,POST9000            * end-of-file
.
          MOVE      XINCODE,PCINCODE          * set Intervention code
          MATCH     SP4,XINDESC               * blank temp description code ?
          GOTO      POST5200 IF NOT EQUAL     * no
          MOVE      SP4,PCINDCOD              * yes - set Description No. blank
          GOTO      POST5300
.
POST5200  MOVE      XINDESC,DESCCODE
          CALL      GCOD0000                  * get descriptn code from PCPPDSFD
          MOVE      TEMPCODE,PCINDCOD         * set Description No.
.
POST5300  MOVE      XINFREQ,PCINFREQ          * frequency
          MOVE      XINSTAF,PCINSTAF          * staff class. (cat SD)
          MOVE      XINTIME,PCINTIME          * time
          MOVE      XINDATE,PCINODTE          * once-off date
          MOVE      XINSHFT,PCINOSFT          * once-off date
          PACK      KEY19,PCINUNIQ,PCINCODE
          CALL      WRPCINT1                  * write a record to PCPINTFD file
          GOTO      POST5100
.
. ------ posting to relevant files completed  ------
.
POST9000  DISPLAY   *P1:24,*EL,*V2LON,"Care Plan posted.";
.
POST9999  RETURN
+
.*******************************************************************************
.*                                GCOD0000                                     *
.*       get new description number and write record(s) to PCPPDSFD file       *
.*                                                                             *
.*                          called by : POST0000                               *
.*******************************************************************************
GCOD0000  PACK      KEY14,AADMNO,Z25           * set PCPPDSFD key to last record
.                                                of desired Admission Number
          CALL      RSPCPDS1                   * position read PCPPDSFD file
          CALL      RPPCPDS1                   * read previous PCPPDSFD record
          BRANCH    OVRCD,GCOD1000             * end-of-file
.
          COMPARE   AADMNO,PCPDADMN            * same Admission Number ?
          GOTO      GCOD1000 IF NOT EQUAL      * no
          MOVE      PCPDDCOD,TEMPCODE          * yes - set temp code to Desc No.
          GOTO      GCOD1100
.
GCOD1000  MOVE      ZERO,TEMPCODE              * set temp code to 0
.
GCOD1100  ADD       ONE,TEMPCODE               * increase temp code by 1
          MOVE      TEMPCODE,PCPDDCOD          * set Desc No. to temp code
.
          PACK      KEY6,DESCCODE,SP2
          CALL      RS5T0000                   * position read temp file 5
.
GCOD2000  CALL      RK5T0000                   * read next temp file 5 record
          BRANCH    OVRCD,GCOD9999             * end-of-file
.
          MATCH     DESCCODE,XPDCODE           * same description code ?
          GOTO      GCOD9999 IF NOT EQUAL      * no
.
          MOVE      AADMNO,PCPDADMN            * set Admission Number
          MOVE      XPDLINE,PCPDLINE           * set Description Line Number
          MOVE      XPDDESC,PCPDDESC           * set Line Description
.
          PACK      KEY14,AADMNO,PCPDDCOD,PCPDLINE
          CALL      WRPCPDS1                   * write a record to PCPPDSFD file
          GOTO      GCOD2000
.
GCOD9999  RETURN
+
.*******************************************************************************
.*                                DSCP0000                                     *
.*        input discharge criteria or planning           called by : APLN0000  *
.*                                                                   CPLN0000  *
.*******************************************************************************
DSCP0000  DISPLAY   *P1:24,*EL,"Do you want to review the discharge (",*V2LON:
                               "C",*HOFF,")riteria or (",*V2LON,"P",*HOFF:
                               ")lanning, or (",*V2LON,"F",*HOFF,")inished ? "
.
DSCP1000  KEYIN     *P79:24,*DV,UNDLN1,*P79:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * null input ?
          GOTO      DSCP1100 IF EQUAL       * yes
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P79:24,*V2LON,ANS
.
          MATCH     ANSF,ANS                * input = "F" ?
          GOTO      DSCP1400 IF EQUAL       * yes 
          MATCH     ANSC,ANS                * input = "C" ?
          GOTO      DSCP1200 IF EQUAL       * yes
          MATCH     ANSP,ANS                * input = "P" ?
          GOTO      DSCP1300 IF EQUAL       * yes
.
DSCP1100  BEEP
          GOTO      DSCP1000                * no - invalid, re-enter
.
. ------  Criteria option chosen  ------
.
DSCP1200  MOVE      ONE,PCDHTYPE            * set Type of Record = 1
          GOTO      DSCP2000
.
. ------  Planning option chosen  ------
.
DSCP1300  MOVE      TWO,PCDHTYPE            * set Type of Record = 2
          GOTO      DSCP2000
.
DSCP1400  IF        PCCNFEVA=1
            CALL      EVAL0000              * do evaluation
          ENDIF
          GOTO      DSCP9999
.
. ------  common procedures to options "C" and "P"  ------
.
DSCP2000  CALL      SETW0000                * set up temp file & screen header
.                                             for Word Processor
          PACK      KEY9,AADMNO,PCDHTYPE
          CALL      RDPCDIS1                * read PCPDISFD record
          BRANCH    OVRCD,DSCP3000          * record not found
.
.         PCPDISFD record found
.         ---------------------
.
.         get description line(s) from PCPPDSFD file
.
          PACK      KEY14,AADMNO,PCDHDCOD,SP2
          CALL      RSPCPDS1                * position read PCPPDSFD file
.
DSCP2100  CALL      RKPCPDS1                * read next PCPPDSFD record
          BRANCH    OVRCD,DSCP3000          * end-of-file
.
          COMPARE   AADMNO,PCPDADMN         * same Admission Number ?
          GOTO      DSCP3000 IF NOT EQUAL   * no
          MATCH     PCDHDCOD,PCPDDCOD       * same Description Number ?
          GOTO      DSCP3000 IF NOT EQUAL   * no
.
          WRITE     SEQTEMP,SEQ;PCPDDESC    * write a Line description record to
          GOTO      DSCP2100                  temp w/p file
.
.         PCPPDSFD record found & not found
.         ---------------------------------
.
DSCP3000  WEOF      SEQTEMP,SEQ
          CLOSE     SEQTEMP
.
. ------  word processor ------
.
DSCP4000  CLEAR     CMDLINE
          APPEND    FNAMES1,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          MOVE      TEN,STVAR
          WORD      CMDLINE,150,9,12,69,23,STVAR
.
.         ask the O.K. to post ? question
.
DSCP4100  CALL      POSTQST
          BRANCH    CEXIT,DSCP5000,DSCP6000,DSCP7000
          BEEP
          GOTO      DSCP4100
.
. ------  Yes option chosen  ------
.
DSCP5000  CALL      POSD0000                * routine to post input/changes from
.                                             temp w/p file
          CALL      KLLS0000
          GOTO      DSCP0000
.
. ------  No option chosen  ------

DSCP6000  MOVE      TRUE,DCHGFLAG           * set discharge criteria/planning
.                                             flag on
          CALL      STST0000                * routine to set 2nd temp seq. file
          GOTO      DSCP4000
.
. ------  Cancel option chosen  ------
.
DSCP7000  DISPLAY   *P1:24,*EL,"Are you sure you want to cancel your Word ":
                               "Processor input (",*V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
.
DSCP7100  KEYIN     *P67:24,*DV,UNDLN1,*P67:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * null input ?
          GOTO      DSCP7200 IF EQUAL       * yes
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P67:24,*V2LON,ANS
.
          MATCH     ANSY,ANS                * input = "Y" ?
          GOTO      DSCP7400 IF EQUAL       * yes
          MATCH     ANSN,ANS                * input = "N" ?
          GOTO      DSCP4100 IF EQUAL       * yes
.
DSCP7200  BEEP
          GOTO      DSCP7100                * invalid input.  Re-enter
.
. ------  delete temp w/p file  ------
.
DSCP7400  CALL      KLLS0000
          GOTO      DSCP0000
.
DSCP9999  RETURN
+
.*******************************************************************************
.*                                POSD0000                                     *
.*    post input/changes to care plan Discharges file    called by : DSCP0000  *
.*******************************************************************************
POSD0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON:
                    "Posting Discharges Criteria/Planning.  Please wait ... ";
.
          PACK      KEY9,AADMNO,PCDHTYPE
          CALL      RDPCDIS1                     * read PCPDISFD record
          BRANCH    OVRCD,POSD4000               * record not found
.
. ------  record exists in PCPDISFD file (update PCPDSCFD file)  ------
.
          PACK      KEY14,AADMNO,PCDHDCOD,SP2
          CALL      RSPCPDS1                     * position read PCPPDSFD file
          CALL      RKPCPDS1                     * read next PCPPDSFD record
          BRANCH    OVRCD,POSD9000               * end-of-file - Error !!!
.
.         write from temp w/p file
.         ------------------------
.
          OPEN      SEQTEMP,FNAMES1              * open temp w/p/ file
.
POSD1000  READ      SEQTEMP,SEQ;PCPDDESC         * read temp w/p record
          GOTO      POSD3000 IF OVER             * end-of-file
.
          RESET     PCPDDESC
          GOTO      POSD1000 IF EOS              * Line feed
          MATCH     SP59,PCPDDESC                * blank line ?
          GOTO      POSD1000 IF EQUAL            * yes
.
          CALL      UPPCPDS1                     * update PCPPDSFD record
.
          CALL      RKPCPDS1                     * read next PCPPDSFD record
          BRANCH    OVRCD,POSD2000               * end-of-file
.
          COMPARE   AADMNO,PCPDADMN              * same Admission Number ?
          GOTO      POSD2000 IF NOT EQUAL        * no
          MATCH     PCDHDCOD,PCPDDCOD            * same Description Number ?
          GOTO      POSD2000 IF NOT EQUAL        * no
          GOTO      POSD1000
.
.         end of PCPDSCFD file or key does not match
.
POSD2000  CALL      RPPCPDS1                     * read previous PCPPDSFD record
.
POSD2100  READ      SEQTEMP,SEQ;PCPDDESC
          GOTO      POSD9999 IF OVER
.
          RESET     PCPDDESC
          GOTO      POSD2100 IF EOS              * Line feed
          MATCH     SP59,PCPDDESC                * blank line ?
          GOTO      POSD2100 IF EQUAL            * yes
.
          ADD       ONE,PCPDLINE
          PACK      KEY14,PCPDADMN,PCPDDCOD,PCPDLINE
          CALL      WRPCPDS1                     * write a PCPPDSFD record
          GOTO      POSD2100
.
.         end of temp w/p file
.
POSD3000  PACK      KEY14,PCPDADMN,PCPDDCOD,PCPDLINE
          CALL      DEPCPDS1                     * delete PCPPDSFD record
.
          CALL      RKPCPDS1                     * read next PCPPDSFD record
          BRANCH    OVRCD,POSD9999               * end-of-file
.
          COMPARE   AADMNO,PCPDADMN              * same Admission Number ?
          GOTO      POSD9999 IF NOT EQUAL        * no
          MATCH     PCDHDCOD,PCPDDCOD            * same Description Number ?
          GOTO      POSD9999 IF NOT EQUAL        * no
          GOTO      POSD3000
.
. ------  record does not exist in PCPDISFD file (write new record(s) to  ------
.         PCPPDSFD file)
.
POSD4000  PACK      KEY14,AADMNO,Z25
          CALL      RSPCPDS1                     * position read PCPPDSFD file
          CALL      RPPCPDS1                     * read previous PCPPDSFD record
          BRANCH    OVRCD,POSD4100               * end-of-file
.
          COMPARE   AADMNO,PCPDADMN              * same Admission Number ?
          GOTO      POSD4100 IF NOT EQUAL        * no
.
          MOVE      PCPDDCOD,TEMPCODE            * set temp code to Desc No.
          GOTO      POSD4200
.
POSD4100  MOVE      ZERO,TEMPCODE                * set temp code to 0
.
POSD4200  ADD       ONE,TEMPCODE                 * increase temp code by 1
          MOVE      TEMPCODE,PCPDDCOD            * set Desc No. to temp code
          MOVE      ZERO,PCPDLINE                * initialize Line description
.
.         write from temp w/p file
.         ------------------------
.
          OPEN      SEQTEMP,FNAMES1              * open temp w/p file
.
POSD5000  READ      SEQTEMP,SEQ;PCPDDESC         * read temp w/p record
          GOTO      POSD5100 IF OVER             * end-of-file
.
          RESET     PCPDDESC
          GOTO      POSD5000 IF EOS              * Line feed
          MATCH     SP59,PCPDDESC                * blank line ?
          GOTO      POSD5000 IF EQUAL            * yes
.
          ADD       ONE,PCPDLINE
          MOVE      AADMNO,PCPDADMN
          PACK      KEY14,AADMNO,PCPDDCOD,PCPDLINE
          CALL      WRPCPDS1                     * write a PCPPDSFD record
          GOTO      POSD5000
.
.         end of temp w/p file
.
POSD5100  MOVE      PCPDDCOD,PCDHDCOD
          MOVE      AADMNO,PCDHADMN
          PACK      KEY9,PCDHADMN,PCDHTYPE
          CALL      WRPCDIS1                     * write a PCPDISFD record
          GOTO      POSD9999
.
. ------  PCPPDSFD file EOF error  ------
.
POSD9000  DISPLAY   *P1:24,*EL,*B,"Patient Description (PCPPDSFD) file error. ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL,*B,"Posting will not proceed.  Please contact ":
                                   "I.B.A.  ";
          CALL      HITENTER
.
POSD9999  RETURN
+
.*******************************************************************************
.*                                CPLN0000                                     *
.*        change selected nursing diagnosis              called by : MAINLINE  *
.*******************************************************************************
CPLN0000  MOVE      FALSE,OTHERFLG
          BRANCH    ADDTOCHG,CPLN2000       * "Add to Change" flag on
.
. ------  "Add to Change" flag not on - i.e. Change Care Plan option was  ------
.         initially selected.
.
          LOAD      KEY33,REPLYF,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                 SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                 SELECT11,SELECT12,SELECT13
.
          CALL      RDPCDIA1                * read PCPDIAFD record
.
          DISPLAY   *P1:24,*EL,*V2LON,*BLINKON:
                    "Building temporary data base.  Please wait ...";
.
          CALL      CRTI0000                * create and open temp index files
          CALL      STMP0000                * set up temp index files
          MOVE      PCDIDIAG,DIAGCODE       * save diagnosis category code
          MOVE      SP4,DDCHGCOD            * initialize desc change code
.
.         get Nursing Diagnosis description
.         ---------------------------------
.
          MOVE      SIX,FORM2
          PACK      KEY13,FORM2,PCDIDIAG,SP2
          CALL      RSPCDSC1                * position read PCPDSCFD file
          CALL      RKPCDSC1                * read next PCPDSCFD record
          BRANCH    OVRCD,CPLN1000          * end-of-file
.
          COMPARE   FORM2,PCDSTYPE          * same type of record ?
          GOTO      CPLN1000 IF NOT EQUAL   * no
          MATCH     PCDIDIAG,PCDSCODE       * same nursing diagnosis ?
          GOTO      CPLN1000 IF NOT EQUAL   * no
.
          MOVE      PCDSDESC,DIAGDESC
          GOTO      CPLN1100
.
. ++++++  PCPDSCFD file error message +++++++++++++++++++++++++++++++++++++++++
.
CPLN1000  DISPLAY   *P1:24,*EL,*B,"Please take down the next message and ":
                                  "contact I.B.A.  ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL,*B,"Nursing Diagnosis code not found in ":
                                  "Description file.  ";
          CALL      HITENTER
          GOTO      CPLN8000
.
. ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
.
CPLN1100  DISPLAY   *P1:9,*EL,"Nursing Diagnosis: ",*V2LON,DIAGDESC
.
CPLN2000  MOVE      ONE,ADCHFLAG            * set "Add/Change" flag to 1
.                                             (ie change mode)
CPLN2100  CALL      CPPR0000                * display the correct prompt
.
CPLN2200  KEYIN     *P68:24,*DV,UNDLN1:
                    *P68:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * null input ?
          GOTO      CPLN2300 IF EQUAL       * yes - invalid
.
          TYPE      ANS                     * input numeric ?
          GOTO      CPLN2300 IF EQUAL       * yes - invalid
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P68:24,*V2LON,ANS
.
          REP       "R1D2O3I4A5F6",ANS      * replace alpha input with number
          TYPE      ANS                     * is input numeric now ?
          GOTO      CPLN2300 IF NOT EQUAL   * no - invalid
.
          MOVE      ANS,FORM1
          MOVE      FORM1,OPTNFLAG
.
.**** Validate the entry according to what options are valid ****
.**** i.e are we using related factors ? and/or are we using ****
.**** defining characteristics ?                             ****
.****  uses system parameters PCCNUREL and PCCNUDEF          ****
.
          BRANCH    PCCNUREL,CPLN2270
          BRANCH    PCCNUDEF,CPLN2230
.
.**** Not using related factors or defining charateritics    ****
.     ---
          BRANCH    FORM1,CPLN2300,CPLN2300,CPLN5000:
                          CPLN6000,CPLN7000,CPLN8000

.
.**** Not using related factors                              ****
.     ---
CPLN2230
          BRANCH    FORM1,CPLN2300,CPLN4000,CPLN5000:
                          CPLN6000,CPLN7000,CPLN8000

CPLN2270  BRANCH    PCCNUDEF,CPLN2290
.
.**** Not using defining charateritics                       ****
.     ---
          BRANCH    FORM1,CPLN3000,CPLN2300,CPLN5000:
                          CPLN6000,CPLN7000,CPLN8000

.
.**** Using both related factors and defining characteristics ****
.     ----- ----
CPLN2290
          BRANCH    FORM1,CPLN3000,CPLN4000,CPLN5000:
                          CPLN6000,CPLN7000,CPLN8000
.
CPLN2300  BEEP
          GOTO      CPLN2200
.
. ------  Related Factors option chosen  ------
.
CPLN3000  CALL      CREL0000                * change care plan - Related Factors
          GOTO      CPLN2100
.
. ------  Defining Characteristics option chosen  ------
.
CPLN4000  CALL      CDEF0000                * change care plan - Defining Char.
          GOTO      CPLN2100
.
. ------  Desired Outcomes option chosen  ------
.
CPLN5000  CALL      COUT0000                * change care plan - Desired Outcome
          GOTO      CPLN2100
.
. ------  Nursing Interventions option chosen  ------
.
CPLN6000  CALL      CINT0000                * change care plan - N. Intervention
          GOTO      CPLN2100
.
. ------  Abort option chosen  ------
.
CPLN7000  DISPLAY   *P1:23,*EF:
                    *P1:24,"Are you sure you want to abort (":
                           *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? "
.
CPLN7100  KEYIN     *P40:24,*DV,UNDLN1,*P40:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * null input ?
          GOTO      CPLN7200 IF EQUAL       * yes - invalid
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P40:24,*V2LON,ANS
.
          MATCH     ANSY,ANS                * input = "Y" ?
          GOTO      CPLN9000 IF EQUAL       * yes
          MATCH     ANSN,ANS                * input = "N" ?
          GOTO      CPLN2100 IF EQUAL       * yes
.
CPLN7200  BEEP
          GOTO      CPLN7100
.
. ------  Finished option chosen  ------
.
CPLN8000  DISPLAY   *P1:23,*EL,"As a ",*V2LON,"new",*HOFF," Care Plan will be ":
                               "posted, only select this option if changes":
                               " were made."
          DISPLAY   *P1:24,*EL,"Press ",*V2LON,"Y",*HOFF," to continue or, ":
                               *V2LON,"ENTER",*HOFF," to return to ":
                               "previous question. "
.
CPLN8100  KEYIN     *P63:24,*DV,UNDLN1,*P63:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                 * null input ?
          GOTO      CPLN2100 IF EQUAL       * yes - return to previous question
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P63:24,*V2LON,ANS
.
          MATCH     ANSY,ANS                * input = "Y" ?
          GOTO      CPLN8200 IF EQUAL       * yes
          BEEP
          GOTO      CPLN8100                * invalid - re-enter
.
.         post care plan
.         --------------
.
CPLN8200  DISPLAY   *P1:23,*EF
          BRANCH    ADDTOCHG,CPLN8300       * "Add to Change" flag on
          MOVE      TWO,PCDISTAT            * set selected care plan inactive
          CALL      UPPCDIA1                * update PCPDIAFD record
.
CPLN8300  CALL      POST0000                * post a new care plan
          CALL      DSCP0000                * discharge criteria/planning input
.
. ------  abort all changes/after all posting  ------
.
CPLN9000  CALL      KLLW0000                * delete temp work file
          CALL      RDSP0000                * re-display nursing code
.
CPLN9999  RETURN
+
.
.*********************************************************************
.*                         CPPR0000                                  *
.*            Displays the correct system prompt                     *
.*********************************************************************
CPPR0000  BRANCH    PCCNUREL,CPPR5000
          BRANCH    PCCNUDEF,CPPR1000
.
. not using RF and DC
.
          DISPLAY   *P1:10,*EF:
                    *P1:24,"Desired (",*V2LON,"O",*HOFF,")utcomes, ":
                    "Nursing (",*V2LON,"I",*HOFF,")nterventions, (":
                    *V2LON,"A",*HOFF,")bort, (",*V2LON,"F",*HOFF:
                    ")inished ? "

          GOTO      CPPR9999
.
. only using DC
.
CPPR1000  DISPLAY   *P1:10,*EF:
                    *P1:23,*EF:
                    "(",*V2LON,"D",*HOFF,")efining Characteristics":
                    *P1:24,"Desired (",*V2LON,"O",*HOFF,")utcomes, ":
                    "Nursing (",*V2LON,"I",*HOFF,")nterventions, (":
                    *V2LON,"A",*HOFF,")bort, (",*V2LON,"F",*HOFF,")inished ?"
          GOTO      CPPR9999
.
CPPR5000  BRANCH    PCCNUDEF,CPPR7000
.
. only using RF
.
          DISPLAY   *P1:10,*EF:
                    *P1:23,*EF,"(",*V2LON,"R",*HOFF,")elated Factors":
                    *P1:24,"Desired (",*V2LON,"O",*HOFF,")utcomes, ":
                    "Nursing (",*V2LON,"I",*HOFF,")nterventions, (":
                    *V2LON,"A",*HOFF,")bort, (",*V2LON,"F",*HOFF,")inished ? "
          GOTO      CPPR9999
.
. using RF and DC
.
CPPR7000  DISPLAY   *P1:10,*EF:
                    *P1:23,*EF,"(",*V2LON,"R",*HOFF,")elated Factors, (":
                    *V2LON,"D",*HOFF,")efining Characteristics":
                    *P1:24,"Desired (",*V2LON,"O",*HOFF,")utcomes, ":
                    "Nursing (",*V2LON,"I",*HOFF,")nterventions, (":
                    *V2LON,"A",*HOFF,")bort, (",*V2LON,"F",*HOFF,")inished ?"
CPPR9999  RETURN
.
.*******************************************************************************
.*                                STMP0000                                     *
.*  set up temp. files using data from original files    called by : CPLN0000  *
.*******************************************************************************
STMP0000  PACK      KEY19,PCDIUNIQ,SP9
.
. ------  set up temp index file 1 of Related Factors  ------
.
          CALL      RSPCREL1                  * position read PCPRELFD file
.
STMP1000  CALL      RKPCREL1                  * read next PCPRELFD record
          BRANCH    OVRCD,STMP2000            * end-of-file
.
          MATCH     PCDIUNIQ,PCREUNIQ         * same unique key ?
          GOTO      STMP2000 IF NOT EQUAL     * no
.
          MOVE      PCREFACT,XRECODE
          MOVE      PCREDCOD,XREDESC
          MOVE      PCREFACT,KEY9
          CALL      WR1T0000                  * write a temp index file 1 record
.
          MATCH     SP4,PCREDCOD              * blank Description Number ?
          GOTO      STMP1000 IF EQUAL         * yes
          MOVE      PCREDCOD,DESCCODE         * no
          CALL      SDES0000                  * write desc line(s) to temp desc
.                                               file (index file 5)
          GOTO      STMP1000
.
. ------  set up temp index file 2 of Defining Characteristics  ------
.
STMP2000  CALL      RSPCDEF1                  * position read PCPDEFFD file
.
STMP2100  CALL      RKPCDEF1                  * read next PCPDEFFD record
          BRANCH    OVRCD,STMP3000            * end-of-file
.
          MATCH     PCDIUNIQ,PCDEUNIQ         * same unique key ?
          GOTO      STMP3000 IF NOT EQUAL     * no
.
          MOVE      PCDECHAR,XDECODE
          MOVE      PCDEDCOD,XDEDESC
          MOVE      PCDECHAR,KEY9
          CALL      WR2T0000                  * write a temp index file 2 record
.
          MATCH     SP4,PCDEDCOD              * blank Description Number ?
          GOTO      STMP2100 IF EQUAL         * yes
          MOVE      PCDEDCOD,DESCCODE         * no
          CALL      SDES0000                  * write desc line(s) to temp desc
.                                               file (index file 5)
          GOTO      STMP2100
.
. ------  set up temp index file 3 of Desired Outcomes  ------
.
STMP3000  CALL      RSPCOUT1                  * position read PCPOUTFD file
.
STMP3100  CALL      RKPCOUT1                  * read next PCPOUTFD record
          BRANCH    OVRCD,STMP4000            * end-of-file
.
          MATCH     PCDIUNIQ,PCOTUNIQ         * same unique key ?
          GOTO      STMP4000 IF NOT EQUAL     * no
.
          MOVE      PCOTCODE,XOTCODE
          MOVE      PCOTDCOD,XOTDESC
          MOVE      PCOTDATE,XOTDATE
          MOVE      PCOTTYPE,XOTTYPE
          MOVE      PCOTDYWK,XOTDYWK
          MOVE      PCOTCODE,KEY9
          CALL      WR3T0000                  * write a temp index file 3 record
.
          MATCH     SP4,PCOTDCOD              * blank Description Number ?
          GOTO      STMP3100 IF EQUAL         * yes
          MOVE      PCOTDCOD,DESCCODE         * no
          CALL      SDES0000                  * write desc line(s) to temp desc
.                                               file (index file 5)
          GOTO      STMP3100
.
. ------  set up temp index file 4 of Nursing Interventions  ------
.
STMP4000  CALL      RSPCINT1                  * position read PCPINTFD file
.
STMP4100  CALL      RKPCINT1                  * read next PCPINTFD record
          BRANCH    OVRCD,STMP9999            * end-of-file
.
          MATCH     PCDIUNIQ,PCINUNIQ         * same unique key ?
          GOTO      STMP9999 IF NOT EQUAL     * no
.
          MOVE      PCINCODE,XINCODE
          MOVE      PCINDCOD,XINDESC
          MOVE      PCINFREQ,XINFREQ          * freq. code
          MOVE      PCINFREQ,KEY9
          CALL      RDPCFRA1
          MOVE      PCFADESC,XINFQDSC         * freq desc
          MOVE      PCINSTAF,XINSTAF          * staff class.
          MOVE      PCINTIME,XINTIME          * time
          MOVE      PCINODTE,XINDATE          * once only date
          MOVE      PCINOSFT,XINSHFT          * once only shift
          MOVE      PCINCODE,KEY9
          CALL      WR4T0000                  * write a temp index file 4 record
.
          MATCH     SP4,PCINDCOD              * blank Description Number ?
          GOTO      STMP4100 IF EQUAL         * yes
          MOVE      PCINDCOD,DESCCODE         * no
          CALL      SDES0000                  * write desc line(s) to temp desc
.                                               file (index file 5)
          GOTO      STMP4100
.
STMP9999  RETURN
+
.*******************************************************************************
.*                                SDES0000                                     *
.*        set up temp description file (index file 5)    called by : STMP0000  *
.*******************************************************************************
SDES0000  PACK      KEY14,PCDIADMN,DESCCODE,SP2
          CALL      RSPCPDS1                  * position read PCPPDSFD file
.
SDES1000  CALL      RKPCPDS1                  * read next PCPPDSFD record
          BRANCH    OVRCD,SDES9999            * end-of-file
.
          COMPARE   PCDIADMN,PCPDADMN         * same Admission Number ?
          GOTO      SDES9999 IF NOT EQUAL     * no
          MATCH     DESCCODE,PCPDDCOD         * same Description Number ?
          GOTO      SDES9999 IF NOT EQUAL     * no
.
          MOVE      PCPDDCOD,XPDCODE
          MOVE      PCPDLINE,XPDLINE
          MOVE      PCPDDESC,XPDDESC
          PACK      KEY6,XPDCODE,XPDLINE
          CALL      WR5T0000                  * write a temp desc file record
          GOTO      SDES1000
.
SDES9999  
         RETURN
+
.*******************************************************************************
.*                                WKTP0000                                     *
.*     change a care plan - write from work file to temp description file      *
.*******************************************************************************
WKTP0000  OPEN      WORKFILE,FNAMEW                * open temp work file
.
WKTP1000  READ      WORKFILE,SEQ;WORKCODE,WORKLINE,WORKDESC
          GOTO      WKTP9000 IF OVER               * end-of-file
.
          MOVE      WORKCODE,XPDCODE               * set record code
          MOVE      WORKLINE,XPDLINE               * set description line number
          MOVE      WORKDESC,XPDDESC               * set description
.
          PACK      KEY6,WORKCODE,WORKLINE
          CALL      WR5T0000                       * write a temp desc file rec
          GOTO      WKTP1000
.
WKTP9000  CLOSE     WORKFILE
.
WKTP9999  RETURN
+
.*******************************************************************************
.*                                KEYN0000                                     *
.*        keyin routine for a number entered                                   *
.*                                                                             *
.*    called by : CREL0000, CDEF0000, COUT0000, OUTC0000, CINT0000, INTC0000   *
.*******************************************************************************
KEYN0000  KEYIN     *PCCOL:24,*DV,UNDLN2,*PCCOL:24,*V2LON,REPLYF
.
          COMPARE   ZERO,REPLYF               * null input ?
          GOTO      KEYN9000 IF EQUAL         * yes
          DISPLAY   *PCCOL:24,*V2LON,REPLYF   * no - display input
.
          COMPARE   ONE,REPLYF                * input < 1 ?
          GOTO      KEYN1000 IF LESS          * yes - invalid
.
          COMPARE   REPLYF,LINE               * input > display line number ?
          GOTO      KEYN1000 IF LESS          * yes - invalid
          MOVE      FALSE,EXIT                * no -  set EXIT = 0
          GOTO      KEYN9999
.
KEYN1000  BEEP
          MOVE      ONE,EXIT                  * set EXIT = 1
          GOTO      KEYN9999
.
. ------  null input  ------
.
KEYN9000  MOVE      TWO,EXIT                  * set EXIT = 2
.
KEYN9999  RETURN
+
.*********************************************************************
.         complete the care plan
.*********************************************************************
CTCP0000  MOVE      TWO,PCDISTAT            * set as inactive
          CALL      UPPCDIA1
.
CTCP9999  RETURN
+
.*********************************************************************
.*                  EDIC0000         Called by : AREL ADEF AOUT AINT *
.*        Displays - Related factors for a Nursing diagnosis.        *
.*                 - Defining Characteristics for a Nursing diagnosis*
.*                 - Desired Outcomes for a Nursing Diagnosis        *
.*                 - Nursing Interventions for a Nursing Diagnosis   *
.*        Returns : NEWREC = 0    display all rel. fact for diagnosis*
.*                  NEWREC = 1    display restricted defin. chars    *
.*                  NEWREC = 2    display restricted Desired outcomes*
.*                  NEWREC = 3    display restricted Interventions   *
.*********************************************************************
EDIC0000  MOVE      ZERO,NEWEDIT
          MOVE      ZERO,NEWREC             * clear editting type
.
.         see if to use Related to / Defining Char. editting
.
          IF        PCCNEREL=1 & RECTYPE=10
            MOVE      ONE,NEWEDIT             * set to use new editting
            MOVE      "1",NEWREC              * set new editting type
          ENDIF
.
.         see if to use Defining Char. / Desired Outcomes editting
.
          IF        PCCNEDEF=1 & RECTYPE=7 
            MOVE      ONE,NEWEDIT             * set to use new editting
            MOVE      "2",NEWREC              * set new editting type
          ENDIF
.
.         see if to use Desired Outcomes / Interventions editting
.
          IF        PCCNEOUT=1 & RECTYPE=9
            MOVE      ONE,NEWEDIT             * set to use new editting
            MOVE      "3",NEWREC              * set new editting type
          ENDIF
.
.         call appropriate routine
.
          BRANCH    NEWEDIT,EDIC5000
          CALL      D2OP0000                * display from pcpdbsaf file
          GOTO      EDIC9999
.
EDIC5000  CALL      X2OP0000                * display from pcpediaf file
.
EDIC9999  RETURN
+
.*********************************************************************
.*                  EDID0000                   Called by : AREL ADEF *
.*        Previous screen for add a care plan              AOUT AINT *
.*********************************************************************
EDID0000  BRANCH    NEWEDIT,EDID5000
          CALL      APSN0000                * display from pcpdbsaf file
          GOTO      EDID9999
EDID5000  CALL      XPSN0000                * display from pcpediaf file
EDID9999  RETURN
+
.*********************************************************************
.*                  EDIE0000                   Called by : AREL ADEF *
.*        Abort input of care plan                    AOUT AINT ACCP *
.*********************************************************************
EDIE0000  BRANCH    NEWEDIT,EDIE5000
          CALL      ABRT0000                * display from pcpdbsaf file
          GOTO      EDIE9999
EDIE5000  CALL      XBRT0000                * display from pcpediaf file
EDIE9999  RETURN
+
.*********************************************************************
.*                  X2OP0000                    Called by : EDIC5000 *
.*        display options                                            *
.*********************************************************************
X2OP0000  CALL      CL2V0000                * clear variables routine 2
          DISPLAY   *P1:12,*EF              * clear screen from row 12
          MOVE      TEN2,CVERT
          MOVE      SP9,CHCKCODE            * editting code
.
X2OP0500  CALL      XXXX0000                * loop over desired temp file
          BRANCH    EXIT,X2OP7000:          * end of file
                         X2OP8000           * different keys
.
.DISPLAY *P1:3,"NEWREC=[",NEWREC,"] CHCKCODE=[",CHCKCODE,"]",*EL;
.KEYIN ANS
          MOVE      ZERO,DONEPOSN           * means at end of EDI file
          PACK      KEY20,NEWREC,CHCKCODE,SP10
          CALL      RSPCEDI1                * position read PCPEDIFD file
.
X2OP1000  CALL      RKPCEDI1                * read next PCPEDIFD record
          BRANCH    OVRCD,X2OP0500          * end-of-file
.
          MOVE      ONE,DONEPOSN            * means not at end of file
          COMPARE   NEWREC,PCEDTYPE
          GOTO      X2OP0500 IF NOT EQUAL   * different type of record
.
          MATCH     CHCKCODE,PCEDCODE
          GOTO      X2OP0500 IF NOT EQUAL   * different code
.
          MOVE      FALSE,DESCFLAG          * set description flag off
          MOVE      ZERO,EXIT               * set EXIT = 0
          ADD       ONE,LINE                * increment display line number
.
          PACK      KEY13,RECTYPE,PCEDSUB,SP2
          CALL      RSPCDSC1                * position read PCDSCFD file
.
X2OP2000  CALL      RKPCDSC1                * read next PCDSCFD record
          BRANCH    OVRCD,X2OP1000          * end-of-file
.
          COMPARE   RECTYPE,PCDSTYPE        * same type of record ?
          GOTO      X2OP1000 IF NOT EQUAL   * no
          MATCH     PCEDSUB,PCDSCODE       * same record code ?
          GOTO      X2OP1000 IF NOT EQUAL   * no
.
          COMPARE   TWENTY3,CVERT           * screen overflow ?
          GOTO      X2OP3000 IF LESS        * no
          MOVE      ZERO,TMPORDSC           * set "temp or DSC file" to DSC(0)
          GOTO      X2OP9000
.
X2OP3000  BRANCH    DESCFLAG,X2OP4000
          BRANCH    FLAGCOND,X2OP3100       * clinic cond flag on-check PCPCRLFD
          GOTO      X2OP3200
.
. ------  clinic condition used - check if type of condition,  ------
.         clinic condition and related factor combination exists in
.         PCPCRLFD file.  If yes, option line number will be displayed
.         in reverse video.
.
X2OP3100  PACK      KEY36,TYPECOND,CLINCOND,DIAGCODE,PCDSCODE
          CALL      RDPCCRL1                * read PCPCRLFD record
          BRANCH    OVRCD,X2OP3200          * no record found
.
          DISPLAY   *P1:CVERT,*HON,LINE,*HOFF,". ";
          GOTO      X2OP3300
. ___________________________________________________________________________
.
X2OP3200  DISPLAY   *P1:CVERT,*V2LON,LINE,*HOFF,". ";
.
X2OP3300  PACK      NUMOPTN,PCDSTYPE,PCDSCODE,PCDSLINE,SP20
          STORE     NUMOPTN,LINE,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                 SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                 SELECT11,SELECT12
.
X2OP4000  BRANCH    EXIT,X2OP6000,X2OP6100
          MOVE      PCDSCODE,KEY9
          CALL      GDES0000               * get description code from temp file
          BRANCH    EXIT,X2OP6000:         * 1 = blank description code
                         X2OP6100          * 2 = record not found in temp file
.
X2OP5000  PACK      KEY6,DESCCODE,SP2
          CALL      RS5T0000
.
X2OP5100  CALL      RK5T0000
          BRANCH    OVRCD,X2OP1000
          MATCH     XPDCODE,DESCCODE
          GOTO      X2OP1000 IF NOT EQUAL
.
          COMPARE   TWENTY3,CVERT
          GOTO      X2OP5200 IF LESS
          MOVE      ONE,TMPORDSC        * set "temp or DSC file" to temp (1)
          GOTO      X2OP9000
.
. ------  display description from temp index file 5  ------
.
X2OP5200  DISPLAY   *P5:CVERT,*V2LON,XPDDESC
          ADD       ONE,CVERT
          ADD       ONE,LINECNT1
          MOVE      TRUE,DESCFLAG
          GOTO      X2OP5100
.
. ------  display description from PCPDSCFD file  ------
.
X2OP6000  DISPLAY   *P5:CVERT,*V2LON,PCDSDESC    * record found in temp file
.                                                  display desc. in highlight
          GOTO      X2OP6200
.
X2OP6100  DISPLAY   *P5:CVERT,PCDSDESC           * record not found in temp file
.                                                  display desc. in normal video
X2OP6200  ADD       ONE,CVERT
          ADD       ONE,LINECNT1          * increment previous screen line count
          MOVE      TRUE,DESCFLAG
          GOTO      X2OP2000
.
. ------  end of PCPEDIFD file  ------
.
X2OP7000  MOVE      FALSE,SCRNFLAG               * set screen flag off
          PACK      LKEY33,Z25,Z25
          GOTO      X2OP9999
.
. ------  EOF or key does not match  ------
.
X2OP8000  MOVE      FALSE,SCRNFLAG               * set screen flag off
          GOTO      X2OP9100
.
. ------  full screen  ------
.
X2OP9000  MOVE      TRUE,SCRNFLAG                * set screen flag on
          CALL      RPPCEDI1                     * read previous PCPEDIFD record
.
X2OP9100  PACK      LKEY33,PCEDTYPE,PCEDCODE,PCEDSUB,SP20
.
X2OP9999  RETURN
+
.*********************************************************************
.*                  XPSN0000                                         *
.*        add a care plan - routine to handle previous screen option *
.*********************************************************************
XPSN0000  MOVE      ZERO,LINECNT             * initialize line count
          BRANCH    SCRNFLAG,XPSN1000        * 1 = last screen was a full screen
.
          ADD       TEN1,LINECNT1
          MOVE      LINECNT1,NUMLINES        * set no. of lines to previous
.                                              screen line count
          GOTO      XPSN1100
.
XPSN1000  MOVE      TWENTY2,NUMLINES         * set no. of lines to 23
.
XPSN1100  MOVE      LKEY33,KEY20             * use saved last key
          CALL      RSPCEDI1                 * position read PCPEDIFD file
.
XPSN2000  CALL      RPPCEDI1                 * read previous PCPEDIFD record
          BRANCH    OVRCD,XPSN9000           * end-of-file
.
          COMPARE   RECTYPE,PCEDTYPE         * same type of record ?
          GOTO      XPSN8000 IF NOT EQUAL    * no
          MATCH     DIAGCODE,PCEDCODE        * same nursing diagnosis ?
          GOTO      XPSN8000 IF NOT EQUAL    * no
.
          COMPARE   LINECNT,NUMLINES         * line count > no. of lines ?
          GOTO      XPSN8000 IF LESS         * yes
.
          BRANCH    TMPORDSC,XPSN3000        * determine temp or DSC file
.
. ------  last display was from DSC file  ------
.
          PACK      KEY13,RECTYPE,PCEDSUB,NINES
          CALL      RSPCDSC1                 * position read PCPDSCFD file
.
XPSN2100  CALL      RPPCDSC1                 * read previous PCPDSCFD record
          BRANCH    OVRCD,XPSN2000           * end-of-file
          COMPARE   RECTYPE,PCDSTYPE         * same type of record ?
          GOTO      XPSN2000 IF NOT EQUAL    * no
          MATCH     PCEDSUB,PCDSCODE        * same record code ?
          GOTO      XPSN2000 IF NOT EQUAL    * no
          GOTO      XPSN4000
.
. ------  last display was from temp file  ------
.
XPSN3000  MOVE      PCEDSUB,KEY9
          CALL      GDES0000           * routine to get desc code from temp file
          PACK      KEY6,DESCCODE,NINES
          CALL      RS5T0000                 * position read temp file 5
.
XPSN3100  CALL      RP5T0000                 * read previous temp file record
          BRANCH    OVRCD,XPSN2000           * end-of-file
          MATCH     DESCCODE,XPDCODE         * same description code ?
          GOTO      XPSN2000 IF NOT EQUAL    * no
.
. ------  increment line count and check if over max no. of lines  -----
.
XPSN4000  ADD       ONE,LINECNT              * increment line count
          COMPARE   LINECNT,NUMLINES
          GOTO      XPSN8000 IF LESS
.
          BRANCH    TMPORDSC,XPSN3100        * determine temp of DSC file
          GOTO      XPSN2100
.
. ------  max no. of lines reached  ------
.
XPSN8000  PACK      KEY20,PCEDTYPE,PCEDCODE,PCEDSUB
          GOTO      XPSN9999
.
. ------  EOF or key does not match  ------
.
XPSN9000  MOVE      SP20,KEY20
.
XPSN9999  RETURN
+
.*********************************************************************
.*                  XBRT0000                    Called by : EDIE0000 * 
.*        abort option routine                                       *
.*********************************************************************
XBRT0000  MOVE      SIX,FORM2                   * initialize type of record to 6
          PACK      KEY20,FORM2,DIAGCODE,SP9
          CALL      RSPCEDI1                    * position read PCPEDIFD file
          CALL      RKPCEDI1                    * read next PCPEDIFD record
          BRANCH    OVRCD,XBRT9000              * end-of-file
.
          COMPARE   FORM2,PCEDTYPE              * same type of record ?
          GOTO      XBRT9000 IF NOT EQUAL       * no
          MATCH     DIAGCODE,PCEDCODE           * same nursing diagnosis ?
          GOTO      XBRT9000 IF NOT EQUAL       * no
.
          DISPLAY   *P1:24,*EL,"Do you wish to look at the differential ":
                               "diagnoses (",*V2LON,"Y",*HOFF,"/",*V2LON:
                               "N",*HOFF,") ? "
.
XBRT1000  KEYIN     *P59:24,*DV,UNDLN1,*P59:24,*V2LON,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS                     * null input ?
          GOTO      XBRT2000 IF EQUAL           * yes
.
          REP       UPPLOW,ANS                  * replace lower case with u/case
          DISPLAY   *P59:24,*V2LON,ANS
.
          MATCH     ANSY,ANS                    * input = "Y" ?
          GOTO      XBRT8000 IF EQUAL           * no
          MATCH     ANSN,ANS                    * input = "N" ?
          GOTO      XBRT9000 IF EQUAL           * no
.
XBRT2000  BEEP
          GOTO      XBRT1000                    * invalid input - re-enter
.
. ------  yes - want to look at differential diagnoses  ------
.
XBRT8000  MOVE      FALSE,EXIT                  * set EXIT = 0
          GOTO      XBRT9999
.
. ------  no - don't want to look at differential diagnoses  ------
.
XBRT9000  MOVE      TRUE,EXIT                   * set EXIT = 1
.
XBRT9999  RETURN
+
.*********************************************************************
.*                  XXXX0000                    Called by : xxxx0000 *
.*        Loop over required temp files for the new editting feature *
.*********************************************************************
XXXX0000  MOVE      CHCKCODE,KEY9           * set key for positional read
          MOVE      ZERO,OVRCD
          PERFORM   NEWREC,RS1T0000,RS2T0000,RS3T0000
          PERFORM   NEWREC,RK1T0000,RK2T0000,RK3T0000
          BRANCH    OVRCD,XXXX9100
.
XXXX2000  MOVE      DIAGCODE,CHCKCODE       * default to display related fact's
          LOAD      CHCKCODE,NEWREC,XRECODE,XDECODE,XOTCODE
.
.         set exit flags
.
XXXX9000  MOVE      ZERO,EXIT               * valid records
          GOTO      XXXX9999
.
XXXX9100  BRANCH    DONEPOSN,XXXX9200       * in middle of EDI file
.
          MOVE      ONE,EXIT                * end of EDI file
          GOTO      XXXX9999
.
XXXX9200  MOVE      TWO,EXIT                * not at end of EDI file
.
XXXX9999  RETURN
+
.*********************************************************************
.                   LOFT0000
.         select a nursing diagnosis
.*********************************************************************
LOFT0000  UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      TYPE,RECTYPE            * for pcpdbsfd
          MOVE      NUMOPTN,KEY13
          CALL      RDPCDSC1                * read PCPDSCFD record
.
          IF        CLINFLAG = ONE
            DISPLAY   *P1:8,*EF,"Condition Type   : ",*V2LON,PCDSDESC:
                      *P5:10,"Clinic Conditions"
            MOVE      RECCODE,TYPECOND        * save Type of Condition code
            MOVE      NUMOPTN,SAVECOND        * save sel. Condition Type key
          ELSE
            MOVE      PCDSTYPE,CATTYPE        * save type of record
            MOVE      PCDSCODE,CATCODE        * save record code
            MOVE      PCDSDESC,CATDESC        * save line description
            DISPLAY   *P1:8,*EF,"Diag.  Category  : ",*V2LON,CATDESC:
                      *P5:10,"Nursing Diagnosis"
          ENDIF
.
          MOVE      SIX,DSCTYPE
          LOAD      DSCTYPE,RECTYPE,TWO     * value for pcpdscfd
.
          MOVE      TEN,CVERT
          MOVE      ZERO,LINE
          MOVE      ONE,DESCFLAG
          MOVE      ONE,SCREENA                 * initialize screen counter to 1
          PACK      KEY20,RECTYPE,RECCODE,SP9   * set key for PCPDBSFD file
          CALL      RSPCDBS1
.
LOFT1000  CALL      RKPCDBS1              * read next PCPDBSFD record
          BRANCH    OVRCD,LOFT5000        * end-of-file
.
          COMPARE   RECTYPE,PCDBTYPE
          GOTO      LOFT5000 IF NOT EQUAL   * diff record type
          MATCH     RECCODE,PCDBCLSS
          GOTO      LOFT5000 IF NOT EQUAL   * diff code
.
.         loop over pcpdscfd
.
LOFT1050  MOVE      ONE,DESCFLAG            * add to counter
          PACK      KEY13,DSCTYPE,PCDBCODE,SP2
          CALL      RSPCDSC1
.
LOFT1100  CALL      RKPCDSC1
          BRANCH    OVRCD,LOFT1000          * end-of-file
          COMPARE   DSCTYPE,PCDSTYPE
          GOTO      LOFT1000 IF NOT EQUAL   * diff type
          MATCH     PCDBCODE,PCDSCODE
          GOTO      LOFT1000 IF NOT EQUAL   * diff code
.
          ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      LOFT4000 IF NOT LESS    * need a new page
.
LOFT3000  IF        DESCFLAG = ONE
            ADD       ONE,LINE              * increment display line number
            DISPLAY   *P1:CVERT,*EL,*V2LON,LINE,*HOFF,". ";
            PACK      NUMOPTN,PCDSTYPE,PCDSCODE,PCDSLINE,SP20
            STORE     NUMOPTN,LINE,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                   SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                   SELECT11,SELECT12
          ENDIF
          DISPLAY   *P5:CVERT,PCDSDESC
          MOVE      ZERO,DESCFLAG           * dont add to line counter
          GOTO      LOFT1100
.
. ------- need a new screen -------
.
LOFT4000  BRANCH    SCREENA,LOFT4500
.
LOFT4100  MOVE      ONE,CALLPOSN
          CALL      KEYL0000
          BRANCH    EXIT,LOFT9999,LOFT6000,LOFT7000
.                        Exit     Next     Prev
          GOTO      LOFT8000
.
LOFT4500  MOVE      TWO,CALLPOSN
          CALL      KEYL0000
          BRANCH    EXIT,LOFT9999,LOFT6000,LOFT5900
.                        Exit     Next     Prev
          GOTO      LOFT8000
.
. ------- no more data to display -------
.
LOFT5000  BRANCH    SCREENA,LOFT5500
.
LOFT5100  MOVE      THREE,CALLPOSN
          CALL      KEYL0000
          BRANCH    EXIT,LOFT9999,LOFT5900,LOFT7000
.                        Exit     Next     Prev
          GOTO      LOFT8000
.
LOFT5500  MOVE      FOUR,CALLPOSN
          CALL      KEYL0000
          BRANCH    EXIT,LOFT9999,LOFT5900,LOFT5900
.                        Exit     Next     Prev
          GOTO      LOFT8000
.
LOFT5900  BEEP
LOFT5910  BRANCH    CALLPOSN,LOFT4100,LOFT4500,LOFT5100,LOFT5500
.
. ------  next screen option chosen  ------
.
LOFT6000  CALL      CL2V0000                * clear the array
          ADD       ONE,SCREENA                 * increase screen counter by 1
          MOVE      TEN1,CVERT
          DISPLAY   *P1:CVERT,*EF;
          MOVE      ZERO,LINE
          MOVE      ONE,DESCFLAG
          GOTO      LOFT3000
.
. ------  previous screen option chosen  ------
.
LOFT7000  MOVE      SELECT01,KEY13
          CALL      RDPCDSC1
          PACK      KEY20,RECTYPE,RECCODE,PCDSCODE
          CALL      RDPCDBS1
          MOVE      ZERO,CALLPOSN
          MOVE      ONE,FORM2               * on first read
.
LOFT7100  CALL      RPPCDSC1
          BRANCH    OVRCD,LOFT7150          * end-of-file
          COMPARE   DSCTYPE,PCDSTYPE
          GOTO      LOFT7150 IF NOT EQUAL   * diff type
          MATCH     PCDBCODE,PCDSCODE
          GOTO      LOFT7150 IF NOT EQUAL   * diff code
.
          MOVE      ONE,CALLPOSN            * have a valid description to disp
          GOTO      LOFT7160
.
LOFT7150  CALL      RPPCDBS1                * read next PCPDBSFD record
          BRANCH    OVRCD,LOFT7200          * end-of-file
          COMPARE   RECTYPE,PCDBTYPE
          GOTO      LOFT7200 IF NOT EQUAL   * diff record type
          MATCH     RECCODE,PCDBCLSS
          GOTO      LOFT7200 IF NOT EQUAL   * diff code
.
          MOVE      ZERO,CALLPOSN           * are on the dbs record
          PACK      KEY13,DSCTYPE,PCDBCODE,Z25
          CALL      RSPCDSC1
          GOTO      LOFT7100
.
LOFT7160  ADD       ONE,FORM2
          COMPARE   "13",FORM2
          GOTO      LOFT7100 IF LESS        * finished reads
.
LOFT7200  CALL      CL2V0000                * clear the array
          SUB       ONE,SCREENA             * decrease screen counter by 1
          MOVE      TEN1,CVERT
          DISPLAY   *P1:CVERT,*EF;
          MOVE      ZERO,LINE
          MOVE      ONE,DESCFLAG
          BRANCH    CALLPOSN,LOFT3000       * display from pcpdscfd
          MOVE      TEN,CVERT
          GOTO      LOFT1050                * do next read
.
. ------  valid numeric value entered  ------
.
LOFT8000  BRANCH    CLINFLAG,LOFT8100      * 1 = temp clinic cond. flag is on
.
          CALL      VNUM0000
          UNPACK    NUMOPTN,KEY2,KEY9,DIM2
          MOVE      DIM2,FORM2
          BRANCH    FORM2,LOFT8020
.
          DISPLAY   *P1:24,*B,*EL:
                    "The first line of description must be selected.  ";
          CALL      HITENTER
          GOTO      LOFT5910
.
LOFT8020  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON:
                    "Building temporary data base.  Please wait ... ";
.
          CALL      CRTI0000                  * create and open temp index files
.
          MOVE      FALSE,CATFLAG          * set category  display flag off
          CALL      SNUR0000               * check description line(s) for
.                                            "(specify)" and/or "_____" strings
          BRANCH    EXIT,LOFT8300          * Cancel option of W/P selected
.
          MOVE      PCDSCODE,DIAGCODE      * save nursing diagnosis code
          MOVE      PCDSDESC,DIAGDESC      * save nursing diagnosis description
          MOVE      FALSE,DIFFDIAG         * set differential diagnosis flag off
          GOTO      LOFT8200
.
LOFT8100  CALL      VNUM0000               * get valid selected option
          UNPACK    NUMOPTN,TYPE,RECCODE
          MOVE      RECCODE,CLINCOND       * save clinic condition code
          MOVE      TRUE,FLAGCOND          * yes, there is clinic cond. set flag
.                                            to yes
LOFT8200  MOVE      FALSE,EXIT             * set EXIT = 0
          GOTO      LOFT9999
.
. ------  Cancel option of Word Processor selected  ------
.
LOFT8300  MOVE      CATTYPE,RECTYPE       * use saved record type
          MOVE      CATCODE,RECCODE       * use saved diagnosis category code
          GOTO      LOFT1000
.
. ------  null input  ------
.
LOFT9000  MOVE      TRUE,EXIT             * set EXIT = 1
.
LOFT9999  RETURN
+
.*********************************************************************
.         keyin for LOFT routine
.*********************************************************************
KEYL0000  DISPLAY   *P1:24,*EL,"Select the option you wish to use";
          MOVE      "33",CCOL
          IF        CALLPOSN = 1 | CALLPOSN = 2
            DISPLAY   ", (",*V2LON,ANSN,*HOFF,")ext";
            ADD       "8",CCOL
          ENDIF
          IF        CALLPOSN = 1 | CALLPOSN = 3
            DISPLAY   ", (",*V2LON,ANSP,*HOFF,")revious";
            ADD       "12",CCOL
          ENDIF
          DISPLAY   " : ";
          ADD       FOUR,CCOL
.
KEYL1000  KEYIN     *PCCOL:24,"__":
                    *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
          PACK      DIM2,DIM2,SP2
          MOVE      ONE,EXIT
          MATCH     SP2,DIM2
          GOTO      KEYL9999 IF EQUAL       * nothing entered
          TYPE      DIM2
          GOTO      KEYL5000 IF EQUAL       * number entered
.
          UNPACK    DIM2,ANS,ANS
          REP       UPPLOW,ANS
          MOVE      ZERO,EXIT
          REP       " 1N2P3",ANS
          MOVE      ANS,EXIT
          BRANCH    EXIT,KEYL9999,KEYL9999,KEYL9999
.
KEYL1500  BEEP
          GOTO      KEYL0000
.
.         number entered
.
KEYL5000  MOVE      ZERO,EXIT
          MOVE      DIM2,REPLYF
          COMPARE   REPLYF,ZERO
          GOTO      KEYL1500 IF NOT LESS    * too low
          COMPARE   REPLYF,LINE
          GOTO      KEYL1500 IF LESS        * too high
.
KEYL9999  RETURN
+
.*********************************************************************
.         keyin for COPY routine
.*********************************************************************
KEYY0000  DISPLAY   *P1:24,*EL,"Select item to copy";
          MOVE      "19",CCOL
          IF        CALLPOSN = 1 | CALLPOSN = 2
            DISPLAY   ", (",*V2LON,ANSN,*HOFF,")ext";
            ADD       "8",CCOL
          ENDIF
          IF        CALLPOSN = 1 | CALLPOSN = 3
            DISPLAY   ", (",*V2LON,ANSF,*HOFF,")irst";
            ADD       NINE,CCOL
          ENDIF
          DISPLAY   " : ";
          ADD       FOUR,CCOL
.
KEYY1000  KEYIN     *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
          PACK      DIM2,DIM2,SP2
          MOVE      ONE,EXIT
          MATCH     SP2,DIM2
          GOTO      KEYY9999 IF EQUAL       * nothing entered
          TYPE      DIM2
          GOTO      KEYY5000 IF EQUAL       * number entered
.
          UNPACK    DIM2,ANS,ANS
          REP       UPPLOW,ANS
          MOVE      ZERO,EXIT
          REP       "E1N2F3",ANS
          MOVE      ANS,EXIT
          BRANCH    EXIT,KEYY9999,KEYY9999,KEYY9999
.
KEYY1500  BEEP
          GOTO      KEYY0000
.
.         number entered
.
KEYY5000  MOVE      ZERO,EXIT
          MOVE      DIM2,FORM2  
          COMPARE   FORM2,ZERO
          GOTO      KEYY1500 IF NOT LESS    * too low
          COMPARE   FORM2,LINE
          GOTO      KEYY1500 IF LESS        * too high
.
KEYY9999  RETURN
+
.*********************************************************************
.         see if any details in wp temp file
.         Returns : EXIT = 1      no details in temp file
.*********************************************************************
ALIT0000  CLOSE     SEQTEMP
          OPEN      SEQTEMP,FNAMES1
          MOVE      ONE,EXIT
.
ALIT1000  READ      SEQTEMP,SEQ;LINEDESC
          GOTO      ALIT9999 IF OVER
          MATCH     SP59,LINEDESC
          GOTO      ALIT1000 IF EQUAL       * nothing entered
          RESET     LINEDESC
          GOTO      ALIT1000 IF EOS         * nothing entered
.
          MOVE      ZERO,EXIT
.
ALIT9999  RETURN
+  
.*********************************************************************
.         keyin for re-activate care plan
.         Returns : EXIT = ONE & REPLYF = ONE    Next
.                   EXIT = ONE & REPLYF = TWO    Previous
.                   EXIT = EIGHT                 nothing entered/no in-active
.*********************************************************************
KEYR0000  BRANCH    NODATA,KEYR9000
          DISPLAY   *P1:24,*EL,"Select item to re-activate";
          MOVE      "26",CCOL
          IF        CALLPOSN = 1 | CALLPOSN = 2
            DISPLAY   ", ",*V2LON,ANSN,*HOFF,"ext";
            ADD       "6",CCOL
          ENDIF
          IF        CALLPOSN = 1 | CALLPOSN = 3
            DISPLAY   ", ",*V2LON,ANSP,*HOFF,"revious";
            ADD       "10",CCOL
          ENDIF
          DISPLAY   " :  ";
          ADD       FOUR,CCOL
.
KEYR1000  KEYIN     *PCCOL:24,*V2LON,*JR,KEY2:
                    *PCCOL:24,*DV,KEY2
          PACK      KEY2,KEY2,SP2
          MOVE      THREE,EXIT
          MATCH     SP2,KEY2
          GOTO      KEYR9999 IF EQUAL       * exit
.
          TYPE      KEY2
          GOTO      KEYR5000 IF EQUAL       * number entered
.
          UNPACK    KEY2,ANS,ANS
          REP       UPPLOW,ANS
          MOVE      ONE,EXIT                * set for Next/Previous
          MOVE      ONE,REPLYF              * set for Next
          MATCH     ANSN,ANS
          GOTO      KEYR9999 IF EQUAL
          MOVE      TWO,REPLYF              * set for Previous
          MATCH     ANSP,ANS
          GOTO      KEYR9999 IF EQUAL
.
KEYR1500  BEEP
          GOTO      KEYR1000
.
.         number entered, see if valid
.
KEYR5000  MOVE      KEY2,FORM2
          PACK      KEY33,SP20,SP20
          LOAD      KEY33,FORM2,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                 SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                 SELECT11,SELECT12,SELECT13
.
          CALL      RDPCDIA1                * read PCPDIAFD record
          BRANCH    OVRCD,KEYR1500
.
          MOVE      ONE,PCDISTAT            * set to active
          CALL      UPPCDIA1
          GOTO      KEYR9900
.
KEYR9000  DISPLAY   *P1:24,*B,"Patient has no in-active care plans.  ",*EL;
          CALL      HITENTER
          MOVE      ONE,ACTIVE              * redisplay actives
.
KEYR9900  MOVE      EIGHT,EXIT
.
KEYR9999  RETURN
+
.*********************************************************************
.                   KEYG0000
.         keyin for getting a care plan for a patient
.*********************************************************************
KEYG0000  DISPLAY   *P1:24,*EL,"Select item, ":
                    *V2LON,ANSA,*HOFF,"dd, ":
                    *V2LON,ANSD,*HOFF,"e-activate, ":
                    *V2LON,ANSR,*HOFF,"eprint, ":
                    *V2LON,ANSC,*HOFF,"opy, reac":
                    *V2LON,ANST,*HOFF,"ivate";
          MOVE      "56",CCOL
          IF        CALLPOSN = 1 | CALLPOSN = 2
            DISPLAY   ", ",*V2LON,ANSN,*HOFF,"ext";
            ADD       "6",CCOL
          ENDIF
          IF        CALLPOSN = 1 | CALLPOSN = 3
            DISPLAY   ", ",*V2LON,ANSP,*HOFF,"revious";
            ADD       "10",CCOL
          ENDIF
          DISPLAY   " :  ";
          ADD       FOUR,CCOL
.
KEYG1000  KEYIN     *PCCOL:24,*JR,*V2LON,REPLYD:
                    *PCCOL:24,*DV,REPLYD
.
          PACK      REPLYD,REPLYD,SP2
          MATCH     SP2,REPLYD              * null input ?
          GOTO      KEYG9300 IF EQUAL       * yes
.
          REP       UPPLOW,REPLYD           * replace lower case with upper case
          DISPLAY   *PCCOL:24,*V2LON,REPLYD
.
          REP       " 0",REPLYD             * replace blanks with zeros
          TYPE      REPLYD                  * is input numeric ?
          GOTO      KEYG2000 IF EQUAL       * yes
.
          REP       "N1P2A3F4D5R6C7T8",REPLYD
          MOVE      REPLYD,REPLYF
          BRANCH    REPLYF,KEYG1600,KEYG1600,KEYG1600,KEYG1600:
                           KEYG1800,KEYG1800,KEYG9600,KEYG9700
.
KEYG1500  BEEP                              * no - invalid.  Beep and re-enter
          GOTO      KEYG1000
.
KEYG1600  MOVE      REPLYD,REPLYF           * move DIM input to FORM field
          MOVE      ONE,EXIT                * set EXIT = 1
          GOTO      KEYG9999
.
KEYG1800  DISPLAY   *P1:24,"Enter the Item number : ",*EL;
          KEYIN     *P25:24,"__":
                    *P25:24,*V2LON,FORM2
          COMPARE   ZERO,FORM2
          GOTO      KEYG0000 IF EQUAL
.
          PACK      KEY33,SP20,SP20
          LOAD      KEY33,FORM2,SELECT01,SELECT02,SELECT03,SELECT04,SELECT05:
                                SELECT06,SELECT07,SELECT08,SELECT09,SELECT10:
                                SELECT11,SELECT12,SELECT13
            
          CALL      RDPCDIA1                * read PCPDIAFD record
          BRANCH    OVRCD,KEYG1800
.
          ASSIGN    REPLYF-1,EXIT
          GOTO      KEYG9999
.
. ------  numeric input  ------
.
KEYG2000  MOVE      REPLYD,REPLYF           * move DIM input to FORM field
          COMPARE   ONE,REPLYF              * input > or = 1 ?
          GOTO      KEYG2100 IF LESS        * no - invalid
.
          COMPARE   REPLYF,LINE             * input > display line number ?
          GOTO      KEYG2100 IF LESS        * yes - invalid
          MOVE      ZERO,EXIT               * no - set EXIT = 0
          GOTO      KEYG9999
.
KEYG2100  BEEP
          MOVE      TWO,EXIT                * invalid numeric input-set EXIT = 2
          GOTO      KEYG9999
.
KEYG9300  MOVE      THREE,EXIT              * set EXIT = 3 - null input
          GOTO      KEYG9999
KEYG9600  MOVE      SIX,EXIT                * set EXIT = 6 - Copy
          GOTO      KEYG9999
KEYG9700  COMPARE   PCCNSECL,REACLEVL
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Security level inadequate to ":
                      "reactivate.  ";
            CALL      HITENTER
            GOTO      KEYG0000
          ENDIF
          MOVE      SEVEN,EXIT              * set EXIT = 7 - ReacTivate
          GOTO      KEYG9999
KEYG9999  RETURN
+
.*******************************************************************************
.*                                KLLI0000                                     *
.*              routine to delete all temporary index files                    *
.*******************************************************************************
KLLI0000  CLOSE     TEMP1
          CLOSE     TEMP2
          CLOSE     TEMP3
          CLOSE     TEMP4
          CLOSE     TPFL5
.
          CALL      KLLS0000
          CALL      KLLW0000
          MOVE      ONE,FORM1
.
KLLI1000  LOAD      FNIHDR,FORM1,PRFIXA,PRFIXB,PRFIXC,PRFIXD,PRFIXE
          PACK      FNAMEI,FNIHDR,PORT
          REP       " 0",FNAMEI
.
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMEI,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          COMPARE   FIVE,FORM1
          GOTO      KLLI9999 IF EQUAL
          ADD       ONE,FORM1
          GOTO      KLLI1000
.
KLLI9999  RETURN
+
.*******************************************************************************
.*                                KLLS0000                                     *
.*              routine to delete temporary sequential file 1                  *
.*                                                                             *
.*                   called by : URPT0000, CRTS0000, POSD0000                  *
.*******************************************************************************
KLLS0000  CLOSE      SEQTEMP,DELETE
KLLS9999  RETURN
+
.*******************************************************************************
.*                                KLLW0000                                     *
.*                 routine to delete temporary work file                       *
.*                                                                             *
.*             called by : MAINLINE, CRTI0000, URPT0000, INTC0000              *
.*******************************************************************************
KLLW0000  CLOSE      WORKFILE,DELETE
KLLW9999  RETURN
+
.*********************************************************************
.         copy a care plan
.         Para's  : FLAGZ         (set up as five)
.*********************************************************************
COPY0000  DISPLAY   *P1:8,*EF,"Diagnosis code   : "
          MOVE      "8",EVERT
          MOVE      "20",ECOL 
          MOVE      SIX,PCDSTYPE            * display diagnosis codes
          MOVE      ZERO,CKYIMAND
          MOVE      SP9,CKYIDEF9
          CALL      KYPCPDSC
          BRANCH    EXIT,COPY9500,COPY9500
.
          STRIP     PCDSDESC
.
COPY0500  DISPLAY   *P1:8,*EF,"Diagnosis code   : ",*V2LON,*HON,*+,PCDSDESC:
                    *HOFF,*V2LON,*ULON,*P5:9,"   Date   ",*P17:9,"Time ":
                    *P24:9,"Status  ",*P34:9,"Nurse                     "
          MOVE      NINE,CVERT
          MOVE      ZERO,LINE  
          MOVE      ONE,CPAGENO
          PACK      KEY24,PURNO,SP20
          CALL      RDSVISA2                * position on the visit file
.
COPY0600  CALL      RDKVISA2                * read next visit
          BRANCH    OVRCD,COPY5000
.
          MATCH     PURNO,PVIURNO           * match U/R numbers
          GOTO      COPY5000 IF NOT EQUAL
.
          COMPARE   "3",PVITYPE             * only process in-patient admissions
          GOTO      COPY0600 IF NOT EQUAL
.
          PACK      KEY33,PVIBILL,Z25       * position on the careplan file
          CALL      RSPCDIA1                  for this admission number
.
COPY1000  CALL      RPPCDIA1                * read next careplan for patient
          BRANCH    OVRCD,COPY0600
          COMPARE   PVIBILL,PCDIADMN
          GOTO      COPY0600 IF NOT EQUAL   * no more careplans for patient
          MATCH     PCDSCODE,PCDIDIAG
          GOTO      COPY1000 IF NOT EQUAL   * not the entered diagnosis
.
          ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      COPY4000 IF NOT LESS    * need a new page
          ADD       ONE,LINE  
.
COPY3000  UNPACK    PCDIDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      "Active",KEY8
          IF        PCDISTAT = TWO
            MOVE      "Inactive",KEY8
          ENDIF
          MOVE      PCDITIME,KEY5
          MOVE      SP20,PCNUNAME
          MOVE      PCDINURS,KEY6
          CALL      RDPCNUR1
          DISPLAY   *P1:CVERT,*V2LON,LINE,*HOFF,". ",CPCDATE,SP2,KEY5,SP2,KEY8:
                    SP2,PCNUNAME,SP1,"(",PCNUCLSS,")"
          PACK      COPYITMS[LINE],PCDIADMN,PCDIDATE,PCDITIME,PCDIDIAG
          GOTO      COPY1000
.
. ******* more data to display *******
.
COPY4000  BRANCH    CPAGENO,COPY4500
.
COPY4100  MOVE      ONE,CALLPOSN
          CALL      KEYY0000
          BRANCH    EXIT,COPY0000,COPY7000,COPY0500
.                        Exit     Next     First
          GOTO      COPY6000
.
COPY4500  MOVE      TWO,CALLPOSN
          CALL      KEYY0000
          BRANCH    EXIT,COPY0000,COPY7000,COPY5900
.                        Exit     Next     First
          GOTO      COPY6000
.
. ------- no more data to display -------
.
COPY5000  COMPARE   ZERO,LINE
          GOTO      COPY9000 IF EQUAL       * no data for diagnosis
.
          BRANCH    CPAGENO,COPY5500
.
COPY5100  MOVE      THREE,CALLPOSN
          CALL      KEYY0000
          BRANCH    EXIT,COPY0000,COPY5900,COPY0500
.                        Exit     Next     First
          GOTO      COPY6000
.
COPY5500  MOVE      FOUR,CALLPOSN
          CALL      KEYY0000
          BRANCH    EXIT,COPY0000,COPY5900,COPY5900
.                        Exit     Next     First
          GOTO      COPY6000
.
COPY5900  BEEP
COPY5910  BRANCH    CALLPOSN,COPY4100,COPY4500,COPY5100,COPY5500
.
. ------- item selected -------
.
COPY6000  MOVE      COPYITMS[FORM2],KEY33
          CALL      RDPCDIA1
          BRANCH    OVRCD,COPY5910
.
          MOVE      PCDIUNIQ,OLDUNIQ        * save the old unique value
.
.  Test if a previous admission and set flag if so. This flag is used to
.  clear the description codes when copying from a previous admission. These 
.  codes are the XXXXDCOD variables from pcpintaf pcpoutaf pcprelaf pcpdefaf
.
          MOVE      ZERO,PREVADMN
          IF        AADMNO <> PCDIADMN
            MOVE      ONE,PREVADMN
          ENDIF
.
COPY6100  CALL      IBACLOCK
          PACK      PCDIDATE,CCC,CYY,CMM,CDD
          REP       " 0",PCDIDATE
          CLOCK     TIME,PCDITIME
          REP       " 0",PCDITIME
          MOVE      NURSCODE,PCDINURS       * set Nurse Code
.
          MOVE      AADMNO,PCDIADMN         * set admission number
          PACK      KEY33,PCDIADMN,PCDIDATE,PCDITIME,PCDIDIAG
          CALL      RDPCDIA1
          COMPARE   ZERO,OVRCD
          GOTO      COPY6100 IF EQUAL       * clock a new time
.
          MOVE      ONE,PCDISTAT            * set as active
          MOVE      " 41",PRXCODE           * set sector for locking
          CALL      GETSLK00                * lock sector
          READ      CONTROLF,FORTY1;*79,PCCNUNIQ
          ADD       ONE,PCCNUNIQ
          WRITAB    CONTROLF,FORTY1;*79,PCCNUNIQ
          CALL      RELSLK00                * release lock
          MOVE      PCCNUNIQ,PCDIUNIQ       * set Unique Key
          MOVE      PCCNUNIQ,NEWUNIQ        * save new unique value
          MOVE      AADMNO,PCDIADMN         * set admission number
          PACK      KEY33,PCDIADMN,PCDIDATE,PCDITIME,PCDIDIAG
          MOVE      KEY33,SAVKEY33
.
          CALL      RAPCDIA1
          IF        OVRCD=1
            CALL      WRPCDIA1              * write a record to PCPDIAFD file
          ELSE
            CALL      UPPCDIA1
          ENDIF
.
          MOVE      SP1,MODE
          CALL      CAND0000                * copy all new data
          GOTO      COPY0000
.
. ------- set up for a new screen ------
.
COPY7000  ADD       ONE,CPAGENO
          MOVE      ZERO,LINE
          MOVE      NINE,CVERT
          DISPLAY   *P1:10,*EF
          MOVE      COPYITMS[13],KEY33
          CALL      RDPCDIA1
          GOTO      COPY1000
.
COPY9000  DISPLAY   *P1:24,*EL,*B,"No Care Plans for the entered ":
                    "Diagnosis code.  ";
          CALL      HITENTER
          GOTO      COPY0000
.
COPY9500  MATCH     ANSI,MODE
          IF        @EQUAL
            MOVE      ONE,EXIT
          ELSE
            MOVE      ZERO,EXIT
          ENDIF
COPY9999  RETURN
+
.*********************************************************************
.         copy all the details for the old care plan to the new one
.         Para's  : OLDUNIQ       old unique id
.                   NEWUNIQ       new unique id
.*********************************************************************
.
.         copy the defining characteristics
.
CAND0000  PACK      KEY19,OLDUNIQ,SP10
          CALL      RSPCDEF1
.
CAND1000  CALL      RKPCDEF1
          BRANCH    OVRCD,CAND2000
          MATCH     OLDUNIQ,PCDEUNIQ
          GOTO      CAND2000 IF NOT EQUAL
.
  
          PACK      SAVKEY19,PCDEUNIQ,PCDECHAR
          MOVE      NEWUNIQ,PCDEUNIQ
.
          IF        PREVADMN = 1
            MATCH     SP4,PCDEDCOD
            GOTO      CAND1000 IF NOT EQUAL  * don't copy wp stuff for prev adm
          ENDIF
 
          PACK      KEY19,PCDEUNIQ,PCDECHAR
          CALL      WRPCDEF1
          MOVE      SAVKEY19,KEY19
          CALL      RDPCDEF1                 * re-position
          GOTO      CAND1000
.
.         copy the interventions
.
CAND2000  PACK      KEY19,OLDUNIQ,SP10
          CALL      RSPCINT1
.
CAND2100  CALL      RKPCINT1
          BRANCH    OVRCD,CAND3000
          MATCH     OLDUNIQ,PCINUNIQ
          GOTO      CAND3000 IF NOT EQUAL
.
          PACK      SAVKEY19,PCINUNIQ,PCINCODE
          MOVE      NEWUNIQ,PCINUNIQ
.
          IF        PREVADMN = 1
            MATCH     SP4,PCINDCOD
            GOTO      CAND2100 IF NOT EQUAL  * don't copy wp stuff for prev adm
          ENDIF
.
          PACK      KEY19,PCINUNIQ,PCINCODE
          CALL      WRPCINT1
          MOVE      SAVKEY19,KEY19
          CALL      RDPCINT1                 * re-position
          GOTO      CAND2100
.
.         copy the outcomes
.
CAND3000  PACK      KEY19,OLDUNIQ,SP10
          CALL      RSPCOUT1
.
CAND3100  CALL      RKPCOUT1
          BRANCH    OVRCD,CAND4000
          MATCH     OLDUNIQ,PCOTUNIQ
          GOTO      CAND4000 IF NOT EQUAL
.
          PACK      SAVKEY19,PCOTUNIQ,PCOTCODE
          MOVE      NEWUNIQ,PCOTUNIQ
          IF        PREVADMN = 1
            MATCH     SP4,PCOTDCOD
            GOTO      CAND3100 IF NOT EQUAL  * don't copy wp stuff for prev adm
          ENDIF
.
          PACK      KEY19,PCOTUNIQ,PCOTCODE
          CALL      WRPCOUT1
          MOVE      SAVKEY19,KEY19
          CALL      RDPCOUT1                 * re-position
          GOTO      CAND3100
.
.         copy the related factors
.
CAND4000  PACK      KEY19,OLDUNIQ,SP10
          CALL      RSPCREL1
.
CAND4100  CALL      RKPCREL1
          BRANCH    OVRCD,CAND9999
          MATCH     OLDUNIQ,PCREUNIQ
          GOTO      CAND9999 IF NOT EQUAL
.
          PACK      SAVKEY19,PCREUNIQ,PCREFACT
          MOVE      NEWUNIQ,PCREUNIQ
          IF        PREVADMN = 1
            MATCH     SP4,PCREDCOD
            GOTO      CAND4100 IF NOT EQUAL  * don't copy wp stuff for prev adm
          ENDIF
.
          PACK      KEY19,PCREUNIQ,PCREFACT
          CALL      WRPCREL1
          MOVE      SAVKEY19,KEY19
          CALL      RDPCREL1                 * re-position
          GOTO      CAND4100
.
CAND9999  RETURN
+
.*********************************************************************
.         enter the once-only date and shift
.*********************************************************************
OOLY0000  DISPLAY   *P1:23,*EF,"Enter the Once off date  : ";
          MOVE      "23",CVERT
          MOVE      "28",CCOL 
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
          CALL      KEYDATE
          BRANCH    OVRCD,OOLY9100
.
          PACK      XINDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",XINDATE            * set the date
.
          CALL      IBACLOCK
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
          MATCH     TODAY,XINDATE
          GOTO      OOLY5000 IF NOT LESS    * entered date >= current date
.
          DISPLAY   *P1:24,*B,*EL,*V2LON,"WARNING",*HOFF,": Date is in the ":
                    "past.  ",*EL;
          CALL      HITENTER
.
.         enter the shift
.
OOLY5000  DISPLAY   *P1:24,*EL,"Enter the Once off Shift : ";
          MOVE      "24",EVERT
          MOVE      "28",ECOL 
          MOVE      ZERO,CKYIMAND
          MOVE      SP3,CKYIDEF3
          MOVE      "DS",CODE
          CALL      PATCODKY
          BRANCH    EXIT,OOLY0000,OOLY0000
.
          MOVE      ACODE,XINSHFT           * set the shift
          MOVE      ZERO,EXIT
          GOTO      OOLY9999
OOLY9100  MOVE      ONE,EXIT
          DISPLAY   *P1:23,*EF;
OOLY9999  RETURN
+
.
.**********************************************************************
. EVAL0000 : input evaluation
.**********************************************************************
EVAL0000  CALL      DEVA0000                 * Display evaluations
          CALL      WEVA0000                 * Word process evaluations
          
EVAL9999  RETURN
+
.
.*************************************************************************
.* DEVA0000 : Display evalutations related to chioce   
.*************************************************************************
DEVA0000  MOVE      SAVKEY33,KEY33          * restore key
          CALL      RDPCDIA1                * Read DIA file
.
          MOVE      PCDIUNIQ,UNIQUE
          UNPACK    PCDIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      PRDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.         
          MOVE      NINE,CLINE              * initialize line

          DISPLAY   *P1:CLINE,*EF:
                    *P3:CLINE,*V2LON,"Date",*P12:CLINE,"Nursing Diagnosis"
          ADD       ONE,CLINE
.
          DISPLAY   *P1:CLINE,PRDATE;     * Date 
          ADD       ONE,CLINE
          DISPLAY   *P1:CLINE,"(",PCDITIME,")";   * Time 
          SUB       ONE,CLINE
.
.         Now display the nursing diagnosis.  In order to do this we need to 
.         check the description number in the PCPDIAFD file.  Check if it is 
.         blank.  If it is then get the description from the PCPDSCFD file,
.         else get the description from the PCPPDSFD file.
.
          MATCH     SP4,PCDIDCOD
          GOTO      DEVA1000 IF NOT EQUAL
.
.         Get the description from the PCPDSCFD file
.
          MOVE      SIX,PCDSTYPE
          MOVE      PCDIDIAG,PCDSCODE
          MOVE      ONE,PCDSLINE
          PACK      KEY13,PCDSTYPE,PCDSCODE,PCDSLINE
          CALL      RDPCDSC1                 * Record will exist on file
          MOVE      PCDSDESC,DIAGDESC
          GOTO      DEVA1500
.
.         Get the description from the PCPPDSFD file
.
DEVA1000  MOVE      AADMNO,PCPDADMN
          MOVE      PCDIDCOD,PCPDDCOD
          MOVE      ONE,PCPDLINE
          PACK      KEY14,PCPDADMN,PCPDDCOD,PCPDLINE
          CALL      RDPCPDS1                 * Record will exist on file
          MOVE      PCPDDESC,DIAGDESC
.
DEVA1500  DISPLAY   *P12:CLINE,DIAGDESC
          ADD       TWO,CLINE
.
          DISPLAY   *P12:CLINE,*V2LON,"Evaluations",*P71:CLINE,"Finished"
          ADD       ONE,CLINE 
          PACK      KEY26,PCDIUNIQ,Z25 
          CALL      RSPCEVA1                * position file pointer
.
DEVA2000  CALL      RPPCEVA1                * get latest evaluation
          BRANCH    OVRCD,DEVA5000  
.
          MATCH     PCDIUNIQ,PCEVUNIQ       * right code?
          GOTO      DEVA5000 IF NOT EQUAL
.
          COMPARE   "20",CLINE              * full page?
          GOTO      DEVA5000 IF NOT LESS
.
          BRANCH    PCEVSTAT,DEVA2100,DEVA2200
.
DEVA2100  MOVE      "No",PRSTAT             * set status to print
          GOTO      DEVA2300
.
DEVA2200  MOVE      "Yes",PRSTAT            * set status to print
.
DEVA2300  MOVE      PCEVNURS,PCNUCODE
          MOVE      PCNUCODE,KEY6
          CALL      RDPCNUR1                * get nurse description
.
          CALL      PRDT0000                * format date
          DISPLAY   *P1:CLINE,PRDATE,"  (",PCEVTIME,")",*P25:CLINE,PCNUNAME:
                    SP1,PCNUCLSS,*P74:CLINE,PRSTAT
.
          PACK      KEY14,PCDIADMN,PCEVDCOD,SP2
          CALL      RSPCPDS1
.
DEVA3000  ADD       ONE,CLINE
          CALL      RKPCPDS1               * get evaluation description
          BRANCH    OVRCD,DEVA2000 
.
          MATCH     PCEVDCOD,PCPDDCOD      * right code?
          GOTO      DEVA2000 IF NOT EQUAL
.
          DISPLAY   *P12:CLINE,PCPDDESC    * print desc
.
          COMPARE   "23",CLINE             * full page?
          GOTO      DEVA3000 IF LESS
.                    
DEVA5000  CALL      CONTQST                * ok to continue?
          BRANCH    CEXIT,DEVA7000,DEVA8000,DEVA9000
.
DEVA7000  MOVE      ONE,EXIT
          GOTO      DEVA9999
.
DEVA8000  MOVE      TWO,EXIT
          GOTO      DEVA9999
.
DEVA9000  MOVE      THREE,EXIT
          MOVE      ONE,GOTNAME
          CALL      RDSU0000
.
DEVA9999  RETURN
.
.*****************************************************************************
.* WEVA0000 : Word processor and posting for Evaluations
.*****************************************************************************
WEVA0000  CALL      HWEV0000                * load wp
          BRANCH    EXIT,WEVA9999
.
WEVA2000  DISPLAY   *P1:24,*EL,"Is this care plan complete ( / ) ? _":
                    *P29:24,*V2LON,"Y",*P31:24,"N"
          KEYIN     *P36:24,*V2LON,ANS
          REP       "N1Y2",ANS
          MOVE      ZERO,PCEVSTAT
          MOVE      ANS,PCEVSTAT
          BRANCH    PCEVSTAT,WEVA3000,WEVA3000
          GOTO      WEVA2000
.
WEVA3000  DISPLAY   *P1:24,*EL,*P50:24,*V2LON,"*** POSTING ***"
          MOVE      ZERO,LINE
          MOVE      ZERO,FORM1
          OPEN      SEQTEMP,FNAMES1         * open tempfile
.
          PACK      KEY14,AADMNO,Z6
          CALL      RSPCPDS1
          CALL      RPPCPDS1                * read last evaluation number
          BRANCH    OVRCD,WEVA3050
.
          MATCH     PCPDDCOD,SP4
          GOTO      WEVA3050 IF EQUAL
.
          COMPARE   AADMNO,PCPDADMN        * right addmission number?
          GOTO      WEVA3050 IF NOT EQUAL
.
          MOVE      PCPDDCOD,FORM4         * increment evaluation number 
          ADD       ONE,FORM4
          MOVE      FORM4,PCPDDCOD
          GOTO      WEVA3100
.
WEVA3050  MOVE      ZERO,FORM4             * initialize evaluation to zero if
                                           * no previous evaluation
          ADD       ONE,FORM4
          MOVE      FORM4,PCPDDCOD
.
WEVA3100  PACK      LINE60,SP30,SP30
          READ      SEQTEMP,SEQ;LINE60     * read next line in tempfile 
          GOTO      WEVA3400 IF OVER
.
          ENDSET    LINE60
          APPEND    SP33,LINE60
          APPEND    SP33,LINE60
          RESET     LINE60
.
          MATCH     LINE60,SP10             * nothing on line?
          GOTO      WEVA3400 IF EQUAL
.
          GOTO      WEVA3300 
.
WEVA3300  MOVE      LINE60,PCPDDESC
          MOVE      AADMNO,PCPDADMN
          ADD       ONE,LINE
          MOVE      LINE,PCPDLINE
.
          PACK      KEY14,PCPDADMN,PCPDDCOD,PCPDLINE
          CALL      WRPCPDS1                * write to description file
          GOTO      WEVA3100
.
WEVA3400  MOVE      UNIQUE,PCEVUNIQ 
          
          CALL      IBACLOCK                * get current date for key
          PACK      PCEVDATE,CCC,CYY,CMM,CDD * set up date
          REP       " 0",PCEVDATE
          MOVE      CTIMEIS,PCEVTIME
          MOVE      PCPDDCOD,PCEVDCOD
          MOVE      NURSCODE,PCEVNURS
          PACK      KEY26,PCDIUNIQ,PCEVDATE,PCEVTIME
.
          CALL      WRPCEVA1                * write to evaluation file
.
          IF        PCEVSTAT = TWO
            MOVE      TWO,PCDISTAT            * de-activate careplan
            CALL      UPPCDIA1
          ENDIF
.
          MOVE      FALSE,EXIT
          GOTO      WEVA9999
.
WEVA9000  MOVE      TRUE,EXIT
.
WEVA9999  RETURN
+
.*******************************************************************************
.* HWEV0000 : Handle Wordprocessor for evaluations
.*******************************************************************************
HWEV0000  CALL      SETW0000             * set up temp file and screen header
.                                          before invoking word processor
.
. ------  word processor ------
.
HWEV2000  CLEAR     CMDLINE
          APPEND    FNAMES1,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          MOVE      TEN,STVAR
          CLOSE     SEQTEMP
          WORD      CMDLINE,999,9,12,69,23,STVAR
.
. ------  ask the "O.K. to post ?" question  ------
.
HWEV3000  DISPLAY   *P1:24,*EF,"Do you want to use this evalutation ( / / )":
                    " ? _":
                    *P38:24,*V2LON,"Y",*P40:24,"N",*P42:24,"C";
          KEYIN     *P47:24,*V2LON,ANS
          REP       "Y1N2C3",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,HWEV8000,HWEV0000,HWEV9000     * 1=Yes, 2=No, 3=Cancel
          BEEP
          GOTO      HWEV3000
.
. ------  Post option chosen  ------
.
HWEV8000  MOVE      FALSE,EXIT
          GOTO      HWEV9999
.
. ------  Cancel option chosen  ------
.
HWEV9000  MOVE      TRUE,EXIT
.
HWEV9999  RETURN
+
.*******************************************************************************
.* RDSP0000 : re-display nursing code 
.*******************************************************************************
RDSU0000  DISPLAY   *P1:3,*EF,*P5:4,"Input your nursing code : ",*V2LON:
                               NURSCODE,*HOFF,*P52:4,PCNUNAME,*P78:4,PCNUCLSS
.
          DISPLAY   *P5:6,"Input the surname of the patient you":
                    " require : ",*V2LON,SURNAME,*HOFF
.
          DISPLAY   *P1:8,*ULON,"No.",*HOFF," ",*ULON,"Patient's Name",SP30:
                    "            ",*P55:8,*HOFF," ",*ULON,"U/R No.",*HOFF," ":
                    *ULON,"Adm Date",*HOFF," ",*ULON,"Sex",*HOFF," ",*ULON,"Age"
.
RDSU9999  RETURN
+
.
.******************************************************************************
.* PRDT0000 : Format date into printing format    
.******************************************************************************
PRDT0000  UNPACK    PCEVDATE,CCENT,CYEAR,CMON,CDAY
          PACK      PRDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          REP       " 0",PRDATE             * zero fill date
PRDT9999  RETURN         
+
.*********************************************************************
.         re-print the care plan
.*********************************************************************
RPRT0000  DISPLAY   *P1:24,*EL,"Re-printing the care plan - ":
                    *V2LON,*BLINKON,"Please wait";
          CALL      CRTI0000                * create and open temp index files
          CALL      STMP0000                * set up temp index files
          MOVE      PCDIDIAG,DIAGCODE       * save diagnosis category code
          CALL      GDID0000                * get diagnosis description
.
.         get the clinic condition value or the health pattern etc...
.
          PACK      PCDSDESC,SP20,SP20,SP20
          LOAD      FORM2,PCCNDCAT,TWO,TWO,THREE,FOUR,FIVE
          MOVE      ONE,IMON
          PACK      KEY13,FORM2,PCDICLIN,IMON
          CALL      RDPCDSC1
          MOVE      PCDSDESC,CATDESC        * set the clinic condition value
.
.         get the Nurses name 
.
          MOVE      SP20,PCNUNAME
          PACK      KEY6,PCDINURS
          CALL      RDPCNUR1                * read PCPNURFD record
.
.         print the details
.
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS            * get current time
          MOVE      "- Re-Print",CPHDROPT   * set option
          CALL      HEAD0000                * print page header
          MOVE      ONE,PRINFLAG            * set to print
          MOVE      ONE,STTOPRNT            * set to not clear screen
          CALL      ACCP0000                * print the care plan
.
RPRT9999  RETURN
+
.*******************************************************************************
.*                                CREL0000                                     *
.*        change a care plan - Related Factors           called by : CPLN0000  *
.*******************************************************************************
CREL0000  MOVE      ONE,TEMPFILE            * set temp file indicator to 1
          MOVE      ZERO,REDISP             * not redisplaying
          DISPLAY   *P1:11,*EF,*P5:11,*V2LON,*ULON,RLFACT
.
CREL1000  CALL      DDDD0000
          BRANCH    EXIT,CREL9999
.
          BRANCH    FORM1,CREL2000,CREL3000,CREL4000
.                         Add      Change   Delete
          GOTO      CREL9999
.
. ------  Add option chosen  ------
.
CREL2000  CALL      AREL0000                * add Related Factor(s)
          GOTO      CREL0000                * re-display on current screen
.
. ------  Change option chosen  ------
.
CREL3000  DISPLAY   *P1:24,*EL,"Enter the number of the Related Factor":
                               " you want to change : "
.
          MOVE      "61",CCOL
          CALL      KEYN0000
          BRANCH    EXIT,CREL3000:          * 1 = invalid number,
                         CREL3900           * 2 = null input
.
          CALL      VNUM0000                * get valid selected R. Factor
          MOVE      NUMOPTN,KEY9
          CALL      RD1T0000                * read temp index file 1 record
.
          MATCH     SP4,XREDESC             * blank description code ?
          GOTO      CREL3100 IF NOT EQUAL   * no
.
          DISPLAY   *P1:24,*EL,*B,"Change to this description is not allowed. ";
          CALL      HITENTER
          GOTO      CREL3000
.
. ------- change the details of a word processor entered details -------
.
CREL3100  MOVE      XREDESC,DESCCODE 
          CALL      MWPD0000
          CALL      SPFR0000                * redisplay current screen
          GOTO      CREL1000
.
CREL3900  CALL      SPAC0000
          GOTO      CREL1000
.
. ------  Delete option chosen  ------
.
CREL4000  DISPLAY   *P1:24,*EL,"Enter the number of the Related Factor":
                               " you want to delete : "
          MOVE      "61",CCOL
          CALL      KEYN0000
          BRANCH    EXIT,CREL4000:          * 1 = invalid number,
                         CREL4900           * 2 = null input
.
          CALL      VNUM0000                * get selected Related Factor
          UNPACK    NUMOPTN,KEY9
          CALL      RD1T0000                * read temp index file 1 record
          MATCH     SP4,XREDESC             * blank description code ?
          GOTO      CREL4200 IF EQUAL       * yes
.
CREL4100  MOVE      XREDESC,DESCCODE
          CALL      CLT50000                * clean up temp file 5
.
CREL4200  CALL      DE1T0000                * delete temp index file 1 record
          CALL      SPFR0000                * redisplay current screen
          GOTO      CREL1000
.
CREL4900  CALL      SPAC0000
          GOTO      CREL1000
.
CREL9999  RETURN
+
.*******************************************************************************
.*                                CDEF0000                                     *
.*     change a care plan - Defining Characteristics     called by : CPLN0000  *
.*******************************************************************************
CDEF0000  MOVE      TWO,TEMPFILE            * set temp file indicator to 2
          MOVE      ZERO,REDISP             * not redisplaying
          DISPLAY   *P1:11,*EF,*P5:11,*V2LON,*ULON,DFCHAR
.
CDEF1000  CALL      DDDD0000
          BRANCH    EXIT,CDEF9999
.
          BRANCH    FORM1,CDEF2000,CDEF3000,CDEF4000
.                         Add      Change   Delete
          GOTO      CREL9999
.
. ------  Add option chosen  ------
.
CDEF2000  CALL      ADEF0000               * add Defining Characteristic(s)
          GOTO      CDEF0000               * re-display on current screen
.
. ------  Change option chosen  ------
.
CDEF3000  DISPLAY   *P1:24,*EL,"Enter the number of the Defining ":
                               "Characteristic you want to change : "
.
          MOVE      "71",CCOL
          CALL      KEYN0000
          BRANCH    EXIT,CDEF3000:         * 1 = invalid number,
                         CDEF3900          * 2 = null input
.
          CALL      VNUM0000               * get selected Defining Char.r
          MOVE      NUMOPTN,KEY9
          CALL      RD2T0000               * read temp index file 2 record
          MATCH     SP4,XDEDESC            * blank description code ?
          GOTO      CDEF3100 IF NOT EQUAL  * no
.
          DISPLAY   *P1:24,*EL,*B,"Change to this description is not allowed. ";
          CALL      HITENTER
          GOTO      CDEF3000
.
. ------- change the details of a word processor entered details -------
.
CDEF3100  MOVE      XDEDESC,DESCCODE 
          CALL      MWPD0000
          CALL      SPFR0000                * redisplay current screen
          GOTO      CDEF1000
.
CDEF3900  CALL      SPAC0000
          GOTO      CDEF1000
.
. ------  Delete option chosen  ------
.
CDEF4000  DISPLAY   *P1:24,*EL,"Enter the number of the Defining ":
                               "Characteristic you want to delete : "
.
          MOVE      "71",CCOL
          CALL      KEYN0000
          BRANCH    EXIT,CDEF4000:         * 1 = invalid number,
                         CDEF4900          * 2 = null input
.
          CALL      VNUM0000              * get selected Defining Characteristic
          UNPACK    NUMOPTN,KEY9
          CALL      RD2T0000               * read temp index file 2 record
          MATCH     SP4,XDEDESC            * blank description code ?
          GOTO      CDEF4200 IF EQUAL      * yes
.
CDEF4100  MOVE      XDEDESC,DESCCODE
          CALL      CLT50000                * clean up temp file 5
.
CDEF4200  CALL      DE2T0000               * delete temp index file 2 record
          CALL      SPFR0000                * redisplay current screen
          GOTO      CDEF1000               * re-display on current screen
.
CDEF4900  CALL      SPAC0000
          GOTO      CDEF1000
.
CDEF9999  RETURN
+
.*******************************************************************************
.*                                COUT0000                                     *
.*     change a care plan - Desired Outcomes             called by : CPLN0000  *
.*******************************************************************************
COUT0000  MOVE      THREE,TEMPFILE          * set temp file indicator to 3
          MOVE      ZERO,REDISP             * not redisplaying
          DISPLAY   *P1:11,*EF,*P5:11,*V2LON,*ULON,DSOUTC,*P66:11,"Target Date"
.
COUT1000  CALL      DDDD0000
          BRANCH    EXIT,COUT9999
.
          BRANCH    FORM1,COUT2000,COUT3000,COUT4000
.                         Add      Change   Delete
          GOTO      COUT9999
.
. ------  Add option chosen  ------
.
COUT2000  CALL      AOUT0000                * add Desired Outcome(s)
          GOTO      COUT0000                * re-display on current screen
.
. ------  Change option chosen  ------
.
COUT3000  CALL      OUTC0000                * change option routine
          CALL      SPAC0000
          GOTO      COUT1000
.
. ------  Delete option chosen  ------
.
COUT4000  DISPLAY   *P1:24,*EL,"Enter the number of the Desired Outcome":
                               " you want to delete : "
.
          MOVE      "62",CCOL
          CALL      KEYN0000
          BRANCH    EXIT,COUT4000:          * 1 = invalid number,
                         COUT4900           * 2 = null input
.
          CALL      VNUM0000                * get selected Desired Outcome
          UNPACK    NUMOPTN,KEY9
          CALL      RD3T0000                * read temp index file 3 record
          MATCH     SP4,XOTDESC             * blank description code ?
          GOTO      COUT4200 IF EQUAL       * yes
.
COUT4100  MOVE      XOTDESC,DESCCODE
          CALL      CLT50000                * clear temp file
.
COUT4200  CALL      DE3T0000                * delete temp index file 3 record
          CALL      SPFR0000                * redisplay current screen
          GOTO      COUT1000
.
COUT4900  CALL      SPAC0000
          GOTO      COUT1000
.
COUT9999  RETURN
+
.*******************************************************************************
.*                                CINT0000                                     *
.*     change a care plan - Nursing Interventions        called by : CPLN0000  *
.*******************************************************************************
CINT0000  MOVE      FOUR,TEMPFILE           * set temp file indicator to 4
          MOVE      ZERO,REDISP             * not redisplaying
          DISPLAY   *P1:11,*EF,*P5:11,*V2LON,*ULON,NSINTV,*P66:11,"Frequency"
.
CINT1000  CALL      DDDD0000
          BRANCH    EXIT,CINT9999
.
          BRANCH    FORM1,CINT2000,CINT3000,CINT4000
.                         Add      Change   Delete
          GOTO      CINT9999
.
. ------  Add option chosen  ------
.
CINT2000  CALL      AINT0000                * add Nursing Intervention(s)
          GOTO      CINT0000
.
. ------  Change option chosen  ------
.
CINT3000  CALL      INTC0000                 * change option routine
          CALL      SPAC0000                * 
          GOTO      CINT1000
.
. ------  Delete option chosen  ------
.
CINT4000  DISPLAY   *P1:24,*EL,"Enter the number of the Nursing Intervention":
                               " you want to delete : "
.
          MOVE      "67",CCOL
          CALL      KEYN0000
          BRANCH    EXIT,CINT4000:           * 1 = invalid number,
                         CINT4900            * 2 = null input
.
          CALL      VNUM0000                 * get selected Nursing Intervention
          UNPACK    NUMOPTN,KEY9
          CALL      RD4T0000                 * read temp index file 4 record
          MATCH     SP4,XINDESC              * blank description code ?
          GOTO      CINT4200 IF EQUAL        * yes
.
CINT4100  MOVE      XINDESC,DESCCODE
          CALL      CLT50000
.
CINT4200  CALL      DE4T0000                 * delete temp index file 4 record
          CALL      SPFR0000                * redisplay current screen
          GOTO      CINT1000
.
CINT4900  CALL      SPAC0000
          GOTO      CINT1000
.
CINT9999  RETURN
+
.*******************************************************************************
.*                                OUTC0000                                     *
.*    change a care plan - D. Outcome change option      called by : COUT0000  *
.*******************************************************************************
OUTC0000  DISPLAY   *P1:24,*EL,"Enter the number of the Desired Outcome":
                               " you want to change : "
.
          MOVE      "62",CCOL
          CALL      KEYN0000
          BRANCH    EXIT,OUTC0000,OUTC9000  * 1=invalid number, 2=null input
.
          CALL      VNUM0000                * get selected Desired Outcome
          MOVE      NUMOPTN,KEY9
          CALL      RD3T0000                * read temp index file 3 record
.
          DISPLAY   *P1:24,*EL,"Do you want to change the (",*V2LON,"D",*HOFF:
                               ")escription or the (",*V2LON,"T",*HOFF:
                               ")arget date ? "
.
OUTC1000  KEYIN     *P64:24,*DV,UNDLN1,*P64:24,*V2LON,ANS
          PACK      ANS,ANS,SP1
          MATCH     SP1,ANS                 * null input ?
          GOTO      OUTC8000 IF EQUAL       * yes
          REP       UPPLOW,ANS              * no - replace lower case with upper
          DISPLAY   *P64:24,*V2LON,ANS
.
          MATCH     ANSD,ANS                * input = "D" ?
          GOTO      OUTC2000 IF EQUAL       * yes
          MATCH     ANST,ANS                * input = "T" ?
          GOTO      OUTC5000 IF EQUAL       * yes
.
OUTC1100  BEEP
          GOTO      OUTC1000                * invalid input.  Re-enter
.
. ------  change description  ------
.
OUTC2000  MATCH     SP4,XOTDESC             * blank description code ?
          GOTO      OUTC2100 IF NOT EQUAL   * no
.
          DISPLAY   *P1:24,*EL,*B,"Change to this description is not allowed. ";
          CALL      HITENTER
          GOTO      OUTC0000
.
OUTC2100  MOVE      XOTDESC,DESCCODE
          CALL      MWPD0000
          CALL      SPFR0000                * redisplay current screen
          GOTO      OUTC8000
.
. ------  change target date  ------
.
OUTC5000  CALL      CTAR0000                * change target date routine
.
OUTC8000  MOVE      FALSE,EXIT              * set EXIT = 0
          GOTO      OUTC9999
.
. ------  no Desired Outcome selected  ------
.
OUTC9000  MOVE      TRUE,EXIT               * set EXIT = 1
.
OUTC9999  RETURN
+
.*******************************************************************************
.*                                INTC0000                                     *
.*  change a care plan - N. Interventions change option  called by : CINT0000  *
.*******************************************************************************
INTC0000  DISPLAY   *P1:24,*EL,"Enter the number of the Nursing Intervention":
                               " you want to change : "
.
          MOVE      "67",CCOL
          CALL      KEYN0000
          BRANCH    EXIT,INTC0000:          * 1 = invalid number,
                         INTC9000           * 2 = null input
.
          CALL      VNUM0000                * get selected Nursing Intervention
          MOVE      NUMOPTN,KEY9
          CALL      RD4T0000                * read temp index file 4 record
          MOVE      XINDESC,DESCCODE
.
INTC1000  DISPLAY   *P1:24,*EL,"Change the (",*V2LON,"D",*HOFF,")escription, ":
                    "(",*V2LON,"F",*HOFF,")requency";
          MOVE      "37",CCOL
.
          IF        DPCNCARE = 1
            DISPLAY   ", (",*V2LON,"T",*HOFF,")ime, ":
                      "(",*V2LON,"S",*HOFF,")taff Classification";
            ADD       "32",CCOL
          ENDIF
.
          DISPLAY   " : ";
          ADD       "4",CCOL
.
          KEYIN     *PCCOL:24,*DV,UNDLN1:
                    *PCCOL:24,*V2LON,ANS
          PACK      ANS,ANS,SP1
          MATCH     SP1,ANS                 * null input ?
          GOTO      INTC8000 IF EQUAL       * yes
          REP       UPPLOW,ANS              * no - replace lower case with upper
.
          MATCH     ANSD,ANS                * input = "D" ?
          GOTO      INTC2000 IF EQUAL       * yes
          MATCH     ANSF,ANS                * input = "F" ?
          GOTO      INTC5000 IF EQUAL       * yes
          MATCH     ANST,ANS                * input = "T" ?
          GOTO      INTC6000 IF EQUAL       * yes
          MATCH     ANSS,ANS                * input = "S" ?
          GOTO      INTC7000 IF EQUAL       * yes
.
INTC1100  BEEP
          GOTO      INTC1000                * invalid input.  Re-enter
.
. ------  change description  ------
.
INTC2000  MATCH     SP4,XINDESC             * blank description code ?
          GOTO      INTC2100 IF NOT EQUAL   * no
.
          DISPLAY   *P1:24,*EL,*B,"Change to this description is not allowed. ";
          CALL      HITENTER
          GOTO      INTC0000
.
INTC2100  MOVE      XINDESC,DESCCODE
          CALL      MWPD0000
          CALL      SPFR0000                * redisplay current screen
          GOTO      INTC8000
.
. ------  change frequency  ------
.
INTC5000  CALL      CFRQ0000                * routine to update frequency
          GOTO      INTC8000
.
INTC6000  COMPARE   ONE,DPCNCARE
          GOTO      INTC1100 IF NOT EQUAL   * interface not on
.
          CALL      KTIM0000                * routine to update time
          GOTO      INTC8000
.
INTC7000  COMPARE   ONE,DPCNCARE
          GOTO      INTC1100 IF NOT EQUAL   * interface not on
.
          CALL      KSTF0000                * routine to update staff class.
          GOTO      INTC8000
.
INTC8000  MOVE      FALSE,EXIT              * set EXIT = 0
          GOTO      INTC9999
.
. ------  no Nursing Intervention selected  ------
.
INTC9000  MOVE      TRUE,EXIT               * set EXIT = 1
.
INTC9999  RETURN
+
.*******************************************************************************
.*                                CTAR0000                                     *
.*        change care plan - change target date          called by : OUTC0000  *
.*******************************************************************************
CTAR0000  DISPLAY   *P1:12,*EF,*P1:13,"Desired Outcome  : ";
          MOVE      TEN3,CVERT
.
          MATCH     SP4,XOTDESC             * blank description code ?
          GOTO      CTAR2000 IF EQUAL       * yes
.
. ------  display description line(s) from temporary description file  ------
.
          PACK      KEY6,XOTDESC,SP2
          CALL      RS5T0000                * position read temp desc file
.
CTAR1000  CALL      RK5T0000                * read next temp desc file record
          BRANCH    OVRCD,CTAR3000          * end-of-file
.
          MATCH     XOTDESC,XPDCODE         * same description code ?
          GOTO      CTAR3000 IF NOT EQUAL   * no
.
          DISPLAY   *P20:CVERT,*EL,XPDDESC  * display description line
          ADD       ONE,CVERT
          GOTO      CTAR1000
.
. ------  display description line(s) from PCPDSCFD file  ------
.
CTAR2000  MOVE      SEVEN,FORM2
          PACK      KEY13,FORM2,XOTCODE,SP2
          CALL      RSPCDSC1                 * position read PCPDSCFD file
.
CTAR2100  CALL      RKPCDSC1                 * read next PCPDSCFD record
          BRANCH    OVRCD,CTAR3000           * end-of-file
.
          COMPARE   FORM2,PCDSTYPE           * same type of record ?
          GOTO      CTAR3000 IF NOT EQUAL    * no
          MATCH     XOTCODE,PCDSCODE         * same record code ?
          GOTO      CTAR3000 IF NOT EQUAL    * no
.
          DISPLAY   *P20:CVERT,*EL,PCDSDESC  * display description line
          ADD       ONE,CVERT
          GOTO      CTAR2100
.
. ------  end of file or key does not match  ------
.
CTAR3000  CALL      UPTD0000                 * routine to update target date
.
CTAR9999  RETURN
+
.*******************************************************************************
.*                                CFRQ0000                                     *
.*     change care plan - change frequency               called by : INTC0000  *
.*******************************************************************************
CFRQ0000  DISPLAY   *P1:12,*EF,*P1:13,"Intervention     : ";
          MOVE      TEN3,CVERT
.
          MATCH     SP4,XINDESC                * blank description code ?
          GOTO      CFRQ2000 IF EQUAL          * yes
.
. ------  display description line(s) from temporary description file  ------
.
          PACK      KEY6,XINDESC,SP2
          CALL      RS5T0000                   * position read temp desc file
.
CFRQ1000  CALL      RK5T0000                   * read next temp desc file record
          BRANCH    OVRCD,CFRQ3000             * end-of-file
.
          MATCH     XINDESC,XPDCODE            * same description code ?
          GOTO      CFRQ3000 IF NOT EQUAL      * yes
.
          DISPLAY   *P20:CVERT,*EL,XPDDESC     * display description line
          ADD       ONE,CVERT
          GOTO      CFRQ1000
.
. ------  display description line(s) from PCPDSCFD file  ------
.
CFRQ2000  MOVE      NINE,FORM2
          PACK      KEY13,FORM2,XINCODE,SP2
          CALL      RSPCDSC1                   * position read PCPDSCFD file
.
CFRQ2100  CALL      RKPCDSC1                   * read next PCPDSCFD record
          BRANCH    OVRCD,CFRQ3000             * end-of-file
.
          COMPARE   FORM2,PCDSTYPE             * same type of record ?
          GOTO      CFRQ3000 IF NOT EQUAL      * no
          MATCH     XINCODE,PCDSCODE           * same record code ?
          GOTO      CFRQ3000 IF NOT EQUAL      * no
.
          DISPLAY   *P20:CVERT,*EL,PCDSDESC    * display description line
          ADD       ONE,CVERT
          GOTO      CFRQ2100
.
. ------  end of file or key does not match  ------
.
CFRQ3000  CALL      KFRQ0000                * routine to update frequency
.
CFRQ9999  RETURN
+
.*********************************************************************
.*                  KFRQ0000                                         *
.*        Keyin the frequency code                                   *
.*        (This updates temp file 4 when a valid code entered)       *
.*        Para's  : CVERT         the row                            *
.*        Returns : EXIT = 1      nothing entered                    *
.*********************************************************************
KFRQ0000  MOVE      ONE,SCRNFLAG
          MOVE      ZERO,HLEF
.  
KFRQ1000  DISPLAY   *P1:24,*EL,"Enter the frequency for this intervention : ";
          KEYIN     *P45:24,*V2LON,FREQUNCY:
                    *P45:24,*DV,FREQUNCY
          PACK      FREQUNCY,FREQUNCY,SP10
          MATCH     SP9,FREQUNCY
          GOTO      KFRQ7000 IF EQUAL       * nothing entered
.
          MATCH     QUEST,FREQUNCY
          GOTO      KFRQ2000 IF NOT EQUAL   * ? entered
.
.         ? entered
.
          PERFORM   SCRNFLAG,GETSCR00       * save the screen
          CALL      PCPFRADS
          MOVE      ZERO,SCRNFLAG
          GOTO      KFRQ1000
.
KFRQ2000  MOVE      FREQUNCY,KEY9
          CALL      RDPCFRA1
          BRANCH    OVRCD,KFRQ5000          * code is not on file
.
          MOVE      FREQUNCY,XINFREQ        * set temp file 4 frequency to input
          MOVE      PCFADESC,XINFQDSC       * the description
          CALL      UP4T0000                * update temp file 4 record
          GOTO      KFRQ8000
.
KFRQ5000  DISPLAY   *P1:24,*B,"Invalid Frequency code.  ",*EL;
          CALL      HITENTER
          GOTO      KFRQ1000
.
.         nothing entered
.
KFRQ7000  DISPLAY   *P1:24,*B,"Input is Mandatory.  ",*EL;
          CALL      HITENTER 
          GOTO      KFRQ1000
.
.         check for redisplay
.
KFRQ8000  IF        SCRNFLAG = ZERO
            CALL      PUTSCR00
          ENDIF
.
KFRQ8500  MATCH     ANSY,PCFAONCE           * is it a once-off code
          IF        @EQUAL
            CALL      OOLY0000                * enter date and shift
            BRANCH    EXIT,KFRQ0000           * nothing entered
            CALL      UP4T0000                * update temp file 4 record
          ENDIF
.
KFRQ9999  RETURN
+
.*********************************************************************
.*                  KXIF0000                    Called by : AINT6000 *
.*        Enter the Time and staff classification if needed          *
.*********************************************************************
KXIF0000  COMPARE   ONE,DPCNCARE
          GOTO      KXIF9999 IF NOT EQUAL   * not using interface
.
          MOVE      XINCODE,KEY9            * get default from IDP file
          CALL      RD4T0000                * read temp file
.
          COMPARE   ZERO,XINTIME
          GOTO      KXIF9999 IF NOT EQUAL   * have a time already
.
.         get defaults off the intervention dependency file
.
          MOVE      ZERO,PCPITIME
          MOVE      SP3,PCPISTAF
          CALL      RDPCIDP1                * read int. depend. file
          MOVE      PCPITIME,XINTIME        * default time
          MOVE      PCPISTAF,XINSTAF        * default staff
          MOVE      SP8,XINDATE             * clear the date
          MOVE      SP3,XINSHFT             * clear the shift
          COMPARE   ZERO,OVRCD
          GOTO      KXIF9999 IF EQUAL       * dont enter if on file
.
          CALL      KTIM0000                * enter the time
          CALL      KSTF0000                * enter staff code
.
KXIF9999  RETURN
+
.*********************************************************************
.*                  KTIM0000                    Called by : KXIF0000 *
.*        Enter the Time for the intervention               INTC6000 *
.*        (This updates temp file 4 when a valid time entered)       *
.*********************************************************************
KTIM0000  COMPARE   ONE,DPCNCARE
          GOTO      KTIM9999 IF NOT EQUAL    * not using interface
.
          DISPLAY   *P1:24,"Enter the time : ",*EL;
          KEYIN     *P18:24,*EL:
                    *P18:24,*V2LON,*RV,XINTIME:
                    *P18:24,*DV,XINTIME
.
          COMPARE   ZERO,XINTIME
          GOTO      KTIM0000 IF LESS        * negative entered
.
          CALL      UP4T0000                * update temp file
.
KTIM9999  RETURN
+
.*********************************************************************
.*                  KSTF0000                    Called by : KXIF0000 *
.*        Enter the staff code                              INTC7000 *
.*        (This updates temp file 4 when a valid code entered)       *
.*********************************************************************
KSTF0000  COMPARE   ONE,DPCNCARE
          GOTO      KSTF9999 IF NOT EQUAL   * not using interface
.
          MOVE      CATSD,CODE
          MOVE      XINSTAF,CKYIDEF3        * default staff code
          MOVE      "34",ECOL
          MOVE      "24",EVERT
          MOVE      ZERO,CKYIMAND
          DISPLAY   *P1:24,*EL,"Enter the Staff Classification : ";
          CALL      PATCODKY
          BRANCH    EXIT,KSTF7000
.
          MOVE      ACODE,XINSTAF
          MOVE      XINSTAF,KEY3
          GOTO      KSTF8000
.
KSTF7000  MOVE      SP3,XINSTAF             * nothing entered
KSTF8000  CALL      UP4T0000                * update temp file
.
KSTF9999  RETURN
+
.*********************************************************************
.         modify the word processor details
.         Para's  : DESCCODE      the description code
.*********************************************************************
MWPD0000  CALL      SWTF0000                * set up temp file
          PACK      CMDLINE,FNAMEW,TXT
          MOVE      TEN,STVAR               * redraw,show more
          WORD      CMDLINE,150,9,8,70,23,STVAR
          CALL      POSTQST
          BRANCH    CEXIT,MWPD1000,MWPD0000,MWPD9999
.
MWPD1000  CLOSE     WORKFILE
          OPEN      WORKFILE,FNAMEW         * open temp work file
          MOVE      ZERO,WORKLINE
.
          READ      WORKFILE,SEQ;WORKDESC
          IF        @OVER
            DISPLAY   *P1:24,*V2LON,"Blank Description, Related factor must be":
                      " deleted.";
             CALL      HITENTER
             GOTO      MWPD0000
          ENDIF
.
          CALL      CLT50000                * clear temp file 5
          CALL      SFFW0000                * write from work - temp file 5
.
MWPD9999  MOVE      ZERO,TMPORDSC           * reset because d2op0000 will work
          RETURN                              it out
+
.*********************************************************************
.         Set up Word processor for change mode from Temp file Five
.         Para's  : DESCCODE            the description code
.*********************************************************************
SWTF0000  CALL      CRTW0000                * create w.p. temp file
          PACK      KEY6,DESCCODE,SP10
          CALL      RS5T0000
.
SWTF1000  CALL      RK5T0000
          BRANCH    OVRCD,SWTF9999
.
          MATCH     XPDCODE,DESCCODE
          GOTO      SWTF9999 IF NOT EQUAL
          WRITE     WORKFILE,SEQ;XPDDESC
          GOTO      SWTF1000
.
SWTF9999  RETURN
+
.*********************************************************************
.         clear out temp file 5
.         Para's  : DESCCODE          the code
.*********************************************************************
CLT50000  PACK      KEY6,DESCCODE,SP2
          CALL      RS5T0000                * position read temp desc file
          CALL      RK5T0000                * read next temp desc file record
          BRANCH    OVRCD,CLT59999          * end-of-file
.
          MATCH     XPDCODE,DESCCODE        * same description code 
          GOTO      CLT59999 IF NOT EQUAL   * no
.
          PACK      KEY6,XPDCODE,XPDLINE
          CALL      DE5T0000                * delete temp desc file record
          GOTO      CLT50000
.
CLT59999  RETURN
+
.*********************************************************************
.         copy from work file to temp file 5
.*********************************************************************
SFFW0000  CLOSE     WORKFILE
          OPEN      WORKFILE,FNAMEW         * open temp work file
          MOVE      ZERO,WORKLINE
.
SFFW1000  READ      WORKFILE,SEQ;WORKDESC
          GOTO      SFFW9000 IF OVER        * end-of-file
.
          ADD       ONE,WORKLINE            * add to line count
          MOVE      DESCCODE,XPDCODE        * set record code
          MOVE      WORKLINE,XPDLINE        * set description line number
          MOVE      WORKDESC,XPDDESC        * set description
.
          PACK      KEY6,XPDCODE,XPDLINE
          CALL      WR5T0000                * write a temp desc file rec
          GOTO      SFFW1000
.
SFFW9000  CLOSE     WORKFILE
.
SFFW9999  RETURN
+
.*********************************************************************
.         common routine to display details when changing a care plan
.         Para's  : TEMPFILE = 1       related factors
.                   TEMPFILE = 2       defining characteristics
.                   TEMPFILE = 3       outcomes
.                   TEMPFILE = 4       interventions
.                   REDISP   = 0       first time routine called so display
.                                      from the start of files
.                   REDISP   = 1       this is called as a redisplay
.                                      routine when changing desc'ns
.                                      so want to stay on same screen
.                   REDISP   = 2       this is called after finished 
.                                      changing desc'ns and so want to
.                                      stay on the same screen and get
.                                      the prompts to appear
.*********************************************************************
DDDD0000  CALL      CL2V0000                * clear select variables 
          MOVE      "11",CVERT              * starting line for header
          DISPLAY   *P1:12,*EF;
          MOVE      ZERO,CNTITEM            * clear count
          MOVE      SP20,DISPLAST           * clear last displayed key
          MOVE      SP20,DISPFRST           * clear first displayed key
.
          IF        REDISP = ONE | REDISP = TWO
            GOTO      DDDD1100                * have read first temp file code
          ENDIF
.
          MOVE      ONE,CPAGENO             * set page
          MOVE      SP9,KEY9
          PERFORM   TEMPFILE,RS1T0000,RS2T0000,RS3T0000,RS4T0000
.
. ******* loop over file *******
.
DDDD1000  PERFORM   TEMPFILE,RK1T0000,RK2T0000,RK3T0000,RK4T0000
          BRANCH    OVRCD,DDDD5000
.
DDDD1100  IF        REDISP = TWO
            MOVE      ZERO,REDISP
          ENDIF
          LOAD      RECCODE,TEMPFILE,XRECODE,XDECODE,XOTCODE,XINCODE
          LOAD      DESCCODE,TEMPFILE,XREDESC,XDEDESC,XOTDESC,XINDESC
          LOAD      DSCTYPE,TEMPFILE,EIGHT,TEN,SEVEN,NINE
.
          MOVE      ZERO,DESCFLAG           * display item number
          MOVE      ZERO,TMPORDSC           * display off DSC file
          MATCH     SP4,DESCCODE
          IF        !@EQUAL
            MOVE      ONE,TMPORDSC          * display off temp file 5
          ENDIF
.
. ------- position on PCPDSCFD or TEMP5 -------
.
          IF        TMPORDSC = ZERO
            PACK      KEY13,DSCTYPE,RECCODE,SP2
            CALL      RSPCDSC1              * position read PCPDSCFD file
          ELSE
            PACK      KEY6,DESCCODE,SP2
            CALL      RS5T0000              * position read TEMP file
          ENDIF
.
. ------- loop over PCPDSCFD or TEMP5 -------
.
DDDD1500  IF        TMPORDSC = ZERO
            CALL      RKPCDSC1              * read next PCPDSCFD record
            BRANCH    OVRCD,DDDD1000        * end-of-file
            COMPARE   DSCTYPE,PCDSTYPE      * same type of record ?
            GOTO      DDDD1000 IF NOT EQUAL * no
            MATCH     RECCODE,PCDSCODE      * same record code ?
            GOTO      DDDD1000 IF NOT EQUAL * no
            PACK      NUMOPTN,PCDSTYPE,PCDSCODE,PCDSLINE,SP20,SP20
          ELSE
            CALL      RK5T0000
            BRANCH    OVRCD,DDDD1000
            MATCH     XPDCODE,DESCCODE
            GOTO      DDDD1000 IF NOT EQUAL 
            MOVE      XPDDESC,PCDSDESC        * set description
            PACK      NUMOPTN,XPDCODE,XPDLINE,SP20,SP20
          ENDIF
.
. ******* increment counters *******
.
DDDD2000  ADD       ONE,CVERT
          COMPARE   "23",CVERT
          GOTO      DDDD4000 IF NOT LESS    * need new page
.
. ******* display data and store key *******
.
DDDD3000  IF        DESCFLAG = ZERO
            ADD       ONE,CNTITEM             * add to item counter
            DISPLAY   *P1:CVERT,*V2LON,CNTITEM,*HOFF,DOT
            MOVE      CNTITEM,LINE
            STORE     NUMOPTN,CNTITEM,DISPFRST
            STORE     RECCODE,CNTITEM,SELECT01,SELECT02,SELECT03,SELECT04:
                                      SELECT05,SELECT06,SELECT07,SELECT08:
                                      SELECT09,SELECT10,SELECT11,SELECT12
            IF        TEMPFILE = 3 
              CALL      DDCO0000                * display date for outcomes
            ENDIF
            IF        TEMPFILE = 4 
              DISPLAY   *P66:CVERT,XINFQDSC
            ENDIF
          ENDIF
.
          DISPLAY   *P5:CVERT,PCDSDESC
          MOVE      ONE,DESCFLAG            * dont display counter
          MOVE      NUMOPTN,DISPLAST        * save last displayed item
          MOVE      CNTITEM,LINE            * set the number of items
          GOTO      DDDD1500
.
. ******* new screen needed *******
.
DDDD4000  BRANCH    REDISP,DDDD9999         * exit when redisplaying
          BRANCH    CPAGENO,DDDD4500
.
.         Middle pages : (N)ext & (F)irst
.
DDDD4100  MOVE      ONE,CALLPOSN            * set position
          CALL      KEYA0000
          BRANCH    EXIT,DDDD7000,DDDD0000,DDDD9100,DDDD8500,DDDD8500,DDDD8500
.                        Next     First    Exit     Add      Change   Delete
          GOTO      DDDD5900
.
.         first page : (N)ext
.
DDDD4500  MOVE      TWO,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DDDD7000,DDDD5900,DDDD9100,DDDD8500,DDDD8500,DDDD8500
.                        Next     First    Exit     Add      Change   Delete
          GOTO      DDDD5900
.
. ******* no more data to display *******
.
DDDD5000  BRANCH    REDISP,DDDD9999         * exit when redisplaying
          BRANCH    CPAGENO,DDDD5500
.
.         last page : (P)revious
.
DDDD5100  MOVE      THREE,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DDDD5900,DDDD0000,DDDD9100,DDDD8500,DDDD8500,DDDD8500
.                        Next     First    Exit     Add      Change   Delete
          GOTO      DDDD5900
.
.         first page :
.
DDDD5500  MOVE      FOUR,CALLPOSN
          CALL      KEYA0000
          BRANCH    EXIT,DDDD5900,DDDD5900,DDDD9100,DDDD8500,DDDD8500,DDDD8500
.                        Next     First    Exit     Add      Change   Delete
          GOTO      DDDD5900
.
DDDD5900  BEEP   
          BRANCH    CALLPOSN,DDDD4100,DDDD4500,DDDD5100,DDDD5500
.
. ******* (N)ext selected : set up for a new page *******
.
DDDD7000  IF        TMPORDSC = ZERO
            MOVE      DISPLAST,KEY13          * for dsc
            CALL      RDPCDSC1
          ELSE
            MOVE      DISPLAST,KEY6           * for tmp
            CALL      RD5T0000
          ENDIF
          CALL      CL2V0000                * clear storage variables
          ADD       ONE,CPAGENO             * add to page counter
          MOVE      ZERO,CNTITEM            * reset item counter
          MOVE      "11",CVERT              * set row
          DISPLAY   *P1:12,*EF              * clear screen
          GOTO      DDDD1500
.
.         Add - Change - Delete
.
DDDD8500  SUB       THREE,EXIT
          MOVE      EXIT,FORM1
          MOVE      ZERO,EXIT
          GOTO      DDDD9999
.
. ******* set exit flags *******
.
DDDD9100  MOVE      ONE,EXIT                * exit selected
.
DDDD9999  RETURN
+
.*********************************************************************
.*        Keyin response for line 24 question                        *
.*********************************************************************
KEYA0000  DISPLAY   *P1:24,*EL,"(",*V2LON,"A",*HOFF,")dd, (":
                    *V2LON,"C",*HOFF,")hange, (":
                    *V2LON,"D",*HOFF,")elete";
          MOVE      "25",CCOL
          IF        CALLPOSN = ONE | CALLPOSN = TWO
            DISPLAY   ", (",*V2LON,"N",*HOFF,")ext";
            ADD       "8",CCOL
          ENDIF
          IF        CALLPOSN = ONE | CALLPOSN = THREE
            DISPLAY   ", (",*V2LON,"F",*HOFF,")irst";
            ADD       "9",CCOL
          ENDIF
          DISPLAY   " : ",*EL;
          ADD       FOUR,CCOL
.
KEYA1000  KEYIN     *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
.
          TYPE      DIM2
          GOTO      KEYA1500 IF EQUAL       * number entered
.
          PACK      DIM2,DIM2,SP2
          MOVE      THREE,EXIT
          MATCH     SP2,DIM2
          GOTO      KEYA9999 IF EQUAL       * valid entry
.
.         letter entered
.
          UNPACK    DIM2,ANS,ANS
          REP       UPPLOW,ANS              * get as uppercase
.
          REP       "N1F2E3A4C5D6",ANS      * turn valid letters into number
          MOVE      ZERO,EXIT               * clear exit flag
          MOVE      ANS,EXIT                * set exit flag
          BRANCH    EXIT,KEYA9999,KEYA9999,KEYA9999,KEYA9999,KEYA9999,KEYA9999
.                        Next     First    Exit     Add      Change   Delete
.
KEYA1500  BEEP
          GOTO      KEYA1000
.
.         number entered
.
KEYA5000  MOVE      ZERO,EXIT               * set exit flag
          MOVE      DIM2,FORM2              * get as a number
.
          COMPARE   FORM2,ZERO
          GOTO      KEYA1500 IF NOT LESS    * negative entered
.
          COMPARE   FORM2,CNTITEM
          GOTO      KEYA1500 IF LESS        * number too large
.
KEYA9999  RETURN
+
.*********************************************************************
.         display the date for desired outcomes
.*********************************************************************
DDCO0000  UNPACK    XOTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          BRANCH    XOTTYPE,DDCO1000,DDCO1000,DDCO1000,DDCO3000
.
          DISPLAY   *P66:CVERT,*EL,"No Target Date"
          GOTO      DDCO9999
.
.      *  Target Type = By a given date (1)
.
DDCO1000  DISPLAY   *P66:CVERT,*EL,"By ",CPCDATE
          GOTO      DDCO9999
.
.      *  Target Type = At all Times (4)
.
DDCO3000  DISPLAY   *P66:CVERT,*EL,"At all times"
.
DDCO9999  RETURN
+
.*********************************************************************
.         set position for redisplay after a changeable desc is changed
.         or an item is deleted so that it stays on the same screen
.*********************************************************************
SPFR0000  MOVE      ONE,REDISP
          MOVE      SELECT01,KEY9
          PERFORM   TEMPFILE,RD1T0000,RD2T0000,RD3T0000,RD4T0000
          IF        OVRCD = ONE
            PERFORM   TEMPFILE,RK1T0000,RK2T0000,RK3T0000,RK4T0000
            BRANCH    OVRCD,SPFR9000
          ENDIF
.         CALL      DDDD0000
SPFR9000  MOVE      TWO,REDISP
SPFR9999  RETURN
+
.*********************************************************************
.         set position for redisplay once completed changing details
.         or an item is deleted so that it stays on the same screen
.*********************************************************************
SPAC0000  MOVE      TWO,REDISP
          MOVE      SELECT01,KEY9
          PERFORM   TEMPFILE,RD1T0000,RD2T0000,RD3T0000,RD4T0000
          IF        OVRCD = ONE
            PERFORM   TEMPFILE,RK1T0000,RK2T0000,RK3T0000,RK4T0000
            BRANCH    OVRCD,SPFR9000
          ENDIF
SPAC9999  RETURN
+
.*******************************************************************************
.*                                KEYI0000                                     *
.*        validate keyin response to question on line 24 after displaying      *
.*        a screen full of patients that matches requested surname or EOF      *
.*        has reached                                                          *
.*               called by : GPLN0000, S1OP0000, S2OP0000, IPAT0000            *
.*******************************************************************************
KEYI0000  KEYIN     *PCCOL:24,*DV,UNDLN2:
                    *PCCOL:24,*JR,*V2LON,REPLYD
.
          ENDSET    REPLYD
          APPEND    SP2,REPLYD
          RESET     REPLYD
.
          MATCH     SP2,REPLYD              * null input ?
          GOTO      KEYI9000 IF EQUAL       * yes
.
          REP       UPPLOW,REPLYD           * replace lower case with upper case
          DISPLAY   *PCCOL:24,*V2LON,REPLYD
.
          REP       " 0",REPLYD             * replace blanks with zeros
          TYPE      REPLYD                  * is input numeric ?
          GOTO      KEYI2000 IF EQUAL       * yes
.
          REP       "N1P2A3F4",REPLYD       * replace alpha input with number
          TYPE      REPLYD                  * is input numeric now ?
          GOTO      KEYI1000 IF EQUAL       * yes - valid
          BEEP                              * no - invalid.  Beep and re-enter
          GOTO      KEYI0000
.
KEYI1000  MOVE      REPLYD,REPLYF           * move DIM input to FORM field
          MOVE      ONE,EXIT                * set EXIT = 1
          STORE     DISPHALF,REPLYF,RDSPHALF  * Next, set rdsphalf to disphalf
          GOTO      KEYI9999
.
. ------  numeric input  ------
.
KEYI2000  MOVE      REPLYD,REPLYF           * move DIM input to FORM field
          COMPARE   ONE,REPLYF              * input > or = 1 ?
          GOTO      KEYI2100 IF LESS        * no - invalid
.
          COMPARE   REPLYF,LINE             * input > display line number ?
          GOTO      KEYI2100 IF LESS        * yes - invalid
          MOVE      ZERO,EXIT               * no - set EXIT = 0
          GOTO      KEYI9999
.
KEYI2100  BEEP
          MOVE      TWO,EXIT                * invalid numeric input-set EXIT = 2
          GOTO      KEYI9999
.
. ------  null input  ------
.
KEYI9000  MOVE      THREE,EXIT              * set EXIT = 3
.
KEYI9999  RETURN
+
.===============================================================================
.         I/O routines for temporary index files
.===============================================================================
.
. ------  TEMP1  ------
.
RD1T0000  MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      TEMP1,KEY9;XRECODE,XREDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
RS1T0000  RESET     KEY9
          READ      TEMP1,KEY9;;
          RETURN
.
RK1T0000  MOVE      ZERO,OVRCD
          READKS    TEMP1;XRECODE,XREDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
RP1T0000  MOVE      ZERO,OVRCD
          READKP    TEMP1;XRECODE,XREDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
WR1T0000  RESET     KEY9
          WRITE     TEMP1,KEY9;KEY9,XREDESC
          RETURN
.
UP1T0000  UPDATE    TEMP1;XRECODE,XREDESC
          RETURN
.
DE1T0000  RESET     KEY9
          DELETE    TEMP1,KEY9
          RETURN
.
. ------  TEMP2  ------
.
RD2T0000  MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      TEMP2,KEY9;XDECODE,XDEDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
RS2T0000  RESET     KEY9
          READ      TEMP2,KEY9;;
          RETURN
.
RK2T0000  MOVE      ZERO,OVRCD
          READKS    TEMP2;XDECODE,XDEDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
RP2T0000  MOVE      ZERO,OVRCD
          READKP    TEMP2;XDECODE,XDEDESC
          GOTO      OVERCOND IF OVER
          RETURN
.
WR2T0000  RESET     KEY9
          WRITE     TEMP2,KEY9;KEY9,XDEDESC
          RETURN
.
UP2T0000  UPDATE    TEMP2;XDECODE,XDEDESC
          RETURN
.
DE2T0000  RESET     KEY9
          DELETE    TEMP2,KEY9
          RETURN
.
. ------  TEMP3  ------
.
RD3T0000  MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      TEMP3,KEY9;XOTCODE,XOTDESC,XOTDATE,XOTTYPE,XOTDYWK
          GOTO      OVERCOND IF OVER
          RETURN
.
RS3T0000  RESET     KEY9
          READ      TEMP3,KEY9;;
          RETURN
.
RK3T0000  MOVE      ZERO,OVRCD
          READKS    TEMP3;XOTCODE,XOTDESC,XOTDATE,XOTTYPE,XOTDYWK
          GOTO      OVERCOND IF OVER
          RETURN
.
RP3T0000  MOVE      ZERO,OVRCD
          READKP    TEMP3;XOTCODE,XOTDESC,XOTDATE,XOTTYPE,XOTDYWK
          GOTO      OVERCOND IF OVER
          RETURN
.
WR3T0000  RESET     KEY9
          WRITE     TEMP3,KEY9;KEY9,XOTDESC,XOTDATE,XOTTYPE,XOTDYWK
          RETURN
.
UP3T0000  UPDATE    TEMP3;XOTCODE,XOTDESC,XOTDATE,XOTTYPE,XOTDYWK
          RETURN
.
DE3T0000  RESET     KEY9
          DELETE    TEMP3,KEY9
          RETURN
.
. ------  TEMP4  ------
.
RD4T0000  MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      TEMP4,KEY9;XINCODE,XINDESC,XINFREQ,XINFQDSC,XINTIME:
                               XINSTAF,XINDATE,XINSHFT
          GOTO      OVERCOND IF OVER
          RETURN
.
RS4T0000  RESET     KEY9
          READ      TEMP4,KEY9;;
          RETURN
.
RK4T0000  MOVE      ZERO,OVRCD
          READKS    TEMP4;XINCODE,XINDESC,XINFREQ,XINFQDSC,XINTIME:
                          XINSTAF,XINDATE,XINSHFT
          GOTO      OVERCOND IF OVER
          RETURN
.
RP4T0000  MOVE      ZERO,OVRCD
          READKP    TEMP4;XINCODE,XINDESC,XINFREQ,XINFQDSC,XINTIME:
                          XINSTAF,XINDATE,XINSHFT
          GOTO      OVERCOND IF OVER
          RETURN
.
WR4T0000  RESET     KEY9
          WRITE     TEMP4,KEY9;KEY9,XINDESC,XINFREQ,XINFQDSC,XINTIME:
                               XINSTAF,XINDATE,XINSHFT
          RETURN
.
UP4T0000  UPDATE    TEMP4;XINCODE,XINDESC,XINFREQ,XINFQDSC,XINTIME:
                          XINSTAF,XINDATE,XINSHFT
          RETURN
.
DE4T0000  RESET     KEY9
          DELETE    TEMP4,KEY9
          RETURN
.
. ------  TPFL5  ------
.
RD5T0000  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      TPFL5,KEY6;XPDCODE,DXPDLIN,XPDDESC
          GOTO      OVERCOND IF OVER
          MOVE      DXPDLIN,XPDLINE
          RETURN
.
RS5T0000  RESET     KEY6
          READ      TPFL5,KEY6;;
          RETURN
.
RK5T0000  MOVE      ZERO,OVRCD
          READKS    TPFL5;XPDCODE,DXPDLIN,XPDDESC
          GOTO      OVERCOND IF OVER
          MOVE      DXPDLIN,XPDLINE
          RETURN
.
RP5T0000  MOVE      ZERO,OVRCD
          READKP    TPFL5;XPDCODE,DXPDLIN,XPDDESC
          GOTO      OVERCOND IF OVER
          MOVE      DXPDLIN,XPDLINE
          RETURN
.
WR5T0000  RESET     KEY6
          MOVE      XPDLINE,DXPDLIN
          WRITE     TPFL5,KEY6;XPDCODE,DXPDLIN,XPDDESC
          RETURN
.
DE5T0000  RESET     KEY6
          DELETE    TPFL5,KEY6
          RETURN
.
.
. ------- I/O includes -------
.
          INC       IBAOVRIO/INC
          INC       PATDO1IO/INC
          INC       PATNOBIO/INC       
          INC       PATVISIO/INC
          INC       PATWR1IO/INC
          INC       PCPCRLIO/INC       
          INC       PCPDBSIO/INC       
          INC       PCPDEFIO/INC       
          INC       PCPDIAIO/INC       
          INC       PCPDISIO/INC       
          INC       PCPDSCIO/INC       
          INC       PCPEDIIO/INC       
          INC       PCPEVAIO/INC       
          INC       PCPFRAIO/INC       
          INC       PCPIDPIO/INC       
          INC       PCPINTIO/INC       
          INC       PCPOUTIO/INC       
          INC       PCPPDSIO/INC       
          INC       PCPRELIO/INC       
          INC       PATMI1IO/INC       
          INC       PCPNURIO/INC       
          INC       PATCODKY
          INC       PCPFRADS
          INC       PCPDSCDS
          INC       KYPCPDSC
          INC       PATDSCIO/INC
          INC       PATHEAD 
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
.
CPLAN999  CALL      KLLI0000
          ENDPROC
...............................................................................
