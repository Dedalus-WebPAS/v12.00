#!/bin/bash
shopt -s xpg_echo
#------------------------------------------------------------
# DRG Grouping Script for both the 3M CME & Codefinder on a PC
# This script copies the input files required for the 3M CME & Codefinder
# to the users PC based directory.
#
# Note that when the IBA PC Bridge VB program finds either input files
# in the mapped input directory it will:
# 1. When a Grouper input file is found execute the PC CME
# 1. When a Codefinder input file is found, fire the PC Codefinder
#
#  06/09/04 IEF added mkdirs 'cos cleanup scripts rmdir the $3 user dirs
#  00/03/05 --- add $RD to replace /tmp. Samba may only get perms on ~home
#  21/04/05 IEF redefine $1 $2 $3 $4 to word vars.
#
# Inputs : 1 - Grouper Input File Name
#          2 - Encoder Input File Name
#          3 - Web User ID
#          4 - Grouper Version Parameter
#          5 - Web User ID Long Name Format
#------------------------------------------------------------

#variables
RD=/tmp                       ; export RD                   #(Remote Directory)
DRGINP=${1}                   ; export DRGINP               #(PC-based CME files)
Encfil=$2                     ; export Encfil               #(PC-based HIS files)
User=$3                       ; export User
#User=$5                      ; export User                 #(WebPAS Long Username ID)

LOGFILE=/home/iba/coder.log

PORT=`echo "${DRGINP}" | cut -c 7-8`
WORK=`pwd`
PORTDIR=`pwd`/$PORT

##### Variables for CME
export IFS="%"

##### create a folder for temp files for CME working area
[ -d $PORTDIR ] || {
   mkdir $PORTDIR
}

#--------------------------------------------------------
# User Variables to nominate icd10 change dates
#--------------------------------------------------------
E7DATE="20100701"    # End date ICD-10-AM 6th Ed
E8DATE="20130701"    # End date ICD-10-AM 7th Ed
E9DATE="20150701"    # End date ICD-10-AM 8th Ed
E10DATE="99999999"   # Proposed End Date ICD-10-AM 9th Ed

##### Logging and creation of /tmp directory structure

echo "===== STARTING =====" >> $LOGFILE
echo "ARGS for mrtweb02.us1: " $1 $2 $3 $4 >> $LOGFILE
date               >> $LOGFILE
pwd                >> $LOGFILE

#--------------------------------------------------------
# Checking and creation of directory structure to
# place input/output files for webPAS
#--------------------------------------------------------


if [ ! -d $RD/encgrp ]
then mkdir $RD/encgrp
chmod 777 $RD/encgrp
fi
if [ ! -d $RD/encgrp/inputs ]
then mkdir $RD/encgrp/inputs
chmod 777 $RD/encgrp/inputs
fi
if [ ! -d $RD/encgrp/outputs ]
then mkdir $RD/encgrp/outputs
chmod 777 $RD/encgrp/ouputs
fi
if [ ! -d $RD/encgrp/inputs/$User ]
then mkdir $RD/encgrp/inputs/$User
chmod 777 $RD/encgrp/inputs/$User
fi
if [ ! -d $RD/encgrp/outputs/$User ]
then mkdir $RD/encgrp/outputs/$User
chmod 777 $RD/encgrp/outputs/$User
fi

echo "redefined to " $DRGINP $Encfil $User $4       >> $LOGFILE

#####  clean up the mapped drive 'cos permissions affect this script
       rm -f $RD/encgrp/outputs/$User/*            2>> $RD/coder.log
#       rm -f $RD/encgrp/inputs/$User/*             2>> $RD/coder.log

#####
#   experiment passing web ID to dos so batch files can find users directories.
#   echo $User > $RD/encgrp/inputs/webname
#####  Codefinder files
if [ -s "$Encfil" ]
  then
    sed "s/ *$//" $Encfil > enctmp.1
    sed "s/,$/, /" enctmp.1 > enctmp.2
# need to put carriage return for window/dos files
    sed "s/$//g" enctmp.2 > enctmp.3
    cp enctmp.3 $RD/encgrp/inputs/$User/$Encfil     2>> $RD/coder.log
    cp enctmp.3 $RD/encgrp/inputs/$User/ieffil     2>> $RD/coder.log
fi

#------------------------ Split_DRG_Input -------------------------
# Selects records from $(Grpfil) where Seperation date >= $(1) and < $(2)
# outputs to file $(3)
Split_DRG_Input()
{
awk -v "STARTDATE=${1}" -v "ENDDATE=${2}" '
{ SEPDATE=substr($0,21,10) ;
  split(SEPDATE,SEPDT,/\//);
  CHKDTE=SEPDT[3]*10000;
  CHKDTE+=SEPDT[2]*100;
  CHKDTE+=SEPDT[1];
  if ( CHKDTE >= STARTDATE && CHKDTE < ENDDATE ) { print ( $0 ) }
  }
' ${DRGINP} > ${3}

}
# ----------------------- End Split_DRG_Input ---------------------

#####  CME grouping files
PC_Grouper()
{
#cp $PORTDIR/drginp${1}YY.txt $RD/encgrp/inputs/$User/drginp.txt 2>> $LOGFILE
FNL=`echo drginp${1}.txt | sed "s/txt/fnl/g"`
sed "s/$//g" $PORTDIR/drginp${1}YY.txt > $RD/encgrp/inputs/$User/drginp.txt 2>> $LOGFILE
sed "s/$//g" $PORTDIR/drginp${1}YY.txt > $RD/encgrp/inputs/$User/$FNL       2>> $LOGFILE
chmod 666 $RD/encgrp/inputs/$User/drginp.txt
chmod 666 $RD/encgrp/inputs/$User/$FNL
}

# ----------------------- Clean_Up --------------------------------
# Remove files specified by ${1} if if exists
Clean_Up()
{
    [[ -s ${1} ]] && rm ${1}
}
# ----------------------- End Clean_Up ----------------------------

#####  clean up the mapped drive 'cos permissions affect this script
echo "Removing temp files from previous run."      >> $LOGFILE
#       rm -f $RD/encgrp/outputs/$User/*            >> $LOGFILE

Clean_Up $PORTDIR/Grpfilev9.txt
Clean_Up $PORTDIR/Grpfilev8.txt
Clean_Up $PORTDIR/drginp9YY.txt
Clean_Up $PORTDIR/drginp8YY.txt

echo "Current dir is $PWD" >> $LOGFILE
echo "The Input File $DRGINP listing:" >> $LOGFILE
echo `ls -l --color=tty $DRGINP` >> $LOGFILE

#if [ -s $DRGINP ]
#  then
#echo $DRGINP >> $LOGFILE
Split_DRG_Input ${E9DATE} ${E10DATE} $PORTDIR/Grpfilev9.txt

Split_DRG_Input ${E8DATE} ${E9DATE} $PORTDIR/Grpfilev8.txt
#fi

#--------------------------------------------------------------------
# Main Logic to build a text file with the keys for DRGs in the file
#--------------------------------------------------------------------

echo "================ Main Logic ===================== " >> $LOGFILE

cd $PORTDIR

if [ -s $PORTDIR/Grpfilev8.txt ]
  then
#    FNL=`echo Grpfilev8.txt | sed "s/txt/fnl/g"`
echo "Processing ICD 10 Edition 8 text file" >> $LOGFILE
    for ver in AR70 AR62 AR60 AR52 AR51 AR50 AR42 AR41
        do
        rm -f drginp8XX.tmp
         while read line
         do
           echo "${line}$ver" >> drginp8XX.tmp
         done < Grpfilev8.txt 
         cat drginp8XX.tmp >> drginp8YY.txt
        done

#sed "s/$/^M/g" $PORTDIR/drginp8YY.txt

      PC_Grouper 8
fi

if [ -s $PORTDIR/Grpfilev9.txt ]
  then
#    FNL=`echo Grpfile9.txt | sed "s/txt/fnl/g"`
    for ver in BR70 BR62 BR60 BR52 BR51 BR50 BR42 BR41
        do
        rm -f drginp9XX.tmp
         while read line
         do
           echo "${line}$ver" >> drginp9XX.tmp
         done < Grpfilev9.txt
         cat drginp9XX.tmp >> drginp9YY.txt
        done

       PC_Grouper 9
fi

echo "========= Ending Main Logic =================" >> $LOGFILE

exit 0
